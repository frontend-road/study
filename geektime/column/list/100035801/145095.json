{"id":145095,"title":"08 | 数据库优化方案（一）：查询请求增加时，如何做主从分离？","content":"<p>你好，我是唐扬。</p><p>上节课，我们用池化技术解决了数据库连接复用的问题，这时，你的垂直电商系统虽然整体架构上没有变化，但是和数据库交互的过程有了变化，在你的Web工程和数据库之间增加了数据库连接池，减少了频繁创建连接的成本，从上节课的测试来看性能上可以提升80%。现在的架构图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/26/90/2643e13598139d0964bfc40469bd8390.jpg?wh=1142*915\" alt=\"\"></p><p>此时，你的数据库还是单机部署，依据一些云厂商的Benchmark的结果，在4核8G的机器上运行MySQL 5.7时，大概可以支撑500的TPS和10000的QPS。这时，运营负责人说正在准备双十一活动，并且公司层面会继续投入资金在全渠道进行推广，这无疑会引发查询量骤然增加的问题。那么今天，我们就一起来看看当查询请求增加时，应该如何做主从分离来解决问题。</p><h2>主从读写分离</h2><p>其实，大部分系统的访问模型是读多写少，读写请求量的差距可能达到几个数量级。</p><p>这很好理解，刷朋友圈的请求量肯定比发朋友圈的量大，淘宝上一个商品的浏览量也肯定远大于它的下单量。因此，我们优先考虑数据库如何抵抗更高的查询请求，那么首先你需要把读写流量区分开，因为这样才方便针对读流量做单独的扩展，这就是我们所说的主从读写分离。</p><p>它其实是个流量分离的问题，就好比道路交通管制一样，一个四车道的大马路划出三个车道给领导外宾通过，另外一个车道给我们使用，优先保证领导先行，就是这个道理。</p><!-- [[[read_end]]] --><p>这个方法本身是一种常规的做法，即使在一个大的项目中，它也是一个应对数据库突发读流量的有效方法。</p><p>我目前的项目中就曾出现过前端流量突增导致从库负载过高的问题，DBA兄弟会优先做一个从库扩容上去，这样对数据库的读流量就会落入到多个从库上，从库的负载就降了下来，然后研发同学再考虑使用什么样的方案将流量挡在数据库层之上。</p><h2>主从读写的两个技术关键点</h2><p>一般来说在主从读写分离机制中，我们将一个数据库的数据拷贝为一份或者多份，并且写入到其它的数据库服务器中，原始的数据库我们称为主库，主要负责数据的写入，拷贝的目标数据库称为从库，主要负责支持数据查询。可以看到，主从读写分离有两个技术上的关键点：</p><p>1.一个是数据的拷贝，我们称为主从复制；<br>\n2.在主从分离的情况下，我们如何屏蔽主从分离带来的访问数据库方式的变化，让开发同学像是在使用单一数据库一样。</p><p>接下来，我们分别来看一看。</p><h4>1. 主从复制</h4><p>我先以MySQL为例介绍一下主从复制。</p><p>MySQL的主从复制是依赖于binlog的，也就是记录MySQL上的所有变化并以二进制形式保存在磁盘上二进制日志文件。主从复制就是将binlog中的数据从主库传输到从库上，一般这个过程是异步的，即主库上的操作不会等待binlog同步的完成。</p><p><strong>主从复制的过程是这样的：</strong>首先从库在连接到主节点时会创建一个IO线程，用以请求主库更新的binlog，并且把接收到的binlog信息写入一个叫做relay log的日志文件中，而主库也会创建一个log dump线程来发送binlog给从库；同时，从库还会创建一个SQL线程读取relay log中的内容，并且在从库中做回放，最终实现主从的一致性。这是一种比较常见的主从复制方式。</p><p>在这个方案中，使用独立的log dump线程是一种异步的方式，可以避免对主库的主体更新流程产生影响，而从库在接收到信息后并不是写入从库的存储中，是写入一个relay log，是避免写入从库实际存储会比较耗时，最终造成从库和主库延迟变长。</p><p><img src=\"https://static001.geekbang.org/resource/image/57/4d/575ef1a6dc6463e4c5a60a3752d8554d.jpg?wh=1142*506\" alt=\"\"></p><p>你会发现，基于性能的考虑，主库的写入流程并没有等待主从同步完成就会返回结果，那么在极端的情况下，比如说主库上binlog还没有来得及刷新到磁盘上就出现了磁盘损坏或者机器掉电，就会导致binlog的丢失，最终造成主从数据的不一致。<strong>不过，这种情况出现的概率很低，对于互联网的项目来说是可以容忍的。</strong></p><p>做了主从复制之后，我们就可以在写入时只写主库，在读数据时只读从库，这样即使写请求会锁表或者锁记录，也不会影响到读请求的执行。同时呢，在读流量比较大的情况下，我们可以部署多个从库共同承担读流量，这就是所说的“一主多从”部署方式，在你的垂直电商项目中就可以通过这种方式来抵御较高的并发读流量。另外，从库也可以当成一个备库来使用，以避免主库故障导致数据丢失。</p><p><strong>那么你可能会说，是不是我无限制地增加从库的数量就可以抵抗大量的并发呢？</strong>实际上并不是的。因为随着从库数量增加，从库连接上来的IO线程比较多，主库也需要创建同样多的log dump线程来处理复制的请求，对于主库资源消耗比较高，同时受限于主库的网络带宽，所以在实际使用中，一般一个主库最多挂3～5个从库。</p><p><strong>当然，主从复制也有一些缺陷，</strong>除了带来了部署上的复杂度，还有就是会带来一定的主从同步的延迟，这种延迟有时候会对业务产生一定的影响，我举个例子你就明白了。</p><p>在发微博的过程中会有些同步的操作，像是更新数据库的操作，也有一些异步的操作，比如说将微博的信息同步给审核系统，所以我们在更新完主库之后，会将微博的ID写入消息队列，再由队列处理机依据ID在从库中获取微博信息再发送给审核系统。此时如果主从数据库存在延迟，会导致在从库中获取不到微博信息，整个流程会出现异常。</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/44/d06716649d3894e8c2b2bf242b1ab544.jpg?wh=1142*479\" alt=\"\"></p><p>这个问题解决的思路有很多，核心思想就是尽量不去从库中查询信息，纯粹以上面的例子来说，我就有三种解决方案：</p><p><strong>第一种方案是数据的冗余。</strong>你可以在发送消息队列时不仅仅发送微博ID，而是发送队列处理机需要的所有微博信息，借此避免从数据库中重新查询数据。</p><p><strong>第二种方案是使用缓存。</strong>我可以在同步写数据库的同时，也把微博的数据写入到Memcached缓存里面，这样队列处理机在获取微博信息的时候会优先查询缓存，这样也可以保证数据的一致性。</p><p><strong>最后一种方案是查询主库。</strong>我可以在队列处理机中不查询从库而改为查询主库。不过，这种方式使用起来要慎重，要明确查询的量级不会很大，是在主库的可承受范围之内，否则会对主库造成比较大的压力。</p><p>我会优先考虑第一种方案，因为这种方式足够简单，不过可能造成单条消息比较大，从而增加了消息发送的带宽和时间。</p><p>缓存的方案比较适合新增数据的场景，在更新数据的场景下，先更新缓存可能会造成数据的不一致，比方说两个线程同时更新数据，线程A把缓存中的数据更新为1，此时另一个线程B把缓存中的数据更新为2，然后线程B又更新数据库中的数据为2，此时线程A更新数据库中的数据为1，这样数据库中的值（1）和缓存中的值（2）就不一致了。</p><p>最后，若非万不得已的情况下，我不会使用第三种方案。原因是这种方案要提供一个查询主库的接口，在团队开发的过程中，你很难保证其他同学不会滥用这个方法，而一旦主库承担了大量的读请求导致崩溃，那么对于整体系统的影响是极大的。</p><p>所以对这三种方案来说，你要有所取舍，根据实际项目情况做好选择。</p><p><strong>另外，主从同步的延迟，是我们排查问题时很容易忽略的一个问题。</strong>有时候我们遇到从数据库中获取不到信息的诡异问题时，会纠结于代码中是否有一些逻辑会把之前写入的内容删除，但是你又会发现，过了一段时间再去查询时又可以读到数据了，这基本上就是主从延迟在作怪。所以，一般我们会把从库落后的时间作为一个重点的数据库指标做监控和报警，正常的时间是在毫秒级别，一旦落后的时间达到了秒级别就需要告警了。</p><h4>2. 如何访问数据库</h4><p>我们已经使用主从复制的技术将数据复制到了多个节点，也实现了数据库读写的分离，这时，对于数据库的使用方式发生了变化。以前只需要使用一个数据库地址就好了，现在需要使用一个主库地址和多个从库地址，并且需要区分写入操作和查询操作，如果结合下一节课中要讲解的内容“分库分表”，复杂度会提升更多。<strong>为了降低实现的复杂度，业界涌现了很多数据库中间件来解决数据库的访问问题，这些中间件可以分为两类。</strong></p><p>第一类以淘宝的TDDL（ Taobao Distributed Data Layer）为代表，以代码形式内嵌运行在应用程序内部。你可以把它看成是一种数据源的代理，它的配置管理着多个数据源，每个数据源对应一个数据库，可能是主库，可能是从库。当有一个数据库请求时，中间件将SQL语句发给某一个指定的数据源来处理，然后将处理结果返回。</p><p>这一类中间件的优点是简单易用，没有多余的部署成本，因为它是植入到应用程序内部，与应用程序一同运行的，所以比较适合运维能力较弱的小团队使用；缺点是缺乏多语言的支持，目前业界这一类的主流方案除了TDDL，还有早期的网易DDB，它们都是Java语言开发的，无法支持其他的语言。另外，版本升级也依赖使用方更新，比较困难。</p><p>另一类是单独部署的代理层方案，这一类方案代表比较多，如早期阿里巴巴开源的Cobar，基于Cobar开发出来的Mycat，360开源的Atlas，美团开源的基于Atlas开发的DBProxy等等。</p><p>这一类中间件部署在独立的服务器上，业务代码如同在使用单一数据库一样使用它，实际上它内部管理着很多的数据源，当有数据库请求时，它会对SQL语句做必要的改写，然后发往指定的数据源。</p><p>它一般使用标准的MySQL通信协议，所以可以很好地支持多语言。由于它是独立部署的，所以也比较方便进行维护升级，比较适合有一定运维能力的大中型团队使用。它的缺陷是所有的SQL语句都需要跨两次网络：从应用到代理层和从代理层到数据源，所以在性能上会有一些损耗。</p><p><img src=\"https://static001.geekbang.org/resource/image/e7/ff/e7e9430cbcb104764529ca5e01e6b3ff.jpg?wh=1142*714\" alt=\"\"></p><p>这些中间件，对你而言，可能并不陌生，但是我想让你注意到是，<strong>在使用任何中间件的时候一定要保证对于中间件有足够深入的了解，否则一旦出了问题没法快速地解决就悲剧了。</strong></p><p><strong>我之前的一个项目中，</strong>一直使用自研的一个组件来实现分库分表，后来发现这套组件有一定几率会产生对数据库多余的连接，于是团队讨论后决定替换成Sharding-JDBC。原本以为是一次简单的组件切换，结果上线后发现两个问题：一是因为使用姿势不对，会偶发地出现分库分表不生效导致扫描所有库表的情况，二是偶发地出现查询延时达到秒级别。由于对Sharding-JDBC没有足够了解，这两个问题我们都没有很快解决，后来不得已只能切回原来的组件，在找到问题之后再进行切换。</p><h2>课程小结</h2><p>本节课，我带你了解了查询量增加时，我们如何通过主从分离和一主多从部署抵抗增加的数据库流量的，你除了掌握主从复制的技术之外，还需要了解主从分离会带来什么问题以及它们的解决办法。这里我想让你明确的要点主要有：</p><p>1.主从读写分离以及部署一主多从可以解决突发的数据库读流量，是一种数据库横向扩展的方法；</p><p>2.读写分离后，主从的延迟是一个关键的监控指标，可能会造成写入数据之后立刻读的时候读取不到的情况；</p><p>3.业界有很多的方案可以屏蔽主从分离之后数据库访问的细节，让开发人员像是访问单一数据库一样，包括有像TDDL、Sharding-JDBC这样的嵌入应用内部的方案，也有像Mycat这样的独立部署的代理方案。</p><p>其实，我们可以把主从复制引申为存储节点之间互相复制存储数据的技术，它可以实现数据的冗余，以达到备份和提升横向扩展能力的作用。在使用主从复制这个技术点时，你一般会考虑两个问题：</p><p>1.主从的一致性和写入性能的权衡，如果你要保证所有从节点都写入成功，那么写入性能一定会受影响；如果你只写入主节点就返回成功，那么从节点就有可能出现数据同步失败的情况，从而造成主从不一致，<strong>而在互联网的项目中，我们一般会优先考虑性能而不是数据的强一致性。</strong></p><p>2.主从的延迟问题，很多诡异的读取不到数据的问题都可能会和它有关，如果你遇到这类问题不妨先看看主从延迟的数据。</p><p>我们采用的很多组件都会使用到这个技术，比如，Redis也是通过主从复制实现读写分离；Elasticsearch中存储的索引分片也可以被复制到多个节点中；写入到HDFS中文件也会被复制到多个DataNode中。只是不同的组件对于复制的一致性、延迟要求不同，采用的方案也不同。<strong>但是这种设计的思想是通用的，是你需要了解的，这样你在学习其他存储组件的时候就能够触类旁通了。</strong></p><h2>一课一思</h2><p>我们提到，存储节点间互相复制数据是一种常见的，提升系统可用性和性能的方式，那么你还了解哪些组件有使用这种方式呢？它们的复制方式又是如何的呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":139439,"user_name":"老男孩","can_delete":false,"product_type":"c1","uid":1134514,"ip_address":"","ucode":"CEC6D47412F620","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/b2/1e8b5616.jpg","comment_is_top":true,"comment_ctime":1570633528,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"9.2233722660587008e+18","product_id":100035801,"comment_content":"我觉得进入演进篇以后干货越来越多了。关于理论基础大家都能泛泛的谈一谈，可具体落地实操，老师的经验和能力就体现出来了。关于读写分离，主从同步延时出现的诡异现象，我之前也遇到过。我之前项目最开始没有只是配置了2个数据源，由开发人员选择写主库，读存库。后来发现很多读操作也放到主库上了，理由就是在一些场景下会出现诡异的数据不一致。于是，使用了mycat做代理，开发是比以前方便了，但诡异问题依然存在，又换成了atlas，还是不行。就如同老师说的一样，在没有完全深入了解组件的情况下贸然使用，本来是玩组件，结果被组件玩了。没办法，只好把查询放到一个事务里边，这样代理就会去主库中执行，但这样无异于还是增加的主库的压力。老师在专栏中提供基于消息队列和缓存的方案给我很好的启发，期待后续更多干货。","like_count":53,"discussions":[{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582168,"discussion_content":"最后是怎么解决的呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659274565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1872697,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/93/39/f642023f.jpg","nickname":"Hplus","note":"","ucode":"DC32CBC3E9C11D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566364,"discussion_content":"我atlas用了四年多，没发现这种问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650674316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1418862,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a6/6e/21907ff9.jpg","nickname":"X中倪","note":"","ucode":"F28FAFF2FEDD1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137835,"discussion_content":"好比 你想对一个跆拳道美女耍流氓，反而被她打了一样的道理。对于mysql中间件有感悟，没有实操过。但是也提了个醒。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579191540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45101,"discussion_content":"我也觉得前面有些同学评论里面显得太心急了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573004016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":318878,"discussion_content":"唐老师把这条置顶了，哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603872540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45101,"ip_address":""},"score":318878,"extra":""}]}]},{"had_liked":false,"id":156186,"user_name":"被过去推开","can_delete":false,"product_type":"c1","uid":1276690,"ip_address":"","ucode":"8B4F34FE93FD5B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","comment_is_top":false,"comment_ctime":1574830138,"is_pvip":false,"replies":[{"id":"60257","content":"后台系统不能直接查询分库分表的数据，可以把数据同步到单独的一个后台库中，或者同步到es里面","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575016667,"ip_address":"","comment_id":156186,"utype":1}],"discussion_count":9,"race_medal":0,"score":"126128881722","product_id":100035801,"comment_content":"老师你好，我以前想要给公司分库分表，后来觉得有几个问题放在我面前，就搁浅了，现在只是挂了一个从库。<br>最主要的问题：我们公司每天产生许多业务订单，如果以用户id进行hash计算，分发到不同的库，对前台用户订单查询有利，但后台系统页面需要查看全部订单，以倒序排列，这样子的sql会不会执行很慢，毕竟是订单分散到几个库了。老师有好的分库分表方案吗？","like_count":29,"discussions":[{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228737,"discussion_content":"分库分表的目的是不太一样的：分库是『扩』字诀，通过扩展cpu核数、线程数、内存、连接数，目标是解决性能瓶颈；分表是『拆』字诀，通过将数据分散到不同的表中，减少单个目标表中的数据量，加快查询速度","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1586572815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294472,"discussion_content":"如上所述，首先热数据，一般近三个月的数据，同步到es中，然后给实时用户查询。  业务维度上，冷数据，按月查询，db降冷，历史数据放月表中。可以按照年分不同的实例。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1595899993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302193,"discussion_content":"把用于筛选条件的数据和pk放在es，在es里查询之后再用key到数据库里查。\n以前这么搞过，后来也发现点问题，有时候一次性匹配到的key太多，从数据库里查询会耗时。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598836980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":294472,"ip_address":""},"score":302193,"extra":""}]},{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228740,"discussion_content":"订单的特点，是时间属性很集中，如果量大的话，第一步采取归档的方案可能是优选。通过把过期的历史数据归档到一个单独的表中，减少订单表中活跃数据的条数，从而保持高效查询。好处是基本上不需要修改各服务的代码逻辑，就解决了数据量大的问题，这也可以算是一种另类的分表方案","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1586573028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196234,"avatar":"https://static001.geekbang.org/account/avatar/00/12/40/ca/1313a90b.jpg","nickname":"退役的球童","note":"","ucode":"CD5157830D9606","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65264,"discussion_content":"我觉得你这个先分表比较合适吧，毕竟都是针对订单来做的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574992446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1276690,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","nickname":"被过去推开","note":"","ucode":"8B4F34FE93FD5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1196234,"avatar":"https://static001.geekbang.org/account/avatar/00/12/40/ca/1313a90b.jpg","nickname":"退役的球童","note":"","ucode":"CD5157830D9606","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65605,"discussion_content":"是的，真要分的话就先分表，减少复杂度，一步迈大了容易扯着蛋","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575015364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":65264,"ip_address":""},"score":65605,"extra":""}]},{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476024,"discussion_content":"后台系统不能直接查询分库分表的数据，可以把数据同步到单独的一个后台库中，或者同步到es里面","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575016667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612910,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9c/6e/01b4d5d2.jpg","nickname":"liupan","note":"","ucode":"C6C7C48BCCAE12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589165,"discussion_content":"我们也会有类似场景，不引入es前提下，，比如直接查订单，需要以订单号分库分表，客户查订单需要以客户id分库分表，，，所以我们弄了两个表，，，然后统计报表又由另外系统同步数据再加工","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664463438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1668015,"avatar":"https://static001.geekbang.org/account/avatar/00/19/73/af/a0c708ec.jpg","nickname":"T","note":"","ucode":"4CC56C9EC26B8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356847,"discussion_content":"直接分两个库，一个用户订单库，一个商家订单库，一个以用户id分表，一个用商家id分表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615689941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145776,"user_name":"Hwan","can_delete":false,"product_type":"c1","uid":1205627,"ip_address":"","ucode":"A728C6790511BD","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/7b/66b9befd.jpg","comment_is_top":false,"comment_ctime":1572363766,"is_pvip":false,"replies":[{"id":"56279","content":"从开发和维护的难度考虑。引入缓存会引入复杂度，你要考虑缓存数据一致性，穿透，防雪崩等问题，并且也多维护一类组件","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572392652,"ip_address":"","comment_id":145776,"utype":1}],"discussion_count":3,"race_medal":0,"score":"83176742390","product_id":100035801,"comment_content":"老师，为啥优先读写分离，然后再缓存呢，是从那方面考虑的呢","like_count":19,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472574,"discussion_content":"从开发和维护的难度考虑。引入缓存会引入复杂度，你要考虑缓存数据一致性，穿透，防雪崩等问题，并且也多维护一类组件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572392652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1698258,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx7FdRzUuQf4Fopr7DOXEHZyCFfH4GQViaqo7bymf1qaANcOvuEhHyTNwOOUFW7psxEeSQ5k9uXWw/132","nickname":"阿顺","note":"","ucode":"36F2AD6F980B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136886,"discussion_content":"编程最难的两件事：缓存失效和命名","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579170460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45204,"discussion_content":"缓存篇还没来及的看，估计应该有介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573012569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138621,"user_name":"metasearch","can_delete":false,"product_type":"c1","uid":1022524,"ip_address":"","ucode":"76C408F3267CBC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9a/3c/bec9891a.jpg","comment_is_top":false,"comment_ctime":1570373978,"is_pvip":false,"replies":[{"id":"53455","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570491921,"ip_address":"","comment_id":138621,"utype":1}],"discussion_count":4,"race_medal":0,"score":"74584818010","product_id":100035801,"comment_content":"总结<br>1 主从原理：主库通过同步binlog到从库，relaylog去读<br>2 从库有延迟可以通过缓存 冗余数据来解决<br>3 4核8g TPS  500 QPS 10000","like_count":17,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469598,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570491921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1666990,"avatar":"","nickname":"Geek_yanfeilin","note":"","ucode":"57DF4CE1F267E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592090,"discussion_content":"4核8G如何支撑1wqps?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667101083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373746,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620864513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294470,"discussion_content":"这个tps的数据，怎么验证呢，感觉好低呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595899665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146584,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1572576804,"is_pvip":true,"replies":[{"id":"56835","content":"之前遇到过 如果主从延迟很大，数据会堆积到redis主库的发送缓冲区，会导致主库oom","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572833290,"ip_address":"","comment_id":146584,"utype":1}],"discussion_count":2,"race_medal":0,"score":"70292053540","product_id":100035801,"comment_content":"之前发生过的一个问题，用Redis主从同步，写入Redis的数据量太大，没加频次控制，导致每秒几十万写入，主从延迟过大，运维频频报警，在主库不挂掉的情况下，这样大量写入会不会造成数据丢失？","like_count":16,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472925,"discussion_content":"之前遇到过 如果主从延迟很大，数据会堆积到redis主库的发送缓冲区，会导致主库oom","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572833290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45202,"discussion_content":"这个厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573012375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146040,"user_name":"_Axios丶靜ﻩ","can_delete":false,"product_type":"c1","uid":1477364,"ip_address":"","ucode":"B2E8867CFCF92C","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/f4/fbbe4601.jpg","comment_is_top":false,"comment_ctime":1572422808,"is_pvip":false,"replies":[{"id":"56426","content":"open falcon","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572478645,"ip_address":"","comment_id":146040,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70291899544","product_id":100035801,"comment_content":"老师你好数据库的qps可以使用什么工具来监控","like_count":16,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472683,"discussion_content":"open falcon","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572478645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139028,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1570529094,"is_pvip":false,"replies":[{"id":"53627","content":"我理解的QPS是每秒查询数，是针对读请求的<br>TPS是每秒执行事务数，倾向于写请求","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570582583,"ip_address":"","comment_id":139028,"utype":1}],"discussion_count":6,"race_medal":0,"score":"70290005830","product_id":100035801,"comment_content":"给主从复制增加延迟告警的思路很好，另外，老师能具体讲解下QPS和TPS的区别？网上查询了很多资料没有权威的解释。感谢！打卡08","like_count":16,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469755,"discussion_content":"我理解的QPS是每秒查询数，是针对读请求的\nTPS是每秒执行事务数，倾向于写请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45102,"discussion_content":"别说老师这个解释虽然不全面，但是踩到要害了...","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573004096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39410,"discussion_content":"一次TPS可能会包括多次QPS","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571922590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1721694,"avatar":"","nickname":"小写丶H","note":"","ucode":"30DF5C21E23425","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390601,"discussion_content":"Q不是查询的意思，是请求的意思。每秒钟处理请求的数量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629910534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1302228,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","nickname":"David.cui","note":"","ucode":"AB46F310403612","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187417,"discussion_content":"tps是每秒完成的交易数量。一个交易里有多个sql语句。qps每秒的查询数，query是不能起事务的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582731018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067581,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4a/3d/07df0cb7.jpg","nickname":"老磨","note":"","ucode":"5255F0CBAAEAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39097,"discussion_content":"QPS的主体是query，TPS的主体是transaction，QPS的概念更加广泛，在数据库上更多描述的是query请求，TPS更多描述的是atomic的事务请求，但是这两个概念在其他领域也有不同的解释。这篇里的QPS与TPS更加适用于数据库厂商衡量的标准，对于很多其他领域的性能指标，其定义也不太一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571890367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148495,"user_name":"雷霹雳的爸爸","can_delete":false,"product_type":"c1","uid":1119490,"ip_address":"","ucode":"99BBA6D83DD11F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","comment_is_top":false,"comment_ctime":1573019109,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"44522692069","product_id":100035801,"comment_content":"针对老师的一课一思...我认得得东东已经被老师说的七七八八了，能很快想到的，也就是kafka了，具体原理我还真没能力说清楚，说明个人升级之路和老师普及事业都是任重而道远啊，附上复制原理一篇 https:&#47;&#47;engineering.linkedin.com&#47;kafka&#47;intra-cluster-replication-apache-kafka 供同好参阅，成文比较早，不知道细节上和目前的版本有什么差异，所以立个免责得flag吧<br><br>其他的问题，主要是延伸阅读，考虑到主题（其实说的是分散数据库得读请求，但是难以避免的得围绕着复制来）和篇幅（太长估计没人看，现在看评论区都有看不仔细或不看完了就发问甚至敢直接质疑得），完整得讲解MySQL复制，例如涵盖半同步和GTID基于事务得复制等等，以及这些不同方案在一致性上得细节差异，可能不太容易做得到，所以考虑到面向互联网的场景做一些课程内容裁剪也是很有必要的；只是，考虑到可能很多专栏读者，比如我，可能并非真一定是面向消费类用户的互联网场景，即便是面向海量消费类用户的互联网应用场景，也需要在一致性、可用性等方面作必要的权衡，所以适当的扩展阅读参考指引感觉也是有必要的","like_count":10},{"had_liked":false,"id":138279,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1570151260,"is_pvip":false,"discussion_count":3,"race_medal":1,"score":"35929889628","product_id":100035801,"comment_content":"Kafka的数据会保存到leader副本的log文件中并写入磁盘，随后follower副本会对数据进行同步","like_count":8,"discussions":[{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45105,"discussion_content":"老师把redis和es都说了，给大家剩下的常见的估计就剩卡不卡了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573004238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1089345,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9f/41/82306dfe.jpg","nickname":"包子","note":"","ucode":"6CC4EBB8CD3924","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27585,"discussion_content":"Kafka也是看你怎么配的，同步刷盘，同步刷leader","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570669569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231549,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","nickname":"吃饭饭","note":"","ucode":"95CFA07CDA2957","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25443,"discussion_content":"我脑海中想到的第一个也是 Kafka ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570528606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164314,"user_name":"Adrian","can_delete":false,"product_type":"c1","uid":1063422,"ip_address":"","ucode":"C11789EA4AFC69","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/fe/99465085.jpg","comment_is_top":false,"comment_ctime":1576934326,"is_pvip":false,"replies":[{"id":"63068","content":"一般使用的比较多的是种缓存<br><br>重试其实用处不大，因为你不知道获取的数据究竟是不是延迟的数据","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577241874,"ip_address":"","comment_id":164314,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31641705398","product_id":100035801,"comment_content":"文章里说通过冗余数据来解决主从延迟的问题，我有些异议，这种方式会造成缺乏扩展性，消息承载的数据很多消息组件都会有字节大小的限制，这样的话，如果后续数据量随着业务进行了扩展，就难免不会产生问题，持续扩展能力相对较差，我的理解倒是可以通过消息重试的方式来解决这个问题，如果主从同步延迟，那就消息重试，直到数据同步过来即可，这种解决方案通常业务上也是能忍受的，当然还是要按照具体case具体分析","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478719,"discussion_content":"一般使用的比较多的是种缓存\n\n重试其实用处不大，因为你不知道获取的数据究竟是不是延迟的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577241874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297630,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","nickname":"剑八","note":"","ucode":"0A09F41DB8A4E7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559067,"discussion_content":"缓存也有一致性问题的，核心的处理如金额类的查询还是主库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648601714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138956,"user_name":"xu晓晨","can_delete":false,"product_type":"c1","uid":1513945,"ip_address":"","ucode":"EE0374EB48FBDC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoTDBX4a5u3Oc0zDpKDp6UbcYDcwAJXfBSmicqQwoyxaoVLEWzjIoUqYBiaDJHAYkO8icLtXqk4ibqKg/132","comment_is_top":false,"comment_ctime":1570517652,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31635288724","product_id":100035801,"comment_content":"平常使用的redis也是用复制的方式 来保持数据同步。redis是以2.8版本为分界。2.8版本之前用用的是性能较差的复制和命令传播。首先是从服务器发生同步操作sync，主服务器会执行bgsave生成一个全量文件的rdb文件 然后传输给从服务器。同时主服务器会把这一过程中执行的写入命令写入缓存区。从服务器会把rdb文件进行一次全量加载。加载完毕后 主服务器会把缓存区中的写入命令传给从服务器。从服务器执行命令后 两个服务器的数据就一致了。<br>这种方式每次如果网络出现故障 故障重连后都要进行全量数据的复制。对主服务器的压力太大 也会增加主从网络传输的资源消耗。<br>redis2.8版本之后优化了这一部分缺陷 增加了部分重同步功能。部分同步就是同步故障后的一部分数据 而不是全量数据。这种优化在量级非常大的情况下 提生的效率是相当客观的。","like_count":7,"discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":151072,"discussion_content":"4.0之后新增了PSYNC2特性😀","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1579853062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138406,"user_name":"三年过后","can_delete":false,"product_type":"c1","uid":1283157,"ip_address":"","ucode":"5E9106C5F11BED","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/55/afc64956.jpg","comment_is_top":false,"comment_ctime":1570199940,"is_pvip":false,"replies":[{"id":"53245","content":"印象中可以通过比对master和slave的bin log位置","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570264468,"ip_address":"","comment_id":138406,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27340003716","product_id":100035801,"comment_content":"老师讲得很好！案例说到主从的延迟时间预警，未能详细到如何通过哪个数据库中的哪个指标来判别？经验中，我记得是，在从从库中，通过监控show slave status\\G命令输出的Seconds_Behind_Master参数的值来判断，是否有发生主从延时。这个参数值是通过比较sql_thread执行的event的timestamp和io_thread复制好的 event的timestamp(简写为ts)进行比较，而得到的这么一个差值。   但是，问题来了，如果复制同步主库bin_log日志的io_thread线程负载过高的话，那么，Seconds_Behind_Master这个值就一直处于0。也是无法预警的，确切地说，通过Seconds_Behind_Master这个值来判断延迟是不够准确的。 不知，还有其他更好的方式？","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469511,"discussion_content":"印象中可以通过比对master和slave的bin log位置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570264468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173526,"user_name":"张珂","can_delete":false,"product_type":"c1","uid":1249512,"ip_address":"","ucode":"E0AFA940BEAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/e8/172b5915.jpg","comment_is_top":false,"comment_ctime":1579589408,"is_pvip":false,"replies":[{"id":"67364","content":"其实我觉得对于数据库切换的回答是没有啥问题的<br><br>多机房最主要的是数据的用户延迟，一般会自建一些工具","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579695267,"ip_address":"","comment_id":173526,"utype":1}],"discussion_count":5,"race_medal":0,"score":"23054425888","product_id":100035801,"comment_content":"老师你好，我想讲我之前的一个面试，面试官问存储层的高可用怎么搞。<br><br>我是这么回答的：存储用最熟悉的MySQL，架起主备，主备前用keepalive + VIP漂移，可以达到秒级切换。主从复制选用半同步复制，保证数据从binlog传输到备库后再返回请求。当主库发生异常时，需要切换，但需要备库应用完本地的relay log后才能成为主库。在这之前不能写，读的话会有少量不一致性。<br><br>面试官说：半同步复制可能延时有点大，而且你还相当于“停服”了。说说改成异步复制呢？<br><br>我针对异步复制，先分析了一下当主库挂的时候，可能会丢失一些数据。这个时候可以立即切换到备库成为主库，但影响是原主库挂之前一些提交的事务都丢失了，对于业务来说可能表现成用户做了某件事但结果却没做，比如支付了订单但后来发现没有该订单，而且余额也没少。这个时候要做好产品上的公告，表明事故以及让用户重新支付等。而且原主库要做好binlog上跳过那些跟原备库（现在的主库）不一致的部分。但这个方案依然需要等待备库应用完本地的relay log完毕才能切，只要没有长事务，一般很快。<br><br>面试官又在更高机房的层次上，提出让我设计一个方案，做到一定的“可伸缩”性，。比如A机房挂了，流量切到B机房，机房可以做到一变二，二变三等，这个时候系统的实战细节等。<br><br>这个地方我实在缺乏经验，我的回答是这样的：如果启用多个机房分别服务不同的用户群，想要达到流量切换，势必需要互相同步数据，但这里有个时间窗口不一致的问题，如果A机房挂了，马上切给B，依然采用刚才的思路，没有同步过来的数据算作“没有产生过”，业务有损。这样起码可以保证数据本身的一致性。<br><br>上面的三条回答面试官有些不满意，就结束了面试。老师您能帮我看看评价一下我的回答，看是否还有更好的方案？<br><br>","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482100,"discussion_content":"其实我觉得对于数据库切换的回答是没有啥问题的\n\n多机房最主要的是数据的用户延迟，一般会自建一些工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579695267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294474,"discussion_content":"你这回答是dba职位吧","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1595900388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088710,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/c6/05a6798f.jpg","nickname":"苗","note":"","ucode":"5ECCC6C855E541","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358304,"discussion_content":"感觉是数据架构师的职位。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615962841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582170,"discussion_content":"有点深奥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659275571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009831,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","nickname":"聪","note":"","ucode":"9D672A8580A945","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311737,"discussion_content":"还有虚ip的概念 没有配置过keepalived","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602477911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139753,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1570717896,"is_pvip":false,"replies":[{"id":"53991","content":"理论上是三倍，取决于从库的负载均衡是否均匀，另外这个是benchmark结果，只是给大家一个感性认识，实际项目要比这个量极小","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570750241,"ip_address":"","comment_id":139753,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23045554376","product_id":100035801,"comment_content":"“在 4 核 8G 的机器上运 MySQL 5.7 时，大概可支撑 500 的 TPS 和 10000 的 QPS”，老师，可以介绍下，挂了几个读库后（比如3个），同样的机器配置，QPS能上升到多少？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470092,"discussion_content":"理论上是三倍，取决于从库的负载均衡是否均匀，另外这个是benchmark结果，只是给大家一个感性认识，实际项目要比这个量极小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570750241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45108,"discussion_content":"想问下这个benchmark的细节，它是哪家做的？给个参考？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573004285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139686,"user_name":"🍚🐔🐢","can_delete":false,"product_type":"c1","uid":1202922,"ip_address":"","ucode":"8F31103D67BC07","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/ea/c034661d.jpg","comment_is_top":false,"comment_ctime":1570704846,"is_pvip":false,"replies":[{"id":"53993","content":"在我来看是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570750331,"ip_address":"","comment_id":139686,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23045541326","product_id":100035801,"comment_content":"主库宕机之后，binlog丢失导致的主从数据不一致是不是只能手动恢复？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470057,"discussion_content":"在我来看是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570750331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1444126,"avatar":"https://static001.geekbang.org/account/avatar/00/16/09/1e/db996fd7.jpg","nickname":"王轲","note":"","ucode":"65065BFFC409F5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578277,"discussion_content":"如果是InnoDB ，binlog还没刷盘就跪了 主库重启的时候redolog会发现不一致，回滚掉这条数据，主从库还是一致的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656640214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539205,"discussion_content":"主库完全断电挂机，提交了的 binlog 也不会丢失啊。只是业务能忍受多久的不可用呢？如果不急着切换主库，完全可以等主库重启（开玩笑...）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639640918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139287,"user_name":"你好旅行者","can_delete":false,"product_type":"c1","uid":1154101,"ip_address":"","ucode":"5C72A428DC28F3","user_header":"https://static001.geekbang.org/account/avatar/00/11/9c/35/9dc79371.jpg","comment_is_top":false,"comment_ctime":1570603097,"is_pvip":false,"replies":[{"id":"53786","content":"优先用读写分离，扛不住了再考虑缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665620,"ip_address":"","comment_id":139287,"utype":1}],"discussion_count":6,"race_medal":0,"score":"23045439577","product_id":100035801,"comment_content":"请问一下来时，通过缓存来抗住高并发的读请求和通过MySQL的读写分离来抗高并发他们之间的区别在哪里呢？分别有哪些适用的场景？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469879,"discussion_content":"优先用读写分离，扛不住了再考虑缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228768,"discussion_content":"『优先用读写分离』这样的选择倒是第一次听说，不过个人不太同意这样的方案，理由为：任何一个新方案的引入，在解决问题的同时都会带来新的问题，缓存会有穿透、雪崩、击穿，读写分离会有主从延迟，也因此，都需要进一步的兜底方案。\n\n读写分离方案中，有几个从库，就只能撑信几倍的并发量。相对来说，缓存提供的并发量要高很多。因此，我认为缓存是一个更值得优先考虑的方案。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586575200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":539201,"discussion_content":"架构设计三原则：适合、简单、演变。引入缓存，整个架构的复杂度提高了，未知的问题更多。如果在不增加架构的复杂度的前提能满足需求，就优先。最后，业务需求逐步提升，才考虑调整架构。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639640691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":228768,"ip_address":""},"score":539201,"extra":""}]},{"author":{"id":1013160,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","nickname":"电光火石","note":"","ucode":"3AD33BB4AA940F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32036,"discussion_content":"为什么优先读写分离？我理解读写分离产生的延迟问题，包括利用中间件来做读写分离引入的复杂度比使用缓存更大，想了解一下老师的考虑点是什么样？谢谢了！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570979968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1013160,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","nickname":"电光火石","note":"","ucode":"3AD33BB4AA940F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45118,"discussion_content":"我也是这个问题，理由如你所提，我也觉得引入中间件的复杂度给整个团队带来的影响面会更大，综合下来未必一定是首选，老师也提到了中间件的使用需要足够的了解原理，我觉得这是最严重的影响因素，如专栏前期好多同学一样太心急了，都想找捷径直接拿答案；但是老师的顾虑我觉得其实能从这篇里面看出点端倪，因为缓存和数据库双写也有不少坑，老师在异步复制延迟解决方案中小提了一下，我不责任推测哈，老师一定是觉得他们的中间件团队比业务研发更靠谱哈哈...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573004798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":32036,"ip_address":""},"score":45118,"extra":""}]},{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32666,"discussion_content":"数据量和流量大时用缓存一样会引入各种中间件和集群技术","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571056287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139639,"user_name":"xu晓晨","can_delete":false,"product_type":"c1","uid":1513945,"ip_address":"","ucode":"EE0374EB48FBDC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoTDBX4a5u3Oc0zDpKDp6UbcYDcwAJXfBSmicqQwoyxaoVLEWzjIoUqYBiaDJHAYkO8icLtXqk4ibqKg/132","comment_is_top":false,"comment_ctime":1570696146,"is_pvip":false,"replies":[{"id":"53994","content":"可用性是是否容忍故障，如果穿透不会引发故障，是可以的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570750490,"ip_address":"","comment_id":139639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14455598034","product_id":100035801,"comment_content":"个人感觉中间件不是什么地方都需要高可用 得看具体的业务场景。大多的缓存场景 并发不是很高的话 可以容忍暂时穿透查库。但是一些涉及到业务逻辑的地方 就必须高可用了","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470029,"discussion_content":"可用性是是否容忍故障，如果穿透不会引发故障，是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570750490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138312,"user_name":"哇哦","can_delete":false,"product_type":"c1","uid":1250599,"ip_address":"","ucode":"1F16B9150E93C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/27/c5e4ec99.jpg","comment_is_top":false,"comment_ctime":1570159809,"is_pvip":false,"replies":[{"id":"53250","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570264661,"ip_address":"","comment_id":138312,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14455061697","product_id":100035801,"comment_content":"主从分离的，如果主节点写入sql,后面同步到从节点，那个时候，从节点实际上即在执行写，也在支持读。那主从分离的作用是保证主节点正常写？其他从节点只是通过增加机器来分担读数据io吗","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469478,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570264661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25446,"discussion_content":"思考有深度啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570528935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203401,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586184396,"is_pvip":false,"replies":[{"id":"78268","content":"是的，主从延迟是一定要监控的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623983,"ip_address":"","comment_id":203401,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10176118988","product_id":100035801,"comment_content":"嗯，凡是需要通过冗余数据的方式来实现数据高可用的存储系统都需要数据复制技术，基本也都是通过日志的方式来实现的，当然日志的存在形式可能会有所变化。<br>数据复制最难的就是，数据的一致性问题，由于物理规律的限制必然存在数据同步延迟问题，只是站在用户的角度有些是无感知有些可能是不能忍受的。<br>主从延迟这个现象需要多加注意，否则有些现象解释不通会觉得非常诡异，主从延迟的时间最好监控起来，在不可接受范围内进行预警。","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490854,"discussion_content":"是的，主从延迟是一定要监控的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543997,"discussion_content":"层层相关\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641377369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190663,"user_name":"kamida","can_delete":false,"product_type":"c1","uid":1904146,"ip_address":"","ucode":"16D7CA59870AC0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jXbwicoDwia7ooDfwBTRyvNYQkefnVwF1CMicMS8FqKfuFAdvVZo2pqc4ic0R9kSdHTIxaE6YyqxwX8BdNGv5PqSIw/132","comment_is_top":false,"comment_ctime":1584678933,"is_pvip":false,"replies":[{"id":"73294","content":"其实，对于新加数据源基本上都可以做到业务无感知，一般是通过在从从库上挂域名实现吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584689069,"ip_address":"","comment_id":190663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10174613525","product_id":100035801,"comment_content":"老师 您提到访问主从数据库有两种方式 能讲一下他们是怎么处理数据源的动态变化的吗 比如我们新加了一个从库","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488031,"discussion_content":"其实，对于新加数据源基本上都可以做到业务无感知，一般是通过在从从库上挂域名实现吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584689069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144299,"user_name":"老磨","can_delete":false,"product_type":"c1","uid":1067581,"ip_address":"","ucode":"5255F0CBAAEAEF","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/3d/07df0cb7.jpg","comment_is_top":false,"comment_ctime":1571890422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10161825014","product_id":100035801,"comment_content":"看完就想起来自己之前写async replication的场景。。。简直太折磨。。。","like_count":2},{"had_liked":false,"id":338852,"user_name":"梦楼","can_delete":false,"product_type":"c1","uid":2093516,"ip_address":"","ucode":"2D0F3050ACC091","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f1/cc/3bd32c6f.jpg","comment_is_top":false,"comment_ctime":1647763168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5942730464","product_id":100035801,"comment_content":"这篇文章讲的不错，我很公平，好的表扬，不好的我会直接提出","like_count":1},{"had_liked":false,"id":312634,"user_name":"无名小辈","can_delete":false,"product_type":"c1","uid":1303534,"ip_address":"","ucode":"F3E000D3AB119C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/ee/28a60b35.jpg","comment_is_top":false,"comment_ctime":1631905020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5926872316","product_id":100035801,"comment_content":"老师好，虽然主从一致不是互联网的优先优化的问题，但是数据量大的时候有什么好的工具或者算法来测量主从数据一致性呢","like_count":1},{"had_liked":false,"id":245237,"user_name":"猩猩","can_delete":false,"product_type":"c1","uid":1619438,"ip_address":"","ucode":"748E447BA89B03","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ee/f56aebe6.jpg","comment_is_top":false,"comment_ctime":1598872885,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5893840181","product_id":100035801,"comment_content":"请问画图的软件是什么呢。挺好看的","like_count":1},{"had_liked":false,"id":241785,"user_name":"JoJi","can_delete":false,"product_type":"c1","uid":2066986,"ip_address":"","ucode":"B88997A80E76AC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/8a/2a/f94db4dc.jpg","comment_is_top":false,"comment_ctime":1597421400,"is_pvip":false,"replies":[{"id":"90316","content":"仅仅读写分离的话，自己写一个简单的组件就好了，配置主从的地址","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1599009596,"ip_address":"","comment_id":241785,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5892388696","product_id":100035801,"comment_content":"老师，我看这几个中间件功能都一大堆。如果仅仅是考虑读写分离的情况，易用性和稳定性优先，推荐选择什么呢?","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503842,"discussion_content":"仅仅读写分离的话，自己写一个简单的组件就好了，配置主从的地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599009596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220683,"user_name":"于海涛","can_delete":false,"product_type":"c1","uid":1986401,"ip_address":"","ucode":"5302F093E4648A","user_header":"","comment_is_top":false,"comment_ctime":1590307953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885275249","product_id":100035801,"comment_content":"老师qps的问题不太理解，单机的话假如我们1个请书100ms，那么1s这才能处理10个请求呀，那怎么能达到1万的qps怎么做到的，假如有4核心，那也才40qps呀，是算并发么？还是这块指的是数据库，不太理解，请老师解释一下，非常感谢","like_count":1},{"had_liked":false,"id":212092,"user_name":"zj坚果","can_delete":false,"product_type":"c1","uid":1070601,"ip_address":"","ucode":"D6E787FF032D7B","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/09/4a9d4a35.jpg","comment_is_top":false,"comment_ctime":1588060132,"is_pvip":false,"replies":[{"id":"78850","content":"数据库会有一些统计，比如mysql类似 show status like &#39;queries&#39;之类，也可以写agent来统计","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1588069839,"ip_address":"","comment_id":212092,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5883027428","product_id":100035801,"comment_content":"老师，在哪可以看到不同数据库在什么样的服务器有多少QPS和TPS的数据，能否分享下<br>","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493431,"discussion_content":"数据库会有一些统计，比如mysql类似 show status like &amp;#39;queries&amp;#39;之类，也可以写agent来统计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588069839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1070601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/56/09/4a9d4a35.jpg","nickname":"zj坚果","note":"","ucode":"D6E787FF032D7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272925,"discussion_content":"老师，就没有一些官网能给数据参考吗？比如给出2核4G内存的服务器上tps是多少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590377276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206897,"user_name":"林腾","can_delete":false,"product_type":"c1","uid":1963793,"ip_address":"","ucode":"8E2438E56BF677","user_header":"","comment_is_top":false,"comment_ctime":1586954768,"is_pvip":false,"replies":[{"id":"78092","content":"肯定会有，一般这种情况可以读主库","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587473259,"ip_address":"","comment_id":206897,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881922064","product_id":100035801,"comment_content":"老师好，redis主从复制也存在延迟情况，如果写入redis更新缓存对象的瞬间又读取redis的同样的对象，是可能存在读不到的情况？目前jedis和redisTemplate的api有屏蔽这一点么？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491940,"discussion_content":"肯定会有，一般这种情况可以读主库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587473259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184342,"user_name":"Bravery168","can_delete":false,"product_type":"c1","uid":1232973,"ip_address":"","ucode":"DB08AEFBD6DF2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/4d/2116c1a4.jpg","comment_is_top":false,"comment_ctime":1583293848,"is_pvip":false,"replies":[{"id":"72211","content":"是的，一般情况是先考虑从库","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584020110,"ip_address":"","comment_id":184342,"utype":1}],"discussion_count":2,"race_medal":4,"score":"5878261144","product_id":100035801,"comment_content":"优先使用读写分离，然后再考虑缓存。<br>----这个我觉得还是得从业务规模和场景考虑，如果访问的热点集中于某一部分数据，且变动不频繁，直接用缓存会不会好些，毕竟并不一定需要把所有的数据都做一份拷贝到从库。<br>","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485978,"discussion_content":"是的，一般情况是先考虑从库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584020110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543999,"discussion_content":"作者估计是工作太辛苦了 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641377410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164542,"user_name":"benjamin.lee","can_delete":false,"product_type":"c1","uid":1132698,"ip_address":"","ucode":"0C71FC4832E23C","user_header":"https://static001.geekbang.org/account/avatar/00/11/48/9a/d8309354.jpg","comment_is_top":false,"comment_ctime":1577024495,"is_pvip":false,"replies":[{"id":"63061","content":"是的呀~所以要使用缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577240800,"ip_address":"","comment_id":164542,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5871991791","product_id":100035801,"comment_content":"主从分离，一个主不能挂无限多的从，一般是3-5个从库，那是不是意味着主从分离方案，从水平扩展上只能达到这种规模，再往上扩就受限了？主从分离的方案，数据库的集群大小就很有限了，很容易达到性能瓶颈？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478808,"discussion_content":"是的呀~所以要使用缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577240800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544000,"discussion_content":"主库也不是说就只能有一个，只是复杂度会增加。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641377472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101178,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/7a/8b9801e8.jpg","nickname":"加油吧哥们","note":"","ucode":"1FDE4EEFF0F53E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110893,"discussion_content":"是不是还可以从库再往下一级从库同步，这样扩展提高瓶颈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577762972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157745,"user_name":"朋朋","can_delete":false,"product_type":"c1","uid":1133890,"ip_address":"","ucode":"3070498E7282C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/42/8fd7c2e2.jpg","comment_is_top":false,"comment_ctime":1575254252,"is_pvip":false,"replies":[{"id":"60612","content":"写入到HDFS中，文件也会被复制到多个DataNode中","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575363599,"ip_address":"","comment_id":157745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870221548","product_id":100035801,"comment_content":"写入到 HDFS 中文件也会被复制到多个 DataNode 中。只是不同的组件对于复制的一致性、延迟要求不同，采用的方案也不同。 这句话 是HDFS中间件 还是中文件？ 我有点读不通顺","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476517,"discussion_content":"写入到HDFS中，文件也会被复制到多个DataNode中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575363599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141430,"user_name":"你好旅行者","can_delete":false,"product_type":"c1","uid":1154101,"ip_address":"","ucode":"5C72A428DC28F3","user_header":"https://static001.geekbang.org/account/avatar/00/11/9c/35/9dc79371.jpg","comment_is_top":false,"comment_ctime":1571152058,"is_pvip":false,"replies":[{"id":"54639","content":"当然要一起使用了优先主从分离，如果多个从库扛不住再考虑缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571183982,"ip_address":"","comment_id":141430,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866119354","product_id":100035801,"comment_content":"那请问老师缓存和主从分离可以一起使用吗？有没有什么场景？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470750,"discussion_content":"当然要一起使用了优先主从分离，如果多个从库扛不住再考虑缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571183982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139992,"user_name":"呆梨","can_delete":false,"product_type":"c1","uid":1069474,"ip_address":"","ucode":"7D4B961DE1EE8B","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/a2/4fc7df75.jpg","comment_is_top":false,"comment_ctime":1570781615,"is_pvip":false,"replies":[{"id":"54169","content":"logdump发送，从库接收","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570837120,"ip_address":"","comment_id":139992,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865748911","product_id":100035801,"comment_content":"log dump 的线程发送的binlog和从库读取的binlog是什么关系啊","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470202,"discussion_content":"logdump发送，从库接收","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570837120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139267,"user_name":"兢","can_delete":false,"product_type":"c1","uid":1070683,"ip_address":"","ucode":"878EAA03E02C1C","user_header":"","comment_is_top":false,"comment_ctime":1570596915,"is_pvip":false,"replies":[{"id":"53673","content":"可以删除缓存而不是更新缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570600762,"ip_address":"","comment_id":139267,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5865564211","product_id":100035801,"comment_content":"主从复制延迟问题，缓存的解决方案。网上有看到这种解决方案保证数据一致性，先更数据库后更缓存，用事务控制，失败了回滚。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469867,"discussion_content":"可以删除缓存而不是更新缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570600762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/3d/b24e44aa.jpg","nickname":"Cactus","note":"","ucode":"0A64D13A5B96A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217289,"discussion_content":"老师 对于缓存的处理，为什么选择删除新增操作，而不是直接更新呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585538710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/3d/b24e44aa.jpg","nickname":"Cactus","note":"","ucode":"0A64D13A5B96A2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364150,"discussion_content":"为了防止写数据库失败","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617373553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":217289,"ip_address":""},"score":364150,"extra":""}]}]},{"had_liked":false,"id":139154,"user_name":"Julien","can_delete":false,"product_type":"c1","uid":1204568,"ip_address":"","ucode":"2A3F0CF46B4034","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/58/7b078879.jpg","comment_is_top":false,"comment_ctime":1570576479,"is_pvip":false,"replies":[{"id":"53624","content":"文章中有提到的，三种方案<br>1. 把数据都传过来，不查数据库<br>2. 中缓存，从缓存读<br>3. 直接读主库","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570582453,"ip_address":"","comment_id":139154,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5865543775","product_id":100035801,"comment_content":"2. 主从的延迟问题，很多诡异的读取不到数据的问题都可能会和它有关，如果你遇到这类问题不妨先看看主从延迟的数据。<br><br>请问一下，如果出现了延迟较大导致从库读不到数据，怎样在代码层面一劳永逸地解决呢？谢谢老师～","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469816,"discussion_content":"文章中有提到的，三种方案\n1. 把数据都传过来，不查数据库\n2. 中缓存，从缓存读\n3. 直接读主库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1654350,"avatar":"","nickname":"马杰","note":"","ucode":"3D09B875EC1C08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29251,"discussion_content":"数据都复制过来 不查数据库的话 还要从库干嘛 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570757240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1654350,"avatar":"","nickname":"马杰","note":"","ucode":"3D09B875EC1C08","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45120,"discussion_content":"他这个方案只是针对特定场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573004916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29251,"ip_address":""},"score":45120,"extra":""}]},{"author":{"id":1612372,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9a/54/5d51fda4.jpg","nickname":"婷","note":"","ucode":"1264B8F777B7CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143458,"discussion_content":"我遇到过的问题是，并发情况下，主从同步延迟，会导致从缓存读到的数据不是最新的。\n场景：写请求，写主库，让缓存失效，再同步到从库。读请求，没有命中缓存，读从库，再写缓存。这样会导致在并发场景下，主从同步未完成，就有读请求，没有把最新数据写入缓存，读到的缓存数据就不是最新的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579508315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45129,"discussion_content":"先除去一劳永逸的动机，然后仔细衡量一下老师提到的方案，兄弟你问这问题感觉课听的太不仔细了啊，然后老师的耐心重复还引来另一位对本专栏心怀不满且也是属于不能做到仔细聆听的同学...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573005136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139017,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1570527366,"is_pvip":false,"replies":[{"id":"53630","content":"1. 可以通过slave上的统计值：Seconds_Behind_Master来监控；或者是监控主从的binlog差异<br>2. 好哒，我后面多注意，多用代码来描述","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570582674,"ip_address":"","comment_id":139017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865494662","product_id":100035801,"comment_content":"我有两个问题：<br>1.主从延迟的问题，如何知道主从延迟，是否有这样的工具来监控并查看每一条Sql的延迟情况，如果延迟超过设定值（比如2s）就自动报警。请老师介绍一下？<br>2.关于掌握原理的问题，高级程序员或者架构师都必须要掌握好原理，以便于更好的使用和把此方案运用于其他问题中，老师能否把原理讲解的更加透彻一点，比如主从复制的过程能否用代码来实现（哪怕是伪代码）。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469749,"discussion_content":"1. 可以通过slave上的统计值：Seconds_Behind_Master来监控；或者是监控主从的binlog差异\n2. 好哒，我后面多注意，多用代码来描述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138559,"user_name":"Geek_e986e3","can_delete":false,"product_type":"c1","uid":1642716,"ip_address":"","ucode":"EF53D2DEA59A8F","user_header":"","comment_is_top":false,"comment_ctime":1570335580,"is_pvip":false,"replies":[{"id":"53454","content":"可以部署多个从库或者使用缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570491909,"ip_address":"","comment_id":138559,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865302876","product_id":100035801,"comment_content":"老师想问问 如果读比写多 一般怎么处理的呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469571,"discussion_content":"可以部署多个从库或者使用缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570491909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138333,"user_name":"Geek_b617bf","can_delete":false,"product_type":"c1","uid":1220552,"ip_address":"","ucode":"9BAFC3B184B1D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9f/c8/0318c83e.jpg","comment_is_top":false,"comment_ctime":1570169315,"is_pvip":false,"replies":[{"id":"53249","content":"挂多个从库的话，数据肯定是所有从库都有哦","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570264636,"ip_address":"","comment_id":138333,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5865136611","product_id":100035801,"comment_content":"一个主库挂多个从库,读取数据的时候一般怎么确定某个数据在哪个从库里呢?  还是说都扫描一遍? ","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469490,"discussion_content":"挂多个从库的话，数据肯定是所有从库都有哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570264636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1338831,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","nickname":"jc9090kkk","note":"","ucode":"6C992D07A2E78F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25337,"discussion_content":"一般常规情况下，如果主库和从库的硬件配置差别不大的话，从库重放主库的binlog的延迟时间可以忽略不计，不过在一些极端情况下，比如主库上有大事务的执行逻辑，可能会导致从库在做binlog日志重放的时间变长，是有可能会导致数据不一致的，不过这种情况的概率比较少，因为在业务逻辑层面来讲，代码中需要尽量避免大事务的操作，在一些敏感业务中，如果频繁出现主从数据不一致，并且没有特别好的解决方案的前提下，那么就需要考虑数据可用性和数据可靠性的中间做个取舍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570506103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168220,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d3/5c/796962de.jpg","nickname":"天天向上","note":"","ucode":"DF08B67EAD61E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24620,"discussion_content":"每个从库的数据可以认为都是一样的，不存在需要判断从哪个从库取呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570198724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359505,"user_name":"💣","can_delete":false,"product_type":"c1","uid":1744053,"ip_address":"上海","ucode":"F3B82CEB6B6934","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9c/b5/c936c54b.jpg","comment_is_top":false,"comment_ctime":1665581250,"is_pvip":true,"discussion_count":0,"race_medal":3,"score":"1665581250","product_id":100035801,"comment_content":"微博的主从不一致问题，除了后端技术解决还有会通过一些小技巧比如在下完单后进进入一个下单完成的界面，发微博确实没有，这种可以拖延查库时间，属于业务手段","like_count":0},{"had_liked":false,"id":353179,"user_name":"Geek_55cc30","can_delete":false,"product_type":"c1","uid":2914421,"ip_address":"广东","ucode":"4A11A99E8D9F01","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLsuPxIWODMCcA2AZorYpJTHWA1ttv0CMxsh5meMXVvCAzN4qDlHzDWJ3ibicuVgmexmGNmibZdcfQcw/132","comment_is_top":false,"comment_ctime":1659237790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659237790","product_id":100035801,"comment_content":"主从复制延迟对业务影响， 另一种解决方案。<br>===============<br>有些场景主库和从库是的不同业务， 完全隔离，比如监听微博数据库binlong消息，从而建立索引。 <br>供用户搜索微博信息。  微博binlog更新， 去从库读取数据， 发现获取不到（新增微博信息主库未同步到从库）。针对这种情况， 我们可以增加多级队列，每个队列时延在从库读取消息。多级队列延迟读取过程如下，  比如获取不到从库数据， 把数据写入到第一级队列， 过段时间从一级队列取出ID，尝试在从库获取信息， 如果获取不到， 将ID写入第二级队列， 过段时间从第二级队列中取出ID并且尝试在从库获取信息， 如果没有获取到， 本次读取标记失败。","like_count":0},{"had_liked":false,"id":350179,"user_name":"王轲","can_delete":false,"product_type":"c1","uid":1444126,"ip_address":"","ucode":"65065BFFC409F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/09/1e/db996fd7.jpg","comment_is_top":false,"comment_ctime":1656640107,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656640107","product_id":100035801,"comment_content":"针对于“binlog未刷盘造成主从不一致” ，如果是InnoDB ，binlog还没刷盘就跪了 主库重启的时候redolog会发现不一致，回滚掉这条数据，主从库还是一致的","like_count":0},{"had_liked":false,"id":349795,"user_name":"FanRockRock","can_delete":false,"product_type":"c1","uid":1307675,"ip_address":"","ucode":"9D5DFDDAC31D0A","user_header":"https://static001.geekbang.org/account/avatar/00/13/f4/1b/5209bd16.jpg","comment_is_top":false,"comment_ctime":1656330707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656330707","product_id":100035801,"comment_content":"主从延迟的问题，假设没有这个mq，那方式一就不适用了；事实上绝大多数场景没有mq，这时应该怎么办","like_count":0},{"had_liked":false,"id":328806,"user_name":"harborbest","can_delete":false,"product_type":"c1","uid":1026897,"ip_address":"","ucode":"76A73F5F2AA7C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/51/9f28c96c.jpg","comment_is_top":false,"comment_ctime":1640908562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640908562","product_id":100035801,"comment_content":"oracle数据库怎么实现主从复制呢？","like_count":0},{"had_liked":false,"id":317020,"user_name":"青年祭司","can_delete":false,"product_type":"c1","uid":1259156,"ip_address":"","ucode":"C88EDAE3FF09AE","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/94/0b969588.jpg","comment_is_top":false,"comment_ctime":1634642699,"is_pvip":false,"discussion_count":1,"race_medal":5,"score":"1634642699","product_id":100035801,"comment_content":"老师，微博审核的那个例子中，可不可以让审核系统等一段时间再从从库读数据，以让数据库能完成同步","like_count":0,"discussions":[{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539211,"discussion_content":"问题是，你不知道要等多久。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639642536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309703,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1630308289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630308289","product_id":100035801,"comment_content":"珍爱生命，远离MyCat","like_count":0},{"had_liked":false,"id":309062,"user_name":"小写丶H","can_delete":false,"product_type":"c1","uid":1721694,"ip_address":"","ucode":"30DF5C21E23425","user_header":"","comment_is_top":false,"comment_ctime":1629910487,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1629910487","product_id":100035801,"comment_content":"我觉得你的主从不一致的解决方案也只适合你举例子的这种情况，那比如A系统一个写，B系统读，难道A每次写的时候都把所有的数据写到缓存当中去吗？","like_count":0,"discussions":[{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539212,"discussion_content":"是的。这个缓存就是针对需要查询最新的数据——例如例子中的审核场景。如果要查询旧数据，就去从库读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639642694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304979,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1627729831,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1627729831","product_id":100035801,"comment_content":"老师，同学好<br>文中”主库上 binlog 还没有来得及刷新到磁盘上就出现了磁盘损坏或者机器掉电，就会导致 binlog 的丢失，最终造成主从数据的不一致“， 没看明白， 首先，binlog 还没有来得及刷新到磁盘上，MYSQL不是采用WAL策略，先写log，后刷盘吗，即便没有来得及写lbinlog，那主从应该也能保证数据最终一致性吧<br>望解答～ ","like_count":0,"discussions":[{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539214,"discussion_content":"现实中，mysql确实会出现binlog还没有“落盘”，只是刷到 page cache 中，就返回客户端事务提交成功的情况。但是，binlog可能已经同步到从库了。如果，出现主库断电，备库升级为主库，那么新主库就会继续将relay log的数据更新，包括旧主库没有“落盘”的binlog。那么，当旧主库重启之后，它会进行redolog 和 binlog 的检查，因为掉电磁盘中的binlog是缺少了日志的，redolog 和 binlog 一致，并没有恢复数据。这时，就出现了旧主库和新主库数据不一致的问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639643092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301043,"user_name":"YarnLiu_刘阳_RD","can_delete":false,"product_type":"c1","uid":1441586,"ip_address":"","ucode":"BA5943C0401FA8","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/32/02d49175.jpg","comment_is_top":false,"comment_ctime":1625492601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625492601","product_id":100035801,"comment_content":"按用户id分表，导致数据不均衡，有些表数据量很大，有些数据很少;按照id来分表，数据均匀了，但是查询起来麻烦了，有啥完美方案","like_count":0},{"had_liked":false,"id":299725,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1624836010,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1624836010","product_id":100035801,"comment_content":"sql server、redis 这两个也有主从复制。","like_count":0},{"had_liked":false,"id":290483,"user_name":"巧克力猪","can_delete":false,"product_type":"c1","uid":2596087,"ip_address":"","ucode":"13285401196A1A","user_header":"https://static001.geekbang.org/account/avatar/00/27/9c/f7/04cc944d.jpg","comment_is_top":false,"comment_ctime":1619584160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619584160","product_id":100035801,"comment_content":"老师你好，有个问题一直困扰我，烦请解答：<br>mysql或者redis一主多从的情况下，多个从机复制进度不同，读请求发送到不同的从机上，得到的结果是否会不一样？还是说像kafka一样，有水位线的设计，读到的只能是水位线以下的数据？","like_count":0},{"had_liked":false,"id":284107,"user_name":"知鱼君","can_delete":false,"product_type":"c1","uid":1076719,"ip_address":"","ucode":"8B1958BEB5FB2C","user_header":"https://static001.geekbang.org/account/avatar/00/10/6d/ef/08132ab2.jpg","comment_is_top":false,"comment_ctime":1616066734,"is_pvip":false,"discussion_count":3,"race_medal":2,"score":"1616066734","product_id":100035801,"comment_content":"老师好，有次面试被问到一个问题，MySQL主从同步延时是受什么影响。对此你有什么高见吗？","like_count":0,"discussions":[{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539215,"discussion_content":"1，备库部署的硬件性能低，以为从库，就不需要那么好的硬件。\n2，如果主备的硬件性能一致，那么可能是运营团队对备库随意使用，反而造成从库比主库压力更大。主库克制，备库就是后妈生的。（哈哈）\n3，主库的大事务，传到备库执行，备库也是大事务，例如大表的DDL事务，或者一次删除很多的delete操作等。\n4，备库是单线程 SQL_Thread 执行relay_log，主库的生成的binlog，从库消费跟不上。在mysql 5.7.22 之后有并行复制的功能，可以解决。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639643760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1076719,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6d/ef/08132ab2.jpg","nickname":"知鱼君","note":"","ucode":"8B1958BEB5FB2C","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":539799,"discussion_content":"谢谢解答！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639842012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539215,"ip_address":""},"score":539799,"extra":""}]},{"author":{"id":1092169,"avatar":"https://static001.geekbang.org/account/avatar/00/10/aa/49/51790edb.jpg","nickname":"落尘kira","note":"","ucode":"D203B519E43F85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369902,"discussion_content":"网络、数据量、主从设备性能差异、机器故障重启时间窗等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619190346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217425,"user_name":"船","can_delete":false,"product_type":"c1","uid":1675131,"ip_address":"","ucode":"FCB0C3A9F5E24D","user_header":"https://static001.geekbang.org/account/avatar/00/19/8f/7b/6cf6ffdf.jpg","comment_is_top":false,"comment_ctime":1589503777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589503777","product_id":100035801,"comment_content":"首先从库在连接到主节点时会创建一个 IO 线程，用以请求主库更新的 binlog，并且把接收到的 binlog 信息写入一个叫做 relay log 的日志文件中，而主库也会创建一个 log dump 线程来发送 binlog 给从库；<br><br>老师这块没看懂，为啥要有两个线程啊","like_count":0},{"had_liked":false,"id":216487,"user_name":"seg-上海","can_delete":false,"product_type":"c1","uid":1760320,"ip_address":"","ucode":"46BA8DCB06ED5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLBllicLBj61g1ibmCeWzLYpQYEteTOtAAAypoIg6CD19ibXQBbM09VsME9Ta1G8ubwk0ibjiacItavibaeg/132","comment_is_top":false,"comment_ctime":1589270370,"is_pvip":false,"replies":[{"id":"82723","content":"业务上不知道什么时候从库更新完成了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591538815,"ip_address":"","comment_id":216487,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589270370","product_id":100035801,"comment_content":"“在更新完主库之后，会将微博的 ID 写入消息队列“ 这个可能有主从同步延迟，导致读不到从库的数据，那为什不在更新完从库之后，再将微博ID写到消息队列呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494837,"discussion_content":"业务上不知道什么时候从库更新完成了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591538815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204677,"user_name":"孟见大侠","can_delete":false,"product_type":"c1","uid":1661872,"ip_address":"","ucode":"428C84FB5332DF","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/b0/50bc0dd7.jpg","comment_is_top":false,"comment_ctime":1586440310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586440310","product_id":100035801,"comment_content":"如果主节点宕机，从多个从节点中怎么选出一个升级为主节点呢？","like_count":0},{"had_liked":false,"id":195409,"user_name":"lofaith","can_delete":false,"product_type":"c1","uid":1322553,"ip_address":"","ucode":"5DF6922BBF1AD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/39/7682b49e.jpg","comment_is_top":false,"comment_ctime":1585186206,"is_pvip":false,"replies":[{"id":"75180","content":"可以重新同步","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585700636,"ip_address":"","comment_id":195409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585186206","product_id":100035801,"comment_content":"老师，只写入主节点就返回成功，是只有主库宕机才会导致binlog 同步到从库的数据不一致吗，还有其他情况吗，如果出现这种情况怎么解决呢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489054,"discussion_content":"可以重新同步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585700636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171276,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1578891278,"is_pvip":false,"replies":[{"id":"66912","content":"是的，第一次遇到会觉得很诡异","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579228574,"ip_address":"","comment_id":171276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578891278","product_id":100035801,"comment_content":"第一次使用主从的时候碰到了主从延时，那时候就感觉很奇怪，明明很简单的数据更新&#47;插入，查询却查不到。<br>哈哈，后面这种情况又经历了几次，好歹能第一时间发现问题所在了","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481285,"discussion_content":"是的，第一次遇到会觉得很诡异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579228574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167773,"user_name":"ezekiel","can_delete":false,"product_type":"c1","uid":1158795,"ip_address":"","ucode":"AB4AB6FA8612D8","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/8b/43ce01ca.jpg","comment_is_top":false,"comment_ctime":1577932525,"is_pvip":false,"replies":[{"id":"65161","content":"新增数据时可以增加分布式锁，保证同时只有一个客户端在写入","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577955200,"ip_address":"","comment_id":167773,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577932525","product_id":100035801,"comment_content":"老师您好！<br><br>缓存的方案比较适合新增数据的场景，我有一个疑问。新增的数据的场景，具体的方案是怎样的？是如何保证不会出现数据不一致的呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479986,"discussion_content":"新增数据时可以增加分布式锁，保证同时只有一个客户端在写入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577955200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166144,"user_name":"Sorry^HK","can_delete":false,"product_type":"c1","uid":1249824,"ip_address":"","ucode":"0392E272E1B81C","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/20/b08f0ca0.jpg","comment_is_top":false,"comment_ctime":1577408951,"is_pvip":false,"replies":[{"id":"63457","content":"可以show slave status看里面有second behind master的统计，也可以比较bin log的位置","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577491884,"ip_address":"","comment_id":166144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577408951","product_id":100035801,"comment_content":"老师，如何排查主从的延迟出现秒级","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479417,"discussion_content":"可以show slave status看里面有second behind master的统计，也可以比较bin log的位置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577491884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163958,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1576834385,"is_pvip":false,"replies":[{"id":"63077","content":"可以写入的时候优先中缓存，从缓存中查","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577242611,"ip_address":"","comment_id":163958,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576834385","product_id":100035801,"comment_content":"主从数据库通过binlog来同步，从库获取到主库binlog放入relaylog，然后重放relaylog来达到和主库一直。主从的情况最突出的问题就是主从不一致的问题，解决方案就是1）业务处理，没必要增加后立即查的就延迟查或不查（用现有数据）；2）必须立即查的情况下就只能强制走主库了。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478595,"discussion_content":"可以写入的时候优先中缓存，从缓存中查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577242611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157552,"user_name":"退役的球童","can_delete":false,"product_type":"c1","uid":1196234,"ip_address":"","ucode":"CD5157830D9606","user_header":"https://static001.geekbang.org/account/avatar/00/12/40/ca/1313a90b.jpg","comment_is_top":false,"comment_ctime":1575192168,"is_pvip":false,"replies":[{"id":"60620","content":"会有的~  感谢建议~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575367310,"ip_address":"","comment_id":157552,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575192168","product_id":100035801,"comment_content":"老师，你好。有关演进篇的内容能不能附带提供一下代码化的实验demo啊。这样子对于学习帮助更大。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476463,"discussion_content":"会有的~  感谢建议~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575367310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155580,"user_name":"SuperYue","can_delete":false,"product_type":"c1","uid":1232077,"ip_address":"","ucode":"97DEDA055C462A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","comment_is_top":false,"comment_ctime":1574706822,"is_pvip":false,"replies":[{"id":"60244","content":"其实你很难判断是不是“最新”数据","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575015877,"ip_address":"","comment_id":155580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574706822","product_id":100035801,"comment_content":"主从延迟问题的另一个方案，可以先读从库，根据实际业务，如果查询为null或者可以判断出不是最新数据，再走一次主库 <br>让从库档住大量查询，主库来补漏高延迟数据","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475798,"discussion_content":"其实你很难判断是不是“最新”数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575015877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153071,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1574152689,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574152689","product_id":100035801,"comment_content":"Canal监听binlog是不是解决延迟的另一种方案呢？","like_count":0},{"had_liked":false,"id":148285,"user_name":"青春超无敌","can_delete":false,"product_type":"c1","uid":1322443,"ip_address":"","ucode":"409F5DA89B028F","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/cb/206c8a03.jpg","comment_is_top":false,"comment_ctime":1572968086,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1572968086","product_id":100035801,"comment_content":"第一种方案是数据的冗余。你可以在发送消息队列时不仅仅发送微博 ID，而是发送队列处理机需要的所有微博信息，借此避免从数据库中重新查询数据<br><br>如果写主库失败，数据需要回滚，这个时候发出去的消息该怎么办","like_count":0,"discussions":[{"author":{"id":1755152,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","nickname":"Info_E","note":"","ucode":"97207B2CC4C776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352570,"discussion_content":"为什么不写主成功后 再发MQ呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614773472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45180,"discussion_content":"这位兄台的问题还真的值得好好的想一想，老师这个例子主要是为了解释如果只传ID但是异步复制延迟导致不能及时获取body的一个解决方案，其实是一个局部问题的缓解方案，但兄台的问题的视角恐怕是站在更宏观的分布式系统数据一致性问题，甚至在看老师这个场景的时候着眼点不是延迟本身，而是被自己转换成信息可达的问题，所以才会反问我这么努力的送达了内容之后，消息源那里却特么的回退了，一致性怎么解决...站在这角度看问题，从技术手段上来看解决起来更复杂\n\n我一般遇到这种问题都退一步先想想业务场景\n\n首先，老师提到了它是一个异步场景，为什么是异步的呢？因为实际上游消息源本身就不是特别关心下游是个什么东西在消费，或者它消费对我会有什么影响，具体到这里，发个推其实甭说和审核了，和这个推展示到fans的时间线估计都是异步的\n\n其次，审核，如果应用发送完整body的这种解决方案...我想说主库回滚就回滚了吧，审核的系统如果是自动的造成点浪费应该也没啥，现在应该不用害怕机器会造反；如果是人工的，辛苦审核的同学了，如果是MM，请她吃甜品！\n\n最后，我觉得其实如果就这个场景就为了延迟这个问题，可能没必要这么大动干戈，既然那边有延迟结果先到我这了，可能多等一会儿就行了，不是说了毫秒级的同步预期么，还是等的起的...等也有很多种办法，不阻塞当然是最好的，自己本地队列还是扔回到来源队列，只要设计好消息结构，最终能有一个超时放弃记异常日志供今后研发运维排查用估计也就够了\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573010254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147807,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1572908319,"is_pvip":false,"replies":[{"id":"57032","content":"应用程序读写DB的方式有变化，文中有提及了。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572938880,"ip_address":"","comment_id":147807,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572908319","product_id":100035801,"comment_content":"数据库读写分离了，应用程序应该也读写分离。这里没提及。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473312,"discussion_content":"应用程序读写DB的方式有变化，文中有提及了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572938880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147188,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1572835013,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572835013","product_id":100035801,"comment_content":"在AWS的RDS服務中，亞馬遜提供了aurora數據庫，這是一個基於MySQL和postgreSQL的讀寫分離數據庫集群，基於亞馬遜內部的主從複製技術可以簡單的實現數據同步，對於用戶來說aurora本身也是個讀寫分離中間件，開發人員無須關注讀寫分離的實現規程，是非常好用的易部署的數據庫方案，如果有使用AWS的朋友可以考慮數據部署在aurora裡","like_count":0,"discussions":[{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45199,"discussion_content":"我刚一看以为读写分离到mysql和postgresql两个库里面，吓了个半死...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573012161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143413,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1571706716,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1571706716","product_id":100035801,"comment_content":"防止主从延迟的注意点之一是不要使用耗时长的事务","like_count":0,"discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":151093,"discussion_content":"是的，MySQL专栏25讲就提到了这点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579854484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45210,"discussion_content":"我觉得这篇就没提到事务...流程里面都没提commit的事情","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573013005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143406,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1571706168,"is_pvip":false,"replies":[{"id":"55495","content":"其实你不知道延迟几秒好，如果主从同步故障了呢","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571792679,"ip_address":"","comment_id":143406,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571706168","product_id":100035801,"comment_content":"老师，对于实时性要求不高的，仍用MQ存记录ID，但延时几秒发送消息，等待从库同步，也可以吧","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471519,"discussion_content":"其实你不知道延迟几秒好，如果主从同步故障了呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571792679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45212,"discussion_content":"这位兄台跟我的想法差不多，不过我是觉得接收方来做：没命中再等一会儿重试就可以了，甚至可以多等几次，延迟等待时间应该基于监控和预期的复制延迟来设定，同时任何的重试等待方案也没有无限等下去的吧，都会有容错中止条件以保证队列资源并不会因此被无限的消耗下去，尤其记必要的日志和届时的主从复制监控信息做对比复盘互相印证更有参考价值，其实什么方案都得考虑一些异常问题，万无一失的很少，主从复制故障也许可以作为单一延迟设置的反对理由，无法构成这位兄台方案思路的反对理由\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573013706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140608,"user_name":"Hinimix","can_delete":false,"product_type":"c1","uid":1316937,"ip_address":"","ucode":"7994136C93BD89","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/49/b1d864e5.jpg","comment_is_top":false,"comment_ctime":1571015537,"is_pvip":false,"replies":[{"id":"54393","content":"不会吧 disconf不需要重启应用的呀<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571036803,"ip_address":"","comment_id":140608,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571015537","product_id":100035801,"comment_content":"老师，应用配置管理怎么办，线上数据库压力大加了从库如何让应用生效，我们的配置文件放在应用内，disconf，apollo都需要重启才生效","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470466,"discussion_content":"不会吧 disconf不需要重启应用的呀\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571036803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45214,"discussion_content":"我也有点没搞明白哥们儿的问题...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573013824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140218,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1570852476,"is_pvip":false,"replies":[{"id":"54304","content":"可以依据穿透到DB的QPS<br>也可以观察数据库的读写响应时间","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570970618,"ip_address":"","comment_id":140218,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570852476","product_id":100035801,"comment_content":"老师好，<br>文章提到备战双十一，引发查询流量剧增，然后采用“主从读写分离”。<br>在真实环境中，流量一般都是渐变的，即逐渐增加。在这样的情况下，怎么确定系统到了需要采用“主从读写分离”的点呢？<br>谢谢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470303,"discussion_content":"可以依据穿透到DB的QPS\n也可以观察数据库的读写响应时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570970618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45215,"discussion_content":"老师正解，一切来源于测量，运维监控可视化非常有价值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573013882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139203,"user_name":"拒绝","can_delete":false,"product_type":"c1","uid":1335155,"ip_address":"","ucode":"CB0264C4D3FE17","user_header":"https://static001.geekbang.org/account/avatar/00/14/5f/73/bb3dc468.jpg","comment_is_top":false,"comment_ctime":1570586478,"is_pvip":false,"replies":[{"id":"53678","content":"可以访问主库，也可以写入时先中缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570600933,"ip_address":"","comment_id":139203,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570586478","product_id":100035801,"comment_content":"在主从同步数据时，从节点出现数据同步失败（不是主从延迟），读从库时没有数据，这时候是要去访问主库了吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469841,"discussion_content":"可以访问主库，也可以写入时先中缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570600933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45226,"discussion_content":"其实还是要看业务对不同类故障的容忍度来确定策略，缓存方案的思路其实暗含着缓存可靠性比主从复制可靠性高的假设的...最让人尴尬的是这个假设其实不太好定量的去证伪，定性的分析感觉是要比主从复制靠谱得多的感觉，别问我为啥，就是感觉而已...","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573014508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138920,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1570506316,"is_pvip":false,"replies":[{"id":"53641","content":"中间件不是单点的，也是一个集群来支撑的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570583011,"ip_address":"","comment_id":138920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570506316","product_id":100035801,"comment_content":"感谢老师分享，对于中间件来讲，应该也需要做到高可用吧？ 因为中间件的性能也会达到瓶颈哦，如果只有一个单点进行连接的话，出了问题整个系统不就瘫痪了么？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469701,"discussion_content":"中间件不是单点的，也是一个集群来支撑的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570583011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138870,"user_name":"ysl","can_delete":false,"product_type":"c1","uid":1501496,"ip_address":"","ucode":"06398A1F9149EB","user_header":"","comment_is_top":false,"comment_ctime":1570496351,"is_pvip":false,"replies":[{"id":"53486","content":"是苹果自带的Keynote哈~😋😋😋","user_name":"编辑回复","user_name_real":"朱会","uid":"1564447","ctime":1570498124,"ip_address":"","comment_id":138870,"utype":2}],"discussion_count":2,"race_medal":0,"score":"1570496351","product_id":100035801,"comment_content":"求教，老师的图是用什么工具画的，比较清晰","like_count":0,"discussions":[{"author":{"id":1564447,"avatar":"https://static001.geekbang.org/account/avatar/00/17/df/1f/650a1d51.jpg","nickname":"小白兔奶糖","note":"","ucode":"AD0B858CFD1304","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469677,"discussion_content":"是苹果自带的Keynote哈~😋😋😋","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570498124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097416,"avatar":"https://static001.geekbang.org/account/avatar/00/10/be/c8/7c5f324f.jpg","nickname":"港岛妹夫","note":"","ucode":"9F6AAA29B60D8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49763,"discussion_content":"竟然是KeyNote  从没用过... 看来我可以把我的微软全家桶卸载了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573632592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}