{"id":625602,"title":"22｜泛化建模（上）：领域知识更抽象怎么办？","content":"<p>你好，我是钟敬。</p><p>上节课，我们学习了“限定”技术。利用这个技术可以丰富模型的语义并简化关联。今天，我们要挑战领域建模中的另一个话题——泛化。</p><p>泛化是领域建模技能由初级水平迈向中、高级水平的门槛。也就是说，如果不懂泛化，那么你的领域建模水平就始终停留在中级以下。初步掌握了泛化，那么你的水平可能就能达到中级。把泛化玩得出神入化，那么大概就能达到高级水平了。</p><p>领域建模层面的泛化，大体上相当于面向对象设计中的继承和多态。如果你学习过“设计模式”的话，还记得刚开始的“痛苦”吗？其实，整本《设计模式》，无非是教你怎么灵活运用多态罢了。而在领域建模层面，与《设计模式》对应的就是《分析模式》。整本《分析模式》也无非是教你怎么成为使用泛化的高手。</p><p>我们现在要讲的内容，尽管达不到“分析模式”的高度，但是可以为你将来的学习打下基础，帮你在实际工作中解决一些相对复杂的问题了。</p><p>我安排了5节课的时间，带你分别由泛化的建模、泛化的数据库设计以及泛化的代码实现由浅入深地认识和理解泛化。</p><p>这节课会围绕着“在子项目上报工时”这个需求来展开讨论，演示泛化的建模方法。还是老办法，我作项目经理，你作架构师。</p><h2>项目和子项目的“泛化”</h2><p>我先来回顾一下需求：我们把业务由“零零后公司”扩展到了“九零后公司”，而“九零后公司”会把项目进一步分为子项目，然后在子项目上报工时。</p><!-- [[[read_end]]] --><p>先看看目前的模型是什么样（下图省去了和这节课无关的部分）。<br>\n<img src=\"https://static001.geekbang.org/resource/image/26/9b/26bfd8819b74f3e1ec6bf029e421789b.jpg?wh=2723x2316\" alt=\"\"></p><p>根据需求，你第一步，先在模型里增加<strong>子项目</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/da/6c5ef3483fc34727647f2593c69f4cda.jpg?wh=2754x2154\" alt=\"\"></p><p>上图说明，一个<strong>项目</strong>可以没有<strong>子项目</strong>，也可以有多个<strong>子项目</strong>。不过，现在这张图里还没有说明可以在<strong>子项目</strong>上报<strong>工时</strong>。</p><p>于是，你又在<strong>工时记录</strong>和<strong>子项目</strong>之间增加了一个一对多的关联。<br>\n<img src=\"https://static001.geekbang.org/resource/image/24/df/2418145d2c6af310866f4c82317008df.jpg?wh=2824x2192\" alt=\"\"></p><p>增加了这个关联以后，确实可以说明在子项目上能登记工时了。但是我发现，在项目和子项目一端，两个多重性都是“1..1”，这似乎有问题呀？</p><p>你想了一下，发现确实有问题。就拿<strong>项目</strong>和<strong>工时记录</strong>的关联来说，“1..1”的后一个 1 没有问题，但前一个 1 说明了，一条<strong>工时记录</strong>必然关联一个<strong>项目</strong>，这就不对了。因为，如果有的<strong>工时记录</strong>是报到<strong>子项目</strong>上的，那么就不会对应一个<strong>项目</strong>了。所以应该改为“0..1”才对。同样的道理，子项目一端也应该改为“0..1”。</p><p>于是，你把图改成下面这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/0b/64/0bf04d4ac656c76f9efe52f24197be64.jpg?wh=2963x2268\" alt=\"\"></p><p>现在的模型确实解决了刚才的问题。但是你很快又发现一个新问题。现在的模型意味着，一条<strong>工时记录</strong>可以既不关联一个<strong>项目</strong>，也不关联一个<strong>子项目</strong>；另一方面，一条<strong>工时记录</strong>可以既关联一个<strong>项目</strong>，也关联一个<strong>子项目</strong>。这显然是不对的。</p><p>正确的逻辑应该是：<strong>一条工时记录要么关联一个项目，要么关联一个子项目，但不能同时关联两者，也不能两者都不关联</strong>。运用目前我们已经掌握的建模技术，只能用注释的形式增加一个约束。</p><p>于是，你把模型改成下面这样。<br>\n<img src=\"https://static001.geekbang.org/resource/image/2a/yy/2a0c0d449bc4a59fbc9334b5c7b6c7yy.jpg?wh=2963x2310\" alt=\"\"></p><p>一般来说，如果能够用UML里自带的建模符号，比如说类、关联等等，那么应该优先使用建模符号，而利用注释和约束，其实是一种“补救”措施。那么，在UML里有没有一个符号，可以帮助我们表达这种约束呢？其实是有的，这就是我们今天想介绍的主角——“泛化”。</p><p>在正式引入这个符号之前，我先从另一个角度捋一下这个逻辑：<strong>项目</strong>和<strong>子项目</strong>都是可以报工时的“东西”。而一条<strong>工时记录</strong>，必须要关联到一个这种“东西”上。</p><p>你问我：“那么这个‘东西’应该叫什么呢？”我说：“就叫‘工时项’吧。”有了这个名词以后，我们可以把这个逻辑再说一遍：<strong>项目和子项目统称为“工时项”，一个工时项可以关联0到多条工时记录，一条工时记录必须关联且仅关联一个工时项</strong>。</p><p>根据这个表述，我接过键盘，通过一个新的符号，把模型改成了下面的样子。<br>\n<img src=\"https://static001.geekbang.org/resource/image/57/af/5725e170e949a6b0e63a17ab9aebc2af.jpg?wh=2990x2268\" alt=\"\"></p><p>图里面的空心三角，就表示前面说的“统称”的关系，由于<strong>工时项</strong>的含义比起<strong>项目</strong>和<strong>子项目</strong>要更“广泛”，所以这种关系在UML里叫做“泛化”（generalization）。这时候，<strong>工时项</strong>称为<strong>项目</strong>和<strong>子项目</strong>的“父类”，而<strong>项目</strong>和<strong>子项目</strong>称为<strong>工时项</strong>的“子类”。</p><p>也就是说，如果A类和B类可以统称为C类的话，C类和A、B两个类就具有泛化关系，其中C是父类，A和B是子类。泛化关系用一个空心箭头表示，由子类指向父类。</p><p>除了“统称”以外，泛化关系转换成自然语言，还可以有另外三种说法。</p><p>第一种说法是，<strong>工时项</strong>分成两类，一类是<strong>项目</strong>，另一类是<strong>子项目</strong>。也就是说，泛化表示的是一种“分类”关系。例如生物可以分成动物和植物，动物又可以分成哺乳动物和爬行动物等等。</p><p>第二种说法是，一个<strong>项目</strong>是一个<strong>工时项</strong>，一个<strong>子项目</strong>也是一个<strong>工时项</strong>。也就是所谓“是一个”（is-a）的关系。</p><p>第三种说法是，<strong>项目</strong>和<strong>子项目</strong>具有“共性”，也就是都能报工时。我们把这个共性的概念提取出来，称为<strong>工时项</strong>。另一方面，<strong>项目</strong>和<strong>子项目</strong>又具有“个性”，也就是两者有差别，比如说，要为项目分配项目经理，而子项目则不需要。</p><p>“统称”“分类”“是一个”以及“共性/个性”这四种说法，虽然从表面上看不同，背后的含义却是完全一样的。在领域模型里，不论哪种说法，都可以用泛化来表达。总的来说，<strong>泛化是一种强大的抽象机制，能够同时表现出不同对象间的共性和个性</strong>。</p><p>引入了<strong>工时项</strong>以后，你还注意到了模型图里其他几个变化。</p><p>首先，原来<strong>工时记录</strong>和<strong>项目</strong>还有<strong>子项目</strong>之间的两条关联不见了，取而代之的是，<strong>工时记录</strong>和<strong>工时项</strong>之间的一条一对多关联。这是因为，<strong>父类的属性、规则、关联等等要素，都可以被子类继承</strong>。所以，<strong>工时项</strong>和<strong>工时记录</strong>之间有一对多的关联，也就意味着<strong>工时项</strong>的子类，<strong>项目</strong>和<strong>子项目</strong>，都和<strong>工时记录</strong>有这种关联，所以就不需要重复了，重复画的话反而是错的。</p><p>其次，工时项一端的多重性变回了“1..1”，这也就表达了前面说的<strong>一条工时记录必须关联且仅关联一个工时项</strong>这一业务规则。</p><p>最后，我们刚刚为<strong>工时记录</strong>添加的那条约束被删除了，这是因为修改过的模型本身已经表达了这个约束。</p><h2>普通工时项</h2><p>通过引入泛化，我们解决了在子项目上报工时的需求。现在，我接着说说来自另一家企业“八零后公司”的需求。他们既可以按项目，也可以按子项目报工时，这些我们已经基本解决了。</p><p>但是，他们还有一些活动和具体项目无关，比如说：员工在项目不紧张的时候，可以利用空余时间学习；或者，管理者常常花大量时间在管理和沟通上，其中有一些时间很难归入某一个具体的项目。而这家公司希望也能为这些不属于任何项目的活动报工时。</p><p>你的第一个想法是：借用<strong>项目</strong>的概念。也就是说，建几个特殊的项目，就叫“学习时间”“管理时间”等等。然后大家就可以像普通项目那样报工时了。</p><p>但我对这个思路提出了质疑：“<strong>学习时间</strong>和我们一般人理解的<strong>项目</strong>，是两个不同的概念。如果我们借用了项目来表达学习时间，虽然在短期内解决了问题，但如果开了这个口子，那么混淆的概念就会越来越多，系统就会越来越难以理解和维护。”</p><p>事实上，直接“借用”系统中已经存在的机制，在短期内虽然达到了目的，但长期来看会导致概念混乱，这种做法是很多开发团队常见的错误。而错误的根源，就在于我们没有掌握一种优雅的方法，来处理不同概念的共性和个性。<strong>学习时间</strong>和<strong>项目</strong>，既然都可以报工时，那么两者必然存在着共性。现在你应该已经想到了，这个共性就是前面已经抽象出来的<strong>工时项</strong>。</p><p>于是你又问了我一个问题：“学习时间和管理时间，以及其他不算作项目的时间，有没有一个统一的称呼呢？”我说：“就叫<strong>普通工时项</strong>吧。”基于这个理解，你画出了下面的模型图。</p><p><img src=\"https://static001.geekbang.org/resource/image/41/24/41d50d87c3ff70f6yyb7282011d3da24.jpg?wh=2993x2332\" alt=\"\"></p><p>你为<strong>工时项</strong>增加了一个<strong>普通工时项</strong>的子类。同时，你把<strong>工时记录</strong>的约束做了相应的修改，变成了“<strong>对于项目和子项目</strong>，员工只能在被分配的项目上报工时”以及“<strong>对于项目和子项目</strong>，只有在项目有效期内才能报工时”。</p><p>这时，我又问了你一个问题：“<strong>普通工时项</strong>和项目管理已经没有关系了，还把它放在项目管理模块里，这合适吗？”你也感觉不太合适了。由于<strong>普通工时项</strong>是用于工时管理的，所以你把<strong>普通工时项</strong>移到了工时管理模块。</p><p><img src=\"https://static001.geekbang.org/resource/image/ed/19/edee450828258eb27225e4e3b6d32919.jpg?wh=3350x2228\" alt=\"\"></p><p>紧跟着我又问了一个问题：“<strong>工时项</strong>还应该留在项目管理模块吗？”你思考了一下，说：“<strong>工时项</strong>应该是服务于工时管理的，而不是项目管理的关注点，所以，<strong>工时项</strong>也应该移入工时管理。”我们对此达成了共识，于是你把模型改成下面的样子。<br>\n<img src=\"https://static001.geekbang.org/resource/image/21/8d/214af3b4955802e3da1ccf2b9946728d.jpg?wh=3199x2280\" alt=\"\"></p><h2>隐式概念的显式化</h2><p>现在，今天的建模任务就基本完成了。我们再来回味一个有趣的问题。你可能已经注意到了，像“工时项”“普通工时项”“项目工时粒度”这些概念，在原来的业务术语里是没有的。在我们的抽象过程中才被发掘出来。</p><p>这其实是领域建模中的一种常见的现象。一些概念本来就隐含在业务逻辑内部，但没有经过抽象的话，往往不会感觉到，更不会有人来命名。</p><p>而一旦采用领域建模方法对领域知识进行抽象，这些概念就会暴露出来。这时候，开发人员和业务人员就要一起对这个抽象达成共识，并且给新发现的概念起一个恰当的名字，并把这个新词加入统一语言。这样，我们对领域知识的理解就又深化了一层。这就是《DDD》原书第 9 章中提到过的“隐式概念的显式化”。</p><h2>总结</h2><p>好，这节课的主要内容就讲到这，我们来总结一下。</p><p>今天我们讲了领域建模中一种比较高级的抽象机制——泛化。</p><p>泛化表示一种分类机制，能够对领域对象的共性和个性进行抽象。泛化用一个空心箭头表示。箭头由子类指向的是父类。子类会继承父类的属性、关联和逻辑。</p><p>假定C是父类，A和B是它的子类，那么对应到自然语言，可以有四种说法。</p><p>第一种，A和B统称为C，例如，甜粽子和咸粽子统称为粽子。</p><p>第二种，C可以分成A和B两类，例如，粽子可以分成甜粽子和咸粽子两类。</p><p>第三种，一个A是一个C，一个B也是一个C，例如，一个甜粽子是一个粽子，一个咸粽子也是一个粽子。</p><p>第四种，A和B具有共性，表示共性的概念称为C，例如，甜粽子和咸粽子具有共性，表示共性的概念称为粽子。</p><p>这四种说法表面上不同，实际上表达了完全相同的含义，都可以用同样的泛化关系来表示。</p><p>在建模的抽象过程中，我们还经常遇到隐式概念的显式化，从而引入新的词汇，丰富了统一语言，也深化了对领域知识的理解。</p><h2>思考题</h2><p>下面我给你留了两道思考题：</p><p>1.为什么<strong>学习时间</strong>和<strong>管理时间</strong>可以统称为<strong>普通工时项</strong>，但没有构成泛化关系呢？</p><p>2.在你的实际项目中，可以找到泛化的例子吗？</p><p>好，今天的课程结束了，有什么问题欢迎在评论区留言，下节课，我们把模型做得更灵活一些，并且看一看，有些情况下是不是可以不使用泛化。</p>","comments":[{"had_liked":false,"id":368000,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"浙江","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1675814812,"is_pvip":false,"replies":[{"id":133994,"content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1675830487,"ip_address":"广东","comment_id":368000,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"思考题，学习时间和管理时间虽然也可以进行分类，但是两者已经是原子属性了，没有必要进行抽象，所以不构成泛化关系","like_count":10,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602643,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675830487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367303,"user_name":"子衿","can_delete":false,"product_type":"c1","uid":1903229,"ip_address":"浙江","ucode":"E76CC673517290","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0a/7d/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1675128050,"is_pvip":false,"replies":[{"id":133820,"content":"这个理由也说得通","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1675180728,"ip_address":"广东","comment_id":367303,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"1. 因为学习时间和管理时间，只有共性没有个性部分，所以不必泛化","like_count":10,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601290,"discussion_content":"这个理由也说得通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675180729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369163,"user_name":"Geek_66158e","can_delete":false,"product_type":"c1","uid":1463987,"ip_address":"浙江","ucode":"8C3A579A715726","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/cQVffRuscdhnF5vnQjgAZnbLwHDALl3TsAQsgEYCYPVfuFMSkyaTUXHs2aA0ORpx7AjI3LTR2ibKw2Q0VepymqA/132","comment_is_top":false,"comment_ctime":1677164318,"is_pvip":false,"replies":[{"id":134799,"content":"这个角度很棒","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1677939711,"ip_address":"广东","comment_id":369163,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"问题一：因为从报工时的角度来看，已经不再关心普通工时项下的“个性”了，普通工时项这种“共性”对于报工时来说已经有意义的最小的粒度了。","like_count":8,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607562,"discussion_content":"这个角度很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677939711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368512,"user_name":"6点无痛早起学习的和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"北京","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1676421355,"is_pvip":false,"replies":[{"id":135173,"content":"您列出了共性，但没有列出个性。如果有个性（不同的属性，不同的算法等），可以考虑用泛化，否则就不要用泛化了。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678974786,"ip_address":"广东","comment_id":368512,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"思考题 2：想到一个实际上的场景，但是拿捏不定是不是泛化\n父类：账户项\n子类：现金账户、备付金账户、待清算账户等等\n\n每个账户项都有余额属性：可用余额、冻结余额","like_count":4,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609430,"discussion_content":"您列出了共性，但没有列出个性。如果有个性（不同的属性，不同的算法等），可以考虑用泛化，否则就不要用泛化了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678974786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1057456,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/b0/050676f5.jpg","nickname":"樱花","note":"","ucode":"432F43127D847A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":653537,"discussion_content":"老师，你的画图工具是啥，这个领域模型图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731066419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":609430,"ip_address":"广东","group_id":0},"score":653537,"extra":""},{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":1057456,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/b0/050676f5.jpg","nickname":"樱花","note":"","ucode":"432F43127D847A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653541,"discussion_content":"drawio","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731075040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":653537,"ip_address":"北京","group_id":0},"score":653541,"extra":""}]}]},{"had_liked":false,"id":368424,"user_name":"赵晏龙","can_delete":false,"product_type":"c1","uid":2673605,"ip_address":"湖南","ucode":"F15730BCA97EE0","user_header":"https://static001.geekbang.org/account/avatar/00/28/cb/c5/c1d7ca5e.jpg","comment_is_top":false,"comment_ctime":1676336467,"is_pvip":false,"replies":[{"id":134201,"content":"幸亏没引起豆腐脑战争","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1676419492,"ip_address":"广东","comment_id":368424,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"老师你的总结是想引发粽子战争吗？\n\n1. 粽子……不是，学习时间和管理时间在业务需求上没有需要泛化的必要，泛化则变成了过度设计。\n\n2. 我现在满脑子粽子，等我缓缓","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":604646,"discussion_content":"幸亏没引起豆腐脑战争","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1676419492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":604589,"discussion_content":"哈哈哈，粽子战争不至于，粽子比喻是手段不是目的，只是举个生活化的例子方便大家记忆理解。也欢迎同学们贡献自己项目里的案例来丰富“隐式概念的显式化”。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676369421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367483,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"浙江","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1675258620,"is_pvip":false,"replies":[{"id":135192,"content":"没毛病，继续努力！","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678978167,"ip_address":"广东","comment_id":367483,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"思考题\n1. 「学习时间」和「管理时间」所有属性都相同，添加一个新属性「类型」就可以进行区分\n2. 封装第三方登录（微信、手机号、QQ）；封装第三方支付（支付宝、微信、银联）；封装不同等级用户提现时的手续费计算逻辑\n\n其他想法\n1.「工时记录」中需要新加一个属性「类别」，这样方便以后按类别查找记录（由泛化引发的一个坑）\n2. 今天刚好读到《DDD》第 9 章，趁热打铁，又多理解了一点\n3. 感觉「泛化」就像代码中的「接口」。写代码时「面向抽象编程」，建模时「面向抽象建模」。当一个程序员，不会「抽象」还真吃力啊！\n4. 「直接“借用”系统中已经存在的机制，在短期内虽然达到了目的，但长期来看会导致概念混乱，这种做法是很多开发团队常见的错误」这是我们项目中的常态，开发一时爽，后来很多人走了……\n5. 明白了 Predicate（谓词&#47;谓语） 在编程中的意思：谓词是指计算结果为「真」或「假」的函数，并且可以使用操作符（如 AND 和 OR）把它们连接起来以表达更复杂的规则。\n—— 《领域驱动设计 软件核心复杂性应对之道》9.2.3 模式： SPECIFICATION\n钟老师还提到了一本书：《离散数学》，里面的一阶谓词理论，就是说这个","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609457,"discussion_content":"没毛病，继续努力！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1678978167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367300,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"陕西","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1675127006,"is_pvip":false,"replies":[{"id":134091,"content":"泛化实现已经更新了，可以去看啦！","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1676084389,"ip_address":"北京","comment_id":367300,"utype":2}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"期待老师讲泛化的数据库设计和代码实现，有些时候我在做项目的时候也觉得应该有泛化，但是只体现在模型设计上，但是不懂怎么体现在数据库设计和代码实现上，导致很多想法就此打住。","like_count":1,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":603292,"discussion_content":"泛化实现已经更新了，可以去看啦！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1676084389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":1,"child_discussions":[{"author":{"id":1015222,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","nickname":"Michael","note":"","ucode":"27EB4A725CE14E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"discussion":{"id":604603,"discussion_content":"嗯嗯 已经在学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676376640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":603292,"ip_address":"陕西","group_id":0},"score":604603,"extra":""}]}]},{"had_liked":false,"id":367292,"user_name":"小5","can_delete":false,"product_type":"c1","uid":1074736,"ip_address":"广东","ucode":"F99936F37D04E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/30/ce2cc535.jpg","comment_is_top":false,"comment_ctime":1675122767,"is_pvip":false,"replies":[{"id":135197,"content":"是这么个意思","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678979040,"ip_address":"广东","comment_id":367292,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"回答问题1：因为两者有共性但是没有业务上关注的差异性","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609465,"discussion_content":"是这么个意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678979040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395809,"user_name":"Sam_Deep_Thinking","can_delete":false,"product_type":"c1","uid":1001152,"ip_address":"广东","ucode":"8E4EF6F24B821B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/c0/106d98e7.jpg","comment_is_top":false,"comment_ctime":1732151065,"is_pvip":false,"replies":[{"id":143757,"content":"感谢认可，共同进步 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1732502737,"ip_address":"广东","comment_id":395809,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"看了这篇文章后，对抽象的概念的理解，更加深刻了，感谢作者，写的真的非常细心和用心，这个DDD的实战专栏，堪称是极客时间里的【经典专栏】。\n\n有一定技术积累和工作经验的人，看这个专栏会非常的爽，偶尔还会有任督二脉被打通的感觉。再次感谢作者。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654342,"discussion_content":"感谢认可，共同进步 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732502737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385701,"user_name":"刘毅","can_delete":false,"product_type":"c1","uid":1853403,"ip_address":"上海","ucode":"7CB4F4BBC92027","user_header":"","comment_is_top":false,"comment_ctime":1703136818,"is_pvip":false,"replies":[{"id":141216,"content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1708157758,"ip_address":"广东","comment_id":385701,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"钟老师您好，结合您前面讲的第5节中组织与组织类别的抽象过程以及java面向对象思想，我的理解如下，不知道是否正确。\n\n值对象（个性）-&gt;实体（共性）与子实体（个性）-&gt;父实体（共性）两种机制都能够同时表现出不同实体间的共性和个性，两者主要的区别是个性部分在当前业务领域内是否复杂。\n若个性部分在当前业务领域内比较复杂（具有自己的标识、属性或方法等），则可用子实体实现；若个性部分在当前业务领域中比较简单（如只是简单划分几个枚举值），则可用值对象实现。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637233,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708157758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1853403,"avatar":"","nickname":"刘毅","note":"","ucode":"7CB4F4BBC92027","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634327,"discussion_content":"学习了您第23讲的内容，想要再补充一下，属性也可以表达出相同实体（共性）下不同对象间的个性，是最低层次、最简单的个性表达方式，向上依次复杂化的个性表达方式分别为值对象与子实体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1703221611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383031,"user_name":"Geek1560","can_delete":false,"product_type":"c1","uid":2028949,"ip_address":"上海","ucode":"5F27A28B8002E6","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/95/a362f01b.jpg","comment_is_top":false,"comment_ctime":1698324314,"is_pvip":false,"replies":[{"id":139700,"content":"项目和子项目作为工时项的共性，对于登记工时而言，是重要的。是否“很小”取决于主观的权衡。项目和子项目抽出更多的共性也是可以的，关键看用在哪里。有用就抽，否则没必要仅仅因为相似而抽。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1699070236,"ip_address":"广东","comment_id":383031,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"工时项作为项目和子项目的泛化有点怪怪的，仅仅因为它们有个很小的相同点是工时就做这种抽象是不是不太合适？项目和子项目的大部分信息应该都是相同的，而不仅仅是工时","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630929,"discussion_content":"项目和子项目作为工时项的共性，对于登记工时而言，是重要的。是否“很小”取决于主观的权衡。项目和子项目抽出更多的共性也是可以的，关键看用在哪里。有用就抽，否则没必要仅仅因为相似而抽。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699070236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371638,"user_name":"Geek_4e4ec2","can_delete":false,"product_type":"c1","uid":1603078,"ip_address":"云南","ucode":"6DAD5EE4FFB195","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zAZv4NyuS21Y1qk45j8JiaoEYdA5Zgc1PqpJsBokz5bZVmdkf6kNWvT4cUAAKAdH6TgN52DWZhiaH6wNFhw14nRg/132","comment_is_top":false,"comment_ctime":1680140343,"is_pvip":false,"replies":[{"id":135596,"content":"到这节课为止，还没有分上下文（只分类模块），所以不成问题。在第三个迭代分上下文以后（29课），会把这个问题解决掉。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1680161235,"ip_address":"广东","comment_id":371638,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"有个问题，将工时项移到工时管理后，项目实体岂不是要继承或实现工时项，但它们是在两个上下文里，相当于一个上下文里直接引用了另一个上下文中的领域对象，这样也没问题？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611543,"discussion_content":"到这节课为止，还没有分上下文（只分类模块），所以不成问题。在第三个迭代分上下文以后（29课），会把这个问题解决掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680161235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368691,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"福建","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/6af6d27e.jpg","comment_is_top":false,"comment_ctime":1676594369,"is_pvip":true,"replies":[{"id":135089,"content":"可以这么理解。两者之间除了名字不同，没有其他个性了。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678843397,"ip_address":"广东","comment_id":368691,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"“学习时间”和“管理时间”，我们是作为一个灵活工时项目来处理。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609117,"discussion_content":"可以这么理解。两者之间除了名字不同，没有其他个性了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678843397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367725,"user_name":"树袋熊🐨","can_delete":false,"product_type":"c1","uid":3204907,"ip_address":"广东","ucode":"3589700A259404","user_header":"https://static001.geekbang.org/account/avatar/00/30/e7/2b/c5e5ebc6.jpg","comment_is_top":false,"comment_ctime":1675514700,"is_pvip":false,"replies":[{"id":133948,"content":"可以的","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1675642006,"ip_address":"广东","comment_id":367725,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"项目和子项目是不是可以改为：项目、子项目、普通项目，子项目和普通项目是项目的泛化？在该章节的项目和子项目应该有很多共性存在，应该进行一次抽象处理。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602043,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675642006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367626,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"湖北","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1675386323,"is_pvip":false,"replies":[{"id":135189,"content":"这么理解也可以。除了不同的业务流程以外，不同的属性，不同的算法都会导致泛化。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678977652,"ip_address":"广东","comment_id":367626,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"课后题，个人理解\n1.本来就是泛化关系，只是在模型上要不要体现出来而已。 哪怕这几个类型的结构一模一样，也可能会标识泛化关系。是否标识的判断依据是这几类模型有没有自己私有的业务流程，如果有，那么展示泛化关系，在具体业务流程用子类的模型来构建类关系图。\n两天基本思路，怎么画更不需要解释就怎么画，能降低认知复杂度就降低。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609454,"discussion_content":"这么理解也可以。除了不同的业务流程以外，不同的属性，不同的算法都会导致泛化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678977652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367378,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"北京","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1675172800,"is_pvip":false,"replies":[{"id":133818,"content":"基本是这个意思，后面的课也会提到。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1675180227,"ip_address":"广东","comment_id":367378,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"是不是因为学习时间和管理时间就是普通工时项，他们之间没有不同，只是名字、使用场景不同，可以用给普通工时项增加一个“类型”的枚举属性，就可以完全编程不同的实例了。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601286,"discussion_content":"基本是这个意思，后面的课也会提到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675180227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367293,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"北京","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1675122848,"is_pvip":true,"replies":[{"id":135198,"content":"在概念层面的领域模型，一般不用“空心箭头加虚线”，在实现层面可以用。\n只要是实线，不论有没有箭头，都表示“关联”\n其他理解都很到位。\n思考题回答也不错。\n\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678979314,"ip_address":"广东","comment_id":367293,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"终于追上了进度。\n\n泛化 generalization 确实看上去很高阶，可以转化为自然语言中的分类、是一个（is-a）、共性三种说法。\n\n空心三角（箭头）加实线表示”泛化“ generalization，继承关系，指向基类\n空心箭头加虚线表示”实现“ Realization，类对接口的实现，指向接口\n空心菱形表示”聚合“ aggregation, has-a，两个对象一般不平等\n实心菱形表示”组合“ Composition, contains-a\n虚线箭头表示”依赖“ Dependency，使用，偶然、临时、弱关系\n实现箭头表示”关联“ Association，两个对象平等，强依赖，长期、平等\n\n来自 https:&#47;&#47;www.cnblogs.com&#47;duanxz&#47;archive&#47;2012&#47;06&#47;13&#47;2547801.html\n\n抽取工时管理模块，以及将普通工时项、工时项、工时记录迁移到工时管理模块的过程，确实很精彩，将隐式概念显示化，这个可能才是领域建模方法的精粹。\n\n思考题：\n\n1. 学习时间和管理时间也可以单独拿出来，但是在目前业务上下文中，没有必要\n2. 在之前的项目中，有用到”泛化“的东西，但是并没有抽象出来。比如对于文字材料、视频、音频都可以看做素材，但是并没有泛化出”素材“的概念。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609466,"discussion_content":"在概念层面的领域模型，一般不用“空心箭头加虚线”，在实现层面可以用。\n只要是实线，不论有没有箭头，都表示“关联”\n其他理解都很到位。\n思考题回答也不错。\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678979314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367544,"user_name":"龙腾","can_delete":false,"product_type":"c1","uid":2864424,"ip_address":"河北","ucode":"81E70A02EB02A0","user_header":"https://static001.geekbang.org/account/avatar/00/2b/b5/28/3de99570.jpg","comment_is_top":false,"comment_ctime":1675312985,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"自然语言层面的子类，说男人和女人是人的子类，所以我们可以说“男人是人”。本文所说 工时项的子类有项目和子项目，但是我们显然不能说“项目是工时项”，而只能说“工时项是项目的一个属性，或者说项目包含工时项”。可以看出自然语言中的类型是实体之间的关系，而非属性之间的关系。而本文所说的“类”、“统称”其实是实体的公有属性：是属性和多个实体的关系，因此我觉得这种关系不应该用自然语言的“类”、“统称”来表述。","like_count":1},{"had_liked":false,"id":367684,"user_name":"支离书","can_delete":false,"product_type":"c1","uid":1026921,"ip_address":"北京","ucode":"AD2570AC5EF7BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/69/5f1f0d1c.jpg","comment_is_top":false,"comment_ctime":1675420626,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"文章中项目和子项目抽象出来一个“工时项”，是因为有工时记录的需求，如果再加个给项目和子项目拆分任务但学习时间管理时间不需要拆分任务的需求，那就不能复用“工时项”这个抽象了吧？一是名称不合适，二是普通工时项不需要拆分任务了。这种情况再给项目子项目单独抽象出一个“任务项”的抽象吗？\n\n这个问题群里有同学也问到了，看老师回复说详见泛化第三节课。坐等更新。","like_count":0}]}