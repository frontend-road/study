{"id":169017,"title":"17 | 从后端到前端：微服务后，前端如何设计？","content":"<p>你好，我是欧创新。</p><p>微服务架构通常采用前后端分离的设计方式。作为企业级的中台，在完成单体应用拆分和微服务建设后，前端项目团队会同时面对多个中台微服务项目团队，这时候的前端人员就犹如维修电工一样了。</p><p>面对如此多的微服务暴露出来的API服务，如何进行正确的连接和拼装，才能保证不出错？这显然不是一件很容易的事情。而当服务出现变更时，又如何通知所有受影响的项目团队，这里面的沟通成本相信也不小。</p><p>相应的，要从一定程度上解决上述问题，我们是不是可以考虑先有效降低前端集成的复杂度呢？<span class=\"orange\">先做到前端聚合，后端解耦</span>——这是一个很有意思的话题。今天我们就一起来聊聊微前端（Micro Frontend）的设计思想，探讨一下中台微服务后，前后端的设计和集成方式。</p><h2>单体前端的困境</h2><p>传统企业在完成中台转型后，虽然后台的业务完成了微服务架构的升级，但前端仍然是单体模式，由一个团队创建并维护一个前端应用。随着时间推移和业务发展，前端会变得越来越臃肿，越来越难维护。而随着5G和移动互联技术的应用，企业业务活动将会进一步移动化和线上化。过去很多企业的做法是为不同的业务开发出独立的APP。但很显然用户并不想装那么多的APP！</p><p>为了提高用户体验，实现统一运营，很多企业开始缩减和整合APP，将企业内所有的业务能力都尽量集中到一个APP中。试想如果仍然沿用单体前端的设计模式。前端项目团队将面对多个中台微服务团队，需要集成成千上万的API服务，这就需要相当高的沟通成本和技术要求。这绝对会是一场灾难。</p><!-- [[[read_end]]] --><p>相对互联网企业而言，传统企业的渠道应用更加多样化，有面向内部人员的门店类应用、面向外部客户的互联网电商平台或移动APP，还有面向第三方的API集成。由于渠道的差异，前端将更加多样化和复杂化。那如何有效降低前端集成的复杂度呢？</p><h2>从单体前端到微前端</h2><p>为了解决单体前端的问题，我们可以借鉴微服务的设计思想，引入微前端概念。将微服务理念扩展到前端，解决中台微服务化后，前端由于仍为单体而存在的逻辑复杂和臃肿的问题。</p><p>在前端设计时我们需要遵循单一职责和复用原则，按照领域模型和微服务边界，将前端页面进行拆分。同时构建多个可以<span class=\"orange\">独立部署、完全自治、松耦合的页面组合</span>，其中每个组合只负责特定业务单元的UI元素和功能，这些页面组合就是微前端。</p><p>微前端与微服务一样，都是希望将单体应用，按照规则拆分，并重组为多个可以独立开发、独立测试、独立部署和独立运维，松耦合的微前端或者微服务。以适应业务快速变化及分布式多团队并行开发的要求。</p><p>微前端页面只包括业务单元前端操作必需的页面要素，它只是企业级完整业务流程中的一个业务拼图块，不包含页面导航等内容。微前端除了可以实现前端页面的解耦外，还可实现页面复用，这也与中台服务共享理念是一脉相承的。</p><h2>业务单元的组合形态</h2><p>我们可以参照领域模型和微服务边界，建立与微服务对应的前端操作界面，将它与微服务组成业务单元，以业务组件的方式对外提供服务。业务单元包括微前端和微服务，可以独立开发、测试、部署和运维，可以自包含地完成领域模型中部分或全部的业务功能。</p><p>我们看一下下面这个图。一个虚框就是一个业务单元，微前端和微服务独立部署，业务单元内的微前端和微服务已完成前后端集成。你可以将这个业务单元理解为一个特定业务领域的组件。业务单元可以有多种组合方式，以实现不同的业务目标。</p><p><img src=\"https://static001.geekbang.org/resource/image/35/6f/35d5b6465f6978b16a5ddfa49a910d6f.jpg?wh=1468*808\" alt=\"\"></p><h3>1. 单一业务单元</h3><p>一个微前端和一个微服务组成单一业务单元。微前端和微服务分别实现同一个领域模型从前端到后端的功能。</p><h3>2. 组合业务单元</h3><p>一个微前端与多个微服务组成组合业务单元。微前端具有多个微服务的前端功能，完成较复杂的页面和操作。多个微服务实现各自领域模型的功能，向微前端提供可组合的服务。</p><p>记住一点：微前端不宜与过多的微服务组合，否则容易变成单体前端。</p><h3>3. 通用共享业务单元</h3><p>一个微前端与一个或多个通用中台微服务组合为通用共享业务单元。通用共享微前端以共享页面的方式与其它微前端页面协作，完成业务流程。很多通用中台微服务的微前端是共享的，比如订单和支付等微服务对应的订单和支付微前端界面。</p><p>所有业务单元的功能都应该自包含，业务单元之间的边界清晰。业务单元之间要避免功能交叉而出现耦合，一旦出现就会影响项目团队职责边界，进而影响到业务单元独立开发、测试、部署和运维等。</p><h2>微前端的集成方式</h2><p>我们看一下下面这个图，微前端位于前端主页面和微服务之间，它需要与两者完成集成。</p><p><img src=\"https://static001.geekbang.org/resource/image/44/5a/44a99543af27faabeda4f7fa959b875a.jpg?wh=1816*811\" alt=\"\"></p><h3>1. 微前端与前端主页面的集成</h3><p>前端主页面是企业级的前端页面，微前端是业务单元的前端页面。微前端通过主页面的微前端加载器，利用页面路由和动态加载等技术，将特定业务单元的微前端页面动态加载到前端主页面，实现前端主页面与微前端页面的“拼图式”集成。</p><p>微前端完成开发、集成和部署后，在前端主页面完成微前端注册以及页面路由配置，即可实现动态加载微前端页面。</p><h3>2. 微前端与微服务的集成</h3><p>微前端与微服务独立开发，独立部署。在微前端注册到前端主页面前，微前端需要与微服务完成集成。它的集成方式与传统前后端分离的集成方式没有差异。微服务将服务发布到API网关，微前端调用发布在API网关中的服务，即完成业务单元内的前后端集成。</p><h2>团队职责边界</h2><p>当你采用业务单元化的开发方式后，前后端项目团队职责和应用边界会更清晰，可以降低前后端集成的复杂度。我们看一下前中台团队的职责分工。</p><p>前端项目团队专注于前端集成主页面与微前端的集成，完成前端主页面的企业级主流程的页面和流程编排以及微前端页面的动态加载，确保主流程业务逻辑和流程正确。前端项目除了要负责企业内页面风格的整体风格设计、业务流程的流转和控制外，还需要负责微前端页面动态加载、微前端注册、页面路由和页面数据共享等前端技术的实现。</p><p>中台项目团队完成业务单元组件的开发、测试和集成，确保业务单元内的业务逻辑、页面和流程正确，向外提供包含页面逻辑和业务逻辑的业务单元组件。</p><p>这样，<span class=\"orange\">前端项目团队只需要完成企业级前端主页面与业务单元的融合，前端只关注前端主页面与微前端页面之间的集成。</span>这样就可以降低前端团队的技术敏感度、团队的沟通成本和集成复杂度，提高交付效率和用户体验。</p><p><span class=\"orange\">中台项目团队关注业务单元功能的完整性和自包含能力，完成业务单元内微服务和微前端开发、集成和部署，提供业务单元组件。</span>这样，业务单元的微前端与微服务的集成就会由一个中台团队完成，熟悉的人干熟悉的事情，可以降低集成过程中的沟通和技术成本，加快开发效率。</p><h2>一个有关保险微前端设计的案例</h2><p>保险公司有很多面向不同场景的保险产品，由于业务场景不同，其核心领域模型就会有差异，在页面要素、业务规则和流程等方面前端界面也会不同。为了避免领域模型差异较大的产品之间的相互影响和干扰，我们可以将相似的领域模型的保险产品聚合在一起，完成核心中台设计。</p><p>那有的保险集团为了统一运营，会实现寿险、财险等集团化的全险种销售。这样前端项目团队就需要用一个前端应用，集成非常多的不同产品的核心中台微服务，前端应用与中台微服务之间的集成将会更复杂。</p><p><strong>如果仍然采用传统的单体前端模式，将会面临比较大的困难。</strong></p><p>第一是前端页面开发和设计的复杂性。以录单前端为例，如果用一个前端页面来适配全险种，由于不同产品的前端页面要素不同，需要妥协并兼容所有产品界面的差异，这会增加前端开发的复杂度，也影响用户体验。而如果为每类产品开发不同的前端，前端项目团队需要在页面开发和设计上，投入巨大的工作量。</p><p>第二是前端与微服务集成的复杂性。在前端与微服务集成时，前端项目团队需要了解所有产品的API详细信息，完成前端与微服务的集成，还要根据主页面流程，实现不同产品的API服务路由。大量的API服务集成和服务路由，会增加系统集成的复杂度和出错的概率。</p><p>第三是前后端软件版本的协同发布。关联的应用多了以后，一旦某一个中台微服务的API服务出现重大调整，就需要协调所有受影响的应用同时完成版本发布，频繁的版本发布会影响不同产品的正常运营。</p><p>那如何用一个前端应用实现全险种产品销售呢？怎样设计才能降低集成的复杂度，实现前端界面融合，后端中台解耦呢？</p><p>我们看一下下面这个图。我们借鉴了电商的订单模式实现保险产品的全险种订单化销售，在一个前端主页面可以将所有业务流程和业务操作无缝串联起来。虽然后端有很多业务单元（包含微服务和微前端），但用户始终感觉是在一个前端应用中操作。</p><p>要在一个前端应用中实现全险种销售，需要完成以下内容的设计。</p><p><img src=\"https://static001.geekbang.org/resource/image/7d/d4/7d0eff75e60913a01aadfc7c6b24dad4.jpg?wh=1868*896\" alt=\"\"></p><h3>1. 微服务</h3><p>微服务分为两类，一类是核心中台微服务，包括：投保微服务，实现核心出单业务逻辑；另一类是通用中台微服务，包括如：商品、订单、购物车和支付等微服务，实现通用共享业务逻辑。</p><h3>2. 微前端</h3><p>每个微服务都有自己的微前端页面，实现领域模型的微服务前端页面操作。核心中台投保微服务有出单微前端。订单、商品以及支付微服务都有自己的微前端页面。</p><h3>3. 业务单元</h3><p>微服务与微前端组合为一个业务单元。由一个中台团队完成业务单元的开发、集成、测试和部署，确保业务单元内页面操作和业务逻辑正确。比如：投保微服务和出单微前端组合为投保业务单元，独立完成保险产品从前端到后端的投保业务。</p><h3>4. 前端主页面</h3><p>前端主页面类似门户，包括页面导航以及部分通用的常驻主页面的共享页面，比如购物车。前端主页面和所有微前端应统一界面风格，符合统一的前端集成规范。按照正确的业务逻辑和规则，动态加载不同业务单元的微前端页面。前端主页面作为一个整体，协调核心和通用业务单元的微前端页面，完成业务操作和业务流程，提供全险种销售接触界面，包括商品目录、录单、购物车、订单、支付等操作。</p><h3>5. 业务流程说明</h3><p>我来简要说明一下用户在前端主页面的投保的主要业务流程。</p><ul>\n<li>第1步：用户在前端主页面，从商品目录微前端页面，选择保险产品。</li>\n<li>第2步：前端主页面根据选择的产品，从主页面配置数据中，获取产品出单微前端路由地址。加载出单微前端页面，完成录单，投保微服务实现投保业务逻辑，在业务单元内生成投保单。</li>\n<li>第3步：加载购物车微前端，将投保单加入购物车。</li>\n<li>第4步：重复1-3步，生成多个投保单。</li>\n<li>第5步：从购物车微前端中选择多个投保单，加载订单微前端，生成订单。</li>\n<li>第6步：加载支付微前端，完成支付。</li>\n<li>第7步：在投保微服务中，将订单中的投保单生成保单。</li>\n</ul><p>虽然后端有很多业务单元在支持，但用户所有的页面操作和流转是在一个前端主页面完成的。在进行全险种的订单化销售时，用户始终感觉是在操作一个系统。<span class=\"orange\">这种设计方式很好地体现了前端的融合和中台的解耦。</span></p><h2>总结</h2><p>今天我们主要探讨了微前端的设计方法。虽然微前端和微服务也采用前后端分离的设计方式，但在业务单元内，它们是在同一个领域模型下，分别实现前端和后端的业务逻辑，对外提供组件化的服务。</p><p>微前端和业务单元化的设计模式可以减轻企业级中台，前后端应用开发和集成的复杂度，真正实现前端融合和中台解耦。它的主要价值和意义如下：</p><p><strong>1. 前端集成简单：</strong>前端项目只需关注前端集成主页面与微前端的集成，实现模块化集成和拼图式的开发，降低前端集成的复杂度和成本。</p><p><strong>2. 项目职责专一：</strong>中台项目从数据库、中台微服务到微前端界面，端到端地完成领域逻辑功能开发，以业务组件的方式整体提供服务。在业务单元内，由团队自己完成前后端集成，可以降低开发和集成团队的沟通成本和集成复杂度。</p><p><strong>3. 隔离和依赖性：</strong>业务单元在代码、逻辑和物理边界都是隔离的，可降低应用之间的依赖性。出现问题时可快速定位和修复，问题可以控制在一个业务单元内。业务单元之间相互无影响。</p><p><strong>4. 降低沟通和测试成本：</strong>中台团队实现从微前端页面到中台微服务的业务单元逻辑，实现业务单元的开发、测试、集成和部署的全流程和全生命周期管理，降低前后端集成的测试和沟通成本。</p><p><strong>5. 更敏捷地发布：</strong>业务单元之间有很好的隔离性和依赖性低，业务单元的变化都可以被控制在业务单元内。项目团队可以独立按照自己的步调进行迭代开发，实现更快的发布周期。版本发布时不会影响其它业务单元的正常运行。</p><p><strong>6. 降低技术敏感性：</strong>前端项目关注前端主页面与微前端的集成。降低了前端项目团队对中台微服务技术的敏感性。中台项目团队可以更独立地尝试新技术和架构，实现架构的演进。</p><p><strong>7. 高度复用性：</strong>微前端和中台微服务都有高度的复用性。微前端可快速加载到多个APP，还可以将一个微前端直接发布为APP或微信小程序，实现灵活的前端组合、复用和快速发布。</p><h2>思考题</h2><p>结合你公司的业务场景，思考一下是否可以采用微前端的设计，降低前后端集成的复杂度？期待你的分享！</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/33/7b1a917aff0ec923b78a54e81ed90733.jpg?wh=1110*659\" alt=\"unpreview\"></p>","neighbors":{"left":{"article_title":"16 | 视图：如何实现服务和数据在微服务各层的协作？","id":167710},"right":{"article_title":"18 | 知识点串讲：基于DDD的微服务设计实例","id":169881}},"comments":[{"had_liked":false,"id":154414,"user_name":"深山小书童","can_delete":false,"product_type":"c1","uid":1079593,"ip_address":"","ucode":"6B5DD3B3D84534","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/29/a90cf777.jpg","comment_is_top":false,"comment_ctime":1574424657,"is_pvip":true,"replies":[{"id":"59289","content":"谢谢你的建议。结束后，我好好准备一下哈。<br>希望学完后你能成为一个具有战略高度的架构师。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574432993,"ip_address":"","comment_id":154414,"utype":1}],"discussion_count":2,"race_medal":0,"score":"100358672465","product_id":100037301,"comment_content":"整个专栏反反复复听了好几遍，慢慢理解之后，确实感觉干货满满，谢谢老师。希望专栏结束之后会有一个github的demo项目进行升华一下，专栏就完美了。","like_count":23,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475461,"discussion_content":"谢谢你的建议。结束后，我好好准备一下哈。\n希望学完后你能成为一个具有战略高度的架构师。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574432993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1124889,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2a/19/6be7f66f.jpg","nickname":"Coca","note":"","ucode":"44AEF20DB59433","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344056,"discussion_content":"这篇文章写的，看起来很有水平，在传统pc页面开发的架构下可以落地。在现在spa页面的开发中很困难，会出现大量的页面刷新，体验比较差，而且对于很多参数都需要服务端进行中转","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611276061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154505,"user_name":"lin yu","can_delete":false,"product_type":"c1","uid":1126028,"ip_address":"","ucode":"3F2E0AF47750FE","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/8c/75936ae2.jpg","comment_is_top":false,"comment_ctime":1574469028,"is_pvip":false,"replies":[{"id":"59319","content":"这个专栏主要是从微服务设计和拆分角度，来讲述如何用DDD做中台和微服务设计，每一部分都有自己的设计上的思考，所以在底层代码实现上讲的不多。不是为了纯讲DDD的战术设计方法，这也是这个专栏与其它DDD不一样的地方。不知道你有没有看过实现领域驱动设计这本书没有，你可以将两者结合起来学习。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574496822,"ip_address":"","comment_id":154505,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61704011172","product_id":100037301,"comment_content":"看着看着就学了76%了，感觉不配合没有一个完整的demo讲，感觉还是云里雾里的，每篇都是点到即止，毕竟《实现领域驱动》这本书京东59也能买到，","like_count":14,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475488,"discussion_content":"这个专栏主要是从微服务设计和拆分角度，来讲述如何用DDD做中台和微服务设计，每一部分都有自己的设计上的思考，所以在底层代码实现上讲的不多。不是为了纯讲DDD的战术设计方法，这也是这个专栏与其它DDD不一样的地方。不知道你有没有看过实现领域驱动设计这本书没有，你可以将两者结合起来学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574496822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121301,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1c/15/f9ebf7e4.jpg","nickname":"Simple","note":"","ucode":"2F69FD2662A47A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381545,"discussion_content":"没有一定的基础，就妄想通过一个专栏就把DDD精髓弄懂，那全部都是DDD专家了，那还哪有门槛一说，没有速成药.....","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625122943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171617,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1109632,"ip_address":"","ucode":"E6C4119C752465","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/80/db52af6b.jpg","comment_is_top":false,"comment_ctime":1578977569,"is_pvip":false,"replies":[{"id":"66534","content":"是的，微前端的设计思想很好。而且现在不少互联网大厂比如蚂蚁金服、美团等在不少生产系统已经投入使用了，相信这些技术会越来越成熟。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1578983995,"ip_address":"","comment_id":171617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35938715937","product_id":100037301,"comment_content":"独立业务单元是好想法，但微前端的组合拼装能力是前提，否则聚合业务场景将很难实施。","like_count":8,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481437,"discussion_content":"是的，微前端的设计思想很好。而且现在不少互联网大厂比如蚂蚁金服、美团等在不少生产系统已经投入使用了，相信这些技术会越来越成熟。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578983995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225125,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":1796332,"ip_address":"","ucode":"4E9F48153B2D8B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/68/ec/eb0ebbb6.jpg","comment_is_top":false,"comment_ctime":1591663754,"is_pvip":false,"replies":[{"id":"84666","content":"你可以网上找找微前端相关的资料，由于篇幅所限，专栏里面就没有写具体的实现。我记得阿里开源了“乾坤”微前端框架，还有美团也有自己的微前端框架。在我即将出版的书里面也会有相关的技术实现方面的内容，敬请期待。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1592986750,"ip_address":"","comment_id":225125,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18771532938","product_id":100037301,"comment_content":"微前端怎么落地呢？理论我是看懂了，怎么实现每套业务有自己的一套前端页面呢？","like_count":5,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497741,"discussion_content":"你可以网上找找微前端相关的资料，由于篇幅所限，专栏里面就没有写具体的实现。我记得阿里开源了“乾坤”微前端框架，还有美团也有自己的微前端框架。在我即将出版的书里面也会有相关的技术实现方面的内容，敬请期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592986750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154347,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1574412560,"is_pvip":true,"replies":[{"id":"59290","content":"有时候视角高一点，看到的和想到的会不一样哈。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574433076,"ip_address":"","comment_id":154347,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14459314448","product_id":100037301,"comment_content":"一直都把自己的思维或者视野限制在了后端以及目前工作接触到的领域，看完之后有了一个整体的认识，以及抬头多看看多想想的念头~","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475442,"discussion_content":"有时候视角高一点，看到的和想到的会不一样哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574433076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154240,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1574394965,"is_pvip":false,"replies":[{"id":"59202","content":"1、现在很多的前端工具比如Vue等，有页面注册和动态加载的机制。前端主页面可以获取到微前端页面url地址后，将对应的微前端页面动态加载到集成主页面。<br>2、这个确实需要顶层设计，还得有统一的技术标准和开发规范。尤其对于通用能力的复用，还有主页面内不同微前端之间的数据共享。不过现在很多的前端工具都提供这些能力了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574400778,"ip_address":"","comment_id":154240,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14459296853","product_id":100037301,"comment_content":"前端微服务化，前端+后端构建业务服务组件，还是领域的划分与领域边界的划清。目标还是领域的自治及领域间的链接，从而达到分而治之的效果。建立在规范，一套游戏规则的基础之上，而能更好地集成与组合。前台+中台的都微化，形成一套彻底的解决机制，是很好的实现机制。<br>但是这里面还是有几个待探究的疑问：<br>1.集成主页面 - 与微服务的前端页面怎么集成 ？<br>2.业务单元的如何独善其身，做到真正的自治需要产品需求、前端实现、中台服务实现的顶层设计与边界区分。","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475413,"discussion_content":"1、现在很多的前端工具比如Vue等，有页面注册和动态加载的机制。前端主页面可以获取到微前端页面url地址后，将对应的微前端页面动态加载到集成主页面。\n2、这个确实需要顶层设计，还得有统一的技术标准和开发规范。尤其对于通用能力的复用，还有主页面内不同微前端之间的数据共享。不过现在很多的前端工具都提供这些能力了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574400778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731543,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6b/d7/8872624a.jpg","nickname":"xmeng","note":"","ucode":"C0CA2182BA3B4B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353230,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615085983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185374,"user_name":"发飙的蜗牛","can_delete":false,"product_type":"c1","uid":1800868,"ip_address":"","ucode":"B2D96A2D0B6BA4","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7a/a4/79ffe77c.jpg","comment_is_top":false,"comment_ctime":1583570195,"is_pvip":false,"replies":[{"id":"71815","content":"我感觉未来结合小程序的应用背景，加上微服务、DDD以及微前端等技术和设计方法，以及为了面向不同渠道和生态圈的快速发布和集成要求，这种组合体会成为未来的一种趋势。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1583720154,"ip_address":"","comment_id":185374,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173504787","product_id":100037301,"comment_content":"我现在所参与的项目整体架构有点像这个微前端的设计，我们也是将整个项目划分为几个模块，每个模块由不同团队独立开发，也是前后端分离，独立开发部署，最终给到用户用就是一个整体的系统，只不过我们的前端主页没有那么复杂并不需要专门的团队去做，只是一个header navbar，footer一样而已","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486346,"discussion_content":"我感觉未来结合小程序的应用背景，加上微服务、DDD以及微前端等技术和设计方法，以及为了面向不同渠道和生态圈的快速发布和集成要求，这种组合体会成为未来的一种趋势。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583720154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154076,"user_name":"被秒","can_delete":false,"product_type":"c1","uid":1684432,"ip_address":"","ucode":"712BFB465D29A9","user_header":"https://static001.geekbang.org/account/avatar/00/19/b3/d0/ac3a1227.jpg","comment_is_top":false,"comment_ctime":1574378862,"is_pvip":true,"replies":[{"id":"59226","content":"确实会有这两种选择，独立页面 OR 独立组件<br>独立页面的话，这种方案通过路由、Iframe都可以实现不同微前端应用的组合。<br>独立组件的话，这种方案可采用组件化的方式构建应用，开发成本较高，配合lazyload可实现组件的按需加载。通常用这种方式需要在开发时保持独立开发，但是最终需将各组件或应用进行集成合并。<br>两者各有优劣：<br>前者相对实现起来比较简单，而且也可保持前端多技术栈，即通过不同的前端框架来实现。<br>后者实现会有额外成本，如针对工程的合并集成。但是相比前者在依赖采用同一套，会减少很多开销。<br>具体如何选择，还需依据项目实际情况来看。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574405158,"ip_address":"","comment_id":154076,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10164313454","product_id":100037301,"comment_content":"对于微前端一直有些困惑，到底是独立页面，还是独立组件。独立页面就是一下放弃了SPA的各种优点，一下回到几年前。 而如果用组件，那其实又增加了开发的复杂度，而且版本发布时候又会有更多的兼容风险。 前端的变更明显比后端要频繁的多，究竟最佳实践是什么。","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475374,"discussion_content":"确实会有这两种选择，独立页面 OR 独立组件\n独立页面的话，这种方案通过路由、Iframe都可以实现不同微前端应用的组合。\n独立组件的话，这种方案可采用组件化的方式构建应用，开发成本较高，配合lazyload可实现组件的按需加载。通常用这种方式需要在开发时保持独立开发，但是最终需将各组件或应用进行集成合并。\n两者各有优劣：\n前者相对实现起来比较简单，而且也可保持前端多技术栈，即通过不同的前端框架来实现。\n后者实现会有额外成本，如针对工程的合并集成。但是相比前者在依赖采用同一套，会减少很多开销。\n具体如何选择，还需依据项目实际情况来看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574405158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233339,"user_name":"jun","can_delete":false,"product_type":"c1","uid":1899314,"ip_address":"","ucode":"3A9633CA1FE72E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/LalJD9ruYQI5zVM1GOCe4PjunIbbeeMiacFHC4TAj0DBVeialKt3vRCLs9dxn1vYXvfp8pgcyaeEQkh1nde1JoBQ/132","comment_is_top":false,"comment_ctime":1594291458,"is_pvip":false,"replies":[{"id":"86165","content":"团队规模需要根据具体微服务的功能大小来配置，一般一个微服务团队大小是10-12人，在组建团队时要考虑尽量降低团队之间的沟通成本，将沟通尽量控制在团队内部。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1594345452,"ip_address":"","comment_id":233339,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889258754","product_id":100037301,"comment_content":"前端项目团队会同时面对多个中台微服务项目团队。目前资源能否胜任微服务改造了... ...重构系统改造成微服务模式，仅6人团队是不是不太适合了 ？ 个人感觉可能工作量会很大，技术方面是主要问题所在。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500983,"discussion_content":"团队规模需要根据具体微服务的功能大小来配置，一般一个微服务团队大小是10-12人，在组建团队时要考虑尽量降低团队之间的沟通成本，将沟通尽量控制在团队内部。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594345452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221548,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1590538500,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5885505796","product_id":100037301,"comment_content":"微前端，文中讲的总结起来：<br>分为两个结构<br>前端项目团队：提供主界面以及各微前端的集成与路由，由专门的团队负责<br>业务中台前端微服务团队：聚焦业务实现<br>主界面当业务复杂到一定程度我理解是需要一个团队去维护的<br>微前端的集成与路由这部分如果前端容器技术很成熟的话是否可以由业务中台前端微服务团队去负责，我理解这块的工作是很薄的一层<br>然后对于有些页面，如产品页面根据不同的业务场景需要路由到不同的页面，这部分也可以实现配置化，对于复杂数据要求，还可以实现不同场景的数据加载。对于产品页面是可以沉淀中台数据协议的，不同场景可以去做覆写定制<br>","like_count":0},{"had_liked":false,"id":205491,"user_name":"小之","can_delete":false,"product_type":"c1","uid":1130820,"ip_address":"","ucode":"B97E6CABC85AFF","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/44/bc8bc7cf.jpg","comment_is_top":false,"comment_ctime":1586649596,"is_pvip":false,"replies":[{"id":"77315","content":"谢谢","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1587002989,"ip_address":"","comment_id":205491,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881616892","product_id":100037301,"comment_content":"老师真是干货满满，这篇文章让我  对 “大中台，小前端“ 的理解又深了一步！","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491492,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587002989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188410,"user_name":"stubborn","can_delete":false,"product_type":"c1","uid":1206335,"ip_address":"","ucode":"49D7CE5F015345","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/3f/40d1cd7f.jpg","comment_is_top":false,"comment_ctime":1584351079,"is_pvip":false,"replies":[{"id":"72716","content":"现在应该还没有商业产品。阿里有乾坤，已经开源了，你可以从网上下载试试，包括美团也有不少的微前端的实践。其实你也可以基于现有的前端组件做一些定制性的开发也是可以实现的，比如vue，iframe等，各有所长。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584362734,"ip_address":"","comment_id":188410,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879318375","product_id":100037301,"comment_content":"欧老师，现在类似微前端的商业框架有卖的吗？","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487401,"discussion_content":"现在应该还没有商业产品。阿里有乾坤，已经开源了，你可以从网上下载试试，包括美团也有不少的微前端的实践。其实你也可以基于现有的前端组件做一些定制性的开发也是可以实现的，比如vue，iframe等，各有所长。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584362734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343069,"user_name":"Paradise","can_delete":false,"product_type":"c1","uid":1070878,"ip_address":"","ucode":"D92EACCBF6B3B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/57/1e/8ed4a7cf.jpg","comment_is_top":false,"comment_ctime":1650616711,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1650616711","product_id":100037301,"comment_content":"感谢老师分享，但是目前看到的微前端大部分都是为了解决系统级遗留问题而引入的微前端，比较少是以DDD为出发点而执行的微前端 嘿嘿。。","like_count":0},{"had_liked":false,"id":327248,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1640006388,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640006388","product_id":100037301,"comment_content":"这里的微前端，就是要一处地方改动了处处一样。但是现实场景中，可能是很多前端公用一个后台，但是页面都是定制化的。那这种就不太合适了。<br>当然对于这种 页面也采用微服务的方式进行拆分确实是一个很好的思想，隔离，分别开发，分别部署","like_count":0},{"had_liked":false,"id":320404,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1205341,"ip_address":"","ucode":"B446FD36734E75","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/5d/de0536e8.jpg","comment_is_top":false,"comment_ctime":1636295587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636295587","product_id":100037301,"comment_content":"权限怎么处理？😨😨，最大的困惑就是这块，如何全盘统筹这一块，菜单权限，按钮权限，数据权限等","like_count":0},{"had_liked":false,"id":308692,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1629751572,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1629751572","product_id":100037301,"comment_content":"看最终集成复杂度，相应的微服务集成问题等弊端，是否大于微前端带来的减少集成复杂度，提升复用性的好处<br>整个架构是前端有一集成页面做路由配置，然后会有相应的微前端，与微服务后端。微前端与微服务后端组成一个业务单元。","like_count":0},{"had_liked":false,"id":305037,"user_name":"Quentin J.","can_delete":false,"product_type":"c1","uid":2693038,"ip_address":"","ucode":"50B980CBE6EBA3","user_header":"https://static001.geekbang.org/account/avatar/00/29/17/ae/f365efb0.jpg","comment_is_top":false,"comment_ctime":1627786312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627786312","product_id":100037301,"comment_content":"ddd的微前端 是不是 和 低代码&#47;零代码 也是相关的? 他们的关系是什么呢","like_count":0},{"had_liked":false,"id":304022,"user_name":"xxx","can_delete":false,"product_type":"c1","uid":1096652,"ip_address":"","ucode":"E79CEA70430449","user_header":"https://static001.geekbang.org/account/avatar/00/10/bb/cc/fac12364.jpg","comment_is_top":false,"comment_ctime":1627186822,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627186822","product_id":100037301,"comment_content":"总结：前端总是从后端抄一些玩烂了的概念，然后包装成高大上的东西去忽悠——毕竟同行们都不懂😂","like_count":0},{"had_liked":false,"id":282692,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":1466335,"ip_address":"","ucode":"1B8EB2C26DE4EC","user_header":"https://static001.geekbang.org/account/avatar/00/16/5f/df/3c4881f0.jpg","comment_is_top":false,"comment_ctime":1615366175,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1615366175","product_id":100037301,"comment_content":"老师是怎么保证DDD的落地呢，如何保证每个开发人员都按照DDD的原则进行设计和开发呢","like_count":0},{"had_liked":false,"id":268917,"user_name":"小炭","can_delete":false,"product_type":"c1","uid":1109544,"ip_address":"","ucode":"E20E3958CAF06C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/28/c04a0c83.jpg","comment_is_top":false,"comment_ctime":1608432775,"is_pvip":true,"replies":[{"id":"97748","content":"在微前端设计时，需要考虑微前端可以自包含的完成业务单元的业务逻辑，这样就可以保持微前端功能的独立性。这样就不会存在在Base主页面来回动态加载微前端页面的情况。如果不是遗留系统的话，建议还是尽量统一微前端语言。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1608709163,"ip_address":"","comment_id":268917,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608432775","product_id":100037301,"comment_content":"微前端的拆分的粒度过小，都是动态加载会不会造成有性能问题。不知道老师所采用的微前端方案是单编程语言还是多编程语言的。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512080,"discussion_content":"在微前端设计时，需要考虑微前端可以自包含的完成业务单元的业务逻辑，这样就可以保持微前端功能的独立性。这样就不会存在在Base主页面来回动态加载微前端页面的情况。如果不是遗留系统的话，建议还是尽量统一微前端语言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608709163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268487,"user_name":"波叽波叽啵😮一口盐汽水喷死你","can_delete":false,"product_type":"c1","uid":1059118,"ip_address":"","ucode":"10F02C18E8C736","user_header":"https://static001.geekbang.org/account/avatar/00/10/29/2e/e402c62d.jpg","comment_is_top":false,"comment_ctime":1608215067,"is_pvip":false,"replies":[{"id":"97482","content":"您说的子系统是部署概念吗？如果是，那么微服务和子系统都是部署单元，如果不希望拆分出太多的微服务，你可以用DDD方法完成领域建模，然后可以将多个聚合放在一个子系统中，以后有需要的话，可以相对容易的拆分出微服务。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1608280214,"ip_address":"","comment_id":268487,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608215067","product_id":100037301,"comment_content":"一个子系统，可以部署多个微服务吗？由于目前子系统已经非常多了，再单独拆分出微服务，不能让子系统更多了。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511951,"discussion_content":"您说的子系统是部署概念吗？如果是，那么微服务和子系统都是部署单元，如果不希望拆分出太多的微服务，你可以用DDD方法完成领域建模，然后可以将多个聚合放在一个子系统中，以后有需要的话，可以相对容易的拆分出微服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608280214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263174,"user_name":"Eternal","can_delete":false,"product_type":"c1","uid":1188023,"ip_address":"","ucode":"EA6FE7CC98F740","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","comment_is_top":false,"comment_ctime":1606032443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606032443","product_id":100037301,"comment_content":"微前端感觉是后端各种中台提供得上前钟接口按照分类复用得方式再抽一层微服务，实现更加灵活得排列组合。当数量多了就要分类排序，然后复用通用得模块","like_count":0},{"had_liked":false,"id":233871,"user_name":"迷途书童","can_delete":false,"product_type":"c1","uid":1090142,"ip_address":"","ucode":"462BE64D3373DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/5e/3871ff79.jpg","comment_is_top":false,"comment_ctime":1594483102,"is_pvip":true,"replies":[{"id":"86377","content":"在DDD战略设计时，我们会根据限界上下文来划定领域模型的边界。在这个领域模型内，业务职责单一，业务功能自包含，业务边界非常清晰，所有领域对象都是为了完成这个领域内的业务功能而聚合在一起。所以用DDD构建出来的领域模型是一个天然独立的业务单元！<br>由于领域模型业务边界清晰，业务独立性强，微服务设计可以采用DDD的方法，微前端设计同样也可以使用。这里我们引入了业务单元的概念。<br>在进行微服务和微前端设计时，我们可以以领域模型为基准，向上通过微前端实现领域模型的页面逻辑，向下通过微服务实现领域模型的核心业务逻辑。然后将微前端与微服务组合成业务单元，以业务单元组件的方式对外，同时提供API接口级服务和页面级服务复用能力。<br>业务单元包括微前端和微服务，它们可以分别独立开发、测试、部署和运维，可以自包含地完成领域模型中部分或全部的业务功能。<br>基于领域模型我们可以建立微服务和微前端之间的关系的。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1594602418,"ip_address":"","comment_id":233871,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1594483102","product_id":100037301,"comment_content":"这片文章感觉有逻辑上的缺陷。我的观点很简单<br>1. 一个页面长什么样子，与后端是不是采用微服务没关系<br>2. 一个页面怎么拆成什么样的组件，也是与后端是不是采用微服务没什么关系。 比如一个页面header,footer，里面是应该独立出来，让所有BU共用的。也就是后端是采用微服务还是mvc, header&#47;footer都得拆分为单独的组件。 而不是因为后端是微服务架构，前端的组件设计要迁就于微服务","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501199,"discussion_content":"在DDD战略设计时，我们会根据限界上下文来划定领域模型的边界。在这个领域模型内，业务职责单一，业务功能自包含，业务边界非常清晰，所有领域对象都是为了完成这个领域内的业务功能而聚合在一起。所以用DDD构建出来的领域模型是一个天然独立的业务单元！\n由于领域模型业务边界清晰，业务独立性强，微服务设计可以采用DDD的方法，微前端设计同样也可以使用。这里我们引入了业务单元的概念。\n在进行微服务和微前端设计时，我们可以以领域模型为基准，向上通过微前端实现领域模型的页面逻辑，向下通过微服务实现领域模型的核心业务逻辑。然后将微前端与微服务组合成业务单元，以业务单元组件的方式对外，同时提供API接口级服务和页面级服务复用能力。\n业务单元包括微前端和微服务，它们可以分别独立开发、测试、部署和运维，可以自包含地完成领域模型中部分或全部的业务功能。\n基于领域模型我们可以建立微服务和微前端之间的关系的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594602418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175531,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbmQxAz3RgFgQWPxxLeZicmQJmB41srJAbNR0RQCYROaXxrh2OC8ZlGeG0nJIYHlEicrlkEo8vgBpw/132","nickname":"GUNDAMRX","note":"","ucode":"9EB899D69AD5B5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380323,"discussion_content":"确实没有强关联，业务不是很复杂的时候一套前端可以对接多个后端服务。业务复杂之后，前端需要拆分的话，可以参考后端的领域模型划分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624438663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189440,"user_name":"狮锅艺","can_delete":false,"product_type":"c1","uid":1187577,"ip_address":"","ucode":"1B4AD130F9D0CA","user_header":"https://static001.geekbang.org/account/avatar/00/12/1e/f9/bfb54326.jpg","comment_is_top":false,"comment_ctime":1584516223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584516223","product_id":100037301,"comment_content":"学习了，大而化小的思想很通用 ，微前端也是极好的，是时候补充一下前端知识了。","like_count":0},{"had_liked":false,"id":185376,"user_name":"发飙的蜗牛","can_delete":false,"product_type":"c1","uid":1800868,"ip_address":"","ucode":"B2D96A2D0B6BA4","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7a/a4/79ffe77c.jpg","comment_is_top":false,"comment_ctime":1583570286,"is_pvip":false,"replies":[{"id":"71814","content":"目前微前端技术路线挺多的，VUE、react、iframe都有实践，各有优劣。阿里和美团在微前端方面有不少的实践，也有不少详细的技术实现细节，你可以从网上找找看看。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1583720022,"ip_address":"","comment_id":185376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583570286","product_id":100037301,"comment_content":"整个架构设计我觉得很好，很贴合使用DDD去做微服务设计，不过对于前端主页面的动态组件加载技术，老师有没有推荐的呢？想了解下","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486348,"discussion_content":"目前微前端技术路线挺多的，VUE、react、iframe都有实践，各有优劣。阿里和美团在微前端方面有不少的实践，也有不少详细的技术实现细节，你可以从网上找找看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583720022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183021,"user_name":"slark","can_delete":false,"product_type":"c1","uid":1143574,"ip_address":"","ucode":"7E8DE962AA23A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/16/595b0342.jpg","comment_is_top":false,"comment_ctime":1582930910,"is_pvip":false,"replies":[{"id":"70802","content":"这个主要是讲微前端的设计思路。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582939879,"ip_address":"","comment_id":183021,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582930910","product_id":100037301,"comment_content":"旁观一下，以为是讲前端和后端与网关交互逻辑","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485532,"discussion_content":"这个主要是讲微前端的设计思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582939879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154900,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1574594213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574594213","product_id":100037301,"comment_content":"总结一下，微前端和中台微服务一起作为业务组件，对外提供服务！","like_count":0},{"had_liked":false,"id":154728,"user_name":"小炭","can_delete":false,"product_type":"c1","uid":1109544,"ip_address":"","ucode":"E20E3958CAF06C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/28/c04a0c83.jpg","comment_is_top":false,"comment_ctime":1574522852,"is_pvip":true,"replies":[{"id":"59522","content":"现在比较适合做微前端的技术也有不少，比如Vue之类的。<br>微前端应该作为企业级的战略，建议建立统一的前端界面规范和技术规范，采用统一的标准。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574651974,"ip_address":"","comment_id":154728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574522852","product_id":100037301,"comment_content":"老系统微服务改造，前端界面都是JSP Taglib的开发方式，这种前端是不是就没办法分离了，微前端是不是只能建立在单页应用技术的基础上。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475564,"discussion_content":"现在比较适合做微前端的技术也有不少，比如Vue之类的。\n微前端应该作为企业级的战略，建议建立统一的前端界面规范和技术规范，采用统一的标准。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574651974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154433,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1574429580,"is_pvip":false,"replies":[{"id":"59287","content":"需要定义统一的前端风格和规范标准。万一出现也不影响使用。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574432762,"ip_address":"","comment_id":154433,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574429580","product_id":100037301,"comment_content":"在迭代的过程中，如果出现前端主页面和微前端风格出现不一致，怎么办？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475466,"discussion_content":"需要定义统一的前端风格和规范标准。万一出现也不影响使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574432762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154397,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1574422676,"is_pvip":false,"replies":[{"id":"59274","content":"有些数据在前端就完成了交互。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574425718,"ip_address":"","comment_id":154397,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574422676","product_id":100037301,"comment_content":"每个微前端对应一个微服务，那流程之前的切换，对于微服务数据之前 同步是不是需要非常及时？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475456,"discussion_content":"有些数据在前端就完成了交互。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574425718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154396,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1574422565,"is_pvip":false,"replies":[{"id":"59275","content":"根据业务流程动态加载到前端集成主页面。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574425770,"ip_address":"","comment_id":154396,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574422565","product_id":100037301,"comment_content":"微前端的前端页面需要嵌入到 前端中吗？<br>","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475455,"discussion_content":"根据业务流程动态加载到前端集成主页面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574425770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}