{"id":76349,"title":"02 | 把错误关在笼子里的五道关卡","content":"<p>上一讲中，我们一起讨论了什么是优秀的代码。简而言之，优秀的代码是经济、规范、安全的代码。在平时的工作中，我们要朝着这个方向努力，时常站在团队、流程、个人能力的角度去思考优秀代码。</p><p>作为一名软件工程师，我们都想写出优秀的代码。可是，怎么才能编写出经济、规范、安全的代码呢？这是个大话题，相信你之前也有过思考。</p><h2>无心的过失</h2><p>开始之前，我先给你讲个曾经发生过的真实案例。2014年2月，苹果公司的iOS和OS X操作系统爆出严重的安全漏洞，聪明的黑客们可以利用这一漏洞，伪装成可信网站或者服务，来拦截用户数据。而造成这一漏洞的原因，也让业界专家大跌眼镜。</p><p>下面我用 <span class=\"orange\">C语言的伪代码</span>来给你简单描述下当时的漏洞情况。</p><pre><code>    if ((error = doSomething()) != 0)\n        goto fail;         \n        goto fail;    \n    if ((error= doMore()) != 0)        \n        goto fail;\nfail:    \n    return error;\n</code></pre><p>其实这段代码非常简单，它有两个判断语句，如果判断条件成立，那就执行“goto fail”语句，如果不成立，那就跳过判断语句继续执行。上面的“goto fail”语句，它的意思是略过它之后的所有语句，直接跳转到标有“fail”语句的地方，也就是第6行。</p><p>我们来分析下，第一个判断条件（第一行和第二行），如果error不等于零，那就跳转到fail语句，这逻辑上没什么问题。而第三行，没有任何附加条件，就能直接跳转到fail语句，也就是说，它下面的代码永远也无法执行，这里是不是有问题？是的，漏洞就是出在这里。</p><!-- [[[read_end]]] --><p>这一行多余的代码就是导致苹果操作系统那个安全漏洞的罪魁祸首。2014年2月21日，苹果发布了相关的安全补丁，你随便一搜“GoTo  Fail漏洞”就能找到相关的细节，我这里不赘述了。</p><p>我们每天仰慕的苹果操作系统出现这样“低级”的错误，你是不是有点惊讶？这么一个“简单”的错误，引发了一个非常严重的安全漏洞，是不是也有点出乎意料？上面的错误，简单看，就是复制的时候多复制了一行，或者因为时间关系，或者因为粗心大意，苹果的工程师硬是没检查出来。这在我们平时的工作中，也经常出现。</p><p>这个具有重大杀伤力的bug是如此的“幼稚”，如此的“好玩”，如此的“萌萌哒”，以至于到现在，人们还可以买到印有“GoTo Fail”的T恤衫，更别提业界对于这个问题的兴趣了。有很多文章，专门研究这一个“低级”安全漏洞；甚至有人探讨这个“低级”错误对于计算机软件教育的积极影响。</p><p>所有的危机都不应该被浪费，这一次也不例外。这些年，我也一直在思考<strong>为什么我们会犯如此“低级”的错误</strong>？即使是在苹果这样的大公司。反过来再想，我们应该如何尽可能避免类似的错误呢？</p><h2>人人都会犯错误</h2><p>没有人是完美的，人人都会犯错误。这应该是一个共识。这里面既有技术层面的因素，也有人类的行为模式的因素，也有现实环境的影响。我们在此不讨论人类进化和心智模式这样的严肃研究成果。但是，有两三个有意思的话题，我想和你聊聊。</p><p>第一个比较普遍的观点是好的程序员不会写坏的代码，要不然，就是他还不足够优秀。我尊重这个观点背后代表的美好愿望，但是这个观点本身我很难认同。它一定程度上忽视了人类犯错误的复杂性，和影响因素的多样性。</p><p>我认为，即使一个非常优秀的程序员，他主观上非常认真，能力又非常强，但他也会犯非常“低级”、“幼稚”的错误。所以，你不能因为苹果那个程序员，犯了那个非常低级的错误，就一棒子把他“打死”，认为他不是一个好的程序员。</p><p>第二个更加普遍的观点是同样的错误不能犯第二次。作为一名程序员，我同样尊重这个观点背后代表的美好期望。但是，我想给这个观点加一点点限制。这个观点应该是我们对自身的期望和要求；对于他人，我们可以更宽容；<strong>对于一个团队，我们首先要思考如何提供一种机制，</strong><strong>以减少此类错误的发生</strong>。如果强制要求他人错不过三，现实中，我们虽然发泄了怨气，但是往往错失了工作机制提升的机会。</p><p>第三个深入人心的观点是一个人犯了错误并不可怕，怕的是不承认错误。同样的，我理解这个观点背后代表的美好诉求。这是一个深入人心的观点，具有深厚的群众基础，我万万不敢造次。在软件工程领域，我想，在犯错这件事情上，我们还是要再多一点对自己的谅解，以及对他人的宽容。错误并不可怕，你不必为此深深自责，更不应该责备他人。要不然，<strong>一旦陷入自责和指责的漩涡，很多有建设意义的事情，我们可能没有意识去做；或者即使意识到了，也没法做，做不好</strong>。</p><p>我这么说，你是不是开始有疑惑了：人人都会犯错误，还重复犯，还不能批评，这怎么能编写出优秀的代码呢？换句话说就是，<strong>我们怎么样才会少犯错误呢？</strong></p><h2>把错误关在笼子里</h2><p>人人都会犯错误，苹果的工程师也不例外。所以，“GoTo Fail”的“幼稚”漏洞，实在是在情理之中。可是，这样的漏洞是如何逃脱重重“监管”，出现在最终的发布产品中，这多多少少让我有点出乎意料。</p><p>我们先来看看，这个错误是经过了怎样的“工序”，穿越了多少障碍，需要多少运气，最终才能被“发布”出来。</p><p>我把这样的工序总结为“五道关卡”。</p><p><strong>第一道关：程序员</strong></p><p><strong>提高程序员的修养，是一个永不过时的课题。从别人的失败和自己的失败中学习、积累、提高，是一个程序员成长的必修课</strong>。我知道，这是你和我一直都在努力做的事情。</p><p>第三行的“GoTo Fail”，实在算得上“漏网之鱼”，才可以逃过哪怕最平凡的程序员的眼睛，堂而皇之地占据了宝贵的一行代码，并且狠狠地玩耍了一把。</p><p>现在我们可以再回过来看看那段错误代码，如果是你写，你会怎么写呢？从你的角度来看，又有哪些细节可以帮助你避免类似的错误呢？这两个问题，你可以先停下来1分钟，想一想。</p><p>在我看来，上面那段代码，起码有两个地方可以优化。如果那位程序员能够按照规范的方式写代码，那“GoTo Fail”的漏洞应该是很容易被发现。我们在遇到问题的时候，也应该尽量朝着规范以及可持续改进的角度去思考错误背后的原因，而非一味地自责。</p><p>首先，<strong>他应该正确使用缩进</strong>。你现在可以再看下我优化后的代码，是不是第三行的代码特别刺眼，是不是更容易被“逮住”？</p><pre><code>    if ((error = doSomething()) != 0)\n        goto fail;\n    goto fail;\n    if ((error= doMore()) != 0)\n        goto fail;\nfail:\n    return error;\n</code></pre><p>其次，<strong>他应该使用大括号</strong>。使用大括号后，这个问题是不是就自动消失了？虽然，多余的这一行依然是多余的，但已经是没有多大危害的一行代码了。</p><pre><code>    if ((error = doSomething()) != 0) {\n        goto fail;\n        goto fail;\n    }\n    if ((error= doMore()) != 0) {\n        goto fail;\n    }\nfail:\n    return error;\n</code></pre><p>从上面这个例子里，不知道你有没有体会到，好的代码风格带来的好处呢？工作中，像苹果公司的那位程序员一样的错误，你应该没少遇到吧？那现在，你是不是可以思考如何从代码风格的角度来避免类似的错误呢？</p><p>魔鬼藏于细节。很多时候， <strong>优秀的代码源于我们对细节的热情和执着</strong>。可能，你遇到的或者想到的问题，不是每一个都有完美的答案或者解决办法。但是，<strong>如果你能够找到哪怕仅仅是一个小问题的一个小小的改进办法，都有可能会给你的代码质量带来巨大的提升和改变</strong>。</p><p>当然，你可能还会说，我代码风格不错，但是那个问题就是没看到，这也是极有可能的事情。是这样，所以也就有了第二道工序：编译器。</p><p><strong>第二道关：编译器</strong></p><p>编译器在代码质量方面，作为机器，恪尽职守，它可以帮助我们清除很多错误。还是以上面的漏洞代码为例子， 这一次其实编译器的防守并没有做好，因为它毫无察觉地漏过了多余的“GoTo Fail”。</p><p>在Java语言里，对于无法访问的代码（第三行后的代码）， Java编译器就会及时报告错误。而在2014年2月的GCC编译器里，并没有提供这样的功能。</p><p>至今，GCC社区对于无法访问代码的检查，还没有统一的意见 。然而，GCC社区并没有完全浪费这个“GoTo Fail”的问题 。为解决类似问题，从GCC 6开始，GCC社区为正确使用缩进提供了一个警告选项（ -Wmisleading-indentation ）。如果代码缩进格式没有正确使用，GCC就会提供编译时警告。现在，如果我们启用并且注意到了GCC编译器的警告，犯类似错误的机会应该会大幅度地降低了。</p><p>在这里，我要提醒你的是，对于编译器的警告，我们一定要非常警觉。能消除掉所有的警告，你就应该消除掉所有的警告。就算实在没有办法消除掉编译警告，那你也一定要搞清楚警告产生的原因，并确认编译警告不会产生任何后续问题。</p><p><strong>第三道关：回归测试 （Regression Testing）</strong></p><p>一般地，软件测试会尽可能地覆盖<strong>关键逻辑和负面清单</strong>，以确保关键功能能够正确执行，关键错误能够有效处理。一般情况下，无论是开发人员，还是测试人员，都要写很多测试代码，来测试软件是否达到预期的要求。</p><p>另外，这些测试代码还有一个关键用途就是做回归测试 。如果有代码变更，我们可以用回归测试来检查这样的代码变更有没有使代码变得更坏。</p><p>上述的“GoTo Fail”这样的代码变更，涉及到一个非常重要的负面检查点。遗憾的是，该检查点并没有包含在回归测试中；或者，在这个变更交付工程中，回归测试并没有被执行。</p><p>软件测试没有办法覆盖所有的使用场景。但是，我们千万要覆盖关键逻辑和负面清单。一个没有良好回归测试的软件，很难保证代码变更的质量；也会使得代码变更充满不确定性，从而大幅地提高代码维护的成本。</p><p><strong>第四道关：代码评审 （Code Review）</strong></p><p><strong>代码评审是一个有效的在软件研发过程中抵御人类缺陷的制度</strong>。通过更多的眼睛检查软件代码，被忽视的错误更容易被逮住，更好的设计和实现更容易浮现出来。</p><p>那代码评审是怎么实现的呢？一般情况下，代码评审是通过阅读代码变更进行的。而代码变更一般通过某种形式的工具呈现出来。比如OpenJDK采用的<a href=\"http://openjdk.java.net/guide/webrevHelp.html\">Webrev</a> 。你可以访问<a href=\"http://cr.openjdk.java.net/~xuelei/8171337/webrev.00/\">我的一个代码评审使用的代码变更页面</a> ，感受下这种呈现方式。</p><p>回到上面那个“GoTo Fail”的代码变更，看起来什么样子呢？下面是其中的一个代码变更版本示例：</p><pre><code>if ((err = SSLHashSHA1.update(&amp;hashCtx, &amp;signedParams)) != 0)\n    goto fail;\n+   goto fail;\nif ((err = SSLHashSHA1.final(&amp;hashCtx, &amp;hashOut)) != 0)\n    goto fail;\n</code></pre><p>添加的这行代码，还是相当刺眼的。多一些眼睛盯着这些代码，多一些形式展现这些变更，就会大幅度地降低问题藏匿的几率。</p><p>上述的“GoTo Fail”这样的代码变更，怎么就逃过代码评审者的眼睛呢？我想说的是，评审者也是人，我们不能期望评审者能发现所有的问题。</p><p><strong>第五道关：代码分析 （Code Analysis）</strong></p><p>静态代码分析（Static Code Analysis）是通过对源代码的检查来发现潜在问题的一种软件质量保障方式。有很多静态代码分析工具可以帮助你检查代码缺陷，比如说商业软件Coverity，以及开源软件FindBugs。你可以试试看，有哪些工具可以检测到这个“GoTo Fail”问题。</p><p>代码覆盖率（Code Coverage）是一个反映测试覆盖程度的指标。它不仅仅量化测试的指标，也是一个检测代码缺陷的好工具。如果你的代码覆盖率测试实现了行覆盖（Line Coverage），这个“GoTo Fail”问题也很难闯过这一关。</p><p>很显然，苹果的这一关也没有拦截住“GoTo Fail”。这样，“GoTo Fail”就像千里走单骑的关云长，闯过了五关（有些软件开发流程，也许会设置更多的关卡）。</p><h2>代码制造的流水线</h2><p>我们分析了这重重关卡，我特别想传递的一个想法就是，<strong>编写优秀的代码，不能仅仅依靠一个人的战斗</strong>。代码的优秀级别，依赖于每个关卡的优秀级别。高质量的代码，依赖于高质量的流水线。每道关卡都应该给程序员提供积极的反馈。这些反馈，在保障代码质量的同时，也能帮助程序员快速学习和成长。</p><p>可是，即使我们设置了重重关卡，“GoTo Fail”依然“过关斩将”，一行代码一路恣意玩耍。这里面有关卡虚设的因素，也有我们粗心大意的因素。我们怎么样才能打造更好的关卡，或者设置更好的笼子？尤其是，<strong>身为程序员，如何守好第一关？</strong></p><p>欢迎你在留言区说说自己的思考。下一讲，我们再接着聊这个话题。</p><h2>一起来动手</h2><p>下面的这段代码，有很多疏漏的地方。你看看自己读代码能发现多少问题？上面我们讨论的流程能够发现多少问题。不妨把讨论区看作代码评审区，看看在讨论区都有什么不同的发现。</p><pre><code>package com.example;\n\nimport java.util.Collections;\nimport java.util.List;\nimport javax.net.ssl.SNIServerName;\n\nclass ServerNameSpec {\n    final List serverNames;\n\n    ServerNameSpec(List serverNames) {\n        this.serverNames = Collections.unmodifiableList(serverNames);\n    }\n\n    public void addServerName(SNIServerName serverName) {\n        serverNames.add(serverName);        \n    }\n\n    public String toString() {\n        if (serverNames == null || serverNames.isEmpty())\n        return &quot;&lt;no server name indicator specified&gt;&quot;;\n        \n        StringBuilder builder = new StringBuilder(512);\n        for (SNIServerName sn : serverNames) {\n            builder.append(sn.toString());\n            builder.append(&quot;\\n&quot;);\n        }\n\n        return builder.toString();\n    }\n}\n</code></pre><p><span class=\"orange\">你也可以把这篇文章分享给你的朋友或者同事，一起来讨论一下这道小小的练习题。</span></p><p></p>","neighbors":{"left":{"article_title":"01 | 从条件运算符说起，反思什么是好代码","id":75980},"right":{"article_title":"03 | 优秀程序员的六个关键特质","id":76808}},"comments":[{"had_liked":false,"id":61749,"user_name":"范学雷","can_delete":false,"product_type":"c1","uid":1111315,"ip_address":"","ucode":"D7CBE4A33427BD","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","comment_is_top":true,"comment_ctime":1547790184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233721028271002e+18","product_id":100019601,"comment_content":"有一个问题我搞错了，部分留言的回复我已经不能修改了。 请见谅！<br><br>一个类，如果写了构造方法，不论有没有构造参数，就没有缺省的构造方法了(无参的构造方法)。所以，我们的例子中，只要写了有参的构造方法，并且serverNames没有初始化为空，final的serverNames就不会是空值了。","like_count":16},{"had_liked":false,"id":57619,"user_name":"老码不识途","can_delete":false,"product_type":"c1","uid":1027346,"ip_address":"","ucode":"18CC5EE8532153","user_header":"","comment_is_top":false,"comment_ctime":1546852214,"is_pvip":false,"replies":[{"id":"21340","content":"找到了好几个问题，很赞！<br>&gt; 1. 第7行：ServerNameSpec建议增加访问修饰符：public<br>要是公开类，需要加public；包内部的类，可以使用缺省的修饰符。<br><br>&gt; 2. 第11行：返回的是 UnmodifiableList 类型的List，但是在15行中使用了add方法，会抛：UnsupportedOperationException异常；<br>👍，是的。如果肉眼看不到，这是一个测试可以测出的错误。<br><br>&gt; 3. 第20行：没有缩进；也没有使用大扩号来包裹代码块。<br>是的，需要使用大扩号和缩进，两个都要用。<br><br>&gt; 4. 第23行：serverNames没有使用泛型，所以直接使用SNIServerName会编译不过。<br>是的，这是一个编译器可以发现的错误。","user_name":"作者回复","comment_id":57619,"uid":"1111315","ip_address":"","utype":1,"ctime":1547266869,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"91741165430","product_id":100019601,"comment_content":"1. 第7行：ServerNameSpec建议增加访问修饰符：public<br>2. 第11行：返回的是 UnmodifiableList 类型的List，但是在15行中使用了add方法，会抛：UnsupportedOperationException异常；<br>3. 第20行：没有缩进；也没有使用大扩号来包裹代码块。<br>4. 第23行：serverNames没有使用泛型，所以直接使用SNIServerName会编译不过。<br>","like_count":22,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435670,"discussion_content":"找到了好几个问题，很赞！\n&amp;gt; 1. 第7行：ServerNameSpec建议增加访问修饰符：public\n要是公开类，需要加public；包内部的类，可以使用缺省的修饰符。\n\n&amp;gt; 2. 第11行：返回的是 UnmodifiableList 类型的List，但是在15行中使用了add方法，会抛：UnsupportedOperationException异常；\n👍，是的。如果肉眼看不到，这是一个测试可以测出的错误。\n\n&amp;gt; 3. 第20行：没有缩进；也没有使用大扩号来包裹代码块。\n是的，需要使用大扩号和缩进，两个都要用。\n\n&amp;gt; 4. 第23行：serverNames没有使用泛型，所以直接使用SNIServerName会编译不过。\n是的，这是一个编译器可以发现的错误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547266869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57660,"user_name":"vector","can_delete":false,"product_type":"c1","uid":1107266,"ip_address":"","ucode":"F42E76E8966BBE","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/42/fbe890c0.jpg","comment_is_top":false,"comment_ctime":1546863775,"is_pvip":false,"replies":[{"id":"20816","content":"Spec一般是Specification的缩写，表示这个类表示某种实际的规范，包含特定的参数。比如RSAPublicKeySpec，表示一个RSA公开密钥是有那几个参数组成的。","user_name":"作者回复","comment_id":57660,"uid":"1111315","ip_address":"","utype":1,"ctime":1546913801,"user_name_real":"相磋相磨"}],"discussion_count":1,"race_medal":0,"score":"40201569439","product_id":100019601,"comment_content":"评论区高手如云，学到了好多。我想请教下老师，以Spec结尾命名这个类，是有什么说法吗，看到jdk源码也有好多这样的包名和类名，是特定的，指定的意思吗？","like_count":10,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435690,"discussion_content":"Spec一般是Specification的缩写，表示这个类表示某种实际的规范，包含特定的参数。比如RSAPublicKeySpec，表示一个RSA公开密钥是有那几个参数组成的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546913801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60848,"user_name":"悲劇の輪廻","can_delete":false,"product_type":"c1","uid":1367967,"ip_address":"","ucode":"73B3C152B65EE9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/X9fK7y43n7oAo19GlYHQZRQQ2Y0Dj8wHUEDXHWXUauxXOiaMtAc0TPtv1dyXHWDr4P7icDITmOLbaKVWXnY5oReQ/132","comment_is_top":false,"comment_ctime":1547562063,"is_pvip":false,"replies":[{"id":"21718","content":"Collections.unmodifiableList规范里没写会报异常，Collections.unmodifiableList(null)就不应该抛出异常。 但是，事实的确抛出了异常。我写了个一行的代码：<br>        List&lt;String&gt; list = Collections.unmodifiableList(null);<br><br>运行时的异常开起来象是：<br>Exception in thread &quot;main&quot; java.lang.NullPointerException<br>\tat java.base&#47;java.util.Collections$UnmodifiableCollection.&lt;init&gt;(Collections.java:1028)<br>\tat java.base&#47;java.util.Collections$UnmodifiableList.&lt;init&gt;(Collections.java:1301)<br>\tat java.base&#47;java.util.Collections.unmodifiableList(Collections.java:1288)<br><br>Collections类规范写了，“The methods of this class all throw a NullPointerException if the collections or class objects provided to them are null. ” 但是这种表达方式并不直观，很难找到，不好用。对我来说，这是JDK&#47;OpenJDK的一个bug。 <br><br>如果你想给OpenJDK报一个bug, 请往core-libs-dev@openjdk.java.net发邮件，或者使用https:&#47;&#47;bugs.java.com&#47;提交bug。<br><br>意外的收获！大概我们都太熟悉这个方法了，一直都没注意到这个问题。","user_name":"作者回复","comment_id":60848,"uid":"1111315","ip_address":"","utype":1,"ctime":1547603266,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"35907300431","product_id":100019601,"comment_content":"new ServerNameSpec的时候参数serverName给null，Collections.unmodifiableList(null)就报空指针了？","like_count":8,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436641,"discussion_content":"Collections.unmodifiableList规范里没写会报异常，Collections.unmodifiableList(null)就不应该抛出异常。 但是，事实的确抛出了异常。我写了个一行的代码：\n        List&amp;lt;String&amp;gt; list = Collections.unmodifiableList(null);\n\n运行时的异常开起来象是：\nException in thread &amp;quot;main&amp;quot; java.lang.NullPointerException\n\tat java.base/java.util.Collections$UnmodifiableCollection.&amp;lt;init&amp;gt;(Collections.java:1028)\n\tat java.base/java.util.Collections$UnmodifiableList.&amp;lt;init&amp;gt;(Collections.java:1301)\n\tat java.base/java.util.Collections.unmodifiableList(Collections.java:1288)\n\nCollections类规范写了，“The methods of this class all throw a NullPointerException if the collections or class objects provided to them are null. ” 但是这种表达方式并不直观，很难找到，不好用。对我来说，这是JDK/OpenJDK的一个bug。 \n\n如果你想给OpenJDK报一个bug, 请往core-libs-dev@openjdk.java.net发邮件，或者使用https://bugs.java.com/提交bug。\n\n意外的收获！大概我们都太熟悉这个方法了，一直都没注意到这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547603266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57633,"user_name":"王智","can_delete":false,"product_type":"c1","uid":1079657,"ip_address":"","ucode":"0335277F255F7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/69/5960a2af.jpg","comment_is_top":false,"comment_ctime":1546855168,"is_pvip":false,"replies":[{"id":"21341","content":"（修改后的回复，我遗漏了已经没有缺省构造函数的问题，谢谢@kenes孙）<br>&amp;gt; 1. class使用public修饰比较好,一个类有一个主类<br>嗯，要是公开类，需要使用public修饰符。 要是包内部类，缺省的也可以，只能在包内使用。<br><br>&amp;gt; 2. final变量应该初始化<br>final变量在构造函数里初始化也可以。<br><br>&amp;gt; 3. Collections.unmodifiableList()生成的List无法修改<br>对的，这是一个绕弯的问题，你找到了👍！<br><br>&amp;gt; 4. if条件尽量使用括号,下面的return应该缩进<br>是的，括号和缩进都要有！<br><br>&amp;gt; 5. List没有指定泛型,遍历就不是SNIServerName 类型,应该是Object<br>对的，我们再声明时，就应该把泛型类型这个问题处理好。<br><br>&amp;gt; 6 builder.append追加两次可以改成一次,节省运算<br>非常好的观点！<br><br>&amp;gt; 以上就是我的见解,可能不正确,还请谅解<br>留言区就是大家畅所欲言的、开放的地方。“人人都会犯错误”那一小节，我就是想让大家彻底放下犯错误的任何包袱。想说什么就说什么，😀放开点。<br>","user_name":"作者回复","comment_id":57633,"uid":"1111315","ip_address":"","utype":1,"ctime":1547267494,"user_name_real":"范学雷"}],"discussion_count":5,"race_medal":0,"score":"31611626240","product_id":100019601,"comment_content":"1. class使用public修饰比较好,一个类有一个主类<br>2. final变量应该初始化<br>3. Collections.unmodifiableList()生成的List无法修改<br>4. if条件尽量使用括号,下面的return应该缩进<br>5. List没有指定泛型,遍历就不是SNIServerName 类型,应该是Object<br>6 builder.append追加两次可以改成一次,节省运算<br><br>以上就是我的见解,可能不正确,还请谅解<br>","like_count":7,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435673,"discussion_content":"（修改后的回复，我遗漏了已经没有缺省构造函数的问题，谢谢@kenes孙）\n&amp;amp;gt; 1. class使用public修饰比较好,一个类有一个主类\n嗯，要是公开类，需要使用public修饰符。 要是包内部类，缺省的也可以，只能在包内使用。\n\n&amp;amp;gt; 2. final变量应该初始化\nfinal变量在构造函数里初始化也可以。\n\n&amp;amp;gt; 3. Collections.unmodifiableList()生成的List无法修改\n对的，这是一个绕弯的问题，你找到了👍！\n\n&amp;amp;gt; 4. if条件尽量使用括号,下面的return应该缩进\n是的，括号和缩进都要有！\n\n&amp;amp;gt; 5. List没有指定泛型,遍历就不是SNIServerName 类型,应该是Object\n对的，我们再声明时，就应该把泛型类型这个问题处理好。\n\n&amp;amp;gt; 6 builder.append追加两次可以改成一次,节省运算\n非常好的观点！\n\n&amp;amp;gt; 以上就是我的见解,可能不正确,还请谅解\n留言区就是大家畅所欲言的、开放的地方。“人人都会犯错误”那一小节，我就是想让大家彻底放下犯错误的任何包袱。想说什么就说什么，😀放开点。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547267494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251224,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/98/5386341d.jpg","nickname":"Coder","note":"","ucode":"70A8F12B864E4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344671,"discussion_content":"builder.append(sn.toString() + &#34;\\n&#34;);","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611554744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1501593,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJ5Hnw1tL9EWGdzhibCw89hibKjibwcyUBCSJsQWaxxfGu5AkBibibV0anaKqw3nf3ZP0UWy5BaEYyw2Q/132","nickname":"smilekaka","note":"","ucode":"C01D8020019FDC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1251224,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/98/5386341d.jpg","nickname":"Coder","note":"","ucode":"70A8F12B864E4D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579258,"discussion_content":"这样不是更慢么~~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657269811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344671,"ip_address":""},"score":579258,"extra":""}]},{"author":{"id":1624355,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","nickname":"洛奇","note":"","ucode":"662B4005721119","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17376,"discussion_content":"builder.append在需要追加换行的情况下怎么变成一次？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568967126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1501593,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJ5Hnw1tL9EWGdzhibCw89hibKjibwcyUBCSJsQWaxxfGu5AkBibibV0anaKqw3nf3ZP0UWy5BaEYyw2Q/132","nickname":"smilekaka","note":"","ucode":"C01D8020019FDC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1624355,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","nickname":"洛奇","note":"","ucode":"662B4005721119","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579259,"discussion_content":"没法变！~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657269831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":17376,"ip_address":""},"score":579259,"extra":""}]}]},{"had_liked":false,"id":66551,"user_name":"18118762952","can_delete":false,"product_type":"c1","uid":1302626,"ip_address":"","ucode":"830E7B0ECEAE40","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/cyDn1sxCnreaxlDibOMba6GicIUnr1mxcCNwulPTic33JaG8XNHHSN0YbVe6uB3ettVmwOJiaX4mOa08y7fSgnibuRQ/132","comment_is_top":false,"comment_ctime":1549957667,"is_pvip":false,"replies":[{"id":"23616","content":"抱歉，我应该解释下这个背景。<br><br>SNIServerName一般用在TLS的连接中，用来指明所连接的服务器的域名。比如，我们使用https:&#47;&#47;www.example.com&#47;，那么SNIServerName就应该设置成&quot;www.example.com”。建立连接时，这个域名会被校验，已确保的确时连接到了“www.example.com”, 而不是一个冒牌的网站。<br><br>为了更多的灵活性，TLS的规范定义可以使用多个域名。实际上，一般情况下（比如HTTPS）一个连接仅使用一个域名。ServerNameSpec就是用来描述规范定义的，而SNIServerName就是用来描述一个域名的。<br><br>由于一般情况下，只有一个域名，所以初始化内存够一个域名用的效率就会好一些。这个问题之所以找的好，是因为，如果不去阅读相关的规范，是不会想到这一点的，这是非常专业的内容。<br><br>类似的初始化设置，如果初始化的容量和需要的容量一样大小、或者大一点点，都没有问题。但是，如果容量并不显而易见，需要计算，比如要遍历一个大的列表，我们就大致估计一个数值就好了，不要去遍历列表。如果也估计不出来，使用512算是一个常见的选择。<br><br>","user_name":"作者回复","comment_id":66551,"uid":"1111315","ip_address":"","utype":1,"ctime":1549988457,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"27319761443","product_id":100019601,"comment_content":"看了一下SNIServerName 的取值返回在0-255之间，否则会抛异常，512的容量肯定大了，需要设置在0-255之间。<br>这是我非常非常非常喜欢的一点！这一个问题找的太好了！我们要去看不熟悉的类的规范，一定是看过才会找到这个问题。<br><br>上面的这点没太看明白，设置512是大了浪费还是其他，这里可能有多个对象的追加， 可以解释下吗<br>另外类似这种初始化设置一般设置多少合适？","like_count":6,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438832,"discussion_content":"抱歉，我应该解释下这个背景。\n\nSNIServerName一般用在TLS的连接中，用来指明所连接的服务器的域名。比如，我们使用https://www.example.com/，那么SNIServerName就应该设置成&amp;quot;www.example.com”。建立连接时，这个域名会被校验，已确保的确时连接到了“www.example.com”, 而不是一个冒牌的网站。\n\n为了更多的灵活性，TLS的规范定义可以使用多个域名。实际上，一般情况下（比如HTTPS）一个连接仅使用一个域名。ServerNameSpec就是用来描述规范定义的，而SNIServerName就是用来描述一个域名的。\n\n由于一般情况下，只有一个域名，所以初始化内存够一个域名用的效率就会好一些。这个问题之所以找的好，是因为，如果不去阅读相关的规范，是不会想到这一点的，这是非常专业的内容。\n\n类似的初始化设置，如果初始化的容量和需要的容量一样大小、或者大一点点，都没有问题。但是，如果容量并不显而易见，需要计算，比如要遍历一个大的列表，我们就大致估计一个数值就好了，不要去遍历列表。如果也估计不出来，使用512算是一个常见的选择。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549988457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60271,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1547453585,"is_pvip":false,"replies":[{"id":"21583","content":"赞！这真的是一个很大的问题！","user_name":"作者回复","comment_id":60271,"uid":"1111315","ip_address":"","utype":1,"ctime":1547520429,"user_name_real":"范学雷"}],"discussion_count":2,"race_medal":0,"score":"27317257361","product_id":100019601,"comment_content":"关于课后思考题，除了其他同学的回答的，我再加一个，就是这段代码没注释。目前可能这段代码比较短，通过代码阅读可以知晓这段代码做什么功能。但如果实际项目的一大段代码没注释，那真的很痛苦！！！","like_count":6,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436464,"discussion_content":"赞！这真的是一个很大的问题！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547520429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36709,"discussion_content":"其实如果是一个真正的项目。根据模块，包名，类名，最终到这个类暴露的行为，已经能够比较准确的描述他的职责了。这里作为一个例子，并没有明显意义的上下文。\n注释是否真的必须还存疑，因为有了注释，注释也要维护，如果随着版本变更，注释没有维护变成欺骗性注释就惨了 😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571407459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96361,"user_name":"Sisyphus235","can_delete":false,"product_type":"c1","uid":1366359,"ip_address":"","ucode":"829CC4CE0FA96E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooZCPFY1xgC81h0Eu3vuqbWG5MaBp8RNmvXXGQwupo2LpSOLq0rBlTDRAF1yM6wF09WdeG49rA9dJSVKIUBxnQ/132","comment_is_top":false,"comment_ctime":1558403735,"is_pvip":false,"replies":[{"id":"34557","content":"在我的工作场景下，这是很常见的事情。Code review最先看的不是code的细节，而是业务逻辑和设计这些更高层面的东西，然后才会去看代码的实现是不是准确。业务逻辑和设计的review，可以使用单独的文档（比如OpenJDK的CSR，JEP等），也可以使用内嵌的规范（比如Java的API规范），也可以使用代码内的注释。看不清业务逻辑的代码，要加上合理的注释；要不然，这早晚都是维护者要填的坑。","user_name":"作者回复","comment_id":96361,"uid":"1111315","ip_address":"","utype":1,"ctime":1558447291,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"18738272919","product_id":100019601,"comment_content":"日常开发免不了大量业务逻辑，在做 code review 的时候，他人的业务逻辑部分不熟悉会很影响 code review，否则只能逐行看代码质量，而不能从设计模式和更高层面做 review，请问大家如何处理这个问题？","like_count":4,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450846,"discussion_content":"在我的工作场景下，这是很常见的事情。Code review最先看的不是code的细节，而是业务逻辑和设计这些更高层面的东西，然后才会去看代码的实现是不是准确。业务逻辑和设计的review，可以使用单独的文档（比如OpenJDK的CSR，JEP等），也可以使用内嵌的规范（比如Java的API规范），也可以使用代码内的注释。看不清业务逻辑的代码，要加上合理的注释；要不然，这早晚都是维护者要填的坑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558447291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58372,"user_name":"夏落若","can_delete":false,"product_type":"c1","uid":1129160,"ip_address":"","ucode":"FAF9968E9B52CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/3a/c8/b85eeb42.jpg","comment_is_top":false,"comment_ctime":1547046318,"is_pvip":false,"replies":[{"id":"21345","content":"（修改后的回复，我遗漏了已经没有缺省构造函数的问题，谢谢@kenes孙）<br>总结的好！ <br><br>&amp;gt; 第7行，class使用public修饰<br>嗯，如果是公开的类，就要有访问权限。 如果是包内部的类，使用缺省的访问权限也可以。<br><br>&amp;gt; 第8行， final变量应该初始化，且不能在构造函数中修改serverNames的引用<br>final变量，在构造函数中初始化就行。<br><br>&amp;gt; 空构造函数，调用add会报错<br><br>空构造函数没有声明，使用了带参的构造函数，缺省的空构造函数就没有了。<br><br>&amp;gt; 第11行，Collections.unmodifiableList()生成的List无法修改<br>这个真不是，在构造函数中，可以初始化final变量。不过，也依赖于你最后怎么改的这个代码。你要是第8行初始化了，这里就不能再次初始化了。<br><br>&amp;gt; 第15行，List没有指定泛型,遍历就不是SNIServerName 类型,应该是Object<br>嗯，我们应该在第8行声明时，就把类型这个问题解决掉。<br><br>&amp;gt; 第19行，if条件尽量使用括号,下面的return应该缩进<br>是的，缩进和括号，都要有！<br><br>&amp;gt; 第23行，for循环可能会空引用。循环之前需要判断serverNamers是否是null<br>对的，需要检查空值。<br><br>&amp;gt; 第24，25行，builder.append追加两次可以改成一次,节省运算<br>嗯，可以写成一行；写两行也没什么毛病。<br><br>你看你看，你上面的找问题，其实就是代码评审最关键的部分。人人都可以做，人人都可以找出问题。鉴于人人都会犯错误，也不要求每个问题都找对，所有的问题都找到。看代码的眼睛越多，代码的错误隐藏的机会就越小。<br><br>如果我们这样看别人的代码，看自己的代码，不用多长时间，代码质量就会有显著的提升，编码越来越轻松。加油！","user_name":"作者回复","comment_id":58372,"uid":"1111315","ip_address":"","utype":1,"ctime":1547268905,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"18726915502","product_id":100019601,"comment_content":"自己看出的问题加上看留言别人发现的问题，总结一下所有问题如下：<br>第7行，class使用public修饰<br>第8行， final变量应该初始化，且不能在构造函数中修改serverNames的引用<br>空构造函数，调用add会报错<br>第11行，Collections.unmodifiableList()生成的List无法修改<br>第15行，List没有指定泛型,遍历就不是SNIServerName 类型,应该是Object<br>第19行，if条件尽量使用括号,下面的return应该缩进<br>第23行，for循环可能会空引用。循环之前需要判断serverNamers是否是null<br>第24，25行，builder.append追加两次可以改成一次,节省运算","like_count":4,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436032,"discussion_content":"（修改后的回复，我遗漏了已经没有缺省构造函数的问题，谢谢@kenes孙）\n总结的好！ \n\n&amp;amp;gt; 第7行，class使用public修饰\n嗯，如果是公开的类，就要有访问权限。 如果是包内部的类，使用缺省的访问权限也可以。\n\n&amp;amp;gt; 第8行， final变量应该初始化，且不能在构造函数中修改serverNames的引用\nfinal变量，在构造函数中初始化就行。\n\n&amp;amp;gt; 空构造函数，调用add会报错\n\n空构造函数没有声明，使用了带参的构造函数，缺省的空构造函数就没有了。\n\n&amp;amp;gt; 第11行，Collections.unmodifiableList()生成的List无法修改\n这个真不是，在构造函数中，可以初始化final变量。不过，也依赖于你最后怎么改的这个代码。你要是第8行初始化了，这里就不能再次初始化了。\n\n&amp;amp;gt; 第15行，List没有指定泛型,遍历就不是SNIServerName 类型,应该是Object\n嗯，我们应该在第8行声明时，就把类型这个问题解决掉。\n\n&amp;amp;gt; 第19行，if条件尽量使用括号,下面的return应该缩进\n是的，缩进和括号，都要有！\n\n&amp;amp;gt; 第23行，for循环可能会空引用。循环之前需要判断serverNamers是否是null\n对的，需要检查空值。\n\n&amp;amp;gt; 第24，25行，builder.append追加两次可以改成一次,节省运算\n嗯，可以写成一行；写两行也没什么毛病。\n\n你看你看，你上面的找问题，其实就是代码评审最关键的部分。人人都可以做，人人都可以找出问题。鉴于人人都会犯错误，也不要求每个问题都找对，所有的问题都找到。看代码的眼睛越多，代码的错误隐藏的机会就越小。\n\n如果我们这样看别人的代码，看自己的代码，不用多长时间，代码质量就会有显著的提升，编码越来越轻松。加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547268905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59632,"user_name":"kenes","can_delete":false,"product_type":"c1","uid":1194947,"ip_address":"","ucode":"3EC72F5BCE2B5C","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/c3/1cede408.jpg","comment_is_top":false,"comment_ctime":1547394223,"is_pvip":false,"replies":[{"id":"21578","content":"你是对的，这一点我遗漏了。 谢谢！<br><br>我要回头改改给其他人的留言，免得误导了大家。","user_name":"作者回复","comment_id":59632,"uid":"1111315","ip_address":"","utype":1,"ctime":1547519442,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"14432296111","product_id":100019601,"comment_content":"已经有了有参的构造函数，就没有了默认的无参构造函数，所以根本new不了，自然就没有空构造函数调用add的问题了吧……","like_count":3,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436371,"discussion_content":"你是对的，这一点我遗漏了。 谢谢！\n\n我要回头改改给其他人的留言，免得误导了大家。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547519442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57944,"user_name":"大於一","can_delete":false,"product_type":"c1","uid":1366453,"ip_address":"","ucode":"E28D79126F9684","user_header":"https://static001.geekbang.org/account/avatar/00/14/d9/b5/47ca1f17.jpg","comment_is_top":false,"comment_ctime":1546948361,"is_pvip":false,"replies":[{"id":"20955","content":"回归测试，简单的说，就是每做一个变更，把测试都跑一遍，免得变更引起我们意想不到的麻烦。<br><br>找找有没有这方面的专栏。如果没有，你在给我留言，我们看看怎么样介绍些这方面的内容。","user_name":"作者回复","comment_id":57944,"uid":"1111315","ip_address":"","utype":1,"ctime":1547002681,"user_name_real":"相磋相磨"}],"discussion_count":1,"race_medal":0,"score":"14431850249","product_id":100019601,"comment_content":"回归测试其实怎么测? 不懂","like_count":3,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435839,"discussion_content":"回归测试，简单的说，就是每做一个变更，把测试都跑一遍，免得变更引起我们意想不到的麻烦。\n\n找找有没有这方面的专栏。如果没有，你在给我留言，我们看看怎么样介绍些这方面的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547002681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57532,"user_name":"Kai","can_delete":false,"product_type":"c1","uid":1024088,"ip_address":"","ucode":"CD3FACF1803D8F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/58/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1546829473,"is_pvip":false,"replies":[{"id":"20735","content":"谢谢了","user_name":"作者回复","comment_id":57532,"uid":"1111315","ip_address":"","utype":1,"ctime":1546834294,"user_name_real":"相磋相磨"}],"discussion_count":1,"race_medal":0,"score":"14431731361","product_id":100019601,"comment_content":"小黄鸭就是把你的代码逻辑解释给一个玩具听","like_count":3,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435631,"discussion_content":"谢谢了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546834294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57480,"user_name":"chengang","can_delete":false,"product_type":"c1","uid":1028707,"ip_address":"","ucode":"814EEBFA5396ED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/63/64369296.jpg","comment_is_top":false,"comment_ctime":1546821378,"is_pvip":false,"replies":[{"id":"21326","content":"<br>&amp;gt; servernames和servername肉眼很难区分<br>嗯，这个点很好！<br><br>&amp;gt; 512定义为常量是否更加合理<br>这也是一个很棒的观察点，是要考虑这个问题的。","user_name":"作者回复","comment_id":57480,"uid":"1111315","ip_address":"","utype":1,"ctime":1547263286,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"14431723266","product_id":100019601,"comment_content":"除了@pyhhou提到命名规范也很重要，servernames和servername肉眼很难区分,512定义为常量是否更加合理","like_count":3,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435596,"discussion_content":"\n&amp;amp;gt; servernames和servername肉眼很难区分\n嗯，这个点很好！\n\n&amp;amp;gt; 512定义为常量是否更加合理\n这也是一个很棒的观察点，是要考虑这个问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547263286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60730,"user_name":"wupeng","can_delete":false,"product_type":"c1","uid":1241819,"ip_address":"","ucode":"20DA46E75A0EB9","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/db/4c613c23.jpg","comment_is_top":false,"comment_ctime":1547538891,"is_pvip":false,"replies":[{"id":"21689","content":"第十九行的serverNames.isEmpty()，判断的是serverNames这个集合里有没有东西。一个集合里，也可以有空值，也就是说sn可能是个空值。比如说， {null, null}就不是空集合，里面有两个空值的条目。所以，我们调用sn的方法之前，还要判断sn是不是空值。","user_name":"作者回复","comment_id":60730,"uid":"1111315","ip_address":"","utype":1,"ctime":1547571755,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"10137473483","product_id":100019601,"comment_content":"看了前面的评论 问一下 19行 serverNames.isEmpty() 已经对erverNames判空了, 下面24行 sn.toString();就不会出现空指针了吧?  麻烦回答下 很疑惑 谢谢","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436601,"discussion_content":"第十九行的serverNames.isEmpty()，判断的是serverNames这个集合里有没有东西。一个集合里，也可以有空值，也就是说sn可能是个空值。比如说， {null, null}就不是空集合，里面有两个空值的条目。所以，我们调用sn的方法之前，还要判断sn是不是空值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547571755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57756,"user_name":"ZackZzzzzz","can_delete":false,"product_type":"c1","uid":1369491,"ip_address":"","ucode":"366B99D31BA6CE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/v5gEtVWR1F0vNQibpxN5Ga9GHGkFWoLQqxwXPh4JPx9RTmSN32lWHcswozic659h4hoibYxnNW3iayWC3zQV0hxXOQ/132","comment_is_top":false,"comment_ctime":1546903056,"is_pvip":false,"replies":[{"id":"21342","content":"是的，@Override一定不要丢了！👍","user_name":"作者回复","comment_id":57756,"uid":"1111315","ip_address":"","utype":1,"ctime":1547267530,"user_name_real":"范学雷"}],"discussion_count":2,"race_medal":0,"score":"10136837648","product_id":100019601,"comment_content":"除了已经有的评论，还忘了@Override annotation. 这些其实很多在Effective Java有讲","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435744,"discussion_content":"是的，@Override一定不要丢了！👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547267530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454,"discussion_content":"这个不是强制性的，但是个好的习惯吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561600088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57587,"user_name":"W.YH","can_delete":false,"product_type":"c1","uid":1161636,"ip_address":"","ucode":"9BBE1EE38CDCAF","user_header":"https://static001.geekbang.org/account/avatar/00/11/b9/a4/e9d2f9ba.jpg","comment_is_top":false,"comment_ctime":1546842648,"is_pvip":false,"replies":[{"id":"21339","content":"👍经验丰富的啊！<br>&gt;（1）类使用默认的权限修饰符，只能在同包中可见，无法应用到其他包下。<br>是的。所以，这是不是一个问题，取决于我们想不想把这个类定义成公开的类。<br><br>&gt;（2）全局变量serverNames 使用的也是默认的权限修饰符，最好是变成私有的private，确保不会在其他地方被修改或者初始化。并且使用final关键字修饰，表示是一个只读的变量，不可被修改。<br>如果这个类是一个包内使用的类，如果final还不够，你再想想，如果不使用private权限，还有什么办法确保这个变量不能再其他地方修改？<br><br>&gt;（3）2行和6行的参数名相同，但是类是不同的，最好不要出现这样的命名情况，6行的参数名应该修改成其他的。<br>👍，这种命名的确不清晰！<br><br>&gt;（4）在13行forEach循环的时候，遍历的是List&lt;T&gt; ，默认是Object（编译报错），而不是List&lt;SNIServerName&gt; 这个可以在第二行定义全局变量的时候就指定好。<br>是的，这是一个编译器可以帮助我们的错误。 应该再声明时，就解决掉这个问题。👍<br><br>&gt;（5）第12行 使用StringBuilder是线程不安全的，可以考虑使用StringBuffer，且append可以往后添加，不用再多起一行。builder.append(sn.toString()).append(&quot;\\r\\n&quot;);<br>为什么这里要使用线程安全的类呢？ <br><br>&gt;（6）看了一下SNIServerName 的取值返回在0-255之间，否则会抛异常，512的容量肯定大了，需要设置在0-255之间。<br>这是我非常非常非常喜欢的一点！这一个问题找的太好了！我们要去看不熟悉的类的规范，一定是看过才会找到这个问题。<br><br>经验丰富的高手啊！<br><br>还有一个藏的很深的问题，还没有人发现。 你看看ServerNameSpec构造函数，特别是Collections.unmodifiableList()的规范，能找出这个绕了十八个弯的问题吗？😀这是一个挑战性120分的十八个弯。","user_name":"作者回复","comment_id":57587,"uid":"1111315","ip_address":"","utype":1,"ctime":1547266615,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"10136777240","product_id":100019601,"comment_content":"1.class ServerNameSpec {<br>2    final List serverNames;<br>3    ServerNameSpec(List serverNames) {<br>4        this.serverNames = Collections.unmodifiableList(serverNames);<br>5   }<br>6   public void addServerName(SNIServerName serverName) {<br>7       serverNames.add(serverName);        <br>8   }<br>9   public String toString() {<br>10       if (serverNames == null || serverNames.isEmpty())<br>11      return &quot;&lt;no server name indicator specified&gt;&quot;;<br>12        StringBuilder builder = new StringBuilder(512);<br>13        for (SNIServerName sn : serverNames) {<br>14           builder.append(sn.toString());<br>15          builder.append(&quot;\\n&quot;);<br>16        }<br>17        return builder.toString();<br>18    }<br>19 }<br><br>（1）类使用默认的权限修饰符，只能在同包中可见，无法应用到其他包下。<br>（2）全局变量serverNames 使用的也是默认的权限修饰符，最好是变成私有的private，确保不会在其他地方被修改或者初始化。并且使用final关键字修饰，表示是一个只读的变量，不可被修改。<br>（3）2行和6行的参数名相同，但是类是不同的，最好不要出现这样的命名情况，6行的参数名应该修改成其他的。<br>（4）在13行forEach循环的时候，遍历的是List&lt;T&gt; ，默认是Object（编译报错），而不是List&lt;SNIServerName&gt; 这个可以在第二行定义全局变量的时候就指定好。<br>（5）第12行 使用StringBuilder是线程不安全的，可以考虑使用StringBuffer，且append可以往后添加，不用再多起一行。builder.append(sn.toString()).append(&quot;\\r\\n&quot;);<br>（6）看了一下SNIServerName 的取值返回在0-255之间，否则会抛异常，512的容量肯定大了，需要设置在0-255之间。<br><br>其他的暂时还没有发现，还请老师指点。","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435655,"discussion_content":"👍经验丰富的啊！\n&amp;gt;（1）类使用默认的权限修饰符，只能在同包中可见，无法应用到其他包下。\n是的。所以，这是不是一个问题，取决于我们想不想把这个类定义成公开的类。\n\n&amp;gt;（2）全局变量serverNames 使用的也是默认的权限修饰符，最好是变成私有的private，确保不会在其他地方被修改或者初始化。并且使用final关键字修饰，表示是一个只读的变量，不可被修改。\n如果这个类是一个包内使用的类，如果final还不够，你再想想，如果不使用private权限，还有什么办法确保这个变量不能再其他地方修改？\n\n&amp;gt;（3）2行和6行的参数名相同，但是类是不同的，最好不要出现这样的命名情况，6行的参数名应该修改成其他的。\n👍，这种命名的确不清晰！\n\n&amp;gt;（4）在13行forEach循环的时候，遍历的是List&amp;lt;T&amp;gt; ，默认是Object（编译报错），而不是List&amp;lt;SNIServerName&amp;gt; 这个可以在第二行定义全局变量的时候就指定好。\n是的，这是一个编译器可以帮助我们的错误。 应该再声明时，就解决掉这个问题。👍\n\n&amp;gt;（5）第12行 使用StringBuilder是线程不安全的，可以考虑使用StringBuffer，且append可以往后添加，不用再多起一行。builder.append(sn.toString()).append(&amp;quot;\\r\\n&amp;quot;);\n为什么这里要使用线程安全的类呢？ \n\n&amp;gt;（6）看了一下SNIServerName 的取值返回在0-255之间，否则会抛异常，512的容量肯定大了，需要设置在0-255之间。\n这是我非常非常非常喜欢的一点！这一个问题找的太好了！我们要去看不熟悉的类的规范，一定是看过才会找到这个问题。\n\n经验丰富的高手啊！\n\n还有一个藏的很深的问题，还没有人发现。 你看看ServerNameSpec构造函数，特别是Collections.unmodifiableList()的规范，能找出这个绕了十八个弯的问题吗？😀这是一个挑战性120分的十八个弯。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547266615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57521,"user_name":"chon","can_delete":false,"product_type":"c1","uid":1068925,"ip_address":"","ucode":"1C32170972F726","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7d/dd852b04.jpg","comment_is_top":false,"comment_ctime":1546827436,"is_pvip":true,"replies":[{"id":"20749","content":"讨论区高手很多，很多留言很有参考价值，带来新的见解，也是我学习的机会。我也建议你看看讨论区不同人的不同观察角度。每一个问题，都没有标准的答案。用好讨论区，我希望讨论区的价值比专栏文章的价值还要大。当然，参与讨论的人越多钱，价值就越大，我们的收获就越多。<br><br>让我们在讨论区把练手题的疑问解决掉。为了不影响大家思考、讨论，我会稍晚几天回复练手题的问题。","user_name":"作者回复","comment_id":57521,"uid":"1111315","ip_address":"","utype":1,"ctime":1546846185,"user_name_real":"相磋相磨"}],"discussion_count":1,"race_medal":0,"score":"10136762028","product_id":100019601,"comment_content":"建议，每次新的课程开始时候，能对上一次课程的问题进行解答一下，便于加深印象，而不是在课程结束时候，再统一解答","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435623,"discussion_content":"讨论区高手很多，很多留言很有参考价值，带来新的见解，也是我学习的机会。我也建议你看看讨论区不同人的不同观察角度。每一个问题，都没有标准的答案。用好讨论区，我希望讨论区的价值比专栏文章的价值还要大。当然，参与讨论的人越多钱，价值就越大，我们的收获就越多。\n\n让我们在讨论区把练手题的疑问解决掉。为了不影响大家思考、讨论，我会稍晚几天回复练手题的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546846185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57514,"user_name":"hz","can_delete":false,"product_type":"c1","uid":1002250,"ip_address":"","ucode":"8BF6ACDCC7D61C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/0a/4bb137d9.jpg","comment_is_top":false,"comment_ctime":1546826507,"is_pvip":false,"replies":[{"id":"21328","content":"为什么会引起空指针异常？ 能多解释下吗？","user_name":"作者回复","comment_id":57514,"uid":"1111315","ip_address":"","utype":1,"ctime":1547263616,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"10136761099","product_id":100019601,"comment_content":"15行和24行可能引发空指针异常","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435618,"discussion_content":"为什么会引起空指针异常？ 能多解释下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547263616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323427,"user_name":"张逃逃","can_delete":false,"product_type":"c1","uid":1435550,"ip_address":"","ucode":"DBF3A573CDF7DB","user_header":"https://static001.geekbang.org/account/avatar/00/15/e7/9e/5853da22.jpg","comment_is_top":false,"comment_ctime":1637897085,"is_pvip":true,"replies":[{"id":"117340","content":"是的，单元测试不能没有，否则时间越久越头疼。","user_name":"作者回复","comment_id":323427,"uid":"1111315","ip_address":"","utype":1,"ctime":1637906106,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5932864381","product_id":100019601,"comment_content":"我认为把错误关在笼子里的第一步就是应该为自己写的代码写单元测试","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533564,"discussion_content":"是的，单元测试不能没有，否则时间越久越头疼。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637906106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73746,"user_name":"Neal","can_delete":false,"product_type":"c1","uid":1111680,"ip_address":"","ucode":"25F7926377EE1A","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/80/7dfdd3e3.jpg","comment_is_top":false,"comment_ctime":1551967415,"is_pvip":false,"replies":[{"id":"26933","content":"要分场景，参数传入，可以使用抽象类，这样的接口设计未来可以容纳更多的抽象类实现。这就是我们说的可扩展性。实例化的时候，使用实现类。","user_name":"作者回复","comment_id":73746,"uid":"1111315","ip_address":"","utype":1,"ctime":1551976785,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"5846934711","product_id":100019601,"comment_content":"老师，我有个疑问: SNIServerName是抽象类，无法直接使用，而它只有SNIHostName一个子类，不熟悉的人使用的时候，要经历无法抽象类无法实例化，查找API的过程，浪费了调用者的时间，用SNIHostName是不是更好？","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442259,"discussion_content":"要分场景，参数传入，可以使用抽象类，这样的接口设计未来可以容纳更多的抽象类实现。这就是我们说的可扩展性。实例化的时候，使用实现类。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551976785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57831,"user_name":"等","can_delete":false,"product_type":"c1","uid":1276606,"ip_address":"","ucode":"8CEE29571ABF60","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/be/f4d837d3.jpg","comment_is_top":false,"comment_ctime":1546920802,"is_pvip":false,"replies":[{"id":"20960","content":"是的，这是一个隐蔽的较深的问题。高手！","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1547004376,"ip_address":"","comment_id":57831,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841888098","product_id":100019601,"comment_content":"空构造函数，调用add会报错的吧","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435781,"discussion_content":"是的，这是一个隐蔽的较深的问题。高手！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547004376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57739,"user_name":"李英权","can_delete":false,"product_type":"c1","uid":1076081,"ip_address":"","ucode":"FECAC14A9C414B","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/71/e833b14a.jpg","comment_is_top":false,"comment_ctime":1546878337,"is_pvip":false,"replies":[{"id":"20808","content":"findsbugs还在，好久不更新了。spotbugs是活跃的。","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1546912899,"ip_address":"","comment_id":57739,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841845633","product_id":100019601,"comment_content":"findbugs现在好像改名字叫spotbugs了","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435730,"discussion_content":"findsbugs还在，好久不更新了。spotbugs是活跃的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546912899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57719,"user_name":"sdmanooo","can_delete":false,"product_type":"c1","uid":1366548,"ip_address":"","ucode":"660AA12593BA52","user_header":"","comment_is_top":false,"comment_ctime":1546874527,"is_pvip":false,"replies":[{"id":"20811","content":"这也是其中一种猜想。","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1546913125,"ip_address":"","comment_id":57719,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841841823","product_id":100019601,"comment_content":"这个bug很可能在准备上线合并代码的时候给合并错了","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435719,"discussion_content":"这也是其中一种猜想。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546913125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57558,"user_name":"aguan(^･ｪ･^)","can_delete":false,"product_type":"c1","uid":1107177,"ip_address":"","ucode":"04833EF2D18E1A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/e9/0dd3829f.jpg","comment_is_top":false,"comment_ctime":1546833665,"is_pvip":false,"replies":[{"id":"21338","content":"（修改后的回复，我遗漏了已经没有缺省构造函数的问题，谢谢@kenes孙）<br>&amp;amp;gt; 1、成员变量 serverNames被final修饰，需要初始化，且不能在构造函数中修改serverNames的引用<br>final变量可以在构造函数里初始化。<br><br>&amp;amp;gt; 2、toString()方法中<br>&amp;amp;gt; 2.1 if语句需要 { }<br>对的，要坚持使用大括号！<br><br>&amp;amp;gt; 2.2 return语句没有缩进<br>是的，缩进没做好，格式很难看。<br><br>&amp;amp;gt; 2.3 for循环中的变量sn.toString()可能会出现NullPointerExeception<br>这个问题找的好！","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547265146,"ip_address":"","comment_id":57558,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5841800961","product_id":100019601,"comment_content":"1、成员变量 serverNames被final修饰，需要初始化，且不能在构造函数中修改serverNames的引用<br>2、toString()方法中<br>   2.1 if语句需要 { }<br>   2.2 return语句没有缩进<br>   2.3 for循环中的变量sn.toString()可能会出现NullPointerExeception<br>   ","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435640,"discussion_content":"（修改后的回复，我遗漏了已经没有缺省构造函数的问题，谢谢@kenes孙）\n&amp;amp;amp;gt; 1、成员变量 serverNames被final修饰，需要初始化，且不能在构造函数中修改serverNames的引用\nfinal变量可以在构造函数里初始化。\n\n&amp;amp;amp;gt; 2、toString()方法中\n&amp;amp;amp;gt; 2.1 if语句需要 { }\n对的，要坚持使用大括号！\n\n&amp;amp;amp;gt; 2.2 return语句没有缩进\n是的，缩进没做好，格式很难看。\n\n&amp;amp;amp;gt; 2.3 for循环中的变量sn.toString()可能会出现NullPointerExeception\n这个问题找的好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547265146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455,"discussion_content":"2.3 for循环中的变量sn.toString()可能会出现NullPointerExeception\n在前面已经判空过sn所属的list了，所以到了sn处应该不会有NPE问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561600234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57554,"user_name":"qazwsx","can_delete":false,"product_type":"c1","uid":1366505,"ip_address":"","ucode":"E8F6D7FD26C34F","user_header":"https://static001.geekbang.org/account/avatar/00/14/d9/e9/eaa1222d.jpg","comment_is_top":false,"comment_ctime":1546832591,"is_pvip":false,"replies":[{"id":"21335","content":"<br>惊讶丰富啊！好几个藏得深的问题都找到了。<br><br>&amp;gt; 7-8行缺少访问权限<br>嗯，如果是公开的类，就要有访问权限。 如果是包内部的类，使用缺省的访问权限也可以。<br><br>&amp;gt; 8行没有泛型标识<br>赞，这是这个代码最大的问题之一。<br><br>&amp;gt; 15行不能直接添加，因为serverNames是不可修改集合，并且在serverNames初始化之前是null，会出现空引用<br>这是一个绕了好几个弯的问题。你找到了。 你能给我们解释一下，什么情况下，serverNames可能是null吗？<br><br>&amp;gt; 20行少了大括号和缩进<br>对的，大括号和缩进都要有！<br><br>&amp;gt; 23行for循环可能会空引用。循环之前需要判断serverNamers是否是null<br>是的，这也是一个藏的有点深的问题。<br>","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547264767,"ip_address":"","comment_id":57554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841799887","product_id":100019601,"comment_content":"7-8行缺少访问权限<br>8行没有泛型标识<br>15行不能直接添加，因为serverNames是不可修改集合，并且在serverNames初始化之前是null，会出现空引用<br>20行少了大括号和缩进<br>23行for循环可能会空引用。循环之前需要判断serverNamers是否是null","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435638,"discussion_content":"\n惊讶丰富啊！好几个藏得深的问题都找到了。\n\n&amp;amp;gt; 7-8行缺少访问权限\n嗯，如果是公开的类，就要有访问权限。 如果是包内部的类，使用缺省的访问权限也可以。\n\n&amp;amp;gt; 8行没有泛型标识\n赞，这是这个代码最大的问题之一。\n\n&amp;amp;gt; 15行不能直接添加，因为serverNames是不可修改集合，并且在serverNames初始化之前是null，会出现空引用\n这是一个绕了好几个弯的问题。你找到了。 你能给我们解释一下，什么情况下，serverNames可能是null吗？\n\n&amp;amp;gt; 20行少了大括号和缩进\n对的，大括号和缩进都要有！\n\n&amp;amp;gt; 23行for循环可能会空引用。循环之前需要判断serverNamers是否是null\n是的，这也是一个藏的有点深的问题。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547264767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57531,"user_name":"Kai","can_delete":false,"product_type":"c1","uid":1024088,"ip_address":"","ucode":"CD3FACF1803D8F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/58/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1546829308,"is_pvip":false,"replies":[{"id":"21332","content":"<br>&amp;gt; 1）serverNames 应该申明为 private。<br>嗯，如果是公开的类，应该申明为 private。<br><br>&amp;gt; 2）L19 应该使用大括号。L20应该注意缩进<br>对的，就应该这样。大括号和缩进，一个都不能少。<br><br>&amp;gt; 3）builder 有可能会stack overflow<br>能多解释一点，为什么会发生stack overflow吗？<br><br>&amp;gt; 4）serverNames并没有申明List&amp;lt;String&amp;gt;，所以sn有可能不是String，也就没有toString()方法<br>Java的每个对象，都有一个toString()方法，继承自Object.toString()。不过，这一行的确有个问题，你再想想看。<br>","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547264370,"ip_address":"","comment_id":57531,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5841796604","product_id":100019601,"comment_content":"1）serverNames 应该申明为 private。<br>2）L19 应该使用大括号。L20应该注意缩进<br>3）builder 有可能会stack overflow<br>4）serverNames并没有申明List&lt;String&gt;，所以sn有可能不是String，也就没有toString()方法","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435630,"discussion_content":"\n&amp;amp;gt; 1）serverNames 应该申明为 private。\n嗯，如果是公开的类，应该申明为 private。\n\n&amp;amp;gt; 2）L19 应该使用大括号。L20应该注意缩进\n对的，就应该这样。大括号和缩进，一个都不能少。\n\n&amp;amp;gt; 3）builder 有可能会stack overflow\n能多解释一点，为什么会发生stack overflow吗？\n\n&amp;amp;gt; 4）serverNames并没有申明List&amp;amp;lt;String&amp;amp;gt;，所以sn有可能不是String，也就没有toString()方法\nJava的每个对象，都有一个toString()方法，继承自Object.toString()。不过，这一行的确有个问题，你再想想看。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547264370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458,"discussion_content":"serverNames并没有申明List&amp;lt;String&amp;gt;，所以sn有可能不是String，也就没有toString()方法\nJava的每个对象，都有一个toString()方法，继承自Object.toString()。不过，这一行的确有个问题，你再想想看。\n如果serverNames里面的对象没有实现自己的toString方法，默认从Object继承来的toString是打印对象在堆内的内存地址，而不是真实可读的serverName，这可能背离了业务初衷","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561600554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57528,"user_name":"奕超","can_delete":false,"product_type":"c1","uid":1040045,"ip_address":"","ucode":"447069B3357999","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/ad/864516e4.jpg","comment_is_top":false,"comment_ctime":1546828700,"is_pvip":false,"replies":[{"id":"21329","content":"大大的赞！ 这是一个绕了个大弯的问题，你看出来了👍！","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547263711,"ip_address":"","comment_id":57528,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841795996","product_id":100019601,"comment_content":"构造方法返回的是不可修改的List，add的时候应该会报错","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435627,"discussion_content":"大大的赞！ 这是一个绕了个大弯的问题，你看出来了👍！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547263711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57522,"user_name":"李英权","can_delete":false,"product_type":"c1","uid":1076081,"ip_address":"","ucode":"FECAC14A9C414B","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/71/e833b14a.jpg","comment_is_top":false,"comment_ctime":1546827443,"is_pvip":false,"replies":[{"id":"20739","content":"是的，所以这个安全漏洞让人很吃惊！","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1546838372,"ip_address":"","comment_id":57522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841794739","product_id":100019601,"comment_content":"goto fail了 岂不是全都校验失败，正常的也会失败，这应该很容易测出来啊？","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435624,"discussion_content":"是的，所以这个安全漏洞让人很吃惊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546838372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57497,"user_name":"阿姐的阿杰","can_delete":false,"product_type":"c1","uid":1001156,"ip_address":"","ucode":"89F5CF4D1E0C2D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/c4/128338f8.jpg","comment_is_top":false,"comment_ctime":1546823115,"is_pvip":false,"replies":[{"id":"20837","content":"为什么要定义常量呢？ 你可以先考虑这个问题，然后就有自己的答案了。<br><br>我个人不喜欢定义内部常量，除非使用常量真的能让代码更好看，更容易维护。比如说，数值太长，用的次数多。<br><br>规范很难大家都有一致认可。如果有强制规范，自己也不是强烈地反对，先遵守着。<br><br>嗯，搜索下才知道魔法值是什么。谢谢🙏涨知识了！","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1546918981,"ip_address":"","comment_id":57497,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841790411","product_id":100019601,"comment_content":"有个问题想请教下老师及各位读者：<br><br>在某些编码规范里要求不要使用魔法值。但是通常会一个类里出现多处未定义常量。<br><br>诸如 map.put(&quot;user_name&quot;, userName) 这样的代码是要把 &quot;user_name&quot; 先进行例如 private static final String USER_NAME = &quot;user_name&quot;; 这样处理一下吗？<br><br>在工作中大家通常是如何处理这种情况的？","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435606,"discussion_content":"为什么要定义常量呢？ 你可以先考虑这个问题，然后就有自己的答案了。\n\n我个人不喜欢定义内部常量，除非使用常量真的能让代码更好看，更容易维护。比如说，数值太长，用的次数多。\n\n规范很难大家都有一致认可。如果有强制规范，自己也不是强烈地反对，先遵守着。\n\n嗯，搜索下才知道魔法值是什么。谢谢🙏涨知识了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546918981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351414,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1657774285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657774285","product_id":100019601,"comment_content":"一眼看上去没多大问题，是不是废了","like_count":0},{"had_liked":false,"id":351413,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1657774251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657774251","product_id":100019601,"comment_content":"优秀的代码源于我们对细节的热情和执着--记下来","like_count":0},{"had_liked":false,"id":325575,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1639028182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639028182","product_id":100019601,"comment_content":"守好第一关（按由容易到困难排序）<br>1、使用静态代码检查工具（例如SonarLint）<br>2、编写有效的单元测试（需要大量刻意练习）<br>3、持续学习+实践，写出人人都能读懂的代码","like_count":0},{"had_liked":false,"id":323426,"user_name":"张逃逃","can_delete":false,"product_type":"c1","uid":1435550,"ip_address":"","ucode":"DBF3A573CDF7DB","user_header":"https://static001.geekbang.org/account/avatar/00/15/e7/9e/5853da22.jpg","comment_is_top":false,"comment_ctime":1637896874,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1637896874","product_id":100019601,"comment_content":"public class ServerNameSpec {<br>        private final List&lt;SNIServerName&gt; serverNames;<br><br>        public ServerNameSpec() {<br>            this.serverNames = new ArrayList();<br>        }<br><br>        public void addServerName(@NotNull final SNIServerName serverName) {<br>            serverNames.add(serverName);<br>        }<br>        <br>        @Override<br>        public String toString() {<br>           return serverNames.stream()<br>                    .map(SNIServerName::toString)<br>                    .collect(Collectors.joining());<br>        }<br>    }","like_count":0},{"had_liked":false,"id":320815,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1636519048,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636519048","product_id":100019601,"comment_content":"代码制造，真的不是说写多了，bug就不会出现，而是遇到问题更快的知道哪里出现的。<br>质量需要团队互相把关，做为开发，我们就做好自己编码的工作，配合完成~","like_count":0},{"had_liked":false,"id":301243,"user_name":"到道可道","can_delete":false,"product_type":"c1","uid":1031181,"ip_address":"","ucode":"12B94B6C26BE0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/0d/00424e81.jpg","comment_is_top":false,"comment_ctime":1625587612,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1625587612","product_id":100019601,"comment_content":"1.第11行：返回的是 UnmodifiableList 类型的List，但是在15行中使用了add方法，会抛：UnsupportedOperationException异常；<br>2.第20行，没有缩进，也没有使用大括号；<br>3.第23行，serverNames没有使用泛型，所以直接使用SNIServerName会编译不过；循环之前需要判断serverNamers是否是null；<br>4.toString方法应该加上@Override annotation。","like_count":0},{"had_liked":false,"id":291390,"user_name":"Mr.yu","can_delete":false,"product_type":"c1","uid":1181786,"ip_address":"","ucode":"830BDDDA52B578","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/5a/d1c64d21.jpg","comment_is_top":false,"comment_ctime":1620266854,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620266854","product_id":100019601,"comment_content":"sn 有可能为null","like_count":0},{"had_liked":false,"id":255369,"user_name":"Everlaa","can_delete":false,"product_type":"c1","uid":1708271,"ip_address":"","ucode":"9B4FFFABD62B07","user_header":"https://static001.geekbang.org/account/avatar/00/1a/10/ef/4c9b2383.jpg","comment_is_top":false,"comment_ctime":1603330885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603330885","product_id":100019601,"comment_content":"优秀的代码源于我们对细节的热情和执着。","like_count":0},{"had_liked":false,"id":228459,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1592702434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592702434","product_id":100019601,"comment_content":"五道关卡，公司或阿里代码规范，编译器，开发单测回归测试，codereview，插件工具检查。对于一个团队来说，首先看上层领导是否重要代码规范，公司是否有统一的代码规范风格，开发人员是否有代码规范意识和习惯，是否对于单元测试覆盖率和自动化测试要求，重要项目是否有技术串讲和codereview环节，最后是否有一些工具来检测不符合规范地方，比如阿里代码规范插件，findbugs，squnar的静态代码扫描等来保证一个团队的代码规范。","like_count":0},{"had_liked":false,"id":202262,"user_name":"Siping","can_delete":false,"product_type":"c1","uid":1487971,"ip_address":"","ucode":"48E685333C663D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/63/21902253.jpg","comment_is_top":false,"comment_ctime":1585946592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585946592","product_id":100019601,"comment_content":"这个系列不错，软件总工的title，正需要给别人培训这个","like_count":0},{"had_liked":false,"id":201662,"user_name":"track6688","can_delete":false,"product_type":"c1","uid":1088040,"ip_address":"","ucode":"0A9E893F8FD379","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/28/03613c22.jpg","comment_is_top":false,"comment_ctime":1585817840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585817840","product_id":100019601,"comment_content":"说真的，我编写Java代码也有些时间了，突然扔出一段这样的代码，让我找出问题所在，还真的有点难找啊。可能平时太依赖编缉器的提示了。值得思考一下。","like_count":0},{"had_liked":false,"id":182477,"user_name":"飞鸟","can_delete":false,"product_type":"c1","uid":1832218,"ip_address":"","ucode":"4C8BF3654DCB6B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIEQwCsJE1DWl5xibvyeZBc1cVxVQTrxRAp3Xbm9ztHfticcia41U05JYh94Sv1PNbhWx0gtkoVHAwew/132","comment_is_top":false,"comment_ctime":1582794403,"is_pvip":false,"replies":[{"id":"70796","content":"看的很细👍<br><br>有个前提，内部使用的类。 三个环节： 有构造方法，使用不可变更的List，变量声明为final.  这样该变量：不可被构造方法以外的办法赋值，不可被更改。<br><br>外部使用的类，还是要声明为private更安全。因为，list包含的元素的指向内容还是有可能被改变的。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1582939670,"ip_address":"","comment_id":182477,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582794403","product_id":100019601,"comment_content":"如果这个类是一个包内使用的类，如果final还不够，你再想想，如果不使用private权限，还有什么办法确保这个变量不能再其他地方修改？<br>请问下这个怎么解决？","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485349,"discussion_content":"看的很细👍\n\n有个前提，内部使用的类。 三个环节： 有构造方法，使用不可变更的List，变量声明为final.  这样该变量：不可被构造方法以外的办法赋值，不可被更改。\n\n外部使用的类，还是要声明为private更安全。因为，list包含的元素的指向内容还是有可能被改变的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582939670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142588,"user_name":"Farewell丶","can_delete":false,"product_type":"c1","uid":1179565,"ip_address":"","ucode":"A0D69893C5375C","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","comment_is_top":false,"comment_ctime":1571407619,"is_pvip":false,"replies":[{"id":"55601","content":"是的，测试覆盖也是一个问题。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1571851391,"ip_address":"","comment_id":142588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571407619","product_id":100019601,"comment_content":"这个类不知道有没有对应的测试类，如果没有，那么至少这也成问题了 😂","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471186,"discussion_content":"是的，测试覆盖也是一个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571851391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142587,"user_name":"Farewell丶","can_delete":false,"product_type":"c1","uid":1179565,"ip_address":"","ucode":"A0D69893C5375C","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","comment_is_top":false,"comment_ctime":1571407302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571407302","product_id":100019601,"comment_content":"\\n 可能在其它平台不是","like_count":0},{"had_liked":false,"id":96359,"user_name":"Sisyphus235","can_delete":false,"product_type":"c1","uid":1366359,"ip_address":"","ucode":"829CC4CE0FA96E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooZCPFY1xgC81h0Eu3vuqbWG5MaBp8RNmvXXGQwupo2LpSOLq0rBlTDRAF1yM6wF09WdeG49rA9dJSVKIUBxnQ/132","comment_is_top":false,"comment_ctime":1558403615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558403615","product_id":100019601,"comment_content":"日常工作用的不是 Java，练习题自己没看出来太多问题，在看老师和大家的留言中学习，总结如下：<br><br>1. Line 8 final 类变量要默认初始化<br>2. Line 11 返回 UnmodifiableList，Line 15 无法 add<br>3. Line 20 没有正确缩进，if 没有使用 {}<br>4. Line 23 serverNames 没有使用泛型编译会出错，泛型即参数化类型，定义方法时声明形参，调用方法时传输实参。未设置泛型：List arrayList = new ArrayList()；设置泛型 List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;()。这里的 Line  10 没有定义 List 泛型<br>5. Line 23 for 循环前要判断是否 Null，否则会空引用<br>5. Line 24,25 append 可以一次完成，节省运算，提高效率<br>6. 没有注释","like_count":0},{"had_liked":false,"id":93625,"user_name":"卞雪达","can_delete":false,"product_type":"c1","uid":1523591,"ip_address":"","ucode":"D03875E6157716","user_header":"https://static001.geekbang.org/account/avatar/00/17/3f/87/8860f508.jpg","comment_is_top":false,"comment_ctime":1557538314,"is_pvip":false,"replies":[{"id":"33456","content":"是的，这是一个有很多问题的练手题，可以有很多修改办法。如果把11行和15行结合起来，你有更确定的方案吗？后面的文章我们还会讨论规范等内容。 这个练手题，也包括其他章节的练手题，你可以反复使用，随着章节的推进，把它改进到一个满意的状态。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1557540197,"ip_address":"","comment_id":93625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557538314","product_id":100019601,"comment_content":"老师，对于空指针我是这么看的。<br>第11行虽然使用了错误的List，但如果使用了正确的方式，也可以不判断空，因为很可能它就该是一个空。<br>第15行在add的时候，可以判断一下List是不是为空，否则add会空指针，不过那也看是什么场景，有时候即便判断了也要抛出一下异常，把空指针更细化一些，否则别人不知道是什么异常，如果抛自己写的异常更好。<br>对于第23行，是需要判List里面的内容是不是空，否则toString报空指针，因为很多List允许插空值作为元素，但List本身不用再判了，前面的if已经判了，虽然没有加大括号。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449705,"discussion_content":"是的，这是一个有很多问题的练手题，可以有很多修改办法。如果把11行和15行结合起来，你有更确定的方案吗？后面的文章我们还会讨论规范等内容。 这个练手题，也包括其他章节的练手题，你可以反复使用，随着章节的推进，把它改进到一个满意的状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557540197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64095,"user_name":"一一","can_delete":false,"product_type":"c1","uid":1252756,"ip_address":"","ucode":"8F15F87CEDB019","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/94/80b8a9f4.jpg","comment_is_top":false,"comment_ctime":1548666365,"is_pvip":false,"replies":[{"id":"22710","content":"使用好开源工具，小团队也可以做。这个话题，我们找个时间，专门聊一聊。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1548688479,"ip_address":"","comment_id":64095,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548666365","product_id":100019601,"comment_content":"看到老师的Code Review示例的时候，瞬间感觉高大上。高质量的代码，依赖于高质量的流水线，那么问题来了，如何建立中小企业的高质量的代码流水线呢？请老师指点迷津。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437855,"discussion_content":"使用好开源工具，小团队也可以做。这个话题，我们找个时间，专门聊一聊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548688479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63986,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1548637303,"is_pvip":true,"replies":[{"id":"22726","content":"必须的，好多规范强制要求使用括号。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1548703037,"ip_address":"","comment_id":63986,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548637303","product_id":100019601,"comment_content":"针对 条件判断语句：go fail 这样的判断之后的代码块 ，需要写完整的 ｛｝ ，是蛮重要的. ","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437794,"discussion_content":"必须的，好多规范强制要求使用括号。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548703037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63784,"user_name":"菡萏若紫_健身Ing","can_delete":false,"product_type":"c1","uid":1185960,"ip_address":"","ucode":"9A6025B94F7A58","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/a8/9c33407d.jpg","comment_is_top":false,"comment_ctime":1548501790,"is_pvip":true,"replies":[{"id":"22631","content":"稍微大一点的软件，稍微生命周期长一点的代码，单元&#47;回归测试对效率的提高，真不是一点半点的。写一次测试，以后就每次都能帮我们看大门。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1548637107,"ip_address":"","comment_id":63784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548501790","product_id":100019601,"comment_content":"我以前一直没有意识到单元测试的重要性，直到最近才感受到人真的不可能完全不犯错误，复制黏贴多一行少一行，拷贝过来的代码是否合用？改了一个逻辑是否会影响很多其他的地方，这些光靠人考虑实在是太难了。但是如果之前写好了单元测试用例只要跑一遍，那代码逻辑是否能正常执行就很清楚了。回归一遍所有的单测，其他地方是否受到影响基本上就能够直接看出来。省了不知多少事。但是首先得要留出一定的时间把单测写起来，一开始可能会耽误一些功夫，但是之后会省很多时间和力气。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437716,"discussion_content":"稍微大一点的软件，稍微生命周期长一点的代码，单元/回归测试对效率的提高，真不是一点半点的。写一次测试，以后就每次都能帮我们看大门。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548637107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63100,"user_name":"祁厅长","can_delete":false,"product_type":"c1","uid":1060181,"ip_address":"","ucode":"FFB2E1F81646F4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL5lNlMumSuiaW7tlHyltRCTRxEiaQb4sUFmbZz12kZ8dFnCMSSLaDDmAeiaymbCZicpqkwuzctXITzjA/132","comment_is_top":false,"comment_ctime":1548251068,"is_pvip":false,"replies":[{"id":"22363","content":"嗯，这也是一个常见的问题。所以，我们要声明为final, 并且使用unmodifiableList。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1548275414,"ip_address":"","comment_id":63100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548251068","product_id":100019601,"comment_content":"另外serverNames可通过对象.属性直接赋值，而绕过构造方法赋值","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437472,"discussion_content":"嗯，这也是一个常见的问题。所以，我们要声明为final, 并且使用unmodifiableList。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548275414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63097,"user_name":"祁厅长","can_delete":false,"product_type":"c1","uid":1060181,"ip_address":"","ucode":"FFB2E1F81646F4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL5lNlMumSuiaW7tlHyltRCTRxEiaQb4sUFmbZz12kZ8dFnCMSSLaDDmAeiaymbCZicpqkwuzctXITzjA/132","comment_is_top":false,"comment_ctime":1548250972,"is_pvip":false,"replies":[{"id":"22362","content":"这一条找的很好👍","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1548275334,"ip_address":"","comment_id":63097,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548250972","product_id":100019601,"comment_content":"List未约束泛型类型，如果构造方法中List里的对象不是遍历时的对象类型，会报ClassCastException","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437470,"discussion_content":"这一条找的很好👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548275334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62476,"user_name":"左。","can_delete":false,"product_type":"c1","uid":1150013,"ip_address":"","ucode":"998F88B31535FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/8c/3d/658bdf0b.jpg","comment_is_top":false,"comment_ctime":1548066042,"is_pvip":false,"replies":[{"id":"22097","content":"我们在第三篇代码安全里会讨论一部分防御式编程的话题。几个人的小团队，要对付整个黑客的大世界，编码要保守。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1548085419,"ip_address":"","comment_id":62476,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548066042","product_id":100019601,"comment_content":"看了老师对安全代码的诸多认识。让我增长了见识。另外想问下.：老师对防御式编程怎么看？","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437229,"discussion_content":"我们在第三篇代码安全里会讨论一部分防御式编程的话题。几个人的小团队，要对付整个黑客的大世界，编码要保守。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548085419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61743,"user_name":"上课时间到","can_delete":false,"product_type":"c1","uid":1100646,"ip_address":"","ucode":"0C061879D10F8C","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/66/31f90502.jpg","comment_is_top":false,"comment_ctime":1547788003,"is_pvip":false,"replies":[{"id":"21913","content":"是的，有了构造函数，缺省构造函数就没有了。这个是我的失误，没有意识到缺省构造函数的问题。我后来逐条修改了我的回复，估计还是有遗漏的。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547789391,"ip_address":"","comment_id":61743,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547788003","product_id":100019601,"comment_content":"有点纳闷，留言区有说空构造函数调用出错的问题。可是有显示的带参构造函数，就不会默认有无参构造函数了吧","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436973,"discussion_content":"是的，有了构造函数，缺省构造函数就没有了。这个是我的失误，没有意识到缺省构造函数的问题。我后来逐条修改了我的回复，估计还是有遗漏的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547789391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58928,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1547256700,"is_pvip":true,"replies":[{"id":"21353","content":"对的，我想让大家用上这些关卡。 即使公司没有规范的流程，没有响应的关卡，我们也可以自己想办法把这些管卡变成自己的工具。比如使用编码规范的插件，比如找三两小伙伴互相看看代码，比如建议公司遵循编码规范。办法琢磨琢磨，总是有的。 谁叫我们是聪明的软件工程师呢😀。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547269317,"ip_address":"","comment_id":58928,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547256700","product_id":100019601,"comment_content":"这五个关卡，一个一个的去分析，怎么应用到日常开发中","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436251,"discussion_content":"对的，我想让大家用上这些关卡。 即使公司没有规范的流程，没有响应的关卡，我们也可以自己想办法把这些管卡变成自己的工具。比如使用编码规范的插件，比如找三两小伙伴互相看看代码，比如建议公司遵循编码规范。办法琢磨琢磨，总是有的。 谁叫我们是聪明的软件工程师呢😀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547269317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58823,"user_name":"沐风","can_delete":false,"product_type":"c1","uid":1371877,"ip_address":"","ucode":"906D779F3DEB5F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ee/e5/2f5c75de.jpg","comment_is_top":false,"comment_ctime":1547203633,"is_pvip":false,"replies":[{"id":"21305","content":"高手在评论区，你也多留言，多看留言啊😄。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547225586,"ip_address":"","comment_id":58823,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547203633","product_id":100019601,"comment_content":"衷心感谢作者以及评论区的读者。你们的评论对于我来说，是明灯","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436221,"discussion_content":"高手在评论区，你也多留言，多看留言啊😄。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547225586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57771,"user_name":"jake","can_delete":false,"product_type":"c1","uid":1124714,"ip_address":"","ucode":"523C7BE91B2B88","user_header":"https://static001.geekbang.org/account/avatar/00/11/29/6a/f114df96.jpg","comment_is_top":false,"comment_ctime":1546908326,"is_pvip":false,"replies":[{"id":"21343","content":"（修改后的回复，我遗漏了已经没有缺省构造函数的问题，谢谢@kenes孙）<br>&amp;gt; final 参数需要初始化<br>构造函数里，final变量已经初始化了。final变量可以在构造函数里初始化。<br><br>&amp;gt; add方法需要判断空<br>final变量已经在构造函数里初始化，不会是空值了。<br><br>&amp;gt; builder 会超过长度<br>StringBuilder是可以自动扩展长度的。<br><br>&amp;gt; 构造方法加 public<br>如果是公开类，需要加public修饰符。 如果是包内部的内，使用缺省的权限也可以。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547267885,"ip_address":"","comment_id":57771,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546908326","product_id":100019601,"comment_content":"final 参数需要初始化<br>add方法需要判断空<br>builder 会超过长度<br>构造方法加 public ","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435751,"discussion_content":"（修改后的回复，我遗漏了已经没有缺省构造函数的问题，谢谢@kenes孙）\n&amp;amp;gt; final 参数需要初始化\n构造函数里，final变量已经初始化了。final变量可以在构造函数里初始化。\n\n&amp;amp;gt; add方法需要判断空\nfinal变量已经在构造函数里初始化，不会是空值了。\n\n&amp;amp;gt; builder 会超过长度\nStringBuilder是可以自动扩展长度的。\n\n&amp;amp;gt; 构造方法加 public\n如果是公开类，需要加public修饰符。 如果是包内部的内，使用缺省的权限也可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547267885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57669,"user_name":"Aliliin","can_delete":false,"product_type":"c1","uid":1025239,"ip_address":"","ucode":"61F9A09BB6650F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/d7/5d2bfaa7.jpg","comment_is_top":false,"comment_ctime":1546866177,"is_pvip":false,"replies":[{"id":"20843","content":"赞，要有开放的态度。告诉别人代码可以更好，也接受别人的建议；不同意见可以讨论，自己的建议不被接受，也很坦然。","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1546919747,"ip_address":"","comment_id":57669,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546866177","product_id":100019601,"comment_content":"1.要认真不要偷懒，该写的符号不要不写。<br>2.学会利用好的工具。<br>3.写完之后尽量多的情况自己多测试几遍。<br>4.团队之间尽量花点时间做好代码评审，平常看到同事些写的代码不严谨，要跟当事人说，并做记录，以防自己犯同样的错误。<br>5.写好单元测试。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435694,"discussion_content":"赞，要有开放的态度。告诉别人代码可以更好，也接受别人的建议；不同意见可以讨论，自己的建议不被接受，也很坦然。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546919747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57530,"user_name":"奕超","can_delete":false,"product_type":"c1","uid":1040045,"ip_address":"","ucode":"447069B3357999","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/ad/864516e4.jpg","comment_is_top":false,"comment_ctime":1546828773,"is_pvip":false,"replies":[{"id":"21330","content":"这是一个不太招人注意的错误。🎈","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547263860,"ip_address":"","comment_id":57530,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546828773","product_id":100019601,"comment_content":"toString中的for循环未检查元素是否为null","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435629,"discussion_content":"这是一个不太招人注意的错误。🎈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547263860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57502,"user_name":"乘坐Tornado的线程魔法师","can_delete":false,"product_type":"c1","uid":1132661,"ip_address":"","ucode":"C4C9915866E769","user_header":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","comment_is_top":false,"comment_ctime":1546823362,"is_pvip":false,"replies":[{"id":"21327","content":"是的。 ","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547263559,"ip_address":"","comment_id":57502,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546823362","product_id":100019601,"comment_content":"如果没加访问权限 应该会实际使用default访问权限","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435610,"discussion_content":"是的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547263559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57481,"user_name":"虢國技醬","can_delete":false,"product_type":"c1","uid":1056807,"ip_address":"","ucode":"5A192262AA037E","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/27/a6932fbe.jpg","comment_is_top":false,"comment_ctime":1546821386,"is_pvip":false,"replies":[{"id":"20740","content":"解释语言既然这么灵活，那总要付出点什么🤔","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1546838867,"ip_address":"","comment_id":57481,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546821386","product_id":100019601,"comment_content":"打卡：<br>1. 把错误关入笼子，我想到了一个词：制度优势😆 脑补新闻联播<br>2. 编译器这块我感觉所有的静态语言都还好，比如用vscode写go基本上词法语法错误都能避免；但是想php，python这种有些错误编译器也很尴尬","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435597,"discussion_content":"解释语言既然这么灵活，那总要付出点什么🤔","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546838867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57468,"user_name":"赵明威","can_delete":false,"product_type":"c1","uid":1097856,"ip_address":"","ucode":"A11C9961EB9E85","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/80/bb3adebb.jpg","comment_is_top":false,"comment_ctime":1546819059,"is_pvip":false,"replies":[{"id":"21325","content":"不好意思，没有太明白你的留言。你是建议，把serverNames定义成private变量，然后再加一个get方法吗？","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547263070,"ip_address":"","comment_id":57468,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546819059","product_id":100019601,"comment_content":"构造函数里面this.serverNames = Collections.unmodifiableList(serverNames);<br>上来就unmodifiablelist不对，应该是定义成private的然后再get的时候包装一下return","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435591,"discussion_content":"不好意思，没有太明白你的留言。你是建议，把serverNames定义成private变量，然后再加一个get方法吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547263070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57465,"user_name":"Shawn.C","can_delete":false,"product_type":"c1","uid":1046295,"ip_address":"","ucode":"9CE004D0325320","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/17/f94e987f.jpg","comment_is_top":false,"comment_ctime":1546818196,"is_pvip":true,"replies":[{"id":"20687","content":"什么是小黄鸭调试法？说一说，我们也学习学习。","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1546820468,"ip_address":"","comment_id":57465,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546818196","product_id":100019601,"comment_content":"小黄鸭调试法很有用，把自己代码思路复述一遍就能发现很多问题。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435589,"discussion_content":"什么是小黄鸭调试法？说一说，我们也学习学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546820468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57460,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1546811185,"is_pvip":false,"replies":[{"id":"21324","content":"很赞，找到了几个重要的问题。<br><br>&gt; 1. 第七行，class没有访问权限<br>如果是内部实现的类，只限于包(package)内用，可以不加访问限定词。如果定义成开放的类，就要加public访问权限了。<br><br>&gt; 2. 第八行，变量没有带访问权限<br>这一个，依赖于具体的环境。 如果是包的内部类，可以直接使用这个变量，不加访问权限也可以。 但是，如果是公开类，就需要变成私有的了。<br><br>&gt; 3. 第八行，定义的List没有加泛型，编译后会有警告<br>是的，这是一个编译器可以发现的问题。<br><br>&gt; 4. 第十九行，条件判断后面没有跟大括号，后面的语句也没有相应的缩进<br>是的，这是一个编码规范的问题。编译器可能发现不了这个问题，但是IDE有可能会有警告。<br><br>顺便问问，你试着修改下这个代码了吗？我建议你试着改一改，然后把这个修改好的代码当作你自己的代码范例。也欢迎把修改后的代码发布在讨论区。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547262899,"ip_address":"","comment_id":57460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546811185","product_id":100019601,"comment_content":"思考题<br>       1. 第七行，class没有访问权限<br>       2. 第八行，变量没有带访问权限<br>       3. 第八行，定义的List没有加泛型，编译后会有警告<br>       4. 第十九行，条件判断后面没有跟大括号，后面的语句也没有相应的缩进<br><br>用肉眼看的只能看到这么多，不对的或遗漏的地方还请老师指出","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435587,"discussion_content":"很赞，找到了几个重要的问题。\n\n&amp;gt; 1. 第七行，class没有访问权限\n如果是内部实现的类，只限于包(package)内用，可以不加访问限定词。如果定义成开放的类，就要加public访问权限了。\n\n&amp;gt; 2. 第八行，变量没有带访问权限\n这一个，依赖于具体的环境。 如果是包的内部类，可以直接使用这个变量，不加访问权限也可以。 但是，如果是公开类，就需要变成私有的了。\n\n&amp;gt; 3. 第八行，定义的List没有加泛型，编译后会有警告\n是的，这是一个编译器可以发现的问题。\n\n&amp;gt; 4. 第十九行，条件判断后面没有跟大括号，后面的语句也没有相应的缩进\n是的，这是一个编码规范的问题。编译器可能发现不了这个问题，但是IDE有可能会有警告。\n\n顺便问问，你试着修改下这个代码了吗？我建议你试着改一改，然后把这个修改好的代码当作你自己的代码范例。也欢迎把修改后的代码发布在讨论区。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547262899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}