{"id":257101,"title":"03 | 授权服务：授权码和访问令牌的颁发流程是怎样的？","content":"<p>你好，我是王新栋。</p><p>在上一讲，我从为什么需要授权码这个问题开始，为你串了一遍授权码许可流程整体的通信过程。在接下来的三讲中，我会着重为你讲解关于授权服务的工作流程、授权过程中的令牌，以及如何接入OAuth 2.0。这样一来，你就可以吃透授权码许可这一最经典、最完备、最常用的授权流程了，以后再处理授权相关的逻辑就更得心应手了。现在呢，让我们开始这一讲。</p><p>在介绍授权码许可类型时，我提到了很多次 “授权服务”。一句话概括，授权服务就是<strong>负责颁发访问令牌</strong>的服务。更进一步地讲，OAuth 2.0的核心是授权服务，而授权服务的核心就是令牌。</p><p>为什么这么说呢？当第三方软件比如小兔，要想获取小明在京东店铺的订单，就必须先从京东商家开放平台的授权服务那里获取访问令牌，进而通过访问令牌来 <strong>“代表”</strong> 小明去请求小明的订单数据。这不恰恰就是整个OAuth 2.0授权体系的核心吗？</p><p>那么，授权服务到底是怎么生成访问令牌的，这其中包含了哪些操作呢？还有一个问题是，访问令牌过期了而用户又不在场的情况下，又如何重新生成访问令牌呢？</p><p>带着这两个问题，我们就以授权码许可类型为例，一起深入探索下授权服务这个核心组件吧。</p><h2>授权服务的工作过程</h2><p>开始之前，你还是要先回想下小明给小兔软件授权订单数据的整个流程。</p><!-- [[[read_end]]] --><p>我们说小兔软件先要让小明去京东商家开放平台那里给它授权数据，那这里是不是你觉得很奇怪？你总不能说，“嘿，京东，你把数据给小兔用吧”，那京东肯定会回复说，“小明，小兔是谁啊，没在咱家备过案，我不能给他，万一是骗子呢？”</p><p>对吧，你想想是不是这个逻辑。所以，授权这个大动作的前提，肯定是小兔要去平台那里“备案”，也就是注册。注册完后，京东商家开放平台就会给小兔软件app_id和app_secret等信息，以方便后面授权时的各种身份校验。</p><p>同时，注册的时候，第三方软件也会请求受保护资源的可访问范围。比如，小兔能否获取小明店铺3个月以前的订单，能否获取每条订单的所有字段信息等等。这个权限范围，就是scope。后面呢，我还会详细讲述范围控制。</p><p>文字说起来有点抽象，咱们还是直接上代码吧。关于注册后的数据存储，我们使用如下Java代码来模拟：</p><pre><code>Map&lt;String,String&gt; appMap =  new HashMap&lt;String, String&gt;();//模拟第三方软件注册之后的数据库存储\n\nappMap.put(&quot;app_id&quot;,&quot;APPID_RABBIT&quot;);\nappMap.put(&quot;app_secret&quot;,&quot;APPSECRET_RABBIT&quot;);\nappMap.put(&quot;redirect_uri&quot;,&quot;http://localhost:8080/AppServlet-ch03&quot;);\nappMap.put(&quot;scope&quot;,&quot;nickname address pic&quot;);\n</code></pre><p>备完案之后，咱们接着继续前进。小明过来让平台把他的订单数据给小兔，平台咔咔一查，对了下暗号，发现小兔是合法的，于是就要推进下一步了。</p><p>咱们上节课讲过，在授权码许可类型中，授权服务的工作，可以划分为两大部分，一个是<strong>颁发授权码code</strong>，一个是<strong>颁发访问令牌access_token</strong>。为了更能表达授权码和访问令牌的存在，我在图中用深色将其标注了出来：</p><p><img src=\"https://static001.geekbang.org/resource/image/a5/11/a5d231c5b356ecf2031yy7d17207c011.png?wh=2086*800\" alt=\"\"></p><p>我们先看看颁发授权码code的流程。</p><h3>过程一：颁发授权码code</h3><p>在这个过程中，授权服务需要完成两部分工作，分别是<strong>准备工作</strong>和<strong>生成授权码code</strong>。</p><p>你可能会问了，这个“准备”都包括哪些工作？我们可以想到，小明在给第三方软件小兔打单软件进行授权的时候，会看到授权页面上有一个授权按钮，但是授权服务在小明看到这个授权按钮之前，实际上已经做了一系列动作。</p><p>这些动作，就是所谓的准备工作，包括验证基本信息、验证权限范围（第一次）和生成授权请求页面这三步。我们具体分析下。</p><p><strong>第一步，验证基本信息。</strong></p><p>验证基本信息，包括对第三方软件小兔合法性和回调地址合法性的校验。</p><p>在 Web 浏览器环境下，颁发code的整个请求过程，都是浏览器通过前端通信来完成，这就意味着所有信息都有被冒充的风险。因此，授权服务必须对第三方软件的存在性做判断。</p><p>同样，回调地址也是可以被伪造的。比如，不法分子将其伪装成钓鱼页面，或者是带有恶意攻击性的软件下载页面。因此从安全上考虑，授权服务需要对回调地址做基本的校验。</p><pre><code>if(!appMap.get(&quot;redirect_uri&quot;).equals(redirectUri)){\n    //回调地址不存在\n}\n</code></pre><p>在授权服务的程序中，这两步验证通过后，就会生成或者响应一个页面（<strong>属于授权服务器上的页面</strong>），以提示小明进行授权。</p><p><strong>第二步，验证权限范围（第一次）。</strong></p><p>既然是授权，就会涉及范围。比如，我们使用微信登录第三方软件的时候，会看到微信提示我们，第三方软件可以获得你的昵称、头像、性别、地理位置等。如果你不想让第三方软件获取你的某个信息，那么可以不选择这一项。同样在小兔中也是一样，当小明为小兔进行授权的时候，也可以选择给小兔的权限范围，比如是否授予小兔获取3个月以前的订单的访问权限。</p><p>这就意味着，我们需要对小兔传过来的scope参数，与小兔注册时申请的权限范围做比对。如果请求过来的权限范围大于注册时的范围，就需要作出越权提示。<strong>记住，此刻是第一次权限校验。</strong></p><pre><code>String scope = request.getParameter(&quot;scope&quot;);\nif(!checkScope(scope)){\n    //超出注册的权限范围\n}\n</code></pre><p><strong>第三步，生成授权请求页面。</strong></p><p>这个授权请求页面就是授权服务上的页面，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/5e/66/5e024b40a98b65a54082106a96734c66.png?wh=724*318\" alt=\"\"></p><p>页面上显示了小兔注册时申请的today、history 两种权限，小明可以选择缩小这个权限范围，比如仅授予获取today信息的权限。</p><p>至此，颁发授权码code的准备工作就完成了。你要注意哈，我一直强调说这也是准备工作，因为当用户点击授权按钮“approve”后，才会<strong>生成授权码code值和访问令牌acces_token值</strong>，“一切才真正开始”。</p><p>这里需要说明下：在上面的准备过程中，我们忽略了小明登录的过程，但只有用户登录了才可以对第三方软件进行授权，授权服务才能够获得用户信息并最终生成code 和 app_id（第三方软件的应用标识） + user（资源拥有者标识）之间的对应关系。你可以把登录部分的代码，作为附加练习。</p><p>小明点击“approve”按钮之后，生成授权码code的流程就正式开始了，主要包括验证权限范围（第二次）、处理授权请求生成授权码code和重定向至第三方软件这三大步。接下来，我们一起分析下这三步。</p><p><strong>第四步，验证权限范围（第二次）。</strong></p><p>在步骤二中，生成授权页面之前授权服务进行的第一次校验，是对比小兔请求过来的权限范围scope和注册时的权限做的比对。这里的第二次验证权限范围，是用小明进行授权之后的权限，再次与小兔软件注册的权限做校验。</p><p>那这里为什么又要校验一次呢？因为这相当于一次用户的输入权限。小明选择了一定的权限范围给到授权服务，对于权限的校验我们要重视对待，凡是输入性数据都会涉及到合法性检查。另外，这也是要求我们养成一种<strong>在服务端对输入数据的请求，都尽可能做一次合法性校验的好习惯</strong>。</p><pre><code>String[] rscope =request.getParameterValues(&quot;rscope&quot;);\n\nif(!checkScope(rscope)){\n    //超出注册的权限范围\n}\n</code></pre><p><strong>第五步，处理授权请求，生成授权码code。</strong></p><p>当小明同意授权之后，授权服务会校验响应类型response_type的值。response_type有code和token两种类型的值。在这里，我们是用授权码流程来举例的，因此代码要验证response_type的值是否为code。</p><pre><code>String responseType = request.getParameter(&quot;response_type&quot;);\nif(&quot;code&quot;.equals(responseType)){\n  \n}\n</code></pre><p>在授权服务中，需要将生成的授权码code值与app_id、user进行关系映射。也就是说，一个授权码code，表示某一个用户给某一个第三方软件进行授权，比如小明给小兔软件进行的授权。同时，我们需要将code值和这种映射关系保存起来，以便在生成访问令牌access_token时使用。</p><pre><code>String code = generateCode(appId,&quot;USERTEST&quot;);//模拟登录用户为USERTEST\n\nprivate String generateCode(String appId,String user) {\n  ...\n  String code = strb.toString();\n  codeMap.put(code,appId+&quot;|&quot;+user+&quot;|&quot;+System.currentTimeMillis());\n  return code;\n}\n</code></pre><p>在生成了授权码code之后，我们也按照上面所述绑定了响应的映射关系。这时，你还记得我之前讲到的授权码是临时的、一次性凭证吗？因此，我们还需要为code设置一个有效期。</p><p>OAuth 2.0规范建议授权码code值有效期为10分钟，并且<strong>一个授权码code只能被使用一次</strong>。不过根据经验呢，在生产环境中code的有效期一般不会超过5分钟。关于授权码code相关的安全方面的内容，我还会在第8讲中详细讲述。</p><p>同时，授权服务还需要<strong>将生成的授权码code跟已经授权的权限范围rscope进行绑定并存储</strong>，以便后续颁发访问令牌时，我们能够通过code值取出授权范围并与访问令牌绑定。因为第三方软件最终是通过访问令牌来请求受保护资源的。</p><pre><code>Map&lt;String,String[]&gt; codeScopeMap =  new HashMap&lt;String, String[]&gt;();\n\ncodeScopeMap.put(code,rscope);//授权范围与授权码做绑定\n</code></pre><p><strong>第六步，重定向至第三方软件。</strong></p><p>生成授权码code值之后，授权服务需要将该code值告知第三方软件小兔。开始时我们提到，颁发授权码code是通过前端通信完成的，因此这里采用重定向的方式。这一步的重定向，也是我在上一讲中提到的第二次重定向。</p><pre><code>Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();\nparams.put(&quot;code&quot;,code);\n\nString toAppUrl = URLParamsUtil.appendParams(redirectUri,params);//构造第三方软件的回调地址，并重定向到该地址\n\nresponse.sendRedirect(toAppUrl);//授权码流程的“第二次”重定向\n</code></pre><p>到此，颁发授权码code的流程全部完成。当小兔获取到授权码code值以后，就可以开始请求访问令牌access_token的值了，也就是我们即将开始的过程二。</p><h3>过程二：颁发访问令牌access_token</h3><p>我们在过程一中介绍了授权码code的生成流程，但小兔最终是要获取到访问令牌access_token，才可以去请求受保护资源。而授权码呢，正如我在上一讲提到的，只是一个换取访问令牌access_token的临时凭证。</p><p>当小兔拿着授权码code来请求的时候，授权服务需要为之生成最终的请求访问令牌。这个过程主要包括验证第三方软件小兔是否存在、验证code值是否合法和生成access_token值这三大步。接下来，我们一起分析下每一步。</p><p><strong>第一步，验证第三方软件是否存在。</strong></p><p>此时，接收到的grant_type的类型为authorization_code。</p><pre><code>String grantType = request.getParameter(&quot;grant_type&quot;);\nif(&quot;authorization_code&quot;.equals(grantType)){\n  \n}\n</code></pre><p>由于颁发访问令牌是通过后端通信完成的，所以这里除了要校验app_id外，还要校验app_secret。</p><pre><code>if(!appMap.get(&quot;app_id&quot;).equals(appId)){\n    //app_id不存在\n}\n\nif(!appMap.get(&quot;app_secret&quot;).equals(appSecret)){\n    //app_secret不合法\n}\n</code></pre><p><strong>第二步，验证授权码code值是否合法。</strong></p><p>授权服务在颁发授权码code的阶段已经将code值存储了起来，此时对比从request中接收到的code值和从存储中取出来的code值。在我们给出的课程<a href=\"https://github.com/xindongbook/oauth2-code\">相关代码</a>中，code值对应的key是app_id和user的组合值。</p><pre><code>String code = request.getParameter(&quot;code&quot;);\nif(!isExistCode(code)){//验证code值\n\t//code不存在\n  return;\n}\ncodeMap.remove(code);//授权码一旦被使用，须立即作废\n</code></pre><p>这里我们一定要记住，<strong>确认过授权码code值有效以后，应该立刻从存储中删除当前的code值</strong>，以防止第三方软件恶意使用一个失窃的授权码code值来请求授权服务。</p><p><strong>第三步，生成访问令牌access_token值。</strong></p><p>关于按照什么规则来生成访问令牌access_token的值，OAuth 2.0规范中并没有明确规定，但必须符合三个原则：<strong>唯一性、不连续性、不可猜性</strong>。在我们给出的Demo中，我们是使用UUID来作为示例的。</p><p>和授权码code值一样，我们需要将访问令牌access_token值存储起来，并将其与第三方软件的应用标识app_id和资源拥有者标识user进行关系映射。也就是说，<strong>一个访问令牌access_token表示某一个用户给某一个第三方软件进行授权</strong>。</p><p>同时，<strong>授权服务还需要将授权范围跟访问令牌access_token做绑定</strong>。最后，还需要为该访问令牌设置一个过期时间expires_in，比如1天。</p><pre><code>Map&lt;String,String[]&gt; tokenScopeMap =  new HashMap&lt;String, String[]&gt;();\n\nString accessToken = generateAccessToken(appId,&quot;USERTEST&quot;);//生成访问令牌access_token的值\ntokenScopeMap.put(accessToken,codeScopeMap.get(code));//授权范围与访问令牌绑定\n\n//生成访问令牌的方法\nprivate String generateAccessToken(String appId,String user){\n  \n  String accessToken = UUID.randomUUID().toString();\n\tString expires_in = &quot;1&quot;;//1天时间过期\n  tokenMap.put(accessToken,appId+&quot;|&quot;+user+&quot;|&quot;+System.currentTimeMillis()+&quot;|&quot;+expires_in);\n\n  return accessToken;\n}\n</code></pre><p>正因为OAuth 2.0规范没有约束访问令牌内容的生成规则，所以我们有更高的自由度。我们既可以像Demo中那样生成一个UUID形式的数据存储起来，让授权服务和受保护资源共享该数据；也可以将一些必要的信息通过结构化的处理放入令牌本身。<strong>我们将包含了一些信息的令牌，称为结构化令牌，简称JWT</strong>。在下一讲中，我还会与你详细讲述JWT。</p><p>至此，授权码许可类型下授权服务的两大主要过程，也就是颁发授权码和颁发访问令牌的流程，我就与你讲完了。</p><p>接下来，你在阅读别人的授权流程代码，或者是使用诸如通过微信登录的第三方软件的时候，就会明白背后的原理了。同时，你在自己搭建一个授权服务流程时，也会更加得心应手。这一切的原因，都在于颁发授权码和颁发访问令牌，就是授权服务的核心。</p><p>到这里，你应该还会注意到一个问题，在生成访问令牌的时候，我们还给它附加了一个过期时间expires_in，这意味着访问令牌会在一定的时间后失效。访问令牌失效，就意味着资源拥有者给第三方软件的授权失效了，第三方软件无法继续访问资源拥有者的受保护资源了。</p><p>这时，如果你还想继续使用第三方软件，就只能重新点击授权按钮，比如小明给小兔软件授权以后，正在愉快地处理他店铺的订单数据，结果没过多久，突然间小兔软件再次让小明进行授权。此刻，我们可以替小明感受一下他的心情。</p><p>显然，这样的用户体验非常糟糕。为此，OAuth 2.0中引入了刷新令牌的概念，也就是刷新访问令牌access_token的值。这就意味着，有了刷新令牌，用户在一定期限内无需重新点击授权按钮，就可以继续使用第三方软件。</p><p>接下来，我们就一起看看刷新令牌的工作原理吧。</p><h2>刷新令牌</h2><p>刷新令牌也是给第三方软件使用的，同样需要遵循<strong>先颁发再使用</strong>的原则。因此，我们还是从颁发和使用两个环节来学习刷新令牌。不过，这个颁发和使用流程和访问令牌有些是相同的，所以我只会和你重点讲述其中的区别。</p><h3>颁发刷新令牌</h3><p>其实，颁发刷新令牌和颁发访问令牌是一起实现的，都是在过程二的步骤三生成访问令牌access_token中生成的。也就是说，第三方软件得到一个访问令牌的同时，也会得到一个刷新令牌：</p><pre><code>Map&lt;String,String&gt; refreshTokenMap =  new HashMap&lt;String, String&gt;();\n\nString refreshToken = generateRefreshToken(appId,&quot;USERTEST&quot;);//生成刷新令牌refresh_token的值\n\nprivate String generateRefreshToken(String appId,String user){\n\n  String refreshToken = UUID.randomUUID().toString();\n\n  refreshTokenMap.put(refreshToken,appId+&quot;|&quot;+user+&quot;|&quot;+System.currentTimeMillis());\n  return refreshToken;\n  \n} \n</code></pre><p>看到这里你可能要问了，为什么要一起生成访问令牌和刷新令牌呢？</p><p>其实，这就回到了刷新令牌的作用上了。刷新令牌存在的初衷是，在访问令牌失效的情况下，为了不让用户频繁手动授权，用来通过系统重新请求<strong>生成一个新的访问令牌</strong>。那么，如果访问令牌失效了，而“身边”又没有一个刷新令牌可用，岂不是又要麻烦用户进行手动授权了。所以，它必须得和访问令牌一起生成。</p><p>到这里，我们就解决了刷新令牌的颁发问题。</p><h3>使用刷新令牌</h3><p>说到刷新令牌的使用，我们需要先明白一点。在OAuth 2.0规范中，刷新令牌是一种特殊的授权许可类型，是嵌入在授权码许可类型下的一种特殊许可类型。在授权服务的代码里，当我们接收到这种授权许可请求的时候，会先比较grant_type和 refresh_token的值，然后做下一步处理。</p><p>这其中的流程主要包括如下两大步骤。</p><p><strong>第一步，接收刷新令牌请求，验证基本信息。</strong></p><p>此时请求中的grant_type值为refresh_token。</p><pre><code>String grantType = request.getParameter(&quot;grant_type&quot;);\nif(&quot;refresh_token&quot;.equals(grantType)){\n  \n}\n</code></pre><p>和颁发访问令牌前的验证流程一样，这里我们也需要验证第三方软件是否存在。需要注意的是，这里需要同时验证刷新令牌是否存在，目的就是要保证传过来的刷新令牌的合法性。</p><pre><code>String refresh_token = request.getParameter(&quot;refresh_token&quot;);\n\nif(!refreshTokenMap.containsKey(refresh_token)){\n    //该refresh_token值不存在\n}\n</code></pre><p>另外，我们还需要验证刷新令牌是否属于该第三方软件。授权服务是将颁发的刷新令牌与第三方软件、当时的授权用户绑定在一起的，因此这里需要判断该刷新令牌的归属合法性。</p><pre><code>String appStr = refreshTokenMap.get(&quot;refresh_token&quot;);\nif(!appStr.startsWith(appId+&quot;|&quot;+&quot;USERTEST&quot;)){\n    //该refresh_token值不是颁发给该第三方软件的\n}\n</code></pre><p><strong>需要注意，一个刷新令牌被使用以后，授权服务需要将其废弃，并重新颁发一个刷新令牌。</strong></p><p><strong>第二步，重新生成访问令牌。</strong></p><p>生成访问令牌的处理流程，与颁发访问令牌环节的生成流程是一致的。授权服务会将新的访问令牌和新的刷新令牌，一起返回给第三方软件。这里就不再赘述了。</p><h2>总结</h2><p>今天的课马上又要结束了，我和你讲了授权码许可类型下授权服务的工作原理。授权服务可以说是整个OAuth 2.0体系中的 “灵魂” 组件，任何一种许可类型都离不开它的支持，它也是最复杂的组件。</p><p>这是因为它将复杂性尽可能地“揽在了自己身上”，才使得诸如小兔这样的第三方软件接入OAuth 2.0的时候更加便捷。那关于如何快速地接入OAuth 2.0，我在第5讲中和你详细展开。</p><p>授权服务的步骤流程比较多，因此我把这节课配套的代码放到了<a href=\"https://github.com/xindongbook/oauth2-code/tree/master/src/com/oauth/ch03\">GitHub</a>上，可以帮助你更好地理解授权服务的流程。</p><p>总结来讲，关于这一讲，我希望你能记住以下3点。</p><ol>\n<li>授权服务的核心就是，<strong>先颁发授权码code值，再颁发访问令牌access_token值</strong>。</li>\n<li>在颁发访问令牌的<strong>同时还会颁发刷新令牌refresh_token值，这种机制可以在无须用户参与的情况下用于生成新的访问令牌</strong>。正如我们讲到的小明使用小兔软件的例子，当访问令牌过期的时候，刷新令牌的存在可以大大提高小明使用小兔软件的体验。</li>\n<li>授权还要有授权范围，<strong>不能让第三方软件获得比注册时权限范围还大的授权，也不能获得超出了用户授权的权限范围，始终确保最小权限安全原则。</strong>比如，小明只为小兔软件授予了获取当天订单的权限，那么小兔软件就不能访问小明店铺里面的历史订单数据。</li>\n</ol><h2>思考题</h2><p>刷新令牌有过期时间吗，会一直有效吗？和我说说你的想法吧。</p><p>欢迎你在留言区分享你的观点，也欢迎你把今天的内容分享给其他朋友，我们一起交流。</p>","neighbors":{"left":{"article_title":"02 | 授权码许可类型中，为什么一定要有授权码？","id":256196},"right":{"article_title":"04 | 在OAuth 2.0中，如何使用JWT结构化令牌？","id":257747}},"comments":[{"had_liked":false,"id":232256,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1593936092,"is_pvip":false,"replies":[{"id":"85709","content":"感谢 约书亚 指正 我翻看了 之前的回复 做了修改。<br>1、：若access_token未超时，那么进行refresh_token有两种方式，（1）不会改变access_token，但超时时间会刷新，相当于续期access_token（2）更新access_token的值，我们建议【统一更新access_token的值】。<br><br>2、延期access_token并不是一个最好的方式，尽管有的开放平台是这么做的。<br><br>3、在我们这节课中，我们是提到了这点，本文中的描述是：【用来通过系统重新请求生成一个新的访问令牌】<br>而且咱们这节课的建议也是更换一个新的访问令牌。<br><br>4、“因为我感觉无限续期会增加access被破解的风险”<br>刷新令牌也有有效期。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593938774,"ip_address":"","comment_id":232256,"utype":1}],"discussion_count":3,"race_medal":0,"score":"53133543644","product_id":100053901,"comment_content":"在上一节回答留言时，老师提到，用refresh刷新access时，如果access没过期，那会给这个access续期而不会重新生成？<br>这节课没提到这个。请问这是oauth规定的么？或者一般都这样实现？<br>因为我感觉无限续期会增加access被破解的风险","like_count":12,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500584,"discussion_content":"感谢 约书亚 指正 我翻看了 之前的回复 做了修改。\n1、：若access_token未超时，那么进行refresh_token有两种方式，（1）不会改变access_token，但超时时间会刷新，相当于续期access_token（2）更新access_token的值，我们建议【统一更新access_token的值】。\n\n2、延期access_token并不是一个最好的方式，尽管有的开放平台是这么做的。\n\n3、在我们这节课中，我们是提到了这点，本文中的描述是：【用来通过系统重新请求生成一个新的访问令牌】\n而且咱们这节课的建议也是更换一个新的访问令牌。\n\n4、“因为我感觉无限续期会增加access被破解的风险”\n刷新令牌也有有效期。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593938774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1003452,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/bc/501ce428.jpg","nickname":"年轮","note":"","ucode":"C70B8CD2FA0F54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"discussion":{"id":574374,"discussion_content":"第4点，每次刷新都生成新的refresh token，怎么防止不无限续期","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654006045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":500584,"ip_address":""},"score":574374,"extra":""}]},{"author":{"id":1970533,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/11/65/a29958da.jpg","nickname":"稻草人","note":"","ucode":"7E19EE0C125D80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293017,"discussion_content":"刷新令牌生成新的令牌，这个新生成的令牌有没有特定的规则，或者说算法，还是只是一个随机数，当我调用刷新令牌接口的时候是不是需要做一下权限的验证，不是谁都可以随便调用刷新令牌的接口的吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595413450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232183,"user_name":"申玉宝","can_delete":false,"product_type":"c1","uid":1087921,"ip_address":"","ucode":"61CA71FA6DC475","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/b1/46570b0c.jpg","comment_is_top":false,"comment_ctime":1593909363,"is_pvip":true,"replies":[{"id":"85689","content":"为了安全性的考虑，是不可以让“token一个更长的有效期”存在的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593921303,"ip_address":"","comment_id":232183,"utype":1}],"discussion_count":12,"race_medal":0,"score":"40248615027","product_id":100053901,"comment_content":"为什么要 通过刷新令牌让第三方不断刷新token有效期，而不是直接给访问token一个更长的有效期？后者更简单","like_count":9,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500550,"discussion_content":"为了安全性的考虑，是不可以让“token一个更长的有效期”存在的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593921303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1964309,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f9/15/584103d6.jpg","nickname":"Ryan Pan","note":"","ucode":"235BA0C2AA03A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288880,"discussion_content":"例如如果token的格式是jwt，服务端是无法主动让其失效的，我们能做的就是让access_token效期尽量缩短，refresh_token可以稍微长一些，如果我们要让token失效，只要revoke refresh_token让用户端不能再得到新的access_token就可以达到类似的目的。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1593921607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1964309,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f9/15/584103d6.jpg","nickname":"Ryan Pan","note":"","ucode":"235BA0C2AA03A5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288903,"discussion_content":"赞，这个角度很好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593928126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288880,"ip_address":""},"score":288903,"extra":""}]},{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288902,"discussion_content":"同问！为了安全性，不可以让“token一个更长的有效期”，但是refresh_token的有效期那么长，而且用refresh_token可以换到一个新的token，不是等同于一个很长有效期的token吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593928095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1046714,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","nickname":"约书亚","note":"","ucode":"81EA27ADD9EC1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288931,"discussion_content":"我觉得除了楼上所说，还有一个重要区别，access token在有效期内可以无限使用，而且可能被盗后用户或者第三方都不知晓，所以要尽可能短。但refresh只能用一次，造成危害小，而且被盗用后会被立即感知","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1593935451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288902,"ip_address":""},"score":288931,"extra":""},{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046714,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","nickname":"约书亚","note":"","ucode":"81EA27ADD9EC1A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288953,"discussion_content":"很解惑，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593940878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288931,"ip_address":""},"score":288953,"extra":""},{"author":{"id":1207622,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","nickname":"丁小明","note":"","ucode":"CC23857B8D75D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046714,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","nickname":"约书亚","note":"","ucode":"81EA27ADD9EC1A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291023,"discussion_content":"哈哈 我发现几乎在我买的所有课下都有你的身影，感觉至少得十几门了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594685874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288931,"ip_address":""},"score":291023,"extra":""}]},{"author":{"id":1079495,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","nickname":"新世界","note":"","ucode":"4473DC1505F158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342432,"discussion_content":"access_token会反复在网络上传输、refresh_token是只有生成和需要刷新的时候采用，是不是会相当程度减少 access_token和 refresh_token 的风险","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610680632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1224678,"avatar":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","nickname":"我行我素","note":"","ucode":"4C69542FAB0671","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296372,"discussion_content":"那是否可以在访问的时候直接延长过期时间，而不用初始给大值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596524383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1046562,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/22/a59136c2.jpg","nickname":"Linton","note":"","ucode":"7918113F03FD44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1224678,"avatar":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","nickname":"我行我素","note":"","ucode":"4C69542FAB0671","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540579,"discussion_content":"这个做法性能不太好，每个请求都会要做更新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640087436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296372,"ip_address":""},"score":540579,"extra":""}]}]},{"had_liked":false,"id":232239,"user_name":"哈德韦","can_delete":false,"product_type":"c1","uid":1637085,"ip_address":"","ucode":"E7C9B3D087D2D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","comment_is_top":false,"comment_ctime":1593933335,"is_pvip":false,"replies":[{"id":"85710","content":"对应的权限 都是同一个权限，这里用rscope是受保护资源服务再次确认的权限，r是replay。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593939160,"ip_address":"","comment_id":232239,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31658704407","product_id":100053901,"comment_content":"请问什么是 rscope？和上下文中的 scope 是一回事吗？这个 r 代表什么？","like_count":7,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500579,"discussion_content":"对应的权限 都是同一个权限，这里用rscope是受保护资源服务再次确认的权限，r是replay。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593939160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288952,"discussion_content":"谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593940817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232454,"user_name":"Harvey","can_delete":false,"product_type":"c1","uid":1254112,"ip_address":"","ucode":"164D1178DA091A","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/e0/6295a753.jpg","comment_is_top":false,"comment_ctime":1594008001,"is_pvip":true,"replies":[{"id":"85813","content":"第三方应用在平台上面注册的时候，包含回调地址。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594013925,"ip_address":"","comment_id":232454,"utype":1}],"discussion_count":8,"race_medal":0,"score":"23068844481","product_id":100053901,"comment_content":"既然第三方软件需要先在授权服务上注册，那为什么不在注册时直接把回调地址也注册了，这样不是更安全？","like_count":5,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500652,"discussion_content":"第三方应用在平台上面注册的时候，包含回调地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594013925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313112,"discussion_content":"老师，你好像没有回答Harvey 的问题，我也有同样的疑问。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602945416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1801595,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/7d/7b/2b631e38.jpg","nickname":"Fzm","note":"","ucode":"86661A2A32AE51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352291,"discussion_content":"已经回答了，在平台注册的时候，回调地址也注册了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614675017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":313112,"ip_address":""},"score":352291,"extra":""},{"author":{"id":1221604,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a3/e4/50266292.jpg","nickname":"库博","note":"","ucode":"0D5DD558C9EB25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1801595,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/7d/7b/2b631e38.jpg","nickname":"Fzm","note":"","ucode":"86661A2A32AE51","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354309,"discussion_content":"换个问法是：既然平台注册的时候，包含回调地址，为什么重定向到授权服务的时候还要带上回调地址呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615273155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352291,"ip_address":""},"score":354309,"extra":""},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1221604,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a3/e4/50266292.jpg","nickname":"库博","note":"","ucode":"0D5DD558C9EB25","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375146,"discussion_content":"这个我觉得是因平台而异：微信公众号平台注册，需要填写回调地址，这是个后端地址，微信会给你推送事件；如果仅仅是授权获取数据，而资源服务和三方平台没有其他交互的话，不需要在注册时填写回调地址的（不会有这个输入项），而是在请求生成code时需要带上前端的回调地址","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621496796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":354309,"ip_address":""},"score":375146,"extra":""}]},{"author":{"id":2826561,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/21/41/8156099f.jpg","nickname":"西谷老湿","note":"","ucode":"29E99E5EFAA087","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552961,"discussion_content":"应该说是授权平台注册可能只是域名，因为具体业务操作时不同业务可能只是域名下某个业务的具体url。在授权服务验证时只是验证域名合法性，不一定url完全匹配的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645669351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026284,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/ec/35071394.jpg","nickname":"陈华奇Ted","note":"","ucode":"49EF19F31194BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378130,"discussion_content":"会不会回调地址可以注册多个，而具体某个请求只会是其中的一个？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623062286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1518717,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/7d/840cdc02.jpg","nickname":"阿左不是蜗牛","note":"","ucode":"A18289B3265ED4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1026284,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/ec/35071394.jpg","nickname":"陈华奇Ted","note":"","ucode":"49EF19F31194BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591162,"discussion_content":"是的。注册的时候可以注册多个，具体请求的可以是其中一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666336907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378130,"ip_address":"北京"},"score":591162,"extra":""}]}]},{"had_liked":false,"id":232022,"user_name":"AA","can_delete":false,"product_type":"c1","uid":1103583,"ip_address":"","ucode":"CADCB958D6DA1B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/df/1e4ecd94.jpg","comment_is_top":false,"comment_ctime":1593833822,"is_pvip":false,"replies":[{"id":"85657","content":"是的，当刷新令牌也过期了，只能重新登录再授权。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593879526,"ip_address":"","comment_id":232022,"utype":1}],"discussion_count":5,"race_medal":0,"score":"23068670302","product_id":100053901,"comment_content":"淘宝的refresh_token也有过期时间，通过refresh_token刷新后，返回来assessToken和refresh_token，但refresh_token过期时间不会重新刷新，这是为什么要这样设置呢，当refresh_token为0时，是不是只能通过重新登录授权","like_count":5,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500475,"discussion_content":"是的，当刷新令牌也过期了，只能重新登录再授权。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593879526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1796582,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/69/e6/f454e752.jpg","nickname":"Jake","note":"","ucode":"6A4F5AD608CE1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312750,"discussion_content":"实际使用中没有感受到刷新令牌过期再登录的情况，都是最开始授权后就一直有权限了。这是为什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602810141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1796582,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/69/e6/f454e752.jpg","nickname":"Jake","note":"","ucode":"6A4F5AD608CE1D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375150,"discussion_content":"一般后端会有定时任务去刷新，所以前端感知不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621497745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312750,"ip_address":""},"score":375150,"extra":""}]},{"author":{"id":1970533,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/11/65/a29958da.jpg","nickname":"稻草人","note":"","ucode":"7E19EE0C125D80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293019,"discussion_content":"刷新令牌生成新的令牌，这个新生成的令牌有没有特定的规则，或者说算法，还是只是一个随机数，当我调用刷新令牌接口的时候是不是需要做一下权限的验证，不是谁都可以随便调用刷新令牌的接口的吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595413468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1970533,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/11/65/a29958da.jpg","nickname":"稻草人","note":"","ucode":"7E19EE0C125D80","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375152,"discussion_content":"刷新令牌也需要传appid和appSecret，如果这个已经泄露了，校验也根本拦不住","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621497864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293019,"ip_address":""},"score":375152,"extra":""}]}]},{"had_liked":false,"id":259988,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1604903935,"is_pvip":false,"replies":[{"id":"94698","content":"refresh_token过期时间不会重新刷新","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1605108430,"ip_address":"","comment_id":259988,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18784773119","product_id":100053901,"comment_content":"当第三方软件的访问令牌过期, 触发了刷新令牌的刷新,<br>从新生成访问令牌和刷新令牌, 这是过期时间又被重置. <br>如此循环是不是说, 永远不会过期啊 ??","like_count":4,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509079,"discussion_content":"refresh_token过期时间不会重新刷新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605108430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1003452,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/bc/501ce428.jpg","nickname":"年轮","note":"","ucode":"C70B8CD2FA0F54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"discussion":{"id":574376,"discussion_content":"这个怎么理解哈，如果refresh_token有效期7天，3天后刷新，新的refresh_token有效期是7天还是4天","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654006606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":509079,"ip_address":""},"score":574376,"extra":""},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1003452,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/bc/501ce428.jpg","nickname":"年轮","note":"","ucode":"C70B8CD2FA0F54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585653,"discussion_content":"我觉得是4天","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661746537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":574376,"ip_address":"浙江"},"score":585653,"extra":""}]}]},{"had_liked":false,"id":232175,"user_name":"Ryan Pan","can_delete":false,"product_type":"c1","uid":1964309,"ip_address":"","ucode":"235BA0C2AA03A5","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f9/15/584103d6.jpg","comment_is_top":false,"comment_ctime":1593884043,"is_pvip":false,"replies":[{"id":"85738","content":"当刷新令牌被使用过，授权服务可以自行决定是否颁发新的刷新令牌来替换旧的，我们的建议是生成新的。<br><br>refresh_token 的有效期具体多长时间，同样在OAuth 2.0 规范里面并没有给出确定值，一般比 access_token 的有效期长1-7天。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593960694,"ip_address":"","comment_id":232175,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18773753227","product_id":100053901,"comment_content":"请问为什麽刷新令牌用过了一定要废除呢?<br>有过期时间的话其实也可以用同一个来产生访问令牌不是吗?<br>还有想问一般来说刷新令牌的期限会设多久呢?<br>","like_count":4,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500544,"discussion_content":"当刷新令牌被使用过，授权服务可以自行决定是否颁发新的刷新令牌来替换旧的，我们的建议是生成新的。\n\nrefresh_token 的有效期具体多长时间，同样在OAuth 2.0 规范里面并没有给出确定值，一般比 access_token 的有效期长1-7天。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593960694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231881,"user_name":"暖色浮余生","can_delete":false,"product_type":"c1","uid":1593126,"ip_address":"","ucode":"ED943F2DF88896","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/26/f21afb83.jpg","comment_is_top":false,"comment_ctime":1593796385,"is_pvip":false,"replies":[{"id":"85623","content":"SCOPE的权限范围非常重要，OAuth 2.0 本着【最小权限范围】原则，来支持用户对第三方软件授权。比如小兔打单软件，他的主要“行当”就是帮助小明打印订单，那么它的权限范围就是调用跟订单打印相关的API，比如单条查询订单API、批量查询订单API，那么查询小明店铺其它的API就要受限，在小兔打单软件申请成为开放平台的应用的时候就要做一次权限范围的选择，另外，当小明给小兔进行授权的时候，也会让小明去选择并确认，总之就是不要让小兔打单软件有超过其正常权限的范围，来充分保护小明店铺的数据。后面的课程，我们还会详细讲解关于SCOPE的种类和用法。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593844355,"ip_address":"","comment_id":231881,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18773665569","product_id":100053901,"comment_content":"刷新令牌有过期时间吧，不过一般设置的时间比较长。反正微信公众号的挺长的，还有一直不明白 scope的 权限范围指的是一个什么样的范围","like_count":4,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500462,"discussion_content":"SCOPE的权限范围非常重要，OAuth 2.0 本着【最小权限范围】原则，来支持用户对第三方软件授权。比如小兔打单软件，他的主要“行当”就是帮助小明打印订单，那么它的权限范围就是调用跟订单打印相关的API，比如单条查询订单API、批量查询订单API，那么查询小明店铺其它的API就要受限，在小兔打单软件申请成为开放平台的应用的时候就要做一次权限范围的选择，另外，当小明给小兔进行授权的时候，也会让小明去选择并确认，总之就是不要让小兔打单软件有超过其正常权限的范围，来充分保护小明店铺的数据。后面的课程，我们还会详细讲解关于SCOPE的种类和用法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593844355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288664,"discussion_content":"scope 范围：是指能获取受保护数据的范围 比如 scope=userInfo 只能获取用户数据， scope=order 只能获取订单数据， scope=userinfo,order 可以同时获取用户数据和订单数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593835598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232221,"user_name":"马成","can_delete":false,"product_type":"c1","uid":1486895,"ip_address":"","ucode":"664F2BAA2E0F0B","user_header":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","comment_is_top":false,"comment_ctime":1593927159,"is_pvip":true,"replies":[{"id":"85703","content":"1.刷新令牌和授权码完全两个东西<br>2.刷新令牌换回来的访问令牌一定是变的<br>3.不可以，有2所以3不成立<br><br>对于第2点，可能是马成看了上节课的留言回复，当时有不准确的描述，我已修改，最好的方案是：更新访问令牌的值，这也是咱们这节课给出的建议【用来通过系统重新请求生成一个新的访问令牌】。<br><br>“若access_token未超时，那么进行refresh_token有两种方式，（1）不改变access_token，但超时时间会刷新，相当于续期access_token（2）更新access_token的值，我们建议【统一更新access_token的值】”","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593931949,"ip_address":"","comment_id":232221,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14478829047","product_id":100053901,"comment_content":"刷新令牌和授权码的处理机制感觉非常相似。只是code是第一次生成的，刷新令牌是后续生成的，功能都是换取访问令牌。我觉得这里还有一个点没说，就是在访问令牌有效期的前半段时间，使用刷新令牌换取的访问令牌是不变的。想问一下设计上可不可使用访问令牌来换取新的访问令牌？","like_count":3,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500569,"discussion_content":"1.刷新令牌和授权码完全两个东西\n2.刷新令牌换回来的访问令牌一定是变的\n3.不可以，有2所以3不成立\n\n对于第2点，可能是马成看了上节课的留言回复，当时有不准确的描述，我已修改，最好的方案是：更新访问令牌的值，这也是咱们这节课给出的建议【用来通过系统重新请求生成一个新的访问令牌】。\n\n“若access_token未超时，那么进行refresh_token有两种方式，（1）不改变access_token，但超时时间会刷新，相当于续期access_token（2）更新access_token的值，我们建议【统一更新access_token的值】”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593931949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067516,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/fc/5627215c.jpg","nickname":"小何","note":"","ucode":"EFD72AB3CA2AF7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369471,"discussion_content":"我理解之所以使用访问令牌和刷新令牌，而不是直接使用访问令牌去换取访问令牌，访问令牌的过期时间一般比较短，刷新令牌的过期时间比较长一些，如果只有访问令牌，就必须在访问令牌过期之前去服务器换取一下新的访问令牌，这样比较频繁。如果使用刷新令牌，则可以在刷新令牌过期之前去换取访问令牌即可，哪怕访问令牌已经过期也没关系，这样的设计更灵活一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619052756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1173691,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e8/bb/f0686bed.jpg","nickname":"capdiem","note":"","ucode":"C164ABF33F6F23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340167,"discussion_content":"appid,secret都绑定了refresh_token的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609920813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970533,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/11/65/a29958da.jpg","nickname":"稻草人","note":"","ucode":"7E19EE0C125D80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293018,"discussion_content":"刷新令牌生成新的令牌，这个新生成的令牌有没有特定的规则，或者说算法，还是只是一个随机数，当我调用刷新令牌接口的时候是不是需要做一下权限的验证，不是谁都可以随便调用刷新令牌的接口的吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595413456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232026,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1593835489,"is_pvip":true,"replies":[{"id":"85656","content":"是的，刷新令牌也有过期时间。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593879471,"ip_address":"","comment_id":232026,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14478737377","product_id":100053901,"comment_content":"刷新令牌肯定是有过期时间的，要不然一次授权终身有效。 一般刷新令牌的有效期为 30 天，过期后会让用户再进行授权。<br>","like_count":3,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500478,"discussion_content":"是的，刷新令牌也有过期时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593879471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2653715,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKib3vNM6TPT1umvR3TictnLurJPKuQq4iblH5upgBB3kHL9hoN3Pgh3MaR2rjz6fWgMiaDpicd8R5wsAQ/132","nickname":"陈阳","note":"","ucode":"C8E676C967D23A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577200,"discussion_content":"在请求刷新令牌的同时，会重置刷新令牌和访问令牌，返回给第三方软件， 如果不断的请求刷新令牌，那不是不会过期吗， 因为刷新令牌也是新的，刷新令牌的有效期也会被重置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655968830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244303,"user_name":"文正","can_delete":false,"product_type":"c1","uid":1103745,"ip_address":"","ucode":"755DDB8A00B7A4","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/81/2727b475.jpg","comment_is_top":false,"comment_ctime":1598454414,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10188389006","product_id":100053901,"comment_content":"做过微信公众号开发的应该很容易理解，基本上差不多。","like_count":2,"discussions":[{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382417,"discussion_content":"对接微信公众号的开发后，再学习这个文章，就对微信公众号的开发文档轻车熟路了。\n\n这篇文章还是值得反复参考，特别是需要自己实现一套 OAuth 机制的时候。只有自己实现过OAuth Server 了，才能对这篇文章轻车熟路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625562420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375160,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621498845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362853,"discussion_content":"是的，曾经做过微信公众号开发，看这文章感觉轻车熟路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617062501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240258,"user_name":"树洞老人","can_delete":false,"product_type":"c1","uid":1783249,"ip_address":"","ucode":"23C53DAFB28A78","user_header":"https://static001.geekbang.org/account/avatar/00/1b/35/d1/12439914.jpg","comment_is_top":false,"comment_ctime":1596812719,"is_pvip":false,"replies":[{"id":"88812","content":"第三方软件需要在平台一侧提前注册好app_id，同时平台会为三方软生成app_secret。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597019947,"ip_address":"","comment_id":240258,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10186747311","product_id":100053901,"comment_content":"您好老师，我们一般如何验证第三方软件是否合法呢？","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503390,"discussion_content":"第三方软件需要在平台一侧提前注册好app_id，同时平台会为三方软生成app_secret。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597019947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232018,"user_name":"依韵","can_delete":false,"product_type":"c1","uid":1153762,"ip_address":"","ucode":"02F5BED8BE0F6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/e2/271e0caf.jpg","comment_is_top":false,"comment_ctime":1593832529,"is_pvip":false,"replies":[{"id":"85662","content":"通过expires_in做判断，这个参数值返回给了第三方应用，同时也跟access_token值一起对应的保存在了授权服务一侧。第三方应用一侧可以提前判断，比如定时任务，也可以实时请求，等待授权服务的过期提示；授权服务一侧因为有了access_token、expires_in，每次接收到请求的时候实时判断验证时间范围。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593880494,"ip_address":"","comment_id":232018,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10183767121","product_id":100053901,"comment_content":"刷新令牌应该也是有过期时间的，因为刷新令牌有效就可以换取新的access_token，若refresh_token一直有效，那么就可以一直换取新的access_token。<br>令牌只存是一个多上时间有效是不够的吧，至少得加上颁发的时间、或者直接推算存上截止时间。<br>有一个疑问，通常会有这么一个功能：小明授权小兔一个月的访问权限。这点如何是如何实现的，目前能想到的是，存下这个期限，验证时加上是否还在范围内的判断，或者每次换新令牌时直接将令牌上的期限进行修正（假设在第28天换新令牌，令牌是5天，这这一次给的新令牌应该只有2天）。虽然都能实现，但想问，这块的标准是如何实现的。","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500473,"discussion_content":"通过expires_in做判断，这个参数值返回给了第三方应用，同时也跟access_token值一起对应的保存在了授权服务一侧。第三方应用一侧可以提前判断，比如定时任务，也可以实时请求，等待授权服务的过期提示；授权服务一侧因为有了access_token、expires_in，每次接收到请求的时候实时判断验证时间范围。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593880494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1922583,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELVtQAW8IIDLKcn36XM9noEfKuAKpJQrwruJzXeibDfmibIiawicj5vaoflct0LuTAiaKcmCY3gK9MknEw/132","nickname":"远方","note":"","ucode":"0E2FCC59EDCAD4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414008,"discussion_content":"如果过期了很长一段时间了，还可以换么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636635799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342230,"user_name":"今晚打老虎","can_delete":false,"product_type":"c1","uid":2290729,"ip_address":"","ucode":"A8762D8597932C","user_header":"https://static001.geekbang.org/account/avatar/00/22/f4/29/cac5d7d4.jpg","comment_is_top":false,"comment_ctime":1650116251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5945083547","product_id":100053901,"comment_content":"做过第三方社交登录，比如 微信登录、gitee登录、微博登录，第一件事情都是要去相应开平台注册我们的应用，一开始还不太明白为什么要注册应用，今天看了这篇文章以后收获颇多，加深code和access_token的了解。对于有同学提出为什么不在第三方软件上注册我们的回调地址的问题，你做过第三方登录的话，你会发现填写应用基本信息的收获是需要填写回调地址的。","like_count":1},{"had_liked":false,"id":242805,"user_name":"有翼之暗","can_delete":false,"product_type":"c1","uid":2050110,"ip_address":"","ucode":"70346FB2D737E5","user_header":"","comment_is_top":false,"comment_ctime":1597846061,"is_pvip":false,"replies":[{"id":"89543","content":"普通的访问令牌是有过期时间，到期自动失效。如果要想让令牌在有效期内失效，就需要额外做些工作了，比如用户修改了密码这样的动作一旦发生，就需要立即让访问令牌失效。当第三方软件再次拿着访问令牌来请求数据的时候就会告诉其令牌失效了。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597885445,"ip_address":"","comment_id":242805,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5892813357","product_id":100053901,"comment_content":"令牌失效是在授权服务器中失效，那是怎么实现的让第三方软件中的令牌也失效呢？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504101,"discussion_content":"普通的访问令牌是有过期时间，到期自动失效。如果要想让令牌在有效期内失效，就需要额外做些工作了，比如用户修改了密码这样的动作一旦发生，就需要立即让访问令牌失效。当第三方软件再次拿着访问令牌来请求数据的时候就会告诉其令牌失效了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597885445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242803,"user_name":"有翼之暗","can_delete":false,"product_type":"c1","uid":2050110,"ip_address":"","ucode":"70346FB2D737E5","user_header":"","comment_is_top":false,"comment_ctime":1597845856,"is_pvip":false,"replies":[{"id":"89548","content":"一种是当使用的时候，平台一方的服务会验证判断令牌有无到期，定时扫描就是起一个任务来判断，因为返回令牌的时候把令牌的过期时间也返回了。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597885607,"ip_address":"","comment_id":242803,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5892813152","product_id":100053901,"comment_content":"刷新令牌是怎么实现触发刷新的呢？，是有一个后台守护线程不断扫描吗？是依据什么来判断令牌需要刷新呢？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504100,"discussion_content":"一种是当使用的时候，平台一方的服务会验证判断令牌有无到期，定时扫描就是起一个任务来判断，因为返回令牌的时候把令牌的过期时间也返回了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597885607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239530,"user_name":"Edison鹏","can_delete":false,"product_type":"c1","uid":2103222,"ip_address":"","ucode":"62E10D50565DC8","user_header":"https://static001.geekbang.org/account/avatar/00/20/17/b6/ac21f221.jpg","comment_is_top":false,"comment_ctime":1596555811,"is_pvip":false,"replies":[{"id":"88491","content":"用户主动登录是授权的前提，因为授权的这个动作发生在平台一方，既然发生在平台一方，用户登录后，平台一方肯定是能获取到当前登录用户的信息，那么当授权服务去生成token的时候，就能够知道是哪个用户为哪个第三方软件进行了授权。严格意义上只有这一个给第三方软件生成的token。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596589696,"ip_address":"","comment_id":239530,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5891523107","product_id":100053901,"comment_content":"有一点疑问：通过授权码获取到的用户token和用户主动登录获取到的token是同一个吗？如果不是同一个，那岂不是通过授权码获取到token之后 用户原来主动登录的token就失效了？但是根据历史经验来说并没有因为授权通过之后原来的应用需要重新登录啊。所以结论是 通过授权码获取到的用户token不会新生成？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503129,"discussion_content":"用户主动登录是授权的前提，因为授权的这个动作发生在平台一方，既然发生在平台一方，用户登录后，平台一方肯定是能获取到当前登录用户的信息，那么当授权服务去生成token的时候，就能够知道是哪个用户为哪个第三方软件进行了授权。严格意义上只有这一个给第三方软件生成的token。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596589696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234585,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1594726660,"is_pvip":true,"replies":[{"id":"86533","content":"可以直接判断，也可以将其作为【因子】加入到签名算法中。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594732590,"ip_address":"","comment_id":234585,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5889693956","product_id":100053901,"comment_content":"appsecret不应该是直接判断相等吧，appsecret不会出现在包中吧，他只是做hash验证吧","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501431,"discussion_content":"可以直接判断，也可以将其作为【因子】加入到签名算法中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594732590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2809191,"avatar":"","nickname":"Geek_928ec1","note":"","ucode":"AFA91D19AD6333","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406944,"discussion_content":"微信的网页授权方式是直接拼接在url中的  ttps://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634871368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234076,"user_name":"名:海东","can_delete":false,"product_type":"c1","uid":1269996,"ip_address":"","ucode":"0BBF4402F75D07","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/ec/11cf22de.jpg","comment_is_top":false,"comment_ctime":1594570518,"is_pvip":false,"replies":[{"id":"86368","content":"小兔打单软件应用对应的研发人员需要事先在授权服务一侧注册好，生成app_id和app_secret等信息，注册的时候就要申请一次权限，比如你这个应用是什么类型的，能访问哪些API，注册的时候没有小明的参与。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594600589,"ip_address":"","comment_id":234076,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889537814","product_id":100053901,"comment_content":"刷新令牌应该也是由过期时间的，不然可能存在安全问题。有个问题，需要请教老师，第三方软件(如小兔打单软件)注册到授权服务时是怎样的？它注册时有没有申请权限一说？应该没有用户(如小明)参与吧？第三方软件在用户授权时应该提前在授权服务做了注册。","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501269,"discussion_content":"小兔打单软件应用对应的研发人员需要事先在授权服务一侧注册好，生成app_id和app_secret等信息，注册的时候就要申请一次权限，比如你这个应用是什么类型的，能访问哪些API，注册的时候没有小明的参与。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594600589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233957,"user_name":"唐朝农民","can_delete":false,"product_type":"c1","uid":1133947,"ip_address":"","ucode":"6F8F43C6652225","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaOAxRlZjFkGfRBn420LuAcyWkMrpq5iafGdqthX5icJPjql0ibZOAdafaqbfvw4ZpVzDmsaYglVXDw/132","comment_is_top":false,"comment_ctime":1594534076,"is_pvip":false,"replies":[{"id":"86342","content":"在实际生产环境中，这个用户ID是不需要传递的也不可能被传递，因为OAuth 2.0的目的之一就是不让第三方软件接触到用户ID。<br><br>第一次跟用户ID有关系的时候就是在用户给第三方软件授权的时候，这个时候如果用户没有登录就会先登录再授权，这一切都是发生在平台的一方，所以平台能够拿到用户的ID，继而在给第三方软件生成访问令牌的时候，就可以让这个访问令牌access_token的值跟第三方软件的app_id和用户ID做一个映射关系，同理refresh_token的生成也是一样的，并且refresh_token和access_token是一起生成并返回给第三方软件。<br><br>我们在代码中为了演示refresh_token和access_token的生成都是在app_id和用户这个粒度的，是“特意”固定写死了一个USERTEST值。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594561153,"ip_address":"","comment_id":233957,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889501372","product_id":100053901,"comment_content":"String appStr = refreshTokenMap.get(&quot;refresh_token&quot;);<br>if(!appStr.startsWith(appId+&quot;|&quot;+&quot;USERTEST&quot;)){&#47;&#47;该refresh_token值 不是颁发给该 第三方软件的<br>    return;<br> }<br>有一点不是很明白，授权服务是一个平台，不可能针对“小明”一个用户，那么在验证refresh_token时肯定不能硬编码成“USERTEST”，而是从上下文中获取的，请求这个用户ID 是 怎么传递的呢？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501229,"discussion_content":"在实际生产环境中，这个用户ID是不需要传递的也不可能被传递，因为OAuth 2.0的目的之一就是不让第三方软件接触到用户ID。\n\n第一次跟用户ID有关系的时候就是在用户给第三方软件授权的时候，这个时候如果用户没有登录就会先登录再授权，这一切都是发生在平台的一方，所以平台能够拿到用户的ID，继而在给第三方软件生成访问令牌的时候，就可以让这个访问令牌access_token的值跟第三方软件的app_id和用户ID做一个映射关系，同理refresh_token的生成也是一样的，并且refresh_token和access_token是一起生成并返回给第三方软件。\n\n我们在代码中为了演示refresh_token和access_token的生成都是在app_id和用户这个粒度的，是“特意”固定写死了一个USERTEST值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594561153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233474,"user_name":"hom","can_delete":false,"product_type":"c1","uid":1105009,"ip_address":"","ucode":"9966B2F78EF479","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/71/5e1944e8.jpg","comment_is_top":false,"comment_ctime":1594340897,"is_pvip":false,"replies":[{"id":"86220","content":"1、刷新令牌也有有效期<br>2、code在前端传输，还有在后端传输的app_secret","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594359109,"ip_address":"","comment_id":233474,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889308193","product_id":100053901,"comment_content":"请教下两个问题：<br>1、不断用刷新令牌一直刷新，那token是不是可以无限延长？<br>2、code在流程中被劫持了怎么办？ ","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501051,"discussion_content":"1、刷新令牌也有有效期\n2、code在前端传输，还有在后端传输的app_secret","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594359109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233276,"user_name":"chuck","can_delete":false,"product_type":"c1","uid":1697205,"ip_address":"","ucode":"175287BB177F5E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mG8pYHVExw91oF4kB43rlWtltZqx3SJPriad1GgJYZgZ3hgrkwEM9sXFVSzVliblmmN4QCxNuo5vicE26YBVBkiaXw/132","comment_is_top":false,"comment_ctime":1594277386,"is_pvip":false,"replies":[{"id":"86083","content":"第三方应用在申请成为平台的开发者的时候会注册申请一个所能够调用的API权限列表，在用户给第三方应用授权的时候也会让用户来确认给三方软件授予哪些权限，在三方软件请求受保护资源的时候，受保护资源要根据以上去做判断，不能超过当初申请注册的权限范围，也不能超过用户授予的权限范围。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594290487,"ip_address":"","comment_id":233276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889244682","product_id":100053901,"comment_content":"权限范围如何验证？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500969,"discussion_content":"第三方应用在申请成为平台的开发者的时候会注册申请一个所能够调用的API权限列表，在用户给第三方应用授权的时候也会让用户来确认给三方软件授予哪些权限，在三方软件请求受保护资源的时候，受保护资源要根据以上去做判断，不能超过当初申请注册的权限范围，也不能超过用户授予的权限范围。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594290487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232560,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1594037317,"is_pvip":false,"replies":[{"id":"85843","content":"用户、第三方软件、平台，如果他们的利益排序的话，用户肯定是放在首位；<br><br>OAuth 2.0 的机制是不让第三软件接触到最终用户的用户名和密码，用token代替了用户名和密码的传输；如果不这样做，密码的攻击面就很大，因为在频繁调用API的时候都要带上用户名和密码；<br><br>用户的用户名和密码不仅仅是被置换成token来帮助第三方软件来调用API的，比如极客App上面一个用户的密码一旦被盗，能干所有的事情，所以用户的密码肯定不能随意传输。<br><br>第三方软件的app_secret也相当于第三方软件的密码，第三方软件要访问平台上面的API，平台是必须要验证第三方软件的存在性，但是如果没有token，也就是没有用户为其授权，第三方软件是干不了任何事情的，同时呢，我们的token也是有有效期的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594045550,"ip_address":"","comment_id":232560,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5889004613","product_id":100053901,"comment_content":"老师，有个问题一直不明白，请教一下。<br><br>用户名和密码，密码是不应该在网络上传输的，传输的一般是哈希值。<br><br>那为什么检验三方软件的身份时，app_secret可以通过网络传输呢？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500690,"discussion_content":"用户、第三方软件、平台，如果他们的利益排序的话，用户肯定是放在首位；\n\nOAuth 2.0 的机制是不让第三软件接触到最终用户的用户名和密码，用token代替了用户名和密码的传输；如果不这样做，密码的攻击面就很大，因为在频繁调用API的时候都要带上用户名和密码；\n\n用户的用户名和密码不仅仅是被置换成token来帮助第三方软件来调用API的，比如极客App上面一个用户的密码一旦被盗，能干所有的事情，所以用户的密码肯定不能随意传输。\n\n第三方软件的app_secret也相当于第三方软件的密码，第三方软件要访问平台上面的API，平台是必须要验证第三方软件的存在性，但是如果没有token，也就是没有用户为其授权，第三方软件是干不了任何事情的，同时呢，我们的token也是有有效期的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594045550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046714,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","nickname":"约书亚","note":"","ucode":"81EA27ADD9EC1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393172,"discussion_content":"1. 用户的网络环境更加复杂，多样，安全性低，三方应用会稍好\n2. 其实课程中强调不用密码，不仅仅是考虑传输不安全，也有存储的问题，这个问题在三方应用的secret场景下不存在。\n3. 其实现在大多数应用也不是直接传递secret了，我感觉更多是作为hmac xxx签名的秘钥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631276201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232293,"user_name":"Geek_be0aff","can_delete":false,"product_type":"c1","uid":1902223,"ip_address":"","ucode":"C14ABF4146A2CF","user_header":"","comment_is_top":false,"comment_ctime":1593947278,"is_pvip":false,"replies":[{"id":"85740","content":"可以这样做。<br>最好的做法，是在诸如订单系统、商品系统、用户系统等等系统服务至上做一层API GATEWAY，让GATEWAY来做鉴权的工作，也就是把access_token对应的用户信息查询出来，再传递到上面说的那些系统服务上。对于业务上的信息比如你说的订单ID这个是在请求的时候在业务传参里面就包含的，授权相关的最基本的内容只跟用信息相关。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593961139,"ip_address":"","comment_id":232293,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5888914574","product_id":100053901,"comment_content":"请教老师，第三方获取access_token后，请求中带上access_token访问订单系统时，订单需要需要把access_token和请求的资源发给授权服务器做验证吧？订单系统是不需要对请求做权限校验吧？？订单系统发给授权服务的请求，是不是需要带上access_token，资源拥有者的user_id，订单系统的ID（明确客户请求的是订单系统，而不是商品系统），请求的资源；然后授权服务对请求做权限校验，结果返回给订单系统，是这样吗？特别是订单系统的唯一标识，是一定要带的吧？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500595,"discussion_content":"可以这样做。\n最好的做法，是在诸如订单系统、商品系统、用户系统等等系统服务至上做一层API GATEWAY，让GATEWAY来做鉴权的工作，也就是把access_token对应的用户信息查询出来，再传递到上面说的那些系统服务上。对于业务上的信息比如你说的订单ID这个是在请求的时候在业务传参里面就包含的，授权相关的最基本的内容只跟用信息相关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593961139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313114,"discussion_content":"我的理解是有两种做法，一种是都传给内部的授权服务器，还有一种是Access Token 里面就包含的权限信息，所以订单系统只要看access token 里的信息就够了。但是我不理解怎么解决 重放的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602945671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1902223,"avatar":"","nickname":"Geek_be0aff","note":"","ucode":"C14ABF4146A2CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313158,"discussion_content":"如果是https协议，tls1.3以上可以避免重放攻击。如果是自定义协议，每个请求加上时间戳或者随机数做唯一标识就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602984406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":313114,"ip_address":""},"score":313158,"extra":""}]}]},{"had_liked":false,"id":359203,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"广东","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1665322962,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665322962","product_id":100053901,"comment_content":"授权码模式,之前做过一个场景,就是我们的一个小程序项目嵌入了一个页面,但是这个页面无法待 acctoken令牌之类的东西过去,导致用户点击到这个页面后,还需要再次授权,所以我们想的是,先请求后端接口,去获取一个临时的授权码,然后前端拿这个授权码,去请求后端接口,并带上重定向的url,等后端验证.没问题后,然后重定向到这个页面,用户就不需要重新登陆了~~","like_count":0},{"had_liked":false,"id":359202,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"广东","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1665322792,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665322792","product_id":100053901,"comment_content":"刷新令牌有过期时间,不过有一个问题,加入刷新令牌的快要过期了,这时候来申请access_token ,肯定是可以申请的,那么 access_token 的有效时间假如是 2小时,刷新令牌还有一小时过期,这时候是不是会有问题.还是说,如果是这种情况的话,会把刷新令牌的过期时间刷行一次?","like_count":0},{"had_liked":false,"id":353446,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"湖北","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1659444439,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659444439","product_id":100053901,"comment_content":"好文好文，讲解得很细！","like_count":0},{"had_liked":false,"id":351403,"user_name":"Geek_fbb524","can_delete":false,"product_type":"c1","uid":2039818,"ip_address":"","ucode":"4493CCE9A47777","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ECOJ2KphCShZuPK5JTTfAAmvzYscsbWtw2s8Zib1mrf5mOMgIkjlzoDLpV70wCQIGRqrCicv8S3rVmOvHt3MmWJA/132","comment_is_top":false,"comment_ctime":1657770140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657770140","product_id":100053901,"comment_content":"使用 刷新令牌 更新access_token和refresh_token后，怎么通知前端呢<br>","like_count":0},{"had_liked":false,"id":345657,"user_name":"紫日","can_delete":false,"product_type":"c1","uid":1207410,"ip_address":"","ucode":"73A8DEE323AC19","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","comment_is_top":false,"comment_ctime":1652491974,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1652491974","product_id":100053901,"comment_content":"OAuth 2.0之所流程这么繁琐，就有安全授权和兼顾用户体验；单独看安全授权或者用户体验都不需要这么繁琐；作为一名业务系统开发人员，不仅考虑怎么实现业务，还是站在产品角度考虑用户使用体验，还要考虑上线维护成本，才能写出更有价值的程序。","like_count":0},{"had_liked":false,"id":345656,"user_name":"紫日","can_delete":false,"product_type":"c1","uid":1207410,"ip_address":"","ucode":"73A8DEE323AC19","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","comment_is_top":false,"comment_ctime":1652491949,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1652491949","product_id":100053901,"comment_content":"OAuth 2.0之所繁琐，就有安全授权和兼顾用户体验；单独看安全授权或者用户体验都不需要这么繁琐；作为一名业务系统开发人员，不仅考虑怎么实现业务，还是站在产品角度考虑用户使用体验，还要考虑上线维护成本，才能写出更有价值的程序。","like_count":0},{"had_liked":false,"id":341733,"user_name":"干饭团","can_delete":false,"product_type":"c1","uid":1004720,"ip_address":"","ucode":"D05B108D9468E0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/b0/c9f8fb0b.jpg","comment_is_top":false,"comment_ctime":1649812927,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649812927","product_id":100053901,"comment_content":"刷新令牌只能用一次吗，access token过期后，用refresh token 获取新的access token和 refresh token","like_count":0},{"had_liked":false,"id":336310,"user_name":"思尘","can_delete":false,"product_type":"c1","uid":1021736,"ip_address":"","ucode":"22D8225BD2273B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/28/44a524aa.jpg","comment_is_top":false,"comment_ctime":1646061652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646061652","product_id":100053901,"comment_content":"完成了一个 golang 版本<br>https:&#47;&#47;github.com&#47;changjunhao&#47;OAuth2-Tutorial","like_count":0},{"had_liked":false,"id":324384,"user_name":"星夜宝宝","can_delete":false,"product_type":"c1","uid":1334215,"ip_address":"","ucode":"958CEA5A12850C","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/c7/1728011a.jpg","comment_is_top":false,"comment_ctime":1638412310,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638412310","product_id":100053901,"comment_content":"老师能出一个视频手把手的教学妈，就是企业实际的 授权 + 权限 的最好是oauth2.0 + springcloud + spring security 的","like_count":0},{"had_liked":false,"id":324101,"user_name":"孜孜","can_delete":false,"product_type":"c1","uid":1018203,"ip_address":"","ucode":"7EF4FB644357CE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/5b/d8f78c1e.jpg","comment_is_top":false,"comment_ctime":1638296009,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638296009","product_id":100053901,"comment_content":"直接拿密码作为密钥不太好，这样就把密码（hash）暴露给APP，即使在同一个公司，我们也很难保证其他部门的程序没有漏洞。从而泄露用户密码（hash）。。。","like_count":0},{"had_liked":false,"id":320446,"user_name":"Chiney","can_delete":false,"product_type":"c1","uid":1205933,"ip_address":"","ucode":"0F9E384505F75A","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/ad/18731cc1.jpg","comment_is_top":false,"comment_ctime":1636335323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636335323","product_id":100053901,"comment_content":"刷新token，每次刷新access token时，refresh token自己要更新吗？如果自己要更新，怎么保证可靠刷新呢，例如服务器完成刷新动作，旧的refresh token，access token全部失效了，但是因为网络原因，client端没有收到，那么就会刷新失败。","like_count":0},{"had_liked":false,"id":320050,"user_name":"JuCY","can_delete":false,"product_type":"c1","uid":1038800,"ip_address":"","ucode":"43689B65128039","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/d0/baffc852.jpg","comment_is_top":false,"comment_ctime":1636066842,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636066842","product_id":100053901,"comment_content":"请问，刷新令牌为什么只能使用一次？它不像授权码是暴露到前端端。我试过Google的刷新令牌是可以重复使用的","like_count":0},{"had_liked":false,"id":315890,"user_name":"Detofy","can_delete":false,"product_type":"c1","uid":1389488,"ip_address":"","ucode":"485A81628DFE81","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wzLyOlTmiaXY0M4R7qXnPSGM4skFGjtXthK2tFVWapLMfOIaicZl6AORvZRzrEDbzrNzU3ibm1zAp6LgKxKgcoO4A/132","comment_is_top":false,"comment_ctime":1634032548,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1634032548","product_id":100053901,"comment_content":"代码里面app_id和app_secret都是放在url里面传递的,这个不安全吧","like_count":0,"discussions":[{"author":{"id":2809191,"avatar":"","nickname":"Geek_928ec1","note":"","ucode":"AFA91D19AD6333","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406946,"discussion_content":"可以看看微信网页授权 https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html  也是放在url,实际上只要是在后端使用https就能很大程度保证传输安全(除非人为原因泄漏)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634871506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315242,"user_name":"李伟","can_delete":false,"product_type":"c1","uid":1239462,"ip_address":"","ucode":"F0EF60EB250B20","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","comment_is_top":false,"comment_ctime":1633765054,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1633765054","product_id":100053901,"comment_content":"“一个刷新令牌被使用以后，授权服务需要将其废弃，并重新颁发一个刷新令牌”，如果refresh_token并没有过期只是使用了一次就需要失效吗？这样客户端不是要频繁的保存refresh_token？望解答","like_count":0},{"had_liked":false,"id":310817,"user_name":"李伟","can_delete":false,"product_type":"c1","uid":1239462,"ip_address":"","ucode":"F0EF60EB250B20","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","comment_is_top":false,"comment_ctime":1630922051,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1630922051","product_id":100053901,"comment_content":"刷新令牌有过期时间吗，会一直有效吗？<br>刷新令牌是要有过期时间的，否则第三方就相当于永久的拥有了受保护资源的权限，增加了安全风险。有些平台的刷新令牌是永久有效的，这种做法是比较偷懒的。","like_count":0},{"had_liked":false,"id":301170,"user_name":"哈德韦","can_delete":false,"product_type":"c1","uid":1637085,"ip_address":"","ucode":"E7C9B3D087D2D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","comment_is_top":false,"comment_ctime":1625562204,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1625562204","product_id":100053901,"comment_content":"需要注意，一个刷新令牌被使用以后，授权服务需要将其废弃，并重新颁发一个刷新令牌。<br><br>如果刷新令牌也是用 JWT 生成的，是不是就没有办法在使用后立即废弃了，只能等待其自然过期？还是说刷新令牌不能使用 JWT 生成？","like_count":0,"discussions":[{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402777,"discussion_content":"让 jwt 失效的方法也是有的，服务端维护一个黑名单或者白名单就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633947674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239462,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","nickname":"李伟","note":"","ucode":"F0EF60EB250B20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392251,"discussion_content":"你是说过期时间放在JWT信息中，而不是存放在授权服务的存储中的这种情况对吧？其实关于这个我也挺疑惑的？你找到答案了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630922166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299718,"user_name":"xiaolin625370","can_delete":false,"product_type":"c1","uid":1520547,"ip_address":"","ucode":"9A004B53722EA0","user_header":"","comment_is_top":false,"comment_ctime":1624814270,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1624814270","product_id":100053901,"comment_content":"老师，你好，想问一下，请求认证&#47;oauth&#47;authorize的时候，会颁发code，code会跟user绑定上，怎么获取用户信息的呢？从哪里能获取到？用户登录后，在浏览器新的tab页可以请求认证获得code，这时候只传了client_id，很好奇怎么获取user信息","like_count":0,"discussions":[{"author":{"id":2166878,"avatar":"https://static001.geekbang.org/account/avatar/00/21/10/5e/42f4faf7.jpg","nickname":"天择","note":"","ucode":"ED2B08DB2F2B38","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401412,"discussion_content":"在用户确认授权之前肯定要登录到京东的系统中，这一步是验证authentication，可作为授权的一步。登录成功后，这个登录状态会跟随后续请求一直存在，比如在cookie字段中，这里面就可以提取用户信息。在确认授权后请求授权码时，由于也是对京东服务端的请求（域名相同），这个登录状态也会被带到服务端做校验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633662036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297872,"user_name":"Relo","can_delete":false,"product_type":"c1","uid":1128910,"ip_address":"","ucode":"810C3A3C10F14D","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/ce/0ca1ba6c.jpg","comment_is_top":false,"comment_ctime":1623828149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623828149","product_id":100053901,"comment_content":"老师，框架中限制是client_id，如何变更为app_id","like_count":0},{"had_liked":false,"id":277710,"user_name":"小柒","can_delete":false,"product_type":"c1","uid":1137277,"ip_address":"","ucode":"09AFAB893C7CC9","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/7d/f25ef54e.jpg","comment_is_top":false,"comment_ctime":1612522024,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1612522024","product_id":100053901,"comment_content":"第二次重定向时，文中的伪代码是从请求参数中取 redirect_uri，而授权服务器后台也有一个理论上一样的 redirect_uri，是否直接取授权服务器后台的 redirect_uri 更安全呢？","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375154,"discussion_content":"这两个可以都有，授权服务器就可以做校验，防止出现钓鱼网站重定向到非法地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621498116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277064,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1612251672,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612251672","product_id":100053901,"comment_content":"我对“第一次验证权限范围”和“第二次验证权限范围”的理解：<br>第三方和京东商城开放平台申请了多个权限，例如打单，店铺装饰，客服服务。而小兔打单只是其中的一个功能点，完整的权限scope是(A1,A2,B1,B2,C1,2)。当选中打单软件时，此时scope是（A1,A2），然后授权服务提供选(A1,A2)给用户选择，选好了之后。授权服务才是第二次校验。<br>-------------<br>另一种理解，打单软件注册时就是（A1,A2）,但由于京东商城设计的接口就是准备工作需要一次权限校验，用户确认时，需要二次权限校验。目前理解这样的好处：对于京东商城，做到代码复用；对于用户，可以看到第三方给出的权限和京东开放平台给出的权限是否一致。","like_count":0},{"had_liked":false,"id":274918,"user_name":"max","can_delete":false,"product_type":"c1","uid":1773471,"ip_address":"","ucode":"91DDE86511DCDC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/0f/9f/caae319d.jpg","comment_is_top":false,"comment_ctime":1611217952,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611217952","product_id":100053901,"comment_content":"点击小兔登录后跳转到京东单点登录页，输入用户密码后京东单点登录成功会话就会保持了，同时生成code重定向回小兔软件页面，调用code换token操作；这时候哪怕code失效了，京东单点登录成功的状态还在，校验这个状态就可以生成code继续重定向","like_count":0},{"had_liked":false,"id":273873,"user_name":"Geek_aa9a37","can_delete":false,"product_type":"c1","uid":2414301,"ip_address":"","ucode":"07FD0EF3DDCBB4","user_header":"","comment_is_top":false,"comment_ctime":1610702547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610702547","product_id":100053901,"comment_content":"看完这一讲后去研究了微信和QQ的开放平台接入文档，感觉任督二脉打通了。哈哈哈哈，给老师点赞。","like_count":0},{"had_liked":false,"id":259759,"user_name":"raox","can_delete":false,"product_type":"c1","uid":1400807,"ip_address":"","ucode":"0769AB8F2844E1","user_header":"https://static001.geekbang.org/account/avatar/00/15/5f/e7/c7f24a5c.jpg","comment_is_top":false,"comment_ctime":1604827228,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1604827228","product_id":100053901,"comment_content":"请教老师：第六步，重定向至第三方软件。  OAuth2 Client前端拿到code,有哪些常用方法传给OAuth2 Client后端呢？","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375156,"discussion_content":"前端页面携带code向后端发出请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621498256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256480,"user_name":"大饶Raysir","can_delete":false,"product_type":"c1","uid":1589208,"ip_address":"","ucode":"0AFA191420A30D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITcwicqBDYzXtLibUtian172tPs7rJpqG1Vab4oGjnguA9ziaYjDCILSGaS6qRiakvRdUEhdmSG0BGPKw/132","comment_is_top":false,"comment_ctime":1603635409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603635409","product_id":100053901,"comment_content":"刷新令牌也需要设计过期时间，比令牌的过期时间稍长即可。","like_count":0},{"had_liked":false,"id":254865,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1603201835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603201835","product_id":100053901,"comment_content":"授权服务的核心就是，先颁发授权码 code 值，再颁发访问令牌 access_token 值。<br>在颁发访问令牌的同时还会颁发刷新令牌 refresh_token 值，这种机制可以在无须用户参与的情况下用于生成新的访问令牌。正如我们讲到的小明使用小兔软件的例子，当访问令牌过期的时候，刷新令牌的存在可以大大提高小明使用小兔软件的体验。<br>授权还要有授权范围，不能让第三方软件获得比注册时权限范围还大的授权，也不能获得超出了用户授权的权限范围，始终确保最小权限安全原则。比如，小明只为小兔软件授予了获取当天订单的权限，那么小兔软件就不能访问小明店铺里面的历史订单数据。","like_count":0},{"had_liked":false,"id":253918,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1602946610,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1602946610","product_id":100053901,"comment_content":"老师，第一次小兔把用户重定向到平台的时候，需要把小兔的app secretes 放在请求里面吗？如果放，那app secretes 岂不是通过前端来传递了不就不安全吗？如果不放，平台怎么判断来redirect 的请求不是伪造的，因为小兔的app ID 是大家都知道的，我完全可以伪造一个授权请求在里面放一个我自己的redirect url 来获取新的code grant 啊。","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375159,"discussion_content":"授权请求只能授权自己的，如果你拿着我的手机去给某个三方网站授权，三方网站也不知道你是不是“我”本人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621498704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375158,"discussion_content":"第一次重定向的时候不需要吧，请求code时才会携带","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621498516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362851,"discussion_content":"小兔去jd注册时需要填写重定向url","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617062366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253915,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1602945972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602945972","product_id":100053901,"comment_content":"老师，文中提到两次权限检查，我不理解为什么在准备阶段也就是在生成授权页面之前，需要检查权限。是第一次小兔把用户redirect 到平台去授权的时候发给Auth Server URL 里面就有权限信息吗？可是小兔在注册的之后就已经说明权限了呀，我觉得没有必要在准备阶段有权限检查的。只需要在用户点击授权时把用户选择的权限发给Auth 换code 的时候检查（也就是文中说的第二次检查）就够了呀。","like_count":0},{"had_liked":false,"id":248002,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1599975291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599975291","product_id":100053901,"comment_content":"刷新令牌有过期时间，有点类似权限控制。类比公司，比如休假时，经理有权限批两天的权限，总监有权限批3到5天的权限，老总有权限批5天以上的权限。令牌有效期，好比在领导工作时间申请批假，刷新令牌好比领导是不是在公司任职。不管经理，总监和老总，都有可能离职，不能仅仅只看他们的签字就认定可以休假。 因为可能领导上午在公司，下午就离职走人了","like_count":0},{"had_liked":false,"id":244124,"user_name":"Geek_67d039","can_delete":false,"product_type":"c1","uid":1564391,"ip_address":"","ucode":"7A7705C8F1C519","user_header":"","comment_is_top":false,"comment_ctime":1598405797,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598405797","product_id":100053901,"comment_content":"访问令牌 acces_token 值     少个字母s,应该是  access_token<br><br>至此，颁发授权码 code 的准备工作就完成了。你要注意哈，我一直强调说这也是准备工作，因为当用户点击授权按钮“approve”后，才会生成授权码 code 值和访问令牌 acces_token 值，“一切才真正开始”。","like_count":0},{"had_liked":false,"id":243050,"user_name":"有翼之暗","can_delete":false,"product_type":"c1","uid":2050110,"ip_address":"","ucode":"70346FB2D737E5","user_header":"","comment_is_top":false,"comment_ctime":1597931829,"is_pvip":false,"replies":[{"id":"89868","content":"访问令牌有有效期","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1598404182,"ip_address":"","comment_id":243050,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1597931829","product_id":100053901,"comment_content":"访问令牌失效是什么意思？,访问令牌不是存储在授权服务器吗，所以访问令牌失效是指在授权服务器删除访问令牌吗？那这样的话，第三方软件拿到的访问令牌不是并未失效吗？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504164,"discussion_content":"访问令牌有有效期","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598404182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1922583,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELVtQAW8IIDLKcn36XM9noEfKuAKpJQrwruJzXeibDfmibIiawicj5vaoflct0LuTAiaKcmCY3gK9MknEw/132","nickname":"远方","note":"","ucode":"0E2FCC59EDCAD4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414011,"discussion_content":"是不是第三方失效时间也早于授权服务的失效时间了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636636491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239923,"user_name":"泽","can_delete":false,"product_type":"c1","uid":1453303,"ip_address":"","ucode":"F6151FA2157E82","user_header":"https://static001.geekbang.org/account/avatar/00/16/2c/f7/e8cac1f4.jpg","comment_is_top":false,"comment_ctime":1596694883,"is_pvip":false,"replies":[{"id":"89095","content":"如果是用微信登录这样的方式，我们讲它背后实际上是走了一次OAuth2.0的流程，第三方软件会拿到一个用户的标识，可以是类似”userid“的东西，这个第三方软件要存下来，用以判断当前的用户。如果是在这种方式下，授权服务就是指的微信内部的一个服务了，这个”userid“生成的粒度就是app粒度的，也就是不同的应用同一个用户会有不同的”userid“","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597194917,"ip_address":"","comment_id":239923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596694883","product_id":100053901,"comment_content":"请问下老师，用户登录第三方软件，用户的userid是存在哪里的，授权服务是如何user id的？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503277,"discussion_content":"如果是用微信登录这样的方式，我们讲它背后实际上是走了一次OAuth2.0的流程，第三方软件会拿到一个用户的标识，可以是类似”userid“的东西，这个第三方软件要存下来，用以判断当前的用户。如果是在这种方式下，授权服务就是指的微信内部的一个服务了，这个”userid“生成的粒度就是app粒度的，也就是不同的应用同一个用户会有不同的”userid“","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597194917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239398,"user_name":"DB聪","can_delete":false,"product_type":"c1","uid":2051350,"ip_address":"","ucode":"F48257394F7054","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4d/16/848d2722.jpg","comment_is_top":false,"comment_ctime":1596523407,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1596523407","product_id":100053901,"comment_content":"关于“授权服务还需要将授权范围跟访问令牌 access_token 做绑定”这一步，我在比对上下文和代码的时候，有个疑惑想请王老师指点下。<br><br>文中的这段代码，绑定了授权码“code”和授权范围“rscope”：<br>Map&lt;String,String[]&gt; codeScopeMap =  new HashMap&lt;String, String[]&gt;();<br>codeScopeMap.put(code,rscope);&#47;&#47;授权范围与授权码做绑定<br><br>随后在“生成访问令牌 access_token 值”一步中，代码如下：<br>String accessToken = generateAccessToken(appId,&quot;USERTEST&quot;);&#47;&#47;生成访问令牌access_token的值<br>tokenScopeMap.put(accessToken,codeScopeMap.get(code));&#47;&#47;授权范围与访问令牌绑定<br><br>疑问：上述注释“授权范围与访问令牌绑定”，为何是codeScopeMap.get(code)，而不是codeScopeMap.get(rscope)呢？我的理解是，codeScopeMap.get(code)指的是“授权码”，codeScopeMap.get(rscope)是“授权范围”。","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375164,"discussion_content":"疑问看的一头雾水，map通过value怎么取数据？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621499635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313108,"discussion_content":"它要绑定 access code 到 访问权限范围，所以从以code 为key 拿到之前存好的scope 这挺对啊。如果你要以rscope 为key , 这个key 哪里来呢？还不是要从code 为key 的map 来吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602944990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051350,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4d/16/848d2722.jpg","nickname":"DB聪","note":"","ucode":"F48257394F7054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301485,"discussion_content":"求解ing...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598536962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236431,"user_name":"稻草人","can_delete":false,"product_type":"c1","uid":1970533,"ip_address":"","ucode":"7E19EE0C125D80","user_header":"https://static001.geekbang.org/account/avatar/00/1e/11/65/a29958da.jpg","comment_is_top":false,"comment_ctime":1595413437,"is_pvip":false,"replies":[{"id":"87513","content":"OAuth 2.0 内部并没有规定我们令牌使用什么样的算法生成，我们可以是一个随机数，只要符合唯一性、不可猜测性就可以。在使用刷新令牌的时候，也是需要应用传递它的app_id和app_sercet的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595566256,"ip_address":"","comment_id":236431,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595413437","product_id":100053901,"comment_content":"老师好，刷新令牌生成新的令牌，这个新生成的令牌有没有特定的规则，或者说算法，还是只是一个随机数，当我调用刷新令牌接口的时候是不是需要做一下权限的验证，不是谁都可以随便调用刷新令牌的接口的吧？ 期待老师回复","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502056,"discussion_content":"OAuth 2.0 内部并没有规定我们令牌使用什么样的算法生成，我们可以是一个随机数，只要符合唯一性、不可猜测性就可以。在使用刷新令牌的时候，也是需要应用传递它的app_id和app_sercet的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595566256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236429,"user_name":"稻草人","can_delete":false,"product_type":"c1","uid":1970533,"ip_address":"","ucode":"7E19EE0C125D80","user_header":"https://static001.geekbang.org/account/avatar/00/1e/11/65/a29958da.jpg","comment_is_top":false,"comment_ctime":1595413078,"is_pvip":false,"replies":[{"id":"87514","content":"需要再次校验的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595566290,"ip_address":"","comment_id":236429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595413078","product_id":100053901,"comment_content":"老师好，refresh_token 令牌 获取新的令牌， 只需要调用刷新令牌接口就可以了么，不需要再次校验appkey和密钥了吗，不是谁都可以调的吧","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502055,"discussion_content":"需要再次校验的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595566290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235708,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595156602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595156602","product_id":100053901,"comment_content":"音频时长20分钟,自己开了1.25倍速,再加上自己的整理笔记,加回答问题加看下方评论,一节课差不多要一个小时左右,再加上后面的温故知新","like_count":0},{"had_liked":false,"id":235707,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595156519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595156519","product_id":100053901,"comment_content":"刷新令牌是有过期时间的,相当于是重新生成访问令牌的备份,过期时间应该一般和访问令牌的过期时间是一致的.相当于刷新令牌给访问令牌续期,那么在什么场景给访问令牌续期呢,比如说访问令牌的有效期为一天,超过一天就需要重新用户登录与授权.如果刷新令牌没有过期时间,感觉只要授权一次,就会一直有效了.那么安全性不是很好.           再想到自己生活中的app,淘宝可能是一个星期一个月,才需要重新输密码登录,银行的app,我退出去一次,就会需要重新登录.,上面两个例子是不是与OAuth没什么关系","like_count":0},{"had_liked":false,"id":234587,"user_name":"Geek_6a58c7","can_delete":false,"product_type":"c1","uid":1815374,"ip_address":"","ucode":"37900229ED9B3C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4ibibOsboHycltqqicSIkm9eibSBu86BRNc0LQnTRTMEPGDvJXYpBicWOW4srMt7c9iaUT7b5mTmicgkjw/132","comment_is_top":false,"comment_ctime":1594727398,"is_pvip":false,"replies":[{"id":"86532","content":"OAuth 2.0 最初的场景就是发生在Web环境下，你可以看咱们的02课程里面，我们有提到。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594732152,"ip_address":"","comment_id":234587,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594727398","product_id":100053901,"comment_content":"老师你好，有一个问题请教一下，授权码最终还是转成access_token并在网络中传输，这样从安全角度来说还是还是不安全的，这和授权服务直接返回access_token区别是什么，用授权码主要是解决什么问题呢？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501432,"discussion_content":"OAuth 2.0 最初的场景就是发生在Web环境下，你可以看咱们的02课程里面，我们有提到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594732152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233269,"user_name":"chuck","can_delete":false,"product_type":"c1","uid":1697205,"ip_address":"","ucode":"175287BB177F5E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mG8pYHVExw91oF4kB43rlWtltZqx3SJPriad1GgJYZgZ3hgrkwEM9sXFVSzVliblmmN4QCxNuo5vicE26YBVBkiaXw/132","comment_is_top":false,"comment_ctime":1594276026,"is_pvip":false,"replies":[{"id":"86084","content":"这个没有要求，看授权服务如何实现自己的系统结构，只要是授权服务一侧的“资产”就可以。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594290563,"ip_address":"","comment_id":233269,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594276026","product_id":100053901,"comment_content":"授权页面是要存储在授权服务的后端？有没有可能存在前端（项目前后端分离的）","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500966,"discussion_content":"这个没有要求，看授权服务如何实现自己的系统结构，只要是授权服务一侧的“资产”就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594290563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233042,"user_name":"Blue","can_delete":false,"product_type":"c1","uid":1348008,"ip_address":"","ucode":"CC58BCC088B9B9","user_header":"https://static001.geekbang.org/account/avatar/00/14/91/a8/6766847a.jpg","comment_is_top":false,"comment_ctime":1594200334,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594200334","product_id":100053901,"comment_content":"老师，github的项目克隆不下来","like_count":0},{"had_liked":false,"id":232731,"user_name":"小瞿同学","can_delete":false,"product_type":"c1","uid":2057925,"ip_address":"","ucode":"DCF29D3FE180F4","user_header":"","comment_is_top":false,"comment_ctime":1594104427,"is_pvip":false,"replies":[{"id":"85930","content":"要看AT和RT的差别，不能从安全的角度，要从功能的角度，没有RT且AT失效的情况下，对用户很不友好，因为RT的时间很短，就需要用户频繁授权。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594134727,"ip_address":"","comment_id":232731,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1594104427","product_id":100053901,"comment_content":"还是没弄懂AT和RT的主要差别 我觉得AT如果因为泄漏导致不安全的话 那RT也有同样的问题啊","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500755,"discussion_content":"要看AT和RT的差别，不能从安全的角度，要从功能的角度，没有RT且AT失效的情况下，对用户很不友好，因为RT的时间很短，就需要用户频繁授权。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594134727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001535,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/3f/1b2042de.jpg","nickname":"Kleven","note":"","ucode":"F33DF81FF5C0C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324007,"discussion_content":"个人理解AT是频繁重复使用的，所以被劫持破解的可能性高一些。而RT只能使用一次，所以安全性更高些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605023523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232676,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1594085913,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1594085913","product_id":100053901,"comment_content":"问题<br>1.为什么不直接用访问令牌当刷新令牌用？<br><br>","like_count":0,"discussions":[{"author":{"id":1178077,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f9/dd/43af3ff6.jpg","nickname":"李承洲","note":"","ucode":"EA474E91E621EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292218,"discussion_content":"我用了一款keycloak的oidc服务。刷新令牌的有效期是访问令牌有效期的四倍。比如有效期是10分钟。刷新令牌有效期就是40分钟。如果客户下线了30分钟。这个时候访问令牌已经效，但刷新令牌还有效。用户再次上线，可以直接用刷新令牌更新新的访问令牌。就可以避免用户再次获取授权码。请问老师这么理解对不对？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595146282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":1178077,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f9/dd/43af3ff6.jpg","nickname":"李承洲","note":"","ucode":"EA474E91E621EC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292496,"discussion_content":"对的，就是不想麻烦用户再次授权一次，如果刷新令牌也过期，就只能让用户再次授权了。如果再次授权的时候，用户在平台上的登录状态还在，显然也就不需要用户登录，可以直接授权。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595244749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292218,"ip_address":""},"score":292496,"extra":""}]}]},{"had_liked":false,"id":232648,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1594079201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594079201","product_id":100053901,"comment_content":"个人想法，因为刷新令牌是和访问令牌一起返回的，并且刷新令牌是在访问令牌失效后重新获取访问令牌用的，所以它的有效期是可以无限长，但是在换取一次访问令牌时会失效！","like_count":0},{"had_liked":false,"id":232575,"user_name":"AgCl","can_delete":false,"product_type":"c1","uid":1408804,"ip_address":"","ucode":"2C7660E3C5565D","user_header":"https://static001.geekbang.org/account/avatar/00/15/7f/24/719ce9d4.jpg","comment_is_top":false,"comment_ctime":1594042071,"is_pvip":false,"replies":[{"id":"85844","content":"scope背后不再有授权了。scope对应的是第三方软件操作的权限范围，比如平台上面提供了查询当前订单的API和查询历史订单的API，如果还小明只为小兔打单软件授权了查询当前订单的API，那么就不能查询历史订单的API。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1594045685,"ip_address":"","comment_id":232575,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594042071","product_id":100053901,"comment_content":"老师，您好，不太理解scope的实现，scope背后还有一套授权的实现了对吗","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500695,"discussion_content":"scope背后不再有授权了。scope对应的是第三方软件操作的权限范围，比如平台上面提供了查询当前订单的API和查询历史订单的API，如果还小明只为小兔打单软件授权了查询当前订单的API，那么就不能查询历史订单的API。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594045685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232242,"user_name":"哈德韦","can_delete":false,"product_type":"c1","uid":1637085,"ip_address":"","ucode":"E7C9B3D087D2D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","comment_is_top":false,"comment_ctime":1593933716,"is_pvip":false,"replies":[{"id":"85737","content":"是的，因为授权码只能使用一次，所以就给正常用户造成了危害。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593960234,"ip_address":"","comment_id":232242,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593933716","product_id":100053901,"comment_content":"确认过授权码 code 值有效以后，应该立刻从存储中删除当前的 code 值，以防止第三方软件恶意使用一个失窃的授权码 code 值来请求授权服务。<br><br>如果失窃的授权码 code，在正常用户请求之前到达了服务器，删掉后岂不是让正常用户无法使用了？<br>","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500580,"discussion_content":"是的，因为授权码只能使用一次，所以就给正常用户造成了危害。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593960234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232174,"user_name":"Ryan Pan","can_delete":false,"product_type":"c1","uid":1964309,"ip_address":"","ucode":"235BA0C2AA03A5","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f9/15/584103d6.jpg","comment_is_top":false,"comment_ctime":1593882390,"is_pvip":false,"replies":[{"id":"85688","content":"官方的App使用Resource owner password这个流程，因为没有“第三方”这个概念，应用、用户都是自家的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593921139,"ip_address":"","comment_id":232174,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1593882390","product_id":100053901,"comment_content":"老师您好，请问一下如果套用OAuth2.0，自家的APP也必须要用授权码许可流程吗?<br>可不可以用Resource owner password这个流程就好呢?<br>微信自家的登入页面好像也是直接在APP中输入用户信息，没有重定向到浏览器","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500543,"discussion_content":"官方的App使用Resource owner password这个流程，因为没有“第三方”这个概念，应用、用户都是自家的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593921139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1964309,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f9/15/584103d6.jpg","nickname":"Ryan Pan","note":"","ucode":"235BA0C2AA03A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289469,"discussion_content":"那请问老师，如果大厂自家的APP用的是Resource owner password flow这个流程，他们的client_secret是存在哪呢? 存在手机端或是浏览器端是否太危险了? 还是说他们有什麽方式躲避到这个风险呢?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594112266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232121,"user_name":"蒙奇D路飞","can_delete":false,"product_type":"c1","uid":1099618,"ip_address":"","ucode":"3A6F82688C2711","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/62/f93c4b0f.jpg","comment_is_top":false,"comment_ctime":1593859995,"is_pvip":false,"replies":[{"id":"85652","content":"授权流程发生在用户登录之后，所以我们重点讲述的是OAuth流程。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593879339,"ip_address":"","comment_id":232121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593859995","product_id":100053901,"comment_content":"为啥流程介绍不带用户输入用户名密码环节呢","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500519,"discussion_content":"授权流程发生在用户登录之后，所以我们重点讲述的是OAuth流程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593879339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232100,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1593854570,"is_pvip":false,"replies":[{"id":"85659","content":"刷新令牌请求在OAuth 2.0 流程里面其实属于一种特殊的许可类型，当授权请求类型参数，grant_type = refresh_token 时，就是相当于生成一次新的access_token，而且之前的access_token作废并删除。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593879836,"ip_address":"","comment_id":232100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593854570","product_id":100053901,"comment_content":"刷新令牌是怎么重新生成新的令牌的，授权服务怎么知道新生成的token是否存储了，此时后台还要再次请求授权服务？但是每次生成的新的令牌时间不一样，授权服务通过判断前缀是否一样？<br>","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500510,"discussion_content":"刷新令牌请求在OAuth 2.0 流程里面其实属于一种特殊的许可类型，当授权请求类型参数，grant_type = refresh_token 时，就是相当于生成一次新的access_token，而且之前的access_token作废并删除。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593879836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232099,"user_name":"Zhou","can_delete":false,"product_type":"c1","uid":2052325,"ip_address":"","ucode":"D3B7057B26E39E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/50/e5/4048aa15.jpg","comment_is_top":false,"comment_ctime":1593854495,"is_pvip":false,"replies":[{"id":"85655","content":"是的","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593879427,"ip_address":"","comment_id":232099,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593854495","product_id":100053901,"comment_content":"第三方软件里，出于安全考虑，Access_token 和refresh_token是不是只能保存在服务端？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500509,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593879427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232033,"user_name":"Geek_22a16e","can_delete":false,"product_type":"c1","uid":1513003,"ip_address":"","ucode":"2F08BDE4F1CE90","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/oy8Z5D2RhBl7GYytZsQR8ALzxL9ANogjjPP6JVnojXGMbaqQJbjF4kRVzJMqIlb9O3KN190SWkRFLaDYGZ9g0Q/132","comment_is_top":false,"comment_ctime":1593838140,"is_pvip":false,"replies":[{"id":"85654","content":"不同的用户的token是不同的。生成token的粒度是用户+应用。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1593879399,"ip_address":"","comment_id":232033,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1593838140","product_id":100053901,"comment_content":"老师您好，有个问题想请教一下。不同的用户使用同样的clientid、clientsecret去授权然后获取token，他们获取到的token是同一个吗 还是重新为他们生成不同的token","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500482,"discussion_content":"不同的用户的token是不同的。生成token的粒度是用户+应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593879399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184280,"avatar":"https://static001.geekbang.org/account/avatar/00/12/12/18/3fd57334.jpg","nickname":"~天了噜~","note":"","ucode":"745847776A9CD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288823,"discussion_content":"是否同一个要看 token生成算法怎么定义的吧，不过一般肯定都不会是一样的,。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593878676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046893,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f9/6d/b623562a.jpg","nickname":"霹雳大仙pp","note":"","ucode":"F654FD9AEC1D56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288745,"discussion_content":"你家和隔壁老王的开门钥匙一样，结果会如何","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593858405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}