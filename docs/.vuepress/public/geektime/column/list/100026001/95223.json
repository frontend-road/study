{"id":95223,"title":"09 | 程序装载：“640K内存”真的不够用么？","content":"<p>计算机这个行业的历史上有过很多成功的预言，最著名的自然是“摩尔定律”。当然免不了的也有很多“失败”的预测，其中一个最著名的就是，比尔·盖茨在上世纪80年代说的“640K ought to be enough for anyone”，也就是“640K内存对哪个人来说都够用了”。</p><p>那个年代，微软开发的还是DOS操作系统，程序员们还在绞尽脑汁，想要用好这极为有限的640K内存。而现在，我手头的开发机已经是16G内存了，上升了一万倍还不止。那比尔·盖茨这句话在当时也是完全的无稽之谈么？有没有哪怕一点点的道理呢？这一讲里，我就和你一起来看一看。</p><h2>程序装载面临的挑战</h2><p>上一讲，我们看到了如何通过链接器，把多个文件合并成一个最终可执行文件。在运行这些可执行文件的时候，我们其实是通过一个装载器，解析ELF或者PE格式的可执行文件。装载器会把对应的指令和数据加载到内存里面来，让CPU去执行。</p><p>说起来只是装载到内存里面这一句话的事儿，实际上装载器需要满足两个要求。</p><p><strong>第一，可执行程序加载后占用的内存空间应该是连续的</strong>。我们在<a href=\"https://time.geekbang.org/column/article/94075\">第6讲</a>讲过，执行指令的时候，程序计数器是顺序地一条一条指令执行下去。这也就意味着，这一条条指令需要连续地存储在一起。</p><!-- [[[read_end]]] --><p><strong>第二，我们需要同时加载很多个程序，并且不能让程序自己规定在内存中加载的位置。</strong>虽然编译出来的指令里已经有了对应的各种各样的内存地址，但是实际加载的时候，我们其实没有办法确保，这个程序一定加载在哪一段内存地址上。因为我们现在的计算机通常会同时运行很多个程序，可能你想要的内存地址已经被其他加载了的程序占用了。</p><p>要满足这两个基本的要求，我们很容易想到一个办法。那就是我们可以在内存里面，找到一段连续的内存空间，然后分配给装载的程序，然后把这段连续的内存空间地址，和整个程序指令里指定的内存地址做一个映射。</p><p>我们把指令里用到的内存地址叫作<strong>虚拟内存地址</strong>（Virtual Memory Address），实际在内存硬件里面的空间地址，我们叫<strong>物理内存地址</strong>（Physical Memory Address）<strong>。</strong></p><p>程序里有指令和各种内存地址，我们只需要关心虚拟内存地址就行了。对于任何一个程序来说，它看到的都是同样的内存地址。我们维护一个虚拟内存到物理内存的映射表，这样实际程序指令执行的时候，会通过虚拟内存地址，找到对应的物理内存地址，然后执行。因为是连续的内存地址空间，所以我们只需要维护映射关系的起始地址和对应的空间大小就可以了。</p><h2>内存分段</h2><p>这种找出一段连续的物理内存和虚拟内存地址进行映射的方法，我们叫<strong>分段</strong>（Segmentation）<strong>。</strong>这里的段，就是指系统分配出来的那个连续的内存空间。</p><p><img src=\"https://static001.geekbang.org/resource/image/24/18/24596e1e66d88c5d077b4c957d0d7f18.png?wh=1142*736\" alt=\"\"></p><p>分段的办法很好，解决了程序本身不需要关心具体的物理内存地址的问题，但它也有一些不足之处，第一个就是<strong>内存碎片</strong>（Memory Fragmentation）的问题。</p><p>我们来看这样一个例子。我现在手头的这台电脑，有1GB的内存。我们先启动一个图形渲染程序，占用了512MB的内存，接着启动一个Chrome浏览器，占用了128MB内存，再启动一个Python程序，占用了256MB内存。这个时候，我们关掉Chrome，于是空闲内存还有1024 - 512 - 256 = 256MB。按理来说，我们有足够的空间再去装载一个200MB的程序。但是，这256MB的内存空间不是连续的，而是被分成了两段128MB的内存。因此，实际情况是，我们的程序没办法加载进来。</p><p><img src=\"https://static001.geekbang.org/resource/image/57/d1/57211af3053ed621aeb903433c6c10d1.png?wh=1142*611\" alt=\"\"></p><p>当然，这个我们也有办法解决。解决的办法叫<strong>内存交换</strong>（Memory Swapping）。</p><p>我们可以把Python程序占用的那256MB内存写到硬盘上，然后再从硬盘上读回来到内存里面。不过读回来的时候，我们不再把它加载到原来的位置，而是紧紧跟在那已经被占用了的512MB内存后面。这样，我们就有了连续的256MB内存空间，就可以去加载一个新的200MB的程序。如果你自己安装过Linux操作系统，你应该遇到过分配一个swap硬盘分区的问题。这块分出来的磁盘空间，其实就是专门给Linux操作系统进行内存交换用的。</p><p>虚拟内存、分段，再加上内存交换，看起来似乎已经解决了计算机同时装载运行很多个程序的问题。不过，你千万不要大意，这三者的组合仍然会遇到一个性能瓶颈。硬盘的访问速度要比内存慢很多，而每一次内存交换，我们都需要把一大段连续的内存数据写到硬盘上。所以，如果内存交换的时候，交换的是一个很占内存空间的程序，这样整个机器都会显得卡顿。</p><h2>内存分页</h2><p>既然问题出在内存碎片和内存交换的空间太大上，那么解决问题的办法就是，少出现一些内存碎片。另外，当需要进行内存交换的时候，让需要交换写入或者从磁盘装载的数据更少一点，这样就可以解决这个问题。这个办法，在现在计算机的内存管理里面，就叫作<strong>内存分页</strong>（Paging）。</p><p><strong>和分段这样分配一整段连续的空间给到程序相比，分页是把整个物理内存空间切成一段段固定尺寸的大小</strong>。而对应的程序所需要占用的虚拟内存空间，也会同样切成一段段固定尺寸的大小。这样一个连续并且尺寸固定的内存空间，我们叫<strong>页</strong>（Page）。从虚拟内存到物理内存的映射，不再是拿整段连续的内存的物理地址，而是按照一个一个页来的。页的尺寸一般远远小于整个程序的大小。在Linux下，我们通常只设置成4KB。你可以通过命令看看你手头的Linux系统设置的页的大小。</p><pre><code>$ getconf PAGE_SIZE\n</code></pre><p>由于内存空间都是预先划分好的，也就没有了不能使用的碎片，而只有被释放出来的很多4KB的页。即使内存空间不够，需要让现有的、正在运行的其他程序，通过内存交换释放出一些内存的页出来，一次性写入磁盘的也只有少数的一个页或者几个页，不会花太多时间，让整个机器被内存交换的过程给卡住。</p><p><img src=\"https://static001.geekbang.org/resource/image/0c/f0/0cf2f08e1ceda473df71189334857cf0.png?wh=1142*832\" alt=\"\"></p><p>更进一步地，分页的方式使得我们在加载程序的时候，不再需要一次性都把程序加载到物理内存中。我们完全可以在进行虚拟内存和物理内存的页之间的映射之后，并不真的把页加载到物理内存里，而是只在程序运行中，需要用到对应虚拟内存页里面的指令和数据时，再加载到物理内存里面去。</p><p>实际上，我们的操作系统，的确是这么做的。当要读取特定的页，却发现数据并没有加载到物理内存里的时候，就会触发一个来自于CPU的<strong>缺页错误</strong>（Page Fault）。我们的操作系统会捕捉到这个错误，然后将对应的页，从存放在硬盘上的虚拟内存里读取出来，加载到物理内存里。这种方式，使得我们可以运行那些远大于我们实际物理内存的程序。同时，这样一来，任何程序都不需要一次性加载完所有指令和数据，只需要加载当前需要用到就行了。</p><p>通过虚拟内存、内存交换和内存分页这三个技术的组合，我们最终得到了一个让程序不需要考虑实际的物理内存地址、大小和当前分配空间的解决方案。这些技术和方法，对于我们程序的编写、编译和链接过程都是透明的。这也是我们在计算机的软硬件开发中常用的一种方法，就是<strong>加入一个间接层</strong>。</p><p>通过引入虚拟内存、页映射和内存交换，我们的程序本身，就不再需要考虑对应的真实的内存地址、程序加载、内存管理等问题了。任何一个程序，都只需要把内存当成是一块完整而连续的空间来直接使用。</p><h2>总结延伸</h2><p>现在回到开头我问你的问题，我们的电脑只要640K内存就够了吗？很显然，现在来看，比尔·盖茨的这个判断是不合理的，那为什么他会这么认为呢？因为他也是一个很优秀的程序员啊！</p><p>在虚拟内存、内存交换和内存分页这三者结合之下，你会发现，其实要运行一个程序，“必需”的内存是很少的。CPU只需要执行当前的指令，极限情况下，内存也只需要加载一页就好了。再大的程序，也可以分成一页。每次，只在需要用到对应的数据和指令的时候，从硬盘上交换到内存里面来就好了。以我们现在4K内存一页的大小，640K内存也能放下足足160页呢，也无怪乎在比尔·盖茨会说出“640K ought to be enough for anyone”这样的话。</p><p>不过呢，硬盘的访问速度比内存慢很多，所以我们现在的计算机，没有个几G的内存都不好意思和人打招呼。</p><p>那么，除了程序分页装载这种方式之外，我们还有其他优化内存使用的方式么？下一讲，我们就一起来看看“动态装载”，学习一下让两个不同的应用程序，共用一个共享程序库的办法。</p><h2>推荐阅读</h2><p>想要更深入地了解代码装载的详细过程，推荐你阅读《程序员的自我修养——链接、装载和库》的第1章和第6章。</p><h2>课后思考</h2><p>请你想一想，在Java这样使用虚拟机的编程语言里面，我们写的程序是怎么装载到内存里面来的呢？它也和我们讲的一样，是通过内存分页和内存交换的方式加载到内存里面来的么？</p><p>欢迎你在留言区写下你的思考和疑问，和大家一起探讨。你也可以把今天的文章分享给你朋友，和他一起学习和进步。</p><p></p>","comments":[{"had_liked":false,"id":94685,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1557882183,"is_pvip":false,"replies":[{"id":"34177","content":"👍完全正确","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558096361,"ip_address":"","comment_id":94685,"utype":1}],"discussion_count":2,"race_medal":0,"score":"589968401735","product_id":100026001,"comment_content":"jvm已经是上层应用，无需考虑物理分页，一般更直接是考虑对象本身的空间大小，物理硬件管理统一由承载jvm的操纵系统去解决吧","like_count":138,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450170,"discussion_content":"👍完全正确","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1558096361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2749777,"avatar":"https://static001.geekbang.org/account/avatar/00/29/f5/51/a7406456.jpg","nickname":"多多人","note":"","ucode":"32DE9F65DADE23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391455,"discussion_content":"如果是32位系统，它看到的最大内存为4G，那万一jvm加载的程序超过4g空间，它是否需要考虑像操作系统一样的内存置换？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630472112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122679,"user_name":"DreamItPossible","can_delete":false,"product_type":"c1","uid":1254103,"ip_address":"","ucode":"232FCE2BB22012","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/d7/fed46140.jpg","comment_is_top":false,"comment_ctime":1565486856,"is_pvip":false,"replies":[{"id":"52688","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569663467,"ip_address":"","comment_id":122679,"utype":1}],"discussion_count":3,"race_medal":0,"score":"396702478088","product_id":100026001,"comment_content":"思考题<br>1. 在 Java 这样使用虚拟机的编程语言里面，我们写的程序是怎么装载到内存里面来的呢？<br>答：首先，我们编写的Java程序，即源代码`.java`文件经过编译生成字节码文件`.class`；<br>然后，创建JVM环境，即查找和装载`libjvm.so`文件；<br>最后，通过创建JVM实例，加载主类的字节码文件到系统给该JVM实例分配的内存中；<br>2. 它也和我们讲的一样，是通过内存分页和内存交换的方式加载到内存里面来的么？<br>答：Java代码的执行需要JVM环境，JVM环境的创建就是查找和装载`libjvm.so`文件：装载`libjvm.so`是通过内存分页和内存交换的方式加载到内存的。<br>字节码文件是通过类加载器加载到主类文件对应的JVM实例的内存空间中的，这一部分不是使用内存分页和内存交换的方式来管理的，使用的是JVM的内存分配策略来管理的；","like_count":93,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462356,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569663467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103063,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d4/d7/2b447b73.jpg","nickname":"王磊","note":"","ucode":"3F53F3C465A761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294369,"discussion_content":"想知道libjvm.so这个文件你是在哪里看到，并知道这个文件的作用的\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1595861323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1149084,"avatar":"https://static001.geekbang.org/account/avatar/00/11/88/9c/cbc463e6.jpg","nickname":"仰望星空","note":"","ucode":"A9E46C9FDB3275","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579575,"discussion_content":"说的很清晰，一目了然","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657533157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95431,"user_name":"暴风雪","can_delete":false,"product_type":"c1","uid":1283139,"ip_address":"","ucode":"BF1523D69866FF","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/43/46a7d0a8.jpg","comment_is_top":false,"comment_ctime":1558055962,"is_pvip":false,"replies":[{"id":"34147","content":"暴风雪同学你好，映射不是一个byte一个byte来映射，而是映射一头一位的地址，不然映射表就太大了。映射到一头一尾中间的整段物理内存需要是连续的","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558090242,"ip_address":"","comment_id":95431,"utype":1}],"discussion_count":4,"race_medal":0,"score":"207716486170","product_id":100026001,"comment_content":"老师，您好！通读全文，我有两个疑问想请假下您。<br>1.既然有了虚拟内存和物理内存作映射，为什么还要要求物理内存是连续的？如果不需要连续的物理内存，那么内存碎片的问题就不存在了。<br>2.","like_count":49,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450455,"discussion_content":"暴风雪同学你好，映射不是一个byte一个byte来映射，而是映射一头一位的地址，不然映射表就太大了。映射到一头一尾中间的整段物理内存需要是连续的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1558090242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1149084,"avatar":"https://static001.geekbang.org/account/avatar/00/11/88/9c/cbc463e6.jpg","nickname":"仰望星空","note":"","ucode":"A9E46C9FDB3275","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565303,"discussion_content":"原来是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650435422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2440338,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","nickname":"张Dave","note":"","ucode":"0E8B6FDEB7505B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562656,"discussion_content":"按文章来说，分页技术，也就是连续内存最小4KB就可以了吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649859774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2442000,"avatar":"https://static001.geekbang.org/account/avatar/00/25/43/10/402beda9.jpg","nickname":"吾","note":"","ucode":"518DCF772B93AC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2440338,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","nickname":"张Dave","note":"","ucode":"0E8B6FDEB7505B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":563483,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650006028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":562656,"ip_address":""},"score":563483,"extra":""}]}]},{"had_liked":false,"id":95205,"user_name":"徐","can_delete":false,"product_type":"c1","uid":1502878,"ip_address":"","ucode":"6BE46455FDD491","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/9e/204ce89c.jpg","comment_is_top":false,"comment_ctime":1557985850,"is_pvip":false,"replies":[{"id":"34155","content":"一页之内要连续,不同的页之间不需要。随便放内存里也放不下啊","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558092497,"ip_address":"","comment_id":95205,"utype":1}],"discussion_count":9,"race_medal":0,"score":"186241579578","product_id":100026001,"comment_content":"请教一下，按页分配就不需要连续内存空间了吗？进而，既然不需要连续，为什么还要再交换，不是随便放就好了吗？","like_count":44,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450370,"discussion_content":"一页之内要连续,不同的页之间不需要。随便放内存里也放不下啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558092497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1214582,"avatar":"https://static001.geekbang.org/account/avatar/00/12/88/76/c69b7fe5.jpg","nickname":"youngitachi","note":"","ucode":"88717CA8B8ED64","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":531382,"discussion_content":"老师，我也有这个疑惑，我继续追问下：\nswap分区如果是为了解决内存碎片的问题，那么我理解使用按页分配的时候由于不需要连续内存空间应该就不需要解决内存碎片的问题了，所以采用按页分配的时候，swap分区的作用是什么呢？\n读者胡红伟的解释是在内存不足时用来交换不活跃的数据，但是我理解对于这样的不活跃数据，\n1. 如果是没有更新过的数据，可以直接丢弃吧\n2.如果是更新过的数据，应该是需要刷磁盘的，但是也没必要专门写到swap里面去吧？\n所以对使用了按页分配后，swap的作用还不是很清楚，请老师解惑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637299364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":450370,"ip_address":""},"score":531382,"extra":"{\"user_type\":1}"}]},{"author":{"id":1148537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/79/28fcafa6.jpg","nickname":"胡红伟","note":"","ucode":"33F12A97311F63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298,"discussion_content":"我想的话分页存在之后，内存交换只是为了把不活跃的内存占用交换到磁盘，来释放内存，以有效的利用内存。分页存在之前，内存交换是为了去掉内存碎片。","likes_number":39,"is_delete":false,"is_hidden":false,"ctime":1561435088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1257422,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ce/c72d4c67.jpg","nickname":"movesan","note":"","ucode":"29CDF0F2B604C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/79/28fcafa6.jpg","nickname":"胡红伟","note":"","ucode":"33F12A97311F63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94665,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576978719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298,"ip_address":""},"score":94665,"extra":""},{"author":{"id":1236573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","nickname":"Kim","note":"","ucode":"39CC8E1E8EFB8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/79/28fcafa6.jpg","nickname":"胡红伟","note":"","ucode":"33F12A97311F63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349615,"discussion_content":"感觉是这个意思强 厉害 赞 真棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613392357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298,"ip_address":""},"score":349615,"extra":""},{"author":{"id":2354332,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/9c/b4acd768.jpg","nickname":"Sarah","note":"","ucode":"FDC8A0D30EAE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/79/28fcafa6.jpg","nickname":"胡红伟","note":"","ucode":"33F12A97311F63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378613,"discussion_content":"同意 赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623305005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298,"ip_address":""},"score":378613,"extra":""}]},{"author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":124803,"discussion_content":"按页分配确实不需要连续内存空间，但是也是需要和硬盘交换的，因为内存空间毕竟是有大小的，有限的空间运行更多活跃的程序，提高了内存效率","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1578451335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1992059,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/65/7b/058d17f3.jpg","nickname":"耶low","note":"","ucode":"4CCEB741583544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348934,"discussion_content":"页并不是最小的单位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612783628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257422,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ce/c72d4c67.jpg","nickname":"movesan","note":"","ucode":"29CDF0F2B604C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94664,"discussion_content":"分页存在前内存交互最终结果是移动程序所占的内存空间，而分页存在之后内存交互的结果是移出程序所占的内存空间，也就是释放内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576978712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94745,"user_name":"humor","can_delete":false,"product_type":"c1","uid":1181867,"ip_address":"","ucode":"9B48C4C7BEC92C","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/ab/caec7bca.jpg","comment_is_top":false,"comment_ctime":1557888471,"is_pvip":false,"replies":[{"id":"34184","content":"JVM并不是一个系统级的程序啊，其实只是一个操作系统之上的应用程序，申请的这些heap size是确保自己只使用特定规模的资源啊","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558098355,"ip_address":"","comment_id":94745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"164766645719","product_id":100026001,"comment_content":"既然操作系统本身有虚拟内存、内存交换和内存分页的能力，JVM为什么还要自己配置Heap等的大小呢？如果内存使用大于JVM配置的值，还会报OOM，反正有swap空间，让操作系统自己去做内存交换不就可以了吗？","like_count":39,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450192,"discussion_content":"JVM并不是一个系统级的程序啊，其实只是一个操作系统之上的应用程序，申请的这些heap size是确保自己只使用特定规模的资源啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558098355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94686,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1557882251,"is_pvip":false,"replies":[{"id":"34183","content":"其实分段之后换页合并，又何尝不是一种特殊情况下的垃圾回收呢","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558098267,"ip_address":"","comment_id":94686,"utype":1}],"discussion_count":2,"race_medal":0,"score":"134701868427","product_id":100026001,"comment_content":"但是jvm中其实也会出现内存碎片的问题，所以也出现了各种各样的gc收集器","like_count":31,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450171,"discussion_content":"其实分段之后换页合并，又何尝不是一种特殊情况下的垃圾回收呢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1558098267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1180978,"avatar":"https://static001.geekbang.org/account/avatar/00/12/05/32/7440d47d.jpg","nickname":"王位庆","note":"","ucode":"D480AEA92894FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":580499,"discussion_content":"感觉G1垃圾回收器和分页有点像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658218505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":450171,"ip_address":""},"score":580499,"extra":""}]}]},{"had_liked":false,"id":96384,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1558407110,"is_pvip":false,"replies":[{"id":"35540","content":"虚拟内存是指一段地址，但是没有加载到物理内存里的时候其实就是放在硬盘上。<br><br>你可以认为就是放在swap分区里面的，实际上是swap分区是一个历史遗留名词，现在“swap”的其实都是page了，当然也可以创建单独的.swp这样的文件。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559132663,"ip_address":"","comment_id":96384,"utype":1}],"discussion_count":5,"race_medal":0,"score":"91752720326","product_id":100026001,"comment_content":"「我们的操作系统会捕捉到这个错误，然后将对应的页，从存放在硬盘上的虚拟内存里读取出来，加载到物理内存中」<br>这段话不太理解，虚拟内存不是指的程序中的内存地址吗？难道是实际存放在硬盘上的一段空间？那这和 Swap 分区有何关系吗？","like_count":21,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450857,"discussion_content":"虚拟内存是指一段地址，但是没有加载到物理内存里的时候其实就是放在硬盘上。\n\n你可以认为就是放在swap分区里面的，实际上是swap分区是一个历史遗留名词，现在“swap”的其实都是page了，当然也可以创建单独的.swp这样的文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559132663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253128,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/08/14642f9e.jpg","nickname":"相望于江湖","note":"","ucode":"9CCB6F89F92C89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37258,"discussion_content":"你的程序的数据分布在不同的页中(连续)，大部分页存在外存(swap)，装载器根据需求将其中外存中某些页装进物理内存(内存中的页)。当内存中某些页需要依赖另一个页的数据时，就会产生一个缺页中断，将需要的页从外存换入到内存","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1571562389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031045,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bb/85/191eea69.jpg","nickname":"搬铁少年ai","note":"","ucode":"01D4A830A088D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389152,"discussion_content":"虚拟内存是vma，它相当于程序和内核签的一个合同，记录的是内核许诺给你的内存和地址。但是内核是懒惰且卑鄙的，直到你真正访问这块内存的时候，内核才会履行合同，如果你不访问，内核并不真正为你分配或者换页到内存中。这段虚拟内存代表的物理内存可能在内存里，也可能不在内存里（被换页到硬盘去了），当你访问它的时候，如果在内存则直接访问，否则出发page fault，此时内核才会从硬盘把它读到内存里。如果你永远不访问，内核就当你没提过这件事。因为内核也知道，“改天一起吃饭啊”，并不一定真的会发生","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1629162130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2905523,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDqHQQByGiaXcAk94MdDn3ftupZLXyR6bAKibxOzMxy5h3uBwZ7QiaCiaIfbCMK0cIQfGNax8iawoiaQAg/132","nickname":"nuan","note":"","ucode":"55FF98EB85404D","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559390,"discussion_content":"如果操作系统没有swap分区呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648734188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1197626,"avatar":"https://static001.geekbang.org/account/avatar/00/12/46/3a/20f80540.jpg","nickname":"Mr.增锋","note":"","ucode":"1D720DB133CA74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2905523,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDqHQQByGiaXcAk94MdDn3ftupZLXyR6bAKibxOzMxy5h3uBwZ7QiaCiaIfbCMK0cIQfGNax8iawoiaQAg/132","nickname":"nuan","note":"","ucode":"55FF98EB85404D","race_medal":5,"user_type":1,"is_pvip":true},"discussion":{"id":574811,"discussion_content":"超过限制就报错了，类比1G内存安装es时，提示内存不足，设置swap解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654357453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":559390,"ip_address":""},"score":574811,"extra":""}]}]},{"had_liked":false,"id":94659,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1557879843,"is_pvip":false,"replies":[{"id":"34180","content":"是的，没错","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558098113,"ip_address":"","comment_id":94659,"utype":1}],"discussion_count":1,"race_medal":0,"score":"87457225763","product_id":100026001,"comment_content":"我想jvm也是一个可执行程序，应该同其他程序一样依赖于操作系统的内存管理和装载程序就可以了，它可以按自己的方式去规划它自身的内存空间给就java程序使用而无需考虑怎么映射到物理内存这些","like_count":20,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450158,"discussion_content":"是的，没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558098113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136065,"user_name":"Sherry","can_delete":false,"product_type":"c1","uid":1263777,"ip_address":"","ucode":"64EC809EF93BC9","user_header":"https://static001.geekbang.org/account/avatar/00/13/48/a1/5c57b262.jpg","comment_is_top":false,"comment_ctime":1569338424,"is_pvip":false,"replies":[{"id":"52600","content":"Sherry同学，<br><br>你好，当然可以不连续。页的交换是为了解决内存空间地址的管理问题啊。各个程序互相之间不能协调内存分配，所以要交给系统来分配。但是程序执行又需要知道内存地址，所以有了虚拟地址和物理地址的差别。同时内存空间可能不足以同时装载所有的程序，所以也需要页交换啊，把当前要运行的部分的数据加载到内存里面来。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569651335,"ip_address":"","comment_id":136065,"utype":1}],"discussion_count":5,"race_medal":0,"score":"74583782456","product_id":100026001,"comment_content":"老师，请问，一个程序是可以被打碎、装载到，n个不连续的页，去执行吗？<br><br>看到您回复别的同学说，一页之内内存空间要连续，不同页之间不需要。无论一页还是一段，都属于一块事先划定好的区域，内存一定连续。<br>但是一个程序假如使用了3个页，这3个页之间，地址也可以不连续吗？<br>如果是这样，页的交换又是用来解决什么问题的呢？","like_count":18,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468439,"discussion_content":"Sherry同学，\n\n你好，当然可以不连续。页的交换是为了解决内存空间地址的管理问题啊。各个程序互相之间不能协调内存分配，所以要交给系统来分配。但是程序执行又需要知道内存地址，所以有了虚拟地址和物理地址的差别。同时内存空间可能不足以同时装载所有的程序，所以也需要页交换啊，把当前要运行的部分的数据加载到内存里面来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569651335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","nickname":"Kim","note":"","ucode":"39CC8E1E8EFB8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201256,"discussion_content":"@Sherry 和你是同样的疑问，还是有点懵......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583767666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","nickname":"Kim","note":"","ucode":"39CC8E1E8EFB8A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253489,"discussion_content":"虚拟内存远大于物理内存，比如64位系统虚拟内存可以到256T。程序运行中物理内存是不可见的，他只负责使用虚拟内存，如果使用的内存大于真实的物理内存，就会把真实物理内存中长时间不使用的页换到硬盘，程序使用这一段空出来的内存。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1588238355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":201256,"ip_address":""},"score":253489,"extra":""},{"author":{"id":1138671,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5f/ef/dd9a0ae1.jpg","nickname":"hello","note":"","ucode":"A6688C4D539EF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329744,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606452862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253489,"ip_address":""},"score":329744,"extra":""},{"author":{"id":1236573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","nickname":"Kim","note":"","ucode":"39CC8E1E8EFB8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349618,"discussion_content":"谢谢，明白了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613393844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253489,"ip_address":""},"score":349618,"extra":""}]}]},{"had_liked":false,"id":115499,"user_name":"前端西瓜哥","can_delete":false,"product_type":"c1","uid":1248576,"ip_address":"","ucode":"150130C34CD1C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/40/f70e5653.jpg","comment_is_top":false,"comment_ctime":1563606570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"65988116010","product_id":100026001,"comment_content":"Mysql 的 B+树 实现，也考虑了页的问题呢，就是尽量将多个结点的数据保存在一起，让数据达到大概为1个页的大小（小于或等于）。这样每次就能从硬盘中读取尽可能接近一个页的数据到内存中，来减少 IO 操作。","like_count":16},{"had_liked":false,"id":95045,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1557964015,"is_pvip":false,"replies":[{"id":"34156","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558092755,"ip_address":"","comment_id":95045,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53097571567","product_id":100026001,"comment_content":"内存分页使得映射的基本单元从段变成了规范的，容易处理的页","like_count":13,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450310,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558092755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103263,"user_name":"剑衣清风","can_delete":false,"product_type":"c1","uid":1009527,"ip_address":"","ucode":"470CD81F6612F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/77/c1310aad.jpg","comment_is_top":false,"comment_ctime":1560406280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31625177352","product_id":100026001,"comment_content":"觉得这章可以结合同是极客时间的 Linux性能优化实战 中的 15 | 基础篇：Linux内存是怎么工作的？ 一起看","like_count":7},{"had_liked":false,"id":99324,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1559193252,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"31623964324","product_id":100026001,"comment_content":"分页是不连续的，那一个程序的多个页是怎么串联起来的？程序怎么做到顺序执行的？","like_count":7,"discussions":[{"author":{"id":1248326,"avatar":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","nickname":"多选参数","note":"","ucode":"B2294D80AB075F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9661,"discussion_content":"在虚拟内存中是连续的，在物理内存中是分页的，虚拟和物理通过页表机制实现转换。","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1568201490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3003067,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/d2/bb/8f647aef.jpg","nickname":"程杰","note":"","ucode":"6580E4B8091E76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573489,"discussion_content":"页表里面连续的就行了 只不过 通过映射到不连续的物理内存页罢了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653464935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2449748,"avatar":"https://static001.geekbang.org/account/avatar/00/25/61/54/5bf767e7.jpg","nickname":"没有心的人","note":"","ucode":"F27D5894087B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395308,"discussion_content":"应该是映射表维护了一个连续地址，对应到内存不连续的内存页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632280395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1995082,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI0eGJygV4lh6PJuotKrz1jsZcOdNiaHnUC3y5A2O3yudUQLkzOE8758icDoXlvgpytQ50ibSIc9nJmg/132","nickname":"余巍","note":"","ucode":"B0819C42A82371","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319501,"discussion_content":"其实分页你可以理解也是连续的，内存单元的单位是1字节，分页默认是4KB，分页也有序号的，这样看来是不是连续的了，只不过是单位不同罢了。并且PT页表是一个映射，页表项到真实地址是有换算的，逻辑上是连续的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604040371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1659275,"avatar":"https://static001.geekbang.org/account/avatar/00/19/51/8b/e3b827b7.jpg","nickname":"羿达","note":"","ucode":"48559E9D480C34","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238557,"discussion_content":"MMU","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587223331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1248326,"avatar":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","nickname":"多选参数","note":"","ucode":"B2294D80AB075F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9659,"discussion_content":"在虚拟内存中时实际存储的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568201425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94708,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1557884221,"is_pvip":false,"replies":[{"id":"34163","content":"分页的大小是可以在操作系统层面设置的，4k你可以认为是一般情况下的最佳实践，如果你的使用场景比较特殊，是可以设置成其他值的","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558093598,"ip_address":"","comment_id":94708,"utype":1}],"discussion_count":3,"race_medal":0,"score":"31622655293","product_id":100026001,"comment_content":"为什么分页的默认大小是4KB，而不是2KB或者8KB？这里面应该是有某种理由的吧？","like_count":7,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450178,"discussion_content":"分页的大小是可以在操作系统层面设置的，4k你可以认为是一般情况下的最佳实践，如果你的使用场景比较特殊，是可以设置成其他值的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558093598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140276,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/34/0508d9e4.jpg","nickname":"u","note":"","ucode":"88FA7BA089807C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334892,"discussion_content":"如果设置成2KB，你又会问为什么不设置成4KB或者8KB，那么它总该有个大小吧！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608019620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1034001,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c7/11/89ba9915.jpg","nickname":"永远的草莓地","note":"","ucode":"D4BD8DD42350CC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203367,"discussion_content":"或者跟磁盘扇区或者文件系统的block大小保持一致？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584025050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96139,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1558341845,"is_pvip":false,"replies":[{"id":"35521","content":"👍加油","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559130233,"ip_address":"","comment_id":96139,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18738211029","product_id":100026001,"comment_content":"从第1遍听到语言，到现在的笔记花了不少3个小时的时间，但是收获确实很多<br>刚完成笔记：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;10894963.html<br>","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450733,"discussion_content":"👍加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559130233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1631948,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epHSfL8MzZJkDnJJvgPpXTbIkthGkU4CKvZIQscn52NQkex2bDnYbgHAda6picENk7EvyhjAuXzFTg/132","nickname":"Geek_d3431c","note":"","ucode":"67A820B0BE8EF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335702,"discussion_content":"👍👍👍 感谢分享。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608278186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001340,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/7c/0e4f3577.jpg","nickname":"Liufeng","note":"","ucode":"82AC14ED340E2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289987,"discussion_content":"这样直接搬运不好吧, 也没有注明真实的出处.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594292811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263773,"user_name":"润曦","can_delete":false,"product_type":"c1","uid":1260277,"ip_address":"","ucode":"21D36F7DEEB43D","user_header":"https://static001.geekbang.org/account/avatar/00/13/3a/f5/1fa34f88.jpg","comment_is_top":false,"comment_ctime":1606265662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14491167550","product_id":100026001,"comment_content":"内存交换只是为了把不活跃的内存占用交换到磁盘，来释放内存，以有效的利用内存。分页存在之前，内存交换是为了去掉内存碎片","like_count":4},{"had_liked":false,"id":179065,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1581906366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14466808254","product_id":100026001,"comment_content":"Java虚拟机也管理内存，但是这是在操作系统之上的，Java虚拟机和操作系统分页系统的关注点不同在于，Java虚拟机关注哪些对象可以释放，以及选择合适的释放时机，避免释放内存的时候消耗太多CPU资源。操作系统更关注物理内存的使用，释放内存是程序的事情。Java虚拟机看重CPU和内存两者的综合性能，操作系统还要考虑硬盘。两者的单位也不同，Java虚拟机管理内存的单位是对象，而操作系统使用的单位是页。两者的相似之处是都要考虑CPU资源，都要最大程度的减少碎片，都要最大限度地减少内存的拷贝。","like_count":3},{"had_liked":false,"id":178770,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1581820927,"is_pvip":false,"replies":[{"id":"69404","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581837497,"ip_address":"","comment_id":178770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14466722815","product_id":100026001,"comment_content":"看了评论，表明本节的第一遍学习，只是让我初步的了解而已，没到掌握的层次。是要多读几遍","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483958,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581837497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177721,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1581480674,"is_pvip":false,"replies":[{"id":"69411","content":"程序水果宝同学，<br><br>你好<br>1. CPU不知道，CPU只是不停地根据PC寄存器不断往下执行程序。这个可以看一下后面的17讲开始的CPU部分<br>2. 整个计算机加电启动的过程，其实是我们的主板上的BIOS会从一个硬盘的固定位置开始加载引导程序开始的。<br><br>具体可以去读一读这篇文章 https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;43802526","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581838376,"ip_address":"","comment_id":177721,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14466382562","product_id":100026001,"comment_content":"最近学计算机组成原理的原理的时候遇到了一些问题，老师说“在运行这些可执行文件的时候，我们其实是通过一个装载器，解析 ELF 或者 PE 格式的可执行文件。装载器会把对应的指令和数据加载到内存里面来，让 CPU 去执行”。<br>问题一：CPU怎么知道内存有需要执行的指令，操作系统是在加载程序到内存中时通过信号来通知CPU的吗？<br>问题二：CPU如何知道需要执行的指令在内存中的地址的，或者说操作系统如何将内存的地址放到CPU的PC寄存器的？","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483517,"discussion_content":"程序水果宝同学，\n\n你好\n1. CPU不知道，CPU只是不停地根据PC寄存器不断往下执行程序。这个可以看一下后面的17讲开始的CPU部分\n2. 整个计算机加电启动的过程，其实是我们的主板上的BIOS会从一个硬盘的固定位置开始加载引导程序开始的。\n\n具体可以去读一读这篇文章 https://zhuanlan.zhihu.com/p/43802526","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581838376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94788,"user_name":"sdjdd","can_delete":false,"product_type":"c1","uid":1211987,"ip_address":"","ucode":"512F2338DFF793","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/53/c29c2fc9.jpg","comment_is_top":false,"comment_ctime":1557898039,"is_pvip":false,"replies":[{"id":"34159","content":"jvm并不会把字节码翻译成C++代码，而是机器码，C++也是编译成机器码来执行","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558093242,"ip_address":"","comment_id":94788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442799927","product_id":100026001,"comment_content":"不是很懂为什么 JVM 要把字节码翻译成 C++ 代码","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450206,"discussion_content":"jvm并不会把字节码翻译成C++代码，而是机器码，C++也是编译成机器码来执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558093242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94647,"user_name":"zcode","can_delete":false,"product_type":"c1","uid":1073912,"ip_address":"","ucode":"9511AEABC4DF06","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/f8/99accf69.jpg","comment_is_top":false,"comment_ctime":1557878555,"is_pvip":false,"replies":[{"id":"34165","content":"会受影响啊，如果你用过比较老版本的windows，我们可以通过设置比较大的虚拟内存来玩一些内存要求比较大的游戏，但是有时候就会很卡很卡","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558093772,"ip_address":"","comment_id":94647,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442780443","product_id":100026001,"comment_content":"老师，发生缺页错误的时候去磁盘对应的虚拟内存加载page进来是从磁盘读数据吗？如果是，那速度不受影响吗？","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450154,"discussion_content":"会受影响啊，如果你用过比较老版本的windows，我们可以通过设置比较大的虚拟内存来玩一些内存要求比较大的游戏，但是有时候就会很卡很卡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558093772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262006,"user_name":"JRTx","can_delete":false,"product_type":"c1","uid":1104856,"ip_address":"","ucode":"F16D5B541D8F19","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/d8/e090658c.jpg","comment_is_top":false,"comment_ctime":1605604061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10195538653","product_id":100026001,"comment_content":"分段映射的最小单位是1字节,映射的时候是一头一尾进行映射的，不然映射表就太大了。分页映射的最小单位是1页，映射的时候使用的页就可以进行一一映射了，因为维护起来成本很低，所以分页完成了离散存储。","like_count":2},{"had_liked":false,"id":232469,"user_name":"西门吹牛","can_delete":false,"product_type":"c1","uid":1508990,"ip_address":"","ucode":"E5D3624DDE1E83","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","comment_is_top":false,"comment_ctime":1594013204,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10183947796","product_id":100026001,"comment_content":"程序在运行时，编写的代码其实是在很多文件中，首先将这多个目标文件，链接成一个可执行文件，这个可执行文件中包含指令和数据等信息，程序执行时，直接按照这个可执行文件中指令的顺序进行执行就行，但是cpu处理的是内存中的数据，如果把所有的指令和数据都加到内存，同时还要保证内存中的数据是连续存放的，这样很容易内存碎屏，内存也比较小，如果程序过大，直接装不下，更别谈运行了。<br>所以用内存分页的技术，将真实的内存空间和虚拟内存空间，都划分成很小的页，这里的虚拟内存，一般是用硬盘代替，程序会写存在硬盘中，指令对应的地址和数据对应的地址都是硬盘地址，运行的时候，把虚拟空间划分好的页，按顺序读取到内存中，通过映射关系找到对应的物流内存页，这样装载到内存的这一页数据，就可以在cpu的作用下执行，当需要下一页的时候，在装载下一页，避免了同时把整个应用程序都装载到内存；<br>java中，程序是加载到虚拟机内存，装载到虚拟机内存的时候，是按对象加载，没有涉及内存分页和内存交换的问题，但是涉及了垃圾 回收，毕竟jvm内存是有限的，相当于这里的java 对象，类似内存分页中的每一页，jvm整个内存相当于计算机的内存<br>jvm可以当做是一个可运行的程序，java代码只是运行在这个程序上，而jvm运行时需要的内存，是靠承载jvm的操作系统去维护解决的，这个时候可能涉及内存交换和分页；","like_count":2},{"had_liked":false,"id":168023,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1577979023,"is_pvip":false,"replies":[{"id":"68125","content":"gogo同学，<br><br>你好，JVM里面如何分配内存，这个连续空间不必须是在物理内存上，甚至不必须是在虚拟内存上。而只是 JVM 这个“虚拟机” 层面的连续空间上。<br><br>当然有可能会被交换到swap上，因为对于操作系统来说，JVM也只是一个用户态的应用程序。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580649871,"ip_address":"","comment_id":168023,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10167913615","product_id":100026001,"comment_content":"老师讲的太好了<br><br>我没学过计算机组成原理<br><br>看了部分评论和回复，我想问一个问题：<br><br>老师，java申请的所谓的一块连续的堆内存a，在连续的堆内存a上开辟一段连续的空间b,<br>这个a 和 b 都是在 物理内存m上的嘛？<br><br>我的意思是： 堆内存a对外表现是连续的，但是其实在物理内存m上，是由多个内存页page组成的吧？<br>堆内存a上开辟的连续的空间b，也是在物理内存m上，多个固定大小且连续的内存页page组成的吧？<br><br>那这样的话，不管是堆内存a，还是被开辟出来的空间b， 是不是都有被交换到swap上的可能啊？<br><br>(我也不知道我问的对不对，但是我就是根据您的问题想问一下，或许后面有答疑，或许没有...)<br>想请老师回答一下，谢谢您～！","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480104,"discussion_content":"gogo同学，\n\n你好，JVM里面如何分配内存，这个连续空间不必须是在物理内存上，甚至不必须是在虚拟内存上。而只是 JVM 这个“虚拟机” 层面的连续空间上。\n\n当然有可能会被交换到swap上，因为对于操作系统来说，JVM也只是一个用户态的应用程序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580649871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163871,"user_name":"莫名","can_delete":false,"product_type":"c1","uid":1007254,"ip_address":"","ucode":"E28F2602BA25DD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/96/a03175bc.jpg","comment_is_top":false,"comment_ctime":1576815682,"is_pvip":false,"replies":[{"id":"68661","content":"莫名同学，<br><br>抱歉，没太理解具体的问题在哪里？我理解我说的和你说的是一回事儿？页加载的时间不需要是预先加载，而是实际用到的时候再加载？","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581238372,"ip_address":"","comment_id":163871,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10166750274","product_id":100026001,"comment_content":"【我们完全可以在进行虚拟内存和物理内存的页之间的映射之后，并不真的把页加载到物理内存里】这句话有些问题，只有真正分配page的时候才会通过创建页表项（pte）建立虚拟内存与物理内存的映射。","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478564,"discussion_content":"莫名同学，\n\n抱歉，没太理解具体的问题在哪里？我理解我说的和你说的是一回事儿？页加载的时间不需要是预先加载，而是实际用到的时候再加载？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581238372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159804,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1575794612,"is_pvip":false,"replies":[{"id":"68673","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581240227,"ip_address":"","comment_id":159804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165729204","product_id":100026001,"comment_content":"java程序首先会被翻译成.class文件，也就是字节码文件，然后通过jvm的解释器来解释成计算机可以识别的机器码！<br>Jvm实际上也是一个软件，拥有不同的版本，这也就是为什么java可以“一次编译，到处运行”，因为不同的平台都有对应的jvm，解释出来的机器码也就自然不一样，但是并不改变Java程序的本身<br>Jvm不需要考虑物理分页，考虑的一般是对象的空间大小！","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477177,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581240227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159075,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1575533342,"is_pvip":false,"replies":[{"id":"68669","content":"Eleven同学，<br><br>你好，如果是你自己来实现一个最简单的操作系统的话。你可以这样来做<br><br>1. 操作系统发现没有连续的内存空间了，不加载新的程序<br>2. 找到哪些进程占用了哪些内存，然后256MB的这个程序所在的内存，把数据写入到硬盘。<br>3. 重新从磁盘加载这些数据，但是加载到512MB后面的位置<br><br>会覆盖上面的128MB的空白内存的位置，但是这个就是我们的目的呀。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581239690,"ip_address":"","comment_id":159075,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165467934","product_id":100026001,"comment_content":"我们可以把 Python 程序占用的那 256MB 内存写到硬盘上，然后再从硬盘上读回来到内存里面。不过读回来的时候，我们不再把它加载到原来的位置，而是紧紧跟在那已经被占用了的 512MB 内存后面。这样，我们就有了连续的 256MB 内存空间，就可以去加载一个新的 200MB 的程序。如果你自己安装过 Linux 操作系统，你应该遇到过分配一个 swap 硬盘分区的问题。这块分出来的磁盘空间，其实就是专门给 Linux 操作系统进行内存交换用的。<br><br>老师，这段看得不是很懂哈，256MB的内存怎么能写到硬盘，然后又读回到512MB后面？不是会覆盖原来已使用过的内存么？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476940,"discussion_content":"Eleven同学，\n\n你好，如果是你自己来实现一个最简单的操作系统的话。你可以这样来做\n\n1. 操作系统发现没有连续的内存空间了，不加载新的程序\n2. 找到哪些进程占用了哪些内存，然后256MB的这个程序所在的内存，把数据写入到硬盘。\n3. 重新从磁盘加载这些数据，但是加载到512MB后面的位置\n\n会覆盖上面的128MB的空白内存的位置，但是这个就是我们的目的呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581239690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153270,"user_name":"happy-黑皮","can_delete":false,"product_type":"c1","uid":1177177,"ip_address":"","ucode":"F1B8F18BBAC6FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/59/5d33271d.jpg","comment_is_top":false,"comment_ctime":1574210024,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10164144616","product_id":100026001,"comment_content":"老师你好，有一个问题，内存分页后，程序不再需要一段连续的内存空间，而是由一个个独立的页组成了是吗？这样的话为什么还存在内存交换的情况？只要有空白分页不就行了么？","like_count":2,"discussions":[{"author":{"id":1318941,"avatar":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","nickname":"罗辑思维","note":"","ucode":"D257A06EDE928E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205058,"discussion_content":"还是会存在物理内存不足的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584256886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133589,"user_name":"w 🍍","can_delete":false,"product_type":"c1","uid":1228290,"ip_address":"","ucode":"F2386C971EC58B","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/02/43202976.jpg","comment_is_top":false,"comment_ctime":1568615892,"is_pvip":false,"replies":[{"id":"52628","content":"w 🍍<br><br>你好，是系统调度要求他释放出来啊。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569657151,"ip_address":"","comment_id":133589,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10158550484","product_id":100026001,"comment_content":"&quot;需要让现有的、正在运行的其他程序，通过内存交换释放出一些内存的页出来&quot; 为什么会释放呢","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467438,"discussion_content":"w 🍍\n\n你好，是系统调度要求他释放出来啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569657151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125217,"user_name":"大雄","can_delete":false,"product_type":"c1","uid":1307188,"ip_address":"","ucode":"45B96AF48DF134","user_header":"https://static001.geekbang.org/account/avatar/00/13/f2/34/03282f4d.jpg","comment_is_top":false,"comment_ctime":1566121237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10156055829","product_id":100026001,"comment_content":"徐老师，想请教一下。如果1个256M的程序，要插入两个分开的128M的空白空间。如果没有分页的话，就要先通过交换整合这两个128M空间为256M，若有了分页，可以直接将256M的程序拆分成很多4K大小的页，直接插入两个128M的地方，就不用进行内存交换和空间整理了，不知道我的理解对么？","like_count":2},{"had_liked":false,"id":95836,"user_name":"你好呀","can_delete":false,"product_type":"c1","uid":1049361,"ip_address":"","ucode":"2E97656410BACA","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/11/f58c6278.jpg","comment_is_top":false,"comment_ctime":1558196859,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10148131451","product_id":100026001,"comment_content":"640k内存，如果我的程序写了一个1M的字符串求length()   指令加数据大于640k。内存不就oom了吗？","like_count":2,"discussions":[{"author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":124831,"discussion_content":"有内存交换和分页啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578452818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95239,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1557994789,"is_pvip":false,"replies":[{"id":"34149","content":"组成原理里的内存部分还是比操作系统要简单很多的，想要深入理解还是要仔细看看操作系统","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558090295,"ip_address":"","comment_id":95239,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147929381","product_id":100026001,"comment_content":"感觉这一讲的内容 基本都是 《现代操作系统》 中关于内存 部分的内容 ","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450380,"discussion_content":"组成原理里的内存部分还是比操作系统要简单很多的，想要深入理解还是要仔细看看操作系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558090295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94945,"user_name":"Forever","can_delete":false,"product_type":"c1","uid":1509608,"ip_address":"","ucode":"088EA9D191349F","user_header":"https://static001.geekbang.org/account/avatar/00/17/08/e8/ebb75f2d.jpg","comment_is_top":false,"comment_ctime":1557927300,"is_pvip":false,"replies":[{"id":"34182","content":"JVM的class loader的资料网上还是很多的，这个其实完全是个应用层问题，不太适合放到组成原理里面","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558098215,"ip_address":"","comment_id":94945,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147861892","product_id":100026001,"comment_content":"能详细讲讲JVM的类加载器吗?期待~~~","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450268,"discussion_content":"JVM的class loader的资料网上还是很多的，这个其实完全是个应用层问题，不太适合放到组成原理里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558098215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94937,"user_name":"明月","can_delete":false,"product_type":"c1","uid":1476588,"ip_address":"","ucode":"D3C649B954A519","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJayib1ZcRfOaoLsdsWZokiaO5tLAdC4uNAicQJRIVXrz9fIchib7QwXibnRrsJaoh5TUlia7faUf36g8Bw/132","comment_is_top":false,"comment_ctime":1557926598,"is_pvip":false,"replies":[{"id":"34157","content":"可以认为是一个进程","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558092770,"ip_address":"","comment_id":94937,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147861190","product_id":100026001,"comment_content":"这里说的程序是指进程还是什么？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450264,"discussion_content":"可以认为是一个进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558092770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94904,"user_name":"张立昊Leon","can_delete":false,"product_type":"c1","uid":1321002,"ip_address":"","ucode":"2D80F71C0BC83E","user_header":"https://static001.geekbang.org/account/avatar/00/14/28/2a/173ea0e1.jpg","comment_is_top":false,"comment_ctime":1557919227,"is_pvip":false,"replies":[{"id":"34160","content":"对，jvm对于操作系统也只是一个应用程序而已","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558093377,"ip_address":"","comment_id":94904,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147853819","product_id":100026001,"comment_content":"感觉JVM应该不需要考虑内存的分页问题，设定个可使用内存值的上限，只要不超过这个上限都可以直接向操作系统申请，操作系统给出一块内存可以直接认为是连续的，底层的映射关系可以让操作系统自己去解决","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450252,"discussion_content":"对，jvm对于操作系统也只是一个应用程序而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558093377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94879,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1557914797,"is_pvip":false,"replies":[{"id":"34158","content":"调度其实是由TLB这样的硬件完成的，不过存放这些映射关系也要占空间","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558092836,"ip_address":"","comment_id":94879,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147849389","product_id":100026001,"comment_content":"之前有了解物理内存、虚拟内存、段、页、块之间的关系：只是没想到之间的调度还需要程序并且需要消耗一部分空间；长知识了。","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450242,"discussion_content":"调度其实是由TLB这样的硬件完成的，不过存放这些映射关系也要占空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558092836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94640,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1557877791,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10147812383","product_id":100026001,"comment_content":"缺页错误是访问内存数据，缺页异常是分配内存的时候触发的，这个老师有必要提一下，我把这个搞混淆了，查资料才香明白","like_count":2,"discussions":[{"author":{"id":2285946,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e1/7a/b206cded.jpg","nickname":"人在江湖龙在江湖","note":"","ucode":"20850038573DAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324766,"discussion_content":"缺页应该是触发硬件实现的，当去看内存管理这一部分，看猜测的对不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605167817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353420,"user_name":"X","can_delete":false,"product_type":"c1","uid":1581509,"ip_address":"上海","ucode":"BE05C1D25CE313","user_header":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","comment_is_top":false,"comment_ctime":1659429226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5954396522","product_id":100026001,"comment_content":"用虚拟内存解决了进程之间的隔离、用分段技术解决了物理地址不连续的问题。<br>但是分段技术又会带来内存碎片问题，从而引入内存交换用来解决内存碎片问题。<br>但是分段技术的内存交换，是交换整个程序的内存，如果一个程序的内存比较大的话，由于内存交换需要和磁盘打交道，而磁盘的吞吐率比内存慢好几档，此时发生内存交换的空间较大的话会严重影响系统，严重的话会造成系统的卡顿。<br>要解决这个问题，我们首先得明白这个问题是怎么产生的 —— 内存交换的空间太大，所以引入了内存分页。<br>内存分页：将虚拟内存和物理内存分成了一个个页，在linux上，每个页的大小是4k，这样虚拟内存和物理内存上的页与页之间的对应，即使内存空间不够了，那也只是给页大小的物理内存进行置换，优化了交换内存的性能。<br>注：页虚拟内存和物理页内存的对应可以是不连续的（这点从老师提供的图即可看出）。","like_count":1},{"had_liked":false,"id":247504,"user_name":"LW","can_delete":false,"product_type":"c1","uid":1325297,"ip_address":"","ucode":"89820332658E98","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/f1/996a070d.jpg","comment_is_top":false,"comment_ctime":1599728151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5894695447","product_id":100026001,"comment_content":"读完这一篇，解决了困扰我这个非计算机科班出身的程序猿多年的困惑，终于知道swap空间是干啥的了，呵呵呵呵","like_count":1},{"had_liked":false,"id":219263,"user_name":"顽石少年","can_delete":false,"product_type":"c1","uid":1371229,"ip_address":"","ucode":"397B01176626C3","user_header":"https://static001.geekbang.org/account/avatar/00/14/ec/5d/45227d75.jpg","comment_is_top":false,"comment_ctime":1589978932,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5884946228","product_id":100026001,"comment_content":"请教一下老师，链表是不需要连续的内存空间存储的数据结构。而这里又说程序加载时占用的内存空间是连续的，我有点迷惑。那链表这种结构不是没什么用吗？","like_count":1,"discussions":[{"author":{"id":1939316,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/97/74/a933d664.jpg","nickname":"莜戏","note":"","ucode":"C3488A2BB44359","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373996,"discussion_content":"这两者已经不是同一层面的东西了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620963450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178962,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1581863932,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5876831228","product_id":100026001,"comment_content":"再次细读本节，有如下几个问题：<br>1、那就是我们可以在内存里面，找到一段连续的内存空间，然后分配给装载的程序，然后把这段连续的内存空间地址，和整个程序指令里指定的内存地址做一个映射。<br>  这一句看了N遍，还是没能完全悟透。虚拟内存和物理内存映射时大小比例是1:1吗？如果是1:1的话，岂不是降低了内存的使用率？<br>2、我们把指令里用到的“内存地址”叫作虚拟内存地址（Virtual Memory Address），实际在“内存硬件”里面的空间地址，我们叫物理内存地址（Physical Memory Address）。<br>  这一句里面的“内存地址”和“内存硬件”是一个东西吗？<br>","like_count":1,"discussions":[{"author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221922,"discussion_content":"我又来了：\n虚拟内存地址实际是可执行文件里的地址(如：objdump反编译出来程序和指令)，物理内存地址实际是内存中的地址。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586081459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221925,"discussion_content":"读书百遍，其义自现。大声的读出来，竟然理解了今天的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586082830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":174886,"discussion_content":"要满足这两个基本的要求，我们很容易想到一个办法。那就是我们可以在内存里面，找到一段连续的内存空间，然后分配给装载的程序，然后把这段连续的内存空间地址，和整个程序指令里指定的内存地址做一个映射。\n我们把指令里用到的内存地址叫作虚拟内存地址（Virtual Memory Address），实际在内存硬件里面的空间地址，我们叫物理内存地址（Physical Memory Address）。\n\n第三、四次读时，有以下的理解，请指正：\n 1、虚拟内存就是指的上面的“程序指令的内存地址”，物理内存指的是上面的“一段连续的内存空间”，其实两者都是存在内存里。\n 2、虚拟内存与物理内存应该是1：1的关系。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581945115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135582,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1569220602,"is_pvip":false,"replies":[{"id":"52606","content":"Angus同学，<br><br>你好，可以先看完第一遍，有些内容对于非科班同学来说还是要花时间慢慢补来反复消化。程序装载部分也可以去看看操作系统相关的课程或者内容。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569652089,"ip_address":"","comment_id":135582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864187898","product_id":100026001,"comment_content":"非科班，第一次看这种文章，越来越有些难懂了。。。","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468255,"discussion_content":"Angus同学，\n\n你好，可以先看完第一遍，有些内容对于非科班同学来说还是要花时间慢慢补来反复消化。程序装载部分也可以去看看操作系统相关的课程或者内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569652089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96115,"user_name":"焰火","can_delete":false,"product_type":"c1","uid":1244606,"ip_address":"","ucode":"D3353B386DE3B5","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/be/079c78c7.jpg","comment_is_top":false,"comment_ctime":1558335597,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5853302893","product_id":100026001,"comment_content":"浩哥，请问一下，操作系统本身在运行过程中应该不能采用分页机制吧。这讲的分页机制应该只是针对用户的应用程序之上？ <br>我刚刚查了一下我的window任务管理器上system的进程总大小也就300+MB，操作系统自身所占的内容就这么大么？","like_count":1},{"had_liked":false,"id":95605,"user_name":"高鑫","can_delete":false,"product_type":"c1","uid":1096052,"ip_address":"","ucode":"752385A515C5A5","user_header":"https://static001.geekbang.org/account/avatar/00/10/b9/74/de434e5f.jpg","comment_is_top":false,"comment_ctime":1558098244,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5853065540","product_id":100026001,"comment_content":"老师好，有个问题请教，虚拟内存地址与物理内存地址是n：1的关系吗？","like_count":1,"discussions":[{"author":{"id":1040236,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","nickname":"Dylan","note":"","ucode":"58064D0C9F9F5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181448,"discussion_content":"不能简单地认为两者是一个什么比例地对应关系，这两个是操作系统通过页表机制建立地一种对应关系，物理内存可能是1G，2G，16G，而虚拟内存和操作系统位数有关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582370838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94732,"user_name":"Ant","can_delete":false,"product_type":"c1","uid":1079563,"ip_address":"","ucode":"07E6374F91F61E","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/0b/4346a253.jpg","comment_is_top":false,"comment_ctime":1557886422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852853718","product_id":100026001,"comment_content":"第一，可执行程序加载后占用的内存空间应该是连续的<br>第二，我们需要同时加载很多个程序，并且不能让程序自己规定在内...<br>那就是我们可以在内存里面，找到一段连续的内存空间，然后分配给装载的程序，然后把这段连续的内存空间地址和整个程序指令里指定的内存地址做一个映射","like_count":1},{"had_liked":false,"id":94673,"user_name":"徐凯","can_delete":false,"product_type":"c1","uid":1244991,"ip_address":"","ucode":"12F82BA3649CD5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/3f/bbb8a88c.jpg","comment_is_top":false,"comment_ctime":1557881418,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5852848714","product_id":100026001,"comment_content":"对于分页其实有两种现象 一种叫Belady 由于采用了不好的置换算法 使得频繁访问的页没有及时放在内存 被经常性地换入换出 导致缺页中断率的提高。另一种是thrashing现象 给进程分配了太少的页 使得它疲于换入换出 十分影响程序效率。","like_count":1,"discussions":[{"author":{"id":1400806,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","nickname":"Mr.埃克斯","note":"","ucode":"855BE5DFD2BB0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136803,"discussion_content":"是个高手吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579164935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94657,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1557879549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852846845","product_id":100026001,"comment_content":"@Leon 同学请问你哪里看到的?我看到是这种<br><br>若是 CPU 请求的内存数据在物理内存中不存在，那么 CPU 就会报告「缺页错误（Page Fault）」，提示内核","like_count":1},{"had_liked":false,"id":94646,"user_name":"阿德","can_delete":false,"product_type":"c1","uid":1482125,"ip_address":"","ucode":"7C4C4525B96E05","user_header":"https://static001.geekbang.org/account/avatar/00/16/9d/8d/f5c3c491.jpg","comment_is_top":false,"comment_ctime":1557878313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852845609","product_id":100026001,"comment_content":"老师能讲下HugePage（大页）的原理和使用场景吗？","like_count":1},{"had_liked":false,"id":355367,"user_name":"蜘蛛侠","can_delete":false,"product_type":"c1","uid":3053481,"ip_address":"河南","ucode":"B59D7255BAD55B","user_header":"https://static001.geekbang.org/account/avatar/00/2e/97/a9/e3b097f1.jpg","comment_is_top":false,"comment_ctime":1661320045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661320045","product_id":100026001,"comment_content":"问一个问题 搭建K8S的基本要求有需要把swap分区关闭，呢关闭交换分区之后，机器是处理变快了还是？如果是变快了为啥还要有这个东西？单纯的是为了同时去能够加载更多的程序嘛","like_count":0},{"had_liked":false,"id":348769,"user_name":"Geek_0ba253","can_delete":false,"product_type":"c1","uid":2612720,"ip_address":"","ucode":"55D6DDECC9AF60","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/QvyPibAqLH5uEr7GNL6Lg9jT9sUs9jtub4LvO575nHuT3viagzmvKLCwGQRicsiadic3n9lM62qQ6n5shHfXUYib8Ktg/132","comment_is_top":false,"comment_ctime":1655376167,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1655376167","product_id":100026001,"comment_content":"java虚拟机应该是更高程度的抽象，直接使用虚拟内存即可。","like_count":0},{"had_liked":false,"id":346168,"user_name":"谜宇","can_delete":false,"product_type":"c1","uid":2979459,"ip_address":"","ucode":"D3C680C025E789","user_header":"https://static001.geekbang.org/account/avatar/00/2d/76/83/28d824ab.jpg","comment_is_top":false,"comment_ctime":1652864255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652864255","product_id":100026001,"comment_content":"请教一下，被分页之后的一个程序的内存在物理内存中，各个页是连续的吗","like_count":0},{"had_liked":false,"id":342941,"user_name":"Geek_d68bf9","can_delete":false,"product_type":"c1","uid":2173090,"ip_address":"","ucode":"D88E117B6A18B3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIstR9CfEytdeJyicODHOe6cYGt4icg8cNVam9mE0s7picUsInZvwvia1hEtKsyHETfic0jrAddjt0wXdA/132","comment_is_top":false,"comment_ctime":1650542713,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650542713","product_id":100026001,"comment_content":"推荐的书是本好书！","like_count":0},{"had_liked":false,"id":340006,"user_name":"Null","can_delete":false,"product_type":"c1","uid":1382587,"ip_address":"","ucode":"A7D4DF2A43C7D8","user_header":"https://static001.geekbang.org/account/avatar/00/15/18/bb/9299fab1.jpg","comment_is_top":false,"comment_ctime":1648537665,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648537665","product_id":100026001,"comment_content":"所以，老师，我发现我电脑硬盘空间满了之后，电脑会变得非常卡，清理下就好了。是不是就是因为捕捉到缺页错误，从硬盘虚拟内存加载物理内存时候空间紧张造成的。","like_count":0},{"had_liked":false,"id":334806,"user_name":"小鳄鱼","can_delete":false,"product_type":"c1","uid":1178888,"ip_address":"","ucode":"9C30CAFB41A263","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/08/c039f840.jpg","comment_is_top":false,"comment_ctime":1645144432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645144432","product_id":100026001,"comment_content":"为了解决多个程序同时加载，内存地址无法提前预知，建立了虚拟内存的概念。通过虚拟内存与物理内存的映射来还原实际的物理内存地址。但还有应用程序退出产生内存碎片问题，引入“内存交换”。把程序回写到磁盘再重新读取。但是这无疑对性能影响比较大，尤其是大程序。为了解决性能问题，引入“内存分页”，每页4kb。通过“缺页错误”触发实时读取后面的程序代码，这样，即使再大程序也能运行，同时因为限制了页的大小，在内存交换时的性能损耗也变得可控了","like_count":0},{"had_liked":false,"id":327593,"user_name":"Geek_53ae34","can_delete":false,"product_type":"c1","uid":2873876,"ip_address":"","ucode":"051A1A5C1B9621","user_header":"","comment_is_top":false,"comment_ctime":1640184452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640184452","product_id":100026001,"comment_content":"请问下为什么程序加载到内存中需要连续，不是有JMP指令吗，可以跳着执行啊","like_count":0},{"had_liked":false,"id":325999,"user_name":"zgy","can_delete":false,"product_type":"c1","uid":1387798,"ip_address":"","ucode":"05EA6845199250","user_header":"https://static001.geekbang.org/account/avatar/00/15/2d/16/b525a71d.jpg","comment_is_top":false,"comment_ctime":1639300844,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639300844","product_id":100026001,"comment_content":"所以目的是为了节约内存嘛","like_count":0},{"had_liked":false,"id":325997,"user_name":"zgy","can_delete":false,"product_type":"c1","uid":1387798,"ip_address":"","ucode":"05EA6845199250","user_header":"https://static001.geekbang.org/account/avatar/00/15/2d/16/b525a71d.jpg","comment_is_top":false,"comment_ctime":1639300434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639300434","product_id":100026001,"comment_content":"加载一个4m 和 1000个4k有啥区别呢？就算拆成 内存分页4K来看，总的量是不变的呀~","like_count":0},{"had_liked":false,"id":314854,"user_name":"Geek_36fda6","can_delete":false,"product_type":"c1","uid":2204439,"ip_address":"","ucode":"B467E4A3BC4D1B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DD1fMrD3TSuPGsVyUiaI6iaicPY2bRb0VgcFERAiaJ6pMPk3LkmAibgdX17z8oP3Pk6bOqY3mIsmuaY79RWFvOen6Jw/132","comment_is_top":false,"comment_ctime":1633503199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633503199","product_id":100026001,"comment_content":"分段的时候，只需映射起始段地址和内存大小，分页之后，虚拟内存和物理内存的页之间的映射数量岂不是会很多？","like_count":0},{"had_liked":false,"id":314771,"user_name":"geek_arong2048","can_delete":false,"product_type":"c1","uid":1518310,"ip_address":"","ucode":"AB575BE100E4A9","user_header":"https://static001.geekbang.org/account/avatar/00/17/2a/e6/c788257f.jpg","comment_is_top":false,"comment_ctime":1633415231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633415231","product_id":100026001,"comment_content":"分段：将虚拟内存和物理内存划分为连续的一段段，每段大小不固定， 并建立映射关系，会出现内存碎片导致程序没办法使用连续内存进行分配，所以此时的内存-磁盘交换是为了解决内存碎片问题。<br>分页：将虚拟内存和物理内存划分为一页页的空间，每页大小固定（很小，一般为4kb），并且建立映射关系，此时虚拟页和物理内存通过MMU（内存映射单元进行映射），页在分配时是连续的，但是对应的物理内存可能是不连续的，这就减少了内存碎片问题，并且此时进行的内存-磁盘交换是为了将空闲程序换出，以释放内存","like_count":0},{"had_liked":false,"id":313105,"user_name":"没有心的人","can_delete":false,"product_type":"c1","uid":2449748,"ip_address":"","ucode":"F27D5894087B11","user_header":"https://static001.geekbang.org/account/avatar/00/25/61/54/5bf767e7.jpg","comment_is_top":false,"comment_ctime":1632280833,"is_pvip":false,"replies":[{"id":"113936","content":"你这里的连续地址，是物理地址，还是虚拟地址？<br>不一定是不想，也许是办不到呀。如果内存无限大，那当然都连续加载就好了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1633166856,"ip_address":"","comment_id":313105,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632280833","product_id":100026001,"comment_content":"关于内存交换，我有一个疑问，为什么刚开始加载多个程序到内存的时候，不加载到连续的内存地址呢?","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527232,"discussion_content":"你这里的连续地址，是物理地址，还是虚拟地址？\n不一定是不想，也许是办不到呀。如果内存无限大，那当然都连续加载就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633166856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312641,"user_name":"杰良","can_delete":false,"product_type":"c1","uid":2567349,"ip_address":"","ucode":"5DC1D1C58A4731","user_header":"https://static001.geekbang.org/account/avatar/00/27/2c/b5/10141329.jpg","comment_is_top":false,"comment_ctime":1631924130,"is_pvip":false,"replies":[{"id":"113288","content":"你的Java程序的内存分配，其实是由JVM虚拟机控制的。JVM虚拟机对于操作系统和硬件来说是一个应用程序。<br><br>所以从理论上来看，我们的Java程序其实并不知道JVM如何去管理内存，也不需要知道，这个也是虚拟机存在的意义。<br><br>当然，在真实世界中，的确也有通过理解JVM的底层实现，来利用好在物理内存里面数据是如何分布的，来让程序有极限性能，典型的就是Disruptor。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1631940529,"ip_address":"","comment_id":312641,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631924130","product_id":100026001,"comment_content":"分段，分页，内存交换，预加载。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527061,"discussion_content":"你的Java程序的内存分配，其实是由JVM虚拟机控制的。JVM虚拟机对于操作系统和硬件来说是一个应用程序。\n\n所以从理论上来看，我们的Java程序其实并不知道JVM如何去管理内存，也不需要知道，这个也是虚拟机存在的意义。\n\n当然，在真实世界中，的确也有通过理解JVM的底层实现，来利用好在物理内存里面数据是如何分布的，来让程序有极限性能，典型的就是Disruptor。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631940529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310058,"user_name":"多多人","can_delete":false,"product_type":"c1","uid":2749777,"ip_address":"","ucode":"32DE9F65DADE23","user_header":"https://static001.geekbang.org/account/avatar/00/29/f5/51/a7406456.jpg","comment_is_top":false,"comment_ctime":1630473937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630473937","product_id":100026001,"comment_content":"问题如下：<br>1.一个程序是如果知道自己需要多少页的，是在ELF格式中定义好的吗？<br>2.程序在运行的过程中，动态获取的内存，如果大小为256字节，那操作系统给分配的单位也必须是4k吗？","like_count":0},{"had_liked":false,"id":308532,"user_name":"lisimmy","can_delete":false,"product_type":"c1","uid":1116159,"ip_address":"","ucode":"288507E785B433","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/ff/b3fe9903.jpg","comment_is_top":false,"comment_ctime":1629679322,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1629679322","product_id":100026001,"comment_content":"整篇文章都在讲虚拟存储管理，段式存储、页式存储，补充一下，还有段页式存储管理。虚拟存储管理就是为了小内存运行大程序，只是内存小会导致大量的缺页中断，文章最后说比尔盖茨的说法不合理，这逻辑就说不痛了…应该是合理的，只是运行慢而已。","like_count":0},{"had_liked":false,"id":303995,"user_name":"Linux C·Core Api","can_delete":false,"product_type":"c1","uid":2413481,"ip_address":"","ucode":"E370F0627E8B11","user_header":"https://static001.geekbang.org/account/avatar/00/24/d3/a9/2b84cc97.jpg","comment_is_top":false,"comment_ctime":1627176577,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627176577","product_id":100026001,"comment_content":"根据留言以及阅读文章中的【通过虚拟内存、内存交换和内存分页这三个技术的组合，我们最终得到了一个让程序不需要考虑实际的物理内存地址、大小和当前分配空间的解决方案&quot;】这段话 jvm只负责开辟一个所需的内存空间，然后实际的内存地址与大小和分配 交由底层实现 不知道我说的是否正确","like_count":0},{"had_liked":false,"id":298312,"user_name":"点子王","can_delete":false,"product_type":"c1","uid":2100422,"ip_address":"","ucode":"D722286E12A5BA","user_header":"https://static001.geekbang.org/account/avatar/00/20/0c/c6/11b7cbc5.jpg","comment_is_top":false,"comment_ctime":1624009470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624009470","product_id":100026001,"comment_content":"jvm只是一个普通的程序吧，jvm管理的内存，实际上是jvm程序的一个堆内存而已? 但native方法应该是例外。","like_count":0},{"had_liked":false,"id":297314,"user_name":"Geek_b809fe","can_delete":false,"product_type":"c1","uid":2656204,"ip_address":"","ucode":"14BB37416285AB","user_header":"","comment_is_top":false,"comment_ctime":1623427726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623427726","product_id":100026001,"comment_content":"为什么不能通过内存之间copy的方式解决内存碎片问题呢？","like_count":0},{"had_liked":false,"id":293234,"user_name":"Geek_e01bbe","can_delete":false,"product_type":"c1","uid":1261658,"ip_address":"","ucode":"3D765E71BFE797","user_header":"","comment_is_top":false,"comment_ctime":1621299731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621299731","product_id":100026001,"comment_content":"虚拟内存和物理内存的映射是保存在哪里的呢？如果是内存，那这部分内存管理是怎么实现的？","like_count":0},{"had_liked":false,"id":289224,"user_name":"Raremaa","can_delete":false,"product_type":"c1","uid":2109261,"ip_address":"","ucode":"8BA7D9F4291314","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/TcUFDfteDEF3FTmliaPUuZIrJyuaFrcur89osEju6OgWGicAZstxmjbQhIqYRUAWicI0jWw80HdT96bXjob30vnfQ/132","comment_is_top":false,"comment_ctime":1618922936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618922936","product_id":100026001,"comment_content":"老师您好，请教一个问题，“......会触发一个来自于 CPU 的缺页错误（Page Fault）。我们的操作系统会捕捉到这个错误，然后将对应的页，从存放在硬盘上的虚拟内存里读取出来，加载到物理内存里。”<br><br>我不是太理解“从存放在硬盘上的虚拟内存里读取出来”，如果程序还没用到，不是直接不安排实际物理内存也不安排硬盘，等用到了再直接加载到物理内存中不行吗<br><br>为什么一定要先放在硬盘映射的虚拟内存中呢","like_count":0},{"had_liked":false,"id":282485,"user_name":"Kung","can_delete":false,"product_type":"c1","uid":1086261,"ip_address":"","ucode":"862B39B7263447","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/35/0cfb5732.jpg","comment_is_top":false,"comment_ctime":1615275283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615275283","product_id":100026001,"comment_content":"老师您好，请问为什么内存交换时一定要落盘呢？直接在内存中不能拷贝吗？","like_count":0},{"had_liked":false,"id":278669,"user_name":"Jemmy","can_delete":false,"product_type":"c1","uid":1007330,"ip_address":"","ucode":"A979F4A5210225","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/e2/1fad3052.jpg","comment_is_top":false,"comment_ctime":1613188160,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1613188160","product_id":100026001,"comment_content":"PIC 还是不太懂的同学建议看下 CSAPP (Computer System a Programmer&#39;s Perspective) 7.12 Position-Independent Code (PIC), 有细致的解释","like_count":0},{"had_liked":false,"id":278169,"user_name":"耶low","can_delete":false,"product_type":"c1","uid":1992059,"ip_address":"","ucode":"4CCEB741583544","user_header":"https://static001.geekbang.org/account/avatar/00/1e/65/7b/058d17f3.jpg","comment_is_top":false,"comment_ctime":1612783712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612783712","product_id":100026001,"comment_content":"想问问，既然每个程序虚拟内存的起始一样，那么它们是怎么映射到物理内存的呢？用什么区分呢？","like_count":0},{"had_liked":false,"id":269506,"user_name":"Spoon","can_delete":false,"product_type":"c1","uid":1959822,"ip_address":"","ucode":"2FF9193AD482C2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","comment_is_top":false,"comment_ctime":1608687926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608687926","product_id":100026001,"comment_content":"问题<br>1.使用pthread创建的线程，这个线程栈位于虚拟地址空间什么位置？<br>2.Java的Thread类创建的线程，线程栈又位于哪里呢？","like_count":0},{"had_liked":false,"id":267991,"user_name":"u","can_delete":false,"product_type":"c1","uid":1140276,"ip_address":"","ucode":"88FA7BA089807C","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/34/0508d9e4.jpg","comment_is_top":false,"comment_ctime":1608022735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608022735","product_id":100026001,"comment_content":"java没用过不熟悉，不过可以粗略描述一下我对python虚拟机的运行原理理解：<br>* 我们平时写的python代码，会被翻译成python字节码，也就是python的一套指令集，和汇编类似，python字节码里面也包含代码段和数据段<br>* python解释器本身是一个c++程序，它的作用就是对python字节码进行解析，类似于cpu解析机器码一样，python解释器会逐条运行python字节码中的代码段，并根据数据段来进行运算<br>* 从python到机器码的流程我个人理解为：<br>  1，python解释器执行一条条的python字节码指令<br>  2，每一条python字节码指令可能都对应c++层中的若干个函数的调用，若干次运算，若干个对象的创建<br>  3，c++层的函数调用，运算，对象创建会映射到对应的机器指令<br><br>所以总结下来python代码的运行其实是经过了两次翻译<br>  1，python代码翻译成python解释器能认识的python字节码<br>  2，python字节码驱动python解释器调用早就翻译好的机器码<br><br>所以实际上python程序加载到内存的过程就是python解释器解析python字节码的过程，ELF文件的代码段和数据段取决于python解释器的实现，python代码本身不会影响ELF文件的代码段和数据段，python代码运行的过程中只影响堆栈的分配。<br><br>所以我想jvm和python解释器应该是类似的吧<br><br><br>","like_count":0},{"had_liked":false,"id":260988,"user_name":"人在江湖龙在江湖","can_delete":false,"product_type":"c1","uid":2285946,"ip_address":"","ucode":"20850038573DAE","user_header":"https://static001.geekbang.org/account/avatar/00/22/e1/7a/b206cded.jpg","comment_is_top":false,"comment_ctime":1605167627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605167627","product_id":100026001,"comment_content":"由于java虚拟机我没有研究过，我觉得Java虚拟机内存模型中的内存应该是在堆里，他的内存分配应该是自己写的，怎么样在堆里划分内存，与操作系统的内存管理应该没有关系。毕竟java虚拟机只是个应用程序，不知道猜的对不对，以后研究java虚拟机，看我猜测的对不对","like_count":0},{"had_liked":false,"id":257665,"user_name":"亚东","can_delete":false,"product_type":"c1","uid":1003978,"ip_address":"","ucode":"0C516C76812AB9","user_header":"","comment_is_top":false,"comment_ctime":1604050895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604050895","product_id":100026001,"comment_content":"老师你好我有个疑问，采用分页的方式的话因为每个分页之间可以是不连续的，那么维护虚拟内存到物理内存的映射是不是要增加很多哪？ 是不是每过一页就需要维护一个虚拟内存的起始地址和物理内存的起始地址的映射，这个映射表又是存放在哪里的哪？","like_count":0},{"had_liked":false,"id":252963,"user_name":"Java","can_delete":false,"product_type":"c1","uid":2067529,"ip_address":"","ucode":"861851696E776A","user_header":"https://static001.geekbang.org/account/avatar/00/1f/8c/49/4cf3c55c.jpg","comment_is_top":false,"comment_ctime":1602549538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602549538","product_id":100026001,"comment_content":"实际上就是PageCaChe 每次程序需要运行时看看paga有不有 没有就会触发缺页 然后就会加载对应的一段4KB数据到PageCaChe  有些程序可以开启多个进程 并且可以共用相同的Page 如果当PagaCaChe内存不够时 会触发LUR之类的淘汰算法 把不常用的Paga脏页刷写磁盘 然后进行淘汰 或者到分区里去  在Paga读取数据时由于磁盘的舒服很慢 所以中间加了个DMA技术 内存直接访问 不需要CPU来回去切换就可以直接到磁盘读取数据到内存 这样CPU就可以充分利用空闲资源 ","like_count":0},{"had_liked":false,"id":247872,"user_name":"know-one","can_delete":false,"product_type":"c1","uid":1747626,"ip_address":"","ucode":"A6AC95CCC4F617","user_header":"","comment_is_top":false,"comment_ctime":1599899231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599899231","product_id":100026001,"comment_content":"老师你好，请教一下：<br>“分页是把整个物理内存空间切成一段段固定尺寸的大小。而对应的程序所需要占用的虚拟内存空间，也会同样切成一段段固定尺寸的大小”<br>1. 程序的虚拟内存空间切割成页是在程序执行阶段完成的吗？<br>2. 把页作为内存分配的最小单元， 是否会存在内存浪费， 尤其是把page size改得比较大的时候（比如1GB）<br>","like_count":0},{"had_liked":false,"id":230348,"user_name":"lifebread","can_delete":false,"product_type":"c1","uid":1396397,"ip_address":"","ucode":"AB1824B27C241F","user_header":"","comment_is_top":false,"comment_ctime":1593353382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593353382","product_id":100026001,"comment_content":"老师，有些系统优化软件提供了诸如“内存释放”之类的功能，想知道这个功能实现的时候和这里讲述的虚拟内存，分页文件，内存互换的知识有关联吗？还是说那是一个上层的应用优化？","like_count":0},{"had_liked":false,"id":218155,"user_name":"牺牲","can_delete":false,"product_type":"c1","uid":1619402,"ip_address":"","ucode":"5780E562A43494","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","comment_is_top":false,"comment_ctime":1589725792,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1589725792","product_id":100026001,"comment_content":"内存交换不懂，我们把python占用的256内存写到硬盘，那我们可以随意把已占用的内存写到硬盘，那python是否还正常使用，还占内存了吗？","like_count":0},{"had_liked":false,"id":214795,"user_name":"志强","can_delete":false,"product_type":"c1","uid":1141536,"ip_address":"","ucode":"1C5DC9C7D70A82","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/20/004af747.jpg","comment_is_top":false,"comment_ctime":1588820869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588820869","product_id":100026001,"comment_content":"老师 虚拟内存中 多个页申请的内存地址也都是重复的吗","like_count":0},{"had_liked":false,"id":203006,"user_name":"王坤祥","can_delete":false,"product_type":"c1","uid":1003327,"ip_address":"","ucode":"FB988B9F381A33","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/3f/6f62f982.jpg","comment_is_top":false,"comment_ctime":1586100728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586100728","product_id":100026001,"comment_content":"徐哥您好，有一个问题想请教一下：<br>如果有一个数组大小需要占用的空间超过4K，怎么在物理内存中分配存储呀。<br><br>对于这种数组这种情况是不是就得寻找开辟连续的好多个4K的内存分页？<br>看大家的留言时间好早呀，都怪我来的太晚啦","like_count":0},{"had_liked":false,"id":201450,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1585790021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585790021","product_id":100026001,"comment_content":"“640K内存”够不够<br>装载器把对应的指令和数据加载到内存里来需要满足两个条件：可执行程序加载后占用的内存空间应该是连续的，需要同时加载多个程序，并且不能让程序自己规定在内存中加载的位置。<br>解决办法：分段：在内存里划分出一段连续的空间分配给装载的程序。把这段连续的内存空间地址，和指令指定的实际内存地址对应起来，即是虚拟内存<br>问题：内存碎片<br>解决：内存交换，把占用不连续内存的程序，写到硬盘上，然后再从硬盘上读回到内存上，与之前的内存连接起来，那么之前不连续的空间就被合并到一起了<br>问题：从硬盘读写慢<br>解决：内存分页，将整个物理内存空间切成一段段固定尺寸的大小，分配给程序的虚拟内存也这么分，用的时候，一页一页的加载，交换的时候也是一页一页的读写和释放","like_count":0},{"had_liked":false,"id":199885,"user_name":"极客雷","can_delete":false,"product_type":"c1","uid":1041465,"ip_address":"","ucode":"0DBAC4CB9C7BCD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/39/a06ade33.jpg","comment_is_top":false,"comment_ctime":1585497440,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585497440","product_id":100026001,"comment_content":"赞","like_count":0},{"had_liked":false,"id":191889,"user_name":"lcp0578","can_delete":false,"product_type":"c1","uid":1559585,"ip_address":"","ucode":"E347928F8DB98D","user_header":"https://static001.geekbang.org/account/avatar/00/17/cc/21/e3c45732.jpg","comment_is_top":false,"comment_ctime":1584802676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584802676","product_id":100026001,"comment_content":"讲的很通俗易懂，666","like_count":0},{"had_liked":false,"id":187533,"user_name":"Zeal","can_delete":false,"product_type":"c1","uid":1898857,"ip_address":"","ucode":"327D516A1D0F0E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f9/69/384e33e6.jpg","comment_is_top":false,"comment_ctime":1584153855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584153855","product_id":100026001,"comment_content":"只考虑内存条，而不考虑cache，这就剑走偏锋了。","like_count":0},{"had_liked":false,"id":185740,"user_name":"Kim","can_delete":false,"product_type":"c1","uid":1236573,"ip_address":"","ucode":"39CC8E1E8EFB8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","comment_is_top":false,"comment_ctime":1583673388,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583673388","product_id":100026001,"comment_content":"看到内存加载程序时候是分页加载的,只加载当前要执行的指令和数据，想问下实际中1G的内存打开2G，3G更大的文件，是什么情况呢？也是分页加载每一页么，那为啥会出现打不开呢？希望能得到解答，谢谢！","like_count":0,"discussions":[{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253494,"discussion_content":"换页也是把暂时不用的换到硬盘里，等到需要再换回来，你要是所有的页都是有用的那肯定是换不了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588238537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1236573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","nickname":"Kim","note":"","ucode":"39CC8E1E8EFB8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254355,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588317908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253494,"ip_address":""},"score":254355,"extra":""}]}]},{"had_liked":false,"id":185594,"user_name":"听雨","can_delete":false,"product_type":"c1","uid":1254493,"ip_address":"","ucode":"252754F9FCFF0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","comment_is_top":false,"comment_ctime":1583640921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583640921","product_id":100026001,"comment_content":"根据老师的说法,JVM 是一个程序，那它对应操作的也就是虚拟内存了，这样的话JVM年轻代垃圾回收时的“复制算法”其实复制的是虚拟内存中的引用，物理内存上对应的对象位置是没有发生变化的。老师，我这里理解对吗？","like_count":0},{"had_liked":false,"id":185134,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1583492305,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583492305","product_id":100026001,"comment_content":"程序执行时，使用虚拟内存地址，地址是连续的，通过页表以页为单位再映射物理内存的页，那么物理内存的页是不是也必须连续的呢？还是可以任意位置的，只要维护好虚拟内存的映射关系就好了呢？","like_count":0,"discussions":[{"author":{"id":1236573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","nickname":"Kim","note":"","ucode":"39CC8E1E8EFB8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201278,"discussion_content":"映射的页之间不需要连续","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583768326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185114,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1583485495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583485495","product_id":100026001,"comment_content":"启用内存分页映射关系后，是每次内存不够时就进行内存交换，以防止物理内存出现碎片吗？","like_count":0},{"had_liked":false,"id":179488,"user_name":"倡印","can_delete":false,"product_type":"c1","uid":1455958,"ip_address":"","ucode":"4F53AA5D017D89","user_header":"https://static001.geekbang.org/account/avatar/00/16/37/56/11068390.jpg","comment_is_top":false,"comment_ctime":1582014079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582014079","product_id":100026001,"comment_content":"虚拟内存有映射物理内存的关系那么这张表也会被加载到内存中对吧","like_count":0},{"had_liked":false,"id":178825,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1581836858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581836858","product_id":100026001,"comment_content":"内存分段是为了让多个程序（每一个程序对应一大段）,共同放入一块内存中，每个程序看到都是一大段连续内存，每个程序放弃了固定的起点，这个起点交给系统去分配。大段程序不够灵活，使用碎片空间需要交换大量内存，这个时候就引入页的概念。页和段不同，段是不定长的，大小依赖于程序本身大小，通常比较大，页是固定的，例如4k，通常比段小很多。引入页的概念以后，内存使用就在灵活性上大大提高，内存的使用化整为零，装载和交换有了固定的单位，代价就是要引入一张内存映射表，把进程看到的内存页映射到物理内存页，不过这张表通常不大，和取得装载和交换的灵活性相比，完全可以接受。","like_count":0},{"had_liked":false,"id":156582,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1574917376,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574917376","product_id":100026001,"comment_content":"1.重点：在虚拟内存、内存交换和内存分页这三者结合之下，你会发现，其实要运行一个程序，“必需”的内存是很少的。<br>2.这节内容和操作系统有部分重叠<br>3.受评论区读者的评论启发，回答问题之前，还是要首先问自己：当前这个问题是处在计算机体系中的哪一个层次，这个问题回答了，才可能有后面细节的分析","like_count":0},{"had_liked":false,"id":142766,"user_name":"心浮天空","can_delete":false,"product_type":"c1","uid":1051609,"ip_address":"","ucode":"3B2D0E6CC51EE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/d9/3328dd12.jpg","comment_is_top":false,"comment_ctime":1571501554,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1571501554","product_id":100026001,"comment_content":"不知道理解的是否正确:<br>虚拟内存, 可以在逻辑上保证进程空间的连续性(实际对应的物理内存可能不连续).<br>虚拟内存和物理内存的页大小一致, 并且物理内存的每一页空间是连续的.<br>有了分页之后, 当物理内存不足时, 只需要交换所需空间大小对应的页(可能为多个页)即可.<br>当发生缺页错误时,  由操作系统从硬盘上加载相关内容到内存.","like_count":0},{"had_liked":false,"id":141074,"user_name":"Mango","can_delete":false,"product_type":"c1","uid":1515101,"ip_address":"","ucode":"D34F0424F4F742","user_header":"https://static001.geekbang.org/account/avatar/00/17/1e/5d/62fdc917.jpg","comment_is_top":false,"comment_ctime":1571109795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571109795","product_id":100026001,"comment_content":"由于程序指令执行具有时间局部性和空间局部性，所以可以结合分段和分页，变成段页式，计算机一次性加载一块(多个分页)指令，命中率也高，读取指令速度也快。","like_count":0},{"had_liked":false,"id":123560,"user_name":"skye","can_delete":false,"product_type":"c1","uid":1027840,"ip_address":"","ucode":"C55C9F52C78A00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/00/9b49f42b.jpg","comment_is_top":false,"comment_ctime":1565702069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565702069","product_id":100026001,"comment_content":"每个进程的开始执行地址是怎么定的？链接完就定了吗？","like_count":0},{"had_liked":false,"id":113910,"user_name":"Geek_forMySelf","can_delete":false,"product_type":"c1","uid":1571779,"ip_address":"","ucode":"08A13C250762DE","user_header":"https://static001.geekbang.org/account/avatar/00/17/fb/c3/5ec01038.jpg","comment_is_top":false,"comment_ctime":1563184220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563184220","product_id":100026001,"comment_content":"你好，有个问题请教一下，同一个程序所占的物理内存是按页分配且不要求页之间连续对吗？如果是这样的话，PC寄存器中数据的变化又要怎样去设置呢？","like_count":0},{"had_liked":false,"id":110709,"user_name":"瀚海星尘","can_delete":false,"product_type":"c1","uid":1024461,"ip_address":"","ucode":"90F418299EA3BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/cd/2c513481.jpg","comment_is_top":false,"comment_ctime":1562317754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562317754","product_id":100026001,"comment_content":"从老师的课程里学到好多东西！通透！","like_count":0},{"had_liked":false,"id":109795,"user_name":"1024","can_delete":false,"product_type":"c1","uid":1086407,"ip_address":"","ucode":"DCC31F6EC54F43","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/c7/86352ccc.jpg","comment_is_top":false,"comment_ctime":1562115172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562115172","product_id":100026001,"comment_content":"虚拟机相当于在源代码和目标文件之间加了一层。实现了一份代码可以在任何机器上运行的目标，因为不同机器对相同的源代码生成不同的目标文件。","like_count":0},{"had_liked":false,"id":107711,"user_name":"Eason Tai","can_delete":false,"product_type":"c1","uid":1200676,"ip_address":"","ucode":"4707577CC9C9E9","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/24/bd63c4de.jpg","comment_is_top":false,"comment_ctime":1561598677,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561598677","product_id":100026001,"comment_content":"内存分页和numa的限制有关系的吧？但是，不清楚具体关系。如果老师看到，求解答","like_count":0,"discussions":[{"author":{"id":1040236,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","nickname":"Dylan","note":"","ucode":"58064D0C9F9F5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181487,"discussion_content":"NUMA是每个CPU和内存在一起放在一个节点node，下面分成很多zone，有一些特定策略决定下面的内存分配问题，比如当前CPU所在节点内存不够，会去其他节点上进行调度分配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582372821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103803,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1560516781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560516781","product_id":100026001,"comment_content":"虚拟内存，内存分页，页映射，内存交换都是操作系统干的事情吧？","like_count":0},{"had_liked":false,"id":102053,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c1","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1560126937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560126937","product_id":100026001,"comment_content":"这个是不是类似win中你建立一个空的文件夹 但是依然会占用一定空间类似呢？","like_count":0},{"had_liked":false,"id":101500,"user_name":"　　　　　　　　","can_delete":false,"product_type":"c1","uid":1131305,"ip_address":"","ucode":"F914EA5C2FDEDB","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/29/30a132f8.jpg","comment_is_top":false,"comment_ctime":1559829496,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1559829496","product_id":100026001,"comment_content":"虚拟内存可以理解为内存地址 物理内存是实际空间吗 这俩还是有点懵","like_count":0,"discussions":[{"author":{"id":1400806,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","nickname":"Mr.埃克斯","note":"","ucode":"855BE5DFD2BB0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136792,"discussion_content":"一个是实体，一个是抽象出来的虚体。虚实之间有映射关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579164349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99967,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1559373686,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1559373686","product_id":100026001,"comment_content":"老师我越学越糊涂了，请解惑：<br>文中提到“我们维护一个从虚拟地址到物理地址的映射表”，那么这个“我们”是指由操作系统来维护吗？如果从日常经验来说，虚拟地址应该是一个系统级别的软件实现对吧，比如用32位系统时，不管插了多少内存最多也只能当4G内存用。然而我翻了一下《深入理解计算机系统》一书“物理和虚拟寻址”一节，有个示意图显示，在CPU芯片中有个叫MMU的地址翻译模块，究竟这个虚拟寻址与本文中提到的虚拟地址映射表是不是两个不同的东西？","like_count":0,"discussions":[{"author":{"id":1400806,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","nickname":"Mr.埃克斯","note":"","ucode":"855BE5DFD2BB0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136797,"discussion_content":"我的理解是操作系统维护的。虚拟地址映射表就是存在MMU中的，目的就是寻址快。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579164524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97677,"user_name":"A🔱栋杰✨","can_delete":false,"product_type":"c1","uid":1046580,"ip_address":"","ucode":"C975704B321C15","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/34/9d8a2a6b.jpg","comment_is_top":false,"comment_ctime":1558748148,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558748148","product_id":100026001,"comment_content":"虚拟内存空间位于硬盘。<br>问：不同程序有相同的指令地址，硬盘也没有重复的地址，若虚拟内存空间存在于硬盘，是否有冲突？","like_count":0},{"had_liked":false,"id":96547,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1558446214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558446214","product_id":100026001,"comment_content":"想请教下，段，页我知道是什么了，那 “块”又是什么呢？","like_count":0},{"had_liked":false,"id":96424,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1558419547,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558419547","product_id":100026001,"comment_content":"我们的操作系统会捕捉到这个错误，然后将对应的页，从存放在硬盘上的虚拟内存里读取出来，加载到物理内存里。这种方式，使得我们可以运行那些远大于我们实际物理内存的程序。同时，这样一来，任何程序都不需要一次性加载完所有指令和数据，只需要加载当前需要用到就行了。<br><br>徐老师，这段话真的很懵，不需要一次性加载，那是存在 swap 分区中吗？这二者是啥关系？","like_count":0,"discussions":[{"author":{"id":1400806,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","nickname":"Mr.埃克斯","note":"","ucode":"855BE5DFD2BB0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136801,"discussion_content":"找找一点书看，比如csapp，这块肯定不是徐老师的重点，不够那么细。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579164834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95923,"user_name":"赵国辉","can_delete":false,"product_type":"c1","uid":1166280,"ip_address":"","ucode":"390196BD3082B8","user_header":"https://static001.geekbang.org/account/avatar/00/11/cb/c8/ff9f3ffb.jpg","comment_is_top":false,"comment_ctime":1558257564,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558257564","product_id":100026001,"comment_content":"虚拟内存和物理内存的页之间的映射，是发生在页载入内存时开始运行程序时？如果是后者，映射的规则是什么？","like_count":0},{"had_liked":false,"id":95898,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1558250430,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1558250430","product_id":100026001,"comment_content":"老师请教两个问题：<br>1: 在对物理内存和虚拟内存进行分页的时候，依据是什么？物理内存的分页是固定的吗？ 是不是修改了 PAGE_SIZE的大小，会触发物理内存重新分页，虚拟内存和物理是不是要重新映射？ 如果需要重新映射，那操作系统所有task 的虚拟内存是不是都需要映射，这样的话 映射期间所有的功能都无法使用，映射的时候会不会很长？<br>2:  上面说当要读取特定的页，却发现数据并没有加载到物理内存里的时候，就会触发一个来自于CPU 的缺页错误<br>这里的虚拟内存页，是不是有类似序号的东西，要不然发生页缺失的时候怎么知道接下来加载的是哪一页？<br>","like_count":0},{"had_liked":false,"id":95454,"user_name":"暴风雪","can_delete":false,"product_type":"c1","uid":1283139,"ip_address":"","ucode":"BF1523D69866FF","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/43/46a7d0a8.jpg","comment_is_top":false,"comment_ctime":1558057969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558057969","product_id":100026001,"comment_content":"2.进行交换，把对象交换到虚拟内存和“指令用到的内存地址叫虚拟内存”是同一块地方吗？","like_count":0},{"had_liked":false,"id":94748,"user_name":"宋不肥","can_delete":false,"product_type":"c1","uid":1240126,"ip_address":"","ucode":"32B34AF579C91C","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","comment_is_top":false,"comment_ctime":1557888695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557888695","product_id":100026001,"comment_content":"学生党，还没用过Java，但感觉jvm已经算比较高层了，下面还要通过解释器翻译成C++进行编译，至少也会有汇编这个过程，并不解决内存分段问题。其实想问一个问题，是不是因为在进行虚拟内存到物理内存的映射时候已经确定了所占空间的大小，所以才需要有堆栈来存放开辟的临时量，指针啊，如果不是的话，当递归重数比较大的是怎么解决内存的呢？","like_count":0}]}