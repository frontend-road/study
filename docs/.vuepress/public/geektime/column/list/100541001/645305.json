{"id":645305,"title":"10｜AI连接外部资料库，让Llama Index带你阅读一本书","content":"<p>你好，我是徐文浩。</p><p>有不少人在使用OpenAI提供的GPT系列模型的时候，都反馈效果并不好。这些反馈中有一大类问题，是回答不了一些简单的问题。比如当我们用中文问AI一些事实性的问题，AI很容易胡编乱造。而当你问它最近发生的新闻事件的时候，它就干脆告诉你它不知道21年之后的事情。</p><p>本来呢，我写到这里就可以了。不过到了3月24日，OpenAI推出了ChatGPT Plugins这个功能，可以让ChatGPT通过插件的形式链接外部的第三方应用。我自己也还在排队等waiting list，所以暂时也无法体验。不过，即使有了第三方应用，我们也不能确保自己想要知道的信息正好被其他人提供了。而且，有些信息和问题我们只想提供给自己公司的内部使用，并不想开放给所有人。这个时候，我们既希望能够利用OpenAI的大语言模型的能力，但是又需要这些能力仅仅在我们自己指定的数据上。那么这一讲，就是为了解决这个问题的。</p><h2>大型语言模型的不足之处</h2><p>我们先来尝试问ChatGPT一个人尽皆知的常识，“鲁迅先生去日本学习医学的老师是谁”，结果它给出的答案是鲁迅的好友，内山书店的老板内山完造，而不是大家都学习过的藤野先生。</p><p><img src=\"https://static001.geekbang.org/resource/image/89/64/891fc431e1cd46b1d45f60fe79c2e964.png?wh=704x264\" alt=\"图片\"></p><p>之所以会出现这样的情况，和大模型的原理以及它使用训练的数据集是有关的。大语言模型的原理，就是利用训练样本里面出现的文本的前后关系，通过前面的文本对接下来出现的文本进行概率预测。如果类似的前后文本出现得越多，那么这个概率在训练过程里会收敛到少数正确答案上，回答就准确。如果这样的文本很少，那么训练过程里就会有一定的随机性，对应的答案就容易似是而非。而在GPT-3的模型里，虽然整体的训练语料很多，但是中文语料很少。只有不到1%的语料是中文的，所以如果问很多中文相关的知识性或者常识性问题，它的回答往往就很扯。</p><!-- [[[read_end]]] --><p>当然，你可以说我们有一个解决办法，就是多找一些高质量的中文语料训练一个新的模型。或者，对于我们想让AI能够回答出来的问题，找一些数据。然后利用OpenAI提供的“微调”（Fine-tune）接口，在原来的基础上训练一个新模型出来。</p><p><img src=\"https://static001.geekbang.org/resource/image/47/9c/47e11ff6d1534e8f53ea8da3ae5bcb9c.png?wh=700x217\" alt=\"图片\" title=\"如果你问一下新闻类的信息，ChatGPT通常会拒绝回答\"></p><p>这样当然是可以的，就是成本有点高。对于上面那个例子来说，只是缺少一些文本数据，还好说。如果是时效性要求比较强的资讯类的信息，就很难这么做。比如，我们想让AI告诉我们前一天足球赛的比分，我们不太可能每隔几个小时就单独训练或者微调一下模型，那样干的成本太高了。</p><h2>Bing的解法——先搜索，后提示</h2><p>不过对这个领域比较关注的朋友可能就要问了。之前微软不是在Bing这个搜索引擎里，加上了ChatGPT的问答功能吗？效果似乎也还不错，那Bing是怎么做到的呢，是因为他们用了更加厉害的语言模型吗？</p><p>虽然我并没有什么内幕消息，不了解Bing是怎么做的。但是如果是我的话，会用这样一个解决办法——那就是先搜索，后提示（Prompt）。</p><ol>\n<li>我们先通过搜索的方式，找到和询问的问题最相关的语料。这个搜索过程中，我们既可以用传统的基于关键词搜索的技术，也可以用<a href=\"http://time.geekbang.org/column/article/644795\">第 9 讲</a>我们刚刚介绍过的使用Embedding的相似度进行语义搜索的技术。</li>\n<li>然后，我们将和问题语义最接近的前几条内容，作为提示语的一部分给到AI。然后请AI参考这些内容，再来回答这个问题。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/c8/f2/c8f7888bdfc3438934e784beayybeef2.png?wh=686x438\" alt=\"图片\"></p><p>我在这里，也给了你一个例子的截图。当我们把《藤野先生》里的两个段落给到AI，然后请AI根据这两个段落，回答原来那个问题，就会得到正确的答案，你也可以去看一看。</p><p>这也是利用大语言模型的一个常见模式。因为大语言模型其实内含了两种能力。</p><p>第一种，是海量的语料中，本身已经包含了的知识信息。比如，我们前面问AI鱼香肉丝的做法，它能回答上来就是因为语料里已经有了充足的相关知识。我们一般称之为“世界知识”。</p><p>第二种，是根据你输入的内容，理解和推理的能力。这个能力，不需要训练语料里有一样的内容。而是大语言模型本身有“思维能力”，能够进行阅读理解。这个过程里，“知识”不是模型本身提供的，而是我们找出来，临时提供给模型的。如果不提供这个上下文，再问一次模型相同的问题，它还是答不上来的。</p><h2>通过llama_index封装“第二大脑”</h2><p>我给上面这种先搜索、后提示的方式，取了一个名字，叫做AI的“第二大脑”模式。因为这个方法，需要提前把你希望AI能够回答的知识，建立一个外部的索引，这个索引就好像AI的“第二个大脑”。每次向AI提问的时候，它都会先去查询一下这个第二大脑里面的资料，找到相关资料之后，再通过自己的思维能力来回答问题。</p><p>实际上，你现在在网上看到的很多读论文、读书回答问题的应用，都是通过这个模式来实现的。那么，现在我们就来自己实现一下这个“第二大脑”模式。</p><p>不过，我们不必从0开始写代码。因为这个模式实在太过常用了，所以有人为它写了一个开源Python包，叫做llama-index。那么我们这里，可以直接利用这个软件包，用几行代码来试一试，它能不能回答上鲁迅先生写的《藤野先生》相关的问题。</p><p>llama-index还没有人做好Conda下的包，所以即使在Conda下还是要通过pip来安装。</p><pre><code class=\"language-python\">pip install llama-index\npip install langchain\n</code></pre><p>我把从网上找到的《藤野先生》这篇文章变成了一个txt文件，放在了 data/mr_fujino 这个目录下。我们的代码也非常简单，一共没有几行。</p><pre><code class=\"language-python\">import openai, os\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader\n\nopenai.api_key = os.environ.get(\"OPENAI_API_KEY\")\n\ndocuments = SimpleDirectoryReader('./data/mr_fujino').load_data()\nindex = GPTSimpleVectorIndex.from_documents(documents)\n\nindex.save_to_disk('index_mr_fujino.json')\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">INFO:llama_index.token_counter.token_counter:&gt; [build_index_from_nodes] Total LLM token usage: 0 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [build_index_from_nodes] Total embedding token usage: 6763 tokens\n</code></pre><p><span class=\"reference\">注：日志中会打印出来我们通过Embedding消耗了多少个Token。</span></p><p>首先，我们通过一个叫做SimpleDirectoryReader的数据加载器，将整个./data/mr_fujino 的目录给加载进来。这里面的每一个文件，都会被当成是一篇文档。</p><p>然后，我们将所有的文档交给了 GPTSimpleVectorIndex 构建索引。顾名思义，它会把文档分段转换成一个个向量，然后存储成一个索引。</p><p>最后，我们会把对应的索引存下来，存储的结果就是一个json文件。后面，我们就可以用这个索引来进行相应的问答。</p><pre><code class=\"language-python\">index = GPTVectorStoreIndex.load_from_disk('index_mr_fujino.json')\nresponse = index.query(\"鲁迅先生在日本学习医学的老师是谁？\")\nprint(response)\n</code></pre><p>要进行问答也没有几行代码，我们通过 GPTSimpleVectorIndex 的 load_from_disk 函数，可以把刚才生成的索引加载到内存里面来。然后对着Index索引调用Query函数，就能够获得问题的答案。可以看到，通过外部的索引，我们可以正确地获得问题的答案。</p><pre><code class=\"language-python\">INFO:llama_index.token_counter.token_counter:&gt; [query] Total LLM token usage: 2984 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total embedding token usage: 34 tokens\n\n鲁迅先生在日本学习医学的老师是藤野严九郎先生。\n</code></pre><p>这么一看，似乎问题特别简单，三行代码就搞定了。别着急，我们再看看别的问题它是不是也能答上来？这次我们来试着问问鲁迅先生是在哪里学习医学的。</p><pre><code class=\"language-python\">response = index.query(\"鲁迅先生去哪里学的医学？\")\nprint(response)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">&gt; Got node text: 藤野先生\n东京也无非是这样。上野的樱花烂熳的时节，望去确也像绯红的轻云，但花下也缺不了成群结队的“清国留学生”的速成班，头顶上盘着大辫子，顶得学生制帽的顶上高高耸起，形成一座富士山。也有解散辫子，盘得平的，除下帽来，油光可鉴，宛如小姑娘的发髻一般，还要将脖子扭几扭。实在标致极了。\n中国留学生会馆的门房里有几本书买，有时还值得去一转；倘在上午，里面的几间洋房里倒也还可以坐坐的。但到傍晚，有...\n\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total LLM token usage: 2969 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total embedding token usage: 26 tokens\n\n鲁迅先生去仙台的医学专门学校学习医学。\n</code></pre><p>它仍然正确回答了问题。那么，我们搜索到的内容，在这个过程里面是如何提交给OpenAI的呢？我们就来看看下面的这段代码就知道了。</p><pre><code class=\"language-python\">from llama_index import QuestionAnswerPrompt\nquery_str = \"鲁迅先生去哪里学的医学？\"\nDEFAULT_TEXT_QA_PROMPT_TMPL = (\n    \"Context information is below. \\n\"\n    \"---------------------\\n\"\n    \"{context_str}\"\n    \"\\n---------------------\\n\"\n    \"Given the context information and not prior knowledge, \"\n    \"answer the question: {query_str}\\n\"\n)\nQA_PROMPT = QuestionAnswerPrompt(DEFAULT_TEXT_QA_PROMPT_TMPL)\n\nresponse = index.query(query_str, text_qa_template=QA_PROMPT)\nprint(response)\n</code></pre><p>这段代码里，我们定义了一个QA_PROMPT的对象，并且为它设计了一个模版。</p><ol>\n<li>这个模版的开头，我们告诉AI，我们为AI提供了一些上下文信息（Context information）。</li>\n<li>模版里面支持两个变量，一个叫做 context_str，另一个叫做query_str。context_str 的地方，在实际调用的时候，会被通过Embedding相似度找出来的内容填入。而 query_str 则是会被我们实际提的问题替换掉。</li>\n<li>实际提问的时候，我们告诉AI，只考虑上下文信息，而不要根据自己已经有的先验知识（prior knowledge）来回答问题。</li>\n</ol><p>我们就是这样，把搜索找到的相关内容以及问题，组合到一起变成一段提示语，让AI能够按照我们的要求来回答问题。那我们再问一次AI，看看答案是不是没有变。</p><p>输出结果：</p><pre><code class=\"language-python\">鲁迅先生去仙台的医学专门学校学习医学。\n</code></pre><p>这一次AI还是正确地回答出了鲁迅先生是去仙台的医学专门学校学习的。我们再试一试，问一些不相干的问题，会得到什么答案，比如我们问问红楼梦里林黛玉和贾宝玉的关系。</p><pre><code class=\"language-python\">QA_PROMPT_TMPL = (\n    \"下面的“我”指的是鲁迅先生 \\n\"\n    \"---------------------\\n\"\n    \"{context_str}\"\n    \"\\n---------------------\\n\"\n    \"根据这些信息，请回答问题: {query_str}\\n\"\n    \"如果您不知道的话，请回答不知道\\n\"\n)\nQA_PROMPT = QuestionAnswerPrompt(QA_PROMPT_TMPL)\n\nresponse = index.query(\"请问林黛玉和贾宝玉是什么关系？\", text_qa_template=QA_PROMPT)\n\nprint(response)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">不知道\n</code></pre><p>可以看到，AI的确按照我们的指令回答不知道，而不是胡答一气。</p><h2>通过llama_index对于文章进行小结</h2><p>还有一个常见的使用llama-index这样“第二大脑”的Python库的应用场景，就是生成文章的摘要。在前面教你如何进行文本聚类的时候，我们已经看到了可以通过合适的提示语（Prompt）做到这一点。不过，如果要总结一篇论文、甚至是一本书，每次最多只能支持4096个Token的API就不太够用了。</p><p>要解决这个问题也并不困难，我们只要进行分段小结，再对总结出来的内容再做一次小结就可以了。我们可以把一篇文章，乃至一本书，构建成一个树状的索引。每一个树里面的节点，就是它的子树下内容的摘要。最后，在整棵树的根节点，得到的就是整篇文章或者整本书的总结了。</p><p><img src=\"https://static001.geekbang.org/resource/image/49/42/49489cc171aee72855930aaf68112b42.jpg?wh=1820x1350\" alt=\"图片\" title=\"通过将文本分片建立树状结构的索引来完成全文的总结\"></p><p>事实上，llama-index本身就内置了这样的功能。下面我们就来看看要实现这个功能，我们的代码应该怎么写。</p><p>首先，我们先来安装一下 spaCy 这个Python库，并且下载一下对应的中文分词分句需要的模型。</p><pre><code class=\"language-python\">pip install spacy\npython -m spacy download zh_core_web_sm\n</code></pre><p>接下来的代码很简单，我们选用了GPTListIndex这个llama-index里最简单的索引结构。不过我们针对自身需求做了两点优化。</p><p>首先，在索引里面，我们指定了一个 LLMPredictor，让我们向OpenAI发起请求的时候，都使用ChatGPT的模型。因为这个模型比较快，也比较便宜。llama-index默认使用的模型是text-davinci-003，价格比gpt-3.5-turbo要贵上十倍。在我们前面只是简单进行几轮对话的时候，这个价格差异还不明显。而如果你要把几十本书都灌进去，那成本上就会差上不少了。我们在这里，设置了模型输出的内容都在1024个Token以内，这样可以确保我们的小结不会太长，不会把一大段不相关的内容都合并到一起去。</p><p>其次，我们定义了使用 SpacyTextSplitter来进行中文文本的分割。llama-index默认的设置对于中文的支持和效果都不太好。不过好在它可以让你自定义使用的文本分割方式。我们选用的文章是中文的，里面的标点符号也都是中文的，所以我们就用了中文的语言模型。我们也限制了分割出来的文本段，最长不要超过2048个Token，这些参数都可以根据你实际用来处理的文章内容和属性自己设置。</p><pre><code class=\"language-python\">from langchain.chat_models import ChatOpenAI\nfrom langchain.text_splitter import SpacyTextSplitter\nfrom llama_index import GPTListIndex, LLMPredictor, ServiceContext\nfrom llama_index.node_parser import SimpleNodeParser\n\n# define LLM\nllm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\", max_tokens=1024))\n\ntext_splitter = SpacyTextSplitter(pipeline=\"zh_core_web_sm\", chunk_size = 2048)\nparser = SimpleNodeParser(text_splitter=text_splitter)\ndocuments = SimpleDirectoryReader('./data/mr_fujino').load_data()\nnodes = parser.get_nodes_from_documents(documents)\n\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor)\n\nlist_index = GPTListIndex(nodes=nodes, service_context=service_context)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">WARNING:llama_index.llm_predictor.base:Unknown max input size for gpt-3.5-turbo, using defaults.\nINFO:llama_index.token_counter.token_counter:&gt; [build_index_from_nodes] Total LLM token usage: 0 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [build_index_from_nodes] Total embedding token usage: 0 tokens\n</code></pre><p>GPTListIndex在构建索引的时候，并不会创建Embedding，所以索引创建的时候很快，也不消耗Token数量。它只是根据你设置的索引结构和分割方式，建立了一个List的索引。</p><p>接着，我们就可以让AI帮我们去小结这篇文章了。同样的，提示语本身很重要，所以我们还是强调了文章内容是鲁迅先生以“我”这个第一人称写的。因为我们想要的是按照树状结构进行文章的小结，所以我们设定了一个参数，叫做 response_mode = “tree_summarize”。这个参数，就会按照上面我们所说的树状结构把整个文章总结出来。</p><p>实际上，它就是将每一段文本分片，都通过query内的提示语小结。再对多个小结里的内容，再次通过query里的提示语继续小结。</p><pre><code class=\"language-python\">response = list_index.query(\"下面鲁迅先生以第一人称‘我’写的内容，请你用中文总结一下:\", response_mode=\"tree_summarize\")\nprint(response)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">INFO:llama_index.indices.common_tree.base:&gt; Building index from nodes: 2 chunks\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total LLM token usage: 9787 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total embedding token usage: 0 tokens\n鲁迅先生回忆了自己在日本学医期间的经历，描述了自己在解剖实习中的经历，以及与教授藤野先生的交往。他还提到了一些不愉快的事情，比如遭到同学的诽谤和歧视，以及看到中国人被枪毙时的感受。最后，他告诉藤野先生自己将不再学医，而是想学生物学。他想起了一个人，这个人是他的老师，他对鲁迅很热心，给他很多鼓励和教诲。鲁迅现在只有他的照片，但是每次看到他的照片，都会让他感到勇气和良心发现。\n</code></pre><p>可以看到，我们只用了几行代码就完成了整个文章的小结，返回的结果整体上来说也还算不错。</p><h2>引入多模态，让llamd-index能够识别小票</h2><p>llama_index不光能索引文本，很多书里面还有图片、插画这样的信息。llama_index一样可以索引起来，供你查询，这也就是所谓的多模态能力。当然，这个能力其实是通过一些多模态的模型，把文本和图片能够联系到一起做到的。在整个课程的第三部分，我们也会专门来看看这些图像的多模态模型是怎么样的。</p><p>这里我们就来看一个llama_index<a href=\"https://github.com/jerryjliu/llama_index/blob/main/examples/multimodal/Multimodal.ipynb\">官方样例库</a>里面给到的例子，也就是把吃饭的小票都拍下来。然后询问哪天吃了什么，花了多少钱。</p><pre><code class=\"language-python\">from llama_index import SimpleDirectoryReader, GPTVectorStoreIndex\nfrom llama_index.readers.file.base import DEFAULT_FILE_EXTRACTOR, ImageParser\nfrom llama_index.response.notebook_utils import display_response, display_image\nfrom llama_index.indices.query.query_transform.base import ImageOutputQueryTransform\n\nimage_parser = ImageParser(keep_image=True, parse_text=True)\nfile_extractor = DEFAULT_FILE_EXTRACTOR\nfile_extractor.update(\n{\n    \".jpg\": image_parser,\n    \".png\": image_parser,\n    \".jpeg\": image_parser,\n})\n\n# NOTE: we add filename as metadata for all documents\nfilename_fn = lambda filename: {'file_name': filename}\n\nreceipt_reader = SimpleDirectoryReader(\n    input_dir='./data/receipts', \n    file_extractor=file_extractor, \n    file_metadata=filename_fn,\n)\nreceipt_documents = receipt_reader.load_data()\n</code></pre><p>要能够索引图片，我们引入了ImageParser这个类，这个类背后，其实是一个基于OCR扫描的模型 <a href=\"https://huggingface.co/naver-clova-ix/donut-base-finetuned-cord-v2\">Donut</a>。它通过一个视觉的Encoder和一个文本的Decoder，这样任何一个图片能够变成一个一段文本，然后我们再通过OpenAI的Embedding把这段文本变成了一个向量。</p><p>我们仍然只需要使用简单的SimpleDirectoryReader，我们通过指定FileExtractor，会把对应的图片通过ImageParser解析成为文本，并最终成为向量来用于检索。</p><p>然后，我们仍然只需要向我们的索引用自然语言提问，就能找到对应的图片了。在提问的时候，我们专门制定了一个ImageOutputQueryTransform，主要是为了在输出结果的时候，能够在图片外加上 <code>&lt;img&gt;</code> 的标签方便在Notebook里面显示。</p><pre><code class=\"language-python\">receipts_index = GPTVectorStoreIndex.from_documents(receipt_documents)\nreceipts_response = receipts_index.query(\n    'When was the last time I went to McDonald\\'s and how much did I spend. \\\n    Also show me the receipt from my visit.',\n    query_transform=ImageOutputQueryTransform(width=400)\n)\n\ndisplay_response(receipts_response)\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">INFO:llama_index.token_counter.token_counter:&gt; [query] Total LLM token usage: 1004 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total embedding token usage: 30 tokens\n\nFinal Response:&nbsp;The last time you went to McDonald's was on 03/10/2018 at 07:39:12 PM and you spent $26.15. Here is the receipt from your visit:\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/18/08/181747bf1e95664b3929db6ec4a46b08.jpg?wh=750x1000\" alt=\"图片\"></p><p>可以看到，答案中不仅显示出了对应的图片，也给出了正确的答案，这也要归功于OpenAI对于任意文本强大的处理能力。</p><p>我们可以单独解析一下图片，看看对应的文本内容是什么。</p><pre><code class=\"language-python\">output_image = image_parser.parse_file('./data/receipts/1100-receipt.jpg')\nprint(output_image.text)\n</code></pre><p>输出结果：</p><pre><code class=\"language-plain\">&lt;s_menu&gt;&lt;s_nm&gt; Story&lt;/s_nm&gt;&lt;s_num&gt; 16725 Stony Platin Rd&lt;/s_nm&gt;&lt;s_num&gt; Store#:&lt;/s_nm&gt;&lt;s_num&gt; 3659&lt;/s_num&gt;&lt;s_price&gt; 700-418-8362&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; Welcome to all day breakfast dormist O Md Donald's&lt;/s_nm&gt;&lt;s_num&gt; 192&lt;/s_num&gt;&lt;s_price&gt; 192&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; QTY ITEM&lt;/s_nm&gt;&lt;s_num&gt; OTAL&lt;/s_num&gt;&lt;s_unitprice&gt; 03/10/2018&lt;/s_unitprice&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 07:39:12 PM&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; Delivery&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 0.00&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; 10 McNuggets EVM&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 10.29&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; Barbeque Sauce&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 1&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; Barbeque Sauce&lt;/s_nm&gt;&lt;s_num&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 0.40&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; L Coke&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 0.40&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; M French Fries&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 3.99&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; HM GrChS S-Fry Yog&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;sep/&gt;&lt;s_nm&gt; Smoonya&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;sep/&gt;&lt;s_nm&gt; HM Apple Juice&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 2.89&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; Cookies&lt;/s_nm&gt;&lt;s_cnt&gt; 6&lt;/s_cnt&gt;&lt;s_price&gt; 2.89&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; Choc Chip Cookie&lt;/s_nm&gt;&lt;s_cnt&gt; 6&lt;/s_cnt&gt;&lt;s_price&gt; 1.19&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; Baked Apple Pie&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 3.29&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; French Fries&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 2.99&lt;/s_price&gt;&lt;sep/&gt;&lt;s_nm&gt; Iced Tea&lt;/s_nm&gt;&lt;s_cnt&gt; 1&lt;/s_cnt&gt;&lt;s_price&gt; 2.99&lt;/s_price&gt;&lt;/s_menu&gt;&lt;s_sub_total&gt;&lt;s_subtotal_price&gt; 25.04&lt;/s_subtotal_price&gt;&lt;s_tax_price&gt; 1.11&lt;/s_tax_price&gt;&lt;/s_sub_total&gt;&lt;s_total&gt;&lt;s_total_price&gt; 26.15&lt;/s_total_price&gt;&lt;s_changeprice&gt; 0.00&lt;/s_changeprice&gt;&lt;s_creditcardprice&gt; 26.15&lt;/s_creditcardprice&gt;&lt;/s_total&gt;\n\n\n\n</code></pre><p>可以看到，对应的就是OCR后的文本结果，里面的确有对应我们去的店铺的名字和时间，以及消费的金额。</p><p>围绕OpenAI以及整个大语言模型的生态还在快速发展中，所以llama-index这个库也在快速迭代。我自己在使用的过程中，也遇到各种各样的小Bug。对于中文的支持也有各种各样的小缺陷。不过，作为开源项目，它已经有一个很不错的生态了，特别是提供了大量的DataConnector，既包括PDF、ePub这样的电子书格式，也包括YouTube、Notion、MongoDB这样外部的数据源、API接入的数据，或者是本地数据库的数据。你可以在 <a href=\"https://llamahub.ai/\">llamahub.ai</a> 看到社区开发出来的读取各种不同数据源格式的DataConnector。</p><p><img src=\"https://static001.geekbang.org/resource/image/d1/91/d19d1dd9888785c85bbc3ac5aec08191.png?wh=1237x1029\" alt=\"图片\"></p><h2>小结</h2><p>好了，相信经过这一讲，你已经能够上手使用llama-index这个Python包了。通过它，你可以快速将外部的资料库变成索引，并且通过它提供的query接口快速向文档提问，也能够通过将文本分片，并通过树状的方式管理索引并进行小结。</p><p>llama-index还有很多其他功能，这个Python库仍然在发展过程中，不过已经非常值得拿来使用，加速你开发大语言模型类的相关应用了。相关的文档，可以在<a href=\"https://gpt-index.readthedocs.io/en/latest/\">官网</a>看到。对应的代码也是开源的，遇到问题也可以直接去<a href=\"https://github.com/jerryjliu/gpt_index\">源代码</a>里一探究竟。</p><p>llama-index其实给出了一种使用大语言模型的设计模式，我称之为“第二大脑”模式。通过先将外部的资料库索引，然后每次提问的时候，先从资料库里通过搜索找到有相关性的材料，然后再通过AI的语义理解能力让AI基于搜索到的结果来回答问题。</p><p><img src=\"https://static001.geekbang.org/resource/image/e4/6c/e4ae3fbeaa82d82e317dfcef40679f6c.jpg?wh=1896x1292\" alt=\"图片\"></p><p>其中，前两步的索引和搜索，我们可以使用OpenAI的Embedding接口，也可以使用其它的大语言模型的Embedding，或者传统的文本搜索技术。只有最后一步的问答，往往才必须使用OpenAI的接口。我们不仅可以索引文本信息，也可以通过其他的模型来把图片变成文本进行索引，实现所谓的多模态功能。</p><p>希望通过今天的这几个例子，你也能开始建立起自己的“第二大脑”资料库，能够将自己的数据集交给AI进行索引，获得一个专属于你自己的AI。</p><h2>课后练习</h2><ol>\n<li>llama-index的生态，不仅支持各种各样的DataConnector去加载数据，后端也支持各种形式的索引，比如在语义搜索里面我们介绍过的 Faiss、Pinecone、Weaviate 它都是支持的。除了这些之外，你能看看 llama-index 还有哪些形式的索引吗？除了进行问答和文章概括之外，你觉得这个库还能帮助我们做什么事情？</li>\n<li>现在有很多应用，在你把文档上传之后，还会给你一系列的提示，告诉你可以向对应的书或者论文问什么问题。比如 <a href=\"https://scispace.com/\">SCISPACE</a>，你能想想这些问题是怎么来的吗？</li>\n</ol><p>期待能在评论区看到你的分享，也欢迎你把这节课分享给感兴趣的朋友，我们下一讲再见。</p><h2>推荐阅读</h2><p>llama-index的功能非常强大，并且源代码里也专门提供了示例部分。你可以去看一下它的官方文档以及示例，了解它可以用来干什么。</p><ol>\n<li>官方文档：<a href=\"https://gpt-index.readthedocs.io/en/latest/\">https://gpt-index.readthedocs.io/en/latest/</a></li>\n<li>源码以及示例：<a href=\"https://github.com/jerryjliu/llama_index\">https://github.com/jerryjliu/llama_index</a></li>\n</ol>","neighbors":{"left":{"article_title":"09｜语义检索，利用Embedding优化你的搜索功能","id":644795},"right":{"article_title":"11｜省下钱买显卡，如何利用开源模型节约成本？","id":646363}},"comments":[{"had_liked":false,"id":388077,"user_name":"Owen","can_delete":false,"product_type":"c1","uid":2403622,"ip_address":"广东","ucode":"FDE0D574B8ED5A","user_header":"https://static001.geekbang.org/account/avatar/00/24/ad/26/767527f6.jpg","comment_is_top":true,"comment_ctime":1709282167,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"截止到目前，最新能运行的代码\n\n&#39;&#39;&#39;\n归纳总结文章内容\n&#39;&#39;&#39;\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.text_splitter import SpacyTextSplitter\nfrom llama_index.core import SummaryIndex, ServiceContext, SimpleDirectoryReader\nfrom llama_index.core.node_parser import SentenceSplitter\n\ndocuments = SimpleDirectoryReader(input_dir=&quot;data&quot;).load_data() # 只能填写文件夹，不能具体到文件\n\nservice_context = ServiceContext.from_defaults(\n    llm=ChatOpenAI(temperature=0, model_name=&quot;gpt-3.5-turbo&quot;, max_tokens=1000, n=1),\n    node_parser=SentenceSplitter(chunk_size=512, chunk_overlap=20),\n)\n\nindex = SummaryIndex.from_documents(documents = documents, service_context = service_context)\nquery_engine = index.as_query_engine()\nresponse = query_engine.query(&quot;用中文总结这个故事&quot;)\n\nprint(response)","like_count":6},{"had_liked":false,"id":377612,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"广东","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":true,"comment_ctime":1688877102,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"《藤野先生》输出摘要的代码，因为代码更新，有bug，参考https:&#47;&#47;gpt-index.readthedocs.io&#47;en&#47;latest&#47;guides&#47;primer&#47;usage_pattern.html更新代码如下：\n\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.text_splitter import SpacyTextSplitter\nfrom llama_index import ListIndex, LLMPredictor, ServiceContext\nfrom llama_index import (\n    VectorStoreIndex,\n    get_response_synthesizer,\n)\nfrom llama_index.retrievers import VectorIndexRetriever\nfrom llama_index.query_engine import RetrieverQueryEngine\nfrom llama_index.node_parser import SimpleNodeParser\n\n# define LLM\nllm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=&quot;gpt-3.5-turbo&quot;, max_tokens=1024))\n\ntext_splitter = SpacyTextSplitter(pipeline=&quot;zh_core_web_sm&quot;, chunk_size = 2048)\nparser = SimpleNodeParser(text_splitter=text_splitter)\ndocuments = SimpleDirectoryReader(&#39;.&#47;data&#47;mr_fujino&#39;).load_data()\n\nindex = ListIndex.from_documents(documents)\nretriever = index.as_retriever()\n\nquery_engine = RetrieverQueryEngine.from_args(retriever, response_mode=&#39;tree_summarize&#39;)\nresponse = query_engine.query(&quot;下面鲁迅先生以第一人称‘我’写的内容，请你用中文总结一下:&quot;)\n\nprint(response)\n\n另目前文档中，&quot;我把从网上找到的《藤野先生》这篇文章变成了一个 txt 文件，放在了 data&#47;mr_fujino 这个目录下。我们的代码也非常简单，一共没有几行。&quot;此文字下方代码的，第7行，index = GPTSimpleVectorIndex.from_documents(documents)中，“GPTSimpleVectorIndex”还未改成“GPTVectorStoreIndex” ；第9行，更改为index.storage_context.persist(&#39;index_mr_fujino&#39;)。\n请更改，方便后续同学学习并运行代码。","like_count":7},{"had_liked":false,"id":373999,"user_name":"Wise","can_delete":false,"product_type":"c1","uid":1972275,"ip_address":"黑龙江","ucode":"35818A0415BBD4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqQOqqTaRhPyuHICBpPfMcnNgg7xXmkrNZwlsibyLekYzNsuHdwdk1JLTUicbm4Oq78Zx17TFib2EusQ/132","comment_is_top":false,"comment_ctime":1683467747,"is_pvip":false,"replies":[{"id":136838,"content":"👍\n\n如果还想要用0.5.x运行，参看以下\n\n“llama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &quot;llama-index==0.5.27&quot; 退回到 0.5 系列的版本”\n\n晚点我看一下更新代码到0.6.x 版本","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684746671,"ip_address":"上海","comment_id":373999,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"在llama_index V0.6.1 版本中，没有GPTSimpleVectorIndex 类了\nimport openai, os\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader\nos.environ[&quot;OPENAI_API_KEY&quot;] = &#39;&#39;\n# 加载 documents\ndocuments = SimpleDirectoryReader(&#39;.&#47;data&#47;mr_fujino&#39;).load_data()\nindex = GPTVectorStoreIndex.from_documents(documents)\nindex.storage_context.persist(&#39;index_mr_fujino&#39;)\n\n# 从磁盘重新加载：\nfrom llama_index import StorageContext, load_index_from_storage\n# rebuild storage context\nstorage_context = StorageContext.from_defaults(persist_dir=&quot;.&#47;index_mr_fujino&quot;)\n# load index\nindex = load_index_from_storage(storage_context)\nquery_engine = index.as_query_engine()\nresponse = query_engine.query(&quot;鲁迅先生在日本学习医学的老师是谁？&quot;)\nprint(response)\n\n参考官方文档连接：https:&#47;&#47;gpt-index.readthedocs.io&#47;en&#47;latest&#47;getting_started&#47;starter_example.html","like_count":20,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619012,"discussion_content":"👍\n\n如果还想要用0.5.x运行，参看以下\n\n“llama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &#34;llama-index==0.5.27&#34; 退回到 0.5 系列的版本”\n\n晚点我看一下更新代码到0.6.x 版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684746671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1503717,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoWZh2ibhHevq5ndQFMK0Z28fO0bFVd3WxslfkHUlX5YPMPhSq0dqyn4F1ozeLcf8wHGfwG6EiaV5Qw/132","nickname":"Geek_6bdac7","note":"","ucode":"E4AAB2DD740050","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620872,"discussion_content":"请老师修改啊，这么多付费用户，循环踩坑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686636057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2724787,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/EcSxSBnUJbph9JQibNFLR3EbGg6yfeicCgmZFtlhuibEBrtEG6VPF4b2cjEm4jFGXcdW2wbb92Nxp9D3XN5n3NE6Q/132","nickname":"灯","note":"","ucode":"049FBF342B40A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618380,"discussion_content":"大佬，后面的只考虑上下文信息，而不要根据自己已经有的先验知识那里怎么改呀\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684216498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1106310,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/p6AJdaO6KcicsrJPZSIExSLaicibHLtXHkG4XiauE2fuMhPRNMrCibHt2jehO3AYy8EJbCUBbn2sV89ZBb2U4FuG71Q/132","nickname":"Geek_8e076c","note":"","ucode":"07B12DF20722DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2724787,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/EcSxSBnUJbph9JQibNFLR3EbGg6yfeicCgmZFtlhuibEBrtEG6VPF4b2cjEm4jFGXcdW2wbb92Nxp9D3XN5n3NE6Q/132","nickname":"灯","note":"","ucode":"049FBF342B40A8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618705,"discussion_content":"query_engine = index.as_query_engine(\n    text_qa_template=QA_PROMPT\n)\n官方文档：https://gpt-index.readthedocs.io/en/latest/how_to/customization/custom_prompts.html","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1684466563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":618380,"ip_address":"广东","group_id":0},"score":618705,"extra":""}]},{"author":{"id":2724787,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/EcSxSBnUJbph9JQibNFLR3EbGg6yfeicCgmZFtlhuibEBrtEG6VPF4b2cjEm4jFGXcdW2wbb92Nxp9D3XN5n3NE6Q/132","nickname":"灯","note":"","ucode":"049FBF342B40A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618374,"discussion_content":"好多坑，幸好有各位大佬，不然都执行不下去了。太浪费时间\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684215624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372134,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"湖南","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1680771580,"is_pvip":false,"replies":[{"id":135894,"content":"根据OpenAI的协议\n\n1. 通过ChatGPT界面提交的会被内部看到，审核，并用于训练\n2. 通过API提交的不会用于训练","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680974674,"ip_address":"日本","comment_id":372134,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"想请教下老师，我们喂的语料，会被其他人看到使用吗？","like_count":15,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612890,"discussion_content":"根据OpenAI的协议\n\n1. 通过ChatGPT界面提交的会被内部看到，审核，并用于训练\n2. 通过API提交的不会用于训练","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680974674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1355990,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/d6/612ce428.jpg","nickname":"cl","note":"","ucode":"82B59E24B8A42F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":615566,"discussion_content":"老师我补充下提问，是否有这种可能：虽然通过api提交的问题不会用于训练，但openai存储了这些提交的问题（并在将来某个时刻在无人监管的情况下把数据喂给gpt）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682331151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":612890,"ip_address":"云南","group_id":0},"score":615566,"extra":""},{"author":{"id":1235077,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/4kF5cFK9MN6WX9Dibodh8pWIib06icoSgSPb6pAhGVjO3gpD72R77eicGkCUWfl3feNtn2icEibhUvgWt890rYLYGoqg/132","nickname":"chitanda","note":"","ucode":"B3E28E1C8E410B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1355990,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/d6/612ce428.jpg","nickname":"cl","note":"","ucode":"82B59E24B8A42F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626328,"discussion_content":"就好比微信说他们不看不记录你的聊天一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1692802121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":615566,"ip_address":"四川","group_id":0},"score":626328,"extra":""}]},{"author":{"id":1430132,"avatar":"https://static001.geekbang.org/account/avatar/00/15/d2/74/7861f504.jpg","nickname":"马听","note":"","ucode":"93D83CB5FAE5AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612676,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680844295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372016,"user_name":"daz2yy","can_delete":false,"product_type":"c1","uid":1008723,"ip_address":"广东","ucode":"639A67961EC893","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/53/c93b8110.jpg","comment_is_top":false,"comment_ctime":1680599850,"is_pvip":false,"replies":[{"id":135868,"content":"可以通过Few-Shot的方式，在Prompt里面给AI一些例子，类似于下面这样，具体Prompt你自己调了多试一下。\n\n====\n我们的问题一般用这样的格式回答：\n\n问题：blablabla\n回答：\n1. 文档地址 blabla\n2. 操作步骤 blabla\n\n===\n以下是上下文\n{context_str}\n\n问题：{question_str}\n回答：\n","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680973026,"ip_address":"中国香港","comment_id":372016,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"老师，请问下一个问题，我把它用作 QA 系统的时候有个问题，原本 QA 就有标准的回答模版，里面包括有文档地址、操作步骤等；如果让 GPT 根据这个模版来回答问题，他会自由发挥，会漏掉一部分内容；想拥有 AI 自由对话的能力，又想有固定的回答模版这个怎么能较好的兼顾呢？","like_count":11,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612863,"discussion_content":"可以通过Few-Shot的方式，在Prompt里面给AI一些例子，类似于下面这样，具体Prompt你自己调了多试一下。\n\n====\n我们的问题一般用这样的格式回答：\n\n问题：blablabla\n回答：\n1. 文档地址 blabla\n2. 操作步骤 blabla\n\n===\n以下是上下文\n{context_str}\n\n问题：{question_str}\n回答：\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680973026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373384,"user_name":"Terry","can_delete":false,"product_type":"c1","uid":1102795,"ip_address":"浙江","ucode":"8C446621DA44CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/cb/08bbf097.jpg","comment_is_top":false,"comment_ctime":1682437891,"is_pvip":false,"replies":[{"id":136505,"content":"llama_index的重点放在了Index上，也就是通过各种方式为文本建立索引，有通过LLM的，也有很多并非和LLM相关的。\n\nlangchain的重点在 agent 和 chain 上，也就是流程组合上。\n\n可以根据你的应用组合两个，如果你觉得问答效果不好，可以多研究一下llama-index。如果你希望有更多外部工具或者复杂流程可以用，可以多研究一下langchain。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683091278,"ip_address":"上海","comment_id":373384,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"老师，请教一下langchain我理解也是一个LLM应用框架，它的功能和版本也更新很快。它和llama_index的区分是什么？在LLM应用开发上，我们一般怎么选择会比较好？","like_count":8,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616745,"discussion_content":"llama_index的重点放在了Index上，也就是通过各种方式为文本建立索引，有通过LLM的，也有很多并非和LLM相关的。\n\nlangchain的重点在 agent 和 chain 上，也就是流程组合上。\n\n可以根据你的应用组合两个，如果你觉得问答效果不好，可以多研究一下llama-index。如果你希望有更多外部工具或者复杂流程可以用，可以多研究一下langchain。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1683091278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372559,"user_name":"马听","can_delete":false,"product_type":"c1","uid":1430132,"ip_address":"上海","ucode":"93D83CB5FAE5AD","user_header":"https://static001.geekbang.org/account/avatar/00/15/d2/74/7861f504.jpg","comment_is_top":false,"comment_ctime":1681285538,"is_pvip":false,"replies":[{"id":136107,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681614077,"ip_address":"上海","comment_id":372559,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"分享一个加载MySQL数据的例子：\nfrom llama_index import GPTSimpleVectorIndex,download_loader\n\nDatabaseReader = download_loader(&#39;DatabaseReader&#39;)\n\nreader = DatabaseReader(\n    scheme = &quot;mysql&quot;, # Database Scheme\n    host = &quot;localhost&quot;, # Database Host\n    port = &quot;3306&quot;, # Database Port\n    user = &quot;martin&quot;, # Database User\n    password = &quot;xxxxxx&quot;, # Database Password\n    dbname = &quot;martin&quot;, # Database Name\n)\n\nquery = f&quot;&quot;&quot;\nselect * from student_info\n&quot;&quot;&quot;\n\ndocuments = reader.load_data(query=query)\nprint(documents)","like_count":8,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613949,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681614077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2810467,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/e2/63/fdba03fc.jpg","nickname":"dp","note":"","ucode":"385B2116C6444E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613668,"discussion_content":"python3需要安装PyMySQL，scheme = &#34;mysql+pymysql&#34;,","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681449718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2810467,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/e2/63/fdba03fc.jpg","nickname":"dp","note":"","ucode":"385B2116C6444E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613649,"discussion_content":"scheme = &#34;mysql&#34;, # Database Scheme  \nLlama_index可以支持mysql的连接器么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681439088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374126,"user_name":"Oxygen Au 昕","can_delete":false,"product_type":"c1","uid":1802569,"ip_address":"美国","ucode":"9843160B28A31B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/81/49/2451a946.jpg","comment_is_top":false,"comment_ctime":1683623634,"is_pvip":false,"replies":[{"id":136837,"content":"llama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &quot;llama-index==0.5.27&quot; 退回到 0.5 系列的版本\n\n晚点我看一下更新代码到0.6.x 版本","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684746639,"ip_address":"上海","comment_id":374126,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"\nresponse = list_index.query(&quot;下面鲁迅先生以第一人称‘我’写的内容，请你用中文总结一下:&quot;, response_mode=&quot;tree_summarize&quot;)\nprint(response)\n\n\n上面这段代码报错，AttributeError: &#39;GPTListIndex&#39; object has no attribute &#39;query&#39; ， 我用的是llama-index 0.6.1\n\n下面是正确的代码\nquery_engine = list_index.as_query_engine(response_mode=&quot;tree_summarize&quot;)\nresponse = query_engine.query(&quot;下面鲁迅先生以第一人称‘我’写的内容，请你用中文总结一下:&quot;)\nprint(response)\n\n结果： 鲁迅先生在日本学习医学时遇到了藤野严九郎教授，他很有学问，对学生也很关心，甚至帮助鲁迅修改讲义。但鲁迅当时不够用功，有时也很任性。在学习中，他遇到了一些困难和不愉快的事情，最终决定离开医学去学习生物学。离开前，藤野先生送给他一张照片，并希望他能保持联系。鲁迅很久没有和任何人通信，但想起了这位热心的老师，他的照片挂在鲁迅的房间里，每当他疲倦时看到照片就会感到勇气和良心发现。","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619011,"discussion_content":"llama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &#34;llama-index==0.5.27&#34; 退回到 0.5 系列的版本\n\n晚点我看一下更新代码到0.6.x 版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684746639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374578,"user_name":"黄智荣","can_delete":false,"product_type":"c1","uid":1027823,"ip_address":"福建","ucode":"3C84C8654CCB11","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/ef/cbb8d881.jpg","comment_is_top":false,"comment_ctime":1684202234,"is_pvip":false,"replies":[{"id":136805,"content":"👍，这个一般被称之为 Self-Ask，的确是一个好办法。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684725358,"ip_address":"新加坡","comment_id":374578,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"现在有很多应用，在你把文档上传之后，还会给你一系列的提示，告诉你可以向对应的书或者论文问什么问题。\n------ 可以根据索引的文本，让chatgpt 设计几个提问的问题","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618950,"discussion_content":"👍，这个一般被称之为 Self-Ask，的确是一个好办法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684725358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374037,"user_name":"勇.Max","can_delete":false,"product_type":"c1","uid":1248128,"ip_address":"北京","ucode":"AE5DBC10805A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/0b/80/a0533acb.jpg","comment_is_top":false,"comment_ctime":1683527714,"is_pvip":false,"replies":[{"id":136633,"content":"收到，马上更新，感谢提醒🌹","user_name":"编辑回复","user_name_real":"编辑","uid":2843479,"ctime":1683529343,"ip_address":"北京","comment_id":374037,"utype":2}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"上面from llama_index import GPTSimpleVectorIndex会报错，因为现在已经改成了GPTVectorStoreIndex。\nfrom llama_index import GPTVectorStoreIndex &#47;&#47;老师看到后可以更新下\n","like_count":2,"discussions":[{"author":{"id":2843479,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","nickname":"小虎子🐯","note":"","ucode":"4C9530B3FB407B","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617360,"discussion_content":"收到，马上更新，感谢提醒🌹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683529343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":2,"child_discussions":[{"author":{"id":1153707,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9a/ab/fd201314.jpg","nickname":"小耿","note":"","ucode":"1C8B66C738D33B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2843479,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","nickname":"小虎子🐯","note":"","ucode":"4C9530B3FB407B","race_medal":0,"user_type":8,"is_pvip":false},"discussion":{"id":618822,"discussion_content":"第一段代码调用的地方没改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684584478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":617360,"ip_address":"泰国","group_id":0},"score":618822,"extra":""},{"author":{"id":2843479,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","nickname":"小虎子🐯","note":"","ucode":"4C9530B3FB407B","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":1153707,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9a/ab/fd201314.jpg","nickname":"小耿","note":"","ucode":"1C8B66C738D33B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618845,"discussion_content":"好嘞，再次感谢提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684641441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":618822,"ip_address":"河北","group_id":0},"score":618845,"extra":""}]}]},{"had_liked":false,"id":372079,"user_name":"Viola","can_delete":false,"product_type":"c1","uid":3581980,"ip_address":"摩尔多瓦","ucode":"0F43DBBE822AB6","user_header":"https://static001.geekbang.org/account/avatar/00/36/a8/1c/d231cbfb.jpg","comment_is_top":false,"comment_ctime":1680688370,"is_pvip":false,"replies":[{"id":135867,"content":"更新一下 llama-index 的版本，llama-index的接口从 0.4 到 0.5 做了比较大的更新。这一讲的内容，也是根据 0.5 的更新重新改过的。用最新版吧。\n\npip install -U llama-index","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680972772,"ip_address":"中国香港","comment_id":372079,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100541001,"comment_content":" 有同学遇到吗？\ntype object &#39;GPTSimpleVectorIndex&#39; has no attribute &#39;from_documents&#39;","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612862,"discussion_content":"更新一下 llama-index 的版本，llama-index的接口从 0.4 到 0.5 做了比较大的更新。这一讲的内容，也是根据 0.5 的更新重新改过的。用最新版吧。\n\npip install -U llama-index","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680972772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057681,"avatar":"https://static001.geekbang.org/account/avatar/00/10/23/91/e2943923.jpg","nickname":"荆凯","note":"","ucode":"E1A8CDA0116082","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617740,"discussion_content":"5月份来更新：llama-index 如果运行教程中代码，也仍然是遇到问题，因为 最先版本到了0.6x; 需要人工指定 0.5.x，运行教程中代码才生效。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683818757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371957,"user_name":"hawk","can_delete":false,"product_type":"c1","uid":1158840,"ip_address":"福建","ucode":"02582709C79474","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL1ibGVhrcN2dn9g9ib0NRotH876fWRVdgMSiaW4bKtBZJjNUVblh8IYacaahYzAnUhcYZn8V0eXzgnw/132","comment_is_top":false,"comment_ctime":1680547074,"is_pvip":false,"replies":[{"id":135756,"content":"是的，组合就是通过 PromptTemplate 实现的","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680586613,"ip_address":"上海","comment_id":371957,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"这些预选的问题，应该也是通过组合特定的提示语，和段落摘要，扔给GPT得到的吧？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612262,"discussion_content":"是的，组合就是通过 PromptTemplate 实现的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1680586614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2187437,"avatar":"https://static001.geekbang.org/account/avatar/00/21/60/ad/03351e6e.jpg","nickname":"xbc","note":"","ucode":"03F1FD7B8CA32F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":612385,"discussion_content":"也可以聚几类，然后让gpt挨个总结吧?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680628768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":612262,"ip_address":"海南","group_id":0},"score":612385,"extra":""}]},{"author":{"id":1574748,"avatar":"https://static001.geekbang.org/account/avatar/00/18/07/5c/2b75c836.jpg","nickname":"陈鹏","note":"","ucode":"777F23D9178A6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613505,"discussion_content":"ChatPDF在上传了文件后，有几个demo问题，这些应该就是预制的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681361538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"吉林","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374406,"user_name":"牛味浓龙魏流","can_delete":false,"product_type":"c1","uid":1605322,"ip_address":"四川","ucode":"FB58F144635B2A","user_header":"https://static001.geekbang.org/account/avatar/00/18/7e/ca/0689da8f.jpg","comment_is_top":false,"comment_ctime":1684113429,"is_pvip":false,"replies":[{"id":136817,"content":"没什么关系，只是封装了一部分对于OpenAI的调用，你也可以不调用OpenAI的API，调用其他的大语言模型，比如 Claude 或者 Cohere。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684726981,"ip_address":"新加坡","comment_id":374406,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"所以llama_index跟chatGPT没什么关系是吗。。还是说这个包本身也在跟openAI打交道，看代码看不出来","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618964,"discussion_content":"没什么关系，只是封装了一部分对于OpenAI的调用，你也可以不调用OpenAI的API，调用其他的大语言模型，比如 Claude 或者 Cohere。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684726982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2732594,"avatar":"","nickname":"Norman","note":"","ucode":"6C05C82FB543D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":633346,"discussion_content":"想请问老师，llama_index可以用来调用文心一言的erniebot模型吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702021872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":618964,"ip_address":"广东","group_id":0},"score":633346,"extra":""}]}]},{"had_liked":false,"id":374256,"user_name":"东临沧海","can_delete":false,"product_type":"c1","uid":1143029,"ip_address":"浙江","ucode":"300AA289093E06","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/f5/afdf4a68.jpg","comment_is_top":false,"comment_ctime":1683792296,"is_pvip":false,"replies":[{"id":136815,"content":"这周会更新一下github里的pip requirements文件，锁住版本号。\n但是想llama-index这样不讲武德每次小版本更新都不向前兼容的函数库的确也不常见……\n\n再贴一次吧：\n\nllama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &quot;llama-index==0.5.27&quot; 退回到 0.5 系列的版本\n\n晚点我看一下更新代码到0.6.x 版本\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684726502,"ip_address":"新加坡","comment_id":374256,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"建议老师安装的库文件标明一下版本号，遇到这样问题好几次了，每次都要浪费大量时间。\nllama_index版本都到v0.6.5，更新太快了","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618961,"discussion_content":"这周会更新一下github里的pip requirements文件，锁住版本号。\n但是想llama-index这样不讲武德每次小版本更新都不向前兼容的函数库的确也不常见……\n\n再贴一次吧：\n\nllama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &#34;llama-index==0.5.27&#34; 退回到 0.5 系列的版本\n\n晚点我看一下更新代码到0.6.x 版本\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684726502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374091,"user_name":"snow","can_delete":false,"product_type":"c1","uid":1177505,"ip_address":"日本","ucode":"23CC0DFE866513","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/a1/49643e20.jpg","comment_is_top":false,"comment_ctime":1683600626,"is_pvip":false,"replies":[{"id":136847,"content":"llama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &quot;llama-index==0.5.27&quot; 退回到 0.5 系列的版本\n\n晚点我看一下更新代码到0.6.x 版本","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684748846,"ip_address":"上海","comment_id":374091,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"想请教下老师，为什么我在调用query 的时候，提示说BaseQueryEngine.query() got an unexpected keyword argument &#39;response_mode&#39; ？  发现当定义 list_index = GPTListIndex(nodes=nodes, service_context=service_context)， 没法直接调用list_index.query() ,而需要  list_index.as_query_engine().query() 这样子调用。 ","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619026,"discussion_content":"llama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &#34;llama-index==0.5.27&#34; 退回到 0.5 系列的版本\n\n晚点我看一下更新代码到0.6.x 版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684748846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013081,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/59/bd80584f.jpg","nickname":"石头","note":"","ucode":"D72F9EDFABFFBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618497,"discussion_content":"llama-index版本更新了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684292935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374063,"user_name":"CCC","can_delete":false,"product_type":"c1","uid":1003738,"ip_address":"浙江","ucode":"2E254444098267","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/da/ed4803cb.jpg","comment_is_top":false,"comment_ctime":1683544505,"is_pvip":false,"replies":[{"id":136846,"content":"取决于你是否使用openai的embedding，这一讲里是会调用API的\n后面我们会讲通过开源模型来生成一个embedding的方法，那个可以不调用OpenAI的API，只需要本地加载开源模型就可以了","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684748828,"ip_address":"上海","comment_id":374063,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"老师index创建的过程中会把文本内容传给openai进行embedding召回吗，这个地方不太理解索引创建是完全本地的还是需要openai的向量数据","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619025,"discussion_content":"取决于你是否使用openai的embedding，这一讲里是会调用API的\n后面我们会讲通过开源模型来生成一个embedding的方法，那个可以不调用OpenAI的API，只需要本地加载开源模型就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684748828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2147220,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","nickname":"神毓逍遥","note":"","ucode":"83351CB18B190E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621957,"discussion_content":"本地开源模型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687790998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2147220,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","nickname":"神毓逍遥","note":"","ucode":"83351CB18B190E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621956,"discussion_content":"有推荐的么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687790988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373753,"user_name":"橘子🍊汽水","can_delete":false,"product_type":"c1","uid":3580196,"ip_address":"广东","ucode":"0C0765F2DEA6A9","user_header":"https://static001.geekbang.org/account/avatar/00/36/a1/24/98e4985d.jpg","comment_is_top":false,"comment_ctime":1683123718,"is_pvip":false,"replies":[{"id":136821,"content":"llama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &quot;llama-index==0.5.27&quot; 退回到 0.5 系列的版本\n\n晚点我看一下更新代码到0.6.x 版本","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684741347,"ip_address":"上海","comment_id":373753,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"重新输入了\n!pip install -U llama-index\n还是报错，老师可以帮忙看看吗？\n\nImportError: cannot import name &#39;GPTSimpleVectorIndex&#39; from &#39;llama_index&#39; (&#47;usr&#47;local&#47;lib&#47;python3.10&#47;dist-packages&#47;llama_index&#47;__init__.py)","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618988,"discussion_content":"llama index 最近又更新了大版本，接口又改了一遍。如果要立刻可以运行，可以先 pip install --force-reinstall -v &#34;llama-index==0.5.27&#34; 退回到 0.5 系列的版本\n\n晚点我看一下更新代码到0.6.x 版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684741348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074927,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcZh2daicchEpEiaQZcSesibP6DcklcSE0aejLqA97iaqJjQF3ZbO0NmIUwAIIXwqv4iaz5EYICTPfGJg/132","nickname":"rock","note":"","ucode":"D104A18BC07906","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617851,"discussion_content":"pip install llama-index==0.5.4\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1683908958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1802569,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/81/49/2451a946.jpg","nickname":"Oxygen Au 昕","note":"","ucode":"9843160B28A31B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617339,"discussion_content":"要参考最新的llama-index\n， https://pypi.org/project/llama-index/， 改成下面的代码\n\nimport openai, os\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader\n\nopenai.api_key = os.environ.get(&#34;OPENAI_API_KEY&#34;)\n\ndocuments = SimpleDirectoryReader(&#39;./data/mr_fujino&#39;).load_data()\n# help(GPTVectorStoreIndex)\nindex = GPTVectorStoreIndex.from_documents(documents)\n\n# index.save_to_disk(&#39;index_mr_fujino.json&#39;)\nindex.storage_context.persist(&#39;index_mr_fujino.json&#39;)","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1683516949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006210,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5a/82/4d55f0b7.jpg","nickname":"李文龙","note":"","ucode":"F809A671D72D2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617038,"discussion_content":"替换成 GPTVectorStoreIndex","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1683277607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373450,"user_name":"joy  ོ","can_delete":false,"product_type":"c1","uid":1314753,"ip_address":"上海","ucode":"83236E71DC3BD0","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/c1/92c540fe.jpg","comment_is_top":false,"comment_ctime":1682515186,"is_pvip":false,"replies":[{"id":136473,"content":"目前大部分情况下，我都不太推荐fine-tune，主要还是价格太贵了。\n\n如果你有\n1. 大量垂直领域的数据\n2. 数据给到OpenAI没有合规问题\n3. 当前领域的客户价值很高，可以承受昂贵的费用\n\n再考虑是否可以使用 fine-tune","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683085570,"ip_address":"上海","comment_id":373450,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"针对开源模型，什么场景建议使用第二大脑？什么场景建议使用finetune?","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616706,"discussion_content":"目前大部分情况下，我都不太推荐fine-tune，主要还是价格太贵了。\n\n如果你有\n1. 大量垂直领域的数据\n2. 数据给到OpenAI没有合规问题\n3. 当前领域的客户价值很高，可以承受昂贵的费用\n\n再考虑是否可以使用 fine-tune","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1683085570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064133,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/c5/92017a7b.jpg","nickname":"硕果阳光","note":"","ucode":"C59841EB675535","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620857,"discussion_content":"您好什么是垂直领域数据？ 能否举个例子呀 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686622490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372636,"user_name":"卯熙","can_delete":false,"product_type":"c1","uid":1382231,"ip_address":"广东","ucode":"37B33ADD3A9681","user_header":"https://static001.geekbang.org/account/avatar/00/15/17/57/ac61fff9.jpg","comment_is_top":false,"comment_ctime":1681371714,"is_pvip":false,"replies":[{"id":136130,"content":"没太理解你指的是哪一步？ ListIndex 在建立索引的时候不消耗Token，在Summarize的时候消耗Token。消耗的除了文章本身的内容，还包括我们发的“请小结一下” 这样的提示语，会比光Embedding文章内容多呀。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681616288,"ip_address":"上海","comment_id":372636,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"老师，为什么 用 GPTListIndex 消耗的 token 比 用  GPTSimpleVectorIndex 的要多， GPTSimpleVectorIndex 不是还有用到  Embedding 吗？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613982,"discussion_content":"没太理解你指的是哪一步？ ListIndex 在建立索引的时候不消耗Token，在Summarize的时候消耗Token。消耗的除了文章本身的内容，还包括我们发的“请小结一下” 这样的提示语，会比光Embedding文章内容多呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681616288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372609,"user_name":"Dev.lu","can_delete":false,"product_type":"c1","uid":1266108,"ip_address":"新加坡","ucode":"A1F727C92A1E5F","user_header":"https://static001.geekbang.org/account/avatar/00/13/51/bc/c7514a30.jpg","comment_is_top":false,"comment_ctime":1681349731,"is_pvip":false,"replies":[{"id":136121,"content":"1. 不影响网络\n2. 不需要，但是需要维护好一个 embedding vector的索引。可以用向量数据库，也可以自己在内存里面管理\n3. 一般不至于，你可以算一下，一条数据一般也就3-4K，1百万条数据才3G数据。但是需要比较多时间建立索引，这个和OpenAI的request大小无关，一般即使用batch一个batch也就拿1千条数据的Embedding吧","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681615591,"ip_address":"上海","comment_id":372609,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"谢谢老师分享，想问一下，\n1. 语料的大小会不会影响回答问题的延时？\n2. 如果需要对语料进行添加或者减少，每次都需要重跑代码？\n3. 如果离线语料数据很大，index过后的语料数据有没有可能导致内存不够，或者OpenAI的API会限制request的大小吗？还是收费不同","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613970,"discussion_content":"1. 不影响网络\n2. 不需要，但是需要维护好一个 embedding vector的索引。可以用向量数据库，也可以自己在内存里面管理\n3. 一般不至于，你可以算一下，一条数据一般也就3-4K，1百万条数据才3G数据。但是需要比较多时间建立索引，这个和OpenAI的request大小无关，一般即使用batch一个batch也就拿1千条数据的Embedding吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681615591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372381,"user_name":"孟健","can_delete":false,"product_type":"c1","uid":1373593,"ip_address":"广东","ucode":"E20ECD1823E877","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/99/5bf198e3.jpg","comment_is_top":false,"comment_ctime":1681081969,"is_pvip":false,"replies":[{"id":135934,"content":"代码一样可以使用embedding，不过在拆分chunk的时候需要确保比如一个函数或者一个类在一个chunk里","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681128752,"ip_address":"美国","comment_id":372381,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"如果是代码仓库，还适合用embedding这个方案吗？我看中科院开源的那个方案就可以总结源码，向源码提问什么的，不知道是怎么做的","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613103,"discussion_content":"代码一样可以使用embedding，不过在拆分chunk的时候需要确保比如一个函数或者一个类在一个chunk里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681128752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1129938,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3d/d2/e0189af4.jpg","nickname":"songhaifeng","note":"","ucode":"ACB6E3F8238745","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621467,"discussion_content":"请教下，有代码生成比较好的模型方案吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687247487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372024,"user_name":"xbc","can_delete":false,"product_type":"c1","uid":2187437,"ip_address":"海南","ucode":"03F1FD7B8CA32F","user_header":"https://static001.geekbang.org/account/avatar/00/21/60/ad/03351e6e.jpg","comment_is_top":false,"comment_ctime":1680602444,"is_pvip":false,"replies":[{"id":135888,"content":"modelscope.cn 基本上就是学习 huggingface.co 呀","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680974409,"ip_address":"日本","comment_id":372024,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"老师，带我们玩玩 modelscope.cn","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612884,"discussion_content":"modelscope.cn 基本上就是学习 huggingface.co 呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680974410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372001,"user_name":"Warren","can_delete":false,"product_type":"c1","uid":1186273,"ip_address":"广东","ucode":"7518ED2E07AAF7","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/e1/a7fbc963.jpg","comment_is_top":false,"comment_ctime":1680591843,"is_pvip":true,"replies":[{"id":135869,"content":"是的，如果你不做特殊设置的话。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680973048,"ip_address":"中国香港","comment_id":372001,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"请问llama_index中的GPTSimpleVectorIndex就是调用openai的api做的embedding吗？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612864,"discussion_content":"是的，如果你不做特殊设置的话。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680973048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374947,"user_name":"小耿","can_delete":false,"product_type":"c1","uid":1153707,"ip_address":"北京","ucode":"1C8B66C738D33B","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/ab/fd201314.jpg","comment_is_top":false,"comment_ctime":1684716778,"is_pvip":false,"replies":[{"id":136801,"content":"你应该用的是免费API的额度，现在限速是一分钟调用3次API。\n看看是否周围有朋友有付费API的账户拿来用一下吧。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684723796,"ip_address":"新加坡","comment_id":374947,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"请问老师，我换了一篇文章用 llama_index 做总结，一直报限速问题，好像是llama内部调用的报错，应该怎么改进代码呢？\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.&lt;locals&gt;._completion_with_retry in 8.0 seconds as it raised RateLimitError: Rate limit reached for default-gpt-3.5-turbo in organization org-oEUgEoq9uZ4oju2xVxmZ7cUO on requests per min. Limit: 3 &#47; min. Please try again in 20s. Contact us through our help center at help.openai.com if you continue to have issues. Please add a payment method to your account to increase your rate limit. Visit https:&#47;&#47;platform.openai.com&#47;account&#47;billing to add a payment method..","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618941,"discussion_content":"你应该用的是免费API的额度，现在限速是一分钟调用3次API。\n看看是否周围有朋友有付费API的账户拿来用一下吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684723797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373582,"user_name":"江湖中人","can_delete":false,"product_type":"c1","uid":3022855,"ip_address":"浙江","ucode":"5D04FA57BD5C83","user_header":"https://static001.geekbang.org/account/avatar/00/2e/20/07/80337e76.jpg","comment_is_top":false,"comment_ctime":1682691414,"is_pvip":false,"replies":[{"id":136449,"content":"可以的，继续往后看，第14-17讲里面的Langchain拿来做机器人客服很方便。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683082680,"ip_address":"上海","comment_id":373582,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"老师，请教一下，这个可以用来做机器人客服吗？看起来好像只要把自家的数据喂给它就可以了，如果用来做客服，有什么需要注意的呢","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616671,"discussion_content":"可以的，继续往后看，第14-17讲里面的Langchain拿来做机器人客服很方便。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683082680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373423,"user_name":"郑雨瑛","can_delete":false,"product_type":"c1","uid":1142016,"ip_address":"上海","ucode":"3F176203F6D1E7","user_header":"https://static001.geekbang.org/account/avatar/00/11/6d/00/cb00b423.jpg","comment_is_top":false,"comment_ctime":1682499399,"is_pvip":false,"replies":[{"id":136465,"content":"“ValueError: A single term is larger than the allowed chunk size.”\n\n代表对文本分块的时候，单个块太大了。我猜你用的是中文文本？那样最好换一下 Splitter，用后面介绍过的SpacySplitter加载一个中文的模型来进行分句。\n\n以及设置一下chunk_size 大一点。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683083875,"ip_address":"上海","comment_id":373423,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"老师，我读取的自己的一个文件，然后运行的时候报错，请问这个错误是什么引起的？\n执行语句：\n------------\nresponse = list_index.query(&quot;下面是一个项目的文件，请你用中文总结一下:&quot;, response_mode=&quot;tree_summarize&quot;)\nprint(response)\n--------\nFile ~&#47;miniforge3&#47;envs&#47;geektime&#47;lib&#47;python3.10&#47;site-packages&#47;llama_index&#47;langchain_helpers&#47;text_splitter.py:157, in TokenTextSplitter.split_text_with_overlaps(self, text, extra_info_str)\n    155 num_cur_tokens = max(len(self.tokenizer(cur_token)), 1)\n    156 if num_cur_tokens &gt; effective_chunk_size:\n--&gt; 157     raise ValueError(\n    158         &quot;A single term is larger than the allowed chunk size.\\n&quot;\n    159         f&quot;Term size: {num_cur_tokens}\\n&quot;\n    160         f&quot;Chunk size: {self._chunk_size}&quot;\n    161         f&quot;Effective chunk size: {effective_chunk_size}&quot;\n    162     )\n    163 # If adding token to current_doc would exceed the chunk size:\n    164 # 1. First verify with tokenizer that current_doc\n    165 # 1. Update the docs list\n    166 if cur_total + num_cur_tokens &gt; effective_chunk_size:\n    167     # NOTE: since we use a proxy for counting tokens, we want to\n    168     # run tokenizer across all of current_doc first. If\n    169     # the chunk is too big, then we will reduce text in pieces\n\nValueError: A single term is larger than the allowed chunk size.\nTerm size: 453\nChunk size: 356Effective chunk size: 356","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616691,"discussion_content":"“ValueError: A single term is larger than the allowed chunk size.”\n\n代表对文本分块的时候，单个块太大了。我猜你用的是中文文本？那样最好换一下 Splitter，用后面介绍过的SpacySplitter加载一个中文的模型来进行分句。\n\n以及设置一下chunk_size 大一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683083876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373277,"user_name":"Geek_a96962","can_delete":false,"product_type":"c1","uid":3565064,"ip_address":"上海","ucode":"D47839AFCBEACC","user_header":"","comment_is_top":false,"comment_ctime":1682334205,"is_pvip":false,"replies":[{"id":136380,"content":"往后看哦，后面的课程中老师会介绍很多开源方案～","user_name":"编辑回复","user_name_real":"编辑","uid":2843479,"ctime":1682495983,"ip_address":"北京","comment_id":373277,"utype":2}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"老师，既然是ai大模型之美，能不能介绍不用chatgpt的，比如用一些开源的大模型 来完成相同的业务","like_count":0,"discussions":[{"author":{"id":2843479,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","nickname":"小虎子🐯","note":"","ucode":"4C9530B3FB407B","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615908,"discussion_content":"往后看哦，后面的课程中老师会介绍很多开源方案～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682495983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373072,"user_name":"小黑","can_delete":false,"product_type":"c1","uid":1053799,"ip_address":"北京","ucode":"1035F47D74CA99","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJEjHEWycVre5ZRtE6M8KaWyu1GKA0KOQsrrlm0ZdZf9EIljQ8P19uZdKS2uINwnzCibnv2iaRfmIPw/132","comment_is_top":false,"comment_ctime":1681985773,"is_pvip":false,"replies":[{"id":136524,"content":"因为实际提问还包括通过embedding拿到的上下文信息，所以提问的token会比较多\n\n这个可以通过设置 chunk_size 来缩短文本分段的尺寸","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683093959,"ip_address":"上海","comment_id":373072,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"INFO:llama_index.token_counter.token_counter:&gt; [query] Total LLM token usage: 4043 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total embedding token usage: 58 tokens\n\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total LLM token usage: 4160 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total embedding token usage: 45 tokens\n\n为什么我总是提问消耗token多，回复可以用的token就不剩什么了？这个在哪里可以设置？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616765,"discussion_content":"因为实际提问还包括通过embedding拿到的上下文信息，所以提问的token会比较多\n\n这个可以通过设置 chunk_size 来缩短文本分段的尺寸","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683093960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372977,"user_name":"数据分析站站","can_delete":false,"product_type":"c1","uid":3579163,"ip_address":"广东","ucode":"76DA7D38EB6DE2","user_header":"https://static001.geekbang.org/account/avatar/00/36/9d/1b/8f0f9f13.jpg","comment_is_top":false,"comment_ctime":1681888162,"is_pvip":false,"replies":[{"id":136471,"content":"可能是环境变量里没有指定 OPENAI_API_KEY？\n之前都是手工在代码里设置了 openai.api_key？","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683085138,"ip_address":"上海","comment_id":372977,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"为什么执行index=GPTSimpleVectorIndex.from_documents(documents)\n报错：AuthenticationError: Incorrect API key provided: &#39;&#39;. You can find your API key at https:&#47;&#47;platform.openai.com&#47;account&#47;api-keys.\n执行之前课程的都是可以的","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616701,"discussion_content":"可能是环境变量里没有指定 OPENAI_API_KEY？\n之前都是手工在代码里设置了 openai.api_key？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683085138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372817,"user_name":"覃瑞星","can_delete":false,"product_type":"c1","uid":1864259,"ip_address":"上海","ucode":"1181EFC6E3AC60","user_header":"https://static001.geekbang.org/account/avatar/00/1c/72/43/a0898bb7.jpg","comment_is_top":false,"comment_ctime":1681682406,"is_pvip":false,"replies":[{"id":136254,"content":"这个是文本解析，以及如何在具体内容和PDF文件格式之间建立联系的能力。当然是可以做到的，但是需要自己开发PDF文件格式结构和内容之间的关联。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681794171,"ip_address":"上海","comment_id":372817,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100541001,"comment_content":"上传的是pdf的话，有办法定位到具体的引用位置吗。譬如查出来文字，给的gpt作参考，同时需要定位到文字是来自原文第一页第二段这样。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614456,"discussion_content":"这个是文本解析，以及如何在具体内容和PDF文件格式之间建立联系的能力。当然是可以做到的，但是需要自己开发PDF文件格式结构和内容之间的关联。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681794171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372727,"user_name":"任若鸿","can_delete":false,"product_type":"c1","uid":1111204,"ip_address":"罗马尼亚","ucode":"25BAC63AB65B83","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/a4/cbd85d08.jpg","comment_is_top":false,"comment_ctime":1681486856,"is_pvip":false,"replies":[{"id":136112,"content":"还是确认一下路径？Colab里的工作路径在每次重新启动之后内容都会清空。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681614252,"ip_address":"上海","comment_id":372727,"utype":1}],"discussion_count":4,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"为什么我在colab 上运行 documents = SimpleDirectoryReader(dir).load_data()\n\nprint(documents) 是空的。确定文件是路径是对的，也可以读出来。但是为什么documents是空呢？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613956,"discussion_content":"还是确认一下路径？Colab里的工作路径在每次重新启动之后内容都会清空。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681614252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155418,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a1/5a/aaa444e0.jpg","nickname":"Celery-芹菜","note":"","ucode":"B02AD5A9956484","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619540,"discussion_content":"这个路径怎么确认呢？我也打印出来documents是[]，我试了在当前文件夹下建一个txt，也还是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685257592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1118159,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0f/cf/bfa0dc80.jpg","nickname":"Z12","note":"","ucode":"59F5E62F67FFDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616410,"discussion_content":"我也遇到了一样的问题，都是按照课程中的代码，也确保路径是正确的但是执行下来：\nindex = GPTSimpleVectorIndex.load_from_disk(&#39;/content/index_mr_fujino.json&#39;)\nresponse = index.query(&#34;鲁迅先生在日本学习医学的老师是谁？&#34;)\nprint(response)\n\n显示的结果是：\nNone","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682782812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812201,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLm8skz4F7FGGBTXWUMia6qVEc00BddeXapicv5FkAx62GmOnUNEcE4scSR60AmappQoNdIQhccKsBA/132","nickname":"末日，成欢","note":"","ucode":"BBAEBB9C93558A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615897,"discussion_content":"想问下最后咋解决的， 我还是没找到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682493730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372477,"user_name":"勿更改任何信息","can_delete":false,"product_type":"c1","uid":2028955,"ip_address":"北京","ucode":"B4949BEB8B2AFD","user_header":"","comment_is_top":false,"comment_ctime":1681191917,"is_pvip":false,"replies":[{"id":135972,"content":"没太理解你的问题？你需要找一个模型，是支持decode到文本的，RESNET-50并不是transformer架构，也没有decode到文本的能力啊。你现在这个代码案例是跑不通的。\n\n不设置模型，默认选用的模型是 https:&#47;&#47;huggingface.co&#47;naver-clova-ix&#47;donut-base-finetuned-cord-v2 ","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1681263426,"ip_address":"上海","comment_id":372477,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"image_parser = ImageParser(keep_image=True, parse_text=True,parser_config={&quot;model&quot;:&quot;resnet50&quot;,&quot;processor&quot;:&quot;default&quot;})\n    print(f&quot;测试一下ocr识别结果:{image_parser.parse_file(&#39;.&#47;data&#47;receipts&#47;1100-receipt.jpg&#39;)}&quot;)  我用的版本需要设置模型，这个模型写什么了","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613313,"discussion_content":"没太理解你的问题？你需要找一个模型，是支持decode到文本的，RESNET-50并不是transformer架构，也没有decode到文本的能力啊。你现在这个代码案例是跑不通的。\n\n不设置模型，默认选用的模型是 https://huggingface.co/naver-clova-ix/donut-base-finetuned-cord-v2 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681263426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372166,"user_name":"muggle","can_delete":false,"product_type":"c1","uid":1109754,"ip_address":"上海","ucode":"B5A85C4C280FCA","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/fa/37da6393.jpg","comment_is_top":false,"comment_ctime":1680794071,"is_pvip":false,"replies":[{"id":135863,"content":"这是因为默认的PromptTemplate的提示语里面是英文的。所以实际提交给OpenAI的Prompt是中英文混杂的，这个时候回中文还是英文不太确定。\n\n如果你需要它一定回中文，可以像这一讲里使用自定义的PromptTemplate，直接Prompt都用中文。或者尽管用英文，但是在最后加上“Please answer the question in Chinese.”","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680972579,"ip_address":"中国香港","comment_id":372166,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"想请教下老师，我用GPTSimpleVectorIndex后query的时候用中文查询为什么会返回英文结果呢？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612858,"discussion_content":"这是因为默认的PromptTemplate的提示语里面是英文的。所以实际提交给OpenAI的Prompt是中英文混杂的，这个时候回中文还是英文不太确定。\n\n如果你需要它一定回中文，可以像这一讲里使用自定义的PromptTemplate，直接Prompt都用中文。或者尽管用英文，但是在最后加上“Please answer the question in Chinese.”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680972579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372096,"user_name":"数据分析站站","can_delete":false,"product_type":"c1","uid":3579163,"ip_address":"广东","ucode":"76DA7D38EB6DE2","user_header":"https://static001.geekbang.org/account/avatar/00/36/9d/1b/8f0f9f13.jpg","comment_is_top":false,"comment_ctime":1680709333,"is_pvip":false,"replies":[{"id":135883,"content":"llama-index包是免费的，你可能遇到的问题是 open ai的额度用完了。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680974118,"ip_address":"日本","comment_id":372096,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"这个是要付费才能用这个包吗？我用免费的一直说错误","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612879,"discussion_content":"llama-index包是免费的，你可能遇到的问题是 open ai的额度用完了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680974118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372095,"user_name":"Toni","can_delete":false,"product_type":"c1","uid":3206957,"ip_address":"瑞士","ucode":"E6B2FACCC1E000","user_header":"https://static001.geekbang.org/account/avatar/00/30/ef/2d/757bb0d3.jpg","comment_is_top":false,"comment_ctime":1680707556,"is_pvip":false,"replies":[{"id":135882,"content":"我想你应该选取其他的多模态模型，我不确定Donut是否支持中文。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680974088,"ip_address":"日本","comment_id":372095,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"与 ChatGPT 进行了一次聊天对话，问: “鲁迅先生在日本学习医学时的老师是谁”，ChatGPT 答:&quot;... 是内山完造 ...&quot;。又问: &quot;依据&lt;藤野先生&gt;这篇文章，回答鲁迅先生在日本学习医学时的老师是谁&quot; 答:&quot;... 是名叫横井时雄的日本医生。...&quot;。\n\n将这段对话的截图当作下一个练习&quot;引入多模态，让 llamd-index 能够识别小票&quot;的输入图，运行代码\nreceipts_response = receipts_index.query(\n    &#39;What is the topic of this conversation? answer in Chinese&#39;,\n    query_transform=ImageOutputQueryTransform(width=400)\n)\ndisplay_response(receipts_response)\n得到下面令人诧异的回答:\nFinal Response: 这段信息描述的是一份菜单，其中有一道菜叫做“鲁迅的医学老师”，价格为89睞，数量为2，总价为7。\n\n为什么会出现菜单这样的消息?","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612878,"discussion_content":"我想你应该选取其他的多模态模型，我不确定Donut是否支持中文。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680974088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3206957,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ef/2d/757bb0d3.jpg","nickname":"Toni","note":"","ucode":"E6B2FACCC1E000","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612988,"discussion_content":"谢谢回复。沿着这个思路，用支持多语言的 model &#34;paraphrase-multilingual-mpnet-base-v2&#34; 试了一下:\nnodes = parser.get_nodes_from_documents(receipt_documents)\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(\n    model_name=&#34;sentence-transformers/paraphrase-multilingual-mpnet-base-v2&#34;\n))\nservice_context = ServiceContext.from_defaults(embed_model=embed_model)\n问同样的问题\nfrom llama_index import QueryMode\nresponse = index.query(\n    &#34;请问对话的内容是什么？&#34;, \n    mode=QueryMode.EMBEDDING,\n    verbose=True, \n)\nprint(response)\n得到的回复如下:\n &gt; Got node text: file_name: data\\receipts\\Screenshot 鲁迅的医学老师 2023-04-04.png\n\n&lt;s_menu&gt;&lt;s_nm&gt; (Kanzo Uchimura)&lt;/s_unitprice&gt;&lt;s_cnt&gt; 2&lt;/s_cnt&gt;&lt;s_price&gt; 89睞&lt;s_menuqty_cnt&gt; 7&lt;/s_menuqty_cnt&gt;&lt;/s_total&gt;...\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total LLM token usage: 217 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total embedding token usage: 21 tokens\n\n这段信息没有提供对话的内容，只提供了文件名和一段XML代码。\n\n这次没有奇怪的菜单内容了。\n\nDonut 读小票还可以，但解析文字内容的图像似乎不是强项。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681054229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372046,"user_name":"程序员半支烟","can_delete":false,"product_type":"c1","uid":1230837,"ip_address":"江苏","ucode":"23C7B588F400A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/c7/f5/108cd83b.jpg","comment_is_top":false,"comment_ctime":1680651914,"is_pvip":false,"replies":[{"id":135866,"content":"llama-index是开源的，但是llama-index和Facebook的llama模型没有关系\nllama模型的训练代码是开源的，模型Facebook说开源，但是需要填表申请。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680972705,"ip_address":"中国香港","comment_id":372046,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"llama是开源的吗","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612861,"discussion_content":"llama-index是开源的，但是llama-index和Facebook的llama模型没有关系\nllama模型的训练代码是开源的，模型Facebook说开源，但是需要填表申请。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680972705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372044,"user_name":"孟健","can_delete":false,"product_type":"c1","uid":1373593,"ip_address":"广东","ucode":"E20ECD1823E877","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/99/5bf198e3.jpg","comment_is_top":false,"comment_ctime":1680637810,"is_pvip":false,"replies":[{"id":135885,"content":"langchain有对应 typescript 的版本，不过目前功能还没有赶上python的所有功能","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680974274,"ip_address":"日本","comment_id":372044,"utype":1}],"discussion_count":3,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"Python生态真丰富啊，作为nodejs开发，还得找找相关的库","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612881,"discussion_content":"langchain有对应 typescript 的版本，不过目前功能还没有赶上python的所有功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680974274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1338098,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/f2/db90fa96.jpg","nickname":"Oli张帆","note":"","ucode":"6E60A370C3C14A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612428,"discussion_content":"是的是的，我也是项目本身是NodeJS的，很多Python代码看完之后还要再转成JS才能部署到生产环境。好在有ChatGPT。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1680676371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2161554,"avatar":"https://static001.geekbang.org/account/avatar/00/20/fb/92/0537ea08.jpg","nickname":"漫游者","note":"","ucode":"23DD0146F43C7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621183,"discussion_content":"强者愈强，以后就是python的天下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686898509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372043,"user_name":"saihong","can_delete":false,"product_type":"c1","uid":2179765,"ip_address":"中国台湾","ucode":"CB1C8CF5D43ECA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKBkmfjPpxetKHpianAqGvdUXmu0fI3ia6M4lxZzmZf3IryibibOxC8w9yCv0Rf6FTCu30fKxVknOy5nw/132","comment_is_top":false,"comment_ctime":1680630599,"is_pvip":true,"replies":[{"id":135865,"content":"也算Token数的，这个是GPT模型机制决定的，这个Token数省不了。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680972657,"ip_address":"中国香港","comment_id":372043,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"請問餵給 ChatGPT 上下文信息，是否也會算 token 數？\n每次發問之前都要餵一次上下文，這樣有省到 token 嗎？還是我理解錯誤？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612860,"discussion_content":"也算Token数的，这个是GPT模型机制决定的，这个Token数省不了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680972657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372009,"user_name":"Geek_07917e","can_delete":false,"product_type":"c1","uid":1962087,"ip_address":"中国香港","ucode":"35C46F6512F5E6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqcyR0jtfyQtWLeJfd8K5a3Mdba7ac3y9hiacV6xib6rIKLG3nSLDTVwFB5Bh7CvQrRwiaEibpScN37zQ/132","comment_is_top":false,"comment_ctime":1680596737,"is_pvip":false,"replies":[{"id":135870,"content":"我发现好多同学都是用windows环境么。\n\n应该是没有问题的，windows下应该是\ndocuments = SimpleDirectoryReader(&#39;E:\\\\mr_fujino&#39;).load_data()\n或者 \ndocuments = SimpleDirectoryReader(&#39;E:&#47;mr_fujino&#39;).load_data()\n\n不过我手头没有Windows环境可以测试。你试试看正常文件读写这样的路径可以应该就可以。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680973170,"ip_address":"中国香港","comment_id":372009,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"老师  如果我的文件是放在本地E盘的名叫mr_fujino的文件夹下 ，那这样写对吗，运行没反应\n\ndocuments = SimpleDirectoryReader(&#39;E:&#47;mr_fujino&#39;).load_data()","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612865,"discussion_content":"我发现好多同学都是用windows环境么。\n\n应该是没有问题的，windows下应该是\ndocuments = SimpleDirectoryReader(&#39;E:\\\\mr_fujino&#39;).load_data()\n或者 \ndocuments = SimpleDirectoryReader(&#39;E:/mr_fujino&#39;).load_data()\n\n不过我手头没有Windows环境可以测试。你试试看正常文件读写这样的路径可以应该就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680973170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3206957,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ef/2d/757bb0d3.jpg","nickname":"Toni","note":"","ucode":"E6B2FACCC1E000","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612564,"discussion_content":"试试 documents = SimpleDirectoryReader(&#39;E:\\\\mr_fujino&#39;).load_data()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680780601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371995,"user_name":"Warren","can_delete":false,"product_type":"c1","uid":1186273,"ip_address":"广东","ucode":"7518ED2E07AAF7","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/e1/a7fbc963.jpg","comment_is_top":false,"comment_ctime":1680588139,"is_pvip":true,"replies":[{"id":135871,"content":"感谢，我让编辑修改一下，看了一眼Notebook里是对的，应该是我在复制过来的某一次搞错了漏改了","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680973244,"ip_address":"中国香港","comment_id":371995,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100541001,"comment_content":"from llama_index import QuestionAnswerPrompt\nquery_str = &quot;鲁迅先生去哪里学的医学？&quot;\nDEFAULT_TEXT_QA_PROMPT_TMPL = (\n    &quot;Context information is below. \\n&quot;\n    &quot;---------------------\\n&quot;\n    &quot;{context_str}&quot;\n    &quot;\\n---------------------\\n&quot;\n    &quot;Given the context information and not prior knowledge, &quot;\n    &quot;answer the question: {query_str}\\n&quot;\n)\nQA_PROMPT = QuestionAnswerPrompt(QA_PROMPT_TMPL)\n\nresponse = index.query(query_str, text_qa_template=QA_PROMPT)\nprint(response)\n\n这上面QA_PROMPT = QuestionAnswerPrompt(QA_PROMPT_TMPL)这一句中的QA_PROMPT_TMPL应该改为DEFAULT_TEXT_QA_PROMPT_TMPL","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612866,"discussion_content":"感谢，我让编辑修改一下，看了一眼Notebook里是对的，应该是我在复制过来的某一次搞错了漏改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680973244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371982,"user_name":"John","can_delete":false,"product_type":"c1","uid":1020861,"ip_address":"加拿大","ucode":"E4ADF8488953FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","comment_is_top":false,"comment_ctime":1680579388,"is_pvip":false,"replies":[{"id":135903,"content":"这个是通过一个List，将文章分片变成了一个链表一样的索引结构。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680975501,"ip_address":"日本","comment_id":371982,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"这个GPTListIndex是干啥的 还是没太看懂 ...","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612900,"discussion_content":"这个是通过一个List，将文章分片变成了一个链表一样的索引结构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680975501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371960,"user_name":"Ever","can_delete":false,"product_type":"c1","uid":1088821,"ip_address":"广东","ucode":"69B52B0E20BBE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/35/e026cf65.jpg","comment_is_top":false,"comment_ctime":1680567361,"is_pvip":false,"replies":[{"id":135743,"content":"往后看Langchain的部分，14-17讲就会有相关的解决方案。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680585997,"ip_address":"上海","comment_id":371960,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"问一下老师，像微软365展示的那种通过对话框输入自然语言就能命令365做对应的事情是怎么做到的？例如要它换一下标题的颜色，字体就能换，365是怎么知道要做什么的？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612249,"discussion_content":"往后看Langchain的部分，14-17讲就会有相关的解决方案。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1680585997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1373593,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f5/99/5bf198e3.jpg","nickname":"孟健","note":"","ucode":"E20ECD1823E877","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":612388,"discussion_content":"666，期待更新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680635361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":612249,"ip_address":"广东","group_id":0},"score":612388,"extra":""}]}]},{"had_liked":false,"id":376248,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1057012,"ip_address":"美国","ucode":"F8247828C6D498","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/f4/9112ddb5.jpg","comment_is_top":false,"comment_ctime":1686584880,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"可能是llama-index迭代太快, 我安装版本0.6.23，藤野先生的代码运行不出来。 报错\nNameError: name &#39;GPTSimpleVectorIndex&#39; is not defined\n\n参考了官方示例， 修改了代码如下：\n# 创建index\ndocuments = SimpleDirectoryReader(&#39;.&#47;data&#47;&#39;).load_data()\nindex =  GPTVectorStoreIndex.from_documents(documents)\n\nindex.set_index_id(&quot;index_mr_fujino&quot;)\nindex.storage_context.persist(&#39;.&#47;storage&#39;)\n\n# query\nimport openai, os\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader,load_index_from_storage, StorageContext\n\nstorage_context = StorageContext.from_defaults(persist_dir=&#39;storage&#39;)\nindex = load_index_from_storage(storage_context, index_id=&quot;index_mr_fujino&quot;)\n\nquery_engine = index.as_query_engine()\nresponse = query_engine.query(&quot;鲁迅先生在日本学习医学的老师是谁？&quot;)\nprint(response)\n\n官方示例地址： https:&#47;&#47;gpt-index.readthedocs.io&#47;en&#47;latest&#47;examples&#47;vector_stores&#47;SimpleIndexDemo.html","like_count":4,"discussions":[{"author":{"id":1361330,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c5/b2/5b339c64.jpg","nickname":"K-Li","note":"","ucode":"3091322142E43E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624259,"discussion_content":"通了，感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690367726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"俄罗斯","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3646806,"avatar":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","nickname":"Penguin Shi","note":"","ucode":"477A24D7ECE09A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621102,"discussion_content":"感谢帮助，用了你这段代码，通过了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686817137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"伊朗","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376159,"user_name":"鹤涵","can_delete":false,"product_type":"c1","uid":1021825,"ip_address":"北京","ucode":"22CBBC13FC97A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/81/c457def1.jpg","comment_is_top":false,"comment_ctime":1686406049,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"徐文浩老师这个课程AI技术课是市面上天花板","like_count":3},{"had_liked":false,"id":382362,"user_name":"Chloe","can_delete":false,"product_type":"c1","uid":1004953,"ip_address":"美国","ucode":"C4848ED5B35752","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/99/4bdadfd3.jpg","comment_is_top":false,"comment_ctime":1697111434,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"Just a heads-up, with error &quot;AttributeError: &#39;VectorStoreIndex&#39; object has no attribute &#39;save_to_disk&#39;&quot;, the solution is change it to &quot;index.storage_context.persist(persist_dir=&#39;index_mr_fujino.json&#39;) &quot;","like_count":1},{"had_liked":false,"id":390310,"user_name":"aben1900","can_delete":false,"product_type":"c1","uid":1225301,"ip_address":"上海","ucode":"FBC6EC1F1E318F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/6WmssLWiaNnhJOuSowLWWYl19yE7OFOoNVfaic0oQ1SvfJdibWnWAzLYwoksptYGMD1rDTTk4hajGu0cNqNydYyAg/132","comment_is_top":false,"comment_ctime":1715064103,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"import openai, osfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReaderopenai.api_key = os.environ.get(&quot;OPENAI_API_KEY&quot;)documents = SimpleDirectoryReader(&#39;.&#47;data&#47;mr_fujino&#39;).load_data()index = GPTSimpleVectorIndex.from_documents(documents)index.save_to_disk(&#39;index_mr_fujino.json&#39;)，这段代码和embedding有什么关系，都是llama在操作？？？没有看懂这段","like_count":0},{"had_liked":false,"id":389997,"user_name":"钢镚妈妈","can_delete":false,"product_type":"c1","uid":1417535,"ip_address":"北京","ucode":"5D4A08AA1AA46F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoWgjX8PQyeGIlibzNDp7CHbpia9jicuFz5WY7RmHQY8tGiaVsvqIiabPmAfuhUXNQBwswfTibxqa0GiaVHw/132","comment_is_top":false,"comment_ctime":1714049730,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"藤野先生这个例子应该属于RAG的范畴吗？","like_count":0},{"had_liked":false,"id":388932,"user_name":"支配代码","can_delete":false,"product_type":"c1","uid":1460008,"ip_address":"北京","ucode":"B8F1986CA9E740","user_header":"","comment_is_top":false,"comment_ctime":1711194370,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"用的是azure-gpt，按照要求构造azure的AzureChatOpenAI跑起来报错","like_count":0},{"had_liked":false,"id":388807,"user_name":"茂松","can_delete":false,"product_type":"c1","uid":1052375,"ip_address":"广东","ucode":"458A6FBC49C48E","user_header":"https://static001.geekbang.org/account/avatar/00/10/0e/d7/7d7579c1.jpg","comment_is_top":false,"comment_ctime":1710921642,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"import openai, os\nfrom llama_index.core import VectorStoreIndex, SimpleDirectoryReader, ServiceContext\n\nopenai.api_key = os.environ.get(&quot;OPENAI_API_KEY&quot;)\n\ndocuments = SimpleDirectoryReader(&#39;.&#47;data&#47;mr_fujino&#39;).load_data()\nindex = VectorStoreIndex.from_documents(documents)\nindex.storage_context.persist()\n\nfrom llama_index.core import StorageContext, load_index_from_storage\n# rebuild storage context\nstorage_context = StorageContext.from_defaults(persist_dir=&quot;.&#47;storage&quot;)\n# load index\nindex = load_index_from_storage(storage_context)\n\n\n#index = VectorStoreIndex.load_from_disk(&#39;index_mr_fujino.json&#39;)\nquery_engine = index.as_query_engine()\nresponse = query_engine.query(&quot;鲁迅先生在日本学习医学的老师是谁？&quot;)\n#response = index.query(&quot;鲁迅先生在日本学习医学的老师是谁？&quot;)\nprint(response)","like_count":0},{"had_liked":false,"id":387698,"user_name":"HXL","can_delete":false,"product_type":"c1","uid":2631455,"ip_address":"北京","ucode":"97298EEC95BFCA","user_header":"https://static001.geekbang.org/account/avatar/00/28/27/1f/42059b0f.jpg","comment_is_top":false,"comment_ctime":1708436642,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100541001,"comment_content":"https:&#47;&#47;github.com&#47;run-llama&#47;LlamaIndexTS","like_count":0},{"had_liked":false,"id":386352,"user_name":"zengraoli","can_delete":false,"product_type":"c1","uid":3203583,"ip_address":"北京","ucode":"3F5DBA914CB974","user_header":"https://static001.geekbang.org/account/avatar/00/30/e1/ff/5e538177.jpg","comment_is_top":false,"comment_ctime":1704639687,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"老师你好，请问里面的.&#47;data数据，在哪下载啊？","like_count":0},{"had_liked":false,"id":383630,"user_name":"半生瓜","can_delete":false,"product_type":"c1","uid":3736112,"ip_address":"重庆","ucode":"793B27442D1E7F","user_header":"https://static001.geekbang.org/account/avatar/00/39/02/30/2f77c3fa.jpg","comment_is_top":false,"comment_ctime":1699370356,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"from llama_index import PromptTemplate\nquery_str = &quot;鲁迅先生去哪里学的医学？&quot;\nDEFAULT_TEXT_QA_PROMPT_TMPL = (\n    &quot;Context information is below. \\n&quot;\n    &quot;---------------------\\n&quot;\n    &quot;{context_str}&quot;\n    &quot;\\n---------------------\\n&quot;\n    &quot;Given the context information and not prior knowledge, &quot;\n    &quot;answer the question: {query_str}\\n&quot;\n)\nQA_PROMPT = PromptTemplate(DEFAULT_TEXT_QA_PROMPT_TMPL)\n\nresponse = query_engine.query(query_str, text_qa_template=QA_PROMPT)\nprint(response)\n\n报错：TypeError: query() got an unexpected keyword argument &#39;text_qa_template&#39;\n我按照官方文档将QuestionAnswerPrompt改成了PromptTemplate，但是就算不改还是报同样的错误","like_count":0},{"had_liked":false,"id":381246,"user_name":"softnuggets","can_delete":false,"product_type":"c1","uid":3705704,"ip_address":"美国","ucode":"6E294390F7ACC8","user_header":"https://static001.geekbang.org/account/avatar/00/38/8b/68/7b985768.jpg","comment_is_top":false,"comment_ctime":1694901313,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"最新的版本0.8.28， 里面的代码好多都跑不了，希望更新一下","like_count":0},{"had_liked":false,"id":378835,"user_name":"小理想。","can_delete":false,"product_type":"c1","uid":2238528,"ip_address":"北京","ucode":"EDC35A907570DB","user_header":"https://static001.geekbang.org/account/avatar/00/22/28/40/82d748e6.jpg","comment_is_top":false,"comment_ctime":1690864075,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"老师我的OpenAI感觉总结的乱七八糟，跟你的不一样，这是怎么回事呢？代码和您一样，用的模型也一样\nOpenAI总结的内容如下:\n鲁迅先生曾经收藏过他所改正的讲义，但在迁居时不幸毁坏了一口书箱，失去了半箱书，其中也包括了讲义。他将鲁迅先生的照片挂在自己北京寓居的东墙上，每当夜间疲倦时，看到他的面貌，便会增加勇气，点上一支烟，继续写文字。他将这件事告知了藤野先生，并且和熟识的同学一起去诘责干事托辞检查的无礼，最终将匿名信退还了他们。他参观了枪毙中国人的命运，并决定不学医学，离开仙台。","like_count":0},{"had_liked":false,"id":378828,"user_name":"小理想。","can_delete":false,"product_type":"c1","uid":2238528,"ip_address":"北京","ucode":"EDC35A907570DB","user_header":"https://static001.geekbang.org/account/avatar/00/22/28/40/82d748e6.jpg","comment_is_top":false,"comment_ctime":1690855303,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"0.6.5 版本执行成功，代码如下：\n# 生成index索引处理\n!pip install llama-index\n!pip install langchain;\n!pip install openai;\nimport openai, os\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader\n\nos.environ[&quot;OPENAI_API_KEY&quot;] = &quot;&quot;\nopenai.api_key = os.environ.get(&quot;OPENAI_API_KEY&quot;)\n#openai_api_key =&#39;&#39;\n# 从指定目录加载数据\ndocuments=SimpleDirectoryReader(&#39;.&#47;data&#39;).load_data()\n# 是一个用于文本向量索引的类，它用于快速搜索和检索相似的文本，将文本数据转换文档\nindex=GPTVectorStoreIndex.from_documents(documents)\n\n# 设置索引标识符\nindex.set_index_id(&quot;index_mr_fujino&quot;)\n# 将索引数据进行持久化存储,生成不同的json文件\nindex.storage_context.persist(&#39;.&#47;storage&#39;)\n\n# 查询问题\nimport openai, os\nfrom llama_index import StorageContext,load_index_from_storage\n\n# 重建存储上下文\nstorage_context=StorageContext.from_defaults(persist_dir=&#39;.&#47;storage&#39;)\n# 加载标识符为index_mr_fujino的索引\nindex=load_index_from_storage(storage_context,index_id=&quot;index_mr_fujino&quot;)\n\n# 将之前加载的索引对象转换为一个查询引擎对象，并指定了响应模式为&quot;tree_summarize&quot;\nquery_engine=index.as_query_engine(response_mode=&quot;tree_summarize&quot;);\n# 搜索问题\nresponse=query_engine.query(&quot;根据上下文内容，告诉我鲁迅先生在日本学医的老师是谁?&quot;)\nprint(response)","like_count":0},{"had_liked":false,"id":378427,"user_name":"AI悦创","can_delete":false,"product_type":"c1","uid":1525309,"ip_address":"福建","ucode":"D1007711CB0A79","user_header":"https://static001.geekbang.org/account/avatar/00/17/46/3d/55653953.jpg","comment_is_top":false,"comment_ctime":1690218447,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"老师能不能出一些或者加餐一些基于公司知识库或者数据库开发的教程？chatgpt+私有数据变成客服或者ai助理。公司下达的新需求😭","like_count":0,"discussions":[{"author":{"id":1275377,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/9wNL7qwjpZ1NQ6VIVNsZDyJrtkhUW5e7rpqMgR1qTsouamibLZC1oOv445jVUg1BOIJib4cHiaPGKBwrskyXn8xWw/132","nickname":"没角蜗牛","note":"","ucode":"3AF5466D0D3E08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624198,"discussion_content":"这一节讲的不就是你的问题吗\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690289334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377657,"user_name":"Arnold","can_delete":false,"product_type":"c1","uid":1454782,"ip_address":"广东","ucode":"F036D2FCFF1331","user_header":"https://static001.geekbang.org/account/avatar/00/16/32/be/25825dde.jpg","comment_is_top":false,"comment_ctime":1688964734,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"&quot;其实是一个基于 OCR 扫描的模型 Donut&quot; 老师，我对于这个描述有点疑问：以下模型描述的是OCR-free的\n\nDonut model fine-tuned on CORD. It was introduced in the paper OCR-free Document Understanding Transformer by Geewok et al. and first released in this repository.\n\nDisclaimer: The team releasing Donut did not write a model card for this model so this model card has been written by the Hugging Face team.","like_count":0},{"had_liked":false,"id":377656,"user_name":"雨雪飞霏","can_delete":false,"product_type":"c1","uid":1529164,"ip_address":"广东","ucode":"5F8BB1F242DA1C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/9Fd7IIzXDA9Gw0zBOIv66ZEDFmNwP1VcsQjcPztEATGvtnaiavrHoAH68tYjJ63BlfQh2qXSvEJjdmoag5eR17Q/132","comment_is_top":false,"comment_ctime":1688961056,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"老师好\n\nfrom llama_index import SimpleDirectoryReader, GPTVectorStoreIndex\nfrom llama_index.readers.file.base import DEFAULT_FILE_EXTRACTOR, ImageParser\nfrom llama_index.response.notebook_utils import display_response, display_image\nfrom llama_index.indices.query.query_transform.base import ImageOutputQueryTransform\n\nimage_parser = ImageParser(keep_image=True, parse_text=True)\nfile_extractor = DEFAULT_FILE_EXTRACTOR\nfile_extractor.update(\n{\n    &quot;.jpg&quot;: image_parser,\n    &quot;.png&quot;: image_parser,\n    &quot;.jpeg&quot;: image_parser,\n})\n\n# NOTE: we add filename as metadata for all documents\nfilename_fn = lambda filename: {&#39;file_name&#39;: filename}\n\ninput_dir = &quot;&#47;content&#47;index&#47;receipts&quot;\n\nreceipt_reader = SimpleDirectoryReader(\n    input_dir=input_dir,\n    file_extractor=file_extractor,\n    file_metadata=filename_fn,\n)\nreceipt_documents = receipt_reader.load_data()\n\n执行这段代码时候报错：\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-24-53714316bd96&gt; in &lt;cell line: 25&gt;()\n     23     file_metadata=filename_fn,\n     24 )\n---&gt; 25 receipt_documents = receipt_reader.load_data()\n\n&#47;usr&#47;local&#47;lib&#47;python3.10&#47;dist-packages&#47;transformers&#47;tokenization_utils_fast.py in __init__(self, *args, **kwargs)\n    100 \n    101         if from_slow and slow_tokenizer is None and self.slow_tokenizer_class is None:\n--&gt; 102             raise ValueError(\n    103                 &quot;Cannot instantiate this tokenizer from a slow version. If it&#39;s based on sentencepiece, make sure you &quot;\n    104                 &quot;have sentencepiece installed.&quot;\n\nValueError: Cannot instantiate this tokenizer from a slow version. If it&#39;s based on sentencepiece, make sure you have sentencepiece installed.\n\n执行!pip install sentencepiece后还是没有解决，请问是什么问题呢？","like_count":0},{"had_liked":false,"id":377567,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1121921,"ip_address":"上海","ucode":"FE26BE695F7396","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/81/e843861f.jpg","comment_is_top":false,"comment_ctime":1688720312,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"老师请教一下，您提到在搜索询问的问题最相关的语料时，既可以用传统的基于关键词搜索的技术，也可以用 Embedding 的相似度进行语义搜索的技术。 能否简单比较一下，传统的full-text search，和基于embedding 的相似度语义搜索，针对于当前场景，各有什么优缺点？ 以及为什么最近vector store特别的火热？","like_count":0},{"had_liked":false,"id":377254,"user_name":"J","can_delete":false,"product_type":"c1","uid":1473670,"ip_address":"四川","ucode":"421177EBFAF7F7","user_header":"","comment_is_top":false,"comment_ctime":1688141827,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100541001,"comment_content":"这种prompt的方式，是不是又回到了“人工”而非“智能”的模式？\n感觉索引搜索就是传统的方式，LLM只是组装成自然语言，prompt感觉也非常玄学","like_count":0},{"had_liked":false,"id":376987,"user_name":"神毓逍遥","can_delete":false,"product_type":"c1","uid":2147220,"ip_address":"上海","ucode":"83351CB18B190E","user_header":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","comment_is_top":false,"comment_ctime":1687791214,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"11章已经看到推荐的开源魔性了","like_count":0},{"had_liked":false,"id":376984,"user_name":"神毓逍遥","can_delete":false,"product_type":"c1","uid":2147220,"ip_address":"上海","ucode":"83351CB18B190E","user_header":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","comment_is_top":false,"comment_ctime":1687790873,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"这篇文章非常棒","like_count":0},{"had_liked":false,"id":376445,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"伊朗","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":false,"comment_ctime":1686819292,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"query_engine = index.as_query_engine()\nquery_engine = list_index.as_query_engine()\n两种全部都报错。运行不了代码了。退回5.27版本也不行","like_count":0,"discussions":[{"author":{"id":2238528,"avatar":"https://static001.geekbang.org/account/avatar/00/22/28/40/82d748e6.jpg","nickname":"小理想。","note":"","ucode":"EDC35A907570DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624638,"discussion_content":"我也是，有解决办法吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690791982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376359,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1057012,"ip_address":"美国","ucode":"F8247828C6D498","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/f4/9112ddb5.jpg","comment_is_top":false,"comment_ctime":1686732034,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"如果使用llama-index 0.6.23, 在对文章进行小结里面，需要做以下修改：\n\nlist_index = GPTListIndex(nodes=nodes, service_context=service_context)\n\nquery_engine = list_index.as_query_engine(\n    response_mode=&#39;tree_summarize&#39;,\n    verbose=True,)\n\nresponse = query_engine.query(&quot;下面鲁迅先生以第一人称‘我’写的内容，请你用中文总结一下:&quot;)\nprint(response)\n","like_count":0},{"had_liked":false,"id":376144,"user_name":"Tristana","can_delete":false,"product_type":"c1","uid":1006227,"ip_address":"江苏","ucode":"FC47CF6A5868D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5a/93/e081b4de.jpg","comment_is_top":false,"comment_ctime":1686383091,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"老师，你的课程有完整示例代码吗？","like_count":0},{"had_liked":false,"id":375712,"user_name":"Phoenix","can_delete":false,"product_type":"c1","uid":3628743,"ip_address":"广东","ucode":"9683508065CFB2","user_header":"https://static001.geekbang.org/account/avatar/00/37/5e/c7/a8fc707c.jpg","comment_is_top":false,"comment_ctime":1685894041,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"按例子，不过使用最新版本的 llama_index，返回“鲁迅先生在日本学习医学的老师不明确。”\n具体代码如下：\nimport os\nos.environ[&quot;OPENAI_API_KEY&quot;] = &#39;xxx&#39;\n\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader\n# file 目录下存放文章 txt\ndocuments = SimpleDirectoryReader(&#39;.&#47;file&#39;).load_data()\nindex = GPTVectorStoreIndex.from_documents(documents)\nindex.storage_context.persist(&quot;.&#47;storage&quot;)\n\n\nfrom llama_index import StorageContext, load_index_from_storage\n\n# rebuild storage context\nstorage_context = StorageContext.from_defaults(persist_dir=&#39;.&#47;storage&#39;)\n# load index\nindex = load_index_from_storage(storage_context)\n\nquery_engine = index.as_query_engine()\nresponse = query_engine.query(&quot;鲁迅先生在日本学习医学的老师是谁?&quot;)\nprint(response)","like_count":0},{"had_liked":false,"id":375654,"user_name":"Chris","can_delete":false,"product_type":"c1","uid":1689346,"ip_address":"浙江","ucode":"50A51AE2110A7A","user_header":"https://static001.geekbang.org/account/avatar/00/19/c7/02/8346ebf6.jpg","comment_is_top":false,"comment_ctime":1685787776,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"llama_index是用openAI的GPT-3text-davinci-003来做的索引吗, 所以他只是封装了一套文本分片索引加查询的能力,可以这样理解吗","like_count":0},{"had_liked":false,"id":375496,"user_name":"狸猫酱","can_delete":false,"product_type":"c1","uid":1512654,"ip_address":"广东","ucode":"3408B1CE888196","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/ce/bdb774b5.jpg","comment_is_top":false,"comment_ctime":1685537288,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"想问一下老师，这种方式是不是只适合数据量小的资料库？有没有一个适用的大小范围呢？另外比如我想做某个专有领域的对话机器人，比如化学研究，那我需要把所有能找到的化学相关的论文、教材等相关资料和gpt结合，Llama Index的方式是否还适用呢？","like_count":0},{"had_liked":false,"id":375250,"user_name":"农民园丁","can_delete":false,"product_type":"c1","uid":1155913,"ip_address":"立陶宛","ucode":"6A91EBBC9DCE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/49/4a488f4c.jpg","comment_is_top":false,"comment_ctime":1685142981,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"请问老师两个问题：1.如果本地知识库是英文的，能用中文检索到吗？2. 如果我有几本书建立了本地知识库，但是内容有重复的，这时候会得出什么样的结果？","like_count":0},{"had_liked":false,"id":374976,"user_name":"Geek_378f83","can_delete":false,"product_type":"c1","uid":3196784,"ip_address":"美国","ucode":"AD2B400EED436A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/z3nIITkhzRj9WApibhic524lQSJmqUCerpuqpntEe06LE3lRGKr6rGwPpPJtZ5Xj0NBPyvTatKtIk0hfyAnl9Hsg/132","comment_is_top":false,"comment_ctime":1684745349,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100541001,"comment_content":"请教：运行代码时，报错，搜索和问GPT也没解决:\nImportError                               Traceback (most recent call last)\n&lt;ipython-input-16-aefa1f0d78bc&gt; in &lt;cell line: 2&gt;()\n      1 import openai, os\n----&gt; 2 from llama_index import GPTSimpleVectorIndex, SimpleDirectoryReader, ServiceContext\n      3 \n      4 openai.api_key = os.environ.get(&quot;OPENAI_API_KEY&quot;)\n      5 \n\nImportError: cannot import name &#39;GPTSimpleVectorIndex&#39; from &#39;llama_index&#39; (&#47;usr&#47;local&#47;lib&#47;python3.10&#47;dist-packages&#47;llama_index&#47;__init__.py)\n\n---------------------------------------------------------------------------\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n&quot;Open Examples&quot; button below.","like_count":0},{"had_liked":false,"id":373592,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"浙江","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1682732749,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100541001,"comment_content":"看到这里，我确定了使用 Python 调用 open ai 的api 更容易，因为可以方便的使用各种强大的类库！","like_count":0},{"had_liked":false,"id":373071,"user_name":"小黑","can_delete":false,"product_type":"c1","uid":1053799,"ip_address":"北京","ucode":"1035F47D74CA99","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJEjHEWycVre5ZRtE6M8KaWyu1GKA0KOQsrrlm0ZdZf9EIljQ8P19uZdKS2uINwnzCibnv2iaRfmIPw/132","comment_is_top":false,"comment_ctime":1681985721,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100541001,"comment_content":"INFO:llama_index.token_counter.token_counter:&gt; [query] Total LLM token usage: 4043 tokens\nINFO:llama_index.token_counter.token_counter:&gt; [query] Total embedding token usage: 58 tokens","like_count":0},{"had_liked":false,"id":372077,"user_name":"Ethan New","can_delete":false,"product_type":"c1","uid":2063962,"ip_address":"浙江","ucode":"9CA2EF39E58030","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7e/5a/da39f489.jpg","comment_is_top":false,"comment_ctime":1680686891,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":4,"score":9,"product_id":100541001,"comment_content":"学习打卡","like_count":0},{"had_liked":false,"id":372003,"user_name":"珠穆写码","can_delete":false,"product_type":"c1","uid":1325661,"ip_address":"江苏","ucode":"A6223A6B713109","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/5d/c5dc789a.jpg","comment_is_top":false,"comment_ctime":1680592664,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":9,"product_id":100541001,"comment_content":"难，openai的账号到期了","like_count":0,"discussions":[{"author":{"id":2881491,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCcX9KWzw31fOMnF9oHJfDic3Rljqic9pWVhsMticoKibMbzJurzpGrGEo33bFGodgWZf0fnt9VarfLg/132","nickname":"面条哥哥","note":"","ucode":"BFA1EA3E0407FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613270,"discussion_content":"我的也是，后面咋弄哦？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681222152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371981,"user_name":"John","can_delete":false,"product_type":"c1","uid":1020861,"ip_address":"加拿大","ucode":"E4ADF8488953FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","comment_is_top":false,"comment_ctime":1680579244,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100541001,"comment_content":"终于明白为什么要先选model了 原来是为了给长文分段 多谢","like_count":0}]}