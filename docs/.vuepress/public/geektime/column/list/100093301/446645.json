{"id":446645,"title":"17 | 图像分类（上）：图像分类原理与图像分类模型","content":"<p>你好，我是方远，欢迎来到图像分类的学习。</p><p>通过前面的学习，我们已经掌握了PyTorch有关深度学习的不少知识。为了避免纸上谈兵，我们正式进入实战环节，分别从计算机视觉与自然语言处理这两个落地项目最多的深度学习应用展开，看看业界那些常见深度学习应用都是如何实现的。</p><p>完成这个模块的学习以后，我想你不仅仅会巩固之前学习的内容，还会进一步地落实到细分的领域去看待问题、解决问题。</p><p>说到计算机视觉，<strong>很常见的一种应用方向就是图像分类</strong>。关于图像分类，其实离我们并不遥远。你有没有发现，现在很多智能手机，照相的时候都会自动给照片内容打上标签。</p><p>举个例子，你看后面的截图，就是我用手机拍照的时候，手机自动对摄像头的内容进行了识别，打上了“多云”这个标签。</p><p><img src=\"https://static001.geekbang.org/resource/image/75/7c/75e6ec9c616da2c5c5907e0d11184d7c.jpeg?wh=1920x886\" alt=\"图片\"></p><p>然后你会发现，手机还能根据识别到的内容，为你推荐一些美化的方案。那这是怎么做到的呢？其实这就是卷积神经网络最常用、最广泛且最基本的一个应用：图像分类。</p><p>今天咱们就来一探究竟，看看图像分类到底是怎么一回事。我会用两节课的篇幅，带你学习图像分类。这节课我们先学习理论知识，掌握图像分类原理和常见的卷积神经网络。下节课，我们再基于今天学到的原理，一块完成一个完整的图像分类项目实践。</p><!-- [[[read_end]]] --><h2>图像分类原理</h2><p>我们还是“书接上文”，沿用第3节课NumPy的那个例子。现在线上每天都有大量的图片被上传，老板交代你设计一个模型，把有关极客时间Logo的图片自动找出来。</p><p>把这个需求翻译一下就是：建立一个图像分类模型，提供自动识别有极客时间Logo图片的功能。</p><p>我们来梳理一下这个模型的功能，我们这个模型会接收一张图片，然后会输出一组概率，分别是该图片为Logo的概率与该图片为其他图片的概率，从而通过概率来判断这张图片是Logo类还是Other类，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/68/f4b226497cb6aae5e0dcde4f65e46a68.png?wh=1392x604\" alt=\"图片\"></p><h3>感知机</h3><p>我们将上面的模型进一步拆分，看看如何才能获得这样的一组输出。</p><p>其中输入的图片，就是输入X，将其展开后，可以获得输入X为$X={x_1, x_2, … , x_n}$，而模型可以看做有两个节点，每个节点都会有一个输出，分别代表着对输入为Logo和Other的判断，但这里的输出暂时还不是概率，只是模型输出的一组数值。这一部分内容如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/03/29/0322747253dbbffe80a92004ea12be29.png?wh=1732x660\" alt=\"图片\"></p><p>上图这个结构其实就是感知机了，中间绿色的节点叫做神经元，是感知机的最基本组成单元。上图中的感知机只有中间一层（绿色的神经元），如果有多层神经元的话，我们就称之为多层感知机。</p><p>那什么是神经元呢？神经元是关于输入的一个线性变换，每一个输入x都会有一个对应的权值，上图中的y的计算方式为：</p><p>$$y_i=\\delta(w_{i1}x_{1} + w_{i2}x_{2} + … + w_{i_n}x_{n} + b_i), \\space \\space \\space  i=1,2$$</p><p>其中，$w_{i1}, w_{i2}, …, w_{in}$是神经元的权重，$b_i$为神经元的偏移项。权重与偏移项都是通过模型学习到的参数。$\\delta$为激活函数，激活函数是一个可选参数。</p><p>那如何将一组数值，也就是$y_{1}$与$y_{2}$转换为一组对应的概率呢？这个时候Softmax函数就要登场了。它的作用就是将一组数值转换为对应的概率，概率和为1。</p><p>Softmax的计算公式如下：</p><p>$$\\delta(x_j) = \\frac{e^{x_j}}{\\sum_{j=1}^{m}e^{x_j}}$$</p><p>请看下面的代码，我们用Softmax函数对原始的输入y做个转化，将y中的数值转化为一组对应的概率：</p><pre><code class=\"language-python\">import torch\nimport torch.nn as nn\n\n# 2个神经元的输出y的数值为\ny = torch.randn(2)\nprint(y)\n输出：tensor([0.2370, 1.7276])\nm = nn.Softmax(dim=0)\nout = m(y)\nprint(out)\n输出：tensor([0.1838, 0.8162])\n</code></pre><p>你看，经过Softmax之后，原始的输出y是不是转换成一组概率，并且概率的和为1呢。原始y中最大的y具有最大的概率。</p><p>当然，Softmax也不是每一个问题都会使用。我们根据问题的不同可以采用不同的函数，例如，有的时候也会使用sigmoid激活函数，sigmoid激活函数是将1个数值转换为0到1之间的概率。</p><p>现在，我们将上述的过程补充到前面的模型里，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/92/32/92ec877yy99cd31b5c9c9fc46f78c832.png?wh=1708x608\" alt=\"图片\"></p><h3>全连接层</h3><p>其实，上面那张示意图，就是图像的分类原理了。其中绿色那一层。在卷积神经网络中称为<strong>全连接层，Full Connection Layer，简称fc层。一般都是放在网络的最后端</strong>，用来获得最终的输出，也就是各个类别的概率。</p><p>因为全连接层中的神经元的个数是固定的，所以说在有全连接层的网络中，输入图片是必须固定尺寸的。而现实里我们线上收集到的图片会有不同的尺寸，所以需要先把图片尺寸统一起来，PyTorch才能进一步处理。</p><p>我们假设将前面的输入图片resize到128x128，然后看看全连接层推断的过程在PyTorch中是如何实现的。</p><pre><code class=\"language-python\">x = torch.randint(0, 255, (1, 128*128), dtype=torch.float32)\nfc = nn.Linear(128*128, 2)\ny = fc(x)\nprint(y)\n输出：tensor([[&nbsp; 72.1361, -120.3565]], grad_fn=&lt;AddmmBackward&gt;)\n# 注意y的shape是(1, 2)\noutput = nn.Softmax(dim=1)(y)\nprint(output)\n输出：tensor([[1., 0.]], grad_fn=&lt;SoftmaxBackward&gt;)\n</code></pre><p>结合代码不难看出，PyTorch中全连接层用nn.Linear来实现。我们分别看看里面的重要参数有哪些：</p><ul>\n<li>in_features：输入特征的个数，在本例中为128x128；</li>\n<li>out_features：输出的特征数，在本例中为2；</li>\n<li>bias：是否需要偏移项，默认为True。</li>\n</ul><p>全连接层的输入，也不是原始图片数据，而是经过多层卷积提取的特征。</p><p>前面我们曾说过，有的网络是可以接收任意尺度的输入的。在上文中的设计中，全连接层的输入x1到xn是固定的，数目等于最后一层特征图所有元素的数目。如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/af/5b/af7f9971ea5564d93c0a0089d3f5d75b.png?wh=1490x678\" alt=\"图片\"></p><p>我们将上述结构稍作调整，就可以接收任意尺度的输入了。只需要在最后的特征图后面加一个全局平均即可，也就是将每个特征图进行求平均，用平均值代替特征图，这样无论输入的尺度是多少，进入全连接层的数据量都是固定的。</p><p>如下图所示，黄色的圈就是全局平均的结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/e0/e0/e0a62554422d28601af056809873d8e0.png?wh=1760x730\" alt=\"图片\"></p><p>我们下一节课介绍的EfficientNet就是采用这种方式，使得网络可以使用任意尺度的图片进行训练。</p><h2>卷积神经网络</h2><p>其实刚才说的多层感知机就是卷积神经网络的前身，由于自身的缺陷（参数量大、难以训练），使其在历史上有段时间一直是停滞不前，直到卷积神经网络的出现，打破了僵局。</p><p>卷积神经网络的最大作用就是提取出输入图片的丰富信息，然后再对接上层的一些应用，比如前面提到的图片分类。把卷积神经网络应用到图像分类原理中，得到的模型如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/8b/1a/8bbc16d51yydca581cb1d88274ec161a.png?wh=1728x664\" alt=\"图片\"></p><p>你需要注意的是示意图中各个层的定义，不同层有不同的名称。</p><p>在上图中，<strong>整个模型或者网络的重点全都在卷积神经网络那块，所以这也是我们的工作重点</strong>。</p><p>那如何找到一个合适的卷积神经网络呢？在实际工作中，我们几乎不会自己去设计一个神经网络网的（因为不可控的变量太多），而是直接选择一些大神设计好的网络直接使用。那网络模型那么多，我们如何验证大神们提出的网络确实是可靠、可用的呢？</p><h3>ImageNet</h3><p>在业界中有个标杆——ImageNet，大家都用它来评价提出模型的好与坏。</p><p>ImageNet本身包含了一个非常大的数据集，并且从2010年开始，每年都会举办一次著名的ImageNet 大规模视觉识别挑战赛（The ImageNet Large Scale Visual Recognition Challenge ，ILSVRC），比赛包含了图像分类、目标检测与图像分割等任务。</p><p>其中，图像分类比赛使用的数据集是一份有1000个类别的庞大数据集，只要能在这个比赛中脱颖而出的模型，都是我们所说的经典网络结构，这些网络在实际项目中基本都是我们的首选。</p><p>从2012年开始，伴随着深度学习的发展，几乎每一年都有非常经典的网络结构诞生，下表为历年来ImageNet上Top-5的错误率。</p><p><img src=\"https://static001.geekbang.org/resource/image/da/73/da4f8fe982d066b8541f63231d257c73.jpg?wh=1920x818\" alt=\"\"></p><p>你可能会有疑问，了解这么多网络模型真的有必要么？</p><p>我想说的是，磨刀不误砍柴工，<strong>机器学习这个领域始终是依靠研究驱动的。</strong>工作当中，我们很少从0到1自创一个网络模型，常常是在经典设计基础上做一些自定义配置，所以你最好对这些经典网络都有所了解。</p><p>接下来，我们就挑选几个经典的神经网络来看看。</p><h3>VGG</h3><p><a href=\"https://arxiv.org/abs/1409.1556\">VGG</a>取得了ILSVRC 2014比赛分类项目的第2名和定位项目的第1名的优异成绩。</p><p>当年的VGG一共提供了A到E6种不同的VGG网络（字母不同，只是表示层数不一样）。VGG19的效果虽说最好，但是综合模型大小等指标，在实际项目中VGG16用得更加多一点。具体的网络结构你可以看看论文。</p><p>我们来看看VGG突破的一些重点：</p><ol>\n<li>证明了随着模型深度的增加，模型效果也会越来越好。</li>\n<li>使用较小的3x3的卷积，代替了AlexNet中的11x11、7x7以及5x5的大卷积核。</li>\n</ol><p>关于第二点，VGG中将5x5的卷积用2层3x3的卷积替换；将7x7的卷积用3层3x3的卷积替换。这样做首先可以减少网络的参数，其次是可以在相同感受野的前提下，加深网络的层数，从而提取出更加多样的非线性信息。</p><h3>GoogLeNet</h3><p>2014年分类比赛的冠军是<a href=\"https://arxiv.org/abs/1409.4842\">GoogLeNet</a>（VGG同年）。GoogLeNet的核心是Inception模块。这个时期的Inception模块是v1版本，后续还有v2、v3以及v4版本。</p><p>我们先来看看GoogLeNet解决了什么样的问题。研究人员发现，对于同一个类别的图片，主要物体在不同图片中，所占的区域大小均有不同，例如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/c4/a7/c4bed5998c8yy9d4e4661c8a5520fba7.jpg?wh=2561x992\" alt=\"\"></p><p>如果使用AlexNet或者VGG中标准的卷积的话，每一层只能以相同的尺寸的卷积核来提取图片中的特征。</p><p>但是正如上图所示，很可能物体以不同的尺寸出现在图片中，那么能否以不同尺度的卷积来提取不同的特征呢？沿着这个想法，Inception模块应运而生，如下图示：</p><p><img src=\"https://static001.geekbang.org/resource/image/91/a1/911eee05256f145209fae76d3yy23fa1.png?wh=2718x1298\" alt=\"\" title=\"图片来源：https://arxiv.org/abs/1409.4842\"></p><p>结合图示我们发现，这里是将原来的相同尺寸卷积提取特征的方式拆分为，使用1x1、3x3、5x5以及3x3的max pooling同时进行特征提取，然后再合并到一起。这样就做到了以<strong>多尺度的方式</strong>提取图片中的特征。</p><p>作者为了降低网络的计算成本，将上述的Inception模块做了一步改进，在3x3、5x5之前与pooling之后添加了1x1卷积用来降维，从而获得了Inception模块的最终形态。</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/21/8fd81403acd0d70fb5ae4a857177ee21.png?wh=2700x1312\" alt=\"\" title=\"图片来源：https://arxiv.org/abs/1409.4842\"></p><p>这里有个额外的小知识点，如果是面试，经常会被问到为什么采用1x1的卷积或者1x1卷积的作用。1x1卷积的作用就是用来升维或者降维的。</p><p>GooLeNet就是由以上的Inception模块构成的一个22层网络。别看网络层数有22层，但是它参数量却比AlexNet与VGG都要少，这带来的优势就是，搭建起来的模型就很小，占的存储空间也小。具体的网络结构你可以参考它的论文。</p><h3>ResNet</h3><p>ResNet中文意思是残差神经网络。在2015年的ImageNet比赛中，模型的分类能力首次超越人眼，1000类图片top-5的错误率降低到3.57%。</p><p>在<a href=\"https://arxiv.org/abs/1512.03385\">论文</a>中作者给出了18层、34层、50层、101层与152层的ResNet。101层的与152层的残差神经网络效果最好，但是受硬件设备以及推断时间的限制，50层的残差神经网络在实际项目中更为常用。</p><p>具体的网络结构你感兴趣的话可以自己看看论文全文，这里我着重带你看看这个网络的主要突破点。</p><h4>网络退化问题</h4><p>虽说研究已经证明，随着网络深度的不断增加，网络的整体性能也会提升。如果只是单纯的增加网络，就会引起以下两个问题：第一，模型容易过拟合；第二，产生梯度消失、梯度爆炸的问题。</p><p>虽然随着研究的不断发展，以上两个问题都可以被解决掉，但是ResNet网络的作者发现，以上两个问题被规避之后，简单的堆叠卷积层，依然不能获得很好的效果。</p><p>为了验证刚才的观点，作者做了这样的一个实验。通过搭建一个普通的20层卷积神经网络与一个56层的卷积神经网络，在CIFAR-10数据集上进行了验证。无论训练集误差还是测试集误差，56层的网络均高于20层的网络。下图来源于论文。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/75/8503d95991270ea2d4a3ff80622af375.png?wh=2784x966\" alt=\"\" title=\"图片来源：https://arxiv.org/abs/1512.03385\"></p><p>出现这样的情况，作者认为这是网络退化造成的。</p><p>网络退化是指当一个网络可以开始收敛时，随着网络层数的增加，网络的精度逐渐达到饱和，并且会迅速降低。这里精度降低的原因并不是过拟合造成的，因为如果是过拟合，上图中56层的在训练集上的精度应该高于20层的精度。</p><p>作者认为这一现象并不合理，假设20层是一个最优的网络，通过加深到56层之后，理论上后面的36层是可以通过学习到一个恒等映射的，也就是说理论上不会学习到一个比26层还差的网络。所以，作者猜测网络不能很容易地学习到恒等映射(恒等映射就是f(x)=x)。</p><h4>残差学习</h4><p>正如刚才所说，从网络退化问题中可以发现，通过简单堆叠卷积层似乎很难学会到恒等映射。为了改善网络退化问题，论文作者何凯明提出了一种深度残差学习的框架。</p><p>因为网络不容易学习到恒等映射，所以就让它强制添加一个恒等映射，如下图所示（下图来源于论文）。</p><p><img src=\"https://static001.geekbang.org/resource/image/27/3b/27c8c4a22782ab29e77c36d0131f5e3b.png?wh=2034x806\" alt=\"\" title=\"图片来源：https://arxiv.org/abs/1512.03385\"></p><p>具体实现是通过一种叫做shortcut connection的机制来完成的。在残差神经网络中shortcut connection就是恒等变换，就是上图中带有x identity的那条曲线，包含shortcut connection的几层网络我们称之为残差块。</p><p>残差块被定义为如下形式：</p><p>$$y = F(x, W_i) + x$$</p><p>F可以是2层的卷积层。也可以是3层的卷积层。最后作者发现，通过残差块，就可以训练出更深、更加优秀的卷积神经网络了。</p><h2>小结</h2><p>恭喜你完成了这节课的学习，让我们回顾一下这节课的主要内容。</p><p>首先我们从多层感知机说起，带你认识了这个卷积神经网络的前身。之后我们一起推导出了图像分类原理的基础模型。<strong>你需要注意的是，整个模型或者网络的重点全都在卷积神经网络那块，所以这也是我们的工作重点</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/8b/1a/8bbc16d51yydca581cb1d88274ec161a.png?wh=1728x664\" alt=\"图片\"></p><p>之后我们结合业界标杆ImageNet的评选情况，一起学习了一些经典的网络结构：VGG、GoogLeNet、ResNet。这里为了让你快速抓住重点，我是从每个网络解决了什么问题，各自有什么突破点展开的。也建议你课余时间多读读相关论文，做更为详细深入的了解。</p><p>纵观网络结构的发展，我们不难发现，一直都是长江后浪推前浪，一代更比一代强。掌握了这些网络结构，你就是深度学习未来的弄潮儿。下节课我们再一起实践一个图像分类项目，加深你对图像分类的理解，敬请期待。</p><h2>思考题</h2><p>欢迎推荐一下近几年来，你自己觉得比较不错的神经网络模型。</p><p>欢迎你在留言区跟我交流互动，也推荐你把这节课分享给更多的同事、朋友。</p>","neighbors":{"left":{"article_title":"16｜分布式训练：如何加速你的模型训练？","id":445886},"right":{"article_title":"18 | 图像分类（下）：如何构建一个图像分类模型?","id":447503}},"comments":[{"had_liked":false,"id":324877,"user_name":"Hit黎明分明🎩","can_delete":false,"product_type":"c1","uid":2806487,"ip_address":"","ucode":"6476C9EFB2117E","user_header":"https://static001.geekbang.org/account/avatar/00/2a/d2/d7/7f00bea1.jpg","comment_is_top":false,"comment_ctime":1638698485,"is_pvip":false,"replies":[{"id":"117893","content":"hello，ImageNet一共1000个类别，所以模型对每张图片都会有1000个概率。<br>Top-1错误率是指如果预测的1000个概率中最大的概率对应的类别是正确的类别，那么就算模型预测正确。<br>Top-5错误率是指如果预测的1000个概率中前5大概率对应的类别包含正确的类别，那么就算模型预测正确。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1638768945,"ip_address":"","comment_id":324877,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23113534965","product_id":100093301,"comment_content":"老师 文中提到了TOP-5错误率  我在文章中也看到过  不过一直不理解是什么意思，想请教您","like_count":6,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536360,"discussion_content":"hello，ImageNet一共1000个类别，所以模型对每张图片都会有1000个概率。\nTop-1错误率是指如果预测的1000个概率中最大的概率对应的类别是正确的类别，那么就算模型预测正确。\nTop-5错误率是指如果预测的1000个概率中前5大概率对应的类别包含正确的类别，那么就算模型预测正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638768945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323609,"user_name":"李雄","can_delete":false,"product_type":"c1","uid":2805175,"ip_address":"","ucode":"ABC36CFEEEE41B","user_header":"https://static001.geekbang.org/account/avatar/00/2a/cd/b7/6efa2c68.jpg","comment_is_top":false,"comment_ctime":1638019698,"is_pvip":false,"replies":[{"id":"117499","content":"hello，感谢你的认可^^。很高兴能与你一起学习进步。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1638147611,"ip_address":"","comment_id":323609,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18817888882","product_id":100093301,"comment_content":"老师关于VGG，GoogLeNet，以及ResNet的讲解简洁明了，尤其是ResNet的讲解，喜欢。","like_count":4,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534231,"discussion_content":"hello，感谢你的认可^^。很高兴能与你一起学习进步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638147611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322455,"user_name":"vcjmhg","can_delete":false,"product_type":"c1","uid":1526461,"ip_address":"","ucode":"B508D1E9B3F974","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/j24oyxHcpB5AMR9pMO6fITqnOFVOncnk2T1vdu1rYLfq1cN6Sj7xVrBVbCvHXUad2MpfyBcE4neBguxmjIxyiaQ/132","comment_is_top":false,"comment_ctime":1637397178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18817266362","product_id":100093301,"comment_content":"语义分割领域的一些新网络：<br>1. Gan网络<br>2. Wide ResNet<br>3. ResNeXT<br>4. DenseNet<br>...","like_count":5},{"had_liked":false,"id":322439,"user_name":"官","can_delete":false,"product_type":"c1","uid":1696727,"ip_address":"","ucode":"E3FF6D04B9846B","user_header":"https://static001.geekbang.org/account/avatar/00/19/e3/d7/d7b3505f.jpg","comment_is_top":false,"comment_ctime":1637387173,"is_pvip":false,"replies":[{"id":"117272","content":"^^ 👍🏻👍🏻","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1637734188,"ip_address":"","comment_id":322439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14522289061","product_id":100093301,"comment_content":"NLP领域的话就是transformer,bert","like_count":4,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532927,"discussion_content":"^^ 👍🏻👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637734188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343780,"user_name":"坚持","can_delete":false,"product_type":"c1","uid":1509619,"ip_address":"","ucode":"7385D8E981CC95","user_header":"http://thirdwx.qlogo.cn/mmopen/uqaRIfRCAhJ6t1z92XYEzadRGelHJUZ5mXrausmIK72hVYYYFeQaOWmhmWt3e5863fOavRcibM5mREpObRUT0gH94QcnWoaYq/132","comment_is_top":false,"comment_ctime":1651051034,"is_pvip":true,"replies":[{"id":"125569","content":"你好，坚持，感谢你的留言。<br>输入是RGB3个通道的特征图，<br>第一层（卷积层）有64个通道（这里说的不是很严谨，写成卷积核更好，我稍后改一下），也就是有64个卷积核，每个卷积核有三个通道。<br>这样与输入特征进行卷积之后，输出的特征图就有64个通道了。<br>第二层卷积层，有192个卷积核，每个卷积核有64个通道，与第一层卷积层输出的特征图进行卷积后，就会生成一个192个通道的特征图。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1651107481,"ip_address":"","comment_id":343780,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5946018330","product_id":100093301,"comment_content":"GoogLeNet网络结构明细表解析如下：<br>0、输入<br>原始输入图像为224x224x3，且都进行了零均值化的预处理操作（图像每个像素减去均值）。<br>1、第一层（卷积层）<br>使用7x7的卷积核（滑动步长2，padding为3），64通道，输出为112x112x64，卷积后进行ReLU操作<br>经过3x3的max pooling（步长为2），输出为((112 - 3+1)&#47;2)+1=56，即56x56x64，再进行ReLU操作<br>2、第二层（卷积层）<br>使用3x3的卷积核（滑动步长为1，padding为1），192通道，输出为56x56x192，卷积后进行ReLU操作<br>经过3x3的max pooling（步长为2），输出为((56 - 3+1)&#47;2)+1=28，即28x28x192，再进行ReLU操作<br>-----------------问题--------------<br>请问老师，输入通道是RGB 3个通道是吧，那第一层的输入64个通道，第二层的输出192个通道，中间的这些通道和输入通道之间是什么样的关系？这64和192在网络中怎么理解","like_count":1,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568313,"discussion_content":"你好，坚持，感谢你的留言。\n输入是RGB3个通道的特征图，\n第一层（卷积层）有64个通道（这里说的不是很严谨，写成卷积核更好，我稍后改一下），也就是有64个卷积核，每个卷积核有三个通道。\n这样与输入特征进行卷积之后，输出的特征图就有64个通道了。\n第二层卷积层，有192个卷积核，每个卷积核有64个通道，与第一层卷积层输出的特征图进行卷积后，就会生成一个192个通道的特征图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651107482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1509619,"avatar":"http://thirdwx.qlogo.cn/mmopen/uqaRIfRCAhJ6t1z92XYEzadRGelHJUZ5mXrausmIK72hVYYYFeQaOWmhmWt3e5863fOavRcibM5mREpObRUT0gH94QcnWoaYq/132","nickname":"坚持","note":"","ucode":"7385D8E981CC95","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568353,"discussion_content":"谢谢老师的解答，这下理解了。我这里截取的内容是网络上搜索的，不是栏目内容中的，不好意思没写清楚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651111892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322311,"user_name":"cab","can_delete":false,"product_type":"c1","uid":1983360,"ip_address":"","ucode":"E096A122C35ADE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0F94uoYZQicSOIfEfSr9gH7CTKibNBsS6d9PRDd8cy7bdTCF9jibXYtf0esGqsQAItHnElejIFovxg/132","comment_is_top":false,"comment_ctime":1637300139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5932267435","product_id":100093301,"comment_content":"Make VGG Great Again","like_count":1},{"had_liked":false,"id":356150,"user_name":"qifeng.wang","can_delete":false,"product_type":"c1","uid":2938330,"ip_address":"北京","ucode":"D7812BB803A5D7","user_header":"","comment_is_top":false,"comment_ctime":1662013693,"is_pvip":false,"replies":[{"id":"129678","content":"你好，感谢你的留言。小x就是输入X中的元素。如果X是RGB图片的话，X是一个三轴的数组。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1662095973,"ip_address":"北京","comment_id":356150,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1662013693","product_id":100093301,"comment_content":"请问一下老师，输入 X 转换成 x1,x2,x3 .......xn 小 x1 是指的什么？我理解 X 是指一个三轴的三维数组。","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586302,"discussion_content":"你好，感谢你的留言。小x就是输入X中的元素。如果X是RGB图片的话，X是一个三轴的数组。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662095973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353995,"user_name":"John(易筋)","can_delete":false,"product_type":"c1","uid":1180202,"ip_address":"广东","ucode":"BB4E58DD4B8F15","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/2a/90e38b94.jpg","comment_is_top":false,"comment_ctime":1660004494,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660004494","product_id":100093301,"comment_content":"1. 大力出奇迹的自然语言模型GPT3, BERT, Big Bird<br>2.根据碱基生成3D蛋白质的Alpha folder2, <br>3. 生成代码模型Alpha coder, Code Pilot, ","like_count":0},{"had_liked":false,"id":343269,"user_name":"志翔(Mike)","can_delete":false,"product_type":"c1","uid":1460514,"ip_address":"","ucode":"39063095300B38","user_header":"https://static001.geekbang.org/account/avatar/00/16/49/22/f42961fa.jpg","comment_is_top":false,"comment_ctime":1650754673,"is_pvip":true,"replies":[{"id":"125395","content":"你好，Mike，感谢你的留言。<br>首先这里的维度是指特征的通道数。<br>举个例子，<br>降维就是输入特征图从3个通道降低为1个通道。升维则相反。<br><br>当输入特征有1个通道，输出特征也有一个通道的时候，1x1卷积就没有意义，因为就相当于乘了一个常数。<br>当输入特征有大于1个通道的时候，1x1就相当于对同一个位置上的像素在不同通道上做线性组合，从而控制特征的通道数，完成升维和降维","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1650864595,"ip_address":"","comment_id":343269,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650754673","product_id":100093301,"comment_content":"1x1卷积会降维 不明白 老师可以讲一下吗？谢谢","like_count":1,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567239,"discussion_content":"你好，Mike，感谢你的留言。\n首先这里的维度是指特征的通道数。\n举个例子，\n降维就是输入特征图从3个通道降低为1个通道。升维则相反。\n\n当输入特征有1个通道，输出特征也有一个通道的时候，1x1卷积就没有意义，因为就相当于乘了一个常数。\n当输入特征有大于1个通道的时候，1x1就相当于对同一个位置上的像素在不同通道上做线性组合，从而控制特征的通道数，完成升维和降维","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650864595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324554,"user_name":"Hit黎明分明🎩","can_delete":false,"product_type":"c1","uid":2806487,"ip_address":"","ucode":"6476C9EFB2117E","user_header":"https://static001.geekbang.org/account/avatar/00/2a/d2/d7/7f00bea1.jpg","comment_is_top":false,"comment_ctime":1638499375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638499375","product_id":100093301,"comment_content":"YOLO  LSTM ","like_count":0},{"had_liked":false,"id":324380,"user_name":"你自信点会死啊","can_delete":false,"product_type":"c1","uid":2810650,"ip_address":"","ucode":"5DFCFAB7027481","user_header":"https://static001.geekbang.org/account/avatar/00/2a/e3/1a/3a7a2511.jpg","comment_is_top":false,"comment_ctime":1638409768,"is_pvip":false,"replies":[{"id":"117707","content":"你好，感谢你的留言。<br>恩，是这样的。^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1638414023,"ip_address":"","comment_id":324380,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1638409768","product_id":100093301,"comment_content":"老师好，我想问下接受任意尺度输入那里，最后输出的一层卷积的输出是一定要n个特征图，然后每个特征图求全局平均，因为全连接层的输入特征个数是n？是这个意思吗？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535389,"discussion_content":"或者没有全连接层，直接把n个特征图的全局平均当做全连接层的节点也可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638424222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535333,"discussion_content":"你好，感谢你的留言。\n恩，是这样的。^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638414023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323076,"user_name":"F","can_delete":false,"product_type":"c1","uid":2656884,"ip_address":"","ucode":"210FB176744763","user_header":"https://static001.geekbang.org/account/avatar/00/28/8a/74/fe20e4aa.jpg","comment_is_top":false,"comment_ctime":1637720928,"is_pvip":false,"replies":[{"id":"117267","content":"^^ 👍🏻👍🏻，加油","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1637732107,"ip_address":"","comment_id":323076,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637720928","product_id":100093301,"comment_content":"我只知道实验室他们在弄啥胶囊模型","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532917,"discussion_content":"^^ 👍🏻👍🏻，加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637732107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322406,"user_name":"悠闲不自得","can_delete":false,"product_type":"c1","uid":2806030,"ip_address":"","ucode":"58970BED415144","user_header":"https://static001.geekbang.org/account/avatar/00/2a/d1/0e/c0554a72.jpg","comment_is_top":false,"comment_ctime":1637373116,"is_pvip":false,"replies":[{"id":"117180","content":"👍🏻👍🏻^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1637568330,"ip_address":"","comment_id":322406,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637373116","product_id":100093301,"comment_content":"YOLOV4 ","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532294,"discussion_content":"👍🏻👍🏻^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637568330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}