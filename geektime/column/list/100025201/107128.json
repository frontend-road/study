{"id":107128,"title":"24 | 跨平台与 Web 开发的建议","content":"<p>你好，我是七牛云许式伟。</p><p>上一讲我们聊了浏览器，以及移动浏览器之争：小程序与 PWA。</p><p>当我们思考浏览器从技术上带来了什么的时候，我们可以把它分为两点。</p><ul>\n<li>跨平台桌面程序开发；</li>\n<li>Web 开发（B/S 架构的新型应用）。</li>\n</ul><p>今天我们分别就跨平台桌面程序和 Web 开发展开来聊一聊。</p><h2>跨平台桌面程序开发</h2><p>跨平台的桌面程序开发是一个超级难题。无数人前仆后继，各种方案层出不穷，但至今为止，仍然没有称得上真正深入人心的解决方案。</p><p>原因很简单，因为桌面程序本身的范畴在变。有两个关键的因素会导致桌面开发产生巨大的差异性。</p><p>一个因素自然是操作系统。不同的操作系统抽象的界面程序框架并不一致。这些不一致必然导致开发工作量的增加。</p><p>放弃某个操作系统，就意味着放弃某个流量入口，也就意味着放弃这些用户。所以虽然很麻烦，我们还是不得不支持着每一个主流的操作系统。</p><p>另一个因素是屏幕尺寸。就算相同的操作系统，在不同尺寸的屏幕上，交互的范式也会存在很大的差异性，这也会导致不低的跨平台工作量。</p><p>首先我们看下操作系统。</p><ul>\n<li>PC 本地：Windows，macOS，Linux 等等；</li>\n<li>PC Web：Chrome，Safari，FireFox 等等；</li>\n<li>Mobile 本地：Android，iOS 等等；</li>\n<li>Mobile Web：小程序，PWA 等等。</li>\n</ul><!-- [[[read_end]]] --><p>我们再看下屏幕尺寸。</p><ul>\n<li>大屏：PC、笔记本，Pad 等等；</li>\n<li>中屏：手机；</li>\n<li>小屏：手表。</li>\n</ul><p>如此繁复多样的终端类型，无怪跨平台如此之难。我们来总结一下当前都有哪些跨平台的解决方案。</p><p><img src=\"https://static001.geekbang.org/resource/image/da/c7/daf115d3a745c302026b914ee760ccc7.jpg?wh=800*663\" alt=\"\"></p><p>这个列表只是沧海一粟。之所以没有列那么多，也是因为大部分的跨平台框架都已经不怎么活跃，已经无疾而终了。</p><p>目前来说，还很难说哪个方案会胜出。</p><p>关于跨平台开发，我觉得有一句话特别深刻：“每一次统一的努力，都最终变成新的分裂”。当然，这样的事情在很多领域都会发生，只是跨平台开发更加如此。</p><p>但是无论如何，跨平台的梦还会继续。</p><h2>Web 开发</h2><p>聊完了跨平台，我们来聊聊浏览器带来的另一面：Web 开发。</p><p>Web 的 B/S 架构意味着编写软件有了更高的复杂性。这主要表现在以下几个方面。</p><p><strong>其一，多用户。</strong>有了 Server 端，意味着用户的数据不再是保存在 Client（Browser）端，而是存储在 Server 端。</p><p><strong>其二，更高的数据可靠性要求。</strong>数据在 Client 端，客户自己对数据的可靠性负责。硬盘坏了，数据丢了，用户会后悔没有对数据进行备份。</p><p>但是一旦数据在 Server 端，数据可靠性的责任方就到了软件厂商这边。如果厂商不小心把数据搞丢了，用户就会跳起来。</p><p><strong>其三，更多可能的分工安排。</strong>详细来说，Web 应用从流派来说，分为两大类：胖前端与胖后端。</p><p>所谓胖前端，是指把尽可能多的业务逻辑放在前端。极端情况下，整个网站就是一个单页的应用。胖前端无论开发体验还是用户体验，都更接近于本地应用（Native App）。</p><p>所谓胖后端，是指主要逻辑都在后端，包括界面交互的事件响应，也通过网络调用交给了后端来实现。</p><p>我们先看客户端（Client），也就是浏览器端（Browser）。上一讲我们提到，浏览器的界面框架并没有窗口系统，它通过 HTML+CSS 来描述界面。</p><p>HTML+CSS 与其理解为 View 层，不如理解为 ViewModel 层，因为 HTML DOM 从数据角度完整描述了界面的样子。而 View 层已经被浏览器自己实现了。</p><p>这极大简化了界面开发的复杂性，因为界面的局部更新是一个复杂的话题，今天浏览器通过引入 HTML+CSS 这样的 ViewModel 层把它解决了。</p><p>这个时候我们重新看 MVC 框架在浏览器下的样子，你会发现它变成了 MVMP 模式，全称为 “Model-ViewModel-Presenter”。</p><p><img src=\"https://static001.geekbang.org/resource/image/94/7f/94475e49c61f8dfbadb2448c7bc72b7f.png?wh=1440*1080\" alt=\"\"></p><p><strong>首先，我们看事件响应过程。</strong>浏览器的 View 收到了用户的交互事件，它把这些事件委托（delegate）给了 ViewModel 层，并且通过 HTML DOM 暴露出来。通过修改 HTML 元素的事件响应属性，一般名字叫 onXXX（比如 onclick），可以获得事件的响应机会。</p><p><strong>然后我们看 Model 层的数据变化（DataChanged）事件。</strong>在标准的 MVC 模式中，Model 层的数据变化是通知到 View 层，但是在浏览器下 View 是由浏览器实现的，要想让它接受 DataChanged 事件并且去处理是不太可能了。</p><p>所以解决思路自然是让 Controlller 层来做，这样就变成了 MVP 模式。 但是我们又不是标准的 MVP，因为 Presenter 层更新界面（Update View）并不是操作 View，而是 ViewModel。</p><p><strong>综上，浏览器下的 MVC，最终实际上是 MVMP（Model-ViewModel-Presenter）。</strong></p><p>聊完了浏览器端，我们在来看下服务端（Server）。虽然这一章我们的重点不是聊服务端，但是为了有个完整的认识，我们还是要概要地梳理一下 Server 端的架构。</p><p><img src=\"https://static001.geekbang.org/resource/image/7d/c2/7d4754709350d95b8afe0aa35e6e6dc2.jpg?wh=1440*810\" alt=\"\"></p><p>前面我们在 “<a href=\"https://time.geekbang.org/column/article/105356\">22 | 桌面程序的架构建议</a>” 中，曾提到桌面软件除了要支持用户交互外，另一个很重要的需求是提供应用程序的二次开发接口（API）。</p><p>到了 Web 开发，我们同样需要二次开发接口，只不过这个二次开发接口不再是在 Client 端完成的，而是在 Server 端完成。Server 端支持直接的 API 调用，以支持自动化（Automation）方面的需求。</p><p>所以，对 Server 端来说，最底层的是一个多租户的 Model 层（Multi-User Model），它实现了自动化（Automation）所需的 API。</p><p>在 Multi-User Model 层之上，有一个 Web 层。Web 层和 Model 层的假设不同，Web 层是基于会话的（Session-based），因为它负责用户的接入，每个用户登录后，会形成一个个会话（Session）。</p><p>如果我们对Web 层细究的话，又分为 Model 层和 ViewModel 层。为了区分，Web 这边的 Model 层我们叫它 Session-based Model。相应地，ViewModel 层我们叫它 Session-based ViewModel。</p><p>在服务端，Session-based Model 和 Session-based ViewModel 并不发生直接关联，它们通过自己网络遥控浏览器这一侧的 Model 和 ViewModel，从而响应用户的交互。</p><p>Session-based Model 是什么样的呢？它其实是 Multi-User Model 层的转译。把多租户的 API 转译成单租户的场景。所以这一层并不需要太多的代码，甚至理论上自动实现也是有可能的。</p><p>Session-based ViewModel 是一些 HTML+JavaScript+CSS 文件。它是真正的 Web 业务入口。它通过互联网把自己的数据返回给浏览器，浏览器基于 ViewModel 渲染出 View，这样整个系统就运转起来了。</p><h2>结语</h2><p>今天我们聊了 Web 带来的两个重要改变。一个是跨平台，一个是 Web 开发，即 B/S 架构下的新型应用到底应该怎么实现。</p><p>从跨平台来说，这个话题是桌面程序员（也叫“大前端”）永远的痛。计划赶不上变化，用来形容大前端程序员面临的窘境是一点都不过分的。一个玩意还没搞熟悉了，另一个东西又出来了，变化太快，要跟上实属不易。</p><p>从 Web 开发来说，MVC 变成了 MVMP（Model-ViewModel-Presenter）。我们和单机的桌面软件一样的建议，认真对待 Model 层，认真思考它的使用接口是什么样的，把 Model 层做厚。</p><p>如果你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。下一讲我们将结合一个实际的案例，来讲解一下桌面开发（含单机软件和 Web）到底是什么样的。</p><p>如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","comments":[{"had_liked":false,"id":113330,"user_name":"lckfa李钊","can_delete":false,"product_type":"c1","uid":1356899,"ip_address":"","ucode":"AD13D205104AA6","user_header":"https://static001.geekbang.org/account/avatar/00/14/b4/63/84960032.jpg","comment_is_top":false,"comment_ctime":1562969350,"is_pvip":false,"replies":[{"id":"41301","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563000515,"ip_address":"","comment_id":113330,"utype":1}],"discussion_count":3,"race_medal":0,"score":"169066693894","product_id":100025201,"comment_content":"因为工作的原因，莫名其妙的成为了大前端的一员，从Windows原生直绘界面到基于Qt的Web混合开发，再到Flutter移动跨平台，一路走来是越来越惊讶，前端的知识体系气泡越吹越大，突发学海无涯之感。不过我也一直在思考那么不变的东西，从框架的架构角度理解，它们其实是借鉴和传承的，因此不论是使用C++还是JS或者Dart，貌似都不再是难题了。学习架构课不一定就是奔着学完做架构师去的，也是为了更好的把自己的知识体系串通组建起来，没必要在开发语言的细节泥潭里无法自拔","like_count":40,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458171,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563000515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2313071,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4b/6f/50be543b.jpg","nickname":"景南鑫 Rock.J","note":"","ucode":"C611E784D391F5","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370879,"discussion_content":"前端主要应对的是view和viewmodel的问题。从前端的知识库体系来讲，组件，路由，渲染，打包，解决的是交互和部署。应用开发还好，开发类似flutter平台夜需要极高的抽象能力与强大开发团队。类似，uniapp等市场上做混合开发平台还是很不错的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619572747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448031,"avatar":"https://static001.geekbang.org/account/avatar/00/16/18/5f/b391c6c2.jpg","nickname":"米虫","note":"","ucode":"18B78262CA2B0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324927,"discussion_content":"希望有机会交流交流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605191253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114208,"user_name":"笛神","can_delete":false,"product_type":"c1","uid":1216462,"ip_address":"","ucode":"B0726292D38188","user_header":"https://static001.geekbang.org/account/avatar/00/12/8f/ce/462c2309.jpg","comment_is_top":false,"comment_ctime":1563251759,"is_pvip":false,"replies":[{"id":"41675","content":"是这样","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563263414,"ip_address":"","comment_id":114208,"utype":1}],"discussion_count":5,"race_medal":0,"score":"83167630383","product_id":100025201,"comment_content":"关于model层，一直认为使用spring框架的开发人员把service+dao用的太狭隘了，service堆满了业务处理，定义各种方法，感觉完全变回面向过程编程，丢掉了业务实体类，丢掉了数据行为封装，存在很多的耦合和重复。。一直想灌输将行为封装回业务实体里，service驱动业务实体来实现业务，而不是把所有业务逻辑在service层来实现掉。这样model层才会丰满，才是对现实世界的抽象，不知这个理解是否正确？","like_count":20,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458555,"discussion_content":"是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563263414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104818,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/b2/29b4f22b.jpg","nickname":"JasonZ","note":"","ucode":"992193AE44C39C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289133,"discussion_content":"DDD领域驱动设计","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1594000473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1586425,"avatar":"https://static001.geekbang.org/account/avatar/00/18/34/f9/c46c0fff.jpg","nickname":"Wind","note":"","ucode":"3679663B706C86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223934,"discussion_content":"充血贫血两种模型吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586262508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2313071,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4b/6f/50be543b.jpg","nickname":"景南鑫 Rock.J","note":"","ucode":"C611E784D391F5","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370885,"discussion_content":"同样是一把刀，熟练的厨子可以切各种花式，而不熟悉的人就把菜切的惨不忍睹。老实说，所以分层为实体，服务，dao是偷懒的做法。至少在开发层面形成一个共识。从架构的来看，架构概览，组件图，实物图，才是因，当我们看到代码已经是果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619573261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","nickname":"考休","note":"","ucode":"968DFC00D6D0CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271946,"discussion_content":"推荐设计模式之美这门课程，针对service复杂业务逻辑的情况做了清晰的讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590225866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114067,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1563235654,"is_pvip":true,"replies":[{"id":"41647","content":"model是业务数据，viewmodel是界面数据。因为界面体现业务，所以viewmodel和model的数据是有对应关系的，只不过数据结构不同","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563253423,"ip_address":"","comment_id":114067,"utype":1}],"discussion_count":3,"race_medal":0,"score":"65987745094","product_id":100025201,"comment_content":"model和viewmodel的本质区别是什么？老师","like_count":16,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458501,"discussion_content":"model是业务数据，viewmodel是界面数据。因为界面体现业务，所以viewmodel和model的数据是有对应关系的，只不过数据结构不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563253423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1508454,"avatar":"https://static001.geekbang.org/account/avatar/00/17/04/66/4452c882.jpg","nickname":"KEN.Z","note":"","ucode":"1B1CA6229DF670","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3185,"discussion_content":"用model业务数据全部cover viewmodel数据看起来也没毛病，只是有很多冗余数据以及增加网络数据传输量？可以这么理解吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564281597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057056,"avatar":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","nickname":"秋天","note":"","ucode":"A7E1D953EF7E17","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2086,"discussion_content":"哦哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563253866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113059,"user_name":"黄强","can_delete":false,"product_type":"c1","uid":1086093,"ip_address":"","ucode":"20231AC29CFD53","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/8d/ab469ad5.jpg","comment_is_top":false,"comment_ctime":1562892599,"is_pvip":false,"replies":[{"id":"41183","content":"是的，本质就是这样","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1562907304,"ip_address":"","comment_id":113059,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57397467447","product_id":100025201,"comment_content":"认真对待Model层，将其做厚，相应的前端会更薄，更能适应变化的可能，再次体现架构师对稳定点，变化点的抉择","like_count":14,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458039,"discussion_content":"是的，本质就是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562907304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3338,"discussion_content":"现在流行的大中台，小前台就是老师讲的稳定点和变化点的思路吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564407332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113079,"user_name":"杨洪林","can_delete":false,"product_type":"c1","uid":1078679,"ip_address":"","ucode":"FA48C280791A55","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/97/abcd222a.jpg","comment_is_top":false,"comment_ctime":1562893969,"is_pvip":false,"replies":[{"id":"41186","content":"这个是指外部系统对我们业务的api请求。我们的业务提供可视化的界面提供只是一种可能性，更重要的其实是如何让更多人使用我们的核心业务。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1562907853,"ip_address":"","comment_id":113079,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31627665041","product_id":100025201,"comment_content":"server 架构下的automation 具体指那些动作？","like_count":7,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458046,"discussion_content":"这个是指外部系统对我们业务的api请求。我们的业务提供可视化的界面提供只是一种可能性，更重要的其实是如何让更多人使用我们的核心业务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562907853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113950,"user_name":"ANYI","can_delete":false,"product_type":"c1","uid":1084773,"ip_address":"","ucode":"B010B0FB10E0C5","user_header":"https://static001.geekbang.org/account/avatar/00/10/8d/65/633a7478.jpg","comment_is_top":false,"comment_ctime":1563192924,"is_pvip":false,"replies":[{"id":"41536","content":"我理解spring中把model分成了service+DAO，然后很多人认为model=DAO","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563206256,"ip_address":"","comment_id":113950,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14448094812","product_id":100025201,"comment_content":"“”Model 层做厚”，老师，这个应该怎样去理解处理，很多现在项目都固化了，model就是对应了数据库表，通过service来处理业务，就是spring mvc这种分层，怎样去把这个model做厚呢？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458452,"discussion_content":"我理解spring中把model分成了service+DAO，然后很多人认为model=DAO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563206256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1508454,"avatar":"https://static001.geekbang.org/account/avatar/00/17/04/66/4452c882.jpg","nickname":"KEN.Z","note":"","ucode":"1B1CA6229DF670","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3186,"discussion_content":"许老师，能否理解现在很多项目都有service + dao, 其实这就是model层，只是大家先入为主认为dao=model?\nservice已经包含了很多数据处理方面的逻辑，是否还需要增加更多业务逻辑来达到做厚的目的呢？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564282025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113050,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1562891915,"is_pvip":false,"replies":[{"id":"41184","content":"开源项目可能过大，我下一讲是打算做一个小例子","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1562907351,"ip_address":"","comment_id":113050,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14447793803","product_id":100025201,"comment_content":"理解起来还是有些吃力，请问能结合一下具体项目吗？最好是某个开源项目","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458033,"discussion_content":"开源项目可能过大，我下一讲是打算做一个小例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562907351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230829,"user_name":"小鬼","can_delete":false,"product_type":"c1","uid":1646756,"ip_address":"","ucode":"0AC099A605475B","user_header":"https://static001.geekbang.org/account/avatar/00/19/20/a4/813c4685.jpg","comment_is_top":false,"comment_ctime":1593505974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10183440566","product_id":100025201,"comment_content":"现在再回想起来，看看许老师以前在WPS的架构设计，其实沿用了很多年，包括后来我们在移动端还有Web端重新实现一遍，包括层次划分和模型，基本还是复用PC那套。<br>从这个角度来看，做厚Model的价值就体现出来了，在不同平台上，Model是稳定的，可以快速展开工作，换种开发语言和平台，也只是再结合平台的特性去处理细节。","like_count":2},{"had_liked":false,"id":287514,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1617984803,"is_pvip":false,"replies":[{"id":"104421","content":"后端不需要mvc，后端整体就是一个多租户的m","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1618022811,"ip_address":"","comment_id":287514,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5912952099","product_id":100025201,"comment_content":"是不是mvc的设计思想，在前后端都有应用。<br><br>前端的mvmc中的model指的是将用户行为产生的数据抽象成业务数据，比如说表单的填写就是，提前给用户设计好了业务模型，然后用户将数据输入这个模型，viewModel负责窗口的渲染,presenter是负责数据的存取。<br><br>后端的mvc中的model指的是实体类，实体类是对业务的封装和模型化……只能编到这里了，<br><br>重新理解一下，原来的桌面应用开发，在以前还没有前后端分离这一说，所以mvc应该涵盖整个开发流流程……哦，我明白了，整个mvc应该是从业务架构的角度出发去理解它，那么任何应用的架构都是从业务需求开始的，有了业务需求之后，第1个产生的应该就是业务模型，也就是model层，m排第一，然后是我们必须要把业务数据和代码可视化，于是有了view 层，让用户在特定的业务框架中去交互，实行业务操作，生产业务数据，最后把用户这些数据处理和存储，也就是我们的controller 层。<br><br>原来mvc架构思想，是对需求的一种抽象的模板。<br><br>好了老师，我编完了。","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518332,"discussion_content":"后端不需要mvc，后端整体就是一个多租户的m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618022811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":547174,"discussion_content":"后端整体就是一个多租户的m，就是基于架构的角度来做的抽象？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642566150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":518332,"ip_address":""},"score":547174,"extra":""}]}]},{"had_liked":false,"id":169802,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1578448152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873415448","product_id":100025201,"comment_content":"老师真全能","like_count":1},{"had_liked":false,"id":120020,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1564756623,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5859723919","product_id":100025201,"comment_content":"浏览器解决跨操作系统问题<br>本质上要求其它系统服务对外提供一套标准<br>未来云也会有一套标准，云上的中间件会基于这个标准构建","like_count":1},{"had_liked":false,"id":118653,"user_name":"Eternal","can_delete":false,"product_type":"c1","uid":1188023,"ip_address":"","ucode":"EA6FE7CC98F740","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","comment_is_top":false,"comment_ctime":1564407202,"is_pvip":false,"replies":[{"id":"43509","content":"名词其实不重要，重要的是逻辑。我背后想说的意思其实是，这些一堆堆的模式，本质上是同一个模式，只是一些细节选择上不同形成的变种。这些细节差异并不那么重要。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564431575,"ip_address":"","comment_id":118653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859374498","product_id":100025201,"comment_content":"被MVC，MVP，MVMP绕晕了","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460509,"discussion_content":"名词其实不重要，重要的是逻辑。我背后想说的意思其实是，这些一堆堆的模式，本质上是同一个模式，只是一些细节选择上不同形成的变种。这些细节差异并不那么重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564431575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113948,"user_name":"有只骆驼","can_delete":false,"product_type":"c1","uid":1500694,"ip_address":"","ucode":"5575A4CDB409DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/e6/16/7c8ab10c.jpg","comment_is_top":false,"comment_ctime":1563192731,"is_pvip":false,"replies":[{"id":"41535","content":"是这样，这个和giac没啥关系","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563206112,"ip_address":"","comment_id":113948,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858160027","product_id":100025201,"comment_content":"还是有点迷糊。<br><br>在过去的实际开发中，我们对于Model 层的讨论经常在探讨到底是贫血模型还是充血模型。从某种意义上来说，Model 除了不仅不是一层薄薄的的数据载体和简单的行为定义外，还承载着对整个业务对象描述与驱动，概括了业务核心的本身且能被任意需要的合法对象消费。<br><br>感觉自从上次GIAC大会后，大佬们都在说领域驱动设计所想表达的思想。<br><br>","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458450,"discussion_content":"是这样，这个和giac没啥关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563206112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113317,"user_name":"木瓜777","can_delete":false,"product_type":"c1","uid":1512537,"ip_address":"","ucode":"FC52A499AF6374","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aFAYPyw7ywC1xE9h1qibnTBwtWn2ClJqlicy5cMomhZVaruMyqSq76wMkS279mUaGhrLGwWo9ZnW0WCWfmMovlXw/132","comment_is_top":false,"comment_ctime":1562947288,"is_pvip":false,"replies":[{"id":"41296","content":"业务逻辑层，也是整个系统的核心","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1562986225,"ip_address":"","comment_id":113317,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5857914584","product_id":100025201,"comment_content":"您好，对model层的理解还是不够，我原先最早认为就是数据结构层，您说把model层做厚的含义是什么？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458164,"discussion_content":"业务逻辑层，也是整个系统的核心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562986225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25230,"discussion_content":"不太习惯对model层做厚，如果业务逻辑很复杂，做厚会很好。一般业务，并没有那么复杂。针对同一个业务模型，要产生不同维度的业务数据，还是分开写比较好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570458519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123103,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/1f/6452b2e8.jpg","nickname":"刘清斌","note":"","ucode":"775B053AF87B53","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1846,"discussion_content":"我觉得做厚的意思可能是model不止是封装数据，还应提供对外操作的数据接口，减轻其他层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562986894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113156,"user_name":"1900","can_delete":false,"product_type":"c1","uid":1105774,"ip_address":"","ucode":"320D65D14817D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/6e/267bd6ee.jpg","comment_is_top":false,"comment_ctime":1562904158,"is_pvip":true,"replies":[{"id":"41181","content":"是的，和用户打交道都是前端或桌面（感觉前端可能更好一些）。叫大前端我理解主要为了强调前端的广度，因为操作系统实在太多了。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1562907173,"ip_address":"","comment_id":113156,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857871454","product_id":100025201,"comment_content":"为啥桌面程序员也叫大前端呢？（另外到底啥叫大前端呢？）<br><br>我的初步理解是和用户打交道的软件开发叫前端开发，我的理解对么？<br><br>最后，有“大后端”这个术语么？如果有，具体又指什么？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458082,"discussion_content":"是的，和用户打交道都是前端或桌面（感觉前端可能更好一些）。叫大前端我理解主要为了强调前端的广度，因为操作系统实在太多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562907173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046302,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","nickname":"有铭","note":"","ucode":"2C7CB36CA5C04C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1790,"discussion_content":"我认为所有直接被最终用户直接操作的软件系统都叫前端。而后端则指的不直接被最终用户操作的软件系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562913839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113107,"user_name":"虎哥","can_delete":false,"product_type":"c1","uid":1185061,"ip_address":"","ucode":"29D604EC85D3BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/25/1d3d616f.jpg","comment_is_top":false,"comment_ctime":1562897418,"is_pvip":false,"replies":[{"id":"41187","content":"下一讲是一个例子","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1562907873,"ip_address":"","comment_id":113107,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857864714","product_id":100025201,"comment_content":"把多租户的 API 转译成单租户的场景。所以这一层并不需要太多的代码，甚至理论上自动实现也是有可能的。请问哪里有相关资料可以查阅这个内容","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458057,"discussion_content":"下一讲是一个例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562907873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315495,"user_name":"卢","can_delete":false,"product_type":"c1","uid":2659728,"ip_address":"","ucode":"AA1155B3540BAF","user_header":"https://static001.geekbang.org/account/avatar/00/28/95/90/59446bd9.jpg","comment_is_top":false,"comment_ctime":1633913921,"is_pvip":true,"replies":[{"id":"114425","content":"就是提炼符合业务语义的api层，而不是让js离数据库操作太近（不封装带业务语义的api）。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1633966516,"ip_address":"","comment_id":315495,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1633913921","product_id":100025201,"comment_content":"许老师，你好！文中把model层做厚该怎么理解？利用数据库存储过程简化代码逻辑？设计更优的数据结构？没理解做厚是啥意思","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528031,"discussion_content":"就是提炼符合业务语义的api层，而不是让js离数据库操作太近（不封装带业务语义的api）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633966516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239770,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1596638610,"is_pvip":false,"replies":[{"id":"88545","content":"通过网络协议，一端是seever，一端是client","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1596661676,"ip_address":"","comment_id":239770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596638610","product_id":100025201,"comment_content":"Session-based Model 和 浏览器一侧的 Model是怎么交互的，没太明白。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503214,"discussion_content":"通过网络协议，一端是seever，一端是client","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596661676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217767,"user_name":"Lukia","can_delete":false,"product_type":"c1","uid":1028698,"ip_address":"","ucode":"C19472337BCCC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/5a/574f5bb0.jpg","comment_is_top":false,"comment_ctime":1589608345,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589608345","product_id":100025201,"comment_content":"“在服务端，Session-based Model 和 Session-based ViewModel 并不发生直接关联，它们通过自己网络遥控浏览器这一侧的 Model 和 ViewModel，从而响应用户的交互。”关于这一点有几个问题请教老师。1. 为什么在服务端和浏览器分别都会有mode和view model层 2.如果说viewmodel是考虑到表现，对model层的转译，那么model是不是应该在服务端同时view model在浏览器端呢 3. ","like_count":0,"discussions":[{"author":{"id":1501234,"avatar":"","nickname":"Geek_88604f","note":"","ucode":"33DD1318E53814","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297216,"discussion_content":"我理解是无论在服务端还是客户端都可以按照MVC架构来设计软件，而且职责也是类似的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596812299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210654,"user_name":"大头爸爸","can_delete":false,"product_type":"c1","uid":1276613,"ip_address":"","ucode":"131E25DB04D222","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gmP4Yh00MZPwNvr4UQdLeXaX3TVyZEEp195S3vD3Sfl1xz5jBr1474Mt6w5OPr0KsrnQObfLRy5PkKNFjSBiasA/132","comment_is_top":false,"comment_ctime":1587803149,"is_pvip":false,"replies":[{"id":"78477","content":"服务端","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1587869192,"ip_address":"","comment_id":210654,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587803149","product_id":100025201,"comment_content":"”但是一旦数据在 Server 端，数据可靠性的责任方就到了软件厂商这边。如果厂商不小心把数据搞丢了，<br>用户就会跳起来。“<br>请问这里的软件厂商是浏览器这边还是服务器这边?","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493076,"discussion_content":"服务端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587869192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146475,"user_name":"Liber","can_delete":false,"product_type":"c1","uid":1244231,"ip_address":"","ucode":"A5CBFDB15A7745","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/47/a4be64d8.jpg","comment_is_top":false,"comment_ctime":1572532633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572532633","product_id":100025201,"comment_content":"Electron为什么入选进表格中？","like_count":0},{"had_liked":false,"id":113943,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1563191382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563191382","product_id":100025201,"comment_content":"迟到的打卡24","like_count":0}]}