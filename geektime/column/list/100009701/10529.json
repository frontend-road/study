{"id":10529,"title":"02 | 影响持续交付的因素有哪些？","content":"<p>在上一篇文章中，我和你聊了聊“持续交付”的价值。现在，你是不是感觉热血澎湃，似乎找到了解决一些问题的良方？你是不是跃跃欲试，想在团队立刻实施看看效果如何？</p>\n<p>但别急，就像我在开篇词里说的一样，“持续交付”可真不是一件简单的事情。你一定会在实施过程中碰到各种各样的问题和困难，但也不要气馁，我现在就和你说说：影响持续交付的各种因素。知己知彼，方可百战不殆。</p>\n<p>与绝大多数理论分析一样，影响持续交付的因素也可归结为：人（组织和文化），事（流程），物（架构）。</p>\n<h2>组织和文化因素</h2>\n<p>谈到组织，你是不是一下就想到了部门划分，跨部门合作等？的确，这就是我要和你讲的第一个影响因素。因为“持续交付“一定是整个组织层面的事情，是跨部门合作的产物，所以组织和文化因素，是要首先考虑的问题。</p>\n<p>什么样的组织文化，才是“持续交付”成长的沃土（当然这也是定义好的组织的标准），我把它分成了三个层次：</p>\n<p><strong>第一个层次：紧密配合，这是组织发展，部门合作的基础。</strong></p>\n<p>一般企业都会按照职能划分部门。不同的职能产生不同的角色；不同的角色拥有不同的资源；不同的资源又产生不同的工作方式。这些不同的部门紧密配合，协同工作于共同的目标，就能达到成效。</p>\n<p><strong>第二个层次：集思广益，这就需要组织内各个不同部门，或不同职能的角色，跳出自身的“舒适区”。</strong></p><!-- [[[read_end]]] -->\n<p>除思考和解决本身职能的问题外，各部门还要为达到组织的共同目标，通盘考虑和解决所遇到问题和困难。这个层次需要增加组织的透明度，需要接受互相批评和帮助。</p>\n<p><strong>第三个层次：自我驱动，是理想中的完美组织形式。</strong></p>\n<p>如果第二个层次能够持续地运转，就会形成自我学习、自我驱动的飞轮效应，并且越转越快，它甚至能自发式的预见困难，并自驱动解决问题。</p>\n<p>这三个层次看起是不是有点眼熟，和我在上一篇文章中讲到的持续集成的三个层次：</p>\n<ol>\n<li>分模块编码；</li>\n<li>整体集成；</li>\n<li>实现以上两个过程的自动化，并形成闭环；</li>\n</ol>\n<p>好像是一样的。真是有趣，持续交付其实也是帮企业建立更好的组织形式的一种方法。</p>\n<p>那么，在形成理想组织的实际执行中会遇到哪些问题呢？</p>\n<p><strong>一般软件企业与交付有关的研发部门包括四个：产品、开发、测试和运维。而这四个部门天然地形成了一个生产流水线，所以形成理想组织的第一层次紧密配合，基本没什么问题。</strong></p>\n<p>但是，要达到第二层次集思广益的难度，往往就很大。因为，每个部门有自身的利益，以及自己的工作方式和目标。</p>\n<ul>\n<li>比如，产品人员和测试人员就是一对矛盾体：产品人员希望产品尽快上线，而测试人员则希望多留时间进行更完整的测试。</li>\n<li>又比如，开发人员和运维人员也经常矛盾：开发人员希望能有完全权限，而运维人员却控制着生产的root。</li>\n</ul>\n<p>从各自的小目标的角度看，这些矛盾是正常的。但是，产品、开发、测试和运维这些部门的小目标往往就是实施持续交付的阻碍，只有它们把眼光放到更高地持续交付可用的产品上，有了共同的目标，问题才会迎刃而解。</p>\n<p>那么，靠各个部门自己能解决这个问题吗，其实很难。组织的问题，还是需要通过组织变革来解决。通常我们会采用以下三种方案：</p>\n<ul>\n<li>成立项目管理办公室（Project Manage Office，简称PMO）这样的监督型组织，帮助持续交付落地；</li>\n<li>独立建立工程效能部门，全面负责包括持续交付在内的研发效率提升工作；</li>\n<li>使用敏捷形式，如Scrum，打破职能部门间的“隔离墙”，以产品的形式组织团队，各团队自行推进持续交付 。</li>\n</ul>\n<p>当然，这三种方案各有利弊。比如：</p>\n<ul>\n<li>成立项目管理办公室，虽然会带来非常强大的项目推进力，但它往往需要通过流程把控进行监督，这样就很有可能把流程变得更加复杂；</li>\n<li>而独立的工程效能部门，虽然能最大化地去做好持续交付工作，但其研发成本的投入也是需要考虑的，小团队的话，就不太适用了；</li>\n<li>敏捷形式是比较适合中小团队的一种组织变革方式，但对个人能力的要求也会比较高，而且往往需要一个很长时间的磨合才能见效。</li>\n</ul>\n<p>所以，你需要根据当前组织的情况来选择。<strong>总而言之，持续交付必须有与其相适应的组织和文化，否则将很难实施。</strong></p>\n<h2>流程因素</h2>\n<p>要说持续交付对企业和组织改变最多的是什么，那么一定是流程。</p>\n<p>持续交付一定会打破的这三类流程是：</p>\n<ol>\n<li>\n<p><strong>耗时较长的流程</strong>。比如，一个功能的研发迭代周期为5天，而其中有一个上线审核流程，需要花费3天时间，那这个流程就严重影响了持续交付，必须被打破。</p>\n</li>\n<li>\n<p><strong>完全人工类的流程。</strong> 完全人工操作的流程，一般效率低下，且质量难以保证，持续交付的逐步深入会通过自动化替代这些人工流程的存在。</p>\n</li>\n<li>\n<p><strong>信息报备类的流程。</strong> 持续交付过程中同样会产生各种信息流，这些信息有些需要广播，有些需要定点传递。实施持续交付后，这些信息报备类的流程一定会通过异步消息等方式进行改造。</p>\n</li>\n</ol>\n<p>其中，如何对待审批流程是重点。</p>\n<p>在持续交付过程中，其实最让你头痛的应该是一些审批流程。这些流程既然叫做审批，那就代表着授权与责任，代表着严谨与严肃，因此也一定有其存在的价值和意义，不能轻易被去除或打破。</p>\n<p>但是，你我都知道，审批往往指的是由人进行审核和批准，既是一个全人工流程，又是一个信息流转类流程。那么如何打破它呢？同样，也有几种思路：</p>\n<ol>\n<li>\n<p>该审批流程是否确实需要，如果能够通过系统来保证，则可以去除；</p>\n</li>\n<li>\n<p>该审批流程是否可以从事前审批转化为事后审核；</p>\n</li>\n<li>\n<p>该审批流程是否可以被简化。</p>\n</li>\n</ol>\n<p>但是，每家公司的流程都不太一样，所以我的这几个思路并不一定是放诸四海而皆准，但我希望你可以借鉴，或者从中学习到一些新的思路，并结合你自己的情况进行合理调整。</p>\n<p>相对于组织文化和流程因素，架构是真正和技术相关的因素，也是我要和你重点分享的内容。</p>\n<h2>架构因素</h2>\n<p>技术架构对于持续交付来说，是万分重要的。如果遇到混乱的架构，那持续交付会处处受制，痛苦不堪。但与之前讨论的组织、文化和流程因素相比，架构的问题解决起来也会相对容易，因为凡是技术上的东西，都比较愿意接受优化，并且可以随着持续交付一起慢慢重构。</p>\n<p>影响持续交付的架构因素，主要有两大部分：系统架构和部署架构，接下来我会给你详细展开。</p>\n<p><strong>第一，系统架构</strong></p>\n<p>系统架构指系统的组成结构，它决定了系统的运行模式，层次结构，调用关系等。我们通常会遇到的系统架构包括：</p>\n<ol>\n<li>\n<p>单体架构，一个部署包，包含了应用所有功能；</p>\n</li>\n<li>\n<p>SOA架构，面向服务，通过服务间的接口和契约联系；</p>\n</li>\n<li>\n<p>微服务架构，按业务领域划分为独立的服务单元，可独立部署，松耦合。</p>\n</li>\n</ol>\n<p>那么，这些架构对持续交付又有什么影响和挑战呢？</p>\n<p><strong>对单体架构来说：</strong></p>\n<ol>\n<li>\n<p>整个应用使用一个代码仓库，在系统简单的情况下，因为管理简单，可以快速简单地做到持续集成；但是一旦系统复杂起来，仓库就会越变越大，开发团队也会越来越大，多团队维护一个代码仓库简直就是噩梦，会产生大量的冲突；而且持续集成的编译时间也会随着仓库变大而变长，团队再也承受不起一次编译几十分钟，结果最终失败的痛苦。</p>\n</li>\n<li>\n<p>应用变复杂后，测试需要全回归，因为不管多么小的功能变更，都会引起整个应用的重新编译和打包。即使在有高覆盖率的自动化测试的帮助下，测试所要花费的时间成本仍旧巨大，且错误成本昂贵。</p>\n</li>\n<li>\n<p>在应用比较小的情况下，可以做到单机部署，简单直接，这有利于持续交付；但是一旦应用复杂起来，每次部署的代价也变得越来越高，这和之前说的构建越来越慢是一个道理。而且部署代价高会直接影响生产稳定性。这显然不是持续交付想要的结果。</p>\n</li>\n</ol>\n<p>总而言之，一个你可以完全驾驭的单体架构应用，是最有容易做到持续交付的，但一旦它变得复杂起来，一切就都会失控。</p>\n<p><strong>对SOA架构来说：</strong></p>\n<ol>\n<li>\n<p>由于服务的拆分，使得应用的代码管理、构建、测试都变得更轻量，这有利于持续集成的实施。</p>\n</li>\n<li>\n<p>因为分布式的部署，使得测试环境的治理，测试部署变得非常复杂，这里就需要持续交付过程中考虑服务与服务间的依赖，环境的隔离等等。</p>\n</li>\n<li>\n<p>一些新技术和组件的引入，比如服务发现、配置中心、路由、网关等，使得持续交付过程中不得不去考虑这些中间件的适配。</p>\n</li>\n</ol>\n<p>总体来说，SOA架构要做到持续交付比单体架构要难得多。但也正因架构解耦造成的分散化开发问题，持续集成、持续交付能够在这样的架构下发挥更大的威力。</p>\n<p><strong>对微服务架构来说：</strong></p>\n<p>其实，微服务架构是一种SOA架构的演化，它给持续交付带来的影响和挑战也基本与SOA架构一致。</p>\n<p>当然，如果你采用容器技术来承载你的微服务架构，就另当别论了，这完全是一个持续交付全新的领域，这部分内容我将在后续文章中跟你分享。</p>\n<p><strong>第二，部署架构</strong></p>\n<p><strong>部署架构指的是，系统在各种环境下的部署方法，验收标准，编排次序等的集合。它将直接影响你持续交付的“最后一公里”。</strong></p>\n<p><strong>首先，你需要考虑，是否有统一的部署标准和方式。</strong> 在各个环境，不同的设备上，应用的部署方式和标准应该都是一样的，可复用的；除了单个应用以外，最好能做到组织内所有应用的部署方式都是一样的。否则可以想象，每个应用在每个环境上都有不同的部署方式，都要进行持续交付的适配，成本是巨大的。</p>\n<p><strong>其次，需要考虑发布的编排次序。</strong> 特别是在大集群、多机房的情况下。我们通常会采用金丝雀发布（之后讲到灰度发布时，我会详解这部分内容），或者滚动发布等灰度发布策略。那么就需要持续交付系统或平台能够支持这样的功能了。</p>\n<p><strong>再次，是markdown与markup机制。</strong> 为了应用在部署时做到业务无损，我们需要有完善的服务拉入拉出机制来保证。否则每次持续交付都伴随着异常产生，肯定不是大家愿意见到的。</p>\n<p><strong>最后，是预热与自检。</strong> 持续交付的目的是交付有效的软件。而有些软件在启动后需要处理加载缓存等预热过程，这些也是持续交付所要考虑的关键点，并不能粗暴启动后就认为交付完成了。同理，如何为应用建立统一的自检体系，也就自然成为持续交付的一项内容了。</p>\n<p>关于部署的问题，我也会在之后的篇章中和你详细的讨论。</p>\n<h2>总结</h2>\n<p>今天，我和你分享的主题是影响持续交付的因素，为了便于你理解，我将其划分为人（组织和文化），事（流程），物（架构）三个方面：</p>\n<ol>\n<li>\n<p>组织和文化，是最重要的因素，是持续交付推进的基础；</p>\n</li>\n<li>\n<p>流程因素，实施持续交付也是一次流程改造之旅；</p>\n</li>\n<li>\n<p>系统架构，与持续交付相互影响，但技术可以解决一切问题；部署架构，千万不要失败在“最后一公里”，这部分你也需要重点关注。</p>\n</li>\n</ol>\n<p>最后，也请你思考一下，如果你的组织实施持续交付，最大的影响因素会是什么？如果是系统架构方面的因素，你将如何应对？</p>\n<p>欢迎你给我留言。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":15804,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1531531093,"is_pvip":false,"replies":[{"id":"5463","content":"相信现在绝大多数的领导能够看到持续交付的价值，否则就会像我老板说的那样，不能从上进行改革，就只能等着自下的革命了：）","user_name":"作者回复","comment_id":15804,"uid":"1004285","ip_address":"","utype":1,"ctime":1531554576,"user_name_real":"潇俊"}],"discussion_count":1,"race_medal":0,"score":"74545975125","product_id":100009701,"comment_content":"大公司不关注技术，关注办公室政治，导致持续集成徒有虚名。一个CTO和中高层无此意识很难推动。","like_count":17,"discussions":[{"author":{"id":1004285,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/fd/abb7bfe3.jpg","nickname":"潇俊","note":"","ucode":"D5DFD3E2119D95","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420559,"discussion_content":"相信现在绝大多数的领导能够看到持续交付的价值，否则就会像我老板说的那样，不能从上进行改革，就只能等着自下的革命了：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531554576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15805,"user_name":"宝爷","can_delete":false,"product_type":"c1","uid":1153664,"ip_address":"","ucode":"DD517FA7EB59AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/80/2bf8d7fc.jpg","comment_is_top":false,"comment_ctime":1531532558,"is_pvip":false,"replies":[{"id":"5465","content":"测试工作其实很讲究分层思路，也最讲究ROI，自动化可以覆盖不同的层面，代价也都不同，并不是一定要覆盖最高层UI才算的，而且也没要求过100%的自动化覆盖率。一个QA的好坏本质上看的就是工作投入和质量产出比","user_name":"作者回复","comment_id":15805,"uid":"1004285","ip_address":"","utype":1,"ctime":1531555280,"user_name_real":"潇俊"}],"discussion_count":1,"race_medal":0,"score":"31596303630","product_id":100009701,"comment_content":"我觉得是自动化测试这个环节，对于小团队而言，自动化测试的成本太高","like_count":7,"discussions":[{"author":{"id":1004285,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/fd/abb7bfe3.jpg","nickname":"潇俊","note":"","ucode":"D5DFD3E2119D95","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420560,"discussion_content":"测试工作其实很讲究分层思路，也最讲究ROI，自动化可以覆盖不同的层面，代价也都不同，并不是一定要覆盖最高层UI才算的，而且也没要求过100%的自动化覆盖率。一个QA的好坏本质上看的就是工作投入和质量产出比","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531555280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15143,"user_name":"翔翔","can_delete":false,"product_type":"c1","uid":1115525,"ip_address":"","ucode":"4A8D3B479C604F","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/85/49fe3119.jpg","comment_is_top":false,"comment_ctime":1530930128,"is_pvip":false,"replies":[{"id":"5104","content":"说得很对，就是用户问题，架构服务于业务，持续交付服务于研发","user_name":"作者回复","comment_id":15143,"uid":"1004285","ip_address":"","utype":1,"ctime":1530954142,"user_name_real":"潇俊"}],"discussion_count":1,"race_medal":0,"score":"27300733904","product_id":100009701,"comment_content":"我觉得系统架构的选择是不是应该首先服务于业务需求和应用实际，然后才是看采用什么样的持续交付方式去适应这种系统架构，而不能是为了更方便的去持续交付，去选择一种系统架构吧？","like_count":6,"discussions":[{"author":{"id":1004285,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/fd/abb7bfe3.jpg","nickname":"潇俊","note":"","ucode":"D5DFD3E2119D95","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420252,"discussion_content":"说得很对，就是用户问题，架构服务于业务，持续交付服务于研发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530954142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38433,"user_name":"frankie","can_delete":false,"product_type":"c1","uid":1021805,"ip_address":"","ucode":"162F203BE0CC6D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/6d/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1542034793,"is_pvip":false,"replies":[{"id":"13823","content":"是否接入流量","user_name":"作者回复","comment_id":38433,"uid":"1004285","ip_address":"","utype":1,"ctime":1542080804,"user_name_real":"潇俊"}],"discussion_count":1,"race_medal":0,"score":"18721903977","product_id":100009701,"comment_content":"老师能解释一下Markdown和markup吗？","like_count":4,"discussions":[{"author":{"id":1004285,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/fd/abb7bfe3.jpg","nickname":"潇俊","note":"","ucode":"D5DFD3E2119D95","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428700,"discussion_content":"是否接入流量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542080804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15254,"user_name":"JinSong","can_delete":false,"product_type":"c1","uid":1171159,"ip_address":"","ucode":"663F02904BFB2D","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/d7/26ed3d03.jpg","comment_is_top":false,"comment_ctime":1531042373,"is_pvip":false,"replies":[{"id":"5157","content":"他山之石 可以攻玉，哈哈","user_name":"作者回复","comment_id":15254,"uid":"1004285","ip_address":"","utype":1,"ctime":1531065295,"user_name_real":"潇俊"}],"discussion_count":1,"race_medal":0,"score":"18710911557","product_id":100009701,"comment_content":"人和事是最难搞定的","like_count":4,"discussions":[{"author":{"id":1004285,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/fd/abb7bfe3.jpg","nickname":"潇俊","note":"","ucode":"D5DFD3E2119D95","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420304,"discussion_content":"他山之石 可以攻玉，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531065295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15402,"user_name":"大M","can_delete":false,"product_type":"c1","uid":1029057,"ip_address":"","ucode":"4A0EC46D4178E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b3/c1/beca97d7.jpg","comment_is_top":false,"comment_ctime":1531180315,"is_pvip":false,"replies":[{"id":"5226","content":"前端还是比较传统的部署方式，做好依赖管理，包管理比较重要","user_name":"作者回复","comment_id":15402,"uid":"1004285","ip_address":"","utype":1,"ctime":1531191479,"user_name_real":"潇俊"}],"discussion_count":1,"race_medal":0,"score":"10121114907","product_id":100009701,"comment_content":"后台的代码都微服务化了，前端工程有什么拆分最佳实践吗？","like_count":2,"discussions":[{"author":{"id":1004285,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/fd/abb7bfe3.jpg","nickname":"潇俊","note":"","ucode":"D5DFD3E2119D95","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420372,"discussion_content":"前端还是比较传统的部署方式，做好依赖管理，包管理比较重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531191479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15157,"user_name":"胖宝王","can_delete":false,"product_type":"c1","uid":1005367,"ip_address":"","ucode":"E1B58EF4354CB0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/37/8877f206.jpg","comment_is_top":false,"comment_ctime":1530937409,"is_pvip":false,"replies":[{"id":"5105","content":"我后面会有一讲专门讲docker对环境的问题，这里卖个关子先，但是docker不是银弹，而且如果能力未到，它还会带来更多麻烦","user_name":"作者回复","comment_id":15157,"uid":"1004285","ip_address":"","utype":1,"ctime":1530954249,"user_name_real":"潇俊"}],"discussion_count":1,"race_medal":0,"score":"10120872001","product_id":100009701,"comment_content":"我觉得应该是混乱的部署环境，有的环境是编译，有的是包管理，开发人员本地测试也不可控。经常出现本地ok，到其他环境出现异常。先上 docker ，统一所有环境！","like_count":2,"discussions":[{"author":{"id":1004285,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/fd/abb7bfe3.jpg","nickname":"潇俊","note":"","ucode":"D5DFD3E2119D95","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420261,"discussion_content":"我后面会有一讲专门讲docker对环境的问题，这里卖个关子先，但是docker不是银弹，而且如果能力未到，它还会带来更多麻烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530954249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121643,"user_name":"猩猩","can_delete":false,"product_type":"c1","uid":1193852,"ip_address":"","ucode":"102ADA39C145CF","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/7c/ffa62584.jpg","comment_is_top":false,"comment_ctime":1565174984,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5860142280","product_id":100009701,"comment_content":"请问SOA和微服务的区别在哪？我们现在公司用的spring cloud的框架，这属于微服务，还是SOA呢？","like_count":1,"discussions":[{"author":{"id":1440678,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/YPskWw3DQdwlJIs9acFFrmTu0MGN3ciaaLnMxOArFGYBy9yL2zDY6HZQ2bz8QLNt5qpkRicnoCCvryV8LawfQuTQ/132","nickname":"nick66","note":"","ucode":"D07841EE5D204F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546512,"discussion_content":"跟框架没有关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642328250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26148,"user_name":"༦志海࿔࿆࿐ོ","can_delete":false,"product_type":"c1","uid":1241631,"ip_address":"","ucode":"BB783313BEB487","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/1f/c6b7cabc.jpg","comment_is_top":false,"comment_ctime":1537506249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5832473545","product_id":100009701,"comment_content":"现阶段想做，测试环境的持续交付，小步快跑快速迭代","like_count":1},{"had_liked":false,"id":356333,"user_name":"愉快","can_delete":false,"product_type":"c1","uid":1492103,"ip_address":"北京","ucode":"50815DDCD50D94","user_header":"https://static001.geekbang.org/account/avatar/00/16/c4/87/f2db4b1b.jpg","comment_is_top":false,"comment_ctime":1662174221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662174221","product_id":100009701,"comment_content":"最大的障碍就是环境问题，需要在客户指定的服务器上部署，还要收到很多限制，网络隔离等问题","like_count":0},{"had_liked":false,"id":269108,"user_name":"神经蛙","can_delete":false,"product_type":"c1","uid":2159283,"ip_address":"","ucode":"8A84734E0E170F","user_header":"https://static001.geekbang.org/account/avatar/00/20/f2/b3/3ed21c76.jpg","comment_is_top":false,"comment_ctime":1608526477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608526477","product_id":100009701,"comment_content":"多大的团队才需要成立独立的效能部门？<br>比如有数十个不同的中小系统，每个产品团队都是10-30人左右的开发团队，适合统一持续交付方案么？","like_count":0},{"had_liked":false,"id":190413,"user_name":"戴斌","can_delete":false,"product_type":"c1","uid":1119385,"ip_address":"","ucode":"7DC53BEA432217","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/99/5b1ed92b.jpg","comment_is_top":false,"comment_ctime":1584640959,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584640959","product_id":100009701,"comment_content":"系统架构方面我们遇到的阻碍可以快速的调整，方式多样","like_count":0},{"had_liked":false,"id":169264,"user_name":"🚩","can_delete":false,"product_type":"c1","uid":1227999,"ip_address":"","ucode":"2B5E75A9CF5DDC","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/df/3c149bc7.jpg","comment_is_top":false,"comment_ctime":1578302617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578302617","product_id":100009701,"comment_content":"最大的阻碍就是之前没有这个思想，有了这个思想之后，很快就会建立起来了吧我相信","like_count":0},{"had_liked":false,"id":158940,"user_name":"su","can_delete":false,"product_type":"c1","uid":1639302,"ip_address":"","ucode":"483941139A554C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJdjwibHLWribnapce4IoFVNoPRxiaJcxV2xMrf7qwIyutkNyia8Ea2nwaEQ3yw3AQNARGf2ldzvCrZ9A/132","comment_is_top":false,"comment_ctime":1575505129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575505129","product_id":100009701,"comment_content":"我觉得最大的影响因素是对CD实施的认同，不论是自顶向下还是自底向上，","like_count":0},{"had_liked":false,"id":156778,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1574954152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574954152","product_id":100009701,"comment_content":"三个层次<br><br>紧密配合<br>集思广义<br>自我驱动<br><br>分工细化，然后正交组合","like_count":0}]}