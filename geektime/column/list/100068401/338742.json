{"id":338742,"title":"14 | 多久进行一次代码评审最合适？","content":"<p>你好，我是郑晔。</p><p>前面我们讲了很多代码的坏味道，我们的关注点都在代码本身上。知道了什么样的代码是坏味道，有了具体的评判标准。那么，该如何去运用坏味道这把“尺子”呢？</p><p>有一个发现坏味道的实践，就是代码评审，也就是很多人熟悉的 Code Review，Wikipedia上定义是这样的：</p><blockquote>\n<p>代码评审，是指对计算机源代码系统化地审查，常用软件同行评审的方式进行，其目的是在找出及修正在软件开发初期未发现的错误，提升软件质量及开发者的技术。</p>\n</blockquote><p>大多数程序员都经历过代码评审，也都能够初步理解代码评审本身存在的价值，这也是差不多全行业都认为有价值的一个实践。只不过，每个团队在代码评审的实践差别还挺大的，有的团队是在一个完整的开发周期结束之后，做一次代码评审；有的是安排每周的代码评审；有的则是每天都要做代码评审。之所以会有这样的差异，主要就是团队对于代码评审本身的理解有差异。</p><p>所以，这一讲我们就来谈谈，到底应该如何理解代码评审。</p><h2>代码评审是一个沟通反馈的过程</h2><p>关于代码评审，第一个问题就是，为什么要做代码评审？</p><p>这个问题其实比较简单，没有人能够保证自己写出来的代码是没有问题的，而规避个体问题的主要方式就是使用集体智慧，也就是团队的力量。</p><!-- [[[read_end]]] --><p>这个答案是从个体的角度在看问题，其实，看待代码评审还有一个团队视角，代码评审的过程，也是一个知识分享的过程，保证一些细节的知识不再是隐藏在某一个人的头脑中，而是放置到了团队的层面。</p><p>不过，无论是从哪个角度看代码评审，它的本质，就是<strong>沟通反馈</strong>的过程。我把我对这段代码的理解分享给你，你把你对这段代码的想法共享给我。有人给出代码实现的知识，有人贡献出对技术的理解。</p><p>如果我们理解了代码评审是一个沟通反馈的过程，那就可以把沟通反馈的一些原则运用到代码评审中。</p><p>我在《<a href=\"https://time.geekbang.org/column/intro/100022301\">10x 程序员工作法</a>》里，花了一个模块的篇幅讲了沟通反馈，我们希望沟通要尽可能透明，尽可能及时。把这样的理解放到代码评审中，就是要<strong>尽可能多暴露问题，尽可能多做代码评审。</strong></p><h2>暴露问题</h2><p>我们先来说暴露问题。代码评审就是一个发现问题的过程，这是一个大家都能理解的事情。但问题就在于，要发现什么问题？</p><p>如果泛泛地回答，那自然就是代码实现中的各种问题。然而，这个答案还可以细化一下，做代码评审时，我们可以从下面几个角度来看代码：</p><ul>\n<li>实现方案的正确性；</li>\n<li>算法的正确性；</li>\n<li>代码的坏味道。</li>\n</ul><p>我们一个一个来看，先来说实现方案。理论上说，实现方案应该是设计评审中关注的内容，但在实际工作中，并不是所有团队都能够很好地执行设计评审，而且设计评审有时也关注不到特别细的点，所以，一些实现方案的问题只有在代码评审中才能发现。</p><p>在一次代码评审中，我看到一个批量处理的 REST 接口，接到请求经过一些处理之后，它会调用另外一个服务，因为这个服务只支持单一的请求，所以，REST 接口只能一个一个地向这个服务发送请求。</p><p>如果一切正常的话，这个接口是没有问题的。但是，如果在处理过程中出现失败，没有把所有的请求发给另一个服务，这个接口的行为是什么样呢？是需要客户端重新发起请求，还是服务端本身重新调用接口？如果是服务端负责重试，那么，这个方案本身没有任何重试的机制，也就是说，一个请求一旦出错，它就丢了，业务不能顺利地完成。</p><p>当我把这个问题抛了出来时，同事一下子愣住了。显然，他只考虑了正常的情况，而没有考虑出现失败的情况。把它做成一个完整的方案，很可能还需要做一个后台服务，负责替未能得到有效处理的任务善后，显然，这就不是代码调整，而是整个方案的调整。</p><p>这是很多程序员，尤其是经验比较少的程序员写程序经常会出现的问题：<strong>正常情况一切顺利，异常情况却考虑不足。</strong></p><p>我们再来说说算法正确性。</p><p>别看整个行业都十分重视算法，但那是在面试的过程中。真正到了实际工作里，算法复杂度常常被人忽略。</p><p>我们之前讲过嵌套的代码，对于循环语句，我们要把处理一个元素的代码提取出来。不过，这有时候也会带来一些意想不到的问题。</p><p>有一次代码评审，我看到了一段写得很干净的代码，就是把循环里对于一个元素的处理拆了出去。还没等我来赞美这段代码写得好，我就看到了单个元素处理的代码，每次都要查询一次数据库，找出相应的元素，做修改之后再存回去。</p><p>就这样，单独看每段代码都是对的，但合在一起就出了问题，本来可以通过一次查询解决的问题变成了N次查询。</p><p>我再给你讲一个让我印象深刻的故事。在我职业生涯的初期，我做过一段时间图像识别的工作。有一次，一个实习生说自己的代码太慢了，让我帮忙看看。</p><p>从表面上看，代码写得还不错，不是一眼能够看出问题。仔细看了半天，我在一个遍历图像像素点的循环里发现了一个图像复制的代码，也就是说，每循环一次，都要把整个图像复制一遍，代码慢就在所难免了。</p><p>我相信，如果这是一个算法练习，这两个同事都能够有效地解决这个问题，但放在工程里，就难免挂一漏万了。所以，算法正确性也是我们要在代码评审中关注的。</p><p>无论是实现方案的正确性，还是算法的正确性，对于大多数团队来说，都会关注到。但代码坏味道却是很多团队容易忽略的，这里面的关键点就是很多团队对于坏味道的标准太低了。</p><p>在这个专栏里，我讲了很多坏味道，有一些是你早就认同的，有一些则在挑战你的认知。也正是因为有这些挑战你认知的部分，所以很多代码即便经过评审，也依然会产生很多问题。关于坏味道，我们整个专栏都在说，更多的细节我就不在这里讨论了。</p><h2>及时评审</h2><p>说完代码评审中要暴露的问题，我们再来说说代码评审的另外一个方面，代码评审的频率。</p><p>不同的团队代码评审，频率是不一样的，最糟糕的肯定是不评审，整个团队闭着眼睛向前冲，这就不是我们关心的范畴。常见的评审频率是每个迭代评审一次，也有每周评审的。</p><p>我对评审的建议是，提升评审的频率，比如，每天评审一次。</p><p>评审周期过长是有问题的，周期过长，累积的问题就会增多，造成的结果就是太多问题让人产生无力感。如果遇到实现方案存在问题，要改动的代码就太多了，甚至会影响到项目的发布。</p><p>而提升评审的频率，评审的周期就会缩短，每个周期内写出来的代码就是有限的，人是有心力去修改的。学过我任何一个专栏的同学都知道，我在专栏中反复强调短小的价值，只有及时的沟通反馈，才有可能实现这一原则。</p><p>你或许会好奇，我们是不是可以再进一步提升评审的频率呢？</p><p>肯定可以，如果把代码评审推至极致，就是有个人随时随地来做代码评审。我在《<a href=\"https://time.geekbang.org/column/intro/100022301\">10x程序员工作法</a>》讲过极限编程的理念，就是把好的实现推向极致，而代码评审的极致实践就是结对编程。</p><p>结对编程就是两个人一起写一段代码，一个人主要负责写，一个人则站在用外部视角保证这段代码的正确性。好的结对编程对两个人的精力集中度要求是很高的，两个人一起写一天代码其实是很累的一件事，不过，也正是因为代码是两个人一起写，代码质量会提高很多。</p><p>从我之前经历的一些团队实践来看，结对编程还有一个额外的好处，就是对于团队中的新人提升极大，这就是拜结对编程这种高强度的训练和反馈所赐。高强度的训练和反馈，本质上就是一种刻意练习，而刻意练习是一个人提升最有效的方式。</p><p>我知道，对于大多数团队来说，是没有条件做大规模的结对编程的。但对个体来说，创造一些机会与高手一起写代码也是很好的。即便不能一起写，去观摩高手写代码也能学到很多东西。再退一步，实在身边没有机会，去网上看看高手写代码也是一种学习方式。</p><h2>总结时刻</h2><p>今天的加餐我们讨论了代码评审。对于很多人来说，代码评审只是一个发现问题的过程，而通过今天的讨论，我们知道了代码评审是一个沟通反馈的过程。站在沟通反馈的角度，我们关注的是，尽可能多地暴露问题，尽可能多地做代码评审。</p><p>代码评审可以从实现方案正确性、算法正确性和代码坏味道的角度去发现问题。代码评审的频率是越高越好，频率越高，发现和解决问题的难度越低，团队越容易坚持下去。</p><p>如果把代码评审推向极致就是随时随地做代码评审，这个实践就是结对编程。</p><p>如果今天的内容你只能记住一件事，那请记住：<strong>代码评审暴露的问题越多越好，频率越高越好</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/af/f8/afc1e5ae5yyf843680880108efce7af8.jpg?wh=2284*3156\" alt=\"\"></p><h2>思考题</h2><p>你在代码评审上有哪些经验，或者遇到过哪些让你印象深刻的问题代码，欢迎在留言区分享你的经验。如果你有所收获，也欢迎把这节课分享出去。</p><p>感谢阅读，我们下一讲再见！</p><p><span class=\"orange\">参考资料：</span><a href=\"https://time.geekbang.org/column/article/84374\">27 | 尽早暴露问题： 为什么被指责的总是你？</a></p>","comments":[{"had_liked":false,"id":276826,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1612146786,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"78921558114","product_id":100068401,"comment_content":"原文： 把循环里对于一个元素的处理拆了出去。还没等我来赞美这段代码写得好，我就看到了单个元素处理的代码，每次都要查询一次数据库，找出相应的元素，做修改之后再存回去。<br><br>结论，我认为这个每次查一次数据库没问题。<br><br>决策依据:<br>1.这样的单行操作更易理解。<br>2.批查询可能伴随大事物(毕竟你是更新动作，可能要锁（悲观或乐观）所有数据行)<br>3.如果更新操作不需要锁数据行，也就是数据行的变更对更新操作的正确性无影响。那么通过加缓存会是更好的解决方案。<br><br>综上所述，保证业务逻辑简单是第一原则。","like_count":19,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384276,"discussion_content":"建议模拟/看看两种：1.for循环里查询where=；2.for循环外查询where in。看看db的qps就知道了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626451580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531822,"discussion_content":"你觉得这么基础的会有人不懂吗？仅留言看不到原文了，没上下就不多表态了。解决方案简单优先，性能问题等真的要考虑再优化。一开始就写这种批量代码，后续迭代后逻辑混乱更难优化。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637420744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384276,"ip_address":""},"score":531822,"extra":"{\"user_type\":1}"},{"author":{"id":1079867,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7a/3b/79562df9.jpg","nickname":"静水流深","note":"","ucode":"2242CA9CB84FC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589910,"discussion_content":"你做的系统业务量多大？不然不会问这样的问题，没几个人用的后台管理系统怎么写都行，用户量上去了你for循环查sql再试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665392476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531822,"ip_address":"广东"},"score":589910,"extra":""}]},{"author":{"id":2757724,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/14/5c/70ade466.jpg","nickname":"机器🐴喝啤酒","note":"","ucode":"71464EC29C035F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589294,"discussion_content":"到底是批量查询还是单条查询难道不是业务决定的吗,在任何背景都没有的情况下争论技术方案如同讨论虚构作品的真实性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664647256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1322799,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2f/2f/1e6503bb.jpg","nickname":"自律给我自由","note":"","ucode":"6F40A68CD0B606","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531752,"discussion_content":"批量更新和单条更新对比，数量级的差距！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637406244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":1,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1322799,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2f/2f/1e6503bb.jpg","nickname":"自律给我自由","note":"","ucode":"6F40A68CD0B606","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":531825,"discussion_content":"盲点不可怕，可怕的是盲维。作为一个职业的码农，或许你可以先试试我的方案，等真的有体验了再来评价。有方案上的疑惑可以探讨。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637421010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531752,"ip_address":""},"score":531825,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":276823,"user_name":"赵智慧","can_delete":false,"product_type":"c1","uid":2394530,"ip_address":"","ucode":"3E4C39A37B7237","user_header":"https://static001.geekbang.org/account/avatar/00/24/89/a2/07fccf62.jpg","comment_is_top":false,"comment_ctime":1612146676,"is_pvip":false,"replies":[{"id":"100513","content":"你们如果能够坚持做得很好，那真的要恭喜你们了！<br><br>Code Review 这种事是为了发现问题，如果没有发现问题，一种可能是代码写得真好，另一可能是你们遇到了团队的瓶颈，发现不了问题。实话说，后一种可能性更大。<br><br>Code Review 不是一个结束，而是一个开始，发现了问题要去修改。我的团队发现问题后修改的工作量还不小，即便我们的频率已经算很高了，还是能发现不少的问题。所以，如果你们自己发现不了太多问题，可以引入别人的视角，帮你们发现问题。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612233926,"ip_address":"","comment_id":276823,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35971885044","product_id":100068401,"comment_content":"老师，您说的太对了。因为一个敏捷教练，小波带领我们做了很多。<br>例如：工程实践、每天code review、结对编程。团队也已经这样运作了奖金一年。<br>好处多多，老师您都说了。<br>但是最近碰到一些问题：因为我们技术们，尽管没有的Leader，但大家都执行的不错。结对编程、code review、暴徒式编程。但是最近code review上大家的分享越来越少了。<br>我猜测几种可能：<br>1、是不是随着大家技术的水涨船高，问题越来约少呢？<br>2、因为我最近分享老师的代码之丑，大家觉得code review变了一个调调，换成分享坏味道了？（其实分享代码之丑的时候，我分享初衷是想让大家都可以学习到，但是我本身自己做的就不太好，代码里面还有好多坏味道，直接去讲 担心大家会不会觉得太空呢？有句话说：道理都懂，可就是过不好这一生！实践真的太难了）<br>3、会不会我们的code review没有回顾会？没有去总结如何把code review做的更好？<br>4、是不是我们没有明确code review都需要做哪些事儿？列出来 1 2 3<br>5、会不会是每天都code review，频率太高了呢？每天工作量毕竟也是有限的？<br>6、会不会是太经常了，心态上已经没有最开始那么重视？我们每天5点code review，我有的时候心里面会想，到5点就算这一天的工作做完了，开个会就下班了！<br><br>我期望老师给个意见，如何能让我们的code review更上一个台阶，做的更好、更有效率呢？","like_count":9,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514829,"discussion_content":"你们如果能够坚持做得很好，那真的要恭喜你们了！\n\nCode Review 这种事是为了发现问题，如果没有发现问题，一种可能是代码写得真好，另一可能是你们遇到了团队的瓶颈，发现不了问题。实话说，后一种可能性更大。\n\nCode Review 不是一个结束，而是一个开始，发现了问题要去修改。我的团队发现问题后修改的工作量还不小，即便我们的频率已经算很高了，还是能发现不少的问题。所以，如果你们自己发现不了太多问题，可以引入别人的视角，帮你们发现问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612233926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2394530,"avatar":"https://static001.geekbang.org/account/avatar/00/24/89/a2/07fccf62.jpg","nickname":"赵智慧","note":"","ucode":"3E4C39A37B7237","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347582,"discussion_content":"明白 多谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612261742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277859,"user_name":"点","can_delete":false,"product_type":"c1","uid":2187702,"ip_address":"","ucode":"8FAC2020E12044","user_header":"https://static001.geekbang.org/account/avatar/00/21/61/b6/ba31d93e.jpg","comment_is_top":false,"comment_ctime":1612625000,"is_pvip":false,"replies":[{"id":"100939","content":"这就是缺乏反馈的结果，自己不知道自己的代码究竟写得怎么样。<br><br>你从开始学习这个专栏，其实，就已经进入到一个提高自己代码质量的过程里了，至少，现在看到有坏味道的代码，你应该能够发现一些了。<br><br>接下来，你可以去读读书，比如像《代码整洁之道》、《重构》之类的书，还是要看一下的。接下来，就是在实践中，不断地去打磨手艺了。<br><br>当然，如果你身边有人能够通过代码评审的方式给你反馈，你的提高会更快。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612776876,"ip_address":"","comment_id":277859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14497526888","product_id":100068401,"comment_content":"做几年码农了，一直没人给我review.  当第一次有人给我review时，被说像刚毕业的，羞愧难当。  如果在没有review氛围的公司，怎么提高自己的代码质量？","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515192,"discussion_content":"这就是缺乏反馈的结果，自己不知道自己的代码究竟写得怎么样。\n\n你从开始学习这个专栏，其实，就已经进入到一个提高自己代码质量的过程里了，至少，现在看到有坏味道的代码，你应该能够发现一些了。\n\n接下来，你可以去读读书，比如像《代码整洁之道》、《重构》之类的书，还是要看一下的。接下来，就是在实践中，不断地去打磨手艺了。\n\n当然，如果你身边有人能够通过代码评审的方式给你反馈，你的提高会更快。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612776876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276636,"user_name":"明","can_delete":false,"product_type":"c1","uid":1607502,"ip_address":"","ucode":"34FF545704EA8A","user_header":"https://static001.geekbang.org/account/avatar/00/18/87/4e/98173974.jpg","comment_is_top":false,"comment_ctime":1612061112,"is_pvip":false,"replies":[{"id":"100400","content":"在一个正规的团队中工作，能学到很多基本的东西。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612090265,"ip_address":"","comment_id":276636,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14496963000","product_id":100068401,"comment_content":"我从来没经经历过代码评审😂😂 所以我感觉从老师这里真的学到了好多好多","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514780,"discussion_content":"在一个正规的团队中工作，能学到很多基本的东西。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612090265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276591,"user_name":"Sinvi","can_delete":false,"product_type":"c1","uid":1064018,"ip_address":"","ucode":"2A90976980CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","comment_is_top":false,"comment_ctime":1612019057,"is_pvip":false,"replies":[{"id":"100401","content":"自己重视，比团队重视提高得更快。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612090467,"ip_address":"","comment_id":276591,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14496920945","product_id":100068401,"comment_content":"代码评审本身就是对团队成员代码质量提升的有效方法，之前我每次commit都会要求我自己先检查一下有没有更好的方式，然后老大再去看一下，每次找出问题来自己也会很难受，然后慢慢自己也都会注意起来。","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514764,"discussion_content":"自己重视，比团队重视提高得更快。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612090467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276497,"user_name":"adang","can_delete":false,"product_type":"c1","uid":1143712,"ip_address":"","ucode":"0F2ECF8B92D46B","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/a0/7dcc9212.jpg","comment_is_top":false,"comment_ctime":1611974500,"is_pvip":false,"replies":[{"id":"100349","content":"运气不错。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612008764,"ip_address":"","comment_id":276497,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14496876388","product_id":100068401,"comment_content":"还是菜鸟的时候，所在的团队有 Code Review，Leader 对每个人提交的代码都会亲自 Review 并指出问题, Leader 做评审的时候都会带上小本本记下问题，那段时间自己成长的特别快。后来因为某些原因团队解散，经历过的其他的一些团队再也没有那么好的 Review 氛围了。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514724,"discussion_content":"运气不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612008764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169313,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","nickname":"bigben","note":"","ucode":"DBD15A6C8E2590","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389198,"discussion_content":"请问带上小本本的是谁？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629172385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347063,"discussion_content":"羡慕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612146302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276540,"user_name":"Geek2808","can_delete":false,"product_type":"c1","uid":2028948,"ip_address":"","ucode":"835C9691723163","user_header":"","comment_is_top":false,"comment_ctime":1611994450,"is_pvip":false,"replies":[{"id":"100348","content":"刻意练习最重要的是适当的反馈。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612008726,"ip_address":"","comment_id":276540,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10201929042","product_id":100068401,"comment_content":"自己团队其实也一直在做代码review，老大也比较重视。读完作者这篇文章感觉自己的收获就是review的方向有了：实现方案的正确性，算法的正确性和代码的坏味道。这点我觉得的可以在review的时候刻意注意的地方。<br>特别认同作者说的刻意练习，不好的习惯，只能通过刻意的练习将其纠正过来。这个也是我最近自我感觉提高的一点，刻意的去做正确的事，慢慢的自己提高是很明显的。","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514746,"discussion_content":"刻意练习最重要的是适当的反馈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612008726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276480,"user_name":"桃子-夏勇杰","can_delete":false,"product_type":"c1","uid":1158436,"ip_address":"","ucode":"5D5F38AABA980F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/24/c6b763b4.jpg","comment_is_top":false,"comment_ctime":1611969264,"is_pvip":true,"replies":[{"id":"100409","content":"如果你需要的是代码评审的价值，可以搜搜“why code review matter”。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612091557,"ip_address":"","comment_id":276480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10201903856","product_id":100068401,"comment_content":"郑老师，有没有用系统思考的方式评估过代码评审在软件开发中的位置或者作用？","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514719,"discussion_content":"如果你需要的是代码评审的价值，可以搜搜“why code review matter”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612091557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276539,"user_name":"Geek2808","can_delete":false,"product_type":"c1","uid":2028948,"ip_address":"","ucode":"835C9691723163","user_header":"","comment_is_top":false,"comment_ctime":1611994435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5906961731","product_id":100068401,"comment_content":"自己团队其实也一直在做代码review，老大也比较重视。读完作者这篇文章感觉自己的收获就是review的方向有了：实现方案的正确性，算法的正确性和代码的坏味道。这点我觉得的可以在review的时候刻意注意的地方。<br>特别认同作者说的刻意练习，不好的习惯，只能通过刻意的练习将其纠正过来。这个也是我最近自我感觉提高的一点，刻意的去做正确的事，慢慢的自己提高是很明显的。","like_count":1},{"had_liked":false,"id":276509,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1611977878,"is_pvip":true,"replies":[{"id":"100385","content":"嗯，代码评审有经验的人会多问一句，就能发现不少问题。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612056934,"ip_address":"","comment_id":276509,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5906945174","product_id":100068401,"comment_content":"来个新鲜的案例，昨天代码评审时发现的问题：<br>```java<br>List&lt;String&gt; a = new ArrayList&lt;&gt;();<br>&#47;&#47;筛选数据，符合条件的添加到a中<br><br>List&lt;String&gt; b = new ArrayList&lt;&gt;();<br>a.addAll(b);<br><br>&#47;&#47;筛选数据，符合条件的添加到b中<br><br>&#47;&#47;结束返回a<br>return a;<br>```<br>对引用的认识不清楚，集合的addAll方法是把参数集合中的每一个Element添加到自己这个集合中，不是把集合做为一个Elements添加到集合中，形成多维关系。<br>事后追问了一个问题，同一个对象添加到两个不同的集合中，然后再从其中一个集合中取出对象对其进行修改，问此时另一个集合中的那个对象的受影响吗？","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514730,"discussion_content":"嗯，代码评审有经验的人会多问一句，就能发现不少问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612056934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1658796,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","nickname":"Aprelude","note":"","ucode":"840D3F7A35AEEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381182,"discussion_content":"那么受影响还是不受啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624941425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347513,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1654095280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654095280","product_id":100068401,"comment_content":"代码评审暴露的问题越多越好，频率越高越好--记下来","like_count":0},{"had_liked":false,"id":344297,"user_name":"远逝的栀子花","can_delete":false,"product_type":"c1","uid":1608615,"ip_address":"","ucode":"77DCF684BABEEF","user_header":"https://static001.geekbang.org/account/avatar/00/18/8b/a7/b6471f02.jpg","comment_is_top":false,"comment_ctime":1651446385,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651446385","product_id":100068401,"comment_content":"我们团队提交代码就要把提交链接发的群里大家进行检视，每周都会对大颗粒需求代码进行业务逻辑与编程规范的检视。","like_count":0},{"had_liked":false,"id":343862,"user_name":"linfei","can_delete":false,"product_type":"c1","uid":2821935,"ip_address":"","ucode":"F6F8D6DAF35C59","user_header":"","comment_is_top":false,"comment_ctime":1651104622,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651104622","product_id":100068401,"comment_content":"业务实体的批量查询是很常见的场景，但涉及权限后就很纠结了。在DDD设计中，权限和业务一般都是不同的域，或至少是不同聚合，当批量查询时容易想到的就是批量查出来，然后逐个调用权限服务进行权限判断，最后返回。但这样对于数据库来说就把原本可以批量进行的一次操作变成了n次操作，类似这一讲中提到的问题。但要把权限和业务合并在一起查询吗？那样的话就要将权限和业务合到一个聚合中？这似乎也不合适啊。","like_count":0},{"had_liked":false,"id":339198,"user_name":"Geeker","can_delete":false,"product_type":"c1","uid":1032345,"ip_address":"","ucode":"9937127DE96D78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","comment_is_top":false,"comment_ctime":1647966014,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647966014","product_id":100068401,"comment_content":"关于批量操作这点，发表下个人看法，在实际开发中，我是根据场景两种方式都有用到。<br>1. 非系统高频使用时间段，比如凌晨，定时任务这种，有在循环内访问数据库。<br>2. 系统高频使用的时间段内，还要看这个数据量的大小，如果也就几十条数据，那一次性查询出来，循环内处理，和循环内每次都查询，这样做还是区别挺大的。<br>所以具体问题具体分析。","like_count":0},{"had_liked":false,"id":331566,"user_name":"Dawson","can_delete":false,"product_type":"c1","uid":1179086,"ip_address":"","ucode":"765FA3BDC87B3A","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/ce/5d9f67e0.jpg","comment_is_top":false,"comment_ctime":1642657262,"is_pvip":true,"replies":[{"id":"121294","content":"用套路替换感觉，就是职业的进步","user_name":"作者回复","user_name_real":"编辑","uid":"1258861","ctime":1642982521,"ip_address":"","comment_id":331566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642657262","product_id":100068401,"comment_content":"有种相见恨晚的感觉，CodeReview我也在做团队内部断断续续的做，之前都是凭感觉，现在有了郑老师总结的方法论指引，让我如虎添翼。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547970,"discussion_content":"用套路替换感觉，就是职业的进步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642982521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330969,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1642329475,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642329475","product_id":100068401,"comment_content":"我们一直在做需求，没有时间做评审，就算有，也是中午边吃饭边评审，太卷了","like_count":1}]}