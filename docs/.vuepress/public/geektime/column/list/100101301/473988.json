{"id":473988,"title":"09 | 集成 Nacos：如何将服务提供者注册到 Nacos 服务器？","content":"<p>你好，我是姚秋辰。</p><p>今天我们来动手集成优惠券平台项目到Nacos服务器。这个项目我们将分两节课来讲，通过这两节课的学习，你可以知道如何借助Nacos，搭建起一个端到端的微服务调用链路。在这个过程中，你还会学到Nacos自动装配器的工作原理，以及Nacos核心参数的配置。掌握了这些内容，你就可以平稳驾驭Nacos服务治理了。</p><p>在Nacos的地盘上，下游服务需要先将自己作为“服务提供者”注册到Nacos，这个流程叫做“服务注册”；而上游服务作为“服务消费者”，需要到Nacos中获取可供调用的下游服务的列表，这个流程就是“服务发现”。</p><p>今天我先从两个下游服务coupon-template-serv和coupon-calculation-serv开始，利用Nacos的服务注册功能，将服务提供者注册到Nacos服务器。在下一节课中，我再向你展示作为服务消费者的coupon-customer-serv是如何通过服务发现机制向服务提供者发起调用。</p><p>在集成Nacos之前，我们需要先把Nacos的依赖项引入到项目中。</p><h2>添加Nacos依赖项</h2><p>Nacos是Sping Cloud Alibaba项目的一款组件，在引入Nacos的依赖项之前，我们需要在项目的顶层pom中定义所要使用的Spring Cloud和Spring Cloud Alibaba的版本。</p><!-- [[[read_end]]] --><p>Spring Boot、Spring Cloud和Spring Cloud Alibaba三者之间有严格的版本匹配关系，这三个组件的口味非常刁钻，只能和特定版本区间的搭档相互合作，一旦用错了版本，就会产生各种莫名其妙的兼容性问题。那么我们在哪里可以查询到正确的版本匹配关系呢？</p><p>Spring Boot和Spring Cloud的版本匹配关系可以从<a href=\"https://start.spring.io/actuator/info\">Spring社区网站</a>获取，访问该网址后你会看到一串JSON文件，在这个文件中，你可以看到Spring 官方给出的Spring Cloud最新分支所支持的Spring Boot版本范围。</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/2a/8c6142335c4989d8ba078fba67333f2a.jpg?wh=2000x939\" alt=\"\"></p><p>另外，Spring Cloud Alibaba、Spring Boot和Spring Cloud的匹配关系可以从Spring Cloud Alibaba的官方<a href=\"https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E\">GitHub wiki页</a>中获取，我将一些常用的版本绘制成表格，你可以作为参考。</p><p><img src=\"https://static001.geekbang.org/resource/image/b7/89/b72d6496ab660f878c0cdbe868a94489.jpg?wh=2000x1188\" alt=\"\"></p><p>我推荐你使用上图中指定的版本组合，这里列出的组合都是经过兼容性测试的稳定版本，可以用在生产环境中。我这里选择Spring Cloud 2020.0.1、Spring Cloud Alibaba 2021.1和Spring Boot 2.4.2作为实战项目的依赖版本。</p><p>接下来，我们将Spring Cloud Alibaba和Spring Cloud的依赖项版本添加到顶层项目geekbang-coupon下的pom.xml文件中。</p><pre><code>&lt;dependencyManagement&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n            &lt;version&gt;2020.0.1&lt;/version&gt;\n            &lt;type&gt;pom&lt;/type&gt;\n            &lt;scope&gt;import&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;/artifactId&gt;\n            &lt;version&gt;2021.1&lt;/version&gt;\n            &lt;type&gt;pom&lt;/type&gt;\n            &lt;scope&gt;import&lt;/scope&gt;\n        &lt;/dependency&gt;\n   &lt;/dependencies&gt;   \n   &lt;!-- 省略部分代码 --&gt;  \n&lt;/dependencyManagement&gt;\n</code></pre><p>定义了组件的大版本之后，我们就可以直接把Nacos的依赖项加入到coupon-template-serv和coupon-calculation-serv了。我分别在这两个子模块的pom.xml文件中加入了Nacos的依赖项spring-cloud-starter-alibaba-nacos-discovery。</p><pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre><p>由于我已经将Spring Cloud Alibaba的依赖项版本加到了顶层项目geekbang-coupon，因此，在添加Nacos依赖项到子模块的时候不需要特别指定 &lt; version &gt; 内容，当前子模块会尝试从父级项目读取正确的版本信息。</p><p>在添加完依赖项之后，我们就可以通过配置项开启Nacos的服务治理功能了。Nacos通过自动装配流程（auto configuration）加载配置项并开启服务注册。这个功能可不是Nacos所独有的，Spring Cloud各个组件都采用了自动装配器实现了轻量级的组件集成功能，你只需要几行配置，剩下的初始化工作都可以交给背后的自动装配器来实现。</p><p>不过，接下来我要带你了解一下Nacos自动装配器的底层原理，因为这将有助于你理解Spring Cloud组件的启动流程，如果你将来需要开发一个自定义的组件，就可以借鉴这种设计模式。</p><h2>Nacos自动装配原理</h2><p>在Spring Cloud稍早一些的版本中，我们需要在启动类上添加@EnableDiscoveryClient注解开启服务治理功能，而在新版本的Spring Cloud中，这个注解不再是一个必须的步骤，我们只需要通过配置项就可以开启Nacos的功能。那么Nacos是怎么在启动阶段自动加载配置项并开启相关功能的呢？这就要从Spring Framework的自动装配流程（Auto Configuration）说起了。</p><p>我们将Nacos依赖项添加到项目中，同时也引入了Nacos自带的自动装配器，比如下面这几个被引入的自动装配器就掌管了Nacos核心功能的初始化任务。</p><ul>\n<li><strong>NacosDiscoveryAutoConfiguration</strong>：服务发现功能的自动装配器，它主要做两件事儿：加载Nacos配置项，声明NacosServiceDiscovery类用作服务发现；</li>\n<li><strong>NacosServiceAutoConfiguration</strong>：声明核心服务治理类NacosServiceManager，它可以通过service id、group等一系列参数获取已注册的服务列表；</li>\n<li><strong>NacosServiceRegistryAutoConfiguration</strong>：Nacos服务注册的自动装配器。</li>\n</ul><p>我们以<strong>NacosDiscoveryAutoConfiguration</strong>类为例，了解一下它是怎么样工作的，先来看一下它的源码。</p><pre><code>@Configuration(proxyBeanMethods = false)\n// 当spring.cloud.discovery.enabled=true时才生效\n@ConditionalOnDiscoveryEnabled\n// 当spring.cloud.nacos.discovery.enabled=true时生效\n@ConditionalOnNacosDiscoveryEnabled\npublic class NacosDiscoveryAutoConfiguration {\n\n   // 读取Nacos所有配置项并封装到NacosDiscoveryProperties中\n   @Bean\n   @ConditionalOnMissingBean\n   public NacosDiscoveryProperties nacosProperties() {\n      return new NacosDiscoveryProperties();\n   }\n \n   // 声明服务发现的功能类NacosServiceDiscovery\n   @Bean\n   @ConditionalOnMissingBean\n   public NacosServiceDiscovery nacosServiceDiscovery(\n         NacosDiscoveryProperties discoveryProperties,\n         NacosServiceManager nacosServiceManager) {\n      return new NacosServiceDiscovery(discoveryProperties, nacosServiceManager);\n   }\n}\n</code></pre><p>NacosDiscoveryAutoConfiguration自动装配器有两个开启条件，分别是spring.cloud.discovery.enabled=true和spring.cloud.nacos.discovery.enabled=true。当我们引入Nacos的依赖项后，默认情况下这两个开关参数的值就已经是True了。也就是说，除非你主动关闭Spring Cloud和Nacos的服务发现开关，否则这个自动装配器就会自动执行加载。</p><p>接下来，我们来了解一下NacosDiscoveryAutoConfiguration中声明的两个方法，也就是nacosProperties方法和nacosServiceDiscovery方法都有什么功能。</p><p>在上面的源码中，我们看到，nacosProperties方法返回了一个NacosDiscoveryProperties类，这个类是专门用来读取和封装Nacos配置项的类，它的源码如下：</p><pre><code>// 定义了配置项读取的路径\n@ConfigurationProperties(&quot;spring.cloud.nacos.discovery&quot;)\npublic class NacosDiscoveryProperties {\n // 省略类属性\n // 这里定义的类属性和接下来我们要介绍的配置项是一一对应的\n}\n</code></pre><p>NacosDiscoveryProperties类通过ConfigurationProperties注解从spring.cloud.nacos.discovery路径下获取配置项，Spring框架会自动将这些配置项解析到NacosDiscoveryProperties类定义的类属性中。这样一来Nacos就完成了配置项的加载，在其它业务流程中，只需要注入NacosDiscoveryProperties类就可以读取Nacos的配置参数。</p><p>NacosDiscoveryAutoConfiguration中的另一个方法nacosServiceDiscovery声明了一个服务发现的功能类NacosServiceDiscovery，它的核心方法的源码如下：</p><pre><code>public class NacosServiceDiscovery {\n   // 封装了Nacos配置项的类\n   private NacosDiscoveryProperties discoveryProperties;\n   // 另一个自动装配器声明的核心服务治理类\n   private NacosServiceManager nacosServiceManager;\n\n   // 根据服务名称获取所有已注册服务\n   public List&lt;ServiceInstance&gt; getInstances(String serviceId) throws NacosException {\n      String group = discoveryProperties.getGroup();\n      List&lt;Instance&gt; instances = namingService().selectInstances(serviceId, group,\n            true);\n      return hostToServiceInstanceList(instances, serviceId);\n   }\n\n   // 返回所有服务的服务名称\n   public List&lt;String&gt; getServices() throws NacosException {\n      String group = discoveryProperties.getGroup();\n      ListView&lt;String&gt; services = namingService().getServicesOfServer(1,\n            Integer.MAX_VALUE, group);\n      return services.getData();\n   }\n   // 省略部分代码...\n}\n</code></pre><p>通过NacosServiceDiscovery暴露的方法，我们就能够根据serviceId（注册到nacos的服务名称）查询到可用的服务实例，获取到服务实例列表之后，调用方就可以发起远程服务调用了。</p><p>好，到这里我们就了解了NacosDiscoveryAutoConfiguration装配器做了什么事儿，希望你可以举一反三，通过阅读Nacos源码，深入了解下另外两个自动装配器NacosServiceAutoConfiguration和NacosServiceRegistryAutoConfiguration的底层业务。</p><p>了解了Nacos如何通过自动装配器加载配置项并开启服务治理功能之后，我们接下来去项目中添加Nacos的配置项。</p><h2>添加Nacos配置项</h2><p>Nacos的配置项包含了服务注册参数与各项运行期参数，你可以使用标准的Spring Boot配置管理的方式设置Nacos的运行参数。</p><p>以我们今天要改造的服务coupon-template-impl为例，我们先来看一下application.yml文件中添加了哪些Nacos核心配置。Nacos相关的配置项位于spring.cloud.nacos路径下，我配置的Nacos常用参数如下：</p><pre><code>spring:\n  cloud:\n    nacos:\n      discovery:\n        # Nacos的服务注册地址，可以配置多个，逗号分隔\n        server-addr: localhost:8848\n        # 服务注册到Nacos上的名称，一般不用配置\n        service: coupon-customer-serv\n        # nacos客户端向服务端发送心跳的时间间隔，时间单位其实是ms\n        heart-beat-interval: 5000\n        # 服务端没有接受到客户端心跳请求就将其设为不健康的时间间隔，默认为15s\n        # 注：推荐值该值为15s即可，如果有的业务线希望服务下线或者出故障时希望尽快被发现，可以适当减少该值\n        heart-beat-timeout: 20000\n        # 元数据部分 - 可以自己随便定制\n        metadata:\n          mydata: abc\n        # 客户端在启动时是否读取本地配置项(一个文件)来获取服务列表\n        # 注：推荐该值为false，若改成true。则客户端会在本地的一个\n        # 文件中保存服务信息，当下次宕机启动时，会优先读取本地的配置对外提供服务。\n        naming-load-cache-at-start: false\n        # 命名空间ID，Nacos通过不同的命名空间来区分不同的环境，进行数据隔离，\n        namespace: dev\n        # 创建不同的集群\n        cluster-name: Cluster-A\n        # [注意]两个服务如果存在上下游调用关系，必须配置相同的group才能发起访问\n        group: myGroup\n        # 向注册中心注册服务，默认为true\n        # 如果只消费服务，不作为服务提供方，倒是可以设置成false，减少开销\n        register-enabled: true\n</code></pre><p>我带你深入了解下上面的每个参数，以及它们背后的一些使用场景，掌握了这些Nacos的核心配置项，你就可以平稳驾驭Nacos服务治理了。</p><p><img src=\"https://static001.geekbang.org/resource/image/bd/f8/bd3383d12b43a35cfc3c240386c3e0f8.jpg?wh=2000x1338\" alt=\"\"></p><p>在这些参数中，Namespace和Group经常搭配在一块来使用，它俩在功能上也有相似之处，在实际应用中经常傻傻分不清楚它俩的用途。为了帮你更好地理解这两个参数，我来带你深入了解下这两个属性各自的使用场景。</p><p>Namespace可以用作环境隔离或者多租户隔离，其中：</p><ul>\n<li><strong>环境隔离</strong>：比如设置三个命名空间production、pre-production和dev，分别表示生产环境、预发环境和开发环境，如果一个微服务注册到了dev环境，那么他无法调用其他环境的服务，因为服务发现机制只会获取到同样注册到dev环境的服务列表。如果未指定namespace则服务会被注册到public这个默认namespace下。</li>\n<li><strong>多租户隔离</strong>：即multi-tenant架构，通过为每一个用户提供独立的namespace以实现租户与租户之间的环境隔离。</li>\n</ul><p>Group的使用场景非常灵活，我来列举几个：</p><ul>\n<li><strong>环境隔离</strong>：在多租户架构之下，由于namespace已经被用于租户隔离，为了实现同一个租户下的环境隔离，你可以使用group作为环境隔离变量。</li>\n<li><strong>线上测试</strong>：对于涉及到上下游多服务联动的场景，我将线上已部署的待上下游测服务的group设置为“group-A”，由于这是一个新的独立分组，所以线上的用户流量不会导向到这个group。这样一来，开发人员就可以在不影响线上业务的前提下，通过发送测试请求到“group-A”的机器完成线上测试。</li>\n<li><strong>单元封闭</strong>：什么是单元封闭呢？为了保证业务的高可用性，通常我们会把同一个服务部署在不同的物理单元（比如张北机房、杭州机房、上海机房），当某个中心机房出现故障的时候，我们可以在很短的时间内把用户流量切入其他单元机房。由于同一个单元内的服务器资源通常部署在同一个物理机房，因此本单元内的服务调用速度最快，而跨单元的服务调用将要承担巨大的网络等待时间。这种情况下，我们可以为同一个单元的服务设置相同的group，使微服务调用封闭在当前单元内，提高业务响应速度。</li>\n</ul><p>除了这几个场景外，你能举一反三想一下还有其他场景吗？如果你想更进一步了解Nacos的配置参数全集，可以查看<a href=\"https://github.com/alibaba/spring-cloud-alibaba\">Nacos的官方GitHub</a>或者<a href=\"https://nacos.io\">Nacos项目首页</a>。</p><p>接下来，我们只需要启动Nacos注册中心，尝试将改造好的coupon-template-serv和coupon-calculation-serv注册到Nacos服务器，验证Nacos的服务注册功能。</p><h2>验证Nacos服务注册功能</h2><p>首先，我们需要开启Nacos服务器，你可以参考<a href=\"https://time.geekbang.org/column/article/473165\">第8节课</a>的内容，以单机模式或者集群模式开启Nacos服务器。</p><p>接下来，我们需要在Nacos上创建若干个namespace（命名空间），你需在下图右侧导航栏找到“命名空间”页面，进入该页面点击“新增命名空间”按钮，分别创建三个不同的环境：production、pre-production和dev，用来表示生产环境、预发环境和开发环境。在创建namespace的过程中，一定要保证命名空间的ID和项目中的namespace属性是一致的。</p><p><img src=\"https://static001.geekbang.org/resource/image/d7/79/d7037f4ac65f931b3d473d677a4bf979.jpg?wh=2000x1005\" alt=\"\"></p><p>创建好命名空间之后，我们就可以在本地尝试启动coupon-template-impl和coupon-calculation-impl两个服务的Main方法。在这个过程中，你需要注意控制台打印出来的日志是否包含错误信息，如果有异常抛出则要case by case仔细分析。</p><p>如果应用启动一切正常，那么你就可以在下图的Nacos的服务列表中找到这两个服务。记得要选中你在应用中配置的namespace（下图上方红框处标记的“开发环境”）才能看到对应的服务注册情况。</p><p><img src=\"https://static001.geekbang.org/resource/image/d1/62/d181bdeeaff5bc108cb1bb0b168f6f62.jpg?wh=2000x1005\" alt=\"\"></p><p>好，到这里，我们的服务注册就已经完成了。</p><p>如果你是第一次接触Nacos注册中心，可能会不小心踩到一些小坑。比如说“我的服务为什么注册不上”就是一个常见的问题，这时候有几个排查问题的方向：</p><ol>\n<li>你可以先查看下你的应用启动日志，看启动过程中是否有向Nacos服务器发起注册请求，如果没有相关日志，那极大可能是你的服务注册功能被手动关闭了，或者没有引入Nacos的依赖项以启动自动装配功能；</li>\n<li>如果日志中抛出了异常，那么要case-by-case去检查异常发生的原因，是Nacos服务器地址不正确，还是参数设置不正确导致的；</li>\n<li>当日志一切正常，可服务列表还看不到数据，那么你就要看一下是不是你开启了多个Nacos服务器，而服务器之间没有通过集群模式启动注册表同步；</li>\n<li>另外你还要特别注意下配置参数中是否指定了Namespace，如果是的话，那么服务只会出现在服务列表页面中对应的Namespace标签下。</li>\n</ol><h2>总结</h2><p>现在，我们来回顾一下这节课的重点内容。今天我带你实现了Nacos的服务注册功能，将coupon-template-serv和coupon-calculation-serv注册到了Nacos Server。在这个过程中，我们以NacosDiscoveryAutoConfiguration作为引子，了解了Nacos的自动装配器是如何工作的。</p><p>自动装配器是一个在Spring领域里通用的组件集成方式，当你通过后面的学习了解到更多的Spring Cloud组件之后，就会发现它们大都利用了Auto Configuration的方式，以一种看似“无感知”的方式将自己集成到了项目之中。当你需要在自己的项目中设计一个新的组件，或者从框架层面提供一个新功能的时候，也不妨参考这种Auto Configuration的模式，设计一套轻量级的集成方案。</p><p>另外，学习Spring Cloud组件有一个共通的模式叫做“顺藤摸瓜”，这个藤就是业务启动的地方，也就是我们的“自动装配器”Auto Configuration类。从这里作为起点，顺势向下研究每一个类的功能和源码，可以构建出这个组件的轮廓骨架，帮助你从全局视角了解组件的功能。</p><p>所以，我们学习一个框架不能仅仅学习它“怎么用”，“好读书不求甚解”可不是学习技术的好习惯。你还需要知道它背后是怎么工作的，这就叫“知其然而又知其所以然”，在这个过程中，最好的老师就是“源码”。</p><h2>思考题</h2><p>最后，请你思考一下，当关闭服务的时候，服务下线指令是如何发起的，你能找到Nacos里对应的源代码吗？你可以沿着自动装配器往下，慢慢顺藤摸瓜，忍住不要在网上搜索答案，尝试锻炼自己的源码阅读能力，在这一过程中你碰到的坑都欢迎在留言区和我分享和探讨。</p><p>好啦，这节课就结束啦。也欢迎你把这节课分享给更多对Spring Cloud感兴趣的朋友。我是姚秋辰，我们下节课再见！</p>","neighbors":{"left":{"article_title":"08 | 服务治理：Nacos集群环境搭建","id":473165},"right":{"article_title":"10 | 集成 Nacos：如何通过服务发现机制向服务提供者发起调用？","id":474775}},"comments":[{"had_liked":false,"id":329531,"user_name":"so long","can_delete":false,"product_type":"c1","uid":1449679,"ip_address":"","ucode":"2A6B47BB32FC18","user_header":"https://static001.geekbang.org/account/avatar/00/16/1e/cf/97cd8be1.jpg","comment_is_top":false,"comment_ctime":1641389390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31706160462","product_id":100101301,"comment_content":"关闭服务，服务下线：主要靠注解@PreDestroy实现<br>NacosServiceRegistryAutoConfiguration-&gt;NacosAutoServiceRegistration-&gt;AbstractAutoServiceRegistration.destroy()","like_count":7},{"had_liked":false,"id":337732,"user_name":"别拽我的红领巾","can_delete":false,"product_type":"c1","uid":1600080,"ip_address":"","ucode":"4B0CC92DBF6F5D","user_header":"https://static001.geekbang.org/account/avatar/00/18/6a/50/da9e1168.jpg","comment_is_top":false,"comment_ctime":1646997422,"is_pvip":false,"replies":[{"id":"123555","content":"同学用的是新版本的spring boot&#47;cloud，因此要手工引入下面这个依赖，才能保证优先读取boostrap文件。这是新版和老版之间的一个区别<br><br><br>        &lt;dependency&gt;<br>            &lt;groupId&gt;org.springframework.cloud&lt;&#47;groupId&gt;<br>            &lt;artifactId&gt;spring-cloud-starter-bootstrap&lt;&#47;artifactId&gt;<br>        &lt;&#47;dependency&gt;","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1647180972,"ip_address":"","comment_id":337732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23121833902","product_id":100101301,"comment_content":"为什么我会优先读取application的nacos配置文件而不是boostrap呢？是不是有什么配置需要修改？","like_count":5,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556049,"discussion_content":"同学用的是新版本的spring boot/cloud，因此要手工引入下面这个依赖，才能保证优先读取boostrap文件。这是新版和老版之间的一个区别\n\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-starter-bootstrap&lt;/artifactId&gt;\n        &lt;/dependency&gt;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647180973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329332,"user_name":"来来","can_delete":false,"product_type":"c1","uid":2173616,"ip_address":"","ucode":"A8FD16CDFBC732","user_header":"https://static001.geekbang.org/account/avatar/00/21/2a/b0/f72ee91c.jpg","comment_is_top":false,"comment_ctime":1641287424,"is_pvip":false,"replies":[{"id":"119952","content":"同学可以点击进去NacosDiscoveryProperties，在这个类上有个ConfigurationProperties注解类起了关键作用，指定读取了特定前缀的配置项。你可以在本地用同样方法new一个类试试看，也会达到同样的效果","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641312145,"ip_address":"","comment_id":329332,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10231222016","product_id":100101301,"comment_content":"public class NacosDiscoveryAutoConfiguration {   &#47;&#47; 读取Nacos所有配置项并封装到NacosDiscoveryProperties中   @Bean   @ConditionalOnMissingBean   public NacosDiscoveryProperties nacosProperties() {      return new NacosDiscoveryProperties();   }<br><br>上面例子中的这个return new NacosDiscoveryProperties(); 直接new的写法有疑问，为什么不是spring的注入或者查找，直接new出来配置怎么加载的？","like_count":2,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543856,"discussion_content":"同学可以点击进去NacosDiscoveryProperties，在这个类上有个ConfigurationProperties注解类起了关键作用，指定读取了特定前缀的配置项。你可以在本地用同样方法new一个类试试看，也会达到同样的效果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641312145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2173616,"avatar":"https://static001.geekbang.org/account/avatar/00/21/2a/b0/f72ee91c.jpg","nickname":"来来","note":"","ucode":"A8FD16CDFBC732","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":544056,"discussion_content":"测试了下确实可以，估计是New后加载spring容器时置入了配置信息，半仙很牛，而且有问必答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641390484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":543856,"ip_address":""},"score":544056,"extra":""}]},{"author":{"id":1167233,"avatar":"https://static001.geekbang.org/account/avatar/00/11/cf/81/96f656ef.jpg","nickname":"杨逸林","note":"","ucode":"4BF3CF3E2F1AC7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544279,"discussion_content":"这只是个 Spring @Configuration 的一个代理，如果你把源码改了，@Configuration(proxy = false)，你这样就不行了。它这也不规范，应该是 @EnableConfigurationProperties(NacosDiscoveryProperties.class) 的形式来注入这个配置类的，很多插件都是这么写的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641456618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329523,"user_name":"so long","can_delete":false,"product_type":"c1","uid":1449679,"ip_address":"","ucode":"2A6B47BB32FC18","user_header":"https://static001.geekbang.org/account/avatar/00/16/1e/cf/97cd8be1.jpg","comment_is_top":false,"comment_ctime":1641387568,"is_pvip":false,"replies":[{"id":"120025","content":"棒棒哒，so long同学是瓜王","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641402200,"ip_address":"","comment_id":329523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5936354864","product_id":100101301,"comment_content":"老师你好，nacos服务注册顺藤摸瓜如下，主要靠实现 ApplicationListener&lt;WebServerInitializedEvent&gt;，服务启动初始化完成后进行服务注册。<br><br>NacosServiceRegistryAutoConfiguration-&gt;NacosAutoServiceRegistration-&gt;AbstractAutoServiceRegistration.onApplicationEvent(WebServerInitializedEvent event)-&gt;NacosServiceRegistry.register(Registration registration)-&gt;NacosNamingService.registerInstance(String serviceName, String groupName, Instance instance)-&gt;NamingProxy.registerService(String serviceName, String groupName, Instance instance) ","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544139,"discussion_content":"棒棒哒，so long同学是瓜王","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641402200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328854,"user_name":"大碗","can_delete":false,"product_type":"c1","uid":1027207,"ip_address":"","ucode":"F9CDC0C5BE48AC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/87/8ed5880a.jpg","comment_is_top":false,"comment_ctime":1640919259,"is_pvip":false,"replies":[{"id":"119805","content":"同学这个问题非常好，我建议生产环境使用单独的nacos服务器，把测试和生产隔离开来以保证线上环境稳定性，并且在线上nacos portal里设置更为严格的登录用户权限控制。","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640928489,"ip_address":"","comment_id":328854,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5935886555","product_id":100101301,"comment_content":"nacos具有环境隔离的功能，可以区分生产环境、预发环境和开发环境，请问老师正常生产环境中，只需要一套naocs注册中心就可以么？需不需要有一套测试的nacos注册中心，专门用于注册测试环境的服务","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542998,"discussion_content":"同学这个问题非常好，我建议生产环境使用单独的nacos服务器，把测试和生产隔离开来以保证线上环境稳定性，并且在线上nacos portal里设置更为严格的登录用户权限控制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640928489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360505,"user_name":"¯\\_(ツ)_╱¯","can_delete":false,"product_type":"c1","uid":1184261,"ip_address":"江苏","ucode":"0B4F966A73ADB4","user_header":"https://static001.geekbang.org/account/avatar/00/12/12/05/053e383a.jpg","comment_is_top":false,"comment_ctime":1666604781,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1666604781","product_id":100101301,"comment_content":"老师 pom,xml文件中&lt;relativePath&gt;的作用是什么 为什么有的pom文件中有配置为..&#47;pom.xml 有的文件中没有呀","like_count":0},{"had_liked":false,"id":356515,"user_name":"Geek_277281","can_delete":false,"product_type":"c1","uid":3044871,"ip_address":"上海","ucode":"2EAFC15259A196","user_header":"","comment_is_top":false,"comment_ctime":1662374869,"is_pvip":false,"replies":[{"id":"130685","content":"集群模式下是calculate永远是不幸的那个，还是两个交替不幸？","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1665410903,"ip_address":"上海","comment_id":356515,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1662374869","product_id":100101301,"comment_content":"nacos在集群模式下,template可以注册,calculate注册失败;在-m standalone时,两个都可以成功```不明白为什么","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589958,"discussion_content":"集群模式下是calculate永远是不幸的那个，还是两个交替不幸？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665410903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3044871,"avatar":"","nickname":"Geek_277281","note":"","ucode":"2EAFC15259A196","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586648,"discussion_content":"解决了，翻了所有的register相关的issue没找到解决方案。最后发现是因为我只开放了20000端口到公网，导致在集群情况下路由失败","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662397233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356513,"user_name":"Geek_277281","can_delete":false,"product_type":"c1","uid":3044871,"ip_address":"上海","ucode":"2EAFC15259A196","user_header":"","comment_is_top":false,"comment_ctime":1662373157,"is_pvip":false,"replies":[{"id":"130686","content":"从报错里我猜想应该是集群模式下失败了，同学你检查下cluster文件里添加的IP是不是真实IP，而不是127.0.xxx之类的所谓本机IP","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1665411102,"ip_address":"上海","comment_id":356513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1662373157","product_id":100101301,"comment_content":"老师你好,我试图在我的机器上运行您提供的源码,更改设置后,template-serv可以正常注册,但cauculation-serv不行,错误发生在cauculation-serv的启动过程中,<br>com.alibaba.nacos.api.exception.NacosException: failed to req API:&#47;nacos&#47;v1&#47;ns&#47;instance after all servers([localhost:8948]) tried: ErrCode:400, ErrMsg:&lt;html&gt;&lt;body&gt;&lt;h1&gt;Whitelabel Error Page&lt;&#47;h1&gt;&lt;p&gt;This application has no explicit mapping for &#47;error, so you are seeing this as a fallback.&lt;&#47;p&gt;&lt;div id=&#39;created&#39;&gt;Mon Sep 05 10:13:11 UTC 2022&lt;&#47;div&gt;&lt;div&gt;There was an unexpected error (type=Bad Request, status=400).&lt;&#47;div&gt;&lt;&#47;body&gt;&lt;&#47;html&gt;","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589959,"discussion_content":"从报错里我猜想应该是集群模式下失败了，同学你检查下cluster文件里添加的IP是不是真实IP，而不是127.0.xxx之类的所谓本机IP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665411102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354762,"user_name":"MrCh1ppy","can_delete":false,"product_type":"c1","uid":3075132,"ip_address":"上海","ucode":"446FFD98667571","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ec/3c/5b9d2fdc.jpg","comment_is_top":false,"comment_ctime":1660750984,"is_pvip":false,"replies":[{"id":"130677","content":"服务注册页面上看不到注册好的服务，我们可以这样排查，先以单机模式启动服务和Nacos，看服务注册是否正常，如果不正常的话开debug级别日志详细排查下。如果单机正常注册，但集群模式不正常，那么有可能就是注册信息没有同步的原因，注意一下集群IP的设置，有时候以docker或者虚机里启动Nacos要用容器IP才行","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1665410092,"ip_address":"上海","comment_id":354762,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1660750984","product_id":100101301,"comment_content":"老师您好,系统是 win11,源码使用的是您的源码,Nacos的集群已经搭建起来了,可以在控制面板看到已经节点都已经上线,单个服务启动的时候,在日志里也显示已经注册完成,但是在nacos上的控制台提示:<br>WARN There are no [com.alibaba.nacos.common.trace.event.naming.PushServiceTraceEvent] publishers for this event, please register<br>然后在服务注册的页面上看不到注册好的服务,好怪喔","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589949,"discussion_content":"服务注册页面上看不到注册好的服务，我们可以这样排查，先以单机模式启动服务和Nacos，看服务注册是否正常，如果不正常的话开debug级别日志详细排查下。如果单机正常注册，但集群模式不正常，那么有可能就是注册信息没有同步的原因，注意一下集群IP的设置，有时候以docker或者虚机里启动Nacos要用容器IP才行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665410092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2526209,"avatar":"https://static001.geekbang.org/account/avatar/00/26/8c/01/d7e1283d.jpg","nickname":"壮哥","note":"","ucode":"CC99626623838C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587310,"discussion_content":"你好，我也是这样，解决了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662973244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349541,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1656055430,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656055430","product_id":100101301,"comment_content":"为什么pom引入starter就可以自动装配？ 我写个 Hello World 它也能给我自动装配？当然是什么都能够自动装配了，但前提是我们编写的 Starter 必须要符合 SpringBoot 的自动装配规则，否则是不行的，规则是：<br><br>1、在 resources&#47;META-INF 目录下必须要有 spring.factories<br><br>2、spring.factories 文件中必须要有 org.springframework.boot.autoconfigure.EnableAutoConfiguration 对应的配置类<br><br>3、要被使用的 Bean 必须正常被扫描到","like_count":0},{"had_liked":false,"id":348834,"user_name":"郭井阳","can_delete":false,"product_type":"c1","uid":2995751,"ip_address":"","ucode":"78030396132383","user_header":"","comment_is_top":false,"comment_ctime":1655446073,"is_pvip":false,"replies":[{"id":"127576","content":"如果Nacos 日志没有打印的话，先查看本地项目启动的时候有没有发起服务注册流程，这一步由大量日志打印出来","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1657104829,"ip_address":"","comment_id":348834,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1655446073","product_id":100101301,"comment_content":"服务没有注册到nacos,也没有注册的日志，也没有报错","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578973,"discussion_content":"如果Nacos 日志没有打印的话，先查看本地项目启动的时候有没有发起服务注册流程，这一步由大量日志打印出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657104829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1424609,"avatar":"https://static001.geekbang.org/account/avatar/00/15/bc/e1/cb5ffddf.jpg","nickname":"药味","note":"","ucode":"8D894D423BBB54","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582980,"discussion_content":"springboot2.6.3对吧，@ConditionalOnBean({AutoServiceRegistrationProperties.class}) AutoServiceRegistrationProperties这个bean是空的，排查了很久","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659857720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346850,"user_name":"Geek_0b93c0","can_delete":false,"product_type":"c1","uid":2971019,"ip_address":"","ucode":"ACAA7817AD2C61","user_header":"","comment_is_top":false,"comment_ctime":1653471421,"is_pvip":false,"replies":[{"id":"126730","content":"同学切换一下Nacos的几个namespace，如果本地注册成功，那么有两个可能：<br>1）注册到了其他namespace下-&gt;检查服务namespace设置<br>2）服务名称写错了，注册到了另一个服务的instance list里 -&gt; 检查下spring.application.name和nacos下的服务名","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1654238024,"ip_address":"","comment_id":346850,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653471421","product_id":100101301,"comment_content":"coupon-template-serv 日志显示注册成功 但是网页上没有显示 yml 命名空间dev  nacos也设置了<br>coupon-calculation-serv则是正常的 ","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574668,"discussion_content":"同学切换一下Nacos的几个namespace，如果本地注册成功，那么有两个可能：\n1）注册到了其他namespace下-&gt;检查服务namespace设置\n2）服务名称写错了，注册到了另一个服务的instance list里 -&gt; 检查下spring.application.name和nacos下的服务名","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654238024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344578,"user_name":"无与伦比","can_delete":false,"product_type":"c1","uid":2294284,"ip_address":"","ucode":"749CCC4322A6F7","user_header":"https://static001.geekbang.org/account/avatar/00/23/02/0c/7ead6a2c.jpg","comment_is_top":false,"comment_ctime":1651654430,"is_pvip":false,"replies":[{"id":"126166","content":"正常的飞起，同学不要慌，坐稳扶好配起来拔腿就用","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1652584403,"ip_address":"","comment_id":344578,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651654430","product_id":100101301,"comment_content":"老师，Spring Cloud Alibaba 2021.1对应的Nacos Client版本为1.4.1，前面用的Nacos Server版本为2.0.3，这样能正常调用服务吗？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572050,"discussion_content":"正常的飞起，同学不要慌，坐稳扶好配起来拔腿就用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652584403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340898,"user_name":"牛年榴莲","can_delete":false,"product_type":"c1","uid":1183703,"ip_address":"","ucode":"230C076193C6C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/d7/31d07471.jpg","comment_is_top":false,"comment_ctime":1649223869,"is_pvip":false,"replies":[{"id":"125182","content":"这个依赖包是spring-boot的基石包，很多spring注解是需要通过这个包来启用","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1650416650,"ip_address":"","comment_id":340898,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1649223869","product_id":100101301,"comment_content":"spring-boot-starter-web<br><br>不知道为什么引入这个才能注册到 nacos ，请大佬给下提示","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565191,"discussion_content":"这个依赖包是spring-boot的基石包，很多spring注解是需要通过这个包来启用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650416650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2928763,"avatar":"","nickname":"小羊","note":"","ucode":"B8A684FABC6AD6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572264,"discussion_content":"web不就是用来给你上网的吗，不上网怎么注册","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652683409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338800,"user_name":"你的笑忘书","can_delete":false,"product_type":"c1","uid":1521181,"ip_address":"","ucode":"9665D5E9EDBEA6","user_header":"https://static001.geekbang.org/account/avatar/00/17/36/1d/874dc1e3.jpg","comment_is_top":false,"comment_ctime":1647745888,"is_pvip":false,"replies":[{"id":"123910","content":"服务端可以无缝升级2.0版，官方也给出了升级指南 <br>https:&#47;&#47;nacos.io&#47;zh-cn&#47;docs&#47;2.0.0-upgrading.html","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1647871249,"ip_address":"","comment_id":338800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647745888","product_id":100101301,"comment_content":"Spring Cloud Alibaba 2021.1 适配的 Nacos 版本是 1.4.1","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557583,"discussion_content":"服务端可以无缝升级2.0版，官方也给出了升级指南 \nhttps://nacos.io/zh-cn/docs/2.0.0-upgrading.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647871249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334411,"user_name":"哦吼掉了","can_delete":false,"product_type":"c1","uid":1232599,"ip_address":"","ucode":"1F89B1BA1EEF52","user_header":"https://static001.geekbang.org/account/avatar/00/12/ce/d7/8168e1bf.jpg","comment_is_top":false,"comment_ctime":1644925090,"is_pvip":true,"replies":[{"id":"122265","content":"这三者之间有版本适配关系，有适配版本范围，sc不是接口，可以理解为基于springboot之上构建的微服务规范+实现","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1645079154,"ip_address":"","comment_id":334411,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644925090","product_id":100101301,"comment_content":"springcloud版本决定了springboot和springcloudAlibaba的版本么？怎么理解其中的依赖，sc版本是接口么","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551663,"discussion_content":"这三者之间有版本适配关系，有适配版本范围，sc不是接口，可以理解为基于springboot之上构建的微服务规范+实现","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645079154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334064,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1644720494,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1644720494","product_id":100101301,"comment_content":"这个和dubbo的服务注册理念差别很大，dubbo是以接口为中心的来注册的，Springcloud是以整个服务为中心来注册的","like_count":0},{"had_liked":false,"id":332498,"user_name":"Wzefeng","can_delete":false,"product_type":"c1","uid":1168826,"ip_address":"","ucode":"C732832121D404","user_header":"https://static001.geekbang.org/account/avatar/00/11/d5/ba/601f765a.jpg","comment_is_top":false,"comment_ctime":1643276095,"is_pvip":false,"replies":[{"id":"121471","content":"是不是spring boot和cloud两者的版本不匹配？建议使用我的源代码，同样版本的nacos试一下","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1643300539,"ip_address":"","comment_id":332498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643276095","product_id":100101301,"comment_content":"老师，请问向 nacos 注册服务，SpringBoot 服务日志提示 Cannot determine local hostname 该怎么定位问题","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548668,"discussion_content":"是不是spring boot和cloud两者的版本不匹配？建议使用我的源代码，同样版本的nacos试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643300539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330013,"user_name":"Rorchachl","can_delete":false,"product_type":"c1","uid":1895320,"ip_address":"","ucode":"7AABFF65A0033C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/KiaBJsepm9fHHicfPxiahhR3RqRaR4QH6YFibIHV5o5VspTIXmH72iaiaotb4cRpWtRvLC7mnh5KH1KlSNLGWlI7wUicQ/132","comment_is_top":false,"comment_ctime":1641731241,"is_pvip":false,"replies":[{"id":"120280","content":"同学总结的相当到位，赞一个","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641820548,"ip_address":"","comment_id":330013,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641731241","product_id":100101301,"comment_content":"1. 在最上层引入spring cloud Spring cloud alibaba  依赖 <br>spring boot spring cloud 兼容问题 参考spring社区网站<br>spring cloud Alibaba spring boot spring cloud的匹配关系 从spring cloud alibaba github 获取<br>2. namespace 一般用于区分环境  各个环境之间是互相隔离的 即 dev环境下的实例  不能访问 production环境下的实例<br>租户间的隔离 每个用户都单独使用一个namespace<br><br>3. group 用于实现同一个namespace下之间的隔离<br>线上测试 把带测试的服务 统一设定一个分组 group-a 真实的线上流量不会导入到新建的分组中 可以通过发送测试请求到group-a 的机器上完成测试<br>单元封闭 同一个单元的服务设置相同的group，让微服务调用封闭在当前单元内，提高业务响应速度","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545078,"discussion_content":"同学总结的相当到位，赞一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641820549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329899,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1641634223,"is_pvip":true,"replies":[{"id":"120208","content":"兄弟说的对，nacos不是拔网线跑路，是主动到网管那下机的","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641728290,"ip_address":"","comment_id":329899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641634223","product_id":100101301,"comment_content":"org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration#destroy 方法,也就是Spring项目停止的时候,就会注销自己,兄弟们,我说的对吗?","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544839,"discussion_content":"兄弟说的对，nacos不是拔网线跑路，是主动到网管那下机的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641728290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329441,"user_name":"Geek_e93c48","can_delete":false,"product_type":"c1","uid":2878664,"ip_address":"","ucode":"4418236B0BF4DE","user_header":"","comment_is_top":false,"comment_ctime":1641351513,"is_pvip":false,"replies":[{"id":"120017","content":"默认情况下是的，不过如果想降低服务剔除的延迟，可以将间隔和timeout设置的更小","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641399120,"ip_address":"","comment_id":329441,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641351513","product_id":100101301,"comment_content":"老师，上文的nacos心跳机制机制为间隔5s，默认三次收不到心跳就会判断服务不可用，心跳超时时间应该是15s吧","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544122,"discussion_content":"默认情况下是的，不过如果想降低服务剔除的延迟，可以将间隔和timeout设置的更小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641399120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329135,"user_name":"代先生。","can_delete":false,"product_type":"c1","uid":2019534,"ip_address":"","ucode":"1CBFB13D7FD3B1","user_header":"https://static001.geekbang.org/account/avatar/00/1e/d0/ce/a81126ea.jpg","comment_is_top":false,"comment_ctime":1641174589,"is_pvip":true,"replies":[{"id":"119896","content":"同学在Nacos后面的负载均衡这一讲中会了解到本地负载均衡器如何从服务列表中选择目标服务","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641203627,"ip_address":"","comment_id":329135,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641174589","product_id":100101301,"comment_content":"如果有订单服务A和订单服务B，nacos作为服务注册与发现，那么A和B服务的调用规则这块配置或者源码是怎么体现的？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543561,"discussion_content":"同学在Nacos后面的负载均衡这一讲中会了解到本地负载均衡器如何从服务列表中选择目标服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641203627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}