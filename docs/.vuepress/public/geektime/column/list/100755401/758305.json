{"id":758305,"title":"04｜使用LLM提取和传递知识","content":"<p>你好，我是徐昊，今天我们来继续学习AI时代的软件工程。</p><p>通过前面的学习，我们逐步认识了知识工程的整体框架，并且尝试用知识工程的视角重新理解软件工程，那么软件工程效率提升的问题，自然就转化成为构造知识传递效率更高的知识过程。</p><p>那么大语言模型（Large Language Model，LLM）能否让知识过程更高效呢？这就是今天我们要讨论的问题，因为这是将大语言模型（Large Language Model，LLM）应用到知识过程的前提条件。</p><h2><strong>LLM是革命性的迁移学习平台</strong></h2><p>LLM是怎么帮助我们提取知识的呢？我们首先需要将<strong>LLM看作一种特殊的迁移学习（Transfer Learning）平台</strong>。</p><p>迁移学习（Transfer Learning）是机器学习领域的一个重要概念，意思是将从一个问题（源任务）中学到的知识应用到另一个相关的问题（目标任务）上。即使两个任务不完全相同，一个任务中学到的特征、模式和知识也可以在另一个任务中发挥作用，从而提高学习效率和性能。比如，一个可以识别猫狗的计算机视觉AI，可以通过迁移学习训练成用来识别汽车的AI。</p><p>迁移学习在实际应用中非常重要，特别是在数据稀缺的情况下。例如，在深度学习中，训练一个从头开始的模型通常需要大量的标记数据和计算资源。通过迁移学习，我们可以利用在大型数据集上预训练的模型，然后将这些模型调整（fine-tune）到特定的、数据较少的任务上。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/48/de/48d5b74900de0bc19a5d12ba2c074dde.jpg?wh=1742x871\" alt=\"\" title=\"从头训练与迁移学习\"></p><p>LLM是一个非常特殊的模型，它的核心能力是<strong>阅读理解</strong>——结合预训练集中的语料，根据提示词中提供的上下文信息执行任务。从概念上说，当我们为LLM提供了上下文之后，实际已经把<strong>LLM迁移成为一个面向特定领域的模型了</strong>。</p><p>回想一下我们在<a href=\"https://time.geekbang.org/column/article/757007\">开篇词</a>中提过的例子：</p><pre><code class=\"language-plain\">目前我们在编写一个产品目录服务，通过API提供所有可售商品的详细信息；\n此API包含列出所有商品，按SKU查看某个商品，按照分类列出商品以及按关键词搜索的功能；\nAPI返回的结果是json格式；\n当查找的SKU不存在时，返回404；\n按关键搜索功能使用POST而不是GET；\n使用Java编写；\n为所有功能提供功能测试，包括异常情况。\n请编写功能和测试代码。\n</code></pre><p>这其中包含了<strong>上下文描述</strong>和<strong>问题/任务</strong>两个部分：</p><pre><code class=\"language-plain\">目前我们在编写一个产品目录服务，通过API提供所有可售商品的详细信息；(业务上下文)\n此API包含列出所有商品，按SKU查看某个商品，按照分类列出商品以及按关键词搜索的功能；（业务功能描述）\nAPI返回的结果是json格式；(技术规范描述）\n当查找的SKU不存在时，返回404；(技术规范描述）\n按关键搜索功能使用POST而不是GET；（最佳实践）\n使用Java编写；（技术栈）\n为所有功能提供功能测试，包括异常情况；（代码范围）\n请编写功能和测试代码。（问题/任务）\n</code></pre><p>在概念上，如果将提示词中的上下文与问题当作截然不同的两个部分，那么实际上我们可以将结合了上下文的LLM看作一个经过迁移学习后的模型：</p><p><img src=\"https://static001.geekbang.org/resource/image/77/b4/772c489a62248ac2df6efc3bc27e46b4.jpg?wh=1694x906\" alt=\"\" title=\"在概念上将 LLM 看作迁移学习\"></p><p>之所以可以这样看待大模型，是因为LLM在大规模数据集上进行预训练，能够学习到语言的深层结构和模式，因此具备了很强的<strong>泛化能力</strong>。</p><p>这意味着LLM可以很容易地适应新的任务和领域，即使这些任务和领域在预训练时没有明确地被考虑进去。伴随着泛化能力，目前很多LLM支持<strong>零样本（zero-shot）或少样本（few-shot）学习</strong>。这意味着即使没有数据训练，或者只有很少的数据的情况下，LLM也可以执行特定任务。</p><p>零样本或少样本学习是一种<strong>革命性的迁移学习机制</strong>。比起传统迁移学习，训练数据从几千几万条降低到零或几条。训练时间从几天、几周甚至几个月缩短到几秒钟或者几分钟。</p><p>我们在提示词中对于上下文的描述，实际上是在使用<strong>零样本学习对LLM进行迁移学习训练。</strong>将LLM看作一种特殊的迁移学习（Transfer Learning）平台是通过LLM提取知识的关键，提醒我们需要将用以迁移的上下文和具体的任务分开来看待。</p><h2>聚焦于知识而非任务</h2><p>请你回想一下我们在开篇词中提到的例子，它最开始的版本是这样的：</p><pre><code class=\"language-plain\">目前我们在编写一个产品目录服务，通过API提供所有可售商品的详细信息。此API不能修改或增加可售商品。使用Java编写。\n请提供代码和所有功能的功能测试。\n</code></pre><p>在这个提示词中，主要描述的是<strong>任务本身</strong>，也就是我们希望LLM帮助我们做什么，对于上下文和知识的描述是非常粗略的。此刻我们的关注点聚焦在LLM能做什么，寄希望于大模型的预训练<strong>恰好能够帮助我们补足上下文。</strong></p><p>这其实是过往时代和经验带来的局限，<strong>我们习惯性地认为，将某个工作实际做出来是非常花费时间的，那么越早开始越好</strong>。但是在LLM时代，做出来的成本是非常低的，<strong>做对的成本是非常高的</strong>。因而，<strong>用好LLM的第一步，就是聚焦于知识的提取与组织。</strong></p><p>我们可以把要做的事情放在一边，将目光更多的集中在<strong>如何迁移训练LLM</strong>，也就是如何提取上下文、如何提取知识上。那么我们可以构造这样的一个提示词：</p><pre><code class=\"language-plain\">背景\n===\n目前我们在编写一个产品目录服务，通过API提供所有可售商品的详细信息。\n此API不能修改或增加可售商品。\n使用Java编写。\n\n任务\n===\n请问这个产品目录服务主要有什么功能？\n</code></pre><p>我建议所有人在使用提示词的时候，都将知识的部分（背景）与任务的部分分开。这样能有一个明确的关注点。在这个改版的提示词中，我们暂时放弃了最终目标，而首先检查我们的知识提取是否足够清楚。ChatGPT给我的答案是：</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/6d/7bbc5d1d76d9856e9286af849a01546d.jpg?wh=1596x1531\" alt=\"\"></p><p>显然，这个答案与我预期的结果是不同的，我们预期中这个API只有列出所有商品、按SKU查看某个商品、按照分类列出商品以及按关键词搜索的功能。ChatGPT列出了非常多的额外功能。如果在这个基础上去生产代码，就会有很多无用的功能。</p><p>那这说明什么呢？<strong>说明迁移学习的效果并不好，LLM仍然受基础模型的影响，并没有完全迁移到我们现在要处理的领域。</strong>我们需要补充额外的信息，让LLM更接近我们要处理的领域。</p><p>我们可以补充这部分信息，然后使用同样的问题，再次询问LLM：</p><pre><code class=\"language-plain\">背景\n===\n目前我们在编写一个产品目录服务，通过API提供所有可售商品的详细信息。\n此API包含列出所有商品，按SKU查看某个商品，按照分类列出商品以及按关键词搜索的功能；\n使用Java编写。\n\n任务\n===\n请问这个产品目录服务主要有什么功能？\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/48/3e/486311788930f3da305926d7e9a6123e.jpg?wh=1544x1421\" alt=\"\"></p><p>这一次因为我们明确了功能的范围，ChatGPT给出的答案就完全符合我们的要求了。同样，我们还可以继续验证当前的业务知识是否是足够的，比如：</p><pre><code class=\"language-plain\">背景\n===\n目前我们在编写一个产品目录服务，通过API提供所有可售商品的详细信息。\n此API包含列出所有商品，按SKU查看某个商品，按照分类列出商品以及按关键词搜索的功能；\n使用Java编写。\n\n任务\n===\n请问通过API提供的产品信息都包含哪些内容？\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/78/95/783788c80d571d29765edd24dyyfdb95.jpg?wh=1631x2302\" alt=\"\"></p><p>同样ChatGPT提供了非常多的额外信息。如果在这个基础上去生产代码，还是会有很多无用的功能。因为我们这里是个例子，并没有细扣其中的具体实现细节，但是在实际工作中，我们可能会根据实际的情况，补充更完备的信息，比如：</p><pre><code class=\"language-plain\">背景\n===\n目前我们在编写一个产品目录服务，通过API提供所有可售商品的详细信息。\n商品详细信息包括：SKU，商品名字，不同的产品选项，以Markdown形式保存的商品详情；\n此API包含列出所有商品，按SKU查看某个商品，按照分类列出商品以及按关键词搜索的功能；\n使用Java编写。\n\n任务\n===\n请问通过API提供的产品信息都包含哪些内容？\n</code></pre><p>当我们把目标聚焦于知识时，我们所关注的就不再仅仅是通过LLM帮助完成某些功能，而是如何使用LLM高质量地完成某些功能。</p><h2>通过LLM提取与传递知识</h2><p>这种通过LLM的反馈反思并修改知识描述的方式，就是知识工程中的<strong>知识提取流程</strong>，你可以结合下图来理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/72/e971c672db26bef0edc6713648f4ba72.jpg?wh=1537x787\" alt=\"\"></p><p>回想一下刚刚的例子，我们提取的是什么知识呢？我们提取的是隐式知识（Implicit Knowledge）。因为对于业务的上下文我们已经有了构想和要求，只不过没有变成文字形式而已。</p><p>在提取了隐式知识之后，我们就可以在提取的知识之上，完成不同的任务了。这时候我们的关注点又<strong>从知识重新回到了任务</strong>。但此时我们会发现，提取出的知识并不仅仅能服务于某一项任务。在上面的例子里，虽然我们是为了编写代码而做的知识提取，但是产生的结果可以服务于其他任务。比如，为API编写文档：</p><pre><code class=\"language-plain\">背景\n===\n目前我们在编写一个产品目录服务，通过API提供所有可售商品的详细信息。\n商品详细信息包括：SKU，商品名字，不同的产品选项，以Markdown形式保存的商品详情；\n此API包含列出所有商品，按SKU查看某个商品，按照分类列出商品以及按关键词搜索的功能；\n使用Java编写。\n\n要求\n===\n所有API文档需要以RAML形式编写;\n如存在异常分支，给出示例;\n\n任务\n===\n根据背景中描述的业务，按要求编写文档\n</code></pre><p><strong>当我们完成了知识提取，再将知识应用到具体的任务时，就是知识的传递和应用的过程</strong>。在知识工程中，知识的提取与传递流程如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/6e/b6/6e36412fe0d123e279c5f05ff5294fb6.jpg?wh=1847x1080\" alt=\"\"></p><h2>小结</h2><p>今天我们介绍了为什么要将LLM看作一个迁移学习平台，这样我们就可以将提示词中的上下文和任务赋予不同的意义。上下文负责迁移学习，而任务是要进行的操作。</p><p>然后我们沿用了开篇词里产品目录服务的例子，演示了如何提取上下文、如何提取知识。这里的重点是我们要聚焦在知识而非任务上，通过LLM来检验知识的收集与提炼是否充分。再把提取的知识与任务结合，完成知识的传递与应用。</p><p>通过LLM的辅助，利用知识与任务的分离，我们有效地收集和传递了显式化的隐式知识。但是对于知识过程中的核心——不可言说知识要怎么处理呢？我们下节课再继续讨论。</p><h2>思考题</h2><p>这节课例子演示了如何利用LLM提取隐式知识，那么对于不可言说知识，我们要怎么提炼和应用呢？</p><p>欢迎在留言区分享你的想法，我会让编辑置顶一些优质回答供大家学习讨论。</p>","neighbors":{"left":{"article_title":"03｜通过知识过程重新理解软件工程","id":757458},"right":{"article_title":"05｜使用LLM应用和提取不可言说知识","id":758937}},"comments":[{"had_liked":false,"id":388606,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1512517,"ip_address":"辽宁","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1710469879,"is_pvip":false,"replies":[{"id":141477,"content":"对 刻意练习","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1710475605,"ip_address":"浙江","comment_id":388606,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"老师，就是不知道如何去描述这个上下文，这方面是由于对所要解决的问题(任务)其中设计到的隐性知识不理解，导致无法准确描述的吧，解决的办法就是多次提出验证性的问题吗？","like_count":3,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639305,"discussion_content":"对 刻意练习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710475605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640301,"discussion_content":"不知道如何去描述上下文怎么办？\n\n老师说：多次提出验证性的问题、刻意练习。\n\n我觉得老师的回答不够好。\n\n我从文中总结出的方法是：“分而治之”和“筛选”循环。\n\n比如，拿文中的例子来看看这两步是怎么发挥作用的，数字体现了上下文的演进：\n\n上下文1.0：产品目录服务。\n\n1、问 LLM 这个服务有什么功能。（分而治之）\n\n（LLM回复了一大串功能。。。）\n\n2、筛选一下功能，丢到下一个上下文，成为上下文2.0。（筛选）\n\n上下文2.0：产品目录服务，API包含 x，y，z功能。\n\n接下来就是重复 1 和 2 就行了。比如，继续问产品有什么信息（分而治之）。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1711378204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168960,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d6/40/e1a51ac1.jpg","nickname":"Washington","note":"","ucode":"00F5F36416147D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645775,"discussion_content":"扎实学好如何写软件需求，对写提示词会有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716764201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1898023,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","nickname":"术子米德","note":"","ucode":"382EA7E2AF0B56","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639453,"discussion_content":"讲不清楚，给个例子，亲测有效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710679920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389014,"user_name":"范飞扬","can_delete":false,"product_type":"c1","uid":2721761,"ip_address":"广东","ucode":"A665DF46833A81","user_header":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","comment_is_top":false,"comment_ctime":1711378214,"is_pvip":false,"replies":[{"id":141563,"content":"问题要自己定义 因为通常提问题不是你自己 ","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1711420191,"ip_address":"北京","comment_id":389014,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"不知道如何去描述上下文怎么办？\n\n老师说：多次提出验证性的问题、刻意练习。\n\n我觉得老师的回答不够好。\n\n我从文中总结出的方法是：“分而治之”和“筛选”循环。\n\n比如，拿文中的例子来看看这两步是怎么发挥作用的，数字体现了上下文的演进：\n\n上下文1.0：产品目录服务。\n\n1、问 LLM 这个服务有什么功能。（分而治之）\n\n（LLM回复了一大串功能。。。）\n\n2、筛选一下功能，丢到下一个上下文，成为上下文2.0。（筛选）\n\n上下文2.0：产品目录服务，API包含 x，y，z功能。\n\n接下来就是重复 1 和 2 就行了。比如，继续问产品有什么信息（分而治之）。","like_count":2,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640333,"discussion_content":"问题要自己定义 因为通常提问题不是你自己 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1711420191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":643051,"discussion_content":"谢谢老师，我琢磨琢磨","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714005708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":640333,"ip_address":"广东","group_id":0},"score":643051,"extra":""}]}]},{"had_liked":false,"id":388684,"user_name":"术子米德","can_delete":false,"product_type":"c1","uid":1898023,"ip_address":"浙江","ucode":"382EA7E2AF0B56","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","comment_is_top":false,"comment_ctime":1710679271,"is_pvip":true,"replies":[{"id":141491,"content":"想一下 提取 和 创造 分别是什么认知行为模式","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1710709916,"ip_address":"浙江","comment_id":388684,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"🤔☕️🤔☕️🤔\n【R】from知识工程，at软件工程：\n🔼 软件工程效率 = 构造知识传递过程 🔼\n迁移学习（Transfer Learning）-&gt; LLM with ctxInfo in prompt -&gt; new domain specific LLM.\n【.I.】LLM里的参数，来自人类的所有知识；跟LLM聊天的过程，就是在把这些参数，还原为相应知识的过程，或者用这些参数，组合出新知识的过程。\n聊法，就是让凝结为参数的知识，再次释放出知识的方法，高级点就叫做迁移学习，土法叫做会聊天。\n【R】atLLM时代：做出来🔽，做正确🔼。\n【Q】知识的提取与组织，跟知识的创造之间的关系是什么？提取，是否意味着知识已经存在，只是没有显式表达出来，而创造，是否意味着知识要实践过程新创造出来，才有所谓的提取知识可言？\n— by 术子米德@2024年3月17日","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639474,"discussion_content":"想一下 提取 和 创造 分别是什么认知行为模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710709916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":1898023,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","nickname":"术子米德","note":"","ucode":"382EA7E2AF0B56","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":639476,"discussion_content":"提取/Ordered：Clear/Categorize or Complicated/Analyze；\n创造/Unordered：Complex/Probe;\n\n另：处于Chaotic，如何切换到Complex？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710715440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":639474,"ip_address":"浙江","group_id":0},"score":639476,"extra":""}]}]},{"had_liked":false,"id":388627,"user_name":"Geek1591","can_delete":false,"product_type":"c1","uid":2028942,"ip_address":"北京","ucode":"A65CFAE8B3F857","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/8e/1d68db9a.jpg","comment_is_top":false,"comment_ctime":1710498235,"is_pvip":false,"replies":[{"id":141481,"content":"收到催更，等待期间可以琢磨一下现有内容，第一章相当重要，后面应用过程中还会反复运用这里的原则。","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1710498893,"ip_address":"北京","comment_id":388627,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"老师多更新一些啊，意犹未尽","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639330,"discussion_content":"收到催更，等待期间可以琢磨一下现有内容，第一章相当重要，后面应用过程中还会反复运用这里的原则。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710498893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388599,"user_name":"需要练习的码农","can_delete":false,"product_type":"c1","uid":3845503,"ip_address":"北京","ucode":"F46A9D11DD2C1F","user_header":"https://static001.geekbang.org/account/avatar/00/3a/ad/7f/a80b86c0.jpg","comment_is_top":false,"comment_ctime":1710461832,"is_pvip":false,"replies":[{"id":141480,"content":"可以结合当前更新的这几篇内容大胆推测一下～","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1710495217,"ip_address":"北京","comment_id":388599,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"课后题答案没思路，感觉还是和识别隐性知识一样的方式，不断prompt。背景、要求、任务中描述的更加具体。","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639326,"discussion_content":"可以结合当前更新的这几篇内容大胆推测一下～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710495217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388630,"user_name":"临风","can_delete":false,"product_type":"c1","uid":1145430,"ip_address":"广东","ucode":"59A7F3DDD94D76","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/56/29877cb9.jpg","comment_is_top":false,"comment_ctime":1710509419,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"    看到老师对留言的回复，强调了第一章内容的重要性，我又返回去看了第一节内容。答案就在题面上，“围绕不可言说知识构造知识过程”，LLM（大语言模型）就是AI时代的利器，那我们要怎么去构造知识过程呢？从第一节的内容可以知道，我们必须要通过社会化的活动，不断的训练、反思，刻意练习才能掌握。\n    突然想到一个例子，不知道大家玩不玩王者荣耀，我偶尔也会玩，里面有一个绝悟AI的训练场。它可以帮助你去练习各个英雄的连招，就比如露娜的月下无限连，如果是一两年前，你想学会这个连招，你只能去看视频教程，然后自己去摆放木偶进行练习。按的快了以后，你也不知道按对了没有，因为你缺乏反馈或者反馈过慢，除了少数特别热爱或者天赋极高的人，大多数人是无法学会这个连招的。但现在，界面会提示你当下需要的操作，你每进行一次操作，界面就会给你反馈，判断你当前是否操作正确。所以有了这个训练场，对于一个资质平平的普通人，可能要过去要花几十个小时才能学会，现在花几个小时就能学会了。不可言说的游戏连招操作，在这里传递效率就提升了10多倍。\n    同理，软件工程是否也是一样呢？我觉得答案也是肯定的，我们同样可以通过LLM制造一个“训练场”。比如团队中想要统一代码风格，它的好处就是能降低认知负载，每个人读自己的代码都是相对简单的，但代码风格这种东西是没办法说清楚的，但你一看到一段代码，你就能够看出来和谁的比较像，那么我给LLM喂上大量相同风格的代码，之后我再给LLM一段代码，它就能自动转换为我希望的风格，新的同事就能快速掌握团队的代码风格。","like_count":5},{"had_liked":false,"id":388594,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"浙江","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1710435259,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"在提问的时候使用敬语，和 AI 做朋友，以后就有一个强大的朋友\n分离关注点，有助于学习老师提问的技能","like_count":3},{"had_liked":false,"id":388619,"user_name":"一只豆","can_delete":false,"product_type":"c1","uid":1003886,"ip_address":"广东","ucode":"73953B25ADC953","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/6e/efb76357.jpg","comment_is_top":false,"comment_ctime":1710487497,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"关于如何利用 LLM 提炼和应用“不可言说知识”，也许谜底就在谜面上。\n翻阅一下“不可言说知识”在课程中提到的蛛丝马迹：1 特定场景下的 know-how 2 从应用题场景里提取隐含的数学关系，然后选择正确的公式或算法求解 3 《庄子》中轮扁询问学徒任务场景下（拿到材料和制式）的制作思路，并根据师傅的经验提供反馈 4 架构设计的不可言说知识在于 如何应对变化。\n这些蛛丝马迹共同指向两个关键点： 强场景相关 ，场景解读和对策的映射具象化了不可言说知识。所以，也许“不可言说知识”的验证性问题就是：让 LLM 自编自演+内心独白。 自编自演是描述场景和解决思路；内心独白 是外化场景和解决思路之间的映射关系。\n徐昊老师啊，打字打出这两段话真是费了老鼻子劲儿了～  您课程太通透了，我无以为报，只好豁出去参与一下的啦","like_count":2},{"had_liked":false,"id":392983,"user_name":"Sophia-百鑫","can_delete":false,"product_type":"c1","uid":1269105,"ip_address":"上海","ucode":"070DC977441003","user_header":"https://static001.geekbang.org/account/avatar/00/13/5d/71/4f6aad17.jpg","comment_is_top":false,"comment_ctime":1722397940,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"提炼不可言说知识的 主要途径 还是要询问 对方的思维过程和对上下文背景的侧重点把握，为啥这么决定。 通过不断的提问验证提问验证，就会挖掘出不可言说的知识 ，不可言说知识通常背后有个强大的方法论支持，基石。","like_count":0},{"had_liked":false,"id":390974,"user_name":"术子米德","can_delete":false,"product_type":"c1","uid":1898023,"ip_address":"浙江","ucode":"382EA7E2AF0B56","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","comment_is_top":false,"comment_ctime":1716936664,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100755401,"comment_content":"🤔☕️🤔☕️🤔\n【R】把目标聚焦于知识，通过LLM帮助完成某些任务、实现某些功能，结果视角必然关注此，如何使用LLM更高质量完成任务和实现功能，在过程视角下更值得关注。\n【.I.】原来我实现个函数，要再写这个函数的测试，难呐。如今，有LLM来结对，想必能帮我写测试吧。结果，非得我把用例的注释，写到自己都觉得完美感十足时，LLM才能帮我生成用例代码。否则，LLM顶多就是在码间随机作祟的搭子而已。\n实际，原来花多少时间，现在还是花多少时间，甚至因沉浸其中，还在完美感驱动下，忘记又多花不少时间。\n不过，以前，只有份函数的代码，现在，注释里写得清清楚楚，测试用例是啥、为何要这样写用例、如何实现这个用例，甚至，删除用例代码，LLM还会不厌其烦再生成一份可用的代码，还有，持续改进注释，删除代码后会生成符合新注释的测试代码。\n在结果视角，没有什么变化，如果眼里只有函数代码本身的话。\n在过程视角，开发要回答，如何验证才达到可交付的要求，开发能想清说清为何这么验证，在What&#47;How&#47;Why方面，同时达到真正符合交付要求。在没有代码之前，就把这些用注释表达出来，这样的过程需要开发的基本功扎实，同时，这样的过程也有助于开发训练自己的扎实基本功。\n— by 术子米德@2024年5月29日","like_count":0},{"had_liked":false,"id":388996,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"浙江","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1711354317,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"不能提炼出上下文就不断给答案，让 LLM 帮助我们从答案中建立知识模型，并在灌输一定上下文后让 LLM 提问我们来解答","like_count":0},{"had_liked":false,"id":388949,"user_name":"范飞扬","can_delete":false,"product_type":"c1","uid":2721761,"ip_address":"广东","ucode":"A665DF46833A81","user_header":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","comment_is_top":false,"comment_ctime":1711256554,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"上一讲说：“所谓知识过程，就是从知识管理的角度理解我们的工作，将我们的工作看作产生、传递、应用、消费知识的过程。”\n\n可以得出知识工程的四个关键：产生、传递、应用、消费。\n\n那么这一讲的“知识的提取与组织” 是不是对应与“产生”呢？\n\n","like_count":0},{"had_liked":false,"id":388947,"user_name":"范飞扬","can_delete":false,"product_type":"c1","uid":2721761,"ip_address":"广东","ucode":"A665DF46833A81","user_header":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","comment_is_top":false,"comment_ctime":1711251098,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"知识提取流程：通过 LLM 的反馈反思并修改知识描述的方式。比如，ChatGPT 提供的信息过多（反馈），我多加点信息让 LLM 的反馈更精确。\n\n知识传递过程：把提取出的上下文（原来是隐式知识），复制粘贴到下次与LLM的交互。比如，复制粘贴需求背景。\n\n知识应用过程：让 LLM 做任务。比如，写 API 文档。\n\n（最后有个问题：老师的措辞用了流程和过程这两个词，这是为啥呢？我没想出区分的理由）","like_count":0},{"had_liked":false,"id":388877,"user_name":"奇小易","can_delete":false,"product_type":"c1","uid":1171151,"ip_address":"湖北","ucode":"E06B4DFB5352BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/cf/ef2e0501.jpg","comment_is_top":false,"comment_ctime":1711033868,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"对于不可言说的知识，猜测是跟隐式知识提取过程类似，把自己对某个问题的解决方案来作为上下文信息给到 LLM 使其完成迁移学习，从而跟它开始结对解决问题。","like_count":0},{"had_liked":false,"id":388831,"user_name":"Halo","can_delete":false,"product_type":"c1","uid":1158603,"ip_address":"广东","ucode":"12CFC7DFF250AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/cb/3391d24c.jpg","comment_is_top":false,"comment_ctime":1710947001,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"获取不可言说知识的关键是分享思维的过程，而不是消费最终的结果。\n因此，llm要提炼不可言说知识，就是要让llm通过上下文输出思维的步骤step，我们根据step去fine tune上下文，不断反馈。","like_count":0},{"had_liked":false,"id":388742,"user_name":"大卫","can_delete":false,"product_type":"c1","uid":2155332,"ip_address":"浙江","ucode":"CE2FF47E2DDBA3","user_header":"https://static001.geekbang.org/account/avatar/00/20/e3/44/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1710811312,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"作为可以通过零&#47;少样本学习来快速获取知识的高智商llm，对一个系统化大任务无法准确地完成的原因是对特定领域的知识并不熟悉。所以使用llm首先应该考虑如何让llm聚焦于特定领域的知识学习而不是最终的任务完成。在老鸟不断细化上下文描述的过程中完成知识的提取与传递过程！","like_count":0},{"had_liked":false,"id":388685,"user_name":"术子米德","can_delete":false,"product_type":"c1","uid":1898023,"ip_address":"浙江","ucode":"382EA7E2AF0B56","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","comment_is_top":false,"comment_ctime":1710679796,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"【Q】对于不可言说知识，我们要怎提炼和应用？\n【A】不可言说的知识，是长在我肌肉里的知识，你照着我做，就看你悟性够不够。可是这跟在屁股后面学，总有开小差没有跟上节奏的时候，一个不小心就要从头来过。\n要是，盯住如何算完工。也就是说，哪几个方面，通过验证就算完工，是否就是不可言说知识的边界。\n放在软件开发的场景，写出验证性的测试用例，无论怎么实现，总归要通过这些验证，才算符合预期，是否就是不可言说知识的边界。在这个验证边界之内去实现，去让LLM详尽办法多轮尝试实现，就是在提取出不可言说知识的过程，如此嘛？\n— by 术子米德@2024年3月17日","like_count":0},{"had_liked":false,"id":388659,"user_name":"keep_curiosity","can_delete":false,"product_type":"c1","uid":1246273,"ip_address":"上海","ucode":"794DC1D3FB9214","user_header":"https://static001.geekbang.org/account/avatar/00/13/04/41/082e2706.jpg","comment_is_top":false,"comment_ctime":1710600815,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"既然要让llm提取不可言说的知识，那就需要让它可以练习。那我们就要扮演老师傅，给出具体场景，让它尝试给出思路，并且告诉它有疑问可以提问，然后我们给出反馈。然后重复不同的场景，直到验证性问题的回答符合我们的预期效果。","like_count":0},{"had_liked":false,"id":388631,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"上海","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1710511865,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"想像你想向一位市场\\管理等等方面的专家请教问题,你是需要先说明自己所处的具体领域情况的,然后再说自己的问题,在此后互动的过程逐步明晰和定位真正的问题,问题确定好,再分解逐步拆解问题,接下来就是递归此过程.","like_count":0},{"had_liked":false,"id":388629,"user_name":"起个名称吧","can_delete":false,"product_type":"c1","uid":3845303,"ip_address":"陕西","ucode":"47B29E84D0926A","user_header":"https://static001.geekbang.org/account/avatar/00/3a/ac/b7/92ebd0a5.jpg","comment_is_top":false,"comment_ctime":1710506784,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100755401,"comment_content":"前面说了不可言说知识是从经验中获取的，但是我们通常很难理解对方的经验，需要实践。\n所以我理解和LLM进行交流，通过反馈不断逼近该知识的最佳实践(相当于的有了他人的不可言说知识背景，虽然我没有经验，但是可以通过LLM得到了一套有效的经验)，然后根据最佳实践的内容丰富上下文，得到当前任务的最优解(应用)","like_count":0},{"had_liked":false,"id":388610,"user_name":"Geek_97c2bb","can_delete":false,"product_type":"c1","uid":3845388,"ip_address":"吉林","ucode":"B5DE1AD4301422","user_header":"","comment_is_top":false,"comment_ctime":1710477058,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100755401,"comment_content":"课后题: 让llm给出思考过程，然后我们给予反馈？","like_count":0}]}