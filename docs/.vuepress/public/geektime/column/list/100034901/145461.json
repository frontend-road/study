{"id":145461,"title":"18 | Docker容器化：说一说IM系统中模块水平扩展的实现","content":"<p>你好，我是袁武林。</p><p>在<a href=\"https://time.geekbang.org/column/article/137000\">第10讲“自动智能扩缩容：直播互动场景中峰值流量的应对”</a>中，我较为系统地讲解了直播场景中突发流量的应对策略。其中比较重要的一点就是：当有热点流量进来时，我们能够通过监控指标对服务进行快速扩缩容。</p><p>而快速扩缩容的一个重要前提，就是部署的服务和资源能够做到水平扩展。</p><p>那么，今天我们就来聊一聊服务和资源水平扩展的实现问题。</p><h2>垂直扩展</h2><p>首先从水平扩展(Scale out)的概念说起吧。</p><p>要解释水平扩展是什么，我们要先了解下与水平扩展相对应的另一个概念：垂直扩展（Scale up）。只有通过这两者可行性和实现层面的对比，我们才能更好地理解为什么水平扩展能力对于实现一个架构良好的系统如此重要。</p><p>当业务的用户量随着产品迭代不断增长时，相应的后端资源和服务器的压力也在逐渐加大。而解决资源和服务器瓶颈一个有效且较快的方式就是：提升资源服务器和应用服务器的单机处理能力，也就是对资源服务器和应用服务器进行“垂直扩展”。</p><h3>提升单机硬件性能</h3><p>要对资源和服务进行垂直扩展，一个简单粗暴但也比较有效的方式就是：增强单机服务器的性能。</p><p>比如：对CPU出现瓶颈的服务器进行升级，增加CPU核数和主频；对于网卡有瓶颈的服务器，升级到万兆网卡并接入到万兆交换机下；内存出现瓶颈导致系统吃Swap的情况，我们也可以将内存升级到更高配置来进行垂直扩展。一般情况下，通过对服务器硬件的升级，往往能快速解决短期的系统瓶颈问题。</p><!-- [[[read_end]]] --><h3>增加单机服务处理能力</h3><p>除了提升单机硬件的整体性能，我们还可以通过优化单机的服务进程处理能力，来实现对资源和服务的垂直扩展。</p><p>比如：我们部署的应用程序可以通过增加处理线程数，进一步榨干单机的硬件性能，以此提升服务进程整体的处理能力；或者通过扩大应用程序的使用内存，来提升请求的处理效率，如Java进程通过-Xmx增大堆内存空间，使用机器的本地缓存来优化访问速度；对于容易出现带宽瓶颈的业务来说，也可以通过架构改造，对收发的数据进行压缩，以降低数据传输量。</p><p>通过对单机服务架构和部署的优化，我们能够在不升级服务器硬件的前提下，提升单机服务的处理能力。</p><p>不过，虽然我们可以通过以上这两种方式来解决部分资源和服务的瓶颈问题，但不管是通过什么办法来提升服务器的单机性能，它总是会达到极限的。</p><p>所以，采用“垂直扩展”的方式，我们基本上只能解决短期的资源和服务瓶颈，而真正长远且有效的解决方案是：让资源和服务做到可以随时随地进行无差别的扩容，也就是对资源和服务进行“水平扩展”。</p><h2>水平扩展</h2><p>对于即时聊天的场景来说，用户的消息收发往往会牵涉到多层的服务和资源。因此，要让IM系统也能做到“水平扩展”，我们需要让IM系统涉及到的服务和资源都能够通过快速扩容，来缓解突发流量带来的压力。</p><p>我在课程第1讲<a href=\"https://time.geekbang.org/column/article/127872\">“架构与特性：一个完整的IM系统是怎样的？”</a>中，也有讲过一个典型的IM系统架构是怎样的，你可以参考下图：<br>\n<img src=\"https://static001.geekbang.org/resource/image/14/de/14b44a6b21eab122c76c3b940bdf67de.png?wh=768*1080\" alt=\"\"></p><p>客户端通过DNS Server或者HttpDNS，查询接入服务对外提供的公网VIP（虚拟IP）。这个公网VIP通过Keepalived绑定到多台LVS（Linux Virtual Server，Linux虚拟服务器）上，能够实现单台LVS故障后自动切换到另一台。当用户访问这个公网VIP时，就会被路由重定向到真正的LVS上。</p><p>LVS运行在操作系统内核态，会按照设定的负载均衡策略，将IP数据包分发到后端接入网关机，接入服务器再把数据透传给业务处理服务层，业务处理服务进行具体的业务逻辑处理，比如读写缓存和消息存储等。</p><p>那么我们就来看看，在上图所示的整个链路上，具体各层在出现压力和瓶颈时，如何做到“水平扩展”？</p><h3>接入层如何水平扩展</h3><p>首先，我们看下链路最外层入口的VIP。</p><p>对于LVS服务器来说，由于只是在TCP/IP层对数据包进行简单的转发，并不需要解析数据包给到应用层，所以服务器相应的处理性能是很高的，单机每秒数据包转发PPS能达到千万级别。因此在大部分情况下，LVS服务器本身不会成为瓶颈。</p><p>但是对于IM系统中的直播互动场景来说，由于存在瞬时上万级别的长连建连请求场景，单台LVS服务器可能会导致建连失败的情况。</p><p>针对这种情况，我们一般可以通过DNS轮询来实现负载均衡。</p><p>简单地说就是：在DNS服务器中，针对接入服务域名配置多个VIP；当用户访问接入服务时，DNS服务器就会通过轮询或者其他策略，来从A记录中选择某一个VIP供用户连接。</p><p><img src=\"https://static001.geekbang.org/resource/image/19/69/196800b98770b9478eff5af4e3047a69.png?wh=1050*830\" alt=\"\"></p><p>比如上图所示：微信长连接通道针对同一个域名进行DNS查询，就返回了多条A记录供接入设备选择。</p><p>在通过“DNS轮询多VIP”的水平扩展，解决了单VIP入口可能出现的瓶颈问题后，对于用户的消息收发来说，另一个容易出现瓶颈的点就是应用层的接入服务了。</p><p>要想解决这个问题，我们先从业务使用的角度来分析一下。</p><p>以大型聊天室或者大型直播间的场景为例，其链路压力一般来自于消息扇出后的下推，其他链路环节实际上对于聊天室成员增长，或者直播间在线人数增长并不会太敏感。</p><p>所以，正如在<a href=\"https://time.geekbang.org/column/article/137000\">第10篇</a>中所讲到的，我们要对那些容易随着用户热度增加，而出现流量突升的环节进行架构上的剥离，以便在出现流量峰值时，对这些拆分后相对较轻量的接入服务进行扩容。</p><p>另外，我们在设计接入服务时，要尽量做到无状态化。</p><p>无状态化的意思就是任意用户随时都可以连接到任意一台接入服务器上，这样我们的接入服务才可以随时进行“水平扩展”。除了接入用户连接外，当服务端有消息需要推送给客户端时，业务逻辑层需要把消息精确推送到具体某个用户连接的网关机上。</p><p>要想实现接入层的水平扩展解耦，我们一般可以通过维护一个中央的用户和“所在网关机IP”的映射关系，或者通过网关机IP维度的Topic，来利用消息队列进行精准推送（比如离线消息的拉取）。通过中央的“在线状态”服务，我们就能让接入层和业务层通过这个中央资源来进行交互，让接入层做到无状态化。其实现方式如下图：<br>\n<img src=\"https://static001.geekbang.org/resource/image/06/7f/068b5c069cee8278da755ce41a6dc07f.png?wh=1024*768\" alt=\"\"></p><p>用户通过接入服务上线后，接入服务会在中央资源中（比如Redis）记录当前用户在哪台网关机上线。如果业务层有消息需要推送给这个用户时，通过查询这个中央资源，就能知道当前用户连接在哪台网关机上，然后就可以通过网关机的API接口，把消息定向投递推送给用户了。</p><h3>业务层如何水平扩展</h3><p>利用DNS轮询“单域名多VIP”，我们解决了接入层VIP入口的瓶颈问题。此外，对于应用层的接入服务的瓶颈问题，我们可以结合业务场景，通过“服务拆分”，将容易出现峰值波动的应用接入服务进行抽离，以便于接入层扩容；最后通过“中央的在线状态资源”，让接入层做到完全“无状态”，从而实现了接入层的“水平扩展”。</p><p>虽然很多时候，我们的业务层不像接入层一样，对流量的波动那么敏感，但在实际业务中，每天的用户访问也会呈现出比较明显的流量变化。比如在很多聊天场景中，凌晨和上午的流量相对会低一些，而晚上的用户访问量会更大。</p><p>因此，为了更好地提升服务器资源利用率，我们的业务层也需要做到“水平扩展”。我们可以在流量低峰时，让业务层服务保持较低的部署规模；在晚上高峰时，通过扩容来保证用户访问的速度。</p><p>由于接入层对业务层是强依赖关系，因此业务层水平扩展的关键在于：如何让业务层在扩缩容后，能够被接入层及时感知到？</p><p>对于这个关键问题，业界比较常见的解决方式是：对业务层进行“服务化”改造，以此让接入层通过“自动服务发现”，来感知到业务层的变化。</p><p>比如，通过Thrift、gRPC、Dubbo、Motan等RPC框架，结合服务发现和健康检查组件，就能对业务层进行“服务化”的改造了。这里我简单画了一张图，来说明一下对业务层“服务化”改造的实现过程。<br>\n<img src=\"https://static001.geekbang.org/resource/image/ef/46/ef89c3369f163d3017c2a3cd81505146.png?wh=768*980\" alt=\"\"></p><p>业务层的多台服务器在启动上线时，先在“服务注册中心”进行服务注册，登记当前业务机器支持调用的“服务”；启动后，服务注册中心通过“注册中心主动检测”或者“业务服务器主动上报”的方式，定期对服务的可用性进行健康检查，不可用的业务服务器会从注册中心摘除。</p><p>长连网关机在需要调用业务层服务时，会先通过服务发现、获取当前要用到的服务所注册的业务服务器地址，然后直连某一台具体的业务服务器进行RPC服务调用。</p><p>这样，通过对业务层进行“服务化”改造，利用服务注册和服务自动发现机制，我们就能够让业务层做到完全的无状态化。不管我们的业务层如何进行扩缩容，接入层也能随时调用到业务层提供的服务，从而实现了业务层的“水平扩展”。</p><h3>资源层如何水平扩展</h3><p>解决了业务层水平扩展的问题，我们再来看一下资源层是如何“水平扩展”的。</p><p>对于即时消息场景中，依赖度非常高的资源层来说，当面临高并发的突发流量时，同样容易出现读写的瓶颈。比如前面讲到的消息内容和消息索引的缓存、维护未读数的资源、存储离线消息的资源，等等，当用户量和消息收发频率很高时，也都会面临较大压力。</p><p>这里所说的资源层，包括我们使用到的缓存和存储。</p><p>缓存的水平扩展，咱们在上一篇中有讲过：针对数据读取压力的问题，我们可以通过增加从库、增加L1缓存、应用层支持本地缓存的多级缓存模式等手段来解决。</p><p>而对于支持数据写入的主库来说，由于其存在单主的情况，所以在写入量大时，也容易出现瓶颈。因此，我们可以通过分片（Sharding）机制来解决。</p><p>下面我用聊天场景中“最近联系人”的缓存来举个例子。</p><p>当用户的消息收发非常频繁的时候，主库的缓存更新压力会很大。通过分片机制，我们就可以把不同用户的“最近联系人”缓存分散到不同的缓存实例中；通过增加缓存实例的方式，来缓解单实例的写入压力。</p><p>同样，对于存储层资源来说，我们也可以通过增加从库和数据分片，对资源层进行水平扩展，从而提升资源的压力应对能力。</p><h2>容器化部署</h2><p>现在，我们针对接入层、业务层、资源层的水平扩展方案都有了，接下来要考虑的就是如何实施的问题。</p><p>比如，接入层服务和业务层服务在出现瓶颈的时候，我们如何进行快速扩容呢？</p><p>目前，业界比较成熟的方案是通过Docker等容器化技术来解决。</p><p>Docker容器化就是指：当我们的服务需要扩容时，先把服务打包为Docker镜像，通过运维系统或者第三方的Kubernetes等容器管理服务，来动态分发镜像到需要部署的机器上，并进行镜像的部署和容器启停。</p><p>这里的Docker镜像，你可以理解为一个“包含服务运行代码和运行环境的最小的操作系统”。当镜像分发到需要部署的机器上后，启动此镜像的容器，这个“最小化的操作系统”就能够把你的服务运行代码快速部署并运行起来。</p><p>那么，为什么Docker等类似的容器化技术能够让我们的服务做到快速扩容呢？</p><p>举个例子，我们在聊天场景中用到的图片和视频转码服务，在生成缩略图和处理视频时，需要先安装一些本地化的工具。</p><p>在没有容器化部署前，我们要扩容这个图片或视频服务时，就需要先在相应的部署机器上安装一堆工具，然后才能部署服务。不过有的时候，安装工具对操作系统的内核版本和其他依赖有要求，因此经常会出现有的机器装不上，有的机器还需要安装些别的依赖等情况，整个的扩容效率很低。</p><p>而有了Docker等容器化技术之后，就能非常方便地解决以上这些问题了。</p><p>我们可以以某一个固定版本的操作系统镜像为基础，然后在构建自己的应用镜像时，再安装上依赖的工具包。这样，所有的依赖都已经固化到“最小化的操作系统”中了，不再依赖部署机器本身的操作系统版本，也不需要在部署机器上安装各种工具了。</p><p>可见，通过Docker等容器化技术，我们能非常方便地解决服务部署复杂和低效的问题，你可以在以后的实际业务中尝试运用一下。</p><h2>小结</h2><p>接下来简单回顾一下今天课程的内容。</p><p>这一讲，我主要针对即时消息场景中，链路各层如何实现快速地“水平扩展”，介绍和分析了一些解决瓶颈问题的方案。</p><p>由于“垂直扩展”的可扩展性依赖于单机自身的硬件能力，并不能彻底解决资源和服务器“无限扩容”的问题，因此需要链路各层能够做到“水平扩展”。</p><p>各层的水平扩展的<strong>实现</strong>，有以下几种参考方案。</p><ol>\n<li>\n<p><strong>针对接入层的水平扩展</strong>，我们需要解决好两个瓶颈问题：<br>\n一个是接入层的入口VIP瓶颈问题，我们可以针对单域名支持多VIP映射，并通过DNS轮询来进行负载均衡；<br>\n而针对业务自身的接入层服务，我们可以通过中央的“在线状态”资源，来解耦业务层的依赖，从而实现水平扩展。</p>\n</li>\n<li>\n<p><strong>针对业务层的水平扩展</strong>，我们可以进行“服务化”改造，依托“服务注册中心”和“服务自动发现”解决调用方寻址问题，实现业务层的水平扩展。</p>\n</li>\n<li>\n<p><strong>针对资源层的水平扩展</strong>，我们可以通过数据分片机制缓解主库和从库压力，还可以通过多从库提升读取能力，实现资源的水平扩展。</p>\n</li>\n</ol><p>在链路各层的水平扩展的<strong>具体实施</strong>上，我们可以借助Docker等容器化技术，来屏蔽部署机器的差异。通过应用镜像的自定义部署环境，来提升链路各层水平扩展时的部署效率。</p><p>服务和资源的水平扩展能力，决定了我们的系统架构随着业务发展是否具备“高可扩展性”，也决定了这个架构的生命周期。</p><p>因此，我们在设计一个系统的时候，可以先问一下自己：我设计的这套架构是否能够随着业务的增长，相应的“业务支撑能力”也能随着服务的“水平扩容”做到线性的提升？相信当你开始思考这些问题的时候，你离成为一位合格的架构师也越来越近了。</p><p>最后给大家留一道思考题：<strong>要想解决资源层的写入瓶颈，除了分片机制外，还有什么办法能解决资源写入瓶颈的问题呢（比如直播间观看人数的计数资源）？</strong></p><p>以上就是今天课程的内容，欢迎你给我留言，我们可以在留言区一起讨论，感谢你的收听，我们下期再见。</p><p></p>","comments":[{"had_liked":false,"id":138805,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1570457931,"is_pvip":false,"replies":[{"id":"53738","content":"可以看看mqtt的github项目，另外国内应该蘑菇街开源了一款叫teamtalk的im软件，也可以看看。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570626381,"ip_address":"","comment_id":138805,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57405032779","product_id":100034901,"comment_content":"    老师：目前有没有什么不错的开源IM项目可以学习和研究？","like_count":14,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469653,"discussion_content":"可以看看mqtt的github项目，另外国内应该蘑菇街开源了一款叫teamtalk的im软件，也可以看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570626381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138658,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1570412856,"is_pvip":false,"replies":[{"id":"53731","content":"欣慰，感谢支持，继续努力～","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570625407,"ip_address":"","comment_id":138658,"utype":1}],"discussion_count":2,"race_medal":0,"score":"53110020408","product_id":100034901,"comment_content":"老师的课程应该是最近半年极客时间最棒的啦！其他的竟是些概念理论的泛泛而谈😜","like_count":13,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469611,"discussion_content":"欣慰，感谢支持，继续努力～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570625407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1208273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/d1/5198e6f7.jpg","nickname":"易扬","note":"","ucode":"16FD637F8FBD6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36523,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571388954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138727,"user_name":"东东🎈","can_delete":false,"product_type":"c1","uid":1326338,"ip_address":"","ucode":"D1BBE24CF76426","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/02/ecdb4e66.jpg","comment_is_top":false,"comment_ctime":1570434513,"is_pvip":false,"replies":[{"id":"53736","content":"硬件层面可以上硬件防火墙来清洗异常流量，软件层面可以通过缩短syn半连接的超时来缓降。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570626216,"ip_address":"","comment_id":138727,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23045270993","product_id":100034901,"comment_content":"老师，如果遇到ddos攻击，有啥处理方案吗？","like_count":6,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469630,"discussion_content":"硬件层面可以上硬件防火墙来清洗异常流量，软件层面可以通过缩短syn半连接的超时来缓降。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570626216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138690,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1570423014,"is_pvip":false,"replies":[{"id":"53734","content":"嗯，分库分表是一个有效提升写入能力的手段，除了这个还有其他优化方式吗？","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570625764,"ip_address":"","comment_id":138690,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23045259494","product_id":100034901,"comment_content":"可以分库分表来解决单表写入数据量大，查询时间过长，但实现其复杂性也增加了，需要实现分区键或者说以什么依据来进行分库分表","like_count":5,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469621,"discussion_content":"嗯，分库分表是一个有效提升写入能力的手段，除了这个还有其他优化方式吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570625764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1211223,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","nickname":"QQ怪","note":"","ucode":"1A39B8433D9208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26977,"discussion_content":"还可以写缓存，然后定期落盘批量写入数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570626303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139277,"user_name":"clip","can_delete":false,"product_type":"c1","uid":1019244,"ip_address":"","ucode":"D0E142605A5BD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/6c/0c2a26c7.jpg","comment_is_top":false,"comment_ctime":1570600446,"is_pvip":true,"replies":[{"id":"53913","content":"跟随流量波动来进行资源层的扩缩容对于数据读取可能比较有效，但是对于数据依赖master的写入扩缩容实现会比较麻烦。对于写入的优化可以采用类似操作系统buffer的机制，来对写入数据进行合并后批量写入，甚至根据业务来进行更高级的定制化合并逻辑。这一块我在第20篇万人群聊系统的设计中会讲一下。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570711634,"ip_address":"","comment_id":139277,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18750469630","product_id":100034901,"comment_content":"用分片来做水平扩展的话灵活性是低的吧，是不是不适合随着每天波峰、波谷来调整？感觉只能扩很难收。<br>如果某个时段有大量写入，用什么方式应对比较合适呢？","like_count":5,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469873,"discussion_content":"跟随流量波动来进行资源层的扩缩容对于数据读取可能比较有效，但是对于数据依赖master的写入扩缩容实现会比较麻烦。对于写入的优化可以采用类似操作系统buffer的机制，来对写入数据进行合并后批量写入，甚至根据业务来进行更高级的定制化合并逻辑。这一块我在第20篇万人群聊系统的设计中会讲一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570711634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187204,"user_name":"kamida","can_delete":false,"product_type":"c1","uid":1904146,"ip_address":"","ucode":"16D7CA59870AC0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jXbwicoDwia7ooDfwBTRyvNYQkefnVwF1CMicMS8FqKfuFAdvVZo2pqc4ic0R9kSdHTIxaE6YyqxwX8BdNGv5PqSIw/132","comment_is_top":false,"comment_ctime":1584059647,"is_pvip":false,"replies":[{"id":"72303","content":"用户拿到的是vip地址，实际请求会路由到lvs所在的机器，再由lvs转发给真正后面的网关服务器。当然，也可以不用vip来直连网关机，存在的问题是服务上线时需要暂时下线这台网关机可能比较麻烦。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584086967,"ip_address":"","comment_id":187204,"utype":1}],"discussion_count":5,"race_medal":0,"score":"14468961535","product_id":100034901,"comment_content":"老师 请问长链接请求是怎么从lvs转到网关的啊。  是接入服务先返回给用户一个网关地址 然后用户直接长链接到那个网关的吗","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487028,"discussion_content":"用户拿到的是vip地址，实际请求会路由到lvs所在的机器，再由lvs转发给真正后面的网关服务器。当然，也可以不用vip来直连网关机，存在的问题是服务上线时需要暂时下线这台网关机可能比较麻烦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584086967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535403,"discussion_content":"老师上面的 接入服务器 跟后面的 长连网关 是一回事吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638428979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1904146,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/jXbwicoDwia7ooDfwBTRyvNYQkefnVwF1CMicMS8FqKfuFAdvVZo2pqc4ic0R9kSdHTIxaE6YyqxwX8BdNGv5PqSIw/132","nickname":"kamida","note":"","ucode":"16D7CA59870AC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204915,"discussion_content":"谢谢老师的回复 所以虽然我们说是用户和网关机保持了一个websocket 其实还是通过lvs的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584239325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1904146,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/jXbwicoDwia7ooDfwBTRyvNYQkefnVwF1CMicMS8FqKfuFAdvVZo2pqc4ic0R9kSdHTIxaE6YyqxwX8BdNGv5PqSIw/132","nickname":"kamida","note":"","ucode":"16D7CA59870AC0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535404,"discussion_content":"我理解一旦建立了长链接后续的网络通讯就不需要经过LVS了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638429051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":204915,"ip_address":""},"score":535404,"extra":""},{"author":{"id":1018132,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/89/14/71bcd25e.jpg","nickname":"风","note":"","ucode":"6FCC11027BBE7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":574138,"discussion_content":"要的吧，数据还是通过lvs转发的，相当于有客户端与lvs，lvs与内网中的网关服务器这两条tcp连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653850780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":535404,"ip_address":""},"score":574138,"extra":""}]}]},{"had_liked":false,"id":138714,"user_name":"面爸","can_delete":false,"product_type":"c1","uid":1020573,"ip_address":"","ucode":"3AC7F192732223","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/9d/9fe6c5a9.jpg","comment_is_top":false,"comment_ctime":1570431032,"is_pvip":false,"replies":[{"id":"53735","content":"嗯，redis作为计数没问题的，不过异步写入只是起到削峰填谷的作用，并不能提升写入的绝对能力，可以再想一想哈","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570625848,"ip_address":"","comment_id":138714,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14455332920","product_id":100034901,"comment_content":"人数统计的话，应该用redis就可以实现，写入的话，可以队列，异步去写","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469626,"discussion_content":"嗯，redis作为计数没问题的，不过异步写入只是起到削峰填谷的作用，并不能提升写入的绝对能力，可以再想一想哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570625848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147352,"user_name":"唯我天棋","can_delete":false,"product_type":"c1","uid":1015960,"ip_address":"","ucode":"B925246C92727A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/98/5591d99d.jpg","comment_is_top":false,"comment_ctime":1572860495,"is_pvip":true,"replies":[{"id":"57202","content":"服务发现本身是rpc框架自带的通用特性，对系统消耗很小，再增加一层会使消息收发链路变长，整体稳定性可能会有影响。<br>业务层推送消息是通过消息队列来实现的，不需要依赖rpc。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573035363,"ip_address":"","comment_id":147352,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10162795087","product_id":100034901,"comment_content":"1.连接层和业务层之间增加一个业务代理，这样连接层可以更加专注于处理连接问题，让业务代理来完成服务发现，管理业务集群，这样会不会更好？<br>2.为什么在连接层直接rpc调用业务端。那业务端需要通过这条连接推送消息不是会很不方便吗？","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473232,"discussion_content":"服务发现本身是rpc框架自带的通用特性，对系统消耗很小，再增加一层会使消息收发链路变长，整体稳定性可能会有影响。\n业务层推送消息是通过消息队列来实现的，不需要依赖rpc。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573035363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139863,"user_name":"Jun","can_delete":false,"product_type":"c1","uid":1029313,"ip_address":"","ucode":"4A904C5C43474A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/c1/73df153f.jpg","comment_is_top":false,"comment_ctime":1570757497,"is_pvip":false,"replies":[{"id":"54428","content":"嗯，不错的想法，业务允许一定的风险的话这是一个不错的优化手段。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571055979,"ip_address":"","comment_id":139863,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160692089","product_id":100034901,"comment_content":"是否可以先在服务器端聚合一段时间的数据再写入","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470148,"discussion_content":"嗯，不错的想法，业务允许一定的风险的话这是一个不错的优化手段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571055979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138654,"user_name":"HelloTalk","can_delete":false,"product_type":"c1","uid":1618633,"ip_address":"","ucode":"F898E6A7C61D39","user_header":"https://static001.geekbang.org/account/avatar/00/18/b2/c9/b414a77c.jpg","comment_is_top":false,"comment_ctime":1570410846,"is_pvip":false,"replies":[{"id":"53718","content":"是个方案，不过队列更多起到的是削峰填谷的作用，对写入瓶颈的真实写入能力提升有限。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570623712,"ip_address":"","comment_id":138654,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160345438","product_id":100034901,"comment_content":"要想解决资源层的写入瓶颈，除了分片机制外，还可以移步写 用队列来操作 ","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469610,"discussion_content":"是个方案，不过队列更多起到的是削峰填谷的作用，对写入瓶颈的真实写入能力提升有限。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570623712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304224,"user_name":"Ricky Fung","can_delete":false,"product_type":"c1","uid":1051363,"ip_address":"","ucode":"7AEA1F8EC4A088","user_header":"https://static001.geekbang.org/account/avatar/00/10/0a/e3/9637bfdb.jpg","comment_is_top":false,"comment_ctime":1627297417,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627297417","product_id":100034901,"comment_content":"提升写入能力：<br>1.分片（数据库、缓存分片）；<br>2.批量写入，例如点赞数统计 如果有N个用户对某条微博点赞可以直接incr N","like_count":0},{"had_liked":false,"id":290711,"user_name":"Geek_1cc6d1","can_delete":false,"product_type":"c1","uid":1850248,"ip_address":"","ucode":"3E083616DD0742","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erZCyXaP2gbxwFHxvtnyaaF2Pyy5KkSMsk9kh7SJl8icp1CD6wicb6VJibiblGibbpDo6IuHrdST6AnWQg/132","comment_is_top":false,"comment_ctime":1619696701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619696701","product_id":100034901,"comment_content":"业务层调用网关层rpc服务发送消息（客户端连接着具体的某台网关服务器）时应该是跟ip有关的，所以默认的路由策略应该是不行了。通常都有什么解决方法？","like_count":0},{"had_liked":false,"id":266381,"user_name":"Vicky","can_delete":false,"product_type":"c1","uid":2350346,"ip_address":"","ucode":"04311D0D02E2FB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erq6X1NBCibSe2TheibLEykYPK9nb1NWicoU1xia0ibpjCZJxwqlA7830uZLj4jSDkwRT8viaFf3j9BZ3Tw/132","comment_is_top":false,"comment_ctime":1607320121,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1607320121","product_id":100034901,"comment_content":"请教老师：<br>中央资源中（比如 Redis）记录当前用户在哪台网关机上线，如果其中一个网关机宕机，是如果及时的将redis中相关的记录删除？","like_count":1,"discussions":[{"author":{"id":1543563,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI3lW3z0JqBDeM5S12SNsNAq6eEcHUYwFLuLsW96exY0kKicShGU6DIoqEibOMV8ialTae55icCvx1TFw/132","nickname":"夏","note":"","ucode":"969E8252FE7262","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549507,"discussion_content":"请问下这个解决了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644039649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238800,"user_name":"包子浣熊","can_delete":false,"product_type":"c1","uid":2061589,"ip_address":"","ucode":"18023AED59FED3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/75/15/8b2cf6d4.jpg","comment_is_top":false,"comment_ctime":1596303645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596303645","product_id":100034901,"comment_content":"解决资源写入瓶颈的问题（比如直播间观看人数的计数资源）？ 能否在人数过多的账号后面加上一个不同的数字作为key，让它们布到不同的切片上。 写入的时候可以写到其中的任意一个。 读取的时候需要把它们的结果聚合起来。","like_count":0},{"had_liked":false,"id":215789,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1589103120,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589103120","product_id":100034901,"comment_content":"水平扩展接入层，还有一种特殊方式，接入层是带状态的，这种方式不需要全局状态，接入层容灾就是两个备份机器","like_count":0},{"had_liked":false,"id":215785,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1589102911,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589102911","product_id":100034901,"comment_content":"1 合并写，增加了延迟，同时使用directio<br>2 多机器写日志方式，因为没有sync，顺序写性能高<br>3 多机器，写内存，异步合并写磁盘，同时挂机可能会丢失部分数据。","like_count":0},{"had_liked":false,"id":172483,"user_name":"康家沟偶像天团王大锤","can_delete":false,"product_type":"c1","uid":1505005,"ip_address":"","ucode":"9C12D40E13EC76","user_header":"https://static001.geekbang.org/account/avatar/00/16/f6/ed/35186af6.jpg","comment_is_top":false,"comment_ctime":1579187834,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579187834","product_id":100034901,"comment_content":"在连接的前端机对进出直播间事件做初步统计，定期将统计结果刷入缓存，多次进出可以变为一次更新","like_count":0},{"had_liked":false,"id":158897,"user_name":"分清云淡","can_delete":false,"product_type":"c1","uid":1269873,"ip_address":"","ucode":"7045AE6BF72D31","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/71/895ee6cf.jpg","comment_is_top":false,"comment_ctime":1575472550,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575472550","product_id":100034901,"comment_content":"分表 存贮 对于一些热点列 在cache里面增加特殊索引字段 也可以在内存中 直接存储计算结果 节省 查询 计算时间","like_count":0},{"had_liked":false,"id":150498,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1573546300,"is_pvip":false,"replies":[{"id":"57917","content":"如果发送消息是否成功依赖于消息存储是否成功，而消息存储的逻辑在业务层，那么发消息需要业务层明确告知是否存储查成功，这种情况rpc通过response明确告知网关层是否成功实现上更方便。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573564510,"ip_address":"","comment_id":150498,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1573546300","product_id":100034901,"comment_content":"请问老师：长连网关调用业务层为何是RPC，而不是通过消息队列调用呢？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474176,"discussion_content":"如果发送消息是否成功依赖于消息存储是否成功，而消息存储的逻辑在业务层，那么发消息需要业务层明确告知是否存储查成功，这种情况rpc通过response明确告知网关层是否成功实现上更方便。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573564510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005030,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","nickname":"GeekAmI","note":"","ucode":"232C0B6DFB9F56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49221,"discussion_content":"如果消息队列是redis, 岂不是存储成功了😳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573565293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147354,"user_name":"唯我天棋","can_delete":false,"product_type":"c1","uid":1015960,"ip_address":"","ucode":"B925246C92727A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/98/5591d99d.jpg","comment_is_top":false,"comment_ctime":1572860580,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572860580","product_id":100034901,"comment_content":"要想解决资源层的写入瓶颈，除了分片机制外，还有什么办法能解决资源写入瓶颈的问题呢（比如直播间观看人数的计数资源）？<br><br>1.使用高性能缓存。。<br>2.请求合并","like_count":0},{"had_liked":false,"id":140417,"user_name":"黄海","can_delete":false,"product_type":"c1","uid":1011156,"ip_address":"","ucode":"AC45303035622E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/L8Hia5sfiafASmBa3eTLMH8C25gMCHLTXddMkIiaCb0ky48FowibUrLQ9WSeTxSIS3prFsSjiaarwbRp1kTXDbug9eQ/132","comment_is_top":false,"comment_ctime":1570934991,"is_pvip":false,"replies":[{"id":"54463","content":"对openresty了解不多，据我所知openresty主要是对标nginx的吧，tcp连接相关的信息不知道是否会暴露给使用者，另外即使可以长连接基于它实现可能得大量的lua嵌入开发吧，实现上可能会比较困难。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571058013,"ip_address":"","comment_id":140417,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570934991","product_id":100034901,"comment_content":"请问老师，课程中的 tcp长连接网关机，可以用 openresty 开发吗？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470382,"discussion_content":"对openresty了解不多，据我所知openresty主要是对标nginx的吧，tcp连接相关的信息不知道是否会暴露给使用者，另外即使可以长连接基于它实现可能得大量的lua嵌入开发吧，实现上可能会比较困难。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571058013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139472,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1570665355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570665355","product_id":100034901,"comment_content":"老师问题:单位时间时间内如何提高写入速度<br>垂直方向:<br>1、sql语句优化，索引，事务写入<br>水平方向:<br>1、分库分表<br>2、读写分离<br>直播观看计数资源，不是要保存在关系数据库，可以考虑用nosql非关系数据库","like_count":0},{"had_liked":false,"id":138888,"user_name":"东东🎈","can_delete":false,"product_type":"c1","uid":1326338,"ip_address":"","ucode":"D1BBE24CF76426","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/02/ecdb4e66.jpg","comment_is_top":false,"comment_ctime":1570499406,"is_pvip":false,"replies":[{"id":"53820","content":"这个是由于对端客户端关闭连接时发送的是强制关闭连接的rst包而不是正常关闭的fin包，注意观察客户端是否对应的有crash的情况出现，一般对服务端连接层没啥影响。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570677756,"ip_address":"","comment_id":138888,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1570499406","product_id":100034901,"comment_content":"老师，线上netty经常抛java.io.Exception:Connection reset by peer异常，连接被重置，这个问题可以修复吗？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469686,"discussion_content":"这个是由于对端客户端关闭连接时发送的是强制关闭连接的rst包而不是正常关闭的fin包，注意观察客户端是否对应的有crash的情况出现，一般对服务端连接层没啥影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570677756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108745,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/09/ba5f0135.jpg","nickname":"Chao","note":"","ucode":"DD7742F5537521","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25404,"discussion_content":"改短连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570521861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1691181,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/2d/33fdd230.jpg","nickname":"Sophia","note":"","ucode":"069868B84FBF40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1108745,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/09/ba5f0135.jpg","nickname":"Chao","note":"","ucode":"DD7742F5537521","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548044,"discussion_content":"馊主意 ~ 这个问题的根本是客户端大量发送RST 所致， 需要找到原因 修复~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643008914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":25404,"ip_address":""},"score":548044,"extra":""}]}]}]}