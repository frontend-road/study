{"id":151120,"title":"15 | 源码剖析：Netty对常用编解码的支持","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geek_netty\">https://gitee.com/geektime-geekbang/geek_netty</a></p>","comments":[{"had_liked":false,"id":142137,"user_name":"小不点","can_delete":false,"product_type":"c3","uid":1351860,"ip_address":"","ucode":"C307D44A185C34","user_header":"https://static001.geekbang.org/account/avatar/00/14/a0/b4/5173f1af.jpg","comment_is_top":false,"comment_ctime":1571298945,"is_pvip":false,"replies":[{"id":55054,"content":"很欣慰，以后再多想点比喻，让大家一直容易理解。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571414544,"ip_address":"","comment_id":142137,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师解说源码是我目前见过所有老师中最让我很轻松就听懂的一个老师","like_count":12,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471000,"discussion_content":"很欣慰，以后再多想点比喻，让大家一直容易理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571414544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153432,"user_name":"冬渐暖","can_delete":false,"product_type":"c3","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1574235238,"is_pvip":false,"replies":[{"id":59062,"content":"后面它就不用就行了，就像协议里面一般都会带version，但是假设你真不带version也可以，只要你不用它做事情，而且用netty开发的东西，一般服务器和客户端都是自己定义的，你2边做一致就行了；\n第二个问题，没有怎么看懂，估计是不是意思为什么把业务处理放在最下面，那是因为读是自上而下，而写是自下而上组织pipeline，所以业务处理，就在最下面了，所以放最下面了。你搞成你说的那样描述的顺序，就不work了。虽然语义上看着很顺。这个是pipeline的设计决定的。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1574303166,"ip_address":"","comment_id":153432,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"netty的序列化和jdk原生的区别\nnetty占的空间更小\n去掉了所有的魔数，节省了一定的空间。。。。我不明白的是这些魔术后面要用的话怎么办？重新创建一个吗？\n去掉了一些先写元信息，直接通过名称去反射获取。。。\n魔数：就是魔法值。。。在《阿里Java开发规范手册》里面有差不多的\n元信息：就是关于这个对象的信息。比如名称、编码之类的\n\n关于netty支持谷歌的Protobuf\n\n拿你说的世界时钟例子来说我有个小疑问。。。。明明先一、二次解码，然后处理业务逻辑，最后一、二次编码，为什么addList处理业务逻辑在编码后面哦？\n\nProtobufVarint32FrameDecoder：通过根据数字的大小来判断用的字节数，而不是固定长度直接装，这样能节省空间。\n\nProtobuf二次解码，会根据extension (可拓展)，HAS PARSER （是否是2.5之后的版本，因为2.5之后才有，有的话就用新的办法解码，没有的话就用老的方法，向下兼容）\n\n","like_count":3,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475162,"discussion_content":"后面它就不用就行了，就像协议里面一般都会带version，但是假设你真不带version也可以，只要你不用它做事情，而且用netty开发的东西，一般服务器和客户端都是自己定义的，你2边做一致就行了；\n第二个问题，没有怎么看懂，估计是不是意思为什么把业务处理放在最下面，那是因为读是自上而下，而写是自下而上组织pipeline，所以业务处理，就在最下面了，所以放最下面了。你搞成你说的那样描述的顺序，就不work了。虽然语义上看着很顺。这个是pipeline的设计决定的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574303166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2459923,"avatar":"https://static001.geekbang.org/account/avatar/00/25/89/13/0d3c5008.jpg","nickname":"最好不过","note":"","ucode":"C7DBCD08402DF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388804,"discussion_content":"他的意思应该是业务逻辑处理完之后的结果，应该是在最后的一二次编码之前的，业务处理的结果才会正确的发送给调用方。业务逻辑没处理为什么就直接进行最后的一二次编码 这个应该和我一样的疑问\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628990791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142423,"user_name":"石将从","can_delete":false,"product_type":"c3","uid":1375617,"ip_address":"","ucode":"12F43E643D1D58","user_header":"https://static001.geekbang.org/account/avatar/00/14/fd/81/1864f266.jpg","comment_is_top":false,"comment_ctime":1571365921,"is_pvip":false,"replies":[{"id":57884,"content":"我现在做完第四章和第五章课程的时候，发现其实也可以倒着来看这个课程。哈哈","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1573550804,"ip_address":"","comment_id":142423,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"这样解读源码很赞，整体流程都知道了，还学习了阅读源码的方法","like_count":3,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471119,"discussion_content":"我现在做完第四章和第五章课程的时候，发现其实也可以倒着来看这个课程。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573550804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143515,"user_name":"矢风","can_delete":false,"product_type":"c3","uid":1060313,"ip_address":"","ucode":"37281857D564BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/d9/a96c60cc.jpg","comment_is_top":false,"comment_ctime":1571722864,"is_pvip":false,"replies":[{"id":55544,"content":"第四章实战会有演示他们的顺序问题，因为到时候直接二边复制过去，然后直接改的，这里简单说下:从内容上看是相反的，一个收一个发，但是从解码顺序是一致的。到时候你看下第四章怎么写的，就体会点了。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571816113,"ip_address":"","comment_id":143515,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师你好，在学着开发自定义TcpServer的时候，发现个疑惑点。pipeline添加encoder和decoder的顺序，客户端和服务器端是一致的顺序还是这俩是相反的。然后用代码测试两种都正常，网上好多程序也是两种情况都有，有点搞不清楚。还有老师可否补充点代码案例。感觉有点例子来辅助教学效果能更好点。就是听课差不多，可手动还是做不了。","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471574,"discussion_content":"第四章实战会有演示他们的顺序问题，因为到时候直接二边复制过去，然后直接改的，这里简单说下:从内容上看是相反的，一个收一个发，但是从解码顺序是一致的。到时候你看下第四章怎么写的，就体会点了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571816113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141967,"user_name":"鱼向北游","can_delete":false,"product_type":"c3","uid":1439908,"ip_address":"","ucode":"580EC7DCE57E9A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IPdZZXuHVMibwfZWmm7NiawzeEFGsaRoWjhuN99iaoj5amcRkiaOePo6rH1KJ3jictmNlic4OibkF4I20vOGfwDqcBxfA/132","comment_is_top":false,"comment_ctime":1571275133,"is_pvip":false,"replies":[{"id":55055,"content":"可以，后面几层都是可插拔的，第一层也可以自己实现，实际写的时候，你还是注意下，能多分多分，层次清晰，以后换实现也方便。从你目前需要需求看，二层够了，一个编解码，一个转发","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571414782,"ip_address":"","comment_id":141967,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"假如netty只是作为网关，不处理具体业务，只做消息分发，是不是可以先不二次解码，比如用消息长度+消息号+pb字节流，但是netty在收到消息，只解消息号，根据消息号把后面的字节流和消息号直接扔给业务端，业务端可以一直这样打包传，在最后用到的时候才去解码。我看好多的游戏类框架都是这么搞得","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470941,"discussion_content":"可以，后面几层都是可插拔的，第一层也可以自己实现，实际写的时候，你还是注意下，能多分多分，层次清晰，以后换实现也方便。从你目前需要需求看，二层够了，一个编解码，一个转发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571414782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1366948,"avatar":"https://static001.geekbang.org/account/avatar/00/14/db/a4/191be6ad.jpg","nickname":"加载中……","note":"","ucode":"3E59A0A0784D0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36073,"discussion_content":"虽然我不太懂，我觉得是可以的，这也是为什么要分层的一种体现，不用耦合在一起，根据具体的场景可以只用到其中的一层或者几层。一次编/解码就关注字节，二次编/解码关注语义。其实和网络的分层也很像：比如二层网络设备就关注MAC层，不解析IP层，还有4层，7层负载工作，都体现了分层的好处","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571318742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223380,"user_name":"jhren","can_delete":false,"product_type":"c3","uid":1596987,"ip_address":"","ucode":"60F7CCEA1E2C88","user_header":"https://static001.geekbang.org/account/avatar/00/18/5e/3b/845fb641.jpg","comment_is_top":false,"comment_ctime":1591077467,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"请问老师，JSON为什么只有Decoder，没有Encoder？\nhttps:&#47;&#47;github.com&#47;netty&#47;netty&#47;tree&#47;4.1&#47;codec&#47;src&#47;main&#47;java&#47;io&#47;netty&#47;handler&#47;codec&#47;json","like_count":3,"discussions":[{"author":{"id":2287380,"avatar":"","nickname":"Geek_7b8e2b","note":"","ucode":"086FE6EBDF3AAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340801,"discussion_content":"我也疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610162807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287552,"user_name":"Geek1254","can_delete":false,"product_type":"c3","uid":2028941,"ip_address":"","ucode":"BC2F7756A0676D","user_header":"","comment_is_top":false,"comment_ctime":1618025744,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"为什么ByteArrayDecoder扩展了MessageToMessageDecoder而不是扩展ByteToMessageDecoder？有什么区别吗？都可以实现netty的ByteBuf到byte[]的转化呀","like_count":0,"discussions":[{"author":{"id":1435389,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e6/fd/9f1c9398.jpg","nickname":"陈 yi 豪","note":"","ucode":"BFBFCF8768A0B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607687,"discussion_content":"从实现功能的角度来说确实一样，不直接扩展ByteToMessageDecoder是为了让所有的”一次编解码、二次编解码“逻辑遵循同样的分层结构，增强代码的可读性和可扩展性。\n就像普通的SpringMVC项目中，理论上可以把所有的逻辑都放在Controller层，一样可以实现功能。但是为了提高代码的可读性和可扩展性，会把一些特定的业务逻辑抽到Service层和Repository层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678090826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241826,"user_name":"一道阳光","can_delete":false,"product_type":"c3","uid":1239557,"ip_address":"","ucode":"F35207CCCEC6E2","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","comment_is_top":false,"comment_ctime":1597459656,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"一个server端或者client端能不能同时存在多种二次编解码，比如发送接收的数据格式是多种的。","like_count":0}]}