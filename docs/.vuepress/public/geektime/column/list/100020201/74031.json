{"id":74031,"title":"24 | 从大数据性能测试工具Dew看如何快速开发大数据系统","content":"<p>我们在<a href=\"http://time.geekbang.org/column/article/72056\">Spark性能优化案例分析</a>这一期中，通过对大量的Spark服务器的性能数据进行可视化分析，发现了Spark在程序代码和运行环境中的各种性能问题，并做了相应优化，使Spark运行效率得到了极大提升。</p><p><img src=\"https://static001.geekbang.org/resource/image/7a/cc/7af885b0492aa68ffbe05bee7e04cdcc.png?wh=552*156\" alt=\"\"></p><p>很多同学也在问，这些可视化的性能数据从何而来呢？如何在图中将性能指标和任务进度结合起来，可以一目了然看清应用在不同运行阶段的资源使用状况呢？事实上，当时为了进行Spark性能优化，我和团队小伙伴们开发了一个专门的<span class=\"orange\">大数据性能测试工具</span><a href=\"https://github.com/zhihuili/Dew\">Dew</a>。</p><h2>Dew设计与开发</h2><p>Dew自身也是一个分布式的大数据系统，部署在整个Hadoop大数据集群的所有服务器上。它可以实时采集服务器上的性能数据和作业日志，收集起来以后解析这些日志数据，将作业运行时间和采集性能指标的时间在同一个坐标系绘制出来，就得到上面的可视化性能图表。Dew的部署模型如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/7f/81/7f0cf1566ba2f7fccd41b036112e7f81.png?wh=930*342\" alt=\"\"></p><p>从图中看，Dew的核心进程有两种，一种是Dew Master进程Herse，另一种是管理集群中每台服务器的Dew Agent进程DewDrop，Dew Agent监控整个Hadoop集群的每台服务器。Herse独立部署一台服务器，而DewDrop则和HDFS的DataNode、Yarn的NodeManager部署在大数据集群的其他所有服务器上，也就是每台服务器都同时运行DataNode、NodeManager、DewDrop进程。</p><!-- [[[read_end]]] --><p>Dew Master服务器上配置好Agent服务器的IP，运行下面的命令就可以启动整个Dew集群。</p><pre><code>sbin/start-all.sh\n</code></pre><p>Master进程Herse和每一台服务器上的Agent进程DewDrop都会启动起来，DewDrop进程会向Herse进程注册，获取自身需要执行的任务，根据任务指令，加载任务可执行代码，启动Drop进程内的service，或者独立进程service，即各种App。整个启动和注册时序请看下面这张图。</p><p><img src=\"https://static001.geekbang.org/resource/image/41/6d/41bcd70f741ab4a445c368565a67586d.png?wh=1282*856\" alt=\"\"></p><p>所以我们看Dew的架构，其自身也是一个典型的主从结构的大数据系统。跟所有其他的大数据系统一样，Dew也要有一套底层通信体系和消息传输机制。</p><p>当时我们的目标只是想做大数据性能测试与分析，进而优化Spark源代码。所以开发一个分布式大数据性能测试工具是辅助手段，本身不是最主要的目标，所以不可能花太多精力在系统开发上。所以需要寻找一个可以快速开发分布式底层通信体系和消息传输机制的编程框架。</p><p>很快，我们将目标锁定在Akka，这是一个可以同时支持并发编程、异步编程、分布式编程的编程框架，提供了Java和Scala两种编程语言接口，最关键的是Akka非常简单易用。</p><p>最后我们用Akka搭建了Dew的底层通信和消息传输机制，核心代码只有不到100行，花了大半天的时间就开发完成了。一个Master-Slave架构的大数据系统的基本框架就搭建起来了，后面加入分布式集群性能数据采集、日志收集也没花多少时间，很快就输出了我们前面看到的那些Spark性能图表，接着就可以开始对Spark做优化了。</p><p>如果你不太熟悉Akka，看完上面的内容，肯定会对这个如此强大又简单的Akka充满好奇。接下来我们就来看看Akka的原理和应用。</p><h2>Akka原理与应用</h2><p>Akka使用一种叫Actor的编程模型，Actor编程模型是和面向对象编程模型平行的一种编程模型。面向对象认为一切都是对象，对象之间通过消息传递，也就是方法调用实现复杂的功能。</p><p>而Actor编程模型认为一切都是Actor，Actor之间也是通过消息传递实现复杂的功能，但是这里的消息是真正意义上的消息。不同于面向对象编程时，方法调用是同步阻塞的，也就是被调用者在处理完成之前，调用者必须阻塞等待；给Actor发送消息不需要等待Actor处理，消息发送完就不用管了，也就是说，消息是异步的。</p><p>面向对象能够很好地对要解决的问题领域进行建模，但是随着摩尔定律失效，计算机的发展之道趋向于多核CPU与分布式的方向，而面向对象的同步阻塞调用，以及由此带来的并发与线程安全问题，使得其在新的编程时代相形见绌。而Actor编程模型很好地利用了多核CPU与分布式的特性，可以轻松实现并发、异步、分布式编程，受到人们越来越多的青睐。</p><p>事实上，Actor本身极为简单，下面是一个Scala语言的Actor例子。</p><pre><code>class MyActor extends Actor {\n  val log = Logging(context.system, this)\n\n\n  def receive = {\n    case &quot;test&quot; ⇒ log.info(&quot;received test&quot;)\n    case _      ⇒ log.info(&quot;received unknown message&quot;)\n  }\n}\n</code></pre><p>一个Actor类最重要的就是实现receive方法，在receive里面根据Actor收到的消息类型进行对应的处理。而Actor之间互相发送消息，就可以协作完成复杂的计算操作。</p><p>Actor之间互相发送消息全部都是异步的，也就是说，一个Actor给另一个Actor发送消息，并不需要等待另一个Actor返回结果，发送完了就结束了，自己继续处理别的事情。另一个Actor收到发送者的消息后进行计算，如果想把计算结果返回给发送者，只需要给发送者再发送一个消息就可以了，而这个消息依然是异步的。</p><p>这种全部消息都是异步，通过异步消息完成业务处理的编程方式也叫<strong>响应式编程</strong>，Akka的Actor编程就是响应式编程的一种。目前已经有公司在尝试用响应式编程代替传统的面向对象编程，去开发企业应用和网站系统，如果这种尝试成功了，可能会对整个编程行业产生巨大的影响。</p><p>Akka实现异步消息的主要原理是，Actor之间的消息传输是通过一个收件箱Mailbox完成的，发送者Actor的消息发到接收者Actor的收件箱，接收者Actor一个接一个地串行从收件箱取消息调用自己的receive方法进行处理。这个过程请看下面的图。</p><p><img src=\"https://static001.geekbang.org/resource/image/26/13/269b28c63c69444dd9dcb0c3124e0713.png?wh=1920*767\" alt=\"\"></p><p>发送者通过调用一个Actor的引用ActorRef来发送消息，ActorRef将消息放到Actor的Mailbox里就返回了，发送者不需要阻塞等待消息被处理，这是和传统的面向对象编程最大的不同，对象一定要等到被调用者返回结果才继续向下执行。</p><p>通过这种异步消息方式，Akka也顺便实现了并发编程：消息同时异步发送给多个Actor，这些Actor看起来就是在同时执行，即并发执行。</p><p>当时Dew使用Akka，主要用途并不是需要Akka的并发、异步特性，而是主要用到它的分布式特性。</p><p>Akka创建Actor需要用ActorSystem创建。</p><pre><code>val system = ActorSystem(&quot;pingpong&quot;)\n\nval pinger = system.actorOf(Props[Pinger], &quot;pinger&quot;)\n</code></pre><p>当Actor的Props配置为远程的方式，就可以监听网络端口，从而进行远程消息传输。比如下面的Props配置sampleActor监听2553端口。</p><pre><code>akka {\n  actor {\n    deployment {\n      /sampleActor {\n        remote = &quot;akka.tcp://sampleActorSystem@127.0.0.1:2553&quot;\n      }\n    }\n  }\n}\n</code></pre><p>所以使用Akka编程，写一个简单的Actor，实现receive方法，配置一个远程的Props，然后用main函数调用ActorSystem启动，就得到了一个可以远程通信的JVM进程。使用Akka，Dew只用了100多行代码，就实现了一个Master-Slave架构的分布式集群。</p><h2>小结</h2><p>现在微服务架构大行其道，如果用Akka的Actor编程模型，无需考虑微服务架构的各种通信、序列化、封装，只需要将想要分布式部署的Actor配置为远程模式就可以了，不需要改动任何一行代码。是不是很酷呢？</p><p>此外，Actor的交互方式看起来是不是更像人类的交互方式？拜托对方一件事情，说完需求就结束了，不需要傻傻地等在那里，该干嘛干嘛。等对方把事情做完了，再过来跟你说事情的结果，你可以根据结果决定下一步再做什么。</p><p>人类社会的主要组织方式是金字塔结构，老板在最上面，各级领导在中间，最下面是普通干活的员工。所以一个理想的Actor程序也是同样，采用金字塔的结构，顶层Actor负责总体任务，将任务分阶段、分类以后交给下一级多个Actor，下一级Actor拆分成具体的任务交给再下一级更多的Actor，众多的底层Actor完成具体的细节任务。</p><p>这种处理方式非常符合大数据的计算，大数据计算通常都分成多个阶段，每个阶段又处理一个数据集的多个分片，这样用Actor模型正好可以对应上。所以我们看到有的大数据处理系统直接用Akka实现，它们程序简单，运行也很良好，比如大数据流处理系统<a href=\"http://gearpump.apache.org/overview.html\">Gearpump</a>。</p><h2>思考题</h2><p>我们前面提到，Akka的远程Actor可以实现分布式服务，我在专栏第15期的思考题提到过基于消息的流式架构，那么能否用Akka实现一个流式的分布式服务呢？如果可以，对于一个典型的Web请求，比如注册用户，这样的流式分布式服务处理过程是什么样的呢？</p><p>欢迎你点击“请朋友读”，把今天的文章分享给好友。也欢迎你写下自己的思考或疑问，与我和其他同学一起讨论。</p>","neighbors":{"left":{"article_title":"23 | 大数据基准测试可以带来什么好处？","id":73644},"right":{"article_title":"25 | 模块答疑：我能从大厂的大数据开发实践中学到什么？","id":74507}},"comments":[{"had_liked":false,"id":302329,"user_name":"李智慧","can_delete":false,"product_type":"c1","uid":1007349,"ip_address":"","ucode":"8C9980C438AFD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","comment_is_top":false,"comment_ctime":1626167712,"is_pvip":false,"replies":[{"id":"109364","content":"给自己点个赞，哈哈~","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1626172118,"ip_address":"","comment_id":302329,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78935579040","product_id":100020201,"comment_content":"这个思考题写完后，我自己思考了下，基于这个思考题思路，和小伙伴们一起开发了一个反应式编程框架Flower，支持异步流式微服务：https:&#47;&#47;github.com&#47;zhihuili&#47;flower","like_count":19,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523262,"discussion_content":"给自己点个赞，哈哈~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626172118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53139,"user_name":"吴科🍀","can_delete":false,"product_type":"c1","uid":1112547,"ip_address":"","ucode":"8F2C317887A323","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/e3/2529c7dd.jpg","comment_is_top":false,"comment_ctime":1545611527,"is_pvip":false,"replies":[{"id":"19275","content":"spark放弃akka，主要原因是当时akka不稳定，akka还是要持续改进呀。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1545617657,"ip_address":"","comment_id":53139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70265088263","product_id":100020201,"comment_content":"spark在1.6后，使用netty完全代替akka了。主要还是看业务场景吧","like_count":17,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434041,"discussion_content":"spark放弃akka，主要原因是当时akka不稳定，akka还是要持续改进呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545617657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54235,"user_name":"老男孩","can_delete":false,"product_type":"c1","uid":1134514,"ip_address":"","ucode":"CEC6D47412F620","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/b2/1e8b5616.jpg","comment_is_top":false,"comment_ctime":1545812706,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31610583778","product_id":100020201,"comment_content":"使用akka实现传统的web应用功能用户注册，是否可以这样实现。首先通信方式是异步的，用户发起注册请求后，服务端收到请求后直接回复:已经受理了您的注册请求，稍后会将激活码下发邮箱或者手机。同时用户注册的actor就会把任务分解发给它的下一级actor处理，发给用户服务actor新增用户，发给积分兑换服务actor为新用户赠送注册积分和礼券。然后调用通知actor给用户的邮箱或者手机发送注册成功信息以及激活码等。感觉类似rabbitmq的消息队列也可以实现akka的异步和分布式通信。","like_count":8,"discussions":[{"author":{"id":1315527,"avatar":"https://static001.geekbang.org/account/avatar/00/14/12/c7/a7a5df8b.jpg","nickname":"达子不一般","note":"","ucode":"A91C8DB45184F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359790,"discussion_content":"各级akka 通知过程中，部分jvm宕了咋保证一致性呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616291859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52699,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1545479665,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"31610250737","product_id":100020201,"comment_content":"计算机产业变化太快了，我上学的时候还是过程化编程、模块化编程、面向对象的演进路线，这才没几年，已经又演化出新模式了——响应编程模式。","like_count":8},{"had_liked":false,"id":77549,"user_name":"孔祥阳","can_delete":false,"product_type":"c1","uid":1342172,"ip_address":"","ucode":"F3942A7D75A284","user_header":"https://static001.geekbang.org/account/avatar/00/14/7a/dc/0f35e6f6.jpg","comment_is_top":false,"comment_ctime":1552962117,"is_pvip":false,"replies":[{"id":"28341","content":"A和B如果同时修改一个数据，应该将修改消息发送给C，由C修改，而C的修改操作是串行的，即使A和B的消息同时发送给C，C也是一个消息一个消息轮流处理，不会出现并发同步问题。<br>更多细节请参考Akka文档。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1552974153,"ip_address":"","comment_id":77549,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27322765893","product_id":100020201,"comment_content":"关于响应式有个小问题，如果 A通知 和 B通知同事修改一个数据怎么办？就像现实开发企业应用中，A领导拍了这个需求，B领导又出来指点一番，代码上是如何鉴定数据的理想性呢？","like_count":7,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443773,"discussion_content":"A和B如果同时修改一个数据，应该将修改消息发送给C，由C修改，而C的修改操作是串行的，即使A和B的消息同时发送给C，C也是一个消息一个消息轮流处理，不会出现并发同步问题。\n更多细节请参考Akka文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552974153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":545964,"discussion_content":"串行化好思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642094126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":443773,"ip_address":""},"score":545964,"extra":""}]}]},{"had_liked":false,"id":52620,"user_name":"冷锋","can_delete":false,"product_type":"c1","uid":1246986,"ip_address":"","ucode":"737D586A76DF96","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/0a/df537a6f.jpg","comment_is_top":false,"comment_ctime":1545455654,"is_pvip":false,"replies":[{"id":"19273","content":"谢谢指正","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1545617373,"ip_address":"","comment_id":52620,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23020292134","product_id":100020201,"comment_content":"相形见绌，拼音是xiāngxíngjiànchù","like_count":5,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433922,"discussion_content":"谢谢指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545617373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53153,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1545612465,"is_pvip":false,"replies":[{"id":"19276","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1545617722,"ip_address":"","comment_id":53153,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14430514353","product_id":100020201,"comment_content":"我根据自己理解的回复一下，老师可以看着答复一下哈：（&#47;:抠鼻）<br><br>1.Akka天生支持分布式（配置远程Ptops)、天生支持高并发（Actor之间使用MailBox队列实现、无需锁等待…）<br><br>2.瞄了一眼GearPumps，感觉好厉害，四个节点，每秒可以处理1千8百万个长度为100byte的消息，仅有8ms延迟。那它们这个数据，貌似没说网络、机器配置是什么哇～ <br><br>可能说的不对……","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434049,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545617722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545965,"discussion_content":"erlang也很强","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642094179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315527,"avatar":"https://static001.geekbang.org/account/avatar/00/14/12/c7/a7a5df8b.jpg","nickname":"达子不一般","note":"","ucode":"A91C8DB45184F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359794,"discussion_content":"为啥gearpumps退休了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616292540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52754,"user_name":"足迹","can_delete":false,"product_type":"c1","uid":1105779,"ip_address":"","ucode":"38134D1A6B8DC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/73/4a4ce2b5.jpg","comment_is_top":false,"comment_ctime":1545496021,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14430397909","product_id":100020201,"comment_content":"老师，面对这么多的技术，实际应用时时怎么选型的？比如流处理到底是用spark streaming还是storm或是flink？面对离线处理同样有不同的技术可选。你技术选型的主要依据是什么？有什么“套路”可套吗？谢谢！","like_count":3,"discussions":[{"author":{"id":1339820,"avatar":"https://static001.geekbang.org/account/avatar/00/14/71/ac/8295e3e7.jpg","nickname":"书忆江南","note":"","ucode":"90776A7CE06D66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266986,"discussion_content":"如果是现在的话，离线计算的主流引擎是spark，实时流计算的主流引擎是Flink，主要就是看各大厂和cloudera等在推进什么，自己在用什么，就能大致判断了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589586366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57339,"user_name":"Geek_89bbab","can_delete":false,"product_type":"c1","uid":1156607,"ip_address":"","ucode":"B3110D5B3C9500","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","comment_is_top":false,"comment_ctime":1546755477,"is_pvip":false,"replies":[{"id":"20875","content":"我说的是进程内actor因为代码执行异常挂了，重启是restart actor，不是重启进程。如果是进程挂了，等同于机器挂了，","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1546940539,"ip_address":"","comment_id":57339,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136690069","product_id":100020201,"comment_content":"老师，在你的回答中<br>作为actor的b如果因为代码异常挂了，重启后会继续处理消息。如果是机器挂了，就没有了。<br><br>机器挂了该怎么处理，是系统架构要考虑的。<br>———-<br>A，b两个actor处于不同的进程中，a向b发信息，现在邮箱有未处理完的消息，b由于一些原因挂掉，重启为什么还可以继续处理邮箱的消息呢？难道消息持久化到文件中了吗？","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435532,"discussion_content":"我说的是进程内actor因为代码执行异常挂了，重启是restart actor，不是重启进程。如果是进程挂了，等同于机器挂了，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546940539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53230,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1545617864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10135552456","product_id":100020201,"comment_content":"谢谢老师，平安夜快乐，圣诞节🎄快乐！","like_count":2},{"had_liked":false,"id":61741,"user_name":"周飞","can_delete":false,"product_type":"c1","uid":1073374,"ip_address":"","ucode":"F85FA236EB0C0D","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/de/5c67895a.jpg","comment_is_top":false,"comment_ctime":1547787538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842754834","product_id":100020201,"comment_content":"Akka的异步消息跟node.js有异曲同工之妙啊","like_count":1},{"had_liked":false,"id":306981,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1628817846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628817846","product_id":100020201,"comment_content":"这个响应式编程是不是Golang语言崛起的原因？","like_count":0},{"had_liked":false,"id":233271,"user_name":"丁婷","can_delete":false,"product_type":"c1","uid":1913692,"ip_address":"","ucode":"CCD22F62097405","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/0hSQWvd1HbzrsA5xh9tm9oUthTG9BiagIghmMnuF8YFfarKovb4E9jOCw69icLNaeJNClH1ia6f3conGibIicPRkxBg/132","comment_is_top":false,"comment_ctime":1594276207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594276207","product_id":100020201,"comment_content":"如果消息在传递过程中，消息丢了怎么办呢？<br>","like_count":0},{"had_liked":false,"id":192397,"user_name":"小熊","can_delete":false,"product_type":"c1","uid":1634686,"ip_address":"","ucode":"9E4CD1DA292076","user_header":"https://static001.geekbang.org/account/avatar/00/18/f1/7e/8925aba5.jpg","comment_is_top":false,"comment_ctime":1584848666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584848666","product_id":100020201,"comment_content":"学习了","like_count":0},{"had_liked":false,"id":168787,"user_name":"Jun","can_delete":false,"product_type":"c1","uid":1120678,"ip_address":"","ucode":"0FAB76D99153ED","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/a6/7ae63d7e.jpg","comment_is_top":false,"comment_ctime":1578161186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578161186","product_id":100020201,"comment_content":"序列化和封装还是需要解决的，总不好只用纯文本传递数据。但这不是akka要解决的问题。akka感觉是简化版的面向消息的编程模型。我的主要问题是消息队列管理和scale，比如消息的一致性和大数据量下的响应和资源消耗。","like_count":0},{"had_liked":false,"id":57077,"user_name":"Geek_89bbab","can_delete":false,"product_type":"c1","uid":1156607,"ip_address":"","ucode":"B3110D5B3C9500","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","comment_is_top":false,"comment_ctime":1546615470,"is_pvip":false,"replies":[{"id":"20620","content":"作为actor的b如果因为代码异常挂了，重启后会继续处理消息。如果是机器挂了，就没有了。<br><br>机器挂了该怎么处理，是系统架构要考虑的。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1546674243,"ip_address":"","comment_id":57077,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546615470","product_id":100020201,"comment_content":"老师，像akka中两个actor进行通信，它们在不同的进程中，如果actorA把消息发送到actorB的邮箱，B挂掉了。B的邮箱中还存在未处理的消息，重启后还可以重新处理吗？还是邮箱的存在内存中的，无法恢复？那如果B服务挂了，没有来得及处理A发送过去的消息，这该怎么办？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435392,"discussion_content":"作为actor的b如果因为代码异常挂了，重启后会继续处理消息。如果是机器挂了，就没有了。\n\n机器挂了该怎么处理，是系统架构要考虑的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546674243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54763,"user_name":"白鸽","can_delete":false,"product_type":"c1","uid":1182064,"ip_address":"","ucode":"BDA54B54F653B4","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/70/6b6382ca.jpg","comment_is_top":false,"comment_ctime":1545960413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545960413","product_id":100020201,"comment_content":"web复杂请求（响应时间较长，10秒以上），服务器只做请求合法验证，只要验证通过，就返回请求正在处理提示，用户不用等待，想干啥干啥。等请求处理完后，服务器返回请求完成提示弹窗，用户点击查看即可。这种在web请求中很少见，很多就是显示进度条，是不合理吗？","like_count":0},{"had_liked":false,"id":53138,"user_name":"吴科🍀","can_delete":false,"product_type":"c1","uid":1112547,"ip_address":"","ucode":"8F2C317887A323","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/e3/2529c7dd.jpg","comment_is_top":false,"comment_ctime":1545611526,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545611526","product_id":100020201,"comment_content":"spark在1.6后，使用netty完全代替akka了。主要还是看业务场景吧","like_count":0,"discussions":[{"author":{"id":2028645,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/I8icCQSata9FNicgpQHhQK33sWtPKibfsQJqJpNZveWD7ttQNzewBZAzS9GscXXF7ia83NnXEYKS8GU9tHrS6EibJYQ/132","nickname":"long2015z","note":"","ucode":"89FC59540D89C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295509,"discussion_content":"netty也是使用了actor模型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596211080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52902,"user_name":"WolvesLeader","can_delete":false,"product_type":"c1","uid":1103839,"ip_address":"","ucode":"33610E19CA2E96","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/df/fc0a6709.jpg","comment_is_top":false,"comment_ctime":1545549257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545549257","product_id":100020201,"comment_content":"老师请教一个问题 rdd.flatMap(x =&gt; x.split(&quot; &quot;))<br>x.split(&quot; &quot;) 返回的是一个array[string]数组，但是rdd.flatMap需要的参数类型是TraversableOnce，为什么就不抱错误呢？是不是有隐式转换，我找了好久也没找到在哪里做的转换，谢谢啦","like_count":0},{"had_liked":false,"id":52581,"user_name":"Riordon","can_delete":false,"product_type":"c1","uid":1127497,"ip_address":"","ucode":"E2F6855B5FE5F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/49/6b27feb1.jpg","comment_is_top":false,"comment_ctime":1545444491,"is_pvip":false,"replies":[{"id":"19274","content":"应该是不支持了，不过解析策略应该还是有效，跑一下，如果log解析异常，改一下相关代码就可以。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1545617566,"ip_address":"","comment_id":52581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545444491","product_id":100020201,"comment_content":"老师，Dew子项目sparklogparser中Matcher是否支持spark 1.6.x和2.x呢？看项目创建比较早期。","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433913,"discussion_content":"应该是不支持了，不过解析策略应该还是有效，跑一下，如果log解析异常，改一下相关代码就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545617566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52580,"user_name":"Riordon","can_delete":false,"product_type":"c1","uid":1127497,"ip_address":"","ucode":"E2F6855B5FE5F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/49/6b27feb1.jpg","comment_is_top":false,"comment_ctime":1545444306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545444306","product_id":100020201,"comment_content":"老师，Dew子项目sparklogparser，Matcher中匹配的spark版本是否支持1.6.x和2.x呢？","like_count":0}]}