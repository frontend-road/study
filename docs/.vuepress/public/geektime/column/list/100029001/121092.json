{"id":121092,"title":"38 | WebSocket：沙盒里的TCP","content":"<p>在之前讲TCP/IP协议栈的时候，我说过有“TCP Socket”，它实际上是一种功能接口，通过这些接口就可以使用TCP/IP协议栈在传输层收发数据。</p><p>那么，你知道还有一种东西叫“WebSocket”吗？</p><p>单从名字上看，“Web”指的是HTTP，“Socket”是套接字调用，那么这两个连起来又是什么意思呢？</p><p>所谓“望文生义”，大概你也能猜出来，“WebSocket”就是运行在“Web”，也就是HTTP上的Socket通信规范，提供与“TCP Socket”类似的功能，使用它就可以像“TCP Socket”一样调用下层协议栈，任意地收发数据。</p><p><img src=\"https://static001.geekbang.org/resource/image/ee/28/ee6685c7d3c673b95e46d582828eee28.png?wh=1142*502\" alt=\"\"></p><p>更准确地说，“WebSocket”是一种基于TCP的轻量级网络通信协议，在地位上是与HTTP“平级”的。</p><h2>为什么要有WebSocket</h2><p>不过，已经有了被广泛应用的HTTP协议，为什么要再出一个WebSocket呢？它有哪些好处呢？</p><p>其实WebSocket与HTTP/2一样，都是为了解决HTTP某方面的缺陷而诞生的。HTTP/2针对的是“队头阻塞”，而WebSocket针对的是“请求-应答”通信模式。</p><p>那么，“请求-应答”有什么不好的地方呢？</p><p>“请求-应答”是一种“<strong>半双工</strong>”的通信模式，虽然可以双向收发数据，但同一时刻只能一个方向上有动作，传输效率低。更关键的一点，它是一种“被动”通信模式，服务器只能“被动”响应客户端的请求，无法主动向客户端发送数据。</p><!-- [[[read_end]]] --><p>虽然后来的HTTP/2、HTTP/3新增了Stream、Server Push等特性，但“请求-应答”依然是主要的工作方式。这就导致HTTP难以应用在动态页面、即时消息、网络游戏等要求“<strong>实时通信</strong>”的领域。</p><p>在WebSocket出现之前，在浏览器环境里用JavaScript开发实时Web应用很麻烦。因为浏览器是一个“受限的沙盒”，不能用TCP，只有HTTP协议可用，所以就出现了很多“变通”的技术，“<strong>轮询</strong>”（polling）就是比较常用的的一种。</p><p>简单地说，轮询就是不停地向服务器发送HTTP请求，问有没有数据，有数据的话服务器就用响应报文回应。如果轮询的频率比较高，那么就可以近似地实现“实时通信”的效果。</p><p>但轮询的缺点也很明显，反复发送无效查询请求耗费了大量的带宽和CPU资源，非常不经济。</p><p>所以，为了克服HTTP“请求-应答”模式的缺点，WebSocket就“应运而生”了。它原来是HTML5的一部分，后来“自立门户”，形成了一个单独的标准，RFC文档编号是6455。</p><h2>WebSocket的特点</h2><p>WebSocket是一个真正“<strong>全双工</strong>”的通信协议，与TCP一样，客户端和服务器都可以随时向对方发送数据，而不用像HTTP“你拍一，我拍一”那么“客套”。于是，服务器就可以变得更加“主动”了。一旦后台有新的数据，就可以立即“推送”给客户端，不需要客户端轮询，“实时通信”的效率也就提高了。</p><p>WebSocket采用了二进制帧结构，语法、语义与HTTP完全不兼容，但因为它的主要运行环境是浏览器，为了便于推广和应用，就不得不“搭便车”，在使用习惯上尽量向HTTP靠拢，这就是它名字里“Web”的含义。</p><p>服务发现方面，WebSocket没有使用TCP的“IP地址+端口号”，而是延用了HTTP的URI格式，但开头的协议名不是“http”，引入的是两个新的名字：“<strong>ws</strong>”和“<strong>wss</strong>”，分别表示明文和加密的WebSocket协议。</p><p>WebSocket的默认端口也选择了80和443，因为现在互联网上的防火墙屏蔽了绝大多数的端口，只对HTTP的80、443端口“放行”，所以WebSocket就可以“伪装”成HTTP协议，比较容易地“穿透”防火墙，与服务器建立连接。具体是怎么“伪装”的，我稍后再讲。</p><p>下面我举几个WebSocket服务的例子，你看看，是不是和HTTP几乎一模一样：</p><pre><code>ws://www.chrono.com\nws://www.chrono.com:8080/srv\nwss://www.chrono.com:445/im?user_id=xxx\n</code></pre><p>要注意的一点是，WebSocket的名字容易让人产生误解，虽然大多数情况下我们会在浏览器里调用API来使用WebSocket，但它不是一个“调用接口的集合”，而是一个通信协议，所以我觉得把它理解成“<strong>TCP over Web</strong>”会更恰当一些。</p><h2>WebSocket的帧结构</h2><p>刚才说了，WebSocket用的也是二进制帧，有之前HTTP/2、HTTP/3的经验，相信你这次也能很快掌握WebSocket的报文结构。</p><p>不过WebSocket和HTTP/2的关注点不同，WebSocket更<strong>侧重于“实时通信”</strong>，而HTTP/2更侧重于提高传输效率，所以两者的帧结构也有很大的区别。</p><p>WebSocket虽然有“帧”，但却没有像HTTP/2那样定义“流”，也就不存在“多路复用”“优先级”等复杂的特性，而它自身就是“全双工”的，也就不需要“服务器推送”。所以综合起来，WebSocket的帧学习起来会简单一些。</p><p>下图就是WebSocket的帧结构定义，长度不固定，最少2个字节，最多14字节，看着好像很复杂，实际非常简单。</p><p><img src=\"https://static001.geekbang.org/resource/image/29/c4/29d33e972dda5a27aa4773eea896a8c4.png?wh=2468*1523\" alt=\"\"></p><p>开头的两个字节是必须的，也是最关键的。</p><p>第一个字节的第一位“<strong>FIN</strong>”是消息结束的标志位，相当于HTTP/2里的“END_STREAM”，表示数据发送完毕。一个消息可以拆成多个帧，接收方看到“FIN”后，就可以把前面的帧拼起来，组成完整的消息。</p><p>“FIN”后面的三个位是保留位，目前没有任何意义，但必须是0。</p><p>第一个字节的后4位很重要，叫<strong>“Opcode</strong>”，操作码，其实就是帧类型，比如1表示帧内容是纯文本，2表示帧内容是二进制数据，8是关闭连接，9和10分别是连接保活的PING和PONG。</p><p>第二个字节第一位是掩码标志位“<strong>MASK</strong>”，表示帧内容是否使用异或操作（xor）做简单的加密。目前的WebSocket标准规定，客户端发送数据必须使用掩码，而服务器发送则必须不使用掩码。</p><p>第二个字节后7位是“<strong>Payload len</strong>”，表示帧内容的长度。它是另一种变长编码，最少7位，最多是7+64位，也就是额外增加8个字节，所以一个WebSocket帧最大是2^64。</p><p>长度字段后面是“<strong>Masking-key</strong>”，掩码密钥，它是由上面的标志位“MASK”决定的，如果使用掩码就是4个字节的随机数，否则就不存在。</p><p>这么分析下来，其实WebSocket的帧头就四个部分：“<strong>结束标志位+操作码+帧长度+掩码</strong>”，只是使用了变长编码的“小花招”，不像HTTP/2定长报文头那么简单明了。</p><p>我们的实验环境利用OpenResty的“lua-resty-websocket”库，实现了一个简单的WebSocket通信，你可以访问URI“/38-1”，它会连接后端的WebSocket服务“ws://127.0.0.1/38-0”，用Wireshark抓包就可以看到WebSocket的整个通信过程。</p><p>下面的截图是其中的一个文本帧，因为它是客户端发出的，所以需要掩码，报文头就在两个字节之外多了四个字节的“Masking-key”，总共是6个字节。</p><p><img src=\"https://static001.geekbang.org/resource/image/c9/94/c91ee4815097f5f9059ab798bb841594.png?wh=1269*634\" alt=\"\"></p><p>而报文内容经过掩码，不是直接可见的明文，但掩码的安全强度几乎是零，用“Masking-key”简单地异或一下就可以转换出明文。</p><h2>WebSocket的握手</h2><p>和TCP、TLS一样，WebSocket也要有一个握手过程，然后才能正式收发数据。</p><p>这里它还是搭上了HTTP的“便车”，利用了HTTP本身的“协议升级”特性，“伪装”成HTTP，这样就能绕过浏览器沙盒、网络防火墙等等限制，这也是WebSocket与HTTP的另一个重要关联点。</p><p>WebSocket的握手是一个标准的HTTP GET请求，但要带上两个协议升级的专用头字段：</p><ul>\n<li>“Connection: Upgrade”，表示要求协议“升级”；</li>\n<li>“Upgrade: websocket”，表示要“升级”成WebSocket协议。</li>\n</ul><p>另外，为了防止普通的HTTP消息被“意外”识别成WebSocket，握手消息还增加了两个额外的认证用头字段（所谓的“挑战”，Challenge）：</p><ul>\n<li>Sec-WebSocket-Key：一个Base64编码的16字节随机数，作为简单的认证密钥；</li>\n<li>Sec-WebSocket-Version：协议的版本号，当前必须是13。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/8f/97/8f007bb0e403b6cc28493565f709c997.png?wh=2096*865\" alt=\"\"></p><p>服务器收到HTTP请求报文，看到上面的四个字段，就知道这不是一个普通的GET请求，而是WebSocket的升级请求，于是就不走普通的HTTP处理流程，而是构造一个特殊的“101 Switching Protocols”响应报文，通知客户端，接下来就不用HTTP了，全改用WebSocket协议通信。（有点像TLS的“Change Cipher Spec”）</p><p>WebSocket的握手响应报文也是有特殊格式的，要用字段“Sec-WebSocket-Accept”验证客户端请求报文，同样也是为了防止误连接。</p><p>具体的做法是把请求头里“Sec-WebSocket-Key”的值，加上一个专用的UUID “258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，再计算SHA-1摘要。</p><pre><code>encode_base64(\n  sha1( \n    Sec-WebSocket-Key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11' ))\n</code></pre><p>客户端收到响应报文，就可以用同样的算法，比对值是否相等，如果相等，就说明返回的报文确实是刚才握手时连接的服务器，认证成功。</p><p>握手完成，后续传输的数据就不再是HTTP报文，而是WebSocket格式的二进制帧了。</p><p><img src=\"https://static001.geekbang.org/resource/image/84/03/84e9fa337f2b4c2c9f14760feb41c903.png?wh=1254*707\" alt=\"\"></p><h2>小结</h2><p>浏览器是一个“沙盒”环境，有很多的限制，不允许建立TCP连接收发数据，而有了WebSocket，我们就可以在浏览器里与服务器直接建立“TCP连接”，获得更多的自由。</p><p>不过自由也是有代价的，WebSocket虽然是在应用层，但使用方式却与“TCP Socket”差不多，过于“原始”，用户必须自己管理连接、缓存、状态，开发上比HTTP复杂的多，所以是否要在项目中引入WebSocket必须慎重考虑。</p><ol>\n<li><span class=\"orange\">HTTP的“请求-应答”模式不适合开发“实时通信”应用，效率低，难以实现动态页面，所以出现了WebSocket；</span></li>\n<li><span class=\"orange\">WebSocket是一个“全双工”的通信协议，相当于对TCP做了一层“薄薄的包装”，让它运行在浏览器环境里；</span></li>\n<li><span class=\"orange\">WebSocket使用兼容HTTP的URI来发现服务，但定义了新的协议名“ws”和“wss”，端口号也沿用了80和443；</span></li>\n<li><span class=\"orange\">WebSocket使用二进制帧，结构比较简单，特殊的地方是有个“掩码”操作，客户端发数据必须掩码，服务器则不用；</span></li>\n<li><span class=\"orange\">WebSocket利用HTTP协议实现连接握手，发送GET请求要求“协议升级”，握手过程中有个非常简单的认证机制，目的是防止误连接。</span></li>\n</ol><h2>课下作业</h2><ol>\n<li>WebSocket与HTTP/2有很多相似点，比如都可以从HTTP/1升级，都采用二进制帧结构，你能比较一下这两个协议吗？</li>\n<li>试着自己解释一下WebSocket里的”Web“和”Socket“的含义。</li>\n<li>结合自己的实际工作，你觉得WebSocket适合用在哪些场景里？</li>\n</ol><p>欢迎你把自己的学习体会写在留言区，与我和其他同学一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p><img src=\"https://static001.geekbang.org/resource/image/4b/5b/4b81de6b5c57db92ed7808344482ef5b.png?wh=1769*3348\" alt=\"unpreview\"></p><p></p>","neighbors":{"left":{"article_title":"37 | CDN：加速我们的网络服务","id":120664},"right":{"article_title":"39 | HTTP性能优化面面观（上）","id":126374}},"comments":[{"had_liked":false,"id":127004,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566532793,"is_pvip":false,"replies":[{"id":"46998","content":"great。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566543247,"ip_address":"","comment_id":127004,"utype":1}],"discussion_count":1,"race_medal":0,"score":"104645747897","product_id":100029001,"comment_content":"思考题：<br>1.WebSocket 和 HTTP&#47;2 都是用来弥补HTTP协议的一些缺陷和不足，WebSocket 主要解决双向通信、全双工问题，HTTP&#47;2 主要解决传输效率的问题，两者在二进制帧的格式上也不太一样，HTTP&#47;2 有多路复用、优先级和流的概念。<br><br>2.试着自己解释一下 WebSocket 里的”Web“和”Socket“的含义。<br>Web就是HTTP的意思，Socket就是网络编程里的套接字，也就是HTTP协议上的网络套接字，可以任意双向通信。<br><br>3.结合自己的实际工作，你觉得 WebSocket 适合用在哪些场景里？<br>IM通信，实时互动，回调响应，数据实时同步。","like_count":25,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464278,"discussion_content":"great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566543247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176550,"user_name":"cugphoenix","can_delete":false,"product_type":"c1","uid":1474356,"ip_address":"","ucode":"80101AF04C00D3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI3F4IdQuDZrhN8ThibP85eCiaSWTYpTrcC6QB9EoAkw3IIj6otMibb1CgrS1uzITAnJmGLXQ2tgIkAQ/132","comment_is_top":false,"comment_ctime":1581084637,"is_pvip":false,"replies":[{"id":"68566","content":"理解的基本正确，把WebSocket和http、tcp的关系理顺了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1581133282,"ip_address":"","comment_id":176550,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53120692189","product_id":100029001,"comment_content":"是不是可以这样理解：HTTP是基于TCP的，通过TCP收发的消息用HTTP的应用层协议解析。WebSocket是首先通过HTTP协议把TCP链接建好，然后通过Upgrade字段进行协议转换，在收到服务器的101 Switching Protocols应答之后，后续的TCP消息就通过WebSocket协议解析。","like_count":13,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483137,"discussion_content":"理解的基本正确，把WebSocket和http、tcp的关系理顺了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581133282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126878,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1566513764,"is_pvip":false,"replies":[{"id":"46919","content":"WebSocket适合实时通信交互的场景，和消息队列其实是两个领域，不冲突，可以互相结合使用。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566521575,"ip_address":"","comment_id":126878,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48811154020","product_id":100029001,"comment_content":"工作场景遇到过用户订阅股票的股价，股价波动时实时推送给海量订阅的用户，面试场景被问到两次，一 千万粉丝的明星发布动态如何推送给粉丝 二 海量用户的主播直播如何推送弹幕 当时回答消息队列，其实web socket才是比较好的方案","like_count":11,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464219,"discussion_content":"WebSocket适合实时通信交互的场景，和消息队列其实是两个领域，不冲突，可以互相结合使用。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566521575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299689,"discussion_content":"微博这种发布动态 只是普通的数据库查询吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597765607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5952,"discussion_content":"厉害，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566549724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182778,"user_name":"大土豆","can_delete":false,"product_type":"c1","uid":1121636,"ip_address":"","ucode":"67445DC3EC9DB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","comment_is_top":false,"comment_ctime":1582864649,"is_pvip":true,"replies":[{"id":"70718","content":"说的很对。<br><br>正文里的tcp over web只是一种比喻，强调了WebSocket与http的区别，与tcp的相似性，不是那么严谨。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1582879994,"ip_address":"","comment_id":182778,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23057701129","product_id":100029001,"comment_content":"WebSocket定义为tcp over web，我个人感觉是不妥的，应该是&quot;可靠有序的传输层 + 实现组包协议的应用层的长连接方案 over web&quot;。WebSocket和HTTP已经有包的结构了,业务直接可以用了，浏览器A发一个websocket包，比如说数据是1234，给服务器，服务器可以获取这个包，数据是1234，和http一样了。而tcp还是原始的没头没尾的字节流，想要通讯，还得再自定义一个应用层的协议。","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485446,"discussion_content":"说的很对。\n\n正文里的tcp over web只是一种比喻，强调了WebSocket与http的区别，与tcp的相似性，不是那么严谨。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582879994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134387,"user_name":"chao","can_delete":false,"product_type":"c1","uid":1358527,"ip_address":"","ucode":"AE1DBB0592747C","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/bf/e9a44c63.jpg","comment_is_top":false,"comment_ctime":1568815743,"is_pvip":false,"replies":[{"id":"51541","content":"我个人也觉得WebSocket的变长编码设计的很奇怪。<br><br>第二个字节最高位被mask占用，所以低7位表示长度，最多127。<br><br>那么125一下在低7位就够了，126用作标志位，表示后续使用两个字节，127又是另外一个标志位，表示后面是四个字节。<br><br>所以超过125后低7位就不再是长度的含义了，而是标志位：126=&gt;2 bytes， 127=&gt; 4 bytes。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1568853268,"ip_address":"","comment_id":134387,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18748684927","product_id":100029001,"comment_content":"1、第二个字节后 7 位是“Payload len”，表示帧内容的长度。它是另一种变长编码，最少 7 位，最多是 7+64 位，也就是额外增加 8 个字节，所以一个 WebSocket 帧最大是 2^64。<br>2、如果数据的长度小于等于125个字节，则用默认的7个bit来标示数据的长度；<br>如果数据的长度为126个字节，则用后面相邻的2个字节来保存一个16bit位的无符号整数作为数据的长度；<br>如果数据的长度大于等于127个字节，则用后面相邻的8个字节来保存一个64bit位的无符号整数作为数据的长度；<br>老师，2是其它地方看到的，Payload len 这样设计的原因是什么，以及没明白为啥126个字节的长度要用16bit来表示","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467725,"discussion_content":"我个人也觉得WebSocket的变长编码设计的很奇怪。\n\n第二个字节最高位被mask占用，所以低7位表示长度，最多127。\n\n那么125一下在低7位就够了，126用作标志位，表示后续使用两个字节，127又是另外一个标志位，表示后面是四个字节。\n\n所以超过125后低7位就不再是长度的含义了，而是标志位：126=&amp;gt;2 bytes， 127=&amp;gt; 4 bytes。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568853268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160644,"user_name":"夏目","can_delete":false,"product_type":"c1","uid":1212750,"ip_address":"","ucode":"67C075A01CF4D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/4e/d71092f4.jpg","comment_is_top":false,"comment_ctime":1575992718,"is_pvip":false,"replies":[{"id":"61313","content":"这两个确实很像，第一次接触的人（包括我）也是容易弄糊涂。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1576025808,"ip_address":"","comment_id":160644,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14460894606","product_id":100029001,"comment_content":"两年前我实习的时候公司项目用过，到现在我才搞清楚和http的区别，惭愧…","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477444,"discussion_content":"这两个确实很像，第一次接触的人（包括我）也是容易弄糊涂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576025808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314337,"user_name":"ccx","can_delete":false,"product_type":"c1","uid":1042577,"ip_address":"","ucode":"FC0B6CC8A3D3A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/91/e05a03a0.jpg","comment_is_top":false,"comment_ctime":1632975640,"is_pvip":false,"replies":[{"id":"113859","content":"websocket在如今的互联网大环境下非常有用，基于http握手建连让它可以很容易运行在各种web服务上。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1632999130,"ip_address":"","comment_id":314337,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5927942936","product_id":100029001,"comment_content":"在 FINTECH 领域工作了几年了，自研发的外汇&#47;数字货币交易系统的行情模块基本都是 websocket 实现的；另外还遇到一个有意思的场景，就是 discord 的机器人 Slash Commands 的实现也是基于 websocket  的。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527648,"discussion_content":"websocket在如今的互联网大环境下非常有用，基于http握手建连让它可以很容易运行在各种web服务上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632999130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173907,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1579771955,"is_pvip":false,"replies":[{"id":"67670","content":"socket.io是一个开发框架，而WebSocket是传输协议，两者虽然有联系，但不能混在一起。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1579862182,"ip_address":"","comment_id":173907,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5874739251","product_id":100029001,"comment_content":"还有socket.io，算是websocket的超集了。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482236,"discussion_content":"socket.io是一个开发框架，而WebSocket是传输协议，两者虽然有联系，但不能混在一起。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579862182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1466447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","nickname":"Daiver","note":"","ucode":"9B1A03AFBC79BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":152095,"discussion_content":"是的是的，是协议的具体实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579940047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126923,"user_name":"Cris","can_delete":false,"product_type":"c1","uid":1473520,"ip_address":"","ucode":"F8A287134F1078","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","comment_is_top":false,"comment_ctime":1566521906,"is_pvip":false,"replies":[{"id":"46952","content":"可以参考一下第6讲，端口号是跟tcp协议相关的概念。<br><br>因为域名实际上是ip地址的等价替换，所以端口号就可以跟在域名后面。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566524874,"ip_address":"","comment_id":126923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861489202","product_id":100029001,"comment_content":"老师，我想问下，uri里的端口号，有什么用？为什么它是和协议对应的（http默认80，https默认443），却又写在域名的后面？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464245,"discussion_content":"可以参考一下第6讲，端口号是跟tcp协议相关的概念。\n\n因为域名实际上是ip地址的等价替换，所以端口号就可以跟在域名后面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566524874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126903,"user_name":"徐海浪","can_delete":false,"product_type":"c1","uid":1078528,"ip_address":"","ucode":"21801C420D0610","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/00/618b20da.jpg","comment_is_top":false,"comment_ctime":1566520053,"is_pvip":false,"replies":[{"id":"46948","content":"<br>1.在WebSocket里没有请求响应的概念，收发的都是数据帧，通信的双方可以自己解释帧的含义。<br><br>2.应该是基于web，也就是http协议。<br><br>3.对。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566524485,"ip_address":"","comment_id":126903,"utype":1}],"discussion_count":2,"race_medal":1,"score":"5861487349","product_id":100029001,"comment_content":"1. WebSocket 与 HTTP&#47;2 有很多相似点，比如都可以从 HTTP&#47;1 升级，都采用二进制帧结构，你能比较一下这两个协议吗？<br>差别：HTTP&#47;2是请求与响应的模式，而WebSocket是双向的，服务器也可以主动向客户端发起请求。<br>2. 试着自己解释一下 WebSocket 里的”Web“和”Socket“的含义。<br>是基于web服务器，类似于tcp的socket方式来使用的协议。<br>3. 结合自己的实际工作，你觉得 WebSocket 适合用在哪些场景里？<br>我在实际工作中还没有用到WebSocket，觉得适合服务器主动推送的客户端的场景，比如站内信或者站内聊天，或者在线页游？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464238,"discussion_content":"\n1.在WebSocket里没有请求响应的概念，收发的都是数据帧，通信的双方可以自己解释帧的含义。\n\n2.应该是基于web，也就是http协议。\n\n3.对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566524485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078528,"avatar":"https://static001.geekbang.org/account/avatar/00/10/75/00/618b20da.jpg","nickname":"徐海浪","note":"","ucode":"21801C420D0610","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5915,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566536131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126892,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1566518417,"is_pvip":false,"replies":[{"id":"46946","content":"<br>WebSocket其实就是给tcp加了一层简单的包装，所以它的并发能力取决于服务器，并不是kv的形式，你应该把它理解成运行在http上的tcp，用tcp的思路去考虑它。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566524295,"ip_address":"","comment_id":126892,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861485713","product_id":100029001,"comment_content":"老师好!websocket单机服务器能支持多少链接啊?之前没用过websocket。看帖子好像是通过key-value形式存储所有链接。需要用得时候通过key拿到链接往外写数据。希望老师科普下web socket的简单应用和实现，性能分析。<br>需要服务器主动推的感觉都可以用websocket做。<br>聊天工具:用户A，用户B，<br>A-&gt;服务器(保存聊天记录)-&gt;B;B-&gt;服务器(保存聊天记录)-&gt;A;是这样么?","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464229,"discussion_content":"\nWebSocket其实就是给tcp加了一层简单的包装，所以它的并发能力取决于服务器，并不是kv的形式，你应该把它理解成运行在http上的tcp，用tcp的思路去考虑它。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566524295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346326,"user_name":"Evan Xia","can_delete":false,"product_type":"c1","uid":2310344,"ip_address":"","ucode":"6800538102355E","user_header":"https://static001.geekbang.org/account/avatar/00/23/40/c8/17af3598.jpg","comment_is_top":false,"comment_ctime":1653027486,"is_pvip":false,"replies":[{"id":"126385","content":" 这个场景用websocket还是挺合适的，不过网络的问题就是协议之外的事情了。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1653192151,"ip_address":"","comment_id":346326,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653027486","product_id":100029001,"comment_content":"我们的业务场景是在下黑白棋的过程双方都能实时收到对方的落子， 用的是一个封装好的Centrifugo库，期间遇到最多的就是网络不好重连的问题","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573076,"discussion_content":" 这个场景用websocket还是挺合适的，不过网络的问题就是协议之外的事情了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653192151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322704,"user_name":"Jasmine","can_delete":false,"product_type":"c1","uid":1585145,"ip_address":"","ucode":"E54999CC612A7C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuTjCibv0afd7SSdLicfNk0f7KO5ga9VMleD1hc2DtQfianK20ht06SekClKV7M8UXLRHqQLm9hJ3ow/132","comment_is_top":false,"comment_ctime":1637559481,"is_pvip":false,"replies":[{"id":"117197","content":"前面的7位是标志位，已经被占用了，所以只能用64位。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1637632808,"ip_address":"","comment_id":322704,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637559481","product_id":100029001,"comment_content":"第二个字节后 7 位是“Payload len”，表示帧内容的长度。它是另一种变长编码，最少 7 位，最多是 7+64 位，也就是额外增加 8 个字节，所以一个 WebSocket 帧最大是 2^64。——这里最大的帧为什么不说是2^71呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532505,"discussion_content":"前面的7位是标志位，已经被占用了，所以只能用64位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637632808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296089,"user_name":"Unknown element","can_delete":false,"product_type":"c1","uid":2028277,"ip_address":"","ucode":"34A129800D0238","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","comment_is_top":false,"comment_ctime":1622737335,"is_pvip":false,"replies":[{"id":"107497","content":"<br>1.websocket本质上和tcp是一样的，双工是指通信的双方可以同时发送数据，但一个方向上的数据包还是有序的。<br><br>2.注意它用了变长编码，超过127才会用8个字节来表示长度，所以最大长度是2^64。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1622803866,"ip_address":"","comment_id":296089,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1622737335","product_id":100029001,"comment_content":"老师问下<br>1.Web socket既然没有流的概念那具体是怎么实现全双工的呢  两边都同时收发那包的顺序就乱了吧<br>2.Web socket帧里帧长度最大是7+64位那最长不应该是2^71位吗  为什么课程里说最长是2^64？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521319,"discussion_content":"\n1.websocket本质上和tcp是一样的，双工是指通信的双方可以同时发送数据，但一个方向上的数据包还是有序的。\n\n2.注意它用了变长编码，超过127才会用8个字节来表示长度，所以最大长度是2^64。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622803866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028277,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","nickname":"Unknown element","note":"","ucode":"34A129800D0238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377970,"discussion_content":"一个方向上是有序的那只是发送的时候有序吧  受到的顺序有可能会乱啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622984957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289177,"user_name":"张峰","can_delete":false,"product_type":"c1","uid":1097820,"ip_address":"","ucode":"7015E9A9137521","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/5c/10111544.jpg","comment_is_top":false,"comment_ctime":1618904087,"is_pvip":false,"replies":[{"id":"104934","content":"对这两个不是太了解，感觉像是js里的编程概念吧，与传输协议本身没有关系。<br><br>抱歉了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1618914428,"ip_address":"","comment_id":289177,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618904087","product_id":100029001,"comment_content":"服务器发送事件（Server-sent Events）是基于 WebSocket 协议的一种服务器向客户端发送事件和数据的单向通讯。<br>HTML5 服务器发送事件（server-sent event）允许网页获得来自服务器的更新。<br><br>老师能讲解一下 Server-sent Events 和 websocket的相同和不同。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518842,"discussion_content":"对这两个不是太了解，感觉像是js里的编程概念吧，与传输协议本身没有关系。\n\n抱歉了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618914428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287316,"user_name":"blueBean","can_delete":false,"product_type":"c1","uid":1816697,"ip_address":"","ucode":"6A68D2414BD904","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","comment_is_top":false,"comment_ctime":1617880366,"is_pvip":false,"replies":[{"id":"104375","content":"FIN只是一个代号，并不是三个字符，也就是说0是没结束，1是结束。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1617932672,"ip_address":"","comment_id":287316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617880366","product_id":100029001,"comment_content":"帧那里，第一个字节的第一位应该就是一个bit吧，为啥能放下FIN这个字段呢？想不通","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518268,"discussion_content":"FIN只是一个代号，并不是三个字符，也就是说0是没结束，1是结束。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617932672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284434,"user_name":"脱缰的野马__","can_delete":false,"product_type":"c1","uid":1447569,"ip_address":"","ucode":"D5F993E7232C61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","comment_is_top":false,"comment_ctime":1616248092,"is_pvip":false,"replies":[{"id":"103157","content":"WebSocket和http一样，客户端要发起连接，接下来就和tcp一样了，服务器在内存里保持多个与客户端的连接。<br><br>如果会Python，可以找相关的库试一试。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1616290128,"ip_address":"","comment_id":284434,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616248092","product_id":100029001,"comment_content":"老师你好，请问服务端在使用websocket主动推送信息给客户端的时候，是如何知道客户端的呢？另外服务端要主动推送的客户端有成千上万个，哪又如何推送？不像客户端请求服务端，客户端请求服务端是使用http，有ip和端口。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517347,"discussion_content":"WebSocket和http一样，客户端要发起连接，接下来就和tcp一样了，服务器在内存里保持多个与客户端的连接。\n\n如果会Python，可以找相关的库试一试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616290128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275298,"user_name":"乘风破浪","can_delete":false,"product_type":"c1","uid":2406841,"ip_address":"","ucode":"937AF15F3FEBDC","user_header":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","comment_is_top":false,"comment_ctime":1611457815,"is_pvip":false,"replies":[{"id":"99929","content":"可能是本地的dns解析缓存的问题，可以考虑用docker环境试试，或者用一个干净的虚拟机环境重新搭建。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1611537095,"ip_address":"","comment_id":275298,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1611457815","product_id":100029001,"comment_content":"罗大师，所有WS的页面都无法打开，错误提示如下，<br>无法访问此网站网址为 ws:&#47;&#47;www.chrono.com:8080&#47;srv 的网页可能暂时无法连接，或者它已永久性地移动到了新网址。<br>ERR_DISALLOWED_URL_SCHEME<br><br>无法访问此网站网址为 ws:&#47;&#47;127.0.0.1&#47;38-0 的网页可能暂时无法连接，或者它已永久性地移动到了新网址。<br>ERR_DISALLOWED_URL_SCHEME<br><br>wireshark也抓不到任何包<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514300,"discussion_content":"可能是本地的dns解析缓存的问题，可以考虑用docker环境试试，或者用一个干净的虚拟机环境重新搭建。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611537095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406841,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","nickname":"乘风破浪","note":"","ucode":"937AF15F3FEBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345136,"discussion_content":"大师，应该不是dns缓存问题，重启电脑也不行，ipconfig /flushdns也不行\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611664538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":2406841,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","nickname":"乘风破浪","note":"","ucode":"937AF15F3FEBDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369163,"discussion_content":"换虚拟机或者docker吧，实际环境影响因素太多，在这里不好解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618964699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":345136,"ip_address":""},"score":369163,"extra":""}]}]},{"had_liked":false,"id":249110,"user_name":"火锅小王子","can_delete":false,"product_type":"c1","uid":1053262,"ip_address":"","ucode":"7D1BF39C437A99","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/4e/ff0702fc.jpg","comment_is_top":false,"comment_ctime":1600434118,"is_pvip":false,"replies":[{"id":"91412","content":"WebSocket的帧划分是由应用自己定义的，和http&#47;2差不多，它的下层还是交给tcp发送，所以不用考虑传输的底层细节。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1600484053,"ip_address":"","comment_id":249110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600434118","product_id":100029001,"comment_content":"老师您好，可以解释一下其中的帧是如何具体划分的吗 比如发送一个大的内容 ，分割帧有什么依据，还是说依赖mss或者滑动窗口这些内容？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505834,"discussion_content":"WebSocket的帧划分是由应用自己定义的，和http/2差不多，它的下层还是交给tcp发送，所以不用考虑传输的底层细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600484053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230554,"user_name":"Maske","can_delete":false,"product_type":"c1","uid":1696847,"ip_address":"","ucode":"A19BB41A47E852","user_header":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","comment_is_top":false,"comment_ctime":1593416771,"is_pvip":true,"replies":[{"id":"85092","content":"good，快学完了，加油。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1593423650,"ip_address":"","comment_id":230554,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1593416771","product_id":100029001,"comment_content":"1.都是建立在tcp&#47;ip之上，默认端口和http(s)一样。不同点：http2专注于解决http1.1的性能问题。websocket是一种全双工通信协议，解决的是能够让服务器端主动推送数据给客户端的问题，使得web应用不再局限于‘请求——应答’模式。<br>2.‘web’表示是基于web浏览器层面的，在前端通过js动态控制网络的连接与断开、数据收发操作。socket是一种应用进程与网络通信协议之间的连接机制。<br>3.实时聊天应用，金融领域的股价股指等走势图的绘制也需要实时获取最新的数据，导航应用也需要获取实时路况。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499934,"discussion_content":"good，快学完了，加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593423650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1696847,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","nickname":"Maske","note":"","ucode":"A19BB41A47E852","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287363,"discussion_content":"哈哈，感谢老师支持，后面有问题肯定也免不了再回头多看几遍的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593424455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220794,"user_name":"我母鸡啊！","can_delete":false,"product_type":"c1","uid":1633705,"ip_address":"","ucode":"7BFB14BC99E978","user_header":"https://static001.geekbang.org/account/avatar/00/18/ed/a9/662318ab.jpg","comment_is_top":false,"comment_ctime":1590324731,"is_pvip":false,"replies":[{"id":"81447","content":"说的很好。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1590366423,"ip_address":"","comment_id":220794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590324731","product_id":100029001,"comment_content":"1.WebSocket 与 HTTP&#47;2 有很多相似点，比如都可以从 HTTP&#47;1 升级，都采用二进制帧结构，你能比较一下这两个协议吗？<br><br>websocket里面有帧的概念，却没有http2.0里的虚拟流的概念，也不存在优先级，多路复用。websocket的出现本质上还是为了解决http的半双工的问题，变成全双工，服务器和客户端可以随意通行的问题","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496240,"discussion_content":"说的很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590366423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220789,"user_name":"我母鸡啊！","can_delete":false,"product_type":"c1","uid":1633705,"ip_address":"","ucode":"7BFB14BC99E978","user_header":"https://static001.geekbang.org/account/avatar/00/18/ed/a9/662318ab.jpg","comment_is_top":false,"comment_ctime":1590324542,"is_pvip":false,"replies":[{"id":"81446","content":"nice","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1590366397,"ip_address":"","comment_id":220789,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590324542","product_id":100029001,"comment_content":"3.结合自己的实际工作，你觉得 WebSocket 适合用在哪些场景里？<br>最近在做直播功能的项目，就用到了websovket的去做用户评论的推送，观看人数等的功能。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496238,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590366397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213562,"user_name":"哎呦歪","can_delete":false,"product_type":"c1","uid":1792176,"ip_address":"","ucode":"63E0B984B71C7C","user_header":"https://static001.geekbang.org/account/avatar/00/1b/58/b0/417b4117.jpg","comment_is_top":false,"comment_ctime":1588475103,"is_pvip":false,"replies":[{"id":"79173","content":"http不是实时的，server push也不能推送任意数据，只能算是略有改进的半双工，和WebSocket的全双工还是有很大差距的。<br><br>WebSocket服务器端可以任意发送数据，比http&#47;2要自由灵活的多。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588487437,"ip_address":"","comment_id":213562,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588475103","product_id":100029001,"comment_content":"老师，你好。我想问一下既然 http&#47;2 也可以 Server push，那么是不是也可以理解是 全双工，websocket和 http&#47;2 在 Server push 上有什么区别？ ","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493814,"discussion_content":"http不是实时的，server push也不能推送任意数据，只能算是略有改进的半双工，和WebSocket的全双工还是有很大差距的。\n\nWebSocket服务器端可以任意发送数据，比http/2要自由灵活的多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588487437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207429,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1587085365,"is_pvip":false,"replies":[{"id":"77479","content":"<br>1.微信的具体技术不了解，看uri是http，内部是否用了WebSocket可以抓包看看。<br><br>2.对。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1587092188,"ip_address":"","comment_id":207429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587085365","product_id":100029001,"comment_content":"微信网页端就是用WebSocket吧？小贴士第四点，如果运行在ssl&#47;tls 上，指的是wss吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492120,"discussion_content":"\n1.微信的具体技术不了解，看uri是http，内部是否用了WebSocket可以抓包看看。\n\n2.对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587092188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202841,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586076218,"is_pvip":false,"replies":[{"id":"76036","content":"说的都很到位。<br><br>WebSocket就是用来轻量级替代tcp的，可以通过http协议来建立连接，实现全双工通信。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586221921,"ip_address":"","comment_id":202841,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586076218","product_id":100029001,"comment_content":"1：WebSocket 与 HTTP&#47;2 有很多相似点，比如都可以从 HTTP&#47;1 升级，都采用二进制帧结构，你能比较一下这两个协议吗？<br>初心不一样，WebSocket核心是实现全双工通信，可以重分的利用网络的通信能力，实现全双工后服务器就不总是被动的响应了，也可以主动邀请浏览器喝咖啡。HTTP&#47;2核心是提高数据的传输效率，通过多路复用的方式来实现。<br><br>2：试着自己解释一下 WebSocket 里的”Web“和”Socket“的含义。<br>Web主要强调浏览器或者网页相关的应用吧！<br>Socket主要强调他是在TCP上的一层薄薄的封装，实现通信方式比较简单考向底层。<br><br>3：结合自己的实际工作，你觉得 WebSocket 适合用在哪些场景里？<br>目前还没用到，他核心解决的是全双工通信问题，HTTP早就就解决了浏览器侧的主动请求，那他的出现主要方便了想发起主动请求的服务器这一侧。只有是服务器想主动推送数据的场景也许都合适，比如：数据变动主动推送，不用客户端不断轮询。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490698,"discussion_content":"说的都很到位。\n\nWebSocket就是用来轻量级替代tcp的，可以通过http协议来建立连接，实现全双工通信。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586221921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201029,"user_name":"锦","can_delete":false,"product_type":"c1","uid":1468298,"ip_address":"","ucode":"CB0EB4B68C468B","user_header":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","comment_is_top":false,"comment_ctime":1585707812,"is_pvip":false,"replies":[{"id":"75213","content":"<br>这样做当然没有问题，不过这就和http一样了。<br><br>小帧的好处是容易处理，流化。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585718037,"ip_address":"","comment_id":201029,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585707812","product_id":100029001,"comment_content":"为啥要使用这么多帧呢？使用一个帧头，里面定义报文长度不就行了吗？帧头后面全是报文。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490216,"discussion_content":"\n这样做当然没有问题，不过这就和http一样了。\n\n小帧的好处是容易处理，流化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585718037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196557,"user_name":"Geek_5b0e47","can_delete":false,"product_type":"c1","uid":1822723,"ip_address":"","ucode":"3D6F1426B0593D","user_header":"","comment_is_top":false,"comment_ctime":1585293011,"is_pvip":false,"replies":[{"id":"74434","content":"nice，实时推送用WebSocket很好使。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585295145,"ip_address":"","comment_id":196557,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585293011","product_id":100029001,"comment_content":"向客户端监控屏推送时实更新数据，可以使用websocket","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489331,"discussion_content":"nice，实时推送用WebSocket很好使。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585295145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168538,"user_name":"小鸟淫太","can_delete":false,"product_type":"c1","uid":1247186,"ip_address":"","ucode":"AC44F552DDF93E","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/d2/d7a200d5.jpg","comment_is_top":false,"comment_ctime":1578106318,"is_pvip":false,"replies":[{"id":"65551","content":"sse还是基于http的，比较简单，但对浏览器要求高。而WebSocket是一个独立的协议，更加灵活，功能更强。<br><br>只要合适应用场景就好。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1578273190,"ip_address":"","comment_id":168538,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578106318","product_id":100029001,"comment_content":"现在公司做的消息推送用的是SSE，如果不用从浏览器往服务器双向推，用SSE感觉要比WebSocket省事很多。。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480243,"discussion_content":"sse还是基于http的，比较简单，但对浏览器要求高。而WebSocket是一个独立的协议，更加灵活，功能更强。\n\n只要合适应用场景就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578273190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148124,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1572944386,"is_pvip":false,"replies":[{"id":"57115","content":"抱歉没用过mqtt，不能给出两者的对比。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1573001848,"ip_address":"","comment_id":148124,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1572944386","product_id":100029001,"comment_content":"之前用MQTT进行数据推送，与websocket还是不太一样。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473405,"discussion_content":"抱歉没用过mqtt，不能给出两者的对比。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573001848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129268,"user_name":"丶景","can_delete":false,"product_type":"c1","uid":1079269,"ip_address":"","ucode":"128AAC7A93E641","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/e5/8b5844df.jpg","comment_is_top":false,"comment_ctime":1567074525,"is_pvip":false,"replies":[{"id":"48108","content":"不行，WebSocket是实时全双工，而http&#47;2的推送只是为了减少客户端请求的成本，出发点不同，用起来也就差距很大，毕竟http&#47;2的主要应用场景还是标准的http请求应答，实时性不强。<br><br>WebSocket和http&#47;2各有自己的优势，不存在相互替代。<br>","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1567083982,"ip_address":"","comment_id":129268,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567074525","product_id":100029001,"comment_content":"老师好，那是不是可以理解成其实 http2 也能解决 WebSocket 所解决的问题？因为 hhtp2 也能服务器推送？谢谢老师","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465371,"discussion_content":"不行，WebSocket是实时全双工，而http/2的推送只是为了减少客户端请求的成本，出发点不同，用起来也就差距很大，毕竟http/2的主要应用场景还是标准的http请求应答，实时性不强。\n\nWebSocket和http/2各有自己的优势，不存在相互替代。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567083982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1523315,"avatar":"","nickname":"GeekCoder","note":"","ucode":"14BB73CBE28545","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":574126,"discussion_content":"HTTP2服务端不是也可以主动给客户端推送吗？不是实时的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653839203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":465371,"ip_address":""},"score":574126,"extra":""}]}]},{"had_liked":false,"id":128080,"user_name":"崔伟协","can_delete":false,"product_type":"c1","uid":1022452,"ip_address":"","ucode":"ACDEEDF2A10999","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/f4/e0484cac.jpg","comment_is_top":false,"comment_ctime":1566828747,"is_pvip":true,"replies":[{"id":"47505","content":"协议里要求客户端发送WebSocket帧，必须使用掩码，否则就是格式错误，服务器应该拒绝接收。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566867322,"ip_address":"","comment_id":128080,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566828747","product_id":100029001,"comment_content":"强制客户端掩码是什么意思","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464785,"discussion_content":"协议里要求客户端发送WebSocket帧，必须使用掩码，否则就是格式错误，服务器应该拒绝接收。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566867322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127176,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1566577849,"is_pvip":false,"replies":[{"id":"47155","content":"WebSocket API是HTML5的一部分，所以JS就可以使用WebSocket实现实时通信。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566690358,"ip_address":"","comment_id":127176,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566577849","product_id":100029001,"comment_content":"是js的实时web应用会调用websocket api吗？没接触过js，不太懂这套运行流程。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464357,"discussion_content":"WebSocket API是HTML5的一部分，所以JS就可以使用WebSocket实现实时通信。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566690358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127175,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1566577706,"is_pvip":false,"replies":[{"id":"47156","content":"WebSocket是一个通用的协议，只是大多数情况下是在http、浏览器里使用。<br><br>完全可以自己写一个应用程序，使用WebSocket来通信。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566690423,"ip_address":"","comment_id":127175,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566577706","product_id":100029001,"comment_content":"虽然大多数情况下我们会在浏览器里调用 API 来使用 WebSocket。这句话不太理解，websocket不是只有浏览器自己会调用吗？用户还能在浏览器之上调用websocket  api，可以举个例子吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464356,"discussion_content":"WebSocket是一个通用的协议，只是大多数情况下是在http、浏览器里使用。\n\n完全可以自己写一个应用程序，使用WebSocket来通信。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566690423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057122,"avatar":"https://static001.geekbang.org/account/avatar/00/10/21/62/abb7bfe3.jpg","nickname":"Ai普","note":"","ucode":"637F2378FAFC96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351456,"discussion_content":"老师请问websocket如果保持多个链接保持长链接呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614275222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}