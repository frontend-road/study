{"id":317071,"title":"12 | IoT Hub：面对海量设备如何打造高性能设备接入层？","content":"<p>你好，我是郭朝斌。</p><p>前面两讲，我们一直在谈物联网云平台针对海量数据的处理和存储技术。顺着物联网的数据技术体系继续往下探索，我们自然就会面临一个问题：物联网云平台的服务器需要管理海量设备的接入，并且接收来自设备的海量数据的输入，那么服务器要怎么应对这样的挑战呢？</p><p>我们来分析一下这个问题。物联网设备是通过某种通信协议接入云平台的，比如常用的MQTT协议，那么设备接入的服务器就是MQTT Broker服务器。</p><p>从架构设计来说，负责设备接入的这一部分一般叫作<strong>设备接入层</strong>，也被称为<strong>IoT Hub</strong>。设备接入层之后，才是和互联网系统类似的<strong>业务层</strong>。具体的系统架构图可能是下面这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/fd/5b/fdb74fcd872c299459bbb2f28383325b.jpg?wh=2700*1886\" alt=\"\"></p><p>不过，估计你也发现问题了，这样的架构根本无法支撑物联网场景中海量设备的接入和海量数据的输入。单台MQTT Broker服务器很容易面临性能瓶颈。所以前面提到的“服务器怎么应对挑战”的问题就变成了：怎么打造高性能的设备接入层？</p><p>我们再继续深入分析，把关键点定位得更具体一点。打造<strong>高性能</strong>的设备接入层，最重要的技术难点是，如何实现接入层的<strong>高并发</strong>。因为只有具备高并发的能力，才能有效地、可靠地实现数据的传输。</p><p>所以，现在问题又变成了：物联网云平台中，怎么实现高并发的设备接入层？</p><!-- [[[read_end]]] --><p>接下来，我就带你一步一步地设计一个高并发的设备接入层。在这个过程中，我会为你详细地讲解我们需要用到的重要技术，让你为物联网平台的搭建做好技术储备。</p><h2>负载均衡：让多台服务器更好地协作</h2><p><a href=\"https://time.geekbang.org/column/article/316274\">上一讲</a>我曾经提到，为了解决灭霸这个难题，要让超级英雄们组成联盟。同样地，面对性能瓶颈，我们可以集合多个服务器的力量来解决问题，也就是说，可以通过增加多台MQTT Broker服务器来满足海量设备的连接请求。</p><p>但是服务器数量变多之后，它们具体要怎么协作呢？比如一个MQTT请求过来了，它应该被分配给哪台服务器处理呢？更进一步地说，怎么保证每台服务器的负担和压力都基本平衡呢？</p><p>这就要用到负载均衡技术。<strong>负载均衡</strong>（Load Balancer）这个名字非常形象，我们可以分成“负载”和“均衡”两个词来理解。</p><ul>\n<li><strong>负载</strong>是指服务器面对的网络连接和服务请求的<strong>压力</strong>，也就是  “困难”。</li>\n<li><strong>均衡</strong>是针对服务器压力的解决办法，多个服务器一起来处理任务，并且这几个服务器的压力要达到<strong>平衡</strong>的状态，也就是“分担”。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/1e/32/1e6b6eeff26f3ed5c15debfc3df2fe32.jpg?wh=2700*1270\" alt=\"\"></p><p>这种平衡状态要怎么实现呢？我们需要设计一种任务<strong>分配策略</strong>。</p><p>最简单、直接的办法就是<strong>平均分配</strong>。</p><p>比如有3个服务器都在等待分配。当一个服务请求到来时，负载均衡服务器先将它给服务器1处理；接着第二个请求到来时，给服务器2处理，以此类推。</p><p>当第四个服务请求需要处理时，负载均衡转回来，再次指定给服务器1，循环轮转。所以这种策略也叫<strong>轮询策略</strong>（Round Robin Scheduling）。</p><p>如果用公式来表达这个服务器序号的计算方法，那就是：</p><p>$$i = (i+1)mod(n)$$</p><p>其中 i 是服务器的序号，从0开始计数；n表示服务器个数，这里n等于3。</p><p>当然，在现实环境中，各个服务器的配置并不是完全一样的，有的任务处理能力强，有的能力弱些。这就像在复仇者联盟中，每位英雄的强度也各有不同。</p><p>我们自然希望能力强的服务器多负担一些任务，所以对于轮询策略，我们可以引入<strong>权重系数</strong>。</p><p>比如服务器1的权重是2，服务器2的是4，服务器3的是1，那么负载均衡服务器就可以给服务器2多分配任务，而给服务器3分配最少的工作。</p><p>这个改良版的策略就是<strong>加权轮询策略</strong>（Weighted Round Robin Scheduling）。</p><p>不管是轮询策略，还是加权轮询策略，它们具有简单实用的优点。但是通常情况下，服务器处理每个任务的时间是不同。尤其是在物联网场景中，设备可能会跟服务器保持长连接。可能有的服务器被分配的设备比较少，但是保持连接的设备却很多。这种情况下，如果我们仍然使用轮询策略，那么各服务器的负载就很难达到平衡状态。</p><p>所以我们需要一种<strong>动态调度</strong>的策略，能够基于各服务器的网络连接数情况，优先将新的任务分配给保持连接的设备数最少的服务器。这种基于连接数的策略就是<strong>最小连接数策略</strong>（Least Connection Scheduling）。</p><p>我们也可以为最小连接数策略引入权重系数，给不同能力的服务器分配不同的权重，更好地平衡服务器的负载，这就是<strong>加权最小连接数策略</strong>（Weighted Least Connection Scheduling）。</p><p>这个策略是怎么计算的呢？假设服务器的权重分别是$W_1$、$W_2$和$W_3$，服务器的连接数分别是$C_1$、$C_2$和$C_3$，那么计算的表达式是这样的：</p><p>$$Min(C_1/W_1, C_2/W_2, C_3/W_3)$$</p><p>负载均衡服务器会选择计算结果是最小的那台服务器。</p><p>如果有2台或者3台服务器的计算结果同时最小呢？这时，我们还可以在这几台服务器中采用轮询策略。所以说，分配策略不是相互排斥的，在实践中我们需要综合使用不同的策略。</p><p>考虑到这个原因，我需要给你再讲一种常用的分配策略，那就是<strong>源地址哈希值策略</strong>（Source Hashing Scheduling）。</p><p>所谓源地址，一般就是指网络连接的<strong>源IP地址</strong>。负载均衡服务器通过计算源IP地址的哈希值来确定对应的服务器。因为相同IP地址的哈希值是不变的，这就保证了相同的设备可以连接到固定的服务器上。</p><p>在实践中，我们可以通过开源软件来搭建负载均衡服务器。比如 <strong>HAProxy 软件</strong>，它支持<a href=\"https://en.wikipedia.org/wiki/OSI_model\">OSI网络七层模型</a>中第4层和第7层的负载均衡，性能可以跟商用解决方案媲美。同时，我建议搭配<strong>Keepalived</strong>软件使用，实现高可用的热备方案，这样就可以避免单机故障导致系统瘫痪了。</p><h2>消息队列：避免耗时的等待</h2><p>当负载均衡服务器将物联网设备的网络请求分配到 MQTT Broker 服务器后，MQTT Broker服务器就可以与设备建立连接，并且收到设备上传的数据了。然后，数据就会传输给数据流处理服务器或者写入数据库中。</p><p>但是，数据流处理和把数据写入数据库都是花时间的操作，它们和数据传入的速度并不一致。为了可以让MQTT Broker服务器高效地完成数据的传输，同时保证数据流处理和写入数据库的操作可靠执行，我们需要在MQTT Broker服务器和数据流处理服务器之间加入<strong>异步处理</strong>机制。</p><p>那么，异步处理机制要怎么实现呢？行业内一般通过<strong>消息队列</strong>来实现。你可以把消息队列想象成双十一购物节后的快递公司，它收到商家大量的运单，然后快递公司按照一定的节奏完成这些运单的递送任务。</p><p>在我们的系统中，MQTT Broker 服务器将数据给到消息队列，就完成了数据传输的工作。在这之后，数据流处理和写入数据库的操作只要按照自己的节奏，消费消息队列内的数据就行了。</p><p><img src=\"https://static001.geekbang.org/resource/image/86/b9/86cf475dda27dcc25758b976e4d935b9.jpg?wh=2700*2050\" alt=\"\"></p><p>另外，消息队列还提供了额外的两个好处：</p><ol>\n<li>实现了 MQTT Broker 服务器和数据流处理服务器之间的解耦，双方没有直接的依赖，所以维护更新会更加方便。</li>\n<li>可以平衡输入数据量的大小变化，所以数据流处理服务器不会因为骤增的压力而崩溃。</li>\n</ol><p>既然消息队列这么重要，你肯定也想知道，在实践中有没有开源的软件可以选择呢？答案是有的。最常见的选择有<strong>Kafka</strong>和<strong>RabbitMQ</strong>等。</p><p>Kafka真是一个神奇的软件，凭借着优秀的设计成为消息队列系统的主流选择。而且在这个成功的基础上，它还在不断改进，新增了分布式流处理和分布式存储等功能。虽然这些新功能不一定比专门的流处理和存储软件更强大，但对于中小型的业务来说完全够用了，关键是非常方便，部署也简单。</p><h2>缓存系统：让数据读写更快速</h2><p>从架构图中我们可以看出来，数据流处理服务器处理完数据后，这些数据会存储到数据库中，提供给批处理或者业务服务器使用；而且它在进行数据处理时，也需要从数据存储中获取一些信息。</p><p>但是数据库的读写数据是一个速度比较慢的操作，尤其是基于磁盘介质存储的数据库。为了提高性能，我们需要比数据库，甚至分布式文件系统更快的数据存取方式，这就需要用到<strong>缓存系统</strong>了。</p><p>缓存是一个常见的概念。比如浏览器会使用缓存来避免重复从网络获取网页数据，从而更加快速地响应用户的请求。</p><p>在我们的系统中，引入缓存系统当然是为了避免直接从磁盘中读取数据，或者直接向磁盘中写入数据。</p><p>缓存系统一般会将数据暂时存储在内存中，这样数据流处理应用就不需要直接与低速的磁盘打交道了。而且，如果我们读取的是经常用到的热点数据时，这些数据全都不需要重复从磁盘读取。这样既减轻了数据库的压力，又提高了数据处理速度，一举两得。</p><p>缓存系统的常用开源选择有<strong>Redis</strong>和<strong>Memcached</strong>等。其中Redis更是在数据持久机制和主从节点复制的高可用特性上做了很多工作，不但功能强大，而且效率也很高。</p><p>加入缓存系统之后，设备接入层的整体系统架构就完成了，你可以参考下面这张图。</p><p><img src=\"https://static001.geekbang.org/resource/image/11/88/11ef8db8026f1d9578d9c974a3af8b88.jpg?wh=2700*2315\" alt=\"\"></p><h2>小结</h2><p>总结一下，物联网云平台的服务器为了应对海量设备接入和海量数据输入的挑战，需要打造高并发的设备接入层。所以在这一讲中，我带你设计并完善了设备接入层的整体架构，并讲解了需要用到的<strong>负载均衡</strong>、<strong>消息队列</strong>和<strong>缓存系统</strong>等技术。</p><ol>\n<li>负载均衡用来协调多台服务器来共同应对网络连接和请求的压力，服务器任务分配策略主要有三大类，分别是平等分配的轮询策略，考虑连接设备数的最小连接策略，以及保证相同的源地址访问同一台服务器的源地址哈希值策略。</li>\n<li>这些策略可以搭配使用，还可以通过引入加权系数来改进。在实际应用中，我们需要根据场景灵活选择，常用的开源方案有HAProxy 软件和 Nginx软件，部署时可以搭配Keepalived提高可用性。</li>\n<li>消息队列可以在不同的系统之间搭建桥梁，保证数据和服务请求的高效可靠处理。常用的开源软件有Kafka和RabbitMQ等。</li>\n<li>缓存系统可以减轻数据库的压力，提高系统响应速度。常用的开源软件有Redis和Memcached等。</li>\n</ol><h2>思考题</h2><p>最后，我想请你思考一个问题。</p><p>在这一讲中，我们通过负载均衡来分担服务器的压力。这里设备是使用MQTT协议与接入层服务器，也就是MQTT Broker服务器通信的，所以不同的设备发送的相同 Topic 的消息就会发送到不同的服务器上。</p><p>如果有订阅者订阅这个 Topic 消息，那么应该怎么保证订阅者可以接收到所有的设备发送的此Topic的消息呢？</p><p>欢迎你在留言区写一下自己的思考，同时也欢迎你将本讲分享给对高并发感兴趣的朋友一起讨论学习。</p>","neighbors":{"left":{"article_title":"11 | 数据存储：物联网中的数据库有哪些？","id":316274},"right":{"article_title":"13 | 隐私：在实践中如何保护用户隐私？","id":317861}},"comments":[{"had_liked":false,"id":265989,"user_name":"il李li","can_delete":false,"product_type":"c1","uid":1338637,"ip_address":"","ucode":"2193A7E41DEC68","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/0d/71053329.jpg","comment_is_top":false,"comment_ctime":1607091904,"is_pvip":false,"replies":[{"id":"97117","content":"大赞👍，完全正确","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607763428,"ip_address":"","comment_id":265989,"utype":1}],"discussion_count":3,"race_medal":0,"score":"96096372416","product_id":100063601,"comment_content":"对于每个设备负载均衡分配连接到那个MQTT Broker，收到设备PUB消息的Broker路由转发该消息到集群的其他Broker，这需要集群中维护一个全局的主题Topic与消息路由表Route Table的对应关系，能够准确转发到其他有订阅该主题的Broker节点上。而对于Broker收到PUB消息后，查到相应的Topic，并将消息发送给订阅此 Topic 的终端设备。这个全局的Topic消息路由表是个关键的设计","like_count":23,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511115,"discussion_content":"大赞👍，完全正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607763428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595467,"avatar":"https://static001.geekbang.org/account/avatar/00/18/58/4b/8b044dd3.jpg","nickname":"和光同尘","note":"","ucode":"A3195757E45CD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355623,"discussion_content":"这个方案一行代码都不要写吧，这个就是mqtt的原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615461782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1595467,"avatar":"https://static001.geekbang.org/account/avatar/00/18/58/4b/8b044dd3.jpg","nickname":"和光同尘","note":"","ucode":"A3195757E45CD5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548017,"discussion_content":"我也觉得，MQTT不就是天然支持pub-sub吗？难道只是单broker支持？集群需要自己做这个工作？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642994908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":355623,"ip_address":""},"score":548017,"extra":""}]}]},{"had_liked":false,"id":265865,"user_name":"Geek_9b7997","can_delete":false,"product_type":"c1","uid":2306745,"ip_address":"","ucode":"1880C5824D4191","user_header":"","comment_is_top":false,"comment_ctime":1607054762,"is_pvip":false,"replies":[{"id":"97120","content":"嗯，十几万、甚至几十万的量级都可以不用集群","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607763723,"ip_address":"","comment_id":265865,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18786923946","product_id":100063601,"comment_content":"一般的企业级平台毕竟不是大厂平台，如果有了边缘网关后，并发量是不是就没有那么多了？其实也无需集群了？","like_count":5,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511075,"discussion_content":"嗯，十几万、甚至几十万的量级都可以不用集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607763723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266083,"user_name":"YueShi","can_delete":false,"product_type":"c1","uid":1625530,"ip_address":"","ucode":"8F7AFAE4641A7D","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","comment_is_top":false,"comment_ctime":1607161046,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"14492062934","product_id":100063601,"comment_content":"这个问题是 怎么保证消息准确到达消费者(订阅者), <br>就是保证消息不丢失,<br>这个的解决是靠mq实现的, 常见的就是ack机制, <br>消息确认机制: 消息在到达消费者后并被成功消费之后会向broker发送ack确认消息, broker才会认为这条消息已经消费完毕, 并进行下一条消息<br><br>一般的ack级别分为 no-ack, auto-ack, manual-ack等<br><br>但是过于严格的要求会导致新的问题产生, 就是一条消息被消费多次, 这个一般是通过代码去保证幂等性","like_count":3,"discussions":[{"author":{"id":1625530,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","nickname":"YueShi","note":"","ucode":"8F7AFAE4641A7D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334819,"discussion_content":"好像理解错了，看看其他同学的回答也是受益匪浅😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607998399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267814,"user_name":"InfoQ_Albert","can_delete":false,"product_type":"c1","uid":1290413,"ip_address":"","ucode":"B4C16362EDC7A9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIVlib8n4JZhIomleMIyJTrbhn81kXG39DhJzrFMwmwxFsHCkicsC4CmY5Ft8icmzibWzmvibsDKDP3ORQ/132","comment_is_top":false,"comment_ctime":1607940044,"is_pvip":false,"replies":[{"id":"99488","content":"一些开源的软件是不支持集群的，如果必要，需要我们自己去开发让他支持集群","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610865525,"ip_address":"","comment_id":267814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5902907340","product_id":100063601,"comment_content":"之前做个一项目需要对接物联网数据，需要用到消息队列来降低数据库的写入请求，当时对比了几个MQ；Kafka集群支持比较好，但是不支持MQTT协议；RabbitMQ支持MQTT协议但是使用的是Erlang语言编写，怕出问题了搞不了；当时项目的接入的物联网设备不多就30台，最后使用的是ActiveMQ的新一代叫Apollo，它可以提供消息队列和broker功能；但是不知如何部署集群，所以想问问郭老师？","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511755,"discussion_content":"一些开源的软件是不支持集群的，如果必要，需要我们自己去开发让他支持集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610865525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267238,"user_name":"Garwen","can_delete":false,"product_type":"c1","uid":1045062,"ip_address":"","ucode":"C76346E1734AB8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/46/09c457eb.jpg","comment_is_top":false,"comment_ctime":1607656828,"is_pvip":false,"replies":[{"id":"97090","content":"消息队列怎么知道订阅者是谁呢？如何给不同的订阅者发送消息呢<br>可以从多个broker如何配合考虑","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607756741,"ip_address":"","comment_id":267238,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5902624124","product_id":100063601,"comment_content":"相同主题的数据发送到了不同的设备上，但是这些MQTT Broker里面的数据都进了消息队列的同一主题里面了吧，所以订阅消息队列里面的对应主题就能接收到所有同一Topic的数据了。","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511557,"discussion_content":"消息队列怎么知道订阅者是谁呢？如何给不同的订阅者发送消息呢\n可以从多个broker如何配合考虑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607756741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266566,"user_name":"Dan","can_delete":false,"product_type":"c1","uid":1583806,"ip_address":"","ucode":"1BECA80FA3E670","user_header":"https://static001.geekbang.org/account/avatar/00/18/2a/be/17c0f8ca.jpg","comment_is_top":false,"comment_ctime":1607395577,"is_pvip":false,"replies":[{"id":"97103","content":"👍方法二基本是一般的思路了","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607758132,"ip_address":"","comment_id":266566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5902362873","product_id":100063601,"comment_content":"方法一应该是直接从缓存那一集提取数据 然后再通过MQTT broken分发<br>方法二应该是每个mqtt都有有一分订阅名单，然后所有broker 都吧相关信息发给一个服务器综合处理","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511315,"discussion_content":"👍方法二基本是一般的思路了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607758132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265995,"user_name":"fwx","can_delete":false,"product_type":"c1","uid":1033851,"ip_address":"","ucode":"6D5095F9D90950","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/7b/38100bee.jpg","comment_is_top":false,"comment_ctime":1607094010,"is_pvip":true,"replies":[{"id":"97116","content":"可以，但是注意测试你使用的部分对mqtt协议的支持是否OK，一般情况下支持还可以，有些情况可能有问题，需要你往这方面留意一下。因为不是主要功能，mqtt方面的问题解决起来可能优先级不高。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607763362,"ip_address":"","comment_id":265995,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5902061306","product_id":100063601,"comment_content":"当接入 IoT 设备数量在十万以内或者万级时，能否直接选择支持MQTT协议的消息队列，将MQTT Broker服务器和消息队列系统进行合二为一？","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511117,"discussion_content":"可以，但是注意测试你使用的部分对mqtt协议的支持是否OK，一般情况下支持还可以，有些情况可能有问题，需要你往这方面留意一下。因为不是主要功能，mqtt方面的问题解决起来可能优先级不高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607763362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548018,"discussion_content":"我一直以为MQTT就是一个消息队列呢？这样看起来不是？它只是一个接入层网关，不具备消息队列的缓冲功能，需要搭配kafka之类的消息队列？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642995027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265841,"user_name":"贤伟","can_delete":false,"product_type":"c1","uid":1496738,"ip_address":"","ucode":"02E467263201DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/a2/be61c162.jpg","comment_is_top":false,"comment_ctime":1607049327,"is_pvip":false,"replies":[{"id":"97121","content":"嗯，你是结合具体的技术方案做了解释。这个机制已经保证了消息的消费。这里的特殊点是多个消费者一起来消费brokers上的消息，这个组里的消费者没有自己的独立性。如果消费某个topic的消费者只有它一个，它只连接其中一个broker，就需要考虑其他机制了。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607765029,"ip_address":"","comment_id":265841,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5902016623","product_id":100063601,"comment_content":"我们是用3 kafka brokers集群做消息处理的， 每个topic有多个分区，每个分区有3个副本，分在3个broker上。同时每个topic我们有一个消费者group，每个group 有多个消费者，每个消费者去处理1个或多个partition（消费者就是数据处理微服务，可以动态扩展，保证启动时订阅同一个topic，属于同一个group）。<br>我的理解可以把consumer group当做一个订阅者，既能利用多分区并行消费，也可以保证该group可以收到topic的所有消息。","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511067,"discussion_content":"嗯，你是结合具体的技术方案做了解释。这个机制已经保证了消息的消费。这里的特殊点是多个消费者一起来消费brokers上的消息，这个组里的消费者没有自己的独立性。如果消费某个topic的消费者只有它一个，它只连接其中一个broker，就需要考虑其他机制了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607765029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325533,"user_name":"奇[爱心]一","can_delete":false,"product_type":"c1","uid":2135940,"ip_address":"","ucode":"C0C91D9F4B4CEA","user_header":"https://static001.geekbang.org/account/avatar/00/20/97/84/7c1b9906.jpg","comment_is_top":false,"comment_ctime":1639017095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639017095","product_id":100063601,"comment_content":"老师，您好。我是一个小白，文章中的数据库可以用什么数据库呢？还有流处理服务应该用什么？可以直接往数据库里这数据吗？","like_count":0},{"had_liked":false,"id":298053,"user_name":"恒","can_delete":false,"product_type":"c1","uid":1004816,"ip_address":"","ucode":"0C9545E9620AE9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/10/33310cb9.jpg","comment_is_top":false,"comment_ctime":1623897440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623897440","product_id":100063601,"comment_content":"前面讲网关的时候，北向接口里面没有提到mqtt协议支持。那么从网关到hub一般是有什么协议呢？如果还是mqtt，那网关在中间就是只做转发不做翻译？","like_count":0},{"had_liked":false,"id":292818,"user_name":"小太阳","can_delete":false,"product_type":"c1","uid":1566413,"ip_address":"","ucode":"80FD4A871ABFAD","user_header":"https://static001.geekbang.org/account/avatar/00/17/e6/cd/bf5e928c.jpg","comment_is_top":false,"comment_ctime":1620993562,"is_pvip":true,"replies":[{"id":"106625","content":"RabbitMQ这些通过插件的方式支持mqtt，毕竟不是专门为mqtt的，之前有看到某些协议实现上有坑，要留意。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1621692372,"ip_address":"","comment_id":292818,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620993562","product_id":100063601,"comment_content":"rabbitmq的mqtt插件，在生产环境使用有什么限制么？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519969,"discussion_content":"RabbitMQ这些通过插件的方式支持mqtt，毕竟不是专门为mqtt的，之前有看到某些协议实现上有坑，要留意。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621692372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288161,"user_name":"杨磊","can_delete":false,"product_type":"c1","uid":1796475,"ip_address":"","ucode":"20FBF43491D80D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qZ3bvj9j1KibcY7zkv2XS0gDF9oUrkx7zjucHCnIwCnBM6KYUBQUjyXAO3wkNlPiawTNVicKKwNjFkQxv0feHJUdQ/132","comment_is_top":false,"comment_ctime":1618325481,"is_pvip":false,"replies":[{"id":"106693","content":"那broker不就成为瓶颈了吗？而且broker需要处理具体的应用协议，工作任务更重，更容易出现性能问题。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1621759535,"ip_address":"","comment_id":288161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618325481","product_id":100063601,"comment_content":"HAProxy会变成整个系统的网络瓶颈吧？毕竟所有网络请求流量都要流经这里。<br>为什么不把网关配置为连接某固定MQTT Broker呢，这样就不去除了这个网络贷款瓶颈。<br><br>谢谢","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518533,"discussion_content":"那broker不就成为瓶颈了吗？而且broker需要处理具体的应用协议，工作任务更重，更容易出现性能问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621759535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277796,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1612593452,"is_pvip":false,"replies":[{"id":"102071","content":"看设备端是否可控，如果可以，对设备划分，让设备接入不同的服务器","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1614580807,"ip_address":"","comment_id":277796,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1612593452","product_id":100063601,"comment_content":"还有一种场景是设备数量多，且数据本身比较大，单条几百KB，如果数据上报走负载均衡，那么负载均衡的网卡就成了系统瓶颈，这种场景除了网卡融合还有其他方案吗？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515172,"discussion_content":"看设备端是否可控，如果可以，对设备划分，让设备接入不同的服务器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614580807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276057,"user_name":"Geek_73e181","can_delete":false,"product_type":"c1","uid":1623417,"ip_address":"","ucode":"27CBAF479370B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VKEoG4KibH1ajZ3PXI47dOE0SxEGQzaic7duJG38INguJpZUl8IIy7jgiavOH2fO8WEkISJZxldMPAOP6DDjR65mQ/132","comment_is_top":false,"comment_ctime":1611759426,"is_pvip":false,"replies":[{"id":"100773","content":"我想你指的mqtt是某个具体的实现，因为mqtt本意是一种协议，和Kafka完全不是一个维度的东西，无法直接比较。这要看你的应用场景了，mqtt针对物联网，客户端很轻巧，可以在嵌入式系统上运行。Kafka提供的工具生态应该是没有考虑这些的","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1612587458,"ip_address":"","comment_id":276057,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611759426","product_id":100063601,"comment_content":"能直接用卡夫卡代替mqtt吗？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514582,"discussion_content":"我想你指的mqtt是某个具体的实现，因为mqtt本意是一种协议，和Kafka完全不是一个维度的东西，无法直接比较。这要看你的应用场景了，mqtt针对物联网，客户端很轻巧，可以在嵌入式系统上运行。Kafka提供的工具生态应该是没有考虑这些的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612587458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273252,"user_name":"边际革命","can_delete":false,"product_type":"c1","uid":1124665,"ip_address":"","ucode":"EC15C0AE4D487A","user_header":"https://static001.geekbang.org/account/avatar/00/11/29/39/be9d2e88.jpg","comment_is_top":false,"comment_ctime":1610512589,"is_pvip":true,"replies":[{"id":"99214","content":"需要自己来组合搭建","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610777221,"ip_address":"","comment_id":273252,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610512589","product_id":100063601,"comment_content":"老师， 接入层有什么开源项目参考下吗？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513541,"discussion_content":"需要自己来组合搭建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610777221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268791,"user_name":"孙腾蛟","can_delete":false,"product_type":"c1","uid":1567891,"ip_address":"","ucode":"2721492BB91B24","user_header":"https://static001.geekbang.org/account/avatar/00/17/ec/93/d77a303a.jpg","comment_is_top":false,"comment_ctime":1608350021,"is_pvip":false,"replies":[{"id":"99467","content":"每种方案都有瓶颈的，如果特别大可以联系云服务商做更好的设计。如果自己搭建服务器实现，涉及的领域非常多，也不是一篇文章可以解决的","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610863655,"ip_address":"","comment_id":268791,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1608350021","product_id":100063601,"comment_content":"HAProxy和网卡这部分会不会成为性能瓶颈，当有百万级别以上的并发, 作者有相关的文章或书推荐吗","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512040,"discussion_content":"每种方案都有瓶颈的，如果特别大可以联系云服务商做更好的设计。如果自己搭建服务器实现，涉及的领域非常多，也不是一篇文章可以解决的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610863655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548020,"discussion_content":"在HAProxy之前会有LVS负载均衡，LVS之前会有DNS负载均衡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642995151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266487,"user_name":"兢","can_delete":false,"product_type":"c1","uid":1070683,"ip_address":"","ucode":"878EAA03E02C1C","user_header":"","comment_is_top":false,"comment_ctime":1607352317,"is_pvip":false,"replies":[{"id":"97104","content":"自己根据需求来做","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607758182,"ip_address":"","comment_id":266487,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607352317","product_id":100063601,"comment_content":"请教老师个问题：在加入缓存后，好像缺少一个将缓存数据落地的服务，这块有什么成熟解决方案吗？还是需要自己写一个服务去读缓存然后写入数据库？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511282,"discussion_content":"自己根据需求来做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607758182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266447,"user_name":"Sceneryback","can_delete":false,"product_type":"c1","uid":1200084,"ip_address":"","ucode":"619EA21D27CDC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/d4/cd7ed149.jpg","comment_is_top":false,"comment_ctime":1607342592,"is_pvip":false,"replies":[{"id":"97107","content":"也是一个思路。这些brokers最终组成了一个什么呢？","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607758488,"ip_address":"","comment_id":266447,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607342592","product_id":100063601,"comment_content":"系统把处理后的数据发到另一个 kafka topic, 几个 mqtt brokers 作为一个 consumer group 订阅此 topic 共同消费","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511269,"discussion_content":"也是一个思路。这些brokers最终组成了一个什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607758488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266052,"user_name":"稳","can_delete":false,"product_type":"c1","uid":1284626,"ip_address":"","ucode":"BF5723E63E4115","user_header":"https://static001.geekbang.org/account/avatar/00/13/9a/12/06863960.jpg","comment_is_top":false,"comment_ctime":1607148650,"is_pvip":false,"replies":[{"id":"97115","content":"mqtt是一种通信协议，本身并不是消息队列的功能哈。它的名字使人有误解。其实是遵循的IBM的一个MQ产品系列名。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607763045,"ip_address":"","comment_id":266052,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1607148650","product_id":100063601,"comment_content":"请教下老师，mqtt不也属于消费队列吗？那增加的rabbitmq这一层的意义大吗？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511132,"discussion_content":"mqtt是一种通信协议，本身并不是消息队列的功能哈。它的名字使人有误解。其实是遵循的IBM的一个MQ产品系列名。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607763045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548021,"discussion_content":"那老师会推荐哪些MQTT开源产品？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642995225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265803,"user_name":"德慢慢","can_delete":false,"product_type":"c1","uid":2049906,"ip_address":"","ucode":"F79F4C1A2C9EFA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epa9fhIhtLUNkCqR9dxZTUolBLs40YiawZ4TUtvTG90HR0OyXzwU7icjyDiaF4FZOicyzRV1bGAylhs2A/132","comment_is_top":false,"comment_ctime":1607040324,"is_pvip":false,"replies":[{"id":"97122","content":"可否具体讲讲过程是怎么样的呢？","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607765092,"ip_address":"","comment_id":265803,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607040324","product_id":100063601,"comment_content":"可以利用tag吗？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511050,"discussion_content":"可否具体讲讲过程是怎么样的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607765092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265784,"user_name":"wuqilv","can_delete":false,"product_type":"c1","uid":1169314,"ip_address":"","ucode":"B9C4A2C2FF32AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/a2/5f6b90a9.jpg","comment_is_top":false,"comment_ctime":1607013419,"is_pvip":false,"replies":[{"id":"97123","content":"嗯，一些场景下可以。<br>能展开讲讲具体过程吗？","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607765184,"ip_address":"","comment_id":265784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607013419","product_id":100063601,"comment_content":"利用kafka 的group和topic？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511042,"discussion_content":"嗯，一些场景下可以。\n能展开讲讲具体过程吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607765184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}