{"id":93090,"title":"23 | 如何构造酷炫的物理效果和过场动画效果？","content":"<p>你好，我是戴铭。今天，我要和你分享的是如何为你 App 添加酷炫的动画效果。</p><p>不论是iOS开发，还是Android开发，现在的动画库差不多都需要手动去编写动画代码。这样的话，iOS 和 Android 开发者就需要分别去编写适合自己系统的代码。而且，手动编写动画的代码也非常复杂，不容易维护，很多动画细节的调整还需要和动画设计师不断沟通打磨，尤其是千行以上的动画代码编写、维护、沟通的成本巨大。</p><p>手动编写动画代码，除了会影响到开发者外，动画设计师也难以幸免。一款产品适配的平台越多，动画设计师设计走查的周期就越长，相应的动画成本就越高。同时，动画设计师很兴奋地设计出一套炫酷地动画效果后，在要通过开发者实现出来时，却因为工时评估过长而一再被简化，甚至被直接取消。试想一下，以后他还会动力十足地去设计酷炫的动画效果吗？</p><p>所以，你会发现现在有酷炫的动画效果的 App 非常少，而且多是出自个人开发者之手。那么，这就提高了对个人开发者的要求，不但要求他代码写得好，还要能够设计出好的动画效果。但是，这样的人才也是不可多得。</p><p>那，到底有没有什么办法能够把动画制作和App开发隔离开，专人做专事，而且还能使得多个平台的动画效果保持一致呢？</p><!-- [[[read_end]]] --><p>办法总比困难多。接下来，我们就一起看看如何实现的问题吧。</p><h2>Lottie</h2><p><a href=\"http://airbnb.io/lottie/#/\">Lottie 框架</a>就很好地解决了动画制作与开发隔离，以及多平台统一的问题。</p><p>Lottie 是 Airbnb 开源的一个动画框架。Lottie 这个名字来自于一名德国导演洛特·赖尼格尔（Lotte Reiniger），她最著名的电影叫作“阿赫迈德王子历险记（The Adventures of Prince Achmed）”。这个框架和其他的动画框架不太一样，动画的编写和维护将由动画设计师完成，完全无需开发者操心。</p><p>动画设计师做好动画以后，可以使用<a href=\"https://www.adobe.com/products/aftereffects.html\">After Effects</a>将动画导出成JSON文件，然后由Lottie 加载和渲染这个JSON文件，并转换成对应的动画代码。由于是JSON格式，文件也会很小，可以减少 App 包大小。运行时还可以通过代码控制更改动画，比如更改颜色、位置以及任何关键值。另外，Lottie 还支持页面切换的过场动画（UIViewController Transitions）。</p><p>下面的两张动画，就是使用Lottie 做出来的效果。<br>\n<img src=\"https://static001.geekbang.org/resource/image/4a/c9/4a6a19fdb4fc53757d27ddb6aa4380c9.gif?wh=900*507\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/27/75/270ed9bc73a18fde74611bdbef419975.gif?wh=800*400\" alt=\"\"></p><p>上面这些动画，就是由动画设计师使用 After Effects 创作，然后使用 <a href=\"https://github.com/airbnb/lottie-web\">Bodymovin</a>进行导出的，开发者完全不用做什么额外的代码工作，就能够使用原生方式将其渲染出来。</p><p>Bodymovin 是 Hernan Torrisi 做的一个 After Effects 的插件，起初导出的JSON文件只是通过 JavaScript 在网页中进行动画的播放，后来才将JSON文件的解析渲染应用到了其他平台上。</p><p>那么，如何使用 Bodymovin 呢？</p><h2>Bodymovin</h2><p>你需要先到<a href=\"https://www.adobeexchange.com/creativecloud.details.12557.html\">Adobe官网</a>下载Bodymovin插件，并在 After Effects 中安装。使用 After Effects 制作完动画后，选择 Windows 菜单，找到 Extensions 的 Bodymovin 项，在菜单中选择 Render 按钮就可以输出JSON文件了。</p><p><a href=\"https://lottiefiles.com/\">LottieFiles网站</a>还是一个动画设计师分享作品的平台，每个动画效果的JSON文件都可下载使用。所以，如果你现在没有动画设计师配合的话，可以到这个网站去查找并下载一个 Bodymovin 生成的JSON文件，然后运用到工程中去试试效果。</p><h2>在 iOS 中使用 Lottie</h2><p>在iOS开发中使用Lottie也很简单，只要集成 Lottie 框架，然后在程序中通过 Lottie 的接口控制 After Effects 生成的动画 JSON 就行了。</p><p>首先，你可以通过 CocoaPods 集成 Lottie 框架到你工程中。Lottie iOS 框架的 GitHub 地址是<a href=\"https://github.com/airbnb/lottie-ios/\">https://github.com/airbnb/lottie-ios/</a>，官方也提供了<a href=\"https://github.com/airbnb/lottie-ios/tree/master/Example\">可供学习的示例</a>。</p><p>然后，快速读取一个由Bodymovin 生成的JSON文件进行播放。具体代码如下所示：</p><pre><code>LOTAnimationView *animation = [LOTAnimationView animationNamed:@&quot;Lottie&quot;];\n[self.view addSubview:animation];\n[animation playWithCompletion:^(BOOL animationFinished) {\n  // 动画完成后需要处理的事情\n}];\n</code></pre><p>利用 Lottie 的动画进度控制能力，还可以完成手势与动效同步的问题。动画进度控制是 LOTAnimationView 的 animationProgress 属性，设置属性的示例代码如下：</p><pre><code>CGPoint translation = [gesture getTranslationInView:self.view];\nCGFloat progress = translation.y / self.view.bounds.size.height;\nanimationView.animationProgress = progress;\n</code></pre><p>Lottie 还带有一个 UIViewController animation-controller，可以自定义页面切换的过场动画，示例代码如下：</p><pre><code>#pragma mark -- 定制转场动画\n\n// 代理返回推出控制器的动画\n- (id&lt;UIViewControllerAnimatedTransitioning&gt;)animationControllerForPresentedController:(UIViewController *)presented presentingController:(UIViewController *)presenting sourceController:(UIViewController *)source {\n  LOTAnimationTransitionController *animationController = [[LOTAnimationTransitionController alloc] initWithAnimationNamed:@&quot;vcTransition1&quot; fromLayerNamed:@&quot;outLayer&quot; toLayerNamed:@&quot;inLayer&quot; applyAnimationTransform:NO];\n  return animationController;\n}\n\n// 代理返回退出控制器的动画\n- (id&lt;UIViewControllerAnimatedTransitioning&gt;)animationControllerForDismissedController:(UIViewController *)dismissed {\n  LOTAnimationTransitionController *animationController = [[LOTAnimationTransitionController alloc] initWithAnimationNamed:@&quot;vcTransition2&quot; fromLayerNamed:@&quot;outLayer&quot; toLayerNamed:@&quot;inLayer&quot; applyAnimationTransform:NO];\n  return animationController;\n}\n</code></pre><p>Lottie 在运行期间提供接口和协议来更改动画，有动画数据搜索接口 LOTKeyPath，以及设置动画数据的协议 LOTValueDelegate。详细的说明和使用示例代码，你可以参看<a href=\"http://airbnb.io/lottie/#/ios\">官方 iOS 教程</a>。</p><h2>多平台支持</h2><p>Lottie 支持多平台，除了 支持<a href=\"https://github.com/airbnb/lottie-ios\">iOS</a>，还支持 <a href=\"https://github.com/airbnb/lottie-android\">Android</a> 、<a href=\"https://github.com/react-native-community/lottie-react-native\">React Native</a>和<a href=\"https://github.com/simolus3/fluttie\">Flutter</a>。除了官方维护的这些平台外，Lottie还支持<a href=\"https://github.com/windows-toolkit/Lottie-Windows\">Windows</a>、<a href=\"https://blog.qt.io/blog/2019/03/08/announcing-qtlottie/\">Qt</a>、<a href=\"https://skia.org/user/modules/skottie\">Skia</a> 。陈卿还实现了 <a href=\"https://github.com/chenqingspring/react-lottie\">React</a>、<a href=\"https://github.com/chenqingspring/vue-lottie\">Vue</a>和<a href=\"https://github.com/chenqingspring/ng-lottie\">Angular</a>对 Lottie的支持，并已将代码放到了GitHub上。</p><p>有了这么多平台的支持，对于动画设计师来说，可以安心做动画，只要简单地转换就可以完美展现动画效果，再也不用担心到开发者那里动画效果被大打折扣了。而对于开发者来说，再也不用写那些难以维护的大量动效代码了，而且App安装包的体积还变小了。</p><p>那么，<strong>这么神奇的框架，在 iOS 里到底是怎么实现的呢？</strong>接下来，我们就看下Lottie的实现原理吧。</p><p>通过原理的学习，你会掌握通过 JSON 来控制代码逻辑的能力。比如，你可以把运营活动流程的代码逻辑设计为一种规范，再设计一个拖拽工具用来创建运营活动流程，最后生成一份表示运营活动逻辑的 JSON，下发到 App 内来开启新的运营活动。</p><h2>Lottie 实现原理</h2><p>实际上，<a href=\"https://github.com/airbnb/lottie-ios\">Lottie iOS</a>在 iOS 内做的事情就是将 After Effects 编辑的动画内容，通过JSON文件这个中间媒介，一一映射到 iOS 的 LayerModel、Keyframe、ShapeItem、DashElement、Marker、Mask、Transform 这些类的属性中并保存了下来，接下来再通过 CoreAnimation 进行渲染。这就和你手动写动画代码的实现是一样的，只不过这个过程的精准描述，全部由动画设计师通过 JSON文件输入进来了。</p><p>Lottie iOS 使用系统自带的 Codable协议来解析JSON文件，这样就可以享受系统升级带来性能提升的便利，比如 ShapeItem 这个类设计如下：</p><pre><code>// Shape Layer\nclass ShapeItem: Codable {\n  \n  /// shape 的名字\n  let name: String\n  \n  /// shape 的类型\n  let type: ShapeType\n\n  // 和 json 中字符映射\n  private enum CodingKeys : String, CodingKey {\n    case name = &quot;nm&quot;\n    case type = &quot;ty&quot;\n  }\n  // 初始化\n  required init(from decoder: Decoder) throws {\n    let container = try decoder.container(keyedBy: ShapeItem.CodingKeys.self)\n    self.name = try container.decodeIfPresent(String.self, forKey: .name) ?? &quot;Layer&quot;\n    self.type = try container.decode(ShapeType.self, forKey: .type)\n  }\n\n}\n</code></pre><p>通过上面代码可以看出，ShapeItem 有两个属性，映射到JSON的字符键值是 nm 和 ty，分别代表 shape 的名字和类型。下面，我们再一起看一段 Bodymovin 生成的JSON代码：</p><pre><code>{&quot;ty&quot;:&quot;st&quot;,&quot;fillEnabled&quot;:true,&quot;c&quot;:{&quot;k&quot;:[{&quot;i&quot;:{&quot;x&quot;:[0.833],&quot;y&quot;:[0.833]},&quot;o&quot;:{&quot;x&quot;:[0.167],&quot;y&quot;:[0.167]},&quot;n&quot;:[&quot;0p833_0p833_0p167_0p167&quot;],&quot;t&quot;:22,&quot;s&quot;:[0,0.65,0.6,1],&quot;e&quot;:[0.76,0.76,0.76,1]},{&quot;t&quot;:36}]},&quot;o&quot;:{&quot;k&quot;:100},&quot;w&quot;:{&quot;k&quot;:3},&quot;lc&quot;:2,&quot;lj&quot;:2,&quot;nm&quot;:&quot;Stroke 1&quot;,&quot;mn&quot;:&quot;ADBE Vector Graphic - Stroke&quot;}\n\n</code></pre><p>在这段JSON代码中，nm 键对应的值是 Stroke 1，ty 键对应的值是 st。那我们再来看看，<strong>st 是什么类型。</strong></p><p>我们知道，ShapeType 是个枚举类型，它的定义如下：</p><pre><code>enum ShapeType: String, Codable {\n  case ellipse = &quot;el&quot;\n  case fill = &quot;fl&quot;\n  case gradientFill = &quot;gf&quot;\n  case group = &quot;gr&quot;\n  case gradientStroke = &quot;gs&quot;\n  case merge = &quot;mm&quot;\n  case rectangle = &quot;rc&quot;\n  case repeater = &quot;rp&quot;\n  case round = &quot;rd&quot;\n  case shape = &quot;sh&quot;\n  case star = &quot;sr&quot;\n  case stroke = &quot;st&quot;\n  case trim = &quot;tm&quot;\n  case transform = &quot;tr&quot;\n}\n</code></pre><p>通过上面的枚举定义，可以看到 st 对应的是 stroke 类型。</p><p>Lottie 就是通过这种方式，定义了一系列的类结构，可以将JSON数据全部映射过来。所有映射用的类都放在 Lottie 的 Model 目录下。使用 CoreAnimation 渲染的相关代码都在 NodeRenderSystem 目录下，比如前面举例的 Stoke。</p><p>在渲染前会生成一个节点，实现在 StrokeNode.swift 里，然后对 StokeNode 这个节点渲染的逻辑在 StrokeRenderer.swift 里。核心代码如下：</p><pre><code>// 设置 Context\nfunc setupForStroke(_ inContext: CGContext) {\n  inContext.setLineWidth(width) // 行宽\n  inContext.setMiterLimit(miterLimit)\n  inContext.setLineCap(lineCap.cgLineCap) // 行间隔\n  inContext.setLineJoin(lineJoin.cgLineJoin)\n\t// 设置线条样式\n  if let dashPhase = dashPhase, let lengths = dashLengths {\n    inContext.setLineDash(phase: dashPhase, lengths: lengths)\n  } else {\n    inContext.setLineDash(phase: 0, lengths: [])\n  }\n}\n\n// 渲染\nfunc render(_ inContext: CGContext) {\n  guard inContext.path != nil &amp;&amp; inContext.path!.isEmpty == false else {\n    return\n  }\n  guard let color = color else { return }\n  hasUpdate = false\n  setupForStroke(inContext)\n  inContext.setAlpha(opacity) // 设置透明度\n  inContext.setStrokeColor(color) // 设置颜色\n  inContext.strokePath()\n}\n</code></pre><p>这段代码看起来是不是就很熟悉了？</p><p>如果是手写动画，这些代码就需要不断重复地写。使用第三方库去写动画的话，也无非就是多封装了一层，而属性的设置、动画时间的设置等，还是需要手动添加很多代码来完成。</p><p>但是，使用 Lottie 后，你就完全不用去管这些代码了，只需要在 After Effects 那设置属性、控制动画时间就好了。</p><h2>小结</h2><p>今天这篇文章，我分享了一个制作动画的利器 Lottie，并和你说了如何在 iOS 中使用，以及它的实现原理。听到这，你一定感到奇怪， iOS 开发中还有很多优秀的动画框架，比如 Pop，但是为什么我只跟你说了 Lottie 呢？</p><p>因为在我看来， Lottie 这样的工作流程或许就是未来的趋势，就像 iOS 现在的发展趋势一样，越来越多的业务逻辑不再需要全部使用 Objective-C 或 Swift 来实现了，而是使用JavaScript 语言或者 DSL 甚至是工具来描述业务，然后将描述业务的代码转换成一种中间代码，比如 JSON，不同平台再对相同的中间代码进行解析处理，以执行中间代码描述的业务逻辑。</p><p>这样做不仅可以减轻 App 包的大小，实现多端逻辑的统一处理，还可以让团队分工更加明确，一部分人专门开发业务代码，另一部分人负责端内稳定性、质量把控、性能提升工作的建设。</p><h2>课后作业</h2><p>相信你看到这，一定已经忍不住想小试身手了，那么就请你到 <a href=\"https://lottiefiles.com/\">LottieFiles</a>网站下载一个JSON文件，做一个 Lottie Demo 感受下吧。</p><p>感谢你的收听，欢迎你在评论区给我留言分享你的观点，也欢迎把它分享给更多的朋友一起阅读。</p><p></p>","neighbors":{"left":{"article_title":"22 | 细说 iOS 响应式框架变迁，哪些思想可以为我所用？","id":93054},"right":{"article_title":"24 | A/B 测试：验证决策效果的利器","id":93097}},"comments":[{"had_liked":false,"id":92443,"user_name":"灬路上","can_delete":false,"product_type":"c1","uid":1335108,"ip_address":"","ucode":"98C603307CA374","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaYibsvL94uobwgXsHVUnFh0AzibQAmWQicibytkmIEvmFhAPBpj8lXnjmYcJySqgDPoIeLAAicQFrIJVS9uNZbD7gmw/132","comment_is_top":false,"comment_ctime":1557275294,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48801915550","product_id":100024501,"comment_content":"好奇大神是怎样了解到这些我们一般接触不到的渠道？是遇到问题，不断追问，寻找？","like_count":12},{"had_liked":false,"id":91196,"user_name":"三件事","can_delete":false,"product_type":"c1","uid":1055819,"ip_address":"","ucode":"BCC867C8961A24","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","comment_is_top":false,"comment_ctime":1556903992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31621675064","product_id":100024501,"comment_content":"一直很好奇如果只用系统api那些复杂一些的动画都是怎么实现出来的？各种计算坐标，画线，他们是如何知道这样做的呢？","like_count":8},{"had_liked":false,"id":144711,"user_name":"花仙子","can_delete":false,"product_type":"c1","uid":1249216,"ip_address":"","ucode":"9840BF416F1F0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0f/c0/e6151cce.jpg","comment_is_top":false,"comment_ctime":1572004653,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14456906541","product_id":100024501,"comment_content":"Lottie现在只有swift版本，没有objective-c版本吗，如果用objective-c只能桥接使用？","like_count":2,"discussions":[{"author":{"id":1002729,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4c/e9/6c5191ea.jpg","nickname":"时间都去哪了","note":"","ucode":"F1A52A55218C0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160494,"discussion_content":"可以用Lottie 2.3.5这个版本","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580810221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2382667,"avatar":"","nickname":"文培定","note":"","ucode":"A13E83C4FFDEBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374950,"discussion_content":"pod &#39;lottie-ios&#39;, &#39;=2.5.2&#39;\n这个可以在OC下运行，自测OK：\n- (void)testLottieAnimation{\n    LOTAnimationView *aniView = [LOTAnimationView animationNamed:@&#34;lf20_0y27xv96&#34;];\n    aniView.loopAnimation = YES;\n    [self.view addSubview:aniView];\n    [aniView play];\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621417161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91874,"user_name":"吴小安","can_delete":false,"product_type":"c1","uid":1371398,"ip_address":"","ucode":"EDF8E04F867069","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqr5ibqxYwcSgqPA7s49MZb1vEKKXT4mPTojwiclXkJf3ug26NuzTa6A5gbicR2rAUHdEkUAn13Rr2KQ/132","comment_is_top":false,"comment_ctime":1557124568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442026456","product_id":100024501,"comment_content":"使用SVGA的库不是效果更好？还支持flash导出，跟lottie在性能内存上对比如何","like_count":4},{"had_liked":false,"id":90983,"user_name":"政","can_delete":false,"product_type":"c1","uid":1234640,"ip_address":"","ucode":"F17443038872DE","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/d0/259e7ce3.jpg","comment_is_top":false,"comment_ctime":1556766404,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10146700996","product_id":100024501,"comment_content":"Lottie确实是个好东西，但是之前使用的时候遇到过大小不匹配的问题，不知道是设计师的锅还是我的锅。需要代码这边去适配这个不太准确的大小。","like_count":2},{"had_liked":false,"id":94742,"user_name":"徐秀滨","can_delete":false,"product_type":"c1","uid":1457337,"ip_address":"","ucode":"36895D00A181FB","user_header":"https://static001.geekbang.org/account/avatar/00/16/3c/b9/42b228f8.jpg","comment_is_top":false,"comment_ctime":1557888232,"is_pvip":false,"replies":[{"id":"35016","content":"在26篇里我列了一个使用 JSON 表示 JavaScript 代码逻辑的 JSON","user_name":"作者回复","user_name_real":"戴铭","uid":"1140280","ctime":1558851331,"ip_address":"","comment_id":94742,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852855528","product_id":100024501,"comment_content":"老师，你说的“通过 JSON 来控制代码逻辑的能力”能再讲讲吗？你举的例子看不懂<br>","like_count":1,"discussions":[{"author":{"id":1140280,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/38/f9999b2b.jpg","nickname":"戴铭","note":"","ucode":"D61E685F962387","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450190,"discussion_content":"在26篇里我列了一个使用 JSON 表示 JavaScript 代码逻辑的 JSON","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558851331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92471,"user_name":"吹啊吹吹","can_delete":false,"product_type":"c1","uid":1455385,"ip_address":"","ucode":"FFB7D85C26145B","user_header":"https://static001.geekbang.org/account/avatar/00/16/35/19/4f9dc4b5.jpg","comment_is_top":false,"comment_ctime":1557279112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852246408","product_id":100024501,"comment_content":"太强了","like_count":2},{"had_liked":false,"id":91028,"user_name":"起誓四境","can_delete":false,"product_type":"c1","uid":1305558,"ip_address":"","ucode":"7BF03EBFA57518","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/d6/24da1c90.jpg","comment_is_top":false,"comment_ctime":1556807295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851774591","product_id":100024501,"comment_content":"也遇到过楼上一样的调整大小、适配的问题，问一下，其他同学有没有好的方案？","like_count":2},{"had_liked":false,"id":90954,"user_name":"偶滴关","can_delete":false,"product_type":"c1","uid":1454438,"ip_address":"","ucode":"506BCBD5706631","user_header":"https://static001.geekbang.org/account/avatar/00/16/31/66/f4fe2778.jpg","comment_is_top":false,"comment_ctime":1556758087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851725383","product_id":100024501,"comment_content":"太好了！才知道居然有这么一个框架😃，动画效果一直是我的弱项。","like_count":1},{"had_liked":false,"id":226128,"user_name":"MELO","can_delete":false,"product_type":"c1","uid":2029340,"ip_address":"","ucode":"70BE8FBA819F73","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f7/1c/d1cff020.jpg","comment_is_top":false,"comment_ctime":1591956240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591956240","product_id":100024501,"comment_content":"非常适合个人开发者","like_count":0},{"had_liked":false,"id":166618,"user_name":"燃ゆる命","can_delete":false,"product_type":"c1","uid":1483061,"ip_address":"","ucode":"1981965D4BC317","user_header":"https://static001.geekbang.org/account/avatar/00/16/a1/35/40a9f436.jpg","comment_is_top":false,"comment_ctime":1577521689,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577521689","product_id":100024501,"comment_content":"一直以为是工程师自己代码写的  现在才知道实现的方法","like_count":0},{"had_liked":false,"id":146419,"user_name":"百变面包超人🍧","can_delete":false,"product_type":"c1","uid":1458521,"ip_address":"","ucode":"9431AB4B259407","user_header":"https://static001.geekbang.org/account/avatar/00/16/41/59/9525530d.jpg","comment_is_top":false,"comment_ctime":1572518467,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572518467","product_id":100024501,"comment_content":"在tab栏上用lottie做的动画怎么去做屏幕的适配呢，可能会有默认图标尺寸对不上？","like_count":0,"discussions":[{"author":{"id":1036572,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d1/1c/81b7031b.jpg","nickname":"牛牛","note":"","ucode":"06475887346FB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":103587,"discussion_content":"这个tabBar 三方库，支持Lottie。不知道有没有你说的问题https://github.com/ChenYilong/CYLTabBarController","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577375188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96859,"user_name":"赶紧学起来","can_delete":false,"product_type":"c1","uid":1523664,"ip_address":"","ucode":"965392C1C38638","user_header":"https://static001.geekbang.org/account/avatar/00/17/3f/d0/5bd853ea.jpg","comment_is_top":false,"comment_ctime":1558524648,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1558524648","product_id":100024501,"comment_content":"oc工程如何用cocoapods使用lottie-ios swift库？","like_count":0,"discussions":[{"author":{"id":2583710,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLf83hK8eSmqia43jSftGNsZMBISQHl5BusCF2icXCs055z52sLjAkibUGViao8ibEMNNrQXHy9sTP2VoA/132","nickname":"Geek_193c78","note":"","ucode":"FDE63396C71891","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377331,"discussion_content":"自己用swift封装一层,供OC调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622604791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453760,"avatar":"","nickname":"Calabash_Boy","note":"","ucode":"19E4D819792983","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":926,"discussion_content":"lottie的2.5.3版本是OC的,你可以指定版本引入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562153697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94511,"user_name":"听北冥","can_delete":false,"product_type":"c1","uid":1092761,"ip_address":"","ucode":"96FA7B6552B7FC","user_header":"https://static001.geekbang.org/account/avatar/00/10/ac/99/27d50976.jpg","comment_is_top":false,"comment_ctime":1557829390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557829390","product_id":100024501,"comment_content":"戴老师，怎么调整动画的大小和位置？尝试用了contentMode参数，没有想要的效果。。。。像我 想把这个动画 https:&#47;&#47;lottiefiles.com&#47;295-refresh 当做某个View的分割线，因为json动画不是填满整个背景的，所以加载上去的时候就只有一小块显示，网上找不到相关的方法","like_count":0},{"had_liked":false,"id":93918,"user_name":"开元₂³³³³³³³","can_delete":false,"product_type":"c1","uid":1170155,"ip_address":"","ucode":"AB391580A9B051","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/eb/0a356fdb.jpg","comment_is_top":false,"comment_ctime":1557666807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557666807","product_id":100024501,"comment_content":"我也很好奇，像是这种框架，老师是怎么知道的呢？什么途径能了解到这些框架的存在？","like_count":0},{"had_liked":false,"id":91124,"user_name":"data","can_delete":false,"product_type":"c1","uid":1010493,"ip_address":"","ucode":"4EEC3CE11E65F8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/3d/ae41c2b3.jpg","comment_is_top":false,"comment_ctime":1556871887,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1556871887","product_id":100024501,"comment_content":"感觉每篇文章我都需要用很长的时间消耗","like_count":0,"discussions":[{"author":{"id":2382667,"avatar":"","nickname":"文培定","note":"","ucode":"A13E83C4FFDEBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374940,"discussion_content":"先把所有文章不管看不看得懂都过一遍，第二次看的时候就感觉很简单了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621416195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90953,"user_name":"Moon","can_delete":false,"product_type":"c1","uid":1455141,"ip_address":"","ucode":"D062B481A9171F","user_header":"https://static001.geekbang.org/account/avatar/00/16/34/25/1dfe5086.jpg","comment_is_top":false,"comment_ctime":1556757753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556757753","product_id":100024501,"comment_content":"666，受教了。","like_count":0}]}