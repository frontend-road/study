{"id":195328,"title":"15 | 选项框架：服务组件集成配置的最佳实践","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/NET-Core\">https://gitee.com/geektime-geekbang/NET-Core</a></p>","comments":[{"had_liked":false,"id":220484,"user_name":"Geek_ee4d86","can_delete":false,"product_type":"c3","uid":2013090,"ip_address":"","ucode":"983008639F0C44","user_header":"","comment_is_top":false,"comment_ctime":1590248577,"is_pvip":false,"replies":[{"id":82219,"content":"使用选项框架，仅对服务注入它用到的值。\n服务依赖配置框架，意味着它有可能使用配置中的任意值。\n服务应该只依赖它使用到的配置或接口","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1591006365,"ip_address":"","comment_id":220484,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师好，我想问一下，服务依赖选项框架比起依赖配置框架有什么好处呢？还有选项框架和配置框架的区别，选项框架应用在什么场景？\n","like_count":3,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496154,"discussion_content":"使用选项框架，仅对服务注入它用到的值。\n服务依赖配置框架，意味着它有可能使用配置中的任意值。\n服务应该只依赖它使用到的配置或接口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591006365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185814,"user_name":"和你一起搬砖的胡大爷","can_delete":false,"product_type":"c3","uid":1008587,"ip_address":"","ucode":"54607F4E17917A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","comment_is_top":false,"comment_ctime":1583683864,"is_pvip":false,"replies":[{"id":72474,"content":".NET 没人用的结论是从哪里的出来的\n不否认spring boot的设计非常精妙，但ASP.NET Core的设计也是非常体系化和精巧，在kubernetes流行的当下，.NET生态能够很便捷地实现微服务架构，何乐而不为呢。","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1584244135,"ip_address":"","comment_id":185814,"utype":1}],"discussion_count":7,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师我看到现在，老师你讲的，不管是框架，还是ioc概念，就是简陋版的spring boot。我在微软是身不由己，虽然我也在尝试推java，老师你为啥选型有成熟的java不用要选没什么人用的.net呢","like_count":2,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486512,"discussion_content":".NET 没人用的结论是从哪里的出来的\n不否认spring boot的设计非常精妙，但ASP.NET Core的设计也是非常体系化和精巧，在kubernetes流行的当下，.NET生态能够很便捷地实现微服务架构，何乐而不为呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584244135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215339,"discussion_content":"虽然不能说java过时的话，但是.net core的出现，已经对Java及其框架有碾压的优势，无论从开发效率，成本，还是从性能，都可以说core的优势已经明显，另外core的框架可以面向任何业务场景，java就不一定了。你在微软更应该可以体验到这一点，不是对技术有偏见，而是真的不错，你在微软中推Java，不能说下场如何，只能说是班门弄斧了，请慎重啊。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585316496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1008587,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","nickname":"和你一起搬砖的胡大爷","note":"","ucode":"54607F4E17917A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218272,"discussion_content":"面向所有业务场景就意味着社区资源被稀释成了多份，而且就算一个云场景里边，语言选择也是跟着业务特性的。我对于spring全家桶非常熟悉，也给spring cloud提了些commits，asp.net core只是初学，难免要放一起比较，至于性能，web服务器的整体性能瓶颈是数据库，plaintext几十万上百万tps后边放个rdb一下掉到5000. 相比raw performance我更关心对开发者的友好程度，是不是一般水平的开发者也能在短时间内构建出质量和性能都不错的服务。我现在还无法和spring一个深度评价asp.net core. 我玩熟悉了再来更新。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585642070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":215339,"ip_address":"","group_id":0},"score":218272,"extra":""},{"author":{"id":1008587,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","nickname":"和你一起搬砖的胡大爷","note":"","ucode":"54607F4E17917A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218274,"discussion_content":"微软其实挺开放的，做数据pipeline的不少是spark，ml的是pyhton，业务产出第一，老业务.net用的是比较多，老员工都在上边摸爬滚打多年，但是也不强求.net。微软的水平不必要神话，毕竟那么多人呐。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585642315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":215339,"ip_address":"","group_id":0},"score":218274,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008587,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","nickname":"和你一起搬砖的胡大爷","note":"","ucode":"54607F4E17917A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218814,"discussion_content":"用core就不要再提net framework，两者使用范围和性能是不能比的，比起JAVA及其框架的性能都好。企业要降本增效的，JAVA的用人成本和core比起来，你懂的。而且core现在各种业务场景都可以适用，很不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585703528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218274,"ip_address":"","group_id":0},"score":218814,"extra":""}]}]},{"had_liked":false,"id":182827,"user_name":"大风","can_delete":false,"product_type":"c3","uid":1003342,"ip_address":"","ucode":"4532DD25F852F5","user_header":"","comment_is_top":false,"comment_ctime":1582871970,"is_pvip":false,"replies":[{"id":70988,"content":"即服务类型与实现类型是相同的情况，例如一个未实现任何接口的服务","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1583044642,"ip_address":"","comment_id":182827,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"在1：52中的service.AddSingleton&lt;OrderServiceOptions&gt;()单个类的注入？","like_count":2,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485464,"discussion_content":"即服务类型与实现类型是相同的情况，例如一个未实现任何接口的服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583044642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217824,"user_name":"张志炜","can_delete":false,"product_type":"c3","uid":1221549,"ip_address":"","ucode":"31643B345C5B27","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/ad/79b26eea.jpg","comment_is_top":false,"comment_ctime":1589621117,"is_pvip":false,"replies":[{"id":80619,"content":"感谢指正，内置的配置优先级高到低是：\n命令行配置\n环境变量配置\n文件配置\n\n\n自定义配置建议在Program.cs\n使用IHostBuilder的ConfigureAppConfiguration方法\n","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1589687622,"ip_address":"","comment_id":217824,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":" &#47;&#47;&#47; &lt;summary&gt;\n        &#47;&#47;&#47; 应用程序参数，优先级最高：&quot;commandLineArgs&quot;: &quot;--OrderService:MaxOrderCount=555&quot;\n        &#47;&#47;&#47; 环境变量参数，优先级其次：&quot;OrderService__MaxOrderCount&quot;: &quot;666&quot;\n        &#47;&#47;&#47; Json文件配置，优先级最低\n        &#47;&#47;&#47; &lt;&#47;summary&gt;\n        &#47;&#47;&#47; &lt;param name=&quot;configuration&quot;&gt;&lt;&#47;param&gt;\n        public Startup(IConfiguration configuration)\n        {\n            &#47;&#47;configuration = SetMemoryCollection();\n            Configuration = configuration;\n        }\n\n        private IConfiguration SetMemoryCollection()\n        {\n            IConfigurationBuilder builder = new ConfigurationBuilder();\n            builder.AddInMemoryCollection(new Dictionary&lt;string, string&gt;()\n            {\n                {&quot;OrderService:MaxOrderCount&quot;,&quot;218&quot; },\n            });\n            return builder.Build();\n        }\n老师，我实际测试中，参数、环境变量、Json文件三个配置的优先级，和你回复另一个同学的，好像不太一样？\n我这里看到的是，命令行参数的优先级是最高的，Json文件是最低的。\n\n作者回复: 优先级高到低：\n环境变量配置\n命令行配置\n文件配置\n你这里环境变量和命令行配置是不是写反了。\n……\n此外，配置是从Startup默认传进来的，如果我要自定义配置的话，应该在哪里传入比较好？目前我想到的是直接将配置变量给替换掉。。。","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495267,"discussion_content":"感谢指正，内置的配置优先级高到低是：\n命令行配置\n环境变量配置\n文件配置\n\n\n自定义配置建议在Program.cs\n使用IHostBuilder的ConfigureAppConfiguration方法\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589687622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217506,"user_name":"priapus","can_delete":false,"product_type":"c3","uid":1909145,"ip_address":"","ucode":"E4822512079935","user_header":"https://static001.geekbang.org/account/avatar/00/1d/21/99/ed7d9dc1.jpg","comment_is_top":false,"comment_ctime":1589520420,"is_pvip":false,"replies":[{"id":80606,"content":"感谢提醒，确实如此，尽量避免使用静态的属性获取配置，这样的代码不利于扩展和测试。\n\n使用注入的方式可以让代码对单元测试优化，也易于重构和扩展。","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1589684986,"ip_address":"","comment_id":217506,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"我发现有一处漏讲了：那就是：\npublic IConfiguration Configuration { get; }\npublic Startup(IConfiguration configuration)\n{\n        Configuration = configuration;\n}\n构造函数的IConfiguration类型参数注入，小白学的话可能懵逼，还好我做过一点...\n刚开始我以为 services.Configure&lt;OrderServiceOptions&gt;(Configuration.GetSection(&quot;OrderService&quot;)); 中的Configuration是NetFramework中的 System.Configuration.ConfigurationManager，感觉不是，再看代码，原来是在Strarup构造函数注入的...","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495169,"discussion_content":"感谢提醒，确实如此，尽量避免使用静态的属性获取配置，这样的代码不利于扩展和测试。\n\n使用注入的方式可以让代码对单元测试优化，也易于重构和扩展。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589684986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186052,"user_name":"Zyt_MaoMao","can_delete":false,"product_type":"c3","uid":1901787,"ip_address":"","ucode":"D95B9608114A09","user_header":"https://static001.geekbang.org/account/avatar/00/1d/04/db/7d9322de.jpg","comment_is_top":false,"comment_ctime":1583746710,"is_pvip":false,"replies":[{"id":72457,"content":"最后的部分会全部串起来讲，包括部署","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1584241855,"ip_address":"","comment_id":186052,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师 后续有没有项目实战，用一个实际项目把知识点串起来","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486599,"discussion_content":"最后的部分会全部串起来讲，包括部署","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584241855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184824,"user_name":"雄鹿 @","can_delete":false,"product_type":"c3","uid":1367474,"ip_address":"","ucode":"9FBF8CF4392829","user_header":"https://static001.geekbang.org/account/avatar/00/14/dd/b2/ce81de8d.jpg","comment_is_top":false,"comment_ctime":1583413681,"is_pvip":false,"replies":[{"id":71580,"content":"IOptions&lt;T&gt; 这里的配置对象一般是POCO类型，不应该是IDisposable的。\n另外 IOptions&lt;T&gt; 和IOptionsMonitor&lt;T&gt; 都是单例。\nIOptions&lt;T&gt;读取到的值永远不会变。\nIOptionsMonitor&lt;T&gt;读取到的值，会是配置变化后的值，也就是会保持是新值。","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1583565238,"ip_address":"","comment_id":184824,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"我发现 IOptions&lt;T&gt;  和 IOptionsMonitor&lt;T&gt; 是一样的，好像并不推荐用 IOptions&lt;T&gt; 了，这两个都是单例的生命周期\n但是 IOptionsSnapshot&lt;T&gt; 的生命周期和 AddScoped 的生命周期一样，\n但是 IOptionsSnapshot&lt;T&gt; 的 T 实现 IDisposable 以后却没有走 Dispose() 去释放，AddScoped 走了 Dispose() \n请问大神不走 Dispose() 不释放不会出现问题吗？还是另有方法释放？\n","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486136,"discussion_content":"IOptions&amp;lt;T&amp;gt; 这里的配置对象一般是POCO类型，不应该是IDisposable的。\n另外 IOptions&amp;lt;T&amp;gt; 和IOptionsMonitor&amp;lt;T&amp;gt; 都是单例。\nIOptions&amp;lt;T&amp;gt;读取到的值永远不会变。\nIOptionsMonitor&amp;lt;T&amp;gt;读取到的值，会是配置变化后的值，也就是会保持是新值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583565238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207816,"user_name":"Sebastian_G","can_delete":false,"product_type":"c3","uid":1935005,"ip_address":"","ucode":"21127B3765AC81","user_header":"","comment_is_top":false,"comment_ctime":1587186631,"is_pvip":false,"replies":[{"id":79666,"content":"优先级高到低：\n环境变量配置\n命令行配置\n文件配置\n","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1588944486,"ip_address":"","comment_id":207816,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"正常有配置的情况下是优先读取配置的下面的吗","like_count":0,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492251,"discussion_content":"优先级高到低：\n环境变量配置\n命令行配置\n文件配置\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588944486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296361,"user_name":"小孩","can_delete":false,"product_type":"c3","uid":1112367,"ip_address":"","ucode":"A7F587FC641E63","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/2f/01b32495.jpg","comment_is_top":false,"comment_ctime":1622939700,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"配置框架是单例的吗，选项框架跟配置框架真实业务场景服务读取配置推荐用哪一个","like_count":0}]}