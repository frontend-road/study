{"id":12806,"title":"第39讲 | 谈谈常用的分布式ID的设计方案？Snowflake是否受冬令时切换影响？","content":"<p>专栏的绝大部分主题都侧重于Java语言和虚拟机，基本都是单机模式下的问题，今天我会补充一个分布式相关的问题。严格来说，分布式并不算是Java领域，而是一个单独的大主题，但确实也会在Java技术岗位面试中被涉及。在准备面试时，如果有丰富的分布式系统经验当然好；如果没有，你可以选择典型问题和基础技术进行适当准备。关于分布式，我自身的实战经验也非常有限，专栏里就谈谈从理论出发的一些思考。</p><p>今天我要问你的问题是，<span class=\"orange\">谈谈常用的分布式ID的设计方案？Snowflake是否受冬令时切换影响？</span></p><h2>典型回答</h2><p>首先，我们需要明确通常的分布式ID定义，基本的要求包括：</p><ul>\n<li>\n<p>全局唯一，区别于单点系统的唯一，全局是要求分布式系统内唯一。</p>\n</li>\n<li>\n<p>有序性，通常都需要保证生成的ID是有序递增的。例如，在数据库存储等场景中，有序ID便于确定数据位置，往往更加高效。</p>\n</li>\n</ul><p>目前业界的方案很多，典型方案包括：</p><ul>\n<li>\n<p>基于数据库自增序列的实现。这种方式优缺点都非常明显，好处是简单易用，但是在扩展性和可靠性等方面存在局限性。</p>\n</li>\n<li>\n<p>基于Twitter早期开源的<a href=\"https://github.com/twitter/snowflake\">Snowflake</a>的实现，以及相关改动方案。这是目前应用相对比较广泛的一种方式，其结构定义你可以参考下面的示意图。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/ff/ad/ffd41494a39ef737b3c1151929c3c4ad.png?wh=1010*270\" alt=\"\"></p><p>整体长度通常是64 （1 + 41 + 10+ 12 = 64）位，适合使用Java语言中的long类型来存储。</p><!-- [[[read_end]]] --><p>头部是1位的正负标识位。</p><p>紧跟着的高位部分包含41位时间戳，通常使用System.currentTimeMillis()。</p><p>后面是10位的WorkerID，标准定义是5位数据中心 + 5位机器ID，组成了机器编号，以区分不同的集群节点。</p><p>最后的12位就是单位毫秒内可生成的序列号数目的理论极限。</p><p>Snowflake的<a href=\"https://github.com/twitter/snowflake\">官方版本</a>是基于Scala语言，Java等其他语言的<a href=\"https://github.com/relops/snowflake\">参考实现</a>有很多，是一种非常简单实用的方式，具体位数的定义是可以根据分布式系统的真实场景进行修改的，并不一定要严格按照示意图中的设计。</p><ul>\n<li>\n<p>Redis、ZooKeeper、MongoDB等中间件，也都有各种唯一ID解决方案。其中一些设计也可以算作是Snowflake方案的变种。例如，MongoDB的<a href=\"http://mongodb.github.io/node-mongodb-native/2.0/tutorials/objectid/\">ObjectId</a>提供了一个12 byte（96位）的ID定义，其中32位用于记录以秒为单位的时间，机器ID则为24位，16位用作进程ID，24位随机起始的计数序列。</p>\n</li>\n<li>\n<p>国内的一些大厂开源了其自身的部分分布式ID实现，InfoQ就曾经介绍过微信的<a href=\"http://www.infoq.com/cn/articles/wechat-serial-number-generator-architecture\">seqsvr</a>，它采取了相对复杂的两层架构，并根据社交应用的数据特点进行了针对性设计，具体请参考相关<a href=\"https://github.com/nebula-im/seqsvr\">代码实现</a>。另外，<a href=\"https://github.com/baidu/uid-generator/blob/master/README.zh_cn.md\">百度</a>、美团等也都有开源或者分享了不同的分布式ID实现，都可以进行参考。</p>\n</li>\n</ul><p>关于第二个问题，<strong>Snowflake是否受冬令时切换影响？</strong></p><p>我认为没有影响，你可以从Snowflake的具体算法实现寻找答案。我们知道Snowflake算法的Java实现，大都是依赖于System.currentTimeMillis()，这个数值代表什么呢？从Javadoc可以看出，它是返回当前时间和1970年1月1号UTC时间相差的毫秒数，这个数值与夏/冬令时并没有关系，所以并不受其影响。</p><h2>考点分析</h2><p>今天的问题不仅源自面试的热门考点，并且也存在着广泛的应用场景，我前面给出的回答只是一个比较精简的典型方案介绍。我建议你针对特定的方案进行深入分析，以保证在面试官可能会深入追问时能有充分准备；如果恰好在现有系统使用分布式ID，理解其设计细节是很有必要的。</p><p>涉及分布式，很多单机模式下的简单问题突然就变得复杂了，这是分布式天然的复杂性，需要从不同角度去理解适用场景、架构和细节算法，我会从下面的角度进行适当解读：</p><ul>\n<li>\n<p>我们的业务到底需要什么样的分布式ID，除了唯一和有序，还有哪些必须要考虑的要素？</p>\n</li>\n<li>\n<p>在实际场景中，针对典型的方案，有哪些可能的局限性或者问题，可以采取什么办法解决呢？</p>\n</li>\n</ul><h2>知识扩展</h2><p>如果试图深入回答这个问题，首先需要明确业务场景的需求要点，我们到底需要一个什么样的分布式ID？</p><p>除了唯一和有序，考虑到分布式系统的功能需要，通常还会额外希望分布式ID保证：</p><ul>\n<li>\n<p>有意义，或者说包含更多信息，例如时间、业务等信息。这一点和有序性要求存在一定关联，如果ID中包含时间，本身就能保证一定程度的有序，虽然并不能绝对保证。ID中包含额外信息，在分布式数据存储等场合中，有助于进一步优化数据访问的效率。</p>\n</li>\n<li>\n<p>高可用性，这是分布式系统的必然要求。前面谈到的方案中，有的是真正意义上的分布式，有得还是传统主从的思路，这一点没有绝对的对错，取决于我们业务对扩展性、性能等方面的要求。</p>\n</li>\n<li>\n<p>紧凑性，ID的大小可能受到实际应用的制约，例如数据库存储往往对长ID不友好，太长的ID会降低MySQL等数据库索引的性能；编程语言在处理时也可能受数据类型长度限制。</p>\n</li>\n</ul><p>在具体的生产环境中，还有可能提出对QPS等方面的具体要求，尤其是在国内一线互联网公司的业务规模下，更是需要考虑峰值业务场景的数量级层次需求。</p><p>第二，<strong>主流方案的优缺点分析</strong>。</p><p>对于数据库自增方案，除了实现简单，它生成的ID还能够保证固定步长的递增，使用很方便。</p><p>但是，因为每获取一个ID就会触发数据库的写请求，是一个代价高昂的操作，构建高扩展性、高性能解决方案比较复杂，性能上限明显，更不要谈扩容等场景的难度了。与此同时，保证数据库方案的高可用性也存在挑战，数据库可能发生宕机，即使采取主从热备等各种措施，也可能出现ID重复等问题。</p><p>实际大厂商往往是构建了多层的复合架构，例如美团公开的数据库方案<a href=\"https://tech.meituan.com/MT_Leaf.html\">Leaf-Segment</a>，引入了起到缓存等作用的Leaf层，对数据库操作则是通过数据库中间件提供的批量操作，这样既能保证性能、扩展性，也能保证高可用。但是，这种方案对基础架构层面的要求很多，未必适合普通业务规模的需求。</p><p>与其相比，Snowflake方案的好处是算法简单，依赖也非常少，生成的序列可预测，性能也非常好，比如Twitter的峰值超过10万/s。</p><p>但是，它也存在一定的不足，例如：</p><ul>\n<li>时钟偏斜问题（Clock Skew）。我们知道普通的计算机系统时钟并不能保证长久的一致性，可能发生时钟回拨等问题，这就会导致时间戳不准确，进而产生重复ID。</li>\n</ul><p>针对这一点，Twitter曾经在文档中建议开启<a href=\"http://doc.ntp.org/4.1.0/ntpd.htm\">NTP</a>，毕竟Snowflake对时间存在依赖，但是也有人提议关闭NTP。我个人认为还是应该开启NTP，只是可以考虑将stepback设置为0，以禁止回调。</p><p>从设计和具体编码的角度，还有一个很有效的措施就是缓存历史时间戳，然后在序列生成之前进行检验，如果出现当前时间落后于历史时间的不合理情况，可以采取相应的动作，要么重试、等待时钟重新一致，或者就直接提示服务不可用。</p><ul>\n<li>\n<p>另外，序列号的可预测性是把双刃剑，虽然简化了一些工程问题，但很多业务场景并不适合可预测的ID。如果你用它作为安全令牌之类，则是非常危险的，很容易被黑客猜测并利用。</p>\n</li>\n<li>\n<p>ID设计阶段需要谨慎考虑暴露出的信息。例如，<a href=\"https://github.com/boundary/flake\">Erlang版本</a>的flake实现基于MAC地址计算WorkerID，在安全敏感的领域往往是不可以这样使用的。</p>\n</li>\n<li>\n<p>从理论上来说，类似Snowflake的方案由于时间数据位数的限制，存在与<a href=\"https://en.wikipedia.org/wiki/Year_2038_problem\">2038年问题</a>相似的理论极限。虽然目前的系统设计考虑数十年后的问题还太早，但是理解这些可能的极限是有必要的，也许会成为面试的过程中的考察点。</p>\n</li>\n</ul><p>如果更加深入到时钟和分布式系统时序的问题，还有与分布式ID相关但又有所区别的问题，比如在分布式系统中，不同机器的时间很可能是不一致的，如何保证事件的有序性？Lamport在1978年的论文（<a href=\"https://amturing.acm.org/p558-lamport.pdf\">Time, Clocks, and the Ording of Events in a Distributed System</a>）中就有很深入的阐述，有兴趣的同学可以去查找相应的翻译和解读。</p><p>最后，我再补充一些当前分布式领域的面试热点，例如：</p><ul>\n<li>\n<p>分布式事务，包括其产生原因、业务背景、主流的解决方案等。</p>\n</li>\n<li>\n<p>理解<a href=\"https://en.wikipedia.org/wiki/CAP_theorem\">CAP</a>、<a href=\"https://en.wikipedia.org/wiki/Eventual_consistency\">BASE</a>等理论，懂得从最终一致性等角度来思考问题，理解<a href=\"https://en.wikipedia.org/wiki/Paxos_(computer_science)\">Paxos</a>、<a href=\"https://raft.github.io/\">Raft</a>等一致性算法。</p>\n</li>\n<li>\n<p>理解典型的分布式锁实现，例如最常见的<a href=\"https://redis.io/topics/distlock\">Redis分布式锁</a>。</p>\n</li>\n<li>\n<p>负载均衡等分布式领域的典型算法，至少要了解主要方案的原理。</p>\n</li>\n</ul><p>这些方面目前都已经有相对比较深入的分析，尤其是来自于一线大厂的实践经验。另外，在<a href=\"http://time.geekbang.org/column/48\">左耳听风专栏的“程序员练级攻略”</a>里，提供了非常全面的分布式学习资料，感兴趣的同学可以参考。</p><p>今天我简要梳理了当前典型的分布式ID生成方案，并探讨了ID设计的一些考量，尤其是应用相对广泛的Snowflake的不足之处，希望对你有所帮助。</p><h2>一课一练</h2><p>关于今天我们讨论的题目你做到心中有数了吗？今天的思考题是，从理论上来看，Snowflake这种基于时间的算法，从形式上天然地限制了ID的并发生成数量，如果在极端情况下，短时间需要更多ID，有什么办法解决呢？</p><p>请你在留言区写写你对这个问题的思考，我会选出经过认真思考的留言，送给你一份学习奖励礼券，欢迎你与我一起讨论。</p><p>你的朋友是不是也在准备面试呢？你可以“请朋友读”，把今天的题目分享给好友，或许你能帮到他。</p><p></p>","comments":[{"had_liked":false,"id":19454,"user_name":"董朱明","can_delete":false,"product_type":"c1","uid":1123130,"ip_address":"","ucode":"A393DD33DC8156","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/3a/5df9735f.jpg","comment_is_top":false,"comment_ctime":1533838419,"is_pvip":false,"replies":[{"id":"6859","content":"高手","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533995691,"ip_address":"","comment_id":19454,"utype":1}],"discussion_count":3,"race_medal":0,"score":"246346974291","product_id":100006701,"comment_content":"69年的极限问题不难解决，timestamp减个常量就可以了，对于已生成的历史id，可以导表刷id，当然，这里涉及到个数据库设计原则，系统之间传递数据不应使用物理主键，这样刷id 就容易了","like_count":58,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421849,"discussion_content":"高手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533995691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030842,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ba/ba/83de3488.jpg","nickname":"Carter","note":"","ucode":"1FD476D8F2BE27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382299,"discussion_content":"请问“系统之间传递数据不应使用物理主键”是什么意思？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625503998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344289,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEYbNElGIxY6Le1rfiakWJecz8JIOp06Y9JQFR2YBn3T3gx3icI5CKxZNgxgqiaKbfVOicXquO3QBw9w/132","nickname":"july","note":"","ucode":"E081987929063A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190487,"discussion_content":"修改WorkerID会不会更容易？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582949241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23925,"user_name":"卡特","can_delete":false,"product_type":"c1","uid":1060491,"ip_address":"","ucode":"FF63677089E701","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/8b/32a8c5a0.jpg","comment_is_top":false,"comment_ctime":1536720686,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"108910903086","product_id":100006701,"comment_content":"因为snowflake的可预测性，可以提前生成好放到队列里，获取的时候直接获取。相当于做了一层缓存；<br>理论上可以解决短时间大量获取id的需求；","like_count":26,"discussions":[{"author":{"id":1199091,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4b/f3/8b9df836.jpg","nickname":"jimmy","note":"","ucode":"9B93DCAB317572","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261699,"discussion_content":"ringbuffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588994021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19082,"user_name":"袁伟","can_delete":false,"product_type":"c1","uid":1000862,"ip_address":"","ucode":"30BCA7B2705247","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/9e/57e18908.jpg","comment_is_top":false,"comment_ctime":1533660707,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"44483333667","product_id":100006701,"comment_content":"一直有个疑问就是Snowflake 文中说的极限问题，目前确定它只能用69年，大家都用数据库的数字类型来存储，那么到了69年之后，后来人怎么处理，也许那个时候有更大数字来表示。但我还是想不出更合理的方式，也许我想多了，这个问题交给69年后的人来考虑，但我也想知道老师您是如何思考这个问题的","like_count":11,"discussions":[{"author":{"id":1432682,"avatar":"https://static001.geekbang.org/account/avatar/00/15/dc/6a/4a291730.jpg","nickname":"莫言18595814913","note":"","ucode":"CD7EB58A30DF43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374,"discussion_content":"需要69年？10年系统就重做了N了","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1561513482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1961940,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ef/d4/6c212b5f.jpg","nickname":"Eason","note":"","ucode":"1A822C577675FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290510,"discussion_content":"一开始就考虑到这个问题，用字符串存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594518838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18916,"user_name":"大西瓜","can_delete":false,"product_type":"c1","uid":1190794,"ip_address":"","ucode":"7425805CF610A6","user_header":"https://static001.geekbang.org/account/avatar/00/12/2b/8a/b99b5a2d.jpg","comment_is_top":false,"comment_ctime":1533606476,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"31598377548","product_id":100006701,"comment_content":"缩减workID长度，增加序列号长度","like_count":8},{"had_liked":false,"id":164541,"user_name":"大继","can_delete":false,"product_type":"c1","uid":1274500,"ip_address":"","ucode":"9A27E97F134C73","user_header":"https://static001.geekbang.org/account/avatar/00/13/72/84/3f116ac8.jpg","comment_is_top":false,"comment_ctime":1577024324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27346828100","product_id":100006701,"comment_content":"非常感谢大佬的教程，面试是我进步最快的状态， 这种状态维持一年，估计我可以上天，终于看完了。 。 总结，大佬给出的教程非常有营养，也看到大家都要看几遍，我也是一边看一边百度。 受益匪浅。","like_count":7},{"had_liked":false,"id":235088,"user_name":"业余草","can_delete":false,"product_type":"c1","uid":1126538,"ip_address":"","ucode":"99BDC1E629049D","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","comment_is_top":false,"comment_ctime":1594888848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18774758032","product_id":100006701,"comment_content":"19 年写的《5 大分布式 ID 生成器优缺点简单对比》值得一看，https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;OnH7Xrow5-TlkAh5gxz_XQ","like_count":5},{"had_liked":false,"id":24412,"user_name":"RoverYe","can_delete":false,"product_type":"c1","uid":1113144,"ip_address":"","ucode":"ACA5AD466C2536","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/38/59dda970.jpg","comment_is_top":false,"comment_ctime":1536987463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18716856647","product_id":100006701,"comment_content":"我们这边利用zk的唯一id特性","like_count":5},{"had_liked":false,"id":63410,"user_name":"影子","can_delete":false,"product_type":"c1","uid":1094682,"ip_address":"","ucode":"84B4EC343C728D","user_header":"https://static001.geekbang.org/account/avatar/00/10/b4/1a/baf765a4.jpg","comment_is_top":false,"comment_ctime":1548344439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10138279031","product_id":100006701,"comment_content":"生成32位的自增长Id(int)老师有什么思路嘛","like_count":3},{"had_liked":false,"id":45249,"user_name":"XiaoYeGe","can_delete":false,"product_type":"c1","uid":1122953,"ip_address":"","ucode":"F07027153B6971","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/89/5757eb43.jpg","comment_is_top":false,"comment_ctime":1543567820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133502412","product_id":100006701,"comment_content":"前后历时半年多 终于看完了, 下面就是再回头巩固一遍!","like_count":3},{"had_liked":false,"id":23215,"user_name":"Yang.🍭","can_delete":false,"product_type":"c1","uid":1180028,"ip_address":"","ucode":"3A09F586CBC571","user_header":"https://static001.geekbang.org/account/avatar/00/12/01/7c/836cf29e.jpg","comment_is_top":false,"comment_ctime":1536216876,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10126151468","product_id":100006701,"comment_content":"使用System.currentTimeMillis的话不是存在时钟回拨问题么，能不能从网络获取时间，去生成这个😂😂","like_count":2,"discussions":[{"author":{"id":1257046,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/56/aa3690ef.jpg","nickname":"云云","note":"","ucode":"1A08803F6EBD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113721,"discussion_content":"网络走IO好慢的，不划算，而且 System.currentTimeMillis 人家都嫌太慢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577929335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1180028,"avatar":"https://static001.geekbang.org/account/avatar/00/12/01/7c/836cf29e.jpg","nickname":"Yang.🍭","note":"","ucode":"3A09F586CBC571","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257046,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/56/aa3690ef.jpg","nickname":"云云","note":"","ucode":"1A08803F6EBD33","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350325,"discussion_content":"也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613811745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":113721,"ip_address":""},"score":350325,"extra":""}]},{"author":{"id":3009425,"avatar":"","nickname":"Geek_25fc4c","note":"","ucode":"33C53D0864F3BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576809,"discussion_content":"你用网络IO就更..万一那天网络不好延迟了几毫秒，然后出现重复的可能性反而大多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655793780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19088,"user_name":"安小依","can_delete":false,"product_type":"c1","uid":1101660,"ip_address":"","ucode":"A5C414C7B994FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/5c/d4e19eb6.jpg","comment_is_top":false,"comment_ctime":1533663529,"is_pvip":false,"replies":[{"id":"7664","content":"术业有专攻，有特定专家出专栏","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1535216161,"ip_address":"","comment_id":19088,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10123598121","product_id":100006701,"comment_content":"老师自己有没有计划，针对分布式单独出一个专栏，一直以来自己都想研究分布式，但是很多问题依旧搞不懂: zookeeper 选举过程、hdfs 存储出现故障namenode是怎么处理、MapReduce 作业调度问题需要做哪些权衡，不同异常下应该怎么解决，是忽略错误，还是直接退出…各个方案背后是什么样的利弊在协调着这些…","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421709,"discussion_content":"术业有专攻，有特定专家出专栏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535216161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18965,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1533622134,"is_pvip":false,"replies":[{"id":"6581","content":"我提到了，各部分不是固定的，看业务需求，例如，集群小，位数可以设计短点儿，seq就可以更多位，时间也未必非要41位","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533628286,"ip_address":"","comment_id":18965,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10123556726","product_id":100006701,"comment_content":"为啥最后一段是12的长度而不是别的数","like_count":3,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421685,"discussion_content":"我提到了，各部分不是固定的，看业务需求，例如，集群小，位数可以设计短点儿，seq就可以更多位，时间也未必非要41位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533628286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109543,"user_name":"三碗猪脚","can_delete":false,"product_type":"c1","uid":1371918,"ip_address":"","ucode":"33E7151FCAA8D0","user_header":"https://static001.geekbang.org/account/avatar/00/14/ef/0e/7abc67bf.jpg","comment_is_top":false,"comment_ctime":1562054246,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5857021542","product_id":100006701,"comment_content":"关于第二个问题，Snowflake 是否受冬令时切换影响？<br>冬令时不是回拨一个小时吗？那例如我10月3号3时被回拨10月3号2时，中间是走了两次的，到当前时间也会重复，不是吗？","like_count":2,"discussions":[{"author":{"id":1197455,"avatar":"https://static001.geekbang.org/account/avatar/00/12/45/8f/a56b2214.jpg","nickname":"innocent","note":"","ucode":"368659A0DDE7E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335511,"discussion_content":"文章中都说了用的一般是时间戳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608211686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299115,"user_name":"_关旭_","can_delete":false,"product_type":"c1","uid":1009052,"ip_address":"","ucode":"ADEB7BBC54035B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/9c/5c94692c.jpg","comment_is_top":false,"comment_ctime":1624462794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624462794","product_id":100006701,"comment_content":"一搬资源池里面都有时钟机器的，所有资源均向其同步即可，除非时钟机器发生时钟回拨，短时间内应该没事的，毕竟其他的就是运行一段时间后才会发生时钟不对。","like_count":0},{"had_liked":false,"id":170323,"user_name":"马志远","can_delete":false,"product_type":"c1","uid":1480892,"ip_address":"","ucode":"AAD8875343E5FC","user_header":"https://static001.geekbang.org/account/avatar/00/16/98/bc/6d5affd3.jpg","comment_is_top":false,"comment_ctime":1578568752,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578568752","product_id":100006701,"comment_content":"第一遍结束","like_count":0,"discussions":[{"author":{"id":2052476,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Qq6oLfOTgKzjiculoUDicdv7WoY1iabPfOTumibWeInVP2Mnod9XVPrNSClvIiaLbvtDlIjRnWUNaXcYwREGzlcaDog/132","nickname":"Geek_在下蟑螂王","note":"","ucode":"E1F5BBB5BC5962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336643,"discussion_content":"留印，count=2","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608642858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55234,"user_name":"吴科🍀","can_delete":false,"product_type":"c1","uid":1112547,"ip_address":"","ucode":"8F2C317887A323","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/e3/2529c7dd.jpg","comment_is_top":false,"comment_ctime":1546071403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546071403","product_id":100006701,"comment_content":"我们通常用UUID或者数据自增主键，这样的方式效率都不高。snowflake分布式全局生成的ID，效率高，设计优雅。","like_count":0},{"had_liked":false,"id":55017,"user_name":"airong","can_delete":false,"product_type":"c1","uid":1317199,"ip_address":"","ucode":"0082FFF6C679A7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6KJcYf8PnO0knxk6EDCETYQHc19KMiaBW2U6EVdPKYNOjObiaibm46KjbJtL5WS5cg7HVY7nEIqiakCgWEg137Okbw/132","comment_is_top":false,"comment_ctime":1546000864,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1546000864","product_id":100006701,"comment_content":"请问大牛10集群编号怎么获取的啊","like_count":1,"discussions":[{"author":{"id":1124461,"avatar":"https://static001.geekbang.org/account/avatar/00/11/28/6d/d776d35a.jpg","nickname":"大漠","note":"","ucode":"B7973B9FD7CB61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374258,"discussion_content":"启动的时候指定的，可以写到配置文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621084486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18977,"user_name":"Aaron_涛","can_delete":false,"product_type":"c1","uid":1180617,"ip_address":"","ucode":"067F3CBB1F036C","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/c9/9a9d82ab.jpg","comment_is_top":false,"comment_ctime":1533628927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533628927","product_id":100006701,"comment_content":"能讲下下时钟偏斜和时钟回拨吗，不是理解","like_count":0}]}