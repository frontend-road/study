{"id":185498,"title":"08 | 避雷策略：如何防止你的敏捷变为“小瀑布”？","content":"<p>你好，我是宋宁。</p><p>也许很多订阅咱们这门课的同学已经走在了敏捷实践的路上。然而却有很多人在做的过程中，不小心走入了敏捷的反模式。那么该如何检视你的方法是否正确呢？今天，我想用敏捷的一种反模式“小瀑布”来给你讲一下。</p><h2>真敏捷，还是“小瀑布”？</h2><p>在我做咨询的过程中，常常会看到一些团队的敏捷实践过程出现下面这些情况：</p><ul>\n<li>把一个大项目分成若干个模块，仿照“敏捷”的做法，每四个迭代做一个模块（见下图）：第一个迭代做需求，第二个做设计，第三个做开发，第四个做测试。这样四个迭代交付一个模块的内容，然后开始下一个模块的循环。做着做着，他们发现虽然这种方式比以前的瀑布模式要好一点，但整体的节奏仍然缓慢，“敏捷”好像没那么大的效益。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/4f/1a/4f127bb86ab2179e91efb4343405171a.jpg?wh=1142*279\" alt=\"\"></p><ul>\n<li>有的团队觉得上面那种方式还是太慢，于是就加快节奏。每个迭代周期也是2周，但不同的是，在一个迭代里完成一个大的功能（见下图）。第一周完成需求和设计，第二周完成开发和测试。迭代的次数增加了，但开发和测试却总感觉时间不够，每次迭代都特别赶，体验非常不好。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/cd/25/cd35c7cdc35b059488b7a7a16c398a25.jpg?wh=1142*335\" alt=\"\"></p><p>在上面这两种情景中，团队的感觉不好，但是却不知道自己做得到底对不对，就找我来诊断。那么，上面的做法究竟有没有问题？他们的敏捷活动做得到底对不对呢？</p><!-- [[[read_end]]] --><p>先来看一下他们目前的研发过程，整体来看，他们是按照“需求-设计-开发-测试”这个流程来做的。你是不是觉得似曾相识？没错，这其实就是瀑布模式。</p><p>但是他们做了一些改造，也就是引入了“迭代”这个概念。先把大项目或需求做一个模块拆分，然后再一个一个模块做下去，和瀑布模式相比，这种方式有了一点进步。然而，究其本质，它仍然还是瀑布，我们一般称它为“小瀑布”。</p><p>“小瀑布”同样具有瀑布模式的一些缺陷。比如说，很要命的一个问题就是浪费。我们看一下上面那两种做法就会发现，他们在研发中的所有步骤都是顺序进行的，这就意味着做第一步时，后面所有的步骤都处于等待状态。这样，BA（需求分析师）做需求的时候，开发测试人员在等待；开发人员写代码的时候，测试人员也在等待。这就造成了时间上的浪费。</p><p>所以，从这个角度来说，<strong>小瀑布依旧是瀑布，它并没有改变瀑布模式的宿命，它离真正的敏捷还有相当长的一段距离。</strong></p><p>那么，真正的敏捷是什么样子呢？</p><p>以需求为例，一般来说，团队会尽可能有效拆分需求，这样进入到迭代内的需求就可以是多个独立的小需求。小到什么程度呢？小到每个需求都可以在很短的时间内，比如2～3天内，完成开发和测试，最长也不要超过一个迭代周期。</p><p>这样，在开发人员写代码的时候，测试人员就同步在写测试案例，或者在考虑使用自动化测试方案。由于需求拆分得足够小，所以，很可能第一个小需求在迭代后的第二天就可以交付测试了，在测试人员测试的同时，开发人员就继续开发下一个小需求，由此就形成了一个良好的循环。在这种情况下，大家都在热火朝天地工作，节省了很多等待的时间。</p><h2>为什么你把敏捷玩成了“小瀑布”？</h2><p>那为什么有的团队会把敏捷玩成“小瀑布”呢？我在接触了使用“小瀑布”的团队之后，才慢慢明白这背后的原因。</p><p>第一个原因是<strong>有些团队其实并没有真正地了解敏捷</strong>，团队遇到痛点，他们只了解了皮毛，就拍脑袋炮制了一个所谓的“敏捷”流程。</p><p>比如说有一个M团队，他们的工作量很大，以前用瀑布太慢，完不成工作任务。他们领导说：“你们怎么做我不管，这个产品必须在3个月之内交付！”然而这些需求却远远超出团队的交付能力，所以当团队听到这个消息时一脸懵。他们有一个机灵鬼说：“我听说现在有人用了敏捷后，交付得很不错，要不咱们也来试试？”此话一出，M团队像是抓住了一根救命稻草，他们在很短时间内快速地上网查看别人怎么做，再按照自己的理解，把团队负责的产品按功能大卸八块，又给每个功能都定了小时间点，每个功能都用一个小瀑布做下去。</p><p>他们在这里犯了什么错呢？他们误以为敏捷就是简单地换一个工作流程，只要套用一个不知所谓的敏捷流程就能成功交付工作，而完全忽视了敏捷自身的规律。</p><p>第二个原因是<strong>需求太大</strong>。团队明白使用敏捷后，需求要做拆分，也把需求做了拆分，然而由于拆分方法不当等原因，拆完后的需求还是很大，一个2周的迭代根本就做不完，或者只能灰头土脸地勉强做完。</p><p>比如有个N团队，他们每次拆分完需求后，需求的大小都要2周的迭代才能做完。这样他们每个迭代最多只能做一个需求，在研发过程中，也就只能按照做完需求分析再做设计，再做开发和测试，这样一路下来，虽然说迭代频繁了，每一步也还是需要等待对时间。</p><p>这里最大的问题，你看出来是什么了吗？没错，就是需求太大，这导致团队在做敏捷时不能充分发挥它的优势，将它做成了不折不扣的“小瀑布”。</p><h2>如何避免把你的敏捷做成“小瀑布”？</h2><p>既然我们分析了问题和原因，那到底怎么做才能避免把敏捷做成“小瀑布”呢？我想针对上面M团队和N团队的情况，再给你一些建议。</p><p>先来看M团队，针对他们不了解敏捷就开始着急模仿的做法，首先我们可以给他们讲基础知识，在他们充分了解的基础上，再培养他们的技能。</p><p>除此以外，不知道你有没有注意到一个细节，那就是他们预计的工作量要远高于他们的产能，这其实也是一个很严重的问题。其实如果工作范围没有发生变化，即便是用了敏捷的方法，或许也很难做到在3个月之内做完整个项目。</p><p>这是不是意味着这个问题就无解了呢？其实不是。</p><p>你应该还记得在敏捷的原则里，有一条是“我们最优先要做的是尽早地、持续地交付有价值的软件来使客户满意”，也就是说我们要先做有价值的东西。所以反映到这个项目中，我们其实可以<strong>先把客户的需求拿来看一下，挑选好需求，并先从有价值的、优先级最高的开始做。</strong></p><p>如果一定要卡3个月这个时间点来交付，那么就按照3个月之内我们能做多少，来选定价值最高的需求先做，因为在整个过程中我们是不断地把产品交付给客户的，所以在这个持续的过程中，我们有很大可能在3个月内交付一个令他们满意的产品。</p><p>你有没有看到，在这里我其实是把“3个月做完项目”这个目标转换成“3个月做一个让客户满意的产品”，而其实后面的那个目标才是客户最需要的。</p><p>所以在敏捷实践中，<strong>我们工作的结束点不应该是把之前所有计划的工作做完，而是把客户需要的工作做完。</strong>这些工作不一定是一开始就被纳入计划的，但却一定要是客户最需要的。明白了这一点，敏捷才能被活学活用，而不是被误用成小瀑布。M团队日后的工作就是按照这个原则来做的，他们的研发工作由此慢慢走上了正轨。</p><p>接着再来看看N团队，他们的问题是需求太大。这里涉及两个层面，第一个层面是拆分方法不当，导致大需求并没有被正确拆分成小需求；第二个层面是即使拆分方法得当，拆分后的需求仍然很大。</p><p>所以第一步，我先给他们讲解了拆分需求的方法。方法有很多，例如按照业务流程、按照业务规则的变化或按照数据的处理方式进行拆分等等。</p><p><strong>你要注意，不管使用哪种拆分方法，做需求拆分的目的，都是把大需求拆成一个个能够独立开发测试的小需求。</strong>只有这样，我们才能在迭代中同时做几个小需求，而不需要等待，并且在测试完成后，这些小需求也能独立上线。</p><p>N团队之前是按照架构的层次来拆分需求的，例如把一个大需求拆成了UI层的用户故事、逻辑层的用户故事、数据访问层的故事等等。然而由于这个端到端的大需求一个迭代做不完，所以他们放到了几个迭代中。但是他们发现，每一个故事做完都不能单独测试，只能等着这一连串的故事全部做完以后才能一起测试。另外每一个故事都没有独立的价值，也不能独立上线，这样就需要大量额外的等待时间。</p><p>在认识到这个问题之后，N团队重新拆分了他们现有的需求，保证了每个小需求的独立性，之后在两周的迭代内他们已经能做好几个小需求了。</p><p>但是N团队发现他们现有的需求拆分后还是很大，无法在2周内做完，这种情况怎么办呢？这时就需要深度挖掘一下背后的原因，采用相应的应对策略了。经过细致分析，大家发现自己的系统架构比较老旧，代码的耦合度较高，依赖性大，要完成一个需求甚至要改很多个系统，这对于产品交付来说明显是一个很大的障碍。</p><p>于是团队计划在现有的开发测试工作之外，对产品进行架构演化，拆分微服务。为了能顺利开展这些工作，团队用70%的时间开发新需求，用30%的时间进行架构演进。经过大概半年的时间，N团队完成了既有架构的改造，拆分了微服务，现在他们的敏捷已经运转得越来越好。</p><h2>总结</h2><p>好了，现在我来总结一下我们今天的课程内容。</p><p>在推进敏捷的过程中，有时候一不小心就会走入它的反模式。综合上面M团队和N团队的情况，我们可以看到，如果团队只是套用敏捷流程，或是没有做好需求拆分，敏捷很容易变成“小瀑布”。</p><p>此外，还有一些其他情况也可能让你陷入敏捷的反模式，比如虽然导入了敏捷模式，却没有按照它要求的角色职责进行人员匹配。举例来说，如果直接让一个技术经理同时担任产品负责人和Scrum Master，很可能就做不好，因为这两个角色要求的技能是完全不同的，技术经理是没有足够的能力和精力来同时担当这些责任的。</p><p>但其实陷入了反模式并不可怕，重要的是你一定要保持警惕的心。在发现问题后，需要沉下心来分析原因，只有将具体原因找出了，在正确理解敏捷原则的基础上灵活使用，制定相应的对策，才能真正发挥敏捷的价值，才能继续正确地走下去。</p><h2>思考题</h2><p>现在，我想请你来思考一下，你在推进敏捷的过程中有没有犯过什么错误呢？我建议你结合今天的内容，先自己想一下怎么解决，再来留言区跟我一起讨论一下吧。</p><p>我是宋宁，欢迎你在留言区与我分享你的疑问和思考。如果你觉得这篇文章对你有启发，也欢迎你把它分享给你的朋友，我们一起来探讨和学习。</p>","neighbors":{"left":{"article_title":"07 | 填坑指南：填好这4个坑，快速做对敏捷","id":185478},"right":{"article_title":"09 | 内部教练：守护敏捷实践，求人不如求己","id":185502}},"comments":[{"had_liked":false,"id":169469,"user_name":"云梦泽","can_delete":false,"product_type":"c1","uid":1006644,"ip_address":"","ucode":"53BEE57E8D8DBE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/34/1298df2d.jpg","comment_is_top":false,"comment_ctime":1578361138,"is_pvip":true,"replies":[{"id":"65824","content":"赞一个！优秀用户故事的标准业界有通用的认识，公认的是符合INVEST原则。在《用户故事与敏捷方法》一书中有介绍，可以去看一下。","user_name":"作者回复","comment_id":169469,"uid":"1263077","ip_address":"","utype":1,"ctime":1578398948,"user_name_real":"susie"}],"discussion_count":2,"race_medal":0,"score":"96067641650","product_id":100044301,"comment_content":"如何拆分用户故事是敏捷开发一个很关键的部分，而评估是否是一个好的用户故事标准就是能否独立进行上线，如果做不到独立上线，那这个还不叫用户故事，测试也没办法并行进行，也不是真正的敏捷开发。另外敏捷开发跟现在到微服务架构是相辅相成，敏捷开发非常适合微服务这种开发模式，微服务能够提高敏捷开发的效率。总之，敏捷开发的精髓应该是团队至上，小步快跑，快速迭代，拥抱变化。不知道对于敏捷开发这样的理解有没有问题，请老师点评一下。","like_count":23,"discussions":[{"author":{"id":1263077,"avatar":"https://static001.geekbang.org/account/avatar/00/13/45/e5/ed4444ee.jpg","nickname":"susie","note":"","ucode":"A384ACCBCFABF2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480569,"discussion_content":"赞一个！优秀用户故事的标准业界有通用的认识，公认的是符合INVEST原则。在《用户故事与敏捷方法》一书中有介绍，可以去看一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578398948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006789,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","nickname":"梁中华","note":"","ucode":"52FE40242CBAD0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216874,"discussion_content":"现在产品做需求都是直接上去交互稿，配上一个文字和图表都当需求了，还要写用户故事吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585490573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171185,"user_name":"李永智","can_delete":false,"product_type":"c1","uid":1197697,"ip_address":"","ucode":"01E7933CDF60D7","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/81/7ca2def2.jpg","comment_is_top":false,"comment_ctime":1578878631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44528551591","product_id":100044301,"comment_content":"做个一个项目，将小瀑布方式当做敏捷来看待，造成这个状况原因有二：第一，对敏捷的理解不到位，当时认为需求、设计、开发、测试还是要顺序进行，虽然这些工作是顺序的，但是开展工作时要做到能同步开展工作，这个对团队人员的要求还是蛮高的。 第二，工作能力与工作量不匹配。当时工作量很大，但工期比较短，以当时的人员配比是无法完成的。虽然当时也安排了优先级，不过是按照功能进行拆解的，没有考虑有些业务场景是需要几个功能同时具备才能走通，而实际是各自小组按照自己负责功能模块划分优先级，没有从用户角度考虑某些使用场景需要多个功能关联推进。","like_count":10},{"had_liked":false,"id":218916,"user_name":"Joey","can_delete":false,"product_type":"c1","uid":1013698,"ip_address":"","ucode":"D0A23AE264AC09","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/c2/1740f435.jpg","comment_is_top":false,"comment_ctime":1589897927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31654668999","product_id":100044301,"comment_content":"请教老师，我们是金融行业的开发部门，约1000人，组织架构并非是小功能性团队，即需求、开发、测试都是独立的团队；此外，我们部门只负责开发，交付版本，公司还有专门的运维部门承担运维角色，负责版本上线，生产监控等职责。<br><br>请问这种情况下，是否适合退敏捷研发流程？（组织架构变动的可能性基本为零），如果不行，可以借鉴敏捷思想的哪些实践，来提升部门的整体研发效能，谢谢老师解答。","like_count":8},{"had_liked":false,"id":174386,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1580187544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23055024024","product_id":100044301,"comment_content":"需求的细化和排期不单单是个流程化的东西，还得考虑一些团队情绪，因为即使开发提交测试以后继续下一个小需求开发，这个本身需要有个度，开发不是机械劳动，代码写之前需要充分思考，但在此期间如果总是因为配合测试而打断，也会很心累，所以这中间需要一个缓冲地带，就好比人与人之间的安全距离。可以看出敏捷的迭代频率快，对开发本身技能要求高，所以完全推进的话，对大部分企业还是有不小困难！","like_count":5},{"had_liked":false,"id":172174,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1579101726,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"23053938206","product_id":100044301,"comment_content":"说透敏捷<br>08 | 避雷策略：如何防止你的敏捷变为“小瀑布”？<br><br>上一篇是避坑指南，这一次是防雷策略，看来推进敏捷还真是不容易。<br><br>其实我们单位现在的一个外包团队就是在采用小瀑布的方式在开发。首先，是因为这个项目本身就是一个比较长期的工程，针对的是在线系统的升级改造。以前采用的是瀑布开发方式，后来因为项目本身的发展，同时也因为瀑布的确出现了很多问题，所以改成了现在的迭代瀑布，其实已经算是一种进步了。<br><br>外包单位本身也是国有研究院所，这种迭代小瀑布的方式在他们那边也不被认可，因为软件系统要有“出所”的测试和评审，所以现在的迭代也只能低调进行。这个可能与合同签订的时候的约束条件有关，也可能与原有的外包团队的制度有关。<br><br>感觉虽然不是地道的敏捷，但是其实也还是有一定的益处，并且并没有过多造成工时的积压和浪费，可能那些需求分析人员以及测试人员都身兼数个项目。缺点当然也很明显，因为身兼多个项目，所以带来了投入时间的不充分。<br><br>之所以现在是小瀑布模式，首先是因为外包团队并没有准备敏捷转型，另外就是需求也没有被分解成可以在很短的迭代周期内完成，最后，我认为比较重要的原因，就是现有系统的架构，并不支持持续集成和连续发布。<br><br>把大需求拆分成能够独立开发测试的小需求，这个是否对于架构有很高的要求？我觉的似乎只有目前流行的“微服务”能够做到，但是微服务那边，本身也是一堆的坑要填。<br><br>文章中提到的那个 N 团队，在开发测试之余，还对产品进行了架构演化，拆分微服务，这个还真是厉害。","like_count":5},{"had_liked":false,"id":170807,"user_name":"无需昵称","can_delete":false,"product_type":"c1","uid":1686247,"ip_address":"","ucode":"CD0C2D8E611C32","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuhXBviaVUj8PEIoAjdmnMMUkzI1xVUvxm2icu3DWkszjmLVkXjKGF2RpAER8ztklyVhTCTvnxxfgQ/132","comment_is_top":false,"comment_ctime":1578729190,"is_pvip":false,"replies":[{"id":"66968","content":"这里要管理好客户期望。始终要对客户灌输价值理念，让他自己挑选价值最大的需求，以及向其可视化你们的工作，让他理解到在有限的时间内，有限的资源不能完成所有的事情，但我们能保证的是在给定的资源和时间内给他最好的。<br>另外就是要让客户真正理解敏捷的概念，否则就变成对团队的压榨了。客户首先要能区分清楚他们的需求中哪些是价值大的要优先做的，其次是在每个迭代中要给开发团队反馈，让团队知道哪些已经做的可以了，哪些产品还需要优化。<br>再者一定要管理好需求列表。","user_name":"作者回复","comment_id":170807,"uid":"1263077","ip_address":"","utype":1,"ctime":1579249412,"user_name_real":"susie"}],"discussion_count":2,"race_medal":0,"score":"18758598374","product_id":100044301,"comment_content":"老师好，针对老师的这句话“我们工作的结束点不应该是把之前所有计划的工作做完，而是把客户需要的工作做完。”，在实施固定总价合同的客户项目时，如何比较好的控制项目的范围和成本呢？有时候客户和我们在项目初期都没有办法完全界定清楚，什么是客户需要的工作？","like_count":4,"discussions":[{"author":{"id":1263077,"avatar":"https://static001.geekbang.org/account/avatar/00/13/45/e5/ed4444ee.jpg","nickname":"susie","note":"","ucode":"A384ACCBCFABF2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481119,"discussion_content":"这里要管理好客户期望。始终要对客户灌输价值理念，让他自己挑选价值最大的需求，以及向其可视化你们的工作，让他理解到在有限的时间内，有限的资源不能完成所有的事情，但我们能保证的是在给定的资源和时间内给他最好的。\n另外就是要让客户真正理解敏捷的概念，否则就变成对团队的压榨了。客户首先要能区分清楚他们的需求中哪些是价值大的要优先做的，其次是在每个迭代中要给开发团队反馈，让团队知道哪些已经做的可以了，哪些产品还需要优化。\n再者一定要管理好需求列表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579249412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557340,"discussion_content":"赞同，价值驱动 Over 任务驱动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647769817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176368,"user_name":"Hugo","can_delete":false,"product_type":"c1","uid":1019199,"ip_address":"","ucode":"7ED6A236F9400F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/3f/3fadd00d.jpg","comment_is_top":false,"comment_ctime":1581044953,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14465946841","product_id":100044301,"comment_content":"我在游戏行业，目前实行的就是2周迭代的方式，两周内安排是：<br>需求理解-&gt;设计-&gt;开发-&gt;测试-&gt;上线 <br>要点：<br>1. 迭代开始时，需求是已经准备好的，准确来说是个需求池，最好能列好优先级<br>2.迭代开始时，开发测试从池子里挑选两周迭代能搞定的需求，同时考虑时间和需求优先级<br>3.切忌不要犯承若过多的错误<br>刚刚试运行时磕磕绊绊，经历多个迭代和回顾会议之后，目前开始正常运转，<br>个人觉得互联网行业唯快不破的节奏下很难存在瀑布开发模式，大部分都是各式各样的敏捷模式，<br>而敏捷的核心是让业务，开发，测试全链条热火朝天运转起来，如果能做到这个其实架子应该没有问题，<br>剩下就是利用回顾会议针对性的解决问题了。","like_count":3,"discussions":[{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215961,"discussion_content":"为啥是开发和测试来挑选需求？感觉很幸福的样子","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585400774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557337,"discussion_content":"这个确实比传统数个月的瀑布要进步很多了，但还是会遇到问题，比如2周的后半段很赶，不同角色需要等待，等待就是一种浪费，那如何消除这种浪费，是可以多去思考的点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647769650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171688,"user_name":"海棠","can_delete":false,"product_type":"c1","uid":1802631,"ip_address":"","ucode":"2D8361024B824B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/81/87/3a83d67c.jpg","comment_is_top":false,"comment_ctime":1578992018,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14463893906","product_id":100044301,"comment_content":"记得第一次真正开展敏捷实践，照搬Scrum全流程，结果被大家强力吐槽😂","like_count":3,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557339,"discussion_content":"Scrum是上手容易，做好很难的敏捷框架，需要同步加强敏捷价值观和原则的理解，也就是Doing Agile的同时，还要Thinking Agile，两者互相夹持，当积累一定的时间后，才可能会Being Agile","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647769754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332822,"user_name":"Bradly","can_delete":false,"product_type":"c1","uid":1008415,"ip_address":"","ucode":"E4876475F2DC26","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/1f/f049597d.jpg","comment_is_top":false,"comment_ctime":1643699073,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10233633665","product_id":100044301,"comment_content":"刚做项目经理不久，在拆分需求这块是弱点，在开发过程中经常发现漏了需求或需求分析的不对，关于拆分需求，老师有没有什么方法和建议？","like_count":2,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557343,"discussion_content":"推荐阅读《用户故事地图》《用户故事和敏捷方法》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647770023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279239,"user_name":"Geek_bd800b","can_delete":false,"product_type":"c1","uid":2364902,"ip_address":"","ucode":"3ABA42FEF74A77","user_header":"https://static001.geekbang.org/account/avatar/00/24/15/e6/d9632cb8.jpg","comment_is_top":false,"comment_ctime":1613689465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10203624057","product_id":100044301,"comment_content":"需求不停的这需求，开发不停的开发，测试不停的测试，循环往复，谁都停不下来，结果就是代码能用就行，匆忙上线，代码质量堪忧，开发人员受不了，离职率高，后面接手的人吐槽不断。","like_count":2},{"had_liked":false,"id":174766,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1580376105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10170310697","product_id":100044301,"comment_content":"所以从这个角度来说，小瀑布依旧是瀑布，它并没有改变瀑布模式的宿命，它离真正的敏捷还有相当长的一段距离。<br>如何界定小瀑布与敏捷呢？从结果导向上来看，看你的需求拆分粒度，看你的测试人员在开发人员开发时，在干什么。","like_count":2},{"had_liked":false,"id":172902,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1579354848,"is_pvip":false,"replies":[{"id":"67188","content":"1、挑能够完成的最小可行性产品MVP进行开发<br>2、这个不是小瀑布","user_name":"作者回复","comment_id":172902,"uid":"1263077","ip_address":"","utype":1,"ctime":1579499031,"user_name_real":"susie"}],"discussion_count":1,"race_medal":0,"score":"10169289440","product_id":100044301,"comment_content":"1，我已前开发过一个ITLE产品，必须包括五个模块才能叫ITLE产品，由于市场压力老板一定要我们五个月完成，但时间的确不够，若用敏捷，该如何处理。2，DevOps中持续部署流。需求-设计-开发-构建－集成测试-发布-验收测试-部署-预生产环境测试-正式生产，这个是不是也是个小瀑布？","like_count":2,"discussions":[{"author":{"id":1263077,"avatar":"https://static001.geekbang.org/account/avatar/00/13/45/e5/ed4444ee.jpg","nickname":"susie","note":"","ucode":"A384ACCBCFABF2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481896,"discussion_content":"1、挑能够完成的最小可行性产品MVP进行开发\n2、这个不是小瀑布","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579499031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172887,"user_name":"玉龙","can_delete":false,"product_type":"c1","uid":1170082,"ip_address":"","ucode":"F5FB50D42D62A8","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/a2/dc36d5a2.jpg","comment_is_top":false,"comment_ctime":1579352864,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10169287456","product_id":100044301,"comment_content":"一个2周的迭代，需求澄清应该在上个迭代，需求 和开发测试异步在上下2个迭代更合适，否则一个迭代内，一周的需求澄清加一周的开发测试都很累，产品质量还不好，特别是测试的时间因为需求和开发被消耗的时间都需要测试消化掉，测试就容易不充分，不充分意味着，上线风险大，只能菩萨保佑了 ","like_count":3},{"had_liked":false,"id":170291,"user_name":"Raymond吕","can_delete":false,"product_type":"c1","uid":1581719,"ip_address":"","ucode":"401C7BD43095FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/22/97/7a1c4031.jpg","comment_is_top":false,"comment_ctime":1578562537,"is_pvip":false,"replies":[{"id":"66974","content":"一般都是有痛点的，很多时候是大家已经习以为常了，都感觉不到“痛”了。所以这里有两个问题，一个是确实目前研发管理方式不错，感觉各个方面没有任何痛点，这样保持现有方式即可；还有一个是有痛却没感到痛，这个是比较麻烦的，需要让团队感知到，一个是通过提问的技巧引发思考，还有一些就是请外部的“咨询师”来说出来。","user_name":"作者回复","comment_id":170291,"uid":"1263077","ip_address":"","utype":1,"ctime":1579249878,"user_name_real":"susie"}],"discussion_count":2,"race_medal":0,"score":"10168497129","product_id":100044301,"comment_content":"老师说的大瀑布中小敏捷的累，我们正在踩。<br>我们公司内部的工具开发，面向开发做小工具，可能是开发提的需求一般都比较明确，所以效率并没感觉降低。老师说导入敏捷要先找到组织当前的痛点，如果现在并没有觉得“痛”，怎么办呢？","like_count":2,"discussions":[{"author":{"id":1263077,"avatar":"https://static001.geekbang.org/account/avatar/00/13/45/e5/ed4444ee.jpg","nickname":"susie","note":"","ucode":"A384ACCBCFABF2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480924,"discussion_content":"一般都是有痛点的，很多时候是大家已经习以为常了，都感觉不到“痛”了。所以这里有两个问题，一个是确实目前研发管理方式不错，感觉各个方面没有任何痛点，这样保持现有方式即可；还有一个是有痛却没感到痛，这个是比较麻烦的，需要让团队感知到，一个是通过提问的技巧引发思考，还有一些就是请外部的“咨询师”来说出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579249878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557342,"discussion_content":"哈哈，后者很考验外部咨询师，很多时候需要咨询师有足够的同理心或者能够合理降维沟通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647769963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170108,"user_name":"落地得分","can_delete":false,"product_type":"c1","uid":1768252,"ip_address":"","ucode":"C7DFDFE2230442","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJsoTBj4YUoEiaKxBwy1rLbtjku39O7ycjSQ9r16GGU56nZT4ZXhnkJsbnNr2KV5Xvly5iahl7dceQg/132","comment_is_top":false,"comment_ctime":1578532823,"is_pvip":false,"replies":[{"id":"66711","content":"主要看你们目前的研发工作组织方式有无痛点。如果一切运行OK，那么不需要做什么改变，如果现在感觉管理上有些混乱，那么可以找找原因，然后来具体应对。如果要选择实施敏捷，可以从一些小点开始，例如先把所有的工作用看板管理起来，开个站会，定期进行回顾来改进工作等等","user_name":"作者回复","comment_id":170108,"uid":"1263077","ip_address":"","utype":1,"ctime":1579085292,"user_name_real":"susie"}],"discussion_count":1,"race_medal":0,"score":"10168467415","product_id":100044301,"comment_content":"我们是创业公司，主要工作就是主业务的日常迭代，都不是很大的需求。正常开发也是一周左右可以上线。任务故事根本无需拆分，这样怎么去实施敏捷呢？","like_count":2,"discussions":[{"author":{"id":1263077,"avatar":"https://static001.geekbang.org/account/avatar/00/13/45/e5/ed4444ee.jpg","nickname":"susie","note":"","ucode":"A384ACCBCFABF2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480841,"discussion_content":"主要看你们目前的研发工作组织方式有无痛点。如果一切运行OK，那么不需要做什么改变，如果现在感觉管理上有些混乱，那么可以找找原因，然后来具体应对。如果要选择实施敏捷，可以从一些小点开始，例如先把所有的工作用看板管理起来，开个站会，定期进行回顾来改进工作等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579085292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329780,"user_name":"郭占冰","can_delete":false,"product_type":"c1","uid":2871109,"ip_address":"","ucode":"B89F5D9A679EC0","user_header":"","comment_is_top":false,"comment_ctime":1641536482,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5936503778","product_id":100044301,"comment_content":"即使需求拆分的足够小，实现起来还是“小瀑布”啊，我理解的文章的意思是：要能同时、交叉存在多个“小瀑布”，需求、开发、测试在同一时间都有事情做，不存在“谁在等谁”的情况，这样整体看来就不是“串行”，而是“并行”的了，和cpu的工作原理一样，cpu再nb，号称多核可以同时处理很多任务，内部也是每个任务“串行”执行的，只不过是每个任务足够小，执行时间足够快，这样在一个维度上看，就是“并行”的了，也就是“敏捷”的了","like_count":1,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557345,"discussion_content":"没办法做到完全0等待的，敏捷是尽可能的做到减少浪费，尽可能地及早反馈，创造优先价值。而且如果追求完美无缝衔接，完美的足够小，其实这个追求就可能是一种付出10分只能把效果从9分提到9.1分的程度，投入产出比低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647770188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315780,"user_name":"吴帆","can_delete":false,"product_type":"c1","uid":1052591,"ip_address":"","ucode":"51E0AAF97768D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/af/c00a2677.jpg","comment_is_top":false,"comment_ctime":1633999122,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5928966418","product_id":100044301,"comment_content":"设计这个活动能并行么？或者说设计是要交给每个故事的开发人员来做么？","like_count":1},{"had_liked":false,"id":310156,"user_name":"行骏","can_delete":false,"product_type":"c1","uid":1586337,"ip_address":"","ucode":"96140BB023BA9E","user_header":"https://static001.geekbang.org/account/avatar/00/18/34/a1/e70736ef.jpg","comment_is_top":false,"comment_ctime":1630505258,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5925472554","product_id":100044301,"comment_content":"再谈一个现实的问题：确实是每个迭代都是一个独立的小需求了，但也演变了全部都是小需求了，看不到大需求是什么，每个迭代做不完的小需求。","like_count":1,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557346,"discussion_content":"有更高层级的类型的需求来组织小需求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647770249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294957,"user_name":"刘隐林","can_delete":false,"product_type":"c1","uid":1458294,"ip_address":"","ucode":"39E2685A1CAAA1","user_header":"https://static001.geekbang.org/account/avatar/00/16/40/76/781a0d76.jpg","comment_is_top":false,"comment_ctime":1622166283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5917133579","product_id":100044301,"comment_content":"合理,高效的拆分用户故事是关键,如果故事拆的不好,直接导致故事测试,提交的质量问题,如果拆的太慢,也会导致团队在讨论过程中消耗大量时间.<br>同时,尤其在前期不成熟的时候,Scrum Master和PO最好要有人全职做,要充分认识到这两个岗位的重要性和复杂性,只有当Scrum Master已经很熟悉,有了一定的经验后,可以考虑兼职做","like_count":1},{"had_liked":false,"id":275189,"user_name":"秦悦","can_delete":false,"product_type":"c1","uid":2147133,"ip_address":"","ucode":"8C11573AB29A7E","user_header":"https://static001.geekbang.org/account/avatar/00/20/c3/3d/65b20123.jpg","comment_is_top":false,"comment_ctime":1611377675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5906344971","product_id":100044301,"comment_content":"全课程的坑都踩过","like_count":1},{"had_liked":false,"id":235751,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1595169937,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5890137233","product_id":100044301,"comment_content":"这样，在开发人员写代码的时候，测试人员就同步在写测试案例，或者在考虑使用自动化测试方案。由于需求拆分得足够小，所以，很可能第一个小需求在迭代后的第二天就可以交付测试了，在测试人员测试的同时，开发人员就继续开发下一个小需求，由此就形成了一个良好的循环。<br><br>老师举编码和测试可能刚好解决了一个迭代小瀑布的问题，但是怎么考虑设计和编码呢？有些再小的需求，也需要接口设计，ux设计的。所以有时候迭代1做的是需求1的开发与测试，需求2的设计，所以几个迭代一起看，还是瀑布<br><br>","like_count":1,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557347,"discussion_content":"需求1，需求2在粒度和排期上应该是在一个迭代能完成测试，成为可交付的产品增量，如果团队产能不足，说明需求2不适合放在本迭代","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647770379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228546,"user_name":"一一","can_delete":false,"product_type":"c1","uid":1492286,"ip_address":"","ucode":"B4E5F0370ACA2E","user_header":"https://static001.geekbang.org/account/avatar/00/16/c5/3e/2bb7edc9.jpg","comment_is_top":false,"comment_ctime":1592731786,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5887699082","product_id":100044301,"comment_content":"我们公司目前就是小瀑布，这种模式下，每个需求都需要强有力的执行者，还有一大群给他打杂的人。以前一直觉得这种模式有问题，但是又讲不出所以然；现在想想看，觉得这种模式的问题就是不能发挥团队每个成员的积极性，这种情况下，团队成员的流失走非常大，为了招聘一个合适的人又要花费大量时间……","like_count":1},{"had_liked":false,"id":220782,"user_name":"陈卫","can_delete":false,"product_type":"c1","uid":1912183,"ip_address":"","ucode":"560ED9E3DA6C71","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/EFDc3ACZMiawnxF7K75FP82Hx1DdwqVSxpkdSxibBEpdgKicuCOVqz1g2vGcrGwblQS3ibuRPELN5XL7K3VEzjibRfQ/132","comment_is_top":false,"comment_ctime":1590323562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885290858","product_id":100044301,"comment_content":"都是提到的系统开发的，是否有针对数据开发相关的敏捷流程或者解决方案。","like_count":1},{"had_liked":false,"id":208061,"user_name":"Geek_lina","can_delete":false,"product_type":"c1","uid":1605196,"ip_address":"","ucode":"E9C1D99D03CD4E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKibr46Zzwgtl7sys4AImSz3PjGV7lv4iaw08jpt9w6WV5DZibra9q5lREjBM5c2GUPkMzmt84M4ZyEA/132","comment_is_top":false,"comment_ctime":1587266934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882234230","product_id":100044301,"comment_content":"70%做新需求，30%架构演进的案例，具体怎么安排进行的呢？比如实际情况可能架构演进会给新需求带来返工或者进度延误","like_count":1},{"had_liked":false,"id":199411,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1585488513,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5880455809","product_id":100044301,"comment_content":"我记得极客时间有个软件工程的专栏里说，任何一个小迭代内部都是一个小瀑布，难道这种说法不对，您是怎么看的？","like_count":1,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557349,"discussion_content":"如果非要这么类比，一个迭代中会有多个小瀑布，而且每个小瀑布的完整生命周期要在一个迭代内完成，而不是割裂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647770510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191368,"user_name":"soong","can_delete":false,"product_type":"c1","uid":1049954,"ip_address":"","ucode":"E3BECF2088F3D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/62/0a4e5831.jpg","comment_is_top":false,"comment_ctime":1584766610,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5879733906","product_id":100044301,"comment_content":"照搬现成模式很难真正落地！初心、目标之外，团队文化是一个很重要的影响因素！见过不少例子，只是强调时间期限，强调要交付结果，却无视团队文化需要变革，无视中间过程的落地！","like_count":1,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557350,"discussion_content":"团队透明开放、追求卓越文化，对敏捷价值观的理解都是要同步慢慢进行的，另外团队的硬核工程技术能力需要提升起来，比如部署流水线，自动化测试，持续集成，重构、TDD，这些才是让团队真正快起来的关键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647770613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182491,"user_name":"iMARS","can_delete":false,"product_type":"c1","uid":1113733,"ip_address":"","ucode":"10C5C31908AA09","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/85/9ab352a7.jpg","comment_is_top":false,"comment_ctime":1582795695,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"5877762991","product_id":100044301,"comment_content":"听完这节课感觉最大的收获有两点：<br>1、敏捷和精益的思想其实有一个共同点就是避免浪费<br>2、要避免陷入小瀑布的反模式<br>我们现在的一个产品开发正在走小瀑布的模式的坑，怎么都觉得很怪。原因应该就在用户故事的拆分的太大，无法在1~2天内可以完成。其次，我还想请教老师1个问题：项目中如果涉及到用户界面的部分，在什么情况下开始设计或讨论比较合适？到什么程度？需要高保真吗？","like_count":1,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557351,"discussion_content":"原则上讲，UI原型属于用户故事的一部分，应该跟随用户故事一起准备好。如果需求经常变更，这个什么时候做都会面临调整。\n\n要看造成需求变更的原因是什么，可以尝试做好前期产品需求的管理，比如变更是否是因为需求分析阶段不足导致理解不到位。\n\n如果变更就是因为市场变化太快，导致需求变更，将需求进一步拆分，将迭代周期缩小也是一个可行的选项","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647770848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2309033,"avatar":"https://static001.geekbang.org/account/avatar/00/23/3b/a9/bea72179.jpg","nickname":"小小","note":"","ucode":"09D2F734FFE570","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333461,"discussion_content":"同问，我们公司的产品交互设计非常细，一直困扰我的也是UI的问题，UI如果纳入当次迭代，那么前端工作会延后约2-3天，提前一个迭代，有时候需求又会变更或者不明晰～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607523466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353124,"user_name":"甘亚鹏","can_delete":false,"product_type":"c1","uid":2992618,"ip_address":"北京","ucode":"8005882D05AF10","user_header":"","comment_is_top":false,"comment_ctime":1659187079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659187079","product_id":100044301,"comment_content":"产品迭代太快，反而有些问题。一直认为，不是所有的产品迭代 都适合敏捷","like_count":0},{"had_liked":false,"id":178119,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1581589999,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581589999","product_id":100044301,"comment_content":"个人觉得有些事情可能可以兼任：只是这个参与度的问题，监督一下还是可以。不是彻底介入而是监督，介入就乱了，开发团队那边我是不参与不过会沟通修正他们的现状，提出修改建议。<br>他们说是迭代不过个人觉得还是有点小瀑布的形式，沟通中出过不少问题。创始人有点崩溃现状，把我找去聊天，结果是问题到了某个地步，写了个制度以及提供了一些建议让他们创始人卡住核心原则，适当的收放，过一段时间看看他们的效果，算是给朋友帮个忙顺便试试看效果。<br>制度是死的人是活的：过紧就成机器出来了，过松就跑远了；大的框架下适当有的放矢才能做好敏捷。","like_count":0,"discussions":[{"author":{"id":1017181,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","nickname":"程序袁帅","note":"","ucode":"C281CA64EC91A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557353,"discussion_content":"如果敏捷还是想着监督，我觉得会走不少弯路。教练型领导 Over 监督型管理者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647770930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177085,"user_name":"前端小猪","can_delete":false,"product_type":"c1","uid":1764429,"ip_address":"","ucode":"DDC0F702986274","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ec/4d/1551ed5f.jpg","comment_is_top":false,"comment_ctime":1581264024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581264024","product_id":100044301,"comment_content":"我想请问一下敏捷的完整项目流程是什么？","like_count":0},{"had_liked":false,"id":176718,"user_name":"工画师","can_delete":false,"product_type":"c1","uid":1025850,"ip_address":"","ucode":"FFABE897B2CF8E","user_header":"","comment_is_top":false,"comment_ctime":1581147937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581147937","product_id":100044301,"comment_content":"做敏捷最关键的还是搞定高层领导团队，让领导团队理解认识、跟踪推动，这是一切的基础，否则组织和资源会是问题，阻力会非常大。然后就是挑选意愿和整体素质相对较高的团队，我觉得这个也是推行实践相对会顺利的重要因素。","like_count":0},{"had_liked":false,"id":176537,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1581082851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581082851","product_id":100044301,"comment_content":"有MCP的思想在就不会跑太偏，提供最小的最有价值的功能迭代，即使是小瀑布也挺好。瀑布的不一定就不好，只要做到小步快跑，做正确的最有价值的事就好","like_count":0},{"had_liked":false,"id":176522,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1581080966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581080966","product_id":100044301,"comment_content":"N团队是如何拆分需求保证需求开发测试独立性的，宋老师可以展开讲一下嘛","like_count":0},{"had_liked":false,"id":175933,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1580887660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580887660","product_id":100044301,"comment_content":"我还没上过敏捷，不过今天的课有点启发：<br>把大需求拆分成独立的小需求，减少模块之间的耦合。","like_count":0},{"had_liked":false,"id":170821,"user_name":"你的美","can_delete":false,"product_type":"c1","uid":1529298,"ip_address":"","ucode":"71B97BDBA3CDC3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iacfiaRC2Vze9eEaVibAFkngm4nmA0DwoibC3kHj6pCOQ87VDa955kK3kavnrDnibmfeIFd4G6Ab2fDkNrbUapL8ibAQ/132","comment_is_top":false,"comment_ctime":1578731453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578731453","product_id":100044301,"comment_content":"敏捷和微服务有点天生就是好兄弟的感觉。说起这个小瀑布，就像那个系统拆分做成了一个一个小单体。","like_count":0},{"had_liked":false,"id":170617,"user_name":"再不吃胖我们就老了","can_delete":false,"product_type":"c1","uid":1017981,"ip_address":"","ucode":"63E9E9556B364F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/7d/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1578644458,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578644458","product_id":100044301,"comment_content":"很难相信居然还有小瀑布这样的团队，游戏行业策划还能闲着等下一个迭代，早被喷死了。","like_count":0,"discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154834,"discussion_content":"所以他们累，他们工资高啊！哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580187217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169593,"user_name":"吴言乱语","can_delete":false,"product_type":"c1","uid":1802886,"ip_address":"","ucode":"5D8FFBABEF2FE7","user_header":"","comment_is_top":false,"comment_ctime":1578384484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578384484","product_id":100044301,"comment_content":"在实际工作中，因为涉及外部团队的配合，所以需求拆分可以按照内部测试单元和外部测试单元进行分类，从而更好的评估外部依赖性，规避项目风险。","like_count":0}]}