{"id":9707,"title":"第17讲 | P2P协议：我下小电影，99%急死你","content":"<p>如果你想下载一个电影，一般会通过什么方式呢？</p><p>当然，最简单的方式就是通过<strong>HTTP</strong>进行下载。但是相信你有过这样的体验，通过浏览器下载的时候，只要文件稍微大点，下载的速度就奇慢无比。</p><p>还有种下载文件的方式，就是通过<strong>FTP</strong>，也即<strong>文件传输协议</strong>。FTP采用两个TCP连接来传输一个文件。</p><ul>\n<li>\n<p><strong>控制连接</strong>：服务器以被动的方式，打开众所周知用于FTP的端口21，客户端则主动发起连接。该连接将命令从客户端传给服务器，并传回服务器的应答。常用的命令有：list——获取文件目录；reter——取一个文件；store——存一个文件。</p>\n</li>\n<li>\n<p><strong>数据连接</strong>：每当一个文件在客户端与服务器之间传输时，就创建一个数据连接。</p>\n</li>\n</ul><h2>FTP的两种工作模式</h2><p>每传输一个文件，都要建立一个全新的数据连接。FTP有两种工作模式，分别是<strong>主动模式</strong>（<strong>PORT</strong>）和<strong>被动模式</strong>（<strong>PASV</strong>），这些都是站在FTP服务器的角度来说的。</p><p>主动模式下，客户端随机打开一个大于1024的端口N，向服务器的命令端口21发起连接，同时开放N+1端口监听，并向服务器发出 “port N+1” 命令，由服务器从自己的数据端口20，主动连接到客户端指定的数据端口N+1。</p><p>被动模式下，当开启一个FTP连接时，客户端打开两个任意的本地端口N（大于1024）和N+1。第一个端口连接服务器的21端口，提交PASV命令。然后，服务器会开启一个任意的端口P（大于1024），返回“227 entering passive mode”消息，里面有FTP服务器开放的用来进行数据传输的端口。客户端收到消息取得端口号之后，会通过N+1号端口连接服务器的端口P，然后在两个端口之间进行数据传输。</p><!-- [[[read_end]]] --><h2>P2P是什么？</h2><p>但是无论是HTTP的方式，还是FTP的方式，都有一个比较大的缺点，就是<strong>难以解决单一服务器的带宽压力</strong>， 因为它们使用的都是传统的客户端服务器的方式。</p><p>后来，一种创新的、称为P2P的方式流行起来。<strong>P2P</strong>就是<strong>peer-to-peer</strong>。资源开始并不集中地存储在某些设备上，而是分散地存储在多台设备上。这些设备我们姑且称为peer。</p><p>想要下载一个文件的时候，你只要得到那些已经存在了文件的peer，并和这些peer之间，建立点对点的连接，而不需要到中心服务器上，就可以就近下载文件。一旦下载了文件，你也就成为peer中的一员，你旁边的那些机器，也可能会选择从你这里下载文件，所以当你使用P2P软件的时候，例如BitTorrent，往往能够看到，既有下载流量，也有上传的流量，也即你自己也加入了这个P2P的网络，自己从别人那里下载，同时也提供给其他人下载。可以想象，这种方式，参与的人越多，下载速度越快，一切完美。</p><h2>种子（.torrent）文件</h2><p>但是有一个问题，当你想下载一个文件的时候，怎么知道哪些peer有这个文件呢？</p><p>这就用到<strong>种子</strong>啦，也即咱们比较熟悉的<strong>.torrent文件</strong>。.torrent文件由两部分组成，分别是：<strong>announce</strong>（<strong>tracker URL</strong>）和<strong>文件信息</strong>。</p><p>文件信息里面有这些内容。</p><ul>\n<li>\n<p><strong>info区</strong>：这里指定的是该种子有几个文件、文件有多长、目录结构，以及目录和文件的名字。</p>\n</li>\n<li>\n<p><strong>Name字段</strong>：指定顶层目录名字。</p>\n</li>\n<li>\n<p><strong>每个段的大小</strong>：BitTorrent（简称BT）协议把一个文件分成很多个小段，然后分段下载。</p>\n</li>\n<li>\n<p><strong>段哈希值</strong>：将整个种子中，每个段的SHA-1哈希值拼在一起。</p>\n</li>\n</ul><p>下载时，BT客户端首先解析.torrent文件，得到tracker地址，然后连接tracker服务器。tracker服务器回应下载者的请求，将其他下载者（包括发布者）的IP提供给下载者。下载者再连接其他下载者，根据.torrent文件，两者分别对方告知自己已经有的块，然后交换对方没有的数据。此时不需要其他服务器参与，并分散了单个线路上的数据流量，因此减轻了服务器的负担。</p><p>下载者每得到一个块，需要算出下载块的Hash验证码，并与.torrent文件中的对比。如果一样，则说明块正确，不一样则需要重新下载这个块。这种规定是为了解决下载内容的准确性问题。</p><p>从这个过程也可以看出，这种方式特别依赖tracker。tracker需要收集下载者信息的服务器，并将此信息提供给其他下载者，使下载者们相互连接起来，传输数据。虽然下载的过程是非中心化的，但是加入这个P2P网络的时候，都需要借助tracker中心服务器，这个服务器是用来登记有哪些用户在请求哪些资源。</p><p>所以，这种工作方式有一个弊端，一旦tracker服务器出现故障或者线路遭到屏蔽，BT工具就无法正常工作了。</p><h2>去中心化网络（DHT）</h2><p>那能不能彻底非中心化呢？</p><p>于是，后来就有了一种叫作<strong>DHT</strong>（<strong>Distributed Hash Table</strong>）的去中心化网络。每个加入这个DHT网络的人，都要负责存储这个网络里的资源信息和其他成员的联系信息，相当于所有人一起构成了一个庞大的分布式存储数据库。</p><p>有一种著名的DHT协议，叫<strong>Kademlia协议</strong>。这个和区块链的概念一样，很抽象，我来详细讲一下这个协议。</p><p>任何一个BitTorrent启动之后，它都有两个角色。一个是<strong>peer</strong>，监听一个TCP端口，用来上传和下载文件，这个角色表明，我这里有某个文件。另一个角色<strong>DHT node</strong>，监听一个UDP的端口，通过这个角色，这个节点加入了一个DHT的网络。</p><p><img src=\"https://static001.geekbang.org/resource/image/80/27/80ecacb45587d201cbb9a08c31476d27.jpg?wh=1848*1359\" alt=\"\"><br>\n在DHT网络里面，每一个DHT node都有一个ID。这个ID是一个很长的串。每个DHT node都有责任掌握一些知识，也就是<strong>文件索引</strong>，也即它应该知道某些文件是保存在哪些节点上。它只需要有这些知识就可以了，而它自己本身不一定就是保存这个文件的节点。</p><h2>哈希值</h2><p>当然，每个DHT node不会有全局的知识，也即不知道所有的文件保存在哪里，它只需要知道一部分。那应该知道哪一部分呢？这就需要用哈希算法计算出来。</p><p>每个文件可以计算出一个哈希值，而<strong>DHT node的ID是和哈希值相同长度的串</strong>。</p><p>DHT算法是这样规定的：如果一个文件计算出一个哈希值，则和这个哈希值一样的那个DHT node，就有责任知道从哪里下载这个文件，即便它自己没保存这个文件。</p><p>当然不一定这么巧，总能找到和哈希值一模一样的，有可能一模一样的DHT node也下线了，所以DHT算法还规定：除了一模一样的那个DHT node应该知道，ID和这个哈希值非常接近的N个DHT node也应该知道。</p><p>什么叫和哈希值接近呢？例如只修改了最后一位，就很接近；修改了倒数2位，也不远；修改了倒数3位，也可以接受。总之，凑齐了规定的N这个数就行。</p><p>刚才那个图里，文件1通过哈希运算，得到匹配ID的DHT node为node C，当然还会有其他的，我这里没有画出来。所以，node C有责任知道文件1的存放地址，虽然node C本身没有存放文件1。</p><p>同理，文件2通过哈希运算，得到匹配ID的DHT node为node E，但是node D和E的ID值很近，所以node D也知道。当然，文件2本身没有必要一定在node D和E里，但是碰巧这里就在E那有一份。</p><p>接下来一个新的节点node new上线了。如果想下载文件1，它首先要加入DHT网络，如何加入呢？</p><p>在这种模式下，种子.torrent文件里面就不再是tracker的地址了，而是一个list的node的地址，而所有这些node都是已经在DHT网络里面的。当然随着时间的推移，很可能有退出的，有下线的，但是我们假设，不会所有的都联系不上，总有一个能联系上。</p><p>node new只要在种子里面找到一个DHT node，就加入了网络。</p><p>node new会计算文件1的哈希值，并根据这个哈希值了解到，和这个哈希值匹配，或者很接近的node上知道如何下载这个文件，例如计算出来的哈希值就是node C。</p><p>但是node new不知道怎么联系上node C，因为种子里面的node列表里面很可能没有node C，但是它可以问，DHT网络特别像一个社交网络，node new只有去它能联系上的node问，你们知道不知道node C的联系方式呀？</p><p>在DHT网络中，每个node都保存了一定的联系方式，但是肯定没有node的所有联系方式。DHT网络中，节点之间通过互相通信，也会交流联系方式，也会删除联系方式。和人们的方式一样，你有你的朋友圈，你的朋友有它的朋友圈，你们互相加微信，就互相认识了，过一段时间不联系，就删除朋友关系。</p><p>有个理论是，社交网络中，任何两个人直接的距离不超过六度，也即你想联系比尔盖茨，也就六个人就能够联系到了。</p><p>所以，node new想联系node C，就去万能的朋友圈去问，并且求转发，朋友再问朋友，很快就能找到。如果找不到C，也能找到和C的ID很像的节点，它们也知道如何下载文件1。</p><p>在node C上，告诉node new，下载文件1，要去B、D、 F，于是node new选择和node B进行peer连接，开始下载，它一旦开始下载，自己本地也有文件1了，于是node new告诉node C以及和node C的ID很像的那些节点，我也有文件1了，可以加入那个文件拥有者列表了。</p><p>但是你会发现node new上没有文件索引，但是根据哈希算法，一定会有某些文件的哈希值是和node new的ID匹配上的。在DHT网络中，会有节点告诉它，你既然加入了咱们这个网络，你也有责任知道某些文件的下载地址。</p><p>好了，一切都分布式了。</p><p>这里面遗留几个细节的问题。</p><ul>\n<li>DHT node ID以及文件哈希是个什么东西？</li>\n</ul><p>节点ID是一个随机选择的160bits（20字节）空间，文件的哈希也使用这样的160bits空间。</p><ul>\n<li>所谓ID相似，具体到什么程度算相似？</li>\n</ul><p>在Kademlia网络中，距离是通过异或（XOR）计算的。我们就不以160bits举例了。我们以5位来举例。</p><p>01010与01000的距离，就是两个ID之间的异或值，为00010，也即为2。 01010与00010的距离为01000，也即为8,。01010与00011的距离为01001，也即8+1=9 。以此类推，高位不同的，表示距离更远一些；低位不同的，表示距离更近一些，总的距离为所有的不同的位的距离之和。</p><p>这个距离不能比喻为地理位置，因为在Kademlia网络中，位置近不算近，ID近才算近，所以我把这个距离比喻为社交距离，也即在朋友圈中的距离，或者社交网络中的距离。这个和你住的位置没有关系，和人的经历关系比较大。</p><p>还是以5位ID来举例，就像在领英中，排第一位的表示最近一份工作在哪里，第二位的表示上一份工作在哪里，然后第三位的是上上份工作，第四位的是研究生在哪里读，第五位的表示大学在哪里读。</p><p>如果你是一个猎头，在上面找候选人，当然最近的那份工作是最重要的。而对于工作经历越丰富的候选人，大学在哪里读的反而越不重要。</p><h2>DHT网络中的朋友圈是怎么维护的？</h2><p>就像人一样，虽然我们常联系人的只有少数，但是朋友圈里肯定是远近都有。DHT网络的朋友圈也是一样，远近都有，并且<strong>按距离分层</strong>。</p><p>假设某个节点的ID为01010，如果一个节点的ID，前面所有位数都与它相同，只有最后1位不同。这样的节点只有1个，为01011。与基础节点的异或值为00001，即距离为1；对于01010而言，这样的节点归为“k-bucket 1”。</p><p>如果一个节点的ID，前面所有位数都相同，从倒数第2位开始不同，这样的节点只有2个，即01000和01001，与基础节点的异或值为00010和00011，即距离范围为2和3；对于01010而言，这样的节点归为“k-bucket 2”。</p><p>如果一个节点的ID，前面所有位数相同，从倒数第i位开始不同，这样的节点只有2^(i-1)个，与基础节点的距离范围为[2^(i-1), 2^i)；对于01010而言，这样的节点归为“k-bucket i”。</p><p>最终到从倒数160位就开始都不同。</p><p>你会发现，差距越大，陌生人越多，但是朋友圈不能都放下，所以每一层都只放K个，这是参数可以配置。</p><h2>DHT网络是如何查找朋友的？</h2><p>假设，node A 的ID为00110，要找node B ID为10000，异或距离为10110，距离范围在[2^4, 2^5)，所以这个目标节点可能在“k-bucket 5”中，这就说明B的ID与A的ID从第5位开始不同，所以B可能在“k-bucket 5”中。</p><p>然后，A看看自己的k-bucket 5有没有B。如果有，太好了，找到你了；如果没有，在k-bucket 5里随便找一个C。因为是二进制，C、B都和A的第5位不同，那么C的ID第5位肯定与B相同，即它与B的距离会小于2^4，相当于比A、B之间的距离缩短了一半以上。</p><p>再请求C，在它自己的通讯录里，按同样的查找方式找一下B。如果C知道B，就告诉A；如果C也不知道B，那C按同样的搜索方法，可以在自己的通讯录里找到一个离B更近的D朋友（D、B之间距离小于2^3），把D推荐给A，A请求D进行下一步查找。</p><p>Kademlia的这种查询机制，是通过折半查找的方式来收缩范围，对于总的节点数目为N，最多只需要查询log2(N)次，就能够找到。</p><p>例如，图中这个最差的情况。</p><p><img src=\"https://static001.geekbang.org/resource/image/dc/b4/dc6d713751d09ea5dd0d79c65433aeb4.jpg?wh=3021*653\" alt=\"\"></p><p>A和B每一位都不一样，所以相差31，A找到的朋友C，不巧正好在中间。和A的距离是16，和B距离为15，于是C去自己朋友圈找的时候，不巧找到D，正好又在中间，距离C为8，距离B为7。于是D去自己朋友圈找的时候，不巧找到E，正好又在中间，距离D为4，距离B为3，E在朋友圈找到F，距离E为2，距离B为1，最终在F的朋友圈距离1的地方找到B。当然这是最最不巧的情况，每次找到的朋友都不远不近，正好在中间。</p><p>如果碰巧了，在A的朋友圈里面有G，距离B只有3，然后在G的朋友圈里面一下子就找到了B，两次就找到了。</p><p>在DHT网络中，朋友之间怎么沟通呢？</p><p>Kademlia算法中，每个节点只有4个指令。</p><ul>\n<li>\n<p>PING：测试一个节点是否在线，还活着没，相当于打个电话，看还能打通不。</p>\n</li>\n<li>\n<p>STORE：要求一个节点存储一份数据，既然加入了组织，有义务保存一份数据。</p>\n</li>\n<li>\n<p>FIND_NODE：根据节点ID查找一个节点，就是给一个160位的ID，通过上面朋友圈的方式找到那个节点。</p>\n</li>\n<li>\n<p>FIND_VALUE：根据KEY查找一个数据，实则上跟FIND_NODE非常类似。KEY就是文件对应的160位的ID，就是要找到保存了文件的节点。</p>\n</li>\n</ul><p>DHT网络中，朋友圈如何更新呢？</p><ul>\n<li>\n<p>每个bucket里的节点，都按最后一次接触的时间倒序排列，这就相当于，朋友圈里面最近联系过的人往往是最熟的。</p>\n</li>\n<li>\n<p>每次执行四个指令中的任意一个都会触发更新。</p>\n</li>\n<li>\n<p>当一个节点与自己接触时，检查它是否已经在k-bucket中，也就是说是否已经在朋友圈。如果在，那么将它挪到k-bucket列表的最底，也就是最新的位置，刚联系过，就置顶一下，方便以后多联系；如果不在，新的联系人要不要加到通讯录里面呢？假设通讯录已满的情况，PING一下列表最上面，也即最旧的一个节点。如果PING通了，将旧节点挪到列表最底，并丢弃新节点，老朋友还是留一下；如果PING不通，删除旧节点，并将新节点加入列表，这人联系不上了，删了吧。</p>\n</li>\n</ul><p>这个机制保证了任意节点加入和离开都不影响整体网络。</p><h2>小结</h2><p>好了，今天的讲解就到这里了，我们总结一下：</p><ul>\n<li>\n<p>下载一个文件可以使用HTTP或FTP，这两种都是集中下载的方式，而P2P则换了一种思路，采取非中心化下载的方式；</p>\n</li>\n<li>\n<p>P2P也是有两种，一种是依赖于tracker的，也即元数据集中，文件数据分散；另一种是基于分布式的哈希算法，元数据和文件数据全部分散。</p>\n</li>\n</ul><p>接下来，给你留两个思考题：</p><ol>\n<li>\n<p>除了这种去中心化分布式哈希的算法，你还能想到其他的应用场景吗？</p>\n</li>\n<li>\n<p>在前面所有的章节中，要下载一个文件，都需要使用域名。但是网络通信是使用IP的，那你知道怎么实现两者的映射机制吗？</p>\n</li>\n</ol><p>我们的专栏马上更新过半了，不知你掌握得如何？每节课后我留的思考题，你都有没有认真思考，并在留言区写下答案呢？我会从已发布的文章中选出一批认真留言的同学，赠送<span class=\"orange\">学习奖励礼券</span>和我整理的<span class=\"orange\">独家网络协议知识图谱</span>。</p><p>欢迎你留言和我讨论。趣谈网络协议，我们下期见！</p>","comments":[{"had_liked":false,"id":13624,"user_name":"风太息","can_delete":false,"product_type":"c1","uid":1142785,"ip_address":"","ucode":"44A0ED4231822D","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/01/0315f9ff.jpg","comment_is_top":false,"comment_ctime":1529886128,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"624300144048","product_id":100007101,"comment_content":"99%卡住的原因是什么呢，似乎没讲","like_count":146,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265430,"discussion_content":"是因为你已经拥有100%的数据，让你当服务器，提升用户体验。不然软件关了，别人下载就慢了。","likes_number":55,"is_delete":false,"is_hidden":false,"ctime":1589386016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1208637,"avatar":"https://static001.geekbang.org/account/avatar/00/12/71/3d/da8dc880.jpg","nickname":"游弋云端","note":"","ucode":"A960E8F5AA25B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199401,"discussion_content":"个人觉得有以下几个原因：\n1、最后完成的时候，检验已下载片段有错误，重新下载校验错误的片段，进度显示为99%，这个时候会等待重新下载，会卡一会；\n2、运气不好，未下载到的分片刚好下线了，线上的大家都没有分片，所以有些协议会让大家尽可能随机下载分片，这样可以互补分片；\n3、故意为之，人人为我，我为人人，为了让Client多在线一会，尽可能将数据传递给当前网络中进度落后的人，软件层故意拖慢完成最后的1%（或者5%~10%），当你贡献了2~3min或者更久之后的&#34;Server&#34;后，才能下载完成。","likes_number":31,"is_delete":false,"is_hidden":false,"ctime":1583588736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1087324,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/5c/95e96895.jpg","nickname":"Jeyons","note":"","ucode":"28DE2C7597659E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1208637,"avatar":"https://static001.geekbang.org/account/avatar/00/12/71/3d/da8dc880.jpg","nickname":"游弋云端","note":"","ucode":"A960E8F5AA25B9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229779,"discussion_content":"1. 段哈希值是每得到一块数据块的时候就进行验证并错误重传的。并非最后\n2. 运气不好这个没有一般效应啊，不能说明大部分99%卡主的情况啊。\n3. 当下载完文件之后，端点才能作为peer中的一员对外提供下载服务。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1586690001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199401,"ip_address":""},"score":229779,"extra":""}]},{"author":{"id":1070165,"avatar":"https://static001.geekbang.org/account/avatar/00/10/54/55/f686c2ed.jpg","nickname":"大象佩奇","note":"","ucode":"EAFB4FA3B9CFEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306689,"discussion_content":"你冲个VIP试试，看看卡不卡99%了","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1600348581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1208981,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/95/5f83598c.jpg","nickname":"Hello World","note":"","ucode":"368D87D53DC58F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549839,"discussion_content":"做种","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644251073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16188,"user_name":"rtoday","can_delete":false,"product_type":"c1","uid":1174402,"ip_address":"","ucode":"DFAA788C96ABAC","user_header":"https://static001.geekbang.org/account/avatar/00/11/eb/82/4b56fa5f.jpg","comment_is_top":false,"comment_ctime":1531822356,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"422438617364","product_id":100007101,"comment_content":"试着解析为什么99.99%<br>如果有误还望高手指正与指导<br>不论是依赖tracker，还是分布式哈希算法，p2p开宗明义就是要减轻server压力，把压力转嫁给client。<br>99.99%的定义，是最后校验出了错误，漏失某个文件。<br>而为什么会漏失呢？还是p2p开宗明义说的，把压力转嫁给client，当client流量压力过大而下线了，其他人就无法找到这个文件了，顶多DHT网络告诉每个client，漏失的文件在某个下线的人手上。你们就乖乖等他上线，并且把手上的99.99%分享给其他新来的new node吧。<br>为了解决这个问题，最早应该是迅雷，提供了p2sp，长效种子，让server也有义务承担一些压力。<br>至于迅雷为什么也会99.99%，应该是更进阶的技术问题了。比如下载网站专门防止迅雷盗链。你有张良计，我有过墙梯。","like_count":99,"discussions":[{"author":{"id":1562064,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJtF2QwIjPkTx7zKM6Xic2jOLIXKdmNOAzN3jY3OE6Jwldo1E6PoVCMSdHZkV93ZePxibprCiacAT2rQ/132","nickname":"nirgedeng","note":"","ucode":"659CFE8940DCB2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560069,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649153657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298528,"discussion_content":"小电影里的学问还真不少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597317896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14071,"user_name":"方圆佰李","can_delete":false,"product_type":"c1","uid":1053200,"ip_address":"","ucode":"6A0599C953F564","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIWSTcia43udFKpGW0YT4zDJpO7LqkCicmTIgiaFcfszibGDkjfSSwqQ7pIMQl1Mhxc8PsdLS1UrnsrRA/132","comment_is_top":false,"comment_ctime":1530160742,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"113199310438","product_id":100007101,"comment_content":"Node new想下载文件1，但它本身并没有文件1，那是通过什么计算出文件1的哈希值的？","like_count":27,"discussions":[{"author":{"id":1638731,"avatar":"https://static001.geekbang.org/account/avatar/00/19/01/4b/a276c1d0.jpg","nickname":"儘管如此世界依然美麗","note":"","ucode":"B831CF4CF2561A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267944,"discussion_content":"根据.torrent种子文件呀","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589715616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1293354,"avatar":"https://static001.geekbang.org/account/avatar/00/13/bc/2a/00a3d488.jpg","nickname":"gl328518397","note":"","ucode":"05AF4661EF0AAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380709,"discussion_content":"百度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624639756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126946,"avatar":"https://static001.geekbang.org/account/avatar/00/11/32/22/abb7bfe3.jpg","nickname":"kebishuai","note":"","ucode":"955655E3D2C06C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89974,"discussion_content":"如果没有Hash值那你如何制定要下载的文件1呢？肯定是需要通过计算得出这个才能在DHT网络找到的，另外如果是Tracker模式，Hash是存在种子文件中的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576765146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bd/62/283e24ab.jpg","nickname":"雨后的夜","note":"","ucode":"0E8C183AEB02EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51827,"discussion_content":"种子文件里的hash值吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573957445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319960,"avatar":"https://static001.geekbang.org/account/avatar/00/14/24/18/8edc6b97.jpg","nickname":"Roger","note":"","ucode":"78EA978779F92E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9594,"discussion_content":"同问。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568194050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14010,"user_name":"月饼","can_delete":false,"product_type":"c1","uid":1015591,"ip_address":"","ucode":"82A54F57E065B4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/27/03007a5e.jpg","comment_is_top":false,"comment_ctime":1530140711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"96019421223","product_id":100007101,"comment_content":"P2P网络是怎么解决局域网穿透的？upnp吗？","like_count":23},{"had_liked":false,"id":13730,"user_name":"ismind","can_delete":false,"product_type":"c1","uid":1138710,"ip_address":"","ucode":"7AADD673ED3BC4","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/16/d1dd4972.jpg","comment_is_top":false,"comment_ctime":1529972541,"is_pvip":false,"replies":[{"id":"4595","content":"运营策划的活动，哈哈","user_name":"作者回复","comment_id":13730,"uid":"1001590","ip_address":"","utype":1,"ctime":1529976537,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"96019253053","product_id":100007101,"comment_content":"刘老师，您好，我们都付费买了课程，肯定是想学好的，为什么不发不出来呢？那样的话，真的非常感谢您了。","like_count":22,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419735,"discussion_content":"运营策划的活动，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529976537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13619,"user_name":"LongXiaJun","can_delete":false,"product_type":"c1","uid":1154688,"ip_address":"","ucode":"B5246BF0DAF4F7","user_header":"https://static001.geekbang.org/account/avatar/00/11/9e/80/b87f8b49.jpg","comment_is_top":false,"comment_ctime":1529884575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"70249361311","product_id":100007101,"comment_content":"哈哈哈，想要网络协议知识图谱~","like_count":16},{"had_liked":false,"id":13760,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1529975756,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40184681420","product_id":100007101,"comment_content":"看一两遍是不够了 得看三四遍","like_count":9},{"had_liked":false,"id":270096,"user_name":"核桃","can_delete":false,"product_type":"c1","uid":1385204,"ip_address":"","ucode":"7AB05270CBCCCB","user_header":"https://static001.geekbang.org/account/avatar/00/15/22/f4/9fd6f8f0.jpg","comment_is_top":false,"comment_ctime":1608902120,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31673673192","product_id":100007101,"comment_content":"关于DHT算法还有一个著名的应用glusterfs，作为几大分布式文件系统之一，目前生产环境正在使用，dht算法对于并发写入非常不友好的，同时因为考虑文件安全性使用冗余码，例如8+2，那么如果是20个节点的集群，当数据规模上来以后，每个节点几乎都会保存很多元信息，通信量就太大了","like_count":7},{"had_liked":false,"id":107760,"user_name":"darren","can_delete":false,"product_type":"c1","uid":1151837,"ip_address":"","ucode":"4726076845920B","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/5d/91f1d849.jpg","comment_is_top":false,"comment_ctime":1561604079,"is_pvip":false,"replies":[{"id":"48847","content":"所有服务器都停了，也就下载不到了","user_name":"作者回复","comment_id":107760,"uid":"1001590","ip_address":"","utype":1,"ctime":1567501027,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"31626375151","product_id":100007101,"comment_content":"这就是种子过久了失效的原因吗？","like_count":8,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455661,"discussion_content":"所有服务器都停了，也就下载不到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567501027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13976,"user_name":"bochs","can_delete":false,"product_type":"c1","uid":1106985,"ip_address":"","ucode":"8F0B0491093E2F","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/29/07400492.jpg","comment_is_top":false,"comment_ctime":1530095257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23004931737","product_id":100007101,"comment_content":"这一节好多算法！己经迷路了我！","like_count":5},{"had_liked":false,"id":13813,"user_name":"朱显杰","can_delete":false,"product_type":"c1","uid":1072683,"ip_address":"","ucode":"F7B8258B941D9D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5e/2b/df3983e2.jpg","comment_is_top":false,"comment_ctime":1529998152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23004834632","product_id":100007101,"comment_content":"还是没有回答99%的问题呢","like_count":5},{"had_liked":false,"id":13634,"user_name":"龚极客","can_delete":false,"product_type":"c1","uid":1060645,"ip_address":"","ucode":"11AADCCD31D53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/25/d2162fce.jpg","comment_is_top":false,"comment_ctime":1529888138,"is_pvip":false,"replies":[{"id":"4569","content":"这个。。。标题党，我以为不会有人纠结","user_name":"作者回复","comment_id":13634,"uid":"1001590","ip_address":"","utype":1,"ctime":1529892099,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"23004724618","product_id":100007101,"comment_content":"思考题1，调用域名解析库解析出ip,或者本地hosts文件<br>思考题2，区块链数字货币<br><br>疑问，标题为啥老是卡在99%没说啊喂，不会那么巧每次node下线吧，我看还是显示有流量在下载就是没完成啊。","like_count":6,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419706,"discussion_content":"这个。。。标题党，我以为不会有人纠结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529892099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18473,"user_name":"不想学习","can_delete":false,"product_type":"c1","uid":1059349,"ip_address":"","ucode":"B41048021CD323","user_header":"https://static001.geekbang.org/account/avatar/00/10/2a/15/1708b35c.jpg","comment_is_top":false,"comment_ctime":1533352487,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"18713221671","product_id":100007101,"comment_content":"每个都是客户端，没有固定公网ip，怎么互相连接上？这块貌似没讲清楚啊","like_count":5,"discussions":[{"author":{"id":1250922,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIzGGthScz54sECZJKX3lgyjCATkgrvSt5N3eOsYB34jibCr3SkAX88QaZ5IVmME9Ec7VdkQGwRSPw/132","nickname":"哈哈哈","note":"","ucode":"8AC20A1C9C7DF8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590952,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666185502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1137046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/59/96/11671504.jpg","nickname":"蔡箐菁","note":"","ucode":"550B54F2550718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374077,"discussion_content":"https://blog.csdn.net/SAMCYC/article/details/106481529","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620987530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005618,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/58/32/535e5c3c.jpg","nickname":"mlbjay","note":"","ucode":"FB62EAB4568AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296470,"discussion_content":"有专门实现 网络穿透/打洞的协议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596550702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14880,"user_name":"soga","can_delete":false,"product_type":"c1","uid":1071161,"ip_address":"","ucode":"FD6AF7F8BB4224","user_header":"https://static001.geekbang.org/account/avatar/00/10/58/39/1af79bd5.jpg","comment_is_top":false,"comment_ctime":1530722967,"is_pvip":false,"replies":[{"id":"5054","content":"种子里面有","user_name":"作者回复","comment_id":14880,"uid":"1001590","ip_address":"","utype":1,"ctime":1530799970,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"18710592151","product_id":100007101,"comment_content":"新加入dht网络的节点最开始没有任何其他节点的信息吧？要怎么启动？是会默认给一两个节点做初始的已知网络节点吗？如果是的话，这些初始节点怎么得到？","like_count":4,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420160,"discussion_content":"种子里面有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530799970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13622,"user_name":"winlans","can_delete":false,"product_type":"c1","uid":1029940,"ip_address":"","ucode":"FD37E9BFE3E38C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/34/e38f5ff5.jpg","comment_is_top":false,"comment_ctime":1529885536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18709754720","product_id":100007101,"comment_content":"第二是DNS吧，每次域名请求都会先查找本地hosts文件，如果没有匹配的就会去请求dns服务换取ip。这也是有时候dns配置错误，会导致QQ正常，网页却打不开的奇怪现象。","like_count":4},{"had_liked":false,"id":84182,"user_name":"时间是最真的答案","can_delete":false,"product_type":"c1","uid":1183601,"ip_address":"","ucode":"B90F3EF769F865","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/71/9273e8a4.jpg","comment_is_top":false,"comment_ctime":1554799365,"is_pvip":false,"replies":[{"id":"49775","content":"是的","user_name":"作者回复","comment_id":84182,"uid":"1001590","ip_address":"","utype":1,"ctime":1567700839,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"14439701253","product_id":100007101,"comment_content":"迅雷下载是不是使用的P2P协议？","like_count":3,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446271,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567700839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96837,"user_name":"起风了001","can_delete":false,"product_type":"c1","uid":1529929,"ip_address":"","ucode":"8DCDBA40B8CC9F","user_header":"","comment_is_top":false,"comment_ctime":1558517684,"is_pvip":false,"replies":[{"id":"49271","content":"可以呀","user_name":"作者回复","comment_id":96837,"uid":"1001590","ip_address":"","utype":1,"ctime":1567609146,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"10148452276","product_id":100007101,"comment_content":"这章跳过去了. 算法用文字描述太难看懂, 而且这个协议专业性比较强, 如果不是专门做p2p的感觉可以先跳过, 以后有时间再回头看","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451030,"discussion_content":"可以呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567609146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16008,"user_name":"风车车","can_delete":false,"product_type":"c1","uid":1163822,"ip_address":"","ucode":"3C10A1CCD6B0CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/2e/e25b62e7.jpg","comment_is_top":false,"comment_ctime":1531736240,"is_pvip":false,"replies":[{"id":"5551","content":"每周三篇文章，压力太大，来不急讲，后面会补上","user_name":"作者回复","comment_id":16008,"uid":"1001590","ip_address":"","utype":1,"ctime":1531750084,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"10121670832","product_id":100007101,"comment_content":"思考题老师也没讲解，看评论只有赞，没有对评论内容进行对错 纠正。","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420635,"discussion_content":"每周三篇文章，压力太大，来不急讲，后面会补上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531750084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13775,"user_name":"羽毛","can_delete":false,"product_type":"c1","uid":1130940,"ip_address":"","ucode":"A99474C0E7D4AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/bc/13de31c5.jpg","comment_is_top":false,"comment_ctime":1529980076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10119914668","product_id":100007101,"comment_content":"求图谱<br>新 node怎样加入网络？","like_count":2},{"had_liked":false,"id":13766,"user_name":"太多的借口","can_delete":false,"product_type":"c1","uid":1048837,"ip_address":"","ucode":"EEB8B95B541D47","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/05/9b9503cb.jpg","comment_is_top":false,"comment_ctime":1529976934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10119911526","product_id":100007101,"comment_content":"本地host文件与dns查询","like_count":2},{"had_liked":false,"id":13754,"user_name":"海昌","can_delete":false,"product_type":"c1","uid":1134344,"ip_address":"","ucode":"066264638273A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/08/d3421893.jpg","comment_is_top":false,"comment_ctime":1529974866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10119909458","product_id":100007101,"comment_content":"思考题二：默认应该先到本地的hosts文件找下，再到dns吧","like_count":2},{"had_liked":false,"id":13684,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1529927811,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10119862403","product_id":100007101,"comment_content":"快播 以前的方式 是不是这样的啊","like_count":2},{"had_liked":false,"id":66731,"user_name":"凉凉","can_delete":false,"product_type":"c1","uid":1325256,"ip_address":"","ucode":"FCCF976E41EF71","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/c8/972a5024.jpg","comment_is_top":false,"comment_ctime":1549988704,"is_pvip":false,"replies":[{"id":"25968","content":"你如果是一个bt客户端，你肯定有种子，要不下载啥<br>","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1551439089,"ip_address":"","comment_id":66731,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5844956000","product_id":100007101,"comment_content":"Node new 从哪获取文件1的种子文件的？","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438887,"discussion_content":"你如果是一个bt客户端，你肯定有种子，要不下载啥\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551439089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1154013,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9b/dd/6851e7cc.jpg","nickname":"白小菜","note":"","ucode":"1236BACECD5B15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586911,"discussion_content":"种子靠人与人之间互相分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662604947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35831,"user_name":"达","can_delete":false,"product_type":"c1","uid":1190031,"ip_address":"","ucode":"8742A5FD05538F","user_header":"https://static001.geekbang.org/account/avatar/00/12/28/8f/d3fe98f4.jpg","comment_is_top":false,"comment_ctime":1540818404,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5835785700","product_id":100007101,"comment_content":"一致性哈希的另一种描述，老师讲解得很生动","like_count":1,"discussions":[{"author":{"id":1137046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/59/96/11671504.jpg","nickname":"蔡箐菁","note":"","ucode":"550B54F2550718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374076,"discussion_content":"一致性哈希算法貌似和这个不一样吧。。。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620987333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28367,"user_name":"赵梅","can_delete":false,"product_type":"c1","uid":1224246,"ip_address":"","ucode":"6D55E134A8011D","user_header":"https://static001.geekbang.org/account/avatar/00/12/ae/36/680dad56.jpg","comment_is_top":false,"comment_ctime":1538061798,"is_pvip":false,"replies":[{"id":"10267","content":"种子里面有","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1538106445,"ip_address":"","comment_id":28367,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833029094","product_id":100007101,"comment_content":"同问，Node new想下载文件1，但它本身并没有文件1，那是通过什么计算出文件1的哈希值的？","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425249,"discussion_content":"种子里面有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538106445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17569,"user_name":"kevinwang527","can_delete":false,"product_type":"c1","uid":1140629,"ip_address":"","ucode":"3EE30B2E3ADD8C","user_header":"https://static001.geekbang.org/account/avatar/00/11/67/95/5bd8911f.jpg","comment_is_top":false,"comment_ctime":1532752137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827719433","product_id":100007101,"comment_content":"老师的每篇文章我都会看三遍，虽然有些文章没有留言，那是因为平常用的比较少。我们现在做的游戏就是分布式的，然后，用hash来算出每个节点的位置。因为游戏服务器的节点一般都有状态的，所以要保证hash值的一致。这里面算距离的方法很值得借鉴。<br><br>第二个问题 DNS","like_count":1},{"had_liked":false,"id":13685,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1529927875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824895171","product_id":100007101,"comment_content":"我也想要网络的图解","like_count":1},{"had_liked":false,"id":13649,"user_name":"网络已断开","can_delete":false,"product_type":"c1","uid":1062138,"ip_address":"","ucode":"FBE0527E62A82B","user_header":"","comment_is_top":false,"comment_ctime":1529899258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824866554","product_id":100007101,"comment_content":"老师，在dht网络中如何办法保证一个文件哈希值能找到一个node的哈希与之对应；或者只是找相似，找临近？","like_count":1},{"had_liked":false,"id":13626,"user_name":"言志","can_delete":false,"product_type":"c1","uid":1122185,"ip_address":"","ucode":"4ABEB6ABB3A6CC","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/89/de5b1fab.jpg","comment_is_top":false,"comment_ctime":1529886205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824853501","product_id":100007101,"comment_content":"回答问题：<br>1、有应用在区块链网络上。<br>2、域名映射IP通过DNS查询获得。","like_count":1},{"had_liked":false,"id":356807,"user_name":"白小菜","can_delete":false,"product_type":"c1","uid":1154013,"ip_address":"浙江","ucode":"1236BACECD5B15","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/dd/6851e7cc.jpg","comment_is_top":false,"comment_ctime":1662604834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662604834","product_id":100007101,"comment_content":"去中心化真复杂呀，不过也是大势所趋","like_count":0},{"had_liked":false,"id":349750,"user_name":"| ~浑蛋~","can_delete":false,"product_type":"c1","uid":3024820,"ip_address":"","ucode":"B6904B44DFA805","user_header":"https://static001.geekbang.org/account/avatar/00/2e/27/b4/df65c0f7.jpg","comment_is_top":false,"comment_ctime":1656306915,"is_pvip":true,"discussion_count":0,"race_medal":3,"score":"1656306915","product_id":100007101,"comment_content":"问题1：没看明白问题啥意思😂<br>问题2：dns协议<br>.torrent文件去哪找","like_count":0},{"had_liked":false,"id":347190,"user_name":"justorez","can_delete":false,"product_type":"c1","uid":1822733,"ip_address":"","ucode":"071D8394E62D90","user_header":"https://static001.geekbang.org/account/avatar/00/1b/d0/0d/752ff95f.jpg","comment_is_top":false,"comment_ctime":1653807654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653807654","product_id":100007101,"comment_content":"关于 99% 的问题，来自比特彗星的解答：<br><br>1. torrent文件发布时间较早，已经没有完整的BT种子可供下载了，BT任务健康度小于100%。这种情况下除非有人补种，或有人提供长效种子上传，或在emule插件里能够找到相同文件继续下载，否则永远无法完成。不过对于视频文件而言，差一点点数据基本不会影响正常播放了。<br><br>2. BT任务里除了有视频文件外还有一些很小的图片或文本文件，视频文件已经通过长效种子很快下载完成了，图片等小文件没有长效种子源，下载很慢。这种情况可以选择不下载图片等小文件。<br><br>3. 早期BitComet软件的bug。对于相邻文件边界处的分块，早期BitComet软件可能会由于下载到错误数据而反复重新下载，造成长时间无法完成。对这种情况首先推荐升级到最新版BitComet。对旧版BitComet可以尝试先停止任务后再重新启动任务，也能提高快速下载完成的几率。","like_count":0},{"had_liked":false,"id":340568,"user_name":"林克盛","can_delete":false,"product_type":"c1","uid":2024163,"ip_address":"","ucode":"C5102D7A5F1AD6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJW8PREFPamKa8z1fgiaGib83l1IV6grtSxESQz832BACELvB8pDoz9icGuU4R3lbwlulzHH0L1RokZQ/132","comment_is_top":false,"comment_ctime":1648908939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648908939","product_id":100007101,"comment_content":"想到了git和svn的关系","like_count":0},{"had_liked":false,"id":332835,"user_name":"深水蓝","can_delete":false,"product_type":"c1","uid":1637933,"ip_address":"","ucode":"3E3B195DE54DE1","user_header":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","comment_is_top":false,"comment_ctime":1643712171,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1643712171","product_id":100007101,"comment_content":"“每个 DHT node 不会有全局的知识”，那这个 DHT 的第1个节点是是怎么知道所有的信息的呢？","like_count":0,"discussions":[{"author":{"id":1154013,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9b/dd/6851e7cc.jpg","nickname":"白小菜","note":"","ucode":"1236BACECD5B15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586912,"discussion_content":"找第一个节点知道的节点，依次遍历。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662605039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322499,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1637422652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637422652","product_id":100007101,"comment_content":"DHT有点像OSPF、RIP。","like_count":0},{"had_liked":false,"id":315939,"user_name":"sam700000","can_delete":false,"product_type":"c1","uid":1069133,"ip_address":"","ucode":"C2ABDDC56B2D50","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/4d/db91e218.jpg","comment_is_top":false,"comment_ctime":1634064960,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634064960","product_id":100007101,"comment_content":"当年用emule的各种二次改版下资源，就知道了这个去中心化的kad网络，不过它还带了个ed2k，那时候用的是xtreme和scarangel，2006年的时候吧，还在上高中，那时候感觉这个东西真的好酷，还自带IRC聊天室，还为了独立ip的highIP打电话给电信，现在也还能用，只是网络里的人少了，kad搜不到啥了，那时候经常看别人的共享资源来着，还有vagga和迅雷那类都算是吸血骡，还有veryCD也没了，时间好快","like_count":0},{"had_liked":false,"id":311090,"user_name":"小然","can_delete":false,"product_type":"c1","uid":2359008,"ip_address":"","ucode":"D0D85AAA1246BC","user_header":"https://static001.geekbang.org/account/avatar/00/23/fe/e0/5b0db40e.jpg","comment_is_top":false,"comment_ctime":1631069130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631069130","product_id":100007101,"comment_content":"启动BT软件就加入了网络吗？还是开始下载的时候加入？","like_count":0},{"had_liked":false,"id":304857,"user_name":"吃点啥","can_delete":false,"product_type":"c1","uid":2719816,"ip_address":"","ucode":"7EBF8943E4B9E5","user_header":"https://static001.geekbang.org/account/avatar/00/29/80/48/6fe342fa.jpg","comment_is_top":false,"comment_ctime":1627641754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627641754","product_id":100007101,"comment_content":"学习","like_count":0},{"had_liked":false,"id":296339,"user_name":"赵亮","can_delete":false,"product_type":"c1","uid":1072864,"ip_address":"","ucode":"053E4C61B77C23","user_header":"https://static001.geekbang.org/account/avatar/00/10/5e/e0/e45b7839.jpg","comment_is_top":false,"comment_ctime":1622904105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622904105","product_id":100007101,"comment_content":"哈希的碰撞概率不是很低么？为啥文件的哈希能和某个node一样？","like_count":0},{"had_liked":false,"id":291122,"user_name":"大方方","can_delete":false,"product_type":"c1","uid":1354013,"ip_address":"","ucode":"621AD8F1485753","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6cyOoRd2dROgiblAJkW6RLhUyH1wwU0NNibIIuV930eQ9TiaNT41K61kBSVkvYoDYg7mJtuEoCQY1awBmV0WW6BFg/132","comment_is_top":false,"comment_ctime":1620035799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620035799","product_id":100007101,"comment_content":"那个百分之99卡住 很有可能是下载软件自动过滤掉了一些小的说明文件或者附带的无用文件，比如广告图片或者txt之类，导致原始链接下线后 这部分几十K的文件在网络上集体丢失。","like_count":0},{"had_liked":false,"id":291120,"user_name":"大方方","can_delete":false,"product_type":"c1","uid":1354013,"ip_address":"","ucode":"621AD8F1485753","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6cyOoRd2dROgiblAJkW6RLhUyH1wwU0NNibIIuV930eQ9TiaNT41K61kBSVkvYoDYg7mJtuEoCQY1awBmV0WW6BFg/132","comment_is_top":false,"comment_ctime":1620035487,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620035487","product_id":100007101,"comment_content":"加入DHT网络后 可以通过询问网络里的人更新联系地址， 那么种子初始的地址列表是怎么规划确定的呢？另外， 假设种子列表里只有10个地址 ，四五年后 这10个地址都不可用了， 整个DHT网络是不是就丢了？ 是不是要定期制作新的种子以维护DHT网络的下载入口？ ","like_count":0},{"had_liked":false,"id":286433,"user_name":"Wangyf","can_delete":false,"product_type":"c1","uid":2226219,"ip_address":"","ucode":"349068A07CB1D4","user_header":"https://static001.geekbang.org/account/avatar/00/21/f8/2b/339660f1.jpg","comment_is_top":false,"comment_ctime":1617295947,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1617295947","product_id":100007101,"comment_content":"介....我看到这一节的标题，干净点进来看看为嘛卡在99%，因为我这几天真就是经常，剩不到1M了，速度变成0了，结果....结果怎么没个解释啊😓😓","like_count":0},{"had_liked":false,"id":284835,"user_name":"Geek_8866d4","can_delete":false,"product_type":"c1","uid":2435064,"ip_address":"","ucode":"34EAED72C2FAD0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ia5NFICdEuzaQ8Vib0depvkB6UmxPBFib51aClSJYfCIa7tn2nXauddwxDvbxYuQ9UeRGVICLfTtDJysnDJ5EfQcg/132","comment_is_top":false,"comment_ctime":1616490097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616490097","product_id":100007101,"comment_content":"根据DHT的ID,而没有ip地址，怎么链接其他的peer呢<br>","like_count":0},{"had_liked":false,"id":277121,"user_name":"吃鱼","can_delete":false,"product_type":"c1","uid":1812912,"ip_address":"","ucode":"848835584F6099","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/b0/0c701ef3.jpg","comment_is_top":false,"comment_ctime":1612266224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612266224","product_id":100007101,"comment_content":"“DHT node 的 ID 是和哈希值相同长度的串”这句话的意思就是只是长度相同内容不相同，<br>举例文件哈希值为abc<br>node 的 ID值为 bcd<br>他们的长度相等都是3<br>但是根据下文的意思 好像不只是长度相同，内容也相同。纠结了半天<br>","like_count":0},{"had_liked":false,"id":276917,"user_name":"choice","can_delete":false,"product_type":"c1","uid":2365806,"ip_address":"","ucode":"AF8D36D7084CA1","user_header":"https://static001.geekbang.org/account/avatar/00/24/19/6e/6c6fbea8.jpg","comment_is_top":false,"comment_ctime":1612175400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612175400","product_id":100007101,"comment_content":"1、DHT node中保存的信息有：<br>（1）自己下载过的文件<br>（2）文件哈希值和自己ID接近的文件索引<br>（3）保存一部分其他node的联系信息，按距离分层保存<br>2、计算文件哈希值知道哪些node保存有要下载文件的索引，比如是node C，如果torrent文件中没有node C的地址，只能通过torrent文件中已知的node地址来**查找**node C，如果没有node C或者不可用，就寻找ID接近的node得到文件索引，从而知道去哪个node下载文件。","like_count":0},{"had_liked":false,"id":264192,"user_name":"薯拾","can_delete":false,"product_type":"c1","uid":1698663,"ip_address":"","ucode":"38F8BD4C45CF49","user_header":"https://static001.geekbang.org/account/avatar/00/19/eb/67/840e4179.jpg","comment_is_top":false,"comment_ctime":1606376309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606376309","product_id":100007101,"comment_content":"“PING 一下列表最上面，也即最旧的一个节点。如果 PING 通了，将旧节点挪到列表最底，并丢弃新节点，老朋友还是留一下”前面提到是按照联系时间倒序排列，那么列表最上面应该是最新的一个节点呀？这里描述是不是有点问题","like_count":0},{"had_liked":false,"id":259583,"user_name":"军秋","can_delete":false,"product_type":"c1","uid":1108456,"ip_address":"","ucode":"D73025209CBFAE","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e8/31df61df.jpg","comment_is_top":false,"comment_ctime":1604761025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604761025","product_id":100007101,"comment_content":"去中心化的分布式哈希算法，这不是git的存储策略吗？","like_count":0},{"had_liked":false,"id":237831,"user_name":"韦","can_delete":false,"product_type":"c1","uid":1066380,"ip_address":"","ucode":"97F369619A45C4","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/8c/f3fa78f0.jpg","comment_is_top":false,"comment_ctime":1595984138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595984138","product_id":100007101,"comment_content":"如果id是随机的，那么就是列表里存了id和ip的映射关系吧","like_count":0},{"had_liked":false,"id":230812,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1510495,"ip_address":"","ucode":"C6FC61A90F202B","user_header":"https://static001.geekbang.org/account/avatar/00/17/0c/5f/4cbcbfb9.jpg","comment_is_top":false,"comment_ctime":1593501009,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593501009","product_id":100007101,"comment_content":"一个新来的节点怎么加入这个社交网络呢？通过什么方法认识到第一个网络中的人？","like_count":0},{"had_liked":false,"id":224614,"user_name":"意无尽","can_delete":false,"product_type":"c1","uid":1234489,"ip_address":"","ucode":"DA179626C46B81","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/39/6b45878d.jpg","comment_is_top":false,"comment_ctime":1591469892,"is_pvip":false,"replies":[{"id":"83021","content":"是呀，互惠互利","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1591754462,"ip_address":"","comment_id":224614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591469892","product_id":100007101,"comment_content":"不晓得为啥，看了这个后，觉得用种子下载很不安全啊，P2P 的下载方式，虽然是快了，但是别人也可以从你这里下载😳。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497540,"discussion_content":"是呀，互惠互利","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591754462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218104,"user_name":"儘管如此世界依然美麗","can_delete":false,"product_type":"c1","uid":1638731,"ip_address":"","ucode":"B831CF4CF2561A","user_header":"https://static001.geekbang.org/account/avatar/00/19/01/4b/a276c1d0.jpg","comment_is_top":false,"comment_ctime":1589715909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589715909","product_id":100007101,"comment_content":"第一个问题就不是很清楚了，如果老师方便的话，可以解答一下吗？【redis的集群算不算？】<br>第二个问题是：通过DNS协议。或者通过修改本机的hosts，来添加映射","like_count":0},{"had_liked":false,"id":215585,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1589025186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589025186","product_id":100007101,"comment_content":"1、tracker模式下怎么就近找peer？因为要去它那下载文件。<br>2、文件的哈希是针对文件名吧","like_count":0},{"had_liked":false,"id":213914,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1237471,"ip_address":"","ucode":"5F6D82F118C6F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/df/6e6a4c6b.jpg","comment_is_top":false,"comment_ctime":1588588847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588588847","product_id":100007101,"comment_content":"请教老师两个问题<br>1.在dht中，结点和文件的hash值算出来有可能是都不一样的，那他们怎么对应起来？<br>2. 为什么不把相同hash的文件放在当前结点？那不是可以省去找相邻结点的麻烦？","like_count":0},{"had_liked":false,"id":213351,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1588391538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588391538","product_id":100007101,"comment_content":"首先是第二个问题,对于域名和Ip的解析,肯定是DNS在工作,同样DNS和P2P类似,都是自己维护了一个DNS列表,如果没有其分布式上的本地DNS请求,然后依次的查询","like_count":0},{"had_liked":false,"id":199093,"user_name":"wsjx","can_delete":false,"product_type":"c1","uid":1039932,"ip_address":"","ucode":"5A89612ADF71CD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/3c/b1fe1f52.jpg","comment_is_top":false,"comment_ctime":1585478597,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585478597","product_id":100007101,"comment_content":"p2p协议数据包有特定格式吗，抓包每次都不一样","like_count":0},{"had_liked":false,"id":198839,"user_name":"这得从我捡到一个鼠标垫开始说起","can_delete":false,"product_type":"c1","uid":1272321,"ip_address":"","ucode":"2FF4347B4E7A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","comment_is_top":false,"comment_ctime":1585470149,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585470149","product_id":100007101,"comment_content":"p2p越来越不好用了","like_count":0},{"had_liked":false,"id":193701,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1584950624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584950624","product_id":100007101,"comment_content":"这一节讲的也是生活中常用的下载文件操作，从HTTP或FTP下载到P2P下载，前进的方向也是以速度为原则。在P2P中，第一个是元数据为中心化的，数据是分布式的，缺点是元数据服务器是整个下载速度的瓶颈；为了更快地下载速度，元数据和数据都设计成分布式，通过DHT来实现，其中细节还是很复杂的，通过老师的比喻，还是更接近这个知识一点了。","like_count":0},{"had_liked":false,"id":189141,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1584459363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584459363","product_id":100007101,"comment_content":"P2P 协议促使大家一起分享，都是贡献者也是受益者，只要达到一定的规模，个人来去自由，网络稳定存在。<br>算法尽可能让大家互补，几个节点组合出一个完整的文件，另外几个节点又能完整组合出来，不依赖某一个节点。","like_count":0},{"had_liked":false,"id":189102,"user_name":"chenzesam","can_delete":false,"product_type":"c1","uid":1045011,"ip_address":"","ucode":"34E76BB9C7618D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/13/3ee5a9b4.jpg","comment_is_top":false,"comment_ctime":1584455402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584455402","product_id":100007101,"comment_content":"原来是这样的P2P","like_count":0},{"had_liked":false,"id":185924,"user_name":"土豆小小","can_delete":false,"product_type":"c1","uid":1457246,"ip_address":"","ucode":"5621EEDE50EA48","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVZRHorm7z67yJxOCpYWJESPfhia00RDg4oicvPuyCwTKln2BFRMiahOKz9z22RnnEmickA64bHdB7pA/132","comment_is_top":false,"comment_ctime":1583725238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583725238","product_id":100007101,"comment_content":"如果中途有设备下线，是不是重新找最近的资源点，然后交换资源信息，根据片段来继续下载","like_count":0},{"had_liked":false,"id":184834,"user_name":"","can_delete":false,"product_type":"c1","uid":1643028,"ip_address":"","ucode":"","user_header":"","comment_is_top":false,"comment_ctime":1583416087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583416087","product_id":100007101,"comment_content":"99%卡住的原因是什么呢，似乎没讲<br>","like_count":0},{"had_liked":false,"id":182099,"user_name":"渣渣","can_delete":false,"product_type":"c1","uid":1407538,"ip_address":"","ucode":"659B430BD4C22B","user_header":"https://static001.geekbang.org/account/avatar/00/15/7a/32/27a8572a.jpg","comment_is_top":false,"comment_ctime":1582709078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582709078","product_id":100007101,"comment_content":"第一个问题，就近原则或者多备可以吗，就近原则，如果tracker中心服务器挂了，就找一台最近的，多备就是如果tracker中心服务器挂了，启用备用的服务器。<br>第二个问题，域名到IP的解析是通过DNS。","like_count":0},{"had_liked":false,"id":175158,"user_name":"猫头鹰波波","can_delete":false,"product_type":"c1","uid":1019787,"ip_address":"","ucode":"573AC477FA869C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/8b/9080f1fa.jpg","comment_is_top":false,"comment_ctime":1580575345,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580575345","product_id":100007101,"comment_content":"请教一下，P2P是在应用层级别的协议么，下层是基于UDP么","like_count":0},{"had_liked":false,"id":173090,"user_name":"Geek_d26e63","can_delete":false,"product_type":"c1","uid":1809676,"ip_address":"","ucode":"24125CED20B6DF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fBOybgVTWXYXxaicaVEysXCjkKT13dX7icAj96KibJ815mia1FvYro9KcbA3xtwnIxmPJ38Vt6rmg6vp0auGKel93A/132","comment_is_top":false,"comment_ctime":1579422735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579422735","product_id":100007101,"comment_content":"k-bucket 2从倒数第二位开始不同？01000 和 01001不是最后一位不同吗","like_count":0},{"had_liked":false,"id":171970,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1579059288,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579059288","product_id":100007101,"comment_content":"如果一个节点的 ID，前面所有位数都相同，从倒数第 2 位开始不同，这样的节点只有 2 个，即 01000 和 01001，与基础节点的异或值为 00010 和 00011，即距离范围为 2 和 3；对于 01010 而言，这样的节点归为“k-bucket 2”。<br><br>刘超老师你好，从倒数第二位开始不同，对于01010来说不是有00011，00000，00001这3个么？为什么文中说只有2个？","like_count":0},{"had_liked":false,"id":157366,"user_name":"OneDy","can_delete":false,"product_type":"c1","uid":1160082,"ip_address":"","ucode":"BF0705E486994F","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/92/6a20da3f.jpg","comment_is_top":false,"comment_ctime":1575123027,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575123027","product_id":100007101,"comment_content":"似乎参考了不少wiki上的信息，看到上面还提到了：<br>1.节点间使用UDP进行通信；通过文件ID值可以锁定文件hash值或者关键字（keywords）.文件名称搜索可以通过关键字查询，而每一个关键字以哈希值的形式存在网络内，根据关键字对k临近多个节点查询 <br>2.节点信息中包含RTT(往返时间)，当一个查询超时时，启动下一个查询；对于热点查询，检索器将信息存储在k临近节点上，减小中心节点负载<br>3.节点的添加最初需要经过引导，在这个过程里可以知道另一个节点的ip和端口，并计算一个唯一且随机的ID","like_count":0},{"had_liked":false,"id":156643,"user_name":"Geek_ty","can_delete":false,"product_type":"c1","uid":1587280,"ip_address":"","ucode":"F8178B6B09D628","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epZhOmpZpicOzalVU7kibd59dMJc25N9cfGu9icBAIUPzYNYDedtzlYHZBiazaYiadgqvlotrjM4CA6KOQ/132","comment_is_top":false,"comment_ctime":1574929301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574929301","product_id":100007101,"comment_content":"本文对p2p的DHT部分kAD算法的讲解颇为细致了，至于整体的P2P下载其实欠缺还挺多的，好多地方没有提到","like_count":0},{"had_liked":false,"id":132693,"user_name":"Roger","can_delete":false,"product_type":"c1","uid":1319960,"ip_address":"","ucode":"78EA978779F92E","user_header":"https://static001.geekbang.org/account/avatar/00/14/24/18/8edc6b97.jpg","comment_is_top":false,"comment_ctime":1568194895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568194895","product_id":100007101,"comment_content":"老师，在DHT网络是如何查找朋友的中，当A在自己的k-bucket 5中没有找到B时，随便找一个C，因为C的ID第5位和B的相同，这个地方为什么A、B之间的距离会缩短一半呢？","like_count":0},{"had_liked":false,"id":132689,"user_name":"Roger","can_delete":false,"product_type":"c1","uid":1319960,"ip_address":"","ucode":"78EA978779F92E","user_header":"https://static001.geekbang.org/account/avatar/00/14/24/18/8edc6b97.jpg","comment_is_top":false,"comment_ctime":1568193989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568193989","product_id":100007101,"comment_content":"在DHT网络是如何查找朋友中，当A的k-bucket 5没有B是，随便找一个C，因为C的第5位和B相同，这样只能说明B到C的距离小于2^4，怎么就是A到B的距离变成了2^4？","like_count":0},{"had_liked":false,"id":109595,"user_name":"celia","can_delete":false,"product_type":"c1","uid":1414347,"ip_address":"","ucode":"787AAFB605A378","user_header":"https://static001.geekbang.org/account/avatar/00/15/94/cb/b9254fd7.jpg","comment_is_top":false,"comment_ctime":1562063166,"is_pvip":false,"replies":[{"id":"48810","content":"哈哈","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567498188,"ip_address":"","comment_id":109595,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562063166","product_id":100007101,"comment_content":"感觉老师讲的freestyle","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456482,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567498188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104996,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1560904421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560904421","product_id":100007101,"comment_content":"P2P协议，1 ftp协议和http协议，都是基于tcp协议，客户端，服务端的模式，1.1ftp协议，有2个连接，一个是控制连接，一个是数据连接，控制连接，是服务端开放21端口，客户端发起连接命令并返回服务器的应答，命令有list，reter，store，数据连接，每当传输文件时需要创建一个数据连接。1.2 ftp有两种工作模式，1.21种是主动模式，一种是被动模式，主动模式是客户端打开端口N向服务端的21端口发起连接，同时开放N+1端口监听，服务端接收到请求，主动向N+1端口连接，然后传输数据1.22 客户端向服务端21端口发起PASV命令，服务端向N端口返回端口P，客户端接收到端口P之后，N+1端口向p端口发起连接，传输数据。2 P2P peer to peer，2.1与传统的客户端服务端模式相比，资源存到多个点上，peer不受服务器带宽影响，建立点对点的连接，只要找到有资源的peer，不去服务器，直接去peer下载，一旦下载了文件，就成了peer的一员，下载的同时，也会上传，其他就近的点也可以从你这儿下载。2.2 .torrent文件 由2部分组成 tracker url和文件信息，文件信息由info文件比如文件目录，文件大小，文件，name字段，它是顶层目录的名字，每个段的大小，.torrent文件会将下载文件分成多个段，分段下载。段哈希值，将各个段拼接起来。2.3 下载的时候，首先解析.torrent文件的tracker url，拿到之后去tracker服务器获取到peer地址，然后和peer进行交换，分别把自己有的和没有的都列出来，只取自己没有的，取到之后对每一个块进行哈希验证，如果一致则使用，不一致也放弃。这种方式非常依赖tracker服务器，他需要收集下载者信息，并提供给peer，tracker服务器一旦瘫痪，整个用不了。3去中心化网络DHT，3.1每个加入的peer，都负责存储网络里的资源信息和其他成成员的联系信息，相当于所有peer构成了一个强大的分布式数据库，DHT的协议kademlia协议，一个Bittorrent启动之后，有2个角色，一个是peer，监听tcp端口，上传和下载文件，一个是DHT node，监听UDP的端口，通过这个角色，加入DHT的网络，一个DHT网络里，每一个DHT Node，都有一个id，每个DHT都保存有一些索引，哪些文件保存在哪个节点上。3.2 哈希值 每个文件都可以计算出一个哈希值，DHT node的id是和哈希值相同的串，算法规定，如果有文件的哈希值和DHT node的id一致，则这个DHT node知道从哪里下载，除了一模一样的DHT node知道，和哈希值接近的N个DHT node也知道，新节点上线，首先加入网络，种子.torrent文件不是tracker url的地址了，而是list的node地址，DHT node只要找到一个node，就加入进DHT网络，new node想访问文件1，计算哈希值c1，找到文件C，会问能访问的节点是否知道文件C，如果不知道再问朋友的朋友节点，总有知道的，返回文件1要找B F E，new node和B进行 peer to peer的连接，同时下载文件1之后，也会加入到文件1的列表，可以被其他列表下载，同时，new node的哈希值相近的，文件索引也能存某些文件的下载地址。node id和哈希值160bits20个字节大小，相近指的是异或值，跟距离远近没关系，DHT是按照层来维护的，字节位数差最后一位的在第一层，差倒数第二位的在第二层，越到外层，节点越多。3.3DHT的朋友圈如何查找，首先通过异或，找到异或值，找到最高位，如果是第五位，则去第五层找，kademlia是通过折半查找的方式找节点，时间复杂度logN。Kademlia的四个指令，ping，STORE，FIND_NODE，FIND_VALUE，3.4 朋友圈的更新 执行上面的4个命令都会更新，最近联系的放在最近联系的位置，如果朋友圈满了，则把最老的ping下，ping通则丢弃最新的，ping 不通则丢弃老的。","like_count":0},{"had_liked":false,"id":100943,"user_name":"cheetah","can_delete":false,"product_type":"c1","uid":1482596,"ip_address":"","ucode":"76D54EF2053B5E","user_header":"https://static001.geekbang.org/account/avatar/00/16/9f/64/a0a0904d.jpg","comment_is_top":false,"comment_ctime":1559693324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559693324","product_id":100007101,"comment_content":"看晕了，继续加油","like_count":0},{"had_liked":false,"id":93902,"user_name":"谢晋","can_delete":false,"product_type":"c1","uid":1074435,"ip_address":"","ucode":"BFD296917C4888","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/03/973b24ec.jpg","comment_is_top":false,"comment_ctime":1557657367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557657367","product_id":100007101,"comment_content":" 老师这节课程把p2p的网络原理，讲解的非常透彻，很过瘾。ipfs等分布式云存储技术也是基于p2p协议。 老师思考提：域名通过DNS解析，然后换成本地地址？找到对应本地端口吗","like_count":0},{"had_liked":false,"id":89729,"user_name":"圆嗝嗝","can_delete":false,"product_type":"c1","uid":1123048,"ip_address":"","ucode":"6410A72C017C88","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e8/8e154de6.jpg","comment_is_top":false,"comment_ctime":1556250902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556250902","product_id":100007101,"comment_content":"如何从网络中下载一个文件？<br>最简单的方式是通过HTTP&#47;FTP从服务器端下载。但是这两种方式受制于单一服务器的带宽压力。<br>为解决这个问题，P2P出现了，它将资源分散地存储在多台设备上。<br>P2P有两种处理方式：<br>· 种子文件：BT客户端解析.torrent文件得到tracker服务器地址，tracker服务器将其他下载者的IP提供给下载者，交换双方数据。但是并不是完全去中心化的，tracker服务器为中心服务器，一旦失效，BT工具就无法正常工作。<br>· 分布式哈希表的去中心化网络：下载内容以及提供下载内容的IP地址等信息分散存储在多台设备上，每台设备都没有整个网络的信息。","like_count":0},{"had_liked":false,"id":85850,"user_name":"Lhyy","can_delete":false,"product_type":"c1","uid":1488420,"ip_address":"","ucode":"1AD187C98D301D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b6/24/187c7005.jpg","comment_is_top":false,"comment_ctime":1555257178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555257178","product_id":100007101,"comment_content":"Gossip 算法和这个DHT很像","like_count":0},{"had_liked":false,"id":84551,"user_name":"咕咕咕","can_delete":false,"product_type":"c1","uid":1388479,"ip_address":"","ucode":"5D35932F7118EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/2f/bf/85b957fc.jpg","comment_is_top":false,"comment_ctime":1554874368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554874368","product_id":100007101,"comment_content":"卡在99% 我觉得是要把最后一块块数据 组装成完整的文件吧","like_count":0},{"had_liked":false,"id":81683,"user_name":"千岁寒","can_delete":false,"product_type":"c1","uid":1043771,"ip_address":"","ucode":"58D4F1347F6058","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/3b/daa0ff2d.jpg","comment_is_top":false,"comment_ctime":1554006070,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1554006070","product_id":100007101,"comment_content":"写的非常不错，很短的文章讲清楚了P2P的发展脉络和实现原理，核心的思想还是使用了分布式的架构代替了集中式的架构，但是协议中的诸多细节还是需要深入了解。，刘超老师能不能提供一些这方面的资料。非常感谢","like_count":0},{"had_liked":false,"id":73185,"user_name":"geekYang","can_delete":false,"product_type":"c1","uid":1255232,"ip_address":"","ucode":"B2E50D3BFDE8C6","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/40/ae886719.jpg","comment_is_top":false,"comment_ctime":1551836196,"is_pvip":false,"replies":[{"id":"50276","content":"哈哈哈，我也想知道，搜索番号？","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567838871,"ip_address":"","comment_id":73185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551836196","product_id":100007101,"comment_content":".torrent 文件从哪里获取呢？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441956,"discussion_content":"哈哈哈，我也想知道，搜索番号？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567838871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69616,"user_name":"红猪","can_delete":false,"product_type":"c1","uid":1055976,"ip_address":"","ucode":"889D48A6C6FC28","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/e8/39a3777f.jpg","comment_is_top":false,"comment_ctime":1550797768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550797768","product_id":100007101,"comment_content":"以太坊底层用的就是这个，老师是否有机会讲讲gossip","like_count":0},{"had_liked":false,"id":69088,"user_name":"caohuan","can_delete":false,"product_type":"c1","uid":1256428,"ip_address":"","ucode":"4B092E33F3DF1E","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/ec/af6d0b10.jpg","comment_is_top":false,"comment_ctime":1550658550,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550658550","product_id":100007101,"comment_content":"http 下载大文件 很慢 很卡，因为访问服务器，服务器资源有限，被多个客户端访问，所以给予的下载资源相对较少。<br>p2p 不需要通过服务器传输资源，它是peer to peer的方式，它既包括上传也包含下载的资源。<br>分布式哈希值为文件的对应值。","like_count":0},{"had_liked":false,"id":69076,"user_name":"caohuan","can_delete":false,"product_type":"c1","uid":1256428,"ip_address":"","ucode":"4B092E33F3DF1E","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/ec/af6d0b10.jpg","comment_is_top":false,"comment_ctime":1550656419,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550656419","product_id":100007101,"comment_content":"本篇所得：1.我们在用网时，经常需要下载一些 文件和 安装包、资源，所以 下载一般会用到 http和 FTP的方式，但是http和FTP都是集中式下载，多个客户端 同时在 同一个服务器上下载，会加大 服务器的压力，并且 因为 服务器 和宽带的资源有限，所以下载的速度可能会很慢很卡;2.为解决 下载速度和卡顿，降低服务器的压力，可以采用 P2P的下载方式，它为 非集中 分布式的下载方式，它有二种方法 2.1.依赖于tracker服务器中心化网络，它为元数据集中，文件数据分散，可以在客户端间相互传送 客户请求的数据资源 2.2.基于分布式的哈希算法，它为元数据和文件数据全部分散的方式，也为分布式下载。<br><br>回答老师的问题：1.下载除了去中心化分布式 哈希算法，还可以把文件 和资源 上传到 云端，云端为 分布式系统，然后在客户端 快速下载，不知道是否是老师的出题的初衷，不对处 请指正。<br>2.域名 转化为IP，应该 是 应用相应的算法 指定规则，然后 运用该规则 把 域名转为IP，这只是我的猜测，可能不对，接着听刘老师后面的正确解释。","like_count":0},{"had_liked":false,"id":42960,"user_name":"静静聆听","can_delete":false,"product_type":"c1","uid":1263932,"ip_address":"","ucode":"0A8600CB928EFE","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","comment_is_top":false,"comment_ctime":1543119398,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543119398","product_id":100007101,"comment_content":"寻址的时候，有个问题，就是如果a通过地址的一半下去找b，他是怎么知道那条线上就有b呢，如果b在另一条线上呢？那是否31，15，7，这样的折半查找就找不到了。","like_count":0},{"had_liked":false,"id":26437,"user_name":"anzaikk","can_delete":false,"product_type":"c1","uid":1188645,"ip_address":"","ucode":"9EC0AE21810703","user_header":"https://static001.geekbang.org/account/avatar/00/12/23/25/fe87906a.jpg","comment_is_top":false,"comment_ctime":1537600514,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1537600514","product_id":100007101,"comment_content":"这一节感觉很难，还在我学了异或运算，不然更看不懂，小白一个","like_count":0},{"had_liked":false,"id":24310,"user_name":"xuery","can_delete":false,"product_type":"c1","uid":1027584,"ip_address":"","ucode":"F461B61BE06131","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/00/025f37e7.jpg","comment_is_top":false,"comment_ctime":1536895960,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1536895960","product_id":100007101,"comment_content":"DHT理解：当某个新的节点X加入DHT网络时，想要下载文件1，先计算出文件1的hash值--&gt;得到存储它在哪些节点信息的节点id，假设为节点Y（当然也可能是取与Y相近的节点）--&gt;X根据Y节点的id开始查找Y（采用K-bucket 二分查找算法）--&gt;找到节点Y，从节点Y中查找存储文件1的节点列表，选择其中一个节点Z--&gt;节点X与节点Z建立peer连接，开始下载文件1","like_count":0},{"had_liked":false,"id":22314,"user_name":"July","can_delete":false,"product_type":"c1","uid":1005384,"ip_address":"","ucode":"553873BE26CDA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/48/3da605c6.jpg","comment_is_top":false,"comment_ctime":1535596871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535596871","product_id":100007101,"comment_content":"在DHT网络中，node节点之间的查找是通过UDP协议吗？","like_count":0},{"had_liked":false,"id":20261,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1534338360,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1534338360","product_id":100007101,"comment_content":"这一节分布式去中心节点的方法讲解，一头雾水，没有接触过，能给推荐本协议的书再去了解一下吗？？？？不胜感激","like_count":0},{"had_liked":false,"id":19886,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1534136185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534136185","product_id":100007101,"comment_content":"有一个问题请教下，节点id是个随机数，那两个节点id重复了怎么办","like_count":0},{"had_liked":false,"id":18980,"user_name":"kh.","can_delete":false,"product_type":"c1","uid":1069836,"ip_address":"","ucode":"C7AE02DF043456","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/0c/6feb3732.jpg","comment_is_top":false,"comment_ctime":1533632000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533632000","product_id":100007101,"comment_content":"如果文件hash对应的持有知识的node段中没有命中任何一个设备，这个文件对象要怎么发现？","like_count":0},{"had_liked":false,"id":15347,"user_name":"Summer___J","can_delete":false,"product_type":"c1","uid":1135471,"ip_address":"","ucode":"FF53E15E3FC267","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/6f/6051e0f1.jpg","comment_is_top":false,"comment_ctime":1531135845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531135845","product_id":100007101,"comment_content":"这节听得太懵了……","like_count":0},{"had_liked":false,"id":14988,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1530787730,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1530787730","product_id":100007101,"comment_content":"想问一下老师 百度云 这种存储和传输的方式 大致什么样的啊","like_count":0,"discussions":[{"author":{"id":1208981,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/95/5f83598c.jpg","nickname":"Hello World","note":"","ucode":"368D87D53DC58F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549840,"discussion_content":"百度云盘是加了数据重复删除功能，对于相同指纹的文件只存储一份，下载还是HTTP或者客户端TCP，不涉及P2P","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644251775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14535,"user_name":"次郎","can_delete":false,"product_type":"c1","uid":1134620,"ip_address":"","ucode":"446499E130A66A","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/1c/26dc1927.jpg","comment_is_top":false,"comment_ctime":1530516982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530516982","product_id":100007101,"comment_content":"点对点网络，如果都在路由器后边，怎么进行发现喝通信？","like_count":0},{"had_liked":false,"id":14516,"user_name":"zcpromising","can_delete":false,"product_type":"c1","uid":1131966,"ip_address":"","ucode":"4F29D98A436D09","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/be/494010aa.jpg","comment_is_top":false,"comment_ctime":1530502767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530502767","product_id":100007101,"comment_content":"老师，问题一应用在区块链领域，问题二是dns","like_count":0},{"had_liked":false,"id":14310,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1530281676,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1530281676","product_id":100007101,"comment_content":"DNS域名解析","like_count":0},{"had_liked":false,"id":14188,"user_name":"一粟","can_delete":false,"product_type":"c1","uid":1058773,"ip_address":"","ucode":"2EE966F3C36B5F","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/d5/0fd21753.jpg","comment_is_top":false,"comment_ctime":1530231652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530231652","product_id":100007101,"comment_content":"求图谱，卡99%是故意的吧，让你买会员😁","like_count":0},{"had_liked":false,"id":14136,"user_name":"小田","can_delete":false,"product_type":"c1","uid":1145858,"ip_address":"","ucode":"DF36968D8A0A3B","user_header":"","comment_is_top":false,"comment_ctime":1530190902,"is_pvip":false,"replies":[{"id":"4794","content":"是的是的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1530289232,"ip_address":"","comment_id":14136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530190902","product_id":100007101,"comment_content":"图谱还是发出来吧 大家都能用上，用礼券奖励也足够了吧","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419881,"discussion_content":"是的是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530289232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14074,"user_name":"张洪阆","can_delete":false,"product_type":"c1","uid":1001954,"ip_address":"","ucode":"CFF7035D0DF059","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/e2/1fad12eb.jpg","comment_is_top":false,"comment_ctime":1530164180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530164180","product_id":100007101,"comment_content":"1.分布式哈希的算法可以用于鉴权，只有全部机器都在线才能通过验证。<br>2.把node id解析成ip，需要类是dns的服务器？是否可以从node id里选出几个用来解析这种映射关系？","like_count":0},{"had_liked":false,"id":14073,"user_name":"张洪阆","can_delete":false,"product_type":"c1","uid":1001954,"ip_address":"","ucode":"CFF7035D0DF059","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/e2/1fad12eb.jpg","comment_is_top":false,"comment_ctime":1530163525,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530163525","product_id":100007101,"comment_content":"DHT node ID 是索引指针，文件哈希是个目标文件的索引","like_count":0},{"had_liked":false,"id":14028,"user_name":"一周思进","can_delete":false,"product_type":"c1","uid":1032125,"ip_address":"","ucode":"00BE5402479B16","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/bd/0c40979f.jpg","comment_is_top":false,"comment_ctime":1530147653,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1530147653","product_id":100007101,"comment_content":"1、区块链<br>2、域名对应的ip地址静态不变的，目前都使用基于udp的dns服务进行域名解析，还有httpdns服务同样用于域名解析，ip地址动态变化的，还会结合ddns服务进行域名解析","like_count":0},{"had_liked":false,"id":14001,"user_name":"winterx","can_delete":false,"product_type":"c1","uid":1067362,"ip_address":"","ucode":"1C526816EED42F","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/62/25b29ebc.jpg","comment_is_top":false,"comment_ctime":1530112578,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1530112578","product_id":100007101,"comment_content":"节点地址是公网地址么","like_count":0},{"had_liked":false,"id":14000,"user_name":"winterx","can_delete":false,"product_type":"c1","uid":1067362,"ip_address":"","ucode":"1C526816EED42F","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/62/25b29ebc.jpg","comment_is_top":false,"comment_ctime":1530112491,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1530112491","product_id":100007101,"comment_content":"有个问题哈，节点一般都没有公网ip，种子里的ip是什么地址？","like_count":0},{"had_liked":false,"id":13941,"user_name":"潇洒的毅小峰","can_delete":false,"product_type":"c1","uid":1118141,"ip_address":"","ucode":"24638DAED92F08","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/bd/7a9b2a0c.jpg","comment_is_top":false,"comment_ctime":1530075650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530075650","product_id":100007101,"comment_content":"老师求图谱啊，一个图谱比啥都重要<br>","like_count":0},{"had_liked":false,"id":13933,"user_name":"梦想启动的蜗牛","can_delete":false,"product_type":"c1","uid":1111602,"ip_address":"","ucode":"781F2A6DA6FEB3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/32/358f9411.jpg","comment_is_top":false,"comment_ctime":1530070759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530070759","product_id":100007101,"comment_content":"老师，是不是同时下载的时候，才把你加入网络，如果你不下载的时候，你有别人需要下载的文件也会从你这下载嘛？","like_count":0},{"had_liked":false,"id":13932,"user_name":"梦想启动的蜗牛","can_delete":false,"product_type":"c1","uid":1111602,"ip_address":"","ucode":"781F2A6DA6FEB3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/32/358f9411.jpg","comment_is_top":false,"comment_ctime":1530070184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530070184","product_id":100007101,"comment_content":"想要图解😂","like_count":0},{"had_liked":false,"id":13828,"user_name":"戴劼 DAI JIE🤪","can_delete":false,"product_type":"c1","uid":1141215,"ip_address":"","ucode":"1993EA58CA7D83","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/df/71563d52.jpg","comment_is_top":false,"comment_ctime":1530009367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530009367","product_id":100007101,"comment_content":"那一个全新的DHT软件怎样才能知道节点的ip地址呢？","like_count":0},{"had_liked":false,"id":13772,"user_name":"pp","can_delete":false,"product_type":"c1","uid":1019303,"ip_address":"","ucode":"2AF45DE1E0B2B3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/a7/1b8cbc80.jpg","comment_is_top":false,"comment_ctime":1529978811,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529978811","product_id":100007101,"comment_content":"1.运用在区块链的记账中<br>2.通过dns查找，先到递归服务器，没有缓存则从根服务器开始到每一层的权威去找","like_count":0},{"had_liked":false,"id":13770,"user_name":"羽毛","can_delete":false,"product_type":"c1","uid":1130940,"ip_address":"","ucode":"A99474C0E7D4AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/bc/13de31c5.jpg","comment_is_top":false,"comment_ctime":1529978000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529978000","product_id":100007101,"comment_content":"求图谱 <br>新加入node怎样加入到网络中的？","like_count":0},{"had_liked":false,"id":13713,"user_name":"帅窝","can_delete":false,"product_type":"c1","uid":1141690,"ip_address":"","ucode":"FAE6358B4877E2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZfxPVYFBlAcP2hEpwnaEe4YHvHmveRM8CIYM5cByFJKdSLwh08a26uwvRvCjUuZg7fUIdia6EM6fZ6tsLbjA86Q/132","comment_is_top":false,"comment_ctime":1529942177,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529942177","product_id":100007101,"comment_content":"我也想要图谱，您讲的确实是深入浅出","like_count":0},{"had_liked":false,"id":13708,"user_name":"日天君","can_delete":false,"product_type":"c1","uid":1029153,"ip_address":"","ucode":"261B255180046B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/21/6d31d152.jpg","comment_is_top":false,"comment_ctime":1529939917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529939917","product_id":100007101,"comment_content":"像Cassandra这种用consistent hashing的哈希环和DHT，FIND_VALUE可以理解成一样的吗<br>第二问我猜是下讲要DNS了吧🌝","like_count":0},{"had_liked":false,"id":13706,"user_name":"晓.光","can_delete":false,"product_type":"c1","uid":1135328,"ip_address":"","ucode":"EC826AE4901235","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/e0/ef42c4ce.jpg","comment_is_top":false,"comment_ctime":1529938841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529938841","product_id":100007101,"comment_content":"1.区块链2.dns","like_count":0},{"had_liked":false,"id":13668,"user_name":"theta","can_delete":false,"product_type":"c1","uid":1043618,"ip_address":"","ucode":"A69A76363463D8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6c5giaHqaFj149HoLN5TLjyfrrIeLX3iaf2ebG7lYxeTHeqWiazJicn7U7u9oiaWM24MrCh9YkpV6Kbg/132","comment_is_top":false,"comment_ctime":1529918286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529918286","product_id":100007101,"comment_content":"以为是占用带宽99％，急死你","like_count":0},{"had_liked":false,"id":13663,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1529911705,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529911705","product_id":100007101,"comment_content":"我现在很期待如何搭建一个实践平台","like_count":0},{"had_liked":false,"id":13662,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1529911653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529911653","product_id":100007101,"comment_content":"请问作者是不是曾经实现过这个协议，讲解如此详细","like_count":0},{"had_liked":false,"id":13651,"user_name":"易轻尘","can_delete":false,"product_type":"c1","uid":1136684,"ip_address":"","ucode":"0D0CB9D6D45A70","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","comment_is_top":false,"comment_ctime":1529901764,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1529901764","product_id":100007101,"comment_content":"貌似一致性hash也是去中心化的一种寻找存储节点的方式，也是通过hash值寻找数据在哪个节点上。虽然元数据的存储方式不同，但是思想上还是有共通之处的。","like_count":0},{"had_liked":false,"id":13648,"user_name":"JerryLuo","can_delete":false,"product_type":"c1","uid":1006681,"ip_address":"","ucode":"7C549DA1F328B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/59/4401c327.jpg","comment_is_top":false,"comment_ctime":1529898564,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529898564","product_id":100007101,"comment_content":"独家网络协议知识图谱<br>我需要这本 葵花宝典","like_count":0},{"had_liked":false,"id":13647,"user_name":"网络已断开","can_delete":false,"product_type":"c1","uid":1062138,"ip_address":"","ucode":"FBE0527E62A82B","user_header":"","comment_is_top":false,"comment_ctime":1529898257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529898257","product_id":100007101,"comment_content":"问题一，区块链的账本同步<br>问题二，层层dns查找<br><br>想要知识图谱","like_count":0},{"had_liked":false,"id":13646,"user_name":"嘉俊","can_delete":false,"product_type":"c1","uid":1105742,"ip_address":"","ucode":"E87A28DF6B55C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/4e/f3c4ff45.jpg","comment_is_top":false,"comment_ctime":1529896201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529896201","product_id":100007101,"comment_content":"哈哈，我想要老师整理的独家网络协议知识图谱。","like_count":0},{"had_liked":false,"id":13633,"user_name":"龚极客","can_delete":false,"product_type":"c1","uid":1060645,"ip_address":"","ucode":"11AADCCD31D53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/25/d2162fce.jpg","comment_is_top":false,"comment_ctime":1529888084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529888084","product_id":100007101,"comment_content":"思考题1，调用域名解析库解析出ip,或者本地hosts文件<br>思考题2，区块链数字货币","like_count":0},{"had_liked":false,"id":13627,"user_name":"咖啡猫口里的咖啡猫🐱","can_delete":false,"product_type":"c1","uid":1036565,"ip_address":"","ucode":"FE2441B3A40375","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/15/7d47de48.jpg","comment_is_top":false,"comment_ctime":1529886648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529886648","product_id":100007101,"comment_content":"我能想到的就是数据分片，，hash取膜id得到数据存放那个分片，，，但是是数据均匀很难保证，数据与数据的关联关系分散，导致查询多个分片，性能低下","like_count":0},{"had_liked":false,"id":13625,"user_name":"瞬","can_delete":false,"product_type":"c1","uid":1018805,"ip_address":"","ucode":"0434845B537643","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/b5/6e93b07b.jpg","comment_is_top":false,"comment_ctime":1529886144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529886144","product_id":100007101,"comment_content":"问题2，dns协议","like_count":0}]}