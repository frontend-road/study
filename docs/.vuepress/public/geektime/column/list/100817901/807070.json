{"id":807070,"title":"04｜动手实战：UI 实现和国产免费大模型接入","content":"<p>你好，我是叶伟民。</p><p>前面几节课，我们已经对RAG的基础概念有了一定的了解。从这节课开始，我们就来动手实战，使用RAG来改造传统的MIS系统。</p><p>学完这节课，同学们将掌握所有RAG应用所必需的基础——接入大模型。我们先从UI和接入大模型开始。</p><h2>UI代码</h2><p>首先，我们来实现UI代码。</p><p>我们在第 1 节课里提过，使用RAG改造传统MIS系统，最终界面应该是后面图里这样。<br>\n<img src=\"https://static001.geekbang.org/resource/image/c6/50/c6f3038fd896c52d69edda6e34d5f150.jpg?wh=2020x740\" alt=\"\"></p><p>为了方便用户，一般来说我们会把这个UI放在首页，让用户一打开应用，就能看到我们这个UI。</p><p>我们看到，我们把传统MIS系统的所有查询、新增、修改、删除页面都整合成上图这么一个页面。所以RAG应用UI部分相对其他软件应用简单很多，代码也少很多。</p><p>UI主要包括三部分：</p><ol>\n<li>对话记录</li>\n<li>发问</li>\n<li>开始新的对话。</li>\n</ol><p>我们先从对话记录部分开始。</p><h3>对话记录部分</h3><p>对话记录部分是指下图中的红框标出的部分。</p><p><img src=\"https://static001.geekbang.org/resource/image/b6/5a/b6854302264725f15ddfd42dd914db5a.jpg?wh=2020x750\" alt=\"\"></p><p>我们打开在第 1 节课使用RAG改造传统MIS系统成果展示、切入点下载的代码，也就是打开<strong>实战案例1\\改造前\\templates\\home\\index.html</strong>文件。</p><p>然后在 <strong>{% block main_content%}</strong> 和 <strong>{% endblock %}</strong> 中间插入对话记录部分的代码。</p><p><img src=\"https://static001.geekbang.org/resource/image/05/70/05d283171d0a8dbf86d5b61df374ea70.jpg?wh=2020x1040\" alt=\"\"></p><pre><code class=\"language-html\">&lt;div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\"&gt;\n    &lt;h3 class=\"h3\"&gt;首页&lt;/h3&gt;\n&lt;/div&gt;\n\n&lt;div class=\"col-sm-10\"&gt;\n{% for current_obj in object_list %}\n    \n    &lt;div&gt;\n    {% if current_obj.role == \"user\" %}\n        你：{{current_obj.content}}\n    {% else %}\n        AI：{{current_obj.处理后content}}\n    {% endif %}\n    &lt;/div&gt;\n    \n{% endfor %}\n&lt;/div&gt;\n</code></pre><!-- [[[read_end]]] --><p>我来带你梳理一下这段代码的重点内容。第6行代码是遍历对话记录里面的每一条。</p><p>然后第9行代码判断当前这条对话记录的角色是否为用户（user）。如果是，则以“你”这个称谓开头。有些UI追求美观度的话，还会把这一行靠右显示。</p><p>然后第11行代码是指如果当前这条对话记录的角色不是用户，也就是AI的话。则以 “AI” 这个称谓开头。同样，为了美观，有些UI会把这一行靠左显示。</p><p>那么第6行代码的object_list从何而来？从数据库里面查询得出。对应的是后面这段后台代码。我们打开文件<strong>实战案例1\\改造前\\home\\views.py</strong> 找到如下位置。</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/9d/7c2c8cebb8e247076d93d5e1bce3ac9d.jpg?wh=2020x1541\" alt=\"\"></p><p>之后，我们在 <strong>def index(request):</strong> 和 <strong>return render(request, “home/index.html”)</strong> 之间插入以下代码。</p><pre><code class=\"language-python\">conversation_list = 对话记录.objects.filter(已结束=False).order_by('created_time')\nreturn render(request, \"home/index.html\",{\"object_list\":conversation_list})\n</code></pre><p>第1行代码是从数据库的对话记录表里面获取已结束字段为False的记录，并且按时间顺序返回。然后通过第2行代码将这些记录传递给页面。</p><p>因为要导入对话记录表，所以我们需要在<strong>实战案例1\\改造前\\home\\views.py文件</strong>的顶部加入后面这段代码。它的作用是导入数据库模型，也就是在第7行“销售入账记录”部分加入对话记录。</p><pre><code class=\"language-python\">from .models import 销售入账记录\n</code></pre><p>加入之后效果如下。</p><pre><code class=\"language-python\">from .models import 对话记录, 销售入账记录\n</code></pre><p>然后我们打开<strong>实战案例1\\改造前\\home\\models.py</strong> 文件。在尾部添加以下代码。</p><pre><code class=\"language-python\">class 对话记录(models.Model):\n&nbsp; &nbsp; id = models.IntegerField(\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;primary_key = True,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;editable = False)\n\n&nbsp; &nbsp; role = models.TextField()\n&nbsp; &nbsp; content = models.TextField(null=True)\n&nbsp; &nbsp; 处理后content = models.TextField(null=True)\n&nbsp; &nbsp; 提交给大模型的playload = models.TextField(null=True)\n&nbsp; &nbsp; 不带入大模型对话中 = models.BooleanField(default=False)\n&nbsp; &nbsp; 已结束 = models.BooleanField(default=False)\n\n&nbsp; &nbsp; created_time = models.DateTimeField(auto_now_add=True)\n&nbsp; &nbsp; lastmodified_time = models.DateTimeField(auto_now=True)\n</code></pre><p>第一个字段（第2行到第4行代码）是记录的id，数据类型为整型，由数据库自动生成。</p><p>第二、三个字段（对应第6、7行代码），分别表示对话模式的角色和内容，这个我们在<a href=\"https://time.geekbang.org/column/article/806130\">第2节课</a>的基础概念里讲过。</p><p>第四个字段（第8行代码）代表处理后的内容，我们后面的课程里再展开。</p><p>第五个字段（第9行代码）对应这节课后面对话模式代码中的playload，意思是在请求中发送到服务器的数据。</p><p>第六个字段（第10行代码），用于标记这条对话记录是否要带入大模型对话中，同样会在后续课程里展开。</p><p>第七个字段（第11行代码）用于标记这条对话记录是否已经结束。当我们点击开始新的对话按钮之后，会将前面所有对话记录的这个字段值设置为True，以表示对话已经结束。</p><p>第八、第九个字段（第13、14行代码）都和时间有关，前者是对话记录发生的时间，我们可以根据它排序显示对话记录，后者是对话记录更新的时间。这两个字段具体的值都由系统自动插入的，不需要我们操心。</p><h3>发问部分</h3><p>发问部分是指下图中的红色部分。</p><p><img src=\"https://static001.geekbang.org/resource/image/60/96/6079bb50afd51a419354b7f0487d3996.jpg?wh=2020x766\" alt=\"\"></p><p>我们在刚才<strong>实战案例1\\改造前\\templates\\home\\index.html</strong> 文件对话部分<strong>最后的一个div之前</strong>，加入发问部分的代码。</p><pre><code class=\"language-python\">&lt;form method=\"POST\"&gt;\n&nbsp; {% csrf_token %}\n&nbsp; &lt;div class=\"form-group row\"&gt;\n&nbsp; &nbsp; &lt;label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\"&gt;输入你的问题&lt;/label&gt;\n&nbsp; &nbsp; &lt;div class=\"col-sm-6\"&gt;\n&nbsp; &nbsp; &nbsp; &lt;input type=\"input\" class=\"form-control\" name=\"question\"&gt;\n&nbsp; &nbsp; &lt;/div&gt;\n&nbsp; &nbsp; &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;提交&lt;/button&gt; &amp;nbsp;\n&nbsp; &lt;/div&gt;\n&lt;/form&gt;\n</code></pre><p>这段代码的第1、6、8行需要你特别留意，这三行构成了发问部分的核心。</p><p>首先第1行是一个HTML表单。这个表单以POST的形式提交。然后第6行是一个输入框。而第8行是一个HTML提交按钮。</p><p>其他代码用于丰富表单和改善交互友好性。比如说，你可以添加校验输入框是否非空的代码，也可以添加通过ajax提交表单并显示等待进度条的代码。</p><p>当点击“提交”按钮之后，将会调用后台的这段代码。我们回到文件<strong>实战案例1\\改造前\\home\\views.py在def index(request):</strong> 和 <strong>conversation_list</strong> 中间添加第2行到第14行代码。</p><pre><code class=\"language-python\">def index(request):\n&nbsp; &nbsp; if request.method == 'POST':\n&nbsp; &nbsp; &nbsp; &nbsp; 用户输入 = request.POST['question']\n\n&nbsp; &nbsp; &nbsp; &nbsp; 查询参数 = 获取结构化数据查询参数(用户输入)\n&nbsp; &nbsp; &nbsp; &nbsp; 查询结果 = None\n&nbsp; &nbsp; &nbsp; &nbsp; if 查询参数 is not None:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 查询结果 = 查询(查询参数)\n\n&nbsp; &nbsp; &nbsp; &nbsp; if 查询结果 is None:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 从数据库查不到相关数据时的操作()\n&nbsp; &nbsp; &nbsp; &nbsp; else:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 根据查询结果回答用户输入(查询结果,用户输入)\n\n&nbsp; &nbsp; conversation_list = 对话记录.objects.filter(已结束=False).order_by('created_time')\n&nbsp; &nbsp; return render(request, \"home/index.html\",{\"object_list\":conversation_list})\n</code></pre><p>这段代码也很好理解，我们来梳理一下主要的运行逻辑。首先第2行代码用来判断是否是表单提交。如果是，则通过第3行代码获取用户的输入，也就是用户的发问。</p><p>第5行代码获取查询参数，第8行代码则会根据查询参数去数据库查询数据，也就是我们前面所说的知识。</p><p>如果能够查询到数据，我们将调用第13行代码根据查询结果回答用户输入。具体结果如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/71/8c/71d201ffce509121484ff79d0f828e8c.jpg?wh=2010x771\" alt=\"\"></p><p>如果没有查询到相关数据，则调用第11行代码。具体结果如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/75/60/75f0e73d94b8a614d6386e4e07545d60.jpg?wh=2020x780\" alt=\"\"></p><p>注意，其中<strong>获取结构化数据查询参数</strong>、<strong>从数据库查不到相关数据时的操作</strong>、<strong>根据查询结果回答用户输入</strong>这几个函数目前还没有添加，我们会在后续章节中添加。</p><h3>开始新的对话部分</h3><p>开始新的对话部分是指下图中的红色部分。</p><p><img src=\"https://static001.geekbang.org/resource/image/f8/91/f8cb8afe40c6ea23a72efda0522b0991.jpg?wh=2010x762\" alt=\"\"></p><p>我们在发问部分代码后面，继续添加代码，开始新的对话部分。</p><pre><code class=\"language-python\">&lt;a href=\"/newtalk\" class=\"btn btn-warning\"&gt;开始新的对话&lt;/a&gt;\n</code></pre><p>我们可以看到，这是一个链接，点击这个链接将会调用以下后台代码。我们回到文件<strong>实战案例1\\改造前\\home\\views.py在def index(request):</strong> 前面添加它。</p><pre><code class=\"language-python\">def newtalk(request):\n&nbsp; &nbsp; 未结束的对话 = 对话记录.objects.filter(已结束=False)\n&nbsp; &nbsp; for current in 未结束的对话:\n&nbsp; &nbsp; &nbsp; &nbsp; current.已结束 = True\n&nbsp; &nbsp; 对话记录.objects.bulk_update(未结束的对话, ['已结束'])\n&nbsp; &nbsp; return redirect(reverse('home:index'))\n</code></pre><p>第2行代码会从数据库里面检索出未结束的对话记录。然后第3行代码遍历这些对话记录。第4行代码将对话记录的已结束字段的值设置为True，也就是说标记为结束。第5行代码用于将更改内容批量保存进数据库。</p><p>一切工作完成后，通过第6行代码即可跳转回首页。这时候我们会看到页面上没有了对话记录。</p><p>注意，我们还需要打开<strong>实战案例1\\改造后\\home\\urls.py</strong> 文件，把newtalk注册进去。</p><pre><code class=\"language-python\">from django.urls import path\n\nfrom . import views\n\napp_name = \"home\"\nurlpatterns = [\n&nbsp; &nbsp; path(\"\", views.index, name=\"index\"),\n&nbsp; &nbsp; path(\"salescheck\", views.salescheck, name=\"salescheck\"),\n&nbsp; &nbsp; path(\"addsalescheck\", views.addsalescheck, name=\"addsalescheck\"),\n&nbsp; &nbsp; path(\"newtalk\", views.newtalk, name=\"newtalk\"),\n]\n</code></pre><p>其中第10行就是我们注册newtalk的代码。请注意这个地方不同的MIS系统不一样，而且与RAG无关，同学们可以不用关注它。</p><p>UI部分就讲到这里了，完整HTML最终代码请参见<a href=\"https://github.com/weiminye/time-geekbang-org-rag/blob/main/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B1/%E6%94%B9%E9%80%A0%E5%90%8E/templates/home/index.html\">这里</a>，对应的后台代码请参见<a href=\"https://github.com/weiminye/time-geekbang-org-rag/blob/main/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B1/%E6%94%B9%E9%80%A0%E5%90%8E/home/views.py\">这里</a>。你可能会发现，最终代码和上述代码有点不一样，会多了一些代码，多出来的这部分代码我们会在后续章节中提到。</p><h2>申请大模型</h2><p>然后我们需要接入大模型。因为最著名的OpenAI大模型申请比较麻烦，不利于同学们入门。所以我们使用百度ERNIE-Lite-8K大模型。</p><p>选择这个模型主要考虑了这三点。</p><ol>\n<li>完全免费，同学们可以随便玩。</li>\n<li>性能已经足够入门用了。</li>\n<li>调用格式兼容OpenAI和很多大模型，所以只我们需要改极少量代码就可以切换到其他大模型。</li>\n</ol><p>同学们可以直接去 <a href=\"https://qianfan.cloud.baidu.com/\">https://qianfan.cloud.baidu.com/</a>  申请百度ERNIE-Lite-8K大模型。因为百度的文档很完善，客服也很给力，按照上面的链接很容易就可以完成申请。</p><p>不过需要注意的是，百度更新很快，以上链接可能会失效，这时候我们可以向百度客服咨询。</p><h2>调用大模型</h2><p>申请以后，就到了调用大模型的环节。我们需要先获取access token，具体代码如下。我们在 <strong>实战案例1\\改造前\\home</strong>目录下新增 <strong>rag.py</strong> 文件，然后添加以下代码。</p><pre><code class=\"language-python\">import json\nimport requests\n\ndef get_access_token():\n  ernie_client_id = xxxx # 替换为你的client_id\n  ernie_client_secret = xxxx # 替换为你的client_secret\n  url = f\"https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id={ernie_client_id}&amp;client_secret={ernie_client_secret}\"\n  \n  playload= json.dumps(\"\")\n  headers = {\n  &nbsp; &nbsp; 'Content-Type': 'application/json',\n  &nbsp; &nbsp; 'Accept': 'application/json'\n  }\n  response = requests.request(\"POST\", url, headers=headers, data=playload)\n  return response.json().get(\"access_token\")\n</code></pre><p>你需要把上面代码中的ernie_client_id和ernie_client_secret替换为你自己的ernie_client_id和ernie_client_secret。你可以在<a href=\"https://console.bce.baidu.com/qianfan/ais/console/applicationConsole/application\">这里</a>找到它们。</p><p>其中 ernie_client_id为下图中的API Key，ernie_client_secret为下图中的Secret Key。</p><p><img src=\"https://static001.geekbang.org/resource/image/94/65/941107789853a03e71286a1a82defb65.jpg?wh=2020x1146\" alt=\"\"></p><p>获取完access token之后，我们就可以调用大模型进行问答，也就是进入第2节课所讲的对话模式了。我们继续在<strong>实战案例1\\改造前\\home\\rag.py</strong> 文件的尾部添加以下代码。</p><pre><code class=\"language-python\">def 对话模式(messages):\n&nbsp; url = \"https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/ernie-lite-8k?access_token=\" + get_access_token()\n&nbsp;&nbsp;\n&nbsp; json_obj = {\n&nbsp; &nbsp; &nbsp; \"messages\": messages,\n&nbsp; }\n\n&nbsp; playload= json.dumps(json_obj)\n&nbsp; headers = {\n&nbsp; &nbsp; &nbsp; 'Content-Type': 'application/json'\n&nbsp; }\n&nbsp;&nbsp;\n  response = requests.request(\"POST\", url, headers=headers, data=playload)\n&nbsp; json_result = json.loads(response.text)\n&nbsp; return json_result[\"result\"]\n</code></pre><p>这两个函数是百度大模型所特有的，不同大模型的代码不一样，换一个大模型可能就要改，所以我们就不铺开描述了。我们只需要知道，对话模式函数用于接收我们在第2节讲过的messages参数。</p><p>以上两个函数的最终代码可以在<a href=\"https://github.com/weiminye/time-geekbang-org-rag/blob/main/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B1/%E6%94%B9%E9%80%A0%E5%90%8E/home/rag.py\">这里</a>看到。</p><p>细心的同学可能会发现，这里和后续章节的代码很多变量和函数都用了中文。这么做只是为了让你更容易理解，学习起来更轻松。在实际工作中建议还是采用英文，以避免出现奇奇怪怪的问题。</p><h2>小结</h2><p>好了，今天这一讲到这里就结束了，最后我们来回顾一下。这一讲我们学会了两件事情。</p><p>第一件事情是介绍UI部分。UI部分包括：对话记录、发问、开始新的对话。第二件事情是如何申请和调用大模型。这是所有RAG应用都要做的第一步。虽然代码看起来并不复杂，但如果你从未接触，课后还是需要花一些精力仔细研读和动手练习的，这样学习效果会更好。</p><p>下一节我们将实现如何根据用户发问查询数据，也就是添加前面发问部分提到的<strong>获取结构化数据查询参数</strong>代码。</p><h2>思考题</h2><p>前面“调用大模型”一节中的ernie_client_id和ernie_client_secret是十分重要的，如果泄露出去会带来很大的麻烦，甚至带来金钱损失。</p><p>所以在实际工作中这两个参数的具体值不应该直接写在代码里面，那么应该如何处理呢？</p><p>欢迎你在留言区和我交流互动，如果这节课对你有启发，也推荐分享给身边更多朋友。</p>","neighbors":{"left":{"article_title":"03｜返回结构化数据：构建RAG应用的核心密码之二","id":806979},"right":{"article_title":"05｜动手实战：根据用户发问查询数据","id":807859}},"comments":[{"had_liked":false,"id":394287,"user_name":"Billy火炎焱燚(不羁的风)","can_delete":false,"product_type":"c1","uid":1337319,"ip_address":"广东","ucode":"63DED1EB2CF6AE","user_header":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","comment_is_top":true,"comment_ctime":1726359412,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"为什么不选择OpenAI？\n\n首先，我是一名负责AI应用落地的工程师，不是科学家。当项目出现问题，半夜叫醒是工程师，而不是科学家。科学家只考虑性能，工程师考虑的是如何不被半夜叫醒，即使半夜被叫醒，能否快速解决问题。以OpenAI的客服能力，做不到这点。这点国内大厂做得十分好。\n\n其次，如果做垂直应用，不需要去到OpenAI那么强的性能。这方面傅盛老师讲得十分到位，大家可以关注傅盛老师的视频号。另外如果大家需要选本地的大模型，我推荐傅盛老师的Orion-14B LLM，因为我在遇到问题的时候确实能从配套的微信群得到技术支持。同时傅盛老师做为上市公司的CEO，都能十分快的回答我。在客户支持方面，OpenAI距离国内厂商实在是差得太远。","like_count":2},{"had_liked":false,"id":394217,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1726130873,"is_pvip":false,"replies":[{"id":143113,"content":"回答得很对！给你点赞👍","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1726235031,"ip_address":"广东","comment_id":394217,"utype":1}],"discussion_count":1,"race_medal":2,"score":2,"product_id":100817901,"comment_content":"第4讲打卡~\n思考题：诸如api_key、token这类敏感数据，可以考虑写入环境变量中，或者放到内网的分布式配置中心中。","like_count":2,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651119,"discussion_content":"回答得很对！给你点赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1726235031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394100,"user_name":"grok","can_delete":false,"product_type":"c1","uid":1341502,"ip_address":"美国","ucode":"4744AB3FA28FE2","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/3e/f60ea472.jpg","comment_is_top":false,"comment_ctime":1725832045,"is_pvip":false,"replies":[{"id":143110,"content":"这个问题问得很好！\n\n首先，最强是没有意义的，选最适合自己的才有意义。可以使用第20节课的RAG评估指标库选择适合自己的大模型。\n\n其次，我们使用OpenAI掉过很多坑，当然用国产大模型也掉过很多坑。但是国产大模型的客服给力啊，会帮我们解决问题。OpenAI的客服等于没有。所以除了考虑质量之外，客服（也就是帮助客户解决实际问题的能力和态度）也是很重要的参考因素。 毕竟我们不是参加竞赛的，我们是搞落地的。\n\n最后推荐一个很实用的方法，你可以把各大模型都申请一遍，然后遇到问题就找客服，哪家回复得最快最好，哪家就对你实际工作越有帮助。毕竟榜单是可以刷和作弊的。\n","user_name":"作者回复","user_name_real":"作者","uid":1337319,"ctime":1726234776,"ip_address":"广东","comment_id":394100,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"请教各位大佬：对于中文问答，到底哪家LLM最强？我只知道去lmsys leaderboard, 有个下拉列表可选Chinese Prompts, 看排名.   其他有更好的榜单吗？","like_count":2,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651116,"discussion_content":"这个问题问得很好！\n\n首先，最强是没有意义的，选最适合自己的才有意义。可以使用第20节课的RAG评估指标库选择适合自己的大模型。\n\n其次，我们使用OpenAI掉过很多坑，当然用国产大模型也掉过很多坑。但是国产大模型的客服给力啊，会帮我们解决问题。OpenAI的客服等于没有。所以除了考虑质量之外，客服（也就是帮助客户解决实际问题的能力和态度）也是很重要的参考因素。 毕竟我们不是参加竞赛的，我们是搞落地的。\n\n最后推荐一个很实用的方法，你可以把各大模型都申请一遍，然后遇到问题就找客服，哪家回复得最快最好，哪家就对你实际工作越有帮助。毕竟榜单是可以刷和作弊的。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1726234776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3959183,"avatar":"https://static001.geekbang.org/account/avatar/00/3c/69/8f/64979f89.jpg","nickname":"大梦谁先觉","note":"","ucode":"C9C18D62339668","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650927,"discussion_content":"superCLUE？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1725882811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395453,"user_name":"Geek_fbf3a3","can_delete":false,"product_type":"c1","uid":4033130,"ip_address":"四川","ucode":"98ED0656762DE7","user_header":"","comment_is_top":false,"comment_ctime":1730862071,"is_pvip":false,"replies":[{"id":143600,"content":"正确！很赞！","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1731378822,"ip_address":"江苏","comment_id":395453,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"课后作业：环境变量","like_count":0,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653644,"discussion_content":"正确！很赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731378822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394677,"user_name":"overland","can_delete":false,"product_type":"c1","uid":1208835,"ip_address":"安徽","ucode":"609A463519E5F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/03/da1fcc81.jpg","comment_is_top":false,"comment_ctime":1727571540,"is_pvip":false,"replies":[{"id":143613,"content":"这个百度模型是免费的，而且貌似免费的模型越来越多了。https:&#47;&#47;cloud.baidu.com&#47;doc&#47;WENXINWORKSHOP&#47;s&#47;wlwg8f1i3\n\n私有化模型这块暂无讲解内容","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1731379764,"ip_address":"江苏","comment_id":394677,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"老师，这个百度模型是需要收费吧，是调用公网的吧？想请教下，像我们做项目产品很多是必须私有化的，私有化模型怎么使用这块有讲解内容吗？谢谢老师","like_count":0,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653659,"discussion_content":"这个百度模型是免费的，而且貌似免费的模型越来越多了。https://cloud.baidu.com/doc/WENXINWORKSHOP/s/wlwg8f1i3\n\n私有化模型这块暂无讲解内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731379764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1157533,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a9/9d/bdfd9e58.jpg","nickname":"无处不在","note":"","ucode":"BB535BC6F448F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652967,"discussion_content":"这块可以使用Ollama+私有化部署qwen2.5或者着llama3.3","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1729945160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394263,"user_name":"Wynnja Woo","can_delete":false,"product_type":"c1","uid":1245466,"ip_address":"美国","ucode":"7772E909F83D35","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/1a/ab103c8b.jpg","comment_is_top":false,"comment_ctime":1726279866,"is_pvip":true,"replies":[{"id":143127,"content":"下一节课（第5节）有专门讲这个问题","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1726360833,"ip_address":"广东","comment_id":394263,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"对于以下代码，请问为什么获取结构化数据需要用到之前用户的输入？\ndef 获取结构化数据查询参数(用户输入):\n  之前的用户输入 = 获取之前的用户输入()\n  重试总次数 = 2\n  当前重试次数 = 0\n  while 当前重试次数 &lt;= 重试总次数:\n    try:\n      结构化数据 = 对话模式(构造解析用户输入并返回结构化数据用的messages(之前的用户输入,用户输入),用户输入,原文不带入大模型对话中=False,结果不带入大模型对话中=True)\n      查询参数 = json.loads(结构化数据)\n      return 查询参数\n    except:\n      当前重试次数 += 1\n  \n  return None","like_count":0,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651168,"discussion_content":"下一节课（第5节）有专门讲这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1726360833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394243,"user_name":"Wynnja Woo","can_delete":false,"product_type":"c1","uid":1245466,"ip_address":"美国","ucode":"7772E909F83D35","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/1a/ab103c8b.jpg","comment_is_top":false,"comment_ctime":1726212275,"is_pvip":true,"replies":[{"id":143126,"content":"请问Anaconda命令行给出的出错信息是？有没有设置API key或者建立环境变量（就是另一位同学张申傲留言所说的那样）？","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1726360784,"ip_address":"广东","comment_id":394243,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"代码运行后两个问题：1.查询结果AI：抱歉，数据库里面没有你需要的信息。2.销售管理 &#47; 销售对账 &#47; 添加入账记录 直崩溃","like_count":0,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651167,"discussion_content":"请问Anaconda命令行给出的出错信息是？有没有设置API key或者建立环境变量（就是另一位同学张申傲留言所说的那样）？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1726360784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395709,"user_name":"非洲黑猴子","can_delete":false,"product_type":"c1","uid":2639724,"ip_address":"美国","ucode":"F5FEAC07D562E0","user_header":"https://static001.geekbang.org/account/avatar/00/28/47/6c/78184d19.jpg","comment_is_top":false,"comment_ctime":1731822029,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":1,"score":2,"product_id":100817901,"comment_content":"没用过 Django, 一开始没实操出来, 其实还有一步: 修改代码之后, 申请大模型之前还要在命令行执行一次 `python manage.py makemigrations` 命令再刷新页面, 才能看到页面变化\n","like_count":0}]}