{"id":489820,"title":"05 | 网盘系统设计：万亿 GB 网盘如何实现秒传与限速？","content":"<p>你好，我是李智慧。</p><p>网盘，又称云盘，是提供文件托管和文件上传、下载服务的网站（File hosting service）。人们通过网盘保管自己拍摄的照片、视频，通过网盘和他人共享文件，已经成为了一种习惯。我们准备开发一个自己的网盘应用系统，应用名称为“DBox”。</p><p>十几年前曾经有个段子，技术人员对老板说：您不能在公司电脑打开您家里电脑的文件，再贵的电脑也不能。事实上，随着网盘技术的成熟，段子中老板的需求已经成为现实：网盘可以自动将家里电脑的文件同步到公司电脑，老板可以在公司的电脑打开家里电脑的文件了。</p><p>网盘的主要技术挑战是<strong>海量数据的高并发读写访问</strong><strong>。</strong>用户上传的海量数据如何存储？如何避免部分用户频繁读写文件，消耗太多资源，而导致其他的用户体验不佳？我们看下DBox的技术架构以及如何解决这些问题。</p><h2>需求分析</h2><p>DBox的核心功能是提供文件上传和下载服务。基于核心功能，DBox需要在服务器端保存这些文件，并在下载和上传过程中实现断点续传。也就是说，如果上传或下载过程被中断了，恢复之后，还能从中断的地方重新上传或者下载，而不是从头再来。</p><p>DBox还需要实现文件共享的需求。使用DBox的不同用户之间可以共享文件，一个用户上传的文件共享给其他用户后，其他用户也可以下载这个文件。</p><!-- [[[read_end]]] --><p>此外，网盘是一个存储和网络密集型的应用，用户文件占据大量<strong>硬盘资源</strong>，上传、下载需要占用大量网络带宽，并因此产生较高的运营成本。所以用户体验需要向付费用户倾斜，DBox需要对上传和下载进行<strong>流速控制</strong>，保证付费用户得到更多的网络资源。DBox用例图如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/c8/07/c817188e7a3436b1a0b545d7972e4707.jpg?wh=1920x1037\" alt=\"图片\"></p><h4>负载指标估算</h4><p>DBox的设计目标是支持10亿用户注册使用，免费用户最大可拥有1TB存储空间。预计日活用户占总用户的20%，即2亿用户。每个活跃用户平均每天上传、下载4个文件。</p><p>DBox的<strong>存储量</strong>、<strong>吞吐量</strong>、<strong>带宽负载</strong>估算如下。</p><ul>\n<li><strong>总存储量</strong><br>\n理论上，总存储空间估算为10亿TB，即1万亿GB。</li>\n</ul><p>$\\small 10亿\\times1TB=10亿TB$</p><p>但考虑到大多数用户并不会完全用掉这个空间，还有很多用户存储的文件其实是和别人重复的（电影、电子书、软件安装包等），真正需要的存储空间大约是这个估算值的10%，即1亿TB。</p><ul>\n<li><strong>QPS</strong><br>\n系统需要满足的平均QPS约为10000。</li>\n</ul><p>$\\small 2亿\\times4\\div（24\\times60\\times60）\\approx1万$</p><p>高峰期QPS约为平均QPS的两倍，即2万。</p><ul>\n<li><strong>带宽负载</strong><br>\n每次上传下载文件平均大小1MB，所以需要网络带宽负载10GB/s，即80Gb/s。</li>\n</ul><p>$\\small 1万\\times1MB=10GB/s=80Gb/s$</p><p>同样，高峰期带宽负载为160Gb/s。</p><h4>非功能需求</h4><ol>\n<li>大数据量存储：10亿注册用户，1000亿个文件，约1亿TB的存储空间。</li>\n<li>高并发访问：平均1万QPS，高峰期2万QPS。</li>\n<li>大流量负载：平均网络带宽负载80Gb/S，高峰期带宽负载160Gb/s。</li>\n<li>高可靠存储：文件不丢失，持久存储可靠性达到99.9999% ，即100万个文件最多丢失（或损坏）1个文件。</li>\n<li>高可用服务：用户正常上传、下载服务可用性在99.99%以上，即一年最多53分钟不可用。</li>\n<li>数据安全性：文件需要加密存储，用户本人及共享文件外，其他人不能查看文件内容。</li>\n<li>不重复上传：相同文件内容不重复上传，也就是说，如果用户上传的文件内容已经被其他用户上传过了，该用户不需要再上传一次文件内容，进而实现“秒传”功能。从用户视角来看，不到一秒就可以完成一个大文件的上传。</li>\n</ol><h2>概要设计</h2><p>网盘设计的关键是<strong>元数据与文件内容的分离存储与管理</strong>。所谓文件元数据就是文件所有者、文件属性、访问控制这些文件的基础信息，事实上，传统文件系统也是元数据与文件内容分离管理的，比如Linux的文件元数据记录在文件控制块FCB中，Windows的文件元数据记录在文件分配表FAB中，Hadoop分布式文件系统HDFS的元数据记录在NameNode中。</p><p>而DBox是将元信息存储在数据库中，文件内容则使用另外专门的存储体系。但是由于DBox是一个互联网应用，出于安全和访问管理的目的，并不适合由客户端直接访问存储元数据的数据库和存储文件内容的存储集群，而是通过API服务器集群和数据块服务器集群分别进行访问管理。整体架构如下图。</p><p><img src=\"https://static001.geekbang.org/resource/image/05/06/0562910aaa2f53517b431ed40d42fe06.jpg?wh=1920x1005\" alt=\"图片\"></p><p>对于大文件，DBox不会上传、存储一整个的文件，而是将这个文件进行切分，变成一个个单独的Block，再将它们分别上传并存储起来。</p><p>这样做的核心原因是，DBox采用对象存储作为最终的文件存储方案，而对象存储不适合存储大文件，需要进行切分。而大文件进行切分还带来其他的好处：可以<strong>以Block为单位进行上传和下载，提高文件传输速度</strong>；客户端或者网络故障导致文件传输失败，也只需要重新传输失败的Block就可以，进而实现<strong>断点续传</strong>功能。</p><p>Block服务器就是负责Block上传和管理的。客户端应用程序根据API服务器的返回指令，将文件切分成一些Block，然后将这些Block分别发送给Block服务器，Block服务器再调用对象存储服务器集群，将Block存储在对象存储服务器中（DBox选择Ceph作为对象存储）。</p><p>用户上传文件的时序图如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/da/3f/da219984e7d006ed2e535b86bdfb943f.jpg?wh=1920x1123\" alt=\"图片\"></p><p>用户上传文件时，客户端应用程序收集文件元数据，包括文件名、文件内容MD5、文件大小等等，并根据文件大小计算Block的数量（DBox设定每个block大小4MB），以及每个Block的MD5值。</p><p>然后客户端应用程序将全部元数据（包括所有Block的MD5值列表）发送给API服务器。API服务器收到文件元数据后，为每个Block分配全局唯一的BlockID（BlockID为严格递增的64位正整数，总可记录数据大小$\\small 2^{64}\\times4MB=180亿PB$，足以满足DBox的应用场景）。</p><p>下一步，API服务器将文件元数据与BlockID记录在数据库中，并将BlockID列表和应用程序可以连接的Block服务器列表返回客户端。客户端连接Block服务器请求上传Block，Block服务器连接API服务器进行权限和文件元数据验证。验证通过后，客户端上传Block数据，Block服务器再次验证Block数据的MD5值，确认数据完整后，将BlockID和Block数据保存到对象存储集群Ceph中。</p><p>类似的，用户下载文件的时序图如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/71/1c658bdd073f5bde99f2310cd222ae71.jpg?wh=1920x1178\" alt=\"图片\"></p><p>客户端程序访问API服务器，请求下载文件。然后API服务器会查找数据库，获得文件的元数据信息，再将元数据信息中的文件BlockID列表及可以访问的Block服务器列表返回给客户端。</p><p>下一步，客户端访问Block服务器，请求下载Block。Block服务器验证用户权限后，从Ceph中读取Block数据，返回给客户端，客户端再将返回的Block组装为文件。</p><h2>详细设计</h2><p>为解决网盘的三个重要问题：元数据如何管理？网络资源如何向付费用户倾斜？如何做到不重复上传？DBox详细设计将关注元数据库、上传下载限速、秒传的设计实现。</p><h4>元数据库设计</h4><p>元数据库表结构设计如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/54/9b/54ef5431490310a01ab0d05a5c22d79b.jpg?wh=1920x953\" alt=\"图片\"></p><p>从图中可以看出，元数据库表结构中主要包括三个表，分别是User用户表、File文件表和Block数据块表，表的用途和包含的主要字段如下：</p><ol>\n<li>User用户表记录用户基本信息：用户名、创建时间、用户类型（免费、VIP）、用户已用空间、电话号码、头像等等。</li>\n<li>File文件表记录文件元信息：文件名、是否为文件夹、上级文件夹、文件MD5、创建时间、文件大小、文件所属用户、是否为共享文件等。</li>\n<li>Block数据块表记录Block数据，包括BlockID、Block MD5、对应文件等。</li>\n</ol><p>其中，User表和File表为一对多的关系，File表和Block表也是一对多的关系。</p><p>这3种表的记录数都是百亿级以上，所以元数据表采用<strong>分片的关系数据库</strong>存储。</p><p>因为查询的主要场景是根据用户ID查找用户信息和文件信息，以及根据文件ID查询block信息，所以User和File表都采用user_id作为分片键，Block表采用file_id作为分片键。</p><h4>限速</h4><p>DBox根据用户付费类型决定用户的上传、下载速度。而要控制上传、下载速度，可以通过限制并发Block服务器数目，以及限制Block服务器内的线程数来实现。</p><p>具体过程是，客户端程序访问API服务器，请求上传、下载文件的时候，API服务器可以根据用户类型，决定分配的Block服务器数目和Block服务器内的服务线程数，以及每个线程的上传、下载速率。</p><p>Block服务器会根据API服务器的返回值，来控制客户端能够同时上传、下载的Block数量以及传输速率，以此对不同用户进行限速。</p><h4>秒传</h4><p>秒传是用户快速上传文件的一种功能。</p><p>事实上，网盘保存的很多文件，内容其实是重复的，比如电影、电子书等等。一方面，重复上传这些文件会加大网盘的存储负载压力；另一方面，每次都要重新上传重复的内容，会导致用户网络带宽的浪费和用户等待时间过长的问题。</p><p>所以，在设计中，物理上相同的文件，DBox只会保存一份。用户每次上传文件时，DBox都会先在客户端计算文件的MD5值，再根据MD5值判断该文件是否已经存在。对于已经存在的文件，只需要建立用户文件和该物理文件的关联即可，并不需要用户真正上传该文件，这样就可以实现秒传的功能。</p><p>但是，计算MD5可能会发生Hash冲突，也就是不同文件算出来的MD5值是相同的，这样会导致DBox误判，将本不相同的文件关联到一个物理文件上。不但会使上传者丢失自己的文件，还会被黑客利用：上传一个和目标文件MD5相同的文件，然后就可以下载目标文件了。</p><p>所以，DBox需要通过更多信息判断文件是否相同：<strong>只有文件长度、文件开头256KB的MD5值、文件的MD5值，三个值都相同，才会认为文件相同</strong>。当文件长度小于256KB，则直接上传文件，不启用秒传功能。</p><p>为此，我们需要将上面的元数据库表结构进行一些改动，将原来的File表拆分成物理文件表Physics_File和逻辑文件表Logic_File。其中，Logic_File记录用户文件的元数据，并和物理文件表Physics_File建立多对1关联关系，而Block表关联的则是Physics_File表，如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/09/0f/09595890fbf51218a7866d26e97e400f.jpg?wh=2000x1288\" alt=\"\"></p><p>Physics_File中字段md5和256kmd5字段分别记录了文件MD5和文件头256KB的MD5数据，而size记录了文件长度，只有这三个字段都相同才会启用秒传。</p><h2>小结</h2><p>我们在需求分析中讨论过，DBox需要支持大数据量存储、高并发访问、高可用服务、高可靠存储等非功能需求。事实上，对于网盘应用而言，元数据API服务其实和一般的高并发互联网系统网关没有太大差别。真正有挑战的是海量文件的高可用存储，而这一挑战，在DBox中，被委托给了分布式对象存储Ceph来完成。而Ceph本身设计就是支持大数据量存储、高并发访问、高可用服务、高可靠存储的。</p><p>架构师按照职责，可以分成两种，一种是<strong>应用系统架构师</strong>，负责设计、开发类似网盘、爬虫这样的应用系统；另一种是<strong>基础设施架构师</strong>，负责设计、开发类似Ceph、HDFS这样的基础设施系统。</p><p>应用架构师需要掌握的技术栈更加<strong>广泛</strong>，要能够掌握各种基础设施技术的特性，并能根据业务特点选择最合适的方案；而基础设施架构师需要的技术栈更加<strong>深入</strong>，需要掌握计算机软硬件更深入的知识，才能开发出一个稳定的基础技术产品。</p><p>当然，最好的架构师应该是技术栈既广泛又深入，既能灵活应用各种基础设施来开发应用系统，也能在需要的时候自己动手开发新的基础设施系统。</p><p>我们专栏大部分案例都是关于应用的，但是也不乏关于编程框架、限流器、安全防火墙、区块链等基础设施的案例。你也可以在学习的过程中，感受下这两种系统的设计方案和技术关键点的不同。</p><h2>思考题</h2><p>网盘元数据存储采用分片的关系数据库方案，查询目录和文件都比较简单，但是性能也比较差。而且文件表按用户ID分片，如果某个用户创建大量文件，还会导致分片不均衡，你有什么优化的手段和方法吗？</p><p>欢迎在评论区分享你的思考，或者提出对这个设计文档的评审意见，我们共同进步。</p>","comments":[{"had_liked":false,"id":335975,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1645799903,"is_pvip":true,"replies":[{"id":"122878","content":"1 专栏2后半部分讨论过估算的思路，注册用户数-&gt;在线用户数-&gt;并发用户数，根据业务场景的不同，这个数据是逐级以几十倍到几百倍的比例递减，极客时间这个场景的话，500万注册用户，并发用户大概几千吧。<br><br>并发数 * 响应数据量 = 带宽<br><br>2 用户和存储是逐渐增加的，不是一致性投入1亿TB，稳定下来，每年实际投入百亿左右即可。这个成本不高的，百度网盘会员费每年300，我们十亿用户只要10%成为付费会员，营收300亿。<br><br>4 ceph是一个开源软件","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646015440,"ip_address":"","comment_id":335975,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40300505567","product_id":100105701,"comment_content":"请教老师几个问题：<br>Q1：用户数与并发数的估算。<br>一个500万注册用户的网站，并发数大约多少？如果业务是类似极客时间，带宽又需要多少？ 怎么估算并发数和带宽啊？<br>Q2：存储成本很高吗？<br>京东上的移动硬盘，价格有高有低，1TB大约300元。一亿TB的话，按照这个估算就需要大约300亿。如果再备份的话，就需要600亿。这个成本是不是太高？真实网盘，比如百度网盘，成本也是这么高吗？<br>Q3：带宽成本很高吗？<br> 高峰期网络带宽为160Gb&#47;s，这个带宽一年的费用大约多少？<br>Q4：对象存储的关键是什么？怎么体现“对象”？“ceph”是个标准还是一个具体品牌？","like_count":10,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553656,"discussion_content":"1 专栏2后半部分讨论过估算的思路，注册用户数-&gt;在线用户数-&gt;并发用户数，根据业务场景的不同，这个数据是逐级以几十倍到几百倍的比例递减，极客时间这个场景的话，500万注册用户，并发用户大概几千吧。\n\n并发数 * 响应数据量 = 带宽\n\n2 用户和存储是逐渐增加的，不是一致性投入1亿TB，稳定下来，每年实际投入百亿左右即可。这个成本不高的，百度网盘会员费每年300，我们十亿用户只要10%成为付费会员，营收300亿。\n\n4 ceph是一个开源软件","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646015440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338939,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1054958,"ip_address":"","ucode":"7501AD9C0C4A70","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","comment_is_top":false,"comment_ctime":1647822165,"is_pvip":false,"replies":[{"id":"123869","content":"主要对标国内某度网盘。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1647829146,"ip_address":"","comment_id":338939,"utype":1}],"discussion_count":1,"race_medal":0,"score":"36007560533","product_id":100105701,"comment_content":"老师，这个设计能对标现在大部分主流网盘设计吧？","like_count":9,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557458,"discussion_content":"主要对标国内某度网盘。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647829146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338129,"user_name":"瑾年","can_delete":false,"product_type":"c1","uid":2380496,"ip_address":"","ucode":"E98E81AE0FB713","user_header":"https://static001.geekbang.org/account/avatar/00/24/52/d0/fa6dde52.jpg","comment_is_top":false,"comment_ctime":1647314277,"is_pvip":true,"replies":[{"id":"123622","content":"网盘文件以小文件为主，HDFS的设计目标是大文件。如果用HDFS，需要进行文件合并，后面短视频架构探讨这种设计方案。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1647329471,"ip_address":"","comment_id":338129,"utype":1}],"discussion_count":1,"race_medal":0,"score":"36007052645","product_id":100105701,"comment_content":"老师，您好，请问这个业务为什么选型 Ceph 作为文件存储，而不是HDFS。选型分布式文件存储的依据可以分享下吗","like_count":9,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556364,"discussion_content":"网盘文件以小文件为主，HDFS的设计目标是大文件。如果用HDFS，需要进行文件合并，后面短视频架构探讨这种设计方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647329471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337125,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1646637625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23121474105","product_id":100105701,"comment_content":"回答问题：<br>认为项目处理验证需求、早期阶段，优化方案：多级分片策略，通过user_id进行一级分片，file_id进行二级分片。<br><br>如果经过验证，且数据量达到一定规模，建议选择分布式关系数据库，或 NoSQL 吧。","like_count":6},{"had_liked":false,"id":343874,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1651109427,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14536011315","product_id":100105701,"comment_content":"1、文件表按用户 ID 分片，如果某个用户创建大量文件，还会导致分片不均衡，你有什么优化的手段和方法吗？<br>可以在user与logic_file之间，增加bucket结构，来缓解超级用户引起的分片不均衡。<br>每1024个文件做一个bucket，bucket通过user_id分片。user中增加自增的上传文件计数以及当前bucket序号。<br>bucket_id为user_id+user_current_bucket_no。logic_file记录bucket_id，使用bucket_id对logic_file分片。但这样查询的时候，要去枚举用户的全部bucket下的文件了。<br>2、physics_file需要维护block列表，及block上传状态，否则无法断点续传<br>3、physics_file需要维护block顺序，否则无法拼装文件<br>4、physics_file需要增加引用计数，否则文件无法物理删除<br>5、文件表上，可以增加上传状态，判断文件是否可以下载<br>6、文件表上，可以增加文件类型，用于后续应用扩展<br>7、对于小于4M的文件，需要进行块合并处理，否则太浪费存储了","like_count":4},{"had_liked":false,"id":342487,"user_name":"Geek_31d294","can_delete":false,"product_type":"c1","uid":2885608,"ip_address":"","ucode":"74E988B05C5CE2","user_header":"","comment_is_top":false,"comment_ctime":1650287878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14535189766","product_id":100105701,"comment_content":"文尾提的问题可以用 用户id文件id 的组合字段进行分片，可以解决大用户文件不均衡的问题。但需要加一张用户文件id映射表来解决找文件的问题","like_count":3},{"had_liked":false,"id":335980,"user_name":"3AM","can_delete":false,"product_type":"c1","uid":1003985,"ip_address":"","ucode":"13E94A11DB5CEB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/d1/38a1ed3e.jpg","comment_is_top":false,"comment_ctime":1645803653,"is_pvip":true,"replies":[{"id":"122874","content":"ceph已经实现多副本，所以网盘自己不需要考虑了","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646014622,"ip_address":"","comment_id":335980,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14530705541","product_id":100105701,"comment_content":"存储不用考虑多副本嘛？","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553652,"discussion_content":"ceph已经实现多副本，所以网盘自己不需要考虑了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646014623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335891,"user_name":"日月","can_delete":false,"product_type":"c1","uid":1610722,"ip_address":"","ucode":"2B6FCCA5CEBFB2","user_header":"https://static001.geekbang.org/account/avatar/00/18/93/e2/1bde89e8.jpg","comment_is_top":false,"comment_ctime":1645758320,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"14530660208","product_id":100105701,"comment_content":"每个线程的上传、下载速率应该怎么控制呀","like_count":4,"discussions":[{"author":{"id":1023762,"avatar":"","nickname":"开心小毛","note":"","ucode":"9D57A2773759F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556483,"discussion_content":"每个线程的上传、下载速率是无法控制的，但是每个线程被操作系统选中占据CPU的机会是大体相同的，如果把VIP用户的待下载blockIDs传入更多的线程，（每个block服务器的线程数一定），那么VIP用户的文件下载完成的就更早。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647398906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2380496,"avatar":"https://static001.geekbang.org/account/avatar/00/24/52/d0/fa6dde52.jpg","nickname":"瑾年","note":"","ucode":"E98E81AE0FB713","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553850,"discussion_content":"比如上传，文件会被分为多个 block 块，上传是以块为单位上传。例如：有10个线程专门处理上传功能，此时有1个VIP和1个普通用户，VIP占用8个线程上传；普通用户占用2个线程上传。\n再详细点比如：客户端会计算上传需要多少个线程数，然后服务端根据客户端申请的线程数和当前线程池数 进行动态的算法计算。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646117452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2450981,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo0z990grziaq7U71fqERjUBGPYVxns2yTCVicYClEK2BicmZYVnQ3w8iaAiaYHacLZtSpibrRfjQy0ZsQg/132","nickname":"Geek_78dacc","note":"","ucode":"152D20866EC554","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579267,"discussion_content":"我觉得也可以修改tcp包头的滑动窗口大小，比如非会员滑动窗口的最大值是会员的一半","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657271650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1671394,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/8KpWhCMxgVgqKMxNT9zuJuVnz1gNBzYlWrZCO4hlF4OQibhawvn0hpHhHgHr4kSXfVNjeuE4StuvTR54NGcE4Zg/132","nickname":"Geek_aa780e","note":"","ucode":"20C49732158424","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556575,"discussion_content":"可以参考令牌桶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647420749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2825710,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqMd9DibRjo8gqHo4DRSZO3lkZ2KMezY3z9ia77kNKv8hRLLDCics35Ll2HTMt2Eiadk8uZA0l0EiaOvLQ/132","nickname":"Tico","note":"","ucode":"768F5FD8562DF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556569,"discussion_content":"sleep","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647420082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356620,"user_name":"Elroy","can_delete":false,"product_type":"c1","uid":1630622,"ip_address":"北京","ucode":"B9578EE4A3C98C","user_header":"https://static001.geekbang.org/account/avatar/00/18/e1/9e/4107db55.jpg","comment_is_top":false,"comment_ctime":1662451669,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10252386261","product_id":100105701,"comment_content":"思考题：<br>1、以我们的量级，用关系型数据库存储数据是否还合适？如果选择继续使用关系数据库，那需要换一种分表方式。文件数据日增长大概在8亿左右（预计日活用户占总用户的 20%，即 2 亿用户。每个活跃用户平均每天上传、下载 4 个文件。2亿 * 4 = 8亿），那么我会选择按时间范围分片，比如按天。<br>2、架构设计是一个 trade off 的过程，使用关系型数据库的成本是否能 cover 住？cover 不住可以选择NoSQL。比如 hbase + hive。<br>3、再激进点，对于数据读写要求高的场景，可以使用 clickhouse，支持分片，但不支持事务。","like_count":3},{"had_liked":false,"id":338345,"user_name":"Geek_aa780e","can_delete":false,"product_type":"c1","uid":1671394,"ip_address":"","ucode":"20C49732158424","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8KpWhCMxgVgqKMxNT9zuJuVnz1gNBzYlWrZCO4hlF4OQibhawvn0hpHhHgHr4kSXfVNjeuE4StuvTR54NGcE4Zg/132","comment_is_top":false,"comment_ctime":1647432826,"is_pvip":false,"replies":[{"id":"123692","content":"会比较耗时，所以用户端上传时应该有两个进度条，一个是上传准备进度条，一个是上传进度条。<br><br>以block为单位进行秒传，并不能解决问题，一个大文件可以秒传，那么每个block都需要判断MD5是否存在，上传下载都更耗时。","user_name":"作者回复","user_name_real":"作者","uid":"1007349","ctime":1647481922,"ip_address":"","comment_id":338345,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10237367418","product_id":100105701,"comment_content":"请问老师，在秒传模块的设计中，用户上传之前需要计算文件的MD5，面对大文件上传的场景下，是不是会产生巨大的耗时？ <br>能不能设计以block为单位的logic_block, physics_block，能够减少一次完整文件的计算md5耗时，并且增加重叠率。","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556710,"discussion_content":"会比较耗时，所以用户端上传时应该有两个进度条，一个是上传准备进度条，一个是上传进度条。\n\n以block为单位进行秒传，并不能解决问题，一个大文件可以秒传，那么每个block都需要判断MD5是否存在，上传下载都更耗时。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647481923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337882,"user_name":"丫丫","can_delete":false,"product_type":"c1","uid":2896229,"ip_address":"","ucode":"982AE515E87971","user_header":"","comment_is_top":false,"comment_ctime":1647125182,"is_pvip":false,"replies":[{"id":"123570","content":"1 Block服务器就普通的web应用，http协议，有API<br>2 文中的设计是检查user表，用token确实会更灵活、更低耦合一点，感谢建议<br>3 首先，physical文件不会在用户删除时立即删除，不管是不是有秒传关联。其次，网盘会定期清理垃圾文件，所以，physical文件需要有个引用计数器，每次有秒传关联，计数器+1，每次关联logical文件删除，计数器-1。这个关注点非常好，是关键实现细节，是架构评审要发现的要点。<br>4 好问题，我的想法，加标志位或者求size，操作都比较重，性能压力大。同时，从用户体验角度，我觉得文件的可见性应该以用户一次上传为单位，一次上传若干个文件，在全部上传未完成前，应该全部不可见。所以，我觉得用一个MySQL内存数据库，临时记录用户上传中的文件元数据，一次上传全部完成后，再将数据同步到MySQL元数据库。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1647225319,"ip_address":"","comment_id":337882,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10237059774","product_id":100105701,"comment_content":"请教老师几个问题：<br>Q1：Client 访问 Block 服务器是什么协议？Block 服务器也有API吗？<br>Q2：Block 服务器向API服务器验证权限是否是基于“这里我们把用户权限存在了user表里“？实际过程中是否我们直接使用oauth +role base token来解决这个问题<br>Q3：当我实现秒传一个文件后，如果有用户想要删除这个physical file的时候，如何确保我们能够安全的删除文件？ 是否在physical file里面我们要存和logical file的映射关系？<br>Q4：如何在用户下载前确认这个文件已经上传完毕了，否则拒绝下载？也就是说我们是不是要在logical file里面加标志位？还是我们计算每个block的size和总的size比较？<br>谢谢老师","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556118,"discussion_content":"1 Block服务器就普通的web应用，http协议，有API\n2 文中的设计是检查user表，用token确实会更灵活、更低耦合一点，感谢建议\n3 首先，physical文件不会在用户删除时立即删除，不管是不是有秒传关联。其次，网盘会定期清理垃圾文件，所以，physical文件需要有个引用计数器，每次有秒传关联，计数器+1，每次关联logical文件删除，计数器-1。这个关注点非常好，是关键实现细节，是架构评审要发现的要点。\n4 好问题，我的想法，加标志位或者求size，操作都比较重，性能压力大。同时，从用户体验角度，我觉得文件的可见性应该以用户一次上传为单位，一次上传若干个文件，在全部上传未完成前，应该全部不可见。所以，我觉得用一个MySQL内存数据库，临时记录用户上传中的文件元数据，一次上传全部完成后，再将数据同步到MySQL元数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647225319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439049,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f5/49/2a84fcf2.jpg","nickname":"zp❤xqq","note":"","ucode":"D6C0A0B1D0C3D7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580413,"discussion_content":"受教了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658148737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336014,"user_name":"向东是大海","can_delete":false,"product_type":"c1","uid":2046992,"ip_address":"","ucode":"A9FE1049D0D144","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3c/10/61efe672.jpg","comment_is_top":false,"comment_ctime":1645846944,"is_pvip":false,"replies":[{"id":"122873","content":"谢谢建议","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646014596,"ip_address":"","comment_id":336014,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10235781536","product_id":100105701,"comment_content":"系统设计很精妙，特别是秒传的设计！一个小建议，<br>MD5是已退役的哈希算法，采用SHA256等现行的哈希算法可减少哈希碰撞，更加安全。","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553651,"discussion_content":"谢谢建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646014596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345617,"user_name":"Geek_aa780e","can_delete":false,"product_type":"c1","uid":1671394,"ip_address":"","ucode":"20C49732158424","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8KpWhCMxgVgqKMxNT9zuJuVnz1gNBzYlWrZCO4hlF4OQibhawvn0hpHhHgHr4kSXfVNjeuE4StuvTR54NGcE4Zg/132","comment_is_top":false,"comment_ctime":1652432970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5947400266","product_id":100105701,"comment_content":"老师您好，我请问下，用户限速模块中，有一项是通过控制block服务器内的线程数量，来分配带宽，这里为什么不是单线程，对单线程进行限速呢？好像看不到多线程的收益。","like_count":1},{"had_liked":false,"id":338893,"user_name":"苏志辉","can_delete":false,"product_type":"c1","uid":1068927,"ip_address":"","ucode":"39B25CE21C04EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7f/5dc11380.jpg","comment_is_top":false,"comment_ctime":1647778481,"is_pvip":false,"replies":[{"id":"123878","content":"是的，应该在Physics_File，我修订下设计文档。<br><br>感谢你的评审意见。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1647830039,"ip_address":"","comment_id":338893,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5942745777","product_id":100105701,"comment_content":"double_md5和size是不是应该保存到Physics_File，否则没办法进行秒传比较吧","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557471,"discussion_content":"是的，应该在Physics_File，我修订下设计文档。\n\n感谢你的评审意见。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647830039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336466,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1646176937,"is_pvip":false,"replies":[{"id":"122980","content":"可是查找的时候，是按照用户和文件名查找的，用MD5分片如何完成查找呢？","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646188330,"ip_address":"","comment_id":336466,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5941144233","product_id":100105701,"comment_content":"课后题：可以尝试根据文件md5值进行分片。因为md5是无序的，所以应该可以使分片更加平均。","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554019,"discussion_content":"可是查找的时候，是按照用户和文件名查找的，用MD5分片如何完成查找呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646188330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335865,"user_name":"harryZ","can_delete":false,"product_type":"c1","uid":2441210,"ip_address":"","ucode":"A16E3B4AD74E6E","user_header":"","comment_is_top":false,"comment_ctime":1645746977,"is_pvip":true,"replies":[{"id":"122755","content":"应该是多种手段一起使用：根据元数据识别违禁词、根据黑名单文件MD5进行匹配，对于文件内容通过机器学习识别。<br><br>元数据和MD5可以在API就处理，内容处理要后期扫描了。","user_name":"作者回复","user_name_real":"作者","uid":"1007349","ctime":1645756573,"ip_address":"","comment_id":335865,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5940714273","product_id":100105701,"comment_content":"如果再多加一修建“净网功能”，找出盗版资源，大体是哪个实现思路？黑名单列表？还是？  做成上传“和谐”的话可以在api中多加一个流程，那如果定期“和谐”，是否需要不断扫描文件元数据？及关了小黑屋后应怎办）","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553176,"discussion_content":"应该是多种手段一起使用：根据元数据识别违禁词、根据黑名单文件MD5进行匹配，对于文件内容通过机器学习识别。\n\n元数据和MD5可以在API就处理，内容处理要后期扫描了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1645756573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2441210,"avatar":"","nickname":"harryZ","note":"","ucode":"A16E3B4AD74E6E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":553219,"discussion_content":"谢谢老师给我们打开了思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645771365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":553176,"ip_address":""},"score":553219,"extra":""}]}]},{"had_liked":false,"id":355131,"user_name":"ubuntuMax","can_delete":false,"product_type":"c1","uid":2438569,"ip_address":"四川","ucode":"242CAEC0FD9C77","user_header":"https://static001.geekbang.org/account/avatar/00/25/35/a9/5f309b81.jpg","comment_is_top":false,"comment_ctime":1661128473,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1661128473","product_id":100105701,"comment_content":"是不是用nosql更好?","like_count":0},{"had_liked":false,"id":343211,"user_name":"灰太狼","can_delete":false,"product_type":"c1","uid":1093741,"ip_address":"","ucode":"5E153527605DAB","user_header":"https://static001.geekbang.org/account/avatar/00/10/b0/6d/d85f71a1.jpg","comment_is_top":false,"comment_ctime":1650708825,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650708825","product_id":100105701,"comment_content":"采用类似于TiDB&#47;StarRocks的原生分布式数据库，是否合适呢？","like_count":0},{"had_liked":false,"id":342615,"user_name":"Jack","can_delete":false,"product_type":"c1","uid":1103122,"ip_address":"","ucode":"EED5D4B1EE383E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epbxxibamxn0NBlCgOuZzMWF6v6JeRrtgYrHNcSLGWAPgDBEZyrdFqnwaJKVwOWIAWTibXdP3icyDxPg/132","comment_is_top":false,"comment_ctime":1650364601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650364601","product_id":100105701,"comment_content":"回答问题<br><br>首先设置“大量文件”具体的阈值，当达到该阈值时：<br>1. 将用户标记为&quot;倾斜用户&quot;，<br>2. 将热点用户的数据迁移到热点用户表上（比如单独设置10张表为倾斜用户表）","like_count":0},{"had_liked":false,"id":339847,"user_name":"小锅米线","can_delete":false,"product_type":"c1","uid":1937070,"ip_address":"","ucode":"2D8E58F5C56C14","user_header":"https://static001.geekbang.org/account/avatar/00/1d/8e/ae/45b78d58.jpg","comment_is_top":false,"comment_ctime":1648436127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648436127","product_id":100105701,"comment_content":"在客户端和服务器端都引入缓存解决元数据查询性能差的问题。<br><br>少数用户上传大量文件，导致数据倾斜的问题。引入日期Range分片应该可以解决部分问题。能否引入分片元数据的方式解决呢？具体方案暂时想不出来。","like_count":0},{"had_liked":false,"id":339007,"user_name":"人间乐园","can_delete":false,"product_type":"c1","uid":1350559,"ip_address":"","ucode":"4A203AB47FCF3C","user_header":"https://static001.geekbang.org/account/avatar/00/14/9b/9f/2cbc2a4f.jpg","comment_is_top":false,"comment_ctime":1647856055,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647856055","product_id":100105701,"comment_content":"使用mongodb { “userid” : 1, “fileid” : 1 } 进行分片","like_count":0},{"had_liked":false,"id":338938,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1054958,"ip_address":"","ucode":"7501AD9C0C4A70","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","comment_is_top":false,"comment_ctime":1647822120,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1647822120","product_id":100105701,"comment_content":"😁某网盘:限速这个，我懂啊","like_count":0,"discussions":[{"author":{"id":1227789,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/0d/e65ca230.jpg","nickname":"👻","note":"","ucode":"1648C82AC73C1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566871,"discussion_content":"全球做的最专业吧😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650785956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338753,"user_name":"gesanri","can_delete":false,"product_type":"c1","uid":1121174,"ip_address":"","ucode":"AE3B97DC3ED668","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELtOO0HKrj5SI5JSlmwiaCvaF6GLiaTmf5NX88OZaO3HymTAGTeIoicBUjqzmMF6sF5raPFjuqLFibrrw/132","comment_is_top":false,"comment_ctime":1647700507,"is_pvip":false,"replies":[{"id":"123882","content":"感觉实现难度非常大","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1647832856,"ip_address":"","comment_id":338753,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647700507","product_id":100105701,"comment_content":"关于思考题分片不均匀的问题，是否可以在分片时增加权重，一个调度根据各分片的数据量动态调整各分片的权重","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557484,"discussion_content":"感觉实现难度非常大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647832856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338259,"user_name":"开心小毛","can_delete":false,"product_type":"c1","uid":1023762,"ip_address":"","ucode":"9D57A2773759F3","user_header":"","comment_is_top":false,"comment_ctime":1647398543,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647398543","product_id":100105701,"comment_content":"我的思考题答案：把”用户“和“文件”拆分成两个微服务，如此一来用户服务按用户ID分片，文件服务按文件ID分片。","like_count":0},{"had_liked":false,"id":337565,"user_name":"Mike","can_delete":false,"product_type":"c1","uid":1327837,"ip_address":"","ucode":"62D5FC0D5BA89E","user_header":"https://static001.geekbang.org/account/avatar/00/14/42/dd/3a1055ab.jpg","comment_is_top":false,"comment_ctime":1646895762,"is_pvip":true,"replies":[{"id":"123370","content":"分片就是对用户ID做hash，然后分片。因为不同用户上传文件数量不同，这样就会产生不均匀。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646962189,"ip_address":"","comment_id":337565,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646895762","product_id":100105701,"comment_content":"老师，思考题方面，是不是可以对用户ID做一次hash然后分片来解决数据不均匀的问题？也不影响单用户上的查询","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555527,"discussion_content":"分片就是对用户ID做hash，然后分片。因为不同用户上传文件数量不同，这样就会产生不均匀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646962190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336977,"user_name":"Leader","can_delete":false,"product_type":"c1","uid":2748925,"ip_address":"","ucode":"90E93A28D3C16D","user_header":"https://static001.geekbang.org/account/avatar/00/29/f1/fd/003cf398.jpg","comment_is_top":false,"comment_ctime":1646510650,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1646510650","product_id":100105701,"comment_content":"对于老师提出的问题，我认为可以使用一致性hash，对user_id计算哈希得到顺时针第一个node，如果使用了一定量第一个node的存储空间，则接下来的文件顺着存到第二个node，以此类推，直到给定的第N个node为止。查找的时候顺着node一个个查找即可。<br><br>这里N的设置和每个node使用空间的设置共同决定了用户可以上传最大的文件数量。我们保证正常用户只需要在一两个node上操作即可，对于存储文件过多的用户牺牲一些性能也是ok的。","like_count":0,"discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571625,"discussion_content":"好像与一致性Hash的概念不符，这样通过Key并不能直接得到存储位置，增加了查找耗时和复杂度。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652317702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336404,"user_name":"Tim","can_delete":false,"product_type":"c1","uid":1749194,"ip_address":"","ucode":"E665011E5BB6AF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL6sbiaEsWOIFiaCSe0KL1alJcsb9LhNRkQlMpNTbdCoZMqHghfXn02WsjwcWn5A9FfTXx3bkdnxSicg/132","comment_is_top":false,"comment_ctime":1646129443,"is_pvip":false,"replies":[{"id":"122981","content":"我也觉得不是很合适。<br><br>07提到了HBase替代方案。但是用HBase替代的话，存储结构如何设计呢？需要考虑下。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646188509,"ip_address":"","comment_id":336404,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1646129443","product_id":100105701,"comment_content":"咨询下老师，用mysql存储这么大的数据是否合适？有没有其他的替代方案？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554021,"discussion_content":"我也觉得不是很合适。\n\n07提到了HBase替代方案。但是用HBase替代的话，存储结构如何设计呢？需要考虑下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646188509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2380496,"avatar":"https://static001.geekbang.org/account/avatar/00/24/52/d0/fa6dde52.jpg","nickname":"瑾年","note":"","ucode":"E98E81AE0FB713","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553948,"discussion_content":"mysql如果实现分库分表的话，是支持的。\n其他的就要考虑分片数据库了，太多了（Hbase、Doris、OceanBase等等）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646140486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336370,"user_name":"瑾年","can_delete":false,"product_type":"c1","uid":2380496,"ip_address":"","ucode":"E98E81AE0FB713","user_header":"https://static001.geekbang.org/account/avatar/00/24/52/d0/fa6dde52.jpg","comment_is_top":false,"comment_ctime":1646117211,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646117211","product_id":100105701,"comment_content":"思考题：针对于数据倾斜的思考：<br>1、问题？数据倾斜导致资源不能充分利用；所以要围绕资源充分利用来处理<br>2、用户创建了大量文件，导致 File 和 Block 生成大量的数据，所以要实现File 和 Block 的均衡<br><br>个人想法：<br>1、设置一个阈值（当数据量达到该值之后，触发重新分配算法），同时记录达到阈值的相关信息。未达到阈值的数据使用以前的算法。<br>2、处理已经存在的数据根据新的分配算法（例如：File: SHA256(user_id+file_id); Block: SHA256(user_id+file_id+block_id) ）进行重新分配。还要考虑分配期间，用户请求的处理。<br>3、读取时，需要判断该用户采用哪种算法（是否达到阈值的标识信息）。<br><br>优化：达到数据倾斜问题，一般是数据量大的时候导致的，所以可以考虑将两种算法对应不同的分片数据库。<br>注意：我们要处理的是 File 和 Block 的分片算法，User 使用第一套算法即可。","like_count":0},{"had_liked":false,"id":336109,"user_name":"ᯤ⁵ᴳ","can_delete":false,"product_type":"c1","uid":1621494,"ip_address":"","ucode":"BA8F60B05D1389","user_header":"https://static001.geekbang.org/account/avatar/00/18/bd/f6/558bb119.jpg","comment_is_top":false,"comment_ctime":1645932685,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1645932685","product_id":100105701,"comment_content":"伏羲 Dbox 名字起的都好像华为云的内部工具😂","like_count":0,"discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571626,"discussion_content":"像是DropBox的缩写","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652317820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336022,"user_name":"youngitachi","can_delete":false,"product_type":"c1","uid":1214582,"ip_address":"","ucode":"88717CA8B8ED64","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/76/c69b7fe5.jpg","comment_is_top":false,"comment_ctime":1645851182,"is_pvip":true,"replies":[{"id":"122872","content":"嗯，一致性hash在查找文件或者block的时候如何查找呢？","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646014581,"ip_address":"","comment_id":336022,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645851182","product_id":100105701,"comment_content":"思考题应该就是分库分表中可能遇到的数据倾斜的问题，这个时候可通过增加一个分片来解决，不过一般分库分表用的普通hash算法会涉及大量数据迁移，肯定是不行的，可以使用一致性hash算法来替代对分片key进行的普通的hash。<br>不过一般的一致性hash算法其实在新增实例的时候效果并不是特别好，因为它只会缓解该实例旁边的一个实例的存储压力，这个时候需要引入虚拟结点来处理。<br>一致性hash的介绍：https:&#47;&#47;segmentfault.com&#47;a&#47;1190000021199728","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553650,"discussion_content":"嗯，一致性hash在查找文件或者block的时候如何查找呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646014581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336020,"user_name":"youngitachi","can_delete":false,"product_type":"c1","uid":1214582,"ip_address":"","ucode":"88717CA8B8ED64","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/76/c69b7fe5.jpg","comment_is_top":false,"comment_ctime":1645850075,"is_pvip":true,"replies":[{"id":"122871","content":"篇幅有限，无法面面俱到","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1646014451,"ip_address":"","comment_id":336020,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1645850075","product_id":100105701,"comment_content":"不知道是不是老师为了突出重点，有意在用例图里面没有提到用户查询功能，因此在后面计算QPS的时候也没有考虑，不过真正在设计这个系统的时候，应该还是需要考虑的吧？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553648,"discussion_content":"篇幅有限，无法面面俱到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646014451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571629,"discussion_content":"“用户查询”，是指用户查询自己的全部文件吗？网盘好像不允许按关键字搜索别人的文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652318021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}