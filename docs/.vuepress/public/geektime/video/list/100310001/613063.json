{"id":613063,"title":"57｜再回首：“函数”单元小结","content":"<p>你好，我是尹会生。</p><p>这一章我带你学习了Python中一个非常重要的概念——函数。当一段程序有了函数之后，它的复杂度和灵活性都会随之升高。所以函数既是门槛又是台阶，掌握了函数，你就可以编写日常大多数的程序了。</p><p>对于初学编程的你来说，函数可以改变你对程序是自上而下执行的认知，它的执行顺序变为从函数引用到函数体的过程，且稍微大型的程序还会涉及从函数体里再去调用另一个函数的问题。这就让很多同学产生了一系列问题：哪些代码应该被定义为一个函数，哪些代码应该被定义为多个函数，程序写出来很快就忘记了参数的数量和类型了，每次都要重读一遍代码，怎样维护函数等等。</p><p>所以这节课，我想从函数的定义与调用、函数的参数与返回值来为你总结一下如何定义好一个函数，帮你更快掌握在Python程序中使用函数的方法。</p><h2>函数的定义与调用</h2><p>我先来带你复习一下函数的定义。</p><p>函数是一段具有特定功能的、可重复使用的代码段。它的写法是使用def关键字后跟着函数的名称、参数，并利用缩进组合了多行代码，形成的一个代码片段。</p><p>如果把编写整个程序比喻成制作一块蛋糕，那么函数就是制作蛋糕的每一个步骤。如果说做蛋糕的每一个步骤是把采用不同的原材料看作明确的分界线的话，那么对比之下代码就要困难得多。因为编写一个完整的程序，它的功能是相互依赖的，我们称作“耦合”。</p>","comments":[{"had_liked":false,"id":382208,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1696903615,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# IP 地址是必填项 当为第一个固定参数\n# 用户密码 和 密钥 存在一个就行 使用位置参数\n# http协议 https协议 存在一个就行 使用自定义参数\n# 端口非默认的，http默认端口80，https默认端口443 使用自定义参数\ndef connect(ip_address: str, *auth_key, protocal=&quot;http&quot;, port=80):\n    # 检测授权\n    if len(auth_key) == 1:\n        print(&quot;填入的是密钥&quot;)\n    elif len(auth_key) == 2:\n        print(&quot;填入的是用户密码&quot;)\n\n    # 协议处理\n    if protocal == &quot;https&quot; and port == 80:\n        port = 443\n\n    print(f&quot;服务器地址：{protocal}:&#47;&#47;{ip_address}:{port} 权限：{auth_key}&quot;)\n    \n\nconnect(&quot;12.13.22.1&quot;, &#39;username&#39;, &#39;password&#39;)\nconnect(&quot;12.13.22.1&quot;, &#39;username&#39;, &#39;password&#39;, protocal=&quot;https&quot;)\nconnect(&quot;12.13.22.1&quot;, &#39;secretkey&#39;)\nconnect(&quot;12.13.22.1&quot;, &#39;secretkey&#39;, protocal=&quot;https&quot;)\n\n\n输出如下：\n\n填入的是用户密码\n服务器地址：http:&#47;&#47;12.13.22.1:80 权限：(&#39;username&#39;, &#39;password&#39;)\n填入的是用户密码\n服务器地址：https:&#47;&#47;12.13.22.1:443 权限：(&#39;username&#39;, &#39;password&#39;)\n填入的是密钥\n服务器地址：http:&#47;&#47;12.13.22.1:80 权限：(&#39;secretkey&#39;,)\n填入的是密钥\n服务器地址：https:&#47;&#47;12.13.22.1:443 权限：(&#39;secretkey&#39;,)","like_count":3},{"had_liked":false,"id":368153,"user_name":"yanyu-xin","can_delete":false,"product_type":"c3","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1675937425,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from typing import NewType\n# 新建 UserId 类型\nUserId = NewType(&#39;UserId&#39;, int)\n# 新建 Password 类型\nUserPassword = NewType(&#39;UserPassword&#39;, str)\n# 新建 Protocol 类型\nProtocol = NewType(&#39;Protocol&#39;, dict)\n\ndef connect(ip:UserId,\n            name=None:str, \n            password=None:UserPassword, \n            ports=None:int,\n            keyt=None:int, \n            http=None:Protocol,\n            https=None:Protocol) -&gt; bool : \n    # 逐一判断输入参数\n    if agr_ok(ip, name, password, ports, keyt, http, https) :\n        # 逐一连接服务器\n        if connect_ok(ip:UserId, name, password, ports, keyt, http, https) :\n            return True\n    return False\n\ndef connect_ok(ip:UserId,\n                name:str,\n                password:UserPassword,\n                ports:int,\n                keyt:int,\n                http:Protocol,\n                https:Protocol) -&gt; bool :\n    &#39;&#39;&#39; 逐一连接服务器&#39;&#39;&#39;\n    if connect_1(ip, name, password, http) :\n        return True\n    if connect_2(ip, name, password, https) :\n        return True\n    if connect_3(ip, keyt, http) :\n        return True\n    if connect_4(ip, keyt, https) :\n        return True\n    if  connect_5(ip, ports, name, password, http):\n        return True\n    if connect_6(ip, ports, name, password, https):\n        return True\n    if connect_7(ip, ports, keyt, http):\n        return True\n    if connect_8(ip, ports, keyt, https):\n        return True\n    return False\n\ndef agr_ok(ip:UserId, name:str, password:UserPassword, ports:int, keyt:int, http:Protocol, https:Protocol) -&gt; bool : \n    &#39;&#39;&#39; 逐一判断输入参数的格式&#39;&#39;&#39;\n    if is_ip(ip)  and \\\n        is_name(name) and \\\n        is_password(password)  and \\\n        is_ports(ports) and \\\n        is_keyt(keyt) and \\\n        is_https(https) and \\\n        is_https(http)  :\n        return True\n    return False","like_count":3},{"had_liked":false,"id":384992,"user_name":"Geek_0c747b","can_delete":false,"product_type":"c3","uid":3790728,"ip_address":"广东","ucode":"7D7251D7B98B08","user_header":"","comment_is_top":false,"comment_ctime":1701915478,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"根据你的需求，我设计了一个 `connect()` 函数，它可以接受多种参数组合来连接服务器。这个函数使用了 Python 的可选参数和默认参数，以便在不同的情况下提供不同的参数。\n\n```python\ndef connect(ip_address: str, protocol: str, port: int = None, username: str = None, password: str = None, key: str = None):\n    if username and password:\n        print(f&quot;Connecting to {ip_address} using {protocol} with username {username} and password {password}&quot;)\n    elif key:\n        print(f&quot;Connecting to {ip_address} using {protocol} with key {key}&quot;)\n    else:\n        print(&quot;Invalid parameters&quot;)\n\n    if port:\n        print(f&quot;Port: {port}&quot;)\n```\n\n在这个函数中，`ip_address` 和 `protocol` 是必需的参数，因为无论如何都需要它们来连接服务器。`port`、`username`、`password` 和 `key` 是可选的参数，可以根据需要提供。如果提供了 `username` 和 `password`，那么函数会使用它们来连接服务器。如果提供了 `key`，那么函数会使用它来连接服务器。如果既没有提供 `username` 和 `password`，也没有提供 `key`，那么函数会打印一条错误消息。\n\n请注意，这个函数只是一个示例，它并没有实际连接到服务器。在实际使用中，你需要替换 `print()` 语句，以执行实际的连接操作。                                                                                                   .","like_count":1},{"had_liked":false,"id":387612,"user_name":"李云龙","can_delete":false,"product_type":"c3","uid":3201926,"ip_address":"北京","ucode":"785924B16BE788","user_header":"https://static001.geekbang.org/account/avatar/00/30/db/86/51ec4c41.jpg","comment_is_top":false,"comment_ctime":1708247613,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"分享我的答案：\ndef connect(ip:str, port = 0, usr=&quot;&quot;, passwd=&quot;&quot;, isHttp = False, isHttps = False, keys=&quot;&quot;) -&gt; bool:\n    &quot;&quot;&quot; 根据参数个数进行拆分, 调用子函数进行连接。 这里假设所有的子函数连接均执行成功\n        参数的合法性检查延后至子函数中&quot;&quot;&quot;\n    if ip == &quot;&quot;:\n        print(&quot;Please enter an IP address&quot;)\n        return False\n    param_cnt = 0\n    if port != 0:\n        param_cnt += 1\n    if usr != &quot;&quot;:\n        param_cnt += 1\n    if passwd != &quot;&quot;:\n        param_cnt += 1\n    if isHttp:\n        param_cnt += 1\n    if isHttps:\n        param_cnt += 1\n    if keys != &quot;&quot;:\n        param_cnt += 1\n\n    if isHttp:\n        match param_cnt:\n            case 5:\n                print(&quot;No.5 subfunction is called&quot;)\n                return True\n            case 4:\n                if usr != &quot;&quot;:\n                    print(&quot;No.1 subfunction is called&quot;)\n                    return True\n                else:\n                    print(&quot;No.7 subfunction is called&quot;)\n                    return True\n            case 3:\n                print(&quot;No.3 subfunction is called&quot;)\n                return True\n            case _:\n                print(&quot;parameter number error&quot;)\n                return False\n    else:\n        match param_cnt:\n            case 5:\n                print(&quot;No.6 subfunction is called&quot;)\n                return True\n            case 4:\n                if usr != &quot;&quot;:\n                    print(&quot;No.2 subfunction is called&quot;)\n                    return True\n                else:\n                    print(&quot;No.8 subfunction is called&quot;)\n                    return True\n            case 3:\n                print(&quot;No.4 subfunction is called&quot;)\n                return True\n            case _:\n                print(&quot;parameter number error&quot;)\n                return False","like_count":0},{"had_liked":false,"id":384647,"user_name":"760418","can_delete":false,"product_type":"c3","uid":3768167,"ip_address":"上海","ucode":"C160176FE97575","user_header":"","comment_is_top":false,"comment_ctime":1701271156,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"学习了，谢谢老师","like_count":0},{"had_liked":false,"id":384509,"user_name":"依托答辩","can_delete":false,"product_type":"c3","uid":2383299,"ip_address":"上海","ucode":"4BE79E8A030813","user_header":"https://static001.geekbang.org/account/avatar/00/24/5d/c3/b8bb888c.jpg","comment_is_top":false,"comment_ctime":1701074280,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"@wraps(func)干嘛用的，好像不加这一句，代码也完整啊","like_count":0}]}