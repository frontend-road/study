{"id":134747,"title":"32 | 在Swift中创建数组的N种方式","content":"<p><strong>课件地址</strong></p><p><a href=\"https://gitee.com/geektime-geekbang/swift-course\">https://gitee.com/geektime-geekbang/swift-course</a></p>","comments":[{"had_liked":false,"id":134611,"user_name":"Life is fantastic","can_delete":false,"product_type":"c3","uid":1627686,"ip_address":"","ucode":"CB53002C82F1AA","user_header":"https://static001.geekbang.org/account/avatar/00/18/d6/26/8c06d424.jpg","comment_is_top":false,"comment_ctime":1568878136,"is_pvip":false,"replies":[{"id":58064,"content":"这个看你的具体需求了，大部分情况下应该不会有问题。 \n数组的值语义只是保证了自己持有的数组不会被别人篡改，但是数组里的引用类型被修改是有可能的，如果业务上需求，需要自己保证不会被修改，比如通过因此修改方法，多线程情况下通过加锁等等。   应该99%的情况都不需要你手动复制","user_name":"作者回复","user_name_real":"Geek_f72435","uid":1341726,"ctime":1573637032,"ip_address":"","comment_id":134611,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"老师你从值语义写时复制的角度怎么看在swift数组包含引用类型，两个数组实例都是可变的，如何解决？提前拷贝一份foundation，手动复制？这样保证代码安全吗？","like_count":0,"discussions":[{"author":{"id":1341726,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLxtKhpmvzx2VB4iajicfJVFmQR3eP3xBpdpQEovpSqUfAOrNImvYwVb7P37ibI0ONziau9sbFEk8oDaA/132","nickname":"elfgate","note":"","ucode":"3C0B5F7C1F664C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467828,"discussion_content":"这个看你的具体需求了，大部分情况下应该不会有问题。 \n数组的值语义只是保证了自己持有的数组不会被别人篡改，但是数组里的引用类型被修改是有可能的，如果业务上需求，需要自己保证不会被修改，比如通过因此修改方法，多线程情况下通过加锁等等。   应该99%的情况都不需要你手动复制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573637032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146290,"user_name":"Life is fantastic","can_delete":false,"product_type":"c3","uid":1627686,"ip_address":"","ucode":"CB53002C82F1AA","user_header":"https://static001.geekbang.org/account/avatar/00/18/d6/26/8c06d424.jpg","comment_is_top":false,"comment_ctime":1572490209,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"今天我一开始以为names = persons.keys会是个数组的写时复制，会共享内存，看了API才知道自己错了。看了段时间线程回头补补集合，今天又跟老师学到东西了。","like_count":0},{"had_liked":false,"id":135215,"user_name":"易翔","can_delete":false,"product_type":"c3","uid":1303537,"ip_address":"","ucode":"CAEC58B0C3D414","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/f1/95d08ba9.jpg","comment_is_top":false,"comment_ctime":1569065093,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"求课件","like_count":0}]}