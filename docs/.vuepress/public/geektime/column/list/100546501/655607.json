{"id":655607,"title":"07｜路由设计：如何借助Vue Router设计出更合理的路由？","content":"<p>你好，我是Barry。</p><p>上节课我留过一个思考题，如果在我们平台中有一些公共的展示的内容，例如平台的Icon，我们希望在每一个页面都可以看到它，并且点击可以跳回首页，要怎么实现呢？</p><p>比较常见的一个做法就是通过路由来管理。实际开发中，一个企业级项目的页面众多，每一个页面都需要有对应的路由地址，为了保证所有链接可用，自然需要统一管理起来。</p><p>路由的配置管理在Vue框架开发中非常重要，是我们完成后续各功能模块开发的前提。因为我们需要提前配置好路由，才能控制网址和现实页面的对应关系。</p><p>这节课，我们就一起动手实践，最后给我们的视频平台配置路由。在动手之前，我们先简单了解一下 Vue 的官方路由。</p><h2>初识 Vue Router</h2><p>Vue 的官方路由是Vue Router ，在<a href=\"https://time.geekbang.org/column/article/653986\">第4节课</a>，我们也了解到过它能帮我们在Vue框架中轻松快捷地配置路由。</p><p>我们先来认识一下Vue Router中两个至关重要的标签。</p><p>1.router-link：路由的链接标签，to属性是将要跳转的路由地址（即我们预先配置好的路由地址），它的用法似于HTML的&lt;a&gt;标签。</p><p>2.router-view：路由组件出口，相当于用来显示路由地址对应组件的HTML&lt;div&gt;标签。</p><p>当我们在页面要点击链接跳转到项目中的页面时，链接就要用到router-link标签。</p><!-- [[[read_end]]] --><pre><code class=\"language-javascript\">&lt;router-link to=\"/\"&gt;Go to Home&lt;/router-link&gt;\n</code></pre><p>当我们在页面上要显示路由对应的组件时，就要用到router-view标签。</p><pre><code class=\"language-javascript\">&lt;router-view/&gt;\n</code></pre><p>下面我们进入实操练习，体会一下在Vue项目中如何使用Vue Router配置路由配置。</p><h2>Vue Router实操练习</h2><p>为了直观看到路由的效果，我们先来定义一个简单的路由，把它配置到Vue上。</p><p>这个流程一共4步走。第一步，我们要安装Vue Router的依赖包到当前项目中，需要运行后面这条命令。</p><pre><code class=\"language-javascript\">npm install vue-router@4\n</code></pre><p>第二步，我们要定义一个路由配置的文件。比如在项目src文件夹下建一个router文件夹，然后进入router文件夹，在里面创建一个index.js文件。</p><pre><code class=\"language-javascript\">import Vue from 'vue'\n//引入Vue Router组件\nimport Router from 'vue-router'\n//让Vue使用Router\nVue.use(Router)\nconst routes = [\n  { path: '/', component: Home },    //路由地址和组件一一对应，注意需要换成自己的页面\n  { path: '/about', component: About }\n]\n\nconst router = new Router({\n  routes: routes\n})\n\nexport default router;\n</code></pre><p>第三步，打开main.js，将刚刚在文件中定义好的路由绑定到Vue实例上。</p><pre><code class=\"language-javascript\">import Vue from 'vue'\n//引入刚刚定义好的Vue Router 配置文件\nimport router from './router/index.js'\nimport App from './App'\n\nnew Vue({\n  el: '#app',\n  router,    //将路由绑定在Vue实例上\n  components: {\n    App\n  },\n  template: '&lt;App/&gt;'\n})\n</code></pre><p>第四步，在App.vue中加上router-view标签。</p><pre><code class=\"language-javascript\">&lt;template&gt;\n  &lt;div id=\"app\"&gt;\n    &lt;!-- 路由出口 --&gt;\n    &lt;!-- 路由匹配到的组件将渲染在这里 --&gt;\n    &lt;router-view/&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  name: 'App'\n}\n&lt;/script&gt;\n</code></pre><p>这样一个最简单的路由就配置好啦！我们运行后面的命令，启动Vue来看一下效果。</p><pre><code class=\"language-javascript\">npm run dev\n</code></pre><p>这时候我们通过浏览器直接看一下页面的效果。</p><p>我们在浏览器地址栏输入localhost:8080，显示的就是Home组件。你也可以尝试更换路由地址，例如输入localhost:8080/about ，显示的就会是About组件。</p><h3>带参数的动态路由匹配</h3><p>刚才通过简单的几个步骤，我们学会了简单的路由配置，也把路由绑定在了Vue实例上。接下来，我们再了解一些路由配置的其他常见功能，这些也是在我们后边项目开发中会用到的知识点，用好这些功能，后面项目开发才会更加高效。</p><p>很多时候，我们需要将给定匹配模式的路由映射到同一个组件。</p><p>例如，我们有一个商品详情组件，用来显示所有商品的详细信息，但商品 ID 不同，我们需要通过ID来查询商品的详细信息，并进行展示。所以每一次的点击，都需要带上商品的ID进行查询。在 Vue Router 中，我们可以在路径中使用一个动态字段来实现，我们称之为<strong>路径参数</strong>&nbsp;。</p><pre><code class=\"language-javascript\">const routes = [\n  // 动态字段以冒号开始\n  { path: '/product/detail/:id', component: ProductDetail },\n]\n</code></pre><p>这样，带路径参数的路由就配好了。</p><p>这时我们打开http://localhost:8080/product/detail/1，显示的应该是id为1的商品。打开http://localhost:8080/product/detail/2，显示的就应该是id为2的商品。</p><p>在商品详情页面中可以通过route的params方式来获取当前的ID，params是路由传值的方式，后面是代码实现。</p><pre><code class=\"language-javascript\">this.$route.params.id\n</code></pre><h3>重定向</h3><p>当我们在开发过程中，如果遇到路由重定向的需求，需要跳转到路由配置的地址时，想转到其他地址，就可以使用重定向，<strong>redirect是重定向到的地址</strong>。</p><pre><code class=\"language-javascript\">const routes = [{ path: '/home', redirect: '/' }]\n</code></pre><p>或者你可以采用下面的实现方式。</p><pre><code class=\"language-javascript\">const routes = [{ path: '/home', redirect: { name: 'homepage' } }]\n</code></pre><h3>别名</h3><p>有时想通过更多的地址访问同一个组件，就可以给路由添加别名，alias的值就是对应其他地址的名称，后面具体的代码实现。</p><pre><code class=\"language-javascript\">const routes = [{ path: '/', component: Homepage, alias: '/home' }]\n</code></pre><p>当我们需要更多地址时，alias可以是数组。</p><pre><code class=\"language-javascript\">const routes = [{ \npath: '/', component: Homepage, \nalias: ['/addr1','/addr2','/addr3'] \n}]\n</code></pre><h3>嵌套路由</h3><p>有时组件内要根据地址栏的地址嵌套不同的其他组件，我们就要用到嵌套路由。</p><p>例如几个页面要使用相同的布局，或者相同的组件，为了减少重复的工作，我们就会把公共的部分定义为父组件，中间可切换的部分用<router-view>标签根据地址栏的路由地址渲染。</router-view></p><p>我们还是结合例子来理解，用户详情页需要显示不同的信息，这时候就需要嵌套不同的组件。</p><p>接下来我们通过两个案例一起认识一下嵌套路由。</p><pre><code class=\"language-plain\">/user/:id/userMes&nbsp; //显示用户个人信息\n/user/:id/photos&nbsp; // 现实用户个人相册\n\n//接下来我们看一下使用时的具体写法\n/user/1/profile&nbsp; 显示id为1的用户的个人信息\n/user/1/posts 显示id为1的用户的相册\n/user/2/profile&nbsp; 显示id为2的用户的个人信息\n/user/2/posts 显示id为2的用户的相册\n</code></pre><p>那么在Router中该怎么配置呢？具体代码是后面这样。</p><pre><code class=\"language-javascript\">const routes = [\n&nbsp; {\n&nbsp; &nbsp; path: '/user/:id',\n&nbsp; &nbsp; component: User,\n&nbsp; &nbsp; children: [\n&nbsp; &nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; // 当 /user/:id/profile 匹配成功\n&nbsp; &nbsp; &nbsp; &nbsp; // UserProfile 将被渲染到 User 的 &lt;router-view&gt; 内部\n&nbsp; &nbsp; &nbsp; &nbsp; path: '/profile',\n&nbsp; &nbsp; &nbsp; &nbsp; component: UserProfile\n&nbsp; &nbsp; &nbsp; },\n&nbsp; &nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; // 当 /user/:id/posts 匹配成功\n&nbsp; &nbsp; &nbsp; &nbsp; // UserPosts 将被渲染到 User 的 &lt;router-view&gt; 内部\n&nbsp; &nbsp; &nbsp; &nbsp; path: '/posts',\n&nbsp; &nbsp; &nbsp; &nbsp; component: UserPosts\n&nbsp; &nbsp; &nbsp; },\n&nbsp; &nbsp; ],\n&nbsp; },\n]\n</code></pre><p>这样当 /user/:id/profile 匹配成功时，UserProfile 组件将被渲染到 User 的 <router-view> 内部，当 /user/:id/posts 匹配成功时，UserPosts 组件将被渲染到 User 的 <router-view> 内部。</router-view></router-view></p><h3>懒加载</h3><p>因为路由配置时引入了很多组件，当打包构建应用时，JavaScript 包会变得非常大，影响页面加载，这样不仅会造成资源的消耗，还会影响用户的体验。如果我们能当路由被访问的时候才加载对应组件，就会更加高效。</p><p>具体的实现方式我写在了后面。</p><pre><code class=\"language-javascript\">const ComponentA = （）=&gt;import('需要加载的模块地址')\n</code></pre><p>后面这种语法也是正确的。</p><pre><code class=\"language-javascript\">ComponentA：resolve=&gt;(['需要加载的路由的地址'，resolve])\n</code></pre><p>我们再结合Vue Router配置文件看一下懒加载的实现。</p><pre><code class=\"language-javascript\">// 将\n// import UserDetails from './views/UserDetails.vue'\n// 替换成\nconst UserDetails = () =&gt; import('./views/UserDetails.vue')\n\nconst router = new Router({\n  // ...\n  routes: [{\n   path: '/users/:id', \n  component: UserDetails\n})\n</code></pre><p>到这里，如何配置路由的核心知识我们就已经学习完了。</p><h3>API</h3><p>为了让你对Vue Router的功能和属性更加熟悉，今后可以灵活地使用它。我们再来熟悉一些常见的常见Router API，它们能让我们在组件中实现路由的跳转、回退等功能。</p><p>1.跳转到其他路由页面</p><p>在代码中我们使用this.$router.push来控制路由页面的跳转，比如跳转到About组件页面。</p><pre><code class=\"language-javascript\">this.$router.push('/about')\n</code></pre><p>这个跳转等同于点击页面上的router-link链接。</p><pre><code class=\"language-javascript\">&lt;router-link :to=\"/about\"&gt;跳转到About&lt;/router-link&gt;\n</code></pre><p>有时跳转到下一个页面需要带上一些信息，比如搜索关键词等，就需要跳转时链接带上参数，就像后面这样。</p><pre><code class=\"language-javascript\">this.$router.push({ path: '/about', query: { keyword: '二次元美少女' } })\n</code></pre><p>在HTML代码中我们想要实现参数的传值，就直接通过<router-link>标签来实现，后面是具体的实现代码。</router-link></p><pre><code class=\"language-javascript\">&lt;router-link :to=\"{ name: 'About', query: { keyword: '二次元美少女' }}\"&gt;\n  跳转到About\n&lt;/router-link&gt;\n</code></pre><p>这样，跳转到About组件时链接上就会带上参数 “keyword=二次元美少女”。也就是说，地址本来是 “localhost:8080/about”，带上参数后是 “localhost:8080/about?keyword=二次元美少女”。那么在About组件页，我们可以通过route.query来获得当前页面链接上的参数。</p><pre><code class=\"language-javascript\">this.$route.query.keyword  //--&gt;'二次元美少女'\n</code></pre><p>有一些隐秘的信息不想在链接上展示，那么可以跳转时给组件传参数。</p><pre><code class=\"language-javascript\">// 命名的路由，并加上参数，让路由建立 url\nthis.$router.push({ name: 'user', params: { username: 'eduardo' } })\n</code></pre><p>那我们就可以在HTML代码块中直接用后面这种方式来实现。</p><pre><code class=\"language-javascript\">&lt;router-link :to=\"{ name: 'user', params: { username: 'eduardo' }}\"&gt;\n&nbsp; User\n&lt;/router-link&gt;\n</code></pre><p>name是组件的名字，params是要给组件传的参数对。这两种方式是同样的效果，跳转到user组件页，并且带着参数username=‘eduardo’。</p><p>在user组件页，我们可以使用router.params来取到路由带来的参数，这样当我们需要通过一些字段做数据处理或接口请求时，就可以直接使用传递的值。</p><pre><code class=\"language-javascript\">this.$router.params.username  //--&gt;eduardo\n</code></pre><p>2.回到上一页</p><p>对于回到上一页的应用，在项目中也经常用到，比如这样的场景：提交完表单，我们需要回到列表页或者首页。</p><p>那么这个功能在代码中应该如何控制呢？你可以通过下面的代码来实现，这样就实现回到上一页的功能。</p><pre><code class=\"language-javascript\">this.$router.go(-1)\n</code></pre><p>以此类推，如果想要回到上一页的上一页的代码就是后面这样。</p><pre><code class=\"language-javascript\">this.$router.go(-2)\n</code></pre><p>3.组件的路由钩子函数</p><p>第四节课我们学习过Vue组件在生命周期中的钩子函数，现在我们再来学习跟路由相关的两个常用钩子函数。</p><p>如果我们在进入页面前，有一些要处理的操作（比如重置缓存），就要用到beforeRouteEnter函数。需要注意此时组件实例还没被创建，不能通过this访问组件实例。后面是具体代码示例。</p><pre><code class=\"language-javascript\">&lt;template&gt;\n&lt;div id=\"MyComponent\"&gt;&lt;/div&gt;\n&lt;/template&gt;    \n&lt;script&gt;\nexport default {\n    name: 'MyComponent',\n    data(){\n    //这里定义数据\n      return{\n        ......\n      }\n  },\n  methods:{\n    //这里定义方法\n    ......\n  },\n  beforeRouteEnter(to, from) {\n    // 在渲染该组件的对应路由被验证前调用\n    // 不能获取组件实例 `this`\n    // 因为当守卫执行时，组件实例还没被创建\n  }\n}\n&lt;/script&gt;\n</code></pre><p>相应地，在离开页面前，有一些要处理的操作，比如我们希望用户在离开页面之前收到一个“确定要离开么”的弹窗。这种情况就会用到beforeRouteLeave函数。</p><p>此时组件实例已经被创建，可以通过this访问组件实例。代码是后面这样。</p><pre><code class=\"language-javascript\">beforeRouteLeave(to, from) {\n    // 在导航离开渲染该组件的对应路由时调用\n    // 可以访问组件实例 `this`\n }\n</code></pre><p>4.全局路由钩子函数</p><p>除了进入页面和离开页面的钩子函数，还有一个比较重要的钩子函数——全局函数。它定义在Vue Router的配置文件里，也就是刚刚我们建的src/router/index.js ，对所有路由页面都生效。</p><p>比如跳转页面之前需要查看当前用户是否已经登陆，如果没有登陆要重定向到登陆页。这时就会用到router.beforeEach。</p><pre><code class=\"language-javascript\">router.beforeEach(async (to, from) =&gt; {\n   if (\n     // 检查用户是否已登陆\n     !isAuthenticated &amp;&amp;\n     // 避免无限重定向\n     to.name !== 'Login'\n   ) {\n     // 将用户重定向到登陆页面\n     return { name: 'Login' }\n   }\n })\n</code></pre><p>而当我们想要统计页面访问数量时，就可以使用router.afterEach钩子函数。显然，这个函数要在路由跳转之后调用。</p><pre><code class=\"language-javascript\">router.afterEach((to, from) =&gt; {\n  //do something\n})\n</code></pre><p>到这里，Vue Router的核心知识我们就梳理好了。但纸上得来终觉浅，绝知此事要躬行。接下来我们在真正的项目中，体会一下它们都是如何应用的。</p><h2>视频平台中如何使用Vue Router</h2><p>首先我们来梳理一下，视频平台中都有哪些页面。</p><ul>\n<li>首页</li>\n<li>登陆</li>\n<li>注册</li>\n<li>视频列表</li>\n<li>视频详情</li>\n<li>视频发布</li>\n<li>个人中心</li>\n<li>创作中心</li>\n<li>数据中心</li>\n<li>我的资料</li>\n</ul><p>在这里我们需要考虑一个问题：因为我们大部分的页面都使用相同的Header，为了减少重复工作。我们需要将Header和Footer写成公共组件。展示效果是后面这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/09/51/09969fa83abdbb1c3c0bd8e7d93f4f51.jpg?wh=2619x1003\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/a5/52/a5f3b10466b5605eaea7b090a29a1752.jpg?wh=2923x989\" alt=\"\"></p><p>接下来，我们把Header和Footer定义成组件，然后定义一个模版，让其他内容根据路由地址展示在中间。</p><p>这时候我们就需要使用<router-view>标签来实现，后面是对应的实现代码。</router-view></p><pre><code class=\"language-javascript\">&lt;template&gt;\n  &lt;div class=\"layout\"&gt;\n    &lt;my-header ref=\"myheader\"&gt;&lt;/my-header&gt;\n    &lt;div class=\"content\"&gt;\n      &lt;router-view ref=\"child\"&gt;&lt;/router-view&gt;\n    &lt;/div&gt;\n    &lt;my-footer&gt;&lt;/my-footer&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport MyHeader from '@/components/PC/MyHeader';\nimport MyFooter from '@/components/PC/MyFooter';\nexport default {\n  name: 'Layout',\n  components: { MyHeader, MyFooter },\n  data() {\n    return {};\n  },\n  mounted(){}\n};\n&lt;/script&gt;\n\n&lt;style lang=\"less\" scoped&gt;\n.content {\n  min-height: calc(100vh - 140px);\n  background: #fff;\n}\n&lt;/style&gt;\n\n</code></pre><p>接下来，我们需要打开src/router/index.js配置路由。</p><p>大部分组件都要用到公用的Header和Footer，并显示在Layout组件下，所以我们把Layout组件配置在router中，也就是头部第一个组件。之后我们把其他页面的路由统一写在Layout的children里。</p><p>具体的代码形式是后面这样，你可以清晰地看到它们的层级关系。到这里，我们就实现了项目的路由配置管理代码。</p><pre><code class=\"language-javascript\">import Vue from 'vue'\nimport Router from 'vue-router'\n\nVue.use(Router)\n() =&gt; import('./views/UserDetails.vue')\nconst router = new Router({\n  routes: [{\n    path: '/',\n    name: 'Layout',\n    component: resolve =&gt; require([`@/pages/Layout/Layout`], resolve),\n    children: [\n      //首页\n      {\n        path: '/',\n        name: 'Index',\n        component: resolve =&gt; require([`@/pages/Index/Index`], resolve)\n      }, {\n        path: '/login',\n        alias: '/register',\n        name: 'Wrapper',\n        component: resolve =&gt; require([`@/pages/Login/Wrapper`], resolve),\n        //登陆页\n        children: [{\n            path: '/login',\n            name: 'Login',\n            component: resolve =&gt; require([`@/pages/Login/Login`], resolve)\n          },\n          //注册页\n          {\n            path: '/register',\n            name: 'Register',\n            component: resolve =&gt; require([`@/pages/Login/Register`], resolve)\n          }\n        ]\n      },\n      //视频列表页\n      {\n        path: '/video/list/:tag',\n        name: 'VideoList',\n        component: resolve =&gt; require([`@/pages/Video/VideoList`], resolve)\n      },\n      //视频搜索页\n      {\n        path: '/video/search/:keyword',\n        name: 'VideoList',\n        component: resolve =&gt; require([`@/pages/Video/VideoList`], resolve)\n      },\n      //视频详情页\n      {\n        path: '/video/detail/:id',\n        name: 'VideoDetail',\n        component: resolve =&gt; require([`@/pages/Video/VideoDetail`], resolve)\n      },\n      //视频发布页\n      {\n        path: '/video/publish',\n        name: 'VideoPublish',\n        component: resolve =&gt; require([`@/pages/Video/VideoPublish`], resolve)\n      },\n      //视频编辑页\n      {\n        path: '/video/edit/:id',\n        name: 'VideoPublish',\n        component: resolve =&gt; require([`@/pages/Video/VideoPublish`], resolve)\n      },\n      //作品列表页\n      {\n        path: '/home/admin',\n        name: 'Admin',\n        component: resolve =&gt; require([`@/pages/Home/Admin`], resolve)\n      },\n      //个人资料页\n      {\n        path: '/home/info',\n        name: 'Info',\n        component: resolve =&gt; require([`@/pages/Home/Info`], resolve)\n      },\n      //数据中心页\n      {\n        path: '/home/data',\n        name: 'Data',\n        component: resolve =&gt; require([`@/pages/Home/Data`], resolve)\n      },\n      //消息通知页\n      {\n        path: '/home/message/:id',\n        name: 'Message',\n        component: resolve =&gt; require([`@/pages/Home/Message`], resolve)\n      },\n      //个人中心页\n      {\n        path: '/home/:id',\n        name: 'Home',\n        component: resolve =&gt; require([`@/pages/Home/Home`], resolve)\n      }\n    ]\n  }]\n})\n\nexport default router;\n</code></pre><p>到这里，我们就完成了路由配置。怎么验证配置成功了呢？你可以跟着后面的操作来直观感受下。</p><p>我们首先启动项目，打开localhost:8080会显示首页。</p><p><img src=\"https://static001.geekbang.org/resource/image/e1/b5/e1539d1bd4098059c5e5b8b59af552b5.jpg?wh=3183x1211\" alt=\"\"></p><p>然后点击右上角的登陆，就会跳转到登陆页。这里我们使用<router-link>标签直接来实现，点击登陆，<router-link>标签中的to属性表示目标路由的链接，有了它用户就会直接通过路由跳转进入login页面，标签里的“/login”就是对应的登陆页面的路由。</router-link></router-link></p><pre><code class=\"language-javascript\">&lt;router-link to=\"/login\"&gt;登陆&lt;/routerlink&gt;\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/30/58/301988fa2fe8cac0d41afd0a48159858.jpg?wh=3183x1431\" alt=\"\"></p><p>我们再来说说平台的登陆功能设计，在用户登陆成功之后，需要再次回到平台的首页，也就是我们刚访问过的路由，我们直接通过router.go(-1)的方法回到上一页。</p><pre><code class=\"language-javascript\">this.$router.go(-1)\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/9a/a3/9a68b186f2a682419246485548cafda3.jpg?wh=3043x1820\" alt=\"\"></p><p>我们继续思考后面这个问题。在平台的首页，用户点击某一个视频，想要查看详情，应该如何来实现呢？</p><p>这时候我们只需要在用户点击视频的方法内调用router.push()，括号内放上对应的路由地址和需要传递的参数，就可以实现跳转了。具体的代码实现我放在下面。</p><pre><code class=\"language-javascript\">this.$router.push(\"/video/detail/\" + video.id);\n</code></pre><p>到这里，我们就实现了平台视频页到视频详情页的跳转，同时路由里也会携带上视频的id（方便我们通过id查询相关信息）。这时，对应的路由呈现就会变成“localhost:8080/#/video/detail/10001”，具体呈现方式你可以参考后面的截图。</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/4b/1e5b9585511192a27d154d0117956f4b.jpg?wh=2834x1820\" alt=\"\"></p><p>点击Header右上角的用户头像，这里我们如果提前放置了与用户相关的菜单，点击头像就可以直接显示菜单详情。</p><p>这里的路由跳转非常多，那这一部分我们该如何实现呢？具体的界面效果我也放在了下面。</p><p><img src=\"https://static001.geekbang.org/resource/image/5c/c8/5c28a55007ddd40abce35c9cbe16e9c8.jpg?wh=2834x1678\" alt=\"\"></p><p>不难发现，这里每一个菜单都有点击事件，例如我们想要跳转到个人中心页面，这时候点击个人中心就需要调用router.push()方法实现页面跳转，代码如下。</p><pre><code class=\"language-javascript\">this.$router.push(\"/home/\" + user.userId);\n</code></pre><p>以此类推，都可以通过上面的代码实现路由的跳转和参数的传递，当然，如果我们想要获取用户的资料，我们就必须要先知道用户id是什么，通过id我们才能进行数据的查询，这时候对于传递值的获取，我们可以通过router.params获取当前页面组件的参数id（用户的id）。</p><pre><code class=\"language-javascript\">this.$router.params.id\n</code></pre><p>掌握了以上的方法，你想要实现路由的跳转，还有值的传递就非常简单了，在项目中你都可以通过这样的方式来实现，可以看到我们通过路由管理，实现了项目中一系列页面的地址和展示组件的配置和页面之间的相互跳转，这样我们在后面的项目开发就能更加快捷。</p><h2>总结</h2><p>课程到了这里又即将进入尾声了，让我们回顾一下这节课的学习重点。</p><p>首先我们初识Vue Router组件，了解了Vue Router是什么和两个核心标签。这里重点要理解这两个标签的应用场景：点击页面标签跳转就用&lt;router-link&gt;；页面上有某一部分要根据地址栏地址变化而变化，此时就用&lt;router-view&gt;。</p><p>然后我们学习了如何把Vue Router整合到Vue框架里。这里课后同学们可以新建Vue项目加强练习，按照这四个步骤给Vue项目配置路由。</p><p>接下来，我们学习了Vue Router的核心知识和API。这里重点是我们能够根据不一样的场景、需求来配置路由，并且能在组件中运用API来控制路由。</p><p>最后的环节是平台路由的管理配置实战，路由跳转有多种方式，路由传值与值的获取也经常用到。只要完全理解了文化社区平台这个项目的路由配置，换成其他项目也是一样的，相信你可以举一反三。</p><p>通过今天的学习，我们已经可以自己为Vue项目做路由配置了，是不是收获满满呢？学无止境，课后一定要多学多练，可以自己建几个Vue简单的页面，用路由管理起来，在浏览器分别访问它们。另外，你也可以查看 <a href=\"https://router.vuejs.org/zh/\">Vue Router 官网</a>文档，学习更多Router的相关知识。</p><h2>思考题</h2><p>这节课我们在Vue框架中整合了Vue Router，整合其他依赖也是同样的道理。你可以尝试整合一下Vue常用的UI组件库Element-UI。</p><p>提示：<a href=\"https://element.eleme.io/#/\">Element-UI官网</a></p><p>欢迎你在留言区和我交流互动，也推荐你把这节课分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"06｜框架搭建：如何用vue-cli搭建一个前端框架？","id":654616},"right":{"article_title":"08｜个人中心与权限：如何玩转各类系统的权限管理？","id":656369}},"comments":[{"had_liked":false,"id":374031,"user_name":"🤬","can_delete":false,"product_type":"c1","uid":1381902,"ip_address":"广东","ucode":"6851C76E3E6624","user_header":"https://static001.geekbang.org/account/avatar/00/15/16/0e/694b1fd5.jpg","comment_is_top":false,"comment_ctime":1683518348,"is_pvip":false,"replies":[{"id":136637,"content":"可以的，本周就会上传相应的代码，请关注专栏信息","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683535187,"ip_address":"北京","comment_id":374031,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"有些样式和内容不是很明确，能不能放一下代码？","like_count":2,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617376,"discussion_content":"可以的，本周就会上传相应的代码，请关注专栏信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683535187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382767,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2285195,"ip_address":"北京","ucode":"AD445BCFC8267B","user_header":"https://static001.geekbang.org/account/avatar/00/22/de/8b/426a6e29.jpg","comment_is_top":false,"comment_ctime":1698025330,"is_pvip":false,"replies":[{"id":139393,"content":"同学你好，是这样，Home.vue文件是作为index.vue的测试文件，内部代码实现一样，可以直接删除，如果出现找不到文件的情况，可直接删除。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1698033319,"ip_address":"北京","comment_id":382767,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"为啥课本里描述的代码和代码库的代码完全不同，还有人在管理吗？课件里的引入两个组件啥意思，也没找到home.vue，代码库的代码也运行不同，不知道是不是太久了，版本问题导致都失效了。\n&#47;&#47;引入两个自己定义好的组件\nimport Home from &#39;..&#47;pages&#47;Home.vue&#39;\nimport About from &#39;..&#47;pages&#47;Home.vue&#39;\n\n","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630028,"discussion_content":"同学你好，是这样，Home.vue文件是作为index.vue的测试文件，内部代码实现一样，可以直接删除，如果出现找不到文件的情况，可直接删除。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698033319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376166,"user_name":"ZENG","can_delete":false,"product_type":"c1","uid":1136797,"ip_address":"广东","ucode":"4F9A006DA78074","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/9d/91d795cf.jpg","comment_is_top":false,"comment_ctime":1686417574,"is_pvip":false,"replies":[{"id":137221,"content":"很开心看到你的收获，以及你的认可，也感谢你学习过程中的分享，我们一起加油，每天进步一点点。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1686538176,"ip_address":"北京","comment_id":376166,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"跟着教程实操一边确实学习到很多\n\n有几点总结一下，\n1. vue-router3.x版本和4.x版本的路由配置会有一些差别，如果之前用vue-cli配置是3.x版本的可以按照 https:&#47;&#47;v3.router.vuejs.org&#47;zh&#47;guide&#47;#javascript 这个来，如果是冲重新安装的\nnpm install vue-router@4，按照 https:&#47;&#47;router.vuejs.org&#47;zh&#47;guide&#47; 来配置\n\n2. 升级 babel7.x\n先把 package.json babel 开头的依赖删掉，再删掉 node_modules\n\n然后 package.json 加上：\n    &quot;@babel&#47;cli&quot;: &quot;^7.21.5&quot;,\n    &quot;@babel&#47;core&quot;: &quot;^7.22.1&quot;,\n    &quot;@babel&#47;plugin-proposal-class-properties&quot;: &quot;^7.18.6&quot;,\n    &quot;@babel&#47;plugin-transform-classes&quot;: &quot;^7.21.0&quot;,\n    &quot;@babel&#47;plugin-transform-runtime&quot;: &quot;^7.22.4&quot;,\n    &quot;@babel&#47;preset-env&quot;: &quot;^7.22.4&quot;,\n    &quot;babel-loader&quot;: &quot;^8.0.4&quot;,\n再 npm install 重新安装一下\n\n然后修改.babelrc为：\n{  \n  &quot;presets&quot;: [  \n    &quot;@babel&#47;preset-env&quot;  \n  ],\n  &quot;plugins&quot;: [\n    &quot;@babel&#47;plugin-transform-runtime&quot;,\n    &quot;@babel&#47;plugin-proposal-class-properties&quot;,\n    &quot;@babel&#47;plugin-transform-classes&quot;\n  ]\n}\n","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620782,"discussion_content":"很开心看到你的收获，以及你的认可，也感谢你学习过程中的分享，我们一起加油，每天进步一点点。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686538176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375163,"user_name":"友","can_delete":false,"product_type":"c1","uid":2536820,"ip_address":"云南","ucode":"972A4333A8B101","user_header":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","comment_is_top":false,"comment_ctime":1684995928,"is_pvip":false,"replies":[{"id":136935,"content":"我可以帮你梳理一个思路，这样会对你有帮助：\n1、如果我们想在浏览器访问项目中的页面，那我们就需要创建路由，这样才可以被访问到。\n2、那我们在配置路由的时候，我们需要有对应的组建文件，因为你发现在路由中是要写明对应组件的文件路径的。\n3、这时候就要关注你组件的内容了，也就是页面开发的过程，要展示什么？要有哪些功能？以及做那些页面关联，结合着以上的问题，你就把页面开发出来了。\n以这样的一个思维去理解，我相信会对你有帮助。只要我们链路清晰，万变不离其中。继续加油！！！","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1685089260,"ip_address":"北京","comment_id":375163,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"我是访问 localhost:8080&#47;#&#47;about 才出现的页面 其实我现在也搞不清楚前端这些东西了","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619422,"discussion_content":"我可以帮你梳理一个思路，这样会对你有帮助：\n1、如果我们想在浏览器访问项目中的页面，那我们就需要创建路由，这样才可以被访问到。\n2、那我们在配置路由的时候，我们需要有对应的组建文件，因为你发现在路由中是要写明对应组件的文件路径的。\n3、这时候就要关注你组件的内容了，也就是页面开发的过程，要展示什么？要有哪些功能？以及做那些页面关联，结合着以上的问题，你就把页面开发出来了。\n以这样的一个思维去理解，我相信会对你有帮助。只要我们链路清晰，万变不离其中。继续加油！！！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1685089260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374217,"user_name":"暴走的海鸽","can_delete":false,"product_type":"c1","uid":1543643,"ip_address":"广东","ucode":"8FDDE0E05C5DE1","user_header":"https://static001.geekbang.org/account/avatar/00/17/8d/db/c9d3e368.jpg","comment_is_top":false,"comment_ctime":1683715044,"is_pvip":false,"replies":[{"id":136668,"content":"Home.vue和About.vue你完全可以自己创建，里面的内容不是这节课的中点，重点关注路由的用法，这两个文件你可以直接自己创建，简单的写一些内容就可以，加油。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683789667,"ip_address":"北京","comment_id":374217,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"Home.vue组件和About.vue组件呢？","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617699,"discussion_content":"Home.vue和About.vue你完全可以自己创建，里面的内容不是这节课的中点，重点关注路由的用法，这两个文件你可以直接自己创建，简单的写一些内容就可以，加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683789667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3869936,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/0c/f0/c8950925.jpg","nickname":"niniク","note":"","ucode":"A19C3C5C00EEB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":642141,"discussion_content":"老师，为什么这个我简单配置了这两个文件，但是页面上什么也没有，空白的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713344048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":617699,"ip_address":"陕西","group_id":0},"score":642141,"extra":""}]}]},{"had_liked":false,"id":390586,"user_name":"冯丽娟","can_delete":false,"product_type":"c1","uid":2362891,"ip_address":"北京","ucode":"C470B564979A1C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ3ibJunUcvkAibM9tBDyVB9PoiaWgf3dMZgCBbeAZUF1ISr0fiaicjRjNgThebJyHJHgxr0vjh2JeYSlA/132","comment_is_top":false,"comment_ctime":1715700969,"is_pvip":false,"replies":[{"id":142616,"content":"可以把你的代码粘出来\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1720771143,"ip_address":"北京","comment_id":390586,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"about页面出不来，我是复制文中的代码的，也出不来，home页面能正常路由。","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647909,"discussion_content":"可以把你的代码粘出来\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720771143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389738,"user_name":"niniク","can_delete":false,"product_type":"c1","uid":3869936,"ip_address":"陕西","ucode":"A19C3C5C00EEB9","user_header":"https://static001.geekbang.org/account/avatar/00/3b/0c/f0/c8950925.jpg","comment_is_top":false,"comment_ctime":1713352624,"is_pvip":false,"replies":[{"id":142661,"content":"你的是导出的问题，查看你正在尝试导入的模块的源代码，确认是否有 export default 语句。确保你的开发环境（如 Node.js 版本、Webpack 配置等）支持 ES6 模块导入导出语法。确保你的模块路径正确无误，没有拼写错误或路径错误。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1721199148,"ip_address":"北京","comment_id":389738,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"SyntaxError: lmporting binding name &#39;default&quot; cannot be resolved by star export entries.\n老师，这是什么原因呢","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648193,"discussion_content":"你的是导出的问题，查看你正在尝试导入的模块的源代码，确认是否有 export default 语句。确保你的开发环境（如 Node.js 版本、Webpack 配置等）支持 ES6 模块导入导出语法。确保你的模块路径正确无误，没有拼写错误或路径错误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721199148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389481,"user_name":"魁","can_delete":false,"product_type":"c1","uid":1940649,"ip_address":"广东","ucode":"CA8862199B4162","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wSdBrrprKiafx6c39iadevT8LQmrmLbFR7ewt0hicUaCybI4HvFwahiaIJ2ibqFrwBB5HiaftujHBEDcOdQxvpYoMcBA/132","comment_is_top":false,"comment_ctime":1712721874,"is_pvip":false,"replies":[{"id":142662,"content":"可以，你在跳转的时候直接带上对应的用户参数，然后单独通过接口做一个信息存储，可以单独做成一个日志模块","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1721199221,"ip_address":"北京","comment_id":389481,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"想开发一个带有页面分享统计功能的表单页面，能记录打开的表单是由谁分享的，这功能能用带参数的动态路由实现吗？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648194,"discussion_content":"可以，你在跳转的时候直接带上对应的用户参数，然后单独通过接口做一个信息存储，可以单独做成一个日志模块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721199221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383048,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2285195,"ip_address":"北京","ucode":"AD445BCFC8267B","user_header":"https://static001.geekbang.org/account/avatar/00/22/de/8b/426a6e29.jpg","comment_is_top":false,"comment_ctime":1698369392,"is_pvip":false,"replies":[{"id":139566,"content":"正常如果你直接以cli创建的方式，会自动生成相应的router，如果单独配置会出现不匹配的情况。建议按cli的安装方式进行操作。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1698585669,"ip_address":"北京","comment_id":383048,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师你好，安装vue-router@4的时候会报错，看起来是不是router 4的版本yao 依赖vue 3.2.0以上版本，但是前边一路教程下来，安装下来的应该是vue2.9.6版本\nnpm ERR! code ERESOLVE\nnpm ERR! ERESOLVE unable to resolve dependency tree\nnpm ERR! \nnpm ERR! While resolving: video@1.0.0\nnpm ERR! Found: vue@2.7.15\nnpm ERR! node_modules&#47;vue\nnpm ERR!   vue@&quot;^2.5.2&quot; from the root project\nnpm ERR! \nnpm ERR! Could not resolve dependency:\nnpm ERR! peer vue@&quot;^3.2.0&quot; from vue-router@4.2.5\nnpm ERR! node_modules&#47;vue-router\nnpm ERR!   vue-router@&quot;4&quot; from the root project\nnpm ERR! \nnpm ERR! Fix the upstream dependency conflict, or retry\n","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630504,"discussion_content":"正常如果你直接以cli创建的方式，会自动生成相应的router，如果单独配置会出现不匹配的情况。建议按cli的安装方式进行操作。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698585669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380262,"user_name":"明仔的阳光午后","can_delete":false,"product_type":"c1","uid":1026561,"ip_address":"福建","ucode":"944FBB0F29C115","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/01/3726cf7c.jpg","comment_is_top":false,"comment_ctime":1693289375,"is_pvip":false,"replies":[{"id":138527,"content":"同学你的写法是正确的，这个在课程中的代码就是这样写的，同学，在最后的src&#47;router&#47;index.js 配置路由文件内。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1693465510,"ip_address":"北京","comment_id":380262,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"懒加载的写法二 `ComponentA：resolve=&gt;([&#39;需要加载的路由的地址&#39;，resolve])`没起作用，改成`ComponentA：resolve=&gt;require([&#39;需要加载的路由的地址&#39;，resolve])`之后才起作用","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626883,"discussion_content":"同学你的写法是正确的，这个在课程中的代码就是这样写的，同学，在最后的src/router/index.js 配置路由文件内。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693465510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376154,"user_name":"Geek_88cc02","can_delete":false,"product_type":"c1","uid":3606049,"ip_address":"广东","ucode":"FBB15BAED059D7","user_header":"","comment_is_top":false,"comment_ctime":1686386812,"is_pvip":false,"replies":[{"id":137220,"content":"你好，About组件是这样，为什么我没有放了，因为它就是一个单独的页面组建，组件的内容我们是不用关注的，你可以直接在你的项目中创建一个about.vue文件就可以了，这里我们重点关注就是在页面跳转过程中实现就可以，重点在router的应用方法，是这样的关系，所以我没有放about的代码，它不影响我们对路由的学习，如果还有不解之处，可以再回评。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1686538040,"ip_address":"北京","comment_id":376154,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"老师，有代码地址吗？叙述过于抽象了 about组件那些都么有，看不懂 我们真没基础","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620781,"discussion_content":"你好，About组件是这样，为什么我没有放了，因为它就是一个单独的页面组建，组件的内容我们是不用关注的，你可以直接在你的项目中创建一个about.vue文件就可以了，这里我们重点关注就是在页面跳转过程中实现就可以，重点在router的应用方法，是这样的关系，所以我没有放about的代码，它不影响我们对路由的学习，如果还有不解之处，可以再回评。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686538041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376153,"user_name":"Geek_88cc02","can_delete":false,"product_type":"c1","uid":3606049,"ip_address":"广东","ucode":"FBB15BAED059D7","user_header":"","comment_is_top":false,"comment_ctime":1686386655,"is_pvip":false,"replies":[{"id":137222,"content":"同学，这个我在上一个问题给回复了，About组件你完全可以创建一个.vue文件，我们不用关注组件内的内容，主要是通过路由操作可以实现路由切换，从而展示对应的页面信息就可以。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1686538364,"ip_address":"北京","comment_id":376153,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"Home 组件  About 组件代码没有讲吧？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620783,"discussion_content":"同学，这个我在上一个问题给回复了，About组件你完全可以创建一个.vue文件，我们不用关注组件内的内容，主要是通过路由操作可以实现路由切换，从而展示对应的页面信息就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686538365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375437,"user_name":"阿望(tom)","can_delete":false,"product_type":"c1","uid":2968651,"ip_address":"阿联酋","ucode":"C0AC8D6DC73FBA","user_header":"https://static001.geekbang.org/account/avatar/00/2d/4c/4b/39795aa2.jpg","comment_is_top":false,"comment_ctime":1685490834,"is_pvip":false,"replies":[{"id":137102,"content":"问题我给解答一下，第一个问题，使用 &lt;style lang=&quot;less&quot; scoped&gt; 主要来定义组件内的样式，使用 scoped 属性可以将样式限制在当前组件的作用域内，从而避免全局样式冲突，这个使用非必需哈，解决方法我在评论区做了集中回复，你可以查看一下。\n第二个问题：关于JavaScript语法解析器的问题。在JavaScript中，解析器负责将源代码转换为可执行的代码。具体而言，{parse:&quot;babylon&quot;}和{parser:&quot;babel&quot;}是指两种不同的解析器，即Babylon和Babel。这两个解析器都可以解析JavaScript代码，但是Babylon是旧版的解析器，已经被废弃不再维护，而Babel是新一代的解析器，使用更广泛的工具集，更加灵活和强大。\n因此，意味着你需要将解析器从Babylon替换为Babel。\n要解决这个问题，你可以尝试更新你的工具链或者使用已经集成了Babel的工具。如果你正在使用npm或yarn等包管理器，你可以通过运行以下命令安装Babel：\nnpm install --save-dev @babel&#47;core @babel&#47;cli @babel&#47;preset-env\n然后，在你的项目根目录中创建一个名为.babelrc的文件，内容如下：\n{  \n  &quot;presets&quot;: [  \n    &quot;@babel&#47;preset-env&quot;  \n  ]  \n}\n这将告诉Babel使用env preset来转换你的代码。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1685783348,"ip_address":"北京","comment_id":375437,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"老师，你的代码Layout 里边 下边 css 用了 less, 但是在文中还有你的git代码里边 没有提到需要安装这个扩展，于是我这边搜了一下 ，按照文中给出的搭建方法，less-loader 还只能安装@5.0.0版本，,另外在 编译过程中 项目并不能100%编译 ，提示 app.vue {parse:&quot;babylon&quot;} 被废弃了 需要换成 {parser::&quot;balbel&quot;} 请问这2个问题，能讲解下吗","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620071,"discussion_content":"问题我给解答一下，第一个问题，使用 &lt;style lang=&#34;less&#34; scoped&gt; 主要来定义组件内的样式，使用 scoped 属性可以将样式限制在当前组件的作用域内，从而避免全局样式冲突，这个使用非必需哈，解决方法我在评论区做了集中回复，你可以查看一下。\n第二个问题：关于JavaScript语法解析器的问题。在JavaScript中，解析器负责将源代码转换为可执行的代码。具体而言，{parse:&#34;babylon&#34;}和{parser:&#34;babel&#34;}是指两种不同的解析器，即Babylon和Babel。这两个解析器都可以解析JavaScript代码，但是Babylon是旧版的解析器，已经被废弃不再维护，而Babel是新一代的解析器，使用更广泛的工具集，更加灵活和强大。\n因此，意味着你需要将解析器从Babylon替换为Babel。\n要解决这个问题，你可以尝试更新你的工具链或者使用已经集成了Babel的工具。如果你正在使用npm或yarn等包管理器，你可以通过运行以下命令安装Babel：\nnpm install --save-dev @babel/core @babel/cli @babel/preset-env\n然后，在你的项目根目录中创建一个名为.babelrc的文件，内容如下：\n{  \n  &#34;presets&#34;: [  \n    &#34;@babel/preset-env&#34;  \n  ]  \n}\n这将告诉Babel使用env preset来转换你的代码。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685783348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375178,"user_name":"Geek_840593","can_delete":false,"product_type":"c1","uid":3605821,"ip_address":"重庆","ucode":"F92256CD230166","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","comment_is_top":false,"comment_ctime":1685010012,"is_pvip":false,"replies":[{"id":136937,"content":"目前看这个错误的提示是变量 @border-color 在 MyHeader.vue 组件的第 191 行被使用，但是它没有被正确地定义或者引入。\n解决这个问题你可以尝试先确认是否在组件的样式中定义了 @border-color 变量，如果没有，则需要引入该变量或者手动定义它。如果已经定义了该变量，则需要检查它的值是否正确。你可以尝试先来解决一下，如果还有问题可以把具体的代码发出来看看，希望可以帮助到你。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1685091686,"ip_address":"北京","comment_id":375178,"utype":1}],"discussion_count":8,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"ERROR  Failed to compile with 1 errors                                                                                                  18:14:14\n\n error  in .&#47;src&#47;components&#47;PC&#47;MyHeader.vue\n\nModule build failed: \n\n.book-header {\n  border-bottom: 1px solid @border-color;\n                         ^\nVariable @border-color is undefined\n      in &#47;Users&#47;guoyan&#47;my-project&#47;src&#47;components&#47;PC&#47;MyHeader.vue (line 191, column 27)\n\n @ .&#47;node_modules&#47;.store&#47;vue-style-loader@4.1.3&#47;node_modules&#47;vue-style-loader!.&#47;node_modules&#47;.store&#47;css-loader@3.2.0&#47;node_modules&#47;css-loader&#47;dist&#47;cjs.js?{&quot;sourceMap&quot;:true}!.&#47;node_modules&#47;vue-loader&#47;lib&#47;style-compiler?{&quot;vue&quot;:true,&quot;id&quot;:&quot;data-v-72e0c896&quot;,&quot;scoped&quot;:true,&quot;hasInlineConfig&quot;:false}!.&#47;node_modules&#47;.store&#47;less-loader@5.0.0&#47;node_modules&#47;less-loader&#47;dist&#47;cjs.js?{&quot;sourceMap&quot;:true}!.&#47;node_modules&#47;vue-loader&#47;lib&#47;selector.js?type=styles&amp;index=0!.&#47;src&#47;components&#47;PC&#47;MyHeader.vue 4:14-463 15:3-20:5 16:22-471\n @ .&#47;src&#47;components&#47;PC&#47;MyHeader.vue\n @ .&#47;node_modules&#47;babel-loader&#47;lib!.&#47;node_modules&#47;vue-loader&#47;lib&#47;selector.js?type=script&amp;index=0!.&#47;src&#47;Layout&#47;Layout.vue\n @ .&#47;src&#47;Layout&#47;Layout.vue\n @ .&#47;node_modules&#47;babel-loader&#47;lib!.&#47;node_modules&#47;vue-loader&#47;lib&#47;selector.js?type=script&amp;index=0!.&#47;src&#47;App.vue\n @ .&#47;src&#47;App.vue\n @ .&#47;src&#47;main.js\n @ multi (webpack)-dev-server&#47;client?http:&#47;&#47;localhost:8080 webpack&#47;hot&#47;dev-server .&#47;src&#47;main.js","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619431,"discussion_content":"目前看这个错误的提示是变量 @border-color 在 MyHeader.vue 组件的第 191 行被使用，但是它没有被正确地定义或者引入。\n解决这个问题你可以尝试先确认是否在组件的样式中定义了 @border-color 变量，如果没有，则需要引入该变量或者手动定义它。如果已经定义了该变量，则需要检查它的值是否正确。你可以尝试先来解决一下，如果还有问题可以把具体的代码发出来看看，希望可以帮助到你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685091686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":7,"child_discussions":[{"author":{"id":3605821,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","nickname":"Geek_840593","note":"","ucode":"F92256CD230166","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":619449,"discussion_content":"我用的gitee第7章Myhead的源码，编译的时候就出现了这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685100036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":619431,"ip_address":"重庆","group_id":0},"score":619449,"extra":""},{"author":{"id":3631899,"avatar":"","nickname":"Geek_53e851","note":"","ucode":"67BBA6F19FF15E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3605821,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","nickname":"Geek_840593","note":"","ucode":"F92256CD230166","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619533,"discussion_content":"您好我也遇到这个问题了，您解决了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685248044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":619449,"ip_address":"北京","group_id":0},"score":619533,"extra":""},{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":3605821,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","nickname":"Geek_840593","note":"","ucode":"F92256CD230166","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620068,"discussion_content":"集中解答一下，使用的话要进行安装less- loader和less\n运行命令是：npm install less-loader less --save-dev\n在你的 webpack.config.js 文件中，添加以下代码来配置 Webpack 以支持 Less：\n{  \n        test: /\\.less$/,  \n        use: [  \n          &#39;style-loader&#39;,  \n          &#39;css-loader&#39;,  \n          &#39;less-loader&#39;  \n        ]  \n      } \n然后重启一下项目，可以看一下效果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685782219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":619449,"ip_address":"北京","group_id":0},"score":620068,"extra":""}]}]},{"had_liked":false,"id":374571,"user_name":"Geek_840593","can_delete":false,"product_type":"c1","uid":3605821,"ip_address":"重庆","ucode":"F92256CD230166","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","comment_is_top":false,"comment_ctime":1684199751,"is_pvip":false,"replies":[{"id":136729,"content":"错误信息主要是未能正确解决依赖项树。原因是未正确配置依赖项或存在冲突的依赖项，你检查一下项目中使用的Vue Router版本。这是一种方式，另一种就是在安装Vue-cli时候就自动配置好了router，你可以尝试一下。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1684206184,"ip_address":"北京","comment_id":374571,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"npm install vue-router@4\n\nnpm ERR! code ERESOLVE\nnpm ERR! ERESOLVE unable to resolve dependency tree\nnpm ERR! \nnpm ERR! While resolving: my-project@1.0.0\nnpm ERR! Found: vue@2.7.14\nnpm ERR! node_modules&#47;vue\nnpm ERR!   vue@&quot;^2.5.2&quot; from the root project\nnpm ERR! \nnpm ERR! Could not resolve dependency:\nnpm ERR! peer vue@&quot;^3.2.0&quot; from vue-router@4.2.0\nnpm ERR! node_modules&#47;vue-router\nnpm ERR!   vue-router@&quot;4&quot; from the root project\nnpm ERR! \nnpm ERR! Fix the upstream dependency conflict, or retry\nnpm ERR! this command with --force or --legacy-peer-deps\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\nnpm ERR! \nnpm ERR! \nnpm ERR! For a full report see:","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618359,"discussion_content":"错误信息主要是未能正确解决依赖项树。原因是未正确配置依赖项或存在冲突的依赖项，你检查一下项目中使用的Vue Router版本。这是一种方式，另一种就是在安装Vue-cli时候就自动配置好了router，你可以尝试一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684206184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374143,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1683637471,"is_pvip":false,"replies":[{"id":136653,"content":"这里是父子组件的调用，你需要先开发Layout页面作为父组件，然后分别再开发my-header和my-foooter组件，组件的调用，在课程中有讲解，我会把代码上传git，你可以参考实现代码，template是模版标签，在该标签内写HTML代码，具体应用可直接参考git，有疑问我们进一步交流。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683704648,"ip_address":"北京","comment_id":374143,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"Q1:&lt;my-header ref=&quot;myheader&quot;&gt;&lt;&#47;my-header&gt;，这行代码中， &lt;my-header&gt;是在哪里定义的？或者不需要定义就可以直接使用？  Ref用的myheader又是哪里定义的？ (my-footer也是同样的问题)\nQ2：layout组件在template里面也没有使用啊，哪里使用的？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617602,"discussion_content":"这里是父子组件的调用，你需要先开发Layout页面作为父组件，然后分别再开发my-header和my-foooter组件，组件的调用，在课程中有讲解，我会把代码上传git，你可以参考实现代码，template是模版标签，在该标签内写HTML代码，具体应用可直接参考git，有疑问我们进一步交流。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683704648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374047,"user_name":"贾维斯Echo","can_delete":false,"product_type":"c1","uid":2820504,"ip_address":"上海","ucode":"BB8C507E46A9E5","user_header":"https://static001.geekbang.org/account/avatar/00/2b/09/98/397c2c81.jpg","comment_is_top":false,"comment_ctime":1683533650,"is_pvip":true,"replies":[{"id":136644,"content":"本周就会上传相应的代码，请关注专栏信息","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1683630915,"ip_address":"北京","comment_id":374047,"utype":2}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"给个建议,代码放到git上面","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617524,"discussion_content":"本周就会上传相应的代码，请关注专栏信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683630915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":2,"child_discussions":[{"author":{"id":2823402,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ8Gv7uH8y9DuraXfb0TAEFTXhEhDJ3uPpwBk3JemjDlGxQqPezXljhbia5n7qpHFiapJD1Anjs2SVg/132","nickname":"Geek_c08ce7","note":"","ucode":"4CB81F28D065B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"discussion":{"id":617893,"discussion_content":"老师，请问专栏是哪个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683969503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":617524,"ip_address":"广东","group_id":0},"score":617893,"extra":""},{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":2823402,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ8Gv7uH8y9DuraXfb0TAEFTXhEhDJ3uPpwBk3JemjDlGxQqPezXljhbia5n7qpHFiapJD1Anjs2SVg/132","nickname":"Geek_c08ce7","note":"","ucode":"4CB81F28D065B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618010,"discussion_content":"链接地址 https://gitee.com/Barry_Python_web/python_web_code/tree/master","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684025237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":617893,"ip_address":"北京","group_id":0},"score":618010,"extra":""}]}]},{"had_liked":false,"id":374018,"user_name":"安静点","can_delete":false,"product_type":"c1","uid":1740680,"ip_address":"广东","ucode":"9598650FD71F23","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8f/88/3814fea5.jpg","comment_is_top":false,"comment_ctime":1683509333,"is_pvip":false,"replies":[{"id":136628,"content":"这个完全没问题，源码必须配备，近期就会上传，及时关注专栏信息。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683517476,"ip_address":"北京","comment_id":374018,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"我觉得可以建一个git仓库，把每节课的代码放上面。\n因为肯定有人是无法跟着一步步都实现的，\n很不幸，我就是那个人😂","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617341,"discussion_content":"这个完全没问题，源码必须配备，近期就会上传，及时关注专栏信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683517476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374008,"user_name":"佩慎斯予氪蕾沐","can_delete":false,"product_type":"c1","uid":3605445,"ip_address":"广西","ucode":"D6230EECBC275A","user_header":"https://static001.geekbang.org/account/avatar/00/37/03/c5/b3364e49.jpg","comment_is_top":false,"comment_ctime":1683482310,"is_pvip":false,"replies":[{"id":136629,"content":"是的，需要进行全局挂载，这样你才能在各个组件内进行使用。不过这个解决问题的过程是不错的一个体验，下次遇到此类问题，对你来说就比较简单了。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683517652,"ip_address":"北京","comment_id":374008,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"整合 UI 组件库 Element-UI，可以按照官网操作，我个人经常用的是vite的按需引入，在官网按需引入介绍中可能只是按需引入一些组件，样式我认为还需要在全局import elementui的css样式。\n我在vant4中就是好奇已经按需引入，但是弹出的组件却没有样式，还需要自己引入，官网按需引入又没有介绍自动引入css样式，需要在全局引入，就这样被坑了十几分钟。","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617342,"discussion_content":"是的，需要进行全局挂载，这样你才能在各个组件内进行使用。不过这个解决问题的过程是不错的一个体验，下次遇到此类问题，对你来说就比较简单了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683517653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374007,"user_name":"佩慎斯予氪蕾沐","can_delete":false,"product_type":"c1","uid":3605445,"ip_address":"广西","ucode":"D6230EECBC275A","user_header":"https://static001.geekbang.org/account/avatar/00/37/03/c5/b3364e49.jpg","comment_is_top":false,"comment_ctime":1683481989,"is_pvip":false,"replies":[{"id":136630,"content":"框架升级之后，有变化的地方，写法的不同，需要一个适应过程。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683517792,"ip_address":"北京","comment_id":374007,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"this.$router.push(&quot;&#47;video&#47;detail&#47;&quot; + video.id);\n在vue3的组合式写法中，也就是setup，没有this, 要使用路由可以用下面的写法\nimport {useRouter} from &#39;vue-router&#39;\nconst router ＝useRouter()\nrouter.push(&quot;&#47;video&#47;detail&#47;&quot; + video.id)\n\n前几天写小项目的时候遇见的，useRoute和useRouter的区别是，前者用于获取，后者用于跳转等一系列操作，至少我是这样理解的\n\n在vue3中选项式写法需要export 和 return，而我个人更倾向于组合式，写法更加简洁不需要那两步，不过选项式写法也是可以适应的","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617344,"discussion_content":"框架升级之后，有变化的地方，写法的不同，需要一个适应过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683517792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376151,"user_name":"Geek_88cc02","can_delete":false,"product_type":"c1","uid":3606049,"ip_address":"广东","ucode":"FBB15BAED059D7","user_header":"","comment_is_top":false,"comment_ctime":1686386159,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100546501,"comment_content":"&#47;&#47;引入两个自己定义好的组件import Home from &#39;..&#47;pages&#47;Home.vue&#39;import About from &#39;..&#47;pages&#47;Home.vue&#39;\n\n这里是在哪里说了自定义的，没看到","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620791,"discussion_content":"这里你记得在创建About.vue文件的时候，放置的文件目录，再import的时候一定要引入正确的地址。自定义的组件就是你自己新建一个About.vue里面放一些简单的文字提示即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686538621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376150,"user_name":"Geek_88cc02","can_delete":false,"product_type":"c1","uid":3606049,"ip_address":"广东","ucode":"FBB15BAED059D7","user_header":"","comment_is_top":false,"comment_ctime":1686386029,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100546501,"comment_content":"我安装vue 的时候，已经帮我搞定“第二步，我们要定义一个路由配置的文件。比如在项目 src 文件夹下建一个 router 文件夹，然后进入 router 文件夹，在里面创建一个 index.js 文件。”","like_count":0}]}