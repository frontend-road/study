{"id":75659,"title":"21 | 为什么我只改一行的语句，锁这么多？","content":"<p>在上一篇文章中，我和你介绍了间隙锁和next-key lock的概念，但是并没有说明加锁规则。间隙锁的概念理解起来确实有点儿难，尤其在配合上行锁以后，很容易在判断是否会出现锁等待的问题上犯错。</p><p>所以今天，我们就先从这个加锁规则开始吧。</p><p>首先说明一下，这些加锁规则我没在别的地方看到过有类似的总结，以前我自己判断的时候都是想着代码里面的实现来脑补的。这次为了总结成不看代码的同学也能理解的规则，是我又重新刷了代码临时总结出来的。所以，<strong>这个规则有以下两条前提说明：</strong></p><ol>\n<li>\n<p>MySQL后面的版本可能会改变加锁策略，所以这个规则只限于截止到现在的最新版本，即5.x系列&lt;=5.7.24，8.0系列 &lt;=8.0.13。</p>\n</li>\n<li>\n<p>如果大家在验证中有发现bad case的话，请提出来，我会再补充进这篇文章，使得一起学习本专栏的所有同学都能受益。</p>\n</li>\n</ol><p>因为间隙锁在可重复读隔离级别下才有效，所以本篇文章接下来的描述，若没有特殊说明，默认是可重复读隔离级别。</p><p><strong>我总结的加锁规则里面，包含了两个“原则”、两个“优化”和一个“bug”。</strong></p><ol>\n<li>\n<p>原则1：加锁的基本单位是next-key lock。希望你还记得，next-key lock是前开后闭区间。</p>\n</li>\n<li>\n<p>原则2：查找过程中访问到的对象才会加锁。</p>\n</li>\n<li>\n<p>优化1：索引上的等值查询，给唯一索引加锁的时候，next-key lock退化为行锁。</p>\n</li>\n<li>\n<p>优化2：索引上的等值查询，向右遍历时且最后一个值不满足等值条件的时候，next-key lock退化为间隙锁。</p>\n</li>\n<li>\n<p>一个bug：唯一索引上的范围查询会访问到不满足条件的第一个值为止。</p>\n</li>\n</ol><!-- [[[read_end]]] --><p>我还是以上篇文章的表t为例，和你解释一下这些规则。表t的建表语句和初始化语句如下。</p><pre><code>CREATE TABLE `t` (\n  `id` int(11) NOT NULL,\n  `c` int(11) DEFAULT NULL,\n  `d` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `c` (`c`)\n) ENGINE=InnoDB;\n\ninsert into t values(0,0,0),(5,5,5),\n(10,10,10),(15,15,15),(20,20,20),(25,25,25);\n</code></pre><p>接下来的例子基本都是配合着图片说明的，所以我建议你可以对照着文稿看，有些例子可能会“毁三观”，也建议你读完文章后亲手实践一下。</p><h1>案例一：等值查询间隙锁</h1><p>第一个例子是关于等值条件操作间隙：</p><p><img src=\"https://static001.geekbang.org/resource/image/58/6c/585dfa8d0dd71171a6fa16bed4ba816c.png?wh=936*313\" alt=\"\"></p><center><span class=\"reference\">图1 等值查询的间隙锁</span></center><p>由于表t中没有id=7的记录，所以用我们上面提到的加锁规则判断一下的话：</p><ol>\n<li>\n<p>根据原则1，加锁单位是next-key lock，session A加锁范围就是(5,10]；</p>\n</li>\n<li>\n<p>同时根据优化2，这是一个等值查询(id=7)，而id=10不满足查询条件，next-key lock退化成间隙锁，因此最终加锁的范围是(5,10)。</p>\n</li>\n</ol><p>所以，session B要往这个间隙里面插入id=8的记录会被锁住，但是session C修改id=10这行是可以的。</p><h1>案例二：非唯一索引等值锁</h1><p>第二个例子是关于覆盖索引上的锁：</p><p><img src=\"https://static001.geekbang.org/resource/image/46/65/465990fe8f6b418ca3f9992bd1bb5465.png?wh=1244*462\" alt=\"\"></p><center><span class=\"reference\">图2 只加在非唯一索引上的锁</span></center><p>看到这个例子，你是不是有一种“该锁的不锁，不该锁的乱锁”的感觉？我们来分析一下吧。</p><p>这里session A要给索引c上c=5的这一行加上读锁。</p><ol>\n<li>\n<p>根据原则1，加锁单位是next-key lock，因此会给(0,5]加上next-key lock。</p>\n</li>\n<li>\n<p>要注意c是普通索引，因此仅访问c=5这一条记录是不能马上停下来的，需要向右遍历，查到c=10才放弃。根据原则2，访问到的都要加锁，因此要给(5,10]加next-key lock。</p>\n</li>\n<li>\n<p>但是同时这个符合优化2：等值判断，向右遍历，最后一个值不满足c=5这个等值条件，因此退化成间隙锁(5,10)。</p>\n</li>\n<li>\n<p>根据原则2 ，<strong>只有访问到的对象才会加锁</strong>，这个查询使用覆盖索引，并不需要访问主键索引，所以主键索引上没有加任何锁，这就是为什么session B的update语句可以执行完成。</p>\n</li>\n</ol><p>但session C要插入一个(7,7,7)的记录，就会被session A的间隙锁(5,10)锁住。</p><p>需要注意，在这个例子中，lock in share mode只锁覆盖索引，但是如果是for update就不一样了。 执行 for update时，系统会认为你接下来要更新数据，因此会顺便给主键索引上满足条件的行加上行锁。</p><p>这个例子说明，锁是加在索引上的；同时，它给我们的指导是，如果你要用lock in share mode来给行加读锁避免数据被更新的话，就必须得绕过覆盖索引的优化，在查询字段中加入索引中不存在的字段。比如，将session A的查询语句改成select d from t where c=5 lock in share mode。你可以自己验证一下效果。</p><h1>案例三：主键索引范围锁</h1><p>第三个例子是关于范围查询的。</p><p>举例之前，你可以先思考一下这个问题：对于我们这个表t，下面这两条查询语句，加锁范围相同吗？</p><pre><code>mysql&gt; select * from t where id=10 for update;\nmysql&gt; select * from t where id&gt;=10 and id&lt;11 for update;\n</code></pre><p>你可能会想，id定义为int类型，这两个语句就是等价的吧？其实，它们并不完全等价。</p><p>在逻辑上，这两条查语句肯定是等价的，但是它们的加锁规则不太一样。现在，我们就让session A执行第二个查询语句，来看看加锁效果。</p><p><img src=\"https://static001.geekbang.org/resource/image/30/80/30b839bf941f109b04f1a36c302aea80.png?wh=1244*718\" alt=\"\"></p><center><span class=\"reference\">图3 主键索引上范围查询的锁</span></center><p>现在我们就用前面提到的加锁规则，来分析一下session A 会加什么锁呢？</p><ol>\n<li>\n<p>开始执行的时候，要找到第一个id=10的行，因此本该是next-key lock(5,10]。 根据优化1， 主键id上的等值条件，退化成行锁，只加了id=10这一行的行锁。</p>\n</li>\n<li>\n<p>范围查找就往后继续找，找到id=15这一行停下来，因此需要加next-key lock(10,15]。</p>\n</li>\n</ol><p>所以，session A这时候锁的范围就是主键索引上，行锁id=10和next-key lock(10,15]。这样，session B和session C的结果你就能理解了。</p><p>这里你需要注意一点，首次session A定位查找id=10的行的时候，是当做等值查询来判断的，而向右扫描到id=15的时候，用的是范围查询判断。</p><h1>案例四：非唯一索引范围锁</h1><p>接下来，我们再看两个范围查询加锁的例子，你可以对照着案例三来看。</p><p>需要注意的是，与案例三不同的是，案例四中查询语句的where部分用的是字段c。</p><p><img src=\"https://static001.geekbang.org/resource/image/73/7a/7381475e9e951628c9fc907f5a57697a.png?wh=1246*550\" alt=\"\"></p><center><span class=\"reference\">图4 非唯一索引范围锁</span></center><p>这次session A用字段c来判断，加锁规则跟案例三唯一的不同是：在第一次用c=10定位记录的时候，索引c上加了(5,10]这个next-key lock后，由于索引c是非唯一索引，没有优化规则，也就是说不会蜕变为行锁，因此最终sesion A加的锁是，索引c上的(5,10] 和(10,15] 这两个next-key lock。</p><p>所以从结果上来看，sesson B要插入（8,8,8)的这个insert语句时就被堵住了。</p><p>这里需要扫描到c=15才停止扫描，是合理的，因为InnoDB要扫到c=15，才知道不需要继续往后找了。</p><h1>案例五：唯一索引范围锁bug</h1><p>前面的四个案例，我们已经用到了加锁规则中的两个原则和两个优化，接下来再看一个关于加锁规则中bug的案例。</p><p><img src=\"https://static001.geekbang.org/resource/image/b1/6d/b105f8c4633e8d3a84e6422b1b1a316d.png?wh=1250*590\" alt=\"\"></p><center><span class=\"reference\">图5 唯一索引范围锁的bug</span></center><p>session A是一个范围查询，按照原则1的话，应该是索引id上只加(10,15]这个next-key lock，并且因为id是唯一键，所以循环判断到id=15这一行就应该停止了。</p><p>但是实现上，InnoDB会往前扫描到第一个不满足条件的行为止，也就是id=20。而且由于这是个范围扫描，因此索引id上的(15,20]这个next-key lock也会被锁上。</p><p>所以你看到了，session B要更新id=20这一行，是会被锁住的。同样地，session C要插入id=16的一行，也会被锁住。</p><p>照理说，这里锁住id=20这一行的行为，其实是没有必要的。因为扫描到id=15，就可以确定不用往后再找了。但实现上还是这么做了，因此我认为这是个bug。</p><p>我也曾找社区的专家讨论过，官方bug系统上也有提到，但是并未被verified。所以，认为这是bug这个事儿，也只能算我的一家之言，如果你有其他见解的话，也欢迎你提出来。</p><h1>案例六：非唯一索引上存在\"等值\"的例子</h1><p>接下来的例子，是为了更好地说明“间隙”这个概念。这里，我给表t插入一条新记录。</p><pre><code>mysql&gt; insert into t values(30,10,30);\n</code></pre><p>新插入的这一行c=10，也就是说现在表里有两个c=10的行。那么，这时候索引c上的间隙是什么状态了呢？你要知道，由于非唯一索引上包含主键的值，所以是不可能存在“相同”的两行的。</p><p><img src=\"https://static001.geekbang.org/resource/image/c1/59/c1fda36c1502606eb5be3908011ba159.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图6 非唯一索引等值的例子</span></center><p>可以看到，虽然有两个c=10，但是它们的主键值id是不同的（分别是10和30），因此这两个c=10的记录之间，也是有间隙的。</p><p>图中我画出了索引c上的主键id。为了跟间隙锁的开区间形式进行区别，我用(c=10,id=30)这样的形式，来表示索引上的一行。</p><p>现在，我们来看一下案例六。</p><p>这次我们用delete语句来验证。注意，delete语句加锁的逻辑，其实跟select ... for update 是类似的，也就是我在文章开始总结的两个“原则”、两个“优化”和一个“bug”。</p><p><img src=\"https://static001.geekbang.org/resource/image/b5/78/b55fb0a1cac3500b60e1cf9779d2da78.png?wh=1248*556\" alt=\"\"></p><center><span class=\"reference\">图7 delete 示例</span></center><p>这时，session A在遍历的时候，先访问第一个c=10的记录。同样地，根据原则1，这里加的是(c=5,id=5)到(c=10,id=10)这个next-key lock。</p><p>然后，session A向右查找，直到碰到(c=15,id=15)这一行，循环才结束。根据优化2，这是一个等值查询，向右查找到了不满足条件的行，所以会退化成(c=10,id=10) 到 (c=15,id=15)的间隙锁。</p><p>也就是说，这个delete语句在索引c上的加锁范围，就是下图中蓝色区域覆盖的部分。<br>\n<img src=\"https://static001.geekbang.org/resource/image/bb/24/bb0ad92483d71f0dcaeeef278f89cb24.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图8 delete加锁效果示例</span></center><p>这个蓝色区域左右两边都是虚线，表示开区间，即(c=5,id=5)和(c=15,id=15)这两行上都没有锁。</p><h1>案例七：limit 语句加锁</h1><p>例子6也有一个对照案例，场景如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/af/2e/afc3a08ae7a254b3251e41b2a6dae02e.png?wh=954*318\" alt=\"\"></p><center><span class=\"reference\">图9 limit 语句加锁</span></center><p>这个例子里，session A的delete语句加了 limit 2。你知道表t里c=10的记录其实只有两条，因此加不加limit 2，删除的效果都是一样的，但是加锁的效果却不同。可以看到，session B的insert语句执行通过了，跟案例六的结果不同。</p><p>这是因为，案例七里的delete语句明确加了limit 2的限制，因此在遍历到(c=10, id=30)这一行之后，满足条件的语句已经有两条，循环就结束了。</p><p>因此，索引c上的加锁范围就变成了从（c=5,id=5)到（c=10,id=30)这个前开后闭区间，如下图所示：<br>\n<img src=\"https://static001.geekbang.org/resource/image/e5/d5/e5408ed94b3d44985073255db63bd0d5.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图10 带limit 2的加锁效果</span></center><p>可以看到，(c=10,id=30）之后的这个间隙并没有在加锁范围里，因此insert语句插入c=12是可以执行成功的。</p><p>这个例子对我们实践的指导意义就是，<strong>在删除数据的时候尽量加limit</strong>。这样不仅可以控制删除数据的条数，让操作更安全，还可以减小加锁的范围。</p><h1>案例八：一个死锁的例子</h1><p>前面的例子中，我们在分析的时候，是按照next-key lock的逻辑来分析的，因为这样分析比较方便。最后我们再看一个案例，目的是说明：next-key lock实际上是间隙锁和行锁加起来的结果。</p><p>你一定会疑惑，这个概念不是一开始就说了吗？不要着急，我们先来看下面这个例子：</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/06/7b911a4c995706e8aa2dd96ff0f36506.png?wh=1106*650\" alt=\"\"></p><center><span class=\"reference\">图11 案例八的操作序列</span></center><p>现在，我们按时间顺序来分析一下为什么是这样的结果。</p><ol>\n<li>\n<p>session A 启动事务后执行查询语句加lock in share mode，在索引c上加了next-key lock(5,10] 和间隙锁(10,15)；</p>\n</li>\n<li>\n<p>session B 的update语句也要在索引c上加next-key lock(5,10] ，进入锁等待；</p>\n</li>\n<li>\n<p>然后session A要再插入(8,8,8)这一行，被session B的间隙锁锁住。由于出现了死锁，InnoDB让session B回滚。</p>\n</li>\n</ol><p>你可能会问，session B的next-key lock不是还没申请成功吗？</p><p>其实是这样的，session B的“加next-key lock(5,10] ”操作，实际上分成了两步，先是加(5,10)的间隙锁，加锁成功；然后加c=10的行锁，这时候才被锁住的。</p><p>也就是说，我们在分析加锁规则的时候可以用next-key lock来分析。但是要知道，具体执行的时候，是要分成间隙锁和行锁两段来执行的。</p><h1>小结</h1><p>这里我再次说明一下，我们上面的所有案例都是在可重复读隔离级别(repeatable-read)下验证的。同时，可重复读隔离级别遵守两阶段锁协议，所有加锁的资源，都是在事务提交或者回滚的时候才释放的。</p><p>在最后的案例中，你可以清楚地知道next-key lock实际上是由间隙锁加行锁实现的。如果切换到读提交隔离级别(read-committed)的话，就好理解了，过程中去掉间隙锁的部分，也就是只剩下行锁的部分。</p><p>其实读提交隔离级别在外键场景下还是有间隙锁，相对比较复杂，我们今天先不展开。</p><p>另外，在读提交隔离级别下还有一个优化，即：语句执行过程中加上的行锁，在语句执行完成后，就要把“不满足条件的行”上的行锁直接释放了，不需要等到事务提交。</p><p>也就是说，读提交隔离级别下，锁的范围更小，锁的时间更短，这也是不少业务都默认使用读提交隔离级别的原因。</p><p>不过，我希望你学过今天的课程以后，可以对next-key lock的概念有更清晰的认识，并且会用加锁规则去判断语句的加锁范围。</p><p>在业务需要使用可重复读隔离级别的时候，能够更细致地设计操作数据库的语句，解决幻读问题的同时，最大限度地提升系统并行处理事务的能力。</p><p>经过这篇文章的介绍，你再看一下上一篇文章最后的思考题，再来尝试分析一次。</p><p>我把题目重新描述和简化一下：还是我们在文章开头初始化的表t，里面有6条记录，图12的语句序列中，为什么session B的insert操作，会被锁住呢？<br>\n<img src=\"https://static001.geekbang.org/resource/image/3a/1e/3a7578e104612a188a2d574eaa3bd81e.png?wh=942*270\" alt=\"\"></p><center><span class=\"reference\">图12 锁分析思考题</span></center><p>另外，如果你有兴趣多做一些实验的话，可以设计好语句序列，在执行之前先自己分析一下，然后实际地验证结果是否跟你的分析一致。</p><p>对于那些你自己无法解释的结果，可以发到评论区里，后面我争取挑一些有趣的案例在文章中分析。</p><p>你可以把你关于思考题的分析写在留言区，也可以分享你自己设计的锁验证方案，我会在下一篇文章的末尾选取有趣的评论跟大家分享。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h2>上期问题时间</h2><p>上期的问题，我在本期继续作为了课后思考题，所以会在下篇文章再一起公布“答案”。</p><p>这里，我展开回答一下评论区几位同学的问题。</p><ul>\n<li>@令狐少侠 说，以前一直认为间隙锁只在二级索引上有。现在你知道了，有间隙的地方就可能有间隙锁。</li>\n<li>@浪里白条 同学问，如果是varchar类型，加锁规则是什么样的。<br>\n回答：实际上在判断间隙的时候，varchar和int是一样的，排好序以后，相邻两个值之间就有间隙。</li>\n<li>有几位同学提到说，上一篇文章自己验证的结果跟案例一不同，就是在session A执行完这两个语句：</li>\n</ul><pre><code>begin;\nselect * from t where d=5 for update; /*Q1*/\n</code></pre><p>以后，session B 的update 和session C的insert 都会被堵住。这是不是跟文章的结论矛盾？</p><p>其实不是的，这个例子用的是反证假设，就是假设不堵住，会出现问题；然后，推导出session A需要锁整个表所有的行和所有间隙。</p><p>评论区留言点赞板：</p><blockquote>\n<p>@ 某、人 、@郭江伟 两位同学尝试分析了上期问题，并给了有启发性的解答。</p>\n</blockquote><p></p>","neighbors":{"left":{"article_title":"20 | 幻读是什么，幻读有什么问题？","id":75173},"right":{"article_title":"22 | MySQL有哪些“饮鸩止渴”提高性能的方法？","id":75746}},"comments":[{"had_liked":false,"id":56632,"user_name":"古娜拉黑暗之神·巴啦啦能量·堕落达","can_delete":false,"product_type":"c1","uid":1185642,"ip_address":"","ucode":"080BBCEF7DE985","user_header":"https://static001.geekbang.org/account/avatar/00/12/17/6a/c979163e.jpg","comment_is_top":true,"comment_ctime":1546512022,"is_pvip":false,"replies":[{"id":"20433","content":"1. Next-key lock 就是间隙锁➕行锁，所以包含=5这一行<br>2. 对<br>3. (c=5,id=50)是在这个gap里哦，你试试插入(1,5,50)对比一下。好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546526369,"ip_address":"","comment_id":56632,"utype":1}],"discussion_count":28,"race_medal":0,"score":"9.2233723046892995e+18","product_id":100020801,"comment_content":"老师，您好。假期的没跟上，今天补到了这节课，看了之后有几点不是太明白。望能解答一下。<br>1. 索引c上的锁算不算是行锁。假如索引c上的next-key lock为(0,5] (5,10]，那么5算不算是c上的行锁？<br>2. 在案例六中，执行 “delete from t where c=10;” 语句，索引c上的next-key lock是(5,10],(10,10],(10,15)。那么主键索引上的锁是什么呢？是只有行锁，锁住的是 (10,10,10) 和 (30,10,30) 两行吗？<br>3. 也是在案例六中，session A不变，在session B中执行 “update t_20 set d=50 where c=5;”、“update t_20 set d=50 where c=15;”、“insert into t_20 values(40,15,40);”均执行成功，但执行“insert into t_20 values(50,5,50);” 时，却被阻塞。为什么呢？具体执行语句如下<br>session A<br>mysql&gt; begin;<br>mysql&gt; explain delete from t_20 where c=10;<br>id\tselect_type\ttable\tpartitions\ttype\tpossible_keys\tkey\tkey_len\tref\trows\tfiltered\tExtra<br>1\tDELETE\tt_20\t\trange\tc\tc\t5\tconst\t2\t100\tUsing where<br>mysql&gt; delete from t_20 where c=10;<br><br>session B<br>mysql&gt; update t_20 set d=50 where c=5;<br>Query OK, 1 row affected (0.01 sec)<br>Rows matched: 1  Changed: 1  Warnings: 0<br><br>mysql&gt; update t_20 set d=50 where c=15;<br>Query OK, 1 row affected (0.00 sec)<br>Rows matched: 1  Changed: 1  Warnings: 0<br><br>mysql&gt; insert into t_20 values(40,15,40);<br>Query OK, 1 row affected (0.00 sec)<br><br>mysql&gt; explain insert into t_20 values(50,5,50);<br>+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+<br>| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |<br>+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+<br>|  1 | INSERT      | t_20  | NULL       | ALL  | c             | NULL | NULL    | NULL | NULL |     NULL | NULL  |<br>+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; insert into t_20 values(50,5,50);<br>（block）<br><br>我使用的mysql版本是：5.7.23-0ubuntu0.16.04.1<br>show variables的结果太多，我截取了一部分，或许对您分析有帮助：<br>innodb_version\t5.7.23<br>protocol_version\t10<br>slave_type_conversions\t<br>tls_version\tTLSv1,TLSv1.1<br>version\t5.7.23-0ubuntu0.16.04.1<br>version_comment\t(Ubuntu)<br>version_compile_machine\tx86_64<br>version_compile_os\tLinux","like_count":63,"discussions":[{"author":{"id":2497728,"avatar":"https://static001.geekbang.org/account/avatar/00/26/1c/c0/b8ff566a.jpg","nickname":"我是大橙子132","note":"","ucode":"61660568CF07C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565652,"discussion_content":"好问题，好回答。间隙锁加在普通索引上要注意索引值可能重复的情况，想等情况下，不同主键id间还有间隙。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1650509828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435160,"discussion_content":"1. Next-key lock 就是间隙锁➕行锁，所以包含=5这一行\n2. 对\n3. (c=5,id=50)是在这个gap里哦，你试试插入(1,5,50)对比一下。好问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1546526369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38298,"discussion_content":"3 的回答好评。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571757098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1672042,"avatar":"https://static001.geekbang.org/account/avatar/00/19/83/6a/ea7e304e.jpg","nickname":"🥎","note":"","ucode":"0F8DC29949CDAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410743,"discussion_content":"标记","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635768886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005217,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/a1/abb7bfe3.jpg","nickname":"skyitachi","note":"","ucode":"FED5D96CC717B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284843,"discussion_content":"为啥我的insert values(1, 5, 50) 也会被锁住呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592659036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1508329,"avatar":"https://static001.geekbang.org/account/avatar/00/17/03/e9/6358059c.jpg","nickname":"GalaxyCreater","note":"","ucode":"C79E8A088D57CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236602,"discussion_content":"有个非常不解的问题，案例8，如果我在sessionA出执行INSERT INTO t VALUES(12,12,12);竟然能插入成功；session B的update语句难道没给c加 （10，15）的next-key lock吗？为什么我单独执行session B，它就会加（10，15）的next-key lock？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587108128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1240510,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/UXCLpCDP4o2LFpLIrEup2arUOHzwhPY3X8nOoNSRwS6NgNiaQEduN8exnEDicc8goGCARIthOzwEpGATpiadzv3oQ/132","nickname":"formain","note":"","ucode":"D0B7816D6A40E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1508329,"avatar":"https://static001.geekbang.org/account/avatar/00/17/03/e9/6358059c.jpg","nickname":"GalaxyCreater","note":"","ucode":"C79E8A088D57CF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274800,"discussion_content":"我的理解是根据原则2，访问到的对象才会加锁，由于session2被c=10的行锁阻塞，不会继续往后查找，所有没有持有（10，15）的间隙锁。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1590623626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":236602,"ip_address":""},"score":274800,"extra":""},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1508329,"avatar":"https://static001.geekbang.org/account/avatar/00/17/03/e9/6358059c.jpg","nickname":"GalaxyCreater","note":"","ucode":"C79E8A088D57CF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304365,"discussion_content":"确实没加哦，因为 next-key lock 是要分成间隙锁和行锁两段来执行的，先加间隙锁（5，10）,再加行锁10，由于间隙锁之间是不会冲突的，所以加间隙锁(5,10)不会阻塞，而加行锁10，就立刻阻塞了，导致后面的间隙锁（10，15）是没有加的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599554206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":236602,"ip_address":""},"score":304365,"extra":""},{"author":{"id":2389270,"avatar":"https://static001.geekbang.org/account/avatar/00/24/75/16/6e28bf17.jpg","nickname":"初晨","note":"","ucode":"C5D95D13E49127","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1508329,"avatar":"https://static001.geekbang.org/account/avatar/00/17/03/e9/6358059c.jpg","nickname":"GalaxyCreater","note":"","ucode":"C79E8A088D57CF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589503,"discussion_content":"(5,10)间隙锁加成功了，尝试加c=10被阻塞，因此没有后面的过程了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665049867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":236602,"ip_address":"陕西"},"score":589503,"extra":""}]},{"author":{"id":1541014,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/96/73ff13a0.jpg","nickname":"天亮前说晚安","note":"","ucode":"1D82EE562A7C71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":144047,"discussion_content":"我的版本是5.7.25-28,发现间隙的例子全没复现，是不是这些版本加锁机制又发生变化了啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579520052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1541014,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/96/73ff13a0.jpg","nickname":"天亮前说晚安","note":"","ucode":"1D82EE562A7C71","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344891,"discussion_content":"先要确认一下 隔离级别是否是 rr  自动提交是否关闭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611622591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":144047,"ip_address":""},"score":344891,"extra":""}]},{"author":{"id":1640757,"avatar":"https://static001.geekbang.org/account/avatar/00/19/09/35/7d2ced23.jpg","nickname":"样儿","note":"","ucode":"AB01047991559C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89937,"discussion_content":"哈哈，学到了。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576764656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83023,"discussion_content":"明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576411945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":85717,"discussion_content":"没看明白(c=5, id=50)在哪个间隙里，可以帮忙解释一下吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576569256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":83023,"ip_address":""},"score":85717,"extra":""},{"author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":85755,"discussion_content":"明白了，在c索引树上，(c=5,id=50)是在(c=5,id=5),(c=10,id=10)的范围内的,所以是在(5,10)的间隙锁范围内的","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1576572452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":83023,"ip_address":""},"score":85755,"extra":""},{"author":{"id":1293877,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/35/dd79037e.jpg","nickname":"a...Z","note":"","ucode":"5A5A44903785FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98598,"discussion_content":"间隙锁是前开后闭区间，5是开区间，怎么会在间隙锁内呢？，帮忙解答下，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577175944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":85755,"ip_address":""},"score":98598,"extra":""}]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82961,"discussion_content":"问题3没有明白，(c=5, id=50) 是在哪个间隙里面的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576405859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":138642,"discussion_content":"是这样的，c=5,id=50在c索引树下是这么找位置的，先根据c=5找到第一个c=5的位置即（5，5），然后判断id的值，当前插入的id值为50大于5，所以要插到 （5，5）之后，但是（5，5）之后的这个间隙被锁了，所以插入失败。同理如果插入的数据是c=5,id=1的话，因为1<5，所以需要插入到（5，5）之前，这个间隙没有被锁，所以可以插入。 总结下来就是：先根据索引找到间隙锁的边界，然后根据主键的大小判断插入的位置是否在被锁的间隙之内。我是看了下面评论才理解的。希望对你有帮助。","likes_number":40,"is_delete":false,"is_hidden":false,"ctime":1579258636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":82961,"ip_address":""},"score":138642,"extra":""},{"author":{"id":1115724,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","nickname":"乘风","note":"","ucode":"0420C5535DACB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":250578,"discussion_content":"一步一步说。\ndelete from t where c = 10 ;  锁定范围为 (5,10] ,(10,15) ,注意 (5,10)的间隙已锁定，而对于5这个节点其实是不包含的，其索引值为(5,5)。\ninsert into t values(50,5,50)； 会向辅助索引C插入一个值，其值为(5，50) , 因为(5,50) 是在 (5,5)这个点右侧，而这个间隙已经被锁定了，即区间(5，10)这个区间锁定的，所以插入失败，而插入(5,1) 在(5，5)之前，不在这个间隙锁范围内\n\n\n","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1588030170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":82961,"ip_address":""},"score":250578,"extra":""},{"author":{"id":2086624,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/d6/e0/3ccaaa7b.jpg","nickname":"领子","note":"","ucode":"64AC4E6AB74E68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294829,"discussion_content":"所以案例二的结果并不正确，begin ;insert into t values (7,10,7); 还是会锁住，10到底是不是闭区间，还要根据id判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596011402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138642,"ip_address":""},"score":294829,"extra":""}]},{"author":{"id":1732823,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/70/d7/d1049bae.jpg","nickname":"Geek_3004e0","note":"","ucode":"441D39BDC39E4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73786,"discussion_content":"问题3又学习到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575596244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55610,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1546242796,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1045223295724","product_id":100020801,"comment_content":"Happy New Year !这个专栏绝对是极客时间最好我买过最值的专栏。","like_count":244,"discussions":[{"author":{"id":1270296,"avatar":"https://static001.geekbang.org/account/avatar/00/13/62/18/fa2b8381.jpg","nickname":"fishcried","note":"","ucode":"859D4460CF17F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266255,"discussion_content":"非常赞同","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589488513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018696,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8b/48/e2279b0e.jpg","nickname":"绵阳米粉儿真好吃","note":"","ucode":"F82499FD76B5EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4337,"discussion_content":"赞同","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565321471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2069361,"avatar":"","nickname":"林静","note":"","ucode":"492618873E9B1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591593,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666683927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56298,"user_name":"Chu~♡·の~","can_delete":false,"product_type":"c1","uid":1057960,"ip_address":"","ucode":"69B0FBEC66FD48","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/a8/c0148cb8.jpg","comment_is_top":false,"comment_ctime":1546417473,"is_pvip":false,"replies":[{"id":"20257","content":"嗯嗯，可以的👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546421286,"ip_address":"","comment_id":56298,"utype":1}],"discussion_count":6,"race_medal":0,"score":"615726740801","product_id":100020801,"comment_content":"是不是可以总结为：<br>1、查询过程中访问到的对象才会加锁，而加锁的基本单位是next-key lock（前开后闭）；<br>2、等值查询上MySQL的优化：索引上的等值查询，如果是唯一索引，next-key lock会退化为行锁，如果不是唯一索引，需要访问到第一个不满足条件的值，此时next-key lock会退化为间隙锁；<br>3、范围查询：无论是否是唯一索引，范围查询都需要访问到不满足条件的第一个值为止；","like_count":144,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434977,"discussion_content":"嗯嗯，可以的👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546421286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433095,"avatar":"https://static001.geekbang.org/account/avatar/00/15/de/07/9525a99b.jpg","nickname":"蚊子为什么不咬猫","note":"","ucode":"7C2D2461D6494A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334009,"discussion_content":"第三点：如果查询是id>5，会不会变成表锁？？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607692561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2435796,"avatar":"https://static001.geekbang.org/account/avatar/00/25/2a/d4/c991387b.jpg","nickname":"what","note":"","ucode":"F9139063942C4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561542,"discussion_content":"总结到位！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649667171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2845977,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/6d/19/204b0900.jpg","nickname":"Black Jack","note":"","ucode":"CB16C8F44EF422","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537034,"discussion_content":"总结的好‘’","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638939189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2340277,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIj43LHM3EMNT9m1zRuluxXcHicoiaq2lSibicGFUjQamExNxKicQYLboXPmhFsT6T0SriakzDpGkFkWBag/132","nickname":"Geek_88e281","note":"","ucode":"0724F70BEE2A30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370907,"discussion_content":"小于5的可以插入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619577791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2359215,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ff/af/0dd061e6.jpg","nickname":"jet","note":"","ucode":"FDF6CEB9BE6622","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339971,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609852757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57700,"user_name":"undifined","can_delete":false,"product_type":"c1","uid":1068920,"ip_address":"","ucode":"449CB4CD2DC089","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/78/c3d8ecb0.jpg","comment_is_top":false,"comment_ctime":1546870286,"is_pvip":false,"replies":[{"id":"21105","content":"好问题，质量很高的笔记","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547117592,"ip_address":"","comment_id":57700,"utype":1}],"discussion_count":50,"race_medal":0,"score":"504058043918","product_id":100020801,"comment_content":"遇到一个有趣的问题，在老师的解答下终于弄明白了：<br><br>CREATE TABLE z (<br>  id INT PRIMARY KEY AUTO_INCREMENT,<br>  b  INT,<br>  KEY b(b)<br>)<br>  ENGINE = InnoDB<br>  DEFAULT CHARSET = utf8;<br><br>INSERT INTO z (id, b)<br>VALUES (1, 2),<br>  (3, 4),<br>  (5, 6),<br>  (7, 8),<br>  (9, 10);<br><br>session A<br><br>BEGIN;<br>SELECT *<br>FROM z<br>WHERE b = 6 FOR UPDATE;<br><br>session B <br>INSERT INTO z VALUES (0, 4);<br>这里为什么会被锁住<br><br>答案比较长，写在我自己的笔记里了，地址是 https:&#47;&#47;helloworlde.github.io&#47;blog&#47;blog&#47;MySQL&#47;MySQL-%E4%B8%AD%E5%85%B3%E4%BA%8Egap-lock-next-key-lock-%E7%9A%84%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98.html<br><br>大家可以看看","like_count":118,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435710,"discussion_content":"好问题，质量很高的笔记","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547117592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1695207,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/e7/0d923009.jpg","nickname":"Geek_Winy","note":"","ucode":"BEE395FC91E131","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293862,"discussion_content":"我来指出答主的笔记存在的问题：答主文章中提到b索引的锁范围会随着id的值变化而变化，这完全是因果倒置的；\n为什么会出现session2的各条语句的现象呢？是因为插入的数据的顺序是先以b索引排序，然后按id索引排序，b索引上的锁是(4, 6], (6,8)，即（4，8）都是锁住的，这里只是锁住了b索引，主键索引没锁，咱们一条语句一条语句解释：\n表里已有数据\n+----+------+\n| id | b    |\n+----+------+\n|  1 |    2 |\n|  3 |    4 |\n|  5 |    6 |\n|  7 |    8 |\n|  9 |   10 |\n+----+------+\n1. INSERT INTO z VALUES (2, 4);/*success*/    id=2 b=4, 这时4可以插在第二行（3，4）数据之前或者之后，但因为id=2,只能插在第二行，因为也会按照主键id排序，这时可以插入成功\n2. INSERT INTO z VALUES (2, 8);/*blocked*/   id=2 b=8, 8可以插在第四行（7，8）前或者后，但是因为2比第四行的id=7小，所以只会插在前面，但这里b已经被锁住了，只能blocked了\n3. INSERT INTO z VALUES (4, 4);/*blocked*/  和以上分析一致，只能插在第二行后面，可是这个范围b上已加锁，也只能被block住\n\n后面语句同理","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1595690281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1363230,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","nickname":"复兴","note":"","ucode":"C172A87873001A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1695207,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/e7/0d923009.jpg","nickname":"Geek_Winy","note":"","ucode":"BEE395FC91E131","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300422,"discussion_content":"那为什么b相等的情况下，要保持id有序呢，这个我找不到相应资料来证明","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598090363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293862,"ip_address":""},"score":300422,"extra":""},{"author":{"id":2122601,"avatar":"https://static001.geekbang.org/account/avatar/00/20/63/69/e16ed359.jpg","nickname":"木有梦想","note":"","ucode":"6366D107BBA553","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1363230,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","nickname":"复兴","note":"","ucode":"C172A87873001A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309417,"discussion_content":"最左前缀原则","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601283768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300422,"ip_address":""},"score":309417,"extra":""},{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1695207,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/e7/0d923009.jpg","nickname":"Geek_Winy","note":"","ucode":"BEE395FC91E131","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327761,"discussion_content":"纠正你一下，Update/delete语句，通过辅助索引加锁的语句，考虑额外地主键索引上也要加锁。--可以看看姜承尧《MYSQL内核》第九章\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605940464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293862,"ip_address":""},"score":327761,"extra":""}]},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195371,"discussion_content":"插入自增id=0的时候,会判断id=0后自动生成主键id=10 session b相当于插入的是(id=10,b=4)的数据;因为session A查询了b=6时,会给b索引上(4,6] next-key lock (6,8) gap,其中4对应的是(d=4,id=3)的数据;那么插入id=10,b=4的数据区间是在d=4,id=3之后的即在(4,6]next-key lock中所以阻塞","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1583272936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1310826,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/6a/da96c764.jpg","nickname":"尹希闯","note":"","ucode":"A35F70179808D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214577,"discussion_content":"请问（4,6]哪里来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585210280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":195371,"ip_address":""},"score":214577,"extra":""},{"author":{"id":1018685,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8b/3d/0c3a2fd4.jpg","nickname":"偶尔复活下","note":"","ucode":"18B1D525CD50D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1310826,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/6a/da96c764.jpg","nickname":"尹希闯","note":"","ucode":"A35F70179808D8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299381,"discussion_content":"看记录，从记录中来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597669582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":214577,"ip_address":""},"score":299381,"extra":""},{"author":{"id":2287841,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","nickname":"LPF","note":"","ucode":"036C552D7251E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330858,"discussion_content":"不包含(4,10)包含在(4,3)~(6,5)左开右闭区间，所以插入不了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606723287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":195371,"ip_address":""},"score":330858,"extra":""}]},{"author":{"id":1374445,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/ed/60fb8fba.jpg","nickname":"陈小渣👻","note":"","ucode":"6B968B06C76C63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324163,"discussion_content":"插入（0,4）mysql主键不为0会变成插入（10,4）这个时候需要插入在（3,4）（5,6）之间，但是这个位置有间隙锁，所以被阻塞","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1605063517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344034,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/62/269aae3f.jpg","nickname":"水月","note":"","ucode":"78FC68615016DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411389,"discussion_content":"就卡在auto_increment的主键上了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635915965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2254917,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/45/ddf89612.jpg","nickname":"bestgopher","note":"","ucode":"D89735C8CA9C6E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":2344034,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/62/269aae3f.jpg","nickname":"水月","note":"","ucode":"78FC68615016DB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552171,"discussion_content":"id为0会自动变成id=10","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1645335927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411389,"ip_address":""},"score":552171,"extra":""}]},{"author":{"id":2357566,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f9/3e/0d5f27c4.jpg","nickname":"肥猫不开心","note":"","ucode":"FA9204B84913C0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384045,"discussion_content":"可以 0变10那个我还真不知道…我就知道null变10","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626343550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155646,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","nickname":"ppd0705","note":"","ucode":"EB63D4E3FD1E9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266466,"discussion_content":"看了这篇注意到要非主键索引上锁也考虑了id的值","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589519284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2389270,"avatar":"https://static001.geekbang.org/account/avatar/00/24/75/16/6e28bf17.jpg","nickname":"初晨","note":"","ucode":"C5D95D13E49127","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589505,"discussion_content":"由于id是自增值，插入0或者null，系统都会分配下一次自增值10，因此实际插入的是（10,4）；（10,4）是在（6,4）的右边，在间隙锁的范围内。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1665050306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2459923,"avatar":"https://static001.geekbang.org/account/avatar/00/25/89/13/0d3c5008.jpg","nickname":"最好不过","note":"","ucode":"C7DBCD08402DF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378570,"discussion_content":"确实解决了我上一讲中评论区update t set c=10 where id=0；为什么阻塞的疑惑","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623290028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2837603,"avatar":"","nickname":"Geek_18e6f5","note":"","ucode":"3700BC57DD6FF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2459923,"avatar":"https://static001.geekbang.org/account/avatar/00/25/89/13/0d3c5008.jpg","nickname":"最好不过","note":"","ucode":"C7DBCD08402DF8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413652,"discussion_content":"我也是，想哭了，现在明白 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636535473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378570,"ip_address":""},"score":413652,"extra":""}]},{"author":{"id":2557344,"avatar":"https://static001.geekbang.org/account/avatar/00/27/05/a0/a8218edd.jpg","nickname":"再见旧时光","note":"","ucode":"00EE3724636749","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372200,"discussion_content":"看了笔记，很nice，细品一下，有收获。以下纯属个人理解：首先锁的范围是【b, id】（4,3）到（8, 7），先看插入的数据\nINSERT INTO z VALUES (2, 4);/*success*/\nINSERT INTO z VALUES (2, 8);/*blocked*/\nINSERT INTO z VALUES (4, 4);/*blocked*/\nINSERT INTO z VALUES (4, 8);/*blocked*/\nINSERT INTO z VALUES (8, 4);/*blocked*/\nINSERT INTO z VALUES (8, 8);/*success*/\nINSERT INTO z VALUES (0, 4);/*blocked*/\nINSERT INTO z VALUES (-1, 4);/*success*/\n\n（4,  2）维度上小于（4,  3），不会阻塞，\n（8，2）维度上小于（8, 7），在（8,7）的左边，左边处于锁范围，阻塞\n（4，4）维度上大于（4, 3），在（4,3）的右边，右边处于锁范围，阻塞\n（8, 4）维度上小于（8,7），在（8,7）左边，处于锁范围内，阻塞\n（8,8）维度上大于（8,7），在（8,7）右边，不处于锁范围，可以插入成功\n（0，4）由于是自增主键，所以0会被替换成10，相当于插入（4, 10）,同样处于锁范围内，阻塞。核心就是锁范围的判断。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620223352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2797976,"avatar":"","nickname":"Geek_323a60","note":"","ucode":"CDC276EC255411","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2557344,"avatar":"https://static001.geekbang.org/account/avatar/00/27/05/a0/a8218edd.jpg","nickname":"再见旧时光","note":"","ucode":"00EE3724636749","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585208,"discussion_content":"这里 (0,4) 阻塞为什么是自增主键，又为什么会将0 变成 10？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661397511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372200,"ip_address":"四川"},"score":585208,"extra":""}]},{"author":{"id":1261360,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/30/23f6b413.jpg","nickname":"五十九秒","note":"","ucode":"1F34F62193CFF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307740,"discussion_content":"不错的分析思路，只是结论有点像看走近科学的感觉。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600747197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243331,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f8/c3/1d557354.jpg","nickname":"o my love","note":"","ucode":"307601ACAC5DCC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577338,"discussion_content":"关键就是insert 自动增长id填写为0，id会变成增长值，next-key lock后闭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656040764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049761,"avatar":"https://static001.geekbang.org/account/avatar/00/10/04/a1/c853ee82.jpg","nickname":"heartzwj410","note":"","ucode":"9C3E9F393F7C09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568501,"discussion_content":"笔记好像看不了了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651152644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2856577,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/NfCE5nCYiavXpVbHxZpHthACZNlHic0T82L7qldaLiatibS8npKt6bcmkIyYAiaD9Lic9M81YCY9E2JmnWZ412lBDG9w/132","nickname":"Geek_3b519f","note":"","ucode":"C5B1B6D12FA356","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560074,"discussion_content":"震撼啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649155953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2837603,"avatar":"","nickname":"Geek_18e6f5","note":"","ucode":"3700BC57DD6FF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413651,"discussion_content":"小老弟很强","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636535450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063308,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","nickname":"小乙哥","note":"","ucode":"C77E79BEA0C325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401990,"discussion_content":"学习了，厉害👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633779019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1517390,"avatar":"https://static001.geekbang.org/account/avatar/00/17/27/4e/cfc94866.jpg","nickname":"鱼塘局码农","note":"","ucode":"D265DB38AC5EA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387069,"discussion_content":"牛逼，兄弟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627971631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1321726,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2a/fe/197449a0.jpg","nickname":"Hero","note":"","ucode":"33D7939CC3C815","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380457,"discussion_content":"楼主请问博客是按照什么搭建的？git还是啥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624511876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253634,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/02/a691a1d2.jpg","nickname":"mangoliu","note":"","ucode":"B065A045A806C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377897,"discussion_content":"太棒了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622954527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374334,"discussion_content":"这个分析有点牛逼了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621141864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005330,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/12/041c04fd.jpg","nickname":"王昊","note":"","ucode":"CF0FB78E23ABD4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373475,"discussion_content":"学习了~ 很棒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620738333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2206508,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/O6qftWBakkjQHrAhF5tia21GKkQxibJaPy2nWUKc9eiaouaqb67Hj60RRKgjgHhzPmaxaHkLszcNYrDSkj21lPylQ/132","nickname":"Geek_a852c8","note":"","ucode":"D925A9D71A76BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363370,"discussion_content":"兄弟。牛逼。懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617182093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2099279,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erId7l2ynzbHOic3Ric8ZppfBDxVDfVeH3UtNFjsoFCCh0DHDzPeHDMVmEW7WIgNIba4CaIGGkNQVicg/132","nickname":"NaNrailgun","note":"","ucode":"32A674E8837380","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348618,"discussion_content":"请问地址是打不开了吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612667378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2108271,"avatar":"https://static001.geekbang.org/account/avatar/00/20/2b/6f/65a61041.jpg","nickname":"han","note":"","ucode":"1596D492F7CFB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2099279,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erId7l2ynzbHOic3Ric8ZppfBDxVDfVeH3UtNFjsoFCCh0DHDzPeHDMVmEW7WIgNIba4CaIGGkNQVicg/132","nickname":"NaNrailgun","note":"","ucode":"32A674E8837380","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388598,"discussion_content":"可以打开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628844697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348618,"ip_address":""},"score":388598,"extra":""}]},{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277195,"discussion_content":"超级棒的笔记","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591016088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637598,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fc/de/5e20d32d.jpg","nickname":"JustRun","note":"","ucode":"8FC84531118FB6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261016,"discussion_content":"非常详细的笔记，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588930112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1756491,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/4b/36acd180.jpg","nickname":"Hhhhcl","note":"","ucode":"588D28DA42AFEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":67926,"discussion_content":"你好，我想请教一个问题。\n为什么插入的这些值都是按照字段b来排序的？而不是按照主键id来排序的\n即为什么（2，8）是插入在（5, 6）~（7,8）\n而不是插入在（1,2）~（3,4）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575189059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1756491,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/4b/36acd180.jpg","nickname":"Hhhhcl","note":"","ucode":"588D28DA42AFEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85757,"discussion_content":"因为是在b索引树上，不是在id主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576572595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":67926,"ip_address":""},"score":85757,"extra":""}]},{"author":{"id":1157761,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/81/97e36f32.jpg","nickname":"影影影","note":"","ucode":"5BE8847256B6B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22702,"discussion_content":"可能是理解力不足的原因，看了笔记并没能明白。笔记中的结论也是反推出来的（因为被block，所以某个临界点被加了锁）。希望老师或者@undifined能再解释下。谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569674523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1640757,"avatar":"https://static001.geekbang.org/account/avatar/00/19/09/35/7d2ced23.jpg","nickname":"样儿","note":"","ucode":"AB01047991559C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1157761,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/81/97e36f32.jpg","nickname":"影影影","note":"","ucode":"5BE8847256B6B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":90111,"discussion_content":"个人感觉层主笔记已经很详细了。再结合老师的例子琢磨琢磨。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576766734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22702,"ip_address":""},"score":90111,"extra":""},{"author":{"id":1934802,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/85/d2/045c63fb.jpg","nickname":"王建新","note":"","ucode":"E3151DDC0EEF0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1157761,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/81/97e36f32.jpg","nickname":"影影影","note":"","ucode":"5BE8847256B6B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336942,"discussion_content":"他的笔记确实不行...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608731442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22702,"ip_address":""},"score":336942,"extra":""}]},{"author":{"id":1142674,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6f/92/535160b0.jpg","nickname":"商瞿逆","note":"","ucode":"FA9522CEDA5635","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19390,"discussion_content":"真不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569166597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618066,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b0/92/8db901ad.jpg","nickname":"菜鸟","note":"","ucode":"9C28351664D773","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4188,"discussion_content":"你好，你的笔记里，为什么b的索引锁范围根据不同的id取值范围不同呢，能再给解释一下吗，感谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565204380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1087300,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/44/52b5e2e2.jpg","nickname":"cweioo","note":"","ucode":"E48D291E6C6993","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1618066,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b0/92/8db901ad.jpg","nickname":"菜鸟","note":"","ucode":"9C28351664D773","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34634,"discussion_content":"\n我理解是这样的，锁住的是（3，4）到（7，8）（注：（id，d）的格式。当要插入（4，4）时，它的位置在锁住的区间内（在（3，4）的后面）会导致锁住区间发生变化，所以不允许插入","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571211690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4188,"ip_address":""},"score":34634,"extra":""},{"author":{"id":1087300,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/44/52b5e2e2.jpg","nickname":"cweioo","note":"","ucode":"E48D291E6C6993","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1618066,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b0/92/8db901ad.jpg","nickname":"菜鸟","note":"","ucode":"9C28351664D773","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34636,"discussion_content":"插入（2，8）在（7，8）前面，有导致这个区间发生变化，也不允许","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571211837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4188,"ip_address":""},"score":34636,"extra":""}]}]},{"had_liked":false,"id":147981,"user_name":"Jayden 王凯豪","can_delete":false,"product_type":"c1","uid":1592236,"ip_address":"","ucode":"6CAADB9B449892","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/ac/2a48928f.jpg","comment_is_top":false,"comment_ctime":1572924809,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"495494163849","product_id":100020801,"comment_content":"跟Oracle 确认过了，唯一索引范围锁的bug在最新的8.0.18已经修复！","like_count":116,"discussions":[{"author":{"id":1106631,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e2/c7/f671bd93.jpg","nickname":"amy","note":"","ucode":"C6DAA11AFD3EC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297601,"discussion_content":"幸好看到这个评论，我自己的mysql版本是8.0.21，我就说怎么我死活复现不了唯一索引范围锁的bug","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1596981967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1058015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","nickname":"Yayu","note":"","ucode":"5E7842458D8229","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302257,"discussion_content":"这个评论应该置顶，甚至应该补充到内容中去。\n我的数据库版本是 8.0.30 也不存在这个bug。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1598861294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1797216,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/6c/60/dadcf0b4.jpg","nickname":"泡泡龙","note":"","ucode":"F72BDC55C1DDFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538203,"discussion_content":"文中有说规则的适用范围 ---“MySQL 后面的版本可能会改变加锁策略，所以这个规则只限于截止到现在的最新版本，即 5.x 系列 &lt;=5.7.24，8.0 系列 &lt;=8.0.13。”","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639365827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1357311,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b5/ff/d1f205b0.jpg","nickname":"L","note":"","ucode":"5B847B2378854E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318233,"discussion_content":"可","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603684904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2283781,"avatar":"https://static001.geekbang.org/account/avatar/00/22/d9/05/0d772dbf.jpg","nickname":"咦","note":"","ucode":"2E0D5A488489A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395394,"discussion_content":"mysql5.7.10 版本，RC级别，二级唯一索引下的范围锁bug之前也被fix过，但是引发了新的问题，后来好像又被还原了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632298810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58264,"user_name":"Geek_9ca34e","can_delete":false,"product_type":"c1","uid":1222861,"ip_address":"","ucode":"9A9FDBBCCBE19B","user_header":"","comment_is_top":false,"comment_ctime":1547022859,"is_pvip":false,"replies":[{"id":"21017","content":"好问题，我会加到答疑文章中，<br>Gap是一个动态的概念","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547043896,"ip_address":"","comment_id":58264,"utype":1}],"discussion_count":6,"race_medal":0,"score":"310784668171","product_id":100020801,"comment_content":"老师，你好：<br>我练习实例的时候发现一个问题：如 案例五：唯一索引范围锁 bug<br>begin;<br>select * from t where id&gt;10 and id&lt;=15 for update;<br>1、执行如上语句加锁范围(10,15]和(15,20]；<br>2、因为10未加锁，所以我单独再开一个连接，执行delete from t where id=10;不会锁等待，能正常删除；<br>3、但是我再执行insert into t values(10,10,10); 语句会等待，无法正常执行；<br>4、经过分析我发现第一个连接执行的语句的加锁范围已经变成(5,15]和(15,20]，代表锁蔓延了；这是什么原因呢？","like_count":73,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435979,"discussion_content":"好问题，我会加到答疑文章中，\nGap是一个动态的概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547043896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327762,"discussion_content":"delete id=10之后，为了原先的(10,15]中的gap锁，会用10的上一个值5来代替","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1605941046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342221,"discussion_content":"遇到过类似问题，更新边界值导致间隙变大，再改成原值改不回去，被阻塞","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1610616921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1661365,"avatar":"https://static001.geekbang.org/account/avatar/00/19/59/b5/26d3c637.jpg","nickname":"Yc","note":"","ucode":"407776D104D6F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366609,"discussion_content":"为啥，10不会被锁住呢？条件是id>10，查询规则是首先找到id=10的这行数据，然后根据这行数据进行向右遍历。按照加锁规则：原则 2：查找过程中访问到的对象才会加锁。\n加锁的话 在根据优化1：优化 1：索引上的等值查询，给唯一索引加锁的时候，next-key lock 退化为行锁。  这个例子为啥ID=10不加锁！！！，求老师翻牌","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1618132314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1661365,"avatar":"https://static001.geekbang.org/account/avatar/00/19/59/b5/26d3c637.jpg","nickname":"Yc","note":"","ucode":"407776D104D6F8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374527,"discussion_content":"优化1是索引上面的等值查询，这个是前提条件，>10不是等值查询。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621235346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":366609,"ip_address":""},"score":374527,"extra":""},{"author":{"id":1067438,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/ae/db795abf.jpg","nickname":"巨人","note":"","ucode":"5C41F6F1AF2A8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1661365,"avatar":"https://static001.geekbang.org/account/avatar/00/19/59/b5/26d3c637.jpg","nickname":"Yc","note":"","ucode":"407776D104D6F8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391997,"discussion_content":"一样也没明白，第30章里说不等于里的等值查询，和这个例子感觉冲突","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630753440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":366609,"ip_address":""},"score":391997,"extra":""}]}]},{"had_liked":false,"id":55789,"user_name":"HuaMax","can_delete":false,"product_type":"c1","uid":1118488,"ip_address":"","ucode":"2E78DE1AF098AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","comment_is_top":false,"comment_ctime":1546309236,"is_pvip":false,"replies":[{"id":"20108","content":"新年好<br><br>对的👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546315488,"ip_address":"","comment_id":55789,"utype":1}],"discussion_count":12,"race_medal":0,"score":"242064477812","product_id":100020801,"comment_content":"首先老师新年快乐，学习专栏受益良多！<br>上期问过老师的问题已了解答案，锁是加在索引上的。再尝试回答问题。c上是普通索引，根据原则2，访问到的都要加锁，在查询c&gt;=15这个条件时，在查找到15后加锁（10，15］，继续往右查找，按理说不会锁住6这个索引值，但查询语句中加了order by c desc，我猜想会优化为使用c&lt;=20这条语句，查找到20后往左查找，这样会访问到15左边的值10，从而加锁（5，10］，不知我理解对否？","like_count":56,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434843,"discussion_content":"新年好\n\n对的👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546315488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309890,"discussion_content":"根据条件<=20,会向左查找，查到15发现满足，锁定(10,15),由于是非唯一索引，需要继续向左找，找到10这条记录，发现不满足了，不继续向左找。由于扫描过的记录都要加锁，就锁住了（5，10）这个范围","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1601479329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184061,"avatar":"https://static001.geekbang.org/account/avatar/00/12/11/3d/7b9161ca.jpg","nickname":"落石","note":"","ucode":"11F60E700E96B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279327,"discussion_content":"请问在条件 c<= 20，扫描到15不就可以了么？为什么要访问到10呢？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1591324805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1184061,"avatar":"https://static001.geekbang.org/account/avatar/00/12/11/3d/7b9161ca.jpg","nickname":"落石","note":"","ucode":"11F60E700E96B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309889,"discussion_content":"我也有这个疑问","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601478693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":279327,"ip_address":""},"score":309889,"extra":""},{"author":{"id":1357311,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b5/ff/d1f205b0.jpg","nickname":"L","note":"","ucode":"5B847B2378854E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1184061,"avatar":"https://static001.geekbang.org/account/avatar/00/12/11/3d/7b9161ca.jpg","nickname":"落石","note":"","ucode":"11F60E700E96B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318227,"discussion_content":"问就是 MySQL代码里是这么写的������","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603683669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":279327,"ip_address":""},"score":318227,"extra":""},{"author":{"id":1124692,"avatar":"https://static001.geekbang.org/account/avatar/00/11/29/54/b9fec917.jpg","nickname":"菜鸟一枚","note":"","ucode":"34052769B97FEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1184061,"avatar":"https://static001.geekbang.org/account/avatar/00/12/11/3d/7b9161ca.jpg","nickname":"落石","note":"","ucode":"11F60E700E96B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343457,"discussion_content":"因为c是非唯一索引，所以扫描到15以后，不能确定15的左边还是不是15。所以只能继续，所以就到了10","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1611049130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":279327,"ip_address":""},"score":343457,"extra":""}]},{"author":{"id":1163715,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c1/c3/bd84ed76.jpg","nickname":"","note":"","ucode":"35216097CB0379","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557707,"discussion_content":"我猜想会优化为使用c&lt;=20这条语句，查找到20后往左查找，这样会访问到15左边的值10，从而加锁（5，10］。这里没有优化二吗 因为10不满足=15这个条件 所以退化为(5,10) ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647937879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1793962,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5f/aa/63e641c1.jpg","nickname":"H","note":"","ucode":"04D7D030245E27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291361,"discussion_content":"为啥会把（20，25]这个范围也锁了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594792167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2377275,"avatar":"https://static001.geekbang.org/account/avatar/00/24/46/3b/ac4b8ab0.jpg","nickname":"Stream上的帧","note":"","ucode":"325FBEFF80BD91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1793962,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5f/aa/63e641c1.jpg","nickname":"H","note":"","ucode":"04D7D030245E27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336641,"discussion_content":"等于20，找下一个不等于的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608642571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291361,"ip_address":""},"score":336641,"extra":""}]},{"author":{"id":1435349,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e6/d5/7c9d95d5.jpg","nickname":"门遥","note":"","ucode":"B0A445E190544C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290344,"discussion_content":"向下扫描到c=10，只是为了找15；然而，既然扫描到c=10，那就要加next-key lock哈，希望你能理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594437858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64593,"user_name":"时隐时现","can_delete":false,"product_type":"c1","uid":1111899,"ip_address":"","ucode":"DA4D622FF84920","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","comment_is_top":false,"comment_ctime":1548831536,"is_pvip":false,"replies":[{"id":"23192","content":"<br>好问题，在read-commited隔离级别下，update语句<br>有一个“semi-consistent” read优化，<br><br>意思是，如果update语句碰到一个已经被锁了的行，会读入最新的版本，然后判断一下是不是满足查询条件，<br>a)如果不满足，就直接跳过；<br>b) 如果满足，才进入锁等待<br><br>你的第二个问题：这个策略，只对update有效，delete无效<br><br>新春快乐~","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549276326,"ip_address":"","comment_id":64593,"utype":1}],"discussion_count":8,"race_medal":0,"score":"164757588784","product_id":100020801,"comment_content":"不好意思，这次又来晚了，看这种连载技术文章，和看小说一样，养肥了集中看~~<br>这次的问题如下，希望丁老师有空解答一下。<br>版本：mysql 5.6.39<br>CREATE TABLE `t` (<br>  `a` int(11) NOT NULL,<br>  `b` int(11) DEFAULT NULL<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br>insert into t values(1,1),(2,2),(3,3),(4,4),(5,5);<br>采用READ-COMMITTED隔离级别<br>案例1、<br>session A：<br>begin;<br>update t set a=6 where b=1;<br>session B：<br>begin;<br>update t set a=7 where b=2;<br>A和B均能执行成功<br>问题1：官档上说对于RC且全表扫描的update，先逐行添加行锁然后释放掉不符合where条件的，那么session A成功对(1,1)加锁，理论上session B在扫描(1,1)并尝试加锁时会被阻塞，为何还能执行成功？官档链接：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;innodb-transaction-isolation-levels.html<br><br>案例2：<br>session A：<br>begin;<br>update t set a=6 where b=1;<br>session B：<br>begin;<br>delete from t where b=2; -- 被阻塞<br>问题2：为何案例1 中的session B不会被阻塞，而案例2的却被session A的行数阻塞，update和delete都是全部扫描，难道加锁机制不一样？","like_count":38,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438090,"discussion_content":"\n好问题，在read-commited隔离级别下，update语句\n有一个“semi-consistent” read优化，\n\n意思是，如果update语句碰到一个已经被锁了的行，会读入最新的版本，然后判断一下是不是满足查询条件，\na)如果不满足，就直接跳过；\nb) 如果满足，才进入锁等待\n\n你的第二个问题：这个策略，只对update有效，delete无效\n\n新春快乐~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549276326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542617,"discussion_content":"8.0.27可以重现，提示被第一行的行锁挡住，此时可以看到已经被改a已经被改成6","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640795299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637789,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/4PvDe2mRia2vdMGyickA40y2libhpf8ibmIEQquLUZFMXUMqqDjfVb96Y69p7bS6USgxicOKCCHxQHczHBnNb5L9nfA/132","nickname":"Geek_eb2e49","note":"","ucode":"21671F0C4E7872","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130979,"discussion_content":"老师辛苦了，想请问下‘读提交隔离级别下还有一个优化，即：语句执行过程中加上的行锁，在语句执行完成后，就要把“不满足条件的行”上的行锁直接释放了，不需要等到事务提交。  \nsession A中对应的update t set a=6 where b=1;这个语句执行完成后，其他不满足条件上的行锁应该都被释放掉了，为什么sessiion B的这个delete from t where b=2; 这个语句还会被阻塞？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578816244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637789,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/4PvDe2mRia2vdMGyickA40y2libhpf8ibmIEQquLUZFMXUMqqDjfVb96Y69p7bS6USgxicOKCCHxQHczHBnNb5L9nfA/132","nickname":"Geek_eb2e49","note":"","ucode":"21671F0C4E7872","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195374,"discussion_content":"对delete的优化是不存在的,只有对update有效","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583273209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":130979,"ip_address":""},"score":195374,"extra":""},{"author":{"id":1588794,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3e/3a/2267d2a3.jpg","nickname":"hoppo","note":"","ucode":"B0C7C124A99B2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637789,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/4PvDe2mRia2vdMGyickA40y2libhpf8ibmIEQquLUZFMXUMqqDjfVb96Y69p7bS6USgxicOKCCHxQHczHBnNb5L9nfA/132","nickname":"Geek_eb2e49","note":"","ucode":"21671F0C4E7872","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312598,"discussion_content":"应该这么说 &#39; 就要把  不满足条件的行上 的行锁直接释放了&#39;，是做了的，只锁了b=1这一行（b=1满足条件）。但SessionB开始的时候，也会按行从1开始加锁（没有索引），所以阻塞了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602744446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":130979,"ip_address":""},"score":312598,"extra":""}]},{"author":{"id":1612570,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Xibh27ZicBhXls5KsPibBXZI4RKlR0MUbUiaEuOS2ORibKaxWSicpIjd4lvWUWqtNAde7EeDDTpWKAiapGdHeaiaDqczWQ/132","nickname":"。。。。。","note":"","ucode":"985B1561AC9152","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4838,"discussion_content":"我用mysql 8.0.13试了下，两种都会被阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565764420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1612570,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Xibh27ZicBhXls5KsPibBXZI4RKlR0MUbUiaEuOS2ORibKaxWSicpIjd4lvWUWqtNAde7EeDDTpWKAiapGdHeaiaDqczWQ/132","nickname":"。。。。。","note":"","ucode":"985B1561AC9152","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329806,"discussion_content":"你是不是没有改隔离级别为RC，默认是RR","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1606462710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4838,"ip_address":""},"score":329806,"extra":""}]},{"author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1826,"discussion_content":"好问题，值得一看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562930388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64235,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1548725019,"is_pvip":false,"replies":[{"id":"23045","content":"好问题，新年快乐<br><br>会锁的，只是因为在(5,10]就被锁住了，所以后面的锁加不上去了😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549009795,"ip_address":"","comment_id":64235,"utype":1}],"discussion_count":9,"race_medal":0,"score":"147577613083","product_id":100020801,"comment_content":"老师，案例八session B的操作语句update t set d = d + 1 where c =10; 由于c是非唯一键索引，锁（5，10」可以理解<br>，为什么不锁(10,15} 呢，不是应该继续向后扫描直到第一个不满足条件的值为止吗","like_count":34,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437917,"discussion_content":"好问题，新年快乐\n\n会锁的，只是因为在(5,10]就被锁住了，所以后面的锁加不上去了😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549009795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1174548,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ec/14/c6e9e99a.jpg","nickname":"张之豪","note":"","ucode":"936B996DDE87CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126753,"discussion_content":"锁(5,10]分两步,间隙锁(5,10);行锁10 然而行锁被sessionA锁住了,所以阻塞了?","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1578535861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1174548,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ec/14/c6e9e99a.jpg","nickname":"张之豪","note":"","ucode":"936B996DDE87CE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277201,"discussion_content":"“行锁被sessionA锁住”这种表达不太好理解。我觉得“行锁10被sessionA持有”这样表达更好理解，所以sessionB想要获取行锁10的时候，陷入了阻塞","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1591016789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":126753,"ip_address":""},"score":277201,"extra":""}]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394769,"discussion_content":"第一步：锁 （5，10） 成功\n第二步：[10]  阻塞\n第三步：(10,15] 优化为 （10，15）等第二步完成","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1632042322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1810189,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZHw73tgCqGKhvticUWGRz4icgicu4hFWfKtacoFJeItH7maNuNUmjnEgDTJvOibwUWgGV0p6guNPibMVWDV4BUmEmlA/132","nickname":"Ethan","note":"","ucode":"75F613D58909DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366738,"discussion_content":"按照老师给的答复，为什么案例6中Session A 的delete语句在(5,10]就不能锁主，后面还能继续加锁？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618157884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691695,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d0/2f/f4de1b14.jpg","nickname":"莫失莫忘","note":"","ucode":"0BAA76C08DA2C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115468,"discussion_content":"小白疑惑  前面学习到 “为保证binlog记录顺序，非索引更新会锁住全表记录”。这里更新有间隙锁。这两种锁会同时存在么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578015125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691695,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d0/2f/f4de1b14.jpg","nickname":"莫失莫忘","note":"","ucode":"0BAA76C08DA2C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164172,"discussion_content":"会的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581160650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":115468,"ip_address":""},"score":164172,"extra":""},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691695,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d0/2f/f4de1b14.jpg","nickname":"莫失莫忘","note":"","ucode":"0BAA76C08DA2C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195373,"discussion_content":"非所有字段的更新,rc下锁住所有的行,没有间隙锁 rr下所有的行+区间即整个表next-key lock","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583273054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":115468,"ip_address":""},"score":195373,"extra":""},{"author":{"id":1135593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/e9/f244988e.jpg","nickname":"NIRVANA","note":"","ucode":"F3A979679AA44E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309408,"discussion_content":"碰到熟人了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601281979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":195373,"ip_address":""},"score":309408,"extra":""}]}]},{"had_liked":false,"id":58820,"user_name":"陈","can_delete":false,"product_type":"c1","uid":1304668,"ip_address":"","ucode":"81A54B3BA9C721","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/5c/561caff2.jpg","comment_is_top":false,"comment_ctime":1547201230,"is_pvip":false,"replies":[{"id":"21285","content":"这一行存在的时候是行锁，这一行不存在，那就是间隙锁啦。<br><br>insert into t values(8,8,8)是被主键上(5,10)的间隙锁锁住的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547205340,"ip_address":"","comment_id":58820,"utype":1}],"discussion_count":6,"race_medal":0,"score":"134691187406","product_id":100020801,"comment_content":"老师在案列一中update t set d=d+1 where id=7 中id是主键也是唯一索引，按优化1应该退化成行锁才对，为什么insert into t values(8,8,8)会被锁住，我是那儿理解错了?","like_count":31,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436219,"discussion_content":"这一行存在的时候是行锁，这一行不存在，那就是间隙锁啦。\n\ninsert into t values(8,8,8)是被主键上(5,10)的间隙锁锁住的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547205340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1154146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9c/62/f625b2bb.jpg","nickname":"酸葡萄","note":"","ucode":"9D059C4FB327C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309021,"discussion_content":"mysql 8.0.17 \n疑问：间隙锁不会阻塞update吗？\n案例一：\n(5,10)上有间隙锁，为什么\nupdate t set d=d+1 where id = 5/7/8/9;都可以执行成功，不会阻塞呢？\n所以猜测锁是加在索引上的，d不是索引，所以可以修改。\n\n继续实验：\nupdate t set id=id+1 where id =7;\n发现也可以执行，是不是因为数据库中没有id=7这个记录？\nupdate t set id=id+1 where id =5;阻塞了，为什么？行锁？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601173320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1649057,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","nickname":"hello","note":"","ucode":"4F42DAA5DB5C38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1154146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9c/62/f625b2bb.jpg","nickname":"酸葡萄","note":"","ucode":"9D059C4FB327C0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362235,"discussion_content":" 5.x 系列 <=5.7.24，8.0 系列 <=8.0.13","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616899381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309021,"ip_address":""},"score":362235,"extra":""},{"author":{"id":2597649,"avatar":"https://static001.geekbang.org/account/avatar/00/27/a3/11/30d913f0.jpg","nickname":"R","note":"","ucode":"006403528E7F59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1154146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9c/62/f625b2bb.jpg","nickname":"酸葡萄","note":"","ucode":"9D059C4FB327C0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375173,"discussion_content":"兄弟解决了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621501390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309021,"ip_address":""},"score":375173,"extra":""}]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372620,"discussion_content":"感觉这个解释有点牵强，id=7是因为查不到这行，所以做了扫描，扫描范围是（5,10），所以这个区间加了间隙锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620394243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587733,"discussion_content":"id=7是进行树搜索吧不需要扫描....这个其实很好理解啊，id =7不存在加间隙锁就是为了防止其它事务插入一个id =7导致statement的binlog数据不一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663244515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372620,"ip_address":"广东"},"score":587733,"extra":""}]}]},{"had_liked":false,"id":70474,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1551104284,"is_pvip":false,"replies":[{"id":"25167","content":"确实是这样的，<br>一致性视图的生成时间是 第一次执行一致性读的时候","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551139785,"ip_address":"","comment_id":70474,"utype":1}],"discussion_count":11,"race_medal":0,"score":"108925286684","product_id":100020801,"comment_content":"老师您好。在自己跑案例四的时候，回想起之前MVCC的内容就对案例做了些调整，此时产生一些有关一致性试图的疑惑，还想请老师排疑解惑。<br>MySQL8.0.13，RR隔离级别下，表结构及数据按照例子中不变，执行语句如下：<br>session A：begin; select * from t where c&gt;=10 and c&lt;11 for update;  --锁住(5,15]<br>session B：update t set d=d+1 where c=5;                                           --成功，changed:1<br>session A：select * from t;                                                                      --读到d=6<br>此时，session A居然读到了session B update后的结果。语句调整后，把session A中的 for update去掉，依据RR级别下一致性视图原理不会读到session B更新后的结果。<br>那么，是否可以理解begin后执行的select语句使用for update&#47;lock in share mode并不会生成一致性视图呢？<br>还请老师指点迷津，感激不尽(❁´ω`❁)","like_count":25,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440653,"discussion_content":"确实是这样的，\n一致性视图的生成时间是 第一次执行一致性读的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551139785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351063,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaByN5IfYbE9jMtWrtTDXtPEIHeV77KW1p7ZkiasiaGgA50VXaibo4fbp5ib2JkFP3iaIe4AUudLibufkEIofu5euCNHg/132","nickname":"小刀","note":"","ucode":"94DF8C45E09E42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224268,"discussion_content":"for update 当前读","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1586274732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2771089,"avatar":"","nickname":"Geek_126edf","note":"","ucode":"D5C8819DF40803","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395035,"discussion_content":"感谢了，完全没意识到","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1632195316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2389270,"avatar":"https://static001.geekbang.org/account/avatar/00/24/75/16/6e28bf17.jpg","nickname":"初晨","note":"","ucode":"C5D95D13E49127","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585142,"discussion_content":"666  今天刚测试时遇到了，跟我想的一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1661341224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1887586,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLhicDSmL4vicPADhxxzOzukMar8nV5Tc3ic2dz4FQIxMX3WmX5a2V3sdD121eWpvfQI8NXIkkDZoDFw/132","nickname":"Geek_536b54","note":"","ucode":"F62BC7781D9212","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328989,"discussion_content":"好问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606292675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2957548,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TCc0icvama5VVOH4B3icFjcofPXVD7LrcS6GkBa09rMMM33Dgicg3adaNGYJwMS2u5BNnG7SXWPvXIGuKjFdXTnIA/132","nickname":"Geek_3c04cb","note":"","ucode":"F24EAE4985A372","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583960,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660530634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1163715,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c1/c3/bd84ed76.jpg","nickname":"","note":"","ucode":"35216097CB0379","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557791,"discussion_content":"有个问题 这里的for update之后 二级索引c会加锁 (5, 15] 对应的聚簇索引两条记录 id=10 id=15 会加行锁吗？在5.7版本 RR隔离级别下 我另一个事务update where id = 15是可以更新成功的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647961037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","nickname":"张诚","note":"","ucode":"F623703194769B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367427,"discussion_content":"我也是发现了这个问题，发现跟书上讲的也不一样，没想到在评论中找到了老师的回答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618361685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","nickname":"张诚","note":"","ucode":"F623703194769B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":576322,"discussion_content":"for update本来就是当前读啊，直接读最新的版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655432225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":367427,"ip_address":""},"score":576322,"extra":""}]},{"author":{"id":1181248,"avatar":"https://static001.geekbang.org/account/avatar/00/12/06/40/ff77554d.jpg","nickname":"养🐱","note":"","ucode":"3CBBBEFD3945B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311993,"discussion_content":"一致性读会判断数据是否对当前事务可见，不可见就回滚至上一个版本的数据继续判断，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602557885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1644950,"avatar":"https://static001.geekbang.org/account/avatar/00/19/19/96/3b49b437.jpg","nickname":"郭某某","note":"","ucode":"5E53B60527DCDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287659,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593505096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55479,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1546209176,"is_pvip":false,"replies":[{"id":"20071","content":"风雨无阻 节假日不休，包括元旦和春节😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546217334,"ip_address":"","comment_id":55479,"utype":1}],"discussion_count":2,"race_medal":0,"score":"108920391576","product_id":100020801,"comment_content":"早晨睡不着打开极客时间一看，竟然更新了。今天是周日而且在假期中哎...","like_count":26,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434786,"discussion_content":"风雨无阻 节假日不休，包括元旦和春节😄","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1546217334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1823,"discussion_content":"其实老师都是提前整好后面的课，准时更新的，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562929129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55939,"user_name":"乾坤","can_delete":false,"product_type":"c1","uid":1130585,"ip_address":"","ucode":"DC2505711FB7D0","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/59/f93698ec.jpg","comment_is_top":false,"comment_ctime":1546351878,"is_pvip":true,"replies":[{"id":"20142","content":"感觉没大差别，嗯嗯，理解就好😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546361548,"ip_address":"","comment_id":55939,"utype":1}],"discussion_count":2,"race_medal":0,"score":"104625566982","product_id":100020801,"comment_content":"您好，关于&quot;优化 2：索引上的等值查询，向右遍历时且最后一个值不满足等值条件的时候，next-key lock 退化为间隙锁。&quot;，我觉得改为&quot;从第一个满足等值条件的索引记录开始向右遍历到第一个不满足等值条件记录，并将第一个不满足等值条件记录上的next-key lock 退化为间隙锁&quot;更明确些","like_count":24,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434892,"discussion_content":"感觉没大差别，嗯嗯，理解就好😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546361548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542775,"discussion_content":"我自己写笔记的时候，也是写成 不满足条件第一个的记录，感觉这样表述比较准确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640840716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83258,"user_name":"王伯轩","can_delete":false,"product_type":"c1","uid":1108650,"ip_address":"","ucode":"546814BA7E5839","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/aa/cdd13ad2.jpg","comment_is_top":false,"comment_ctime":1554482974,"is_pvip":false,"replies":[{"id":"30155","content":"对的，要update和delete的时候，要“先读后写”，这个读就开始加锁了。<br><br>insert的时候要有插入意向锁（就是会跟gap lock冲突的那个）<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554616329,"ip_address":"","comment_id":83258,"utype":1}],"discussion_count":2,"race_medal":0,"score":"83158861598","product_id":100020801,"comment_content":"这两章今天来来回回啃了好几遍，终于感觉有关锁的知识成体系了。 <br><br>尤其是总结的加锁原则，简直太精辟了，感谢丁老师.<br><br>原则 2：查找过程中访问到的对象才会加锁。<br><br>对于原则2 我有个疑问，访问到的对象应该还应该包含其影响到的索引。<br><br>老师的例子中某些隐含了这些东西，其他同学的留言中也表明了这点，望老师指点<br><br>比如 一个表t（id ，c,d,e）<br>id是主键 ，其他列都有非唯一索引。 <br>执行insert 需要获取所有索引上的锁；<br>执行删除（即使根据id删除）也需要获取其他索引的锁；<br>执行update（即使where条件使用id）如果更新的有索引列，也需要获取上面的锁<br><br>因为更新操作肯定会导致索引树的修改，如果不更改，会导致索引搜索时返回的数据和实际不一样；如果更改的话，肯定需要防止并发就需要加锁<br><br>不知道理解的是否正确","like_count":20,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445942,"discussion_content":"对的，要update和delete的时候，要“先读后写”，这个读就开始加锁了。\n\ninsert的时候要有插入意向锁（就是会跟gap lock冲突的那个）\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554616329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378384,"discussion_content":"这个解释太到位了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623202657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55582,"user_name":"郭江伟","can_delete":false,"product_type":"c1","uid":1313994,"ip_address":"","ucode":"613D638619B5A2","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/ca/6173350b.jpg","comment_is_top":false,"comment_ctime":1546236687,"is_pvip":false,"replies":[{"id":"20081","content":"嗯你说的对<br><br>不过是我少打一个词了，加上去了，要desc哦<br><br>重新分析下😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546244070,"ip_address":"","comment_id":55582,"utype":1}],"discussion_count":2,"race_medal":0,"score":"65970746127","product_id":100020801,"comment_content":"老师这次的留下的问题，语句跟上次不一样，上期问题语句是select id  from t where c&gt;=15 and c&lt;=20 order by c desc  for update;；这次缺少了 order by c desc ，不加desc的话insert into t values(6,6,6);不会被堵塞；<br>根据优化3：索引上的等值查询，在向右遍历时且最后一个值不满足等值条件的时候next-key lock退化为间隙锁；<br>问题中的sql语句加了desc ，是向左扫描，该优化用不上，所以下限10是闭区间，为了防止c为10的行加入，需要锁定到索引c键（5,5）<br>此例中insert into t values(6,5,6) 会堵塞，insert into t values(4,5,6) 不会堵塞，","like_count":16,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434803,"discussion_content":"嗯你说的对\n\n不过是我少打一个词了，加上去了，要desc哦\n\n重新分析下😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546244070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886364,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoIDpqWcd3vuowkXguSkPuH2TcwmD9iak0sscUzCDrGAMln89vdC3GuH6KcQJkGg4xjdnb0bdnz2A/132","nickname":"shirly","note":"","ucode":"46875D2FCB9A6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587052,"discussion_content":"原来是向左扫描，优化二没用上，所以（5,10]，疑惑了好久，感恩~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662715141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176231,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1580996129,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"53120603681","product_id":100020801,"comment_content":"猜想是因为多了一个order by c desc，找到第一个等值查询c=20，加锁(15,20]，因为c不是唯一索引，所以不会优化、退化成行锁。继续向左，等值查到c=15，加锁(10,15]，直到找到c=10，不满足条件c&gt;=15，根据原则2，扫描到的都要加锁，所以最后加锁(5,10]，因为是范围查询不会优化。所以，最后session A的加锁范围是(5,20]，即(5,10],(10,15],(15,20]。","like_count":12,"discussions":[{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587986,"discussion_content":"我的理解是。这是一个向左的范围扫描，因此10会攘括，根据左开右闭所以就得再加一个next key lock（5，10】；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663425365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2945508,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/kTIwKz8eeicPsWibiavOkCnhfys2HkhLFmNKN7hV3ax1GNsjs8Ss2BlH0ekelxFibZz4C3cy1R1YcEMopJhXCghqyQ/132","nickname":"Geek_c22ad7","note":"","ucode":"6A3ACF366C02CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556786,"discussion_content":"5是怎么扫到的..","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647512127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545162,"discussion_content":"你和我分析的一样。但实际情况是(20，25)也加锁了。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641868617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64774,"user_name":"是我的海","can_delete":false,"product_type":"c1","uid":1197457,"ip_address":"","ucode":"4BCE240829676A","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/91/afda3094.jpg","comment_is_top":false,"comment_ctime":1548904997,"is_pvip":false,"replies":[{"id":"22938","content":"一定要低调哈😆<br><br>如果面试的时候能够让大家回答更有底气，那就太好啦👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548923241,"ip_address":"","comment_id":64774,"utype":1}],"discussion_count":3,"race_medal":0,"score":"53088512549","product_id":100020801,"comment_content":"全是干货赞赞赞，以后出去面试再也不怕面试官装X问锁的问题了","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438171,"discussion_content":"一定要低调哈😆\n\n如果面试的时候能够让大家回答更有底气，那就太好啦👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548923241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1357311,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b5/ff/d1f205b0.jpg","nickname":"L","note":"","ucode":"5B847B2378854E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318297,"discussion_content":"我也想低调啊 实力不允许啊。。。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1603700657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2760780,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKghO4kJwQ5ccuBA2Yox1WlZmq0JUICpNAsgYlOHX0wHGv48xVRKSvF9a6Eic5l2UOjFjnvTnsibibiaw/132","nickname":"Geek_94045a","note":"","ucode":"B8F23BA9D1411B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546270,"discussion_content":"也许你的面试官也在看这个专栏 哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642260879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57560,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1546834438,"is_pvip":false,"replies":[{"id":"20745","content":"第二个语句把第一个gap变成(1,10]了<br><br>第三个update的逻辑里面，包含了“要插入一个c=5的行”<br><br>好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546844476,"ip_address":"","comment_id":57560,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48791474694","product_id":100020801,"comment_content":"老师您好，自己基于文中开头的表做了一个实验，<br>session1：<br>mysql&gt; begin;<br>mysql&gt; explain select c from t where c &gt;5 lock in share mode;<br>分析：(5,10],(10,15],(15,20],(20,25],(25,正无穷)有锁。<br>session2:<br>mysql&gt; update t set c = 5 where c = 1;#(执行成功)<br>mysql&gt; update t set c = 1 where c = 5;#(执行成功)<br>mysql&gt; update t set c = 5 where c = 1;#(阻塞)<br>最后一条阻塞，无法用原理分析，肯请老师解答。","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435642,"discussion_content":"第二个语句把第一个gap变成(1,10]了\n\n第三个update的逻辑里面，包含了“要插入一个c=5的行”\n\n好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546844476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303933,"discussion_content":"第二句执行完成后，就没有c=5的记录了， 这个时候锁就扩展到（1，10]了。 第三句自然会被阻塞","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1599411133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327782,"discussion_content":"不用把隐式锁转换考虑进去么。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605947162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56526,"user_name":"滔滔","can_delete":false,"product_type":"c1","uid":1303342,"ip_address":"","ucode":"6968B5771AF79D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/2e/77ad18f4.jpg","comment_is_top":false,"comment_ctime":1546482249,"is_pvip":false,"replies":[{"id":"20384","content":"向右扫描变成了向左扫描，<br>前开后闭还是前开后闭😄<br>规则还有效的<br>好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546485984,"ip_address":"","comment_id":56526,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44496155209","product_id":100020801,"comment_content":"老师，如果加了关键字desc，是不是文中的优化规则依然有效，只是左开右闭区间变成了右开左闭区间，向右扫描变成了向左扫描，这样理解对吗？🤔","like_count":10,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435094,"discussion_content":"向右扫描变成了向左扫描，\n前开后闭还是前开后闭😄\n规则还有效的\n好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546485984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58482,"user_name":"鸠翱","can_delete":false,"product_type":"c1","uid":1116568,"ip_address":"","ucode":"7D498AF2BC4289","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/98/b11c372b.jpg","comment_is_top":false,"comment_ctime":1547088919,"is_pvip":false,"replies":[{"id":"21183","content":"代码实现上是这样子的。。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547140443,"ip_address":"","comment_id":58482,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40201794583","product_id":100020801,"comment_content":"老师我今天在回顾的时候又想到一个新问题，为什么RR级别下要以next-key lock作为加锁的基本单位呢？<br>比如说案例5中的那个例子，我将其修改成select * from t where id &gt; 10 and id &lt; 15 for upadate，按照加锁规则，需要对(10,15]上锁，那么按照逻辑来看，15的那个行锁其实没必要的（难道是有必要的嘛？），既然next-key lock本质也是先加间隙锁再加行锁，为什么非要把那个行锁也加上，就是因为next-key lock是加锁基本单位嘛？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436084,"discussion_content":"代码实现上是这样子的。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547140443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1384866,"avatar":"https://static001.geekbang.org/account/avatar/00/15/21/a2/280e29ff.jpg","nickname":"dawn","note":"","ucode":"40CEAC0FD6567C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285617,"discussion_content":"我自己试了下，发现15并没有加锁呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592895790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55927,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1546349094,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"35906087462","product_id":100020801,"comment_content":"这和分两步有什么关系？<br>(5,10]已经是被锁住，分不分两步来加锁，这个间隙和行锁都被锁住了，session b应该是拿不到锁才对。","like_count":8,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584114,"discussion_content":"因为GAP间隙锁不会互斥，即这里的（5,10），当在加上[10]行锁发生锁等待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660634477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164178,"discussion_content":"session b是拿不到锁啊，所以才阻塞了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581161159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38301,"discussion_content":"间隙锁，排他的原因，往间隙里插入记录。这个在上一节讲到落。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571757405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1458684,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ57v6PaIS3wZIqA5eEFyrOdsYcTicSmvpX8s8icUJcFTicFHt2Bh9z4WonglpQjf8UjNN9V8icRVtmOw/132","nickname":"Geek_feb353","note":"","ucode":"59B71C6A84689D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7113,"discussion_content":"同问，希望老师能给解答一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567389614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1588794,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3e/3a/2267d2a3.jpg","nickname":"hoppo","note":"","ucode":"B0C7C124A99B2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1458684,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ57v6PaIS3wZIqA5eEFyrOdsYcTicSmvpX8s8icUJcFTicFHt2Bh9z4WonglpQjf8UjNN9V8icRVtmOw/132","nickname":"Geek_feb353","note":"","ucode":"59B71C6A84689D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190562,"discussion_content":"就因为分两步，B先加上间隙锁（5,10) 。然后准备加行锁，发现加不上进入锁等待。此时A insert (8,8,8)，发现B加过了间隙锁，无法成功，也进入锁等待，所以死锁了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582959961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7113,"ip_address":""},"score":190562,"extra":""},{"author":{"id":1148422,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","nickname":"美美","note":"","ucode":"44CC95C45AF345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1588794,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3e/3a/2267d2a3.jpg","nickname":"hoppo","note":"","ucode":"B0C7C124A99B2D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289203,"discussion_content":"不是a先加的（5,10）么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594024646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":190562,"ip_address":""},"score":289203,"extra":""},{"author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148422,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","nickname":"美美","note":"","ucode":"44CC95C45AF345","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303934,"discussion_content":"间隙锁并不会互斥， A事务加了间隙锁， B事务也可以再次加上间隙锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599411213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289203,"ip_address":""},"score":303934,"extra":""}]}]},{"had_liked":false,"id":55798,"user_name":"nero","can_delete":false,"product_type":"c1","uid":1110627,"ip_address":"","ucode":"BACD4A95B5FA09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/63/1f495e51.jpg","comment_is_top":false,"comment_ctime":1546311451,"is_pvip":false,"replies":[{"id":"20107","content":"这一行如果存在就是优化一<br><br>但是在我们例子里，这行不存在","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546315465,"ip_address":"","comment_id":55798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31611082523","product_id":100020801,"comment_content":"请问下案例一为啥没用到优化一：<br>优化 1：索引上的等值查询，给唯一索引加锁的时候，next-key lock 退化为行锁。<br>因为id是主键索引，满足唯一索引，按道理应该走优化一的逻辑，只对id=7这一行加锁","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434845,"discussion_content":"这一行如果存在就是优化一\n\n但是在我们例子里，这行不存在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546315465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57618,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1546852203,"is_pvip":false,"replies":[{"id":"20771","content":"是的，不严谨<br><br>用了索引，但是没有用到索引的快速定位能力","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546854633,"ip_address":"","comment_id":57618,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27316655979","product_id":100020801,"comment_content":"接上一个提问，老师回答：第二个语句把第一个gap变成(1,10]了。<br>对此非常惊讶，相当于当前线程的锁的范围可以被动受别的线程影响，感觉打开了新世界的大门。。。。。。<br>另外还有一个问题：执行 explain select c from t where c!=1;<br>发现possible_keys和key都是c,但其实看着并没有用到树搜索功能，只是遍历了索引。<br>网上基本都说!=用不了索引，所以这种说法是不严谨的？","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435669,"discussion_content":"是的，不严谨\n\n用了索引，但是没有用到索引的快速定位能力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546854633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60733,"user_name":"任洋爱吃肉","can_delete":false,"product_type":"c1","uid":1126168,"ip_address":"","ucode":"14AA217CB8C672","user_header":"https://static001.geekbang.org/account/avatar/00/11/2f/18/e437681f.jpg","comment_is_top":false,"comment_ctime":1547539955,"is_pvip":false,"replies":[{"id":"21671","content":"update 没索引就是锁住主键索引上所有的行和间隙<br>锁的内容太多了， 这样确实容易出现死锁哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547551977,"ip_address":"","comment_id":60733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23022376435","product_id":100020801,"comment_content":"老师你好，最近在线上遇到一个问题如下：执行一个简单的update语句更新数据库，where后面的字段没有索引，这个字段的数据库中值可能有重复，在并发的情况下，会偶发出现数据库死锁的情况。后面通过，查询出主键，再通过主键进行更新，解决了这个问题，但不明白为什么会出现死锁的情况，能麻发解释下吗？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436603,"discussion_content":"update 没索引就是锁住主键索引上所有的行和间隙\n锁的内容太多了， 这样确实容易出现死锁哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547551977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56245,"user_name":"rains","can_delete":false,"product_type":"c1","uid":1276520,"ip_address":"","ucode":"540BB449B0D52F","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/68/d6b53fbb.jpg","comment_is_top":false,"comment_ctime":1546411311,"is_pvip":false,"replies":[{"id":"20238","content":"逐个加","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546411883,"ip_address":"","comment_id":56245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23021247791","product_id":100020801,"comment_content":"无索引的列做等值的update，扫描过的100行记录，是加1个锁，还是一行一行逐个加100个行锁","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434963,"discussion_content":"逐个加","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546411883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55875,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1546336626,"is_pvip":false,"replies":[{"id":"20121","content":"加了limit 2是对的<br><br><br>没加的不完整哦。需要注意c不是唯一索引。<br>这个真是个好问题，我留着答疑篇给大家当作思考题你看行吗😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546341911,"ip_address":"","comment_id":55875,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23021173106","product_id":100020801,"comment_content":"老师  ， 查询特定值 和 范围查询都有了 。 <br><br>那么如果是 :<br>select id from t where c in （5 ，20，10） <br><br>这种情况搜索引擎是怎么走的呢 ， 是先把 in 中的值进行排序然后再按照 c 索引去分别定位三行 。 之后的锁是(0,5] 、(5,10] 、（15,20] 这样么 。<br><br>如果再加上 limit 2<br><br>这时候就只是 (0,5] 、(5,10] ","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434871,"discussion_content":"加了limit 2是对的\n\n\n没加的不完整哦。需要注意c不是唯一索引。\n这个真是个好问题，我留着答疑篇给大家当作思考题你看行吗😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546341911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255843,"user_name":"David","can_delete":false,"product_type":"c1","uid":1509145,"ip_address":"","ucode":"EB1306748F7A86","user_header":"https://static001.geekbang.org/account/avatar/00/17/07/19/76943b89.jpg","comment_is_top":false,"comment_ctime":1603441905,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"18783311089","product_id":100020801,"comment_content":"案例四：<br>这次 session A 用字段 c 来判断，加锁规则跟案例三唯一的不同是：在第一次用 c=10 定位记录的时候，索引 c 上加了 (5,10]这个 next-key lock 后，由于索引 c 是非唯一索引，没有优化规则，也就是说不会蜕变为行锁，因此最终 sesion A 加的锁是，索引 c 上的 (5,10] 和 (10,15] 这两个 next-key lock。<br><br>这一块，为什么没有匹配到优化二，没有退化成间隙锁，这块没看懂，望老师和朋友们指正一下。","like_count":4,"discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545169,"discussion_content":"案例4是范围查询，优化2要求等值查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641869145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213484,"user_name":"👀","can_delete":false,"product_type":"c1","uid":1979938,"ip_address":"","ucode":"6CE9845298DC4D","user_header":"https://static001.geekbang.org/account/avatar/00/1e/36/22/c0b183ab.jpg","comment_is_top":false,"comment_ctime":1588430087,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18768299271","product_id":100020801,"comment_content":"您好 我对于案例二：非唯一索引等值锁有个问题 在session A 执行select语句之后，是不是c等于(0, 10)的区间就被锁定住了，但是为什么我实验感觉是锁定住了[0, 10]的范围呢？我执行了如下两条sql语句<br>1. insert into t values(1, 0,0);<br>2. insert into t values(1, 10, 0);<br>发现同样是阻塞的效果，希望您能解答一下！谢谢！！！","like_count":4,"discussions":[{"author":{"id":1556722,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c0/f2/1b2ed786.jpg","nickname":"巴萨巴萨！！！","note":"","ucode":"C204AD44347738","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296660,"discussion_content":"在索引c的临界0和10上应该有单独的判断，如果id在(0,10)之间，那么不允许插入，如果不在允许插入，可以试试insert into t values(11, 0,0)  和   insert into t values(11, 10,0)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596616344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1245528,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/58/1788a7e6.jpg","nickname":"TheTingTings","note":"","ucode":"729CCE441856F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1556722,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c0/f2/1b2ed786.jpg","nickname":"巴萨巴萨！！！","note":"","ucode":"C204AD44347738","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401947,"discussion_content":"尝试了下  insert into t values(11, 0,0)  被阻塞了，  insert into t values(11, 10,0) 没被阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633771405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296660,"ip_address":""},"score":401947,"extra":""}]}]},{"had_liked":false,"id":85702,"user_name":"Geek_maxwell","can_delete":false,"product_type":"c1","uid":1446442,"ip_address":"","ucode":"15FBD7BE46AC81","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epbtcXw5PHzibHcXlupLmnZOYXBLR10U4Hvn5tib14EYlkMBERYgGlgZ63BxgFSBTQmUErfSXibcKl6w/132","comment_is_top":false,"comment_ctime":1555207117,"is_pvip":true,"discussion_count":7,"race_medal":0,"score":"18735076301","product_id":100020801,"comment_content":"老师有个疑问，就是既然repeat read已经解决了幻读（利用next key lock)，那下一个事务级别（序列化）主要是解决什么问题呢？ 因为原本我以为repeat read 其实没有解决幻读","like_count":4,"discussions":[{"author":{"id":1101473,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/a1/76f4e230.jpg","nickname":"toyz","note":"","ucode":"47209F04FF8982","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3625,"discussion_content":"隔离级别本身没法解决吧,只是InnoDB提供了解决方案,换个引擎就不行了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1564646611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164179,"discussion_content":"RR靠间隙锁解决幻读了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581161362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052994,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/226NabDEu1IGMN7Om1gQqG22hk2dZKojpB0KDpAK0vtujQLdlgZsVaPbIc4ymcib0NdH3Syh8YibRuL7Lv5kVCkg/132","nickname":"果子","note":"","ucode":"D7B288A3E722F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404164,"discussion_content":"好问题，可惜老师没有回答你，我自己找到了答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634227877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341619,"discussion_content":"有没有具体串行化的级别，到底怎么解决幻读的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610463055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476730,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epm9ZuB7Cupiau858icuC98XI18qDeuFZR2jaYM6eniauwtLibYDoll3Jew2DJE1gp4ggdM9tGNdQJWzA/132","nickname":"ddup","note":"","ucode":"9DF454672A3ADA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278371,"discussion_content":"会有第二类丢失更新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591178442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/68/93c05ab0.jpg","nickname":"laugh","note":"","ucode":"1CB29054325D1D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276221,"discussion_content":"间隙锁解决不了写倾斜问题，数据密集型应用系统设计这本书里面有介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590843093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115724,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","nickname":"乘风","note":"","ucode":"0420C5535DACB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250601,"discussion_content":"可以试下，主键索引树查询并没有解决幻读，唯一索引降级为rl","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588032008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71405,"user_name":"双双","can_delete":false,"product_type":"c1","uid":1306576,"ip_address":"","ucode":"8225BD50C00AF9","user_header":"","comment_is_top":false,"comment_ctime":1551334699,"is_pvip":false,"replies":[{"id":"25557","content":"在这个例子里，如果说“记录上的锁”，索引c上有c=10和c=15， 主键上有id=10。<br><br>不是查询结果，而是 “查询过程中访问到的行和间隙”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551353899,"ip_address":"","comment_id":71405,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731203883","product_id":100020801,"comment_content":"案例四：select * from t where c&gt;=10 and c&lt;11 for update;<br>索引c上有两个next-key lock,(5,10]和(10,15]。那由于for update会给主键索引上满足条件的行加上行锁，这个满足条件的行是id=10这一行吧？满足条件是指查询结果么？<br>","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441137,"discussion_content":"在这个例子里，如果说“记录上的锁”，索引c上有c=10和c=15， 主键上有id=10。\n\n不是查询结果，而是 “查询过程中访问到的行和间隙”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551353899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55636,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1546248806,"is_pvip":true,"replies":[{"id":"20085","content":"对，就是唯一索引加行锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546259336,"ip_address":"","comment_id":55636,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18726117990","product_id":100020801,"comment_content":"老师， insert 是如何加锁的呢？ 是不是只加行锁呢？   我在session a中插入一个不存在的记录，成功，但是事务没提交，然后在session b中重复插入这个记录，会被阻塞。","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434817,"discussion_content":"对，就是唯一索引加行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546259336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3139195,"avatar":"https://static001.geekbang.org/account/avatar/00/2f/e6/7b/5b6f741b.jpg","nickname":"勇敢的心","note":"","ucode":"4922FEDA30DD50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584085,"discussion_content":"插入意向锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660629450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211092,"user_name":"韩新宇","can_delete":false,"product_type":"c1","uid":1960906,"ip_address":"","ucode":"A51D23BE382250","user_header":"","comment_is_top":false,"comment_ctime":1587894216,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14472796104","product_id":100020801,"comment_content":"案例八session A已经获取到了next-key lock(5,10] 和间隙锁 (10,15)；这两个锁，为什么session B还能获取到(5,10)那？间隙锁、行锁、next-key lock是完全相互独立的？","like_count":3,"discussions":[{"author":{"id":1002403,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4b/a3/3cbffe77.jpg","nickname":"dtt","note":"","ucode":"923D4FE62FC1A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300757,"discussion_content":"尝试解答：\nnext-key lock包含了两部分：间隙锁和行锁。间隙锁与间隙锁之间不存在冲突关系，间隙锁只跟往这个间隙的插入操作存在冲突；行锁包含读锁和写锁：读锁之间不存在冲突，<读锁, 写锁> 和 <写锁, 写锁>均存在冲突。\n在案例八中，Session A已经获取了next-key lock(5,10] 和间隙锁 (10,15)，这里的next-key lock包含间隙锁 (5, 10) 和 行锁 {10}；Session B首先要获取next-key lock (5, 10]（注：应该还需要获取next-key lock (10, 15]，不过执行不到了）：1. next-key lock中包含间隙锁(5, 10)，因为间隙锁之间没有冲突关系，因此可以获取；2. 行锁{10}与Session A的行锁{10}存在冲突，因此被block住。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1598257623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061082,"avatar":"https://static001.geekbang.org/account/avatar/00/10/30/da/8ec33b04.jpg","nickname":"Hony","note":"","ucode":"898C8C345A340D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370983,"discussion_content":"案例3不是说是覆盖索引，不会加行锁10吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619600467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201799,"user_name":"Ryan","can_delete":false,"product_type":"c1","uid":1667987,"ip_address":"","ucode":"95BBBEE5B23878","user_header":"https://static001.geekbang.org/account/avatar/00/19/73/93/0a3a1e5b.jpg","comment_is_top":false,"comment_ctime":1585838694,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14470740582","product_id":100020801,"comment_content":"这篇得看好几遍","like_count":3,"discussions":[{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277218,"discussion_content":"评论区优秀的评论也不少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591017807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163877,"user_name":"Bourne","can_delete":false,"product_type":"c1","uid":1311299,"ip_address":"","ucode":"1286279F70B13F","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/43/1c2fb7b3.jpg","comment_is_top":false,"comment_ctime":1576816386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14461718274","product_id":100020801,"comment_content":"这个专栏很值，能学到很多东西，在此谢谢老师，谢谢您。说实话看评论都能学到很多东西，老师也很负责，给同学们答疑解惑，真的很感谢，希望老师以后还能出更多专栏、同时自己也能坚持学。","like_count":3},{"had_liked":false,"id":85573,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1555129311,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14440031199","product_id":100020801,"comment_content":"@唯她命 的问题，案例一为啥是间隙锁，而不是行锁？<br><br>我自己的理解：因为 id=7 的记录不存在，没有上锁的实体，所以无法使用优化 1。<br><br>优化 1 是说索引上的等值查询，如果是唯一索引，且记录存在，就退化成行锁。<br>优化 2 是说在索引上的等值查询，不管是唯一索引，还是非唯一索引，只有向右遍历时，最后一个值不等于等值查询的条件，就会退化成间隙锁。如 where id=7，扫描完 id=5，接着扫描 id=10，但是 7 不等于 10，所以会退化成间隙锁。<br><br>如果理解有误，还望老师指正😁😁","like_count":3,"discussions":[{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345584,"discussion_content":"理解的是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611748723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046172,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f6/9c/b457a937.jpg","nickname":"不能扮演天使","note":"","ucode":"9922330BFF7FFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85712,"discussion_content":"同有疑问，感觉你说的对，记录不存在没有上锁对象！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576568964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150214,"user_name":"欧阳","can_delete":false,"product_type":"c1","uid":1086986,"ip_address":"","ucode":"A72179D45213F6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqqj7ickh69y1Biau8xG4ogXA8ibqxpia69CiaQAQ6lqO0Qb9ujxiacAJq6ZwbzxmvgyQkuNwWaRUCXsYzA/132","comment_is_top":false,"comment_ctime":1573479393,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10163413985","product_id":100020801,"comment_content":"案例五 在mysql8.0.18的版本中貌似改了，不会在(15,20)之间加间隙锁，执行insert into t values(16,16,16)可以插入","like_count":2,"discussions":[{"author":{"id":2094225,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f4/91/8723738b.jpg","nickname":"程序员小航","note":"","ucode":"00B8AE08DA916E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377815,"discussion_content":"并没有完全修复这个 bug","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622884242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1384866,"avatar":"https://static001.geekbang.org/account/avatar/00/15/21/a2/280e29ff.jpg","nickname":"dawn","note":"","ucode":"40CEAC0FD6567C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285631,"discussion_content":"我也同样发现了这个，感觉是不是因为版本的关系，这版本修复了bug？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592898476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146940,"user_name":"stand by me","can_delete":false,"product_type":"c1","uid":1643251,"ip_address":"","ucode":"66E43DD6441354","user_header":"https://static001.geekbang.org/account/avatar/00/19/12/f3/e54dae78.jpg","comment_is_top":false,"comment_ctime":1572709041,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10162643633","product_id":100020801,"comment_content":"老师真的讲的太好了！！！受益匪浅。<br><br>每个例子我都试了一下。我发现第三个主键索引范围群这个例子里面MYSQL 8.0.18版本不会在主键15上加上锁了，因此更新可以成功。赶紧看了一下，发现老师提前就说了不包括这个版本，MySQL的加锁规则应该是变了。","like_count":2,"discussions":[{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319966,"discussion_content":"同样遇到8.0+版本复现不出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604215653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142142,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1571299663,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10161234255","product_id":100020801,"comment_content":"请教老师一个问题，<br>A:update  t  set = 2 where  h  = 5<br>B:update  t  set = 2 where  K  = 5<br><br>h,k都不是索引，如果执行语句A不提交，此时B会执行吗？<br>因为锁是针对索引的，对不同的索引加锁彼此都不会影响，如果没有索引呢？两条语句都锁全表吗？","like_count":2,"discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83042,"discussion_content":"这两个语句都会锁全表扫描的，锁全表，没有索引会走主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576412910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":164187,"discussion_content":"按这个说法的话，A不提交，B就不能执行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581161789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":83042,"ip_address":""},"score":164187,"extra":""},{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576324,"discussion_content":"我试验了一下，是你这说的这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655434665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":164187,"ip_address":""},"score":576324,"extra":""}]}]},{"had_liked":false,"id":74335,"user_name":"Barnett","can_delete":false,"product_type":"c1","uid":1072638,"ip_address":"","ucode":"18516BD03E2D67","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/fe/028dd54b.jpg","comment_is_top":false,"comment_ctime":1552193154,"is_pvip":false,"replies":[{"id":"27199","content":"(5,10]是个简写<br><br>其实就是左边界是 （c=5,id=5) , 右边界是(c=10, id=10)，<br><br>左开右闭<br><br>这样你再看下这个结论😆<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552229220,"ip_address":"","comment_id":74335,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142127746","product_id":100020801,"comment_content":"老师，您好，关于精选留言中堕落天使的第三个问题，next-key lock是(5,10],(10,10],(10,15)，您的回答是(c=5,id=50)也是在这个gap里的。但是5不是开区间的吗？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442536,"discussion_content":"(5,10]是个简写\n\n其实就是左边界是 （c=5,id=5) , 右边界是(c=10, id=10)，\n\n左开右闭\n\n这样你再看下这个结论😆\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552229220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61280,"user_name":"alias cd=rm -rf","can_delete":false,"product_type":"c1","uid":1318325,"ip_address":"","ucode":"E7B27D76305B75","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/b5/971261fd.jpg","comment_is_top":false,"comment_ctime":1547651451,"is_pvip":false,"replies":[{"id":"21797","content":"3、判断c&gt;=15，普通索引c=15，继续向左遍历到c=5不符合条件，并且优化2等值第一个不符合条件的数据降为间隙锁(5,15)<br>所以锁的范围是(5,15)+[15,20)+[20,25)<br><br>这个不太对哈（或者说跟我文章里面说的规则不匹配）。<br>c&gt;=15这个条件，只会向左匹配到c=10这个记录，<br>只是因为next-key lock是前开后闭区间，所以就是(5,10].<br><br>结论的范围也确实是(5,15)+[15,20)+[20,25) 😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547658981,"ip_address":"","comment_id":61280,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10137586043","product_id":100020801,"comment_content":"思考题：<br><br>order by desc优化器会向左遍历<br>1、先判断条件c&lt;=20，普通索引等值c=20，所以next-key-lock:（25，20]<br>2、20到15，所以next-key-lock:（20，15]<br>3、判断c&gt;=15，普通索引c=15，继续向左遍历到c=5不符合条件，并且优化2等值第一个不符合条件的数据降为间隙锁(5,15)<br>所以锁的范围是(5,15)+[15,20)+[20,25)","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436815,"discussion_content":"3、判断c&amp;gt;=15，普通索引c=15，继续向左遍历到c=5不符合条件，并且优化2等值第一个不符合条件的数据降为间隙锁(5,15)\n所以锁的范围是(5,15)+[15,20)+[20,25)\n\n这个不太对哈（或者说跟我文章里面说的规则不匹配）。\nc&amp;gt;=15这个条件，只会向左匹配到c=10这个记录，\n只是因为next-key lock是前开后闭区间，所以就是(5,10].\n\n结论的范围也确实是(5,15)+[15,20)+[20,25) 😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547658981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2716512,"avatar":"https://static001.geekbang.org/account/avatar/00/29/73/60/469bcdfb.jpg","nickname":"李承芳","note":"","ucode":"0848375E0178E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":540698,"discussion_content":"5,10这个next-key lock 不退化是为什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640140725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":436815,"ip_address":""},"score":540698,"extra":""}]},{"author":{"id":1238436,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e5/a4/e16dca6a.jpg","nickname":"阿凯文","note":"","ucode":"F17CF201E74849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283869,"discussion_content":"这个人留言真怪，非要大的数放在下限，让看的人不别扭费解嘛，而且前闭后开，非也跟作者搞一套反的表达方式","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592386648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58392,"user_name":"袁伟","can_delete":false,"product_type":"c1","uid":1000862,"ip_address":"","ucode":"30BCA7B2705247","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/9e/57e18908.jpg","comment_is_top":false,"comment_ctime":1547050200,"is_pvip":false,"replies":[{"id":"21051","content":"👍🏿 这种感觉最棒","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547085184,"ip_address":"","comment_id":58392,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136984792","product_id":100020801,"comment_content":"感谢老师，用这些知识成功的找到了最近出现的死锁","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436044,"discussion_content":"👍🏿 这种感觉最棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547085184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57006,"user_name":"古娜拉黑暗之神·巴啦啦能量·堕落达","can_delete":false,"product_type":"c1","uid":1185642,"ip_address":"","ucode":"080BBCEF7DE985","user_header":"https://static001.geekbang.org/account/avatar/00/12/17/6a/c979163e.jpg","comment_is_top":false,"comment_ctime":1546598617,"is_pvip":false,"replies":[{"id":"20569","content":"我觉得案例6、7就是讲到了哦，普通索引是带着主键值的；<br><br>应该说(c=5,id=50)所在的间隙是 (c=5,id=5)到(c=10,id=10)<br><br>你可以像案例5那样自己画个索引图","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546609558,"ip_address":"","comment_id":57006,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10136533209","product_id":100020801,"comment_content":"堕落天使：<br>老师，您好。假期的没跟上，今天补到了这节课，看了之后有几点不是太明白。望能解答一下。<br>1. 索引c上的锁算不算是行锁。假如索引c上的next-key lock为(0,5] (5,10]，那么5算不算是c上的行锁？<br>2. 在案例六中，执行 “delete from t where c=10;” 语句，索引c上的next-key lock是(5,10],(10,10],(10,15)。那么主键索引上的锁是什么呢？是只有行锁，锁住的是 (10,10,10) 和 (30,10,30) 两行吗？<br>3. 也是在案例六中，session A不变，在session B中执行 “update t_20 set d=50 where c=5;”、“update t_20 set d=50 where c=15;”、“insert into t_20 values(40,15,40);”均执行成功，但执行“insert into t_20 values(50,5,50);” 时，却被阻塞。为什么呢？<br>作者回复<br>1. Next-key lock 就是间隙锁➕行锁，所以包含=5这一行<br>2. 对<br>3. (c=5,id=50)是在这个gap里哦，你试试插入(1,5,50)对比一下。好问题<br><br>我的回复：<br>老师，您好：<br>在第三个问题中，对于索引c的锁应该是 (5,10]、(10,10]、(10,15)；主键索引上的锁为行锁，是“(10,10,10) 和 (30,10,30) ”两行记录。那么(c=5,id=50) 是在哪个间隙锁上呢？是还没有讲还是我粗心没看到呢？另外经过您的启发，我在 sessio B 中又插入了几条记录，如下:<br>“insert into t_20 values(1,5,50);”、“insert into t_20 values(60,1,50);”、“insert into t_20 values(80,4,50);” 、“insert into t_20 values(70,15,50);” 均插入成功。<br>但插入“insert into t_20 values(100,5,50);”、“insert into t_20 values(300,5,50);”均被阻塞。<br>我大胆猜想一下，(c=5,id=50) 的间隙锁是不是&quot;c=5 并且 id=(30,+suprenum]&quot; ？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435356,"discussion_content":"我觉得案例6、7就是讲到了哦，普通索引是带着主键值的；\n\n应该说(c=5,id=50)所在的间隙是 (c=5,id=5)到(c=10,id=10)\n\n你可以像案例5那样自己画个索引图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546609558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348490,"discussion_content":"一看到你的问题感觉得歇一下，养足精神才能继续^.^！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612600370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56899,"user_name":"钱彬彬","can_delete":false,"product_type":"c1","uid":1108171,"ip_address":"","ucode":"218C6814E73C16","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/cb/be4388db.jpg","comment_is_top":false,"comment_ctime":1546574437,"is_pvip":false,"replies":[{"id":"20535","content":"额，不是数值5哦，是两个记录之间，就是间隙<br><br>字符串也是一样，按顺序存，不同行之间就有间隙","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546577632,"ip_address":"","comment_id":56899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136509029","product_id":100020801,"comment_content":"老师您好。gap锁的范围是可以设置的吗？如果是怎么设置呀？如果不是为什么是范围5呢？ <br>我们这些例子中都是数值类型的，如果是字符串类型的，gap锁怎么确定这个区间？辛苦老师了。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435303,"discussion_content":"额，不是数值5哦，是两个记录之间，就是间隙\n\n字符串也是一样，按顺序存，不同行之间就有间隙","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1546577632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310524,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1630722343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5925689639","product_id":100020801,"comment_content":"<br>session A : begin; select d from t where c=5 lock in share mode;<br>session B : 以下各条单独执行结果如下<br>1. update t set d=d+1 where id = 5;  -- blocked<br>2. insert into t values(4,100,100);  -- success<br>3. insert into t values(6,100,100);  -- success<br><br>4. insert into t values(100,4,100);  -- blocked<br>5. insert into t values(100,6,100);  -- blocked<br>6. insert into t values(100,0,100);  -- bolcked(查看innodb_locks表，是锁的索引c，但是我分析不出来原因)<br>7. insert into t values(-1,0,100);   -- success<br>8. insert into t values(100,10,100); -- success<br><br><br>总结：session A会锁住两个索引(以下范围仅表示各索引上的值)：<br>1.主键索引: 行锁-5   适合优化1<br>2.普通索引c: (0,5], (5,10) <br><br>问题第6个脚本怎么执行不通过？但是第7个脚本通过了。。","like_count":1},{"had_liked":false,"id":255785,"user_name":"鱼丸粗面","can_delete":false,"product_type":"c1","uid":1805050,"ip_address":"","ucode":"F91B7535C2A8BE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/8a/fa/6c0a3826.jpg","comment_is_top":false,"comment_ctime":1603429650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898396946","product_id":100020801,"comment_content":"老师, 我有个很疑惑的场景,<br>参考案例3, 如果加一个字段b, 为唯一索引, 值和id一样,<br>那当执行语句select * from t where b&gt;=10 and b&lt;11 for update;的时候, 主键索引树上会加什么锁.<br>我测试下来, 发现结果是:<br>1. b索引树上会加(5, 10],(10, 15]这两个next-key lock, 这个跟案例三的结果一样,<br>2. 但是主键索引树上只会给id=10这一行加行锁, 而id=15这一行并不会锁住(update t set d=d+1 where id = 15可以执行),<br>我这里疑惑的是, select * 查询不是要回表吗, 那根据原则2, 扫描到的行都要加锁, 那如果回表了, id=15这一行就会被扫描到, 那为什么id=15这一行没有上锁,<br>我能想到的答案只有一个, 那就是因为b=15这一行, 不符合查询条件, 所以到这里扫描就结束了, 就没有回表的操作, 也就不会给id=15这一行加行锁了,<br><br>订阅的比较晚, 不知道老师能不能看到评论,希望老师指正.","like_count":1},{"had_liked":false,"id":220482,"user_name":"阿胖","can_delete":false,"product_type":"c1","uid":1302380,"ip_address":"","ucode":"86FA4A5B694A43","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/6c/0ee21bef.jpg","comment_is_top":false,"comment_ctime":1590248214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885215510","product_id":100020801,"comment_content":"老师，我在mysql5.7以及8.0.12 操作案例八，没有出现死锁。<br><br>案例八：session B的操作语句update t set d = d + 1 where c =10; <br>需要加锁 （5，10」  （10，15」，但是这些已经被sessionA执行select时占用了，故sessionB没有获得锁，sessionA再次执行insert也不会死锁。<br>","like_count":1},{"had_liked":false,"id":187761,"user_name":"蛋炒饭加鸡蛋","can_delete":false,"product_type":"c1","uid":1628398,"ip_address":"","ucode":"C75E27B9FB3336","user_header":"https://static001.geekbang.org/account/avatar/00/18/d8/ee/17f220b6.jpg","comment_is_top":false,"comment_ctime":1584235140,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5879202436","product_id":100020801,"comment_content":"老师，上篇第一个置顶评论，@令狐少侠的问题，通过这篇的学习，对于select * from t where c = 5 for update;<br>知道了加锁单位为next-key lock，即先在索引c(0,5]加next-key lock，由于c不是唯一索引，继续扫描，扫描到10停止，即又加了(5,10]这个next-key lock，但是由于优化2，所以next-key lock退化成间隙锁，即最终加锁范围为(0,5],(5,10),是不包含10的，但是我实验@令狐少侠的例子，10是不能更新的，被锁住了，老师能解释下吗？但是我实验了本篇的这几个例子都是和老师的结果一样，mysql版本是是5.7.26","like_count":1,"discussions":[{"author":{"id":1323560,"avatar":"https://static001.geekbang.org/account/avatar/00/14/32/28/90cceab3.jpg","nickname":"月河","note":"","ucode":"702B30A1F2C149","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":241992,"discussion_content":"我是可以的，并没有锁住","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587455074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176925,"user_name":"DBRE","can_delete":false,"product_type":"c1","uid":1106706,"ip_address":"","ucode":"FEB779C5D2946C","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/12/fd02db2e.jpg","comment_is_top":false,"comment_ctime":1581228880,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5876196176","product_id":100020801,"comment_content":"老师，您好。对案例四的变种有些疑问，希望帮忙解答。<br><br>session A:<br>mysql&gt; begin; select * from t where c&gt;10 for update; <br>Query OK, 0 rows affected (0.00 sec)<br><br>+----+------+------+<br>| id | c    | d    |<br>+----+------+------+<br>| 15 |   15 |   15 |<br>| 20 |   20 |   20 |<br>| 25 |   25 |   25 |<br>+----+------+------+<br>3 rows in set (0.00 sec)<br><br>Session B:<br>mysql&gt; insert into t values(8,8,8);<br>发生阻塞<br><br>Session C:<br>mysql&gt; insert into t values(4,4,4); <br>发生阻塞<br><br>疑问：自己分析session A中 在c索引上加的锁是next-key(10,15],(15,20],(20,25],(25,+∞], 为什么session B和C会被阻塞呢? 需要如何分析呢？","like_count":1,"discussions":[{"author":{"id":1106706,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e3/12/fd02db2e.jpg","nickname":"DBRE","note":"","ucode":"FEB779C5D2946C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166029,"discussion_content":"我想明白了，数据太少，session A是全表扫描了，对每一行及行之间的gap都加锁了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581346083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176462,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1581064692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5876031988","product_id":100020801,"comment_content":"我的MySQL是8.0.19<br>目前案例五的bug已经解决了 session b和session c都不会阻塞 也就是说 查询条件是id&lt;=15 当找到id=15的时候退化成行锁并且也不在往下搜索了<br>同时案例三中session c没有阻塞<br>是不是可以说8.0对唯一索引的范围查找进行了优化 只要是等值查询到就退化成行锁","like_count":1},{"had_liked":false,"id":169822,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1578452531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873419827","product_id":100020801,"comment_content":"1、RR 隔离级别可以保证在同一个事务两次当前读的结果集一致。当前读本身对记录有加锁（任意隔离级别），所以可以与其他事务互斥。出了一种特殊情况，就是有新的insert 语句。新的记录不在锁的范围内。这样就保证不了两次当前读的结果一致。所以RR 隔离级别加大锁的范围使用 了 next-key lock 、 gap lock 。同时这也降低了并发度。<br><br>2、 next-key lock 需要扩大加锁范围，加锁范围的依据就是要能保证两次当前读结果一致（rr 语义 可重复读）。<br><br>3、案例理解<br>      c 列非唯一索引next key lock锁： (-,0]（0，5]（5，10]（10，15]（15，20]（20，25],(25,+]<br>      id 列唯一索引next key lock锁：   (-,0]（0，5]（5，10]（10，15]（15，20]（20，25],(25,+]<br><br>     案例1<br>    update t set d=d+1 where id =7<br>      id 为唯一索引，如果新增 id为7的记录 ，新的索引一定在（5，10] 这个范围内，肯定又不会用到id=10 这条记录（优化）。所以<br>          锁的范围为（5，10）<br><br>     案例2<br>      select id from t where c=5 lock in share mode<br>       c 为非唯一索引，并且c=5 又在next lock 锁的边界上面  ，如果新增记录 c=5 ,(id,c,d) (4,5,5)，(5,5,5)  (7,5,5)，(8,5,5)，(9,5,5)<br>     c索引的范围就可能在（0，5]（5，10] 这两个区间内，同理 c=10 这条记录的锁，肯定用不到，可以优化，所以范围为（0，10）<br>    <br>    案例3<br>            select *from t where id &gt;=10 ,and id&lt;11 for update<br>       id 为唯一索引，id &gt;=10 索引范围为 （5，10]（10，15]（15，20]（20，25],(25,+],<br>                          id &lt;11 索引范围为    （5，10]（10，15]<br>      优化 （5，10] 中只能用到id=10 的索引，所以范围为 [10,15]<br>      <br>     案例4<br>         select * from t where c&gt;=10 and c&lt;11 for update<br>         c 为非唯一索引，见案例2，3，可以判断范围为 (5,15]<br><br>     案例5 bug<br>          猜想是不是因为查询的索引在加锁的区间的临界点上门，所以扩大了加锁的范围。","like_count":1},{"had_liked":false,"id":94417,"user_name":"木子","can_delete":false,"product_type":"c1","uid":1390997,"ip_address":"","ucode":"66B9C493F25B11","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/95/a72ef023.jpg","comment_is_top":false,"comment_ctime":1557805214,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5852772510","product_id":100020801,"comment_content":"老师，你好，回头看第二遍的时候，突然发现一个地方没明白：在案例1中 id=7等值查询时，id是主键，也满足唯一索引，为什么没有根据优化1 next-key lock 退化为行锁而是加了（5,10）的间隙锁？而案例三中 主键索引范围锁案例中 第一步 找到id=10的记录 这时候是根据优化2 主键索引上的等值查询 退化为行锁？同样是主键索引的等值查询为什么一个加了间隙锁一个退化成了行锁？麻烦老师看到之后回复一下，非常感谢","like_count":1,"discussions":[{"author":{"id":1107305,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e5/69/719ec5d0.jpg","nickname":"Jian","note":"","ucode":"17ED4919F22DEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341730,"discussion_content":"id=7这条记录都不存在，加不了行锁呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610506515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85682,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1555174713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850142009","product_id":100020801,"comment_content":"@坠落天使 的问题，案例六的 session A 不变，session B insert (c=5, id=50) 的记录被 block，可以借用“线段”的概念来帮助理解，下面是我自己的理解：<br>session A 我们只关注 a (c=5, id=5) 和 b (c=10, id=10) 这两个点 (为了方便说明，其他的锁我们选择忽略)。<br>在平面上，a 和 b两点连成的线段，就是我们的加锁范围。<br>现在有一个点 f(c=5, id=6) 需要插入线段中，因为 a 和 f 的 c 值都是 5，但是 f 的 id 比 a 的 id 要大，所以在线段上表示，f 在 a 的右边，落入了线段内，即落入了锁区间，所以被 block 了。<br>有一个点 e(c=5, id=4) 需要在平面展示，同理 e 点是在 a 点的左边，没落到锁区间，所以 insert 成功。","like_count":1},{"had_liked":false,"id":79071,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1553343158,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5848310454","product_id":100020801,"comment_content":"老师，唯一索引的等值查询 退换成 行锁，案例一的等值查询为啥是间隙锁？？","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164188,"discussion_content":"因为Id=7不存在，加行锁加在哪里呢。所以，根据优化2，id=10不满足查询条件，故退化成间隙锁。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581161887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74352,"user_name":"八怪","can_delete":false,"product_type":"c1","uid":1328234,"ip_address":"","ucode":"A9200AC057BDAD","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/6a/49f026af.jpg","comment_is_top":false,"comment_ctime":1552200848,"is_pvip":false,"replies":[{"id":"27193","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552228829,"ip_address":"","comment_id":74352,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847168144","product_id":100020801,"comment_content":"丁奇老师 课后问题我简单做了一下debug 调用的是desc接口 反向扫描的#70x00000000017bebc3 in QUICK_SELECT_DESC::get_next (this=0x7ffe7402d340) at &#47;root&#47;mysqlall&#47;percona-server-locks-detail-5.7.22&#47;sql&#47;opt_range.cc:11579<br>#8  0x00000000014e28dd in rr_quick (info=0x7ffe7403ae40) at &#47;root&#47;mysqlall&#47;percona-server-locks-detail-5.7.22&#47;sql&#47;records.cc:399<br>后面看你答案果然是 还得仔细看看 😄","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442544,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552228829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68332,"user_name":"帽子掉了","can_delete":false,"product_type":"c1","uid":1174781,"ip_address":"","ucode":"344892D6136346","user_header":"https://static001.geekbang.org/account/avatar/00/11/ec/fd/bad2abf5.jpg","comment_is_top":false,"comment_ctime":1550484756,"is_pvip":false,"replies":[{"id":"25096","content":"不会，<br>会有一个线程先写入成功，另外一个等待的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551081107,"ip_address":"","comment_id":68332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5845452052","product_id":100020801,"comment_content":"老师，您好，我现在有一个关于 insert into ... on duplicate update的语句的疑问<br>这条语句按我的理解 应该是 一个compare and write语句，那么它是隔离的么？<br>比如 两条语句<br>1: Insert into t1 （id， name）values （1， “1”） on duplicate xxxxx<br>2. Insert into t1 （id， name）values （1， “2”）on duplicate xxxxx<br>数据库里面都没有id为1的这个主键。 <br>那么在多线程情况下，会不会发生语句1创建id为1的纪录成功，语句2也创建id为1的纪录，只是因为主键冲突，导致插入失败。<br>双方都处于compare阶段，判断没有记录，然后插入记录","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439630,"discussion_content":"不会，\n会有一个线程先写入成功，另外一个等待的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551081107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67636,"user_name":"daka","can_delete":false,"product_type":"c1","uid":1307998,"ip_address":"","ucode":"A23D82FF956793","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ8ibLXicovSNwEJhP4BOIPxEMle1ZUq1He58xztgBXTQFicdp5m5ibRHwUSoUVk5xQMWFwFXhp56ibm1Q/132","comment_is_top":false,"comment_ctime":1550214503,"is_pvip":false,"replies":[{"id":"24004","content":"多谢鼓励🤝","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550298746,"ip_address":"","comment_id":67636,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5845181799","product_id":100020801,"comment_content":"文章看到一半，茅塞顿开, 收获颇丰，迫不及待留言表达对如此有态度作者的谢意,尊敬与喜爱。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439293,"discussion_content":"多谢鼓励🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550298746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63014,"user_name":"happy涛","can_delete":false,"product_type":"c1","uid":1387892,"ip_address":"","ucode":"9D67FA68C40904","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaxhA2xdIRKUeRaiaMAVxrGJcImhY0qWoDJbLLW3l8uCvXicrHJ4GaRBkZBz4RAdaSh0YsIOJFyrhQ/132","comment_is_top":false,"comment_ctime":1548227985,"is_pvip":false,"replies":[{"id":"22266","content":"啊 已经是我简化过的规则了。。需要再理解一下。。<br>你用session A、sessionB这种模式列一下复现步骤，哪个不清楚的，我们一个个来看吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548239046,"ip_address":"","comment_id":63014,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843195281","product_id":100020801,"comment_content":"老师：<br>环境同上.  QQ466096028<br>案二：案三也不对。<br>案例五：b事物也可以执行成功， 16，16，16我也可以写入 ，id（10,15）不可以。<br>案例六：我没有添加C10,ID30的数。还是用0，5，10，15，20，25这几条数据， 案例六中的代码执行结果是ID（10，15），c(5,15) .. <br>头好疼，感觉理不清，规则太乱了。<br>","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437438,"discussion_content":"啊 已经是我简化过的规则了。。需要再理解一下。。\n你用session A、sessionB这种模式列一下复现步骤，哪个不清楚的，我们一个个来看吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548239046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62998,"user_name":"happy涛","can_delete":false,"product_type":"c1","uid":1387892,"ip_address":"","ucode":"9D67FA68C40904","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaxhA2xdIRKUeRaiaMAVxrGJcImhY0qWoDJbLLW3l8uCvXicrHJ4GaRBkZBz4RAdaSh0YsIOJFyrhQ/132","comment_is_top":false,"comment_ctime":1548223722,"is_pvip":false,"replies":[{"id":"22267","content":" select id from t where c=6 for update;<br>这个在c上的锁是（5，10）这个间隙","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548239071,"ip_address":"","comment_id":62998,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5843191018","product_id":100020801,"comment_content":"老师：同上一个问题。 还是案例2.  select id from t where c=6 for update;<br>ID为[0,9)都不可以添加，包括-1都可以。为啥会锁这么多。而c锁的是[5,10),大于等于5，小于10<br>","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437432,"discussion_content":" select id from t where c=6 for update;\n这个在c上的锁是（5，10）这个间隙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548239071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005415,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/67/01d1580f.jpg","nickname":"xinnong","note":"","ucode":"3C1F1EB93FBA5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271431,"discussion_content":"从我的实验结果看怎么5这边是闭区间呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590137600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2147487,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c4/9f/f459ad8d.jpg","nickname":"金鱼","note":"","ucode":"559A688572E470","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1005415,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/67/01d1580f.jpg","nickname":"xinnong","note":"","ucode":"3C1F1EB93FBA5B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573152,"discussion_content":"我也是 而且是［5，10］","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653222148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271431,"ip_address":""},"score":573152,"extra":""}]}]},{"had_liked":false,"id":61169,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1547630771,"is_pvip":false,"replies":[{"id":"21781","content":"都不加锁。。<br><br>如果你说的是后面加 for update, 加索范围一样的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547635494,"ip_address":"","comment_id":61169,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842598067","product_id":100020801,"comment_content":"  select max(id)   from tb1  和 select id from  tb1 order by id desc limit 1; id 为主键，这个两个的加索过程都是一样的吗","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436771,"discussion_content":"都不加锁。。\n\n如果你说的是后面加 for update, 加索范围一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547635494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57143,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1546658922,"is_pvip":false,"replies":[{"id":"20637","content":"我觉得可能一方面是很多人并不知道这个参数😄<br><br>不过幻读如果确认不需要，一般表示可重复读也不需要，不如直接改RC+row格式的binlog😄<br><br>我还没有碰到过你说的这种需求场景","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546693746,"ip_address":"","comment_id":57143,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841626218","product_id":100020801,"comment_content":"老师你好：<br>在读提交模式下，一般场景是没有间隙锁的，因此将binlog设置为row格式，可以解决binlog日志顺序和语句实际执行顺序不一致的问题（幻读那一篇提到的问题，因为row格式是直接记录数据的结果改变）<br>那么，如果使用RR模式，把间隙锁关闭，将binlog设置为row格式。这样既可以实现重复读，又可以减小锁的粒度。虽然这样的话，幻读的情况无法解决，但是幻读一般来说影响并不大。<br>综上，为什么没有人在RR模式下，关闭间隙锁，开启row格式的binlog呢？？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435427,"discussion_content":"我觉得可能一方面是很多人并不知道这个参数😄\n\n不过幻读如果确认不需要，一般表示可重复读也不需要，不如直接改RC+row格式的binlog😄\n\n我还没有碰到过你说的这种需求场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546693746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56993,"user_name":"lone","can_delete":false,"product_type":"c1","uid":1311609,"ip_address":"","ucode":"68986F17574B77","user_header":"https://static001.geekbang.org/account/avatar/00/14/03/79/830c68f2.jpg","comment_is_top":false,"comment_ctime":1546595025,"is_pvip":false,"replies":[{"id":"20566","content":"锁行&#47;间隙呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546609079,"ip_address":"","comment_id":56993,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5841562321","product_id":100020801,"comment_content":"老师您好，不太理解在实际开发中SELECT FOR UPDATE 和LOCK IN SHARE MODE 实际应用场景是什么？解决了什么实际问题？谢谢。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435349,"discussion_content":"锁行/间隙呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546609079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545172,"discussion_content":"想要当前读，不想要快照读时可以这样用。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641870265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56743,"user_name":"Smile","can_delete":false,"product_type":"c1","uid":1021017,"ip_address":"","ucode":"2002460CB3D869","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/59/ac2aa72b.jpg","comment_is_top":false,"comment_ctime":1546533394,"is_pvip":true,"replies":[{"id":"20462","content":"你的<br><br>第二点我没理解… <br>如果是没有15这一行肯定不算bug,因为要扫到这一个间隙<br><br>不过没关系 主要是理解就行😄现在就是这么实现的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546561548,"ip_address":"","comment_id":56743,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841500690","product_id":100020801,"comment_content":"老师，您好，关于bug案例的问题，有两个方面请教一下<br>1. 关于bug案例第一部分锁的范围是(10,15] , 是不是可以这么理解，id&gt;10 这个锁的范围是(10, 15] , 而id&lt;=15 本来是(10, 15] 由于=15符合优化1 所以退化为行锁 15， 最终综合起来看就是 (10,15]<br><br>2. 第二部分的(15,20] 我个人觉的是不是不能算bug，假设数据是 0、 5 、10、 14、 20 ， 就应该是锁到20，只是刚好这里是有15（可以理解为一个恰好的特列），如果为了这个特例再去写if else判断是否和等值条件相等 ，结合现实工作中，条件刚好相等概率，收益是不是不会很明显？（如果有些字段是长字符串比较也挺废时间的吧） --个人理解，望老师指正。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435206,"discussion_content":"你的\n\n第二点我没理解… \n如果是没有15这一行肯定不算bug,因为要扫到这一个间隙\n\n不过没关系 主要是理解就行😄现在就是这么实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546561548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56725,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1546528962,"is_pvip":false,"replies":[{"id":"20444","content":"撤销MDL 锁😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546532825,"ip_address":"","comment_id":56725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841496258","product_id":100020801,"comment_content":"老师功底深厚啊！<br>很少能看到这么细致的分析，实在是佩服！<br>另外，请教一个之前课程中的问题，mysqldump在从库进行一致性备份的时候，会创建一个保存点，你提到过这个很关键，我看了一致性备份的过程，对这个一直没想明白。通常savepoint 是为了控制回滚的范围，操作出错后可以回滚操作，而不至于回滚所有操作。<br>保存点出现在这里是什么含义呢？<br>","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435197,"discussion_content":"撤销MDL 锁😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546532825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56552,"user_name":"夹心面包","can_delete":false,"product_type":"c1","uid":1301957,"ip_address":"","ucode":"002BBA49D83D17","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJCscgdVibmoPyRLRaicvk6rjTJxePZ6VFHvGjUQvtfhCS6kO4OZ1AVibbhNGKlWZmpEFf2yA6ptsqHw/132","comment_is_top":false,"comment_ctime":1546486836,"is_pvip":false,"replies":[{"id":"20390","content":"不是，<br>Order by d的话，要排序，所以是按照”索引c递增顺序”扫描索引的<br><br>因此加锁效果和order by c ASC是一样的<br><br>你提了个好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546489217,"ip_address":"","comment_id":56552,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841454132","product_id":100020801,"comment_content":"老师最后留的课题应该是与order by c desc 有关,我尝试用order by d desc 代替,是可以进行insert的。explain出现文件排序.我的推测是先进行的排序,这样就锁定了全行,是无法insert的.","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435113,"discussion_content":"不是，\nOrder by d的话，要排序，所以是按照”索引c递增顺序”扫描索引的\n\n因此加锁效果和order by c ASC是一样的\n\n你提了个好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546489217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56443,"user_name":"滔滔","can_delete":false,"product_type":"c1","uid":1303342,"ip_address":"","ucode":"6968B5771AF79D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/2e/77ad18f4.jpg","comment_is_top":false,"comment_ctime":1546444896,"is_pvip":false,"replies":[{"id":"20341","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546447898,"ip_address":"","comment_id":56443,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841412192","product_id":100020801,"comment_content":"老师，想请问一下，案例4中的session A如果把c&lt;11改成c&lt;=15，是不是还会再加上一个(15,20]的next key锁？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435038,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546447898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56408,"user_name":"rains","can_delete":false,"product_type":"c1","uid":1276520,"ip_address":"","ucode":"540BB449B0D52F","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/68/d6b53fbb.jpg","comment_is_top":false,"comment_ctime":1546439438,"is_pvip":false,"replies":[{"id":"20328","content":"锁要分块放，这样表示这些锁总共放在11个块中，其中10个用满了，每个块有一个suprenum,因此算起来多了一个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546442520,"ip_address":"","comment_id":56408,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841406734","product_id":100020801,"comment_content":"老师您好，刚刚的问题，再次验证了下，的确锁住了全部的行，但是出现一个新的疑惑，原表中一共有1604行数据，用非索引列作为等值条件进行更新的时候，通过INNODB_TRX查看，trx_rows_locked值为1614，这是为什么","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435024,"discussion_content":"锁要分块放，这样表示这些锁总共放在11个块中，其中10个用满了，每个块有一个suprenum,因此算起来多了一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546442520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55934,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1546349648,"is_pvip":false,"replies":[{"id":"20138","content":"Explain结果发一下，还有show variables 结果也发下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546361315,"ip_address":"","comment_id":55934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841316944","product_id":100020801,"comment_content":"session A<br>mysql&gt; select * from t where c&gt;=15 and c&lt;=20 order by c desc lock in share mode;<br>+----+------+------+<br>| id | c    | d    |<br>+----+------+------+<br>| 20 |   20 |   20 |<br>| 15 |   15 |   15 |<br>+----+------+------+<br>2 rows in set (0.00 sec)<br><br>session b<br>mysql&gt; insert into t values(6,6,6);<br>Query OK, 1 row affected (0.00 sec)<br>可以插入成功，没有被锁住","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434891,"discussion_content":"Explain结果发一下，还有show variables 结果也发下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546361315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55929,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1546349246,"is_pvip":false,"replies":[{"id":"20137","content":"N间隙锁之间是不互相锁的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546361238,"ip_address":"","comment_id":55929,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5841316542","product_id":100020801,"comment_content":"不管是间隙锁还是行锁，都已经被A占住，怎么B还能间隙锁加锁成功？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434887,"discussion_content":"N间隙锁之间是不互相锁的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546361238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164202,"discussion_content":"所以sessionB的阻塞是由行锁引发的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581162579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545221,"discussion_content":"但是sessionA是lock in share mode共享锁，行锁应该可以加上的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641879255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":164202,"ip_address":""},"score":545221,"extra":""}]}]},{"had_liked":false,"id":55869,"user_name":"小李子","can_delete":false,"product_type":"c1","uid":1196293,"ip_address":"","ucode":"C5593E33CA6F4C","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/05/5ba603f2.jpg","comment_is_top":false,"comment_ctime":1546334915,"is_pvip":false,"replies":[{"id":"20120","content":"1. 想加，但是按顺序是先，(5,10), 然后c=10,然后(10,15)，但是在c=10被堵住了，(10,15）加不上<br><br>2. 你把next-key lock当作间隙锁加行锁来看。 间隙锁直接不护锁；而间隙锁只保护间隙，不让insert <br>这两个都是好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546341216,"ip_address":"","comment_id":55869,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841302211","product_id":100020801,"comment_content":"老师，案例八中有两个问题请教一下：1、session B的update语句，不加(10,15)间隙锁吗？ 2、按照您对案例八的分析，如果 session B 只是加 (5,10) 间隙锁，是不会与session A 的 (5,10] next-key lock 冲突，而是可以加锁成功，简言之，对于同一个区间而言，间隙锁和 next-key lock并不冲突，是否是这样理解的？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434868,"discussion_content":"1. 想加，但是按顺序是先，(5,10), 然后c=10,然后(10,15)，但是在c=10被堵住了，(10,15）加不上\n\n2. 你把next-key lock当作间隙锁加行锁来看。 间隙锁直接不护锁；而间隙锁只保护间隙，不让insert \n这两个都是好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546341216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55851,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1546328029,"is_pvip":false,"replies":[{"id":"20114","content":"嗯嗯，你说的对，如果那个语句，是select *，大概率会走全表扫描，那就会锁住主键索引。<br>你可以用explain 看看。<br><br><br>这个问题里你这个验证方法也很准确👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546334349,"ip_address":"","comment_id":55851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841295325","product_id":100020801,"comment_content":"评论不支持追加。。。刚老师回答我的第3个问题：“锁住了索引c上所有next key lock ”，是不是口误了，锁住的是主键索引吧？因为session B执行：select id from t where c = 0 lock in share mode;是不会被阻塞的。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434860,"discussion_content":"嗯嗯，你说的对，如果那个语句，是select *，大概率会走全表扫描，那就会锁住主键索引。\n你可以用explain 看看。\n\n\n这个问题里你这个验证方法也很准确👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546334349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55811,"user_name":"鸠翱","can_delete":false,"product_type":"c1","uid":1116568,"ip_address":"","ucode":"7D498AF2BC4289","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/98/b11c372b.jpg","comment_is_top":false,"comment_ctime":1546314186,"is_pvip":false,"replies":[{"id":"20111","content":"除了第一个，后面都是按照范围查询来<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546323239,"ip_address":"","comment_id":55811,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5841281482","product_id":100020801,"comment_content":"在案例三中 where id &gt;= 10 and id &lt; 11这里提到了可以使用优化1，退化为id=10的行锁，即&gt;=也可认为包含了等值查询<br>那么在案例五中，where id &gt; 10 and id &lt;=15，根据优化2，(15,20]这个锁，不应该会退化为(15,20)这个间隙锁嘛？难道&lt;=不包含等值查询吗？<br>希望老师能够解惑一下","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434847,"discussion_content":"除了第一个，后面都是按照范围查询来\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546323239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545177,"discussion_content":"因为它是从左到右扫描索引的， 如果是order by id desc那＜=15， 15也会当等值查询判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641870900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55735,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1546273302,"is_pvip":false,"replies":[{"id":"20093","content":"谢谢鼓励哦<br>新年快乐","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546275064,"ip_address":"","comment_id":55735,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841240598","product_id":100020801,"comment_content":"这么好的专栏，要多推广，让大家都学习学习","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434835,"discussion_content":"谢谢鼓励哦\n新年快乐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546275064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356154,"user_name":"骑墙头吃瓜唠嗑","can_delete":false,"product_type":"c1","uid":3040193,"ip_address":"上海","ucode":"A4B9CF783F08E9","user_header":"https://static001.geekbang.org/account/avatar/00/2e/63/c1/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1662015853,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662015853","product_id":100020801,"comment_content":"之前锁一致没搞懂，听了老师的课，今天终于明白了。","like_count":0},{"had_liked":false,"id":354630,"user_name":"勇敢的心","can_delete":false,"product_type":"c1","uid":3139195,"ip_address":"山东","ucode":"4922FEDA30DD50","user_header":"https://static001.geekbang.org/account/avatar/00/2f/e6/7b/5b6f741b.jpg","comment_is_top":false,"comment_ctime":1660629763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660629763","product_id":100020801,"comment_content":"测试环境5.7.37，案例二中：update t set d=d+1 where id=5;会被阻塞啊！这条应该错了吧？","like_count":0},{"had_liked":false,"id":354089,"user_name":"Geek_d5f06b","can_delete":false,"product_type":"c1","uid":1948495,"ip_address":"广东","ucode":"6DAAA73E552FEC","user_header":"","comment_is_top":false,"comment_ctime":1660093327,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1660093327","product_id":100020801,"comment_content":"加锁规则的优化一中，唯一索引和主键索引都是满足的吗？","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584137,"discussion_content":"是的，主键也是唯一索引！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660639718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352632,"user_name":"Geek_8f0976","can_delete":false,"product_type":"c1","uid":2647903,"ip_address":"","ucode":"BAA8385F28FF71","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Xp7erNvMXhKnYNsD9icNN0ibzGkgJibeUn5YrtIL1S2IgvoD8gbMpLVpQvwpVFJ8gWfibXr800xnllibbXxLhTeLhBw/132","comment_is_top":false,"comment_ctime":1658822221,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1658822221","product_id":100020801,"comment_content":"间隙锁只会对insert语句生效，我理解的没问题吧","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584138,"discussion_content":"间隙锁也会在所有当前读的语句生效吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660639791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350162,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1656634163,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1656634163","product_id":100020801,"comment_content":"老师，您好，有一点我还是不懂，如果一列是整数类型，加锁前开后闭，我还能理解，如果是字符串呢，就有点不能理解前开后闭了","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584139,"discussion_content":"我的理解是跟字段类型么有关系吧，间隙间隙不应该是行（记录）与行（记录）之间的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660639840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347193,"user_name":"ch_test","can_delete":false,"product_type":"c1","uid":1284088,"ip_address":"","ucode":"0BD681C1D39B39","user_header":"https://static001.geekbang.org/account/avatar/00/13/97/f8/b6fb9567.jpg","comment_is_top":false,"comment_ctime":1653808933,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1653808933","product_id":100020801,"comment_content":"老师，我想问一下可重复读和读已提交的使用场景，是以什么思路去考虑的","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584141,"discussion_content":"说说我的理解，供参考！可重复读和已提交读两者的区别是提交读会有幻读发生，而可重复读可通过间隙锁(gap lock)解决幻读问题，但是带来的是更多的锁冲突，如果说业务类型允许同一个事务在前后查询的记录多记录或少记录（即幻读）我觉得可以RC+ROW binlog模式，以提高更大的系统并发和吞吐量！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660640256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346541,"user_name":"金鱼","can_delete":false,"product_type":"c1","uid":2147487,"ip_address":"","ucode":"559A688572E470","user_header":"https://static001.geekbang.org/account/avatar/00/20/c4/9f/f459ad8d.jpg","comment_is_top":false,"comment_ctime":1653221644,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653221644","product_id":100020801,"comment_content":"为什么我都非唯一索引 for update不存在的值，加锁范围是左闭右闭呀？","like_count":0},{"had_liked":false,"id":345872,"user_name":"『六月～","can_delete":false,"product_type":"c1","uid":2377928,"ip_address":"","ucode":"E8203B03E1E0A8","user_header":"https://static001.geekbang.org/account/avatar/00/24/48/c8/78d68000.jpg","comment_is_top":false,"comment_ctime":1652669562,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1652669562","product_id":100020801,"comment_content":"请问老师，原则2里面 访问到的对象是指最终查的叶子节点，还是包含查找过程中的子节点","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584146,"discussion_content":"我的理解是：老师说锁是在索引上生效！也就是说叶子节点上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660642465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344226,"user_name":"Geek_4e4ec2","can_delete":false,"product_type":"c1","uid":1603078,"ip_address":"","ucode":"6DAD5EE4FFB195","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zAZv4NyuS21Y1qk45j8JiaoEYdA5Zgc1PqpJsBokz5bZVmdkf6kNWvT4cUAAKAdH6TgN52DWZhiaH6wNFhw14nRg/132","comment_is_top":false,"comment_ctime":1651379452,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1651379452","product_id":100020801,"comment_content":"还是不太理解案例5中，为什么加锁不包括10，我理解的是 &gt;10 也是要先找到10这个节点然后向右遍历判断的，所以10应该也是会被访问到，不太理解 &gt;10 这个查找在索引树上是怎样一个过程","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584148,"discussion_content":"我的理解是next-key lock是左开有闭，所以说(10,X)所以10没有被锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660642897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343975,"user_name":"heartzwj410","can_delete":false,"product_type":"c1","uid":1049761,"ip_address":"","ucode":"9C3E9F393F7C09","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/a1/c853ee82.jpg","comment_is_top":false,"comment_ctime":1651151234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651151234","product_id":100020801,"comment_content":"老师，您好，我的mysql版本是8.0.20，我试了非唯一索引等值加锁的例子，session1:begin; update t set  d = 3 where c = 20; 发现在session2是不可以插入c为15的值，按照文中给的解释应该是间隙锁(15,20](20,25),15应该是可以插入才对，是因为版本升级了吗","like_count":0},{"had_liked":false,"id":343739,"user_name":"Barbed","can_delete":false,"product_type":"c1","uid":1632860,"ip_address":"","ucode":"EB4B00CD169D9F","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/5c/cee03aad.jpg","comment_is_top":false,"comment_ctime":1651031027,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1651031027","product_id":100020801,"comment_content":"老师，我想问一下。就是如果说一张表里面我要修改一个范围内的数据。查询条件是d,没有索引。这个时候。锁的是范围内的数据还是说锁的整张表呢？","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584149,"discussion_content":"因为where条件是d字段，而d字段没有索引，所以只能按主键进行全表扫描，换句话说就是整张表的行记录都被锁住！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660642993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343046,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1650609071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650609071","product_id":100020801,"comment_content":"MySQL8已经把案例五：唯一索引范围锁 bug的问题修了","like_count":0},{"had_liked":false,"id":341924,"user_name":"1","can_delete":false,"product_type":"c1","uid":1514027,"ip_address":"","ucode":"A8AF2E0B7ED275","user_header":"https://static001.geekbang.org/account/avatar/00/17/1a/2b/1e23112d.jpg","comment_is_top":false,"comment_ctime":1649919158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649919158","product_id":100020801,"comment_content":"疑问1，在案例1中，Session C 将 where id=10，改成 where id=7也不blocked，不太理解？<br>疑问2，在看前面的文章时，到说间隙锁只有在插入的时候才会冲突","like_count":0},{"had_liked":false,"id":340478,"user_name":"cp","can_delete":false,"product_type":"c1","uid":2634906,"ip_address":"","ucode":"10DCEB5F041CB6","user_header":"https://static001.geekbang.org/account/avatar/00/28/34/9a/2fe8ec6f.jpg","comment_is_top":false,"comment_ctime":1648855948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648855948","product_id":100020801,"comment_content":"老师，如果update语句的条件没有用到索引，会怎样加锁？","like_count":0},{"had_liked":false,"id":340293,"user_name":"ub8","can_delete":false,"product_type":"c1","uid":1481811,"ip_address":"","ucode":"0D937C3EAEB781","user_header":"https://static001.geekbang.org/account/avatar/00/16/9c/53/ade0afb0.jpg","comment_is_top":false,"comment_ctime":1648723396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648723396","product_id":100020801,"comment_content":"太乱了","like_count":0},{"had_liked":false,"id":336163,"user_name":"。。","can_delete":false,"product_type":"c1","uid":2853618,"ip_address":"","ucode":"A52A6043D27D87","user_header":"https://static001.geekbang.org/account/avatar/00/2b/8a/f2/6c6f7886.jpg","comment_is_top":false,"comment_ctime":1645963026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645963026","product_id":100020801,"comment_content":"老师，既然 RR（间隙锁）已经解决了幻读问题，那什么时候才会使用 serializable 呢？经常会看到别人说 RR只能解决脏读、不可重复读，不能解决幻读，这个说法是错的吗？","like_count":0},{"had_liked":false,"id":335572,"user_name":"采蘑菇的里奥马","can_delete":false,"product_type":"c1","uid":1411848,"ip_address":"","ucode":"D898FBA62E29B5","user_header":"https://static001.geekbang.org/account/avatar/00/15/8b/08/c7ae6e70.jpg","comment_is_top":false,"comment_ctime":1645591926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645591926","product_id":100020801,"comment_content":"问题：<br><br>MySQL版本：8.0.26<br>事务隔离级别：REPEATABLE-READ<br><br>案例三的Session 3是不会阻塞的。","like_count":0},{"had_liked":false,"id":334790,"user_name":"bamboo","can_delete":false,"product_type":"c1","uid":1105034,"ip_address":"","ucode":"55286877F22AD3","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/8a/651ca538.jpg","comment_is_top":false,"comment_ctime":1645111183,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1645111183","product_id":100020801,"comment_content":"1、说明：<br>\t1)、\t数据库版本 5.7.36(使用 docker 安装了 5.7.30-5.7.36 版本试了试都出现相同的问题。8.0.26 没问题)<br>\t2)、数据库隔离级别 RR<br>2、数据库相关语句：<br>\tCREATE TABLE `t` ( `id` int(11) NOT NULL,`c` int(11) DEFAULT NULL,`d` int(11) DEFAULT NULL,PRIMARY KEY (`id`),<br>\t  KEY `c` (`c`)) ENGINE=InnoDB;<br>\tinsert into t values(0,0,0),(5,5,5),(10,10,10),(15,15,15),(20,20,20),(25,25,25);<br>3、现象<br>\t事务1：<br>\tbegin;<br>\tselect * from t where c &gt;= 10 and c &lt; 21 for update;<br><br>\t事务2：<br>\tmysql&gt; update t set d =d + 1 where id = 5;<br><br>\t更新被 block,查看锁状态的输出：<br>\tRECORD LOCKS space id 47 page no 3 n bits 80 index PRIMARY of table `eshop`.`t` trx id 2577 lock_mode X locks rec but not gap waiting Record lock, heap no 3 PHYSICAL RECORD: n_fields 5; compact format; info bits 0<br>\t\t 0: len 4; hex 80000005; asc     ;;<br>\t\t 1: len 6; hex 000000000a07; asc       ;;<br>\t\t 2: len 7; hex a70000011b011c; asc        ;;<br>\t\t 3: len 4; hex 80000005; asc     ;;<br>\t\t 4: len 4; hex 80000005; asc     ;;<br><br>\tmysql&gt; insert into t values (1,1,1);<br><br>\t插入被 block,查看锁状态的输出：\t<br>\tRECORD LOCKS space id 47 page no 3 n bits 80 index PRIMARY of table `eshop`.`t` trx id 2577 lock_mode X locks gap before rec insert intention waiting Record lock, heap no 3 PHYSICAL RECORD: n_fields 5; compact format; info bits 0<br>\t\t 0: len 4; hex 80000005; asc     ;;<br>\t\t 1: len 6; hex 000000000a07; asc       ;;<br>\t\t 2: len 7; hex a70000011b011c; asc        ;;<br>\t\t 3: len 4; hex 80000005; asc     ;;<br>\t\t 4: len 4; hex 80000005; asc     ;;<br><br>\tmysql&gt; insert into t values (26,100,24);<br>\tERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction\t<br>\t查看锁状态的输出：\t<br>\tRECORD LOCKS space id 47 page no 3 n bits 80 index PRIMARY of table `eshop`.`t` trx id 2624 lock_mode X insert intention waiting Record lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0<br>\t\t 0: len 8; hex 73757072656d756d; asc supremum;;<br>\t可以看到更新 id = 5 的记录(因为行锁)，和插入 c = 1(gap 锁) 的记录都阻塞了。没有看明白，为什么会有 (0,5) 的 gap 锁呢?还有为什么会有 supremum 的 next-key lock 呢?实在是搞不懂了?验证了很多数据，感觉就是把索引 c 从0 到 supermum 都锁住了","like_count":0,"discussions":[{"author":{"id":1105034,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dc/8a/651ca538.jpg","nickname":"bamboo","note":"","ucode":"55286877F22AD3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554171,"discussion_content":"最后查看了 执行计划 看出来了点端倪 😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646234388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334378,"user_name":"潜龙在天","can_delete":false,"product_type":"c1","uid":1072380,"ip_address":"","ucode":"C7D845DBA3F7D8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/fc/5833e4c8.jpg","comment_is_top":false,"comment_ctime":1644908184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644908184","product_id":100020801,"comment_content":"可以直接看锁的具体情况了<br><br>performance_schema.data_locks<br>performance_schema.data_lock_waits<br><br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;mysql-perfschema-excerpt&#47;8.0&#47;en&#47;performance-schema-data-locks-table.html","like_count":0},{"had_liked":false,"id":333295,"user_name":"Geek_e8d4e4","can_delete":false,"product_type":"c1","uid":2710347,"ip_address":"","ucode":"4C8F9A5B211666","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/bibk95dCnUbkwKYcFTSfOS2VebPneQI0wl2nUk1JuOX6iaphf4ibjzk25noXHhyZ7TlPGA0mYVL0EIxak54aaqxcA/132","comment_is_top":false,"comment_ctime":1644255664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644255664","product_id":100020801,"comment_content":"前两讲的答疑文章真的精髓，第一遍听到这的时候没听懂跳过了，听到30课的时候回来听，发现这里才是重中之重...打算把最近十集重过一遍","like_count":0},{"had_liked":false,"id":333068,"user_name":"小妖","can_delete":false,"product_type":"c1","uid":1730626,"ip_address":"","ucode":"49C01DBFADF101","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvm1JYIDcS74s4cEYxA1PXMqjortVXEjUKyGQcPvibNJ4EAuksIa6uoHgr6G1yRqAM2KtP3yicKgTA/132","comment_is_top":false,"comment_ctime":1644044366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644044366","product_id":100020801,"comment_content":"里边的某些解释有些强拗结果了，范围查询和等值傻傻的分不清，例子3和例子4中，同样都是&gt;=10,为什么3中是等值查询，4中却是范围查询，求解答<br>","like_count":0},{"had_liked":false,"id":332795,"user_name":"陈阳","can_delete":false,"product_type":"c1","uid":2653715,"ip_address":"","ucode":"C8E676C967D23A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKib3vNM6TPT1umvR3TictnLurJPKuQq4iblH5upgBB3kHL9hoN3Pgh3MaR2rjz6fWgMiaDpicd8R5wsAQ/132","comment_is_top":false,"comment_ctime":1643616330,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1643616330","product_id":100020801,"comment_content":"第一个例子， mysql8.0 5.7版本，rr级别下，sessionC中‘update t set d=d+1 where id=10’ 例子对sessionA的快照读可见(sessionA 执行 select * from t 后 id为10的记录，d=11)，换成‘update t set d=d+1 where id=15’ 对sessionA的快照读不可见（(sessionA 执行 select * from t 后 id为15的记录，d还是等于15)） 这是为什么？","like_count":0},{"had_liked":false,"id":328686,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1640841864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640841864","product_id":100020801,"comment_content":"间隙可以动态的变大，以锁住更大的范围，但不能变小 ，不知道是否可以这样理解","like_count":0},{"had_liked":false,"id":327462,"user_name":"李承芳","can_delete":false,"product_type":"c1","uid":2716512,"ip_address":"","ucode":"0848375E0178E9","user_header":"https://static001.geekbang.org/account/avatar/00/29/73/60/469bcdfb.jpg","comment_is_top":false,"comment_ctime":1640140222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640140222","product_id":100020801,"comment_content":"思考题中(5,10]的锁为什么不退化为(5,10)","like_count":0},{"had_liked":false,"id":327202,"user_name":"苏彧","can_delete":false,"product_type":"c1","uid":1622448,"ip_address":"","ucode":"C016B28DF7449C","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/b0/b52d9ade.jpg","comment_is_top":false,"comment_ctime":1639978659,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1639978659","product_id":100020801,"comment_content":"1、查询过程中访问到的对象才会加锁，而加锁的基本单位是next-key lock（前开后闭）；<br>2、等值查询上MySQL的优化：索引上的等值查询，如果是唯一索引，next-key lock会退化为行锁，如果不是唯一索引，需要访问到第一个不满足条件的值，此时next-key lock会退化为间隙锁；<br>3、范围查询：无论是否是唯一索引，范围查询都需要访问到不满足条件的第一个值为止；","like_count":0},{"had_liked":false,"id":327002,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1049994,"ip_address":"","ucode":"C0859057592720","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/8a/e7c5a7e2.jpg","comment_is_top":false,"comment_ctime":1639826447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639826447","product_id":100020801,"comment_content":"第5个案例bug在mysql8.0.20重现不了","like_count":0},{"had_liked":false,"id":326892,"user_name":"木木笃笃","can_delete":false,"product_type":"c1","uid":1304879,"ip_address":"","ucode":"4D21F7C93C8388","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/2f/a28bf24c.jpg","comment_is_top":false,"comment_ctime":1639734671,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639734671","product_id":100020801,"comment_content":"老师好，想请教一个问题，MySQL版本是8.0.23，RR级别，沿用本课里的表t，主键id是0,5,10,15,20,25，想请问为什么执行select * from t where id &lt;=25 for update; 会把（25，supermum）锁上next-key lock，而执行select * from t where id &lt;=20 for update; 则不会锁上（20,25）？","like_count":0},{"had_liked":false,"id":325989,"user_name":"小天","can_delete":false,"product_type":"c1","uid":1731985,"ip_address":"","ucode":"D24207A1148E14","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6d/91/9745cf49.jpg","comment_is_top":false,"comment_ctime":1639297046,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1639297046","product_id":100020801,"comment_content":"老师，问一下，在案例三中，我试了一下，为什么sessionC执行的时候没有被阻塞，然后把sessionA改为id&lt;16，就会被阻塞了，我的mysql版本8.0.23","like_count":0,"discussions":[{"author":{"id":1411848,"avatar":"https://static001.geekbang.org/account/avatar/00/15/8b/08/c7ae6e70.jpg","nickname":"采蘑菇的里奥马","note":"","ucode":"D898FBA62E29B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552764,"discussion_content":"相同问题 .","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645591995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323282,"user_name":"浅时光@Smile。","can_delete":false,"product_type":"c1","uid":2555960,"ip_address":"","ucode":"DC66AFD863C65B","user_header":"https://static001.geekbang.org/account/avatar/00/27/00/38/f07e54a0.jpg","comment_is_top":false,"comment_ctime":1637818658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637818658","product_id":100020801,"comment_content":"老师，我有个疑问。关于案例八的死锁，为什么是先加的间隙锁，再加行锁呢?<br>我尝试了一下这个过程，发现sesionA的insert并没有锁住，而是直接执行完了，之后sessionB收到死锁的错误，这是不是说明了在sessionA insert之前sessionB还没把间隙锁加上呢？","like_count":0},{"had_liked":false,"id":322181,"user_name":"Geek_b1c2bf","can_delete":false,"product_type":"c1","uid":1640826,"ip_address":"","ucode":"88C5A351097846","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/95xDJc3Jq6sVNEyYqFwibnrjzltzkdXd3R9gRO3ejiaNEiaZveMftMmBZDllvaUchxg7wM67qeDr1YTGo2B85yZHQ/132","comment_is_top":false,"comment_ctime":1637224936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637224936","product_id":100020801,"comment_content":"老师，对于图1的例子，这样思考对不对？<br>这里Session C可以更新，并不是因为间隙锁范围是（5，10），而是间隙锁不会锁住 update语句，而是会锁住insert语句。<br>参考：“跟间隙锁存在冲突关系的，是“往这个间隙中插入一个记录”这个操作。间隙锁之间都不存在冲突关系。”","like_count":0},{"had_liked":false,"id":320306,"user_name":"上海","can_delete":false,"product_type":"c1","uid":2678569,"ip_address":"","ucode":"6A4F9D80D25028","user_header":"https://static001.geekbang.org/account/avatar/00/28/df/29/3c956177.jpg","comment_is_top":false,"comment_ctime":1636212038,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636212038","product_id":100020801,"comment_content":"案例一在8.0.27版本的next-key lock的范围是[5,10）","like_count":0},{"had_liked":false,"id":319703,"user_name":"水月","can_delete":false,"product_type":"c1","uid":2344034,"ip_address":"","ucode":"78FC68615016DB","user_header":"https://static001.geekbang.org/account/avatar/00/23/c4/62/269aae3f.jpg","comment_is_top":false,"comment_ctime":1635916353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635916353","product_id":100020801,"comment_content":"碰到问题还是得多请mysql explain一下，发现了extra里除了Using index condition，还多了个Backward index scan，那应该就用不上向右扫描和等值查询优化了","like_count":0},{"had_liked":false,"id":319505,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1635838379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635838379","product_id":100020801,"comment_content":"为什么我只改一行的语句，锁这么多？<br>未来防止幻读，和产生数据错误。所以添加了行锁和间隙锁。","like_count":0},{"had_liked":false,"id":315772,"user_name":"特立独行的猪","can_delete":false,"product_type":"c1","uid":1465344,"ip_address":"","ucode":"1440F96375740A","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/00/5d11e68d.jpg","comment_is_top":false,"comment_ctime":1633992921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633992921","product_id":100020801,"comment_content":"非唯一索引等值锁，使用mysql5.7.34版本，RR模式下，session C 是可以Query OK的，并且插入(7,0,7)或者(7,10,7)都OK，即使session A  改为for  update ,RR模式下，session C 也是可以Query OK的","like_count":0},{"had_liked":false,"id":313155,"user_name":"咦","can_delete":false,"product_type":"c1","uid":2283781,"ip_address":"","ucode":"2E0D5A488489A4","user_header":"https://static001.geekbang.org/account/avatar/00/22/d9/05/0d772dbf.jpg","comment_is_top":false,"comment_ctime":1632298747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632298747","product_id":100020801,"comment_content":"简单总结一下，就是你把数据按照索引顺序进行排列，然后按照order by的顺序来读，有可能引发并发问题的行或者间隙都会被锁住，除了部分bug，例如老师说的，还有5.7.10 版本的二级唯一索引下，RC级别出现next key锁的情况之外，上述总结几乎都适用","like_count":0},{"had_liked":false,"id":311442,"user_name":"蛰伏的庶人","can_delete":false,"product_type":"c1","uid":2057372,"ip_address":"","ucode":"77C70C8E54DA88","user_header":"https://static001.geekbang.org/account/avatar/00/1f/64/9c/92536f47.jpg","comment_is_top":false,"comment_ctime":1631239013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631239013","product_id":100020801,"comment_content":"老师您好！有两个问题理解不是很透彻，请老师帮我分析解答一下：<br>问题1：原则2中提到的对象是只指 加锁的基本单位next-key lock 吗？（原则 2：查找过程中访问到的对象才会加锁。）<br>问题2：优化2中提到 向右遍历是指哪个东西向右遍历呢？（优化 2：索引上的等值查询，向右遍历时且最后一个值不满足等值条件的时候，next-key lock 退化为间隙锁。）","like_count":0},{"had_liked":false,"id":310110,"user_name":"全村的希望","can_delete":false,"product_type":"c1","uid":1598050,"ip_address":"","ucode":"06A2019BAFECF0","user_header":"https://static001.geekbang.org/account/avatar/00/18/62/62/28706daf.jpg","comment_is_top":false,"comment_ctime":1630488174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630488174","product_id":100020801,"comment_content":"[root@localhost][test]&gt; show create table t1\\G<br>*************************** 1. row ***************************<br>Table: t1<br>Create Table: CREATE TABLE `t1` (<br>`id` int(11) NOT NULL,<br>`user_id` int(11) DEFAULT NULL,<br>PRIMARY KEY (`id`),<br>UNIQUE KEY `uniq_userid` (`user_id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4<br>1 row in set (0.00 sec)<br><br><br><br>[root@localhost][test]&gt; select * from t1;<br>+----+---------+<br>| id | user_id |<br>+----+---------+<br>| 1 | 1 |<br>| 2 | 2 |<br>| 3 | 3 |<br>+----+---------+<br>3 rows in set (0.00 sec)<br><br><br>time1 session1 trx_id 1904: [root@localhost][test]&gt; update t1 set user_id=4 where user_id=2;<br>time2 session2 trx_id 1905: [root@localhost][test]&gt; update t1 set user_id=4 where user_id=2;<br>time3 session1 trx_id 1904: [root@localhost][test]&gt; update t1 set user_id=4 where user_id=2;<br><br><br>where是唯一索引，更新它，紧接着就产生了死锁，为什么","like_count":0},{"had_liked":false,"id":309163,"user_name":"我爱妮","can_delete":false,"product_type":"c1","uid":2747406,"ip_address":"","ucode":"54141A00C3C673","user_header":"https://static001.geekbang.org/account/avatar/00/29/ec/0e/d7e815f3.jpg","comment_is_top":false,"comment_ctime":1629964727,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1629964727","product_id":100020801,"comment_content":"死锁案例中为什么换成insert into t values (12,12,12);<br>就不会死锁呢？","like_count":0,"discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545223,"discussion_content":"第一步，加(5，10)间隙锁。 第二步加10行锁。 第三步，加(10，15）间隙锁。 老师意思第二步卡住了，第一步的锁还是加好了。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641879648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309104,"user_name":"Kkkoko","can_delete":false,"product_type":"c1","uid":1069583,"ip_address":"","ucode":"C36729C4659F60","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ8BIG7fdqVH3xs2o7yDGpbr9FuT93FVN98CC4cYdojcJamJrPS6q8ObOFQwDgbxygiaYaWnuMk0cw/132","comment_is_top":false,"comment_ctime":1629945090,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1629945090","product_id":100020801,"comment_content":"问个问题， 【案例八：一个死锁的例子】<br>c=10，c上面有普通索引， 所以不是会加上   (5, 10]，(10，15)的锁嘛。<br><br>为什么session A  insert(12, 12, 12) 可以成功","like_count":0,"discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545224,"discussion_content":"第一步，加(5，10)间隙锁。 第二步加10行锁。 第三步，加(10，15）间隙锁。 老师意思第二步卡住了，第一步的锁还是加好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641879710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308951,"user_name":"卖小卖部的茶叶蛋","can_delete":false,"product_type":"c1","uid":1983770,"ip_address":"","ucode":"7399725246274B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/45/1a/83ef6991.jpg","comment_is_top":false,"comment_ctime":1629869355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629869355","product_id":100020801,"comment_content":"老师说：第一次用c=10定位记录时，由于索引c是非唯一索引，没有优化规则。 但是优化2不就是非唯一索引的等值查询吗？按照这个规则，应该是当c=10时，有(5,10] next-key lock和(10,15)的间隙锁。 还是说因为where条件是c&gt;=10，只会找到第一个=10的条件，不再继续向后遍历，所以不符合优化2的规则？？？","like_count":0},{"had_liked":false,"id":306515,"user_name":"Null","can_delete":false,"product_type":"c1","uid":1041795,"ip_address":"","ucode":"3D0AC488DAC27B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/83/ed10136c.jpg","comment_is_top":false,"comment_ctime":1628590965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628590965","product_id":100020801,"comment_content":"老师，在读提交隔离级别下，加锁的基本单位也是 next-key lock 吗？如果是那在什么阶段退化为行锁啊？","like_count":0},{"had_liked":false,"id":301942,"user_name":"magic","can_delete":false,"product_type":"c1","uid":1024556,"ip_address":"","ucode":"A1BCF486381749","user_header":"","comment_is_top":false,"comment_ctime":1625990403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625990403","product_id":100020801,"comment_content":"update t set column1=x1,column2=x2 where condition1=c1 and condition2=c2,condition1和condition2都是单独索引，加锁过程是怎么样的？","like_count":0},{"had_liked":false,"id":301674,"user_name":"张诚","can_delete":false,"product_type":"c1","uid":1115702,"ip_address":"","ucode":"F623703194769B","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","comment_is_top":false,"comment_ctime":1625807596,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1625807596","product_id":100020801,"comment_content":"mysql 8.0.21<br>执行select * from t where c&gt;=10 and c&lt;=15 limit 2 for update.<br>这个对加锁范围做了limit 优化，让加锁范围变小了<br>但是select * from t where c&gt;=10 and c&lt;=15 order by c desc limit2 for update<br>没有用到limit 优化","like_count":0},{"had_liked":false,"id":301670,"user_name":"张诚","can_delete":false,"product_type":"c1","uid":1115702,"ip_address":"","ucode":"F623703194769B","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","comment_is_top":false,"comment_ctime":1625806666,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1625806666","product_id":100020801,"comment_content":"随着版本的变化，可能有些场景下的验证结果会不一样，但是整体来说，思考问题的方向是很正确，也很好懂得。我感觉我已经研究清楚了","like_count":0},{"had_liked":false,"id":301428,"user_name":"Geek_141bd5","can_delete":false,"product_type":"c1","uid":2232081,"ip_address":"","ucode":"B1EEB7C4386CCD","user_header":"","comment_is_top":false,"comment_ctime":1625673010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625673010","product_id":100020801,"comment_content":"通过自己理解觉得加锁规则这样理解似乎更好记和理解一些.也是在画脑图过程中不断优化后得到的,不知道对不对.  https:&#47;&#47;www.yuque.com&#47;docs&#47;share&#47;3b1f778d-0f24-4477-9451-38c1116dc227?# 《21 为什么我只改一行的语句，锁这么多？》","like_count":0},{"had_liked":false,"id":300399,"user_name":"艺璇","can_delete":false,"product_type":"c1","uid":2664419,"ip_address":"","ucode":"3C3BF4D4034145","user_header":"https://static001.geekbang.org/account/avatar/00/28/a7/e3/395e0b6d.jpg","comment_is_top":false,"comment_ctime":1625140817,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625140817","product_id":100020801,"comment_content":"老师，您好，关于原则二：查找过程中访问到的对象才会加锁 不是很明确<br>此处的对象是否只得是列，”访问到“是否指的是where条件里面涉及到？","like_count":0},{"had_liked":false,"id":298257,"user_name":"秦赛龙","can_delete":false,"product_type":"c1","uid":2656049,"ip_address":"","ucode":"EADC8387FB1294","user_header":"https://static001.geekbang.org/account/avatar/00/28/87/31/35ec63d3.jpg","comment_is_top":false,"comment_ctime":1623984086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623984086","product_id":100020801,"comment_content":"老师你好,上面讲到的都是检索条件有索引的情况,假如<br>select * from T where d=1 for update<br>d上面没有索引,是不是按照第二条原则,因为进行了全表扫描,整个表现在有的数据都会被锁住<br><br>","like_count":0},{"had_liked":false,"id":297185,"user_name":"bd7xzz","can_delete":false,"product_type":"c1","uid":1003006,"ip_address":"","ucode":"420199A024D4F5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fe/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1623370785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623370785","product_id":100020801,"comment_content":"在rc隔离级别下，如果用insert into on duplicate update应该也会有间隙锁","like_count":0},{"had_liked":false,"id":295021,"user_name":"linora","can_delete":false,"product_type":"c1","uid":1304307,"ip_address":"","ucode":"925F06ABFD2DB5","user_header":"https://static001.geekbang.org/account/avatar/00/13/e6/f3/5de3fe4a.jpg","comment_is_top":false,"comment_ctime":1622187698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622187698","product_id":100020801,"comment_content":"全网目前本人看过对锁总结最通透的文章，读完这篇文章，我脑子里冒出这个词：技术爽文<br><br>开头“这次为了总结成不看代码的同学也能理解的规则，是我又重新刷了代码临时总结出来的”，云淡风轻的一句话，可以想像出斌总付出多少精血！<br><br>斌总啥时候出书啊，出一本我买一本的那种。。。","like_count":0},{"had_liked":false,"id":293678,"user_name":"屮","can_delete":false,"product_type":"c1","uid":2031129,"ip_address":"","ucode":"10B69240958B6B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/fe/19/21a6d3d3.jpg","comment_is_top":false,"comment_ctime":1621487598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621487598","product_id":100020801,"comment_content":"老师，您好，实测mysql8.0.18已经修复了文中的“一个bug”<br>SessionA<br>begin;（已执行）<br>select * from t where id &gt; 10 and id &lt;= 15 for update; （已执行）<br>SessionB<br>update t set d=d + 1 where id = 20;(成功)<br>SessionC<br>INSERT INTO t VALUES (16,16,16);(成功)","like_count":0},{"had_liked":false,"id":292794,"user_name":"ub8","can_delete":false,"product_type":"c1","uid":1481811,"ip_address":"","ucode":"0D937C3EAEB781","user_header":"https://static001.geekbang.org/account/avatar/00/16/9c/53/ade0afb0.jpg","comment_is_top":false,"comment_ctime":1620982454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620982454","product_id":100020801,"comment_content":"这篇文章推荐看死锁和2原则2优化1bug其他的例子没屌用","like_count":0},{"had_liked":false,"id":291666,"user_name":"W","can_delete":false,"product_type":"c1","uid":1565949,"ip_address":"","ucode":"C500B4113258F7","user_header":"https://static001.geekbang.org/account/avatar/00/17/e4/fd/3bf6d263.jpg","comment_is_top":false,"comment_ctime":1620404348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620404348","product_id":100020801,"comment_content":"老师有个问题向请教<br><br>案例二中，分析出加锁范围是c索引的（0，10）区间，主键索引没有加锁，我把session3的例子改为 <br><br>insert into t values(-10,10,10) <br><br>却被阻塞了，执行<br><br>insert into t values(-5,0,10)  可以执行成功，以为区间只是多了10而已，但再次试验<br><br>执行 insert into t values(3,0,10) 却被阻塞了。<br><br>mysql 版本 5.7.16（mysql  Ver 14.14 Distrib 5.7.16, for osx10.11 (x86_64) using  EditLine wrapper）<br><br><br><br><br><br>","like_count":0},{"had_liked":false,"id":290805,"user_name":"NotFoundMoneyException:¥0","can_delete":false,"product_type":"c1","uid":2596556,"ip_address":"","ucode":"D454002955D09C","user_header":"https://static001.geekbang.org/account/avatar/00/27/9e/cc/1d57f923.jpg","comment_is_top":false,"comment_ctime":1619761383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619761383","product_id":100020801,"comment_content":"老师，上一篇文章中，你说间隙锁只会锁住插入记录的操作，但是这里为什么也锁住了更新记录的操作，不明白了，请老师指点","like_count":0},{"had_liked":false,"id":290385,"user_name":"周星平","can_delete":false,"product_type":"c1","uid":1494880,"ip_address":"","ucode":"1FDCB487392B03","user_header":"https://static001.geekbang.org/account/avatar/00/16/cf/60/9100ad4f.jpg","comment_is_top":false,"comment_ctime":1619522110,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619522110","product_id":100020801,"comment_content":"为什么上一篇要锁全部，这一篇只会锁一部分，如果其他行修改的数据,加入（0,5】加锁，update t set d=5 where d=10会不会出现幻读","like_count":0},{"had_liked":false,"id":290153,"user_name":"令年月未枉过","can_delete":false,"product_type":"c1","uid":1580279,"ip_address":"","ucode":"F29C5C82E6FF76","user_header":"https://static001.geekbang.org/account/avatar/00/18/1c/f7/d47f070f.jpg","comment_is_top":false,"comment_ctime":1619406080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619406080","product_id":100020801,"comment_content":"老师您好，我想问一下，聚合索引(a,b)为唯一索引的insert操作，获取了共享锁却没有block，继续执行后面的语句。<br>我知道获取共享锁可能是唯一性检测发现其他事务做了同一唯一键记录的插入操作，可是但为什么当前事务会没有阻塞呢。。。<br>如果说并非是因为以上原因获得的s锁，而是本来就是s锁，那么为什么不是x锁呢，希望老师能解惑！","like_count":0},{"had_liked":false,"id":288853,"user_name":"宁悦","can_delete":false,"product_type":"c1","uid":1901403,"ip_address":"","ucode":"68844C314FEEF8","user_header":"https://static001.geekbang.org/account/avatar/00/1d/03/5b/3cdbc9fa.jpg","comment_is_top":false,"comment_ctime":1618732077,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618732077","product_id":100020801,"comment_content":"反反复复读了很多遍，终于看懂了，觉得要是配合b+树索引的图来看加锁的话，会更容易理解一点。","like_count":0},{"had_liked":false,"id":288454,"user_name":"陈文庆","can_delete":false,"product_type":"c1","uid":1213442,"ip_address":"","ucode":"95F593C7B8216E","user_header":"https://static001.geekbang.org/account/avatar/00/12/84/02/e9937c31.jpg","comment_is_top":false,"comment_ctime":1618475824,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618475824","product_id":100020801,"comment_content":"CREATE TABLE `foo` (<br>  `a` int(11) NOT NULL,<br>  `b` int(11) NOT NULL,<br>  PRIMARY KEY (`a`),<br>  KEY `b` (`b`)<br>) ENGINE=InnoDB;<br>Insert into foo(a,b) values(10,10);<br><br><br>session 1:<br>begin;<br>select b from foo where b=10 lock in share mode;  &#47;&#47;按文中解释，这里只锁覆盖索引b，不对索引a上锁<br><br><br>session 2:<br>begin;<br>update foo set a=100 where a=10;  &#47;&#47;等待<br><br>请问，如何理解session 2的update被阻塞呢？<br>以上是在mysql 5.7上。<br>","like_count":0},{"had_liked":false,"id":288199,"user_name":"张诚","can_delete":false,"product_type":"c1","uid":1115702,"ip_address":"","ucode":"F623703194769B","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","comment_is_top":false,"comment_ctime":1618362591,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1618362591","product_id":100020801,"comment_content":"但是我看到高性能Mysql中关于InnoDB的MVCC描述：<br>是通过在每行记录后面保存两个隐藏的列来实现的，这两个列，一个保存了行的创建时间，一个保存的行的过期时间。当然存储的并不是实际的时间值，而是系统版本号。<br>没开始一个新得事务，系统版本号就对自动递增。事务开始时刻的系统版本号会作为事务的版本号，用来和查询道德每行记录的版本号进行比较。然后描述了RR下MVCC的具体操作。<br>但是我在8.0版本后的执行结果跟书中描述的不一样。<br>1、开始一个新得事务系统版本号都会自动递增，我们如何可以所谓的系统版本号。<br>2、begin；执行后，查询select * from information_schema.innodb_trx \\G，并没有结果。当第一条sql执行后再查询会获得一条记录，并且发现一个比较奇怪的现象：update语句的trx_id的值比执行select语句的trx_id要小的多的多。<br>3、然后就是您说的，创建一致性视图的时间点：是第一次一致性读的时间。这个我从我实验的现象上是这样的，但是我没在书上看到。<br>老是能不能补充一次详细讲一下MVCC.<br>","like_count":0,"discussions":[{"author":{"id":1115702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","nickname":"张诚","note":"","ucode":"F623703194769B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367827,"discussion_content":"老师第八讲的时候已经讲了什么时候生成快照","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618477358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286243,"user_name":"10xiaohu","can_delete":false,"product_type":"c1","uid":1589055,"ip_address":"","ucode":"CAB39DBB93E608","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKKKdCyib4iblXC6JIH7HWDfIFVweTb7SgEOuRjquic3GiaiaGInFSiaU8w2y2bjvZjgiaA3IEQuyibXTaeHQ/132","comment_is_top":false,"comment_ctime":1617205935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617205935","product_id":100020801,"comment_content":"查询过程中访问到的对象才会加锁，咱们举得例子是索引和主键索引，我的疑惑是：没有索引的查询，如where d 条件查询，是全表扫描，然后加行锁吧。因为没有索引，也没与顺序没法按照next-key lock加锁","like_count":0},{"had_liked":false,"id":285373,"user_name":"超级蛋蛋饭","can_delete":false,"product_type":"c1","uid":1249616,"ip_address":"","ucode":"AD2BECE789B365","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wiaQmkQdIh84RibSLrDkIA3HtibAR4IibpnP3VEmiaLzvpiaibXJQEb2LLUrCD4dM7DjvOFD65IbdZm2Mn68O71FxiaAow/132","comment_is_top":false,"comment_ctime":1616759658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616759658","product_id":100020801,"comment_content":"感觉等值查询的范围查找，从理论上来说是能只加间隙锁的，是技术上代码实现比较难吗？","like_count":0},{"had_liked":false,"id":281714,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1614855632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614855632","product_id":100020801,"comment_content":"老师你好，我有个问题，insert语句是不会加间隙锁的对吗？<br>文中例子中，insert into t value(2,2,2) 这个语句是不会在（0，5）这个区间加上间隙锁的对吗？","like_count":0},{"had_liked":false,"id":281344,"user_name":"啊良梓是我","can_delete":false,"product_type":"c1","uid":1655117,"ip_address":"","ucode":"E42FC1A60D331C","user_header":"https://static001.geekbang.org/account/avatar/00/19/41/4d/f6d6d13a.jpg","comment_is_top":false,"comment_ctime":1614696020,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1614696020","product_id":100020801,"comment_content":"我有一点疑惑，就是案例三对主键索引 进行了 第一个等值分析，也就是 id=10的时候 退化为行锁，那么应该案例四应该这样子分析才对啊，也就是c=10的时候，将（10，15] 退化为 （10，15）的，然后在分析10&lt;c&lt;15的时候拿到 next-key lock （10，15]，合起来就是 （5，10],(10,15] ??","like_count":0},{"had_liked":false,"id":279785,"user_name":"为你摘下星星🌟","can_delete":false,"product_type":"c1","uid":2441219,"ip_address":"","ucode":"D52EDF29FBC6A0","user_header":"https://static001.geekbang.org/account/avatar/00/25/40/03/e5152449.jpg","comment_is_top":false,"comment_ctime":1613962341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613962341","product_id":100020801,"comment_content":"提个问题，对操作数据加了锁，并使用事务，如果在中间发生了某个代码层面的执行错误(此时已对数据加了锁)，请问是否还会释放锁","like_count":0},{"had_liked":false,"id":277729,"user_name":"Geek_b25035","can_delete":false,"product_type":"c1","uid":2029428,"ip_address":"","ucode":"0DF572205958E2","user_header":"","comment_is_top":false,"comment_ctime":1612530084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612530084","product_id":100020801,"comment_content":"案例二，但是同时这个符合优化 2：等值判断，向右遍历，最后一个值不满足 c=5 这个等值条件，因此退化成间隙锁 (5,10)中的最后一个值这里是什么意思？具体指的值是哪个？","like_count":0},{"had_liked":false,"id":276163,"user_name":"Ansyear","can_delete":false,"product_type":"c1","uid":1629257,"ip_address":"","ucode":"489CE96852EA2C","user_header":"https://static001.geekbang.org/account/avatar/00/18/dc/49/43ae1627.jpg","comment_is_top":false,"comment_ctime":1611818419,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611818419","product_id":100020801,"comment_content":"对于案例八的执行情况。如果session B加间隙锁(5,10)成功，那为什么session A还可以在范围中插入数据成功？难道是因为同一个事务里面锁不受影响？","like_count":0},{"had_liked":false,"id":275708,"user_name":"狼的诱惑","can_delete":false,"product_type":"c1","uid":1257043,"ip_address":"","ucode":"AE89DFC5963C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","comment_is_top":false,"comment_ctime":1611650383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611650383","product_id":100020801,"comment_content":"老师好：遇到一个死锁的问题请教下，token_check_049 表中的uuid是唯一索引，但同时发现针对uuid又建了一个非唯一索引（历史问题），问题:两条同样的数据并发插入时造成死锁，还请老师或各位大神指点迷津，以下是死锁日志：<br>LATEST DETECTED DEADLOCK<br>------------------------<br>*** (2) TRANSACTION:<br>TRANSACTION 1640999824, ACTIVE 0 sec inserting, thread declared inside InnoDB 1<br>mysql tables in use 1, locked 1<br>4 lock struct(s), heap size 1136, 2 row lock(s), undo log entries 1<br>MySQL thread id 13740484, OS thread handle 140432345507584, query id 2165540477 10.13.101.158 user_info update<br>INSERT INTO token_check_049 (uuid, business_id, business_type) VALUES (&#39;4-AS20210121002000029&#39;, &#39;AS20210121002000029&#39;, 4)<br>*** (2) HOLDS THE LOCK(S):<br>RECORD LOCKS space id 11945 page no 24 n bits 376 index uuid of table `user_info`.`token_check_049` trx id 1640999824 lock mode S locks gap before rec<br>Record lock, heap no 205 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 14; hex 342d534830303030303032353336; asc 4-SH0000002536;;<br> 1: len 8; hex 80000000000000e7; asc;;<br>*** (2) WAITING FOR THIS LOCK TO BE GRANTED:<br>RECORD LOCKS space id 11945 page no 24 n bits 376 index uuid of table `user_info`.`token_check_049` trx id 1640999824 lock_mode X locks gap before rec insert intention waiting<br>Record lock, heap no 205 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 14; hex 342d534830303030303032353336; asc 4-SH0000002536;;<br> 1: len 8; hex 80000000000000e7; asc;;<br>*** WE ROLL BACK TRANSACTION (2)","like_count":0},{"had_liked":false,"id":275056,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1101762,"ip_address":"","ucode":"003700A99A910B","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/c2/a5b3ceaf.jpg","comment_is_top":false,"comment_ctime":1611287909,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1611287909","product_id":100020801,"comment_content":"林老师你好,请问下:<br>表结构:<br>create table t (<br>       id int(11) not null,<br>       c int(11),default null,<br>       d int(11) default null,<br>       primary key(id),<br>       key c(c)<br>)engine=InnoDB;<br><br>表中已存在的数据:<br>+----+------+------+<br>| id | c    | d    |<br>+----+------+------+<br>|  0 |    0 |    0 |<br>|  5 |    6 |    6 |<br>|  8 |    8 |    8 |<br>| 10 |   10 |   10 |<br>| 15 |   15 |   15 |<br>| 20 |   20 |   20 |<br>| 25 |   25 |   25 |<br>+----+------+------+<br><br>我的操作过程:<br>sessionA:  begin; update t set c = c + 1 where id = 5;<br>sessionB:  select id from t where c = 5 lock in share mode;  &#47;&#47;不会阻塞<br>sessionC:  select id from t where c = 7 lock in share mode;  &#47;&#47;阻塞<br><br>我的问题:<br>根据这节课讲的加锁规则和优化, sessionA  的锁有 id = 5 的行锁,以及索引 c 上的间隙锁(0,6],(6,8). sessionC 在索引 c 上的间隙锁是 (6,8),  间隙锁是不互斥的, 为什么 sessionC  会被阻塞呢?我理解不了.<br><br>希望林老师有空的时候帮我解答下,谢谢.","like_count":0,"discussions":[{"author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348497,"discussion_content":"session A执行后c的值变为7了，session C在获取c=7的行锁时等待","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612603987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1101762,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cf/c2/a5b3ceaf.jpg","nickname":"helloworld","note":"","ucode":"003700A99A910B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348734,"discussion_content":"谢谢你，明白了。👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612695009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348497,"ip_address":""},"score":348734,"extra":""}]},{"author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348498,"discussion_content":"root@localhost [test]>select * from sys.innodb_lock_waits where locked_table=&#39;`test`.`t2`&#39;\\G\n*************************** 1. row ***************************\n                wait_started: 2021-02-06 04:36:12\n                    wait_age: 00:00:02\n               wait_age_secs: 2\n                locked_table: `test`.`t2`\n                locked_index: c\n                 locked_type: RECORD\n              waiting_trx_id: 421849629305568\n         waiting_trx_started: 2021-02-06 04:36:12\n             waiting_trx_age: 00:00:02\n     waiting_trx_rows_locked: 1\n   waiting_trx_rows_modified: 0\n                 waiting_pid: 28\n               waiting_query: select id from t2 where c=7 lock in share mode\n             waiting_lock_id: 421849629305568:69:4:3\n           waiting_lock_mode: S\n             blocking_trx_id: 3022234\n                blocking_pid: 27\n              blocking_query: NULL\n            blocking_lock_id: 3022234:69:4:3\n          blocking_lock_mode: X                       --------------此处为行锁\n        blocking_trx_started: 2021-02-06 04:36:09\n            blocking_trx_age: 00:00:05\n    blocking_trx_rows_locked: 2\n  blocking_trx_rows_modified: 1\n     sql_kill_blocking_query: KILL QUERY 27\nsql_kill_blocking_connection: KILL 27\n1 row in set, 3 warnings (0.00 sec)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612604254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274712,"user_name":"小太阳","can_delete":false,"product_type":"c1","uid":1477324,"ip_address":"","ucode":"3B1C90425E485D","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/cc/da9adc82.jpg","comment_is_top":false,"comment_ctime":1611134205,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1611134205","product_id":100020801,"comment_content":"老师,我遇到个奇怪的死锁问题:<br>create table organ_user(<br>id bigint primary key auto_increment,<br> usercode varchar not null,<br>organid bigint not null<br>) engine=innodb default charset=utf8mb4;<br>这是建表语句,只有一个主键索引. 数据库事务隔离级别是read committed. mysql版本是5.7.28<br>事务1: 执行delete from organ_user where organid in (1042) and usercode = &#39;0075&#39;;<br>事务2: 执行delete from organ_user where organid in (4042) and usercode = &#39;9001&#39;;<br>这是出现死锁时两个事务的sql. 显示的锁信息确实也是主键索引上的锁.<br>现在问题是:delete语句的where条件匹配不到索引,应该只能逐个扫描主键索引,然后挨个加锁,也就是所有记录都会被锁住,后执行的事务应该会等待先执行的事务执行完提交后再执行啊,所以不明白为什么会出现这个死锁. 除非两个事务扫描顺序不一样,但是他们的sql是一样的,应该都是顺序扫描吧.","like_count":0,"discussions":[{"author":{"id":1477324,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8a/cc/da9adc82.jpg","nickname":"小太阳","note":"","ucode":"3B1C90425E485D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346821,"discussion_content":"找到原因了，这两个事物有其中一个还有个插入操作，插入操作先执行，而且只锁了插入的那一行。然后第二个事物再执行删除，从第一行开始锁，到最后一行阻塞，然后第一个事物插入完开始执行删除，就造成了死锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612072740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271161,"user_name":"不工","can_delete":false,"product_type":"c1","uid":1462843,"ip_address":"","ucode":"A8725E6D0E1765","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","comment_is_top":false,"comment_ctime":1609423646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609423646","product_id":100020801,"comment_content":"sessionA:<br>begin;<br>SELECT id FROM t2 WHERE c = 5 LOCK IN SHARE MODE;<br>sessionB:<br>begin;<br>update t2 set c=10 where id=15;   ===&gt; 不阻塞，但是如果把id换成 5就会阻塞。<br>按照老师的推理：sessionA的间隙锁是 （0,5] (5, 10),  sessionB 是在索引c上插入（c=10, id=15）（c=10, id=0）,为什么一个阻塞，一个不阻塞呢？按照道理不应该两个都不阻塞吗？","like_count":0},{"had_liked":false,"id":270577,"user_name":"推车的老王","can_delete":false,"product_type":"c1","uid":1832751,"ip_address":"","ucode":"568A2E436CCFBE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/HrblKDLM0uaYNgJo3ZbG3qzgvpq15vRDKadOkvktJuI6sWf4kUymXXXCM4ibicLcek22qAkd5oysSEVCTZuZJXGA/132","comment_is_top":false,"comment_ctime":1609164733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609164733","product_id":100020801,"comment_content":"mysql版本5.7.18<br>sessionA:<br>START TRANSACTION;<br>SELECT * from t where c&gt;= 10 and c &lt; 11 for update;<br>----<br>sessionB:<br>INSERT INTO t (id,c,d) VALUES (2,5,8);<br>----<br>sessionC:<br>INSERT INTO t (id,c,d) VALUES (21,5,8);<br>按照今天学的知识那么sessionA对应的是(5,10],(10,15]两个锁<br>为什么sessionb成功了但是sessionc却阻塞<br>难道是因为sessionb对应的数据在c的索引树在（5,5,5）这条数据的左边所以不在锁的范围内<br>sessionc对应的数据在这条数据的右边所以被锁住了吗？","like_count":0},{"had_liked":false,"id":270165,"user_name":"huai","can_delete":false,"product_type":"c1","uid":1528843,"ip_address":"","ucode":"18B5B205E052F5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/c3GB3cAibjkR3rFQRtt6L7GAVMicCTgaicDjsH6lItIqFolmVbWiaAkdJQZicp8EwJWFw83b7FlspaJuz1qO3TyPLzg/132","comment_is_top":false,"comment_ctime":1608964706,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608964706","product_id":100020801,"comment_content":"老师，您好，有个问题请教一下，文章中 优化 2：索引上的等值查询，向右遍历时且最后一个值不满足等值条件的时候，next-key lock 退化为间隙锁。我想问一下索引上的范围查询，在最后一个值不满足条件的时候为什么不会从next-key lock 退化成gap lock呢？比如案例三","like_count":0},{"had_liked":false,"id":269867,"user_name":"王建新","can_delete":false,"product_type":"c1","uid":1934802,"ip_address":"","ucode":"E3151DDC0EEF0D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/85/d2/045c63fb.jpg","comment_is_top":false,"comment_ctime":1608818927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608818927","product_id":100020801,"comment_content":"老师啊对于最后一题inser 666那个还是不明白，最后锁的不应该是10-25吗 ，和order by c有关系吗 会锁到5-10","like_count":0},{"had_liked":false,"id":269813,"user_name":"王建新","can_delete":false,"product_type":"c1","uid":1934802,"ip_address":"","ucode":"E3151DDC0EEF0D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/85/d2/045c63fb.jpg","comment_is_top":false,"comment_ctime":1608793995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608793995","product_id":100020801,"comment_content":"我把题目重新描述和简化一下：还是我们在文章开头初始化的表 t，里面有 6 条记录，图 12 的语句序列中，为什么 session B 的 insert 操作，会被锁住呢？图 12 锁分析思考题另外，如果你有兴趣多做一些实验的话，可以设计好语句序列，在执行之前先自己分析一下，然后实际地验证结果是否跟你的分析一致。","like_count":0},{"had_liked":false,"id":268703,"user_name":"西边一抹残阳","can_delete":false,"product_type":"c1","uid":1197178,"ip_address":"","ucode":"6836AB08783DC5","user_header":"https://static001.geekbang.org/account/avatar/00/12/44/7a/d27c1ed3.jpg","comment_is_top":false,"comment_ctime":1608298550,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608298550","product_id":100020801,"comment_content":"老师，我有个问题<br>案例8为啥会加(5,10],(10,15)这两个next-key lock呢，加10,(10,15)这两个锁不行好了吗？因为c字段有索引，应该通过索引查找直接定位到c=10这个叶子节点上，并且是等值查询，5-10之间间隙锁可以去掉吧","like_count":0},{"had_liked":false,"id":266107,"user_name":"Wangyf","can_delete":false,"product_type":"c1","uid":2226219,"ip_address":"","ucode":"349068A07CB1D4","user_header":"https://static001.geekbang.org/account/avatar/00/21/f8/2b/339660f1.jpg","comment_is_top":false,"comment_ctime":1607172208,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1607172208","product_id":100020801,"comment_content":"案例三中的 session C, 我用的是 8.0.21 版本，执行 session C 里面的语句时，更新 id = 15 的行并没有被锁住，but ..... 我想不通它为啥没锁住。。。","like_count":0,"discussions":[{"author":{"id":1049994,"avatar":"https://static001.geekbang.org/account/avatar/00/10/05/8a/e7c5a7e2.jpg","nickname":"sky","note":"","ucode":"C0859057592720","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539747,"discussion_content":"修改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639826525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265764,"user_name":"x-ray","can_delete":false,"product_type":"c1","uid":1140175,"ip_address":"","ucode":"8363F0C4D0AC0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","comment_is_top":false,"comment_ctime":1607005795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607005795","product_id":100020801,"comment_content":"mariadb的next-key lock是不是前闭后闭区间的？","like_count":0},{"had_liked":false,"id":263586,"user_name":"RedWallGUO","can_delete":false,"product_type":"c1","uid":2250984,"ip_address":"","ucode":"96BECA3717F5D6","user_header":"https://static001.geekbang.org/account/avatar/00/22/58/e8/ee40e86e.jpg","comment_is_top":false,"comment_ctime":1606190333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606190333","product_id":100020801,"comment_content":"老师您好。案例5：id&lt;=15, 不是应该满足优化1么？退化成行锁？如果不是的话，那么案例3中的id&gt;=10又怎么能变成行锁呢？？","like_count":0},{"had_liked":false,"id":263581,"user_name":"RedWallGUO","can_delete":false,"product_type":"c1","uid":2250984,"ip_address":"","ucode":"96BECA3717F5D6","user_header":"https://static001.geekbang.org/account/avatar/00/22/58/e8/ee40e86e.jpg","comment_is_top":false,"comment_ctime":1606189037,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606189037","product_id":100020801,"comment_content":"老师，您好。MySQL 8.0.21版本中，RR隔离界别下，案例三：主键索引范围锁，的Session C 执行update t set d = d+1 where id = 15没有阻塞。是版本的原因？","like_count":0},{"had_liked":false,"id":262684,"user_name":"t-mac","can_delete":false,"product_type":"c1","uid":1477630,"ip_address":"","ucode":"F648100D8D7C8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/fe/f2b2ae63.jpg","comment_is_top":false,"comment_ctime":1605801623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605801623","product_id":100020801,"comment_content":"老师这里只讲了加锁的规则，如果可以讲解为什么是这样的规则，可能大家理解的会更深入些","like_count":0},{"had_liked":false,"id":260402,"user_name":"ClassNotFound","can_delete":false,"product_type":"c1","uid":2030687,"ip_address":"","ucode":"F57194D1284585","user_header":"https://static001.geekbang.org/account/avatar/00/1e/fc/5f/4b7afeee.jpg","comment_is_top":false,"comment_ctime":1604998811,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604998811","product_id":100020801,"comment_content":"到了next-key lock这里当时看了老师的文字，真的有点懵，并不是老师的文字表达的不好，而是这方面用文字表达出来很难表达。<br><br>后来我是怎么理解的呢？看图理解，看图理解，看图理解（重要的事情说三遍）其实只要明白next-key lock 是行锁 + gap锁，","like_count":0},{"had_liked":false,"id":258189,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":1796510,"ip_address":"","ucode":"C23E3390995D95","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKo5jCPQW87sFySwXiaLxibak0qQYuFRTyy8RlNsO9JDyxBk1AYDrsphRskxzXPLPOW8ibWicWlRAnzwg/132","comment_is_top":false,"comment_ctime":1604322589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604322589","product_id":100020801,"comment_content":"老师你好，有一点不明白，案例四中，C=10时这个等值查询时刻，由于C是普通索引，所以无法走优化1，但是为什么不能走优化2呢？是不是优化规则只对唯一索引有效呢","like_count":0},{"had_liked":false,"id":256500,"user_name":"Geek_1968cf","can_delete":false,"product_type":"c1","uid":2224546,"ip_address":"","ucode":"1839F5CD2CCD63","user_header":"","comment_is_top":false,"comment_ctime":1603639606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603639606","product_id":100020801,"comment_content":"有个疑问，‘’同时根据优化 2，这是一个等值查询 (id=7)，而 id=10 不满足查询条件，next-key lock 退化成间隙锁，因此最终加锁的范围是 (5,10)。‘’ 这句话中的退化成间隙锁，是指先加next-lock锁再释放行锁。还是说不会有先加后释放的过程，直接加的gap锁？","like_count":0},{"had_liked":false,"id":255929,"user_name":"konh","can_delete":false,"product_type":"c1","uid":1275980,"ip_address":"","ucode":"1CAD0D67067CC1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoicSMibHxGmeNXCLAnB6S7icPh814icIsw7VZ5vYzLOyKKUJYmFC5WGPekH5qI7rRbH3n4Y2obiaKlBTQ/132","comment_is_top":false,"comment_ctime":1603459036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603459036","product_id":100020801,"comment_content":"老师，您好。<br>关于 案例四：非唯一索引范围锁。有个问题不得其解。<br>session C  的更新 update t set d = d + 1 where c=15; 会被阻塞住。因为（5，15] 被锁住了。<br>但是如果改成 update t set d = d + 1 where id=15;却能更新成功，这是为什么呢？按理来说，session A 是 for update ，那主键索引的（5,15] 的应该被锁住吧？但是 id=10&#47;15却都能更新成功<br><br><br>","like_count":0},{"had_liked":false,"id":254503,"user_name":"大饶Raysir","can_delete":false,"product_type":"c1","uid":1589208,"ip_address":"","ucode":"0AFA191420A30D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITcwicqBDYzXtLibUtian172tPs7rJpqG1Vab4oGjnguA9ziaYjDCILSGaS6qRiakvRdUEhdmSG0BGPKw/132","comment_is_top":false,"comment_ctime":1603120575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603120575","product_id":100020801,"comment_content":"最棒的专栏了！","like_count":0},{"had_liked":false,"id":254465,"user_name":"大饶Raysir","can_delete":false,"product_type":"c1","uid":1589208,"ip_address":"","ucode":"0AFA191420A30D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITcwicqBDYzXtLibUtian172tPs7rJpqG1Vab4oGjnguA9ziaYjDCILSGaS6qRiakvRdUEhdmSG0BGPKw/132","comment_is_top":false,"comment_ctime":1603118707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603118707","product_id":100020801,"comment_content":"干货满满，扫清了一堆知识盲点，太给力了！","like_count":0},{"had_liked":false,"id":253558,"user_name":"蜉蝣","can_delete":false,"product_type":"c1","uid":1229070,"ip_address":"","ucode":"77CF92496855D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/0e/2b987d54.jpg","comment_is_top":false,"comment_ctime":1602775601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602775601","product_id":100020801,"comment_content":"老师好，不太明白案例3中 id&gt;=10 and id&lt;11 中的 id=10 是等值查询，因此退化为行锁；而案例5中的 id&gt;10 and id&lt;=15 中的 id=15 因为是范围查询就没有退化为行锁，所以锁住了 (10, 15]。请问范围查询和等值查询应该如何理解？","like_count":0},{"had_liked":false,"id":253367,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1602720709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602720709","product_id":100020801,"comment_content":"老师，您好，是不是只要主键上加锁，其他事务就不能修改该行的所有字段呢？但如果只锁覆盖索引，就可以修改其他字段（不能修改主键）","like_count":0},{"had_liked":false,"id":252282,"user_name":"左琪","can_delete":false,"product_type":"c1","uid":1468773,"ip_address":"","ucode":"6B797070168A12","user_header":"https://static001.geekbang.org/account/avatar/00/16/69/65/eb778125.jpg","comment_is_top":false,"comment_ctime":1602222740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602222740","product_id":100020801,"comment_content":"我在sessionA 执行<br>begin;<br>update  t set d=7 where c=7 ;因为c不存在,会锁住索引c的(5,10);<br>的确,sessionB 无法插入(8,8,8);<br>但是sessionC 却可以成功执行 update  t set d=7 where c=7 ","like_count":0},{"had_liked":false,"id":251737,"user_name":"涛","can_delete":false,"product_type":"c1","uid":1158168,"ip_address":"","ucode":"48C7BDB7AD650D","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/18/25ae9cf7.jpg","comment_is_top":false,"comment_ctime":1601818246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601818246","product_id":100020801,"comment_content":"但是同时这个符合优化 2：等值判断，向右遍历，最后一个值不满足 c=5 这个等值条件，因此退化成间隙锁 (5,10)。这里(5,10)没有理解到，求解释。","like_count":0},{"had_liked":false,"id":251725,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1601810208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601810208","product_id":100020801,"comment_content":"老师，关于案例二中，根据原则 2 ，只有访问到的对象才会加锁，这个查询使用覆盖索引，并不需要访问主键索引，所以主键索引上没有加任何锁。锁是加在主键上的吗，普通索引不会加锁吗？","like_count":0},{"had_liked":false,"id":251709,"user_name":"张卓","can_delete":false,"product_type":"c1","uid":1209049,"ip_address":"","ucode":"AD840AF264C32E","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/d9/488739d1.jpg","comment_is_top":false,"comment_ctime":1601803431,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601803431","product_id":100020801,"comment_content":"一个 bug：唯一索引上的范围查询会访问到不满足条件的第一个值为止。<br><br>我的版本是8.0.19，从现象上看已经修复了这个bug。<br>sessionA:<br>begin;<br>select * from t where id&gt;10 and id&lt;=15 for update;<br><br>sessionB:<br>insert into t values(16,16,16);<br>不会阻塞，成功执行；<br>update t set d=d+1 where id=20;<br>不会阻塞，成功执行；","like_count":0},{"had_liked":false,"id":251668,"user_name":"别问","can_delete":false,"product_type":"c1","uid":1500187,"ip_address":"","ucode":"B24480E6E5792B","user_header":"https://static001.geekbang.org/account/avatar/00/16/e4/1b/76d3b44c.jpg","comment_is_top":false,"comment_ctime":1601783748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601783748","product_id":100020801,"comment_content":"CREATE TABLE `b` (<br>  `a` int(11) NOT NULL,<br>  `b` int(11) DEFAULT NULL,<br>  `c` int(11) DEFAULT NULL,<br>  PRIMARY KEY (`a`),<br>  UNIQUE KEY `idx_b` (`b`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br><br>insert(1,1,1);<br>insert(3,3,3);<br>insert(5,5,5);<br>insert(10,10,10);<br>insert(15,15,15);<br><br>session 1:<br>begin;<br>select * from b where b &gt;= 10 for update;<br>commit;<br>根据您的优化1我计算以上语句对b索引的加锁范围为[10],(10,15],(15,+], 对主键索引为[10],[15]<br>session 2:<br>insert(9,9,9); -- 被阻塞,请问这是为什么呢<br>当把session 1 的 b&gt;= 10 改成 a &gt;= 10后,session 2就可以正常插入.<br>a是主键,b也是唯一索引,请问老师这是什么原因,我遗漏了什么知识点","like_count":0},{"had_liked":false,"id":250567,"user_name":"酸葡萄","can_delete":false,"product_type":"c1","uid":1154146,"ip_address":"","ucode":"9D059C4FB327C0","user_header":"https://static001.geekbang.org/account/avatar/00/11/9c/62/f625b2bb.jpg","comment_is_top":false,"comment_ctime":1601133607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601133607","product_id":100020801,"comment_content":"案例1：<br>session C:<br>修改id=9也是可以的，间隙锁不起作用了吗？<br>测试发现update t set d=d+1 where id = 5&#47;7&#47;8&#47;10;都可以执行成功，不会阻塞。<br>所以猜测锁是加在索引上的，d不是索引，所以可以修改。<br><br>继续实验：<br>update t set id=id+1 where id =7;<br>发现也可以执行，是不是因为数据库中没有id=7这个记录？<br>update t set id=id+1 where id =5;阻塞了，为什么？行锁？","like_count":0},{"had_liked":false,"id":249650,"user_name":"pedestrian","can_delete":false,"product_type":"c1","uid":1484461,"ip_address":"","ucode":"5A5B9AEA0781F0","user_header":"https://static001.geekbang.org/account/avatar/00/16/a6/ad/41b6e0be.jpg","comment_is_top":false,"comment_ctime":1600741596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600741596","product_id":100020801,"comment_content":"没看懂案例五，next-key lock不是前开后闭原则吗，（15,20】 不包括20，怎么还会把seesionB里的update锁住呢","like_count":0},{"had_liked":false,"id":244996,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1598776902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598776902","product_id":100020801,"comment_content":"感觉少讲了一部分，所有的修改操作都会涉及到更新索引 和 表数据（即主键索引）。目前只重点讲了索引如何加锁，没有讲此时主键索引上是如何加锁的。即使更新或插入的数据没有被索引的间隙阻塞，也有可能被主键上的间隙所阻塞。这也所有的update 例句中，都写成了 update t set d=d+1 where xxx = xxx。","like_count":0},{"had_liked":false,"id":242450,"user_name":"啸疯","can_delete":false,"product_type":"c1","uid":1104225,"ip_address":"","ucode":"24792660595DA1","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/61/4999fbc3.jpg","comment_is_top":false,"comment_ctime":1597731557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597731557","product_id":100020801,"comment_content":"我本地的版本，正好比老师的新，所以做几点补充：<br>1 对于唯一索引，如果是对于已经存在记录的等值查询，则退化为简单的行锁；如果是不存在记录的等值查询，则会加next-key lock，并且左开右开。<br>2 对于非唯一索引，如果是对于已经存在记录的等值查询，则会以给定值为中心，前后加next-key lock，且左开右闭，访问范围内都加锁；如果是对于不存在记录的等值查询，则以给定值为中心，向前后寻找加next-key lock，同样是左开右闭。<br>3 对于范围查询，均按照查找范围，加next-key lock","like_count":0},{"had_liked":false,"id":235768,"user_name":"zapup","can_delete":false,"product_type":"c1","uid":1397351,"ip_address":"","ucode":"388D6BB5D7B137","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/67/fcba0967.jpg","comment_is_top":false,"comment_ctime":1595179665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595179665","product_id":100020801,"comment_content":"这篇怎么赞都不为过，看了一晚上，快哉快哉！<br><br>边学边通过 sys.innodb_lock_waits 查看在哪个索引加了锁 locked_index、谁在挡路 blocking_lock_mode、挡着谁的路 waiting_lock_mode。<br>同时对案例三、四、五有个疑问：命名有间隙锁 GAP，为何 blocking_lock_mode 只有 X&#47;S？<br>直到案例八的死锁例子提到可以分开 next-key lock 为 X&#47;S + GAP，就能理解上述问题了。<br><br>大胆猜想，next-key lock 只是概念上锁模式（根据原则1要加就捆绑 (X&#47;S + GAP) 一起加，外部感觉是一个整体），但存储引擎只认行锁与间隙锁，请问老师，能这么理解吗（未看源码...）？","like_count":0},{"had_liked":false,"id":235363,"user_name":"Geek_2ac804","can_delete":false,"product_type":"c1","uid":1518795,"ip_address":"","ucode":"EDF69B20030BB8","user_header":"","comment_is_top":false,"comment_ctime":1594984035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594984035","product_id":100020801,"comment_content":"老师，你好，我想问下案例一中，事务b插入数据会怎样，为啥要锁它？","like_count":0},{"had_liked":false,"id":234186,"user_name":"Geek_2ac804","can_delete":false,"product_type":"c1","uid":1518795,"ip_address":"","ucode":"EDF69B20030BB8","user_header":"","comment_is_top":false,"comment_ctime":1594613055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594613055","product_id":100020801,"comment_content":"老师，该如何理解事务中一致性这一特性呢？","like_count":0},{"had_liked":false,"id":233904,"user_name":"Geek_2ac804","can_delete":false,"product_type":"c1","uid":1518795,"ip_address":"","ucode":"EDF69B20030BB8","user_header":"","comment_is_top":false,"comment_ctime":1594513834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594513834","product_id":100020801,"comment_content":"有没有像事务可见性那边的总结，比较直观感受的，虽然根据这些选择和优化也能算出加锁，但有的没怎么想明白为什么会加锁，就是目前有方法能得到结论，但得到结论却想不明白为什么是这个结论","like_count":0},{"had_liked":false,"id":233889,"user_name":"Geek_db6a4b","can_delete":false,"product_type":"c1","uid":1903708,"ip_address":"","ucode":"E5992D1CF088C4","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0c/5c/b03b2cc1.jpg","comment_is_top":false,"comment_ctime":1594494626,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594494626","product_id":100020801,"comment_content":"老师，您好。有一个疑问：唯一索引的**范围查询**next-key lock 会退化为gap lock吗，这部分有些迷惑<br>文中优化二说唯一索引的等值查询会退化成间隙锁，不过范围查询我还是没明白具体规则。<br>（您的案例三中范围查询的结果是临建锁没有退化成间隙锁，但是上篇文章中@薛畅 的实验结果是退化成间隙锁的，也得到了您的肯定）","like_count":0,"discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301857,"discussion_content":"在mysql 8.23中测试，session c 可以更新，感觉是 next-key lock:(10,15]，退化为间隙锁(10,15)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598687070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233883,"user_name":"Geek_66a431","can_delete":false,"product_type":"c1","uid":1484706,"ip_address":"","ucode":"D8941CA3BE8457","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gIE15oOl1IicE8hicpPzuoARricgaL3y4nHDXaFCPX0U3UX3szgtrKCa4zCPc5GkdpceP0mftbJg3MdKHOLJOKJww/132","comment_is_top":false,"comment_ctime":1594489660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594489660","product_id":100020801,"comment_content":"老师好 ， 不使用gap锁会导致binlog不一致， 但是gap锁只有rr才有效， 难道rc以下的binlog可能出问题的么？","like_count":0},{"had_liked":false,"id":233186,"user_name":"dawn","can_delete":false,"product_type":"c1","uid":1384866,"ip_address":"","ucode":"40CEAC0FD6567C","user_header":"https://static001.geekbang.org/account/avatar/00/15/21/a2/280e29ff.jpg","comment_is_top":false,"comment_ctime":1594256766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594256766","product_id":100020801,"comment_content":"请问下老师，单纯的insert语句是如何加锁的呢？","like_count":0},{"had_liked":false,"id":230139,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1593272878,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1593272878","product_id":100020801,"comment_content":"不明白，加next-可以锁的时候，那个前开后闭的区间是怎么确定的。比如：<br>select * from t where c&gt;=10 and c &lt; 11 for update<br> 为什么第一次用 c=10 定位记录的时候，索引 c 上加了 (5,10]这个 next-key lock，这个5是怎么确定的。为什么是（5，10]","like_count":0,"discussions":[{"author":{"id":1657055,"avatar":"https://static001.geekbang.org/account/avatar/00/19/48/df/5359b4fc.jpg","nickname":"雨落本无晴","note":"","ucode":"E64A60649544B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329004,"discussion_content":"从next-key lock来看，10 属于(5,10] 这个区间","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606296157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229105,"user_name":"dawn","can_delete":false,"product_type":"c1","uid":1384866,"ip_address":"","ucode":"40CEAC0FD6567C","user_header":"https://static001.geekbang.org/account/avatar/00/15/21/a2/280e29ff.jpg","comment_is_top":false,"comment_ctime":1592897921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592897921","product_id":100020801,"comment_content":"老师好，有个疑问，案例五我试了下，事务b和c并没有阻塞，我的隔离级别没问题，间隙锁是开启的，不知道是什么原因呢","like_count":0},{"had_liked":false,"id":226845,"user_name":"图灵机","can_delete":false,"product_type":"c1","uid":2034632,"ip_address":"","ucode":"EB02DB653AD591","user_header":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","comment_is_top":false,"comment_ctime":1592214752,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592214752","product_id":100020801,"comment_content":"三观尽毁","like_count":0},{"had_liked":false,"id":226010,"user_name":"慕高迪","can_delete":false,"product_type":"c1","uid":1448126,"ip_address":"","ucode":"EB1CB5EA4E3A90","user_header":"https://static001.geekbang.org/account/avatar/00/16/18/be/ad3127e0.jpg","comment_is_top":false,"comment_ctime":1591928381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591928381","product_id":100020801,"comment_content":"大佬好，对于范围查询。我是这样理解的，不知道对不对？ c&gt;=15 and c &lt;=20，order by c desc 。首先查找c=20的行，此时会加锁 ( 15,20 ] 和 ( 20 , 25 ) 。然后由于是按照c倒叙，所有会以此向左扫描，直到找到第一个小于15的值为止，也就是10，此时会加锁  ( 5, 10 ] , 但是由于10不满足规则，所以就是（5,10）的间隙锁，所以整个加锁范围是( 5 , 10 ) ( 10 , 25 )；如果按照是c正序的话就是( 10, 25 )；","like_count":0},{"had_liked":false,"id":225050,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1684113,"ip_address":"","ucode":"27019747CA63FF","user_header":"https://static001.geekbang.org/account/avatar/00/19/b2/91/fbc34225.jpg","comment_is_top":false,"comment_ctime":1591624945,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591624945","product_id":100020801,"comment_content":"请求老师解答<br>问题是：对普通索引的范围查询锁问题<br>复现过程：<br>SESSION A：<br>begin；<br>select * from t where c&gt;=10 and c&lt;22 for update;<br><br>SESSION B：<br>insert into t values (26,2,6,26); <br><br>表现：SESSION B被锁<br><br>疑惑：按照我的理解，c是普通索引，只需要锁住c （5，25] 就行了，为什么26也会被锁","like_count":0},{"had_liked":false,"id":224996,"user_name":"lant","can_delete":false,"product_type":"c1","uid":1083330,"ip_address":"","ucode":"FD3FD13E14DD24","user_header":"","comment_is_top":false,"comment_ctime":1591611534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591611534","product_id":100020801,"comment_content":"案例四 好像有些问题:<br>session A 的 select * from t where c&gt;=10 and c &lt; 11 for update;<br>这个sql是 select*, 所以会走聚簇索引吧 ?<br>经过测试  update t set d=d+1 where id=10;是会被阻塞的，而 update t set d=d+1 where id=15; 不会被阻塞","like_count":0},{"had_liked":false,"id":224305,"user_name":"Geek_a8be59","can_delete":false,"product_type":"c1","uid":1563985,"ip_address":"","ucode":"BEC0F57B51DC44","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","comment_is_top":false,"comment_ctime":1591341384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591341384","product_id":100020801,"comment_content":"CREATE TABLE `t` (<br>  `id` int(10) NOT NULL AUTO_INCREMENT,<br>  `a` int(10) DEFAULT NULL,<br>  `b` int(10) DEFAULT NULL,<br>  `c` int(10) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `idx_a_b` (`a`,`b`),<br>  KEY `idx_c` (`c`)<br>) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;<br>(0,0,0,0) (5,5,5,5)(10,10,10,10)(15,15,15,15)(20,20,20,20)<br>session A:<br>begin<br>select id from t where c=15 for update;<br><br>sessionB<br>select * from t where id = 15<br><br>根据原则2只有访问到的才会加锁，但是这里用了覆盖索引，为什么还会锁住id=15这行呢。 改成lock in share mode 就不锁住","like_count":0},{"had_liked":false,"id":220138,"user_name":"lg","can_delete":false,"product_type":"c1","uid":1995387,"ip_address":"","ucode":"2878AA634860ED","user_header":"","comment_is_top":false,"comment_ctime":1590168219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590168219","product_id":100020801,"comment_content":"老师您好,我理解间隙锁是主键之间存在间隙时(比如1-5)会加入间隙锁,如果主键使用UUID时,还会存在间隙锁吗","like_count":0},{"had_liked":false,"id":220021,"user_name":"xinnong","can_delete":false,"product_type":"c1","uid":1005415,"ip_address":"","ucode":"3C1F1EB93FBA5B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/67/01d1580f.jpg","comment_is_top":false,"comment_ctime":1590136740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590136740","product_id":100020801,"comment_content":"案例二的session c如果执行insert into t(id,c,d) values(111,0,0);为什么也会block呢？锁的范围的左侧的0不是开区间么？","like_count":0},{"had_liked":false,"id":219986,"user_name":"xinnong","can_delete":false,"product_type":"c1","uid":1005415,"ip_address":"","ucode":"3C1F1EB93FBA5B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/67/01d1580f.jpg","comment_is_top":false,"comment_ctime":1590131789,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590131789","product_id":100020801,"comment_content":"针对案例二，如果没有c=5这行数据，<br>session A:<br>begin;<br>select id from t where c=5 lock in share mode;<br><br>session B：<br>begin;<br>insert into t values(102,0,10); -- 为什么这里会等待锁。<br><br>我的理解：<br>表 t 中没有 c=5 的记录，根据原则 1，<br>加锁单位是 next-key lock，session A 加锁范围就是 (0,10]；<br>根据优化2，next-key lock 退化成间隙锁，因此最终加锁的范围是 (0,10)。<br>我的问题：<br>为什么session B中执行insert into t values(102,0,10);时会等待锁呢？","like_count":0,"discussions":[{"author":{"id":1238436,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e5/a4/e16dca6a.jpg","nickname":"阿凯文","note":"","ucode":"F17CF201E74849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283552,"discussion_content":"我猜是c=0，id=102在锁（0.10）的下限c=0，id=0的右边，即在锁范围内","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592294747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218477,"user_name":"Justdo","can_delete":false,"product_type":"c1","uid":1525734,"ip_address":"","ucode":"DA36A57DE6CEF2","user_header":"https://static001.geekbang.org/account/avatar/00/17/47/e6/6f63cb13.jpg","comment_is_top":false,"comment_ctime":1589807033,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589807033","product_id":100020801,"comment_content":"老师，关于案例二，我想问下，最终锁的范围是什么？另外，分析中的前两点，是该取并集，还是交集？或者怎么理解能成为最终的答案？烦请您不忙时帮忙解答下，或者有知道的小伙伴，也辛苦指教，谢谢","like_count":0},{"had_liked":false,"id":218316,"user_name":"ppd0705","can_delete":false,"product_type":"c1","uid":1155646,"ip_address":"","ucode":"EB63D4E3FD1E9A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","comment_is_top":false,"comment_ctime":1589778292,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589778292","product_id":100020801,"comment_content":"求助：案例四好像 id索引10那一行没有锁住？执行 `update t set d=d+1 where id=10;` 没有阻塞","like_count":0,"discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301865,"discussion_content":"Update t set d=d+1 where id =15; 可以执行，但 Update t set d=d+1 where id =10; 阻塞了，被行锁 x 阻塞。运行环境：MySQL8.0.21","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598689457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217820,"user_name":"董健","can_delete":false,"product_type":"c1","uid":1666894,"ip_address":"","ucode":"6364F0FBAEC102","user_header":"https://static001.geekbang.org/account/avatar/00/19/6f/4e/b9ef15bf.jpg","comment_is_top":false,"comment_ctime":1589620448,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589620448","product_id":100020801,"comment_content":"范围查询为什么不会用到优化2呢？不清楚会引起什么问题","like_count":0},{"had_liked":false,"id":215844,"user_name":"kyle","can_delete":false,"product_type":"c1","uid":1444674,"ip_address":"","ucode":"91B332A30CB3EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8xaOJxaYJJm7ic4jXiaiaLDHfhmYpUVSVDPQFtq1bUzuXNj8WGeticicNnicBnwRfYgphG9JicxKITZeYBIoPrjymUWzA/132","comment_is_top":false,"comment_ctime":1589116790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589116790","product_id":100020801,"comment_content":"林老师，您好。我学习过程中遇到了一个例子的死锁情况不太理解，希望可以得到您的提点，下面是我对例子的分析与疑问：<br><br>create table my1(<br>sno int(11) NOT NULL DEFAULT &#39;0&#39;,<br>name int(11) DEFAULT null,<br>PRIMARY KEY(sno),<br>unique key idx (name)<br>) engine innodb;<br><br><br>1. 事务a执行begin; insert into my1 values(8,6); &#47;&#47; 事务a此时上隐式锁(intention gap lock) <br>2. 事务b执行begin; insert into my1 values(6,6); &#47;&#47; 事务b 的锁情况：lock mode S waiting #2 ，此时事务a的锁情况：lock_mode X locks rec but not gap #1<br>Record lock<br>3. 事务a执行insert into my1 values(7,5) &#47;&#47; 此时事务a的锁情况，lock_mode X locks gap before rec insert intention waiting #3 ，发生死锁<br><br><br>资料对死锁原因说明是：<br>判断#2和#3冲突了，一个是读一个是写。判断之后，会做一次死锁检查扫描，锁#3等待锁#2，锁#2此时正在等锁#1，而锁#3和锁#1所对应的事务都是事务2，这里出现了环和死锁<br><br>我的疑问：<br>1、都是插入语句为什么会需要上gap lock，平时认识到的gap lock都用于避免幻读，此处gao lock的作用是 ？<br>2、从死锁日志中看到#3 的锁情况：lock_mode X locks gap before rec insert intention waiting ，这句日志该如何解读？","like_count":0},{"had_liked":false,"id":212032,"user_name":"Mr_freezing37","can_delete":false,"product_type":"c1","uid":1061402,"ip_address":"","ucode":"BB605A6FEDCEB6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/y5NFbibdKCFCg0lHKK5ERGOQWXYYK7jhnqm2BxQ6r7tWvXx8uDmibglweejDWU39BTmDSAtBJGj1ibOZK2uIHQyqg/132","comment_is_top":false,"comment_ctime":1588049464,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1588049464","product_id":100020801,"comment_content":"关于案例四，我还是有点理解吃力。<br>文中案例二有讲到select for update锁过程，首先琐是先加在C索引树上的，再去主键索引树上把满足条件的行锁住。<br>结合案例四，已知C索引树上的next-key lock范围是（5，15]，由两个间隙锁(5, 10), (10,15)和两个行锁c=10，c=15构成。<br><br>为了验证，我在8.0.19环境做了文中sessionABC，结果相同。另外添加了两个例子<br>sessionD：update t set d=d+1 where id=10；<br>blocked<br>看起来满足c=10条件的行(10,10,10)被锁住了。<br><br>sessionE：update t set d=d+1 where id=15；<br>执行成功，看起来没有锁住满足c=15条件的行：(15,15,15)。<br><br>那回过头来，根据非唯一索引树上的next-key lock集合A，如何选择满足条件的记录行呢，还是说组建索引上也可能是一个next-key lock集合。<br>","like_count":0,"discussions":[{"author":{"id":1303914,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e5/6a/3c618346.jpg","nickname":"二桃杀三士","note":"","ucode":"5D7CAB540B0DF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297572,"discussion_content":"补充一点，将 c 换为 id，那依据规则，id=15 这一行的行锁就必须要加了，代码实现上是这样子的。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596973339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303914,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e5/6a/3c618346.jpg","nickname":"二桃杀三士","note":"","ucode":"5D7CAB540B0DF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297564,"discussion_content":"有位@双双的老哥提了个问题，我先复制下：\n\n-----------\n案例四：select * from t where c>=10 and c<11 for update;\n索引c上有两个next-key lock,(5,10]和(10,15]。那由于for update会给主键索引上满足条件的行加上行锁，这个满足条件的行是id=10这一行吧？满足条件是指查询结果么？\n\n作者回复: 在这个例子里，如果说“记录上的锁”，索引c上有c=10和c=15， 主键上有id=10。\n\n不是查询结果，而是 “查询过程中访问到的行和间隙”\n-----------\n\n\n那这么说的话，作者的意思是 查询过程中访问到的行和间隙，访问 c 索引树，访问到了 10、15，但 id=15 访问到了吗？没有。在《 高性能MySQL》第三版 p181 说了 InnoDB 只有在访问行的时候才会对其加锁，老师又补充了下说是“查询过程中访问到的行和间隙”。\n\n我们看下 优化 2：索引上的等值查询，向右遍历时且最后一个值不满足等值条件的时候，next-key lock 退化为间隙锁。这里我改一下描述出来，你看是否正确：“索引上的范围查询，向右遍历时且最后一个值不满足范围条件的时候，next-key lock 不会退化为间隙锁”。\n\n那么就说明要加 (10,15] next-key lock 是没有异议的，隐藏条件是 c=15 这一行是不满足条件的，只访问到了二级索引 c=15 这一个节点，就过滤掉了，不会给 id=15 这一行加上行锁，因为不会访问到的，而 id=10 会不会被访问到加上行锁呢？会的。以上是我的理解，有不对之处可以指出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596971112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211840,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1588029103,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588029103","product_id":100020801,"comment_content":"再加一个bug2 ： 对于&lt;=的范围查询，会升级为NKL，并且包含右侧最后一个值且不包含左侧最后一个值，参考案例5","like_count":0},{"had_liked":false,"id":211475,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1587969542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587969542","product_id":100020801,"comment_content":"麻烦问下 insert加了什么锁?","like_count":0},{"had_liked":false,"id":211399,"user_name":"杨战波","can_delete":false,"product_type":"c1","uid":1649157,"ip_address":"","ucode":"6C8395A5942828","user_header":"","comment_is_top":false,"comment_ctime":1587957858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587957858","product_id":100020801,"comment_content":"老师，我有个问题需要请教一下，oracle 数据库，大批量插入数据时，有时候会出现某个字段为空的情况（本应该有值的），老师觉得有可能有什么原因引起呢","like_count":0},{"had_liked":false,"id":211327,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1587949091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587949091","product_id":100020801,"comment_content":"有些时候可以锁定记录本身,有些时候不会锁定记录本身,如rl会锁定记录本身,而gap只会锁定范围避免插入,但gap内仍可以更新,这如何理解?","like_count":0},{"had_liked":false,"id":211078,"user_name":"bb","can_delete":false,"product_type":"c1","uid":1770466,"ip_address":"","ucode":"9E480BA11D4D89","user_header":"","comment_is_top":false,"comment_ctime":1587891708,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1587891708","product_id":100020801,"comment_content":"不管在不在这个区间都写不了","like_count":0,"discussions":[{"author":{"id":1770466,"avatar":"","nickname":"bb","note":"","ucode":"9E480BA11D4D89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248790,"discussion_content":"怎么c>10会全部扫描，是不是因为全表扫描导致都锁了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587896450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1770466,"avatar":"","nickname":"bb","note":"","ucode":"9E480BA11D4D89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248763,"discussion_content":"c是要索引的现在是，10到无穷大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587893937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1770466,"avatar":"","nickname":"bb","note":"","ucode":"9E480BA11D4D89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248760,"discussion_content":"为什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587893820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211069,"user_name":"bb","can_delete":false,"product_type":"c1","uid":1770466,"ip_address":"","ucode":"9E480BA11D4D89","user_header":"","comment_is_top":false,"comment_ctime":1587890989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587890989","product_id":100020801,"comment_content":"接上面问题我是select * from t where c &gt; 10 for update   MySQL5.7.22","like_count":0},{"had_liked":false,"id":211066,"user_name":"bb","can_delete":false,"product_type":"c1","uid":1770466,"ip_address":"","ucode":"9E480BA11D4D89","user_header":"","comment_is_top":false,"comment_ctime":1587890471,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587890471","product_id":100020801,"comment_content":"案例4，您是说(5,10】(10,15】但是我的环境做，写入小余5比如(3,3,3)也有锁。请问是我那里错了吗","like_count":0},{"had_liked":false,"id":207175,"user_name":"Tarn","can_delete":false,"product_type":"c1","uid":1112416,"ip_address":"","ucode":"A2717CB81DF84B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/60/8e0f0f17.jpg","comment_is_top":false,"comment_ctime":1587020643,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587020643","product_id":100020801,"comment_content":"老师，关于这一节课有一点疑问，如果条件语句是where d = xxx 的话，由于d上本身是没有索引的，但是根据老师说的锁一定是加在索引上，所以此时是不是会走主键索引？如果走主键索引的话，由于索引结构，d字段并不是连续的，那么此时是如何加的间隙锁呢？另一种情况，如果一个表中没有任何索引，那么还能加next key lock吗？求老师解答一下哈","like_count":0},{"had_liked":false,"id":204663,"user_name":"小跳蛙","can_delete":false,"product_type":"c1","uid":1210505,"ip_address":"","ucode":"6C4DADD8414F9D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLUz2nCCzSKibFJibtoAJXo2lP3tmeRUe2EqmQr4kYbCv5q4eexhfN3XicynSx5uZ5EREumRwZxqHjGw/132","comment_is_top":false,"comment_ctime":1586439020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586439020","product_id":100020801,"comment_content":"在业务中考虑并发是不是应该把涉及一个表的相关sql 罗列出来  然后看各个sql 数据的关系，想象并发执行根据锁知识进行sql涉及和优化？","like_count":0},{"had_liked":false,"id":192163,"user_name":"谢尊锦","can_delete":false,"product_type":"c1","uid":1627400,"ip_address":"","ucode":"C1A1050768ED48","user_header":"https://static001.geekbang.org/account/avatar/00/18/d5/08/1e35bb4d.jpg","comment_is_top":false,"comment_ctime":1584841588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584841588","product_id":100020801,"comment_content":"更新一行数据而已，为什么要锁那么多呢","like_count":0},{"had_liked":false,"id":190160,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1584608279,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1584608279","product_id":100020801,"comment_content":"感觉锁都是由这两个而起：for update 和 lock in share mode，一直想不明白，具体什么业务场景，需要手动加这两个锁，反正我没有加过。","like_count":0,"discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545229,"discussion_content":"需要当前读，而不是快照读时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641880323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210505,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLUz2nCCzSKibFJibtoAJXo2lP3tmeRUe2EqmQr4kYbCv5q4eexhfN3XicynSx5uZ5EREumRwZxqHjGw/132","nickname":"小跳蛙","note":"","ucode":"6C4DADD8414F9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226665,"discussion_content":"对，最重要是知道原理然后怎么应用到开发中让程序操作数据库又对又快\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586438726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185976,"user_name":"feixuefubing","can_delete":false,"product_type":"c1","uid":1252730,"ip_address":"","ucode":"5F139C180BC186","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlllSKrpQkhc9qLgtu4I4jc2FO9BJAbfgwz7meGCZqlmWsV3GfjqTecqpkTJMYpunxhKHSdc9gpQ/132","comment_is_top":false,"comment_ctime":1583735724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583735724","product_id":100020801,"comment_content":"老师您好，我不知道这算不算是一种bad case，麻烦您给看看：<br>首先我把您在21篇给出的建表语句，id改为了自增主键，因为这样更符合我公司实践中的情况。<br>(1,0,0),(5,5,5),(10,10,10),(15,15,15),(20,20,20),(25,25,25)<br>select max(id) from t = 25<br>-----------------------------------------------------------------------------------------<br>sessionA <br>begin;<br>select * from t where id&lt;=(select max(id) from t) order by id desc limit 1 for update;<br><br>sessionB<br>begin;<br>select * from t where id&lt;=(select max(id) from t) order by id desc limit 1 for update;<br>(blocked)<br><br>sessionA <br>insert into t values(null,30,30)<br>(deadlock)<br>-----------------------------------------------------------------------------------------<br>按照对您提出的加锁原则理解，由于select... for update中指定desc排序，则该主键范围查询由id=25的等值查询入手，按优化1退化为id=25的行锁，然后向左扫描，按原则1、2加锁；<br>所以，session A 这时候锁的范围就是主键索引上，行锁 id=25 和 next-key lock(-∞,20]，而没有(25,supremum)。<br>之后session B执行select... for update，由于行锁 id=25被session A持有而阻塞；<br>最后一步我的假设：session A执行自增主键的插入语句，判断(25,supremum)无gap锁，故成功获取插入意向锁，成功插入；<br>但实际上session A执行插入语句却发生了死锁，show engine innodb status显示(25,supremum)造成锁冲突。这是什么原因呢？<br>如果把场景中的select... for update替换为简单的select * from t where id=(select max(id) from t) for update;则session A能够插入成功。而sessionB阻塞结束（session A commit）查到的是id=25，这我能够理解是子查询的快照读导致。<br>令我感到困惑的是，order by xx desc语句一定会导致向左扫描吗？向左扫描我感觉理解上不是特别清楚。","like_count":0},{"had_liked":false,"id":184733,"user_name":"Ethan","can_delete":false,"product_type":"c1","uid":1276373,"ip_address":"","ucode":"016F1DEBA895B8","user_header":"https://static001.geekbang.org/account/avatar/00/13/79/d5/4a7971fc.jpg","comment_is_top":false,"comment_ctime":1583393016,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1583393016","product_id":100020801,"comment_content":"老师，关于案例五这句话，有些疑问：<br>session A 是一个范围查询，按照原则 1 的话，应该是索引 id 上只加 (10,15]这个 next-key lock<br><br><br>我的理解是，针对 Session A 的 select 语句，会找到第一个比 10 的值，是 15 没错。先加上 (10,15] next-key，但我觉得找到 15 的过程属于等值查询啊，而且 id 是唯一索引，所以应该退化成 id=15 的行锁。<br><br>按照老师的答案  (10,15]，说明找到 15 的过程是范围查找，也就说第一次查找不一定都是等值查询，也可以是范围查询？","like_count":0},{"had_liked":false,"id":182946,"user_name":"Bourne","can_delete":false,"product_type":"c1","uid":1311299,"ip_address":"","ucode":"1286279F70B13F","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/43/1c2fb7b3.jpg","comment_is_top":false,"comment_ctime":1582894602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582894602","product_id":100020801,"comment_content":"老师您好，请问能否帮我分析个死锁的问题，我分析了好久是在想不明白.....","like_count":0},{"had_liked":false,"id":182335,"user_name":"Zeke","can_delete":false,"product_type":"c1","uid":1117206,"ip_address":"","ucode":"312F5285BEFAEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/16/179e4fce.jpg","comment_is_top":false,"comment_ctime":1582769974,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1582769974","product_id":100020801,"comment_content":"如果存在外健呢，是不是就多了锁外健的操作？","like_count":0},{"had_liked":false,"id":181854,"user_name":"风吹树叶沙沙沙","can_delete":false,"product_type":"c1","uid":1012502,"ip_address":"","ucode":"219F91A66F3DCC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/16/d22fbfbe.jpg","comment_is_top":false,"comment_ctime":1582645598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582645598","product_id":100020801,"comment_content":"丁老师，我最近在复习加锁机制这块儿的内容的时候发现，“一个bug”这条好像可以扩展到所有的二级索引，不知道是不是对的，还请您指教下。<br><br>我在RU、RC和RR级别下分别做了下测试，结果都和唯一索引范围查询的加锁效果一致。<br><br>测试表如下：<br>CREATE TABLE hero (<br>    number INT,<br>    name VARCHAR(100),<br>    country varchar(100),<br>    PRIMARY KEY (number),<br>    KEY idx_name (name)<br>) Engine=InnoDB CHARSET=utf8;<br><br>测试数据如下：<br>INSERT INTO hero VALUES<br>    (1, &#39;l刘备&#39;, &#39;蜀&#39;),<br>    (3, &#39;z诸葛亮&#39;, &#39;蜀&#39;),<br>    (8, &#39;c曹操&#39;, &#39;魏&#39;),<br>    (15, &#39;x荀彧&#39;, &#39;魏&#39;),<br>    (20, &#39;s孙权&#39;, &#39;吴&#39;);<br><br>在事务一中先执行：<br>SELECT * FROM hero FORCE INDEX(idx_name) WHERE name &lt;= &#39;c曹操&#39; LOCK IN SHARE MODE;<br><br>然后在事务二中执行：<br>SELECT * FROM hero WHERE name = &#39;l刘备&#39; FOR UPDATE;<br><br>这个时候可以观察到事务二被阻塞。","like_count":0},{"had_liked":false,"id":181444,"user_name":"ipofss","can_delete":false,"product_type":"c1","uid":1018620,"ip_address":"","ucode":"DE3061C9259F9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","comment_is_top":false,"comment_ctime":1582541916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582541916","product_id":100020801,"comment_content":"看完一遍，云里雾里，就当有个印象，以后再碰见加锁的问题时，我就会首先想到老师的这篇文章，相信到时候看会更加深有体会。","like_count":0},{"had_liked":false,"id":178360,"user_name":"汝林外史","can_delete":false,"product_type":"c1","uid":1188906,"ip_address":"","ucode":"3C66C0F0537A99","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/2a/33441e2b.jpg","comment_is_top":false,"comment_ctime":1581669056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581669056","product_id":100020801,"comment_content":"老师，mysql的bug解决了  我的版本是8.0.19","like_count":0},{"had_liked":false,"id":172674,"user_name":"未来怎样","can_delete":false,"product_type":"c1","uid":1652085,"ip_address":"","ucode":"4E54EB62595B27","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","comment_is_top":false,"comment_ctime":1579249594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579249594","product_id":100020801,"comment_content":"醍醐灌顶！太厉害了老师！","like_count":0},{"had_liked":false,"id":171212,"user_name":"毛立凡","can_delete":false,"product_type":"c1","uid":1067251,"ip_address":"","ucode":"7B3BD84187D39D","user_header":"https://static001.geekbang.org/account/avatar/00/10/48/f3/e7f9a26b.jpg","comment_is_top":false,"comment_ctime":1578882264,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578882264","product_id":100020801,"comment_content":"老师好，我有个问题，翻了留言好像没有人问，我想问一下：<br><br>案例六中：<br>Session A的第二步“退化成 (c=10,id=10) 到 (c=15,id=15) 的间隙锁”，这一步究竟是<br>(c=10,id=10) 到 (c=10,id=30) 的next-key lock + (c=10,id=30) 到 (c=15,id=15) 的间隙锁  这两个锁的合并<br>还是<br>直接单个 (c=10,id=10) 到 (c=15,id=15) 的间隙锁？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164209,"discussion_content":"(c=10,id=10) 到 (c=10,id=30) 的next-key lock + (c=10,id=30) 到 (c=15,id=15) 的间隙锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581163123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167574,"user_name":"池深启","can_delete":false,"product_type":"c1","uid":1271967,"ip_address":"","ucode":"0FEF5B4E7E54E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/9f/f85305ac.jpg","comment_is_top":false,"comment_ctime":1577864469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577864469","product_id":100020801,"comment_content":"老师您好，打扰你了 我对next-key两步加锁存在点问题   之前自己业务场景发生了如下的死锁问题 但是我看了您的文章之后还是有点解释不通我的case，可能自己理解好有点问题。<br>RR模式下<br>CREATE TABLE t (<br>id int(11) NOT NULL,<br>c int(11) DEFAULT NULL,<br>d int(11) DEFAULT NULL,<br>PRIMARY KEY (id),<br>KEY c (c)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br><br>insert into t values(0,0,0),(5,5,5),(10,10,10),(15,15,15),(20,20,20),(25,25,25);<br><br>执行顺序<br>session 1<br>insert t values (9,9,9)[获取IX]<br>session 2<br>update t set d=9 where c=9 [给session1 上X锁，同时自己需要获取next-key,间隙锁获取成功，但是X锁获取失败进入锁等待]<br>session 1<br>update t set d=9 where c=9[需要获取next-key,间隙锁之间不冲突，间隙锁获取成功，但是X锁获取失败进入锁等待]<br>报发生死锁 session2回滚<br>疑问<br>明明session已经有X锁了 为什么session1的 update还会等待X锁造成死锁<br><br>死锁日志中也显示 session1 已经拥有X锁(lock_mode x locks but not gap)<br>但是等待next-key(lock_mode X) 间隙锁+X锁<br>这点很奇怪 因为按照next-key两步加锁  session1的insert已经获得X锁 然后session2的update操作获取next-key的时候获取间隙锁成功获取X锁失败  接着session1的update  获取间隙锁没有冲突可以获得 X锁讲道理session1的事物也已经获得应该可以成功获得next-key 为什么还存在获取next-key需要等待session2 ","like_count":0},{"had_liked":false,"id":167162,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1577703131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577703131","product_id":100020801,"comment_content":"有访问对象才可能会加next-key lock；等值时，唯一索引的锁退化为行锁，非唯一索引的锁退化为间隙锁；范围查询时，需要访问到第一个不满足的。","like_count":0},{"had_liked":false,"id":163323,"user_name":"信息技术部","can_delete":false,"product_type":"c1","uid":1722174,"ip_address":"","ucode":"08BCF19EB1357F","user_header":"","comment_is_top":false,"comment_ctime":1576685554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576685554","product_id":100020801,"comment_content":"老师，按照undifined同学的分析，二级索引树上的排序也会顺带考虑id的值吗？比如id=1,c=4会排在id=2,c=4的前面？","like_count":0},{"had_liked":false,"id":161959,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1576415017,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1576415017","product_id":100020801,"comment_content":"文章实验了两遍，评论看了2个小时，每一个问题都去按照自己学习到了实验验证一下，感觉理解通了，<br>舒服","like_count":0},{"had_liked":false,"id":160896,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1590953,"ip_address":"","ucode":"2C8A1FAB8B6301","user_header":"https://static001.geekbang.org/account/avatar/00/18/46/a9/70fa676f.jpg","comment_is_top":false,"comment_ctime":1576056086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576056086","product_id":100020801,"comment_content":"关于文中死锁示例死锁原因说法有不一样的意见，Next-key锁本身就是一个整体，加锁时是作为一个整体进行加锁，并非先加GAP然后再加记录锁，示例中死锁的原因是：事务2的更新，申请索引c记录10上的Next-key锁（LOCK_X | LOCK_ORDINARY|LOCK_REC）需要等待事务1在索引c记录10上的Next-key锁（LOCK_S | LOCK_ORDINARY | LOCK_REC），而之后事务1的insert需要申请插入意向锁（LOCK_X | LOCK_GAP | LOCK_INSERT_INTENTION）,与事务2申请的锁是冲突的，需要等待事务2，事务2虽然也在等待（在放入等待队列前还会在原有的锁模式打上LOCK_WAIT标记，表明该锁没有授予），但是在锁队列中在事务1申请的插入意向锁之前，因此判断死锁发生","like_count":0},{"had_liked":false,"id":159413,"user_name":"looper","can_delete":false,"product_type":"c1","uid":1238396,"ip_address":"","ucode":"DA4BCE83836C04","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/7c/2a5a418b.jpg","comment_is_top":false,"comment_ctime":1575617462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575617462","product_id":100020801,"comment_content":"专栏看到现在收获很大，有些知识点虽然懵懵懂懂，但是总算有了对mysql锁的整体认知，感谢老师！","like_count":0},{"had_liked":false,"id":159102,"user_name":"萝卜条","can_delete":false,"product_type":"c1","uid":1692713,"ip_address":"","ucode":"4BC975BBFE50A7","user_header":"https://static001.geekbang.org/account/avatar/00/19/d4/29/5f52a82c.jpg","comment_is_top":false,"comment_ctime":1575538370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575538370","product_id":100020801,"comment_content":"案例三：主键索引范围锁<br>mysql8<br>插入数据时，看间隙锁确实是10-15<br>但是update只id=10阻塞，图示并不会阻塞。","like_count":0},{"had_liked":false,"id":158553,"user_name":"婉约的冰西瓜","can_delete":false,"product_type":"c1","uid":1285478,"ip_address":"","ucode":"8BA2D933D1BE82","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXgjPOkuSIIhkeWcIeAWO2FjLHjNdsAca4icjjZcfPMguSEdaUibkj123Ijr8c1j3yER6W0M6wKEmw/132","comment_is_top":false,"comment_ctime":1575418357,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1575418357","product_id":100020801,"comment_content":"老师，有一个疑问，本文中的案例二，sessionA中，为什么查询语句也要加锁？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164228,"discussion_content":"可能用来更清晰的讲解锁的机制吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581164230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153532,"user_name":"jian","can_delete":false,"product_type":"c1","uid":1185102,"ip_address":"","ucode":"21CDBBB8000F0C","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/4e/4636a81d.jpg","comment_is_top":false,"comment_ctime":1574254178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574254178","product_id":100020801,"comment_content":"老师，请问案例六中，session A执行“delete from t where c=10;”，为什么session B 执行“insert into t values(40,15,40);”。 (c=5,id=50)是在这个gap里？ 恳请解答，谢谢！","like_count":0},{"had_liked":false,"id":152506,"user_name":"菜鸡程序员","can_delete":false,"product_type":"c1","uid":1308074,"ip_address":"","ucode":"F1DFEC2343FE25","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/aa/5d520017.jpg","comment_is_top":false,"comment_ctime":1574037680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574037680","product_id":100020801,"comment_content":"我觉得那个bug不算bug，如果把id=15的那一行id换为id=14，那么他便利到14，还会向后便利到20，因为代码并不知道15是否这个范围的最后一个值，或者因为考虑到判断唯一索引是否是范围最后一个值而带来的性能损耗，所以没有加这个判断。只是我个人的想法","like_count":0},{"had_liked":false,"id":147791,"user_name":"Chan","can_delete":false,"product_type":"c1","uid":1158920,"ip_address":"","ucode":"8A7151A7E3F5D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/08/49416831.jpg","comment_is_top":false,"comment_ctime":1572890028,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572890028","product_id":100020801,"comment_content":"当有多个where条件时，mysql会选择哪个索引加上next-key lock，查了一些资料对这个都没有说明。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164230,"discussion_content":"innodb会根据扫描行数最少的索引来选择。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581164291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145023,"user_name":"介倒霉孩子","can_delete":false,"product_type":"c1","uid":1576446,"ip_address":"","ucode":"1E670FC070774C","user_header":"https://static001.geekbang.org/account/avatar/00/18/0d/fe/a7769bce.jpg","comment_is_top":false,"comment_ctime":1572163443,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1572163443","product_id":100020801,"comment_content":"老师，我想问一下： lock in share mode 和 for update 这两种加锁方式在效果上有什么区别? 分别适用于什么场景？因为我感觉两种方式都是给访问到的对象加上了next -key lock, 虽然前者是读锁，后者是写锁，但是感觉实际效果区别不大，貌似都是其它事务可以读，但是不可以写。","like_count":0,"discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545230,"discussion_content":"事物1对某一行加了s锁， 事物2可以继续对这行加s锁， 但不能加x锁。 如果事物1某行加了x锁，那么事物2，x锁和s锁都不能加","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641880888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164231,"discussion_content":"lock in share mode读锁\nfor update写锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581164325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144618,"user_name":"Jayden 王凯豪","can_delete":false,"product_type":"c1","uid":1592236,"ip_address":"","ucode":"6CAADB9B449892","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/ac/2a48928f.jpg","comment_is_top":false,"comment_ctime":1571981755,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571981755","product_id":100020801,"comment_content":"老师 现在MySQL版本已经是8.0.18了，请问bug解决了吗？","like_count":0,"discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83052,"discussion_content":"试一下就知道了啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576413468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144295,"user_name":"三丰","can_delete":false,"product_type":"c1","uid":1310187,"ip_address":"","ucode":"CA69A069D3061D","user_header":"","comment_is_top":false,"comment_ctime":1571889355,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1571889355","product_id":100020801,"comment_content":"为什么我的不堵塞呢？<br>mysql&gt; select version();<br>+---------------+<br>| version()     |<br>+---------------+<br>| 5.7.27-30-log |<br>+---------------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; show variables like &#39;tx_isolation&#39;;<br>+---------------+-----------------+<br>| Variable_name | Value           |<br>+---------------+-----------------+<br>| tx_isolation  | REPEATABLE-READ |<br>+---------------+-----------------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br><br>session A<br>mysql&gt; <br>mysql&gt; select * from t where c&gt;15 and c&lt;=20 order by c desc for update;<br>+----+------+------+<br>| id | c    | d    |<br>+----+------+------+<br>| 20 |   20 |   20 |<br>+----+------+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; <br><br>然后做sessionB：<br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; insert into t values(6,6,6);<br>Query OK, 1 row affected (0.00 sec)<br><br>mysql&gt; show variables like &#39;tx_isolation&#39;;<br>+---------------+-----------------+<br>| Variable_name | Value           |<br>+---------------+-----------------+<br>| tx_isolation  | REPEATABLE-READ |<br>+---------------+-----------------+<br>1 row in set (0.01 sec)<br><br><br>居然一下数据就插入了，并没有堵塞？","like_count":0,"discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83071,"discussion_content":"我亲自实验了一下， 5.7.27  版本也是阻塞的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576414420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1487346,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b1/f2/3bcc1fad.jpg","nickname":"Caesar Yang","note":"","ucode":"359561CC3B04B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45365,"discussion_content":"文章开头说了  加锁规则在5.x-5.7.24之前有效  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573028501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143959,"user_name":"云里雾花","can_delete":false,"product_type":"c1","uid":1232383,"ip_address":"","ucode":"98D8E75D1B2B39","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/ff/b7690816.jpg","comment_is_top":false,"comment_ctime":1571814914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571814914","product_id":100020801,"comment_content":"在案例四的情况下，<br>session1:<br>BEGIN;<br>select * from t where c&gt;=10 and c&lt;11 for update ;<br>分析在c的索引间隙锁区间是（5,10],(10,15].<br>session2:<br>update t set d=d+1 where c =5;<br>实验插入是阻塞的。这里的c的值是5,应该是不阻塞的。不知道是不是数据库版本问题，还是我理解有问题。<br>","like_count":0},{"had_liked":false,"id":139662,"user_name":"Lesson","can_delete":false,"product_type":"c1","uid":1181001,"ip_address":"","ucode":"117DEBAFC45BF4","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/49/c697b868.jpg","comment_is_top":false,"comment_ctime":1570700472,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570700472","product_id":100020801,"comment_content":"老师 可以介绍下 Insert的时候 获取了什么锁嘛","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164236,"discussion_content":"行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581164478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136933,"user_name":"嘉兴","can_delete":false,"product_type":"c1","uid":1554570,"ip_address":"","ucode":"6997E7A3E25EE4","user_header":"https://static001.geekbang.org/account/avatar/00/17/b8/8a/7367a69e.jpg","comment_is_top":false,"comment_ctime":1569555995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569555995","product_id":100020801,"comment_content":"-- T1 事务A<br>begin;<br>select * from c20 where id&gt;=15 and id&lt;=20 order by id desc lock in share mode;<br><br>-- T2 事务B<br>begin;<br>update c20 set d=d+1 where id=25;\t-- OK<br>insert into c20 values(21,21,21);\t-- 阻塞<br><br>不能理解, 为什么事务A执行的语句会给 间隙(20,25) 加上锁.<br>通过 show engine innodb status; 查看发现事务A确实持有上述间隙锁.<br>通过 explain select * from c20 where id&gt;=15 and id&lt;=20 order by id desc lock in share mode; 查看 Extra 也没有 filesort, key=PRIMARY, 因此个人认为是按照主键索引向左遍历得到结果.<br><br>按照我的理解, 由于 `order by id desc` , 因此首先是在主键索引上搜索 id=20, 同时由于主键索引上这个值是唯一的, 因此不必向右遍历. 然而事实上它确实这么做了, 这让我想到了 BUG1: 主键索引上的范围查询会遍历到不满足条件的第一个.<br>但是这一步的搜索过程应该是等值查询才对, 完全一脸懵住了...<br>不知道老师现在还能看到这条评论不?","like_count":0},{"had_liked":false,"id":135459,"user_name":"商瞿逆","can_delete":false,"product_type":"c1","uid":1142674,"ip_address":"","ucode":"FA9522CEDA5635","user_header":"https://static001.geekbang.org/account/avatar/00/11/6f/92/535160b0.jpg","comment_is_top":false,"comment_ctime":1569168694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569168694","product_id":100020801,"comment_content":"老师好<br>我发现对于规则中说的那个bug，即使不是唯一索引，普通索引也存在这个问题，即把案例五里的条件从id换成c，session B和C也是一样被block的","like_count":0},{"had_liked":false,"id":131174,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1567660915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567660915","product_id":100020801,"comment_content":"丁老师好!<br>如果在RR级别下，尽可能使用主键对数据进行更新是么?如果通过外键进行更新会加间隙锁，间隙锁锁的多容易死锁是么?","like_count":0},{"had_liked":false,"id":131172,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1567660693,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1567660693","product_id":100020801,"comment_content":"老师好!我有个问题，第二条原则用到的对象才会加锁。<br>如果通过主键索引进行查询操作。对应的普通索引会加锁么?","like_count":0,"discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9045,"discussion_content":"不会，1.主键上有全部信息了，没必要再倒回去往普通索引上加锁，否则mysql就太笨了。 2.我做了实验...（1）SELECT * FROM t WHERE id>=15 AND id <=20 FOR UPDATE；（2）SELECT c FROM t WHERE c = 15 LOCK IN SHARE MODE;...第2个SQL不会阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568125770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9341,"discussion_content":"x谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568158050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":9045,"ip_address":""},"score":9341,"extra":""}]}]},{"had_liked":false,"id":131052,"user_name":"lzh","can_delete":false,"product_type":"c1","uid":1336951,"ip_address":"","ucode":"C3D83DF4230109","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","comment_is_top":false,"comment_ctime":1567610601,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567610601","product_id":100020801,"comment_content":"老师，我想问问案例4：<br>mysql&gt; select * from t where c&gt;=10 and c&lt;11 for update;<br><br>当范围查询有两个条件时，那上锁都符合这节课总结的规律<br><br>但是去掉其中一个条件，如：<br>mysql&gt;begin;<br>mysql&gt; select * from t where c&gt;=10 for update; （OK）<br><br>mysql怎么好像把c所有行都锁住了？<br>我在另一个SESSION执行<br>mysql&gt;begin;<br>mysql&gt;select c from t where c=0 for update;（阻塞，即便索引覆盖）<br><br>好像7月份之后老师没回复过专栏了啊....难道停更了吗？","like_count":0,"discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9040,"discussion_content":"自己找出了答案，EXPLAIN一下，第1条语句使用了索引，第2条语句有索引但没使用，走了全表扫描。。。可能数据量小的单范围的查询，mysql觉得全表扫描来的更快吧。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568125400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127108,"user_name":"邱海涛","can_delete":false,"product_type":"c1","uid":1442290,"ip_address":"","ucode":"87285FC6CE4566","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/f2/ad48e316.jpg","comment_is_top":false,"comment_ctime":1566555942,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566555942","product_id":100020801,"comment_content":"一个session执行select * from t where c&gt;=10 and c&lt;=15 for update;根据加锁规则推断出是(5,10],(10,20)。但实际上另一个session执行delete from t where c=20;会等锁，这样来看实际加锁区间是(5,10],(10,20]。怎么解释呢？","like_count":0,"discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7677,"discussion_content":"是(10,20]，20那里是范围查询，不是等值查询，NEXT KEY LOCK 不会退化成GAP LOCK","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567608130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127100,"user_name":"邱海涛","can_delete":false,"product_type":"c1","uid":1442290,"ip_address":"","ucode":"87285FC6CE4566","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/f2/ad48e316.jpg","comment_is_top":false,"comment_ctime":1566553484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566553484","product_id":100020801,"comment_content":"根据案例四最后一句话来看，非唯一索引的范围查询也会访问到不满足条件的第一个值为止。是不是这样，不然为什么会有(10,15]这个next-key lock？","like_count":0},{"had_liked":false,"id":127063,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1566547337,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566547337","product_id":100020801,"comment_content":"这里是因为倒叙在遍历&lt;=20的条件的时候，一直会遍历到0这个值所以应该会多出两个间隙锁（0，5），（5，10）导致的吧？","like_count":0},{"had_liked":false,"id":126913,"user_name":"卢山","can_delete":false,"product_type":"c1","uid":1310244,"ip_address":"","ucode":"033EB9C7DEE4DA","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/24/1b5880e7.jpg","comment_is_top":false,"comment_ctime":1566520812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566520812","product_id":100020801,"comment_content":"老师，请问下，案例2中非主键索引可以有优化，但是案例4中提到c是非主键索引，不会优化，这是因为案例四是范围查询的原因么？","like_count":0},{"had_liked":false,"id":123806,"user_name":"。。。。。","can_delete":false,"product_type":"c1","uid":1612570,"ip_address":"","ucode":"985B1561AC9152","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Xibh27ZicBhXls5KsPibBXZI4RKlR0MUbUiaEuOS2ORibKaxWSicpIjd4lvWUWqtNAde7EeDDTpWKAiapGdHeaiaDqczWQ/132","comment_is_top":false,"comment_ctime":1565764885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565764885","product_id":100020801,"comment_content":"老师，关于您在“时隐时现”留言中说的那个update优化策略，我用mysql 8.0.13试了下，update和delete都会被阻塞，没有用到update优化策略","like_count":0},{"had_liked":false,"id":123457,"user_name":"。。。。。","can_delete":false,"product_type":"c1","uid":1612570,"ip_address":"","ucode":"985B1561AC9152","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Xibh27ZicBhXls5KsPibBXZI4RKlR0MUbUiaEuOS2ORibKaxWSicpIjd4lvWUWqtNAde7EeDDTpWKAiapGdHeaiaDqczWQ/132","comment_is_top":false,"comment_ctime":1565679365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565679365","product_id":100020801,"comment_content":"老师，案例三主键索引范围锁<br>第2步，范围查找就往后继续找，找到 id=15 这一行停下来，因此需要加 next-key lock(10,15]<br>不需要再根据优化2，退化成间隙锁（10,15）吗？<br>感觉第2步符合优化2的条件啊","like_count":0},{"had_liked":false,"id":120667,"user_name":"jasper","can_delete":false,"product_type":"c1","uid":1058086,"ip_address":"","ucode":"245404D19450E7","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/26/fb664d01.jpg","comment_is_top":false,"comment_ctime":1564969494,"is_pvip":false,"replies":[{"id":"44571","content":"前开后闭哦😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1565095094,"ip_address":"","comment_id":120667,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564969494","product_id":100020801,"comment_content":"next-key lock前开后闭 表示方法不应该是[5,10）吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461425,"discussion_content":"前开后闭哦😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565095094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120187,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1564804715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564804715","product_id":100020801,"comment_content":"解决因高并发引起的问题，基本都少不了锁，不过这个东西确实不好掌握，尤其是什么时候加锁？什么时候解锁？加什么锁？但原则我觉得就两个，一是解决高并发的问题，另一个是减少因加锁而产生的性能损耗，本节加锁的规则还需要多看几遍<br>暂时先明确一下几点<br>1：MySQL表中的数据以B+树的形式存储<br>2：对于表中数据的操作都是操作这棵树<br>3：如果没有并发操作，就不会产生并发问题，就不需要加锁，锁的本质就是一种数据操作的同步机制<br>4：锁都是加在这棵树上的<br>5：不同的锁代表着不同的特性，锁定的范围是它最主要的特性<br>6：该加什么锁，就看是否能解决问题又能减少对性能的影响<br>7：MySQL的锁分为DML锁&#47;DDL锁&#47;表锁&#47;行锁&#47;next key 锁&#47;间隙锁，又通过其他特性分为读锁&#47;写锁&#47;悲观锁&#47;乐观锁","like_count":0},{"had_liked":false,"id":119232,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1564540254,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564540254","product_id":100020801,"comment_content":"我知道了  模拟这种时序图  只需在Navicat开三个窗口  第一个事务提交不执行就可以了 后续依次执行就可以了","like_count":0},{"had_liked":false,"id":118295,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1564312792,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564312792","product_id":100020801,"comment_content":"老师，请问如果是非索引范围查询，还有间隙群吗？还是说要锁全表？<br>还有就是非索引范围删除，这个是锁全表吧？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164245,"discussion_content":"有间隙锁，锁全表，非索引范围删除是锁全表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581164938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118078,"user_name":"五只鱼","can_delete":false,"product_type":"c1","uid":1322684,"ip_address":"","ucode":"666F1DAE39EA9C","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/bc/811f8cdd.jpg","comment_is_top":false,"comment_ctime":1564232678,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564232678","product_id":100020801,"comment_content":"老师,一张如下表b上有非唯一索引.<br>+----+------+------+<br>| id | a    | b    |<br>+----+------+------+<br>|  1 |    1 |    1 |<br>|  4 |    4 |    4 |<br>|  7 |   7 |    7 |<br>|  8 |   7 |    7 |<br>| 10 |   7 |    7 |<br>| 11 |   11 |   11 |<br>+----+------+------+<br>SessionA                                                                 <br>begin;<br>select * from t where b = 11 lock in share mode;<br><br>SessionB在SessionA执行完第二条后,执行<br>update t set a = a+1 where b = 7 limit 5不会阻塞<br>但是执行update t set a = a+1 where b = 7 limit 6会阻塞.<br>这种情况应该怎么分析.<br>","like_count":0},{"had_liked":false,"id":117320,"user_name":"远方夕阳","can_delete":false,"product_type":"c1","uid":1122317,"ip_address":"","ucode":"EEBCD53B2B5D3E","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/0d/93967314.jpg","comment_is_top":false,"comment_ctime":1564023691,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564023691","product_id":100020801,"comment_content":"老师你好，案例3，后面的条件id&lt;11 这个条件为什么不继续参与优化，这样 (10,15] 就可以成为行锁，还是说，锁的规则 只会是where的第一个条件来做判断？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164252,"discussion_content":"id<11，11并不存在，应该是直接到最近的有效值，也就是15.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116441,"user_name":"杜美洁","can_delete":false,"product_type":"c1","uid":1514953,"ip_address":"","ucode":"78354D0430C9DF","user_header":"https://static001.geekbang.org/account/avatar/00/17/1d/c9/c22f4e4b.jpg","comment_is_top":false,"comment_ctime":1563850872,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563850872","product_id":100020801,"comment_content":"老师，您好！案例三，访问到id=15才会停止，（15，20]也应该加上间隙锁呀。课后习题，访问到10停止，5和10之间也是加了锁的","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164258,"discussion_content":"（15，20]相当于扫描到20了，扫描到15就发现已经是离11最近的值了。所以，没必要继续向后扫描了。而课后习题，是c>=15，由于是降序，所以必须得扫描到不等于15的那行。也就是10，故next-key lock(5,10]。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115634,"user_name":"愚人","can_delete":false,"product_type":"c1","uid":1355952,"ip_address":"","ucode":"40DE41849EF9EA","user_header":"https://static001.geekbang.org/account/avatar/00/14/b0/b0/30b29949.jpg","comment_is_top":false,"comment_ctime":1563679772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563679772","product_id":100020801,"comment_content":"这一条语句把t表上索引c的记录全锁住了，按照分析的结果，应该只锁住c索引树上10以上的范围。为什么[0, 9]也都被锁了，是什么原因造成的？<br>select * from t where c&gt;=15 order by c lock in share mode;","like_count":0},{"had_liked":false,"id":115281,"user_name":"tianyitang","can_delete":false,"product_type":"c1","uid":1440036,"ip_address":"","ucode":"1B7BEBD49E277B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIcgKLQZibvbXn8iaPCibDAtKaOhRxDIcxCaclUaG4mxJ9377noTib9RE8VBakCvicQ8VEHkvfE0UbgCAQ/132","comment_is_top":false,"comment_ctime":1563523649,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563523649","product_id":100020801,"comment_content":"老师，您好，隔离级别为可重复读，如果在普通索引上加的netkey-lock锁，是否会同时在主键索引也加相应的锁？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164259,"discussion_content":"RR是默认隔离级别。如果在普通索引上加，看是不是覆盖索引，如果是那主键索引就不加了。如果不是，那就得在主键索引上加锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115268,"user_name":"tianyitang","can_delete":false,"product_type":"c1","uid":1440036,"ip_address":"","ucode":"1B7BEBD49E277B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIcgKLQZibvbXn8iaPCibDAtKaOhRxDIcxCaclUaG4mxJ9377noTib9RE8VBakCvicQ8VEHkvfE0UbgCAQ/132","comment_is_top":false,"comment_ctime":1563522266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563522266","product_id":100020801,"comment_content":"老师，请教关于间隙锁问题。数据库隔离级别为可重复读，根据加锁规则，锁是加在索引上的，c为普通索引，间隙锁是不会退化的，根据表记录，下面这条for update语句，应该在（0，5]上也有netkey-lock，但是会话在这个范围insert值成功了。这个问题不太理解，请老师指导，谢谢！<br>会话1.<br>begin;<br>mysql&gt;  select *from t1 where c&gt;=10 and c&lt;11 for update;<br>+----+------+------+<br>| id | c    | d    |<br>+----+------+------+<br>| 10 |   10 |   10 |<br>+----+------+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; select * from t1;<br>+----+------+------+<br>| id | c    | d    |<br>+----+------+------+<br>|  0 |    0 |    0 |<br>|  5 |    5 |    5 |<br>| 10 |   10 |   10 |<br>| 15 |   15 |   15 |<br>| 20 |   20 |   20 |<br>| 25 |   25 |   25 |<br>| 55 |   55 |   55 |<br>+----+------+------+<br>7 rows in set (0.00 sec)<br><br>会话2.<br>mysql&gt;  insert into t1 values(3,3,3);<br>Query OK, 1 row affected (0.01 sec)<br><br>mysql&gt;","like_count":0},{"had_liked":false,"id":113980,"user_name":"chenpiing","can_delete":false,"product_type":"c1","uid":1357056,"ip_address":"","ucode":"C847A30B3FDB8F","user_header":"https://static001.geekbang.org/account/avatar/00/14/b5/00/f4e8fbaf.jpg","comment_is_top":false,"comment_ctime":1563198126,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563198126","product_id":100020801,"comment_content":"与思考题相关的疑问<br><br>为何执行select * from t where c&gt;=10 and c&lt;=15 order by c desc for update这条语句时，c=20这一行不会加行锁。而执行select * from t where c&gt;=10 and c&lt;=15 order by c for update这句，c=20这行加了行锁<br><br>求大佬们帮忙解答，感谢","like_count":0,"discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83073,"discussion_content":"一个是向上找需要的范围，一个是向下找的。在结合老师讲的规则就知道了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576414549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112986,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1562860921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562860921","product_id":100020801,"comment_content":"对加锁的原则2不是很明白，实验了几次，似乎有新的认识：<br>即使是行锁，x锁和s锁加锁的位置也是不一样的，x锁就是加在主键上的，而s锁，是加在使用的索引上的，如果查询需要回表，也会加在主键上。<br><br>请老师指正。","like_count":0},{"had_liked":false,"id":111669,"user_name":"zhima_hu","can_delete":false,"product_type":"c1","uid":1311188,"ip_address":"","ucode":"33A4496556D9B1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rBCoNmJbagIGlkrDDfdQv9YjrtoHfvExqSSiavHwgUaukTxnO2jTBGrrHUF49VZqaS1FBolLc4Bibk883sabroyQ/132","comment_is_top":false,"comment_ctime":1562580572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562580572","product_id":100020801,"comment_content":"麻烦您看一下这个insert语句写法，效率怎么样，现在线上有很多这样的写法<br>explain <br>INSERT INTO rule_prom_activity<br>        (<br>        `act_id`,<br>        `act_name`,<br>        `begin_time`,<br>        `end_time`,<br>        `creator`,<br>        `act_status`,<br>        `act_type`,<br>        `user_level`,<br>        `business_param`,<br>        `create_time`,<br>        `modified_time`)<br>        SELECT<br>       1122,<br>        &quot;huodong&quot;,<br>        &quot;2019-04-15 10:50:07&quot;,<br>        &quot;2019-04-15 10:50:07&quot;,<br>        &quot;huodong&quot;,<br>        3,<br>        3,<br>        1,<br>        &#39;huodong&#39;,<br>        now(),<br>        now()<br>\t\tFROM<br>\t\t\tdual<br>\t\tWHERE NOT EXISTS(SELECT 1 FROM rule_prom_activity WHERE act_id = 1)<br>","like_count":0},{"had_liked":false,"id":110018,"user_name":"....","can_delete":false,"product_type":"c1","uid":1104022,"ip_address":"","ucode":"C9F7F89CD00B13","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/96/60e0d8fe.jpg","comment_is_top":false,"comment_ctime":1562151368,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562151368","product_id":100020801,"comment_content":"能不能介绍一下插入一行记录，mysql会加哪些锁？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164261,"discussion_content":"看场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108884,"user_name":"大宝","can_delete":false,"product_type":"c1","uid":1102771,"ip_address":"","ucode":"224458E5D1A35A","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/b3/4f5550c0.jpg","comment_is_top":false,"comment_ctime":1561907178,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1561907178","product_id":100020801,"comment_content":"   案例四的锁应该是（10，15）吧，因为最后一个条件不满足，会退化成间隙锁","like_count":0,"discussions":[{"author":{"id":1276373,"avatar":"https://static001.geekbang.org/account/avatar/00/13/79/d5/4a7971fc.jpg","nickname":"Ethan","note":"","ucode":"016F1DEBA895B8","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373849,"discussion_content":"为什么说是范围查询？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620894245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164264,"discussion_content":"这不是等值查询，是范围查询。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108163,"user_name":"core dumped","can_delete":false,"product_type":"c1","uid":1103253,"ip_address":"","ucode":"F99C28F2C396E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/95/aae1eb2a.jpg","comment_is_top":false,"comment_ctime":1561688945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561688945","product_id":100020801,"comment_content":"老师 您好，我有一个疑问：<br>当事务隔离级别在rr情况下，表上没有主键和索引，执行一个全表扫描for update，按照MySQL现有的方式会添加四个next-key lock，但是我认为只需要在三条记录上添加行锁和最后一个最大值上添加next-key lock就行了，因为默认创建的聚集索引每次都是自增的，插入都是在表最后面插入，不会插入到三条记录之间。删除操作由于每条记录有了行锁，所以也会发生阻塞。","like_count":0},{"had_liked":false,"id":105890,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1561100331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561100331","product_id":100020801,"comment_content":"老师，有个问题想问下，我们一张订单表有两个字段order_no(varchar),status(varchar)，在并发执行update语句：update 表 set xxx=xxx where order_no = &#39;xyz&#39; and status = &#39;s&#39;，竟然发生死锁了，order_no 和status的值都是一样，不明白什么原因？老师能否指点点","like_count":0},{"had_liked":false,"id":105150,"user_name":"阿狸爱JAVA","can_delete":false,"product_type":"c1","uid":1033566,"ip_address":"","ucode":"597971781B1500","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/5e/24cc5a72.jpg","comment_is_top":false,"comment_ctime":1560930556,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560930556","product_id":100020801,"comment_content":"在案例四中，在索引c上的等值查询，为什么不走优化2，希望老师可以解答一下","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164265,"discussion_content":"这不是等值查询，是范围查询。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103614,"user_name":"ZHANG","can_delete":false,"product_type":"c1","uid":1442437,"ip_address":"","ucode":"BAFD110AE33328","user_header":"https://static001.geekbang.org/account/avatar/00/16/02/85/9a81a973.jpg","comment_is_top":false,"comment_ctime":1560477571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560477571","product_id":100020801,"comment_content":"本篇文章中我觉得除案例二的其他案例还是比较好理解的，案例二乍一看确实有点毁三观理解起来有那么一点吃力（反正我是反复读了好多遍，实际试了好多遍^_^），而且可能看上一两遍还有些懵，但是多看几遍，细细推敲一番，各种情况都操作一遍，就会恍然大悟，感觉这个设计好巧妙，下面我说一下我的理解，我觉得这样理解稍微轻松一点，也希望丁老师能帮忙参谋一下看这样理解有没有偏差：<br><br>问题主要是在session B尽然能更新成功上，我明明给c=5这一行加了读锁了，为什么还能更新成功呢，老师在分析的第4步说“这个查询使用覆盖索引，并不需要访问主键索引”，这也就是说session A在查询的时候不会回表，我自己索引树维护的内容就够用了，不用主键索引树的内容，所以这儿锁住的不是c=5这一整行，而只是c=5这一行里的c字段和id字段（因为c索引树里只维护了这两个字段），只要你其他事务不更新我这一行的这两个字段就行了，其他字段随便更新，因为那些字段我用不着；<br>我试过，如果给表t再加上其他字段（不管这个字段是不是索引），那些字段也都是可以更新成功的，如果是联合索引，那么其他事务对联合索引里面涉及到的字段以及主键的更新也会被锁住，如下：<br>给表t加两个字段，以及这两个字段加联合索引：<br>alter table t add column e int(11) default null;<br>alter table t add column f int(11) default null;<br>alter table t add key ef(e,f);<br><br>session A改成<br>begin;<br>select id from t wehre e =5 lock in share mode;<br><br>session B<br>update e set e=e+1 where id=5;   &#47;*被锁住*&#47;<br>update f set f=f+1 where id=5;     &#47;*被锁住*&#47;<br>update f set d=d+1 where id=5;   &#47;*执行成功*&#47;<br><br>覆盖索引的功劳还是挺大的。","like_count":0},{"had_liked":false,"id":103277,"user_name":"Henry","can_delete":false,"product_type":"c1","uid":1018122,"ip_address":"","ucode":"4DC15DB1013A95","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/0a/7a96bfb1.jpg","comment_is_top":false,"comment_ctime":1560407798,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560407798","product_id":100020801,"comment_content":"老师，您好, 对于之前我提的问题:<br>sessionA<br>mysql&gt; begin;<br>mysql&gt; select * from t where c&gt;10 for update;<br><br>sessionB<br>mysql&gt; begin;<br>mysql&gt; update t set d=d+1 where id=0;<br>(blocked)<br><br>我想我有答案了;<br><br>还是根据原则2， 但参考第10讲的知识，通过explain select * from t where c&gt;10 for update; 得知了sessionA进行了全表扫描，所以锁住了所有的间隙锁和行锁；所以此时sessionB无论在哪个位置insert或者update，都会被block住。","like_count":0},{"had_liked":false,"id":103262,"user_name":"Henry","can_delete":false,"product_type":"c1","uid":1018122,"ip_address":"","ucode":"4DC15DB1013A95","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/0a/7a96bfb1.jpg","comment_is_top":false,"comment_ctime":1560406074,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560406074","product_id":100020801,"comment_content":"老师，您好，对于非唯一索引上的范围查询，我有如下问题:<br>mysql版本: MySQL5.6<br>sessionA<br>mysql&gt; begin;<br>mysql&gt; select * from t where c&gt;10 for update;<br><br>sessionB<br>mysql&gt; begin;<br>mysql&gt; update t set d=d+1 where c=0;<br>(blocked)<br><br>请问这是什么原因呢？<br>按照我的理解，根据原则2, sessionA的next-key lock该是索引 c 上的加锁范围就变成了从(c=10,id=10) 到(c=正无穷, id=正无穷)的左开右开区间了吧，按说不会影响(c=10,id=10)左侧的范围内的insert和update吧？","like_count":0,"discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83077,"discussion_content":"5.6 版本的可能和 5.7 的不一样，你可以用5.7 试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576414675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102459,"user_name":"o9","can_delete":false,"product_type":"c1","uid":1101332,"ip_address":"","ucode":"E373E82A39BBFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","comment_is_top":false,"comment_ctime":1560224351,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1560224351","product_id":100020801,"comment_content":"加锁的范围一直傻傻弄不清楚","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164266,"discussion_content":"沉下心，一行行品一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99269,"user_name":"牙疼疼疼疼疼","can_delete":false,"product_type":"c1","uid":1306594,"ip_address":"","ucode":"51D9976552BCE5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqWicVOkCMEUTMB3t8Ann8QniasADdImItesadggumttR1cp9yicPB8acaJA7Fslo76FiaON8EYI8TDzA/132","comment_is_top":false,"comment_ctime":1559183913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559183913","product_id":100020801,"comment_content":"请问下，案例一中，我将A的语句改成update t set d=d+1 where c=7;<br>B的insert into t VALUES(8,8,8) ---锁住<br>insert into t VALUES(8,11,8) ---执行<br>insert into t VALUES(8,10,8) ---锁住<br>这种情况看起来是锁范围是（5,10】，但是按照优化2不是应该是（5,10）第三个插入应该不锁住啊，还望解答。<br>","like_count":0},{"had_liked":false,"id":99087,"user_name":"Geek_qinghe","can_delete":false,"product_type":"c1","uid":1516360,"ip_address":"","ucode":"503849CDFE3236","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersx4icj2Kqlt6cEBmFUiaTkZxgLCFm1Zt6mwicW2OcVeY9n3j3ZTVRbSLElTePrsEE5ahq9WeWJloQg/132","comment_is_top":false,"comment_ctime":1559141160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559141160","product_id":100020801,"comment_content":"session A <br><br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; select * from t where c&gt;=15 and c &lt;= 20 order by c desc lock in share mode;<br>+----+------+------+<br>| id | c    | d    |<br>+----+------+------+<br>| 20 |   20 |   20 |<br>| 15 |   15 |   15 |<br>+----+------+------+<br>2 rows in set (0.00 sec)<br><br><br><br>session B<br><br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; insert into t values (6,6,6);<br>Query OK, 1 row affected (0.00 sec)<br><br><br>老师，我这里实验也是可以插入的；我看了隔离级别是没问题的；<br>然后我就看了一下数据，发现不同的是我的t表多了一条记录，因为我在看文章的时候在表了里插入了一条记录(30, 10, 30)，然后我将这个记录删了，就复现了！然后我就不明白了，我多的这条记录c=10(表里已经有了一条c=10的记录)，应该不会影响加锁的范围才对，为什么结果却不同，插入(6,6,6)不会被阻塞，希望老师能解惑，谢谢！","like_count":0},{"had_liked":false,"id":97426,"user_name":"woaiwnagqiu","can_delete":false,"product_type":"c1","uid":1484333,"ip_address":"","ucode":"2FE9FB90F9EAD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Ccdlzibsv0umJB4QeX0K6JDg77STBwaMbTk9WCRRlFiaLCNY0DNUWEH4o9ktOeRYuFbSYuEtOhWlu7Fic2BpLREeg/132","comment_is_top":false,"comment_ctime":1558667942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558667942","product_id":100020801,"comment_content":"老师，您好。我有一个问题，针对本讲的表结构和数据，我尝试sql select * from t2 where id &lt;=10 order by id desc for update; 看加锁日志发现 (10,15)间隙被锁住。不是很明白<br>按照我的理解，由于降序排列，会先找到10这个记录，这是等值查询，等值查询应该满足优化1，退化为行锁才对啊<br><br>","like_count":0},{"had_liked":false,"id":97120,"user_name":"Terrell","can_delete":false,"product_type":"c1","uid":1080388,"ip_address":"","ucode":"1B2C2A183FC881","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/44/3828b24f.jpg","comment_is_top":false,"comment_ctime":1558591823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558591823","product_id":100020801,"comment_content":"老师，您好。<br><br>案例八中，“session A 启动事务后执行查询语句加 lock in share mode，在索引 c 上加了 next-key lock(5,10] 和间隙锁 (10,15)；&quot;<br><br>是否可以视为加上了间隙锁(5,10),(10,15) 和行锁10<br><br>如果是这样的话，“session B 的“加 next-key lock(5,10] ”操作，实际上分成了两步，先是加 (5,10) 的间隙锁，加锁成功；然后加 c=10 的行锁，这时候才被锁住的。&quot;<br><br>加（5,10）间隙锁这步操作不是应该被阻塞吗？为什么会加锁成功，望能解答一下。","like_count":0},{"had_liked":false,"id":95927,"user_name":"淘气的王淘气","can_delete":false,"product_type":"c1","uid":1001781,"ip_address":"","ucode":"188B6E77EA2FBF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/35/d656c61a.jpg","comment_is_top":false,"comment_ctime":1558258330,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558258330","product_id":100020801,"comment_content":"老师，您好。有个问题想请教下：<br> 当索引的字段类型不是数值型时，会存在next-key lock？如果存在是通过什么方式来计算间隔区间的，<br> 在这情况需要注意什么 <br>请老师帮忙解答下 谢谢。","like_count":0},{"had_liked":false,"id":94716,"user_name":"~玲玲玲~子~哥~","can_delete":false,"product_type":"c1","uid":1302741,"ip_address":"","ucode":"89379F3A0427EA","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/d5/7485e51f.jpg","comment_is_top":false,"comment_ctime":1557884609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557884609","product_id":100020801,"comment_content":"lock in share mode容易引起覆盖索引导致主键不加锁而引起&quot;该加锁的不加锁&quot;的感觉<br>此例由于使用select *所以没有使用覆盖索引.<br>加锁范围: (5,10),(10,15],(15,20],(20,25);","like_count":0},{"had_liked":false,"id":93879,"user_name":"唐鹏","can_delete":false,"product_type":"c1","uid":1487943,"ip_address":"","ucode":"4BBEF5937230E6","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/47/8be46019.jpg","comment_is_top":false,"comment_ctime":1557649520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557649520","product_id":100020801,"comment_content":"老师您好，请教个问题：<br>Mysql普通（非唯一）索引等值查询的时候为啥需要锁住后面一个区间啊？<br><br>或者换种描述：<br>等值查询给唯一索性加锁的时候可以退化为行锁，为什么非唯一索引不做这种退化？<br><br><br>主要是不理优化1：“优化 1：索引上的等值查询，给唯一索引加锁的时候，next-key lock 退化为行锁。”<br><br>这里为什么要限定唯一索引？普通索引等值查询加锁的时候为啥没有做这个优化？","like_count":0},{"had_liked":false,"id":93790,"user_name":"纸片人","can_delete":false,"product_type":"c1","uid":1358508,"ip_address":"","ucode":"84490E7CEF59A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/ac/b44b256a.jpg","comment_is_top":false,"comment_ctime":1557592685,"is_pvip":false,"replies":[{"id":"34312","content":"漂亮","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558261094,"ip_address":"","comment_id":93790,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1557592685","product_id":100020801,"comment_content":"我从案例七获得灵感，设计了一个实验，来证明InnoDB加锁的位置是索引，而非数据行。我用的是案例六的测试数据。<br><br>第一组实验：<br>Session A<br>begin;<br>select * from t where c=10 limit 1 for update;<br>Session B<br>select * from t where c=10 and d=10 lock in share mode; -- blocking --<br>select * from t where c=10 and d=30 lock in share mode; -- blocking --<br>select * from t where id=30 and d=30 lock in share mode; -- success --<br><br>分析：理论上，会话A应该只锁住了(10,10,10)。如果锁在(10,10,10)上，那么会话B的第二条语句不可能被阻塞。第三条语句反证，(30,10,30)上没有锁，所以第二条语句被阻塞是因为行锁在c=10上。<br><br>延伸实验：<br>Session A<br>begin;<br>select * from t where c=10 and d=10 for update;<br>Session B<br>select * from t where c=10 and d=10 lock in share mode; -- blocking --<br>select * from t where c=10 and d=30 lock in share mode; -- blocking --<br>select * from t where id=30 and d=30 lock in share mode; -- blocking --<br><br>分析：会话B第三条语句被阻塞的原因是，索引c上无d值，所以会话A回了两次表，依次给id=10和id=30加了行锁。<br><br>验证实验：<br>Session A<br>begin;<br>select * from t where c=10 and id=10 for update; -- 直接查看主键索引 --<br>Session B<br>select * from t where c=10 and d=10 lock in share mode; -- blocking，回表被阻塞 --<br>select * from t where c=10 and d=30 lock in share mode; -- blocking，回表被阻塞 --<br>select * from t where id=30 and d=30 lock in share mode; -- success --<br>select id from t where c=10 lock in share mode; -- success，不回表，c=10上无行锁 --","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449770,"discussion_content":"漂亮","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558261094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238436,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e5/a4/e16dca6a.jpg","nickname":"阿凯文","note":"","ucode":"F17CF201E74849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283637,"discussion_content":"难道验证试验中sessionA只对主键索引id=10的主键加了行锁？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592316031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93784,"user_name":"纸片人","can_delete":false,"product_type":"c1","uid":1358508,"ip_address":"","ucode":"84490E7CEF59A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/ac/b44b256a.jpg","comment_is_top":false,"comment_ctime":1557588750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557588750","product_id":100020801,"comment_content":"林老师，您好！我通过实验发现，行锁不阻塞等值的Insert。隔离级别为RC，实验步骤如下：<br>Session A：<br>mysql&gt; select @@tx_isolation;<br>+----------------+<br>| @@tx_isolation |<br>+----------------+<br>| READ-COMMITTED |<br>+----------------+<br>1 row in set (0.00 sec)<br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br>mysql&gt; select id from t where c=15 lock in share mode;       --- 存在行锁c=15 --<br>+----+<br>| id |<br>+----+<br>| 15 |<br>+----+<br>1 row in set (0.00 sec)<br>mysql&gt; select now();<br>+---------------------+<br>| now()               |<br>+---------------------+<br>| 2019-05-11 23:04:53 |<br>+---------------------+<br>1 row in set (0.00 sec)<br><br>Session B：<br>mysql&gt; select @@tx_isolation;<br>+----------------+<br>| @@tx_isolation |<br>+----------------+<br>| READ-COMMITTED |<br>+----------------+<br>1 row in set (0.00 sec)<br>mysql&gt; select now();<br>+---------------------+<br>| now()               |<br>+---------------------+<br>| 2019-05-11 23:08:24 |<br>+---------------------+<br>1 row in set (0.00 sec)<br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br>mysql&gt; insert into t value(14,14,14);<br>Query OK, 1 row affected (0.00 sec)<br>mysql&gt; insert into t value(15,15,15);<br>ERROR 1062 (23000): Duplicate entry &#39;15&#39; for key &#39;PRIMARY&#39;<br>mysql&gt; insert into t value(16,16,16);<br>Query OK, 1 row affected (0.00 sec)<br>mysql&gt; insert into t value(17,15,17);    -- 行锁不阻塞insert --<br>Query OK, 1 row affected (0.00 sec)<br>mysql&gt; update t set d=15 where c=15;<br>ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction<br>mysql&gt; delete from t where c=15;<br>ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction<br>mysql&gt; update t set d=15 where id=15;<br>Query OK, 0 rows affected (0.02 sec)<br>Rows matched: 1  Changed: 0  Warnings: 0<br><br>或许案例五提到的bug，是基于完善语义的角度考虑的？","like_count":0},{"had_liked":false,"id":93744,"user_name":"纸片人","can_delete":false,"product_type":"c1","uid":1358508,"ip_address":"","ucode":"84490E7CEF59A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/ac/b44b256a.jpg","comment_is_top":false,"comment_ctime":1557578012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557578012","product_id":100020801,"comment_content":"我反复测试了一遍又一遍，发现仅当查询条件为a=0和a=5的时候会发生这种情况。<br><br>有问题的情况下：<br>Session A<br>begin;<br>select * from t where c=0&#47;1 lock in share mode;<br>Session B<br>insert into t value(1000,0,1000);<br>ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction<br><br>正常情况下：<br>Session A<br>begin;<br>select * from t where c=-1&#47;10&#47;15&#47;20 lock in share mode;<br>Session B<br>insert into t value(1000,0,1000);<br>Query OK, 1 row affected (0.00 sec)<br><br>这算Bug吗？","like_count":0},{"had_liked":false,"id":93721,"user_name":"纸片人","can_delete":false,"product_type":"c1","uid":1358508,"ip_address":"","ucode":"84490E7CEF59A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/ac/b44b256a.jpg","comment_is_top":false,"comment_ctime":1557569272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557569272","product_id":100020801,"comment_content":"林老师，我要放弃思考了TUT。<br>我设计了一个实验，想要检测间隙锁和行锁的阻塞效果。刚开始很顺利，在仅保留主键的情况下，我测试出间隙锁会限制其他事务往区间内insert（其中区间边界上的报错是“Duplicate entry for key”），但不影响区间内的update和delete，行锁会限制其他事务在行上的update、delete和insert。如果仅此而已，我就不会那么痛苦了。<br>我进行了第二组实验，为了排除主键上锁的影响，采用了案例二的数据和操作。然后，我发现尽管c=10上的行锁确实因为优化规则2释放了（可以进行c=10的update和delete），但insert...(-1, 10, -1)仍然会被阻塞。这是否意味着，间隙锁的作用范围是左开右闭，即限制其他事务在右值上的insert？<br>再然后，我发现了一个和文章说法有出入的地方。主键索引上有大范围的间隙锁！！！！！<br>我尝试<br>insert...(-1, 0, -1);<br>insert...(1, 0, 1);<br>insert...(2, 0, 2);<br>insert...(14, 0, 14);<br>insert...(29, 0, 29);<br>insert...(1000, 0, 1000);<br>只有第一条插入成功，其他都被阻塞了~~~~为嘛？这都是为嘛？tut<br>我检查了自己的mysql版本，是5.7.18，隔离级别是RR。不明白啊！！！","like_count":0},{"had_liked":false,"id":91298,"user_name":"QW","can_delete":false,"product_type":"c1","uid":1493185,"ip_address":"","ucode":"71B298F207BD69","user_header":"https://static001.geekbang.org/account/avatar/00/16/c8/c1/60235576.jpg","comment_is_top":false,"comment_ctime":1556967767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556967767","product_id":100020801,"comment_content":"老师，您好。最近碰到一个有意思的锁问题（mysql 版本为5.7.24-debug）<br>创建一张表   create table t ( a int primary auto_increment , b int unique key);<br> insert into t(b) values (10),(20),(30),(40);<br>set  global innodb_purge_stop_now=1 关掉purge<br>在会话一中 执行 delete from t where b = 20;  <br>然后在会话二中执行 begin；insert into t(b) values(20); <br>查看加锁情况：<br>RECORD LOCKS space id 293 page no 4 n bits 72 index b of table `tt`.`t` trx id 819289 lock mode S<br>Record lock, heap no 3 PHYSICAL RECORD: n_fields 2; compact format; info bits 32<br> 0: len 4; hex 80000014; asc     ;;<br> 1: len 4; hex 80000002; asc     ;;<br><br>Record lock, heap no 4 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 4; hex 8000001e; asc     ;;<br> 1: len 4; hex 80000003; asc     ;;<br><br>RECORD LOCKS space id 293 page no 4 n bits 72 index b of table `tt`.`t` trx id 819289 lock mode S locks gap before rec<br>Record lock, heap no 6 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 4; hex 80000014; asc     ;;<br> 1: len 4; hex 80000005; asc     ;;<br><br>在唯一键索引检测不仅对 heap no 为 3 的 (20，2)加了S lock ，对(30，3) 也加了S  lock。<br><br>对此我又建立一张与表t 一样的表ttt。<br>insert into ttt(b) values (10),(30),(40)     仍然在关闭purge的情况下进行实验<br>会话一:  begin；insert into ttt (b) values (20);<br>会话二:  begin;  insert into ttt (b) values(20);<br>会话一:  rollback；<br>产生锁的情况如下：<br>RECORD LOCKS space id 294 page no 4 n bits 72 index b of table `tt`.`ttt` trx id 819305 lock mode S<br>RECORD LOCKS space id 294 page no 4 n bits 72 index b of table `tt`.`ttt` trx id 819305 lock mode S locks gap before rec<br>Record lock, heap no 3 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 4; hex 8000001e; asc     ;;<br> 1: len 4; hex 80000002; asc     ;;<br><br>Record lock, heap no 5 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 4; hex 80000014; asc     ;;<br> 1: len 4; hex 80000005; asc     ;;<br><br>实验二并没有发生类似实验一的加锁情况，对此我有几个问题想问老师：<br>1.实验一是不是由delete mark 造成的？<br>2.实验二加锁情况与实验一不同能否说明insert 的rollback是直接delete 记录，而不是delete mark？<br>3.实验二的加锁情况是不是由于动态的gap锁产生的？<br><br>可能我的描述不是很清楚，请老师谅解。希望老师能指导一下。","like_count":0},{"had_liked":false,"id":90469,"user_name":"Break","can_delete":false,"product_type":"c1","uid":1508922,"ip_address":"","ucode":"6D1CCFC60E11EF","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/3a/68bed1d9.jpg","comment_is_top":false,"comment_ctime":1556527795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556527795","product_id":100020801,"comment_content":"发现一个和案例2不符合的情况...例子是第20讲里面的那个. <br>begin;<br>select * from t where c=5 for update;<br>这个时候, 锁住的应该是全部行, 而不是第0-10行. 和案例2不同....","like_count":0},{"had_liked":false,"id":87942,"user_name":"进阶的码农","can_delete":false,"product_type":"c1","uid":1017821,"ip_address":"","ucode":"D8991282640334","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/dd/4f53f95d.jpg","comment_is_top":false,"comment_ctime":1555761596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555761596","product_id":100020801,"comment_content":"（三）<br>看一个update语句，对应的show engine innodb status\\G;日志输出有如下疑问<br>lock mode S是什么锁，Next Key、间隙锁、记录锁？<br>lock mode S locks gap before rec是什么锁，共享间隙锁？<br>间隙锁我印象中是没有S、X区分的，那问题2的锁是什么锁呢<br>索引 code上(1,4)这条记录的间隙为什么上了lock mode S locks gap before rec<br>索引 code上(2,2)这条记录为什么上了lock mode S","like_count":0},{"had_liked":false,"id":87941,"user_name":"进阶的码农","can_delete":false,"product_type":"c1","uid":1017821,"ip_address":"","ucode":"D8991282640334","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/dd/4f53f95d.jpg","comment_is_top":false,"comment_ctime":1555761479,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555761479","product_id":100020801,"comment_content":"（二）<br>--TRANSACTION 83138899, ACTIVE 11 sec starting index read<br>mysql tables in use 1, locked 1<br>LOCK WAIT 2 lock struct(s), heap size 1136, 1 row lock(s)<br>select * from tmp where code = 1 for update<br>------- TRX HAS BEEN WAITING 11 SEC FOR THIS LOCK TO BE GRANTED:<br>RECORD LOCKS space id 41 page no 4 n bits 80 index code of table `test`.`tmp` trx id 83138899 lock_mode X waiting<br>Record lock, heap no 2 PHYSICAL RECORD: n_fields 2; compact format; info bits 32<br> 0: len 4; hex 80000001; asc;;<br> 1: len 4; hex 80000001; asc;;<br>---TRANSACTION 83138898, ACTIVE 16 sec<br>5 lock struct(s), heap size 1136, 5 row lock(s), undo log entries 2<br>TABLE LOCK table `test`.`tmp` trx id 83138898 lock mode IX<br>RECORD LOCKS space id 41 page no 4 n bits 80 index code of table `test`.`tmp` trx id 83138898 lock_mode X locks rec but not gap<br>Record lock, heap no 2 PHYSICAL RECORD: n_fields 2; compact format; info bits 32<br> 0: len 4; hex 80000001; asc;;<br> 1: len 4; hex 80000001; asc;;<br>RECORD LOCKS space id 41 page no 3 n bits 80 index PRIMARY of table `test`.`tmp` trx id 83138898 lock_mode X locks rec but not gap<br>Record lock, heap no 2 PHYSICAL RECORD: n_fields 5; compact format; info bits 32<br> 0: len 4; hex 80000001;asc;;<br> 1: len 6; hex 000004f49952; ascR;;<br> 2: len 7; hex 40000004a50b87; asc @;;<br> 3: len 4; hex 80000001; asc;;<br> 4: len 1; hex 31; asc 1;;<br>RECORD LOCKS space id 41 page no 4 n bits 80 index code of table `test`.`tmp` trx id 83138898 lock mode S<br>Record lock, heap no 2 PHYSICAL RECORD: n_fields 2; compact format; info bits 32<br> 0: len 4; hex 80000001; asc;;<br> 1: len 4; hex 80000001; asc;;<br>Record lock, heap no 7 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 4; hex 80000002; asc;;<br> 1: len 4; hex 80000002; asc;;<br>RECORD LOCKS space id 41 page no 4 n bits 80 index code of table `test`.`tmp` trx id 83138898 lock mode S locks gap before rec<br>Record lock, heap no 3 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 4; hex 80000001; asc;;<br> 1: len 4; hex 80000004; asc;;","like_count":0},{"had_liked":false,"id":87939,"user_name":"进阶的码农","can_delete":false,"product_type":"c1","uid":1017821,"ip_address":"","ucode":"D8991282640334","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/dd/4f53f95d.jpg","comment_is_top":false,"comment_ctime":1555761067,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555761067","product_id":100020801,"comment_content":"(一)老师问个关于update 加锁的问题<br>CREATE TABLE `tmp` (<br>  `id` int(11) NOT NULL,<br>  `code` int(11) DEFAULT NULL,<br>  `name` varchar(255) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `code` (`code`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br>insert into tmp values(1,1,&#39;1&#39;);<br>insert into tmp values(2,2,&#39;2&#39;);<br>session1\t                                        session2<br>update tmp set id =4 where code = 1;\t<br>                                                        select * from tmp where code = 1 for update;阻塞<br>然后我执行 show engine innodb status 获得一下结果<br>接下一条","like_count":0},{"had_liked":false,"id":87460,"user_name":"octocat","can_delete":false,"product_type":"c1","uid":1314023,"ip_address":"","ucode":"155FC4A6111634","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/e7/8977990f.jpg","comment_is_top":false,"comment_ctime":1555599018,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1555599018","product_id":100020801,"comment_content":"老师 您好 我想问下  select max(c) from t for update 这条语句的加锁规则是怎样的呢？","like_count":0,"discussions":[{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345789,"discussion_content":"事务隔离级别是rr mysql版本 5.7.17 实验 ：\nselect max(c) from t for update 锁住了 （20，25]和（25,super]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611795546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164268,"discussion_content":"这个只是对最大的那个索引加锁吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":86904,"user_name":"海潮","can_delete":false,"product_type":"c1","uid":1332573,"ip_address":"","ucode":"7254BDB077D25F","user_header":"https://static001.geekbang.org/account/avatar/00/14/55/5d/28379d01.jpg","comment_is_top":false,"comment_ctime":1555473466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555473466","product_id":100020801,"comment_content":"老师，有个问题，希望老师能够解答下，链接如下<br>https:&#47;&#47;blog.csdn.net&#47;u010234531&#47;article&#47;details&#47;89352873","like_count":0},{"had_liked":false,"id":85817,"user_name":"woaiwnagqiu","can_delete":false,"product_type":"c1","uid":1484333,"ip_address":"","ucode":"2FE9FB90F9EAD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Ccdlzibsv0umJB4QeX0K6JDg77STBwaMbTk9WCRRlFiaLCNY0DNUWEH4o9ktOeRYuFbSYuEtOhWlu7Fic2BpLREeg/132","comment_is_top":false,"comment_ctime":1555245646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555245646","product_id":100020801,"comment_content":"这有一个锁等待案例<br>表结构 <br>CREATE TABLE `tmp` (<br>  `id` int(11) NOT NULL,<br>  `code` int(11) DEFAULT NULL,<br>  `name` varchar(255) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `code` (`code`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br>表数据<br>+----+------+------+<br>| id | code | name |<br>+----+------+------+<br>|  1 |    1 | 1    |<br>|  2 |    2 | 2    |<br>+----+------+------+<br>2 rows in set (0.01 sec)<br>事务1执行 update tmp set id =4 where code = 1;<br>事务2执行 select * from tmp where code = 1 for update; 被事务1阻塞<br><br>show engine innodb status\\G；查看锁持有情况<br>事务1 <br>ECORD LOCKS space id 41 page no 4 n bits 80 index code of table `test`.`tmp` trx id 83138891 lock_mode X locks rec but not gap<br>Record lock, heap no 2 PHYSICAL RECORD: n_fields 2; compact format; info bits 32<br> 0: len 4; hex 80000001; asc     ;;<br> 1: len 4; hex 80000001; asc     ;;<br><br>RECORD LOCKS space id 41 page no 3 n bits 80 index PRIMARY of table `test`.`tmp` trx id 83138891 lock_mode X locks rec but not gap<br> 0: len 4; hex 80000001; asc     ;;<br> 1: len 6; hex 000004f4994b; asc      K;;<br> 2: len 7; hex 3c000004921324; asc &lt;     $;;<br> 3: len 4; hex 80000001; asc     ;;<br> 4: len 1; hex 31; asc 1;;<br><br>RECORD LOCKS space id 41 page no 4 n bits 80 index code of table `test`.`tmp` trx id 83138891 lock mode S<br>Record lock, heap no 2 PHYSICAL RECORD: n_fields 2; compact format; info bits 32<br> 0: len 4; hex 80000001; asc     ;;<br> 1: len 4; hex 80000001; asc     ;;<br><br>Record lock, heap no 7 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 4; hex 80000002; asc     ;;<br> 1: len 4; hex 80000002; asc     ;;<br><br>RECORD LOCKS space id 41 page no 4 n bits 80 index code of table `test`.`tmp` trx id 83138891 lock mode S locks gap before rec<br>Record lock, heap no 3 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br> 0: len 4; hex 80000001; asc     ;;<br> 1: len 4; hex 80000004; asc     ;;<br>我的疑问 <br>1 lock mode S是什么锁？ NK锁，记录锁，间隙锁<br>2 为什么要获取2,2的lock mode S<br>3 lock mode S locks gap 是共享间隙锁？ 我记得间隙锁没有X,S区分啊<br>4 这个update都上了哪些记录或者间隙锁","like_count":0},{"had_liked":false,"id":85322,"user_name":"woaiwnagqiu","can_delete":false,"product_type":"c1","uid":1484333,"ip_address":"","ucode":"2FE9FB90F9EAD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Ccdlzibsv0umJB4QeX0K6JDg77STBwaMbTk9WCRRlFiaLCNY0DNUWEH4o9ktOeRYuFbSYuEtOhWlu7Fic2BpLREeg/132","comment_is_top":false,"comment_ctime":1555036643,"is_pvip":false,"replies":[{"id":"30739","content":"你要把gap lock加进去考虑","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555146248,"ip_address":"","comment_id":85322,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555036643","product_id":100020801,"comment_content":"我遇到了个死锁，两个事务，对同一条记录操作，事务1删除记录，事务2删除记录阻塞，事务1插入这条记录，然后发生死锁，通过这个死锁我想问，是因为事务2在等待X锁，事务1持有X锁，申请S锁，导致互相等待然后死锁么，如果是这样，那我模拟这个操作，对同一条记录select * from for update和select * from lock in share mode，应该也会死锁啊，实际并没有，见操作链接<br>https:&#47;&#47;www.jianshu.com&#47;p&#47;ab2c8dd3ffa2","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446629,"discussion_content":"你要把gap lock加进去考虑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555146248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83749,"user_name":"亮的太阳","can_delete":false,"product_type":"c1","uid":1475752,"ip_address":"","ucode":"8BD77740812984","user_header":"https://static001.geekbang.org/account/avatar/00/16/84/a8/b0746eea.jpg","comment_is_top":false,"comment_ctime":1554710108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554710108","product_id":100020801,"comment_content":"案例 3 和 4 中，范围查询到 15 就会停下来，不会再加入 (15,20] 间隙锁，那么为什么思考题中，范围查找到 10，就会再加入 (5,10] 的间隙锁？","like_count":0},{"had_liked":false,"id":83652,"user_name":"zxx","can_delete":false,"product_type":"c1","uid":1228129,"ip_address":"","ucode":"C1D9368A4F544E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GrQsm2lOxnBhFuegVwNxrA2dd9qQLwLOlV3xUB615eqKia5vQPdRcnz1T6sxLcmiaSnibTEIVia9ebThaVWxF2TMnw/132","comment_is_top":false,"comment_ctime":1554690614,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554690614","product_id":100020801,"comment_content":"请问下，案例二【同时，它给我们的指导是，如果你要用 lock in share mode 来给行加读锁避免数据被更新的话，就必须得绕过覆盖索引的优化，在查询字段中加入索引中不存在的字段。比如，将 session A 的查询语句改成select d from t where c=5 lock in share mode】这个是为什么呢？为什么加上d的查询后，就会将这一行上锁了？","like_count":0},{"had_liked":false,"id":83255,"user_name":"王伯轩","can_delete":false,"product_type":"c1","uid":1108650,"ip_address":"","ucode":"546814BA7E5839","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/aa/cdd13ad2.jpg","comment_is_top":false,"comment_ctime":1554481369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554481369","product_id":100020801,"comment_content":"这两章一天来来回回啃了好几遍，终于感觉之前的关于锁的知识成长体系了。<br><br>感谢丁老师！<br><br>我有个感觉，老师总结的锁加在扫描的","like_count":0},{"had_liked":false,"id":83005,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1554370045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554370045","product_id":100020801,"comment_content":"对于案例8  为什么sessionA    insert into t3 values(13,13,13);不会出现死锁？","like_count":0},{"had_liked":false,"id":81574,"user_name":"三木禾","can_delete":false,"product_type":"c1","uid":1109458,"ip_address":"","ucode":"39C37228236860","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/d2/e3ae7ddd.jpg","comment_is_top":false,"comment_ctime":1553951073,"is_pvip":false,"replies":[{"id":"30160","content":"比如，你select ... from t where id&gt;=3 and id&lt;=5, 就会访问到3，4，5","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554616635,"ip_address":"","comment_id":81574,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1553951073","product_id":100020801,"comment_content":"问题在于没能理解只有访问到的对象才会被加锁，这个‘’访问‘’指的是什么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445256,"discussion_content":"比如，你select ... from t where id&amp;gt;=3 and id&amp;lt;=5, 就会访问到3，4，5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554616635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164269,"discussion_content":"为什么6不加锁呢，因为6也被访问到了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581166098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81570,"user_name":"三木禾","can_delete":false,"product_type":"c1","uid":1109458,"ip_address":"","ucode":"39C37228236860","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/d2/e3ae7ddd.jpg","comment_is_top":false,"comment_ctime":1553949820,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1553949820","product_id":100020801,"comment_content":"老师，或者这样问，在案例4中<br>c是普通索引，故优化1用不上，所以会加next-key-lock  ,范围为（5,10] ,根据优化2 ，它会继续向后遍历，直到遇到c=15的时候，next-key-lock 要退化成间隙锁的，但您这边为啥范围是95,15],并没有退化成间隙锁呢？ <br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164270,"discussion_content":"这不是等值查询，是范围查询。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581166111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81566,"user_name":"三木禾","can_delete":false,"product_type":"c1","uid":1109458,"ip_address":"","ucode":"39C37228236860","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/d2/e3ae7ddd.jpg","comment_is_top":false,"comment_ctime":1553949256,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1553949256","product_id":100020801,"comment_content":"原则 2：查找过程中访问到的对象才会加锁。但是我们在查询的时候，select *  from t where c&gt;=10 and  c&lt;11, 在案例4中,next-key-lock 为什么不是(0,10],因为c是索引的原因么？ ","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164271,"discussion_content":"你看一下原则和优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581166186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80931,"user_name":"鱼骨头","can_delete":false,"product_type":"c1","uid":1366810,"ip_address":"","ucode":"FFFD594DAA3A12","user_header":"https://static001.geekbang.org/account/avatar/00/14/db/1a/dd84ff19.jpg","comment_is_top":false,"comment_ctime":1553758177,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553758177","product_id":100020801,"comment_content":"老师您好，有一点不太理解，麻烦老师指教一下<br>       案例三中select * from t where id &gt;=10 and id &lt; 11 for update，id小于等于10使用到了优化1（唯一索引等值查询next-key lock退化为record lock），next-key lock 退化成了record lock<br>       在案例5中的select * from t where id &gt; 10 and id &lt;= 15 for update 中，对于id&lt;=15，为什么没有使用这个规则呢。<br>","like_count":0},{"had_liked":false,"id":78767,"user_name":"Lever","can_delete":false,"product_type":"c1","uid":1071921,"ip_address":"","ucode":"20C0D381677E1D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/31/b26b56bf.jpg","comment_is_top":false,"comment_ctime":1553236466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553236466","product_id":100020801,"comment_content":"老师，您好。关于案例五我有一些问题：<br>(10,15] 明明已经有锁了，但是我在执行 update t set c = c+1 where id = 11;  时可以成功，我猜测是因为 11 不存在，因此不需要申请行锁，所以成功了？","like_count":0},{"had_liked":false,"id":76526,"user_name":"Geek_515b9e","can_delete":false,"product_type":"c1","uid":1335734,"ip_address":"","ucode":"2D041B7679A2AF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/dlj3u0jzg1gmCSxZ6daxUhhjtjmgqIwdOyalaEXYDYyQxibOsQdTrKFPPRs2I2XCHoehNaYUPrIffia9ZnR9efqQ/132","comment_is_top":false,"comment_ctime":1552626671,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552626671","product_id":100020801,"comment_content":"老师您好，看了几遍没明白，实例2跟实例8的区别，为什么实例2不会锁，实例8的sessionB会锁呢。。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164275,"discussion_content":"因为案例2是覆盖索引，主键不会被锁。而案例8就不一样了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581166402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74711,"user_name":"Demter","can_delete":false,"product_type":"c1","uid":1158439,"ip_address":"","ucode":"BE3B6F726916CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/27/5556ae50.jpg","comment_is_top":false,"comment_ctime":1552285095,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552285095","product_id":100020801,"comment_content":"老师。我有两个问题 <br>1 使用select for update与select lock in share mode在加间隙锁时候有啥区别呢？<br>2 为啥唯一索引的间隙锁可以退化为行锁，这时候如果往间隙插入一个数据不是就可以了吗？<br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164278,"discussion_content":"2、可能跟Innodb的并发机制有关了吧。同问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581166649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73892,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1552026379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552026379","product_id":100020801,"comment_content":"续上：<br>表结构:<br>CREATE TABLE `tb_module_status` (<br>  `id` varchar(64) NOT NULL,<br>  `module_id` varchar(64) NOT NULL,<br>  `code` int(11) NOT NULL,<br>  `name` varchar(200) NOT NULL,<br>  `is_mail_notice` tinyint(1) DEFAULT NULL,<br>  `warn_level` int(11) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `tb_module_status_pk` (`module_id`,`code`),<br>  KEY `module_id` (`module_id`),<br>  CONSTRAINT `tb_module_status_ibfk_1` FOREIGN KEY (`module_id`) REFERENCES `tb_module` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8","like_count":0},{"had_liked":false,"id":73891,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1552026359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552026359","product_id":100020801,"comment_content":"一条留言超出字数限制了，续上：<br>*** (2) TRANSACTION:<br>TRANSACTION 51376280536, ACTIVE 0 sec starting index read<br>mysql tables in use 1, locked 1<br>4 lock struct(s), heap size 1136, 4 row lock(s), undo log entries 3<br>MySQL thread id 30371820, OS thread handle 140479596992256, query id 370852524868 10.10.3.33 dms updating<br>UPDATE tb_module_status SET <br>\t\t\tmodule_id = &#39;738570731062956032&#39;,<br>\t\t\tcode = 0,<br>\t\t\tname = &#39;ok&#39;,<br>\t\t\tis_mail_notice = 0,<br>\t\t\twarn_level = 0<br>\t\t WHERE id = &#39;744825864994295808&#39;<br>*** (2) HOLDS THE LOCK(S):<br>RECORD LOCKS space id 703 page no 161 n bits 240 index PRIMARY of table `dms`.`tb_module_status` trx id 51376280536 lock_mode X locks rec but not gap<br>Record lock, heap no 67 PHYSICAL RECORD: n_fields 8; compact format; info bits 0<br> 0: len 18; hex 373434383235383635313238353133353336; asc 744825865128513536;;<br> 1: len 6; hex 000bf643d3d8; asc    C  ;;<br> 2: len 7; hex 640013003f1780; asc d   ?  ;;<br> 3: len 18; hex 373338353730353230383635343131303732; asc 738570520865411072;;<br> 4: len 4; hex 80000000; asc     ;;<br> 5: len 2; hex 6f6b; asc ok;;<br> 6: len 1; hex 80; asc  ;;<br> 7: len 4; hex 80000000; asc     ;;<br><br>*** (2) WAITING FOR THIS LOCK TO BE GRANTED:<br>RECORD LOCKS space id 703 page no 161 n bits 240 index PRIMARY of table `dms`.`tb_module_status` trx id 51376280536 lock_mode X locks rec but not gap waiting<br>Record lock, heap no 65 PHYSICAL RECORD: n_fields 8; compact format; info bits 0<br> 0: len 18; hex 373434383235383634393934323935383038; asc 744825864994295808;;<br> 1: len 6; hex 000bf643d3e6; asc    C  ;;<br> 2: len 7; hex 6e001ac03b04bc; asc n   ;  ;;<br> 3: len 18; hex 373338353730373331303632393536303332; asc 738570731062956032;;<br> 4: len 4; hex 80000000; asc     ;;<br> 5: len 2; hex 6f6b; asc ok;;<br> 6: len 1; hex 80; asc  ;;<br> 7: len 4; hex 80000000; asc     ;;","like_count":0},{"had_liked":false,"id":73890,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1552026297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552026297","product_id":100020801,"comment_content":"老师好，最近遇到了一个死锁的问题，一直没想明白，望老师能抽出时间指点一二。<br>问题简单描述是：一条update语句，是根据主键去更新其他字段的值的，但是语句执行时持有了主键索引上的多个记录锁（locks rec but not gap），然后导致了死锁。日志如下：<br><br>------------------------<br>LATEST DETECTED DEADLOCK<br>------------------------<br>2019-03-06 14:41:09 0x7fc3f47a1700<br>*** (1) TRANSACTION:<br>TRANSACTION 51376280550, ACTIVE 0 sec starting index read<br>mysql tables in use 1, locked 1<br>LOCK WAIT 3 lock struct(s), heap size 1136, 2 row lock(s), undo log entries 1<br>MySQL thread id 30371748, OS thread handle 140479596726016, query id 370852524619 10.10.3.34 dms updating<br>UPDATE tb_module_status SET <br>\t\t\tmodule_id = &#39;738570520865411072&#39;,<br>\t\t\tcode = 0,<br>\t\t\tname = &#39;ok&#39;,<br>\t\t\tis_mail_notice = 0,<br>\t\t\twarn_level = 0<br>\t\t WHERE id = &#39;744825865128513536&#39;<br>*** (1) WAITING FOR THIS LOCK TO BE GRANTED:<br>RECORD LOCKS space id 703 page no 161 n bits 240 index PRIMARY of table `dms`.`tb_module_status` trx id 51376280550 lock_mode X locks rec but not gap waiting<br>Record lock, heap no 67 PHYSICAL RECORD: n_fields 8; compact format; info bits 0<br> 0: len 18; hex 373434383235383635313238353133353336; asc 744825865128513536;;<br> 1: len 6; hex 000bf643d3d8; asc    C  ;;<br> 2: len 7; hex 640013003f1780; asc d   ?  ;;<br> 3: len 18; hex 373338353730353230383635343131303732; asc 738570520865411072;;<br> 4: len 4; hex 80000000; asc     ;;<br> 5: len 2; hex 6f6b; asc ok;;<br> 6: len 1; hex 80; asc  ;;<br> 7: len 4; hex 80000000; asc     ;;","like_count":0},{"had_liked":false,"id":73018,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1551777927,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1551777927","product_id":100020801,"comment_content":"案例二:按照您说的步骤我试验是对的。但是我手工把ID等于7记录删掉后，再重复步骤案例二的步骤，记录为7的就可以插入了。这个是什么原因？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164281,"discussion_content":"gap是动态调整的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581166676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72519,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1551663412,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551663412","product_id":100020801,"comment_content":"next-key lock就是行锁和间隙锁的组合，当等值查询且值存在的时候就退化为行锁，否则就是间隙锁。间隙锁就是根据查询条件往左或往右找间隙并锁住，间隙内的行或索引就会被锁住，不允许插入或更新。间隙锁坚决了幻读的问题。","like_count":0},{"had_liked":false,"id":70912,"user_name":"Bennet","can_delete":false,"product_type":"c1","uid":1022801,"ip_address":"","ucode":"C85C47A75BA412","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXYib4bOBtUeLniaqjMNaOY4gDPPbL4hYmv1HYHSPibyHVQlAeWhabABIy0YL7qgOqaa8EibxGSoiaw1w/132","comment_is_top":false,"comment_ctime":1551227738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551227738","product_id":100020801,"comment_content":"关于案例六结论（“这个蓝色区域左右两边都是虚线，表示开区间，即 (c=5,id=5) 和 (c=15,id=15) 这两行上都没有锁。”）的疑问。<br><br>实验过程：<br>SessionA：<br>T1&gt; begin;<br>T1&gt; delete from t where c=10;<br><br>SessionB:<br>T2&gt; insert into t value(6, 5, 50); block<br>T2&gt; insert into t value(11, 5, 50); block<br>T2&gt; insert into t value(16, 5, 50); block<br>T2&gt; insert into t value(31, 5, 50); block<br>这里退出 SessionB<br><br>SessionC:<br>T3&gt; insert into t value(6, 15, 50); block<br>T3&gt; insert into t value(11, 15, 50); block<br>T3&gt; insert into t value(16, 15, 50); success<br>T3&gt; insert into t value(31, 15, 50); success<br><br> “(c=5,id=5) 和 (c=15,id=15) 这两行上都没有锁”要怎么理解？（感觉文章还要看几遍😢）<br>上面实验中 c=5 和 c=15 的差异是怎么造成的，主键上的锁要怎么分析？<br>","like_count":0},{"had_liked":false,"id":70837,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1551192379,"is_pvip":false,"replies":[{"id":"25361","content":"1. 案例5这个是“非等值查询”(id&gt;10)的向右遍历，不会退化<br>2. 你要说的是不是(c=15,id=15)？这里是等值查询(c=10)的向右遍历, 会退化成间隙","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551195289,"ip_address":"","comment_id":70837,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551192379","product_id":100020801,"comment_content":"老师您好，再一次看完这篇后还是有几个疑问，烦请您解答一下。<br>1.案例五中，id &gt; 10 and id &lt;= 15; 按照优化2，扫描到id=20后判断不&lt;=15应该退化成间隙锁才对，为什么锁范围还会是(10,20]呢，不应该退化成(10,20)吗？<br>2.案例六中，Session A加锁范围是(c=6,id=6)至(c=14,id=14)。但是我在Session B中执行 insert into t values (14,14,14)却还是可以插入成功。间隙锁并没有控制住c=14的插入，这是为什么呢？<br>还望老师在百忙之中可以指点迷津，感激不尽。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440854,"discussion_content":"1. 案例5这个是“非等值查询”(id&amp;gt;10)的向右遍历，不会退化\n2. 你要说的是不是(c=15,id=15)？这里是等值查询(c=10)的向右遍历, 会退化成间隙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551195289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70566,"user_name":"Bennet","can_delete":false,"product_type":"c1","uid":1022801,"ip_address":"","ucode":"C85C47A75BA412","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXYib4bOBtUeLniaqjMNaOY4gDPPbL4hYmv1HYHSPibyHVQlAeWhabABIy0YL7qgOqaa8EibxGSoiaw1w/132","comment_is_top":false,"comment_ctime":1551141869,"is_pvip":false,"replies":[{"id":"25181","content":" insert(id&amp;gt;5, c=5, 50)<br><br>这个写法没看懂。。你写完整的语句出来哈。<br><br>最好把复现步骤的前文也写出来😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551143192,"ip_address":"","comment_id":70566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551141869","product_id":100020801,"comment_content":"老师早，正在拼命补课，有个疑问：<br><br>案例六中最后的结论：“这个蓝色区域左右两边都是虚线，表示开区间，即 (c=5,id=5) 和 (c=15,id=15) 这两行上都没有锁。”<br>实验结果： insert(id&gt;5, c=5, 50) 都会 block，但是 insert(id&gt;5, c=15, 50) success，没有太能理解 c=5 这个锁的情况。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440696,"discussion_content":" insert(id&amp;amp;gt;5, c=5, 50)\n\n这个写法没看懂。。你写完整的语句出来哈。\n\n最好把复现步骤的前文也写出来😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551143192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62993,"user_name":"happy涛","can_delete":false,"product_type":"c1","uid":1387892,"ip_address":"","ucode":"9D67FA68C40904","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaxhA2xdIRKUeRaiaMAVxrGJcImhY0qWoDJbLLW3l8uCvXicrHJ4GaRBkZBz4RAdaSh0YsIOJFyrhQ/132","comment_is_top":false,"comment_ctime":1548222874,"is_pvip":false,"replies":[{"id":"22270","content":"不是哦<br>案例二的语句是  where c=5 lock in share mode, 这个在c上的加锁范围是(5,10)","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548239230,"ip_address":"","comment_id":62993,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548222874","product_id":100020801,"comment_content":"老师：<br>案例二：非唯一索引等值锁，这个文章中，事物A加读取之后， 按您的文章走，最后结果加的是（5，10）间隙锁， 但我这里为什么插入，c从[0,9)都不能插入。<br>mysql版本是8.0.12,隔离级别是RR，表用的是您的例子，数据也是。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437430,"discussion_content":"不是哦\n案例二的语句是  where c=5 lock in share mode, 这个在c上的加锁范围是(5,10)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548239230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57876,"user_name":"neptunesong","can_delete":false,"product_type":"c1","uid":1058431,"ip_address":"","ucode":"6592C8724B3D95","user_header":"","comment_is_top":false,"comment_ctime":1546933602,"is_pvip":false,"replies":[{"id":"21114","content":"我是这么验证的， <br>session A:<br>begin;<br>delete from t1 where pubtime&gt;1 and pubtime&lt;20 and userid=&#39;hdc&#39; and comment is not null;<br><br>sessionB:<br>update t1 set  comment=&#39;a&#39; where  pubtime=20 and userid=&#39;bbb&#39;;<br>(blocked)<br><br>你的验证方法贴一下<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547118857,"ip_address":"","comment_id":57876,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546933602","product_id":100020801,"comment_content":"之前问过您这篇文章http:&#47;&#47;hedengcheng.com&#47;?p=771中关于&quot;一个复杂的sql&quot;例子，不知您是否还记得。我按照您说的进行pubtime=20进行测试，没有发现被lock住，说明针对pubtime&lt;20加的是gap锁，不是next key锁。这个和我们案例4中场景一样，但结果不一样。不确定是哪里想错了。求解惑：)","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435804,"discussion_content":"我是这么验证的， \nsession A:\nbegin;\ndelete from t1 where pubtime&amp;gt;1 and pubtime&amp;lt;20 and userid=&amp;#39;hdc&amp;#39; and comment is not null;\n\nsessionB:\nupdate t1 set  comment=&amp;#39;a&amp;#39; where  pubtime=20 and userid=&amp;#39;bbb&amp;#39;;\n(blocked)\n\n你的验证方法贴一下\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547118857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57825,"user_name":"熠辰","can_delete":false,"product_type":"c1","uid":1305373,"ip_address":"","ucode":"BEB9B0BD2A2790","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJibUzUHAI2Fe5aq2JZ1UiceYv54icGMt9uQsbViadOibPllsQOyoRcto4TXicNbVvUZYfAhrbicVb6GlSWw/132","comment_is_top":false,"comment_ctime":1546918232,"is_pvip":false,"replies":[{"id":"21111","content":"对，主键索引是唯一索引的一种，在我们这个规则里面是一样的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547118273,"ip_address":"","comment_id":57825,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546918232","product_id":100020801,"comment_content":"老师，你好，麻烦问下对于规则当中，优化1中针对的唯一索引加锁，这块，对于主键索引是否也可以理解为唯一索引的加锁规则，对于案例2最后select id更改为select d测试，update会被阻塞，如果按照优化1的规则看的话，是因为存在的行锁导致的阻塞，不知道是否理解的正确，希望老师帮忙解答！！！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435777,"discussion_content":"对，主键索引是唯一索引的一种，在我们这个规则里面是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547118273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57217,"user_name":"进阶的码农","can_delete":false,"product_type":"c1","uid":1017821,"ip_address":"","ucode":"D8991282640334","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/dd/4f53f95d.jpg","comment_is_top":false,"comment_ctime":1546687632,"is_pvip":false,"replies":[{"id":"20642","content":"这个就是典型的lock ... for update会出现的问题。这两个事务的加锁顺序没有保持一致。<br><br>先回答你第二个问题，一个delete语句，可不只是会锁bikeid 这个索引哦，假设要删除的行的时间字段值是T，也会去idx_time的T上加行锁的。<br><br>如果要解决这个问题，一种方法是改变锁顺序。只考虑这两个语句的话，transaction 2查出bikeid对应的T值，先去执行一个where update_time=T for update.<br><br>不过一般如果死锁不严重，问题不大，重试事务就可以了。<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546695622,"ip_address":"","comment_id":57217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546687632","product_id":100020801,"comment_content":"--<br>LATEST DETECTED DEADLOCK<br>--<br>2018-12-18 21:03:25 0x7f33248e0700<br>*** (1) TRANSACTION:<br>TRANSACTION 404074133, ACTIVE 1 sec starting index read<br>mysql tables in use 1, locked 1<br>LOCK WAIT 3 lock struct(s), heap size 1136, 2 row lock(s)<br>MySQL thread id 176, OS thread handle 139857630418688, query id 36851897 127.0.0.1 user001 Sending data<br>select<br>        bikeId, lat, lng, update_time, state, accuracy<br>        from mbk_location_rawdata<br>        where state = 0<br>         and update_time&lt;&#39;2018-12-18 20:57:25&#39; <br>        LIMIT 500<br>        for update&#47;*user001*&#47;<br>*** (1) WAITING FOR THIS LOCK TO BE GRANTED:<br>RECORD LOCKS space id 29488 page no 269 n bits 344 index PRIMARY of table `mbk_bike`.`mbk_location_rawdata` trx id 404074133 lock_mode X locks rec but not gap waiting<br>Record lock, heap no 23 PHYSICAL RECORD: n_fields 9; compact format; info bits 32<br>*** (2) TRANSACTION:<br>TRANSACTION 404074140, ACTIVE 0 sec updating or deleting<br>mysql tables in use 1, locked 1<br>4 lock struct(s), heap size 1136, 3 row lock(s), undo log entries 1<br>MySQL thread id 165, OS thread handle 139857633347328, query id 36851918 127.0.0.1 user001 updating<br>delete from mbk_location_rawdata<br>        where bikeId = &#39;aMho6x8BtC&#39;&#47;*user001*&#47;<br>*** (2) HOLDS THE LOCK(S):<br>RECORD LOCKS space id 29488 page no 269 n bits 344 index PRIMARY of table `mbk_bike`.`mbk_location_rawdata` trx id 404074140 lock_mode X locks rec but not gap<br>Record lock, heap no 23 PHYSICAL RECORD: n_fields 9; compact format; info bits 32<br> *** (2) WAITING FOR THIS LOCK TO BE GRANTED:<br>RECORD LOCKS space id 29488 page no 201 n bits 1000 index idx_time of table `mbk_bike`.`mbk_location_rawdata` trx id 404074140 lock_mode X locks rec but not gap waiting<br>Record lock, heap no 105 PHYSICAL RECORD: n_fields 2; compact format; info bits 0<br>*** WE ROLL BACK TRANSACTION (1)<br>------------<br>TRANSACTIONS<br>问题：<br>1.发生死锁的原因？<br>2.死锁日志transaction2里delete语句的条件是bikeId，就算获取锁也是获取bikeId的索引，为什么死锁日志里项[WAITING FOR THIS LOCK TO BE GRANTED] 是indx_time,这是我最疑惑的地方<br>希望老师拯救我，一直没想通，网上也没有搜到类似的问题","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435466,"discussion_content":"这个就是典型的lock ... for update会出现的问题。这两个事务的加锁顺序没有保持一致。\n\n先回答你第二个问题，一个delete语句，可不只是会锁bikeid 这个索引哦，假设要删除的行的时间字段值是T，也会去idx_time的T上加行锁的。\n\n如果要解决这个问题，一种方法是改变锁顺序。只考虑这两个语句的话，transaction 2查出bikeid对应的T值，先去执行一个where update_time=T for update.\n\n不过一般如果死锁不严重，问题不大，重试事务就可以了。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546695622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57216,"user_name":"进阶的码农","can_delete":false,"product_type":"c1","uid":1017821,"ip_address":"","ucode":"D8991282640334","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/dd/4f53f95d.jpg","comment_is_top":false,"comment_ctime":1546687630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546687630","product_id":100020801,"comment_content":"老师你好问一个最近项目中遇到的死锁，困扰了我好久，一直不知道原因，下面给出隔离级别、表结构、业务逻辑、死锁log<br>1.隔离级别 <br>rc<br>2.表结构<br>CREATE TABLE `mbk_location_rawdata` (<br>  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;,<br>  `bikeId` varchar(15) NOT NULL,<br>  `lat` decimal(11,8) NOT NULL DEFAULT &#39;0.00000000&#39; ,<br>  `lng` decimal(11,8) NOT NULL DEFAULT &#39;0.00000000&#39;,<br>  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP &#39;,<br>  `state` int(8) NOT NULL DEFAULT &#39;0&#39; ,<br>  `accuracy` smallint(6) NOT NULL DEFAULT &#39;0&#39; ,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `uniq_bikeid` (`bikeId`),<br>  KEY `idx_time` (`update_time`) USING BTREE,<br>  KEY `idx_state` (`state`)<br>) ENGINE=InnoDB AUTO_INCREMENT=8897633 DEFAULT CHARSET=utf8 <br>3.业务逻辑<br>@Transaction <br>processData(timeParam){<br>&#47;&#47;对应sql  select * from test_rawdata where state=0 and update_time&lt;timeParam for update limit 500;<br>bikeIds = findForUpdate();<br>&#47;&#47;取出数据，然后先状态改成2<br>&#47;&#47;对应sql update test_rawdata set state = 2 where bikeId in(bikeIds);<br>updateData(bikeIds);<br>}<br>@Transaction<br>deleteData(bikeIdParam){<br>&#47;&#47;sql     delete from mbk_location_rawdata<br>        where bikeId = bikeIdParam<br>}<br>留言太长，下边一条跟着死锁日志","like_count":0},{"had_liked":false,"id":56754,"user_name":"秦岭","can_delete":false,"product_type":"c1","uid":1103644,"ip_address":"","ucode":"E4C324C08A9DA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/1c/f539a8aa.jpg","comment_is_top":false,"comment_ctime":1546551937,"is_pvip":false,"replies":[{"id":"21082","content":"在id=15这个case里我也觉得是bug ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547100936,"ip_address":"","comment_id":56754,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546551937","product_id":100020801,"comment_content":"不明白为什么范围加锁的时候要把最后那个不满足条件的值加锁，例如案例三中的id=15,案例四中的c=15这两个行锁，我在想如果不加锁并由另外session删除这个值应该也不会出现幻读呀","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435214,"discussion_content":"在id=15这个case里我也觉得是bug ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547100936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56738,"user_name":"neptunesong","can_delete":false,"product_type":"c1","uid":1058431,"ip_address":"","ucode":"6592C8724B3D95","user_header":"","comment_is_top":false,"comment_ctime":1546532153,"is_pvip":false,"replies":[{"id":"20469","content":"你可以用这个语句验证一下：<br>update t1 set  comment=&#39;a&#39; where  pubtime=20 and userid=&#39;bbb&#39; limit 1;<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546564280,"ip_address":"","comment_id":56738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546532153","product_id":100020801,"comment_content":"道歉极客好像不能留言用图片截图，只能用文字，所以我粘贴链接了。对比着何登成在https:&#47;&#47;www.cnblogs.com&#47;metoy&#47;p&#47;8073303.html提到的，在其最后用例（一条复杂的SQL)描述，“由Index Key所确定的范围，被加上了GAP锁”。我理解他的用例和我们的用例4应该是一个场景的。但我们这里用了nextkey不仅是gap。我不确定我理解的对这两个场景有什么不同会导致where后面的indexkey加锁有不同吗？还是本身这篇链接文章在这个点上分析错了？谢谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435204,"discussion_content":"你可以用这个语句验证一下：\nupdate t1 set  comment=&amp;#39;a&amp;#39; where  pubtime=20 and userid=&amp;#39;bbb&amp;#39; limit 1;\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546564280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56661,"user_name":"滔滔","can_delete":false,"product_type":"c1","uid":1303342,"ip_address":"","ucode":"6968B5771AF79D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/2e/77ad18f4.jpg","comment_is_top":false,"comment_ctime":1546518635,"is_pvip":false,"replies":[{"id":"20425","content":"这个你要配合索引结构和执行流来想哈。<br>比如查询是where c&lt;=10 for update， 那就是先找c的最小值，然后向右遍历到c&gt;10的第一个记录，对吧。<br><br>再配合上“访问过的资源都加锁”来分析","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546524874,"ip_address":"","comment_id":56661,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546518635","product_id":100020801,"comment_content":"老师，能总结下什么时候向右扫描什么时候向左扫描吗？感觉有点晕。比如说对于范围查询非唯一索引的情况，查询c&lt;=10 for update，是先进行等值查询查到(5,10]这个区间，然后根据优化二退化成gap锁，然后再向左扫描吗？如果是查询c&lt;10又是怎样的加锁流程呢？还会先进行等值查询吗？拜托老师给解一下惑，百思不得其解，辛苦老师了😀😙","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435174,"discussion_content":"这个你要配合索引结构和执行流来想哈。\n比如查询是where c&amp;lt;=10 for update， 那就是先找c的最小值，然后向右遍历到c&amp;gt;10的第一个记录，对吧。\n\n再配合上“访问过的资源都加锁”来分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546524874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56624,"user_name":"滔滔","can_delete":false,"product_type":"c1","uid":1303342,"ip_address":"","ucode":"6968B5771AF79D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/2e/77ad18f4.jpg","comment_is_top":false,"comment_ctime":1546509437,"is_pvip":false,"replies":[{"id":"20432","content":"不是先加再释放，就是直接“只加”<br><br>前面那个理解不太对 ，这个我会安排到后面的文章中说","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546525737,"ip_address":"","comment_id":56624,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546509437","product_id":100020801,"comment_content":"老师，案例四中ssesionA的sql如果改为select * from t where c&lt;15 for update，则加锁过程是先做等值查询对(10,15]加nextkey锁，根据优化条件二，nextkey锁退化为gap锁，之后再向左扫描，依次对(5,10]，(0,5],(负无穷，0]加nextkey锁，是这样的吗？还有关于nextkey锁退化成gap锁或行锁的过程是先加nextkey锁然后再释放gap锁或行锁还是在加锁的时候就直接加gap锁和行锁？🤔","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435154,"discussion_content":"不是先加再释放，就是直接“只加”\n\n前面那个理解不太对 ，这个我会安排到后面的文章中说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546525737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56614,"user_name":"TKbook","can_delete":false,"product_type":"c1","uid":1073829,"ip_address":"","ucode":"F6E0E99CC79059","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/a5/43aa0c27.jpg","comment_is_top":false,"comment_ctime":1546506035,"is_pvip":false,"replies":[{"id":"20435","content":"一开始我碰到这些case也是觉得毁三观😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546526945,"ip_address":"","comment_id":56614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546506035","product_id":100020801,"comment_content":"读到这里，感觉跟之前自己的认知相差很大，原来mysql也有这么大学问，感谢老师！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435148,"discussion_content":"一开始我碰到这些case也是觉得毁三观😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546526945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56605,"user_name":"一块跑跑","can_delete":false,"product_type":"c1","uid":1177796,"ip_address":"","ucode":"576EC5A37721FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/c4/c7f665df.jpg","comment_is_top":false,"comment_ctime":1546504600,"is_pvip":false,"replies":[{"id":"20420","content":"优化2只是针对等值查询哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546514857,"ip_address":"","comment_id":56605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546504600","product_id":100020801,"comment_content":"老师，案例5中，(15,20] 上锁后，根据优化 2 不是会退化成间隙锁 (15,20) 么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435142,"discussion_content":"优化2只是针对等值查询哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546514857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56556,"user_name":"龙文","can_delete":false,"product_type":"c1","uid":1303084,"ip_address":"","ucode":"D987E8F706FB1D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e2/2c/0d04f87b.jpg","comment_is_top":false,"comment_ctime":1546487569,"is_pvip":false,"replies":[{"id":"20394","content":"这是个好问题，会在后面的文章说哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546491306,"ip_address":"","comment_id":56556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546487569","product_id":100020801,"comment_content":"老师，你好，可否帮忙看一个死锁问题<br>表结构：<br>CREATE TABLE `uk_test` (<br>  `id` bigint(20) NOT NULL AUTO_INCREMENT,<br>  `a` int(11) NOT NULL,<br>  `b` int(11) NOT NULL,<br>  `c` int(11) NOT NULL,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `uk_a_b` (`a`,`b`) USING BTREE<br>) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4<br>表中数据：<br>+----+---+---+---+<br>| id | a | b | c |<br>+----+---+---+---+<br>|  1 | 1 | 1 | 2 |<br>|  6 | 1 | 2 | 1 |<br>+----+---+---+---+<br>隔离级别为rc<br>sql:执行顺序<br>session1:begin;<br>session2:begin;<br>session1:select * from uk_test where a = 1 and b = 1 for update;<br>session2:select * from uk_test where a = 1 and b = 1 for update;<br>session1:insert into uk_test (a,b,c) values(1,1,2) on duplicate key update c = 2;<br>session2:ERROR 1213 (40001): Deadlock found when trying to get lock; try restarting transaction<br>死锁信息：<br>*** (1) TRANSACTION:<br>TRANSACTION 38988310, ACTIVE 5 sec starting index read<br>mysql tables in use 1, locked 1<br>LOCK WAIT 2 lock struct(s), heap size 360, 1 row lock(s)<br>MySQL thread id 215, OS thread handle 0x7000061a7000, query id 1030 localhost root statistics<br>select * from uk_test where a = 1 and b = 1 for update<br>*** (1) WAITING FOR THIS LOCK TO BE GRANTED:<br>RECORD LOCKS space id 837 page no 4 n bits 72 index `uk_a_b` of table `innodb_test`.`uk_test` trx id 38988310 lock_mode X locks rec but not gap waiting<br>*** (2) TRANSACTION:<br>TRANSACTION 38988309, ACTIVE 16 sec inserting<br>mysql tables in use 1, locked 1<br>4 lock struct(s), heap size 1184, 3 row lock(s), undo log entries 1<br>MySQL thread id 35, OS thread handle 0x70000611f000, query id 1033 localhost root update<br>insert into uk_test (a,b,c) values(1,1,2) on duplicate key update c = 2<br>*** (2) HOLDS THE LOCK(S):<br>RECORD LOCKS space id 837 page no 4 n bits 72 index `uk_a_b` of table `innodb_test`.`uk_test` trx id 38988309 lock_mode X locks rec but not gap<br>*** (2) WAITING FOR THIS LOCK TO BE GRANTED:<br>RECORD LOCKS space id 837 page no 4 n bits 72 index `uk_a_b` of table `innodb_test`.`uk_test` trx id 38988309 lock_mode X waiting<br>*** WE ROLL BACK TRANSACTION (1)<br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435115,"discussion_content":"这是个好问题，会在后面的文章说哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546491306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56501,"user_name":"Stalary","can_delete":false,"product_type":"c1","uid":1101749,"ip_address":"","ucode":"F69AFF7C958D31","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/b5/d1ec6a7d.jpg","comment_is_top":false,"comment_ctime":1546478628,"is_pvip":false,"replies":[{"id":"20369","content":"改成小批量，死锁了就重试吧<br><br>另外如果可以对数据做一下预处理，减少主键冲突的概率，也可以减少死锁概率","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546481489,"ip_address":"","comment_id":56501,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546478628","product_id":100020801,"comment_content":"老师，我曾经遇到了一个问题，在可重复读的事物级别下，有一个批量插入的方法，我使用了insert ignore，但是在并发环境下发生了死锁，现在是使用分布式锁防止死锁，想问一下有什么更好的解决办法嘛","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435074,"discussion_content":"改成小批量，死锁了就重试吧\n\n另外如果可以对数据做一下预处理，减少主键冲突的概率，也可以减少死锁概率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546481489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56414,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1008071,"ip_address":"","ucode":"9FE5F43055D3AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/c7/b64ac05e.jpg","comment_is_top":false,"comment_ctime":1546440360,"is_pvip":false,"replies":[{"id":"20329","content":"主键索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546442547,"ip_address":"","comment_id":56414,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546440360","product_id":100020801,"comment_content":"锁是加在索引上的，如果某个字段没有索引，那么是锁表么","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435027,"discussion_content":"主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546442547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56392,"user_name":"rains","can_delete":false,"product_type":"c1","uid":1276520,"ip_address":"","ucode":"540BB449B0D52F","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/68/d6b53fbb.jpg","comment_is_top":false,"comment_ctime":1546435148,"is_pvip":false,"replies":[{"id":"20300","content":"会锁所有行，你的隔离级别和验证方法贴一下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546437615,"ip_address":"","comment_id":56392,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546435148","product_id":100020801,"comment_content":"一个更新语句，where条件中的列没有索引，那么应该全表扫描，是不是意味着这个语句要锁全部的行呢？实际执行发现，并没有这样，这是为什么","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435015,"discussion_content":"会锁所有行，你的隔离级别和验证方法贴一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546437615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56347,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1546426571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546426571","product_id":100020801,"comment_content":"此篇需要反复阅读学习","like_count":0},{"had_liked":false,"id":56278,"user_name":"蠢蠢欲动的腹肌","can_delete":false,"product_type":"c1","uid":1007326,"ip_address":"","ucode":"B10550BF463017","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/de/4e7ec66d.jpg","comment_is_top":false,"comment_ctime":1546415759,"is_pvip":false,"replies":[{"id":"20259","content":"没有找到地方，先自己分析哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546421397,"ip_address":"","comment_id":56278,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546415759","product_id":100020801,"comment_content":"老师，您好<br>请问下mysql中如何查看间隙锁和next key lock锁住的区间呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434972,"discussion_content":"没有找到地方，先自己分析哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546421397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56128,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1056767,"ip_address":"","ucode":"30300D7B752917","user_header":"https://static001.geekbang.org/account/avatar/00/10/1f/ff/aadcf237.jpg","comment_is_top":false,"comment_ctime":1546395148,"is_pvip":false,"replies":[{"id":"20222","content":"其实是在唯一索引下我们认为不合理，唯一索引不会有重复数据","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546396498,"ip_address":"","comment_id":56128,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546395148","product_id":100020801,"comment_content":"关于那个bug，如果有多条相同数据，判断直到第一个不等于他的就有用了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434940,"discussion_content":"其实是在唯一索引下我们认为不合理，唯一索引不会有重复数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546396498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55974,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1546357915,"is_pvip":false,"replies":[{"id":"20136","content":"我觉得普通索引不算，因为普通索引确实是需要扫描扫c=10,才能决定要停下来<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546361121,"ip_address":"","comment_id":55974,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546357915","product_id":100020801,"comment_content":"首先祝老师元旦快乐.为老师的敬业点赞<br>今天的案例确实很新颖,收获颇多。等空了再好好总结下<br>至于这期的问题.语句跟select * from t where id&gt;=15 and id&lt;=20 for update加锁类似。其实之前,我也觉得不应该加10和25这个行锁,不知道加这个行锁的目的是什么。既然老师都认为id=10行锁都是个bug,那gap锁(5,10)不就更是一个bug了嘛😄","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434905,"discussion_content":"我觉得普通索引不算，因为普通索引确实是需要扫描扫c=10,才能决定要停下来\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546361121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55931,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1546349520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546349520","product_id":100020801,"comment_content":"小结里面的题目，没有被锁住。<br>老师你那怎么会被锁住？是再重复隔离级别下的","like_count":0},{"had_liked":false,"id":55928,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1305601,"ip_address":"","ucode":"D49723FEA66731","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/01/978d54af.jpg","comment_is_top":false,"comment_ctime":1546349206,"is_pvip":false,"replies":[{"id":"20139","content":"是的，如果用上索引，前两个基本是确定的<br><br>&gt;13 and &lt;15还要看order by 的顺序","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546361409,"ip_address":"","comment_id":55928,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546349206","product_id":100020801,"comment_content":"老师 您刚才回我说 去第一个值是按等值来取的。那第一个值怎么选择呢 &gt;=13 是选择13嘛 ，&lt;=15是15嘛 ，&gt;13并且&lt;15是选择13嘛","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434886,"discussion_content":"是的，如果用上索引，前两个基本是确定的\n\n&amp;gt;13 and &amp;lt;15还要看order by 的顺序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546361409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55908,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1305601,"ip_address":"","ucode":"D49723FEA66731","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/01/978d54af.jpg","comment_is_top":false,"comment_ctime":1546345132,"is_pvip":false,"replies":[{"id":"20127","content":"不是，如果条件里只有“小于等于15”也是会的<br><br>就是查询过程中“取第一个值”，是按照等值去找的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546348242,"ip_address":"","comment_id":55908,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546345132","product_id":100020801,"comment_content":"可不可以这么理解 Id&gt;= 13 会先去找等于13的 再找大于13的 如果找到等于13的 则为等值查询 。但如果Id&lt;=15 的就不会去找等于15的 而是直接范围查询。可以这么理解吗 ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434878,"discussion_content":"不是，如果条件里只有“小于等于15”也是会的\n\n就是查询过程中“取第一个值”，是按照等值去找的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546348242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55905,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1546344770,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546344770","product_id":100020801,"comment_content":"哈哈 可以啊 大家一起思考","like_count":0},{"had_liked":false,"id":55878,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1305601,"ip_address":"","ucode":"D49723FEA66731","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/01/978d54af.jpg","comment_is_top":false,"comment_ctime":1546337477,"is_pvip":false,"replies":[{"id":"20116","content":"取第一个值的时候是等值，之后遍历的时候是范围。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546340730,"ip_address":"","comment_id":55878,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546337477","product_id":100020801,"comment_content":"案例三的大于等于为什么算是等值，案例五 小于等于就没有进行优化 算成了范围查询呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434873,"discussion_content":"取第一个值的时候是等值，之后遍历的时候是范围。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546340730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55877,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1305601,"ip_address":"","ucode":"D49723FEA66731","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/01/978d54af.jpg","comment_is_top":false,"comment_ctime":1546337230,"is_pvip":false,"replies":[{"id":"20117","content":"需要对应到执行过程","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546340758,"ip_address":"","comment_id":55877,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546337230","product_id":100020801,"comment_content":"怎么分别你所说的等值查询和范围查询呢？&gt;= 算等值还是范围查询呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434872,"discussion_content":"需要对应到执行过程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546340758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164284,"discussion_content":"取第一个值的时候是等值，之后遍历的时候是范围。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581166901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55839,"user_name":"萧若愚","can_delete":false,"product_type":"c1","uid":1081558,"ip_address":"","ucode":"E9AD6D1F65E932","user_header":"https://static001.geekbang.org/account/avatar/00/10/80/d6/1f78bc57.jpg","comment_is_top":false,"comment_ctime":1546323812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546323812","product_id":100020801,"comment_content":"请教一个问题，在测试数据库上做 like 模糊查询时出现了些错误的结果，不知道原因是什么。<br>针对记录 r3 = &#39;包含&#47;查询&#39;<br>（1）select * from t where r like &#39;%&#47;&#47;%&#39; escape &#39;&#47;&#39;;  未查到 b3<br>（2）select * from t where r like &#39;%包含&#47;&#47;%&#39; escape &#39;&#47;&#39;; 可以查到 b3<br>（3）select * from t where r like &#39;%&#47;&#47;查询&#39; escape &#39;&#47;&#39;; 也未查询到 b3<br>（4）select * from t where r like &#39;%&#47;&#47;&#47;%&#39; escape &#39;&#47;&#39;; 查询可以查到 b3<br>但是在本地数据库查查询可以得到正确的结果。两个数据库都是用的 innodb 引擎，字符集都是utf8mb4。使用默认的反斜杠转义字符时，有关反斜杠的多个相关查询在测试数据库上也是得不到正确结果，本地数据库上仍是可以得到正确结果。现在没有一点头绪，希望能指点一下，谢谢！","like_count":0},{"had_liked":false,"id":55818,"user_name":"shaw","can_delete":false,"product_type":"c1","uid":1055165,"ip_address":"","ucode":"4C96304CD8A7CA","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/bd/9a7658a7.jpg","comment_is_top":false,"comment_ctime":1546315398,"is_pvip":true,"replies":[{"id":"20112","content":"你需要查看上一篇😄<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546323296,"ip_address":"","comment_id":55818,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1546315398","product_id":100020801,"comment_content":"老师，案例八中session A已经加了next-key lock (5,10]，也就是(5,10)间隙锁和c=10的行锁，为什么session B的(5,10)间隙锁还能加上？ ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434850,"discussion_content":"你需要查看上一篇😄\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546323296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345770,"discussion_content":"间隙锁不互斥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611793601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55745,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1546277778,"is_pvip":false,"replies":[{"id":"20097","content":"哦，图6我改下👍🏿<br><br>&lt;这个不是bug的，是规则1；&lt;=和&gt;=我觉得是；<br><br>第三个是好问题。不是表锁，而是因为全索引扫描，所以锁住了索引c上所有next key lock 。<br><br>新年快乐","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546303861,"ip_address":"","comment_id":55745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546277778","product_id":100020801,"comment_content":"老师，图6中的(id=5,c=5)画了两列，重复了。。。。还有感觉那个bug表述有歧义，比如查询条件为&quot;&lt;&quot;的时候，就必须访问到不满足条件的第一个值为止啊，这时候就不是bug啦。。。最后无意中发现个现象，如果session A执行的是select * from t where c &gt;= 10 and c &lt;= 20 lock in share mode;session B甚至无法执行insert(2,2,2)的，自己检查并分析原因是：优化器舍弃回表，选择了遍历主键索引，行锁升级为表锁，请老师指正。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434838,"discussion_content":"哦，图6我改下👍🏿\n\n&amp;lt;这个不是bug的，是规则1；&amp;lt;=和&amp;gt;=我觉得是；\n\n第三个是好问题。不是表锁，而是因为全索引扫描，所以锁住了索引c上所有next key lock 。\n\n新年快乐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546303861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55712,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1546266401,"is_pvip":false,"replies":[{"id":"20091","content":"？<br>特别说明了呀<br>“其实是这样的，session B 的“加 next-key lock(5,10] ”操作，实际上分成了两步，先是加 (5,10) 的间隙锁，加锁成功；然后加 c=10 的行锁，这时候才被锁住的。”<br><br>是不是我理解错你问题了…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546270346,"ip_address":"","comment_id":55712,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546266401","product_id":100020801,"comment_content":"请问案例八中，session B没有提到在（10，15）上加间隙锁的原因是，在加c=10的行锁时就被阻塞住了，无法执行下一步嘛？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434830,"discussion_content":"？\n特别说明了呀\n“其实是这样的，session B 的“加 next-key lock(5,10] ”操作，实际上分成了两步，先是加 (5,10) 的间隙锁，加锁成功；然后加 c=10 的行锁，这时候才被锁住的。”\n\n是不是我理解错你问题了…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546270346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55684,"user_name":"任大鹏","can_delete":false,"product_type":"c1","uid":1069049,"ip_address":"","ucode":"75D14B0FC68DA5","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/f9/1f0a9665.jpg","comment_is_top":false,"comment_ctime":1546260747,"is_pvip":false,"replies":[{"id":"20088","content":"新年快乐🤝","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546266315,"ip_address":"","comment_id":55684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546260747","product_id":100020801,"comment_content":"2018最后一天，第一次在极客时间留言，读完醍醐灌顶，感谢老师的总结，新年快乐！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434824,"discussion_content":"新年快乐🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546266315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55650,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1546252772,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1546252772","product_id":100020801,"comment_content":"老师，最后思考题，本地运行session b插入成功了，并没有阻塞，想不到是什么原因？有没有和我一样的呢？","like_count":0},{"had_liked":false,"id":55613,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1546243685,"is_pvip":false,"replies":[{"id":"20083","content":"新年好🤝","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546259047,"ip_address":"","comment_id":55613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546243685","product_id":100020801,"comment_content":"在外面还没看， 不过看到标题就知道是干货满满。 先祝老师元旦快乐 ， 等到家了细细品 ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434808,"discussion_content":"新年好🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546259047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55541,"user_name":"feixuefubing","can_delete":false,"product_type":"c1","uid":1252730,"ip_address":"","ucode":"5F139C180BC186","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlllSKrpQkhc9qLgtu4I4jc2FO9BJAbfgwz7meGCZqlmWsV3GfjqTecqpkTJMYpunxhKHSdc9gpQ/132","comment_is_top":false,"comment_ctime":1546227390,"is_pvip":false,"replies":[{"id":"20079","content":"加锁的原则是“查询访问到的要加”<br>For update就是满足条件的行会加上行锁<br><br>排行榜的话还是尽量用可普通查询吧。不太了解你具体需求，说一下一个功能语句？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546243402,"ip_address":"","comment_id":55541,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546227390","product_id":100020801,"comment_content":"老师好，请问像排行榜等实时性要求较高的业务，可否为了一致性使用select for update去查当前的数据，重点是，多表join联查（where条件是user表的主键id）的时候是怎样加锁的呢，能否达到预期效果，是否同时会给所有涉及到的表的行加锁？如果联查不可行，对于实时性要求高、需要的数据分布在多个表的查询，有其他更好的实践吗？谢谢老师","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434794,"discussion_content":"加锁的原则是“查询访问到的要加”\nFor update就是满足条件的行会加上行锁\n\n排行榜的话还是尽量用可普通查询吧。不太了解你具体需求，说一下一个功能语句？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546243402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55526,"user_name":"小白猪","can_delete":false,"product_type":"c1","uid":1180615,"ip_address":"","ucode":"BC7FC0E0585B76","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/c7/bd45f0c9.jpg","comment_is_top":false,"comment_ctime":1546223478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546223478","product_id":100020801,"comment_content":"看得很舒服","like_count":0},{"had_liked":false,"id":55516,"user_name":"锅子","can_delete":false,"product_type":"c1","uid":1323048,"ip_address":"","ucode":"4A9143AFB07FF2","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/28/6e019a7a.jpg","comment_is_top":false,"comment_ctime":1546222140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546222140","product_id":100020801,"comment_content":"老师早啊，想不到假期也有更!","like_count":0}]}