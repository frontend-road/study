{"id":111478,"title":"35 | 安全认证架构演进：微服务阶段","content":"<ul>\n<li>\n<p>代码：<a href=\"https://gitee.com/geektime-geekbang/staffjoy\">https://gitee.com/geektime-geekbang/staffjoy</a></p>\n</li>\n<li>\n<p>课件：<a href=\"https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ\">https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ</a> 提取码: 1aeh</p>\n</li>\n</ul>","comments":[{"had_liked":false,"id":122567,"user_name":"循序渐进","can_delete":false,"product_type":"c3","uid":1105992,"ip_address":"","ucode":"89B01513647F7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/48/ee8c043d.jpg","comment_is_top":false,"comment_ctime":1565425738,"is_pvip":false,"replies":[{"id":44984,"content":"这个和你的钥匙被别人偷去是一个问题，没有办法绝对避免，但是可以减轻风险。一些措施，采用https保证传输层的安全，设置合理的token过期时间，提供主动吊销token的接口，复杂的还可以把token和设备id进行绑定。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565448843,"ip_address":"","comment_id":122567,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"Token被截获怎么办？","like_count":15,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462312,"discussion_content":"这个和你的钥匙被别人偷去是一个问题，没有办法绝对避免，但是可以减轻风险。一些措施，采用https保证传输层的安全，设置合理的token过期时间，提供主动吊销token的接口，复杂的还可以把token和设备id进行绑定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565448843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126091,"user_name":"Young","can_delete":false,"product_type":"c3","uid":1619635,"ip_address":"","ucode":"B6CD7E4CF3220D","user_header":"https://static001.geekbang.org/account/avatar/00/18/b6/b3/f626885f.jpg","comment_is_top":false,"comment_ctime":1566311280,"is_pvip":false,"replies":[{"id":46751,"content":"你好，微服务场景下，考虑token而不是session，主要考虑是：\n1.) 微服务场景下，不仅有传统Web应用(session适合)，还有单页，无线原生，甚至其它设备等不用浏览器的场景，这些场景token更合适。\n2.) oauth2&#47;token&#47;jwt是目前业界服务间授权认证的开放标准。\n\n简单讲，session主要适用于传统web场景，而token可以同时适用于各种微服务场景(同时包括你讲的第一方和第三方场景)，所以，综合考虑采用统一token方式，这样不需要维护两套体系。\n\n当然，如果你理解底层原理，session和token本质上是类似， 只是形式有变化。\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1566388217,"ip_address":"","comment_id":126091,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师，在我的理解中，token一般是在第三方认证中无法与第一方服务共享session才使用了token作为访问的令牌，在完全第一方的应用场景下，我觉得以针对课程中这个案例，之前的集中状态会话形式下通过redis多服务共享session也能实现单点登录，只要把基于session的登录接口和逻辑单独抽离出来作为一个单独服务部署，专门用于登录和维护session的生命周期，这样改造也能够满足你这节课所列微服务场景的需要，而案例中所说的架构师放弃了像我这样基于session继续改造的方案而特地弃用session人为造了一个和session差不多作用的token主要是出于哪方面的考虑呢？是session本身有什么局限性吗？如果是的话能否列举一个session做不了而token更适用的第一方场景呢？","like_count":11,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463825,"discussion_content":"你好，微服务场景下，考虑token而不是session，主要考虑是：\n1.) 微服务场景下，不仅有传统Web应用(session适合)，还有单页，无线原生，甚至其它设备等不用浏览器的场景，这些场景token更合适。\n2.) oauth2/token/jwt是目前业界服务间授权认证的开放标准。\n\n简单讲，session主要适用于传统web场景，而token可以同时适用于各种微服务场景(同时包括你讲的第一方和第三方场景)，所以，综合考虑采用统一token方式，这样不需要维护两套体系。\n\n当然，如果你理解底层原理，session和token本质上是类似， 只是形式有变化。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566388217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144929,"user_name":"Sruby","can_delete":false,"product_type":"c3","uid":1016232,"ip_address":"","ucode":"A7D1B93F41DA0F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/81/a8/559afe8b.jpg","comment_is_top":false,"comment_ctime":1572099289,"is_pvip":false,"replies":[{"id":56083,"content":"我的课程架构图都是用ppt制作(windows的话用powerpoint, mac用keynote)。\n\n架构图其实和工具关系不大，关键要心中有图+一定的抽象总结能力:)","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1572264322,"ip_address":"","comment_id":144929,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师的架构图是用什么工具画的，都挺漂亮的。","like_count":7,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472170,"discussion_content":"我的课程架构图都是用ppt制作(windows的话用powerpoint, mac用keynote)。\n\n架构图其实和工具关系不大，关键要心中有图+一定的抽象总结能力:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572264322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119292,"user_name":"永旭","can_delete":false,"product_type":"c3","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1564552101,"is_pvip":false,"replies":[{"id":43807,"content":"web主要指传统mvc应用，带服务器端动态生成页面的。html5和单页spa应用类似，属于js+html应用直接住在用户浏览器里头的，通过API直接调用后台获取数据的。h5应用是有些公司特定叫法，单页spa应用是更通用叫法。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564580661,"ip_address":"","comment_id":119292,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师你好, web 和 h5 页面有什么区分吗 ? h5页面怎么理解好呢 ?","like_count":6,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460830,"discussion_content":"web主要指传统mvc应用，带服务器端动态生成页面的。html5和单页spa应用类似，属于js+html应用直接住在用户浏览器里头的，通过API直接调用后台获取数据的。h5应用是有些公司特定叫法，单页spa应用是更通用叫法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564580661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148729,"user_name":"DDs moving castle","can_delete":false,"product_type":"c3","uid":1066684,"ip_address":"","ucode":"08CA816F665E39","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/bc/463cca3f.jpg","comment_is_top":false,"comment_ctime":1573056413,"is_pvip":false,"replies":[{"id":57312,"content":"下一节有方案，V3.6基于JWT的安全认证方案，这个方案是全程无状态，Auth Serivce不需要维护状态，网关也不需要维护状态。\n\n基于JWT的安全认证方案是目前微服务架构的一种主流方案，尤其适合安全不是特别敏感场景。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1573128986,"ip_address":"","comment_id":148729,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师，课里说的将token设置在根域下 cookie中实现SSO单点登录，这个是可以实现的，但有个问题，这种SSO的模式相当于由Auth Service统一维护登录态，如果Auth Service不可用，整个微服务架构也就不可用了，不仅不能登录认证，也不能做校验登录和鉴权，这样会不会有些风险？？\n\n之前我们公司在不是微服务架构时使用过基于开源的CAS Server的SSO，使用的模式是，统一在CAS Server登录后，CAS Server维护登录状态，每个应用也维护登录状态，浏览器既有CAS Server给的cookie，也有应用给的cookie，这样如果不是需要单点登录到第二个系统，就暂时不用和CAS Server交互了，只需要和已登录的应用，通过这个应用给的cookie交互即可，这样即使CAS Server挂了，只是不能登录，但不会使得应用也不可用。\n\n请问这种除了中心的Auth Service维护登录状态，每个应用也维护登录状态的方式在微服务SSO场景下可行吗？？如何实现？？\n（比如V3.5架构中，可以使用网关维护登录状态，这样后端微服务不变，也不用再管登录认证这些事）\n","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473584,"discussion_content":"下一节有方案，V3.6基于JWT的安全认证方案，这个方案是全程无状态，Auth Serivce不需要维护状态，网关也不需要维护状态。\n\n基于JWT的安全认证方案是目前微服务架构的一种主流方案，尤其适合安全不是特别敏感场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573128986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200716,"user_name":"春哥","can_delete":false,"product_type":"c3","uid":1103105,"ip_address":"","ucode":"C20FED6AE27B76","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/01/befc9f3e.jpg","comment_is_top":false,"comment_ctime":1585642975,"is_pvip":false,"replies":[{"id":75437,"content":"token可以缓存起来(例如放redis)，让网关集中校验的话，可以非常快，每次校验可以做到小于10ms，对性能影响可控。\n\n如果安全不敏感，也可以考虑jwt无状态校验，就不需要集中校验。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585839247,"ip_address":"","comment_id":200716,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"微服务每次都去校验token，是不是影响性能？\n","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490115,"discussion_content":"token可以缓存起来(例如放redis)，让网关集中校验的话，可以非常快，每次校验可以做到小于10ms，对性能影响可控。\n\n如果安全不敏感，也可以考虑jwt无状态校验，就不需要集中校验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585839247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185033,"user_name":"What are you 弄啥嘞","can_delete":false,"product_type":"c3","uid":1401913,"ip_address":"","ucode":"0A3E20B259A676","user_header":"https://static001.geekbang.org/account/avatar/00/15/64/39/fb4b345a.jpg","comment_is_top":false,"comment_ctime":1583468476,"is_pvip":false,"replies":[{"id":71597,"content":"AuthService可以做成只负责令牌颁发和校验等逻辑，不包括具体的用户身份(user identity)数据，它实际需要用户数据(或者去认证用户）的时候，可以再去调用User或者Account相关的API。\n\n可以看一下Spring Security OAuth2，它可以内置带UserDB，也可以对接其它的User&#47;Account API。\n\n另外也可以看一下hydra(https:&#47;&#47;github.com&#47;ory&#47;hydra)这个oauth2&#47;oidc开源产品，它只是负责oauth2&#47;oidc相关逻辑，不负责用户和认证，但是可以对接不同的用户身份(user identity)服务。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1583583820,"ip_address":"","comment_id":185033,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"Auth Service 里面的 UserDB 跟 Account Service 里面的 User 是什么关系? 有冗余吗? \n如果我不希望用户数据有冗余, 是不是可以将 UserDB 的数据归纳到 Account Service 里面, 然后 AuthService 获取用户数据的时候, 统一走 Gateway 提供的用户信息服务, 这种架构会有什么问题吗?","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486222,"discussion_content":"AuthService可以做成只负责令牌颁发和校验等逻辑，不包括具体的用户身份(user identity)数据，它实际需要用户数据(或者去认证用户）的时候，可以再去调用User或者Account相关的API。\n\n可以看一下Spring Security OAuth2，它可以内置带UserDB，也可以对接其它的User/Account API。\n\n另外也可以看一下hydra(https://github.com/ory/hydra)这个oauth2/oidc开源产品，它只是负责oauth2/oidc相关逻辑，不负责用户和认证，但是可以对接不同的用户身份(user identity)服务。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583583820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1401913,"avatar":"https://static001.geekbang.org/account/avatar/00/15/64/39/fb4b345a.jpg","nickname":"What are you 弄啥嘞","note":"","ucode":"0A3E20B259A676","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200036,"discussion_content":"好的，谢谢啵啵老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583649280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127286,"user_name":"WL","can_delete":false,"product_type":"c3","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1566634348,"is_pvip":false,"replies":[{"id":47223,"content":"这个架构假设是企业第一方场景，也就是前端应用、认证授权服务、网关和后台服务，都是企业自己开发的，都是可信任的。\n\noauth2.0授权码模式，可以用于三方授权认证场景，比如某企业开发一个三方应用，通过google或者github的oauth2服务实现联合登录。当然，oauth2授权码模式，也可以用于第一方场景，不过流程会比上面的架构要复杂。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1566746022,"ip_address":"","comment_id":127286,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"请问这个是基于oauth2.0的协议的授权码模式吗？授权码换token的过程省略了吗？这样的流程好像没啥问题，那授权码有啥用？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464415,"discussion_content":"这个架构假设是企业第一方场景，也就是前端应用、认证授权服务、网关和后台服务，都是企业自己开发的，都是可信任的。\n\noauth2.0授权码模式，可以用于三方授权认证场景，比如某企业开发一个三方应用，通过google或者github的oauth2服务实现联合登录。当然，oauth2授权码模式，也可以用于第一方场景，不过流程会比上面的架构要复杂。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566746022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119313,"user_name":"grey927","can_delete":false,"product_type":"c3","uid":1202782,"ip_address":"","ucode":"833E02ED835B4A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","comment_is_top":false,"comment_ctime":1564559745,"is_pvip":false,"replies":[{"id":43808,"content":"auth service是一个独立的服务，不是网关，网关和auth service配合，可以实现基于网关的集中式认证鉴权。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564580707,"ip_address":"","comment_id":119313,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"auth service是不是可以理解为网关？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460843,"discussion_content":"auth service是一个独立的服务，不是网关，网关和auth service配合，可以实现基于网关的集中式认证鉴权。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564580707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197521,"user_name":"soong","can_delete":false,"product_type":"c3","uid":1049954,"ip_address":"","ucode":"E3BECF2088F3D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/62/0a4e5831.jpg","comment_is_top":false,"comment_ctime":1585383499,"is_pvip":false,"replies":[{"id":75145,"content":"下门课程会展示一个电商中台案例，会展开鉴权模块的设计和实现，欢迎关注。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585658534,"ip_address":"","comment_id":197521,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"本篇集中于会话管理，关于微服务架构下的会话管理做了很好的梳理，通过网关解决了分散在每个服务的重复工作！其中也提到了授权，但没有深入的展开，希望能就这一块有好的实践指南！","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489539,"discussion_content":"下门课程会展示一个电商中台案例，会展开鉴权模块的设计和实现，欢迎关注。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585658534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188685,"user_name":"彬清","can_delete":false,"product_type":"c3","uid":1220372,"ip_address":"","ucode":"04620BAC60F15F","user_header":"https://static001.geekbang.org/account/avatar/00/12/9f/14/b9505789.jpg","comment_is_top":false,"comment_ctime":1584404759,"is_pvip":false,"replies":[{"id":72896,"content":"简单可以自己基于spring boot实现，无非就是用户信息管理，加上认证逻辑，再加上令牌的生成和管理逻辑。\n\n也可以基于Spring Security OAuth2框架实现，可以参考Spring官方文档。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1584441596,"ip_address":"","comment_id":188685,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师好，auth service 在spring boot中是如何实现的？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487489,"discussion_content":"简单可以自己基于spring boot实现，无非就是用户信息管理，加上认证逻辑，再加上令牌的生成和管理逻辑。\n\n也可以基于Spring Security OAuth2框架实现，可以参考Spring官方文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584441596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171954,"user_name":"ella","can_delete":false,"product_type":"c3","uid":1449133,"ip_address":"","ucode":"D7DD3CCA5FECDB","user_header":"https://static001.geekbang.org/account/avatar/00/16/1c/ad/27c7dae0.jpg","comment_is_top":false,"comment_ctime":1579057637,"is_pvip":false,"replies":[{"id":66845,"content":"AuthService并非都是纯API，还有静态登录页面的，而且还要保持Session状态。一般AuthService和网关都躲在反向代理(如Nginx)后面，两者在部署架构上平行即可。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1579169352,"ip_address":"","comment_id":171954,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"AuthService是直接放到外网还是也放到网关后面呢，如果两者都可，背后的考虑因素是什么？Auth Service也可以看成是一个microService么","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481558,"discussion_content":"AuthService并非都是纯API，还有静态登录页面的，而且还要保持Session状态。一般AuthService和网关都躲在反向代理(如Nginx)后面，两者在部署架构上平行即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579169352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157263,"user_name":"恰饭哒","can_delete":false,"product_type":"c3","uid":1014023,"ip_address":"","ucode":"0395069A050057","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/07/2f418316.jpg","comment_is_top":false,"comment_ctime":1575100295,"is_pvip":false,"replies":[{"id":60510,"content":"各有利弊，放在网关上统一做的话，就会耦合依赖网关(调试测试不方便)，放在每个服务自己做的话，服务端会引入复杂性。\n\n一般业务规模小的时候，可以放在服务端做，规模大了考虑网关统一(有一定服务治理能力要求)。我在之前企业，两种都见过，都玩得还不错，没有绝对好坏，具体要根据你自己的业务上下文综合权衡。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1575285523,"ip_address":"","comment_id":157263,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"波波老师你好，请问一下，那个token验证是放在网guan好还是放在各个微服务内部好了，网guan可以统一处理认证","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476378,"discussion_content":"各有利弊，放在网关上统一做的话，就会耦合依赖网关(调试测试不方便)，放在每个服务自己做的话，服务端会引入复杂性。\n\n一般业务规模小的时候，可以放在服务端做，规模大了考虑网关统一(有一定服务治理能力要求)。我在之前企业，两种都见过，都玩得还不错，没有绝对好坏，具体要根据你自己的业务上下文综合权衡。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575285523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142265,"user_name":"马荒兵乱","can_delete":false,"product_type":"c3","uid":1485623,"ip_address":"","ucode":"8C19F44C3A903A","user_header":"https://static001.geekbang.org/account/avatar/00/16/ab/37/d5d78db6.jpg","comment_is_top":false,"comment_ctime":1571322175,"is_pvip":false,"replies":[{"id":54981,"content":"建议管理平台和移动后端服务分开用不同的网关，这样职责分离易于维护。\n\n如果一定要在一起，也可以，因为网关只关心校验令牌，网关上可以有两套校验逻辑，一套负责校验管理后台令牌，另外一套校验移动后端服务令牌，当请求过来，该启用哪个校验逻辑，可以根据域名或者path等条件判断。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1571396317,"ip_address":"","comment_id":142265,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师，我想问一下，管理平台，和移动后端服务都使用同一个网关，那么用户鉴权怎么做？因为 管理平台和移动后端是两个不同的用户体系","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471051,"discussion_content":"建议管理平台和移动后端服务分开用不同的网关，这样职责分离易于维护。\n\n如果一定要在一起，也可以，因为网关只关心校验令牌，网关上可以有两套校验逻辑，一套负责校验管理后台令牌，另外一套校验移动后端服务令牌，当请求过来，该启用哪个校验逻辑，可以根据域名或者path等条件判断。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571396317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188763,"user_name":"钱","can_delete":false,"product_type":"c3","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1584413345,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"auth3.0——将用户认证及鉴权独立成一个单独的服务是集中式用户状态的管理的扩展，不过这种方式也存在一些问题，那就是每一个微服务集群都需要和认证鉴权服务交互，所以，就出现了auth3.5这种token＋网关的模式，网关不但可以进行路由分发、负载均衡等功能还可以进行安全认证鉴权等工作，并且还屏蔽了具体微服务的实现细节。\n网关后面的环境认为是安全的，所以，也就不需要每个微服务集群都和认证鉴权服务进行交互了，当然，想交互也没问题，可以自由选择。","like_count":2}]}