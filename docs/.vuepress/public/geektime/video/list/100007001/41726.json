{"id":41726,"title":"106 | Eureka 和 Ribbon 架构设计原理","content":"无","comments":[{"had_liked":false,"id":270034,"user_name":"转身miss","can_delete":false,"product_type":"c3","uid":1268950,"ip_address":"","ucode":"6954B744B17BDE","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/d6/1dbdae42.jpg","comment_is_top":false,"comment_ctime":1608883049,"is_pvip":false,"replies":[{"id":98343,"content":"关于问题1&#47;2：在一个zone内(可以理解为一个机房内)，eureka集群是需要高可用部署的，eureka支持(peer to peer)对等同步协议，一般在一个zone内至少部署三台组成高可用集群(ereuka高可用部署方式类似Zookeer，用3、5、7这种奇数台方式部署)。因为eureka是高可用部署，所以一般认为是不会全挂的，如果一个zone内的eureka真的全挂了，那么就要靠跨zone(相当于跨机房)的高可用，也就是client要切换到其它zone去访问其它zone里头的eureka集群了。也就是像你说的，在每个zone内都要部署eureka集群，并且每个zone内的ribbon client都要知道其它zone的eureka服务地址信息（配置项：eureka.client.availabilityZones），甚至还可以定义一些出问题时优先选择哪个Zone的优先策略，具体可以参考文档：\nhttps:&#47;&#47;cloud.spring.io&#47;spring-cloud-static&#47;spring-cloud-netflix&#47;1.3.5.RELEASE&#47;multi&#47;multi_spring-cloud-ribbon.html\n的6.4节Using Ribbon with Eureka\n\n关于问题3:同zone的client肯定是优先调本zone内的Eureka和服务，出问题才会fallback到其它zone，配置项参考上面文档。如果要深入，建议参考Ribbon相关源码。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1609511504,"ip_address":"","comment_id":270034,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"杨老师您好，有些高可用的问题：\n    1.图中可以看出应用测（服务提供方和消费方）都是注册和拉取同zone的注册中心数据，如何保证本zone的注册中心部分&#47;全部宕机情况下的高可用呢。\n    2.eureka集群如果要高可用，是不是多个zone都部署多个节点？如果这样，那么应用测该如何配置地址呢，配置本zone的集群地址还是全部配置上？\n    3.消费方的调用是同zone优先调用吗，这个是ribbon的配置吗？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512497,"discussion_content":"关于问题1/2：在一个zone内(可以理解为一个机房内)，eureka集群是需要高可用部署的，eureka支持(peer to peer)对等同步协议，一般在一个zone内至少部署三台组成高可用集群(ereuka高可用部署方式类似Zookeer，用3、5、7这种奇数台方式部署)。因为eureka是高可用部署，所以一般认为是不会全挂的，如果一个zone内的eureka真的全挂了，那么就要靠跨zone(相当于跨机房)的高可用，也就是client要切换到其它zone去访问其它zone里头的eureka集群了。也就是像你说的，在每个zone内都要部署eureka集群，并且每个zone内的ribbon client都要知道其它zone的eureka服务地址信息（配置项：eureka.client.availabilityZones），甚至还可以定义一些出问题时优先选择哪个Zone的优先策略，具体可以参考文档：\nhttps://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/1.3.5.RELEASE/multi/multi_spring-cloud-ribbon.html\n的6.4节Using Ribbon with Eureka\n\n关于问题3:同zone的client肯定是优先调本zone内的Eureka和服务，出问题才会fallback到其它zone，配置项参考上面文档。如果要深入，建议参考Ribbon相关源码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609511504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178048,"user_name":"ella","can_delete":false,"product_type":"c3","uid":1449133,"ip_address":"","ucode":"D7DD3CCA5FECDB","user_header":"https://static001.geekbang.org/account/avatar/00/16/1c/ad/27c7dae0.jpg","comment_is_top":false,"comment_ctime":1581578127,"is_pvip":false,"replies":[{"id":69342,"content":"Eureka服务器集群是设计成peer 2 peer高可用部署的，一般需要部署3台以上，且部署数量是奇数台。如果只是一个(或少数)Eureka服务器down，集群仍然可用，重启以后，peer之间会同步服务实例信息，可以恢复。如果大部分或者全部Eureka服务器down，那么所有实例数据丢失，需重启和重新注册后方能恢复。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1581783046,"ip_address":"","comment_id":178048,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"如果Eureka server down了，重启以后那么已经注册的instance是不是就没了？（服务列表如果没有存数据库）","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483647,"discussion_content":"Eureka服务器集群是设计成peer 2 peer高可用部署的，一般需要部署3台以上，且部署数量是奇数台。如果只是一个(或少数)Eureka服务器down，集群仍然可用，重启以后，peer之间会同步服务实例信息，可以恢复。如果大部分或者全部Eureka服务器down，那么所有实例数据丢失，需重启和重新注册后方能恢复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581783046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177782,"user_name":"ella","can_delete":false,"product_type":"c3","uid":1449133,"ip_address":"","ucode":"D7DD3CCA5FECDB","user_header":"https://static001.geekbang.org/account/avatar/00/16/1c/ad/27c7dae0.jpg","comment_is_top":false,"comment_ctime":1581499302,"is_pvip":false,"replies":[{"id":69113,"content":"请参考Netflix eureka的文档：https:&#47;&#47;github.com&#47;Netflix&#47;eureka&#47;wiki&#47;Understanding-Eureka-Peer-to-Peer-Communication\n\n“Eureka servers communicate with one another using the same mechanism used between the Eureka client and the server as described here.”\nEureka server之间相互通讯的机制，和Eureka client和server之间通讯的机制相同。\n\n也就是说server之间也用client做服务注册发现，以及数据同步。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1581607275,"ip_address":"","comment_id":177782,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"Eureka Server上的Eureka client是做啥的，application get registry 是通过eureka client来完成的么","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483540,"discussion_content":"请参考Netflix eureka的文档：https://github.com/Netflix/eureka/wiki/Understanding-Eureka-Peer-to-Peer-Communication\n\n“Eureka servers communicate with one another using the same mechanism used between the Eureka client and the server as described here.”\nEureka server之间相互通讯的机制，和Eureka client和server之间通讯的机制相同。\n\n也就是说server之间也用client做服务注册发现，以及数据同步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581607275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45541,"user_name":"ccx-rw","can_delete":false,"product_type":"c3","uid":1265985,"ip_address":"","ucode":"2C4583F5A0798C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/TMI4gqOXaDu98csMKCDiaxoLVbp6FquYTzC3iaIMu6nM8SrEotdMjg7k02lfg71SKkr9v5RLbE5ibMqw53BQkVmng/132","comment_is_top":false,"comment_ctime":1543666740,"is_pvip":false,"replies":[{"id":16608,"content":"课程里头有较详细优劣说明，简单讲，客户端软负载性能好（少一跳），但多语言支持成本高，要为每种语言开发客户端，集中式负载有性能开销和单点问题，也有运维开销，但客户端简单，多语言无关。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1543929782,"ip_address":"","comment_id":45541,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师您好，我想请教个问题，ribbon它是基于客户端的负载均衡，那么您能给说说，基于服务端负载和基于客户端负载的区别和优缺点吗？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431084,"discussion_content":"课程里头有较详细优劣说明，简单讲，客户端软负载性能好（少一跳），但多语言支持成本高，要为每种语言开发客户端，集中式负载有性能开销和单点问题，也有运维开销，但客户端简单，多语言无关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543929782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156242,"user_name":"Nicholas","can_delete":false,"product_type":"c3","uid":1214053,"ip_address":"","ucode":"3AEAFB3AF507BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/65/04ab01a5.jpg","comment_is_top":false,"comment_ctime":1574841807,"is_pvip":false,"replies":[{"id":60041,"content":"都可以，各有利弊，老的那套比较成熟稳定，但是长期可能不维护了，新的那套是未来方向，但是需要踩坑的地方会多一点。我个人会倾向采用新技术，当然你需要综合评估。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1574856894,"ip_address":"","comment_id":156242,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师好，现在Spring Cloud似乎已经不再维护Netflix那一套东西了，而是自己写一些替代的方案，我们现在如果开发一个新的项目，到底是用Netflix那一套，还是Spring提供的新的方案比较好？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476045,"discussion_content":"都可以，各有利弊，老的那套比较成熟稳定，但是长期可能不维护了，新的那套是未来方向，但是需要踩坑的地方会多一点。我个人会倾向采用新技术，当然你需要综合评估。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574856894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}