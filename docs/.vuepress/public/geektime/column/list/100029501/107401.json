{"id":107401,"title":"15丨初识事务隔离：隔离的级别有哪些，它们都解决了哪些异常问题？","content":"<p>上一篇文章中，我们讲到了事务的四大特性ACID，分别是原子性、一致性、隔离性和持久性，其中隔离性是事务的基本特性之一，它可以防止数据库在并发处理时出现数据不一致的情况。最严格的情况下，我们可以采用串行化的方式来执行每一个事务，这就意味着事务之间是相互独立的，不存在并发的情况。然而在实际生产环境下，考虑到随着用户量的增多，会存在大规模并发访问的情况，这就要求数据库有更高的吞吐能力，这个时候串行化的方式就无法满足数据库高并发访问的需求，我们还需要降低数据库的隔离标准，来换取事务之间的并发能力。</p><p>有时候我们需要牺牲一定的正确性来换取效率的提升，也就是说，我们需要通过设置不同的隔离等级，以便在正确性和效率之间进行平衡。同时，随着RDBMS种类和应用场景的增多，数据库的设计者需要统一对数据库隔离级别进行定义，说明这些隔离标准都解决了哪些问题。</p><p>我们今天主要讲解事务的异常以及隔离级别都有哪些，如果你已经对它们有所了解，可以跳过本次章节，当然你也可以通过今天的课程快速复习一遍：</p><ol>\n<li>事务并发处理可能存在的三种异常有哪些？什么是脏读、不可重复读和幻读？</li>\n<li>针对可能存在的异常情况，四种事务隔离的级别分别是什么？</li>\n<li>如何使用MySQL客户端来模拟脏读、不可重复读和幻读？</li>\n</ol><!-- [[[read_end]]] --><h2>事务并发处理可能存在的异常都有哪些？</h2><p>在了解数据库隔离级别之前，我们需要了解设定事务的隔离级别都要解决哪些可能存在的问题，也就是事务并发处理时会存在哪些异常情况。实际上，SQL-92标准中已经对3种异常情况进行了定义，这些异常情况级别分别为脏读（Dirty Read）、不可重复读（Nonrepeatable Read）和幻读（Phantom Read）。</p><p>脏读、不可重复读和幻读都代表了什么，我用一个例子来给你讲解下。比如说我们有个英雄表heros_temp，如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/66/dd/66cbeb736b5e92dc271f86b7152d46dd.png?wh=404*178\" alt=\"\"><br>\n这张英雄表，我们会记录很多英雄的姓名，假设我们不对事务进行隔离操作，那么数据库在进行事务的并发处理时会出现怎样的情况？</p><p>第一天，小张访问数据库，正在进行事务操作，往里面写入一个新的英雄“吕布”：</p><pre><code>SQL&gt; BEGIN;\nSQL&gt; INSERT INTO heros_temp values(4, '吕布');\n</code></pre><p>当小张还没有提交该事务的时候，小李又对数据表进行了访问，他想看下这张英雄表里都有哪些英雄：</p><pre><code>SQL&gt; SELECT * FROM heros_temp;\n</code></pre><p>这时，小李看到的结果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/a8/1c4c7b7d7223739eb5346e3159bb34a8.png?wh=401*211\" alt=\"\"><br>\n你有没有发现什么异常？这个时候小张还没有提交事务，但是小李却读到了小张还没有提交的数据，这种现象我们称之为“脏读”。</p><p>那么什么是不可重复读呢？</p><p>第二天，小张想查看id=1的英雄是谁，于是他进行了SQL查询：</p><pre><code>SQL&gt; BEGIN;\nSQL&gt; SELECT name FROM heros_temp WHERE id = 1;\n</code></pre><p>运行结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/74/e31d7f286ac5d77a82fb6ece2d1d6174.png?wh=133*92\" alt=\"\"><br>\n然而此时，小李开始了一个事务操作，他对id=1的英雄姓名进行了修改，把原来的“张飞”改成了“张翼德”：</p><pre><code>SQL&gt; BEGIN;\nSQL&gt; UPDATE heros_temp SET name = '张翼德' WHERE id = 1;\n</code></pre><p>然后小张再一次进行查询，同样也是查看id=1的英雄是谁：</p><pre><code>SQL&gt; SELECT name FROM heros_temp WHERE id = 1;\n</code></pre><p>运行结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/74/e3f6e70119376869f9a39d739c842674.png?wh=131*91\" alt=\"\"><br>\n这个时候你会发现，两次查询的结果并不一样。小张会想这是怎么回事呢？他明明刚执行了一次查询，马上又进行了一次查询，结果两次的查询结果不同。实际上小张遇到的情况我们称之为“不可重复读”，也就是同一条记录，两次读取的结果不同。</p><p>从这个例子中，我们能看到小张和小李，分别开启了两个事务，针对客户端A和客户端B，我用时间顺序的方式展示下他们各自执行的内容：</p><p><img src=\"https://static001.geekbang.org/resource/image/c3/b8/c3361eaa98016638fc47af65ce12edb8.png?wh=1754*838\" alt=\"\"></p><p>那什么是幻读呢？</p><p>第三天，小张想要看下数据表里都有哪些英雄，他开始执行下面这条语句：</p><pre><code>SQL&gt; SELECT * FROM heros_temp;\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/21/41/213f1601abb1629689d6d8477bd16641.png?wh=404*173\" alt=\"\"><br>\n这时当小张执行完之后，小李又开始了一个事务，往数据库里插入一个新的英雄“吕布”：</p><pre><code>SQL&gt; BEGIN;\nSQL&gt; INSERT INTO heros_temp values(4, '吕布');\n</code></pre><p>不巧的是，小张这时忘记了英雄都有哪些，又重新执行了一遍查询：</p><pre><code>SQL&gt; SELECT * FROM heros_temp;\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/13/ab/134a542eae8b47b9c5da5b74aa96d3ab.png?wh=403*209\" alt=\"\"><br>\n他发现这一次查询多了一个英雄，原来只有3个，现在变成了4个。这种异常情况我们称之为“幻读”。</p><p>我来总结下这三种异常情况的特点：</p><ol>\n<li>脏读：读到了其他事务还没有提交的数据。</li>\n<li>不可重复读：对某数据进行读取，发现两次读取的结果不同，也就是说没有读到相同的内容。这是因为有其他事务对这个数据同时进行了修改或删除。</li>\n<li>幻读：事务A根据条件查询得到了N条数据，但此时事务B更改或者增加了M条符合事务A查询条件的数据，这样当事务A再次进行查询的时候发现会有N+M条数据，产生了幻读。</li>\n</ol><h2>事务隔离的级别有哪些？</h2><p>脏读、不可重复读和幻读这三种异常情况，是在SQL-92标准中定义的，同时SQL-92标准还定义了4种隔离级别来解决这些异常情况。</p><p>解决异常数量从少到多的顺序（比如读未提交可能存在3种异常，可串行化则不会存在这些异常）决定了隔离级别的高低，这四种隔离级别从低到高分别是：读未提交（READ UNCOMMITTED ）、读已提交（READ COMMITTED）、可重复读（REPEATABLE READ）和可串行化（SERIALIZABLE）。这些隔离级别能解决的异常情况如下表所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/b0/95/b07103c5f5486aec5e2daf1dacfd6f95.png?wh=793*209\" alt=\"\"><br>\n你能看到可串行化能避免所有的异常情况，而读未提交则允许异常情况发生。</p><p>关于这四种级别，我来简单讲解下。</p><p>读未提交，也就是允许读到未提交的数据，这种情况下查询是不会使用锁的，可能会产生脏读、不可重复读、幻读等情况。</p><p>读已提交就是只能读到已经提交的内容，可以避免脏读的产生，属于RDBMS中常见的默认隔离级别（比如说Oracle和SQL Server），但如果想要避免不可重复读或者幻读，就需要我们在SQL查询的时候编写带加锁的SQL语句（我会在进阶篇里讲加锁）。</p><p>可重复读，保证一个事务在相同查询条件下两次查询得到的数据结果是一致的，可以避免不可重复读和脏读，但无法避免幻读。MySQL默认的隔离级别就是可重复读。</p><p>可串行化，将事务进行串行化，也就是在一个队列中按照顺序执行，可串行化是最高级别的隔离等级，可以解决事务读取中所有可能出现的异常情况，但是它牺牲了系统的并发性。</p><h2>使用MySQL客户端来模拟三种异常</h2><p>我在讲解这三种异常的时候举了一个英雄数据表查询的例子，你还可以自己写SQL来模拟一下这三种异常。</p><p>首先我们需要一个英雄数据表heros_temp，具体表结构和数据，你可以从<a href=\"https://github.com/cystanford/sql_heros_data\">GitHub</a>上下载heros_temp.sql文件。</p><p>你也可以执行下面的SQL文件，来完成heros_temp数据表的创建。</p><pre><code>-- ----------------------------\n-- Table structure for heros_temp\n-- ----------------------------\nDROP TABLE IF EXISTS `heros_temp`;\nCREATE TABLE `heros_temp`  (\n  `id` int(11) NOT NULL,\n  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of heros_temp\n-- ----------------------------\nINSERT INTO `heros_temp` VALUES (1, '张飞');\nINSERT INTO `heros_temp` VALUES (2, '关羽');\nINSERT INTO `heros_temp` VALUES (3, '刘备');\n</code></pre><p>模拟的时候我们需要开两个MySQL客户端，分别是客户端1和客户端2。</p><p>在客户端1中，我们先来查看下当前会话的隔离级别，使用命令：</p><pre><code>mysql&gt; SHOW VARIABLES LIKE 'transaction_isolation';\n</code></pre><p>然后你能看到当前的隔离级别是REPEATABLE-READ，也就是可重复读。</p><p><img src=\"https://static001.geekbang.org/resource/image/fa/5f/faaf3196f842d3331e40364fa331925f.png?wh=1234*383\" alt=\"\"></p><p>现在我们把隔离级别降到最低，设置为READ UNCOMMITTED（读未提交）。</p><pre><code>mysql&gt; SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n</code></pre><p>然后再查看下当前会话（SESSION）下的隔离级别，结果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/25/33/25bc5c5e570315b9c711156cf87f4233.png?wh=1605*530\" alt=\"\"></p><p>因为MySQL默认是事务自动提交，这里我们还需要将autocommit参数设置为0，命令如下：</p><pre><code>mysql&gt; SET autocommit = 0;\n</code></pre><p>然后我们再来查看SESSION中的autocommit取值，结果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/e3/8c584071af1c37cb2ea7835ea94489e3.png?wh=992*533\" alt=\"\"><br>\n接着我们以同样的操作启动客户端2，也就是将隔离级别设置为READ UNCOMMITTED（读未提交），autocommit设置为0。</p><h3>模拟“脏读”</h3><p>我们在客户端2中开启一个事务，在heros_temp表中写入一个新的英雄“吕布”，注意这个时候不要提交。</p><p><img src=\"https://static001.geekbang.org/resource/image/23/bb/2329718eb5e446a2e2e1e42420818abb.png?wh=1241*302\" alt=\"\"><br>\n然后我们在客户端1中，查看当前的英雄表：</p><p><img src=\"https://static001.geekbang.org/resource/image/a7/34/a74922819952a7afc93311c8e3f85834.png?wh=802*525\" alt=\"\"></p><p>你能发现客户端1中读取了客户端2未提交的新英雄“吕布”，实际上客户端2可能马上回滚，从而造成了“脏读”。</p><h3>模拟“不可重复读”</h3><p>我们用客户端1来查看id=1的英雄：</p><p><img src=\"https://static001.geekbang.org/resource/image/39/17/39d6f01fbf926a83e28950bee720c917.png?wh=1188*391\" alt=\"\"></p><p>然后用客户端2对id=1的英雄姓名进行修改：</p><p><img src=\"https://static001.geekbang.org/resource/image/43/a6/43e24b5a2c9d861d4fde7ddc3195cda6.png?wh=1481*331\" alt=\"\"></p><p>这时用客户端1再次进行查询：</p><p><img src=\"https://static001.geekbang.org/resource/image/38/dd/38a638e9dcca39bc1cfb68279acdcbdd.png?wh=1225*383\" alt=\"\"></p><p>你能发现对于客户端1来说，同一条查询语句出现了“不可重复读”。</p><h3>模拟“幻读”</h3><p>我们先用客户端1查询数据表中的所有英雄：</p><p><img src=\"https://static001.geekbang.org/resource/image/cd/32/cd47f77c15be231ea0b185c265d4cd32.png?wh=831*478\" alt=\"\"></p><p>然后用客户端2，开始插入新的英雄“吕布”：</p><p><img src=\"https://static001.geekbang.org/resource/image/13/1d/13ffd32b3654ff569e0eef6dbb2de51d.png?wh=1206*264\" alt=\"\"><br>\n这时，我们再用客户端1重新进行查看：</p><p><img src=\"https://static001.geekbang.org/resource/image/c3/3e/c3de2074d616530cafc6942e4a592b3e.png?wh=828*524\" alt=\"\"><br>\n你会发现数据表多出一条数据。</p><p>如果你是初学者，那么你可以采用heros_temp数据表简单模拟一下以上的过程，加深对脏读、不可重复读以及幻读的理解。对应的，你也会更了解不同的隔离级别解决的异常问题。</p><h2>总结</h2><p>我们今天只是简单讲解了4种隔离级别，以及对应的要解决的三种异常问题。我会在优化篇这一模块里继续讲解隔离级别以及锁的使用。</p><p>你能看到，标准的价值在于，即使是不同的RDBMS都需要达成对异常问题和隔离级别定义的共识。这就意味着一个隔离级别的实现满足了下面的两个条件：</p><ol>\n<li>正确性：只要能满足某一个隔离级别，一定能解决这个隔离级别对应的异常问题。</li>\n<li>与实现无关：实际上RDBMS种类很多，这就意味着有多少种RDBMS，就有多少种锁的实现方式，因此它们实现隔离级别的原理可能不同，然而一个好的标准不应该限制其实现的方式。</li>\n</ol><p>隔离级别越低，意味着系统吞吐量（并发程度）越大，但同时也意味着出现异常问题的可能性会更大。在实际使用过程中我们往往需要在性能和正确性上进行权衡和取舍，没有完美的解决方案，只有适合与否。</p><p><img src=\"https://static001.geekbang.org/resource/image/aa/fb/aa2ae6682a571676b686509623a2a7fb.jpg?wh=3341*1688\" alt=\"\"><br>\n今天的内容到这里就结束了，你能思考一下为什么隔离级别越高，就越影响系统的并发性能吗？以及不可重复读和幻读的区别是什么？</p><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事。</p>","comments":[{"had_liked":false,"id":113708,"user_name":"LJK","can_delete":false,"product_type":"c1","uid":1199213,"ip_address":"","ucode":"12B2441099FF1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/6d/c20f2d5a.jpg","comment_is_top":true,"comment_ctime":1563129334,"is_pvip":false,"replies":[{"id":"41459","content":"你说的这种情况属于幻读。<br>当你INSERT的时候，也需要隐式的读取，比如插入数据时需要读取有没有主键冲突，然后再决定是否能执行插入。如果这时发现已经有这个记录了，就没法插入。<br><br>官方对幻读的定义是：The so-called phantom problem occurs within a transaction when the same query produces different sets of rows at different times. <br>For example, if a SELECT is executed twice, but returns a row the second time that was not returned the first time, the row is a “phantom” row. （详见：<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;innodb-next-key-locking.html ）<br><br>需要说明下，不可重复读 VS 幻读的区别：<br>不可重复读是同一条记录的内容被修改了，重点在于UPDATE或DELETE<br>幻读是查询某一个范围的数据行变多了或者少了，重点在于INSERT<br><br>所以，SELECT 显示不存在，但是INSERT的时候发现已存在，说明符合条件的数据行发生了变化，也就是幻读的情况，而不可重复读指的是同一条记录的内容被修改了。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1563163267,"ip_address":"","comment_id":113708,"utype":1}],"discussion_count":7,"race_medal":0,"score":"9.2233724807995003e+18","product_id":100029501,"comment_content":"老师好，对幻读有些迷惑，从网上看到幻读并不是说两次读取获取的结果集不同，幻读侧重的方面是某一次的 select 操作得到的结果所表征的数据状态无法支撑后续的业务操作。更为具体一些：select 某记录是否存在，结果显示不存在，准备插入此记录，但执行 insert 时发现此记录已存在，无法插入，此时就发生了幻读。","like_count":104,"discussions":[{"author":{"id":1150474,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8e/0a/31ec5392.jpg","nickname":"挠头侠","note":"","ucode":"F96966832E2252","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4654,"discussion_content":"老师你这里说的有问题呀，你说幻读是查询某一个范围的数据行变多了或者少了，但是变少了不是delete吗，你这里说delete是不可重复度呀","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1565621788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1078931,"avatar":"https://static001.geekbang.org/account/avatar/00/10/76/93/64ed7385.jpg","nickname":"arch","note":"","ucode":"A69EBFE0520B85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1150474,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8e/0a/31ec5392.jpg","nickname":"挠头侠","note":"","ucode":"F96966832E2252","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209075,"discussion_content":"赞同这个说法","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584606752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4654,"ip_address":""},"score":209075,"extra":""}]},{"author":{"id":1184743,"avatar":"https://static001.geekbang.org/account/avatar/00/12/13/e7/202ac86f.jpg","nickname":"Geek-fans","note":"","ucode":"56518D2121E884","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48184,"discussion_content":"幻读和不可重复读的区别在于,不可重复读是针对确定的某一行数据而言,而幻读是针对不确定的多行数据。因而幻读通常出现在带有查询条件的范围查询中","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1573458601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1001069,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuUYcwKWUuib3uM8XtEtthjgrzpql26MbSjkDTvSnsmibY45EV7CgOFHOnZRKMm2pibryCBQ4gakzlQ/132","nickname":"隔壁老王，黑加仑","note":"","ucode":"CB87C04538D8FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1184743,"avatar":"https://static001.geekbang.org/account/avatar/00/12/13/e7/202ac86f.jpg","nickname":"Geek-fans","note":"","ucode":"56518D2121E884","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":284569,"discussion_content":"那你觉得可重复读事物隔离级别下，会不会发生不可重复读。如果你说不会。那你可以实验下这个场景：一张表两个字段，id，name。A，B两个事物，进入事物查询的表数据都是一样的。事物A update id = 1 的name列，事物B update id=1 更改成id=2 这时候你在看id=2 的name列是事物A更新的值还是进入事物后的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592558849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48184,"ip_address":""},"score":284569,"extra":""}]},{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458353,"discussion_content":"你说的这种情况属于幻读。\n当你INSERT的时候，也需要隐式的读取，比如插入数据时需要读取有没有主键冲突，然后再决定是否能执行插入。如果这时发现已经有这个记录了，就没法插入。\n\n官方对幻读的定义是：The so-called phantom problem occurs within a transaction when the same query produces different sets of rows at different times. \nFor example, if a SELECT is executed twice, but returns a row the second time that was not returned the first time, the row is a “phantom” row. （详见：\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-next-key-locking.html ）\n\n需要说明下，不可重复读 VS 幻读的区别：\n不可重复读是同一条记录的内容被修改了，重点在于UPDATE或DELETE\n幻读是查询某一个范围的数据行变多了或者少了，重点在于INSERT\n\n所以，SELECT 显示不存在，但是INSERT的时候发现已存在，说明符合条件的数据行发生了变化，也就是幻读的情况，而不可重复读指的是同一条记录的内容被修改了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563163267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2009015,"avatar":"","nickname":"哈哈","note":"","ucode":"7D9BA546B49627","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294462,"discussion_content":"一个事务对某一个范围的数据删除，另一个事务在删除前后查询的差异是不可重复读呢还是幻读呢。幻读仅仅针对插入的数据吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595898653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1302228,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","nickname":"David.cui","note":"","ucode":"AB46F310403612","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171889,"discussion_content":"老师说的官方是不对的。这个官方我理解应该是sql92或99里面的解释，而不应该是某个数据库厂家的解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581755998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114977,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1563440861,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"233491674845","product_id":100029501,"comment_content":"老师讲得有点问题。<br>脏读针对的是数据的更新，而幻读针对的是多笔记录。<br>第一天的例子实际上幻读。<br><br>脏读：一个事务读取了另一个事务改写但还未提交的数据。<br>幻读：一个事务读取了另一个事务插入的新纪录。<br>不可重复读：在同一个事务中，多次读取同一数据返回的结果有所不同。<br>","like_count":55,"discussions":[{"author":{"id":2048101,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/40/65/49b923aa.jpg","nickname":"@mj 🍭","note":"","ucode":"ED1CEE8F2C3A64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380505,"discussion_content":"第一条的例子是幻读？幻读的前提是A事务要先提交，这里的A事务还没提交就被B事务读到了，不可能是幻读吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624536323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1706074,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/08/5a/4d709cf5.jpg","nickname":"Pray、PF","note":"","ucode":"1E3E4073763490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282577,"discussion_content":"确实，第一天插入了一个新英雄的例子应该属于幻读，脏读主要针对的是更新数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592019038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113790,"user_name":"Abyssknight","can_delete":false,"product_type":"c1","uid":1336361,"ip_address":"","ucode":"08E8D68E4B76BB","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/29/da537902.jpg","comment_is_top":false,"comment_ctime":1563157288,"is_pvip":false,"replies":[{"id":"63700","content":"多谢分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577529317,"ip_address":"","comment_id":113790,"utype":1}],"discussion_count":6,"race_medal":0,"score":"173361849128","product_id":100029501,"comment_content":"关于事务隔离和异常问题的举例不够详细和严谨，具体可以看这个 https:&#47;&#47;www.liaoxuefeng.com&#47;wiki&#47;1177760294764384&#47;1179611198786848<br><br>以下是自己的理解：<br>读未提交：在这个隔离级别下，事务A会读到事务B未提交的数据，在事务B回滚后，事务A读到的数据无意义，是脏数据，称为 脏读<br>读已提交：在这个隔离级别下，只有在事务B已提交时，事务A才能读到，如果事务A先查询id为1的记录，之后事务B修改这条记录并提交，事务A再读取，两次结果会不一致，所以不可重复读。<br>可重复读：在这个隔离级别下，就算事务B的修改已经提交，事务A读到的数据依旧是一致的。当事务B插入一条新数据并提交之后，事务A查询不到当前数据，查询不到就以为不存在，但是事务A却可以更新这条数据成功，并且更新后再次查询，数据出现了。一开始查询不到，但能修改，再次查询又出现了，跟幻觉一样，所以称为　幻读。","like_count":41,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458389,"discussion_content":"多谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577529317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1499417,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e1/19/75358282.jpg","nickname":"XG","note":"","ucode":"7F5DEA1F5F323F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312710,"discussion_content":"幻读是   一个事务在前后两次查询同一范围的时候，后一次查询看到了前一次查询没有看到的行，因为行锁只能锁住行，即使把所有的行记录都上锁，也阻止不了新插入的记录","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602775876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2962599,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/34/a7/52c4ea60.jpg","nickname":"年少挽滑稽世无双","note":"","ucode":"793DCBDE25A07B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1499417,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e1/19/75358282.jpg","nickname":"XG","note":"","ucode":"7F5DEA1F5F323F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586952,"discussion_content":"确实，解决幻读要用间隙锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662625311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312710,"ip_address":"四川"},"score":586952,"extra":""}]},{"author":{"id":1340120,"avatar":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","nickname":"FreeMason","note":"","ucode":"3D58AC2F9AB345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36582,"discussion_content":"幻读，你说的情况是在什么数据库会出现。 查询不到，如何还能更新，连读锁都没有，怎么会直接获取到写锁。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571395378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447220,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLia2EwyyEVs3tWRnMlqaAG7R7HvlW4vGvxthKsicgsCEeXO1qL7mMy6GAzgdkSKcH3c70Qa2hY3JLw/132","nickname":"沐夜星光","note":"","ucode":"22F699E237B179","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372353,"discussion_content":"链接里的解释非常好啊，相比而言，老师没有解释到点子上，还容易混淆。我有个问题，如果事务A没有执行update,幻读就不会出现了吗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620294812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1089247,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9e/df/822ab962.jpg","nickname":"wangql","note":"","ucode":"0D6D8D48EC91DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332941,"discussion_content":"这个解释很到位，厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607399198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113777,"user_name":"石维康","can_delete":false,"product_type":"c1","uid":1067564,"ip_address":"","ucode":"E39ED8416B2C01","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/2c/f8451d77.jpg","comment_is_top":false,"comment_ctime":1563154859,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"104642369963","product_id":100029501,"comment_content":"老师可以详细讲解下脏读和幻读的区别吗？看文中的例子几乎是一样的。","like_count":25,"discussions":[{"author":{"id":1283857,"avatar":"https://static001.geekbang.org/account/avatar/00/13/97/11/ea18f11f.jpg","nickname":"张瑞Rachel","note":"","ucode":"D37D69BBB09F61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2069,"discussion_content":"我的理解是这样的，脏读指的是指一个mysql客户端还没有提交的数据，被另一个mysql客户端读到了；幻读指的是在两次读取中间，另一个mysql客户端插入了数据，导致两次读取的结果不一致","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1563242018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394726,"avatar":"https://static001.geekbang.org/account/avatar/00/15/48/26/93fd21d5.jpg","nickname":"书痕","note":"","ucode":"8367371EF89D61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37630,"discussion_content":"脏读指的是指A还没有提交的数据就被B读到了，但A可能会回滚，所以B读到的是“脏”数据；\n幻读一般是查询时没有的数据，在插入时（插入前也要查询一次）却发现有了，跟出现了“幻觉”似的。\n主要还是高并发情况下的事务交叉影响。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1571648533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051663,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","nickname":"mickey","note":"","ucode":"8B490C2DDE4010","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2288,"discussion_content":"老师讲得有点问题。脏读针对的是数据的更新，而幻读针对的是多笔记录。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563437977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1012325,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","nickname":"雪飞鸿","note":"","ucode":"65D7B030828809","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1051663,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","nickname":"mickey","note":"","ucode":"8B490C2DDE4010","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3781,"discussion_content":"脏读不是指更新，指未提交的数据","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1564806463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2288,"ip_address":""},"score":3781,"extra":""}]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1980,"discussion_content":"我也有这个疑惑，感觉这俩名词侧重的业务场景不同。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563160105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1586771,"avatar":"https://static001.geekbang.org/account/avatar/00/18/36/53/1e797289.jpg","nickname":"Crush","note":"","ucode":"5E6D4EE02525D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":123749,"discussion_content":"感觉这几个概念间有并集，例如：查询语句A select * from tb where id=1,事物B, update tb set name = newname where id=1,事物b未提交，再接着执行一次查询语句A,此时是脏读还是不可重复读？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578407999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1524154,"avatar":"https://static001.geekbang.org/account/avatar/00/17/41/ba/ae028565.jpg","nickname":"YqY","note":"","ucode":"73FB936045DCB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1586771,"avatar":"https://static001.geekbang.org/account/avatar/00/18/36/53/1e797289.jpg","nickname":"Crush","note":"","ucode":"5E6D4EE02525D8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205057,"discussion_content":"脏读","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584256542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":123749,"ip_address":""},"score":205057,"extra":""}]}]},{"had_liked":false,"id":122200,"user_name":"未来的胡先森","can_delete":false,"product_type":"c1","uid":1234682,"ip_address":"","ucode":"AFF193AC0E2E6C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/fa/1f5bf642.jpg","comment_is_top":false,"comment_ctime":1565315546,"is_pvip":false,"replies":[{"id":"63555","content":"解释的很好，大家都可以看下","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577518047,"ip_address":"","comment_id":122200,"utype":1}],"discussion_count":4,"race_medal":0,"score":"91759628762","product_id":100029501,"comment_content":"关于「隔离级别越高，就越影响系统的并发性能」我的思考：<br><br>1、因为隔离级别越高就是越接近串行化操作（隔离级别最高的就是：可串行化）。而串行化操作就是按照事务的先后顺序，排队执行，一个事务操作可能就要等待很久才能执行，并发执行的效率就没有了。<br><br>2、隔离就是给资源加锁，隔离级别越低，资源的共享程度就越高，大家都能去取自己需要的资源，而隔离级别高，共享程度越低，以至于一大份资源只能上一个用完了，下一个才能使用。就像免费开放的公园，没有收费的时候，想逛的时候随便哪条小路进去都行，收费了（加锁了），其他地方全拦住，一个人进去看好了，下一个再进去看。<br><br>「不可重复读」和「幻读」的区别，老师已在留言区指出了。「不可重复读」就是针对于单独的某条数据同一事务前后读取不一致（被其他事务修改）。「幻读」针对于查询结果集的前后不一致，查询的数据表在事务的执行期间有执行插入删除的操作，导致查询结果的增加或减少。","like_count":22,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462145,"discussion_content":"解释的很好，大家都可以看下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577518047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2962599,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/34/a7/52c4ea60.jpg","nickname":"年少挽滑稽世无双","note":"","ucode":"793DCBDE25A07B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586953,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662625656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202782,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","nickname":"grey927","note":"","ucode":"833E02ED835B4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269864,"discussion_content":"数据进行了插入删除，查询结果随之增加或减少，这不是很正常的吗？为什么叫幻读了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589956720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1234682,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d6/fa/1f5bf642.jpg","nickname":"未来的胡先森","note":"","ucode":"AFF193AC0E2E6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1202782,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","nickname":"grey927","note":"","ucode":"833E02ED835B4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274009,"discussion_content":"这是指两个事务之间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590535537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269864,"ip_address":""},"score":274009,"extra":""}]}]},{"had_liked":false,"id":113769,"user_name":"JackPn","can_delete":false,"product_type":"c1","uid":1190170,"ip_address":"","ucode":"0A207AF8D39F76","user_header":"https://static001.geekbang.org/account/avatar/00/12/29/1a/87f11f3d.jpg","comment_is_top":false,"comment_ctime":1563153871,"is_pvip":false,"replies":[{"id":"41461","content":"首先，不可重复读 和 幻读都是在先后两次读取的时候发现不一致的情况，但是两种读取略有差别：<br>不可重复读是对于同一条记录内容的“不可重复读”<br>幻读是对于某一范围的数据集，发现查询数据集的行数多了或者少了，从而出现的不一致。<br>所以不可重复读的原因是 对于要查询的那条数据进行了UPDATE或DELETE<br>而幻读是对于要查询的 那个范围的数据集，进行了INSERT。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1563163699,"ip_address":"","comment_id":113769,"utype":1}],"discussion_count":2,"race_medal":0,"score":"65987663311","product_id":100029501,"comment_content":"老师我感觉幻读也是不了重复读啊，都是一个事务过程中两次读到了另一个事务修改提交后的数据","like_count":16,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458377,"discussion_content":"首先，不可重复读 和 幻读都是在先后两次读取的时候发现不一致的情况，但是两种读取略有差别：\n不可重复读是对于同一条记录内容的“不可重复读”\n幻读是对于某一范围的数据集，发现查询数据集的行数多了或者少了，从而出现的不一致。\n所以不可重复读的原因是 对于要查询的那条数据进行了UPDATE或DELETE\n而幻读是对于要查询的 那个范围的数据集，进行了INSERT。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563163699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1417868,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a2/8c/70a3ad10.jpg","nickname":"sung","note":"","ucode":"F3F761697FB7AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213849,"discussion_content":"作者讲的还是不清楚，不可能重复读，同样的条件，两次查到的值不一样。幻读也是同样的条件，两次查询出的条数不一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585127557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114369,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1563284616,"is_pvip":true,"discussion_count":2,"race_medal":1,"score":"35923022984","product_id":100029501,"comment_content":"老师示范的例子中，感觉脏读和幻读是一样的，都是读取了有可能不存在数据，区分不是很明确，老师能解答一下吗？","like_count":8,"discussions":[{"author":{"id":1202782,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","nickname":"grey927","note":"","ucode":"833E02ED835B4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269867,"discussion_content":"至少，脏读是读了他人修改但未提交的数据，而幻读的是都提交了的。我的理解。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589956796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1706074,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/08/5a/4d709cf5.jpg","nickname":"Pray、PF","note":"","ucode":"1E3E4073763490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1202782,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","nickname":"grey927","note":"","ucode":"833E02ED835B4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282624,"discussion_content":"幻读也是读到其他事务未提交的数据","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592032471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269867,"ip_address":""},"score":282624,"extra":""}]}]},{"had_liked":false,"id":113719,"user_name":"L荀","can_delete":false,"product_type":"c1","uid":1156395,"ip_address":"","ucode":"0D8827D9F6032D","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/2b/e876e7d4.jpg","comment_is_top":false,"comment_ctime":1563147502,"is_pvip":false,"replies":[{"id":"41406","content":"一个好问题，一般来说第二个事务需要进行提交。不过在文章中，我将客户端1的隔离级别设置为了 读未提交，因此不论客户端2是否提交，都会对客户端1造成影响。<br>如果将客户端1的隔离级别设置为 读已提交，或者 可重复度。就需要对客户端2的事务进行提交，这时才会对客户端1在执行的事务产生影响。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1563151615,"ip_address":"","comment_id":113719,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35922885870","product_id":100029501,"comment_content":"不可重复读，和幻读例子中事物不用提交么","like_count":9,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458359,"discussion_content":"一个好问题，一般来说第二个事务需要进行提交。不过在文章中，我将客户端1的隔离级别设置为了 读未提交，因此不论客户端2是否提交，都会对客户端1造成影响。\n如果将客户端1的隔离级别设置为 读已提交，或者 可重复度。就需要对客户端2的事务进行提交，这时才会对客户端1在执行的事务产生影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563151615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114983,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1563442085,"is_pvip":false,"replies":[{"id":"63807","content":"不错","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577542334,"ip_address":"","comment_id":114983,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27333245861","product_id":100029501,"comment_content":"我的理解是：隔离性的保证靠锁，隔离级别越高越串行，并行度越低，性能越低。","like_count":7,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458912,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577542334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113809,"user_name":"一叶知秋","can_delete":false,"product_type":"c1","uid":1445189,"ip_address":"","ucode":"15A95FA86B7AE4","user_header":"https://static001.geekbang.org/account/avatar/00/16/0d/45/b88a1794.jpg","comment_is_top":false,"comment_ctime":1563159793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27332963569","product_id":100029501,"comment_content":"两个问题个人理解是：<br>1）四个级别分别是无限制（可以并发读写）、写事务加锁（可以并发读、读完立刻释放锁而不是等事务结束）、读写事务都加锁（可以并发读、读写都是事务结束才释放锁）、表锁（读写事务序列化执行、单线程执行）。 时间开销依次递增所以随着隔离等级递增并发性能会降低。<br>2）区别在于不可重复读是由于其他事务的update、delete操作对数据进行了修改 重点在修改（内容修改）、幻读是其他事务由于delete、insert对表数据进行了修改重点在于数量新增、减少（数量变更）<br><br>嘿嘿个人理解，不对希望指出 &gt;o&lt;","like_count":6},{"had_liked":false,"id":113752,"user_name":"0 error  0 warning 0 bug","can_delete":false,"product_type":"c1","uid":1462833,"ip_address":"","ucode":"C49C7E285A2BDA","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/31/28c3d583.jpg","comment_is_top":false,"comment_ctime":1563151759,"is_pvip":false,"replies":[{"id":"41460","content":"不可重复读 VS 幻读的区别：<br>不可重复读是同一条记录的内容被修改了，重点在于UPDATE或DELETE<br>幻读是查询某一个范围的数据行变多了或者少了，重点在于INSERT<br>","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1563163428,"ip_address":"","comment_id":113752,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27332955535","product_id":100029501,"comment_content":"不可重复读和幻读还不是很理解，老师可以再详细讲讲吗","like_count":7,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458369,"discussion_content":"不可重复读 VS 幻读的区别：\n不可重复读是同一条记录的内容被修改了，重点在于UPDATE或DELETE\n幻读是查询某一个范围的数据行变多了或者少了，重点在于INSERT\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563163428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131698,"user_name":"峻铭","can_delete":false,"product_type":"c1","uid":1106202,"ip_address":"","ucode":"63AB23BADACA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/1a/20977779.jpg","comment_is_top":false,"comment_ctime":1567853945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18747723129","product_id":100029501,"comment_content":"里面的幻读例子感觉是不可重复读呢","like_count":4},{"had_liked":false,"id":114980,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1563441755,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18743310939","product_id":100029501,"comment_content":"transaction_isolation在MySQL 5.7.20中添加了作为别名 tx_isolation，现已弃用，并在MySQL 8.0中删除。可以改为：SHOW VARIABLES LIKE &#39;tx_isolation&#39;;","like_count":4,"discussions":[{"author":{"id":1033425,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/d1/209abdd6.jpg","nickname":"小狼","note":"","ucode":"FEAC7864FC1D20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296126,"discussion_content":"mysql 5.6 中是 tx_isolation，校验版本：阿里云5.6.46-log\nmysql 5.7 中既有 transaction_isolation，也有 tx_isolation，校验版本：阿里云5.7.28-log\nmysql 8.0 中仅有 transaction_isolation，校验版本：8.0.19\n\n上述 mysql 三个版本事务隔离级别变量的配置均可通过如下 sql 查询验证：\nshow variables like &#39;%isolation%&#39;;","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596458538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113879,"user_name":"Goal","can_delete":false,"product_type":"c1","uid":1307012,"ip_address":"","ucode":"C337CD4C7E07B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/84/7d21bd9e.jpg","comment_is_top":false,"comment_ctime":1563178028,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"18743047212","product_id":100029501,"comment_content":"湖人总冠军。。。","like_count":4,"discussions":[{"author":{"id":1099584,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/40/66a203cd.jpg","nickname":"江南皮革厂研发中心保安队长","note":"","ucode":"231419643A5CC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2111,"discussion_content":"这是幻读","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1563264868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1234411,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d5/eb/7dce7c33.jpg","nickname":"不是是不是","note":"","ucode":"BEDB0F2386D1CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2125,"discussion_content":"这是脏读","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563270163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2217488,"avatar":"","nickname":"Geek_2c9d2a","note":"","ucode":"197BD10F4F5045","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310936,"discussion_content":"快了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602146408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914201,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/35/59/3a7219de.jpg","nickname":"叮叮叮","note":"","ucode":"956C42489F25DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223568,"discussion_content":"脏读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586236726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122627,"user_name":"Marcus","can_delete":false,"product_type":"c1","uid":1014070,"ip_address":"","ucode":"525E6F897E50BA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/36/a1d0098c.jpg","comment_is_top":false,"comment_ctime":1565443698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14450345586","product_id":100029501,"comment_content":"老师，您只用了 READ UNCOMMITTED 级别演示了所有3种出现问题的种情况，但是我设置了READ COMMITTED 任然出现脏读，也就是本应该不出现问题的情况也出现问题？！看了评论好几个也是这个问题，请解释一下啊","like_count":3},{"had_liked":false,"id":113796,"user_name":"dbtiger","can_delete":false,"product_type":"c1","uid":1324202,"ip_address":"","ucode":"05E8447593318C","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/aa/431de942.jpg","comment_is_top":false,"comment_ctime":1563158059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14448059947","product_id":100029501,"comment_content":"【隔离级别越高，就越影响系统的并发性能】<br>1,首先隔离的实现机制是锁，隔离级别越高锁的代价越大（锁的粒度越小，表级锁到行级锁，共享锁到独占锁），终极为了一致性读写，只能是串行化操作读写（类似于操作系统的多进程原理，看着像是并行性执行，实则是单元分配CPU资源串行执行的过程）。<br>【不可重复读和幻读的区别】<br>2.我认为没啥区别，前者只是列值改变了，后者侧重是记录数变了。都是2次读的时候中间夹了一个已经执行了的事务，从而产生2次读的数据不一致的情况。<br><br>另外，请教一下陈老师，存储过程里面有很多dml操作，每个dml语句加begin...end好，还是不加好，还是一样?两种状态对锁的持有时间是不是相同的？<br><br>","like_count":3},{"had_liked":false,"id":113694,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1563120170,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14448022058","product_id":100029501,"comment_content":"打卡打卡","like_count":3},{"had_liked":false,"id":116584,"user_name":"Geek_1c165d","can_delete":false,"product_type":"c1","uid":1584176,"ip_address":"","ucode":"3E1B70DCF3DF13","user_header":"https://wx.qlogo.cn/mmopen/vi_32/aianFlNnvpUaPUbYG9EjVbibgOgOCJYqgiapCbsbIhWHJG8BBm4fzo1ALNI8vqsL4mrGB9vWPWyUCct5yLp0neQDg/132","comment_is_top":false,"comment_ctime":1563875502,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10153810094","product_id":100029501,"comment_content":"我在客户端1和2都设置了SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED即读提交，然后我在客户端2开启事务，插入一条数据，不提交，然后去客户端1查询，发现可以查询到刚刚插入的未提交的数据。请问这是什么原因呢？","like_count":2,"discussions":[{"author":{"id":1584098,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIR9QrAn9TZOrJMSYMyN96PAuAjETVrN5SPp3hMbfUAGIWtHceWPEoQtPdXeuBn7VB7dagtxynAIA/132","nickname":"ballgod","note":"","ucode":"C20E95E98EAC43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47663,"discussion_content":"set autocommit = 0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573387323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014070,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/36/a1d0098c.jpg","nickname":"Marcus","note":"","ucode":"525E6F897E50BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4468,"discussion_content":"我也是，感觉哪里没有注意到？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565443529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113728,"user_name":"ack","can_delete":false,"product_type":"c1","uid":1440912,"ip_address":"","ucode":"69CA1233EEA8E2","user_header":"https://static001.geekbang.org/account/avatar/00/15/fc/90/c9df0459.jpg","comment_is_top":false,"comment_ctime":1563148282,"is_pvip":false,"replies":[{"id":"41405","content":"对 加锁是底层的实现环节，不同的事务隔离级别对应能解决不同的异常问题。在选择隔离级别的时候，我们要在正确性和性能上进行权衡取舍","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1563150318,"ip_address":"","comment_id":113728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10153082874","product_id":100029501,"comment_content":"事务的隔离级别是需要通过锁来保证的，想要解决的问题越多，加的锁就越多，从文章也可以看出，当想要解决幻读的时候，需要的隔离级别已经是串行化了。","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458363,"discussion_content":"对 加锁是底层的实现环节，不同的事务隔离级别对应能解决不同的异常问题。在选择隔离级别的时候，我们要在正确性和性能上进行权衡取舍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563150318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113712,"user_name":"墨禾","can_delete":false,"product_type":"c1","uid":1216590,"ip_address":"","ucode":"81BA44231AABE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/4e/efaea936.jpg","comment_is_top":false,"comment_ctime":1563143242,"is_pvip":false,"replies":[{"id":"63701","content":"可以提高并发访问","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577529421,"ip_address":"","comment_id":113712,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10153077834","product_id":100029501,"comment_content":"老师，分库分表是不是可以一定程度上保证隔离性和并发访问呢？","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458354,"discussion_content":"可以提高并发访问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577529421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317706,"user_name":"Geek_28670d","can_delete":false,"product_type":"c1","uid":2814926,"ip_address":"","ucode":"7BA10C23E56F1E","user_header":"","comment_is_top":false,"comment_ctime":1634896779,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5929864075","product_id":100029501,"comment_content":"事务隔离级别越高，意味着系统为了提高安全性做出了更多的工作，从而影响了系统的性能，比如读提交隔离级别和可重复读，虽然对读操作没有加锁，采用了mvcc机制，但是可重复读需要根据事务开启时创建的一致性视图遍历回滚段，而读提交级别每次执行都会创建新的视图，遍历回滚段的次数比可重复读少。再比如序列化级别，对所有的语句都加锁操作，而其他三个级别读都是不加锁的。<br><br>不可重复读强调的同一个事务查询的同一条数据的内容改变了，与前面查询不一致，幻读强调的同一个事务查询数据的范围增加了。","like_count":1,"discussions":[{"author":{"id":2815900,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f7/9c/69c5c5dc.jpg","nickname":"越锋利","note":"","ucode":"63E9E3F3C7D53D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408954,"discussion_content":"说的很好，感觉是评论里比较深刻的。不过看了之后有点没懂，如果只是为了避免幻读的话，好像也没必要给读加锁啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635346322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232344,"user_name":"zapup","can_delete":false,"product_type":"c1","uid":1397351,"ip_address":"","ucode":"388D6BB5D7B137","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/67/fcba0967.jpg","comment_is_top":false,"comment_ctime":1593962353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888929649","product_id":100029501,"comment_content":"脏读：可进（外面噪音进入）可出（内部消息泄露），对其他事务可见。<br>不可重复读：可进不可出，多次读同一记录时不同。<br>幻读：可进不可出，多次读同一记录时相同，但查询范围内可读到新记录。","like_count":1},{"had_liked":false,"id":117472,"user_name":"law","can_delete":false,"product_type":"c1","uid":1037514,"ip_address":"","ucode":"3B664E2667ED63","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/ca/bdb348db.jpg","comment_is_top":false,"comment_ctime":1564054978,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"5859022274","product_id":100029501,"comment_content":"大家有测试过吗，我测试了一下，mysql5.6在可重复读的级别下，还是会出现脏读和不可重复读啊。","like_count":1,"discussions":[{"author":{"id":1130275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3f/23/8ff389d2.jpg","nickname":"郁方林","note":"","ucode":"8ABEAFDA815DDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378615,"discussion_content":"这里涉及到MySQL的优化了, 关键字&#34;快照&#34;, 有兴趣可以去了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623305519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1903946,"avatar":"","nickname":"InfoQ_6fbe5db36682","note":"","ucode":"FE315CB67AF508","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267916,"discussion_content":"可以试一试观测用的事务先执行一次select，再看后续的select是否有差别，怀疑这里可能有其他的优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589710733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1573288,"avatar":"https://static001.geekbang.org/account/avatar/00/18/01/a8/2662a8d1.jpg","nickname":"小白鼠丶","note":"","ucode":"76EFABC5DF8AEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7561,"discussion_content":"不会吧  我老早以前就测试过了  没问题啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567564792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033848,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c6/78/9b1e4b15.jpg","nickname":"ZircoN","note":"","ucode":"E665DF0DBB7381","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5495,"discussion_content":"autocommit设置为0了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566307103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014070,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/36/a1d0098c.jpg","nickname":"Marcus","note":"","ucode":"525E6F897E50BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4467,"discussion_content":"我也是，感觉哪里没有注意到？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565443489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114372,"user_name":"NO.9","can_delete":false,"product_type":"c1","uid":1336970,"ip_address":"","ucode":"B92F14B493406F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fUDCLLob6DFS8kZcMUfxOc4qQHeQfW4rIMK5Ty2u2AqLemcdhVRw7byx85HrVicSvy5AiabE0YGMj5gVt8ibgrusA/132","comment_is_top":false,"comment_ctime":1563285375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858252671","product_id":100029501,"comment_content":"数据数量对应都异常：<br>一条数据：脏读，不可重复读<br>多条数据：幻读","like_count":1},{"had_liked":false,"id":114124,"user_name":"柔软的胖","can_delete":false,"product_type":"c1","uid":1573853,"ip_address":"","ucode":"32B0CDA0E03BC5","user_header":"https://static001.geekbang.org/account/avatar/00/18/03/dd/e9f4c243.jpg","comment_is_top":false,"comment_ctime":1563240110,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858207406","product_id":100029501,"comment_content":"根据ACID中持久性的特性，我理解，一个事务提交以后，另一个事务是可以看到这个提交内容的。<br>在例子中，客户端2提交事务以后，客户端看到不同结果，应该是正确的。","like_count":1},{"had_liked":false,"id":113933,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1563188467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858155763","product_id":100029501,"comment_content":"我不太理解可重复度的级别，为什么两次查询的结果要一样呢，一旦某条有修改两次查询结果不一样不是很正常吗？","like_count":1},{"had_liked":false,"id":113892,"user_name":"xcoder","can_delete":false,"product_type":"c1","uid":1207135,"ip_address":"","ucode":"2C70ED36B4AC8E","user_header":"https://static001.geekbang.org/account/avatar/00/12/6b/5f/cec1e980.jpg","comment_is_top":false,"comment_ctime":1563180424,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5858147720","product_id":100029501,"comment_content":"根据以上操作<br>mysql&gt; show variables like &#39;transaction_isolation&#39;;<br>显示 Empty Set，没显示相关隔离级别<br>我的myslq版本是5.6.37","like_count":1,"discussions":[{"author":{"id":1207135,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6b/5f/cec1e980.jpg","nickname":"xcoder","note":"","ucode":"2C70ED36B4AC8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2020,"discussion_content":"好吧，我找到原因了，我这个版本用的名称是tx_isolation，现在新版本用的是transaction_isolation","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1563181191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1327313,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/d1/fb6f402a.jpg","nickname":"melon","note":"","ucode":"AFBE9426C10AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4427,"discussion_content":"你都like 了 可以 show variables like &#39;%iso%&#39;; 最稳了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565413367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","nickname":"ABC","note":"","ucode":"7501AD9C0C4A70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2236,"discussion_content":"我也遇到这个问题了，谢谢。我的版本是5.7.11.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563377818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320249,"user_name":"董俊俊","can_delete":false,"product_type":"c1","uid":1297887,"ip_address":"","ucode":"732300A779660B","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","comment_is_top":false,"comment_ctime":1636172769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636172769","product_id":100029501,"comment_content":"例子中应该调整到相应的隔离级别，再来演示这个隔离级别会遇到的问题！","like_count":0},{"had_liked":false,"id":318607,"user_name":"越锋利","can_delete":false,"product_type":"c1","uid":2815900,"ip_address":"","ucode":"63E9E3F3C7D53D","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f7/9c/69c5c5dc.jpg","comment_is_top":false,"comment_ctime":1635347326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635347326","product_id":100029501,"comment_content":"这三种读光看表现好像比较难以区分，不然看下怎么实现的，就很好理解了https:&#47;&#47;segmentfault.com&#47;a&#47;1190000037557620<br>读未提交：无锁，读最新值；<br>读已提交、可重复读：MVCC，行锁<br>串行：表锁。","like_count":0},{"had_liked":false,"id":318016,"user_name":"Geek_28670d","can_delete":false,"product_type":"c1","uid":2814926,"ip_address":"","ucode":"7BA10C23E56F1E","user_header":"","comment_is_top":false,"comment_ctime":1635124989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635124989","product_id":100029501,"comment_content":"老师能说下为什么可重复读不能解决幻读吗","like_count":0},{"had_liked":false,"id":314813,"user_name":"少年宇","can_delete":false,"product_type":"c1","uid":1793419,"ip_address":"","ucode":"25D927111D3078","user_header":"https://static001.geekbang.org/account/avatar/00/1b/5d/8b/eeed5010.jpg","comment_is_top":false,"comment_ctime":1633447726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633447726","product_id":100029501,"comment_content":"为什么王珊老师的《数据库系统概论》中写的三种异常是丢失修改、不可重复读（包含了幻读）以及脏读呢？到底该信哪个。。","like_count":0},{"had_liked":false,"id":308007,"user_name":"宇","can_delete":false,"product_type":"c1","uid":1522345,"ip_address":"","ucode":"FA825866C46C0C","user_header":"https://static001.geekbang.org/account/avatar/00/17/3a/a9/9cba7c32.jpg","comment_is_top":false,"comment_ctime":1629356404,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629356404","product_id":100029501,"comment_content":"最后面模拟脏读和幻读，怎么是一样的： 都是在客户端2开启事务插入吕布未提交，然后在客户端1查询到4条记录。连图都是一样的，怎么没人说？","like_count":0},{"had_liked":false,"id":306983,"user_name":"TheOne","can_delete":false,"product_type":"c1","uid":1582134,"ip_address":"","ucode":"2A359780156A8B","user_header":"https://static001.geekbang.org/account/avatar/00/18/24/36/1c4af368.jpg","comment_is_top":false,"comment_ctime":1628818131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628818131","product_id":100029501,"comment_content":"脏读-读取了未提交的事物<br>不可重复读-一条数据读取两次，结果不同<br>幻读-一批数据读取两次，变多或变少了<br><br>如果commut成功了，不就应该被读取到吗？没理解不可重复读","like_count":0},{"had_liked":false,"id":306131,"user_name":"一直AC一直爽","can_delete":false,"product_type":"c1","uid":2070848,"ip_address":"","ucode":"FE4C1AC0B50011","user_header":"https://static001.geekbang.org/account/avatar/00/1f/99/40/5b3fe8ca.jpg","comment_is_top":false,"comment_ctime":1628396676,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1628396676","product_id":100029501,"comment_content":"请问mysql实验环境是哪个版本，我的版本是：5.7.34，跟着“使用 MySQL 客户端来模拟三种异常”部分完成实验，执行<br>mysql&gt; SHOW VARIABLES LIKE &#39;transaction_isolation&#39;;<br>报错:<br> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;mysql&gt; SHOW VARIABLES LIKE &#39;transaction_isolation&#39;&#39; at line 1","like_count":0},{"had_liked":false,"id":294407,"user_name":"完美坚持","can_delete":false,"product_type":"c1","uid":1919541,"ip_address":"","ucode":"AE0261D8DDEF64","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","comment_is_top":false,"comment_ctime":1621931397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621931397","product_id":100029501,"comment_content":"我把当前的隔离级别设置为可重复读，同时把自动提交设置为否也就是零。然后进行下面的模拟操作，发现还是会出现脏读和不可重复读的情况，这是为什么呢？<br>之前不是说在隔离级别为可重复读的情况下，能够避免脏读和不可重复读吗？","like_count":0},{"had_liked":false,"id":287691,"user_name":"code2","can_delete":false,"product_type":"c1","uid":1281792,"ip_address":"","ucode":"BBA5748FB6A01C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8OPzdpDraQMvCNWAicicDt54sDaIYJZicBLfMyibXVs4V0ZibEdkZlbzxxL7aGpRoeyvibag5LaAaaGKSdwYQMY2hUrQ/132","comment_is_top":false,"comment_ctime":1618110391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618110391","product_id":100029501,"comment_content":"锁级别类似于酒店，大厅里许多人都在点菜吃饭，是并行，会出现点的菜没有，上错，有人没有结账等问题，包厢里属于表锁，一伙人吃饭结账收拾卫生后后其他人才能进入。还有极端，酒店今天有大佬包场给小三过生日，这就是数据库独占了！","like_count":0},{"had_liked":false,"id":267374,"user_name":"闫城哲","can_delete":false,"product_type":"c1","uid":1624846,"ip_address":"","ucode":"1903E022DF6A6F","user_header":"https://static001.geekbang.org/account/avatar/00/18/cb/0e/a9fee0b6.jpg","comment_is_top":false,"comment_ctime":1607698455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607698455","product_id":100029501,"comment_content":"隔离级别越高 , 就相当于对并发的限制越大 , 最高的隔离级别实际上都不支持并发了,性能自然也就下降了","like_count":0},{"had_liked":false,"id":242879,"user_name":"夏天呀","can_delete":false,"product_type":"c1","uid":1673679,"ip_address":"","ucode":"1C5C060C05923B","user_header":"https://static001.geekbang.org/account/avatar/00/19/89/cf/1c7703b1.jpg","comment_is_top":false,"comment_ctime":1597883700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597883700","product_id":100029501,"comment_content":"不可重复读 VS 幻读的区别：<br>不可重复读是同一条记录的内容被修改了，重点在于UPDATE或DELETE<br>幻读是查询某一个范围的数据行变多了或者少了，重点在于INSERT<br>","like_count":0},{"had_liked":false,"id":242687,"user_name":"奥佛铎","can_delete":false,"product_type":"c1","uid":1234919,"ip_address":"","ucode":"A1D544E5F22B7F","user_header":"","comment_is_top":false,"comment_ctime":1597811172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597811172","product_id":100029501,"comment_content":"事务的隔离级别：根据不同业务场景来设置，对于正确性有绝对要求的场景，牺牲并发，串行进行事务，对于数据正确性要求不高的地方，甚至可以允许脏读，来保证速度","like_count":0},{"had_liked":false,"id":242012,"user_name":"Mr_scx","can_delete":false,"product_type":"c1","uid":1239546,"ip_address":"","ucode":"28B5CE68A5A339","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcIVlXYuZ3iaPfSF6vBbg3yUps6LKpsZarftyXufMHYKJmMKzH3bIpVkDAVNXE9q0oOw/132","comment_is_top":false,"comment_ctime":1597561259,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597561259","product_id":100029501,"comment_content":"关于不可重复读 VS 幻读：<br>首先，不可重复读 和 幻读 都是在先后两次读取的时候发现不一致，但是两种读取略有差别：<br>1. 不可重复读是针对于单独的某一条数据，同一事务前后读取结果不一致，因为被其他事务修改了，重点在于被其他事务对当前事务要查询的那条数据执行了 UPDATE或DELETE操作（内容上的修改）。<br>2. 幻读是针对于查询结果集的前后不一致，查询的数据表在当前事务的执行期间，有其他事务执行了插入或删除操作，导致查询结果的增加或减少。重点在于被其他事务对当前事务要查询的那个范围内的数据集执行了 INSERT 或 DELETE操作（条目数的修改）。","like_count":0},{"had_liked":false,"id":239963,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1596702457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596702457","product_id":100029501,"comment_content":"为什么隔离级别越高，就越影响系统的并发性能吗？以及不可重复读和幻读的区别是什么？<br>1.隔离级别越高，系统需要额外维护的东西越多：涉及锁相关的知识、MySQL InnoDB引擎 可重复读级别下的多版本一致性视图（MVCC）会记录各事务信息变更，遇到长事务系统开销更大等；<br>2.不可重读和幻读，区别在于 update&#47;delete和insert，修改已有数据VS新增数据。","like_count":0},{"had_liked":false,"id":234755,"user_name":"大蒋同学","can_delete":false,"product_type":"c1","uid":1926264,"ip_address":"","ucode":"2D36767298FE13","user_header":"https://static001.geekbang.org/account/avatar/00/1d/64/78/5a4f1581.jpg","comment_is_top":false,"comment_ctime":1594788058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594788058","product_id":100029501,"comment_content":"脏读，不可重复读，幻读。","like_count":0},{"had_liked":false,"id":232589,"user_name":"吕晓杰","can_delete":false,"product_type":"c1","uid":2042025,"ip_address":"","ucode":"9B7938EC9B54B9","user_header":"","comment_is_top":false,"comment_ctime":1594044980,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594044980","product_id":100029501,"comment_content":"个人理解如下：<br>事务隔离都是在两个客户端彼此执行事务的情况下产生。<br>脏读：A客户端执行了一个事务，插入一条数据但是没有提交。B客户端执行事务，查询返回的数据包含了A客户端未提交的数据<br>不可重复读：A客户端执行事务，查询表的数据（未提交），B客户端执行事务，对一条数据进行修改并提交。A客户端再次查询数据，发现一条数据的内容更新了（变了）<br>幻读：A客户端执行事务，查询表的数据（未提交），B客户端执行事务，插入一条数据并提交。A客户端再次查询数据，发现多了（或者少了）一条数据。<br>脏读跟幻读的差别在于，脏读是可以读到未提交的事务产生的数据；而幻读是，同一事务(A)读取两次的数据不同（事务(B)已提交）<br>不可重复读跟幻读的差别在于：不可重复读是读取到的数据的状态被不同，幻读是读取到的数据的数量不同","like_count":0},{"had_liked":false,"id":229270,"user_name":"1058620896@qq.com","can_delete":false,"product_type":"c1","uid":1127553,"ip_address":"","ucode":"2A91EF38DAA30C","user_header":"","comment_is_top":false,"comment_ctime":1592955166,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592955166","product_id":100029501,"comment_content":"不可重复读、脏读两个是特殊的幻读。因为你举得幻读例子和脏读例子应该是一样的场景。我可以这样理解吗？","like_count":0},{"had_liked":false,"id":228384,"user_name":"PHP菜鸟","can_delete":false,"product_type":"c1","uid":1899397,"ip_address":"","ucode":"77B7DC81B5AA1F","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fb/85/f3fd1724.jpg","comment_is_top":false,"comment_ctime":1592653881,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592653881","product_id":100029501,"comment_content":"我想问下,脏读,不可重复读,和幻读这三个的区别,看文章这三个没区别啊,不都是读到了没提交事务的数据吗?","like_count":0},{"had_liked":false,"id":228359,"user_name":"大熊","can_delete":false,"product_type":"c1","uid":1008951,"ip_address":"","ucode":"D7858E9DA87B5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/37/56c492d3.jpg","comment_is_top":false,"comment_ctime":1592647834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592647834","product_id":100029501,"comment_content":"老师，我在把两个会话的等级设置为读可提交以后，在会话A中开启事物，查询一条数据，然后在会话B中开启事物修改这条数据，但是在会话A中再次查询数据，发现数据并没有改变为会话B中的值","like_count":0},{"had_liked":false,"id":228114,"user_name":"隔壁老王，黑加仑","can_delete":false,"product_type":"c1","uid":1001069,"ip_address":"","ucode":"CB87C04538D8FA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuUYcwKWUuib3uM8XtEtthjgrzpql26MbSjkDTvSnsmibY45EV7CgOFHOnZRKMm2pibryCBQ4gakzlQ/132","comment_is_top":false,"comment_ctime":1592558884,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592558884","product_id":100029501,"comment_content":"老师，你觉得可重复读事物隔离级别下，会不会发生不可重复读。如果你说不会。那你可以实验下这个场景：一张表两个字段，id，name。A，B两个事物，进入事物查询的表数据都是一样的。事物A update id = 1 的name列，事物B update id=1 更改成id=2 这时候你在看id=2 的name列是事物A更新的值还是进入事物后的值","like_count":0},{"had_liked":false,"id":224131,"user_name":"纪燕鹏","can_delete":false,"product_type":"c1","uid":2015870,"ip_address":"","ucode":"5F1DFAF4D61D0F","user_header":"","comment_is_top":false,"comment_ctime":1591281111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591281111","product_id":100029501,"comment_content":"老师，对于不可重复读感觉有点迷。我理解是A,B两个客户端进行数据库的访问，A先查id为1的名字是张飞，然后B对这个数据做了修改变成了张翼德。这里B修改的操作对数据库进行更新。那么这个时候A再进重复的查id为1的名字变成张翼德，这样不是没有问题的吗？为什么这样会说是一个异常呢？","like_count":0},{"had_liked":false,"id":221461,"user_name":"Hank_Yan","can_delete":false,"product_type":"c1","uid":1110662,"ip_address":"","ucode":"86899B561C502B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/86/d689f77e.jpg","comment_is_top":false,"comment_ctime":1590503061,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1590503061","product_id":100029501,"comment_content":"不可重复读，是出现了更新。幻读是出现了增加。理解了。","like_count":0},{"had_liked":false,"id":211260,"user_name":"小菜鸟学php","can_delete":false,"product_type":"c1","uid":1683755,"ip_address":"","ucode":"C417C76E18B062","user_header":"https://static001.geekbang.org/account/avatar/00/19/b1/2b/9406d19a.jpg","comment_is_top":false,"comment_ctime":1587942294,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587942294","product_id":100029501,"comment_content":"老师脏读和幻读老是区分不开，感觉都是一样的","like_count":0},{"had_liked":false,"id":207785,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1587179082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587179082","product_id":100029501,"comment_content":"幻读的这个例子，应该实在客户端1 的开启了事务的情况下，依然读取的出现结果上的偏差，这样更好理解幻读吧。","like_count":0},{"had_liked":false,"id":201378,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1585757514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585757514","product_id":100029501,"comment_content":"老师，在执行insert时不会自动加排它锁吗，那其他线程是怎么select到数据产生脏读呢","like_count":0},{"had_liked":false,"id":194836,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1585108835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585108835","product_id":100029501,"comment_content":"MySQL 8.0 + 可重复读隔离下已经做到没幻读了。","like_count":0},{"had_liked":false,"id":190198,"user_name":"arch","can_delete":false,"product_type":"c1","uid":1078931,"ip_address":"","ucode":"A69EBFE0520B85","user_header":"https://static001.geekbang.org/account/avatar/00/10/76/93/64ed7385.jpg","comment_is_top":false,"comment_ctime":1584612927,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584612927","product_id":100029501,"comment_content":"老师没说清楚，我的观点是：<br>在一个事务执行过程中，它能不能读到其他已提交事务对数据的更新，如果能读到数据变化，就是“不可重复读”，否则就是“可重复读”。","like_count":0},{"had_liked":false,"id":187494,"user_name":"墨灵","can_delete":false,"product_type":"c1","uid":1409700,"ip_address":"","ucode":"185D70CA20BEEE","user_header":"https://static001.geekbang.org/account/avatar/00/15/82/a4/a92c6eca.jpg","comment_is_top":false,"comment_ctime":1584146709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584146709","product_id":100029501,"comment_content":" 老师举的幻读的例子的确是不太好的。我曾经遇过这样的事，在某个事务中，先读表a，进行一系列操作之后再读表a，两次的结果集的行数都是不一样的，因为在这个事务的时间内，其他用户对表a进行的新增或删除操作，同一事务内两次读的结果都不一致，我想这才属于幻读。","like_count":0},{"had_liked":false,"id":182466,"user_name":"欧阳啊","can_delete":false,"product_type":"c1","uid":1868570,"ip_address":"","ucode":"CF1D0F0802713B","user_header":"https://static001.geekbang.org/account/avatar/00/1c/83/1a/f9d9225f.jpg","comment_is_top":false,"comment_ctime":1582791818,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582791818","product_id":100029501,"comment_content":"个人理解：<br>不可重复读：当我在读数据时，我读取的表不允许任何人修改这些数据。这样就每次读取的数据一样了，做到了可重复读。但是如果有人添加或者删除数据，那没办法了；<br>幻读：当我在读取数据时，我读的表不允许任何人动它，你只可以看，不能修改也不能添加删除。这样就看不到突然多出来一条数据了<br>以上就是我的理解是","like_count":0},{"had_liked":false,"id":175986,"user_name":"Geek_ade3cb","can_delete":false,"product_type":"c1","uid":1815632,"ip_address":"","ucode":"5DD2BAF1E1DDF3","user_header":"","comment_is_top":false,"comment_ctime":1580903116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580903116","product_id":100029501,"comment_content":"老师好，我自己尝试的幻读操作得出的结果跟您的不一样，用客户端 1 重新进行查看时并没有出现多一条数据，参数应该都是对的。求老师或者大神们解答一下。","like_count":0},{"had_liked":false,"id":175528,"user_name":"阿斯蒂芬","can_delete":false,"product_type":"c1","uid":1024164,"ip_address":"","ucode":"61D5E3BDA4EBC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","comment_is_top":false,"comment_ctime":1580739239,"is_pvip":false,"replies":[{"id":"68214","content":"嗯嗯，我改下","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1580739606,"ip_address":"","comment_id":175528,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1580739239","product_id":100029501,"comment_content":"老师您好，「事务并发处理可能存在的异常都有哪些？」这个小节中关于「不可重复读」的英文「Nnrepeatable Read」是否应该为「Non-repeatable read」，参考wiki transaction isolation 2.2 https:&#47;&#47;en.wikipedia.org&#47;wiki&#47;Isolation_(database_systems)","like_count":0,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482781,"discussion_content":"嗯嗯，我改下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580739606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167938,"user_name":"Geek_d3a509","can_delete":false,"product_type":"c1","uid":1765573,"ip_address":"","ucode":"8A40A85D4D1A73","user_header":"","comment_is_top":false,"comment_ctime":1577966694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577966694","product_id":100029501,"comment_content":"不可重复读：事物隔离性的一种级别，即同一条记录两次查询得到的结果不一致。<br>幻读：相同的两次查询某些记录范文而得到不同的结果，或记录增多或减少。<br>区别：不可重复读是对一条记录查询而得不到相同的结果，幻读是两次查询而范围得到不一致的结果。","like_count":0},{"had_liked":false,"id":165816,"user_name":"高泽林","can_delete":false,"product_type":"c1","uid":1764725,"ip_address":"","ucode":"DE54EBFFF11265","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/AGicQgKibwja1SxkQ7oXQE8hYH7yCpiaicNHw3qZRuNB81aVDOQm9P1zd5F75Jbtv66G15D6ZjbbqfnoETR4321Zdw/132","comment_is_top":false,"comment_ctime":1577325874,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577325874","product_id":100029501,"comment_content":"明白了","like_count":0},{"had_liked":false,"id":160509,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1575967222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575967222","product_id":100029501,"comment_content":"按照上述的例子讲的，事务隔离级别设置为READ UNCOMMITTED，autocommit = 0，个人理解为如下：<br>添加事务已开始，但是读取到了还未提交的数据，称为脏读，此时如果再添加数据，报错。<br>修改事务已开始，但是读取到了还未提交的数据，称为不可重复读。<br>至于幻读，和脏读一样，事务操作前都执行了查询操作，事务执行未提交前能查询到未提交的数据，如果再添加数据，也是报错。可能侧重点不一样，其实操作是一样的，按理来说，不应该有区分。<br><br>针对上述例子我对于脏读和幻读的疑惑，我特地把事务隔离级别设置为READ COMMITTED，<br>发现窗口1没有所谓的脏读现象，但是窗口2有，怎么解释？<br>测试不可重复读，出现同样的问题。<br><br>麻烦解释解释一下我的疑惑。","like_count":0},{"had_liked":false,"id":143528,"user_name":"Coool","can_delete":false,"product_type":"c1","uid":1701702,"ip_address":"","ucode":"1D1AB3270B02B9","user_header":"https://static001.geekbang.org/account/avatar/00/19/f7/46/209ca424.jpg","comment_is_top":false,"comment_ctime":1571726005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571726005","product_id":100029501,"comment_content":"老师求解：delete也是改变了数据行数，为什么是不可重复读？","like_count":0},{"had_liked":false,"id":142553,"user_name":"FreeMason","can_delete":false,"product_type":"c1","uid":1340120,"ip_address":"","ucode":"3D58AC2F9AB345","user_header":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","comment_is_top":false,"comment_ctime":1571394515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571394515","product_id":100029501,"comment_content":"老师<br>在模拟『脏读』、『不可重复读』、『幻读』时，把设置隔离级别的这一步也截图出来，不然容易误解<br><br>MySQL：脏读、不可重复读、幻读<br>    RU 无隔离<br>    RM  为解决『脏读』<br>    RR 为解决『不可重复读』<br>    引入间隙锁为解决『幻读』<br>    串行化<br>隔离级别越高，并发处理越低；隔离级别越低，并发处理越高。<br><br>MySQL  在 RR 级别下（默认 RR），有间隙锁 NK 不会出现『幻读』<br>","like_count":1},{"had_liked":false,"id":142356,"user_name":"爱思考的仙人球","can_delete":false,"product_type":"c1","uid":1576177,"ip_address":"","ucode":"77E31190A5B5AF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ic8KF0sfxicsx4F25HZrtZwP2fQEibicfibFeYIQBibxnVlHIiaqkfictJuvLCKia0p7liaQvbTzCYWLibjJK6B8kc8e194ng/132","comment_is_top":false,"comment_ctime":1571358998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571358998","product_id":100029501,"comment_content":"没太看懂脏独和幻读的区别，好像都是由于事物没提交造成的吗？","like_count":0},{"had_liked":false,"id":137932,"user_name":"Hou","can_delete":false,"product_type":"c1","uid":1621793,"ip_address":"","ucode":"92BF011EF961B4","user_header":"https://static001.geekbang.org/account/avatar/00/18/bf/21/44eb3aee.jpg","comment_is_top":false,"comment_ctime":1569927382,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1569927382","product_id":100029501,"comment_content":"脏读：读取到其他事务还未commit时候的数据<br>不可重复读：多次读取同一数据，由于其他事务对该数据进行了修改，而且已commit<br>幻读：读取数据时，由于其他事务增加了新数据造成无缘故的多一条数据","like_count":0},{"had_liked":false,"id":137172,"user_name":"改个名","can_delete":false,"product_type":"c1","uid":1488429,"ip_address":"","ucode":"7DF7D2D7452EF2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epicPNMkSAuMVkOFk5iaUeNjibyxrdCcalTYFTibLLT7jDl5ApIjEorPzj5KkHeNm7ELibCXJicn8ic5S7eA/132","comment_is_top":false,"comment_ctime":1569639693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569639693","product_id":100029501,"comment_content":"脏读主要针对另一个事务提交与否而言；<br>幻读针对的是查询得到的数量而言；<br>不可重复读针对怒同一条数据而言。","like_count":0},{"had_liked":false,"id":129783,"user_name":"Geek_3998b7","can_delete":false,"product_type":"c1","uid":1647149,"ip_address":"","ucode":"379CB3E8B81C46","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoicPb9mUEm9PLEfncDueQEEl6RFxYfVnzdibMtYBtqJ1JscTpgicv98iciaJGnaq92WSnb9mYqfh4Cqpg/132","comment_is_top":false,"comment_ctime":1567248858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567248858","product_id":100029501,"comment_content":"脏读：A看到B中未提交的数据<br>不可重复读：A在B提交前后看到行数一致的数据不一致<br>幻读：是行数变化的数据不一致","like_count":0},{"had_liked":false,"id":119761,"user_name":"努力奋斗的Pisces","can_delete":false,"product_type":"c1","uid":1336441,"ip_address":"","ucode":"AD4F8909CF190A","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/79/f1e1ca76.jpg","comment_is_top":false,"comment_ctime":1564674812,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1564674812","product_id":100029501,"comment_content":"我的理解是在不可重复读中针对相同的一条记录，在A事务中进行的是修改的操作，在B事务中进行的是查询的操作，同时开启事务的时候，B事务先进行查询，然后A事务进行update或者删除的操作，在B事务中再次查询的时候会发现前后不一致的问题；幻读更好的理解的话也是同时在AB事务同时开启的时候，A中进行的是更新的操作，B进行的是插入操作，在A更新完数据的时候，B进行了插入，导致A查询的时候会发现还有数据没有进行处理，意味着出现了幻觉","like_count":1},{"had_liked":false,"id":117211,"user_name":"庞鑫华","can_delete":false,"product_type":"c1","uid":1114368,"ip_address":"","ucode":"2A4B9FD568ADF7","user_header":"https://static001.geekbang.org/account/avatar/00/11/01/00/326f3d4d.jpg","comment_is_top":false,"comment_ctime":1564010485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564010485","product_id":100029501,"comment_content":"我怎么记得delete insert都是幻读😃","like_count":0},{"had_liked":false,"id":116629,"user_name":"Ronnyz","can_delete":false,"product_type":"c1","uid":1488280,"ip_address":"","ucode":"9F34527B1D343D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/98/ffaf2aca.jpg","comment_is_top":false,"comment_ctime":1563883314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563883314","product_id":100029501,"comment_content":"看了评论，不可重复读和幻读应该是侧重点不同，前者是针对某一数据更改，后者是针对数据量的变化","like_count":0},{"had_liked":false,"id":116087,"user_name":"大斌","can_delete":false,"product_type":"c1","uid":1002183,"ip_address":"","ucode":"1434C2B0A29135","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/c7/ec18673b.jpg","comment_is_top":false,"comment_ctime":1563783595,"is_pvip":false,"replies":[{"id":"63804","content":"对的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577542271,"ip_address":"","comment_id":116087,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563783595","product_id":100029501,"comment_content":"我的理解：<br>隔离级别越高，系统要对数据进行的操作验证就更多，提升了时间成本、降低了效率。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459377,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577542271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114757,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1054958,"ip_address":"","ucode":"7501AD9C0C4A70","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","comment_is_top":false,"comment_ctime":1563378523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563378523","product_id":100029501,"comment_content":"在5.7.11版本中,查看事务隔离级别要用: SHOW VARIABLES LIKE &#39;tx_isolation&#39;; 才可以.","like_count":0},{"had_liked":false,"id":114715,"user_name":"Danpier","can_delete":false,"product_type":"c1","uid":1463474,"ip_address":"","ucode":"11E208FDE34961","user_header":"https://static001.geekbang.org/account/avatar/00/16/54/b2/5ea0b709.jpg","comment_is_top":false,"comment_ctime":1563368953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563368953","product_id":100029501,"comment_content":"关于幻读有个疑问，在默认隔离级别下是存在幻读的，但是却无法看到另一个事务提交的插入数据。按照老师的解读以及官方文档的说法，支持幻读的隔离级别应该都能复现上文的示例，为什么只有最低隔离级别能看到新增的数据列呢？","like_count":0},{"had_liked":false,"id":114458,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1563321887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563321887","product_id":100029501,"comment_content":"innodb的可重复读已经解决了幻读吧","like_count":0},{"had_liked":false,"id":114241,"user_name":"江南皮革厂研发中心保安队长","can_delete":false,"product_type":"c1","uid":1099584,"ip_address":"","ucode":"231419643A5CC5","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/40/66a203cd.jpg","comment_is_top":false,"comment_ctime":1563259840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563259840","product_id":100029501,"comment_content":"老师，我在模拟脏读过程中报了mysql主从同步的错，是不是如果设置了主从同步，这样模拟是会报错的啊？","like_count":0},{"had_liked":false,"id":114085,"user_name":"ahazxc","can_delete":false,"product_type":"c1","uid":1528500,"ip_address":"","ucode":"B63143E0A67776","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJsszO0GeFFRZbF3XRZGic9nlHLC322hNGVazsExCRqb5HnmoaCTToiaUhTAtVyPudP8CiaHPzwviaP5A/132","comment_is_top":false,"comment_ctime":1563237294,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563237294","product_id":100029501,"comment_content":"幻读和可重复读，可以这样理解，可重复读是a查询某条记录两次出现不同情况，那既然可以查询某条记录，那该条记录应该是本身就存在，b就只能去update or delete 。<br>幻读，是指a两次查询某个范围，出现数据的不一致，这里更强调的数据数量的不一致，那就对应insert","like_count":0},{"had_liked":false,"id":114079,"user_name":"峻铭","can_delete":false,"product_type":"c1","uid":1106202,"ip_address":"","ucode":"63AB23BADACA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/1a/20977779.jpg","comment_is_top":false,"comment_ctime":1563236449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563236449","product_id":100029501,"comment_content":"脏读和幻读流程一模一样呢","like_count":0},{"had_liked":false,"id":113788,"user_name":"　Hail hydra","can_delete":false,"product_type":"c1","uid":1545230,"ip_address":"","ucode":"76DD13853E5888","user_header":"https://static001.geekbang.org/account/avatar/00/17/94/0e/0be827a5.jpg","comment_is_top":false,"comment_ctime":1563157121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563157121","product_id":100029501,"comment_content":"高并发的情况要保证数据的一致性就必须排队一个个来，那这不就不能算并发了么","like_count":0}]}