{"id":85018,"title":"07 | 大厂都在用哪些敏捷方法？（下）","content":"<p>你好，我是宝玉，我今天继续与你分享大厂的敏捷方法应用。</p><p>在上一篇文章中，我们一起看了一下大厂和敏捷相关的一些流程规范，同时也为你留了一道思考题：</p><blockquote>\n<p>如果每周一个Sprint，怎么保证每周都有交付，还能保证产品质量？</p>\n</blockquote><p>所以在这一篇中，我们就以每周一个Sprint的小项目组为例，看看它的日常是怎么应用敏捷开发的。</p><h2>一个应用敏捷开发的小组日常</h2><p>这个小组是做网站开发的，基于微服务负责网站的某一个小模块。标准配置7人左右，4个程序员（至少有一个资深程序员，有架构能力），1个产品经理（Scrum里面叫Product Owner），1个测试，1个项目经理（Scrum里面叫Scrum Master）。主要负责网站某模块的日常维护。</p><p>在分工上：</p><ul>\n<li>产品经理：写需求设计文档，将需求整理成Ticket，随时和项目成员沟通确认需求；</li>\n<li>开发人员：每天从看板上按照优先级从高到低领取Ticket，完成日常开发任务；</li>\n<li>测试人员：测试已经部署到测试环境的程序，如果发现Bug，提交Ticket；</li>\n<li>项目经理：保障日常工作流程正常执行，让团队成员可以专注工作，提供必要的帮助，解决问题。</li>\n</ul><p>在敏捷开发框架下，已经形成了一些很好的敏捷实践，这个小组也是基于Scrum方法做过程管理，基于极限编程做工程实践，看板可视化。每周一个Sprint。</p><!-- [[[read_end]]] --><ul>\n<li><strong>如何完成需求和修复Bug？</strong></li>\n</ul><p>这个小组的日常工作，也是围绕Ticket来开展的。所有的需求、Bug、任务都作为Ticket提交到项目的Backlog，每个Sprint的任务都以看板的形式展现出来。</p><p>每个人手头事情忙完后，就可以去看板上的“To Do”栏，按照优先级从高到低选取新的Ticket。选取后移动到“In Progress”栏。</p><ul>\n<li><strong>每周一部署生产环境</strong></li>\n</ul><p>没有人愿意星期五部署，那意味着如果部署后发现故障，可能周末都没法好好休息了。所以即使程序早已经测试好了，除非特别紧急，否则都会留在下一周再部署。所以部署放在上半周，这样后面遇到问题还有足够的时间去应对。</p><p>部署很简单，按照流程执行几个命令就可以完成生产环境部署。部署完成后，需要对线上监控的图表进行观察，如果有问题需要及时甄别，必要的话对部署进行回滚操作。<strong>但轻易不会打补丁马上重新上线，因为仓促之间的修复可能会导致更大的问题。</strong></p><p>像敏捷开发这样一周一个Sprint的好处之一就是，即使这一周的部署回滚了，下周再一起部署也不会有太大影响。</p><ul>\n<li><strong>每周二开迭代回顾会议，总结上个Sprint</strong></li>\n</ul><p>每周二的早上，这个小组一般还会预留一个小时的时间，因为常规的站会完成后，还有一个<strong>迭代回顾会议(Sprint Retrospective)</strong>会议，目的是回顾一下在迭代中，团队有哪些做的好的地方，有哪些做的不好的地方。</p><p>对于需要后续改进的，需要创建相应的Ticket，加入到Backlog中，在后续迭代中改进完善。</p><p>例如会议上，测试人员反馈说，上一个Sprint，开发人员上线前几个小时还往预部署的分支里面更新代码，导致测试需要重新做回归测试，但因为时间不够了，没来得及测试完整，导致上线后不稳定，建议以后不要随意在上线前，在部署分支更新代码。</p><p>对于这样的问题，可能不止一次发生，说明流程上还是存在问题。所以最后大家商定，以后如果不是紧急的修复，就不要在预部署的分支上更新，确实要加，需要和测试先确认。</p><p>如果会议中要形成涉及项目的决策，最好是通过集体表决的方式决策，尽可能避免独裁式决策。因为敏捷的原则之一是要<strong>善于激励项目人员，给他们以所需要的环境和支持，并相信他们能够完成任务。</strong></p><ul>\n<li><strong>每周四迭代规划会，计划下周工作</strong></li>\n</ul><p>每周四早上，也需要一个小时来组织会议。因为常规站会完成后，还有一个<strong>迭代规划会（Sprint Planning Meeting）</strong>。这个会议是要大家一起讨论下一个Sprint 的内容。</p><p>在开会之前，产品经理和项目经理会商量好Ticket的优先级，会议上，大家一起按优先级从高到低的顺序，从Backlog中选出下个Sprint的内容。</p><p>团队每个成员都要对候选的下个Sprint Backlog中的Ticket从1-5分进行打分，1分表示容易1天以内可以完成的工作量，2分表示2天内可以完成的工作，5分表示非常复杂，需要5天以上的工作量。</p><p>这里需要注意，打分时，要大家一起亮分，而不是挨个表态，不然结果很容易被前面亮分的人影响。</p><p><strong>评估每条Ticket工作量的大概流程如下：</strong></p><ol>\n<li>会议组织者阅读一条Ticket，可能是用户故事，可能是Bug，可能是优化任务。同时会询问大家对内容有没有疑问。</li>\n<li>大家一起讨论这个Ticket，确保充分理解这个Ticket。</li>\n<li>每个团队成员在心中对Ticket进行工作量估算。</li>\n<li>会议组织者确认大家是否都已经确定估算结果，确认后，开始倒数：“3，2，1”，大家一起伸出一只手，亮出代表分数的手指头。</li>\n<li>如果估算结果存在分歧，出分最高的和最低的各自说明理由，讨论后达成一致。</li>\n</ol><p>这种估算工作量的方法有个名字叫估算扑克，因为亮分时用扑克牌亮分而得名，但并非一定要用扑克牌。</p><p><strong>用这种方式评估工作量有几点很明显的好处：</strong></p><ol>\n<li><strong>大家积极参与，详细了解需求。</strong>相比以前，可能只有当某个功能模块分配到自己头上的时候，才会去详细了解那部分需求，而其他开发人员可能都不了解这部分需求。</li>\n<li><strong>工作量是由实际参与开发的成员作出评估，往往更准确也更容易被接受。</strong>以前项目经理代为估算的模式，很容易不准确，或者让开发人员抵触。</li>\n<li><strong>促进成员的交流和经验分享。</strong>我们知道一般经验浅的新手估算工作量都会偏乐观，而经验丰富的老手则会更准确，通过这种方式，新手可以向老手学习到很多工作量估算甚至技术实现的经验。</li>\n</ol><p>所以，在经过几个Sprint的磨合后，一般一个团队在每个Sprint的产出是比较稳定的。比如说这样一个7人的小团队，一个Sprint预计可以完成20-30分的Ticket。</p><ul>\n<li><strong>每周五分支切割</strong></li>\n</ul><p>周五标志着一周的工作要结束了，所以下班之前（4点左右），要做branch cut（分支切割），也就是要把当前主干上的代码，克隆到一个分支（branch）上。</p><p>为什么要做分支切割这一步操作呢？</p><p>经过一周的开发，master （主干）已经合并了不少新的PR（Pull Request，合并请求），但是如果你直接把master的代码部署到生产环境，肯定还是不放心，毕竟自动化测试还是不能完全代替专业测试人员的测试。</p><p>所以我们需要把master上的代码部署到测试环境进行测试，并且对测试出来的Bug进行修复，直到稳定下来为止。由于master还需要一直合并新的功能，所以最好的方式就是每次Sprint结束，从master创建一个分支版本出来，然后基于这个分支部署和修复Bug。</p><p>所以需要基于主干做一个branch cut，创建一个预部署的分支，将预部署分支的代码部署到测试环境，这样在下周，测试人员就可以测试新的版本。测试验收通过后，预部署分支的代码会部署到生产环境。</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/67/a1ff4dc93ffa7d68ab5d757317623167.png?wh=1706*891\" alt=\"\"></p><ul>\n<li><strong>每周轮值</strong></li>\n</ul><p>小组里面除了日常开发工作以外，其实还有不少琐碎的事情，比如每周部署生产环境，每天部署测试环境，每周的branch cut（分支切割），回答其他小组的问题，主持每日会议（不一定需要项目经理），这些事情如果都是一个人做难免会有些枯燥。</p><p>在敏捷开发中，鼓励发挥每个成员的主动性，所以每周轮值是一个不错的方式，可以让每个人都有机会去体验一下，帮助团队完成这些事情，更有集体荣誉感和责任感。</p><h2>一些问题解答</h2><p>上面只是选取的一个项目小组的日常，所以估计你看完还会有些疑问，在这里我把可能的问题列一下，先行解答一下。</p><p><strong>1. 基于这种敏捷开发的方式加班多吗？</strong></p><p>其实加不加班，绝大部分时候和是不是敏捷开发没关系的，还是看项目组的情况。</p><p>通常来说，基于敏捷开发一个Sprint、一个Sprint迭代，节奏还是比较稳定的，这个Sprint做不完的任务也可以顺延到下个Sprint，不影响发布。不像瀑布模型那样前松后紧，后期加班可能性大一些。</p><p><strong>2. 一周一个迭代怎么保证质量？</strong></p><p>以前我在使用迭代模型开发时，一般是4周左右的迭代周期，2周就是极限了，所以最开始看敏捷开发用1周的迭代周期，心中也有疑惑，1周时间又要开发又要测试，怎么保证质量？</p><p>实际实践下来，发现1周一个Sprint确实可行，而且质量也可以有保障，这里面有几个因素：</p><p>（a） 有足够比例的自动化测试代码，可以很好地保证质量。当用户的主要功能都通过自动化测试覆盖时，基本可以保证主要功能流程不会出问题。</p><p>（b） 一个Sprint开发完成后，并不马上部署生产环境，而是先部署到测试环境，会有1周时间测试。</p><p>（c） 有专业的测试人员进行测试，并非完全依赖自动化测试。有时候一些大的功能更新，甚至会组织全组成员一起测试，以弥补测试人员不足的情况。</p><p>在一个Sprint开发结束后，并不马上部署生产环境，而是先部署测试环境测试。</p><p><img src=\"https://static001.geekbang.org/resource/image/30/c5/30f2a81130d5adc74921c88a0f7464c5.png?wh=1706*891\" alt=\"\"></p><p>也就是说，虽然是1周的Sprint，但是其实还有1周的时间进行测试。每个Sprint不仅开发新功能，还要同步修复以前版本的Bug。</p><p>这样基本上可以保证有好的质量。而且这种1周的迭代，可以保持每周都有内容更新，还有个好处就是每周更新的内容不多，出现问题的话，很容易就定位到是什么地方导致的问题。</p><p><strong>3. 基于敏捷开发如何做计划？</strong></p><p>大厂里面通常会在上一年底确定第二年整年的大的开发计划，并确定上线的时间范围，每个季度再根据情况做一些调整。</p><p>这些大的计划最终会变成具体的开发任务，一个大的开发任务，会分拆到各个部门，各部门再将任务分拆到各个项目组。基于敏捷开发的话，主要就是看把这些开发任务放到哪几个Sprint去做，并且确保在规定的时间范围内完成。</p><p>至于工期的估算，在迭代规划会上会对每个Ticket进行打分，根据分数可以预估有多少工作量，要花多少时间。</p><p><strong>4. 如何沟通协作？</strong></p><p>组和组之间的沟通协作，主要通过邮件、会议、内部沟通工具，最终任务会以Ticket的形式体现。</p><p>团队内部的话，因为都在一起，所以沟通起来很方便，每天站立会议都是很好的沟通方式。</p><p>在敏捷开发中，有一种实践叫结对编程，就是两个程序员在一台电脑上一起工作。这个一直争议比较大，但是如果用来两人一起排查一些问题，或者是资深程序员带新手程序员，则是一种非常好的协作方式。</p><p><strong>5. 上面介绍的实践案例和标准Scrum有什么不同？</strong></p><p>我上面介绍的内容，确实和标准的Scrum有不少不一样的地方。</p><p>首先是角色名称不一样，在Scrum里面是分Product Owner、Scrum Master和Team三种角色，而在这个案例中是产品经理、项目经理和团队成员，但其实只是名字叫法不一样。</p><p>还有要注意一点，就是传统的项目经理，会是偏控制型角色，Scrum Master则更多是一种服务型的角色，主要职责是保障敏捷流程的执行，以及提供必要的帮助，很多团队的决策就是采用集体决策的方式。</p><p>另外，Scrum有四种会议，除了前面介绍的三种：每日站会（Daily Scrum）、Sprint计划会（Sprint Planning）和Sprint回顾会议（Sprint Retrospective），其实还有一种会议是Sprint评审会（Sprint Review）。</p><p>Sprint评审会的作用是让客户审查Sprint的完成结果。因为上面这个小组并没有直接的客户，都是完成产品经理提交的需求，而且沟通紧密，所以没有安排专门会议。</p><p>这个小组的站立会议并不是“标准”的站立会议，Scrum的站立会议通常只有15分钟，并且只有轮流发言环节。</p><p>这里增加的每天审查Ticket环节，主要是为了将优先级高的Bug修复之类的Ticket放到当前Sprint，及时响应，及时处理。有的项目组没有这个环节，是由测试人员或者Scrum Master直接将Ticket放到看板。</p><p>这个小组并没有使用用户故事来开发需求，而是由产品经理事先写好需求文档。在上一篇文章里面，提到了Scrum采用用户故事的方式，分拆需求，减少繁重的需求文档，在实现的过程中再沟通确认需求。</p><p>这是Scrum推荐的一种方式，也是一种高效的方式，但并不代表这是唯一的方式。如果有产品经理，可以提前几个Sprint就将需求文档写详细，一样可以达到高效的理解需求的效果。</p><p>那么这样还算敏捷开发么？</p><p>其实在<a href=\"http://time.geekbang.org/column/article/84351\">《05 | 敏捷开发到底是想解决什么问题？》</a>就有讲过，是不是敏捷开发，核心并不是应用了哪个方法，而是应用的时候，是否遵循了敏捷开发的价值观和原则。</p><p>比如说非标准的站立会议效率更优，那么就应该采用非标准的站立会议；如果有专业产品经理事先做好需求分析，可以达到解释清楚需求的效果，就没必要一定要用用户故事来理解需求。</p><h2>总结</h2><p>上一篇文章我们讲了大厂里和敏捷相关的一些流程规范，这一篇又讲了一个小组是怎么应用敏捷开发来开发项目的。</p><p>现在看上一篇文章中我留的思考题：如果每周一个Sprint，怎么保证每周都有交付，还能保证产品质量？想必你已经有了答案。</p><p>要保障质量，还是离不开充分的测试，不仅要有自动化测试，还要辅助一定量的人工测试。敏捷开发虽然求快，但是不代表应该牺牲质量。</p><p>其实，大厂的敏捷实践并不神秘，关键是分而治之，最终团队小，项目小，所以才可以敏捷起来。大厂会注重流程和工具的应用，通过Ticket的方式来管理和跟踪开发任务，通过自动化的方式来部署。</p><p>大厂的敏捷实践，一般是基于Scrum、极限编程和看板，针对各自项目组的特点，会有所侧重有所调整，在遵循敏捷的价值观和原则的前提下，做到高效使用。</p><p>希望上面介绍的敏捷应用，能对你理解敏捷开发有所启发，帮助你优化改进日常项目流程。还有要注意的一点就是，没有万能的开发模式，只有适合项目的开发模式，最重要的还是要摸索出一套适合你自己项目特色的开发模式。</p><p>限于篇幅，对于Scrum、极限编程和看板，我并没有展开细讲，还需要大家自己辅助看看书，我在<a href=\"http://time.geekbang.org/column/article/82697\">《学习攻略 | 怎样学好软件工程？》</a>和<a href=\"http://time.geekbang.org/column/article/84351\">《05 | 敏捷开发到底是想解决什么问题？》</a>文章中也列了一些参考书籍。</p><p>留言区有同学推荐的文章<a href=\"http://mp.weixin.qq.com/s/puMNz91hiQgio4wSCIrTgQ\">《天下武功，唯快不破—新时代敏捷项目管理之道》</a>对敏捷开发也有很不错的讲解，推荐阅读。</p><h2>课后思考</h2><p>看完本篇内容，你可以将上面介绍的开发模式和你现在的项目开发模式对比，你觉得有哪些好的地方可以借鉴？你觉得有哪些做的不够好，可以改进的地方？</p><p>另外，你也思考一下，为什么文章中，这个项目没有在一个Sprint里面同时完成开发和测试，而是把测试放在下一个Sprint，这样做有什么优缺点？欢迎在留言区与我分享讨论。</p><p>感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。</p>","neighbors":{"left":{"article_title":"06 | 大厂都在用哪些敏捷方法？（上）","id":84652},"right":{"article_title":"08 | 怎样平衡软件质量与时间成本范围的关系？","id":85302}},"comments":[{"had_liked":false,"id":74046,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1552093236,"is_pvip":false,"replies":[{"id":"27054","content":"好问题，这个通常有两种方案：<br><br>方案一：v1.1可以不合并回master，如果有bug修复，现在v1.1上修复，然后把修复的代码同时cherry-pick到master，就是要提交两个PR，内容一样。<br><br>方案二：v1.1在部署后合并到master，这样就可以把v1.1上的修改合并到master，但是可能会有不少代码冲突<br><br>各有优缺点，具体怎么做还是看项目组的决策。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552098067,"ip_address":"","comment_id":74046,"utype":1}],"discussion_count":3,"race_medal":0,"score":"61681635380","product_id":100023701,"comment_content":"有个疑问v1.1 v1.2 开发分支是不是从master同一个版本拉下来的吗，因为到1.2的时候，v1.1处于待测，不可能合到了master","like_count":14,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442405,"discussion_content":"好问题，这个通常有两种方案：\n\n方案一：v1.1可以不合并回master，如果有bug修复，现在v1.1上修复，然后把修复的代码同时cherry-pick到master，就是要提交两个PR，内容一样。\n\n方案二：v1.1在部署后合并到master，这样就可以把v1.1上的修改合并到master，但是可能会有不少代码冲突\n\n各有优缺点，具体怎么做还是看项目组的决策。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552098067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021825,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/97/81/e1eaf621.jpg","nickname":"David","note":"","ucode":"22CBBC13FC97A9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592048,"discussion_content":"我理解这里处于测试的v1.1应该是输入feature分支。这里的master分支我理解是release分支","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667044956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073596,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/bc/88a905a5.jpg","nickname":"赵强强","note":"","ucode":"1B8AE07484C69A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289137,"discussion_content":"如果有紧急bug需要修复，而master分支包含了未测试代码怎么办呢？ 我们日常会维护三个分支：master分支（始终稳定），develop分支（开发分支，都是从master分支checkout，各项目各在开发，互不影响），release分支（预发布分支，项目准备上线前，develop分支合并到release分支，测试通过上线后，合并到master分支）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594001640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91740,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1557103620,"is_pvip":false,"replies":[{"id":"32767","content":"谢谢支持！<br><br>这里有两种策略：<br>1. 每次线上bug，修复后只合并到预部署分支，最后统一把预部署分支合并会主分支。优点是简单，缺点是合并时可能会有很多冲突；<br>2. 每次线上Bug，修复后同时合并预部署分支和主分支。优点是以后就不用再合并回去，还有可以及时同步bug修复，缺点是麻烦，每次要cherry pick。<br><br>我们项目中选的是后一种策略，因为能及时同步Bug修复到主干对我们很重要。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1557109089,"ip_address":"","comment_id":91740,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48801743876","product_id":100023701,"comment_content":"这真是极客专栏的典范，有问必答，购买专栏的目的更多是为了跟大师有交流的机会，而有些专栏仅仅只是发布了文章或视频。说回我的问题，老师在文中说到的主分支切割&quot;测试验收通过后，预部署分支的代码会部署到生产环境。&quot;，我的理解是部署的分支的代码，上线测试没问题之后，再把这个代码合并回主分支，不知道这样理解对不对？","like_count":11,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449011,"discussion_content":"谢谢支持！\n\n这里有两种策略：\n1. 每次线上bug，修复后只合并到预部署分支，最后统一把预部署分支合并会主分支。优点是简单，缺点是合并时可能会有很多冲突；\n2. 每次线上Bug，修复后同时合并预部署分支和主分支。优点是以后就不用再合并回去，还有可以及时同步bug修复，缺点是麻烦，每次要cherry pick。\n\n我们项目中选的是后一种策略，因为能及时同步Bug修复到主干对我们很重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557109089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74108,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1552105398,"is_pvip":false,"replies":[{"id":"27107","content":"这个呀，有一些建议参考：<br>1. 招人和开人都很重要，招优秀的，开掉没有责任心，没能力的。这两点都不容易做到，不过得坚持做；<br>2. 设置合理的流程，配合一定的奖惩制度；你奖励什么，团队就会往哪方面发展；<br>3. 团队要有梯队，不能都是资历浅的也不能都是资深的，保持一个合适的比例是比较健康的；<br>4. 实战中锻炼，实战中磨合；给他们有挑战的任务，给予合适的指导（这就是有梯队的原因，需要高一级别的待低一级别的）<br><br>仅供参考","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552114252,"ip_address":"","comment_id":74108,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44501778358","product_id":100023701,"comment_content":"看了上下两篇文章，自己当前紧急的问题是成员的责任心和能力问题，就是怎样培养团队成员？老师有没有好办法","like_count":10,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442447,"discussion_content":"这个呀，有一些建议参考：\n1. 招人和开人都很重要，招优秀的，开掉没有责任心，没能力的。这两点都不容易做到，不过得坚持做；\n2. 设置合理的流程，配合一定的奖惩制度；你奖励什么，团队就会往哪方面发展；\n3. 团队要有梯队，不能都是资历浅的也不能都是资深的，保持一个合适的比例是比较健康的；\n4. 实战中锻炼，实战中磨合；给他们有挑战的任务，给予合适的指导（这就是有梯队的原因，需要高一级别的待低一级别的）\n\n仅供参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552114252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74619,"user_name":"十斗簸箕","can_delete":false,"product_type":"c1","uid":1276938,"ip_address":"","ucode":"D661B1B42694FC","user_header":"https://static001.geekbang.org/account/avatar/00/13/7c/0a/8aa06f3f.jpg","comment_is_top":false,"comment_ctime":1552268284,"is_pvip":false,"replies":[{"id":"27221","content":"这个问题我真帮不上你，因为我C++不懂，你得自己去网上问问别人。<br>帮你发了条微博问问，希望有用：https:&#47;&#47;weibo.com&#47;1727858283&#47;Hko9VyVbI<br><br>更新：微博上大家都推荐gtest，应该不错。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552269177,"ip_address":"","comment_id":74619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35912006652","product_id":100023701,"comment_content":"请问老师对于C++开发有什么好用的单元测试、继承测试框架推荐？","like_count":8,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442623,"discussion_content":"这个问题我真帮不上你，因为我C++不懂，你得自己去网上问问别人。\n帮你发了条微博问问，希望有用：https://weibo.com/1727858283/Hko9VyVbI\n\n更新：微博上大家都推荐gtest，应该不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552269177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74035,"user_name":"Felix","can_delete":false,"product_type":"c1","uid":1043717,"ip_address":"","ucode":"DD605AA7D79886","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epYwhroC3gic3JJSUZqMFxL0x7iasNUyjUaB2Gp3f0Eiapegc10p5S6pp4dYibEb07VA1IYWldLK4LJdg/132","comment_is_top":false,"comment_ctime":1552091321,"is_pvip":false,"replies":[{"id":"27052","content":"赞，可以先实验，看看扑克估算是不是适合，如果好的话就可以进一步固定下来。<br><br>你说的那种不算结对编程。<br><br>结对编程（英语：Pair programming）是一种敏捷软件开发的方法，两个程序员在一个计算机上共同工作。 一个人输入代码，而另一个人审查他输入的每一行代码。 输入代码的人称作驾驶员，审查代码的人称作观察员（或导航员）。 两个程序员经常互换角色。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552097895,"ip_address":"","comment_id":74035,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35911829689","product_id":100023701,"comment_content":"读了老师这篇文章，给我最大的启发就是扑克估算；我之前的做法是让具体开发自己先估算，我再基于他的估算结果根据自己的认识进行微调，虽然这估算经过两个人，但这种形式还是有估算不准的情况<br>下周周会我就要确定新的流程；后续我会让小组内成员加上我一起针对Ticket进行估算，充分讨论后达成一致<br>还有一个问题问一下宝玉老师，我对于结对编程的概念不是很明晰；一个冲刺，分派给两位同学开发，他们相对来讲都很资深，分工明确，互相配合，但是分别在自己的电脑上开发……这种是否是结对编程呢","like_count":8,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442399,"discussion_content":"赞，可以先实验，看看扑克估算是不是适合，如果好的话就可以进一步固定下来。\n\n你说的那种不算结对编程。\n\n结对编程（英语：Pair programming）是一种敏捷软件开发的方法，两个程序员在一个计算机上共同工作。 一个人输入代码，而另一个人审查他输入的每一行代码。 输入代码的人称作驾驶员，审查代码的人称作观察员（或导航员）。 两个程序员经常互换角色。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552097895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194613,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1585092357,"is_pvip":false,"replies":[{"id":"75508","content":"在敏捷开发的Sprint中，有几个基本原则要把握好：<br><br>1. 一个Sprint的时间周期是固定的。<br><br>比如说2周一个Sprint，那么到2周后，就必须要发布新的版本。<br><br>很多人把敏捷生生搞成了瀑布，一个主要原因就是无法做到固定时间发布版本，总是在延期。<br><br>守住固定时间发布这条线，你才能真正敏捷起来，很多问题才能真正解决。<br><br>2. 一个Sprint开始后，不接受需求变更，有需求变更，放到下一个Sprint。<br><br>为什么瀑布模型让人诟病良多呢？一个重要原因就是瀑布模型周期太长，在这么长的周期中，很难做到需求不变化，也很难响应需求的变化。<br><br>敏捷开发通过迭代的方式，把大的开发周期变成一个个的Sprint，让开发周期大幅缩短，这样就可以及时响应需求的变化，但这不意味着可以随时对需求变化，每个Sprint开始之前要对这个Sprint做的事情有计划，确定好一个Sprint的任务后，这个Sprint内不要接受新的需求和需求的变更，有需求变更统一放到后续Sprint。<br><br>3. 如果不得不在当前Sprint做需求变更，那么需要重新调整整个Sprint的计划。<br><br>原则上Sprint开始后，不接受需求变更，但总有例外情况，比如临时的紧急事件。在当前Sprint有变化时，比如说增加了新的需求，那么相应的就要移掉优先级不那么高的任务，而不是一味添加新任务。根本目的还是回到原则1，保证版本能按时发布。<br><br>并且这样的变更不宜多，否则就失去了Sprint的意义，失去了前面两个原则的意义。<br><br>所以再回到之前的问题：<br><br>有新需求？可以，但是要等到下个Sprint加进去，同时会导致其他优先级不那么高的任务延期。<br><br>有需求变更？可以，我们下个Sprint会正式把这个变更加进去。<br><br>想要加到这个Sprint？对不起，我们马上就要发布新版本了，已经来不及了！<br><br>非加不可？可以，但是这个Sprint的另一个任务就要延期了！","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1585895398,"ip_address":"","comment_id":194613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27354896133","product_id":100023701,"comment_content":"绝对是模范老师，有问必答。<br>我也有个疑问想请教老师，如果在一个 sprint 过程中，客户(老板)提了2种新需求(第一种，属于新增的需求，但是客户希望立刻实现。第二种，是对老需求的修改，有可能是完全颠覆了sprint计划会议中所定义的需求)，此时作为 SM 该如何进行控制？ 如果sprint过程中经常出现这种情况，怎么办？","like_count":6,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488859,"discussion_content":"在敏捷开发的Sprint中，有几个基本原则要把握好：\n\n1. 一个Sprint的时间周期是固定的。\n\n比如说2周一个Sprint，那么到2周后，就必须要发布新的版本。\n\n很多人把敏捷生生搞成了瀑布，一个主要原因就是无法做到固定时间发布版本，总是在延期。\n\n守住固定时间发布这条线，你才能真正敏捷起来，很多问题才能真正解决。\n\n2. 一个Sprint开始后，不接受需求变更，有需求变更，放到下一个Sprint。\n\n为什么瀑布模型让人诟病良多呢？一个重要原因就是瀑布模型周期太长，在这么长的周期中，很难做到需求不变化，也很难响应需求的变化。\n\n敏捷开发通过迭代的方式，把大的开发周期变成一个个的Sprint，让开发周期大幅缩短，这样就可以及时响应需求的变化，但这不意味着可以随时对需求变化，每个Sprint开始之前要对这个Sprint做的事情有计划，确定好一个Sprint的任务后，这个Sprint内不要接受新的需求和需求的变更，有需求变更统一放到后续Sprint。\n\n3. 如果不得不在当前Sprint做需求变更，那么需要重新调整整个Sprint的计划。\n\n原则上Sprint开始后，不接受需求变更，但总有例外情况，比如临时的紧急事件。在当前Sprint有变化时，比如说增加了新的需求，那么相应的就要移掉优先级不那么高的任务，而不是一味添加新任务。根本目的还是回到原则1，保证版本能按时发布。\n\n并且这样的变更不宜多，否则就失去了Sprint的意义，失去了前面两个原则的意义。\n\n所以再回到之前的问题：\n\n有新需求？可以，但是要等到下个Sprint加进去，同时会导致其他优先级不那么高的任务延期。\n\n有需求变更？可以，我们下个Sprint会正式把这个变更加进去。\n\n想要加到这个Sprint？对不起，我们马上就要发布新版本了，已经来不及了！\n\n非加不可？可以，但是这个Sprint的另一个任务就要延期了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585895398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74692,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":1017835,"ip_address":"","ucode":"DB0FF1C153C485","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/eb/20492a37.jpg","comment_is_top":false,"comment_ctime":1552281946,"is_pvip":false,"replies":[{"id":"27248","content":"项目经理、产品经理兼多个项目是正常的，也没大问题。<br><br>但是让程序员同时兼做开发和项目经理工作就很不好，因为项目经理需要更多全局掌控，而一旦要花精力在开发上，很难跳出具体的开发工作，会极大影响项目管理工作；项目管理工作也会频繁打断开发，造成进度延迟。<br><br>所以我建议应该有专职的项目经理，不应该让程序员兼职项目管理。<br><br>新旧项目交织并不是问题，可以放在一个项目一个Sprint里面一起管理，也就是同一个Sprint里面有维护的Ticket，也有新需求的Ticket，只要保证开发人员同一时间只是做一件事，而不要几件事并行，就可以最大化发挥敏捷优势。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552286295,"ip_address":"","comment_id":74692,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27322085722","product_id":100023701,"comment_content":"这篇学习完后，对敏捷的实际操作有了更深的理解。<br>对于小公司小团队的项目，因为项目经理，产品经理都是身兼数职，是否有更好的实施方式呢？<br>目前认为的难处：1. 作为项目成员的程序员可能还需要去做项目经理或者产品经理的工作，2. 项目交织在一起，有新的项目在做，也有原先项目的维护工作或者新的需求。这样的情况在实施敏捷开发的时候应该如何最大化的发挥敏捷的优势？","like_count":6,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442653,"discussion_content":"项目经理、产品经理兼多个项目是正常的，也没大问题。\n\n但是让程序员同时兼做开发和项目经理工作就很不好，因为项目经理需要更多全局掌控，而一旦要花精力在开发上，很难跳出具体的开发工作，会极大影响项目管理工作；项目管理工作也会频繁打断开发，造成进度延迟。\n\n所以我建议应该有专职的项目经理，不应该让程序员兼职项目管理。\n\n新旧项目交织并不是问题，可以放在一个项目一个Sprint里面一起管理，也就是同一个Sprint里面有维护的Ticket，也有新需求的Ticket，只要保证开发人员同一时间只是做一件事，而不要几件事并行，就可以最大化发挥敏捷优势。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552286295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74176,"user_name":"alan","can_delete":false,"product_type":"c1","uid":1083425,"ip_address":"","ucode":"2CA8D0B6B7D5A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/21/50b2418a.jpg","comment_is_top":false,"comment_ctime":1552130983,"is_pvip":false,"replies":[{"id":"27143","content":"我觉得当前Sprint的测试，还是应该和当前Sprint一起走比较好，因为这个Sprint的内容是不是上线，还是要看测试是不是已经通过。另外两个Sprint或多个Sprint是可以同时存在的。<br><br>针对文章中的流程，以下工作流可以参考：<br>ToDo-&gt;开发中-&gt;代码审查中-&gt;合并master-&gt;部署测试环境-&gt;测试通过-&gt;已部署<br><br>设置“测试中”取决于测试人员是不是很多，任务可能有冲突，要不要知道测试人员当前正在干嘛，不需要的话其实不需要，只需要知道测试结果就好了：测试通过移动到“测试通过”栏，测试没通过，回到“To Do”栏。<br><br>有些测试只有开发能测试的，这种应该在Ticket中标明，例如在标题上加上“[开发]”标签，然后由组内其他开发人员辅助测试，或者根本不需要测试。<br><br>自动化测试要放作为日常开发任务的一部分，比如一个任务，你可以创建两条Ticket，一条是开发的ticket，一条是自动化测试代码的Ticket，分别进行打分。<br><br>后面还会有测试章节。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552146501,"ip_address":"","comment_id":74176,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23026967463","product_id":100023701,"comment_content":"老师好！关于人工测试，我想向您请教一个困惑。<br>我所在的团队正在尝试敏捷开发，遇到的问题是“人工测试”不知该摆在什么位置。<br>我们当前在Jira上设置的工作流是这样：todo→进行中→已完成→测试中→已测试。这种工作流是可行的吗？还是说把当前sprint的测试工作，都放到下个sprint会比较好？<br>由于我们有专职测试的同事，但是很多issue是测试同事很难进行测试的，导致工作流走不顺畅。<br>但如果不设置“测试中”这列，又觉得质量没有足够的保障（我们的自动化测试还很不完善）。<br>谢谢老师！不知您后续是否会就敏捷开发中测试的话题单独讲述。","like_count":5,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442482,"discussion_content":"我觉得当前Sprint的测试，还是应该和当前Sprint一起走比较好，因为这个Sprint的内容是不是上线，还是要看测试是不是已经通过。另外两个Sprint或多个Sprint是可以同时存在的。\n\n针对文章中的流程，以下工作流可以参考：\nToDo-&amp;gt;开发中-&amp;gt;代码审查中-&amp;gt;合并master-&amp;gt;部署测试环境-&amp;gt;测试通过-&amp;gt;已部署\n\n设置“测试中”取决于测试人员是不是很多，任务可能有冲突，要不要知道测试人员当前正在干嘛，不需要的话其实不需要，只需要知道测试结果就好了：测试通过移动到“测试通过”栏，测试没通过，回到“To Do”栏。\n\n有些测试只有开发能测试的，这种应该在Ticket中标明，例如在标题上加上“[开发]”标签，然后由组内其他开发人员辅助测试，或者根本不需要测试。\n\n自动化测试要放作为日常开发任务的一部分，比如一个任务，你可以创建两条Ticket，一条是开发的ticket，一条是自动化测试代码的Ticket，分别进行打分。\n\n后面还会有测试章节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552146501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1579245,"avatar":"https://static001.geekbang.org/account/avatar/00/18/18/ed/75763088.jpg","nickname":"胤材","note":"","ucode":"2AB7503105CA3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72822,"discussion_content":"宝玉老师这章节的内容中，表达的是当前Sprint的内容，在周五的时候切分出新的分支在下个Sprint进行测试，这和上面的留言回复“当前Sprint的测试，还是应该和当前Sprint一起走比较好”好像相冲突呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575531877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78407,"user_name":"J.M.Liu","can_delete":false,"product_type":"c1","uid":1200037,"ip_address":"","ucode":"B2CB84B8E923A6","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/a5/71358d7b.jpg","comment_is_top":false,"comment_ctime":1553141755,"is_pvip":false,"replies":[{"id":"28545","content":"这是个好问题。<br><br>我的建议是模块要换着做，宁可慢一点，不然的话不仅仅是其他人不能帮忙不能估算，万一有人离开团队了，麻烦更多的。<br><br>如果团队不大，甚至于做的时候，分工都不要太细，都不要太局限前端后端，这样其实对整个团队来讲是最好的，互相能替换。<br><br>当然，也不要着急，慢慢来，不要一下子改变很大。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553148243,"ip_address":"","comment_id":78407,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18733010939","product_id":100023701,"comment_content":"关于Ticket工期估算那里有个疑问。团队中一般都是一两个人负责一个小模块，之所以这样做是为了提高工作效率，避免同一段代码每次迭代都由不同的人去修改，因为大家对自己的小模块很熟悉，所以工作效率很高。但这样带来的问题是，团队成员对其他人负责的模块不熟，所以工期估算只能由模块负责人自己完成，别人很难帮上忙。这种情况怎么解决啊","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444082,"discussion_content":"这是个好问题。\n\n我的建议是模块要换着做，宁可慢一点，不然的话不仅仅是其他人不能帮忙不能估算，万一有人离开团队了，麻烦更多的。\n\n如果团队不大，甚至于做的时候，分工都不要太细，都不要太局限前端后端，这样其实对整个团队来讲是最好的，互相能替换。\n\n当然，也不要着急，慢慢来，不要一下子改变很大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553148243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74813,"user_name":"alva_xu","can_delete":false,"product_type":"c1","uid":1003946,"ip_address":"","ucode":"1D5B592B3A780F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLPxmcBiaXpTjuyicHJJwVECstJPyHJj8ZMOEdjz5N3rQzTkR4vTF3bpNXLm4MftPNFPI6ibsVRN5FbA/132","comment_is_top":false,"comment_ctime":1552300275,"is_pvip":false,"replies":[{"id":"27314","content":"对于估算这部分的补充非常赞👍<br><br>没有评审会，但是有专职测试针对最初提的需求进行测试，另外产品经理也会验收，如果验收不合格会提交Ticket。也就是说是有验收，只是没有专门的会议。<br><br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552324143,"ip_address":"","comment_id":74813,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18732169459","product_id":100023701,"comment_content":"有一个问题，如果一个迭代里没有评审会，怎么知道我上线的系统是符合要求的？<br>另外，我觉得在计划会上，有几个事情必须要做好，一是需要定义DOR和DOD，Define of Ready 和Define of Done,如果没有这两个定义，那么扑克牌可能会玩不起来。第二 需求（用户故事分解成的task)一定要尽量明确。不管扑克估算还是其他估算方式，如果第一轮估算偏差过大，说明大家对需求不明确，需要产品经理进行更详细的说明。通过几轮估算，如果大家能达成比较一致的估算，那么工作量的估算就比较靠谱了，这也是Scrum这种工作方法带来的好处，能让需求得到合理的资源安排。<br>不管怎么说，在Scrum里，要重视估算，有了好的估算，速率才真正有意义，才能真正保证交付质量。","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442688,"discussion_content":"对于估算这部分的补充非常赞👍\n\n没有评审会，但是有专职测试针对最初提的需求进行测试，另外产品经理也会验收，如果验收不合格会提交Ticket。也就是说是有验收，只是没有专门的会议。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552324143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74113,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1552106176,"is_pvip":false,"replies":[{"id":"27102","content":"其实早期我试过在一个Sprint里面开发和测试，后来发现测试时间不充分，上线后老有小问题，所以调整为一周开发，一周测试，错开的这种方式，就特别稳定了，每周也有发布。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552113900,"ip_address":"","comment_id":74113,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731975360","product_id":100023701,"comment_content":"模式差不多。但我们测试和开发同步，我们有自动测试和专门的测试人员，测试人员测试前一天开发提交的代码，开发人员优先解决测试发现的问题（会导致开发加班）。如果不同步，会影响版本发布","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442452,"discussion_content":"其实早期我试过在一个Sprint里面开发和测试，后来发现测试时间不充分，上线后老有小问题，所以调整为一周开发，一周测试，错开的这种方式，就特别稳定了，每周也有发布。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1552113900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74024,"user_name":"SOneDiGo","can_delete":false,"product_type":"c1","uid":1312874,"ip_address":"","ucode":"2F7073D7A06CA6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep7yaY0ibpBicMhk0gr01lZrn2Sj9SJU0OdFMWWZbicx1JFVEycKkw3xMoFFs5STPoXhTp823nPtkJjw/132","comment_is_top":false,"comment_ctime":1552078632,"is_pvip":false,"replies":[{"id":"27030","content":"👍<br>是的，测试需要时间的，如果功能开发星期五才完成，那么下周一部署就没时间测试。<br><br>线上Bug的修复优先级是最高的，其次是预部署环境的Bug，高于新功能开发的优先级。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552084597,"ip_address":"","comment_id":74024,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731947816","product_id":100023701,"comment_content":"关于课后提问:<br>我觉得可能是第一个sprint一时间还不能写完完整的代码可以去跑测试，所以只能放到下周…如果执念于第一个sprint也要做测试，可能项目代码没能好好完成，测试出一堆bug，那么这个强求的测试可能没什么意义了，反而还要回来再改bug,违背了敏捷的理念<br><br>缺点:如果说在安排的时候过于专注在开发上，有些bug不能及时在第二个sprint安排前发现，导致sprint2的进展出现困难，也违背了敏捷的理念","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442392,"discussion_content":"👍\n是的，测试需要时间的，如果功能开发星期五才完成，那么下周一部署就没时间测试。\n\n线上Bug的修复优先级是最高的，其次是预部署环境的Bug，高于新功能开发的优先级。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552084597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77247,"user_name":"什么也不说","can_delete":false,"product_type":"c1","uid":1053685,"ip_address":"","ucode":"1FAB54FA4CAB7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/f5/21fd4868.jpg","comment_is_top":false,"comment_ctime":1552896521,"is_pvip":false,"replies":[{"id":"28146","content":"好问题👍<br><br>v1.1的更新，同步更新到master，这样从master创建v1.2的时候，就包含了v1.1的更新。<br><br>例如用git的cherry-pick可以方便的选取v1.1的更新commit到master。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552900070,"ip_address":"","comment_id":77247,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14437798409","product_id":100023701,"comment_content":"老师有个问题没理解， brach分隔图上 sprint v1.1 在生成环境验证没问题的话，合并到master。 <br><br>这个sprint v1.2需要测试，怎么做呢， v1.2不包含sprintv1.1的更新啊？ ","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443655,"discussion_content":"好问题👍\n\nv1.1的更新，同步更新到master，这样从master创建v1.2的时候，就包含了v1.1的更新。\n\n例如用git的cherry-pick可以方便的选取v1.1的更新commit到master。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552900070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1443822,"avatar":"https://static001.geekbang.org/account/avatar/00/16/07/ee/6e8bcaf5.jpg","nickname":"Bruced","note":"","ucode":"DFD766CED4CF78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206718,"discussion_content":"第二周，测试人员进行V1.1版本测试的时候，开发人员怎么安排？如果在master上开始V1.2的开发，那不就不包含V1.1的更新了嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584433107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75081,"user_name":"哈拿","can_delete":false,"product_type":"c1","uid":1442369,"ip_address":"","ucode":"B8FF8AAE7848F9","user_header":"https://static001.geekbang.org/account/avatar/00/16/02/41/8197097e.jpg","comment_is_top":false,"comment_ctime":1552354488,"is_pvip":false,"replies":[{"id":"27360","content":"抱歉这是我没表达清楚。<br><br>我把时间上的Sprint和看板的Sprint混在一起说了。<br><br>我们以文中的Sprint1.1为例，Sprint1.1在第一周，某个功能（例如：Ticket-123）属于Sprint 1.1。<br><br>然后到了第二周，Sprint1.2开始开发了，这时候，Sprint1.1开始测试了。发现了Ticket-123的Bug，测试提了一个Bug（例如：Ticket-234），这个Bug的Ticket属于Sprint 1.1，而不是Sprint 1.2。<br><br>像Jira这种软件，可以多个Sprint共存，也就是你看Sprint 1.1，可以看到Sprint 1.1的所有的Ticket状态；切换到Sprint 1.2，可以看到Sprint 1.1的所有的Ticket状态。<br><br>这就是为什么我建议alan把Bug放到当前的sprint里。<br><br>希望我这么补充说明能说清楚，而不是更混乱了。<br><br>如果不清楚请继续留言。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552356674,"ip_address":"","comment_id":75081,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437256376","product_id":100023701,"comment_content":"老师，你不是说当前的sprint可以放到下一个进行测试吗？为什么在回答alan的问题时又建议他放到当前的sprint里呢？","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442793,"discussion_content":"抱歉这是我没表达清楚。\n\n我把时间上的Sprint和看板的Sprint混在一起说了。\n\n我们以文中的Sprint1.1为例，Sprint1.1在第一周，某个功能（例如：Ticket-123）属于Sprint 1.1。\n\n然后到了第二周，Sprint1.2开始开发了，这时候，Sprint1.1开始测试了。发现了Ticket-123的Bug，测试提了一个Bug（例如：Ticket-234），这个Bug的Ticket属于Sprint 1.1，而不是Sprint 1.2。\n\n像Jira这种软件，可以多个Sprint共存，也就是你看Sprint 1.1，可以看到Sprint 1.1的所有的Ticket状态；切换到Sprint 1.2，可以看到Sprint 1.1的所有的Ticket状态。\n\n这就是为什么我建议alan把Bug放到当前的sprint里。\n\n希望我这么补充说明能说清楚，而不是更混乱了。\n\n如果不清楚请继续留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552356674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74833,"user_name":"alva_xu","can_delete":false,"product_type":"c1","uid":1003946,"ip_address":"","ucode":"1D5B592B3A780F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLPxmcBiaXpTjuyicHJJwVECstJPyHJj8ZMOEdjz5N3rQzTkR4vTF3bpNXLm4MftPNFPI6ibsVRN5FbA/132","comment_is_top":false,"comment_ctime":1552302663,"is_pvip":false,"replies":[{"id":"27315","content":"👍<br>支持你的观点：如果有专职的测试团队，放两个Sprint更好，这样正好测试和开发可以错开，如果没有专职测试，还是一个Sprint更好。<br><br>如果一周Sprint变两周一个Sprint就有更充足的时间进行测试。交付质量也会相应提高。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552327571,"ip_address":"","comment_id":74833,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437204551","product_id":100023701,"comment_content":"项目没有在一个 Sprint 里面同时完成开发和测试，而是把测试放在下一个 Sprint<br><br>这个问题，我的理解是，如果测试团队和开发团队是完全分开的，那么放两个Sprint比较好。但如果开发人员同时可以做很多代码和接口测试工作，而集成测试又可以通过编写测试脚本，进行自动化测试，那么，我觉的没必要分开。关键是在接受ticket时确定好验收标准，那么把一周一个迭代变成两周一个迭代，一个迭代里既包含开发又包含测试，这样多个开发测试任务并行进行，可以提高交付效率。","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442698,"discussion_content":"👍\n支持你的观点：如果有专职的测试团队，放两个Sprint更好，这样正好测试和开发可以错开，如果没有专职测试，还是一个Sprint更好。\n\n如果一周Sprint变两周一个Sprint就有更充足的时间进行测试。交付质量也会相应提高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552327571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74151,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1552116589,"is_pvip":true,"replies":[{"id":"27138","content":"👍分析的很到位<br><br>分支不一定要合并，也可以考虑一个Commit放到两个Branch，git用cherry-pick可以支持<br><br>新分支开发也是个不错的办法，有一个小问题就是如果线上版本要打补丁，而这时候开发版本和master合并了，就稍微麻烦一点。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552143354,"ip_address":"","comment_id":74151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437018477","product_id":100023701,"comment_content":"优点：新开发的功能有足够的时间测试<br>缺点：合并分支有点麻烦，开发和改bug同时进行，如果前一个sprint开发的代码bug比较多，可能会影响这个sprint的开发<br><br>关于分支部署那里，我们采用的办法是拉个新分支做开发，在预发测试好了再合并但master部署。<br><br>另外阅读本文的收获有两个：扑克牌估算工作量，这个确实之前是非常头疼的环节，准备尝试一下新方法；不同的会议的作用和介绍，有些可以借鉴一下用","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442468,"discussion_content":"👍分析的很到位\n\n分支不一定要合并，也可以考虑一个Commit放到两个Branch，git用cherry-pick可以支持\n\n新分支开发也是个不错的办法，有一个小问题就是如果线上版本要打补丁，而这时候开发版本和master合并了，就稍微麻烦一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552143354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115047,"user_name":"王","can_delete":false,"product_type":"c1","uid":1084336,"ip_address":"","ucode":"44A968CB371704","user_header":"https://static001.geekbang.org/account/avatar/00/10/8b/b0/38aadfa0.jpg","comment_is_top":false,"comment_ctime":1563460869,"is_pvip":false,"replies":[{"id":"42069","content":"微服务的架构下，通常一个微服务的小组要么前后端都做，要么通过架构将前后端分离：只做前端或者只做后端。<br><br>因为拆成微服务一个主要目的就是要将大开发团队分拆成小开发组，一个微服务小组通常只有3-6个开发，在做微服务的架构拆分时就要同时考虑好组织架构的设计。<br><br>参考《45 | 从软件工程的角度看微服务、云计算、人工智能这些新技术》中提到的康威定律：<br>&gt; 你设计的软件系统架构，会以某种方式反映出构建软件背后团队的组织架构。你在设计软件的系统架构时，同时也在设计你的组织架构，反之亦然。也可以简单理解为：组织架构的设计等同于系统架构的设计。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1563509994,"ip_address":"","comment_id":115047,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10153395461","product_id":100023701,"comment_content":"现在基本都前后端分离了，一个团队4个开发，一个是架构能力的资深人士，另外3个是要前后端都会，但是现在趋势都是前后端分离，这个团队的配置怎么更合理呢？<br>另外我看微服务架构的下都建议一个模块有3人团，如果前后端分离那就要6个人呢？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458944,"discussion_content":"微服务的架构下，通常一个微服务的小组要么前后端都做，要么通过架构将前后端分离：只做前端或者只做后端。\n\n因为拆成微服务一个主要目的就是要将大开发团队分拆成小开发组，一个微服务小组通常只有3-6个开发，在做微服务的架构拆分时就要同时考虑好组织架构的设计。\n\n参考《45 | 从软件工程的角度看微服务、云计算、人工智能这些新技术》中提到的康威定律：\n&amp;gt; 你设计的软件系统架构，会以某种方式反映出构建软件背后团队的组织架构。你在设计软件的系统架构时，同时也在设计你的组织架构，反之亦然。也可以简单理解为：组织架构的设计等同于系统架构的设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563509994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89727,"user_name":"宝宝太喜欢极客时间了","can_delete":false,"product_type":"c1","uid":1215152,"ip_address":"","ucode":"9CDB679C257612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOGZ6lbHiboIZMN9USbeutnmCWBahVLtSlKlIENKvrZQCUQzpzeZQOxTntIkBUeDk6qZUPdqmfKrQ/132","comment_is_top":false,"comment_ctime":1556250718,"is_pvip":false,"replies":[{"id":"32190","content":"是每一个功能创建一个新的分支，分支会频繁的创建和删除。<br><br>但这对git来说不是任何问题的，每个人主要是拉取master和自己关心的分支，所以还好。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1556288936,"ip_address":"","comment_id":89727,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10146185310","product_id":100023701,"comment_content":"老师，分支管理那块是项目组所有的开发人员都使用同一个开发分支还是每个人拉去一个分支开发呢？如果所有人用同一个分支PR怎么做？如果每个人拉一个开发分支会出现频繁删除拉取分支的情况？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448237,"discussion_content":"是每一个功能创建一个新的分支，分支会频繁的创建和删除。\n\n但这对git来说不是任何问题的，每个人主要是拉取master和自己关心的分支，所以还好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556288936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80660,"user_name":"成","can_delete":false,"product_type":"c1","uid":1053969,"ip_address":"","ucode":"514D161041B5B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/11/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1553695480,"is_pvip":false,"replies":[{"id":"29380","content":"是这样的，开发当前Sprint新功能的时候，同时要修改上个Sprint的bug。比如说这周是Sprint 1.2，那么同时要修改Sprint1.1的Bug。而且Sprint 1.1的Bug的优先级要高于Sprint 1.2新功能的开发。<br><br>其实改Bug通常不需要花太多时间，所以一般影响不大。<br><br>如果偶尔Bug修改时间过长，不能如期完成的，需要推迟上线。<br><br>如果团队不适应这种节奏，那么应该延长Sprint周期，例如两周一个Sprint。<br><br>文章的例子只是一个参考，并不是说一定要这样做。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553741098,"ip_address":"","comment_id":80660,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10143630072","product_id":100023701,"comment_content":"一周开发，一周测试，测试的时候，开发人员开始下个迭代，那bug啥时候修改呢？如果下一个迭代期间也要修改bug，那本次迭代工作也进度也难以保证样，不是很理解如何操作","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444936,"discussion_content":"是这样的，开发当前Sprint新功能的时候，同时要修改上个Sprint的bug。比如说这周是Sprint 1.2，那么同时要修改Sprint1.1的Bug。而且Sprint 1.1的Bug的优先级要高于Sprint 1.2新功能的开发。\n\n其实改Bug通常不需要花太多时间，所以一般影响不大。\n\n如果偶尔Bug修改时间过长，不能如期完成的，需要推迟上线。\n\n如果团队不适应这种节奏，那么应该延长Sprint周期，例如两周一个Sprint。\n\n文章的例子只是一个参考，并不是说一定要这样做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553741098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77129,"user_name":"dancer","can_delete":false,"product_type":"c1","uid":1019036,"ip_address":"","ucode":"B8D5641A3AC490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/9c/d48473ab.jpg","comment_is_top":false,"comment_ctime":1552849458,"is_pvip":false,"replies":[{"id":"28108","content":"不知道你们有没有测试环境，merge到master后是不是会部署到测试环境，还是直接部署到生产环境？<br><br>如果有从master部署到测试环境测试的阶段，其实差不多的。<br><br>如果没有测试环境，我想主要差别在于没有专门测试人员的测试，或者说除了负责开发的人以外，其他人不方便去这个分支测试。<br><br>因为通常测试环境也只有一个，不方便每个分支都部署到上面测试，所以测试环境通常是部署master上的代码或者专门测试分支的代码。<br><br>文章中这种有专门测试分支的方式，优点就是可以通过测试分支，在测试分支上不增加新功能只修复bug，这样可以保证分支的质量趋向稳定；缺点就是比较繁琐。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552873140,"ip_address":"","comment_id":77129,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142784050","product_id":100023701,"comment_content":"扑克估算很赞！另外还有一个问题，目前我们的开发方式是，每个成员基于要开发的feature，从master上创建一个分支进行开发，当开发测试完成后，再merge到master上部署上线。想请问老师，和文中提到的分支开发方式相比，各自的优缺点是什么？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443592,"discussion_content":"不知道你们有没有测试环境，merge到master后是不是会部署到测试环境，还是直接部署到生产环境？\n\n如果有从master部署到测试环境测试的阶段，其实差不多的。\n\n如果没有测试环境，我想主要差别在于没有专门测试人员的测试，或者说除了负责开发的人以外，其他人不方便去这个分支测试。\n\n因为通常测试环境也只有一个，不方便每个分支都部署到上面测试，所以测试环境通常是部署master上的代码或者专门测试分支的代码。\n\n文章中这种有专门测试分支的方式，优点就是可以通过测试分支，在测试分支上不增加新功能只修复bug，这样可以保证分支的质量趋向稳定；缺点就是比较繁琐。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552873140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75808,"user_name":"星星童鞋","can_delete":false,"product_type":"c1","uid":1127645,"ip_address":"","ucode":"134A19261B9666","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/dd/baaef6cc.jpg","comment_is_top":false,"comment_ctime":1552473896,"is_pvip":false,"replies":[{"id":"27660","content":"架构设计上，一定要定期需要重构，优化设计，不然后续新需求效率会降低，包括代码上也会越来越臃肿。比如我现在所在项目组，每1-2年会有一次大的架构升级调整，日常每隔几周会有小的架构优化，这样基本上可以保证快速迭代不会受太大影响。<br><br>部署的话，一个是要自动化，可以快速方便的部署，另外一个部署后，需要有配套的数据监控和高于阈值报警的机制，因为上线后可能会有严重问题，需要及时发现，及时处理。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552486565,"ip_address":"","comment_id":75808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142408488","product_id":100023701,"comment_content":"请问老师，对于需求更新极快，基本上每周都需要迭代更新上线的项目，在架构设计和项目部署上会不会有什么特殊的要求？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443041,"discussion_content":"架构设计上，一定要定期需要重构，优化设计，不然后续新需求效率会降低，包括代码上也会越来越臃肿。比如我现在所在项目组，每1-2年会有一次大的架构升级调整，日常每隔几周会有小的架构优化，这样基本上可以保证快速迭代不会受太大影响。\n\n部署的话，一个是要自动化，可以快速方便的部署，另外一个部署后，需要有配套的数据监控和高于阈值报警的机制，因为上线后可能会有严重问题，需要及时发现，及时处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552486565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75494,"user_name":"哈娃","can_delete":false,"product_type":"c1","uid":1081603,"ip_address":"","ucode":"BDCB7DA7D8D8DD","user_header":"https://static001.geekbang.org/account/avatar/00/10/81/03/130a68af.jpg","comment_is_top":false,"comment_ctime":1552404173,"is_pvip":false,"replies":[{"id":"27556","content":"是的，软件工程的知识并不神秘，把很多项目的经验和知识点一结合，你会发现对于你来说那些知识一直在，只是没有理论化。<br><br>前天有人问c++的，大家都推荐gtest，不知道是不是适合C语言，建议还是问问专业人士。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552411564,"ip_address":"","comment_id":75494,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142338765","product_id":100023701,"comment_content":"看了老师的讲解，这才恍然大悟，原来我们部门有的项目组使用的正是敏捷开发方法。另外，老师有适合c代码的自动化测试工具推荐吗？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442916,"discussion_content":"是的，软件工程的知识并不神秘，把很多项目的经验和知识点一结合，你会发现对于你来说那些知识一直在，只是没有理论化。\n\n前天有人问c++的，大家都推荐gtest，不知道是不是适合C语言，建议还是问问专业人士。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552411564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74895,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1552310355,"is_pvip":false,"replies":[{"id":"27317","content":"文档这个事呀，和是不是敏捷开发真没多大关系，敏捷开发从来没说文档不重要，只是说“工作的软件 高于 详尽的文档”。就算是敏捷开发的团队，必要的文档也是要写的。<br><br>瀑布模型的时候我也没看大家多爱写文档，文档质量也差得很，很多人无非就是找个借口不写文档罢了。<br><br>你知道对于代码来说最好的文档是什么吗？——良好的代码规范和单元测试！<br><br>要是真能按照敏捷开发的要求，保证一定量的单元测试代码覆盖率，从命名和测试代码很容易就可以看出来一个方法的输入和输出，边界条件等。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552336722,"ip_address":"","comment_id":74895,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142244947","product_id":100023701,"comment_content":"如果用敏捷开发，开发人员变动频繁的话，用敏捷开发项目的相关文档那么少，有的开发就简单写一下，万一负责该项目的开发都走了，后期要对该代码进行改动怎么搞？要从头到尾的读一遍源码吗？😂<br>     要怎样做才防止上面的事发生？<br>","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442724,"discussion_content":"文档这个事呀，和是不是敏捷开发真没多大关系，敏捷开发从来没说文档不重要，只是说“工作的软件 高于 详尽的文档”。就算是敏捷开发的团队，必要的文档也是要写的。\n\n瀑布模型的时候我也没看大家多爱写文档，文档质量也差得很，很多人无非就是找个借口不写文档罢了。\n\n你知道对于代码来说最好的文档是什么吗？——良好的代码规范和单元测试！\n\n要是真能按照敏捷开发的要求，保证一定量的单元测试代码覆盖率，从命名和测试代码很容易就可以看出来一个方法的输入和输出，边界条件等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552336722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74877,"user_name":"K战神","can_delete":false,"product_type":"c1","uid":1139367,"ip_address":"","ucode":"527E6BB26BB766","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/a7/3e6fee86.jpg","comment_is_top":false,"comment_ctime":1552307984,"is_pvip":false,"replies":[{"id":"27316","content":"建议不要着急一下子都改进，可以逐步试行，因为一下子改太多，一个问题是实施难度大，另一个问题是你不知道是哪个是有效的，哪个是无效甚至副作用的。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552327726,"ip_address":"","comment_id":74877,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142242576","product_id":100023701,"comment_content":"我们现在使用的是瀑布模型，下次的开发，<br>我决定试用一下，<br>让产品经理尽量都先走jira，<br>团队成员自己估算时间工作量，<br>每天上班后晨会，<br>自动化测试用例","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442717,"discussion_content":"建议不要着急一下子都改进，可以逐步试行，因为一下子改太多，一个问题是实施难度大，另一个问题是你不知道是哪个是有效的，哪个是无效甚至副作用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552327726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74678,"user_name":"草裡菌","can_delete":false,"product_type":"c1","uid":1241514,"ip_address":"","ucode":"E11C630ABA4370","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/aa/c29def94.jpg","comment_is_top":false,"comment_ctime":1552279498,"is_pvip":false,"replies":[{"id":"27242","content":"其实这样做，即使一个人一样有意义的：<br>1. 可以帮助一起理解清楚需求<br>2. 会议上公开的估算，本质上也是一种口头许诺，结果会更严谨准确<br><br>所以没什么好苦恼的，可以先试试看。<br><br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552281759,"ip_address":"","comment_id":74678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142214090","product_id":100023701,"comment_content":"才看完了BOB大叔的《代码整洁之道-程序员的职业素养》，里面也有立会，比手指预估，Sprint回顾会议等。<br>但是我现在的公司开发人员组成是，Android与iOS各1名，后端3名，Web前端1名，分任务的话，总觉得难以实施，也就后端比较能实现比手指预估这种敏捷方式。三前端都只有1个人，预估就一个人说了算的感觉。苦恼...","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442649,"discussion_content":"其实这样做，即使一个人一样有意义的：\n1. 可以帮助一起理解清楚需求\n2. 会议上公开的估算，本质上也是一种口头许诺，结果会更严谨准确\n\n所以没什么好苦恼的，可以先试试看。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552281759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74541,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1552231750,"is_pvip":false,"replies":[{"id":"27208","content":"是呀，说明大家都有很多自己的思考。<br><br>文章毕竟篇幅有限内容有限，现实中的项目远比想象的要复杂，关键还是看如何灵活运用好这些知识到项目中。<br><br>希望你也可以多多留言分享🤝","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552245187,"ip_address":"","comment_id":74541,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142166342","product_id":100023701,"comment_content":"同学们的总结和疑问都好专业啊，标出了重点，也找出来值得深挖的地方。<br>老师的回复很好的对文章内容做了补充。<br>这篇文章收获颇多。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442592,"discussion_content":"是呀，说明大家都有很多自己的思考。\n\n文章毕竟篇幅有限内容有限，现实中的项目远比想象的要复杂，关键还是看如何灵活运用好这些知识到项目中。\n\n希望你也可以多多留言分享🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552245187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74212,"user_name":"K战神","can_delete":false,"product_type":"c1","uid":1139367,"ip_address":"","ucode":"527E6BB26BB766","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/a7/3e6fee86.jpg","comment_is_top":false,"comment_ctime":1552146360,"is_pvip":false,"replies":[{"id":"27158","content":"是的，敏捷的迭代里面时间是固定的！下一篇还会讲一点关于时间和范围的内容。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552174904,"ip_address":"","comment_id":74212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142080952","product_id":100023701,"comment_content":"谢谢玉哥，我现在找到一点感觉，<br>首先要把握原则，在自己规划的迭代周期内，<br>可以进行调整但是不能打乱节奏，<br>而不是像瀑布模型那样根据任务划分周期，<br>敏捷是周期内能应对多少需求和测试等工作。。找到一个节奏也是很重要的一个方面。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442499,"discussion_content":"是的，敏捷的迭代里面时间是固定的！下一篇还会讲一点关于时间和范围的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552174904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74182,"user_name":"K战神","can_delete":false,"product_type":"c1","uid":1139367,"ip_address":"","ucode":"527E6BB26BB766","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/a7/3e6fee86.jpg","comment_is_top":false,"comment_ctime":1552136227,"is_pvip":false,"replies":[{"id":"27142","content":"谢谢，总算没叫叔叔😄<br><br>在敏捷开发中，通常迭代比较小，所以大多数时候可以放在下个Sprint。<br><br>如果确实需要放到当前Sprint，也没问题，到时候影响到其他Ticket的开发进度，其他Ticket会顺延到下个Sprint。记住一个原则：敏捷开发里面，范围是可以变的，时间不能变，一个Sprint必须按时结束。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552145853,"ip_address":"","comment_id":74182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142070819","product_id":100023701,"comment_content":"玉哥好，我们在现在的瀑布模型开发中，<br>很担心的就是需求变更和需求理解不足。<br>如果在开发过程中需求变更了，按照我现在的开发模式就是项目经理预估组没评审，测试再评审，修改工期，但是一般小的改动可能加班就干完了。懒得再走流程。<br>敏捷开发中遇到这种需求变更着急上线的，影响了原来的开发节奏该怎么进行取舍？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442485,"discussion_content":"谢谢，总算没叫叔叔😄\n\n在敏捷开发中，通常迭代比较小，所以大多数时候可以放在下个Sprint。\n\n如果确实需要放到当前Sprint，也没问题，到时候影响到其他Ticket的开发进度，其他Ticket会顺延到下个Sprint。记住一个原则：敏捷开发里面，范围是可以变的，时间不能变，一个Sprint必须按时结束。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552145853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74100,"user_name":"Lrwin","can_delete":false,"product_type":"c1","uid":1180503,"ip_address":"","ucode":"5E394E36419C56","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/57/31595f22.jpg","comment_is_top":false,"comment_ctime":1552104084,"is_pvip":false,"replies":[{"id":"27074","content":"1. 运维的话得看你是基于什么样的服务器。运维要注意两个问题：一个是要实现自动化；二要实现监控和报警；<br>2. 要定期重构，并且把重构作为Sprint的任务之一；<br>3. 那你不如还是开分支呀，我在上一篇文章中介绍了基于git的开发流程，GitHub-Flow可以很好解决你这种问题。Git开个分支没啥成本的；<br>4. 看板就是干这事的，每天看一下看板的各个栏下面有多少Ticket，就知道进展如何了。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552107108,"ip_address":"","comment_id":74100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142038676","product_id":100023701,"comment_content":"1.如果项目做完后，运维问题有没有什么好的方案？<br>2.使用敏捷开发后，因为sprint大多都是对于功能而言的，我发现技术债会变多，如何解决？<br>3.同时多个功能需求来了，只开启一个分支，不对不同功能开启分支，因为敏捷开发是用于快速响应业务的，如果在一个分支的情况下，这个期间某个功能不要了，怎么办？<br>4.每天的ticket 需要监控吧？否则sprint有可能delay的","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442443,"discussion_content":"1. 运维的话得看你是基于什么样的服务器。运维要注意两个问题：一个是要实现自动化；二要实现监控和报警；\n2. 要定期重构，并且把重构作为Sprint的任务之一；\n3. 那你不如还是开分支呀，我在上一篇文章中介绍了基于git的开发流程，GitHub-Flow可以很好解决你这种问题。Git开个分支没啥成本的；\n4. 看板就是干这事的，每天看一下看板的各个栏下面有多少Ticket，就知道进展如何了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552107108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74092,"user_name":"池强泽","can_delete":false,"product_type":"c1","uid":1231762,"ip_address":"","ucode":"1E5A4D70FE9C96","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/92/3dbeb6ab.jpg","comment_is_top":false,"comment_ctime":1552102160,"is_pvip":false,"replies":[{"id":"27070","content":"迭代的话，通常都会按时发布。<br><br>偶尔有依赖，例如某个功能依赖另一个组的实现，而他们没能按时完成，要么这个功能放到下个Sprint继续，要么这个Sprint就不发布了，合并到下一个Sprint一起发布。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552106752,"ip_address":"","comment_id":74092,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142036752","product_id":100023701,"comment_content":"大公司分小团队，跨团队合作，依赖必然很多。感觉会延误迭代周。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442438,"discussion_content":"迭代的话，通常都会按时发布。\n\n偶尔有依赖，例如某个功能依赖另一个组的实现，而他们没能按时完成，要么这个功能放到下个Sprint继续，要么这个Sprint就不发布了，合并到下一个Sprint一起发布。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552106752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74073,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1552098154,"is_pvip":false,"replies":[{"id":"27061","content":"👍<br>是的，不仅提高吞吐量，最重要是有充足的测试时间。<br><br>两个分支同时工作，合并是个麻烦事😢","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552099413,"ip_address":"","comment_id":74073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142032746","product_id":100023701,"comment_content":"优点是开发测试并行进行，提高工作吞吐量，缺点是上一次的问题要拖到本次解决，增加代码合并的成本","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442425,"discussion_content":"👍\n是的，不仅提高吞吐量，最重要是有充足的测试时间。\n\n两个分支同时工作，合并是个麻烦事😢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552099413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74056,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1552095472,"is_pvip":true,"replies":[{"id":"27056","content":"👍<br><br>是的，好处是可以有更多时间测试。其实从整体来看，还是每周都有一个新版本部署都有产出，所以还是可以算每周一个Sprint。<br><br>这只是其中一种每周一Sprint方案，并不是唯一方案。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552098183,"ip_address":"","comment_id":74056,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142030064","product_id":100023701,"comment_content":"开发和测试分成两个Sprint，好处是开发和测试可以相对独立计划开展工作（因为计划开始时间都是周一）。坏处是，某种意义上破坏了每个Sprint要交付完整价值的初衷。不过，逻辑上可以将两次Sprint看成一次完整交付来衡量结果","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442413,"discussion_content":"👍\n\n是的，好处是可以有更多时间测试。其实从整体来看，还是每周都有一个新版本部署都有产出，所以还是可以算每周一个Sprint。\n\n这只是其中一种每周一Sprint方案，并不是唯一方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552098183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74029,"user_name":"编程国学","can_delete":false,"product_type":"c1","uid":1071993,"ip_address":"","ucode":"9EEF2F62ACAFEC","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/79/0f083d7d.jpg","comment_is_top":false,"comment_ctime":1552089156,"is_pvip":false,"replies":[{"id":"27038","content":"这种情况，从内部改变是有点难的了。<br><br>估计平时也不忙的，如果可能的话，可以写点开源程序，写点自己的项目，在外部寻求突破吧。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552091895,"ip_address":"","comment_id":74029,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142023748","product_id":100023701,"comment_content":"我们组三个人，每个人负责一个项目，这些项目都有交叉，一直采用领导提需求(界面设计、功能需求)，分工编码，自己写，自己测，几乎无deadline，全靠自觉，如果说模型，增量与迭代组合，项目交付之后，用户使用很少(政绩项目)，快5年了，寻求突破之道，如果留下，怎么改变?","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442395,"discussion_content":"这种情况，从内部改变是有点难的了。\n\n估计平时也不忙的，如果可能的话，可以写点开源程序，写点自己的项目，在外部寻求突破吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552091895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126513,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1566398647,"is_pvip":false,"replies":[{"id":"46846","content":"1. 每天一个正式发布版本其实是常态，好处就是新功能及时发布，bug及时修复，有问题也能及时定位，缺点就是稳定性要低一些，好在互联网用户对Bug容忍度比较高。<br><br>另外，互联网公司虽然每天发布，但是每个功能在发布之前，都会在内部的测试环境进行充分测试，上线后先灰度一部分用户，数据正常后再全量到所有用户。线上有完善的数据监控和报警机制，发现问题后能及时回滚。<br><br>2. 灰度发布是很好的验证需求、测试功能的方式。灰度测试通常要配合各种数据监控辅助，比如说：使用了这部分功能的用户对比没有使用这部分功能的用户，付费购买是增加了还是减少了？这样才能知道这个功能真实结果如何。<br><br>但像微博产品经理这样过度依赖灰度测试，经常利用灰度发布一些不合常理的需求就是反例了😆","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1566446697,"ip_address":"","comment_id":126513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861365943","product_id":100023701,"comment_content":"1，如何看待互联网公司每天一个正式发布版本，甚至ebay每12小时一个正式发布版本。2、如何看待灰色发布？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464026,"discussion_content":"1. 每天一个正式发布版本其实是常态，好处就是新功能及时发布，bug及时修复，有问题也能及时定位，缺点就是稳定性要低一些，好在互联网用户对Bug容忍度比较高。\n\n另外，互联网公司虽然每天发布，但是每个功能在发布之前，都会在内部的测试环境进行充分测试，上线后先灰度一部分用户，数据正常后再全量到所有用户。线上有完善的数据监控和报警机制，发现问题后能及时回滚。\n\n2. 灰度发布是很好的验证需求、测试功能的方式。灰度测试通常要配合各种数据监控辅助，比如说：使用了这部分功能的用户对比没有使用这部分功能的用户，付费购买是增加了还是减少了？这样才能知道这个功能真实结果如何。\n\n但像微博产品经理这样过度依赖灰度测试，经常利用灰度发布一些不合常理的需求就是反例了😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566446697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126505,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1566397918,"is_pvip":false,"replies":[{"id":"47149","content":"一、修改Bug有必要专门开一个Branch，这么做的原因呢，在于要保证master（或者其他用来合并的分支）上的代码是稳定的。<br><br>新开分支的好处呢，就是你所有的修改都在分支上，合并之前不会影响master，通常分支代码要合并master有两个前提：1. 所有自动化测试代码通过；2.Code Review通过。这两个措施如果认真做，能有效保证代码质量，这样合并后，相对代码也是稳定可靠的。<br><br>另外对于git来说，开个分支成本真的很低，开分支后代码审查也比较容易。所以为什么不开一个分支呢？<br><br>二、每个Sprint通常周期不会太长，那么估算结果严重滞后通常不是一个Sprint造成的。发现滞后就应该及时调整，至于如何调整，这需要视情况而定，要么你要调整季度计划，要么你要调整Sprint的计划，要么都，或者你要加人，或者你要砍需求。<br><br>三、一个Sprint的周期是定长的，如果你不想996，那么对于一个sprint 中多出来的意外task，就应该优先考虑放到后续Sprint，实在不行也要考虑把当前Sprint的任务移到后面的Sprint。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1566661290,"ip_address":"","comment_id":126505,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861365214","product_id":100023701,"comment_content":"1、手工测试在team内部还是专门有个team，我在一外企时是多个feature team和一个release team，release team比feature team晚一个sprint<br>2、修改一个bug还有必要专门拉一个brach吗？<br>3、若每个sprint估算结果比部门预先的季度计划严重滞后如何办？<br>4、对于一个sprint 中多出来的意外task如何办？比如特别的一个紧急bug，事先未知的一个很长的公司级别的会议⋯","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464021,"discussion_content":"一、修改Bug有必要专门开一个Branch，这么做的原因呢，在于要保证master（或者其他用来合并的分支）上的代码是稳定的。\n\n新开分支的好处呢，就是你所有的修改都在分支上，合并之前不会影响master，通常分支代码要合并master有两个前提：1. 所有自动化测试代码通过；2.Code Review通过。这两个措施如果认真做，能有效保证代码质量，这样合并后，相对代码也是稳定可靠的。\n\n另外对于git来说，开个分支成本真的很低，开分支后代码审查也比较容易。所以为什么不开一个分支呢？\n\n二、每个Sprint通常周期不会太长，那么估算结果严重滞后通常不是一个Sprint造成的。发现滞后就应该及时调整，至于如何调整，这需要视情况而定，要么你要调整季度计划，要么你要调整Sprint的计划，要么都，或者你要加人，或者你要砍需求。\n\n三、一个Sprint的周期是定长的，如果你不想996，那么对于一个sprint 中多出来的意外task，就应该优先考虑放到后续Sprint，实在不行也要考虑把当前Sprint的任务移到后面的Sprint。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566661290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115751,"user_name":"yxguang","can_delete":false,"product_type":"c1","uid":1137726,"ip_address":"","ucode":"C5A6230ABEE197","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/3e/3f051e13.jpg","comment_is_top":false,"comment_ctime":1563718070,"is_pvip":false,"replies":[{"id":"42514","content":"1. 人员的问题，只能通过自身能力提升，或者通过外部招聘来解决，并没有太好的办法。每个人身兼多职也是敏捷开发中的常态。<br>2. 新旧项目并行也是很正常的，但是要学会用任务管理系统，把所有任务跟踪管理起来，然后每个Sprint按照优先级分配合理数量的任务项，逐一有序的完成。<br>3. 有任务管理系统后，有任务进来，并不是马上去处理，而是先提交Ticket，每天站会或者每个Sprint的任务计划会议中去分配优先级，后续按照优先级去处理，只有真正紧急的事情才应该打断当前的事情。日常琐碎的事情，集中处理，按照时间四象限处理。<br>3. 有任务管理系统后，有任务进来，并不是马上去处理，而是先提交Ticket，每天站会或者每个Sprint的任务计划会议中去分配优先级，后续按照优先级去处理，只有真正紧急的事情才应该打断当前的事情。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1563821022,"ip_address":"","comment_id":115751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858685366","product_id":100023701,"comment_content":"刚学敏捷，理解还不够深刻。我们项目组现在面临的最大挑战是进度、成本、质量如何平衡的问题。主要问题在于：<br>1. 人员结构和能力不足。3人一个团队，每个人都会涉及前后端开发工作以及测试工作，项目组长担任项目经理和主程序员。<br>2. 新旧项目","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459268,"discussion_content":"1. 人员的问题，只能通过自身能力提升，或者通过外部招聘来解决，并没有太好的办法。每个人身兼多职也是敏捷开发中的常态。\n2. 新旧项目并行也是很正常的，但是要学会用任务管理系统，把所有任务跟踪管理起来，然后每个Sprint按照优先级分配合理数量的任务项，逐一有序的完成。\n3. 有任务管理系统后，有任务进来，并不是马上去处理，而是先提交Ticket，每天站会或者每个Sprint的任务计划会议中去分配优先级，后续按照优先级去处理，只有真正紧急的事情才应该打断当前的事情。日常琐碎的事情，集中处理，按照时间四象限处理。\n3. 有任务管理系统后，有任务进来，并不是马上去处理，而是先提交Ticket，每天站会或者每个Sprint的任务计划会议中去分配优先级，后续按照优先级去处理，只有真正紧急的事情才应该打断当前的事情。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563821022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81550,"user_name":"小先生","can_delete":false,"product_type":"c1","uid":1055214,"ip_address":"","ucode":"E5F2052E0323C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","comment_is_top":false,"comment_ctime":1553940233,"is_pvip":false,"replies":[{"id":"29549","content":"如果你两周的Sprint，也许不需要这样做。文中这样做的根本原因还是希望保证有充足时间测试。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553964523,"ip_address":"","comment_id":81550,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848907529","product_id":100023701,"comment_content":"一周开发，后一周测试，这样可以保证程序的质量。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445250,"discussion_content":"如果你两周的Sprint，也许不需要这样做。文中这样做的根本原因还是希望保证有充足时间测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553964523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74167,"user_name":"再见陛下","can_delete":false,"product_type":"c1","uid":1025762,"ip_address":"","ucode":"42170293151A24","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/e2/5ce22802.jpg","comment_is_top":false,"comment_ctime":1552125260,"is_pvip":false,"replies":[{"id":"27141","content":"抱歉，敏捷概念太多，没展开细讲","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552144040,"ip_address":"","comment_id":74167,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847092556","product_id":100023701,"comment_content":"赶紧查一下啥叫scrum啥叫sprint😂","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442478,"discussion_content":"抱歉，敏捷概念太多，没展开细讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552144040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357142,"user_name":"Nio","can_delete":false,"product_type":"c1","uid":1529642,"ip_address":"广东","ucode":"A1B8D3C01FB937","user_header":"https://static001.geekbang.org/account/avatar/00/17/57/2a/c6c95f37.jpg","comment_is_top":false,"comment_ctime":1662989899,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1662989899","product_id":100023701,"comment_content":"去中心化","like_count":0},{"had_liked":false,"id":349824,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2732243,"ip_address":"","ucode":"D124F4FA4E816F","user_header":"https://static001.geekbang.org/account/avatar/00/29/b0/d3/200e82ff.jpg","comment_is_top":false,"comment_ctime":1656351951,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656351951","product_id":100023701,"comment_content":"感觉测试和开发不在同一个周可能是因为测试的时间不够吧。尤其是一旦程序中的判断语句一多，测试文件就很麻烦。开发完一周都要结束了，除非时间紧，否则慢慢测呗","like_count":0},{"had_liked":false,"id":349056,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1655701582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655701582","product_id":100023701,"comment_content":"课后提问:因为一周时间的sprint，如果开发，测试都做，明显时间不够用。","like_count":0},{"had_liked":false,"id":294986,"user_name":"别惹年轻人","can_delete":false,"product_type":"c1","uid":1328102,"ip_address":"","ucode":"F02CE0AA709EED","user_header":"https://static001.geekbang.org/account/avatar/00/14/43/e6/99fd4bb9.jpg","comment_is_top":false,"comment_ctime":1622171427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622171427","product_id":100023701,"comment_content":"最后一个问题测试为什么不放到当前sprint里，应该是时间来不及吧？","like_count":0},{"had_liked":false,"id":294984,"user_name":"别惹年轻人","can_delete":false,"product_type":"c1","uid":1328102,"ip_address":"","ucode":"F02CE0AA709EED","user_header":"https://static001.geekbang.org/account/avatar/00/14/43/e6/99fd4bb9.jpg","comment_is_top":false,"comment_ctime":1622171283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622171283","product_id":100023701,"comment_content":"发现一个问题，我觉得每个已完成的sprint代码，在测试完成前不应该合并到master，完全可以放在一个独立的分支上，比如已还sprint命名的分支，测试完成后再合并到master。<br>不然，线上突然有紧急bug需要修复，而此时master含有未经过测试的代码，岂不尴尬？","like_count":0},{"had_liked":false,"id":294982,"user_name":"别惹年轻人","can_delete":false,"product_type":"c1","uid":1328102,"ip_address":"","ucode":"F02CE0AA709EED","user_header":"https://static001.geekbang.org/account/avatar/00/14/43/e6/99fd4bb9.jpg","comment_is_top":false,"comment_ctime":1622170998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622170998","product_id":100023701,"comment_content":"每周都有这么多会议，做为研发怎么协调做开发任务？","like_count":0},{"had_liked":false,"id":285458,"user_name":"可爱(๑• . •๑)","can_delete":false,"product_type":"c1","uid":1364539,"ip_address":"","ucode":"1B6E047B9046B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/d2/3b/85338316.jpg","comment_is_top":false,"comment_ctime":1616825333,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616825333","product_id":100023701,"comment_content":"master1.2 和master1.3是并行开发的么，是不是意味着两个故事的模块是没有依赖的呢？<br>还有这里没有提及代码分支管理相关的，是大厂不怎么用么","like_count":0},{"had_liked":false,"id":259938,"user_name":"4!!","can_delete":false,"product_type":"c1","uid":1487663,"ip_address":"","ucode":"188445590D97DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/b3/2f/867b94d8.jpg","comment_is_top":false,"comment_ctime":1604892123,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604892123","product_id":100023701,"comment_content":"我在上家公司的时候，参与了一个敏捷项目A，前端的工作不算多，每周一个迭代；但在这个A项目过程中，会有其他的B、C项目需要你参与评审、甚至开发，这个时候需要自己去和A项目pm去协调时间，多个项目在时间线上穿插切换，非常费精力。<br>项目难度都不大，但你要同时参与多个项目，很不合理。老师，这种情况该怎么办？","like_count":0},{"had_liked":false,"id":231184,"user_name":"zyb","can_delete":false,"product_type":"c1","uid":1747065,"ip_address":"","ucode":"28107BBD12FD42","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a8/79/863d0c30.jpg","comment_is_top":false,"comment_ctime":1593603680,"is_pvip":false,"replies":[{"id":"86047","content":"也不完全是所有的事情都需要自己去完成，而是因为团队要求小而精，所以难免每个人需要兼顾更多职责，但一般还是有所侧重的，比如有人会偏前端、有人偏后端、有人偏测试。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1594272494,"ip_address":"","comment_id":231184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593603680","product_id":100023701,"comment_content":"我感觉敏捷开发下的开发人员都要自己去完成，需求分析，代码设计，编码，测试，运维这些瀑布模式的开发工作。每一个人都是一个小的作战单位。","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500191,"discussion_content":"也不完全是所有的事情都需要自己去完成，而是因为团队要求小而精，所以难免每个人需要兼顾更多职责，但一般还是有所侧重的，比如有人会偏前端、有人偏后端、有人偏测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594272494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171440,"user_name":"巫山老妖","can_delete":false,"product_type":"c1","uid":1056037,"ip_address":"","ucode":"B35E2CF1B3B04E","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/25/c4cc1e9f.jpg","comment_is_top":false,"comment_ctime":1578923459,"is_pvip":true,"replies":[{"id":"66634","content":"很好的总结分享👍<br><br>针对你提到的问题：<br>&gt; 我觉得这里比较好的地方就是培养Owner意识，需要每个人都为这个需求负责，不好的地方就是周期迭代需要加班，时间点卡的比较死，开发疲于应对需求，少了点时间去做一些技术建设和成长思考。<br><br>建议周期性的在一些Sprint中增加偿还技术债务的任务，这些任务应该是和新需求的开发同等重要。<br><br>另外如果经常加班，需要审视每个Sprint的任务是不是合理，应该适当减少Sprint中的任务以减少加班，从而提升效率。<br><br>每个Sprint的任务确定后，不应随意插入新的任务，可以放入后续Sprint，如果必须加入，则应该将优先级不高的其他任务后移至后续Sprint，保证一个Sprint任务的合理性。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1579036459,"ip_address":"","comment_id":171440,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1578923459","product_id":100023701,"comment_content":"今天学习了宝玉老师的《软件工程之美》中的“**07|大厂都在用哪些敏捷方法？（下）**”，以下是我的总结：<br><br>&gt; 宝玉老师举的实施敏捷开发小组的日常的例子跟我们的还不太一样，人员配置上我们是按职能划分了客户端、前端、后台、运营、产品、设计、测试组，规模会更大一点。分工基本上类似，产品写完需求设计文档会拉起相关人员进行宣讲，然后我们会进行工作量量评估，后面每天的都是完成日常开发工作，需求和修复bug都是在周期内完成的。我们每个需求都会设置一个Owner，由Owner去负责整个需求的进度根据和推送，关于开发会基于主干拉起feature分支进行特性开发，开发完成之后合入主干，发布之前会拉起release分支进行系统测试，最后才是发布上线。说实在我们其实也不是严格意义上的敏捷开发，但价值观和原则是对齐敏捷开发的。我觉得这里比较好的地方就是培养Owner意识，需要每个人都为这个需求负责，不好的地方就是周期迭代需要加班，时间点卡的比较死，开发疲于应对需求，少了点时间去做一些技术建设和成长思考。","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481350,"discussion_content":"很好的总结分享👍\n\n针对你提到的问题：\n&amp;gt; 我觉得这里比较好的地方就是培养Owner意识，需要每个人都为这个需求负责，不好的地方就是周期迭代需要加班，时间点卡的比较死，开发疲于应对需求，少了点时间去做一些技术建设和成长思考。\n\n建议周期性的在一些Sprint中增加偿还技术债务的任务，这些任务应该是和新需求的开发同等重要。\n\n另外如果经常加班，需要审视每个Sprint的任务是不是合理，应该适当减少Sprint中的任务以减少加班，从而提升效率。\n\n每个Sprint的任务确定后，不应随意插入新的任务，可以放入后续Sprint，如果必须加入，则应该将优先级不高的其他任务后移至后续Sprint，保证一个Sprint任务的合理性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579036459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115755,"user_name":"yxguang","can_delete":false,"product_type":"c1","uid":1137726,"ip_address":"","ucode":"C5A6230ABEE197","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/3e/3f051e13.jpg","comment_is_top":false,"comment_ctime":1563719112,"is_pvip":false,"replies":[{"id":"42515","content":"已于另一留言中集中回复。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1563821055,"ip_address":"","comment_id":115755,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563719112","product_id":100023701,"comment_content":"2.新旧项目并行。同时要负责旧项目需求开发和bug修改，旧项目运维，新项目开发。<br>3.经常会被各种事情打断，而且又不能不做。<br>个人觉得，对于我们这种小团队来说，如果敏捷能应用起来，在项目进度把控方面会有很大帮助。<br>","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459272,"discussion_content":"已于另一留言中集中回复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563821055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81549,"user_name":"小先生","can_delete":false,"product_type":"c1","uid":1055214,"ip_address":"","ucode":"E5F2052E0323C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","comment_is_top":false,"comment_ctime":1553940154,"is_pvip":false,"replies":[{"id":"29550","content":"一周一个Sprint要慎重推进，不一定所有项目都适合这么快的节奏。其他应该没什么问题。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553964611,"ip_address":"","comment_id":81549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553940154","product_id":100023701,"comment_content":"一周一个 Sprint 以及估算扑克，轮值是我的项目组值得学习的地方。。玩试着推进一下。<br>","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445249,"discussion_content":"一周一个Sprint要慎重推进，不一定所有项目都适合这么快的节奏。其他应该没什么问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553964611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}