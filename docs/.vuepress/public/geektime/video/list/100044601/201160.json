{"id":201160,"title":"27 | 定义Entity：区分领域模型的内在逻辑和外在行为","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/NET-Core\">https://gitee.com/geektime-geekbang/NET-Core</a></p>","comments":[{"had_liked":false,"id":217998,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c3","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1589690683,"is_pvip":false,"replies":[{"id":81342,"content":"方法表示业务动作，是有业务含义的。\n使用set的话，无法业务动作含义丢失了，它表示一次赋值。","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1590236456,"ip_address":"","comment_id":217998,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"最近在实践这套框架，对于实体的定义产生了一些疑惑，例子中Order定义是这样的：\npublic class Order : Entity\n{\n    public Address Address {get; private set;}\n    public void ChangeAddress(Address address)\n    {\n        Address = address;\n        &#47;&#47; 引发事件\n    }\n}\n这让我想到了Java中属性的定义\npublic class Order extends Entity{\n    private Address _address;\n    public Address getAddress(){\n        return _address;\n    }\n    public void setAddress(Address address){\n        _address = address;\n        &#47;&#47; 引发事件\n    }\n}\n就感觉属性在C#里好像又成了字段，是不是有点多此一举呢？\n能不能这样：\npublic class Order : Entity\n{\n    private Address _address;\n    public Address Address \n    {\n        get =&gt; _address;\n        set\n        {\n            _address = value;\n           &#47;&#47; 引发事件\n        }\n    }\n }\n方法在这里是有什么特别的特性吗？","like_count":6,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495319,"discussion_content":"方法表示业务动作，是有业务含义的。\n使用set的话，无法业务动作含义丢失了，它表示一次赋值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590236456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193838,"user_name":"Loading","can_delete":false,"product_type":"c3","uid":1808758,"ip_address":"","ucode":"9BCE8CDB0D4237","user_header":"https://static001.geekbang.org/account/avatar/00/1b/99/76/77ac0b57.jpg","comment_is_top":false,"comment_ctime":1584972013,"is_pvip":false,"replies":[{"id":79659,"content":"31是个奇数，同时是个质数，不少语言的GetHashCode都是使用它作为运算因子，当然你选择其它奇质数也不是不行","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1588943811,"ip_address":"","comment_id":193838,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"我想问一下，Entity 中的 GetHashCode 方法，用到了 Id 的 HashCode 与 31 进行异或运算，包括 ValueObject 类中，也用到了异或，这其中的原因是什么？","like_count":2,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488679,"discussion_content":"31是个奇数，同时是个质数，不少语言的GetHashCode都是使用它作为运算因子，当然你选择其它奇质数也不是不行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588943811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180103,"user_name":"xiao白","can_delete":false,"product_type":"c3","uid":1809603,"ip_address":"","ucode":"D55BEB07E456BE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/9c/c3/845d0475.jpg","comment_is_top":false,"comment_ctime":1582187135,"is_pvip":false,"replies":[{"id":70276,"content":"这是正常的","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1582520571,"ip_address":"","comment_id":180103,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师，如果所有属性的set方法为私有的话，属性少的情况用构造函数传入没问题，但是如果属性有个2、30个的话，那构造函数的参数列表不是很长了吗","like_count":2,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484525,"discussion_content":"这是正常的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582520571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073025,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","nickname":"stg609","note":"","ucode":"FB70A75A891BB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182611,"discussion_content":"如果一个对象有这么多属性，首先要考虑是不是建模粒度太粗，可能存在职责过多的问题。其次，如果真的需要这么属性，可以考虑通过DTO的方式来包装参数。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582441323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1809168,"avatar":"","nickname":"Geek_7c4953","note":"","ucode":"359745D4725D4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1073025,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","nickname":"stg609","note":"","ucode":"FB70A75A891BB8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267797,"discussion_content":"DTO包装参数也不能放在构造函数里吧，只能作为实体之上比如在领域服务和应用层之间传递用DTO，否则实体依赖DTO怎么想都说不过去。\n层主这个问题我也是思来想去了很久，不说2、3十个，5个以上代码就有些臃肿了。所以我觉得这还得C#语法去优化，能像python一样，把元组拆包成函数参数列表就行了，正好配合C#9的data class，完美解决这个问题。\n还有一个思路呢，我是想能不能像AutoMapper一样将对类的映射，映射到函数参数列表去，这样虽然少了编译时提示，但也勉强能用，不过C#的反射似乎不支持这么做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589691114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":182611,"ip_address":"","group_id":0},"score":267797,"extra":""}]},{"author":{"id":1656804,"avatar":"https://static001.geekbang.org/account/avatar/00/19/47/e4/17cb3df1.jpg","nickname":"BBQ","note":"","ucode":"683BBF7F7AE370","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387002,"discussion_content":"可以用Build 模式去构建对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627949204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215841,"user_name":"Turbo","can_delete":false,"product_type":"c3","uid":1997254,"ip_address":"","ucode":"9EC8C3E28B77BF","user_header":"https://static001.geekbang.org/account/avatar/00/1e/79/c6/68e433f4.jpg","comment_is_top":false,"comment_ctime":1589116495,"is_pvip":false,"replies":[{"id":80597,"content":"当你获取到返回的集合时，里面的yield return x 并不执行。当你遍历集合时，才会执行。\n可以深入了解下yield return","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1589684384,"ip_address":"","comment_id":215841,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师 请问 为啥获取原子值那里要用yield return x 呢","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494577,"discussion_content":"当你获取到返回的集合时，里面的yield return x 并不执行。当你遍历集合时，才会执行。\n可以深入了解下yield return","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589684384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195280,"user_name":"Chris","can_delete":false,"product_type":"c3","uid":1680073,"ip_address":"","ucode":"518955CBA4EFA0","user_header":"https://static001.geekbang.org/account/avatar/00/19/a2/c9/99c2161c.jpg","comment_is_top":false,"comment_ctime":1585153039,"is_pvip":false,"replies":[{"id":77434,"content":"领域模型与传统的设计中的业务对象模型对应，它是表达现实中的业务概念的抽象表达。\n在设计领域模型时，无需考虑数据库存储的概念，因此领域模型更接近于业务的表达。","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1587042695,"ip_address":"","comment_id":195280,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"我对领域模型还是一知半解，可以通俗的解释一下吗？","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489013,"discussion_content":"领域模型与传统的设计中的业务对象模型对应，它是表达现实中的业务概念的抽象表达。\n在设计领域模型时，无需考虑数据库存储的概念，因此领域模型更接近于业务的表达。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587042695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191271,"user_name":"墨灵","can_delete":false,"product_type":"c3","uid":1409700,"ip_address":"","ucode":"185D70CA20BEEE","user_header":"https://static001.geekbang.org/account/avatar/00/15/82/a4/a92c6eca.jpg","comment_is_top":false,"comment_ctime":1584760100,"is_pvip":false,"replies":[{"id":77165,"content":"可以多看看相关的博文和案例，学习同时，在实践中积累经验","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1586876923,"ip_address":"","comment_id":191271,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"前端工程师现在才知道领域模型是一个DDD《领域驱动设计》的概念，之前听课的时候还一脸懵，原来是自己的知识储备不够。","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488147,"discussion_content":"可以多看看相关的博文和案例，学习同时，在实践中积累经验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586876923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185568,"user_name":"不是小胖脸","can_delete":false,"product_type":"c3","uid":1812481,"ip_address":"","ucode":"557768E6CFD006","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a8/01/c86f8d8c.jpg","comment_is_top":false,"comment_ctime":1583635845,"is_pvip":false,"replies":[{"id":72468,"content":"领域模型是业务的实现，”持久化“是指将领域模型保存到数据库的过程。\n\n没有”持久化模型“这个模型，应该是将领域模型持久化","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1584243624,"ip_address":"","comment_id":185568,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师，领域模型和数据库的持久化模型是一个吗？有点没搞懂领域模型和持久化模型的关系","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486420,"discussion_content":"领域模型是业务的实现，”持久化“是指将领域模型保存到数据库的过程。\n\n没有”持久化模型“这个模型，应该是将领域模型持久化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584243624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201018,"discussion_content":"我也有点模糊，看样子应该是。只不过领域模型多了一些方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583752949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185162,"user_name":"迈步","can_delete":false,"product_type":"c3","uid":1747737,"ip_address":"","ucode":"BA9B69CEDA6176","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ab/19/829f321f.jpg","comment_is_top":false,"comment_ctime":1583501553,"is_pvip":false,"replies":[{"id":71570,"content":"Json序列化支持构造函数序列化的","user_name":"作者回复","user_name_real":"肖伟宇","uid":1756585,"ctime":1583563179,"ip_address":"","comment_id":185162,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"老师，如果属性是private的话，反序列化的时候是不是没法赋值？","like_count":1,"discussions":[{"author":{"id":1756585,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/a9/791d0f5e.jpg","nickname":"老肖想当外语大佬","note":"","ucode":"F662D1BF671E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486272,"discussion_content":"Json序列化支持构造函数序列化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583563179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1747737,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ab/19/829f321f.jpg","nickname":"迈步","note":"","ucode":"BA9B69CEDA6176","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199930,"discussion_content":"噢，好的，谢谢老师\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583638447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337009,"user_name":"张祈璟","can_delete":false,"product_type":"c3","uid":1400950,"ip_address":"","ucode":"DC7DDB3881633F","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/76/be584def.jpg","comment_is_top":false,"comment_ctime":1646549938,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"https:&#47;&#47;docs.microsoft.com&#47;en-us&#47;dotnet&#47;architecture&#47;microservices&#47;microservice-ddd-cqrs-patterns&#47;implement-value-objects#feedback\n\n代码有点类似","like_count":0},{"had_liked":false,"id":335391,"user_name":"Geek_f62787","can_delete":false,"product_type":"c3","uid":2913805,"ip_address":"","ucode":"1D7BBFF5484DF3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI4mPt5oWopwJEAFCS2CHdceBEA5Ds9q74ibFR8K9HctatC44obDKmzqQicmgRicYhfsYrxZQic8NZ0DQ/132","comment_is_top":false,"comment_ctime":1645501237,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100044601,"comment_content":"没有从0到1的  看的好难","like_count":0},{"had_liked":false,"id":299531,"user_name":"RH999","can_delete":false,"product_type":"c3","uid":2209570,"ip_address":"","ucode":"7C927A58CCA850","user_header":"","comment_is_top":false,"comment_ctime":1624696565,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100044601,"comment_content":"老師你好，請問_requestedHashCode這個變數的作用是什麼?","like_count":0},{"had_liked":false,"id":216129,"user_name":"Geek_ae287d","can_delete":false,"product_type":"c3","uid":1974714,"ip_address":"","ucode":"7B627A8B1EF9FE","user_header":"","comment_is_top":false,"comment_ctime":1589193798,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100044601,"comment_content":"问下 &#47;&#47;表示对象是否为全新创建的，未持久化的\n        public bool IsTransient()\n        {\n            return EqualityComparer&lt;TKey&gt;.Default.Equals(Id, default);\n        }\n这个方法不应该取反吗 不懂 ","like_count":0},{"had_liked":false,"id":216108,"user_name":"Geek_ae287d","can_delete":false,"product_type":"c3","uid":1974714,"ip_address":"","ucode":"7B627A8B1EF9FE","user_header":"","comment_is_top":false,"comment_ctime":1589190887,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100044601,"comment_content":"  if (item.IsTransient() || this.IsTransient())\n                return false;   这句只要有一个为true就表示 两个实体对象不相等 IsTransient() 为true表示\n\n为什么这个为true表示为实体化 \n &#47;&#47;表示对象是否为全新创建的，未持久化的\n        public bool IsTransient()\n        {\n            return EqualityComparer&lt;TKey&gt;.Default.Equals(Id, default);\n        }","like_count":0},{"had_liked":false,"id":216103,"user_name":"Geek_ae287d","can_delete":false,"product_type":"c3","uid":1974714,"ip_address":"","ucode":"7B627A8B1EF9FE","user_header":"","comment_is_top":false,"comment_ctime":1589190372,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100044601,"comment_content":"咨询一下  public bool IsTransient()\n        {\n            return EqualityComparer&lt;TKey&gt;.Default.Equals(Id, default);\n        }\n这个方法如果返回true 表示不是持久化的   还是 如果方法返回true 表示持久化  \n public override bool Equals(object obj)\n        {\n            if (obj == null || !(obj is Entity&lt;TKey&gt;))\n                return false;\n\n            if (Object.ReferenceEquals(this, obj))\n                return true;\n\n            if (this.GetType() != obj.GetType())\n                return false;\n\n            Entity&lt;TKey&gt; item = (Entity&lt;TKey&gt;)obj;\n\n            if (item.IsTransient() || this.IsTransient())\n                return false;\n            else\n                return item.Id.Equals(this.Id);\n        }\n","like_count":0},{"had_liked":false,"id":208670,"user_name":"变形精怪","can_delete":false,"product_type":"c3","uid":1065078,"ip_address":"","ucode":"75AA7AD8627B66","user_header":"https://static001.geekbang.org/account/avatar/00/10/40/76/e77e8b26.jpg","comment_is_top":false,"comment_ctime":1587397790,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100044601,"comment_content":"实体属性私有，ef查询时赋值不会有问题吗？","like_count":0},{"had_liked":false,"id":196910,"user_name":"Loading","can_delete":false,"product_type":"c3","uid":1808758,"ip_address":"","ucode":"9BCE8CDB0D4237","user_header":"https://static001.geekbang.org/account/avatar/00/1b/99/76/77ac0b57.jpg","comment_is_top":false,"comment_ctime":1585323067,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100044601,"comment_content":"为啥我调用的时候，说不能反序列化没有无参构造函数的类啊？","like_count":0}]}