{"id":179357,"title":"11 | Unicode：进入多文字支持的世界","content":"<p>你好，我是吴咏炜。</p><p>这一讲我们来讲一个新话题，Unicode。我们会从编码的历史谈起，讨论编程中对中文和多语言的支持，然后重点看一下 C++ 中应该如何处理这些问题。</p><h2>一些历史</h2><p>ASCII <span class=\"orange\">[1]</span> 是一种创立于 1963 年的 7 位编码，用 0 到 127 之间的数值来代表最常用的字符，包含了控制字符（很多在今天已不再使用）、数字、大小写拉丁字母、空格和基本标点。它在编码上具有简单性，字母和数字的编码位置非常容易记忆（相比之下，设计 EBCDIC <span class=\"orange\">[2]</span> 的人感觉是脑子进了水，哦不，进了穿孔卡片了；难怪它和 IBM 的那些过时老古董一起已经几乎被人遗忘）。时至今日，ASCII 可以看作是字符编码的基础，主要的编码方式都保持着与 ASCII 的兼容性。</p><p><img src=\"https://static001.geekbang.org/resource/image/cc/35/cc7fb695569c7ea460c1b89fc7859735.gif?wh=715*488\" alt=\"\"></p><p>ASCII 里只有基本的拉丁字母，它既没有带变音符的拉丁字母（如 é 和 ä ），也不支持像希腊字母（如 α、β、γ）、西里尔字母（如 Пушкин）这样的其他欧洲文字（也难怪，毕竟它是 American Standard Code for Information Interchange）。很多其他编码方式纷纷应运而生，包括 ISO 646 系列、ISO/IEC 8859 系列等等；大部分编码方式都是头 128 个字符与 ASCII 兼容，后 128 个字符是自己的扩展，总共最多是 256 个字符。每次只有一套方式可以生效，称之为一个代码页（code page）。这种做法，只能适用于文字相近、且字符数不多的国家。比如，下图表示了 ISO-8859-1（也称作 Latin-1）和后面的 Windows 扩展代码页 1252（下图中绿框部分为 Windows 的扩展），就只能适用于西欧国家。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/ab/95/ab06af7037bd09d229efbb693be42195.png?wh=1366*800\" alt=\"\"></p><p>最早的中文字符集标准是 1980 年的国标 GB2312 <span class=\"orange\">[3]</span>，其中收录了 6763 个常用汉字和 682 个其他符号。我们平时会用到编码 GB2312，其实更正确的名字是 EUC-CN <span class=\"orange\">[4]</span>，它是一种与 ASCII 兼容的编码方式。它用单字节表示 ASCII 字符而用双字节表示 GB2312 中的字符；由于 GB2312 中本身也含有 ASCII 中包含的字符，在使用中逐渐就形成了“半角”和“全角”的区别。</p><p>国标字符集后面又有扩展，这个扩展后的字符集就是 GBK <span class=\"orange\">[5]</span>，是中文版 Windows 使用的标准编码方式。GB2312 和 GBK 所占用的编码位置可以参看下面的图（由 John M. Długosz 为 Wikipedia 绘制）：</p><p><img src=\"https://static001.geekbang.org/resource/image/da/0f/da18e20f4a929399d63a467760657c0f.png?wh=960*878\" alt=\"\"></p><p>图中 GBK/1 和 GBK/2 为 GB2312 中已经定义的区域，其他的则是后面添加的字符，总共定义了两万多个编码点，支持了绝大部分现代汉语中还在使用的字。</p><p>Unicode <span class=\"orange\">[6]</span> 作为一种统一编码的努力，诞生于八十年代末九十年代初，标准的第一版出版于 1991—1992 年。由于最初发明者的目标放得太低，只期望对活跃使用中的现代文字进行编码，他们认为 16 比特的“宽 ASCII”就够用了。这就导致了早期采纳 Unicode 的组织，特别是微软，在其操作系统和工具链中广泛采用了 16 比特的编码方式。在今天，微软的系统中宽字符类型 wchar_t 仍然是 16 位的，操作系统底层接口大量使用 16 位字符编码的 API，说到 Unicode 编码时仍然指的是 16 位的编码 UTF-16（这一不太正确的名字，跟中文 GBK 编码居然可以被叫做 ANSI 相比，实在是小巫见大巫了）。在微软以外的世界，Unicode 本身不作编码名称用，并且最主流的编码方式并不是 UTF-16，而是和 ASCII 全兼容的 UTF-8。</p><p>早期 Unicode 组织的另一个决定是不同语言里的同一个字符使用同一个编码点，来减少总编码点的数量。中日韩三国使用的汉字就这么被统一了：像“将”、“径”、“网”等字，每个字在 Unicode 中只占一个编码点。这对网页的字体选择也造成了不少麻烦，时至今日我们仍然可以看到这个问题 <span class=\"orange\">[7]</span>。不过这和我们的主题无关，就不再多费笔墨了。</p><h2>Unicode 简介</h2><p>Unicode 在今天已经大大超出了最初的目标。到 Unicode 12.1 为止，Unicode 已经包含了 137,994 个字符，囊括所有主要语言（使用中的和已经不再使用的），并包含了表情符号、数学符号等各种特殊字符。仍然要指出一下，Unicode 字符是根据含义来区分的，而非根据字形。除了前面提到过中日韩汉字没有分开，像斜体（italics）、小大写字母（small caps）等排版效果在 Unicode 里也没有独立的对应。不过，因为 Unicode 里包含了很多数学、物理等自然科学中使用的特殊符号，某些情况下你也可以找到对应的符号，可以用在聊天中耍酷，如 𝒷𝒶𝒹（但不适合严肃的排版）。</p><p>Unicode 的编码点是从 0x0 到 0x10FFFF，一共 1,114,112 个位置。一般用“U+”后面跟 16 进制的数值来表示一个 Unicode 字符，如 U+0020 表示空格，U+6C49 表示“汉”，U+1F600 表示“😀”，等等（不足四位的一般写四位）。</p><p>Unicode 字符的常见编码方式有：</p><ul>\n<li>UTF-32 <span class=\"orange\">[8]</span>：32 比特，是编码点的直接映射。</li>\n<li>UTF-16 <span class=\"orange\">[9]</span>：对于从 U+0000 到 U+FFFF 的字符，使用 16 比特的直接映射；对于大于 U+FFFF 的字符，使用 32 比特的特殊映射关系——在 Unicode 的 16 比特编码点中 0xD800–0xDFFF 是一段空隙，使得这种变长编码成为可能。在一个 UTF-16 的序列中，如果看到内容是 0xD800–0xDBFF，那这就是 32 比特编码的前 16 比特；如果看到内容是 0xDC00–0xDFFF，那这是 32 比特编码的后 16 比特；如果内容在 0xD800–0xDFFF 之外，那就是一个 16 比特的映射。</li>\n<li>UTF-8 <span class=\"orange\">[10]</span>：1 到 4 字节的变长编码。在一个合法的 UTF-8 的序列中，如果看到一个字节的最高位是 0，那就是一个单字节的 Unicode 字符；如果一个字节的最高两比特是 10，那这是一个 Unicode 字符在编码后的后续字节；否则，这就是一个 Unicode 字符在编码后的首字节，且最高位开始连续 1 的个数表示了这个字符按 UTF-8 的方式编码有几个字节。</li>\n</ul><p>在上面三种编码方式里，只有 UTF-8 完全保持了和 ASCII 的兼容性，目前得到了最广泛的使用。在我们下面讲具体编码方式之前，我们先看一下上面提到的三个字符在这三种方式下的编码结果：</p><ul>\n<li>UTF-32：U+0020 映射为 0x00000020，U+6C49 映射为 0x00006C49，U+1F600 映射为 0x0001F600。</li>\n<li>UTF-16：U+0020 映射为 0x0020，U+6C49 映射为 0x6C49，而 U+1F600 会映射为 0xD83D DE00。</li>\n<li>UTF-8：U+0020 映射为 0x20，U+6C49 映射为 0xE6 B1 89，而 U+1F600 会映射为 0xF0 9F 98 80。</li>\n</ul><p>Unicode 有好几种（上面还不是全部）不同的编码方式，上面的 16 比特和 32 比特编码方式还有小头党和大头党之争（“汉”按字节读取时是 6C 49 呢，还是 49 6C？）；同时，任何一种编码方式还需要跟传统的编码方式容易区分。因此，Unicode 文本文件通常有一个使用 BOM（byte order mark）字符的约定，即字符 U+FEFF <span class=\"orange\">[11]</span>。由于 Unicode 不使用 U+FFFE，在文件开头加一个 BOM 即可区分各种不同编码：</p><ul>\n<li>如果文件开头是 0x00 00 FE FF，那这是大头在前的 UTF-32 编码；</li>\n<li>否则如果文件开头是 0xFF FE 00 00，那这是小头在前的 UTF-32 编码；</li>\n<li>否则如果文件开头是 0xFE FF，那这是大头在前的 UTF-16 编码；</li>\n<li>否则如果文件开头是 0xFF FE，那这是小头在前的 UTF-16 编码（注意，这条规则和第二条的顺序不能相反）；</li>\n<li>否则如果文件开头是 0xEF BB BF，那这是 UTF-8 编码；</li>\n<li>否则，编码方式使用其他算法来确定。</li>\n</ul><p>编辑器可以（有些在配置之后）根据 BOM 字符来自动决定文本文件的编码。比如，我一般在 Vim 中配置 <code>set fileencodings=ucs-bom,utf-8,gbk,latin1</code>。这样，Vim 在读入文件时，会首先检查 BOM 字符，有 BOM 字符按 BOM 字符决定文件编码；否则，试图将文件按 UTF-8 来解码（由于 UTF-8 有格式要求，非 UTF-8 编码的文件通常会导致失败）；不行，则试图按 GBK 来解码（失败的概率就很低了）；还不行，就把文件当作 Latin1 来处理（永远不会失败）。</p><p>在 UTF-8 编码下使用 BOM 字符并非必需，尤其在 Unix 上。但 Windows 上通常会使用 BOM 字符，以方便区分 UTF-8 和传统编码。</p><h2>C++ 中的 Unicode 字符类型</h2><p>C++98 中有 <code>char</code> 和 <code>wchar_t</code> 两种不同的字符类型，其中 <code>char</code> 的长度是单字节，而 <code>wchar_t</code> 的长度不确定。在 Windows 上它是双字节，只能代表 UTF-16，而在 Unix 上一般是四字节，可以代表 UTF-32。为了解决这种混乱，目前我们有了下面的改进：</p><ul>\n<li>C++11 引入了 <code>char16_t</code> 和 <code>char32_t</code> 两个独立的字符类型（不是类型别名），分别代表 UTF-16 和 UTF-32。</li>\n<li>C++20 将引入 <code>char8_t</code> 类型，进一步区分了可能使用传统编码的窄字符类型和 UTF-8 字符类型。</li>\n<li>除了 <code>string</code> 和 <code>wstring</code>，我们也相应地有了 <code>u16string</code>、<code>u32string</code>（和将来的 <code>u8string</code>）。</li>\n<li>除了传统的窄字符/字符串字面量（如 <code>\"hi\"</code>）和宽字符/字符串字面量（如 <code>L\"hi\"</code>），引入了新的 UTF-8、UTF-16 和 UTF-32 字面量，分别形如 <code>u8\"hi\"</code>、<code>u\"hi\"</code> 和 <code>U\"hi\"</code>。</li>\n<li>为了确保非 ASCII 字符在源代码中可以简单地输入，引入了新的 Unicode 换码序列。比如，我们前面说到的三个字符可以这样表达成一个 UTF-32 字符串字面量：<code>U\" \\u6C49\\U0001F600\"</code>。要生成 UTF-16 或 UTF-8 字符串字面量只需要更改前缀即可。</li>\n</ul><p>使用这些新的字符（串）类型，我们可以用下面的代码表达出 UTF-32 和其他两种 UTF 编码间是如何转换的：</p><pre><code class=\"language-c++\">#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;stdexcept&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nconst char32_t unicode_max =\n  0x10FFFF;\n\nvoid to_utf_16(char32_t ch,\n               u16string&amp; result)\n{\n  if (ch &gt; unicode_max) {\n    throw runtime_error(\n      \"invalid code point\");\n  }\n  if (ch &lt; 0x10000) {\n    result += char16_t(ch);\n  } else {\n    char16_t first =\n      0xD800 |\n      ((ch - 0x10000) &gt;&gt; 10);\n    char16_t second =\n      0xDC00 | (ch &amp; 0x3FF);\n    result += first;\n    result += second;\n  }\n}\n\nvoid to_utf_8(char32_t ch,\n              string&amp; result)\n{\n  if (ch &gt; unicode_max) {\n    throw runtime_error(\n      \"invalid code point\");\n  }\n  if (ch &lt; 0x80) {\n    result += ch;\n  } else if (ch &lt; 0x800) {\n    result += 0xC0 | (ch &gt;&gt; 6);\n    result += 0x80 | (ch &amp; 0x3F);\n  } else if (ch &lt; 0x10000) {\n    result += 0xE0 | (ch &gt;&gt; 12);\n    result +=\n      0x80 | ((ch &gt;&gt; 6) &amp; 0x3F);\n    result += 0x80 | (ch &amp; 0x3F);\n  } else {\n    result += 0xF0 | (ch &gt;&gt; 18);\n    result +=\n      0x80 | ((ch &gt;&gt; 12) &amp; 0x3F);\n    result +=\n      0x80 | ((ch &gt;&gt; 6) &amp; 0x3F);\n    result += 0x80 | (ch &amp; 0x3F);\n  }\n}\n\nint main()\n{\n  char32_t str[] =\n    U\" \\u6C49\\U0001F600\";\n  u16string u16str;\n  string u8str;\n  for (auto ch : str) {\n    if (ch == 0) {\n      break;\n    }\n    to_utf_16(ch, u16str);\n    to_utf_8(ch, u8str);\n  }\n  cout &lt;&lt; hex &lt;&lt; setfill('0');\n  for (char16_t ch : u16str) {\n    cout &lt;&lt; setw(4) &lt;&lt; unsigned(ch)\n         &lt;&lt; ' ';\n  }\n  cout &lt;&lt; endl;\n  for (unsigned char ch : u8str) {\n    cout &lt;&lt; setw(2) &lt;&lt; unsigned(ch)\n         &lt;&lt; ' ';\n  }\n  cout &lt;&lt; endl;\n}\n</code></pre><p>输出结果是：</p><blockquote>\n<p><code>0020 6c49 d83d de00</code><br>\n<code>20 e6 b1 89 f0 9f 98 80</code></p>\n</blockquote><h2>平台区别</h2><p>下面我们看一下在两个主流的平台上一般是如何处理 Unicode 编码问题的。</p><h3>Unix</h3><p>现代 Unix 系统，包括 Linux 和 macOS 在内，已经全面转向了 UTF-8。这样的系统中一般直接使用 <code>char[]</code> 和 <code>string</code> 来代表 UTF-8 字符串，包括输入、输出和文件名，非常简单。不过，由于一个字符单位不能代表一个完整的 Unicode 字符，在需要真正进行文字处理的场合转换到 UTF-32 往往会更简单。在以前及需要和 C 兼容的场合，会使用 <code>wchar_t</code>、<code>uint32_t</code> 或某个等价的类型别名；在新的纯 C++ 代码里，就没有理由不使用 <code>char32_t</code> 和 <code>u32string</code> 了。</p><p>Unix 下输出宽字符串需要使用 <code>wcout</code>（这点和 Windows 相同），并且需要进行区域设置，如下所示：</p><pre><code class=\"language-c++\">std::locale::global(\n    std::locale(\"\"));\nstd::wcout.imbue(std::locale());\n</code></pre><p>由于没有什么额外好处，反而可能在某些环境因为区域设置失败而引发问题，Unix 平台下一般只用 <code>cout</code>，不用 <code>wcout</code>。</p><h3>Windows</h3><p>Windows 由于历史原因和保留向后兼容性的需要（Windows 为了向后兼容性已经到了大规模放弃优雅的程度了），一直用 <code>char</code> 表示传统编码（如，英文 Windows 上是 Windows-1252，简体中文 Windows 上是 GBK），用 <code>wchar_t</code> 表示 UTF-16。由于传统编码一次只有一种、且需要重启才能生效，要得到好的多语言支持，在和操作系统交互时必须使用 UTF-16。</p><p>对于纯 Windows 编程，全面使用宽字符（串）是最简单的处理方式。当然，源代码和文本很少用 UTF-16 存储，通常还是 UTF-8（除非是纯 ASCII，否则必须加入 BOM 字符来和传统编码相区分）。这时可能会有一个小小的令人惊讶的地方：微软的编译器会把源代码里窄字符串字面量中的非 ASCII 字符转换成传统编码。换句话说，同样的源代码在不同编码的 Windows 下编译可能会产生不同的结果！如果你希望保留 UTF-8 序列的话，就应该使用 UTF-8 字面量（并在将来使用 <code>char8_t</code> 字符类型）。</p><pre><code class=\"language-c++\">#include &lt;stdio.h&gt;\n\ntemplate &lt;typename T&gt;\nvoid dump(const T&amp; str)\n{\n  for (char ch : str) {\n    printf(\n      \"%.2x \",\n      static_cast&lt;unsigned char&gt;(ch));\n  }\n  putchar('\\n');\n}\n\nint main()\n{\n  char str[] = \"你好\";\n  char u8str[] = u8\"你好\";\n  dump(str);\n  dump(u8str);\n}\n</code></pre><p>下面展示的是以上代码在 Windows 下系统传统编码设置为简体中文时的编译、运行结果：</p><blockquote>\n<p><code>c4 e3 ba c3 00</code><br>\n<code>e4 bd a0 e5 a5 bd 00</code></p>\n</blockquote><p>Windows 下的 <code>wcout</code> 主要用在配合宽字符的输出，此外没什么大用处。原因一样，只有进行了正确的区域设置，才能输出跟该区域相匹配的宽字符串（不匹配的字符将导致后续输出全部消失！）。如果要输出中文，得写 <code>setlocale(LC_ALL, \"Chinese_China.936\");</code>，这显然就让“统一码”输出失去意义了。</p><p>但是（还是有个“但是”），如果你<strong>只用</strong> <code>wcout</code>，不用 <code>cout</code> 或任何使用窄字符输出到 <code>stdout</code> 的函数（如 <code>puts</code>），这时倒有个还不错的解决方案，可以在终端输出多语言。我也是偶然才发现这一用法，并且没有在微软的网站上找到清晰的文档……代码如下所示：</p><pre><code class=\"language-c++\">#include &lt;fcntl.h&gt;\n#include &lt;io.h&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n  _setmode(_fileno(stdout),\n           _O_WTEXT);\n  std::wcout\n    &lt;&lt; L\"中文 Español Français\\n\";\n  std::wcout\n    &lt;&lt; \"Narrow characters are \"\n       \"also OK on wcout\\n\";\n  // but not on cout...\n}\n</code></pre><p>由于窄字符在大部分 Windows 系统上只支持传统编码，要打开一个当前编码不支持的文件名称，就必需使用宽字符的文件名。微软的 <code>fstream</code> 系列类及其 <code>open</code> 成员函数都支持 <code>const wchar_t*</code> 类型的文件名，这是 C++ 标准里所没有的。</p><h3>统一化处理</h3><p>要想写出跨平台的处理字符串的代码，我们一般考虑两种方式之一：</p><ul>\n<li>源代码级兼容，但内码不同</li>\n<li>源代码和内码都完全兼容</li>\n</ul><p>微软推荐的方式一般是前者。做 Windows 开发的人很多都知道 tchar.h 和 <code>_T</code> 宏，它们就起着类似的作用（虽然目的不同）。根据预定义宏的不同，系统会在同一套代码下选择不同的编码方式及对应的函数。拿一个最小的例子来说：</p><pre><code class=\"language-c++\">#include &lt;stdio.h&gt;\n#include &lt;tchar.h&gt;\n\nint _tmain(int argc, TCHAR* argv[])\n{\n  _putts(_T(\"Hello world!\\n\"));\n}\n</code></pre><p>如果用缺省的命令行参数进行编译，上面的代码相当于：</p><pre><code class=\"language-c++\">#include &lt;stdio.h&gt;\n\nint main(int argc, char* argv[])\n{\n  puts(\"Hello world!\\n\");\n}\n</code></pre><p>而如果在命令行上加上了 <code>/D_UNICODE</code>，那代码则相当于：</p><pre><code class=\"language-c++\">#include &lt;stdio.h&gt;\n\nint wmain(int argc, wchar_t* argv[])\n{\n  _putws(L\"Hello world!\\n\");\n}\n</code></pre><p>当然，这个代码还是只能在 Windows 上用，并且仍然不漂亮（所有的字符和字符串字面量都得套上 <code>_T</code>）。后者无解，前者则可以找到替代方案（甚至自己写也不复杂）。C++ REST SDK 中就提供了类似的封装，可以跨平台地开发网络应用。但可以说，这种方式是一种主要照顾 Windows 的开发方式。</p><p>相应的，对 Unix 开发者而言更自然的方式是全面使用 UTF-8，仅在跟操作系统、文件系统打交道时把字符串转换成需要的编码。利用临时对象的生命周期，我们可以像下面这样写帮助函数和宏。</p><p>utf8_to_native.hpp：</p><pre><code class=\"language-c++\">#ifndef UTF8_TO_NATIVE_HPP\n#define UTF8_TO_NATIVE_HPP\n\n#include &lt;string&gt;\n\n#if defined(_WIN32) || \\\n    defined(_UNICODE)\n\nstd::wstring utf8_to_wstring(\n  const char* str);\nstd::wstring utf8_to_wstring(\n  const std::string&amp; str);\n\n#define NATIVE_STR(s) \\\n  utf8_to_wstring(s).c_str()\n\n#else\n\ninline const char*\nto_c_str(const char* str)\n{\n  return str;\n}\n\ninline const char*\nto_c_str(const std::string&amp; str)\n{\n  return str.c_str();\n}\n\n#define NATIVE_STR(s) \\\n  to_c_str(s)\n\n#endif\n\n#endif // UTF8_TO_NATIVE_HPP\n</code></pre><p>utf8_to_native.cpp：</p><pre><code class=\"language-c++\">#include \"utf8_to_native.hpp\"\n\n#if defined(_WIN32) || \\\n    defined(_UNICODE)\n#include &lt;windows.h&gt;\n#include &lt;system_error&gt;\n\nnamespace {\n\nvoid throw_system_error(\n  const char* reason)\n{\n  std::string msg(reason);\n  msg += \" failed\";\n  std::error_code ec(\n    GetLastError(),\n    std::system_category());\n  throw std::system_error(ec, msg);\n}\n\n} /* unnamed namespace */\n\nstd::wstring utf8_to_wstring(\n  const char* str)\n{\n  int len = MultiByteToWideChar(\n    CP_UTF8, 0, str, -1,\n    nullptr, 0);\n  if (len == 0) {\n    throw_system_error(\n      \"utf8_to_wstring\");\n  }\n  std::wstring result(len - 1,\n                      L'\\0');\n  if (MultiByteToWideChar(\n        CP_UTF8, 0, str, -1,\n        result.data(), len) == 0) {\n    throw_system_error(\n      \"utf8_to_wstring\");\n  }\n  return result;\n}\n\nstd::wstring utf8_to_wstring(\n  const std::string&amp; str)\n{\n  return utf8_to_wstring(\n    str.c_str());\n}\n\n#endif\n</code></pre><p>在头文件里，定义了在 Windows 下会做 UTF-8 到 UTF-16 的转换；在其他环境下则不真正做转换，而是不管提供的是字符指针还是 <code>string</code> 都会转换成字符指针。在 Windows 下每次调用 <code>NATIVE_STR</code> 会生成一个临时对象，当前语句执行结束后这个临时对象会自动销毁。</p><p>使用该功能的代码是这样的：</p><pre><code class=\"language-c++\">#include &lt;fstream&gt;\n#include \"utf8_to_native.hpp\"\n\nint main()\n{\n  using namespace std;\n  const char filename[] =\n    u8\"测试.txt\";\n  ifstream ifs(\n    NATIVE_STR(filename));\n  // 对 ifs 进行操作\n}\n</code></pre><p>上面这样的代码可以同时适用于现代 Unix 和现代 Windows（任何语言设置下），用来读取名为“测试.txt”的文件。</p><h2>编程支持</h2><p>结束之前，我们快速介绍一下其他的一些支持 Unicode 及其转换的 API。</p><h3>Windows API</h3><p>上一节的代码在 Windows 下用到了 <code>MultiByteToWideChar</code> <span class=\"orange\">[12]</span>，从某个编码转到 UTF-16。Windows 也提供了反向的 <code>WideCharToMultiByte</code> <span class=\"orange\">[13]</span>，从 UTF-16 转到某个编码。从上面可以看到，C 接口用起来并不方便，可以考虑自己封装一下。</p><h3>iconv</h3><p>Unix 下最常用的底层编码转换接口是 iconv <span class=\"orange\">[14]</span>，提供 <code>iconv_open</code>、<code>iconv_close</code> 和 <code>iconv</code> 三个函数。这同样是 C 接口，实践中应该封装一下。</p><h3>ICU4C</h3><p>ICU <span class=\"orange\">[15]</span> 是一个完整的 Unicode 支持库，提供大量的方法，ICU4C 是其 C/C++ 的版本。ICU 有专门的字符串类型，内码是 UTF-16，但可以直接用于 IO streams 的输出。下面的程序应该在所有平台上都有同样的输出（但在 Windows 上要求当前系统传统编码能支持待输出的字符）：</p><pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;unicode/unistr.h&gt;\n#include &lt;unicode/ustream.h&gt;\n\nusing namespace std;\nusing icu::UnicodeString;\n\nint main()\n{\n  auto str = UnicodeString::fromUTF8(\n    u8\"你好\");\n  cout &lt;&lt; str &lt;&lt; endl;\n  string u8str;\n  str.toUTF8String(u8str);\n  cout &lt;&lt; \"In UTF-8 it is \"\n       &lt;&lt; u8str.size() &lt;&lt; \" bytes\"\n       &lt;&lt; endl;\n}\n</code></pre><h3>codecvt</h3><p>C++11 曾经引入了一个头文件 &lt;codecvt&gt; <span class=\"orange\">[16]</span> 用作 UTF 编码间的转换，但很遗憾，那个头文件目前已因为存在安全性和易用性问题被宣告放弃（deprecated）<span class=\"orange\">[17]</span>。&lt;locale&gt; 中有另外一个 <code>codecvt</code> 模板 <span class=\"orange\">[18]</span>，本身接口不那么好用，而且到 C++20 还会发生变化，这儿也不详细介绍了。有兴趣的话可以直接看参考资料。</p><h2>内容小结</h2><p>本讲我们讨论了 Unicode，以及 C++ 中对 Unicode 的支持。我们也讨论了在两大主流桌面平台上关于 Unicode 编码支持的一些惯用法。希望你在本讲之后，能清楚地知道 Unicode 和各种 UTF 编码是怎么回事。</p><h2>课后思考</h2><p>请思考一下：</p><ol>\n<li>为什么说 UTF-32 处理会比较简单？</li>\n<li>你知道什么情况下 UTF-32 也并不那么简单吗？</li>\n<li>哪种 UTF 编码方式空间存储效率比较高？</li>\n</ol><p>欢迎留言一起讨论一下。</p><h2><span class=\"reference\">参考资料</span></h2><p><span class=\"reference\">[1] Wikipedia, “ASCII”. <a href=\"https://en.wikipedia.org/wiki/ASCII\">https://en.wikipedia.org/wiki/ASCII</a> </span></p><p><span class=\"reference\">[2] Wikipedia, “EBCDIC”. <a href=\"https://en.wikipedia.org/wiki/EBCDIC\">https://en.wikipedia.org/wiki/EBCDIC</a> </span></p><p><span class=\"reference\">[3] Wikipedia, “GB 2312”. <a href=\"https://en.wikipedia.org/wiki/GB_2312\">https://en.wikipedia.org/wiki/GB_2312</a> </span></p><p><span class=\"reference\">[3a] 维基百科, “GB 2312”. <a href=\"https://zh.wikipedia.org/zh-cn/GB_2312\">https://zh.wikipedia.org/zh-cn/GB_2312</a> </span></p><p><span class=\"reference\">[4] Wikipedia, “EUC-CN”. <a href=\"https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-CN\">https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-CN</a> </span></p><p><span class=\"reference\">[4a] 维基百科, “EUC-CN”. <a href=\"https://zh.wikipedia.org/zh-cn/EUC#EUC-CN\">https://zh.wikipedia.org/zh-cn/EUC#EUC-CN</a> </span></p><p><span class=\"reference\">[5] Wikipedia, “GBK”. <a href=\"https://en.wikipedia.org/wiki/GBK_(character_encoding)\">https://en.wikipedia.org/wiki/GBK_(character_encoding)</a> </span></p><p><span class=\"reference\">[5a] 维基百科, “汉字内码扩展规范”. <a href=\"https://zh.wikipedia.org/zh-cn/%E6%B1%89%E5%AD%97%E5%86%85%E7%A0%81%E6%89%A9%E5%B1%95%E8%A7%84%E8%8C%83\">https://zh.wikipedia.org/zh-cn/汉字内码扩展规范</a> </span></p><p><span class=\"reference\">[6] Wikipedia, “Unicode”. <a href=\"https://en.wikipedia.org/wiki/Unicode\">https://en.wikipedia.org/wiki/Unicode</a> </span></p><p><span class=\"reference\">[6a] 维基百科, “Unicode”. <a href=\"https://zh.wikipedia.org/zh-cn/Unicode\">https://zh.wikipedia.org/zh-cn/Unicode</a> </span></p><p><span class=\"reference\">[7] 吴咏炜, “Specify LANG in a UTF-8 web page”. <a href=\"http://wyw.dcweb.cn/lang_utf8.htm\">http://wyw.dcweb.cn/lang_utf8.htm</a> </span></p><p><span class=\"reference\">[8] Wikipedia, “UTF-32”. <a href=\"https://en.wikipedia.org/wiki/UTF-32\">https://en.wikipedia.org/wiki/UTF-32</a> </span></p><p><span class=\"reference\">[9] Wikipedia, “UTF-16”. <a href=\"https://en.wikipedia.org/wiki/UTF-16\">https://en.wikipedia.org/wiki/UTF-16</a> </span></p><p><span class=\"reference\">[10] Wikipedia, “UTF-8”. <a href=\"https://en.wikipedia.org/wiki/UTF-8\">https://en.wikipedia.org/wiki/UTF-8</a> </span></p><p><span class=\"reference\">[11] Wikipedia, “Byte order mark”. <a href=\"https://en.wikipedia.org/wiki/Byte_order_mark\">https://en.wikipedia.org/wiki/Byte_order_mark</a> </span></p><p><span class=\"reference\">[11a] 维基百科, “字节顺序标记”. <a href=\"https://zh.wikipedia.org/zh-cn/%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F\">https://zh.wikipedia.org/zh-cn/位元組順序記號</a> </span></p><p><span class=\"reference\">[12] Microsoft, “MultiByteToWideChar function”. <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/stringapiset/nf-stringapiset-multibytetowidechar\">https://docs.microsoft.com/en-us/windows/win32/api/stringapiset/nf-stringapiset-multibytetowidechar</a> </span></p><p><span class=\"reference\">[13] Microsoft, “WideCharToMultiByte function”. <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/stringapiset/nf-stringapiset-widechartomultibyte\">https://docs.microsoft.com/en-us/windows/win32/api/stringapiset/nf-stringapiset-widechartomultibyte</a> </span></p><p><span class=\"reference\">[14] Wikipedia, “iconv”. <a href=\"https://en.wikipedia.org/wiki/Iconv\">https://en.wikipedia.org/wiki/Iconv</a> </span></p><p><span class=\"reference\">[15] ICU Technical Committee, ICU—International Components for Unicode. <a href=\"http://site.icu-project.org/\">http://site.icu-project.org/</a> </span></p><p><span class=\"reference\">[16] cppreference.com, “Standard library header &lt;codecvt&gt;”. <a href=\"https://en.cppreference.com/w/cpp/header/codecvt\">https://en.cppreference.com/w/cpp/header/codecvt</a> </span></p><p><span class=\"reference\">[17] Alisdair Meredith, “Deprecating &lt;codecvt&gt;”. <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0618r0.html\">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0618r0.html</a> </span></p><p><span class=\"reference\">[18] cppreference.com, “std::codecvt”. <a href=\"https://en.cppreference.com/w/cpp/locale/codecvt\">https://en.cppreference.com/w/cpp/locale/codecvt</a> </span></p>","comments":[{"had_liked":false,"id":178466,"user_name":"c1rew","can_delete":false,"product_type":"c1","uid":1021813,"ip_address":"","ucode":"4F9FAFD8FCC0A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/75/7f76341b.jpg","comment_is_top":false,"comment_ctime":1581694498,"is_pvip":true,"replies":[{"id":69243,"content":"既然你贴在这里，我就指出一下文中的一些小问题吧。\n\n- 时间线不对。GB18030（甚至 GBK）是在 Unicode 之后出现的。GB18030 的四字节编码是基于 Unicode 的。\n- 有一处 UCS 写成了 USC。\n- “目前的用于实用的 Unicode 版本对应于 UCS-2，即使用16位来表示一个Unicode字符”：对于 2017 年的文章，这么写是不合适的。不说很多汉字在 BMP 之外，表情字符大家总要用的吧？\n- UCS-4 虽然最初被定义为 31 位，但从 2003 年开始就被规定为范围是从 0 到 0x10FFFF 了。换句话说，只用 21 位。\n- UTF-16 和 UCS-2 是不同的。UTF-16 有 16 位和 32 位两种情况，而 UCS-2 只有 16位一种。\n- 虽然 U+FEFF 在文件中间出现应当被当作 zero width no-break space，但在文件开头，它只被叫做 BOM。此外，zero width no-break space 这一用法从 Unicode 3.2 开始就被反对使用（deprecate）了。目前，U+FEFF 就只有 BOM 一种意思。\n\n可能像是挑刺，抱歉了。但我不希望别人对这些事实有错误的理解。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1581734766,"ip_address":"","comment_id":178466,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"http:&#47;&#47;c1rew.github.io&#47;2017&#47;03&#47;02&#47;字符集和字符编码&#47;\n很早之前写的一篇文章，供大家参考","like_count":39,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483836,"discussion_content":"既然你贴在这里，我就指出一下文中的一些小问题吧。\n\n- 时间线不对。GB18030（甚至 GBK）是在 Unicode 之后出现的。GB18030 的四字节编码是基于 Unicode 的。\n- 有一处 UCS 写成了 USC。\n- “目前的用于实用的 Unicode 版本对应于 UCS-2，即使用16位来表示一个Unicode字符”：对于 2017 年的文章，这么写是不合适的。不说很多汉字在 BMP 之外，表情字符大家总要用的吧？\n- UCS-4 虽然最初被定义为 31 位，但从 2003 年开始就被规定为范围是从 0 到 0x10FFFF 了。换句话说，只用 21 位。\n- UTF-16 和 UCS-2 是不同的。UTF-16 有 16 位和 32 位两种情况，而 UCS-2 只有 16位一种。\n- 虽然 U+FEFF 在文件中间出现应当被当作 zero width no-break space，但在文件开头，它只被叫做 BOM。此外，zero width no-break space 这一用法从 Unicode 3.2 开始就被反对使用（deprecate）了。目前，U+FEFF 就只有 BOM 一种意思。\n\n可能像是挑刺，抱歉了。但我不希望别人对这些事实有错误的理解。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1581734766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625233,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cc/91/d56a81af.jpg","nickname":"CoderArthur","note":"","ucode":"5B591914F0F67C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361967,"discussion_content":"niubility","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616814783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2109641,"avatar":"","nickname":"许沛东","note":"","ucode":"800CA796D3A27E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617512,"discussion_content":"太强了，吴老师。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683625638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021813,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/97/75/7f76341b.jpg","nickname":"c1rew","note":"","ucode":"4F9FAFD8FCC0A7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171759,"discussion_content":"感谢吴老师指正，这就好好修改，增加印象，加深理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581744922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182378,"user_name":"皮皮侠","can_delete":false,"product_type":"c1","uid":1258402,"ip_address":"","ucode":"04205990C1DE1F","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/a2/6c0ffc15.jpg","comment_is_top":false,"comment_ctime":1582775938,"is_pvip":false,"replies":[{"id":70620,"content":"Qt 不熟。不过，也就不外乎这几种情况了。搞清楚源代码的编码、字符串的内码、输入输出要求的编码，作合适的转换，应当可以解决。\n\n不要忘了在 Windows 上编译 UTF-8 源码的文件，一定要有 BOM 字符。这也是很多错误的来源。网上搜 Qt 的编码问题，似乎很多问题就是跟源代码的编码相关的。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1582782400,"ip_address":"","comment_id":182378,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"问个题外问题，Qt里中文的处理总是有问题，老师怎么看，有什么终极解决办法呢？","like_count":4},{"had_liked":false,"id":182002,"user_name":"Milittle","can_delete":false,"product_type":"c1","uid":1045455,"ip_address":"","ucode":"80E566639A8ABB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/cf/851dab01.jpg","comment_is_top":false,"comment_ctime":1582690332,"is_pvip":false,"replies":[{"id":70529,"content":"1. “传统编码”在Windows上有特别含义。对于简体中文Windows，就是GBK编码了。\n\n2. 不同的编码方式，字面量的值会不同，这是最重要的。字节数可能一样，可能不一样。比如繁体中文的汉字，在GBK里和在Big5里就不同。编码不正确，字符可能出不来，比如简体中文在Big5里就都没有。\n\n3. 是，每个元素分别是8、16、32比特。\n\n4. 0XD800-0XDFFF正好没有用吧，然后就用于UTF-16的扩展了。转换算法我描述得不算太详细，因为这个资料真的是很多的。\n\n完整的Unicode文字表网上也可以找到，如：\n\nhttps:&#47;&#47;unicode.org&#47;charts&#47;\nhttps:&#47;&#47;unicode-table.com&#47;\n\n5. 编码是可以转换的。如果不加转换输出就会乱码。\n\n从操作系统来说，Windows内部使用UTF-16，但如果代码中使用char&#47;string，Windows接口一般当成“传统编码”来转换处理。Unix系统里一般全面使用UTF-8。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1582722966,"ip_address":"","comment_id":182002,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"1.  有一个问题想问下老师，传统编码是不是相对于UTF编码之外的那些编码方式。\n2. 再就是对于我们编程中使用的不同编码方式的字面量来说，最后生成的字节数对应是不同的么？是这个意思么？\n3. 还有就是u8string u16string u32string 默认是一个元素所占的字节数分辨是 1 2 4么？\n4. 老师文章中提出一个UTF-16在0XD800-0XDFFF之间没有用作unicode code point。这是历史原因决定么 然后就是怎么可以找到unicode code point所对应的文字关系表？ 从UTF-32转UTF-8和UTF-16老师给出例子，这个可以当作一个算法来记忆。\n5. 就是操作系统的编码方式是最终决定你的字符串显示在终端的样子么？我举一个例子，加入你程序中一个字符串是UTF-8，但是你的操作系统使用的是GBK，那么显示出来的样子应该会乱码吧？ 我的理解也就是程序什么编码方式，操作系统也应该是什么编码方式，才能输出正确的文字？\n以上问题有些可能是我没有理解对 王老师给予指导 谢谢～","like_count":2,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485194,"discussion_content":"1. “传统编码”在Windows上有特别含义。对于简体中文Windows，就是GBK编码了。\n\n2. 不同的编码方式，字面量的值会不同，这是最重要的。字节数可能一样，可能不一样。比如繁体中文的汉字，在GBK里和在Big5里就不同。编码不正确，字符可能出不来，比如简体中文在Big5里就都没有。\n\n3. 是，每个元素分别是8、16、32比特。\n\n4. 0XD800-0XDFFF正好没有用吧，然后就用于UTF-16的扩展了。转换算法我描述得不算太详细，因为这个资料真的是很多的。\n\n完整的Unicode文字表网上也可以找到，如：\n\nhttps://unicode.org/charts/\nhttps://unicode-table.com/\n\n5. 编码是可以转换的。如果不加转换输出就会乱码。\n\n从操作系统来说，Windows内部使用UTF-16，但如果代码中使用char/string，Windows接口一般当成“传统编码”来转换处理。Unix系统里一般全面使用UTF-8。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582722966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372277,"user_name":"勿更改任何信息","can_delete":false,"product_type":"c1","uid":2028955,"ip_address":"福建","ucode":"B4949BEB8B2AFD","user_header":"","comment_is_top":false,"comment_ctime":1680937800,"is_pvip":false,"replies":[{"id":135925,"content":"一个简单的搜索就能发现我是对的，你是错的。\n\n提问题前自己不先搜索一下，是不会提问的表现。","user_name":"作者回复","user_name_real":"编辑","uid":1645639,"ctime":1681101831,"ip_address":"上海","comment_id":372277,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"由于 Unicode 不使用 U+FFFE --&gt; 应该是不使用 U+FEFF 吧","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485322,"discussion_content":"Qt 不熟。不过，也就不外乎这几种情况了。搞清楚源代码的编码、字符串的内码、输入输出要求的编码，作合适的转换，应当可以解决。\n\n不要忘了在 Windows 上编译 UTF-8 源码的文件，一定要有 BOM 字符。这也是很多错误的来源。网上搜 Qt 的编码问题，似乎很多问题就是跟源代码的编码相关的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582782400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613337,"discussion_content":"youtube上有个讲得不错的qt unicode视频，可以参考 https://www.youtube.com/watch?v=6iqtxp_88FI","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681273040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613336,"discussion_content":"现在Qt 6已经强制通过编译器flag设置成UTF-8了。通过const char* 构造 QString 会调用到 QString::fromUtf8()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681272736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258402,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/a2/6c0ffc15.jpg","nickname":"皮皮侠","note":"","ucode":"04205990C1DE1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187969,"discussion_content":"蟹蟹老师，谨记！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582782674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2368457,"avatar":"https://static001.geekbang.org/account/avatar/00/24/23/c9/db01f2ef.jpg","nickname":"春","note":"","ucode":"F51F8F000F207F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1258402,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/a2/6c0ffc15.jpg","nickname":"皮皮侠","note":"","ucode":"04205990C1DE1F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335331,"discussion_content":"Qt提供了translation机制，即使用Linguist工具进行多语言。如果是跨平台开发，可以将源码用英文写，源码保存为utf-8，用Linguist翻译成中文。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608169098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187969,"ip_address":"","group_id":0},"score":335331,"extra":""}]}]},{"had_liked":false,"id":175915,"user_name":"天天","can_delete":false,"product_type":"c1","uid":1327838,"ip_address":"","ucode":"C4DF35B2E64E92","user_header":"https://static001.geekbang.org/account/avatar/00/14/42/de/9db45d7d.jpg","comment_is_top":false,"comment_ctime":1580885613,"is_pvip":false,"replies":[{"id":68419,"content":"OK，1、3 的回答都没什么问题。👍","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1580916373,"ip_address":"","comment_id":175915,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"1. utf32字节数固定支持随机访问字符，其他2个则需要遍历前面的字节，经过计算才能解出第N个字符\n3. 要看具体存储的是啥字符， 英文utf8省空间， 中文utf16","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613046,"discussion_content":"一个简单的搜索就能发现我是对的，你是错的。\n\n提问题前自己不先搜索一下，是不会提问的表现。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681101832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":613335,"discussion_content":"嗯，老师是对的，U+FFFE是Undefined Character，原文中的意思是 U+FEFF是一个BOM，因此只要通过开头的2个字节是0xFEFF还是0xFFFE就能区分出是utf16be还是utf16le。理解了，感谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681271890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":613046,"ip_address":"福建","group_id":0},"score":613335,"extra":""}]}]},{"had_liked":false,"id":163885,"user_name":"三味","can_delete":false,"product_type":"c1","uid":1362403,"ip_address":"","ucode":"A580F715D1CC96","user_header":"https://static001.geekbang.org/account/avatar/00/14/c9/e3/28c16afa.jpg","comment_is_top":false,"comment_ctime":1576818647,"is_pvip":false,"replies":[{"id":62348,"content":"ANSI 是指 Windows 的传统系统编码。源代码中如果含中文，必须用 UTF-8 + BOM 保存（专栏中说过的）。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1576843326,"ip_address":"","comment_id":163885,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"这两天写玩具代码,  环境就是win10, vs2017, 写控制台. 我源代码是utf8无bom格式. 什么都好, 就是用fgets获取输入, 无法获取中文字符串... 折腾好久... 最后还是都改成了ansi... ansi这个诡异的名字确实值得吐槽啊...明明就是GBK... 字符编码真是太麻烦了...","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482951,"discussion_content":"OK，1、3 的回答都没什么问题。👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580916373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366926,"user_name":"Geek_0705cc","can_delete":false,"product_type":"c1","uid":3231187,"ip_address":"河南","ucode":"41CB8731E9852A","user_header":"","comment_is_top":false,"comment_ctime":1674621399,"is_pvip":false,"replies":[{"id":133784,"content":"大小头（端）不是我要说明的重点，因此我只是用例子来说明。\n\n另外，你的表述方式是有问题的，因为文件没有高地址和低地址。","user_name":"作者回复","user_name_real":"编辑","uid":1645639,"ctime":1674993529,"ip_address":"上海","comment_id":366926,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"大头在前、小头在前是什么意思呢？不如这样说的清楚。大端模式指的是：高位字节存储在内存的低地址处；","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478568,"discussion_content":"ANSI 是指 Windows 的传统系统编码。源代码中如果含中文，必须用 UTF-8 + BOM 保存（专栏中说过的）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576843326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296029,"user_name":"chang","can_delete":false,"product_type":"c1","uid":2596026,"ip_address":"","ucode":"594EF8CB4477BD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/2ibrq71Y5Ww3KDRibDxF1gt9YDEPuZkv4ITHEP1u4vvjpPDukkLoK4ngQy1hKKzccnsicLkUAda7sPpibR6Kyb0cfQ/132","comment_is_top":false,"comment_ctime":1622709654,"is_pvip":false,"replies":[{"id":107511,"content":"没写错，是“不使用” U+FFFE。再读一遍。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1622868634,"ip_address":"","comment_id":296029,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"文中“由于 Unicode 不使用 U+FFFE，在文件开头加一个 BOM 即可区分各种不同编码：”，应该是U+FEFF吧","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601028,"discussion_content":"大小头（端）不是我要说明的重点，因此我只是用例子来说明。\n\n另外，你的表述方式是有问题的，因为文件没有高地址和低地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674993529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276061,"user_name":"蓦然回首","can_delete":false,"product_type":"c1","uid":1172090,"ip_address":"","ucode":"B17658DCFE6402","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","comment_is_top":false,"comment_ctime":1611760092,"is_pvip":true,"replies":[{"id":100292,"content":"参见前面的回答。\n\n互相基本没影响。但是，如果你要把程序里硬编码的字符串跟输入一起混合输出，那就必须保证编码相同了。如果输出到终端，那还要保证终端的设置与之相匹配——Linux上通常为UTF-8，（中文）Windows上通常为GBK。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1611886924,"ip_address":"","comment_id":276061,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"上面这几种之间相互有影响吗？到底之间关系是如何？平时我们开发过程中，应该怎么理解这几者之间的关系？感觉这方面一直没弄清楚","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521298,"discussion_content":"没写错，是“不使用” U+FFFE。再读一遍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622868634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2596026,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/2ibrq71Y5Ww3KDRibDxF1gt9YDEPuZkv4ITHEP1u4vvjpPDukkLoK4ngQy1hKKzccnsicLkUAda7sPpibR6Kyb0cfQ/132","nickname":"chang","note":"","ucode":"594EF8CB4477BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377828,"discussion_content":"嗯，懂了，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622895587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276060,"user_name":"蓦然回首","can_delete":false,"product_type":"c1","uid":1172090,"ip_address":"","ucode":"B17658DCFE6402","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","comment_is_top":false,"comment_ctime":1611759969,"is_pvip":true,"replies":[{"id":100291,"content":"1. 源代码的编码通常影响不大，主要影响是字符串的编码结果。\n\n2. 基本上没有程序本身编码的概念。但是，运行时有缺省编码的概念，影响对输入输出的解释。\n\n3、4. 通常由程序自行解释，除非你使用了运行时库提供的到宽字符的转换函数。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1611886691,"ip_address":"","comment_id":276060,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"老师，请教个问题，我们平时开发，好像编码有几种方面的编码问题:\n1.源码文件本身的编码，IDE或者编辑器设置的编码等\n2.程序运行时刻当中程序本身的编码，\n3.程序运行过程中所打开文件的编码\n4.接收或者发送网络数据的不同编码\n在编码方面一直这方面有些困惑，希望能解答一下！","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514585,"discussion_content":"参见前面的回答。\n\n互相基本没影响。但是，如果你要把程序里硬编码的字符串跟输入一起混合输出，那就必须保证编码相同了。如果输出到终端，那还要保证终端的设置与之相匹配——Linux上通常为UTF-8，（中文）Windows上通常为GBK。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611886924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178466,"user_name":"c1rew","can_delete":false,"product_type":"c1","uid":1021813,"ip_address":"","ucode":"4F9FAFD8FCC0A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/75/7f76341b.jpg","comment_is_top":false,"comment_ctime":1581694498,"is_pvip":true,"replies":[{"id":69243,"content":"既然你贴在这里，我就指出一下文中的一些小问题吧。\n\n- 时间线不对。GB18030（甚至 GBK）是在 Unicode 之后出现的。GB18030 的四字节编码是基于 Unicode 的。\n- 有一处 UCS 写成了 USC。\n- “目前的用于实用的 Unicode 版本对应于 UCS-2，即使用16位来表示一个Unicode字符”：对于 2017 年的文章，这么写是不合适的。不说很多汉字在 BMP 之外，表情字符大家总要用的吧？\n- UCS-4 虽然最初被定义为 31 位，但从 2003 年开始就被规定为范围是从 0 到 0x10FFFF 了。换句话说，只用 21 位。\n- UTF-16 和 UCS-2 是不同的。UTF-16 有 16 位和 32 位两种情况，而 UCS-2 只有 16位一种。\n- 虽然 U+FEFF 在文件中间出现应当被当作 zero width no-break space，但在文件开头，它只被叫做 BOM。此外，zero width no-break space 这一用法从 Unicode 3.2 开始就被反对使用（deprecate）了。目前，U+FEFF 就只有 BOM 一种意思。\n\n可能像是挑刺，抱歉了。但我不希望别人对这些事实有错误的理解。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1581734766,"ip_address":"","comment_id":178466,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"http:&#47;&#47;c1rew.github.io&#47;2017&#47;03&#47;02&#47;字符集和字符编码&#47;\n很早之前写的一篇文章，供大家参考","like_count":39,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483836,"discussion_content":"既然你贴在这里，我就指出一下文中的一些小问题吧。\n\n- 时间线不对。GB18030（甚至 GBK）是在 Unicode 之后出现的。GB18030 的四字节编码是基于 Unicode 的。\n- 有一处 UCS 写成了 USC。\n- “目前的用于实用的 Unicode 版本对应于 UCS-2，即使用16位来表示一个Unicode字符”：对于 2017 年的文章，这么写是不合适的。不说很多汉字在 BMP 之外，表情字符大家总要用的吧？\n- UCS-4 虽然最初被定义为 31 位，但从 2003 年开始就被规定为范围是从 0 到 0x10FFFF 了。换句话说，只用 21 位。\n- UTF-16 和 UCS-2 是不同的。UTF-16 有 16 位和 32 位两种情况，而 UCS-2 只有 16位一种。\n- 虽然 U+FEFF 在文件中间出现应当被当作 zero width no-break space，但在文件开头，它只被叫做 BOM。此外，zero width no-break space 这一用法从 Unicode 3.2 开始就被反对使用（deprecate）了。目前，U+FEFF 就只有 BOM 一种意思。\n\n可能像是挑刺，抱歉了。但我不希望别人对这些事实有错误的理解。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1581734766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625233,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cc/91/d56a81af.jpg","nickname":"CoderArthur","note":"","ucode":"5B591914F0F67C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361967,"discussion_content":"niubility","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616814783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2109641,"avatar":"","nickname":"许沛东","note":"","ucode":"800CA796D3A27E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617512,"discussion_content":"太强了，吴老师。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683625638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021813,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/97/75/7f76341b.jpg","nickname":"c1rew","note":"","ucode":"4F9FAFD8FCC0A7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171759,"discussion_content":"感谢吴老师指正，这就好好修改，增加印象，加深理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581744922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182378,"user_name":"皮皮侠","can_delete":false,"product_type":"c1","uid":1258402,"ip_address":"","ucode":"04205990C1DE1F","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/a2/6c0ffc15.jpg","comment_is_top":false,"comment_ctime":1582775938,"is_pvip":false,"replies":[{"id":70620,"content":"Qt 不熟。不过，也就不外乎这几种情况了。搞清楚源代码的编码、字符串的内码、输入输出要求的编码，作合适的转换，应当可以解决。\n\n不要忘了在 Windows 上编译 UTF-8 源码的文件，一定要有 BOM 字符。这也是很多错误的来源。网上搜 Qt 的编码问题，似乎很多问题就是跟源代码的编码相关的。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1582782400,"ip_address":"","comment_id":182378,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"问个题外问题，Qt里中文的处理总是有问题，老师怎么看，有什么终极解决办法呢？","like_count":4,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485322,"discussion_content":"Qt 不熟。不过，也就不外乎这几种情况了。搞清楚源代码的编码、字符串的内码、输入输出要求的编码，作合适的转换，应当可以解决。\n\n不要忘了在 Windows 上编译 UTF-8 源码的文件，一定要有 BOM 字符。这也是很多错误的来源。网上搜 Qt 的编码问题，似乎很多问题就是跟源代码的编码相关的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582782400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613337,"discussion_content":"youtube上有个讲得不错的qt unicode视频，可以参考 https://www.youtube.com/watch?v=6iqtxp_88FI","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681273040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613336,"discussion_content":"现在Qt 6已经强制通过编译器flag设置成UTF-8了。通过const char* 构造 QString 会调用到 QString::fromUtf8()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681272736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258402,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/a2/6c0ffc15.jpg","nickname":"皮皮侠","note":"","ucode":"04205990C1DE1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187969,"discussion_content":"蟹蟹老师，谨记！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582782674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2368457,"avatar":"https://static001.geekbang.org/account/avatar/00/24/23/c9/db01f2ef.jpg","nickname":"春","note":"","ucode":"F51F8F000F207F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1258402,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/a2/6c0ffc15.jpg","nickname":"皮皮侠","note":"","ucode":"04205990C1DE1F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335331,"discussion_content":"Qt提供了translation机制，即使用Linguist工具进行多语言。如果是跨平台开发，可以将源码用英文写，源码保存为utf-8，用Linguist翻译成中文。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608169098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187969,"ip_address":"","group_id":0},"score":335331,"extra":""}]}]},{"had_liked":false,"id":182002,"user_name":"Milittle","can_delete":false,"product_type":"c1","uid":1045455,"ip_address":"","ucode":"80E566639A8ABB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/cf/851dab01.jpg","comment_is_top":false,"comment_ctime":1582690332,"is_pvip":false,"replies":[{"id":70529,"content":"1. “传统编码”在Windows上有特别含义。对于简体中文Windows，就是GBK编码了。\n\n2. 不同的编码方式，字面量的值会不同，这是最重要的。字节数可能一样，可能不一样。比如繁体中文的汉字，在GBK里和在Big5里就不同。编码不正确，字符可能出不来，比如简体中文在Big5里就都没有。\n\n3. 是，每个元素分别是8、16、32比特。\n\n4. 0XD800-0XDFFF正好没有用吧，然后就用于UTF-16的扩展了。转换算法我描述得不算太详细，因为这个资料真的是很多的。\n\n完整的Unicode文字表网上也可以找到，如：\n\nhttps:&#47;&#47;unicode.org&#47;charts&#47;\nhttps:&#47;&#47;unicode-table.com&#47;\n\n5. 编码是可以转换的。如果不加转换输出就会乱码。\n\n从操作系统来说，Windows内部使用UTF-16，但如果代码中使用char&#47;string，Windows接口一般当成“传统编码”来转换处理。Unix系统里一般全面使用UTF-8。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1582722966,"ip_address":"","comment_id":182002,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"1.  有一个问题想问下老师，传统编码是不是相对于UTF编码之外的那些编码方式。\n2. 再就是对于我们编程中使用的不同编码方式的字面量来说，最后生成的字节数对应是不同的么？是这个意思么？\n3. 还有就是u8string u16string u32string 默认是一个元素所占的字节数分辨是 1 2 4么？\n4. 老师文章中提出一个UTF-16在0XD800-0XDFFF之间没有用作unicode code point。这是历史原因决定么 然后就是怎么可以找到unicode code point所对应的文字关系表？ 从UTF-32转UTF-8和UTF-16老师给出例子，这个可以当作一个算法来记忆。\n5. 就是操作系统的编码方式是最终决定你的字符串显示在终端的样子么？我举一个例子，加入你程序中一个字符串是UTF-8，但是你的操作系统使用的是GBK，那么显示出来的样子应该会乱码吧？ 我的理解也就是程序什么编码方式，操作系统也应该是什么编码方式，才能输出正确的文字？\n以上问题有些可能是我没有理解对 王老师给予指导 谢谢～","like_count":2,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485194,"discussion_content":"1. “传统编码”在Windows上有特别含义。对于简体中文Windows，就是GBK编码了。\n\n2. 不同的编码方式，字面量的值会不同，这是最重要的。字节数可能一样，可能不一样。比如繁体中文的汉字，在GBK里和在Big5里就不同。编码不正确，字符可能出不来，比如简体中文在Big5里就都没有。\n\n3. 是，每个元素分别是8、16、32比特。\n\n4. 0XD800-0XDFFF正好没有用吧，然后就用于UTF-16的扩展了。转换算法我描述得不算太详细，因为这个资料真的是很多的。\n\n完整的Unicode文字表网上也可以找到，如：\n\nhttps://unicode.org/charts/\nhttps://unicode-table.com/\n\n5. 编码是可以转换的。如果不加转换输出就会乱码。\n\n从操作系统来说，Windows内部使用UTF-16，但如果代码中使用char/string，Windows接口一般当成“传统编码”来转换处理。Unix系统里一般全面使用UTF-8。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582722966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372277,"user_name":"勿更改任何信息","can_delete":false,"product_type":"c1","uid":2028955,"ip_address":"福建","ucode":"B4949BEB8B2AFD","user_header":"","comment_is_top":false,"comment_ctime":1680937800,"is_pvip":false,"replies":[{"id":135925,"content":"一个简单的搜索就能发现我是对的，你是错的。\n\n提问题前自己不先搜索一下，是不会提问的表现。","user_name":"作者回复","user_name_real":"编辑","uid":1645639,"ctime":1681101831,"ip_address":"上海","comment_id":372277,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"由于 Unicode 不使用 U+FFFE --&gt; 应该是不使用 U+FEFF 吧","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613046,"discussion_content":"一个简单的搜索就能发现我是对的，你是错的。\n\n提问题前自己不先搜索一下，是不会提问的表现。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681101832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":613335,"discussion_content":"嗯，老师是对的，U+FFFE是Undefined Character，原文中的意思是 U+FEFF是一个BOM，因此只要通过开头的2个字节是0xFEFF还是0xFFFE就能区分出是utf16be还是utf16le。理解了，感谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681271890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":613046,"ip_address":"福建","group_id":0},"score":613335,"extra":""}]}]},{"had_liked":false,"id":175915,"user_name":"天天","can_delete":false,"product_type":"c1","uid":1327838,"ip_address":"","ucode":"C4DF35B2E64E92","user_header":"https://static001.geekbang.org/account/avatar/00/14/42/de/9db45d7d.jpg","comment_is_top":false,"comment_ctime":1580885613,"is_pvip":false,"replies":[{"id":68419,"content":"OK，1、3 的回答都没什么问题。👍","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1580916373,"ip_address":"","comment_id":175915,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"1. utf32字节数固定支持随机访问字符，其他2个则需要遍历前面的字节，经过计算才能解出第N个字符\n3. 要看具体存储的是啥字符， 英文utf8省空间， 中文utf16","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482951,"discussion_content":"OK，1、3 的回答都没什么问题。👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580916373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163885,"user_name":"三味","can_delete":false,"product_type":"c1","uid":1362403,"ip_address":"","ucode":"A580F715D1CC96","user_header":"https://static001.geekbang.org/account/avatar/00/14/c9/e3/28c16afa.jpg","comment_is_top":false,"comment_ctime":1576818647,"is_pvip":false,"replies":[{"id":62348,"content":"ANSI 是指 Windows 的传统系统编码。源代码中如果含中文，必须用 UTF-8 + BOM 保存（专栏中说过的）。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1576843326,"ip_address":"","comment_id":163885,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"这两天写玩具代码,  环境就是win10, vs2017, 写控制台. 我源代码是utf8无bom格式. 什么都好, 就是用fgets获取输入, 无法获取中文字符串... 折腾好久... 最后还是都改成了ansi... ansi这个诡异的名字确实值得吐槽啊...明明就是GBK... 字符编码真是太麻烦了...","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478568,"discussion_content":"ANSI 是指 Windows 的传统系统编码。源代码中如果含中文，必须用 UTF-8 + BOM 保存（专栏中说过的）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576843326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366926,"user_name":"Geek_0705cc","can_delete":false,"product_type":"c1","uid":3231187,"ip_address":"河南","ucode":"41CB8731E9852A","user_header":"","comment_is_top":false,"comment_ctime":1674621399,"is_pvip":false,"replies":[{"id":133784,"content":"大小头（端）不是我要说明的重点，因此我只是用例子来说明。\n\n另外，你的表述方式是有问题的，因为文件没有高地址和低地址。","user_name":"作者回复","user_name_real":"编辑","uid":1645639,"ctime":1674993529,"ip_address":"上海","comment_id":366926,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"大头在前、小头在前是什么意思呢？不如这样说的清楚。大端模式指的是：高位字节存储在内存的低地址处；","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601028,"discussion_content":"大小头（端）不是我要说明的重点，因此我只是用例子来说明。\n\n另外，你的表述方式是有问题的，因为文件没有高地址和低地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674993529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296029,"user_name":"chang","can_delete":false,"product_type":"c1","uid":2596026,"ip_address":"","ucode":"594EF8CB4477BD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/2ibrq71Y5Ww3KDRibDxF1gt9YDEPuZkv4ITHEP1u4vvjpPDukkLoK4ngQy1hKKzccnsicLkUAda7sPpibR6Kyb0cfQ/132","comment_is_top":false,"comment_ctime":1622709654,"is_pvip":false,"replies":[{"id":107511,"content":"没写错，是“不使用” U+FFFE。再读一遍。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1622868634,"ip_address":"","comment_id":296029,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"文中“由于 Unicode 不使用 U+FFFE，在文件开头加一个 BOM 即可区分各种不同编码：”，应该是U+FEFF吧","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521298,"discussion_content":"没写错，是“不使用” U+FFFE。再读一遍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622868634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2596026,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/2ibrq71Y5Ww3KDRibDxF1gt9YDEPuZkv4ITHEP1u4vvjpPDukkLoK4ngQy1hKKzccnsicLkUAda7sPpibR6Kyb0cfQ/132","nickname":"chang","note":"","ucode":"594EF8CB4477BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377828,"discussion_content":"嗯，懂了，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622895587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276061,"user_name":"蓦然回首","can_delete":false,"product_type":"c1","uid":1172090,"ip_address":"","ucode":"B17658DCFE6402","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","comment_is_top":false,"comment_ctime":1611760092,"is_pvip":true,"replies":[{"id":100292,"content":"参见前面的回答。\n\n互相基本没影响。但是，如果你要把程序里硬编码的字符串跟输入一起混合输出，那就必须保证编码相同了。如果输出到终端，那还要保证终端的设置与之相匹配——Linux上通常为UTF-8，（中文）Windows上通常为GBK。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1611886924,"ip_address":"","comment_id":276061,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"上面这几种之间相互有影响吗？到底之间关系是如何？平时我们开发过程中，应该怎么理解这几者之间的关系？感觉这方面一直没弄清楚","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514585,"discussion_content":"参见前面的回答。\n\n互相基本没影响。但是，如果你要把程序里硬编码的字符串跟输入一起混合输出，那就必须保证编码相同了。如果输出到终端，那还要保证终端的设置与之相匹配——Linux上通常为UTF-8，（中文）Windows上通常为GBK。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611886924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276060,"user_name":"蓦然回首","can_delete":false,"product_type":"c1","uid":1172090,"ip_address":"","ucode":"B17658DCFE6402","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","comment_is_top":false,"comment_ctime":1611759969,"is_pvip":true,"replies":[{"id":100291,"content":"1. 源代码的编码通常影响不大，主要影响是字符串的编码结果。\n\n2. 基本上没有程序本身编码的概念。但是，运行时有缺省编码的概念，影响对输入输出的解释。\n\n3、4. 通常由程序自行解释，除非你使用了运行时库提供的到宽字符的转换函数。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1611886691,"ip_address":"","comment_id":276060,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100040501,"comment_content":"老师，请教个问题，我们平时开发，好像编码有几种方面的编码问题:\n1.源码文件本身的编码，IDE或者编辑器设置的编码等\n2.程序运行时刻当中程序本身的编码，\n3.程序运行过程中所打开文件的编码\n4.接收或者发送网络数据的不同编码\n在编码方面一直这方面有些困惑，希望能解答一下！","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514584,"discussion_content":"1. 源代码的编码通常影响不大，主要影响是字符串的编码结果。\n\n2. 基本上没有程序本身编码的概念。但是，运行时有缺省编码的概念，影响对输入输出的解释。\n\n3、4. 通常由程序自行解释，除非你使用了运行时库提供的到宽字符的转换函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611886691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172090,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","nickname":"蓦然回首","note":"","ucode":"B17658DCFE6402","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346285,"discussion_content":"还是说只是影响输入输出的编码？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611900231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172090,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","nickname":"蓦然回首","note":"","ucode":"B17658DCFE6402","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346284,"discussion_content":"那这个缺省编码是否会对源码文件当中硬编码的字符串会产生影响？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611900173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1172090,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","nickname":"蓦然回首","note":"","ucode":"B17658DCFE6402","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":346562,"discussion_content":"硬编码的字符串如果是char类型的，含义由程序自己决定（Windows上有些实现细节，使得你最好使用“ANSI”编码）。如果是wchar_t类型，或者char要往wchar_t类型转，运行库里的编码通常就会用来解释char的编码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611993298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":346284,"ip_address":"","group_id":0},"score":346562,"extra":""}]}]},{"had_liked":false,"id":249843,"user_name":"木瓜777","can_delete":false,"product_type":"c1","uid":1512537,"ip_address":"","ucode":"FC52A499AF6374","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aFAYPyw7ywC1xE9h1qibnTBwtWn2ClJqlicy5cMomhZVaruMyqSq76wMkS279mUaGhrLGwWo9ZnW0WCWfmMovlXw/132","comment_is_top":false,"comment_ctime":1600828901,"is_pvip":false,"replies":[{"id":91585,"content":"这个没法说死，取决于你后端中文是用什么编码，和前端期待什么编码。最常见的情况，两者都是 UTF-8，不需要转。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1600871145,"ip_address":"","comment_id":249843,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"你好，如果c++通过socket专递带 中文的字符串 到 web前端，请问是不是需要 转码啊？ 转码的话，是不是 从 utf8 到 gb2312？ 目前后端是linux系统","like_count":0},{"had_liked":false,"id":208132,"user_name":"Geek_68d3d2","can_delete":false,"product_type":"c1","uid":1674369,"ip_address":"","ucode":"EBD6D881AA7A74","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","comment_is_top":false,"comment_ctime":1587282579,"is_pvip":false,"replies":[{"id":77793,"content":"1对。2、3可以看一下参考答案。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1587341676,"ip_address":"","comment_id":208132,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"1 UTF-32是定长编码，而且能表示的字符比较多，所以处理起来比较容易且少了这种字符表示不了的尴尬局面。\n\n2 UTF-32在需要转换成其他编码的时候可能比较麻烦，比如转成UTF-8还需要计算本字符实际占几个字节，还要更改前几个比特位\n\n3 肯定是UTF-8空间利用率高啊","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506032,"discussion_content":"这个没法说死，取决于你后端中文是用什么编码，和前端期待什么编码。最常见的情况，两者都是 UTF-8，不需要转。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600871145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1512537,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/aFAYPyw7ywC1xE9h1qibnTBwtWn2ClJqlicy5cMomhZVaruMyqSq76wMkS279mUaGhrLGwWo9ZnW0WCWfmMovlXw/132","nickname":"木瓜777","note":"","ucode":"FC52A499AF6374","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308267,"discussion_content":"好的，谢谢！ linux默认应该是utf-8吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600904113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207793,"user_name":"Initiative Thinker","can_delete":false,"product_type":"c1","uid":1736297,"ip_address":"","ucode":"A884396A1581EF","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI9zRdkKuXMKh30ibeludlAsztmR4rD9iaiclPicOfIhbC4fWxGPz7iceb3o4hKx7qgX2dKwogYvT6VQ0g/132","comment_is_top":false,"comment_ctime":1587181453,"is_pvip":true,"replies":[{"id":77591,"content":"Windows 下把窄字符集当成当前的 ANSI（传统字符编码）字符集。如果你的输入是 UTF-8（需要带 BOM 字符），那编译器会把当前字符集（你的情况下应该是 GBK）无法表达的字符全部变成问号。换句话说，在编译的时候，西班牙语和法语的两个特殊符号已经变成问号了。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1587218170,"ip_address":"","comment_id":207793,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"老师问个问题，WIndows下命令行输出的是由ANSI编码还是UTF-16编码？\nANSI提出就是为了兼容非英文字符吗？\n对老师的例子做了一些修改\n#include &lt;fcntl.h&gt;\n#include &lt;io.h&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    &#47;*_setmode(_fileno(stdout),\n        _O_WTEXT);*&#47;\n    std::cout\n        &lt;&lt; &quot;中文Español Français\\n&quot;;\n    std::cout\n        &lt;&lt; &quot;Narrow characters are &quot;\n        &quot;also OK on wcout\\n&quot;;\n    &#47;&#47; but not on cout...\n}\n输出法语部分直接是？，这个？的产生原因是由于窄字符输出无法识别造成的吗？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492241,"discussion_content":"Windows 下把窄字符集当成当前的 ANSI（传统字符编码）字符集。如果你的输入是 UTF-8（需要带 BOM 字符），那编译器会把当前字符集（你的情况下应该是 GBK）无法表达的字符全部变成问号。换句话说，在编译的时候，西班牙语和法语的两个特殊符号已经变成问号了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587218170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181577,"user_name":"zKerry","can_delete":false,"product_type":"c1","uid":1497740,"ip_address":"","ucode":"9FB006D1A38D3F","user_header":"","comment_is_top":false,"comment_ctime":1582562061,"is_pvip":false,"replies":[{"id":70362,"content":"😇","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1582611327,"ip_address":"","comment_id":181577,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"干货满满","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485041,"discussion_content":"😇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582611327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181566,"user_name":"清风静婷","can_delete":false,"product_type":"c1","uid":1244336,"ip_address":"","ucode":"A3D65AB47D6634","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/b0/df0468c9.jpg","comment_is_top":false,"comment_ctime":1582559974,"is_pvip":false,"replies":[{"id":70361,"content":"不是这种情况……急着想知道可以去瞟一眼答案……","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1582611317,"ip_address":"","comment_id":181566,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"问题2-不知是不是因为. UTF-32 如果有字节全部为0，转换成其他会认为是结束符","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485037,"discussion_content":"不是这种情况……急着想知道可以去瞟一眼答案……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582611317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177992,"user_name":"贾陆华","can_delete":false,"product_type":"c1","uid":1321408,"ip_address":"","ucode":"2722C422077EE0","user_header":"https://static001.geekbang.org/account/avatar/00/14/29/c0/86fa3e92.jpg","comment_is_top":false,"comment_ctime":1581566673,"is_pvip":false,"replies":[{"id":69115,"content":"这和我考虑的角度不一样。虽然不能算错，但这是 UTF-16 和 UTF-32 共有的问题了。\n\n此外，你假设了操作系统用了 UTF-8。并不一定如此。Windows 内部使用 UTF-16。理论上可能存在用 UTF-32 的操作系统的。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1581607920,"ip_address":"","comment_id":177992,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"2. UTF-32不兼容ASCII编码，会导致处理之前的文件和系统接口都会转换一次，有些麻烦，这就是为什么采用兼容的UTF-8编码的原因之一","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483626,"discussion_content":"这和我考虑的角度不一样。虽然不能算错，但这是 UTF-16 和 UTF-32 共有的问题了。\n\n此外，你假设了操作系统用了 UTF-8。并不一定如此。Windows 内部使用 UTF-16。理论上可能存在用 UTF-32 的操作系统的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581607920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1321408,"avatar":"https://static001.geekbang.org/account/avatar/00/14/29/c0/86fa3e92.jpg","nickname":"贾陆华","note":"","ucode":"2722C422077EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170882,"discussion_content":"明白了，看了答案，才知道原来如此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581688217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164191,"user_name":"泰伦卢","can_delete":false,"product_type":"c1","uid":1141994,"ip_address":"","ucode":"FEA6B43C8D4FF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/ea/e03fec22.jpg","comment_is_top":false,"comment_ctime":1576907320,"is_pvip":false,"replies":[{"id":62448,"content":"理解透了，也没有多复杂。比编程简单多了。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1576983262,"ip_address":"","comment_id":164191,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"唉，一直对这个字符编码不太感冒","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483626,"discussion_content":"这和我考虑的角度不一样。虽然不能算错，但这是 UTF-16 和 UTF-32 共有的问题了。\n\n此外，你假设了操作系统用了 UTF-8。并不一定如此。Windows 内部使用 UTF-16。理论上可能存在用 UTF-32 的操作系统的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581607920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1321408,"avatar":"https://static001.geekbang.org/account/avatar/00/14/29/c0/86fa3e92.jpg","nickname":"贾陆华","note":"","ucode":"2722C422077EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170882,"discussion_content":"明白了，看了答案，才知道原来如此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581688217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164140,"user_name":"_呱太_","can_delete":false,"product_type":"c1","uid":1739226,"ip_address":"","ucode":"6B96DC7CF66094","user_header":"https://static001.geekbang.org/account/avatar/00/1a/89/da/e86b9932.jpg","comment_is_top":false,"comment_ctime":1576894199,"is_pvip":false,"replies":[{"id":62410,"content":"我考虑讲的是 Boost.Test 和 Catch2。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1576911903,"ip_address":"","comment_id":164140,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"老师好！能不能提前透露一下单元测试库是用的哪个库啊，最近在看 TDD，想上手一下，感觉现在最缺的也是测试方面的能力。","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478655,"discussion_content":"我考虑讲的是 Boost.Test 和 Catch2。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576911903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163830,"user_name":"Geek_6baqph","can_delete":false,"product_type":"c1","uid":1252321,"ip_address":"","ucode":"5FA102F186E254","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJnw8P84Wg1a8wcQL33folC4sI003oCUviau3OicHlnEEpvbNLFQVhaic2yeN7hPmrV06DjVPXmHU4vg/132","comment_is_top":false,"comment_ctime":1576808783,"is_pvip":false,"replies":[{"id":62314,"content":"1. 部分正确。处理过程中（读入文件后）连大小端都不会考虑的。\n2. 不是。Emoji 在 UTF-32 里仍然是一个字符。\n3. 不对。再想想。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1576819430,"ip_address":"","comment_id":163830,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"1.每个字符的字节数固定，可能需要判断的就是一个大小端的问题\n2.有些表情符号(如emoji)，会使用两个字符来产生，增加了可见字符的判断\n3.utf-8是最省空间的编码方式，每个编码只用到需要最少的字节数","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478655,"discussion_content":"我考虑讲的是 Boost.Test 和 Catch2。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576911903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385921,"user_name":"转遍世界","can_delete":false,"product_type":"c1","uid":2006194,"ip_address":"江苏","ucode":"0783BFDDE87029","user_header":"https://static001.geekbang.org/account/avatar/00/1e/9c/b2/1a9beeb1.jpg","comment_is_top":false,"comment_ctime":1703667453,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"把我头看大了","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478546,"discussion_content":"1. 部分正确。处理过程中（读入文件后）连大小端都不会考虑的。\n2. 不是。Emoji 在 UTF-32 里仍然是一个字符。\n3. 不对。再想想。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576819430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1271183,"avatar":"","nickname":"nelson","note":"","ucode":"773BE75A23C1C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":93392,"discussion_content":"Emoji 不一定是一个字符吧。例如国旗，就是The flag for Chile, which may show as the letters CL on some platforms.\n\nThe Flag: Chile emoji is a sequence of the 🇨 Regional Indicator Symbol Letter C and 🇱 Regional Indicator Symbol Letter L emojis. These display as a single emoji on supported platforms.\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576925050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1271183,"avatar":"","nickname":"nelson","note":"","ucode":"773BE75A23C1C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96454,"discussion_content":"哦，这个意思，那就对了。事实上，这个问题在非emoji情况下更多呢，但原理是差不多的——Unicode有修饰符（modifier）的概念，那就不是一个字符了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577065980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":93392,"ip_address":"","group_id":0},"score":96454,"extra":""}]}]},{"had_liked":false,"id":249843,"user_name":"木瓜777","can_delete":false,"product_type":"c1","uid":1512537,"ip_address":"","ucode":"FC52A499AF6374","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aFAYPyw7ywC1xE9h1qibnTBwtWn2ClJqlicy5cMomhZVaruMyqSq76wMkS279mUaGhrLGwWo9ZnW0WCWfmMovlXw/132","comment_is_top":false,"comment_ctime":1600828901,"is_pvip":false,"replies":[{"id":91585,"content":"这个没法说死，取决于你后端中文是用什么编码，和前端期待什么编码。最常见的情况，两者都是 UTF-8，不需要转。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1600871145,"ip_address":"","comment_id":249843,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"你好，如果c++通过socket专递带 中文的字符串 到 web前端，请问是不是需要 转码啊？ 转码的话，是不是 从 utf8 到 gb2312？ 目前后端是linux系统","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506032,"discussion_content":"这个没法说死，取决于你后端中文是用什么编码，和前端期待什么编码。最常见的情况，两者都是 UTF-8，不需要转。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600871145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1512537,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/aFAYPyw7ywC1xE9h1qibnTBwtWn2ClJqlicy5cMomhZVaruMyqSq76wMkS279mUaGhrLGwWo9ZnW0WCWfmMovlXw/132","nickname":"木瓜777","note":"","ucode":"FC52A499AF6374","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308267,"discussion_content":"好的，谢谢！ linux默认应该是utf-8吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600904113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208132,"user_name":"Geek_68d3d2","can_delete":false,"product_type":"c1","uid":1674369,"ip_address":"","ucode":"EBD6D881AA7A74","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","comment_is_top":false,"comment_ctime":1587282579,"is_pvip":false,"replies":[{"id":77793,"content":"1对。2、3可以看一下参考答案。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1587341676,"ip_address":"","comment_id":208132,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"1 UTF-32是定长编码，而且能表示的字符比较多，所以处理起来比较容易且少了这种字符表示不了的尴尬局面。\n\n2 UTF-32在需要转换成其他编码的时候可能比较麻烦，比如转成UTF-8还需要计算本字符实际占几个字节，还要更改前几个比特位\n\n3 肯定是UTF-8空间利用率高啊","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492352,"discussion_content":"1对。2、3可以看一下参考答案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587341676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207793,"user_name":"Initiative Thinker","can_delete":false,"product_type":"c1","uid":1736297,"ip_address":"","ucode":"A884396A1581EF","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI9zRdkKuXMKh30ibeludlAsztmR4rD9iaiclPicOfIhbC4fWxGPz7iceb3o4hKx7qgX2dKwogYvT6VQ0g/132","comment_is_top":false,"comment_ctime":1587181453,"is_pvip":true,"replies":[{"id":77591,"content":"Windows 下把窄字符集当成当前的 ANSI（传统字符编码）字符集。如果你的输入是 UTF-8（需要带 BOM 字符），那编译器会把当前字符集（你的情况下应该是 GBK）无法表达的字符全部变成问号。换句话说，在编译的时候，西班牙语和法语的两个特殊符号已经变成问号了。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1587218170,"ip_address":"","comment_id":207793,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"老师问个问题，WIndows下命令行输出的是由ANSI编码还是UTF-16编码？\nANSI提出就是为了兼容非英文字符吗？\n对老师的例子做了一些修改\n#include &lt;fcntl.h&gt;\n#include &lt;io.h&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    &#47;*_setmode(_fileno(stdout),\n        _O_WTEXT);*&#47;\n    std::cout\n        &lt;&lt; &quot;中文Español Français\\n&quot;;\n    std::cout\n        &lt;&lt; &quot;Narrow characters are &quot;\n        &quot;also OK on wcout\\n&quot;;\n    &#47;&#47; but not on cout...\n}\n输出法语部分直接是？，这个？的产生原因是由于窄字符输出无法识别造成的吗？","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492352,"discussion_content":"1对。2、3可以看一下参考答案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587341676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181577,"user_name":"zKerry","can_delete":false,"product_type":"c1","uid":1497740,"ip_address":"","ucode":"9FB006D1A38D3F","user_header":"","comment_is_top":false,"comment_ctime":1582562061,"is_pvip":false,"replies":[{"id":70362,"content":"😇","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1582611327,"ip_address":"","comment_id":181577,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"干货满满","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492241,"discussion_content":"Windows 下把窄字符集当成当前的 ANSI（传统字符编码）字符集。如果你的输入是 UTF-8（需要带 BOM 字符），那编译器会把当前字符集（你的情况下应该是 GBK）无法表达的字符全部变成问号。换句话说，在编译的时候，西班牙语和法语的两个特殊符号已经变成问号了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587218170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181566,"user_name":"清风静婷","can_delete":false,"product_type":"c1","uid":1244336,"ip_address":"","ucode":"A3D65AB47D6634","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/b0/df0468c9.jpg","comment_is_top":false,"comment_ctime":1582559974,"is_pvip":false,"replies":[{"id":70361,"content":"不是这种情况……急着想知道可以去瞟一眼答案……","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1582611317,"ip_address":"","comment_id":181566,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"问题2-不知是不是因为. UTF-32 如果有字节全部为0，转换成其他会认为是结束符","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485041,"discussion_content":"😇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582611327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177992,"user_name":"贾陆华","can_delete":false,"product_type":"c1","uid":1321408,"ip_address":"","ucode":"2722C422077EE0","user_header":"https://static001.geekbang.org/account/avatar/00/14/29/c0/86fa3e92.jpg","comment_is_top":false,"comment_ctime":1581566673,"is_pvip":false,"replies":[{"id":69115,"content":"这和我考虑的角度不一样。虽然不能算错，但这是 UTF-16 和 UTF-32 共有的问题了。\n\n此外，你假设了操作系统用了 UTF-8。并不一定如此。Windows 内部使用 UTF-16。理论上可能存在用 UTF-32 的操作系统的。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1581607920,"ip_address":"","comment_id":177992,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"2. UTF-32不兼容ASCII编码，会导致处理之前的文件和系统接口都会转换一次，有些麻烦，这就是为什么采用兼容的UTF-8编码的原因之一","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485037,"discussion_content":"不是这种情况……急着想知道可以去瞟一眼答案……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582611317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164191,"user_name":"泰伦卢","can_delete":false,"product_type":"c1","uid":1141994,"ip_address":"","ucode":"FEA6B43C8D4FF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/ea/e03fec22.jpg","comment_is_top":false,"comment_ctime":1576907320,"is_pvip":false,"replies":[{"id":62448,"content":"理解透了，也没有多复杂。比编程简单多了。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1576983262,"ip_address":"","comment_id":164191,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"唉，一直对这个字符编码不太感冒","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478676,"discussion_content":"理解透了，也没有多复杂。比编程简单多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576983262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164140,"user_name":"_呱太_","can_delete":false,"product_type":"c1","uid":1739226,"ip_address":"","ucode":"6B96DC7CF66094","user_header":"https://static001.geekbang.org/account/avatar/00/1a/89/da/e86b9932.jpg","comment_is_top":false,"comment_ctime":1576894199,"is_pvip":false,"replies":[{"id":62410,"content":"我考虑讲的是 Boost.Test 和 Catch2。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1576911903,"ip_address":"","comment_id":164140,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"老师好！能不能提前透露一下单元测试库是用的哪个库啊，最近在看 TDD，想上手一下，感觉现在最缺的也是测试方面的能力。","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478676,"discussion_content":"理解透了，也没有多复杂。比编程简单多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576983262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163830,"user_name":"Geek_6baqph","can_delete":false,"product_type":"c1","uid":1252321,"ip_address":"","ucode":"5FA102F186E254","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJnw8P84Wg1a8wcQL33folC4sI003oCUviau3OicHlnEEpvbNLFQVhaic2yeN7hPmrV06DjVPXmHU4vg/132","comment_is_top":false,"comment_ctime":1576808783,"is_pvip":false,"replies":[{"id":62314,"content":"1. 部分正确。处理过程中（读入文件后）连大小端都不会考虑的。\n2. 不是。Emoji 在 UTF-32 里仍然是一个字符。\n3. 不对。再想想。","user_name":"作者回复","user_name_real":"吴咏炜","uid":1645639,"ctime":1576819430,"ip_address":"","comment_id":163830,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"1.每个字符的字节数固定，可能需要判断的就是一个大小端的问题\n2.有些表情符号(如emoji)，会使用两个字符来产生，增加了可见字符的判断\n3.utf-8是最省空间的编码方式，每个编码只用到需要最少的字节数","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478546,"discussion_content":"1. 部分正确。处理过程中（读入文件后）连大小端都不会考虑的。\n2. 不是。Emoji 在 UTF-32 里仍然是一个字符。\n3. 不对。再想想。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576819430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1271183,"avatar":"","nickname":"nelson","note":"","ucode":"773BE75A23C1C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":93392,"discussion_content":"Emoji 不一定是一个字符吧。例如国旗，就是The flag for Chile, which may show as the letters CL on some platforms.\n\nThe Flag: Chile emoji is a sequence of the 🇨 Regional Indicator Symbol Letter C and 🇱 Regional Indicator Symbol Letter L emojis. These display as a single emoji on supported platforms.\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576925050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1271183,"avatar":"","nickname":"nelson","note":"","ucode":"773BE75A23C1C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96454,"discussion_content":"哦，这个意思，那就对了。事实上，这个问题在非emoji情况下更多呢，但原理是差不多的——Unicode有修饰符（modifier）的概念，那就不是一个字符了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577065980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":93392,"ip_address":"","group_id":0},"score":96454,"extra":""}]}]},{"had_liked":false,"id":385921,"user_name":"转遍世界","can_delete":false,"product_type":"c1","uid":2006194,"ip_address":"江苏","ucode":"0783BFDDE87029","user_header":"https://static001.geekbang.org/account/avatar/00/1e/9c/b2/1a9beeb1.jpg","comment_is_top":false,"comment_ctime":1703667453,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040501,"comment_content":"把我头看大了","like_count":1},{"had_liked":false,"id":165507,"user_name":"晴朗","can_delete":false,"product_type":"c1","uid":1036519,"ip_address":"","ucode":"C461D67DB31ACE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/e7/c4c6096f.jpg","comment_is_top":false,"comment_ctime":1577247762,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100040501,"comment_content":"找到一个对字符编码讲解很详细的系列文章\nhttps:&#47;&#47;www.cnblogs.com&#47;benbenalin&#47;tag&#47;Unicode&#47;","like_count":0},{"had_liked":false,"id":163981,"user_name":"LiKui","can_delete":false,"product_type":"c1","uid":1498186,"ip_address":"","ucode":"7089F7F38D26A3","user_header":"https://static001.geekbang.org/account/avatar/00/16/dc/4a/0f56e0ad.jpg","comment_is_top":false,"comment_ctime":1576838861,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100040501,"comment_content":"通过BOM判断文件编码方式：\n如果文件开头是0x0000 FEFF,则是UTF-32 BE方式编码\n如果文件开头是0xFFFE 0000,则是UTF-32 LE方式编码\n如果文件开头是0xFFFE,则是UTF-16 LE的方式编码\n如果文件开头是0xFEFF,则是UTF-16 BE的方式编码\n如果文件开头是0xEF BB BF，则是UTF-8方式编码\n否则编码方式使用其它算法确定\n","like_count":0},{"had_liked":false,"id":165507,"user_name":"晴朗","can_delete":false,"product_type":"c1","uid":1036519,"ip_address":"","ucode":"C461D67DB31ACE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/e7/c4c6096f.jpg","comment_is_top":false,"comment_ctime":1577247762,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100040501,"comment_content":"找到一个对字符编码讲解很详细的系列文章\nhttps:&#47;&#47;www.cnblogs.com&#47;benbenalin&#47;tag&#47;Unicode&#47;","like_count":0},{"had_liked":false,"id":163981,"user_name":"LiKui","can_delete":false,"product_type":"c1","uid":1498186,"ip_address":"","ucode":"7089F7F38D26A3","user_header":"https://static001.geekbang.org/account/avatar/00/16/dc/4a/0f56e0ad.jpg","comment_is_top":false,"comment_ctime":1576838861,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100040501,"comment_content":"通过BOM判断文件编码方式：\n如果文件开头是0x0000 FEFF,则是UTF-32 BE方式编码\n如果文件开头是0xFFFE 0000,则是UTF-32 LE方式编码\n如果文件开头是0xFFFE,则是UTF-16 LE的方式编码\n如果文件开头是0xFEFF,则是UTF-16 BE的方式编码\n如果文件开头是0xEF BB BF，则是UTF-8方式编码\n否则编码方式使用其它算法确定\n","like_count":0}]}