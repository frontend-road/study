{"id":85031,"title":"浏览器DOM：你知道HTML的节点有哪几种吗？","content":"<p>你好，我是winter。</p><p>今天我们进入浏览器API的学习, 这一节课，我们来学习一下DOM API。</p><p>DOM API是最早被设计出来的一批API，也是用途最广的API，所以早年的技术社区，常常用DOM来泛指浏览器中所有的API。不过今天这里我们要介绍的DOM，指的就是狭义的文档对象模型。</p><h2>DOM API介绍</h2><p>首先我们先来讲一讲什么叫做文档对象模型。</p><p>顾名思义，文档对象模型是用来描述文档，这里的文档，是特指HTML文档（也用于XML文档，但是本课不讨论XML）。同时它又是一个“对象模型”，这意味着它使用的是对象这样的概念来描述HTML文档。</p><p>说起HTML文档，这是大家最熟悉的东西了，我们都知道，HTML文档是一个由标签嵌套而成的树形结构，因此，DOM也是使用树形的对象模型来描述一个HTML文档。</p><p>DOM API大致会包含4个部分。</p><ul>\n<li>节点：DOM树形结构中的节点相关API。</li>\n<li>事件：触发和监听事件相关API。</li>\n<li>Range：操作文字范围相关API。</li>\n<li>遍历：遍历DOM需要的API。</li>\n</ul><p>事件相关API和事件模型，我们会用单独的课程讲解，所以我们本篇文章重点会为你介绍节点和遍历相关API。</p><p>DOM API 数量很多，我希望给你提供一个理解DOM API设计的思路，避免单靠机械的方式去死记硬背。</p><!-- [[[read_end]]] --><h3>节点</h3><p>DOM的树形结构所有的节点有统一的接口Node，我们按照继承关系，给你介绍一下节点的类型。</p><p><img src=\"https://static001.geekbang.org/resource/image/6e/f6/6e278e450d8cc7122da3616fd18b9cf6.png?wh=955*634\" alt=\"\"></p><p>在这些节点中，除了Document和DocumentFrangment，都有与之对应的HTML写法，我们可以看一下。</p><pre><code>Element: &lt;tagname&gt;...&lt;/tagname&gt;\nText: text\nComment: &lt;!-- comments --&gt;\nDocumentType: &lt;!Doctype html&gt;\nProcessingInstruction: &lt;?a 1?&gt;\n</code></pre><p>我们在编写HTML代码并且运行后，就会在内存中得到这样一棵DOM树，HTML的写法会被转化成对应的文档模型，而我们则可以通过JavaScript等语言去访问这个文档模型。</p><p>这里我们每天都需要用到，要重点掌握的是：Document、Element、Text节点。</p><p>DocumentFragment也非常有用，它常常被用来高性能地批量添加节点。因为Comment、DocumentType和ProcessingInstruction很少需要运行时去修改和操作，所以有所了解即可。</p><h3>Node</h3><p>Node是DOM树继承关系的根节点，它定义了DOM节点在DOM树上的操作，首先，Node提供了一组属性，来表示它在DOM树中的关系，它们是：</p><ul>\n<li>parentNode</li>\n<li>childNodes</li>\n<li>firstChild</li>\n<li>lastChild</li>\n<li>nextSibling</li>\n<li>previousSibling</li>\n</ul><p>从命名上，我们可以很清晰地看出，这一组属性提供了前、后、父、子关系，有了这几个属性，我们可以很方便地根据相对位置获取元素。当然，Node中也提供了操作DOM树的API，主要有下面几种。</p><ul>\n<li>appendChild</li>\n<li>insertBefore</li>\n<li>removeChild</li>\n<li>replaceChild</li>\n</ul><p>这个命名跟上面一样，我们基本可以知道API的作用。这几个API的设计可以说是饱受诟病。其中最主要的批评是它不对称——只有before，没有after，而jQuery等框架都对其做了补充。</p><p>实际上，appendChild和insertBefore的这个设计，是一个“最小原则”的设计，这两个API是满足插入任意位置的必要API，而insertAfter，则可以由这两个API实现出来。</p><p>我个人其实不太喜欢这个设计，对我而言，insertAt(pos) 更符合审美一些。当然，不论喜不喜欢，这个标准已经确定，我们还是必须要掌握它。</p><p>这里从设计的角度还想要谈一点，那就是，所有这几个修改型的API，全都是在父元素上操作的，比如我们要想实现“删除一个元素的上一个元素”，必须要先用parentNode获取其父元素。</p><p>这样的设计是符合面向对象的基本原则的。还记得我们在JavaScript对象部分讲的对象基本特征吗？“拥有哪些子元素”是父元素的一种状态，所以修改状态，应该是父元素的行为。这个设计我认为是DOM API中好的部分。</p><p>到此为止，Node提供的API已经可以很方便（大概吧）地对树进行增、删、遍历等操作了。</p><p>除此之外，Node还提供了一些高级API，我们来认识一下它们。</p><ul>\n<li>compareDocumentPosition 是一个用于比较两个节点中关系的函数。</li>\n<li>contains 检查一个节点是否包含另一个节点的函数。</li>\n<li>isEqualNode 检查两个节点是否完全相同。</li>\n<li>isSameNode 检查两个节点是否是同一个节点，实际上在JavaScript中可以用“===”。</li>\n<li>cloneNode 复制一个节点，如果传入参数true，则会连同子元素做深拷贝。</li>\n</ul><p>DOM标准规定了节点必须从文档的create方法创建出来，不能够使用原生的JavaScript的new运算。于是document对象有这些方法。</p><ul>\n<li>createElement</li>\n<li>createTextNode</li>\n<li>createCDATASection</li>\n<li>createComment</li>\n<li>createProcessingInstruction</li>\n<li>createDocumentFragment</li>\n<li>createDocumentType</li>\n</ul><p>上面的这些方法都是用于创建对应的节点类型。你可以自己尝试一下。</p><h2>Element 与 Attribute</h2><p>Node提供了树形结构上节点相关的操作。而大部分时候，我们比较关注的是元素。Element表示元素，它是Node的子类。</p><p>元素对应了HTML中的标签，它既有子节点，又有属性。所以Element子类中，有一系列操作属性的方法。</p><p>我们需要注意，对DOM而言，Attribute和Property是完全不同的含义，只有特性场景下，两者才会互相关联（这里在后面我会详细讲解，今天的文章里我就不展开了）。</p><p>首先，我们可以把元素的Attribute当作字符串来看待，这样就有以下的API：</p><ul>\n<li>getAttribute</li>\n<li>setAttribute</li>\n<li>removeAttribute</li>\n<li>hasAttribute</li>\n</ul><p>如果你追求极致的性能，还可以把Attribute当作节点：</p><ul>\n<li>getAttributeNode</li>\n<li>setAttributeNode</li>\n</ul><p>此外，如果你喜欢property一样的访问attribute，还可以使用 attributes 对象，比如 document.body.attributes.class = “a” 等效于 document.body.setAttribute(“class”, “a”)。</p><h3>查找元素</h3><p>document节点提供了查找元素的能力。比如有下面的几种。</p><ul>\n<li>querySelector</li>\n<li>querySelectorAll</li>\n<li>getElementById</li>\n<li>getElementsByName</li>\n<li>getElementsByTagName</li>\n<li>getElementsByClassName</li>\n</ul><p>我们需要注意，getElementById、getElementsByName、getElementsByTagName、getElementsByClassName，这几个API的性能高于querySelector。</p><p>而 getElementsByName、getElementsByTagName、getElementsByClassName 获取的集合并非数组，而是一个能够动态更新的集合。</p><p>我们看一个例子：</p><pre><code>var collection = document.getElementsByClassName('winter');\nconsole.log(collection.length);\nvar winter = document.createElement('div');\nwinter.setAttribute('class', 'winter')\ndocument.documentElement.appendChild(winter)\nconsole.log(collection.length);\n</code></pre><p>在这段代码中，我们先获取了页面的className为winter的元素集合，不出意外的话，应该是空。</p><p>我们通过console.log可以看到集合的大小为0。之后我们添加了一个class为winter的div，这时候我们再看集合，可以发现，集合中出现了新添加的元素。</p><p>这说明浏览器内部是有高速的索引机制，来动态更新这样的集合的。所以，尽管querySelector系列的API非常强大，我们还是应该尽量使用getElement系列的API。</p><h2>遍历</h2><p>前面已经提到过，通过Node的相关属性，我们可以用JavaScript遍历整个树。实际上，DOM API中还提供了NodeIterator 和 TreeWalker 来遍历树。</p><p>比起直接用属性来遍历，NodeIterator 和 TreeWalker 提供了过滤功能，还可以把属性节点也包含在遍历之内。</p><p>NodeIterator的基本用法示例如下：</p><pre><code>var iterator = document.createNodeIterator(document.body, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_COMMENT, null, false);\nvar node;\nwhile(node = iterator.nextNode())\n{\n    console.log(node);\n}\n</code></pre><p>这个API的设计非常老派，这么讲的原因主要有两点，一是循环并没有类似“hasNext”这样的方法，而是直接以nextNode返回null来标志结束，二是第二个参数是掩码，这两个设计都是传统C语言里比较常见的用法。</p><p>放到今天看，这个迭代器无法匹配JavaScript的迭代器语法，而且JavaScript位运算并不高效，掩码的设计就徒增复杂性了。</p><p>这里请你注意一下这个例子中的处理方法，通常掩码型参数，我们都是用按位或运算来叠加。而针对这种返回null表示结束的迭代器，我使用了在while循环条件中赋值，来保证循环次数和调用next次数严格一致（但这样写可能违反了某些编码规范）。</p><p>我们再来看一下TreeWalker的用法。</p><pre><code>var walker = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT, null, false)\nvar node;\nwhile(node = walker.nextNode())\n{\n    if(node.tagName === &quot;p&quot;)\n        node.nextSibling();\n    console.log(node);\n}\n</code></pre><p>比起NodeIterator，TreeWalker多了在DOM树上自由移动当前节点的能力，一般来说，这种API用于“跳过”某些节点，或者重复遍历某些节点。</p><p>总的来说，我个人不太喜欢TreeWalker和NodeIterator这两个API，建议需要遍历DOM的时候，直接使用递归和Node的属性。</p><h2>Range</h2><p>Range API 是一个比较专业的领域，如果不做富文本编辑类的业务，不需要太深入。这里我们就仅介绍概念和给出基本用法的示例，你只要掌握即可。</p><p>Range API 表示一个HTML上的范围，这个范围是以文字为最小单位的，所以Range不一定包含完整的节点，它可能是Text节点中的一段，也可以是头尾两个Text的一部分加上中间的元素。</p><p>我们通过 Range API 可以比节点 API 更精确地操作 DOM 树，凡是 节点 API 能做到的，Range API都可以做到，而且可以做到更高性能，但是 Range API 使用起来比较麻烦，所以在实际项目中，并不常用，只有做底层框架和富文本编辑对它有强需求。</p><p>创建Range一般是通过设置它的起止来实现，我们可以看一个例子：</p><pre><code>var range = new Range(),\n    firstText = p.childNodes[1],\n    secondText = em.firstChild\nrange.setStart(firstText, 9) // do not forget the leading space\nrange.setEnd(secondText, 4)\n</code></pre><p>此外，通过 Range 也可以从用户选中区域创建，这样的Range用于处理用户选中区域:</p><pre><code>var range = document.getSelection().getRangeAt(0);\n</code></pre><p>更改 Range 选中区段内容的方式主要是取出和插入，分别由extractContents和insertNode来实现。</p><pre><code>var fragment = range.extractContents()\nrange.insertNode(document.createTextNode(&quot;aaaa&quot;))\n</code></pre><p>最后我们看一个完整的例子。</p><pre><code>var range = new Range(),\n    firstText = p.childNodes[1],\n    secondText = em.firstChild\nrange.setStart(firstText, 9) // do not forget the leading space\nrange.setEnd(secondText, 4)\n\nvar fragment = range.extractContents()\nrange.insertNode(document.createTextNode(&quot;aaaa&quot;))\n</code></pre><p>这个例子展示了如何使用range来取出元素和在特定位置添加新元素。</p><h2>总结</h2><p>在今天的文章中，我们一起了解了DOM API的内容。DOM API大致会包含4个部分。</p><ul>\n<li>节点：DOM树形结构中的节点相关API。</li>\n<li>事件：触发和监听事件相关API。</li>\n<li>Range：操作文字范围相关API。</li>\n<li>遍历：遍历DOM需要的API。</li>\n</ul><p>DOM API中还提供了NodeIterator 和 TreeWalker 来遍历树。比起直接用属性来遍历，NodeIterator 和 TreeWalker 提供了过滤功能，还可以把属性节点也包含在遍历之内。</p><p>除此之外，我们还谈到了Range的一些基础知识点，这里你掌握即可。</p><p>最后，我给你留了一个题目，请你用DOM API来实现遍历整个DOM树，把所有的元素的tagName打印出来。</p><hr></hr><h3>补充阅读：命名空间</h3><p>我们本课介绍的所有API，特意忽略了命名空间。</p><p>在HTML场景中，需要考虑命名空间的场景不多。最主要的场景是SVG。创建元素和属性相关的API都有带命名空间的版本：</p><ul>\n<li>document\n<ul>\n<li>createElementNS</li>\n<li>createAttributeNS</li>\n</ul>\n</li>\n<li>Element\n<ul>\n<li>getAttributeNS</li>\n<li>setAttributeNS</li>\n<li>getAttributeNodeNS</li>\n<li>setAttributeNodeNS</li>\n<li>removeAttributeNS</li>\n<li>hasAttributeNS</li>\n<li>attributes.setNamedItemNS</li>\n<li>attributes.getNamedItemNS</li>\n<li>attributes.removeNamedItemNS</li>\n</ul>\n</li>\n</ul><p>若要创建Document或者Doctype，也必须要考虑命名空间问题。DOM要求从document.implementation来创建。</p><ul>\n<li>document.implementation.createDocument</li>\n<li>document.implementation.createDocumentType</li>\n</ul><p>除此之外，还提供了一个快捷方式，你也可以动手尝试一下。</p><ul>\n<li>document.implementation.createHTMLDocument</li>\n</ul><h1>猜你喜欢</h1><p><a href=\"https://time.geekbang.org/course/intro/163?utm_term=zeusMTA7L&amp;utm_source=app&amp;utm_medium=chongxueqianduan&amp;utm_campaign=163-presell\"><img src=\"https://static001.geekbang.org/resource/image/1a/08/1a49758821bdbdf6f0a8a1dc5bf39f08.jpg?wh=1032*330\" alt=\"unpreview\"></a></p>","comments":[{"had_liked":false,"id":74301,"user_name":"周序猿","can_delete":false,"product_type":"c1","uid":1374169,"ip_address":"","ucode":"C6D09DBAA22F94","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/d9/3014889f.jpg","comment_is_top":false,"comment_ctime":1552184051,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"169055908595","product_id":100023201,"comment_content":"&#47;&#47; 深度优先<br>function deepLogTagNames(parentNode){<br>  console.log(parentNode.tagName)<br>  const childNodes = parentNode.childNodes<br>  &#47;&#47; 过滤没有 tagName 的节点，遍历输出<br>  Array.prototype.filter.call(childNodes, item=&gt;item.tagName)<br>  .forEach(itemNode=&gt;{<br>    deepLogTagNames(itemNode)<br>  })<br>}<br>deepLogTagNames(document.body)<br><br>&#47;&#47; 广度优先<br>function breadLogTagNames(root){<br>  const queue = [root]<br>  while(queue.length) {<br>    const currentNode = queue.shift()<br>    const {childNodes, tagName} = currentNode<br>    tagName &amp;&amp; console.log(currentNode.tagName)<br>    &#47;&#47; 过滤没有 tagName 的节点<br>    Array.prototype.filter.call(childNodes, item=&gt;item.tagName)<br>    .forEach(itemNode=&gt;{<br>      queue.push(itemNode)<br>    }) <br>  }<br>}<br>breadLogTagNames(document.body)","like_count":40,"discussions":[{"author":{"id":2061850,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/76/1a/7ca9ba02.jpg","nickname":"冰冻大七喜","note":"","ucode":"D7D0599EA14FDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555277,"discussion_content":"这两个遍历很不错啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646831652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74041,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1552092444,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"61681634588","product_id":100023201,"comment_content":"第一段代码中的 DocumentFragment 应该改为 DocumentType...<br><br>&#47;**<br> * @param {Element} el<br> * @param {(Element) =&gt; void} action<br>function walk (el, action) {<br>  if (el) {<br>    action(el)<br>    walk(el.firstElementChild, action)<br>    walk(el.nextElementSibling, action)<br>  }<br>}<br><br>walk(document.documentElement, el =&gt; console.log(el.nodeName))<br><br>&#47;&#47; 如果想要去重...<br>const set = new Set()<br>walk(document.documentElement, el =&gt; {<br>  set.add(el.nodeName)<br>})<br>for (let n of set)<br>  console.log(n)<br>","like_count":14,"discussions":[{"author":{"id":2440442,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/fa/b88b8b4e.jpg","nickname":"Hozan","note":"","ucode":"FADCE07AC849D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391601,"discussion_content":"这个阿成真是优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630547851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2557759,"avatar":"https://static001.geekbang.org/account/avatar/00/27/07/3f/505b1c67.jpg","nickname":"Mr.Car","note":"","ucode":"58FDB756D0AAFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371528,"discussion_content":"这个代码写的真棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619830056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92006,"user_name":"天亮了","can_delete":false,"product_type":"c1","uid":1003879,"ip_address":"","ucode":"48CC62BA19F86A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/67/9cb713ec.jpg","comment_is_top":false,"comment_ctime":1557152613,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"48801792869","product_id":100023201,"comment_content":"这样可以把tagName全打印出来...<br>document.getElementsByTagName(&#39;*&#39;);<br>","like_count":11,"discussions":[{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354915,"discussion_content":"new Set(\n  Array.prototype.map.call(\n    document.querySelectorAll(&#39;*&#39;),\n    (item) => item.tagName\n  )\n);","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615360961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1496185,"avatar":"https://static001.geekbang.org/account/avatar/00/16/d4/79/12ff2133.jpg","nickname":"且行且珍惜","note":"","ucode":"5AC0671880B29D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608,"discussion_content":"这个操作真骚气","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561796395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1364353,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d1/81/89ba9d81.jpg","nickname":"大力","note":"","ucode":"1B2125C519443D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27938,"discussion_content":"这样只是得到DOM吧，还未去重以及抽取tag name吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570679423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104490,"user_name":"拾迹","can_delete":false,"product_type":"c1","uid":1025093,"ip_address":"","ucode":"38F367B77FF2D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/45/3cb5cdc6.jpg","comment_is_top":false,"comment_ctime":1560764156,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14445666044","product_id":100023201,"comment_content":"document.querySelectorAll(&#39;*&#39;)，这样有点过分了","like_count":3},{"had_liked":false,"id":75193,"user_name":"kino","can_delete":false,"product_type":"c1","uid":1381138,"ip_address":"","ucode":"CED4B5FA6C4B01","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIEOWhj2oCFJeErulEW3QKiamVkTf3o0HZ5gUgl6Gq6d9UmJWDMselGrgnDvd3kVbKqaXw72C05JfQ/132","comment_is_top":false,"comment_ctime":1552361804,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14437263692","product_id":100023201,"comment_content":"insertBefore(newNode,null)和appendChild的区别是啥","like_count":3,"discussions":[{"author":{"id":1914201,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/35/59/3a7219de.jpg","nickname":"叮叮叮","note":"","ucode":"956C42489F25DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337074,"discussion_content":"效果相同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608792005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74267,"user_name":"我叫张小咩²⁰¹⁹","can_delete":false,"product_type":"c1","uid":1374463,"ip_address":"","ucode":"68A8C87EB09D26","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/ff/ae800f6b.jpg","comment_is_top":false,"comment_ctime":1552149890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14437051778","product_id":100023201,"comment_content":"var walker = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT, null, false)<br>var node<br>while(node = walker.nextNode())<br>    console.log(node.tagName)<br>---------- or recursive ------------<br><br>const result = []<br>function getAllTagName(parent) {<br>\tconst childs = Array.from(parent.children)<br>\tresult.push(...childs.map(el =&gt; el.tagName))<br>\tfor (var i = 0; i &lt; childs.length; i++) {<br>\t\tif (childs[i].children.length) getAllTagName(childs[i])<br>\t}<br><br>\tif (i == 0) return<br>}<br>getAllTagName(document)<br><br>console.log(result)<br><br><br>","like_count":3},{"had_liked":false,"id":92488,"user_name":"小二子大人","can_delete":false,"product_type":"c1","uid":1076169,"ip_address":"","ucode":"E87C1B023CCB44","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/c9/f90dd3c3.jpg","comment_is_top":false,"comment_ctime":1557282050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852249346","product_id":100023201,"comment_content":"const root = document.getElementsByTagName(&#39;html&#39;)[0];<br>    &#47;&#47; 深度优先遍历<br>    function deepLogTagName(root) {<br>        console.log(root.tagName);<br>        if (root.childNodes.length &gt; 0) {<br>            for (let i = 0; i &lt; root.childNodes.length; i++) {<br>                if (root.childNodes[i].nodeType === 1) {<br>                    deepLogTagName(root.childNodes[i]);<br>                }<br>            }<br>        }<br>    }<br>    deepLogTagName(root);<br>    console.log(&quot;111111111111111111111&quot;)<br><br>    &#47;&#47; 广度优先遍历<br>    console.log(root.tagName);<br>    function breadLogTagName(root) {<br>        if (root.childNodes.length &gt; 0) {<br>            for (let i = 0; i &lt; root.childNodes.length; i++) {<br>                if (root.childNodes[i].nodeType === 1) {<br>                    console.log(root.childNodes[i].tagName);<br>                }<br>            }<br>            for (let i = 0; i &lt; root.childNodes.length; i++) {<br>                if (root.childNodes[i].nodeType === 1) {<br>                    breadLogTagName(root.childNodes[i]);<br>                }<br>            }<br>        }<br>    }<br>    breadLogTagName(root)","like_count":1},{"had_liked":false,"id":79972,"user_name":"笨鸟","can_delete":false,"product_type":"c1","uid":1011000,"ip_address":"","ucode":"EE93B7BDD677E4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6d/38/c951cb2e.jpg","comment_is_top":false,"comment_ctime":1553585841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848553137","product_id":100023201,"comment_content":"function loop(node){<br>\tif(!node){<br>\t\treturn<br>\t}<br>\tif(node.nodeType === document.ELEMENT_NODE)<br>\tconsole.log(node.nodeName);<br>\tif(node.childNodes){<br>\t\tnode.childNodes.forEach(child =&gt; {<br>\t\t\tloop(child)<br>\t\t})<br>\t}<br>}<br>loop(document)","like_count":1},{"had_liked":false,"id":74651,"user_name":"宇宙全栈","can_delete":false,"product_type":"c1","uid":1001309,"ip_address":"","ucode":"2E984CA0ECFB85","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/5d/9afdf648.jpg","comment_is_top":false,"comment_ctime":1552272787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5847240083","product_id":100023201,"comment_content":"第一段代码中的 DocumentFragment 应该改为 DocumentType","like_count":1},{"had_liked":false,"id":314286,"user_name":"「前端天地」公众号","can_delete":false,"product_type":"c1","uid":2218558,"ip_address":"","ucode":"D1A4F37BA50569","user_header":"https://static001.geekbang.org/account/avatar/00/21/da/3e/e0d073ca.jpg","comment_is_top":false,"comment_ctime":1632957415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632957415","product_id":100023201,"comment_content":"document好像没有createDocumentType方法","like_count":0},{"had_liked":false,"id":263170,"user_name":"杜森垚","can_delete":false,"product_type":"c1","uid":1230301,"ip_address":"","ucode":"71DEA59348CE09","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/dd/5a482cab.jpg","comment_is_top":false,"comment_ctime":1606031015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606031015","product_id":100023201,"comment_content":"document.body.attributes.class = &quot;a&quot; 少了.value 应该为 document.body.attributes.class.value = &quot;a&quot;","like_count":0},{"had_liked":false,"id":252429,"user_name":"不曾相识","can_delete":false,"product_type":"c1","uid":1607957,"ip_address":"","ucode":"0BEDA6BDCA5F56","user_header":"https://static001.geekbang.org/account/avatar/00/18/89/15/381ce65f.jpg","comment_is_top":false,"comment_ctime":1602298963,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1602298963","product_id":100023201,"comment_content":"<br>    &lt;main&gt;<br>        &lt;!-- &lt;header&gt;<br>            &lt;h1&gt;遍历所有dom打印tagName&lt;&#47;h1&gt;<br>            &lt;nav&gt;<br>                &lt;ul&gt;<br>                    &lt;li&gt;遍历&lt;&#47;li&gt;<br>                    &lt;li&gt;递归&lt;&#47;li&gt;<br>                    &lt;li&gt;深度&lt;&#47;li&gt;<br>                    &lt;li&gt;广度&lt;&#47;li&gt;<br>                &lt;&#47;ul&gt;<br>            &lt;&#47;nav&gt;<br>        &lt;&#47;header&gt; 第一次的dom已经验证完成 --&gt;<br>        &lt;header&gt;<br>            &lt;!-- 加入更多的子元素p验证 --&gt;<br>            &lt;h1&gt;遍历所有dom打印tagName&lt;&#47;h1&gt;<br>            &lt;nav&gt;<br>                &lt;ul&gt;<br>                    &lt;li&gt;<br>                        &lt;p&gt;遍历&lt;&#47;p&gt;<br>                    &lt;&#47;li&gt;<br>                    &lt;li&gt;<br>                        &lt;p&gt;<br>                            递归<br>                        &lt;&#47;p&gt;<br>                    &lt;&#47;li&gt;<br>                    &lt;li&gt;<br>                        &lt;p&gt;深度&lt;&#47;p&gt;<br>                    &lt;&#47;li&gt;<br>                    &lt;li&gt;<br>                        &lt;p&gt;广度&lt;&#47;p&gt;<br>                    &lt;&#47;li&gt;<br>                &lt;&#47;ul&gt;<br>            &lt;&#47;nav&gt;<br>        &lt;&#47;header&gt;<br>    &lt;&#47;main&gt;<br>    &lt;footer&gt;<br>        &lt;b&gt;以上都是测试结果，研究中&lt;&#47;b&gt;<br>    &lt;&#47;footer&gt;<br>    &lt;script&gt;<br>        &#47;&#47; 获取根元素 html  开始逐渐有限使用tagName选择器 动态的。<br>        var html = document.getElementsByTagName(&#39;html&#39;)[0];<br><br>        &#47;&#47; 2、 暂时不要把功能柔和在一起，分解最小的功能 比如，查看单个节点的，打印tagName并返回一个包含其子节点集合<br>        function getChildrenNodes(node) {<br>            console.log(node.tagName);<br>            if (node.children.length) {<br>                var children = node.children;<br>                &#47;&#47; let flag = false;<br>                let childrenList = []; &#47;&#47;子节点的后代 <br>                for (let child of children) {<br>                    getChildrenNodes(child)<br>                    childrenList.push(child)<br>                }<br><br>                return childrenList;<br>            } else {<br>                return false; &#47;&#47;当前节点没有子元素<br>            }<br>        }<br>        &#47;&#47; 3、 很好第三步直接就，查看递归资料，找思路， 0-0<br><br>        &#47;&#47; 停止递归的条件是，所有子节点都没有子节点<br><br>        &#47;&#47; 验证 肯定会失败。贝贝<br>        &#47;&#47; console.log(getChildrenNodes(html));<br>        &#47;&#47; FIXME 我擦竟然成功了。。。只不过所有的元素都打印了2次<br><br>        &#47;&#47; 现在在li当中加入p元素，看结果有没有加入打印  看了，大佬们的答案随便填入的p，我也不懂啥事广度优先，深度优先<br>        console.log(getChildrenNodes(html));<br>    &lt;&#47;script&gt;<br>","like_count":0},{"had_liked":false,"id":230809,"user_name":"Peter","can_delete":false,"product_type":"c1","uid":1162472,"ip_address":"","ucode":"69F0CB9B0A85AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/e8/43109d54.jpg","comment_is_top":false,"comment_ctime":1593500590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593500590","product_id":100023201,"comment_content":"var allTags = {};<br>[].forEach.call(document.body.getElementsByTagName(&#39;*&#39;), (e) =&gt; { <br>  allTags[e.tagName] = (allTags[e.tagName] || 0) + 1 <br>})<br>console.log(allTags)","like_count":0},{"had_liked":false,"id":193039,"user_name":"pcxpccccx_","can_delete":false,"product_type":"c1","uid":1373999,"ip_address":"","ucode":"CCCF6C13279BB7","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/2f/10cbed82.jpg","comment_is_top":false,"comment_ctime":1584882885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584882885","product_id":100023201,"comment_content":"讲的真好很全面","like_count":0},{"had_liked":false,"id":142521,"user_name":"学海无涯莫非","can_delete":false,"product_type":"c1","uid":1115674,"ip_address":"","ucode":"CE259CFEA14708","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/1a/a8a9094d.jpg","comment_is_top":false,"comment_ctime":1571386841,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571386841","product_id":100023201,"comment_content":"引用：如果你追求极致的性能，还可以把 Attribute 当作节点：getAttributeNode，setAttributeNode。<br>","like_count":0,"discussions":[{"author":{"id":1177430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","nickname":"champ可口可乐了","note":"","ucode":"EA75C67E9124C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256393,"discussion_content":"MDN上已经把这两个api标为废弃状态，推荐使用getAttribute和setAttribute\n\nhttps://developer.mozilla.org/en-US/docs/Web/API/Attr","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588477560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140003,"user_name":"大力","can_delete":false,"product_type":"c1","uid":1364353,"ip_address":"","ucode":"1B2125C519443D","user_header":"https://static001.geekbang.org/account/avatar/00/14/d1/81/89ba9d81.jpg","comment_is_top":false,"comment_ctime":1570783602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570783602","product_id":100023201,"comment_content":"let set = new Set();<br>Array.from(document.getElementsByTagName(&#39;*&#39;)).map(node =&gt; set.add(node.tagName.toLowerCase()));<br>let list = Array.from(set).sort();<br>console.log(list);","like_count":0},{"had_liked":false,"id":100922,"user_name":"kgdmhny","can_delete":false,"product_type":"c1","uid":1069085,"ip_address":"","ucode":"8D700EDD33100F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIOSzr2bibaFfoI1RjYyHDoebCZI7KnhTkOnYChQRKVVkmNHTL4chd7BKTGppArERd8x02aZGwDpQ/132","comment_is_top":false,"comment_ctime":1559691279,"is_pvip":false,"replies":[{"id":"58950","content":"有啊","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574222744,"ip_address":"","comment_id":100922,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1559691279","product_id":100023201,"comment_content":"老师,请问一下,&quot;对 DOM 而言，Attribute 和 Property 是完全不同的含义，只有特性场景下，两者才会互相关联（这里在后面我会详细讲解，今天的文章里我就不展开了）&quot;后面有讲解这块吗？","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452738,"discussion_content":"有啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574222744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1953001,"avatar":"","nickname":"Geek_gulugulugun","note":"","ucode":"D31C2DFB618B59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364306,"discussion_content":"我怎么没有找到后面文章的讲解。。。请问你有看见吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617438869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91709,"user_name":"胡琦","can_delete":false,"product_type":"c1","uid":1027994,"ip_address":"","ucode":"2D39C38FAC7EE7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/9a/23603936.jpg","comment_is_top":false,"comment_ctime":1557098106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557098106","product_id":100023201,"comment_content":"膜拜前排各位大佬，学习了！","like_count":0},{"had_liked":false,"id":89392,"user_name":"Sticker","can_delete":false,"product_type":"c1","uid":1029801,"ip_address":"","ucode":"3AFF76DF6FB078","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b6/a9/bdf6f6cd.jpg","comment_is_top":false,"comment_ctime":1556163048,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556163048","product_id":100023201,"comment_content":"void function loop(parent){<br>    const children = parent.childNodes;<br>    children.forEach(item =&gt; {<br>        if(item.nodeType === 1){<br>            console.log(item.nodeName)<br>            if(item.childNodes.length &gt; 0){<br>                loop(item)<br>            }<br>        }<br>    })<br>}(document);","like_count":0},{"had_liked":false,"id":87666,"user_name":"Ramda","can_delete":false,"product_type":"c1","uid":1383173,"ip_address":"","ucode":"0405CF089D4F94","user_header":"https://static001.geekbang.org/account/avatar/00/15/1b/05/95fe1773.jpg","comment_is_top":false,"comment_ctime":1555655420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555655420","product_id":100023201,"comment_content":"        const $body = document.body<br>    <br>        function deep (parentNode) {<br>            const children = parentNode.childNodes<br>            children.forEach(item =&gt; {<br>                if(item.nodeType === 1 ) {<br>                    console.log(item.nodeName)<br>                    if (item.childNodes.length &gt; 0) {<br>                        deep(item)<br>                    }<br>                }<br>            })<br>        }           <br>        deep($body)","like_count":0},{"had_liked":false,"id":87122,"user_name":"踏凌霄","can_delete":false,"product_type":"c1","uid":1337970,"ip_address":"","ucode":"79459F6CCF1B1D","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/72/36c82f74.jpg","comment_is_top":false,"comment_ctime":1555513986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555513986","product_id":100023201,"comment_content":"void function queryAndPrintSon(params) {<br>      var child = params.children<br>      for (let index = 0; index &lt; child.length; index++) {<br>        const element = child[index];<br>        console.log(element.tagName)<br>        queryAndPrintSon(element)<br>      }<br>    }(document.getRootNode())","like_count":0},{"had_liked":false,"id":80678,"user_name":"周飞","can_delete":false,"product_type":"c1","uid":1073374,"ip_address":"","ucode":"F85FA236EB0C0D","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/de/5c67895a.jpg","comment_is_top":false,"comment_ctime":1553697340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553697340","product_id":100023201,"comment_content":" let tagNameArr = [];<br>    function travaldom(root){       <br>      if(root.tagName &amp;&amp; root.tagName !==&#39;text&#39;) tagNameArr.push(root.tagName)<br>       root.childNodes.forEach(node=&gt;{<br>          travaldom(node);<br>       });<br>    }<br>    travaldom(document);<br>    console.log(tagNameArr)","like_count":0},{"had_liked":false,"id":80471,"user_name":"逐梦无惧","can_delete":false,"product_type":"c1","uid":1320484,"ip_address":"","ucode":"2970E5B933C5AF","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/24/8d76ec60.jpg","comment_is_top":false,"comment_ctime":1553665272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553665272","product_id":100023201,"comment_content":"老师请问这些html的结构化内容有在哪本书进行介绍吗","like_count":0},{"had_liked":false,"id":78704,"user_name":"花骨朵","can_delete":false,"product_type":"c1","uid":1073653,"ip_address":"","ucode":"0F193E15CF578E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/f5/3a36af36.jpg","comment_is_top":false,"comment_ctime":1553220960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553220960","product_id":100023201,"comment_content":"&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br>&lt;head&gt;<br>  &lt;meta charset=&quot;UTF-8&quot;&gt;<br>  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;<br>  &lt;title&gt;遍历输出tagName&lt;&#47;title&gt;<br>&lt;&#47;head&gt;<br>&lt;body&gt;<br>  &lt;section&gt;<br>    &lt;header&gt;This is a header&lt;&#47;header&gt;<br>    &lt;div&gt;<br>      &lt;h4&gt;This is a content title&lt;&#47;h4&gt;<br>      &lt;p&gt;This is the &lt;em&gt;first&lt;&#47;em&gt; paragraph.&lt;&#47;p&gt;<br>      &lt;p&gt;This is the &lt;strong&gt;second&lt;&#47;strong&gt; paragraph.&lt;&#47;p&gt;<br>    &lt;&#47;div&gt;<br>    &lt;footer&gt;This is a footer of this page.&lt;&#47;footer&gt;<br>  &lt;&#47;section&gt;<br>  &lt;script&gt;<br>    const secElement = document.getElementById(&#39;sec&#39;);<br>    function getChildTagNames() {<br>      const walker = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT, null, false)<br>      let node;<br>      while(node = walker.nextNode()) {<br>        if(node.tagName)<br>        console.log(node.tagName);<br>      }<br>    }<br>    getChildTagNames(secElement);<br>  &lt;&#47;script&gt;<br>&lt;&#47;body&gt;<br>&lt;&#47;html&gt;","like_count":0},{"had_liked":false,"id":74664,"user_name":"Ppei","can_delete":false,"product_type":"c1","uid":1369514,"ip_address":"","ucode":"C354F8EF0C5814","user_header":"https://static001.geekbang.org/account/avatar/00/14/e5/aa/57926594.jpg","comment_is_top":false,"comment_ctime":1552275216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552275216","product_id":100023201,"comment_content":"老师：<br>比如 document.body.attribute.class = “a” 等效于 document.setAttribute(“class”, “a”)。<br>应该是 document.body.attributes吧？<br>疑惑：<br>var divDom = document.createElement(&#39;div&#39;)<br>divDom.attributes.id = &#39;app&#39;<br>divDom.setAttribute(&#39;class&#39;, &#39;app&#39;)<br>为什么在divDom上看不到id属性？append到页面中后，同样用getElementById也选择不到这个DOM，用class就可以。","like_count":0}]}