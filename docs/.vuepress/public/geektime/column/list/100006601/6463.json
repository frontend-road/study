{"id":6463,"title":"02 | 架构设计的历史背景","content":"<p>理解了架构的有关概念和定义之后，今天，我会给你讲讲<span class=\"orange\">架构设计的历史背景</span>。我认为，如果想要深入理解一个事物的本质，最好的方式就是去追寻这个事物出现的历史背景和推动因素。我们先来简单梳理一下软件开发进化的历史，探索一下软件架构出现的历史背景。</p>\n<h2 id=\"-1940-\">机器语言（1940年之前）</h2>\n<p>最早的软件开发使用的是“<strong>机器语言</strong>”，直接使用二进制码0和1来表示机器可以识别的指令和数据。例如，在8086机器上完成“s=768+12288-1280”的数学运算，机器码如下：</p>\n<pre><code>101100000000000000000011\n000001010000000000110000\n001011010000000000000101\n</code></pre><p>不用多说，不管是当时的程序员，还是现在的程序员，第一眼看到这样一串东西时，肯定是一头雾水，因为这实在是太难看懂了，这还只是一行运算，如果要输出一个“hello world”，面对几十上百行这样的0/1串，眼睛都要花了！</p>\n<p>看都没法看，更何况去写这样的程序，如果不小心哪个地方敲错了，将1敲成了0，例如：</p>\n<pre><code>101100000000000000000011\n000001010000000000110000\n001011000000000000000101\n</code></pre><p>如果要找出这个程序中的错误，程序员的心里阴影面积有多大？</p>\n<p>归纳一下，机器语言的主要问题是三难：<strong>太难写、太难读、太难改</strong>！</p>\n<h2 id=\"-20-40-\">汇编语言（20世纪40年代）</h2>\n<p>为了解决机器语言编写、阅读、修改复杂的问题，<strong>汇编语言</strong>应运而生。汇编语言又叫“<strong>符号语言</strong>”，用助记符代替机器指令的操作码，用地址符号（Symbol）或标号（Label）代替指令或操作数的地址。</p>\n<p>例如，为了完成“将寄存器BX的内容送到AX中”的简单操作，汇编语言和机器语言分别如下。</p>\n<pre><code>机器语言：1000100111011000\n汇编语言：mov ax,bx\n</code></pre><p>相比机器语言来说，汇编语言就清晰得多了。mov是操作，ax和bx是寄存器代号，mov ax,bx语句基本上就是“将寄存器BX的内容送到AX”的简化版的翻译，即使不懂汇编，单纯看到这样一串语言，至少也能明白大概意思。</p>\n<p>汇编语言虽然解决了机器语言读写复杂的问题，但本质上还是<strong>面向机器</strong>的，因为写汇编语言需要我们精确了解计算机底层的知识。例如，CPU指令、寄存器、段地址等底层的细节。这对于程序员来说同样很复杂，因为程序员需要将现实世界中的问题和需求按照机器的逻辑进行翻译。例如，对于程序员来说，在现实世界中面对的问题是4 + 6 = ？。而要用汇编语言实现一个简单的加法运算，代码如下：</p>\n<pre><code>.section .data\n  a: .int 10\n  b: .int 20\n  format: .asciz &quot;%d\\n&quot;\n.section .text\n.global _start\n_start:\n  movl a, %edx　　\n  addl b, %edx　　\n  pushl %edx\n  pushl $format\n  call printf\n  movl $0, (%esp)\n  call exit\n</code></pre><p>这还只是实现一个简单的加法运算所需要的汇编程序，可以想象一下，实现一个四则运算的程序会更加复杂，更不用说用汇编写一个操作系统了！</p>\n<p>除了编写本身复杂，还有另外一个复杂的地方在于：不同CPU的汇编指令和结构是不同的。例如，Intel的CPU和Motorola的CPU指令不同，同样一个程序，为Intel的CPU写一次，还要为Motorola的CPU再写一次，而且指令完全不同。</p>\n<h2 id=\"-20-50-\">高级语言（20世纪50年代）</h2>\n<p>为了解决汇编语言的问题，计算机前辈们从20世纪50年代开始又设计了多个<strong>高级语言</strong>，最初的高级语言有下面几个，并且这些语言至今还在特定的领域继续使用。</p>\n<!-- [[[read_end]]] -->\n<ul>\n<li><p>Fortran：1955年，名称取自”FORmula TRANslator”，即公式翻译器，由约翰·巴科斯（John Backus）等人发明。</p>\n</li>\n<li><p>LISP：1958年，名称取自”LISt Processor”，即枚举处理器，由约翰·麦卡锡（John McCarthy）等人发明。</p>\n</li>\n<li><p>Cobol：1959年，名称取自”Common Business Oriented Language”，即通用商业导向语言，由葛丽丝·霍普（Grace Hopper）发明。</p>\n</li>\n</ul>\n<p>为什么称这些语言为“高级语言”呢？原因在于这些语言让程序员不需要关注机器底层的低级结构和逻辑，而只要关注具体的问题和业务即可。</p>\n<p>还是以4 + 6=？这个加法为例，如果用LISP语言实现，只需要简单一行代码即可：</p>\n<pre><code>(+ 4 6)\n</code></pre><p>除此以外，通过编译程序的处理，高级语言可以被编译为适合不同CPU指令的机器语言。程序员只要写一次程序，就可以在多个不同的机器上编译运行，无须根据不同的机器指令重写整个程序。</p>\n<h2 id=\"-20-60-20-70-\">第一次软件危机与结构化程序设计（20世纪60年代~20世纪70年代）</h2>\n<p>高级语言的出现，解放了程序员，但好景不长，随着软件的规模和复杂度的大大增加，20世纪60年代中期开始爆发了第一次软件危机，典型表现有软件质量低下、项目无法如期完成、项目严重超支等，因为软件而导致的重大事故时有发生。例如，1963年美国（<a href=\"http://en.wikipedia.org/wiki/Mariner_1\">http://en.wikipedia.org/wiki/Mariner_1</a>）的水手一号火箭发射失败事故，就是因为一行FORTRAN代码错误导致的。</p>\n<p>软件危机最典型的例子莫过于IBM的System/360的操作系统开发。佛瑞德·布鲁克斯（Frederick P. Brooks, Jr.）作为项目主管，率领2000多个程序员夜以继日地工作，共计花费了5000人一年的工作量，写出将近100万行的源码，总共投入5亿美元，是美国的“曼哈顿”原子弹计划投入的1/4。尽管投入如此巨大，但项目进度却一再延迟，软件质量也得不到保障。布鲁克斯后来基于这个项目经验而总结的《人月神话》一书，成了畅销的软件工程书籍。</p>\n<p>为了解决问题，在1968、1969年连续召开两次著名的NATO会议，会议正式创造了“软件危机”一词，并提出了针对性的解决方法“软件工程”。虽然“软件工程”提出之后也曾被视为软件领域的银弹，但后来事实证明，软件工程同样无法根除软件危机，只能在一定程度上缓解软件危机。</p>\n<p>差不多同一时间，“结构化程序设计”作为另外一种解决软件危机的方案被提了出来。艾兹赫尔·戴克斯特拉（Edsger Dijkstra）于1968年发表了著名的《GOTO有害论》论文，引起了长达数年的论战，并由此产生了<strong>结构化程序设计方法</strong>。同时，第一个结构化的程序语言Pascal也在此时诞生，并迅速流行起来。</p>\n<p>结构化程序设计的主要特点是抛弃goto语句，采取“自顶向下、逐步细化、模块化”的指导思想。结构化程序设计本质上还是一种面向过程的设计思想，但通过“自顶向下、逐步细化、模块化”的方法，将软件的复杂度控制在一定范围内，从而从整体上降低了软件开发的复杂度。结构化程序方法成为了20世纪70年代软件开发的潮流。</p>\n<h2 id=\"-20-80-\">第二次软件危机与面向对象（20世纪80年代）</h2>\n<p>结构化编程的风靡在一定程度上缓解了软件危机，然而随着硬件的快速发展，业务需求越来越复杂，以及编程应用领域越来越广泛，第二次软件危机很快就到来了。</p>\n<p>第二次软件危机的根本原因还是在于软件生产力远远跟不上硬件和业务的发展。第一次软件危机的根源在于软件的“逻辑”变得非常复杂，而第二次软件危机主要体现在软件的“扩展”变得非常复杂。结构化程序设计虽然能够解决（也许用“缓解”更合适）软件逻辑的复杂性，但是对于业务变化带来的软件扩展却无能为力，软件领域迫切希望找到新的银弹来解决软件危机，在这种背景下，<strong>面向对象的思想</strong>开始流行起来。</p>\n<p>面向对象的思想并不是在第二次软件危机后才出现的，早在1967年的Simula语言中就开始提出来了，但第二次软件危机促进了面向对象的发展。<strong>面向对象真正开始流行是在20世纪80年代，主要得益于C++的功劳，后来的Java、C#把面向对象推向了新的高峰。到现在为止，面向对象已经成为了主流的开发思想。</strong></p>\n<p>虽然面向对象开始也被当作解决软件危机的银弹，但事实证明，和软件工程一样，面向对象也不是银弹，而只是一种新的软件方法而已。</p>\n<h2 id=\"-\">软件架构的历史背景</h2>\n<p>虽然早在20世纪60年代，戴克斯特拉这位上古大神就已经涉及软件架构这个概念了，但软件架构真正流行却是从20世纪90年代开始的，由于在Rational和Microsoft内部的相关活动，软件架构的概念开始越来越流行了。</p>\n<p>与之前的各种新方法或者新理念不同的是，“软件架构”出现的背景并不是整个行业都面临类似相同的问题，“软件架构”也不是为了解决新的软件危机而产生的，这是怎么回事呢？</p>\n<p>卡内基·梅隆大学的玛丽·肖（Mary Shaw）和戴维·加兰（David Garlan）对软件架构做了很多研究，他们在1994年的一篇文章《软件架构介绍》（An Introduction to Software Architecture）中写到：</p>\n<blockquote>\n<p>“When systems are constructed from many components, the organization of the overall system-the software architecture-presents a new set of design problems.”</p>\n</blockquote>\n<p>简单翻译一下：随着软件系统规模的增加，计算相关的算法和数据结构不再构成主要的设计问题；当系统由许多部分组成时，整个系统的组织，也就是所说的“软件架构”，导致了一系列新的设计问题。</p>\n<p>这段话很好地解释了“软件架构”为何先在Rational或者Microsoft这样的大公司开始逐步流行起来。因为只有大公司开发的软件系统才具备较大规模，而只有规模较大的软件系统才会面临软件架构相关的问题，例如：</p>\n<ul>\n<li><p>系统规模庞大，内部耦合严重，开发效率低；</p>\n</li>\n<li><p>系统耦合严重，牵一发动全身，后续修改和扩展困难；</p>\n</li>\n<li><p>系统逻辑复杂，容易出问题，出问题后很难排查和修复。</p>\n</li>\n</ul>\n<p>软件架构的出现有其历史必然性。20世纪60年代第一次软件危机引出了“结构化编程”，创造了“模块”概念；20世纪80年代第二次软件危机引出了“面向对象编程”，创造了“对象”概念；到了20世纪90年代“软件架构”开始流行，创造了“组件”概念。我们可以看到，“模块”“对象”“组件”本质上都是对达到一定规模的软件进行拆分，差别只是在于随着软件的复杂度不断增加，拆分的粒度越来越粗，拆分的层次越来越高。</p>\n<p>《人月神话》中提到的IBM 360大型系统，开发时间是1964年，那个时候结构化编程都还没有提出来，更不用说软件架构了。如果IBM 360系统放在20世纪90年代开发，不管是质量还是效率、成本，都会比1964年开始做要好得多，当然，这样的话我们可能就看不到《人月神话》了。</p>\n<h2 id=\"-\">小结</h2>\n<p>今天我为你回顾了软件开发进化的历史，以及软件架构出现的历史背景，从历史发展的角度，希望对你深入了解架构设计的本质有所帮助。</p>\n<p>这就是今天的全部内容，留一道思考题给你吧。为何结构化编程、面向对象编程、软件工程、架构设计最后都没有成为软件领域的银弹？</p>\n<p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>\n<p></p>\n","neighbors":{"left":{"article_title":"01 | 架构到底是指什么？","id":6458},"right":{"article_title":"03 | 架构设计的目的","id":6472}},"comments":[{"had_liked":false,"id":6930,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1525145958,"is_pvip":true,"replies":[{"id":1981,"content":"赞，666，你已经提前帮我做了后面相关内容的预热了👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235638,"ip_address":"","comment_id":6930,"utype":1}],"discussion_count":14,"race_medal":1,"score":2,"product_id":100006601,"comment_content":"2018年5月1日心得\n\n在古代的狼人传说中，只有用银质子弹（银弹）才能制服这些异常凶残的怪兽。在软件开发活动中，“银弹”特指人们渴望找到用于制服软件项目这头难缠的“怪兽”的“万能钥匙”。\n\n软件开发过程包括了分析、设计、实现、测试、验证、部署、运维等多个环节。从IT技术的发展历程来看，先辈们在上述不同的环节中提出过很多在当时看来很先进的方法与理念。但是，这些方法、理念在摩尔定律、业务创新、技术发展面前都被一一验证了以下观点：我们可以通过诸多方式去接近“银弹”，但很遗憾，软件活动中没有“银弹”。\n\n布鲁克斯发表《人月神话》三十年后，又写了《设计原本》。他认为一个成功的软件项目的最重要因素就是设计，架构师、设计师需要在业务需求和IT技术中寻找到一个平衡点。个人觉得，对这个平衡点的把握，就是架构设计中的取舍问题。而这种决策大部分是靠技术，但是一定程度上也依赖于架构师的“艺术”，技术可以依靠新工具、方法论、管理模式去提升，但是“艺术”无法量化 ，是一种权衡。\n\n软件设计过程中，模块、对象、组件本质上是对一定规模软件在不同粒度和层次上的“拆分”方法论，软件架构是一种对软件的“组织”方法论。一分一合，其目的是为了软件研发过程中的成本、进度、质量得到有效控制。但是，一个成功的软件设计是要适应并满足业务需求，同时不断“演化”的。设计需要根据业务的变化、技术的发展不断进行“演进”，这就决定了这是一个动态活动，出现新问题，解决新问题，没有所谓的“一招鲜”。\n\n以上只是针对设计领域的银弹讨论，放眼到软件全生命周期，银弹问题会更加突出。\n\n小到一个软件开发团队，大到一个行业，没有银弹，但是“行业最佳实践”可以作为指路明灯，这个可以有。","like_count":837},{"had_liked":false,"id":6991,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1525220239,"is_pvip":false,"replies":[{"id":1974,"content":"回答的很好，作者也受到了启发，谢谢👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525234837,"ip_address":"","comment_id":6991,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"软件开发最本质的挑战有两个:复杂和变更，而软件的价值是保证业务的响应力，而与之相对的是开发资源的有限，而各种的软件开发方法论，也都是在研究有限的资源下，如何应对着两个挑战，寻找平衡点，实现业务目标，因为是在寻找平衡点，就说明是有取舍的，所以就没有所谓的银弹的存在","like_count":240,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417197,"discussion_content":"回答的很好，作者也受到了启发，谢谢👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525234837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015188,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/94/abb7bfe3.jpg","nickname":"纯洁c","note":"","ucode":"522FB46A251DEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614005,"discussion_content":"说的真好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681623745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1620140,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b8/ac/92b70376.jpg","nickname":"baye","note":"","ucode":"CB6F18C9995F8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380946,"discussion_content":"从另一个角度来说，即使资源无限，也无法完美的解决复杂和变更两个挑战，也就是资源无限也不是银弹(silver bullet)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624831509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1482915,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","nickname":"业余爱好者","note":"","ucode":"A890935A982988","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":189323,"discussion_content":"变更也是一种复杂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582869546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2578104,"avatar":"","nickname":"怒涛霜雪","note":"","ucode":"850E85831A34E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1482915,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","nickname":"业余爱好者","note":"","ucode":"A890935A982988","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370545,"discussion_content":"估计他说的复杂是逻辑复杂以及有时面临多个方案的取舍，变更就比方说都做好了结果需求变更了，哪怕是逻辑变得简单了也是吃不消的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619447720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":189323,"ip_address":"","group_id":0},"score":370545,"extra":""}]}]},{"had_liked":false,"id":6995,"user_name":"felix","can_delete":false,"product_type":"c1","uid":1102511,"ip_address":"","ucode":"4809C6C10D8592","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/af/6423e1c2.jpg","comment_is_top":false,"comment_ctime":1525221732,"is_pvip":false,"replies":[{"id":1973,"content":"言简意赅，抓住了核心本质，“银弹”产生于一定的历史背景和大环境，而历史和环境总是会变化的","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525234701,"ip_address":"","comment_id":6995,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"变化才是唯一的不变，所以银弹不会存在","like_count":94,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417197,"discussion_content":"回答的很好，作者也受到了启发，谢谢👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525234837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015188,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/94/abb7bfe3.jpg","nickname":"纯洁c","note":"","ucode":"522FB46A251DEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614005,"discussion_content":"说的真好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681623745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1620140,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b8/ac/92b70376.jpg","nickname":"baye","note":"","ucode":"CB6F18C9995F8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380946,"discussion_content":"从另一个角度来说，即使资源无限，也无法完美的解决复杂和变更两个挑战，也就是资源无限也不是银弹(silver bullet)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624831509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1482915,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","nickname":"业余爱好者","note":"","ucode":"A890935A982988","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":189323,"discussion_content":"变更也是一种复杂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582869546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2578104,"avatar":"","nickname":"怒涛霜雪","note":"","ucode":"850E85831A34E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1482915,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","nickname":"业余爱好者","note":"","ucode":"A890935A982988","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370545,"discussion_content":"估计他说的复杂是逻辑复杂以及有时面临多个方案的取舍，变更就比方说都做好了结果需求变更了，哪怕是逻辑变得简单了也是吃不消的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619447720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":189323,"ip_address":"","group_id":0},"score":370545,"extra":""}]}]},{"had_liked":false,"id":6953,"user_name":"Up","can_delete":false,"product_type":"c1","uid":1032969,"ip_address":"","ucode":"3AACE765021AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/09/ee1b7ac0.jpg","comment_is_top":false,"comment_ctime":1525169898,"is_pvip":false,"replies":[{"id":1977,"content":"你已经看穿一切👍👍\n确实是想通过介绍历史来启发大家思考","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235226,"ip_address":"","comment_id":6953,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"作者这个问题是否在考验，读者认真看了这篇文章没有？我认为文章的软件发展历史正是答案，软件工程归根结底是为各行各业的需求服务的，而随着需求的复杂度越来越高，用户的要求越来越高，软件也越复杂，形态也在不断变化，所以没有一种方法论能称得上是银弹，只能说某一种方法论适合某一种需求。这也正是架构师存在的意义，去选择合适的技术，如果有银弹，还要架构师干嘛！以上只是个人见解！","like_count":78,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417199,"discussion_content":"言简意赅，抓住了核心本质，“银弹”产生于一定的历史背景和大环境，而历史和环境总是会变化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525234701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132456,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/a8/ec330e70.jpg","nickname":"Liu","note":"","ucode":"A5EF65CCF53578","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573597,"discussion_content":"新六脉神剑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653535571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6916,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1525140792,"is_pvip":false,"replies":[{"id":2002,"content":"其实不一定要P9才要理解到位呢，我2014年就写了《面向对象葵花宝典》，那时我还在写代码的哦，其实我现在也写代码，不写代码很多技术没法确切理解，我现在写demo代码比较多，例如用golang写个简单的区块链，用java写个reactor等","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525262178,"ip_address":"","comment_id":6916,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"软件开发的结果在于人，而不在于方法论，面向对象，设计模式，架构，这些概念的推出距离现在，好几十年了吧，可真正理解透彻的能有多少呢，就算有像作者这样理解透彻的，还在一线开发的能有多少……阿里的p9难道还在一线写代码嘛……最终写代码的人还是理解不到位的我们，技术强的，写的项目能多撑两年，但是复杂到一定程度，没有良好关系架构指导，都是坑","like_count":42,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417189,"discussion_content":"你已经看穿一切👍👍\n确实是想通过介绍历史来启发大家思考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7030,"user_name":"xuan","can_delete":false,"product_type":"c1","uid":1089230,"ip_address":"","ucode":"B388845A7245E3","user_header":"https://static001.geekbang.org/account/avatar/00/10/9e/ce/d8283814.jpg","comment_is_top":false,"comment_ctime":1525233667,"is_pvip":false,"replies":[{"id":1983,"content":"没有看过《人月神话》的程序员不能成为好的架构师😃😃👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235963,"ip_address":"","comment_id":7030,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"“No Silver Bullet”的原文是：“没有任何技术或管理上的进展，能够独立地许诺十年内使生产率、可靠性或简洁性获得数量级上的进步。”之所以这样说，是因为软件的根本困难（Essence，包括复杂度、一致性、可变性、不可见性)\n复杂度:规模上, 软件实体可能比任何由人类创造的其他实体更复杂, 因为没有任何两个软 件部分是相同的\n一致性:软件的变化必须遵循一系列接口标准规范,有些情况下它的变化就是要兼容；\n可变性:一般有如下几种情况:\n  1.当客户喜欢用某个功能或者某个功能能解决他的某些问题时,他会针对这方面提出很多优化该功能的需求点\n  2.硬件或者其他配件的升级变化  必须升级现有软件平台\n不可见性:软件不存在一种空间形态  可以通过一张图\n或者其他载体来可视化展示 ,不能通过地图  电路设计图等来全面展示.\n由于这几个点的变化，导致系统越来越臃肿,从而导致管理成本上升,沟通困难,可靠性逐年下降等等；而结构化 面向对象等主要是来提高生产率  可靠性和简洁性","like_count":30,"discussions":[{"author":{"id":2054237,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/58/5d/bb5f1ec5.jpg","nickname":"n的n次方","note":"","ucode":"4053B5444222FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290703,"discussion_content":"作者的这个回答我感觉有点秀优越的嫌疑。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1594567631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417174,"discussion_content":"其实不一定要P9才要理解到位呢，我2014年就写了《面向对象葵花宝典》，那时我还在写代码的哦，其实我现在也写代码，不写代码很多技术没法确切理解，我现在写demo代码比较多，例如用golang写个简单的区块链，用java写个reactor等","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1525262178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172362,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e3/8a/ed8d1b63.jpg","nickname":"梧桐秋雨","note":"","ucode":"9D6AC6BA1E4259","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573579,"discussion_content":"最近一直没写代码，感觉还是不行，重拾代码，要不很多细节都不甚了解，很多理解都很表面，不利于做好架构设计","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653525147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7064,"user_name":"Mark Yao","can_delete":false,"product_type":"c1","uid":1091768,"ip_address":"","ucode":"0535CEB691F618","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/b8/73ef30ed.jpg","comment_is_top":false,"comment_ctime":1525258126,"is_pvip":false,"replies":[{"id":1999,"content":"回答正确👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525261760,"ip_address":"","comment_id":7064,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"软件本身的复杂度难以度量，随时间和规模发展，原有的解决方案很快难适应，人们就不断总结经验模式和设计解决新困难的办法，但是不管什么样的架构设计都是在尽量满足适应我们可能遇到的问题的解决方案，不是解决问题方案。生活中我们的应用从单体到主备再到集群、分布式、微服务最后到最新的Service Mesh，这些其实都是解决和改善、完善、优化我们在软件开发遇到的问题。There is no silver bullet.","like_count":23,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417209,"discussion_content":"没有看过《人月神话》的程序员不能成为好的架构师😃😃👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15246,"user_name":"yoummg","can_delete":false,"product_type":"c1","uid":1067856,"ip_address":"","ucode":"1B809CFDD7A508","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/50/fdecd51a.jpg","comment_is_top":false,"comment_ctime":1531034483,"is_pvip":false,"replies":[{"id":5190,"content":"你已经洞悉天机👍👍😄整个专栏思路就是这样的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531121383,"ip_address":"","comment_id":15246,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"作者的用心令人敬佩。\n为什么现在我们在谈“架构”，他不是平白无故产生的，他是在一定的背景下产生的。更好地理解他产生的原因，会在具体解决问题的时候做到有的放矢。\n直到现在才看明白，what，why，how。这真是一个认清事物最本质的三步。👍👍👍","like_count":18,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417225,"discussion_content":"回答正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525261760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7031,"user_name":"闭嘴","can_delete":false,"product_type":"c1","uid":1099046,"ip_address":"","ucode":"598AD3F2E22891","user_header":"","comment_is_top":false,"comment_ctime":1525234293,"is_pvip":false,"replies":[{"id":1982,"content":"这是提炼出来的，为了写这一篇，我写了2~3周，如果觉得意犹未尽，可以在这个基础上继续去探索","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235738,"ip_address":"","comment_id":7031,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"感觉作者对整个软件行业有比较深入的了解。就是内容太少。还没看就没了。希望后面的文章多来一点干货。让我这种小白能够学习到一点实质的东西。能够解决项目问题的一些东西。希望大神能够把自己的功力展现60%就行。","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417210,"discussion_content":"这是提炼出来的，为了写这一篇，我写了2~3周，如果觉得意犹未尽，可以在这个基础上继续去探索","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1525235738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257448,"user_name":"Geek_92f9aa","can_delete":false,"product_type":"c1","uid":2268981,"ip_address":"","ucode":"494ED580892F47","user_header":"","comment_is_top":false,"comment_ctime":1603974531,"is_pvip":false,"replies":[{"id":94077,"content":"别担心，你我有生之年应该还不会被人工智能干掉������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1604388666,"ip_address":"","comment_id":257448,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"一个答案解决所有问题：“因为熵增定律”。\n而熵增的表现其实就是变化。\n那如何克服这一变化？\n同样是一句话概括：“生命以负熵为食”。\n即在生物界，生命通过已知的信息完成外界能量到自身的转移，这个过程虽然逃不过熵增定律，但通过加速外界的熵增实现了生命自身熵的不变，生物因此得以维持自身状态不变(即活着，没死)\n文章说到的架构的历史，其实就是一个对抗熵增的生命演化史。软件本身没有生命，所以要依靠人来实现自身状态维持。\n即如果我们将软件和人看成一个整体，那么其状态即是可维持的，所以这就是银弹。而如果将人从这个整体中剥离出去，软件就失去了生命力，无法永远维持自身状态，再牛逼的设计也不可能成为银弹，除非让其拥有对抗熵增的能力，那样的话软件也是有生命的。从这点来看，人工智能极有可能成为一个新生物，届时再也不需要程序员了，恩，人也不需要了，哈哈，细思极恐。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508337,"discussion_content":"别担心，你我有生之年应该还不会被人工智能干掉������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604388666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1728854,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/B7eZcETNfxUlRzSQLqa5UM8vSReaNHIibO6iaOzIk1eicYy3cKEX5FjGYicH2GjzeTwbyyzIqyab034SDX9ay9Z8Tg/132","nickname":"huzhengyao","note":"","ucode":"F7D330A047F7D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634746,"discussion_content":"AI若能对抗熵增定律，则AI极有可能成为一个新生物。 24年继续观察和思考这个问题，AI若不能对抗熵增定律，会发生什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1703845963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1506587,"avatar":"https://static001.geekbang.org/account/avatar/00/16/fd/1b/65c26382.jpg","nickname":"暮光谷","note":"","ucode":"5A8BF90CCA46ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588209,"discussion_content":"我倒是觉得你想远了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663592516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6930,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1525145958,"is_pvip":true,"replies":[{"id":1981,"content":"赞，666，你已经提前帮我做了后面相关内容的预热了👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235638,"ip_address":"","comment_id":6930,"utype":1}],"discussion_count":14,"race_medal":1,"score":2,"product_id":100006601,"comment_content":"2018年5月1日心得\n\n在古代的狼人传说中，只有用银质子弹（银弹）才能制服这些异常凶残的怪兽。在软件开发活动中，“银弹”特指人们渴望找到用于制服软件项目这头难缠的“怪兽”的“万能钥匙”。\n\n软件开发过程包括了分析、设计、实现、测试、验证、部署、运维等多个环节。从IT技术的发展历程来看，先辈们在上述不同的环节中提出过很多在当时看来很先进的方法与理念。但是，这些方法、理念在摩尔定律、业务创新、技术发展面前都被一一验证了以下观点：我们可以通过诸多方式去接近“银弹”，但很遗憾，软件活动中没有“银弹”。\n\n布鲁克斯发表《人月神话》三十年后，又写了《设计原本》。他认为一个成功的软件项目的最重要因素就是设计，架构师、设计师需要在业务需求和IT技术中寻找到一个平衡点。个人觉得，对这个平衡点的把握，就是架构设计中的取舍问题。而这种决策大部分是靠技术，但是一定程度上也依赖于架构师的“艺术”，技术可以依靠新工具、方法论、管理模式去提升，但是“艺术”无法量化 ，是一种权衡。\n\n软件设计过程中，模块、对象、组件本质上是对一定规模软件在不同粒度和层次上的“拆分”方法论，软件架构是一种对软件的“组织”方法论。一分一合，其目的是为了软件研发过程中的成本、进度、质量得到有效控制。但是，一个成功的软件设计是要适应并满足业务需求，同时不断“演化”的。设计需要根据业务的变化、技术的发展不断进行“演进”，这就决定了这是一个动态活动，出现新问题，解决新问题，没有所谓的“一招鲜”。\n\n以上只是针对设计领域的银弹讨论，放眼到软件全生命周期，银弹问题会更加突出。\n\n小到一个软件开发团队，大到一个行业，没有银弹，但是“行业最佳实践”可以作为指路明灯，这个可以有。","like_count":837,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417178,"discussion_content":"赞，666，你已经提前帮我做了后面相关内容的预热了👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1b/a7/43e5dfbc.jpg","nickname":"Holly陈","note":"","ucode":"CBF36A96E1D2D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":172150,"discussion_content":"正式因为需求不断在变，我们软件行业才有饭吃；也正式因为不断变化，架构才没有“一招鲜”","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1581771573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/63189817.jpg","nickname":"我好像一点都不像程序员","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310867,"discussion_content":"每门课都有一个优秀的课代表","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602084904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2101700,"avatar":"https://static001.geekbang.org/account/avatar/00/20/11/c4/3aa549f4.jpg","nickname":"kk","note":"","ucode":"3D9FF525E34134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404535,"discussion_content":"复杂度不会消失，只会转移","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1634341250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300831,"discussion_content":"现在的云原生，serverless对之前的架构设计又是不同的选择吧，底层基础发生了变化","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598276967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1938393,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdX8ZJKQSLArRTic3pZnhgJJSdO8CgNkZpK3YLRTcknibG6XSLXLJd4vLBdLJdYsricnKmQkhUF29Hw/132","nickname":"柳玉腾","note":"","ucode":"8B456FC1B3ECDD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377653,"discussion_content":"结构化编程、面向对象编程、软件工程、架构设计都是软件发展过程中的解决方案，面对发展中的事物，不可能存在完美的“银弹”，技术终会一直发展，与此相对应的“银弹”也会层出不穷，理论联系实际，实事求是才是终极思维","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622766887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2812644,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/ea/e4/1cbcb8d4.jpg","nickname":"小明🥤","note":"","ucode":"4DF0181D94F313","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412461,"discussion_content":"面向过程、面向对象、软件工程、架构设计，都是解决问题的当下的权宜之计。世界在发展、需求在改变、技术在迭代，人类不断会遇到新问题、又产生新的解决方案，因此没有一劳永逸的‘银弹’，只能总结出最适用的标准追求，那就是“高性能、高可用、可扩展性”‘安全、高并发、低成本’","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636175260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1655725,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","nickname":"雷刚","note":"","ucode":"115FE2BE1AAB61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356575,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615627965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331275,"discussion_content":"牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606820954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292765,"discussion_content":"给赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595324680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/d4737cd5.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167724,"discussion_content":"说的很辩证，也比较在理。艺术其实就是一种美。👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581518413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1664768,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erD9YTBibqNvibicyicp31gBdJLJ7KPTuePMeibNWKGv9PydRID0AwvtUYEIO6qpTvXQpxbktR8fuHkCaA/132","nickname":"Geek_ebe1c1","note":"","ucode":"3942F6D4ABF86F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12279,"discussion_content":"理解的真深刻 👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568515353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1341202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/12/a45ce54b.jpg","nickname":"eric","note":"","ucode":"10F4C010C7DD38","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3358,"discussion_content":"其实就是说得很高大上的什么都没说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564431430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1134574,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4f/ee/bd08cfab.jpg","nickname":"一魄","note":"","ucode":"71541125D4AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1341202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/12/a45ce54b.jpg","nickname":"eric","note":"","ucode":"10F4C010C7DD38","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382916,"discussion_content":"好酸","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625791438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3358,"ip_address":"","group_id":0},"score":382916,"extra":""}]}]},{"had_liked":false,"id":6991,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1525220239,"is_pvip":false,"replies":[{"id":1974,"content":"回答的很好，作者也受到了启发，谢谢👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525234837,"ip_address":"","comment_id":6991,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"软件开发最本质的挑战有两个:复杂和变更，而软件的价值是保证业务的响应力，而与之相对的是开发资源的有限，而各种的软件开发方法论，也都是在研究有限的资源下，如何应对着两个挑战，寻找平衡点，实现业务目标，因为是在寻找平衡点，就说明是有取舍的，所以就没有所谓的银弹的存在","like_count":240,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417178,"discussion_content":"赞，666，你已经提前帮我做了后面相关内容的预热了👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1b/a7/43e5dfbc.jpg","nickname":"Holly陈","note":"","ucode":"CBF36A96E1D2D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":172150,"discussion_content":"正式因为需求不断在变，我们软件行业才有饭吃；也正式因为不断变化，架构才没有“一招鲜”","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1581771573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/63189817.jpg","nickname":"我好像一点都不像程序员","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310867,"discussion_content":"每门课都有一个优秀的课代表","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602084904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2101700,"avatar":"https://static001.geekbang.org/account/avatar/00/20/11/c4/3aa549f4.jpg","nickname":"kk","note":"","ucode":"3D9FF525E34134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404535,"discussion_content":"复杂度不会消失，只会转移","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1634341250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300831,"discussion_content":"现在的云原生，serverless对之前的架构设计又是不同的选择吧，底层基础发生了变化","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598276967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1938393,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdX8ZJKQSLArRTic3pZnhgJJSdO8CgNkZpK3YLRTcknibG6XSLXLJd4vLBdLJdYsricnKmQkhUF29Hw/132","nickname":"柳玉腾","note":"","ucode":"8B456FC1B3ECDD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377653,"discussion_content":"结构化编程、面向对象编程、软件工程、架构设计都是软件发展过程中的解决方案，面对发展中的事物，不可能存在完美的“银弹”，技术终会一直发展，与此相对应的“银弹”也会层出不穷，理论联系实际，实事求是才是终极思维","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622766887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2812644,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/ea/e4/1cbcb8d4.jpg","nickname":"小明🥤","note":"","ucode":"4DF0181D94F313","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412461,"discussion_content":"面向过程、面向对象、软件工程、架构设计，都是解决问题的当下的权宜之计。世界在发展、需求在改变、技术在迭代，人类不断会遇到新问题、又产生新的解决方案，因此没有一劳永逸的‘银弹’，只能总结出最适用的标准追求，那就是“高性能、高可用、可扩展性”‘安全、高并发、低成本’","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636175260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1655725,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","nickname":"雷刚","note":"","ucode":"115FE2BE1AAB61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356575,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615627965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331275,"discussion_content":"牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606820954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292765,"discussion_content":"给赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595324680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/d4737cd5.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167724,"discussion_content":"说的很辩证，也比较在理。艺术其实就是一种美。👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581518413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1664768,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erD9YTBibqNvibicyicp31gBdJLJ7KPTuePMeibNWKGv9PydRID0AwvtUYEIO6qpTvXQpxbktR8fuHkCaA/132","nickname":"Geek_ebe1c1","note":"","ucode":"3942F6D4ABF86F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12279,"discussion_content":"理解的真深刻 👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568515353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1341202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/12/a45ce54b.jpg","nickname":"eric","note":"","ucode":"10F4C010C7DD38","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3358,"discussion_content":"其实就是说得很高大上的什么都没说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564431430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1134574,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4f/ee/bd08cfab.jpg","nickname":"一魄","note":"","ucode":"71541125D4AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1341202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/12/a45ce54b.jpg","nickname":"eric","note":"","ucode":"10F4C010C7DD38","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382916,"discussion_content":"好酸","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625791438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3358,"ip_address":"","group_id":0},"score":382916,"extra":""}]}]},{"had_liked":false,"id":6995,"user_name":"felix","can_delete":false,"product_type":"c1","uid":1102511,"ip_address":"","ucode":"4809C6C10D8592","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/af/6423e1c2.jpg","comment_is_top":false,"comment_ctime":1525221732,"is_pvip":false,"replies":[{"id":1973,"content":"言简意赅，抓住了核心本质，“银弹”产生于一定的历史背景和大环境，而历史和环境总是会变化的","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525234701,"ip_address":"","comment_id":6995,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"变化才是唯一的不变，所以银弹不会存在","like_count":94,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417199,"discussion_content":"言简意赅，抓住了核心本质，“银弹”产生于一定的历史背景和大环境，而历史和环境总是会变化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525234701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132456,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/a8/ec330e70.jpg","nickname":"Liu","note":"","ucode":"A5EF65CCF53578","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573597,"discussion_content":"新六脉神剑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653535571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6953,"user_name":"Up","can_delete":false,"product_type":"c1","uid":1032969,"ip_address":"","ucode":"3AACE765021AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/09/ee1b7ac0.jpg","comment_is_top":false,"comment_ctime":1525169898,"is_pvip":false,"replies":[{"id":1977,"content":"你已经看穿一切👍👍\n确实是想通过介绍历史来启发大家思考","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235226,"ip_address":"","comment_id":6953,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"作者这个问题是否在考验，读者认真看了这篇文章没有？我认为文章的软件发展历史正是答案，软件工程归根结底是为各行各业的需求服务的，而随着需求的复杂度越来越高，用户的要求越来越高，软件也越复杂，形态也在不断变化，所以没有一种方法论能称得上是银弹，只能说某一种方法论适合某一种需求。这也正是架构师存在的意义，去选择合适的技术，如果有银弹，还要架构师干嘛！以上只是个人见解！","like_count":78,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417189,"discussion_content":"你已经看穿一切👍👍\n确实是想通过介绍历史来启发大家思考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6916,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1525140792,"is_pvip":false,"replies":[{"id":2002,"content":"其实不一定要P9才要理解到位呢，我2014年就写了《面向对象葵花宝典》，那时我还在写代码的哦，其实我现在也写代码，不写代码很多技术没法确切理解，我现在写demo代码比较多，例如用golang写个简单的区块链，用java写个reactor等","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525262178,"ip_address":"","comment_id":6916,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"软件开发的结果在于人，而不在于方法论，面向对象，设计模式，架构，这些概念的推出距离现在，好几十年了吧，可真正理解透彻的能有多少呢，就算有像作者这样理解透彻的，还在一线开发的能有多少……阿里的p9难道还在一线写代码嘛……最终写代码的人还是理解不到位的我们，技术强的，写的项目能多撑两年，但是复杂到一定程度，没有良好关系架构指导，都是坑","like_count":42,"discussions":[{"author":{"id":2054237,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/58/5d/bb5f1ec5.jpg","nickname":"n的n次方","note":"","ucode":"4053B5444222FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290703,"discussion_content":"作者的这个回答我感觉有点秀优越的嫌疑。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1594567631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417174,"discussion_content":"其实不一定要P9才要理解到位呢，我2014年就写了《面向对象葵花宝典》，那时我还在写代码的哦，其实我现在也写代码，不写代码很多技术没法确切理解，我现在写demo代码比较多，例如用golang写个简单的区块链，用java写个reactor等","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1525262178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172362,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e3/8a/ed8d1b63.jpg","nickname":"梧桐秋雨","note":"","ucode":"9D6AC6BA1E4259","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573579,"discussion_content":"最近一直没写代码，感觉还是不行，重拾代码，要不很多细节都不甚了解，很多理解都很表面，不利于做好架构设计","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653525147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7030,"user_name":"xuan","can_delete":false,"product_type":"c1","uid":1089230,"ip_address":"","ucode":"B388845A7245E3","user_header":"https://static001.geekbang.org/account/avatar/00/10/9e/ce/d8283814.jpg","comment_is_top":false,"comment_ctime":1525233667,"is_pvip":false,"replies":[{"id":1983,"content":"没有看过《人月神话》的程序员不能成为好的架构师😃😃👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235963,"ip_address":"","comment_id":7030,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"“No Silver Bullet”的原文是：“没有任何技术或管理上的进展，能够独立地许诺十年内使生产率、可靠性或简洁性获得数量级上的进步。”之所以这样说，是因为软件的根本困难（Essence，包括复杂度、一致性、可变性、不可见性)\n复杂度:规模上, 软件实体可能比任何由人类创造的其他实体更复杂, 因为没有任何两个软 件部分是相同的\n一致性:软件的变化必须遵循一系列接口标准规范,有些情况下它的变化就是要兼容；\n可变性:一般有如下几种情况:\n  1.当客户喜欢用某个功能或者某个功能能解决他的某些问题时,他会针对这方面提出很多优化该功能的需求点\n  2.硬件或者其他配件的升级变化  必须升级现有软件平台\n不可见性:软件不存在一种空间形态  可以通过一张图\n或者其他载体来可视化展示 ,不能通过地图  电路设计图等来全面展示.\n由于这几个点的变化，导致系统越来越臃肿,从而导致管理成本上升,沟通困难,可靠性逐年下降等等；而结构化 面向对象等主要是来提高生产率  可靠性和简洁性","like_count":30,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417209,"discussion_content":"没有看过《人月神话》的程序员不能成为好的架构师😃😃👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7064,"user_name":"Mark Yao","can_delete":false,"product_type":"c1","uid":1091768,"ip_address":"","ucode":"0535CEB691F618","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/b8/73ef30ed.jpg","comment_is_top":false,"comment_ctime":1525258126,"is_pvip":false,"replies":[{"id":1999,"content":"回答正确👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525261760,"ip_address":"","comment_id":7064,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"软件本身的复杂度难以度量，随时间和规模发展，原有的解决方案很快难适应，人们就不断总结经验模式和设计解决新困难的办法，但是不管什么样的架构设计都是在尽量满足适应我们可能遇到的问题的解决方案，不是解决问题方案。生活中我们的应用从单体到主备再到集群、分布式、微服务最后到最新的Service Mesh，这些其实都是解决和改善、完善、优化我们在软件开发遇到的问题。There is no silver bullet.","like_count":23,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417225,"discussion_content":"回答正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525261760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15246,"user_name":"yoummg","can_delete":false,"product_type":"c1","uid":1067856,"ip_address":"","ucode":"1B809CFDD7A508","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/50/fdecd51a.jpg","comment_is_top":false,"comment_ctime":1531034483,"is_pvip":false,"replies":[{"id":5190,"content":"你已经洞悉天机👍👍😄整个专栏思路就是这样的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531121383,"ip_address":"","comment_id":15246,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"作者的用心令人敬佩。\n为什么现在我们在谈“架构”，他不是平白无故产生的，他是在一定的背景下产生的。更好地理解他产生的原因，会在具体解决问题的时候做到有的放矢。\n直到现在才看明白，what，why，how。这真是一个认清事物最本质的三步。👍👍👍","like_count":18,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420302,"discussion_content":"你已经洞悉天机👍👍😄整个专栏思路就是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531121383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7031,"user_name":"闭嘴","can_delete":false,"product_type":"c1","uid":1099046,"ip_address":"","ucode":"598AD3F2E22891","user_header":"","comment_is_top":false,"comment_ctime":1525234293,"is_pvip":false,"replies":[{"id":1982,"content":"这是提炼出来的，为了写这一篇，我写了2~3周，如果觉得意犹未尽，可以在这个基础上继续去探索","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235738,"ip_address":"","comment_id":7031,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"感觉作者对整个软件行业有比较深入的了解。就是内容太少。还没看就没了。希望后面的文章多来一点干货。让我这种小白能够学习到一点实质的东西。能够解决项目问题的一些东西。希望大神能够把自己的功力展现60%就行。","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420302,"discussion_content":"你已经洞悉天机👍👍😄整个专栏思路就是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531121383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257448,"user_name":"Geek_92f9aa","can_delete":false,"product_type":"c1","uid":2268981,"ip_address":"","ucode":"494ED580892F47","user_header":"","comment_is_top":false,"comment_ctime":1603974531,"is_pvip":false,"replies":[{"id":94077,"content":"别担心，你我有生之年应该还不会被人工智能干掉������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1604388666,"ip_address":"","comment_id":257448,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"一个答案解决所有问题：“因为熵增定律”。\n而熵增的表现其实就是变化。\n那如何克服这一变化？\n同样是一句话概括：“生命以负熵为食”。\n即在生物界，生命通过已知的信息完成外界能量到自身的转移，这个过程虽然逃不过熵增定律，但通过加速外界的熵增实现了生命自身熵的不变，生物因此得以维持自身状态不变(即活着，没死)\n文章说到的架构的历史，其实就是一个对抗熵增的生命演化史。软件本身没有生命，所以要依靠人来实现自身状态维持。\n即如果我们将软件和人看成一个整体，那么其状态即是可维持的，所以这就是银弹。而如果将人从这个整体中剥离出去，软件就失去了生命力，无法永远维持自身状态，再牛逼的设计也不可能成为银弹，除非让其拥有对抗熵增的能力，那样的话软件也是有生命的。从这点来看，人工智能极有可能成为一个新生物，届时再也不需要程序员了，恩，人也不需要了，哈哈，细思极恐。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417210,"discussion_content":"这是提炼出来的，为了写这一篇，我写了2~3周，如果觉得意犹未尽，可以在这个基础上继续去探索","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1525235738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47894,"user_name":"geraltlaush","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1544250069,"is_pvip":false,"replies":[{"id":17773,"content":"睡觉是不可能的，这辈子都不可能睡觉了😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1544679952,"ip_address":"","comment_id":47894,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"留言区的都是人才，说话声音又好听，留言又有精辟见解，我超喜欢在这里逛了","like_count":4},{"had_liked":false,"id":292777,"user_name":"大聖","can_delete":false,"product_type":"c1","uid":2485664,"ip_address":"","ucode":"5FD991D883BE78","user_header":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","comment_is_top":false,"comment_ctime":1620974603,"is_pvip":false,"replies":[{"id":106040,"content":" 你已经把问题上升到哲学高度了 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1621040546,"ip_address":"","comment_id":292777,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我来抖个机灵 - 马克思主义者看来，银弹就是伪命题。从来就没有万能药，一定得从实际出发，实事求是，具体问题具体分析。马克思主义在中国的成功不是因为生搬硬套，而是因为结合中国国情做了本土化。软件领域也是一样，一定是从实际出发解决实际问题，不能生搬硬套。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431932,"discussion_content":"睡觉是不可能的，这辈子都不可能睡觉了😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544679952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17441,"user_name":"VC","can_delete":false,"product_type":"c1","uid":1110820,"ip_address":"","ucode":"40387643810D55","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/24/45bc9545.jpg","comment_is_top":false,"comment_ctime":1532651458,"is_pvip":false,"replies":[{"id":6154,"content":"微服务被用烂了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532918313,"ip_address":"","comment_id":17441,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"大道至简，治大国，如烹小鲜，软件开发也是如此，所有复杂事情都一样，最难把控的是度。微服务盛行的当下，有多少架构师能把握好度呢？","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519956,"discussion_content":" 你已经把问题上升到哲学高度了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621040546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6973,"user_name":"军秋","can_delete":false,"product_type":"c1","uid":1108456,"ip_address":"","ucode":"D73025209CBFAE","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e8/31df61df.jpg","comment_is_top":false,"comment_ctime":1525187294,"is_pvip":false,"replies":[{"id":1975,"content":"唯一不变的是变化本身","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525234881,"ip_address":"","comment_id":6973,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"为什么软件架构还不是银弹，因为还有更加高级的等着我们去开发挖掘。究其原因，我个人认为主要是人在进步，当下看可能是最好的方法，过十年人类经验的积累，可能会发现更好的理论，这可能是个死循环，所以没有银弹。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421156,"discussion_content":"微服务被用烂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532918313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6944,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1525160901,"is_pvip":false,"replies":[{"id":1979,"content":"那硬件会不会是银弹呢？例如量子计算机出现，假如性能比现在的计算机提升1亿倍，会不会导致软件领域出现革命性变化？如果有可能，那可能会是什么？会是人工智能么？","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235513,"ip_address":"","comment_id":6944,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"硬件发展速率和软件设计发展不均衡，形成的矛盾","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417193,"discussion_content":"唯一不变的是变化本身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525234881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192724,"user_name":"Geek_kevin","can_delete":false,"product_type":"c1","uid":1301274,"ip_address":"","ucode":"03B0253CA59582","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/1a/30201f1a.jpg","comment_is_top":false,"comment_ctime":1584869744,"is_pvip":false,"replies":[{"id":74887,"content":"永远没有银弹","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585540479,"ip_address":"","comment_id":192724,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"这节课收获很大，了解历史，才知道真正的结构化编程，面向对象编程，以及现在的DDD,特定时代解决特定问题","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417184,"discussion_content":"那硬件会不会是银弹呢？例如量子计算机出现，假如性能比现在的计算机提升1亿倍，会不会导致软件领域出现革命性变化？如果有可能，那可能会是什么？会是人工智能么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6947,"user_name":"顿晓","can_delete":false,"product_type":"c1","uid":1001788,"ip_address":"","ucode":"5D81B28560A2E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/3c/fe7be5cc.jpg","comment_is_top":false,"comment_ctime":1525165637,"is_pvip":true,"replies":[{"id":1978,"content":"这是说我们一直在完善，从来没达成😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235363,"ip_address":"","comment_id":6947,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"一个猜测：软件是人造物，理论上是存在银弹的。\n从情感上讲：从业者也需要ta的存在😄\n这样的话，结构化编程、面向对象编程、软件工程、架构设计都是银弹的组成部分。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488448,"discussion_content":"永远没有银弹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585540479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306316,"user_name":"Ted","can_delete":false,"product_type":"c1","uid":1395162,"ip_address":"","ucode":"89A8202074C0B7","user_header":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","comment_is_top":false,"comment_ctime":1628493145,"is_pvip":false,"replies":[{"id":110927,"content":"变更也是复杂度的一种，算在可扩展里面","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1628559586,"ip_address":"","comment_id":306316,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"软件开发最本质的挑战有两个:复杂和变更，而软件的价值是保证业务的响应力！\n但与之相对的是开发资源的有限，而各种的软件开发方法论，也都是在研究有限的资源下，如何应对着两个挑战，寻找平衡点，实现业务目标！\n因为是在寻找平衡点，就说明是有取舍的，所以就没有所谓的银弹的存在","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417186,"discussion_content":"这是说我们一直在完善，从来没达成😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294121,"user_name":"马楚豪","can_delete":false,"product_type":"c1","uid":2431885,"ip_address":"","ucode":"EEE2A7066937FE","user_header":"","comment_is_top":false,"comment_ctime":1621775231,"is_pvip":false,"replies":[{"id":106789,"content":"点赞，“场景”区别太大，就像地球有海洋、沙漠、雨林等不同的环境一样，生物不可能进化出适应所有环境的能力","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1621905061,"ip_address":"","comment_id":294121,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我认为软件的应用场景太广了，没有一颗能适用所有场景的“银弹”，有的强调变化，有的强调稳定，有的强调简单，有的希望复杂；但这些思想和方法或多或少给所有的软件开发都带来了一些解决方案和思路，变化本身就是必要的，追求不了全适用的“银弹”。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524716,"discussion_content":"变更也是复杂度的一种，算在可扩展里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628559586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245495,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1598959952,"is_pvip":true,"replies":[{"id":90340,"content":"你的感悟就是后面要讲的内容������������������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1599014874,"ip_address":"","comment_id":245495,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"第一次软件危机是因为软件的逻辑变得复杂，第二次软件危机是为了软件的扩展，那么现在还继会有软件危机么？（为了隐私保护，上区块链，脑洞）\n\n只有规模庞大、逻辑复杂的系统，才需要更多的考虑软件架构的问题。我以前写过一些小的应用，简单的应用一些框架，使用默认的架构，就够用了。我觉的其实好的架构是慢慢“长”出来的，根据用户需求和系统规模的变化，不断的解决所面临的各种问题，最终形成各种“高大上”的架构。\n\n在什么情况下会出现那种一开始就要求高可用、高性能、可扩展的软件架构？\n\n我能想到的类似于 IBM 360 那样的大型系统有，航天工程、政府项目（例如 12306网站，或者医保系统之类）、金融管理……\n\n其实很多现在的互联网大厂，当初起家的时候也没有想太多。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504899,"discussion_content":"你的感悟就是后面要讲的内容������������������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599014874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47894,"user_name":"geraltlaush","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1544250069,"is_pvip":false,"replies":[{"id":17773,"content":"睡觉是不可能的，这辈子都不可能睡觉了😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1544679952,"ip_address":"","comment_id":47894,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"留言区的都是人才，说话声音又好听，留言又有精辟见解，我超喜欢在这里逛了","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431932,"discussion_content":"睡觉是不可能的，这辈子都不可能睡觉了😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544679952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292777,"user_name":"大聖","can_delete":false,"product_type":"c1","uid":2485664,"ip_address":"","ucode":"5FD991D883BE78","user_header":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","comment_is_top":false,"comment_ctime":1620974603,"is_pvip":false,"replies":[{"id":106040,"content":" 你已经把问题上升到哲学高度了 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1621040546,"ip_address":"","comment_id":292777,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我来抖个机灵 - 马克思主义者看来，银弹就是伪命题。从来就没有万能药，一定得从实际出发，实事求是，具体问题具体分析。马克思主义在中国的成功不是因为生搬硬套，而是因为结合中国国情做了本土化。软件领域也是一样，一定是从实际出发解决实际问题，不能生搬硬套。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519956,"discussion_content":" 你已经把问题上升到哲学高度了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621040546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17441,"user_name":"VC","can_delete":false,"product_type":"c1","uid":1110820,"ip_address":"","ucode":"40387643810D55","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/24/45bc9545.jpg","comment_is_top":false,"comment_ctime":1532651458,"is_pvip":false,"replies":[{"id":6154,"content":"微服务被用烂了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532918313,"ip_address":"","comment_id":17441,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"大道至简，治大国，如烹小鲜，软件开发也是如此，所有复杂事情都一样，最难把控的是度。微服务盛行的当下，有多少架构师能把握好度呢？","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421156,"discussion_content":"微服务被用烂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532918313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6973,"user_name":"军秋","can_delete":false,"product_type":"c1","uid":1108456,"ip_address":"","ucode":"D73025209CBFAE","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e8/31df61df.jpg","comment_is_top":false,"comment_ctime":1525187294,"is_pvip":false,"replies":[{"id":1975,"content":"唯一不变的是变化本身","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525234881,"ip_address":"","comment_id":6973,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"为什么软件架构还不是银弹，因为还有更加高级的等着我们去开发挖掘。究其原因，我个人认为主要是人在进步，当下看可能是最好的方法，过十年人类经验的积累，可能会发现更好的理论，这可能是个死循环，所以没有银弹。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417193,"discussion_content":"唯一不变的是变化本身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525234881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6944,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1525160901,"is_pvip":false,"replies":[{"id":1979,"content":"那硬件会不会是银弹呢？例如量子计算机出现，假如性能比现在的计算机提升1亿倍，会不会导致软件领域出现革命性变化？如果有可能，那可能会是什么？会是人工智能么？","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235513,"ip_address":"","comment_id":6944,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"硬件发展速率和软件设计发展不均衡，形成的矛盾","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417184,"discussion_content":"那硬件会不会是银弹呢？例如量子计算机出现，假如性能比现在的计算机提升1亿倍，会不会导致软件领域出现革命性变化？如果有可能，那可能会是什么？会是人工智能么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192724,"user_name":"Geek_kevin","can_delete":false,"product_type":"c1","uid":1301274,"ip_address":"","ucode":"03B0253CA59582","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/1a/30201f1a.jpg","comment_is_top":false,"comment_ctime":1584869744,"is_pvip":false,"replies":[{"id":74887,"content":"永远没有银弹","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585540479,"ip_address":"","comment_id":192724,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"这节课收获很大，了解历史，才知道真正的结构化编程，面向对象编程，以及现在的DDD,特定时代解决特定问题","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488448,"discussion_content":"永远没有银弹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585540479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6947,"user_name":"顿晓","can_delete":false,"product_type":"c1","uid":1001788,"ip_address":"","ucode":"5D81B28560A2E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/3c/fe7be5cc.jpg","comment_is_top":false,"comment_ctime":1525165637,"is_pvip":true,"replies":[{"id":1978,"content":"这是说我们一直在完善，从来没达成😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235363,"ip_address":"","comment_id":6947,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"一个猜测：软件是人造物，理论上是存在银弹的。\n从情感上讲：从业者也需要ta的存在😄\n这样的话，结构化编程、面向对象编程、软件工程、架构设计都是银弹的组成部分。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417186,"discussion_content":"这是说我们一直在完善，从来没达成😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306316,"user_name":"Ted","can_delete":false,"product_type":"c1","uid":1395162,"ip_address":"","ucode":"89A8202074C0B7","user_header":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","comment_is_top":false,"comment_ctime":1628493145,"is_pvip":false,"replies":[{"id":110927,"content":"变更也是复杂度的一种，算在可扩展里面","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1628559586,"ip_address":"","comment_id":306316,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"软件开发最本质的挑战有两个:复杂和变更，而软件的价值是保证业务的响应力！\n但与之相对的是开发资源的有限，而各种的软件开发方法论，也都是在研究有限的资源下，如何应对着两个挑战，寻找平衡点，实现业务目标！\n因为是在寻找平衡点，就说明是有取舍的，所以就没有所谓的银弹的存在","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524716,"discussion_content":"变更也是复杂度的一种，算在可扩展里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628559586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294121,"user_name":"马楚豪","can_delete":false,"product_type":"c1","uid":2431885,"ip_address":"","ucode":"EEE2A7066937FE","user_header":"","comment_is_top":false,"comment_ctime":1621775231,"is_pvip":false,"replies":[{"id":106789,"content":"点赞，“场景”区别太大，就像地球有海洋、沙漠、雨林等不同的环境一样，生物不可能进化出适应所有环境的能力","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1621905061,"ip_address":"","comment_id":294121,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我认为软件的应用场景太广了，没有一颗能适用所有场景的“银弹”，有的强调变化，有的强调稳定，有的强调简单，有的希望复杂；但这些思想和方法或多或少给所有的软件开发都带来了一些解决方案和思路，变化本身就是必要的，追求不了全适用的“银弹”。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520515,"discussion_content":"点赞，“场景”区别太大，就像地球有海洋、沙漠、雨林等不同的环境一样，生物不可能进化出适应所有环境的能力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621905061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245495,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1598959952,"is_pvip":true,"replies":[{"id":90340,"content":"你的感悟就是后面要讲的内容������������������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1599014874,"ip_address":"","comment_id":245495,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"第一次软件危机是因为软件的逻辑变得复杂，第二次软件危机是为了软件的扩展，那么现在还继会有软件危机么？（为了隐私保护，上区块链，脑洞）\n\n只有规模庞大、逻辑复杂的系统，才需要更多的考虑软件架构的问题。我以前写过一些小的应用，简单的应用一些框架，使用默认的架构，就够用了。我觉的其实好的架构是慢慢“长”出来的，根据用户需求和系统规模的变化，不断的解决所面临的各种问题，最终形成各种“高大上”的架构。\n\n在什么情况下会出现那种一开始就要求高可用、高性能、可扩展的软件架构？\n\n我能想到的类似于 IBM 360 那样的大型系统有，航天工程、政府项目（例如 12306网站，或者医保系统之类）、金融管理……\n\n其实很多现在的互联网大厂，当初起家的时候也没有想太多。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520515,"discussion_content":"点赞，“场景”区别太大，就像地球有海洋、沙漠、雨林等不同的环境一样，生物不可能进化出适应所有环境的能力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621905061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6935,"user_name":"阿斌","can_delete":false,"product_type":"c1","uid":1103430,"ip_address":"","ucode":"9A44CCF6E32FEB","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/46/515198c7.jpg","comment_is_top":false,"comment_ctime":1525149644,"is_pvip":false,"replies":[{"id":1980,"content":"架构设计的本质和目的，后续章节会详细展开","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235570,"ip_address":"","comment_id":6935,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"我理解的架构设计，是职责划分的过程，但是对于架构师来说，怎么划分职责一直是一个难题。","like_count":1},{"had_liked":false,"id":393470,"user_name":"棒棒哒","can_delete":false,"product_type":"c1","uid":3950547,"ip_address":"浙江","ucode":"575D7132F0BCE8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/eO208mLtJc3oqsatAEZtf0w0TcFnBPGfrmpHibiawIUGTc4xp7EBTFzuNYgicLOu2cEXv2QH0CdQfAclI7F9HYOhQ/132","comment_is_top":false,"comment_ctime":1723969073,"is_pvip":false,"replies":[{"id":142929,"content":"英伟达CEO黄仁勋说过：过去是面向API编程，未来是面向AI编程","user_name":"作者回复","user_name_real":"作者","uid":1098920,"ctime":1724319434,"ip_address":"广东","comment_id":393470,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"结构化、面向对象、软件架构之后会有什么关键词出现呢？面向AI？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650067,"discussion_content":"英伟达CEO黄仁勋说过：过去是面向API编程，未来是面向AI编程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724319434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352500,"user_name":"杨恒","can_delete":false,"product_type":"c1","uid":3066545,"ip_address":"北京","ucode":"057CCB97B56740","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ca/b1/044d3e98.jpg","comment_is_top":false,"comment_ctime":1658732688,"is_pvip":false,"replies":[{"id":128331,"content":"应该没有哪个行业有银弹吧，行业在发展，技术在发展","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1659065989,"ip_address":"北京","comment_id":352500,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"没有银弹。和其它行业不同，软件行业对人的依赖太高，所以，我们没有办法像其它行业一样，做标准化的工作流程，按流水线开发，而且，软件行业需要一堆人一起工作。很多年以来，大家都还是试图尝试标准化一些工作，但效果有限。一方面，这些标准化的东西限制了从业人员的思维，而这正是这个行业所需要的；另一方面，“上有政策，下有对策”，总会有很多办法绕过这些规则，或者为了满足这些规则而做一些额外的事情。\n银弹仍然没有，敏捷尝试从另一个方向来解决这个问题，但是仍然不能解决所以问题。\n所以，就像刀一样，我们需要不同的刀对付不同的问题，如果用菜刀削铅笔就比较别扭了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581905,"discussion_content":"应该没有哪个行业有银弹吧，行业在发展，技术在发展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659065990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352304,"user_name":"尖尖","can_delete":false,"product_type":"c1","uid":3066538,"ip_address":"","ucode":"CFFA12A459D891","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ca/aa/71165169.jpg","comment_is_top":false,"comment_ctime":1658538389,"is_pvip":false,"replies":[{"id":128211,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658720022,"ip_address":"","comment_id":352304,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"从软件的业务覆盖方面来说，涉及各行各业，且种类复杂，需求千变万化，有些需要高可靠性，有些需要可移植，有些需要高性能。而模块，组件有各自特定的限制。要用一个点的来解决一个面，那必须找对这个面的薄弱点，模块，组件只碎了面的一角，而不是全部。因此不是“银弹”。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581317,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658720022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352258,"user_name":"等风来🎧","can_delete":false,"product_type":"c1","uid":1804087,"ip_address":"","ucode":"B6BB8714A0B019","user_header":"https://static001.geekbang.org/account/avatar/00/1b/87/37/b071398c.jpg","comment_is_top":false,"comment_ctime":1658484933,"is_pvip":false,"replies":[{"id":128209,"content":"很少用架构风格这个说法，因为架构设计不太像艺术那样，分什么中式西式，古典现代等，架构设计领域还是用架构模式用的多","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658719770,"ip_address":"","comment_id":352258,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"老师，架构风格，和架构模式，这两个概念有什么区别吗？看到有的书，混着用。有的书又特别强调两者的概念不一样","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581314,"discussion_content":"很少用架构风格这个说法，因为架构设计不太像艺术那样，分什么中式西式，古典现代等，架构设计领域还是用架构模式用的多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1658719770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352242,"user_name":"李晨","can_delete":false,"product_type":"c1","uid":2716735,"ip_address":"","ucode":"D734DE3B9A5A2D","user_header":"https://static001.geekbang.org/account/avatar/00/29/74/3f/5c9fd08f.jpg","comment_is_top":false,"comment_ctime":1658475811,"is_pvip":false,"replies":[{"id":128208,"content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658719676,"ip_address":"","comment_id":352242,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计。这些都是在各个时代，为了解决当时出现的问题，而产生的相对应的解决方法。随着时代的发展，可能会有新的问题出现，根据历史发展的经验来看，这些问题通过现有的方法大概率是无法完美解决的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581313,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658719676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352158,"user_name":"木青","can_delete":false,"product_type":"c1","uid":2746129,"ip_address":"","ucode":"F888E3BE2F64EF","user_header":"https://static001.geekbang.org/account/avatar/00/29/e7/11/996a51a9.jpg","comment_is_top":false,"comment_ctime":1658411456,"is_pvip":false,"replies":[{"id":128204,"content":"具体问题具体解决，但还是有一些通用的方法论的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658719596,"ip_address":"","comment_id":352158,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"对于每一个项目，事、人都是不同，都是需要磨合，找到合适这个系统&#47;项目、这个团队的方法。没有万能药","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581308,"discussion_content":"具体问题具体解决，但还是有一些通用的方法论的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658719596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345801,"user_name":"Geek_Allen","can_delete":false,"product_type":"c1","uid":1856464,"ip_address":"","ucode":"B8350087DFF9FC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ibA1j3Lrtn7zct63NytxRJ5ZbSicws4MKFKaPhfKUO08qN0Riby9oeJsNJ4nSiaic1JpD5ZHQiboNJPY9ML7HW05A4Tg/132","comment_is_top":false,"comment_ctime":1652602108,"is_pvip":false,"replies":[{"id":126211,"content":"写的很好，点赞 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1652663932,"ip_address":"","comment_id":345801,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"“银弹”本身就是一个相对概念，本质是解决问题的手段。\n如桃木剑克制僵尸，银弹克制狼人一样。\n软件开发作为一个新兴的科学，本身就处在探索阶段，随着时代的推移，会不断出现新的问题。\n对于新的问题就要结合事宜创造出新的解法。\n从结构化编程，到面向对象编程，再到软件工程，以及当下流行的架构设计，都是时代的最佳实践，也是软件工程师（人）的智慧结晶。\n从早期的机器语言，再到汇编语言，高级语言，目前逐渐流行的低代码平台（我个人理解就是图形语言），也都是当下遇到的最大问题的最佳解法。\n\n随着时代演进，我相信软件科学会不断进化出新的“银弹“。那么是不是意味着我们不需要去了解那个已经被淘汰的“老古董“啦？\n\n我觉得新时代解决问题的方法都是在历史解法上的不断创新，并没有完全摈弃，另起炉灶。去其糟粕，取其精华。这也真是我们要了解历史背景的原因。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572220,"discussion_content":"写的很好，点赞 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652663932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339756,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1648358433,"is_pvip":false,"replies":[{"id":124196,"content":"这已经是哲学高度了\n","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1648430317,"ip_address":"","comment_id":339756,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"此刻的感受，不仅仅是软件行业，其他行业，很多事物都是一样，没有一个可以统一解决的方案，\n如果有，这个世界恐怕不会正常运行～\n\n因为一直处于变化之中，才推动这个世界平衡向前发展～","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558644,"discussion_content":"这已经是哲学高度了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648430317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":558710,"discussion_content":"smile","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648436789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":558644,"ip_address":"","group_id":0},"score":558710,"extra":""}]}]},{"had_liked":false,"id":337099,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1646622272,"is_pvip":false,"replies":[{"id":123191,"content":"后面更精彩","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1646642404,"ip_address":"","comment_id":337099,"utype":1}],"discussion_count":1,"race_medal":3,"score":4,"product_id":100006601,"comment_content":"看着挺过瘾的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554856,"discussion_content":"后面更精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646642404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6935,"user_name":"阿斌","can_delete":false,"product_type":"c1","uid":1103430,"ip_address":"","ucode":"9A44CCF6E32FEB","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/46/515198c7.jpg","comment_is_top":false,"comment_ctime":1525149644,"is_pvip":false,"replies":[{"id":1980,"content":"架构设计的本质和目的，后续章节会详细展开","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525235570,"ip_address":"","comment_id":6935,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"我理解的架构设计，是职责划分的过程，但是对于架构师来说，怎么划分职责一直是一个难题。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417180,"discussion_content":"架构设计的本质和目的，后续章节会详细展开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393470,"user_name":"棒棒哒","can_delete":false,"product_type":"c1","uid":3950547,"ip_address":"浙江","ucode":"575D7132F0BCE8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/eO208mLtJc3oqsatAEZtf0w0TcFnBPGfrmpHibiawIUGTc4xp7EBTFzuNYgicLOu2cEXv2QH0CdQfAclI7F9HYOhQ/132","comment_is_top":false,"comment_ctime":1723969073,"is_pvip":false,"replies":[{"id":142929,"content":"英伟达CEO黄仁勋说过：过去是面向API编程，未来是面向AI编程","user_name":"作者回复","user_name_real":"作者","uid":1098920,"ctime":1724319434,"ip_address":"广东","comment_id":393470,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"结构化、面向对象、软件架构之后会有什么关键词出现呢？面向AI？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417180,"discussion_content":"架构设计的本质和目的，后续章节会详细展开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525235570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352500,"user_name":"杨恒","can_delete":false,"product_type":"c1","uid":3066545,"ip_address":"北京","ucode":"057CCB97B56740","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ca/b1/044d3e98.jpg","comment_is_top":false,"comment_ctime":1658732688,"is_pvip":false,"replies":[{"id":128331,"content":"应该没有哪个行业有银弹吧，行业在发展，技术在发展","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1659065989,"ip_address":"北京","comment_id":352500,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"没有银弹。和其它行业不同，软件行业对人的依赖太高，所以，我们没有办法像其它行业一样，做标准化的工作流程，按流水线开发，而且，软件行业需要一堆人一起工作。很多年以来，大家都还是试图尝试标准化一些工作，但效果有限。一方面，这些标准化的东西限制了从业人员的思维，而这正是这个行业所需要的；另一方面，“上有政策，下有对策”，总会有很多办法绕过这些规则，或者为了满足这些规则而做一些额外的事情。\n银弹仍然没有，敏捷尝试从另一个方向来解决这个问题，但是仍然不能解决所以问题。\n所以，就像刀一样，我们需要不同的刀对付不同的问题，如果用菜刀削铅笔就比较别扭了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":650067,"discussion_content":"英伟达CEO黄仁勋说过：过去是面向API编程，未来是面向AI编程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724319434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352304,"user_name":"尖尖","can_delete":false,"product_type":"c1","uid":3066538,"ip_address":"","ucode":"CFFA12A459D891","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ca/aa/71165169.jpg","comment_is_top":false,"comment_ctime":1658538389,"is_pvip":false,"replies":[{"id":128211,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658720022,"ip_address":"","comment_id":352304,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"从软件的业务覆盖方面来说，涉及各行各业，且种类复杂，需求千变万化，有些需要高可靠性，有些需要可移植，有些需要高性能。而模块，组件有各自特定的限制。要用一个点的来解决一个面，那必须找对这个面的薄弱点，模块，组件只碎了面的一角，而不是全部。因此不是“银弹”。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581905,"discussion_content":"应该没有哪个行业有银弹吧，行业在发展，技术在发展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659065990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352258,"user_name":"等风来🎧","can_delete":false,"product_type":"c1","uid":1804087,"ip_address":"","ucode":"B6BB8714A0B019","user_header":"https://static001.geekbang.org/account/avatar/00/1b/87/37/b071398c.jpg","comment_is_top":false,"comment_ctime":1658484933,"is_pvip":false,"replies":[{"id":128209,"content":"很少用架构风格这个说法，因为架构设计不太像艺术那样，分什么中式西式，古典现代等，架构设计领域还是用架构模式用的多","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658719770,"ip_address":"","comment_id":352258,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"老师，架构风格，和架构模式，这两个概念有什么区别吗？看到有的书，混着用。有的书又特别强调两者的概念不一样","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581317,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658720022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352242,"user_name":"李晨","can_delete":false,"product_type":"c1","uid":2716735,"ip_address":"","ucode":"D734DE3B9A5A2D","user_header":"https://static001.geekbang.org/account/avatar/00/29/74/3f/5c9fd08f.jpg","comment_is_top":false,"comment_ctime":1658475811,"is_pvip":false,"replies":[{"id":128208,"content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658719676,"ip_address":"","comment_id":352242,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计。这些都是在各个时代，为了解决当时出现的问题，而产生的相对应的解决方法。随着时代的发展，可能会有新的问题出现，根据历史发展的经验来看，这些问题通过现有的方法大概率是无法完美解决的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581314,"discussion_content":"很少用架构风格这个说法，因为架构设计不太像艺术那样，分什么中式西式，古典现代等，架构设计领域还是用架构模式用的多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1658719770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352158,"user_name":"木青","can_delete":false,"product_type":"c1","uid":2746129,"ip_address":"","ucode":"F888E3BE2F64EF","user_header":"https://static001.geekbang.org/account/avatar/00/29/e7/11/996a51a9.jpg","comment_is_top":false,"comment_ctime":1658411456,"is_pvip":false,"replies":[{"id":128204,"content":"具体问题具体解决，但还是有一些通用的方法论的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1658719596,"ip_address":"","comment_id":352158,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"对于每一个项目，事、人都是不同，都是需要磨合，找到合适这个系统&#47;项目、这个团队的方法。没有万能药","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581313,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658719676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345801,"user_name":"Geek_Allen","can_delete":false,"product_type":"c1","uid":1856464,"ip_address":"","ucode":"B8350087DFF9FC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ibA1j3Lrtn7zct63NytxRJ5ZbSicws4MKFKaPhfKUO08qN0Riby9oeJsNJ4nSiaic1JpD5ZHQiboNJPY9ML7HW05A4Tg/132","comment_is_top":false,"comment_ctime":1652602108,"is_pvip":false,"replies":[{"id":126211,"content":"写的很好，点赞 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1652663932,"ip_address":"","comment_id":345801,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"“银弹”本身就是一个相对概念，本质是解决问题的手段。\n如桃木剑克制僵尸，银弹克制狼人一样。\n软件开发作为一个新兴的科学，本身就处在探索阶段，随着时代的推移，会不断出现新的问题。\n对于新的问题就要结合事宜创造出新的解法。\n从结构化编程，到面向对象编程，再到软件工程，以及当下流行的架构设计，都是时代的最佳实践，也是软件工程师（人）的智慧结晶。\n从早期的机器语言，再到汇编语言，高级语言，目前逐渐流行的低代码平台（我个人理解就是图形语言），也都是当下遇到的最大问题的最佳解法。\n\n随着时代演进，我相信软件科学会不断进化出新的“银弹“。那么是不是意味着我们不需要去了解那个已经被淘汰的“老古董“啦？\n\n我觉得新时代解决问题的方法都是在历史解法上的不断创新，并没有完全摈弃，另起炉灶。去其糟粕，取其精华。这也真是我们要了解历史背景的原因。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581308,"discussion_content":"具体问题具体解决，但还是有一些通用的方法论的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658719596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339756,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1648358433,"is_pvip":false,"replies":[{"id":124196,"content":"这已经是哲学高度了\n","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1648430317,"ip_address":"","comment_id":339756,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"此刻的感受，不仅仅是软件行业，其他行业，很多事物都是一样，没有一个可以统一解决的方案，\n如果有，这个世界恐怕不会正常运行～\n\n因为一直处于变化之中，才推动这个世界平衡向前发展～","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572220,"discussion_content":"写的很好，点赞 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652663932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337099,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1646622272,"is_pvip":false,"replies":[{"id":123191,"content":"后面更精彩","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1646642404,"ip_address":"","comment_id":337099,"utype":1}],"discussion_count":1,"race_medal":3,"score":4,"product_id":100006601,"comment_content":"看着挺过瘾的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558644,"discussion_content":"这已经是哲学高度了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648430317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":558710,"discussion_content":"smile","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648436789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":558644,"ip_address":"","group_id":0},"score":558710,"extra":""}]}]},{"had_liked":false,"id":335859,"user_name":"地平线","can_delete":false,"product_type":"c1","uid":1952394,"ip_address":"","ucode":"52213F99782147","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ca/8a/8f64cf86.jpg","comment_is_top":false,"comment_ctime":1645725085,"is_pvip":false,"replies":[{"id":122733,"content":"对的，降低复杂度才是架构设计的终极目的。","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1645754726,"ip_address":"","comment_id":335859,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"复杂性虽然可以被结构化编程，面向对象，架构设计降低，但复杂性无法消失。模块内部变得简单，但模块与模块之间的联系却变得复杂。将软件分解对结构，类，软件架构的设计者也提出了极高的要求。","like_count":0},{"had_liked":false,"id":332845,"user_name":"沐雪","can_delete":false,"product_type":"c1","uid":1028301,"ip_address":"","ucode":"0C42BF0D75FD9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","comment_is_top":false,"comment_ctime":1643724409,"is_pvip":false,"replies":[{"id":121708,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1644027905,"ip_address":"","comment_id":332845,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"通过讲解软件的发展历史，来引出架构的生产。即 什么是架构，为啥会有架构，架构究竟是如何解决问题？\n软件的发展史是一步动态发展的过程（类似生物进化），适者生存。但是只能随着环境、随着业务发展变化而不断的适应，才能生存下来。而当环境变了，则又要取寻找合适的方式适应。所以，根据就没有银弹能解决一个动态发展中遇到的所有问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553150,"discussion_content":"对的，降低复杂度才是架构设计的终极目的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645754726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332714,"user_name":"庄小P","can_delete":false,"product_type":"c1","uid":1489063,"ip_address":"","ucode":"A71FA01F713790","user_header":"","comment_is_top":false,"comment_ctime":1643513550,"is_pvip":false,"replies":[{"id":121694,"content":"这个理解不太正确，并不是每次技术发展都是将细节抽象","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1644027409,"ip_address":"","comment_id":332714,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"对于不同的问题，在不同的历史局限性下，往往会有人想出当时最符合的一种解决方案。为了适应变化，我们不断得将细节抽象出来，变得更加可拓展。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549489,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331369,"user_name":"shichen501","can_delete":false,"product_type":"c1","uid":1542736,"ip_address":"","ucode":"A92D3BA6CA546E","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/50/1ac12c3c.jpg","comment_is_top":false,"comment_ctime":1642563777,"is_pvip":false,"replies":[{"id":121117,"content":"唯一不变的是变化 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1642645242,"ip_address":"","comment_id":331369,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计都是在时代大背景下提出的解决方案, 正如作者描述的, 软件生产力远远跟不上硬件和业务的发展事实并没有发生转变, 所有上述所有的方案都不能成为银弹\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547345,"discussion_content":"唯一不变的是变化 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642645242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329023,"user_name":"蓝士钦","can_delete":false,"product_type":"c1","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1641032275,"is_pvip":false,"replies":[{"id":119963,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1641351156,"ip_address":"","comment_id":329023,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"软件开发领域最大的挑战是在有限的资源下应对复杂度和变更，在资源有限的情况下寻找平衡点，所以没有银弹。\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543909,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641351156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324839,"user_name":"逆向","can_delete":false,"product_type":"c1","uid":1089426,"ip_address":"","ucode":"745C18035146C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/92/a3150976.jpg","comment_is_top":false,"comment_ctime":1638677843,"is_pvip":false,"replies":[{"id":117925,"content":"正解，考虑环境和业务变化，这点很赞","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638786454,"ip_address":"","comment_id":324839,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"软件开发的发展史：平铺直叙式机器语言——逻辑过于复杂导致第一次软件危机———-结构化程序设计，“自顶向下，模块化”的设计思想———扩展成为平静导致第二次软件危机————面向对象编程————-软件架构，在整个的发展历史中，每种解决方案都被当作银蛋，但是事实总会证明不是，我理解本质上是因为软件是在不断进化的，当时的解决方案只能解决当前的问题，而软件不是一个孤岛，它依赖周围的东西，比如硬件资源，软件本身的复杂度变化和周围依赖的变化，都是当前节点不可预测的，所以并没有所谓银蛋。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536448,"discussion_content":"正解，考虑环境和业务变化，这点很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638786454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323250,"user_name":"陈","can_delete":false,"product_type":"c1","uid":1213540,"ip_address":"","ucode":"CBCB838773574F","user_header":"https://static001.geekbang.org/account/avatar/00/12/84/64/0c3e17bb.jpg","comment_is_top":false,"comment_ctime":1637804002,"is_pvip":false,"replies":[{"id":117360,"content":"不过 什么 ？ ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1637923683,"ip_address":"","comment_id":323250,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计这些都是为了保证软件的开发处于朝向目标的正确道路上，但很遗憾的事实是，软件开发过程的挑战，一是复杂和变更，二是资源有限。复杂可能会导致使用了不合理或错误的方法，资源有限则是关注成本和收益的平衡。所以软开领域不光关注技术上如何实现，也关注成本和收益。架构设计等等方法论本质上是一定程度上解决这两个问题。\n不过，","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536448,"discussion_content":"正解，考虑环境和业务变化，这点很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638786454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321726,"user_name":"ting.stu","can_delete":false,"product_type":"c1","uid":1127581,"ip_address":"","ucode":"111FA8B6F426FC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo4dq6xsbAeYcwz6gfNjvUeNicBCNPosLHtDugXRTR3q4Vk7fgSVUyzCJh7JFibtv0Zuw7tZ3tJahLQ/132","comment_is_top":false,"comment_ctime":1637026508,"is_pvip":false,"replies":[{"id":116910,"content":"架构不能说解决，严谨的说是“应对”或者“降低”软件规模带来的复杂度","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1637108588,"ip_address":"","comment_id":321726,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"机器语言(晦涩难懂)，汇编语言(稍微易理解)，高级语言(编程易懂)，架构(解决软件危机)","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533646,"discussion_content":"不过 什么 ？ ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637923683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320491,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1636353180,"is_pvip":false,"replies":[{"id":116196,"content":"感谢指正，“缓解”确实更好 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1636364033,"ip_address":"","comment_id":320491,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"这篇最大的收获是这一段&quot;第一次软件危机的根源在于软件的“逻辑”变得非常复杂，而第二次软件危机主要体现在软件的“扩展”变得非常复杂。结构化程序设计虽然能够解决（也许用“缓解”更合适）软件逻辑的复杂性，但是对于业务变化带来的软件扩展却无能为力&quot;,结构化程序可以缓解复杂度问题，但对扩展性却没有好的应对办法，因为其基本思路（自顶向下分解）是线性或者树状的，而不能支持网状的关系，但这是软件扩展的内在需求，面向对象天然支持网状的关系，让软件的扩展变得更容易！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530581,"discussion_content":"架构不能说解决，严谨的说是“应对”或者“降低”软件规模带来的复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637108588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320490,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1636353020,"is_pvip":false,"replies":[{"id":116200,"content":"很好的解读 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1636374265,"ip_address":"","comment_id":320490,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"软件设计的根本挑战是管理复杂度。软件用来模拟现实世界，由于现实世界的复杂性，软件也同样复杂。我们只能管理复杂度，而不能规避复杂度。复杂性始终存在，通过工具和方法，将一个地方的复杂性转移到另外一个地方：通过将复杂性封装（模块、对象、组件）抽象，降低上层软件设计工作和思考的复杂度。\n显然，结构化编程的模块，面向对象的对象，以及软件架构领域的组件，都是管理复杂度的方法，它们之间并不是互斥，而是相互关联的：在面向对象领域的对象设计中，经常会用到结构化编程来实现对象方法，在软件架构设计中，经常会用到面向对象方法。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530012,"discussion_content":"很好的解读 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636374265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335859,"user_name":"地平线","can_delete":false,"product_type":"c1","uid":1952394,"ip_address":"","ucode":"52213F99782147","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ca/8a/8f64cf86.jpg","comment_is_top":false,"comment_ctime":1645725085,"is_pvip":false,"replies":[{"id":122733,"content":"对的，降低复杂度才是架构设计的终极目的。","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1645754726,"ip_address":"","comment_id":335859,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"复杂性虽然可以被结构化编程，面向对象，架构设计降低，但复杂性无法消失。模块内部变得简单，但模块与模块之间的联系却变得复杂。将软件分解对结构，类，软件架构的设计者也提出了极高的要求。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553150,"discussion_content":"对的，降低复杂度才是架构设计的终极目的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645754726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332845,"user_name":"沐雪","can_delete":false,"product_type":"c1","uid":1028301,"ip_address":"","ucode":"0C42BF0D75FD9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","comment_is_top":false,"comment_ctime":1643724409,"is_pvip":false,"replies":[{"id":121708,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1644027905,"ip_address":"","comment_id":332845,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"通过讲解软件的发展历史，来引出架构的生产。即 什么是架构，为啥会有架构，架构究竟是如何解决问题？\n软件的发展史是一步动态发展的过程（类似生物进化），适者生存。但是只能随着环境、随着业务发展变化而不断的适应，才能生存下来。而当环境变了，则又要取寻找合适的方式适应。所以，根据就没有银弹能解决一个动态发展中遇到的所有问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549489,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332714,"user_name":"庄小P","can_delete":false,"product_type":"c1","uid":1489063,"ip_address":"","ucode":"A71FA01F713790","user_header":"","comment_is_top":false,"comment_ctime":1643513550,"is_pvip":false,"replies":[{"id":121694,"content":"这个理解不太正确，并不是每次技术发展都是将细节抽象","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1644027409,"ip_address":"","comment_id":332714,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"对于不同的问题，在不同的历史局限性下，往往会有人想出当时最符合的一种解决方案。为了适应变化，我们不断得将细节抽象出来，变得更加可拓展。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549475,"discussion_content":"这个理解不太正确，并不是每次技术发展都是将细节抽象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331369,"user_name":"shichen501","can_delete":false,"product_type":"c1","uid":1542736,"ip_address":"","ucode":"A92D3BA6CA546E","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/50/1ac12c3c.jpg","comment_is_top":false,"comment_ctime":1642563777,"is_pvip":false,"replies":[{"id":121117,"content":"唯一不变的是变化 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1642645242,"ip_address":"","comment_id":331369,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计都是在时代大背景下提出的解决方案, 正如作者描述的, 软件生产力远远跟不上硬件和业务的发展事实并没有发生转变, 所有上述所有的方案都不能成为银弹\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549475,"discussion_content":"这个理解不太正确，并不是每次技术发展都是将细节抽象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644027409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329023,"user_name":"蓝士钦","can_delete":false,"product_type":"c1","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1641032275,"is_pvip":false,"replies":[{"id":119963,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1641351156,"ip_address":"","comment_id":329023,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"软件开发领域最大的挑战是在有限的资源下应对复杂度和变更，在资源有限的情况下寻找平衡点，所以没有银弹。\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547345,"discussion_content":"唯一不变的是变化 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642645242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324839,"user_name":"逆向","can_delete":false,"product_type":"c1","uid":1089426,"ip_address":"","ucode":"745C18035146C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/92/a3150976.jpg","comment_is_top":false,"comment_ctime":1638677843,"is_pvip":false,"replies":[{"id":117925,"content":"正解，考虑环境和业务变化，这点很赞","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638786454,"ip_address":"","comment_id":324839,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"软件开发的发展史：平铺直叙式机器语言——逻辑过于复杂导致第一次软件危机———-结构化程序设计，“自顶向下，模块化”的设计思想———扩展成为平静导致第二次软件危机————面向对象编程————-软件架构，在整个的发展历史中，每种解决方案都被当作银蛋，但是事实总会证明不是，我理解本质上是因为软件是在不断进化的，当时的解决方案只能解决当前的问题，而软件不是一个孤岛，它依赖周围的东西，比如硬件资源，软件本身的复杂度变化和周围依赖的变化，都是当前节点不可预测的，所以并没有所谓银蛋。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543909,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641351156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323250,"user_name":"陈","can_delete":false,"product_type":"c1","uid":1213540,"ip_address":"","ucode":"CBCB838773574F","user_header":"https://static001.geekbang.org/account/avatar/00/12/84/64/0c3e17bb.jpg","comment_is_top":false,"comment_ctime":1637804002,"is_pvip":false,"replies":[{"id":117360,"content":"不过 什么 ？ ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1637923683,"ip_address":"","comment_id":323250,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计这些都是为了保证软件的开发处于朝向目标的正确道路上，但很遗憾的事实是，软件开发过程的挑战，一是复杂和变更，二是资源有限。复杂可能会导致使用了不合理或错误的方法，资源有限则是关注成本和收益的平衡。所以软开领域不光关注技术上如何实现，也关注成本和收益。架构设计等等方法论本质上是一定程度上解决这两个问题。\n不过，","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533646,"discussion_content":"不过 什么 ？ ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637923683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321726,"user_name":"ting.stu","can_delete":false,"product_type":"c1","uid":1127581,"ip_address":"","ucode":"111FA8B6F426FC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo4dq6xsbAeYcwz6gfNjvUeNicBCNPosLHtDugXRTR3q4Vk7fgSVUyzCJh7JFibtv0Zuw7tZ3tJahLQ/132","comment_is_top":false,"comment_ctime":1637026508,"is_pvip":false,"replies":[{"id":116910,"content":"架构不能说解决，严谨的说是“应对”或者“降低”软件规模带来的复杂度","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1637108588,"ip_address":"","comment_id":321726,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"机器语言(晦涩难懂)，汇编语言(稍微易理解)，高级语言(编程易懂)，架构(解决软件危机)","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530581,"discussion_content":"架构不能说解决，严谨的说是“应对”或者“降低”软件规模带来的复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637108588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320491,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1636353180,"is_pvip":false,"replies":[{"id":116196,"content":"感谢指正，“缓解”确实更好 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1636364033,"ip_address":"","comment_id":320491,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"这篇最大的收获是这一段&quot;第一次软件危机的根源在于软件的“逻辑”变得非常复杂，而第二次软件危机主要体现在软件的“扩展”变得非常复杂。结构化程序设计虽然能够解决（也许用“缓解”更合适）软件逻辑的复杂性，但是对于业务变化带来的软件扩展却无能为力&quot;,结构化程序可以缓解复杂度问题，但对扩展性却没有好的应对办法，因为其基本思路（自顶向下分解）是线性或者树状的，而不能支持网状的关系，但这是软件扩展的内在需求，面向对象天然支持网状的关系，让软件的扩展变得更容易！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530013,"discussion_content":"感谢指正，“缓解”确实更好 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636364033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320490,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1636353020,"is_pvip":false,"replies":[{"id":116200,"content":"很好的解读 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1636374265,"ip_address":"","comment_id":320490,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"软件设计的根本挑战是管理复杂度。软件用来模拟现实世界，由于现实世界的复杂性，软件也同样复杂。我们只能管理复杂度，而不能规避复杂度。复杂性始终存在，通过工具和方法，将一个地方的复杂性转移到另外一个地方：通过将复杂性封装（模块、对象、组件）抽象，降低上层软件设计工作和思考的复杂度。\n显然，结构化编程的模块，面向对象的对象，以及软件架构领域的组件，都是管理复杂度的方法，它们之间并不是互斥，而是相互关联的：在面向对象领域的对象设计中，经常会用到结构化编程来实现对象方法，在软件架构设计中，经常会用到面向对象方法。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530013,"discussion_content":"感谢指正，“缓解”确实更好 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636364033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313741,"user_name":"do re mi fa","can_delete":false,"product_type":"c1","uid":2784420,"ip_address":"","ucode":"D6118C89DAD852","user_header":"https://static001.geekbang.org/account/avatar/00/2a/7c/a4/10dd0c22.jpg","comment_is_top":false,"comment_ctime":1632642393,"is_pvip":false,"replies":[{"id":113715,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1632792445,"ip_address":"","comment_id":313741,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计各自解决不同的问题，结构化编程通过“自顶向下、结构化、模块化”的方法降低软件复杂度，面向对象编程解决业务变化带来的扩展难度，软件工程只能一定程度上缓解并不能根除软件危机，架构设计只能解决多部分组成的系统在设计方面的问题，每一种新方法的产生都是解决当下存在的问题，技术在进步，软件行业在发展，未来也会产生新的问题，不可能存在一劳永逸的“银弹”","like_count":0},{"had_liked":false,"id":311386,"user_name":"Mew151","can_delete":false,"product_type":"c1","uid":1002201,"ip_address":"","ucode":"D4793F5874F345","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","comment_is_top":false,"comment_ctime":1631196872,"is_pvip":false,"replies":[{"id":112892,"content":"MOV AX，2000H；将16位数据2000H传送到AX寄存器\nMOV AL，20H；将8位数据20H传送到AL寄存器\nMOV AX，BX；将BX寄存器的16位数据传送到AX寄存器\nMOV AL，[2000H]；将2000H单元的内容传送到AL寄存器\n\n参考：https:&#47;&#47;www.jianshu.com&#47;p&#47;8c445c64d9b9","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1631325649,"ip_address":"","comment_id":311386,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"华仔，mov ax,bx 应该是把寄存器ax移动到bx吧\n在csapp 3rd这本书中3.4.2节中是这样描述的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527456,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632792445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311209,"user_name":"chuenfaiy","can_delete":false,"product_type":"c1","uid":1291234,"ip_address":"","ucode":"71F1898C8CACA5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b3/e2/7bdc7255.jpg","comment_is_top":false,"comment_ctime":1631105502,"is_pvip":false,"replies":[{"id":112774,"content":"正确","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1631147884,"ip_address":"","comment_id":311209,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"因为软件的设计是跟问题的上下文（场景）绑定的，不同的情况下会有不同的设计，并且问题的集合是无穷大的、不可枚举的，所以也就不存在一种适用任何场合的软件设计方法，软件设计方法只能一系列特定情况下的经验方法论","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526522,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631147884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301593,"user_name":"danny_lklk","can_delete":false,"product_type":"c1","uid":2166211,"ip_address":"","ucode":"EE87C7FB6CD4F6","user_header":"https://static001.geekbang.org/account/avatar/00/21/0d/c3/6d3c50aa.jpg","comment_is_top":false,"comment_ctime":1625755234,"is_pvip":false,"replies":[{"id":109208,"content":"这是反证法么？ 哈哈","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1625833835,"ip_address":"","comment_id":301593,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"反过来想，要是软件有银弹，那么也就意味着对应的业务和处理的问题有一套通用的解决思路，但实际是不可能的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523035,"discussion_content":"这是反证法么？ 哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625833835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297523,"user_name":"Philip","can_delete":false,"product_type":"c1","uid":1534652,"ip_address":"","ucode":"610791D1D1963E","user_header":"https://static001.geekbang.org/account/avatar/00/17/6a/bc/b08ff2c9.jpg","comment_is_top":false,"comment_ctime":1623594808,"is_pvip":false,"replies":[{"id":108045,"content":"赞同","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1623715015,"ip_address":"","comment_id":297523,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"主要原因是因为随着程序或者说时代发展，需求不断提升。而这些最终只是解决当时提出的一些问题，成为它们的解决方案，但是当面临新的问题时，这又行不通了……","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521845,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623715015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297049,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1623291095,"is_pvip":false,"replies":[{"id":107905,"content":"“进化”才是关键 ！","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1623320032,"ip_address":"","comment_id":297049,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"为什么没有“银弹”？因为软件开发最终的目的有两个1.实现商业功能2.提高效率。商业逻辑的挖掘，越来越复杂，提高软件开发，运行，部署，维护的效率越来越高。围绕这两个目标，进步是没有止境的，这就好像是进化，一直在不停的前进。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521695,"discussion_content":"“进化”才是关键 ！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623320032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297046,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1623290600,"is_pvip":false,"replies":[{"id":107906,"content":"提炼到位","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1623320064,"ip_address":"","comment_id":297046,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"20世纪60年代，第一次软件危机是因为软件逻辑非常复杂，解决方法：软件工程和结构化开发\n20世纪80年代，第二次软件危机是因为软件扩展变得非常复杂，解决方法：面向对象设计和开发，java, c#语言的出现，将面向对象推向了开发霸主地位\n20世纪90年代，随着软件规模进一步扩大和复杂，如何设计如此众多的组件关系成了新的问题，这就促使软件架构一词的产生。软件架构，就是研究系统的组成结构，如何组织构成系统的组件关系以提高系统的运行效率，面向功能可扩展的同时降低耦合性","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521695,"discussion_content":"“进化”才是关键 ！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623320032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288689,"user_name":"Geek_b6e6bc","can_delete":false,"product_type":"c1","uid":2559741,"ip_address":"","ucode":"0F09EFE0BF48BD","user_header":"","comment_is_top":false,"comment_ctime":1618626090,"is_pvip":false,"replies":[{"id":104820,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618713620,"ip_address":"","comment_id":288689,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"老师 回答下留的问题，结构化编程 面向对象 软件架构 在当时提出的年代也许是当时的主流银弹，但现在已经是2021年了，社会 科技 历史的发展已经更加进步，需求越来越多，软件越来越复杂，我的理解 没有一种软件模式永远为王，像商业模式一样，只能说在特定的阶段解决了特定的问题，像今天 互联网的发展促进了 微服务 分布式这些的发展一样，未来可能会有更高的技术理念诞生","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518708,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618713620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286709,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1617519082,"is_pvip":false,"replies":[{"id":104167,"content":"总结的不错。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1617679774,"ip_address":"","comment_id":286709,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"第一次软件危机是因为逻辑变得很复杂，第二次软件危机是因为扩展性变的复杂。归根结底，是因为现实世界的需求变的复杂，人类社会在不停向前发展，才使得结构化编程思想，面向对象编程，软件架构只是暂时满足了一个时段的发展需要，但无法成为适合一切的银蛋。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518068,"discussion_content":"总结的不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617679774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286049,"user_name":"Aiur","can_delete":false,"product_type":"c1","uid":1230177,"ip_address":"","ucode":"FE085B990495E3","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/61/a50108d7.jpg","comment_is_top":false,"comment_ctime":1617119552,"is_pvip":false,"replies":[{"id":103864,"content":"好像很有哲理 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1617154793,"ip_address":"","comment_id":286049,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"过去的每个时代都有属于自己的银弹，银弹是时代的送葬者，没有迎来银弹的时代将走向停滞与内卷。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517856,"discussion_content":"好像很有哲理 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617154793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313741,"user_name":"do re mi fa","can_delete":false,"product_type":"c1","uid":2784420,"ip_address":"","ucode":"D6118C89DAD852","user_header":"https://static001.geekbang.org/account/avatar/00/2a/7c/a4/10dd0c22.jpg","comment_is_top":false,"comment_ctime":1632642393,"is_pvip":false,"replies":[{"id":113715,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1632792445,"ip_address":"","comment_id":313741,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计各自解决不同的问题，结构化编程通过“自顶向下、结构化、模块化”的方法降低软件复杂度，面向对象编程解决业务变化带来的扩展难度，软件工程只能一定程度上缓解并不能根除软件危机，架构设计只能解决多部分组成的系统在设计方面的问题，每一种新方法的产生都是解决当下存在的问题，技术在进步，软件行业在发展，未来也会产生新的问题，不可能存在一劳永逸的“银弹”","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527456,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632792445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311386,"user_name":"Mew151","can_delete":false,"product_type":"c1","uid":1002201,"ip_address":"","ucode":"D4793F5874F345","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","comment_is_top":false,"comment_ctime":1631196872,"is_pvip":false,"replies":[{"id":112892,"content":"MOV AX，2000H；将16位数据2000H传送到AX寄存器\nMOV AL，20H；将8位数据20H传送到AL寄存器\nMOV AX，BX；将BX寄存器的16位数据传送到AX寄存器\nMOV AL，[2000H]；将2000H单元的内容传送到AL寄存器\n\n参考：https:&#47;&#47;www.jianshu.com&#47;p&#47;8c445c64d9b9","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1631325649,"ip_address":"","comment_id":311386,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"华仔，mov ax,bx 应该是把寄存器ax移动到bx吧\n在csapp 3rd这本书中3.4.2节中是这样描述的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526580,"discussion_content":"MOV AX，2000H；将16位数据2000H传送到AX寄存器\nMOV AL，20H；将8位数据20H传送到AL寄存器\nMOV AX，BX；将BX寄存器的16位数据传送到AX寄存器\nMOV AL，[2000H]；将2000H单元的内容传送到AL寄存器\n\n参考：https://www.jianshu.com/p/8c445c64d9b9","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631325649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","nickname":"Mew151","note":"","ucode":"D4793F5874F345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393250,"discussion_content":"我看了一下你引用的那篇文章，感觉可能是写错了。《深入理解计算机系统》第3版英文版（简称csapp, 3rd edition）中描述的是mov S,D，其中S表示source，D表示Destination\n另外，这篇文章是csapp的笔记：https://blog.csdn.net/sixdaycoder/article/details/48245845\n有时间的话可否再确认一下？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631326478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311209,"user_name":"chuenfaiy","can_delete":false,"product_type":"c1","uid":1291234,"ip_address":"","ucode":"71F1898C8CACA5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b3/e2/7bdc7255.jpg","comment_is_top":false,"comment_ctime":1631105502,"is_pvip":false,"replies":[{"id":112774,"content":"正确","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1631147884,"ip_address":"","comment_id":311209,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"因为软件的设计是跟问题的上下文（场景）绑定的，不同的情况下会有不同的设计，并且问题的集合是无穷大的、不可枚举的，所以也就不存在一种适用任何场合的软件设计方法，软件设计方法只能一系列特定情况下的经验方法论","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526580,"discussion_content":"MOV AX，2000H；将16位数据2000H传送到AX寄存器\nMOV AL，20H；将8位数据20H传送到AL寄存器\nMOV AX，BX；将BX寄存器的16位数据传送到AX寄存器\nMOV AL，[2000H]；将2000H单元的内容传送到AL寄存器\n\n参考：https://www.jianshu.com/p/8c445c64d9b9","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631325649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","nickname":"Mew151","note":"","ucode":"D4793F5874F345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393250,"discussion_content":"我看了一下你引用的那篇文章，感觉可能是写错了。《深入理解计算机系统》第3版英文版（简称csapp, 3rd edition）中描述的是mov S,D，其中S表示source，D表示Destination\n另外，这篇文章是csapp的笔记：https://blog.csdn.net/sixdaycoder/article/details/48245845\n有时间的话可否再确认一下？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631326478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301593,"user_name":"danny_lklk","can_delete":false,"product_type":"c1","uid":2166211,"ip_address":"","ucode":"EE87C7FB6CD4F6","user_header":"https://static001.geekbang.org/account/avatar/00/21/0d/c3/6d3c50aa.jpg","comment_is_top":false,"comment_ctime":1625755234,"is_pvip":false,"replies":[{"id":109208,"content":"这是反证法么？ 哈哈","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1625833835,"ip_address":"","comment_id":301593,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"反过来想，要是软件有银弹，那么也就意味着对应的业务和处理的问题有一套通用的解决思路，但实际是不可能的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526522,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631147884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297523,"user_name":"Philip","can_delete":false,"product_type":"c1","uid":1534652,"ip_address":"","ucode":"610791D1D1963E","user_header":"https://static001.geekbang.org/account/avatar/00/17/6a/bc/b08ff2c9.jpg","comment_is_top":false,"comment_ctime":1623594808,"is_pvip":false,"replies":[{"id":108045,"content":"赞同","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1623715015,"ip_address":"","comment_id":297523,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"主要原因是因为随着程序或者说时代发展，需求不断提升。而这些最终只是解决当时提出的一些问题，成为它们的解决方案，但是当面临新的问题时，这又行不通了……","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523035,"discussion_content":"这是反证法么？ 哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625833835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297049,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1623291095,"is_pvip":false,"replies":[{"id":107905,"content":"“进化”才是关键 ！","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1623320032,"ip_address":"","comment_id":297049,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"为什么没有“银弹”？因为软件开发最终的目的有两个1.实现商业功能2.提高效率。商业逻辑的挖掘，越来越复杂，提高软件开发，运行，部署，维护的效率越来越高。围绕这两个目标，进步是没有止境的，这就好像是进化，一直在不停的前进。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521845,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623715015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297046,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1623290600,"is_pvip":false,"replies":[{"id":107906,"content":"提炼到位","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1623320064,"ip_address":"","comment_id":297046,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"20世纪60年代，第一次软件危机是因为软件逻辑非常复杂，解决方法：软件工程和结构化开发\n20世纪80年代，第二次软件危机是因为软件扩展变得非常复杂，解决方法：面向对象设计和开发，java, c#语言的出现，将面向对象推向了开发霸主地位\n20世纪90年代，随着软件规模进一步扩大和复杂，如何设计如此众多的组件关系成了新的问题，这就促使软件架构一词的产生。软件架构，就是研究系统的组成结构，如何组织构成系统的组件关系以提高系统的运行效率，面向功能可扩展的同时降低耦合性","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521693,"discussion_content":"提炼到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623320064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288689,"user_name":"Geek_b6e6bc","can_delete":false,"product_type":"c1","uid":2559741,"ip_address":"","ucode":"0F09EFE0BF48BD","user_header":"","comment_is_top":false,"comment_ctime":1618626090,"is_pvip":false,"replies":[{"id":104820,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618713620,"ip_address":"","comment_id":288689,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"老师 回答下留的问题，结构化编程 面向对象 软件架构 在当时提出的年代也许是当时的主流银弹，但现在已经是2021年了，社会 科技 历史的发展已经更加进步，需求越来越多，软件越来越复杂，我的理解 没有一种软件模式永远为王，像商业模式一样，只能说在特定的阶段解决了特定的问题，像今天 互联网的发展促进了 微服务 分布式这些的发展一样，未来可能会有更高的技术理念诞生","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521693,"discussion_content":"提炼到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623320064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286709,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1617519082,"is_pvip":false,"replies":[{"id":104167,"content":"总结的不错。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1617679774,"ip_address":"","comment_id":286709,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"第一次软件危机是因为逻辑变得很复杂，第二次软件危机是因为扩展性变的复杂。归根结底，是因为现实世界的需求变的复杂，人类社会在不停向前发展，才使得结构化编程思想，面向对象编程，软件架构只是暂时满足了一个时段的发展需要，但无法成为适合一切的银蛋。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518708,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618713620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286049,"user_name":"Aiur","can_delete":false,"product_type":"c1","uid":1230177,"ip_address":"","ucode":"FE085B990495E3","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/61/a50108d7.jpg","comment_is_top":false,"comment_ctime":1617119552,"is_pvip":false,"replies":[{"id":103864,"content":"好像很有哲理 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1617154793,"ip_address":"","comment_id":286049,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"过去的每个时代都有属于自己的银弹，银弹是时代的送葬者，没有迎来银弹的时代将走向停滞与内卷。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518068,"discussion_content":"总结的不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617679774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285524,"user_name":"极客人","can_delete":false,"product_type":"c1","uid":2445847,"ip_address":"","ucode":"D492AA710F6D4E","user_header":"","comment_is_top":false,"comment_ctime":1616857157,"is_pvip":false,"replies":[{"id":103629,"content":"可以尝试做解决方案架构师，主要是要对业务熟悉","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1616927804,"ip_address":"","comment_id":285524,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"代码写的很少，不熟悉编程语言的人能转型做架构吗？","like_count":0},{"had_liked":false,"id":283599,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1299053,"ip_address":"","ucode":"705F0894E64BB3","user_header":"https://static001.geekbang.org/account/avatar/00/13/d2/6d/9499e18a.jpg","comment_is_top":false,"comment_ctime":1615854196,"is_pvip":false,"replies":[{"id":102958,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1615943961,"ip_address":"","comment_id":283599,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"软件的架构设计还是要依赖于具体业务场景，当业务场景变化，技术变化，架构也会变。\n各人理解:所谓的银弹只是一种理念。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517702,"discussion_content":"可以尝试做解决方案架构师，主要是要对业务熟悉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616927804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282791,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1615422361,"is_pvip":false,"replies":[{"id":102640,"content":"我要去看看赫夫曼树才能看懂你说的 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1615427163,"ip_address":"","comment_id":282791,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"一系列解决过程都像是寻找赫夫曼树的过程。\n因为人脑的记忆并不能成数量级化的发展，当复杂度出现了，就要寻找进一步利于人脑记忆理解的解决方案","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516839,"discussion_content":"我要去看看赫夫曼树才能看懂你说的 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615427163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282786,"user_name":"xmeng","can_delete":false,"product_type":"c1","uid":1731543,"ip_address":"","ucode":"C0CA2182BA3B4B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6b/d7/8872624a.jpg","comment_is_top":false,"comment_ctime":1615420180,"is_pvip":false,"replies":[{"id":102637,"content":"变更也是复杂度的一种，我将其归类为可扩展性，影响变更有两个核心因素：可理解和可修改。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1615426827,"ip_address":"","comment_id":282786,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"mark 软件开发最本质的挑战有两个:复杂和变更，而软件的价值是保证业务的响应力，而与之相对的是开发资源的有限，而各种的软件开发方法论，也都是在研究有限的资源下，如何应对着两个挑战，寻找平衡点，实现业务目标，因为是在寻找平衡点，就说明是有取舍的，所以就没有所谓的银弹的存在","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516839,"discussion_content":"我要去看看赫夫曼树才能看懂你说的 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615427163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281042,"user_name":"shark","can_delete":false,"product_type":"c1","uid":1203926,"ip_address":"","ucode":"312FB80175C8FF","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/d6/87189c9d.jpg","comment_is_top":false,"comment_ctime":1614560446,"is_pvip":false,"replies":[{"id":102034,"content":"正解，你看前两年出了中台，最近“云原生”又比较火了 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1614566363,"ip_address":"","comment_id":281042,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"引入新的技术，就会出现新的问题，软件的规模和应用场景不断扩大，也会引起新的问题，技术不断革新，新的方案不断出现，解决现在面临的问题，引出新的问题。变化才是永恒的话题，所以不存在银弹","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516283,"discussion_content":"正解，你看前两年出了中台，最近“云原生”又比较火了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614566363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280527,"user_name":"李兴振","can_delete":false,"product_type":"c1","uid":2004552,"ip_address":"","ucode":"78E54478F38DC1","user_header":"https://static001.geekbang.org/account/avatar/00/1e/96/48/a0c6a06c.jpg","comment_is_top":false,"comment_ctime":1614241390,"is_pvip":false,"replies":[{"id":101830,"content":"业务选手回答正确 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1614246200,"ip_address":"","comment_id":280527,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"无论结构化编程、面向对象编程、软件工程、架构设计，都可比作“工具”，只有真正的人、工具完美结合，不断完善，才能真正为软件领域添砖加瓦。业余选手的回答。哈哈。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516283,"discussion_content":"正解，你看前两年出了中台，最近“云原生”又比较火了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614566363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273398,"user_name":"RMB","can_delete":false,"product_type":"c1","uid":2272121,"ip_address":"","ucode":"5D1F54B93EB5D3","user_header":"https://static001.geekbang.org/account/avatar/00/22/ab/79/e293456e.jpg","comment_is_top":false,"comment_ctime":1610587671,"is_pvip":false,"replies":[{"id":99085,"content":"架构专栏的重点其实就是讲架构技术的本质。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1610613837,"ip_address":"","comment_id":273398,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"从十年后看今天，性质跟技术演进是一样的，技术运用会变得运来越简单，新技术不断涌现，所以需要自己具备短时间掌握新技术的能力，也就是触类旁通的能力，如何锻炼这种能力，则需要在某一领域深耕，因为很多技术本质都是一样的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516124,"discussion_content":"业务选手回答正确 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614246200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269786,"user_name":"东成西就","can_delete":false,"product_type":"c1","uid":2382142,"ip_address":"","ucode":"EACAAF9EBDE8F7","user_header":"https://static001.geekbang.org/account/avatar/00/24/59/3e/ac50b30f.jpg","comment_is_top":false,"comment_ctime":1608785604,"is_pvip":false,"replies":[{"id":97841,"content":"你直接点一下播放的浮层，就可以打开整个播放页，里面有进度条、倍速、定时、上一讲、下一讲等功能","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1608805433,"ip_address":"","comment_id":269786,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"咨询下，一次没听完，下次进来要从头听，有木有进度条？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512388,"discussion_content":"你直接点一下播放的浮层，就可以打开整个播放页，里面有进度条、倍速、定时、上一讲、下一讲等功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608805433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252582,"user_name":"idea","can_delete":false,"product_type":"c1","uid":1252848,"ip_address":"","ucode":"621921030982C0","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/f0/59702429.jpg","comment_is_top":false,"comment_ctime":1602390213,"is_pvip":false,"replies":[{"id":92543,"content":"到位������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1602722972,"ip_address":"","comment_id":252582,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"在软件发展的过程中，可以看到内部的程序总是会不断地发生迭代改变，随着业务需求的不断演变，很多原有的设计都会发生变动。设计本质上是一种选择比较适用于当前场景的技术手段，场景在变动也就意味着没有完美的设计，所以这些所谓的“银弹”也就并不会成为最终的“银弹”。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506811,"discussion_content":"到位������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602722972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244649,"user_name":"沈聪","can_delete":false,"product_type":"c1","uid":1284155,"ip_address":"","ucode":"69CB08D21068B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/98/3b/a409d316.jpg","comment_is_top":false,"comment_ctime":1598604316,"is_pvip":false,"replies":[{"id":90062,"content":"生命不息，折腾不止������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1598685419,"ip_address":"","comment_id":244649,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"“银弹”，体现了人类不满与现状的精神，是对“极简”的追求，从而展现出极大的创造力。生生不息，欲望不止。这就是生命的乐趣吧������������","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506811,"discussion_content":"到位������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602722972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285524,"user_name":"极客人","can_delete":false,"product_type":"c1","uid":2445847,"ip_address":"","ucode":"D492AA710F6D4E","user_header":"","comment_is_top":false,"comment_ctime":1616857157,"is_pvip":false,"replies":[{"id":103629,"content":"可以尝试做解决方案架构师，主要是要对业务熟悉","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1616927804,"ip_address":"","comment_id":285524,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"代码写的很少，不熟悉编程语言的人能转型做架构吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517702,"discussion_content":"可以尝试做解决方案架构师，主要是要对业务熟悉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616927804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283599,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1299053,"ip_address":"","ucode":"705F0894E64BB3","user_header":"https://static001.geekbang.org/account/avatar/00/13/d2/6d/9499e18a.jpg","comment_is_top":false,"comment_ctime":1615854196,"is_pvip":false,"replies":[{"id":102958,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1615943961,"ip_address":"","comment_id":283599,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"软件的架构设计还是要依赖于具体业务场景，当业务场景变化，技术变化，架构也会变。\n各人理解:所谓的银弹只是一种理念。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517087,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615943961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282791,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1615422361,"is_pvip":false,"replies":[{"id":102640,"content":"我要去看看赫夫曼树才能看懂你说的 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1615427163,"ip_address":"","comment_id":282791,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"一系列解决过程都像是寻找赫夫曼树的过程。\n因为人脑的记忆并不能成数量级化的发展，当复杂度出现了，就要寻找进一步利于人脑记忆理解的解决方案","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517087,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615943961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282786,"user_name":"xmeng","can_delete":false,"product_type":"c1","uid":1731543,"ip_address":"","ucode":"C0CA2182BA3B4B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6b/d7/8872624a.jpg","comment_is_top":false,"comment_ctime":1615420180,"is_pvip":false,"replies":[{"id":102637,"content":"变更也是复杂度的一种，我将其归类为可扩展性，影响变更有两个核心因素：可理解和可修改。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1615426827,"ip_address":"","comment_id":282786,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"mark 软件开发最本质的挑战有两个:复杂和变更，而软件的价值是保证业务的响应力，而与之相对的是开发资源的有限，而各种的软件开发方法论，也都是在研究有限的资源下，如何应对着两个挑战，寻找平衡点，实现业务目标，因为是在寻找平衡点，就说明是有取舍的，所以就没有所谓的银弹的存在","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516837,"discussion_content":"变更也是复杂度的一种，我将其归类为可扩展性，影响变更有两个核心因素：可理解和可修改。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615426827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281042,"user_name":"shark","can_delete":false,"product_type":"c1","uid":1203926,"ip_address":"","ucode":"312FB80175C8FF","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/d6/87189c9d.jpg","comment_is_top":false,"comment_ctime":1614560446,"is_pvip":false,"replies":[{"id":102034,"content":"正解，你看前两年出了中台，最近“云原生”又比较火了 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1614566363,"ip_address":"","comment_id":281042,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"引入新的技术，就会出现新的问题，软件的规模和应用场景不断扩大，也会引起新的问题，技术不断革新，新的方案不断出现，解决现在面临的问题，引出新的问题。变化才是永恒的话题，所以不存在银弹","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516837,"discussion_content":"变更也是复杂度的一种，我将其归类为可扩展性，影响变更有两个核心因素：可理解和可修改。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615426827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280527,"user_name":"李兴振","can_delete":false,"product_type":"c1","uid":2004552,"ip_address":"","ucode":"78E54478F38DC1","user_header":"https://static001.geekbang.org/account/avatar/00/1e/96/48/a0c6a06c.jpg","comment_is_top":false,"comment_ctime":1614241390,"is_pvip":false,"replies":[{"id":101830,"content":"业务选手回答正确 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1614246200,"ip_address":"","comment_id":280527,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"无论结构化编程、面向对象编程、软件工程、架构设计，都可比作“工具”，只有真正的人、工具完美结合，不断完善，才能真正为软件领域添砖加瓦。业余选手的回答。哈哈。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516124,"discussion_content":"业务选手回答正确 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614246200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273398,"user_name":"RMB","can_delete":false,"product_type":"c1","uid":2272121,"ip_address":"","ucode":"5D1F54B93EB5D3","user_header":"https://static001.geekbang.org/account/avatar/00/22/ab/79/e293456e.jpg","comment_is_top":false,"comment_ctime":1610587671,"is_pvip":false,"replies":[{"id":99085,"content":"架构专栏的重点其实就是讲架构技术的本质。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1610613837,"ip_address":"","comment_id":273398,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"从十年后看今天，性质跟技术演进是一样的，技术运用会变得运来越简单，新技术不断涌现，所以需要自己具备短时间掌握新技术的能力，也就是触类旁通的能力，如何锻炼这种能力，则需要在某一领域深耕，因为很多技术本质都是一样的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513591,"discussion_content":"架构专栏的重点其实就是讲架构技术的本质。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610613837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269786,"user_name":"东成西就","can_delete":false,"product_type":"c1","uid":2382142,"ip_address":"","ucode":"EACAAF9EBDE8F7","user_header":"https://static001.geekbang.org/account/avatar/00/24/59/3e/ac50b30f.jpg","comment_is_top":false,"comment_ctime":1608785604,"is_pvip":false,"replies":[{"id":97841,"content":"你直接点一下播放的浮层，就可以打开整个播放页，里面有进度条、倍速、定时、上一讲、下一讲等功能","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1608805433,"ip_address":"","comment_id":269786,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"咨询下，一次没听完，下次进来要从头听，有木有进度条？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513591,"discussion_content":"架构专栏的重点其实就是讲架构技术的本质。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610613837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252582,"user_name":"idea","can_delete":false,"product_type":"c1","uid":1252848,"ip_address":"","ucode":"621921030982C0","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/f0/59702429.jpg","comment_is_top":false,"comment_ctime":1602390213,"is_pvip":false,"replies":[{"id":92543,"content":"到位������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1602722972,"ip_address":"","comment_id":252582,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"在软件发展的过程中，可以看到内部的程序总是会不断地发生迭代改变，随着业务需求的不断演变，很多原有的设计都会发生变动。设计本质上是一种选择比较适用于当前场景的技术手段，场景在变动也就意味着没有完美的设计，所以这些所谓的“银弹”也就并不会成为最终的“银弹”。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512388,"discussion_content":"你直接点一下播放的浮层，就可以打开整个播放页，里面有进度条、倍速、定时、上一讲、下一讲等功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608805433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244649,"user_name":"沈聪","can_delete":false,"product_type":"c1","uid":1284155,"ip_address":"","ucode":"69CB08D21068B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/98/3b/a409d316.jpg","comment_is_top":false,"comment_ctime":1598604316,"is_pvip":false,"replies":[{"id":90062,"content":"生命不息，折腾不止������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1598685419,"ip_address":"","comment_id":244649,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"“银弹”，体现了人类不满与现状的精神，是对“极简”的追求，从而展现出极大的创造力。生生不息，欲望不止。这就是生命的乐趣吧������������","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504654,"discussion_content":"生命不息，折腾不止������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598685419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226437,"user_name":"阿飞","can_delete":false,"product_type":"c1","uid":2019819,"ip_address":"","ucode":"BDF8FF50DE232C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/d1/eb/0c7cd8fb.jpg","comment_is_top":false,"comment_ctime":1592102746,"is_pvip":false,"replies":[{"id":83685,"content":"分析到位","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1592303272,"ip_address":"","comment_id":226437,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"为何结构化编程、面向对象编程、软件工程、架构设计最后都没有成为软件领域的银弹？\n--上述方法论都是通过提高抽象层次来“缓解”庞大软件项目所带来的的复杂度问题。但随着科技的发展，业务会逐渐复杂，导致软件项目愈加复杂，当该层级的抽象层次无法帮助人们拆分整个系统时，便会产生更高层级的抽象。\n也即随着软件复杂度激增，总有一天，“架构”层面的抽象也无法理解系统，此时便需要使用更高级别的抽象理解问题","like_count":0},{"had_liked":false,"id":197127,"user_name":"Geek_201908","can_delete":false,"product_type":"c1","uid":1623098,"ip_address":"","ucode":"8938A58E47F8F3","user_header":"","comment_is_top":false,"comment_ctime":1585359436,"is_pvip":false,"replies":[{"id":74874,"content":"这种历史整理还是挺麻烦的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539698,"ip_address":"","comment_id":197127,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"在软件行业干了有10年，第一次系统的了解了软件开发的背景和软件架构设计出现的背景。\n软件开发：  机器语言-&gt; 汇编语言 -&gt; 高级语言 (lisp,cobol等， 后面有C&#47;C++&#47;Java&#47;Python&#47;GO等等)\n软件架构设计背景： 结构化编程 （可能是我接触时间最长的编程思想。。。C语言） 、 面向对象编程（目前刚刚入门）、软件工程 、  架构设计","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489453,"discussion_content":"这种历史整理还是挺麻烦的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182810,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1582869419,"is_pvip":false,"replies":[{"id":72870,"content":"哈哈，不要逃避，两者应用场景不同","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1584426883,"ip_address":"","comment_id":182810,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"数据结构和算法退居二线，架构成了软件系统关注的焦点。这是不是一个逃避学习算法的借口。。\n\n架构是为了解决软件工程的危机？\n\n软件工程提出了软件声明周期的概念。而解决危机的办法应该关照软件声明周期的各个阶段。\n\n这样看来，开发时期选用何种语言，如何管理源码，如何测试，也应该算是架构的一部分。而不是以前以为的那样，架构就是一个软件是如何部署的。\n\n对架构概念的理解拓宽了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489453,"discussion_content":"这种历史整理还是挺麻烦的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153926,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1574331947,"is_pvip":false,"replies":[{"id":59855,"content":"软考跟不上实际的技术发展很正常😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1574761627,"ip_address":"","comment_id":153926,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"之前准备软考时老是看到结构化方法，心想为啥平时工作都没用过呢。如今读了本文的历史发展才明白，原来那套早过时了，天啊这软考的考点也太跟不上时代了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475326,"discussion_content":"软考跟不上实际的技术发展很正常😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574761627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120394,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1564879355,"is_pvip":false,"replies":[{"id":44276,"content":"前端是用户交互的一种方式，用户交互也是经历了很多代技术迭代，前端本身语言也有几种，只是相比来说少一些","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1564968465,"ip_address":"","comment_id":120394,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"老师，为什么后端语言层出不穷，而前端语言或者sql语言却一种就够了呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475326,"discussion_content":"软考跟不上实际的技术发展很正常😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574761627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113444,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1563011758,"is_pvip":false,"replies":[{"id":41836,"content":"解析到位👍👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1563356550,"ip_address":"","comment_id":113444,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"无论是结构化还是面向对象主要解决的是代码如何组织的问题。软件架构解决的是代码组织的组织问题。软件工程则需要规范架构设计，模块设计，编码等研发过程。随着业务的发展，最要命的是一些紧急需求的开发，这些需求往往没有经过良好的设计导致架构逐渐腐化，结构化被打破，最终变成一个焦油坑。因此也就没有银弹了。世间唯一不变的是变化，不断重构既有代码持续做熵减，才是银弹。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458227,"discussion_content":"解析到位👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563356550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100484,"user_name":"l_j_dota_1111","can_delete":false,"product_type":"c1","uid":1563464,"ip_address":"","ucode":"5E6D906246E506","user_header":"","comment_is_top":false,"comment_ctime":1559564045,"is_pvip":false,"replies":[{"id":36281,"content":"这个场景有点疑问呀，百万级数据如果全部展示，屏幕肯定放不下，会显得密密麻麻，用户没法看吧，应该用分页或者分层，目前地图都是这样做的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1559617003,"ip_address":"","comment_id":100484,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"我是做webgis，其实大部分的精力都是放在前端和数据库存储上，后端的作用就是给前段提供查询接口，向前端提供数据。由于数据库需要支持空间数据，所以用了postgis。目前遇到的最主要问题就是前端对数据的渲染能力，百万级一起显示，需要大约5秒钟，目前还没有很好的解决方案。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458227,"discussion_content":"解析到位👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563356550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96681,"user_name":"超","can_delete":false,"product_type":"c1","uid":1101952,"ip_address":"","ucode":"F45F5ED7073E8A","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/80/67e3312c.jpg","comment_is_top":false,"comment_ctime":1558487529,"is_pvip":false,"replies":[{"id":34828,"content":"说的很好👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1558667083,"ip_address":"","comment_id":96681,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"从机器语言到汇编语言到结构化语言到高级语言，从模块到组件到对象，穿过历史的层层迷雾，都是一步一步随着硬件的速度提升以及软件复杂度的提升的&quot;当时背景下的&quot;项目的复杂程度逐渐产生的，都是为了解决&quot;当时最大的痛点&quot;而推动产生的，时代在发展和变化，前人的积累为后续做了一定的基础，但后人总是会遇到新的问题，因为人们的需求在变化，从而遇到一次又一次的软件危机，从而总结出一个又一个的方法论，但时间的车轮仍然在前进，只要在前进，就没有一蹴而就的方法，就没有一成不变的框架，就没有万能的架构设计，因此，就没有银弹。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452569,"discussion_content":"这个场景有点疑问呀，百万级数据如果全部展示，屏幕肯定放不下，会显得密密麻麻，用户没法看吧，应该用分页或者分层，目前地图都是这样做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559617003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79390,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1465315,"ip_address":"","ucode":"0A86A40B9FBAB4","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/e3/e1072e43.jpg","comment_is_top":false,"comment_ctime":1553473799,"is_pvip":false,"replies":[{"id":29075,"content":"很多读者说声音很好听😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1553557750,"ip_address":"","comment_id":79390,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"听了前几节，感觉又像回到了大学专业课堂，组成原理、软件工程，但可能是时长篇幅问题作者只是点到为止，希望后面的课程能够更多一点架构设计方面的干货！\n另外，希望平台可以更换此课程的讲述人，用有课程专业背景的人来读书，因为听到各种专业词汇被读错感觉真的是很尴尬😅（比如本课LISP,FORTRAN的发音）","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450968,"discussion_content":"说的很好👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558667083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37504,"user_name":"小狮子辛巴","can_delete":false,"product_type":"c1","uid":1088420,"ip_address":"","ucode":"B9676851AF3370","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/a4/ddb31c5b.jpg","comment_is_top":false,"comment_ctime":1541629625,"is_pvip":false,"replies":[{"id":13617,"content":"方法论，系统思维，说起来比较虚，但你领悟了后会知道其作用很大","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541752191,"ip_address":"","comment_id":37504,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"看评论发现自己身上一个缺点：对问题的解决没有清晰的脉络。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444479,"discussion_content":"很多读者说声音很好听😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553557750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226437,"user_name":"阿飞","can_delete":false,"product_type":"c1","uid":2019819,"ip_address":"","ucode":"BDF8FF50DE232C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/d1/eb/0c7cd8fb.jpg","comment_is_top":false,"comment_ctime":1592102746,"is_pvip":false,"replies":[{"id":83685,"content":"分析到位","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1592303272,"ip_address":"","comment_id":226437,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"为何结构化编程、面向对象编程、软件工程、架构设计最后都没有成为软件领域的银弹？\n--上述方法论都是通过提高抽象层次来“缓解”庞大软件项目所带来的的复杂度问题。但随着科技的发展，业务会逐渐复杂，导致软件项目愈加复杂，当该层级的抽象层次无法帮助人们拆分整个系统时，便会产生更高层级的抽象。\n也即随着软件复杂度激增，总有一天，“架构”层面的抽象也无法理解系统，此时便需要使用更高级别的抽象理解问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498242,"discussion_content":"分析到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592303272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197127,"user_name":"Geek_201908","can_delete":false,"product_type":"c1","uid":1623098,"ip_address":"","ucode":"8938A58E47F8F3","user_header":"","comment_is_top":false,"comment_ctime":1585359436,"is_pvip":false,"replies":[{"id":74874,"content":"这种历史整理还是挺麻烦的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539698,"ip_address":"","comment_id":197127,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"在软件行业干了有10年，第一次系统的了解了软件开发的背景和软件架构设计出现的背景。\n软件开发：  机器语言-&gt; 汇编语言 -&gt; 高级语言 (lisp,cobol等， 后面有C&#47;C++&#47;Java&#47;Python&#47;GO等等)\n软件架构设计背景： 结构化编程 （可能是我接触时间最长的编程思想。。。C语言） 、 面向对象编程（目前刚刚入门）、软件工程 、  架构设计","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498242,"discussion_content":"分析到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592303272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182810,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1582869419,"is_pvip":false,"replies":[{"id":72870,"content":"哈哈，不要逃避，两者应用场景不同","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1584426883,"ip_address":"","comment_id":182810,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"数据结构和算法退居二线，架构成了软件系统关注的焦点。这是不是一个逃避学习算法的借口。。\n\n架构是为了解决软件工程的危机？\n\n软件工程提出了软件声明周期的概念。而解决危机的办法应该关照软件声明周期的各个阶段。\n\n这样看来，开发时期选用何种语言，如何管理源码，如何测试，也应该算是架构的一部分。而不是以前以为的那样，架构就是一个软件是如何部署的。\n\n对架构概念的理解拓宽了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485461,"discussion_content":"哈哈，不要逃避，两者应用场景不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584426883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153926,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1574331947,"is_pvip":false,"replies":[{"id":59855,"content":"软考跟不上实际的技术发展很正常😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1574761627,"ip_address":"","comment_id":153926,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"之前准备软考时老是看到结构化方法，心想为啥平时工作都没用过呢。如今读了本文的历史发展才明白，原来那套早过时了，天啊这软考的考点也太跟不上时代了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485461,"discussion_content":"哈哈，不要逃避，两者应用场景不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584426883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120394,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1564879355,"is_pvip":false,"replies":[{"id":44276,"content":"前端是用户交互的一种方式，用户交互也是经历了很多代技术迭代，前端本身语言也有几种，只是相比来说少一些","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1564968465,"ip_address":"","comment_id":120394,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"老师，为什么后端语言层出不穷，而前端语言或者sql语言却一种就够了呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461317,"discussion_content":"前端是用户交互的一种方式，用户交互也是经历了很多代技术迭代，前端本身语言也有几种，只是相比来说少一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113444,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1563011758,"is_pvip":false,"replies":[{"id":41836,"content":"解析到位👍👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1563356550,"ip_address":"","comment_id":113444,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"无论是结构化还是面向对象主要解决的是代码如何组织的问题。软件架构解决的是代码组织的组织问题。软件工程则需要规范架构设计，模块设计，编码等研发过程。随着业务的发展，最要命的是一些紧急需求的开发，这些需求往往没有经过良好的设计导致架构逐渐腐化，结构化被打破，最终变成一个焦油坑。因此也就没有银弹了。世间唯一不变的是变化，不断重构既有代码持续做熵减，才是银弹。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461317,"discussion_content":"前端是用户交互的一种方式，用户交互也是经历了很多代技术迭代，前端本身语言也有几种，只是相比来说少一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100484,"user_name":"l_j_dota_1111","can_delete":false,"product_type":"c1","uid":1563464,"ip_address":"","ucode":"5E6D906246E506","user_header":"","comment_is_top":false,"comment_ctime":1559564045,"is_pvip":false,"replies":[{"id":36281,"content":"这个场景有点疑问呀，百万级数据如果全部展示，屏幕肯定放不下，会显得密密麻麻，用户没法看吧，应该用分页或者分层，目前地图都是这样做的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1559617003,"ip_address":"","comment_id":100484,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"我是做webgis，其实大部分的精力都是放在前端和数据库存储上，后端的作用就是给前段提供查询接口，向前端提供数据。由于数据库需要支持空间数据，所以用了postgis。目前遇到的最主要问题就是前端对数据的渲染能力，百万级一起显示，需要大约5秒钟，目前还没有很好的解决方案。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452569,"discussion_content":"这个场景有点疑问呀，百万级数据如果全部展示，屏幕肯定放不下，会显得密密麻麻，用户没法看吧，应该用分页或者分层，目前地图都是这样做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559617003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96681,"user_name":"超","can_delete":false,"product_type":"c1","uid":1101952,"ip_address":"","ucode":"F45F5ED7073E8A","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/80/67e3312c.jpg","comment_is_top":false,"comment_ctime":1558487529,"is_pvip":false,"replies":[{"id":34828,"content":"说的很好👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1558667083,"ip_address":"","comment_id":96681,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"从机器语言到汇编语言到结构化语言到高级语言，从模块到组件到对象，穿过历史的层层迷雾，都是一步一步随着硬件的速度提升以及软件复杂度的提升的&quot;当时背景下的&quot;项目的复杂程度逐渐产生的，都是为了解决&quot;当时最大的痛点&quot;而推动产生的，时代在发展和变化，前人的积累为后续做了一定的基础，但后人总是会遇到新的问题，因为人们的需求在变化，从而遇到一次又一次的软件危机，从而总结出一个又一个的方法论，但时间的车轮仍然在前进，只要在前进，就没有一蹴而就的方法，就没有一成不变的框架，就没有万能的架构设计，因此，就没有银弹。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450968,"discussion_content":"说的很好👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558667083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79390,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1465315,"ip_address":"","ucode":"0A86A40B9FBAB4","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/e3/e1072e43.jpg","comment_is_top":false,"comment_ctime":1553473799,"is_pvip":false,"replies":[{"id":29075,"content":"很多读者说声音很好听😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1553557750,"ip_address":"","comment_id":79390,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"听了前几节，感觉又像回到了大学专业课堂，组成原理、软件工程，但可能是时长篇幅问题作者只是点到为止，希望后面的课程能够更多一点架构设计方面的干货！\n另外，希望平台可以更换此课程的讲述人，用有课程专业背景的人来读书，因为听到各种专业词汇被读错感觉真的是很尴尬😅（比如本课LISP,FORTRAN的发音）","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444479,"discussion_content":"很多读者说声音很好听😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553557750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37504,"user_name":"小狮子辛巴","can_delete":false,"product_type":"c1","uid":1088420,"ip_address":"","ucode":"B9676851AF3370","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/a4/ddb31c5b.jpg","comment_is_top":false,"comment_ctime":1541629625,"is_pvip":false,"replies":[{"id":13617,"content":"方法论，系统思维，说起来比较虚，但你领悟了后会知道其作用很大","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541752191,"ip_address":"","comment_id":37504,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"看评论发现自己身上一个缺点：对问题的解决没有清晰的脉络。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428371,"discussion_content":"方法论，系统思维，说起来比较虚，但你领悟了后会知道其作用很大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541752191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30414,"user_name":"a煤炭","can_delete":false,"product_type":"c1","uid":1206603,"ip_address":"","ucode":"A155C618421A31","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4b/92b725c0.jpg","comment_is_top":false,"comment_ctime":1538833095,"is_pvip":false,"replies":[{"id":10979,"content":"看内容更激动😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538869301,"ip_address":"","comment_id":30414,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"看评论的有点激动","like_count":0},{"had_liked":false,"id":27346,"user_name":"PiedPiper","can_delete":false,"product_type":"c1","uid":1206210,"ip_address":"","ucode":"83A54312AD89DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/c2/3437bbc7.jpg","comment_is_top":false,"comment_ctime":1537875481,"is_pvip":false,"replies":[{"id":10011,"content":"你已经参透架构设计的其中一个原则👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1537950769,"ip_address":"","comment_id":27346,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"我觉得，这个跟人类进化一样，得走到那一步才会遇到那样的问题，然后才会寻求相应的解决方案。没有什么东西是一蹴而就的。都要有一个发展的过程。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424886,"discussion_content":"你已经参透架构设计的其中一个原则👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537950769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21638,"user_name":"落雨无声","can_delete":false,"product_type":"c1","uid":1215360,"ip_address":"","ucode":"B2E5E5D6D48871","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/80/cc5c6841.jpg","comment_is_top":false,"comment_ctime":1535205007,"is_pvip":false,"replies":[{"id":7695,"content":"第一句话非常关键，知识要串起来才成为系统","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535276053,"ip_address":"","comment_id":21638,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"感觉以前一些一知半解的知识要穿成串了。继续学习。人类的发展史就是不断的发现问题和解决问题，伴随着一个问题的解决，又会产生新的问题，所以所有知识体系的形成，都是一个个不断探索解决方案的过程。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422779,"discussion_content":"第一句话非常关键，知识要串起来才成为系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535276053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19895,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1534147798,"is_pvip":false,"replies":[{"id":6968,"content":"唯一不变的是变化👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534227332,"ip_address":"","comment_id":19895,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"世上本无银弹，只是大家幻想出来的，要不也不会出现领域驱动，没有任何一个思想可以适用于所有需求，但是反过来说，银弹也是存在的，因为不断的学习不断的深入，核心思想与不断的变通结合才是真正的银弹！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422014,"discussion_content":"唯一不变的是变化👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534227332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19746,"user_name":"Sky","can_delete":false,"product_type":"c1","uid":1206722,"ip_address":"","ucode":"00BB00AB540297","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/c2/34490844.jpg","comment_is_top":false,"comment_ctime":1534028579,"is_pvip":false,"replies":[{"id":6884,"content":"理解不正确，再看一遍文章😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534059207,"ip_address":"","comment_id":19746,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"个人觉得，架构是理论，框架是架构的实现。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422014,"discussion_content":"唯一不变的是变化👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534227332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16829,"user_name":"liyue326","can_delete":false,"product_type":"c1","uid":1184938,"ip_address":"","ucode":"35BA356593C5A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/aa/6df49a3f.jpg","comment_is_top":false,"comment_ctime":1532243521,"is_pvip":false,"replies":[{"id":5943,"content":"没有这样的程序员，Jeff Dean也不行😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532425291,"ip_address":"","comment_id":16829,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"要是有银蛋。那也是万能的程序员吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421963,"discussion_content":"理解不正确，再看一遍文章😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534059207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15978,"user_name":"黄大仙","can_delete":false,"product_type":"c1","uid":1177289,"ip_address":"","ucode":"337B6E811CF47D","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/c9/4da2a82a.jpg","comment_is_top":false,"comment_ctime":1531703798,"is_pvip":false,"replies":[{"id":5521,"content":"我表示我还没有达到这个境地😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531720353,"ip_address":"","comment_id":15978,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"随着芯片物理极限的不断提升，限制软件运行的主要矛盾，从计算能力和计算成本，加速过渡到想象力上来，而想象力不可能有通用方案。虽然方案不是万能的，但是方案的基本要素是相通的，谁在什么条件下，通过哪些方法，解决哪些人的什么问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420624,"discussion_content":"我表示我还没有达到这个境地😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531720353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15141,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1530929473,"is_pvip":false,"replies":[{"id":5208,"content":"很多人说录音效果不错呢，如果我去读，这嗓子估计你更不想听😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531123132,"ip_address":"","comment_id":15141,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"录音工作是主播擅长的，理论知识的讲解是知识专业人擅长的，这样搞有点儿照本宣科啦！\n课程内容我感兴趣，但是如此做实在理解不了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420251,"discussion_content":"很多人说录音效果不错呢，如果我去读，这嗓子估计你更不想听😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531123132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14966,"user_name":"varotene","can_delete":false,"product_type":"c1","uid":1004441,"ip_address":"","ucode":"B37E9B6D35090C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/99/56f148bc.jpg","comment_is_top":false,"comment_ctime":1530768357,"is_pvip":false,"replies":[{"id":5048,"content":"redis, nginx都不是面向对象的，虽然里面用了函数指针来实现了类似面向对象的功能","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530784997,"ip_address":"","comment_id":14966,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"由于接触的大部分都是面向对象的项目，能举几个现代软件业，不使用面向对象的例子吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420196,"discussion_content":"redis, nginx都不是面向对象的，虽然里面用了函数指针来实现了类似面向对象的功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530784997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13603,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1529843472,"is_pvip":false,"replies":[{"id":4573,"content":"设计模式就是面向对象的类和接口设计方法","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1529892572,"ip_address":"","comment_id":13603,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"设计模式是处于架构设计与面向对象之间？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420196,"discussion_content":"redis, nginx都不是面向对象的，虽然里面用了函数指针来实现了类似面向对象的功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530784997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30414,"user_name":"a煤炭","can_delete":false,"product_type":"c1","uid":1206603,"ip_address":"","ucode":"A155C618421A31","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4b/92b725c0.jpg","comment_is_top":false,"comment_ctime":1538833095,"is_pvip":false,"replies":[{"id":10979,"content":"看内容更激动😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538869301,"ip_address":"","comment_id":30414,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"看评论的有点激动","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425987,"discussion_content":"看内容更激动😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538869301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":27346,"user_name":"PiedPiper","can_delete":false,"product_type":"c1","uid":1206210,"ip_address":"","ucode":"83A54312AD89DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/c2/3437bbc7.jpg","comment_is_top":false,"comment_ctime":1537875481,"is_pvip":false,"replies":[{"id":10011,"content":"你已经参透架构设计的其中一个原则👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1537950769,"ip_address":"","comment_id":27346,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"我觉得，这个跟人类进化一样，得走到那一步才会遇到那样的问题，然后才会寻求相应的解决方案。没有什么东西是一蹴而就的。都要有一个发展的过程。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425987,"discussion_content":"看内容更激动😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538869301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21638,"user_name":"落雨无声","can_delete":false,"product_type":"c1","uid":1215360,"ip_address":"","ucode":"B2E5E5D6D48871","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/80/cc5c6841.jpg","comment_is_top":false,"comment_ctime":1535205007,"is_pvip":false,"replies":[{"id":7695,"content":"第一句话非常关键，知识要串起来才成为系统","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535276053,"ip_address":"","comment_id":21638,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"感觉以前一些一知半解的知识要穿成串了。继续学习。人类的发展史就是不断的发现问题和解决问题，伴随着一个问题的解决，又会产生新的问题，所以所有知识体系的形成，都是一个个不断探索解决方案的过程。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424886,"discussion_content":"你已经参透架构设计的其中一个原则👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537950769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19895,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1534147798,"is_pvip":false,"replies":[{"id":6968,"content":"唯一不变的是变化👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534227332,"ip_address":"","comment_id":19895,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"世上本无银弹，只是大家幻想出来的，要不也不会出现领域驱动，没有任何一个思想可以适用于所有需求，但是反过来说，银弹也是存在的，因为不断的学习不断的深入，核心思想与不断的变通结合才是真正的银弹！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422779,"discussion_content":"第一句话非常关键，知识要串起来才成为系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535276053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19746,"user_name":"Sky","can_delete":false,"product_type":"c1","uid":1206722,"ip_address":"","ucode":"00BB00AB540297","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/c2/34490844.jpg","comment_is_top":false,"comment_ctime":1534028579,"is_pvip":false,"replies":[{"id":6884,"content":"理解不正确，再看一遍文章😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534059207,"ip_address":"","comment_id":19746,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"个人觉得，架构是理论，框架是架构的实现。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421963,"discussion_content":"理解不正确，再看一遍文章😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534059207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16829,"user_name":"liyue326","can_delete":false,"product_type":"c1","uid":1184938,"ip_address":"","ucode":"35BA356593C5A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/aa/6df49a3f.jpg","comment_is_top":false,"comment_ctime":1532243521,"is_pvip":false,"replies":[{"id":5943,"content":"没有这样的程序员，Jeff Dean也不行😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532425291,"ip_address":"","comment_id":16829,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"要是有银蛋。那也是万能的程序员吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420944,"discussion_content":"没有这样的程序员，Jeff Dean也不行😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532425291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15978,"user_name":"黄大仙","can_delete":false,"product_type":"c1","uid":1177289,"ip_address":"","ucode":"337B6E811CF47D","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/c9/4da2a82a.jpg","comment_is_top":false,"comment_ctime":1531703798,"is_pvip":false,"replies":[{"id":5521,"content":"我表示我还没有达到这个境地😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531720353,"ip_address":"","comment_id":15978,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"随着芯片物理极限的不断提升，限制软件运行的主要矛盾，从计算能力和计算成本，加速过渡到想象力上来，而想象力不可能有通用方案。虽然方案不是万能的，但是方案的基本要素是相通的，谁在什么条件下，通过哪些方法，解决哪些人的什么问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420944,"discussion_content":"没有这样的程序员，Jeff Dean也不行😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532425291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15141,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1530929473,"is_pvip":false,"replies":[{"id":5208,"content":"很多人说录音效果不错呢，如果我去读，这嗓子估计你更不想听😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531123132,"ip_address":"","comment_id":15141,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"录音工作是主播擅长的，理论知识的讲解是知识专业人擅长的，这样搞有点儿照本宣科啦！\n课程内容我感兴趣，但是如此做实在理解不了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420624,"discussion_content":"我表示我还没有达到这个境地😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531720353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14966,"user_name":"varotene","can_delete":false,"product_type":"c1","uid":1004441,"ip_address":"","ucode":"B37E9B6D35090C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/99/56f148bc.jpg","comment_is_top":false,"comment_ctime":1530768357,"is_pvip":false,"replies":[{"id":5048,"content":"redis, nginx都不是面向对象的，虽然里面用了函数指针来实现了类似面向对象的功能","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1530784997,"ip_address":"","comment_id":14966,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"由于接触的大部分都是面向对象的项目，能举几个现代软件业，不使用面向对象的例子吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420251,"discussion_content":"很多人说录音效果不错呢，如果我去读，这嗓子估计你更不想听😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531123132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13603,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1529843472,"is_pvip":false,"replies":[{"id":4573,"content":"设计模式就是面向对象的类和接口设计方法","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1529892572,"ip_address":"","comment_id":13603,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"设计模式是处于架构设计与面向对象之间？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419699,"discussion_content":"设计模式就是面向对象的类和接口设计方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529892572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12728,"user_name":"Cola","can_delete":false,"product_type":"c1","uid":1048859,"ip_address":"","ucode":"67A27A8DEF42E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/1b/24db90c7.jpg","comment_is_top":false,"comment_ctime":1528986999,"is_pvip":false,"replies":[{"id":4251,"content":"好的架构能够降低业务代码混乱的影响范围","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1529047072,"ip_address":"","comment_id":12728,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"1.技术是一个渐进式的发展过程，任何设计思想都是针对当下环境的解决方案 2.架构设计是图纸，最后真正添砖加瓦的是执行人，架构设计的目的是让让系统接近业务处理的极限，这个上限始终是由业务层决定，如果业务代码混乱，到最后再好的架构设计都会无用武之地","like_count":0},{"had_liked":false,"id":10077,"user_name":"小小鸟","can_delete":false,"product_type":"c1","uid":1102550,"ip_address":"","ucode":"11C15D267DE457","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/d6/d393593d.jpg","comment_is_top":false,"comment_ctime":1527260515,"is_pvip":false,"replies":[{"id":3179,"content":"学到老，写到老，赚到老😃😃😃","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527375951,"ip_address":"","comment_id":10077,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"总是有问题 总是要解决 不断演化 ","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419384,"discussion_content":"好的架构能够降低业务代码混乱的影响范围","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529047072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8235,"user_name":"周","can_delete":false,"product_type":"c1","uid":1030086,"ip_address":"","ucode":"5595CC944F4A08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c6/839984bc.jpg","comment_is_top":false,"comment_ctime":1525999804,"is_pvip":false,"replies":[{"id":2401,"content":"没有参与真正的开源项目，博客好久没更新了，目前偶尔在知乎和infoq冒个泡😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526004765,"ip_address":"","comment_id":8235,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"作者的github地址是哪里呀？还有博客，方便说一下吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418333,"discussion_content":"学到老，写到老，赚到老😃😃😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527375951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7496,"user_name":"Jacob 周","can_delete":false,"product_type":"c1","uid":1099314,"ip_address":"","ucode":"EEC7D081F7695F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/32/31b216f4.jpg","comment_is_top":false,"comment_ctime":1525494876,"is_pvip":false,"replies":[{"id":2149,"content":"谢谢你的夸奖，相信还会有更多厉害的专栏出现，我希望成为第一个，但绝对不是最后一个😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525500244,"ip_address":"","comment_id":7496,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"感觉这个系列在这个平台会成为IT行业的一代经典，别的课程已经很难超越。理由很简单，别的地方没有的东西，这里有，而且这么好。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417642,"discussion_content":"没有参与真正的开源项目，博客好久没更新了，目前偶尔在知乎和infoq冒个泡😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526004765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7314,"user_name":"KingPoker","can_delete":false,"product_type":"c1","uid":1050751,"ip_address":"","ucode":"1BEF76F900EC0A","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/7f/a0b0ac74.jpg","comment_is_top":false,"comment_ctime":1525396364,"is_pvip":false,"replies":[{"id":2116,"content":"不是一个层面，但产生的历史背景都是为了应对某个复杂度","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478228,"ip_address":"","comment_id":7314,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"比较好奇 面向对象设计和软件架构是一个层面的事情吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417368,"discussion_content":"谢谢你的夸奖，相信还会有更多厉害的专栏出现，我希望成为第一个，但绝对不是最后一个😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7057,"user_name":"SMTCode","can_delete":false,"product_type":"c1","uid":1109038,"ip_address":"","ucode":"0D837A753E4FAB","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/2e/49d13bd2.jpg","comment_is_top":false,"comment_ctime":1525253681,"is_pvip":false,"replies":[{"id":2000,"content":"你已经上升到哲学高度了😃不过确实是这个道理","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525261796,"ip_address":"","comment_id":7057,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"软件的复杂性和需求的多变，使得没有哪一种方案能解决所有的问题。而且一种方案解决了部分问题后，还会引入其他问题或发现其他问题。充满不确定性的问题不可能有确定的解。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417224,"discussion_content":"你已经上升到哲学高度了😃不过确实是这个道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525261796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6898,"user_name":"cruise","can_delete":false,"product_type":"c1","uid":1103817,"ip_address":"","ucode":"AD59E09E8B8D88","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/c9/3788deeb.jpg","comment_is_top":false,"comment_ctime":1525134851,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"从哲学角度来说，是不存在银弹的。任何技术或方法都不是独立来看的，要综合其它各种相关因素来考虑的。因此对别人来说可能是银弹的，对你来说可能是个炸弹了。架构设计也是一样的，不能脱离业务、公司实际情况、人员配置、经费预算、时间投入等等与技术本身无关的因素，但却又是影响，甚至决定架构设计方向的因素。因此说没有最好，只有更合适。","like_count":113},{"had_liked":false,"id":7583,"user_name":"crazyone","can_delete":false,"product_type":"c1","uid":1115042,"ip_address":"","ucode":"705E34642E41F5","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/a2/ceb37046.jpg","comment_is_top":false,"comment_ctime":1525566358,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"感觉像是看大佬们在华山论剑般，评论相当精彩","like_count":34,"discussions":[{"author":{"id":2432987,"avatar":"https://static001.geekbang.org/account/avatar/00/25/1f/db/b62b0c36.jpg","nickname":"CoderYe","note":"","ucode":"61BADA76344270","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576404,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655523694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6939,"user_name":"Alspadger","can_delete":false,"product_type":"c1","uid":1106126,"ip_address":"","ucode":"304E450EE44D36","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/ce/7e55868b.jpg","comment_is_top":false,"comment_ctime":1525152111,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"因为设计者都是站在当时的业务瓶颈下考虑问题的，因为你不可预测当业务发展的一定程度后，又会遇到怎么样的技术瓶颈。也就是所谓的技术支撑业务发展，业务推动技术发展。","like_count":29},{"had_liked":false,"id":7087,"user_name":"淡云天","can_delete":false,"product_type":"c1","uid":1109218,"ip_address":"","ucode":"90A13E2A0570FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/e2/79780894.jpg","comment_is_top":false,"comment_ctime":1525266888,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"解空间是建立在问题空间之上的，问题空间的扩展速度远超解空间时，就会架空解空间。而这时就需要新的、适应问题空间扩展速度的解空间来担当这个阶段的银弹。这一点类似于宏观物理学和量子物理学，只不过物理学几百年的进化之路，计算机只用了二十年就走完了。。。","like_count":16},{"had_liked":false,"id":12728,"user_name":"Cola","can_delete":false,"product_type":"c1","uid":1048859,"ip_address":"","ucode":"67A27A8DEF42E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/1b/24db90c7.jpg","comment_is_top":false,"comment_ctime":1528986999,"is_pvip":false,"replies":[{"id":4251,"content":"好的架构能够降低业务代码混乱的影响范围","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1529047072,"ip_address":"","comment_id":12728,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"1.技术是一个渐进式的发展过程，任何设计思想都是针对当下环境的解决方案 2.架构设计是图纸，最后真正添砖加瓦的是执行人，架构设计的目的是让让系统接近业务处理的极限，这个上限始终是由业务层决定，如果业务代码混乱，到最后再好的架构设计都会无用武之地","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419384,"discussion_content":"好的架构能够降低业务代码混乱的影响范围","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529047072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10077,"user_name":"小小鸟","can_delete":false,"product_type":"c1","uid":1102550,"ip_address":"","ucode":"11C15D267DE457","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/d6/d393593d.jpg","comment_is_top":false,"comment_ctime":1527260515,"is_pvip":false,"replies":[{"id":3179,"content":"学到老，写到老，赚到老😃😃😃","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527375951,"ip_address":"","comment_id":10077,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"总是有问题 总是要解决 不断演化 ","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418333,"discussion_content":"学到老，写到老，赚到老😃😃😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527375951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8235,"user_name":"周","can_delete":false,"product_type":"c1","uid":1030086,"ip_address":"","ucode":"5595CC944F4A08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c6/839984bc.jpg","comment_is_top":false,"comment_ctime":1525999804,"is_pvip":false,"replies":[{"id":2401,"content":"没有参与真正的开源项目，博客好久没更新了，目前偶尔在知乎和infoq冒个泡😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526004765,"ip_address":"","comment_id":8235,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"作者的github地址是哪里呀？还有博客，方便说一下吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417642,"discussion_content":"没有参与真正的开源项目，博客好久没更新了，目前偶尔在知乎和infoq冒个泡😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526004765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7496,"user_name":"Jacob 周","can_delete":false,"product_type":"c1","uid":1099314,"ip_address":"","ucode":"EEC7D081F7695F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/32/31b216f4.jpg","comment_is_top":false,"comment_ctime":1525494876,"is_pvip":false,"replies":[{"id":2149,"content":"谢谢你的夸奖，相信还会有更多厉害的专栏出现，我希望成为第一个，但绝对不是最后一个😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525500244,"ip_address":"","comment_id":7496,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"感觉这个系列在这个平台会成为IT行业的一代经典，别的课程已经很难超越。理由很简单，别的地方没有的东西，这里有，而且这么好。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417368,"discussion_content":"谢谢你的夸奖，相信还会有更多厉害的专栏出现，我希望成为第一个，但绝对不是最后一个😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7314,"user_name":"KingPoker","can_delete":false,"product_type":"c1","uid":1050751,"ip_address":"","ucode":"1BEF76F900EC0A","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/7f/a0b0ac74.jpg","comment_is_top":false,"comment_ctime":1525396364,"is_pvip":false,"replies":[{"id":2116,"content":"不是一个层面，但产生的历史背景都是为了应对某个复杂度","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478228,"ip_address":"","comment_id":7314,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"比较好奇 面向对象设计和软件架构是一个层面的事情吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417309,"discussion_content":"不是一个层面，但产生的历史背景都是为了应对某个复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7057,"user_name":"SMTCode","can_delete":false,"product_type":"c1","uid":1109038,"ip_address":"","ucode":"0D837A753E4FAB","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/2e/49d13bd2.jpg","comment_is_top":false,"comment_ctime":1525253681,"is_pvip":false,"replies":[{"id":2000,"content":"你已经上升到哲学高度了😃不过确实是这个道理","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525261796,"ip_address":"","comment_id":7057,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"软件的复杂性和需求的多变，使得没有哪一种方案能解决所有的问题。而且一种方案解决了部分问题后，还会引入其他问题或发现其他问题。充满不确定性的问题不可能有确定的解。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417309,"discussion_content":"不是一个层面，但产生的历史背景都是为了应对某个复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6898,"user_name":"cruise","can_delete":false,"product_type":"c1","uid":1103817,"ip_address":"","ucode":"AD59E09E8B8D88","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/c9/3788deeb.jpg","comment_is_top":false,"comment_ctime":1525134851,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"从哲学角度来说，是不存在银弹的。任何技术或方法都不是独立来看的，要综合其它各种相关因素来考虑的。因此对别人来说可能是银弹的，对你来说可能是个炸弹了。架构设计也是一样的，不能脱离业务、公司实际情况、人员配置、经费预算、时间投入等等与技术本身无关的因素，但却又是影响，甚至决定架构设计方向的因素。因此说没有最好，只有更合适。","like_count":113},{"had_liked":false,"id":7583,"user_name":"crazyone","can_delete":false,"product_type":"c1","uid":1115042,"ip_address":"","ucode":"705E34642E41F5","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/a2/ceb37046.jpg","comment_is_top":false,"comment_ctime":1525566358,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"感觉像是看大佬们在华山论剑般，评论相当精彩","like_count":34,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417224,"discussion_content":"你已经上升到哲学高度了😃不过确实是这个道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525261796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6939,"user_name":"Alspadger","can_delete":false,"product_type":"c1","uid":1106126,"ip_address":"","ucode":"304E450EE44D36","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/ce/7e55868b.jpg","comment_is_top":false,"comment_ctime":1525152111,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"因为设计者都是站在当时的业务瓶颈下考虑问题的，因为你不可预测当业务发展的一定程度后，又会遇到怎么样的技术瓶颈。也就是所谓的技术支撑业务发展，业务推动技术发展。","like_count":29},{"had_liked":false,"id":7087,"user_name":"淡云天","can_delete":false,"product_type":"c1","uid":1109218,"ip_address":"","ucode":"90A13E2A0570FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/e2/79780894.jpg","comment_is_top":false,"comment_ctime":1525266888,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"解空间是建立在问题空间之上的，问题空间的扩展速度远超解空间时，就会架空解空间。而这时就需要新的、适应问题空间扩展速度的解空间来担当这个阶段的银弹。这一点类似于宏观物理学和量子物理学，只不过物理学几百年的进化之路，计算机只用了二十年就走完了。。。","like_count":16,"discussions":[{"author":{"id":2432987,"avatar":"https://static001.geekbang.org/account/avatar/00/25/1f/db/b62b0c36.jpg","nickname":"CoderYe","note":"","ucode":"61BADA76344270","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576404,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655523694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6921,"user_name":"KingPoker","can_delete":false,"product_type":"c1","uid":1050751,"ip_address":"","ucode":"1BEF76F900EC0A","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/7f/a0b0ac74.jpg","comment_is_top":false,"comment_ctime":1525142211,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"推荐一本书「伟大的计算原理」，把计算机的本质问题描述的很透彻，也给我有一些全新的认知。","like_count":12},{"had_liked":false,"id":6906,"user_name":"带刺的温柔","can_delete":false,"product_type":"c1","uid":1107210,"ip_address":"","ucode":"509C4CF0176EDB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/0a/13c0f653.jpg","comment_is_top":false,"comment_ctime":1525138198,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"软件架构是为了解决大规模开发时遇到的效率、复杂及扩展性问题。听老师所说让我对架构认知又更加清晰落地。但是对拆分粒度越来越粗，层次越来越高理解的还是不够，其实与我的一些开发习惯是相悖的，一般我会尽可能拆分细来保证后期的扩展性。不知道老师我是哪里理解偏差了","like_count":7},{"had_liked":false,"id":7076,"user_name":"强","can_delete":false,"product_type":"c1","uid":1105407,"ip_address":"","ucode":"F6010FCAB08BA1","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/ff/b61dbefd.jpg","comment_is_top":false,"comment_ctime":1525262341,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"关于银弹，我想从另外一个角度聊聊。上学时候，老师(c++标准编写者)跟我们分享的一思考题: 软件究竟属于工程行业还是偏艺术(或工艺)行业。前几十年，软件从业者基本是努力将其往工程化发展，像硬件制造一样可控，高度复用，流水生产。经过这些年的发展，工程化基本未实现(否则码农就和生产线工人一样，工资不会越来越高)，现在越来越多人思考，也行软件更多是艺术行业。既然是艺术类，自然就无银弹的说法","like_count":6},{"had_liked":false,"id":6911,"user_name":"阿罗","can_delete":false,"product_type":"c1","uid":1107508,"ip_address":"","ucode":"38325DEB582B5A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/34/1a2278d7.jpg","comment_is_top":false,"comment_ctime":1525139750,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"超赞👍🏻，\n饱含认识论和系统论的理论知识与软件实践知识。太难得了，非大集成者无以为之。我买过最值的课程！\n","like_count":6},{"had_liked":false,"id":6894,"user_name":"候鸟归来的季节","can_delete":false,"product_type":"c1","uid":1087591,"ip_address":"","ucode":"671FCF79037AD7","user_header":"https://static001.geekbang.org/account/avatar/00/10/98/67/818c980d.jpg","comment_is_top":false,"comment_ctime":1525134295,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"技术在不断发展，新的业务需求催生新的技术，没有银弹","like_count":6},{"had_liked":false,"id":7433,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1099269,"ip_address":"","ucode":"0867E5C288DDBF","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/05/2c55e929.jpg","comment_is_top":false,"comment_ctime":1525481862,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"怎么可能出现一套方法能解决一万年后出现的问题呢？\n可能时间是“银弹”吧。","like_count":5},{"had_liked":false,"id":6918,"user_name":"老甘","can_delete":false,"product_type":"c1","uid":1107043,"ip_address":"","ucode":"36E2F2E98BB05B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/63/a1c8e7a8.jpg","comment_is_top":false,"comment_ctime":1525142017,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"所有的解决方案都是为了解决某一类问题，既然是某一类问题势必是术业有专攻，从辩证的角度也很好理解，事物都有两面性，不存在某种方案可以解决所有问题而没有任何弊端，有弊端自然会出现针对某个场景更好的解决方案。而且，世界在变化，针对现实世界解决问题的软件业务逻辑也势必不断变化，所以只有针对多数场景暂时的银弹，而没有永久的。未来还有更好的","like_count":5},{"had_liked":false,"id":6909,"user_name":"Welton","can_delete":false,"product_type":"c1","uid":1100716,"ip_address":"","ucode":"A90A0CECB6AB80","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/ac/f0b04f06.jpg","comment_is_top":false,"comment_ctime":1525139001,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"技术在不断发展和更新，没有一劳永逸的事物能够代替不断变化的大千世界需求！","like_count":4},{"had_liked":false,"id":6902,"user_name":"laolinshi","can_delete":false,"product_type":"c1","uid":1024994,"ip_address":"","ucode":"269B879389D7D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/e2/5cb4f43f.jpg","comment_is_top":false,"comment_ctime":1525137026,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"每一种开发方法都是应对当时出现的危机而发展出来的，有一定的局限性。随着软件技术的发展，新的问题会层出不穷的出现，必然会催生新的开发方法来解决对应的问题。","like_count":4},{"had_liked":false,"id":6950,"user_name":"Jaime","can_delete":false,"product_type":"c1","uid":1078333,"ip_address":"","ucode":"904192CC4E916F","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/3d/54bbc1df.jpg","comment_is_top":false,"comment_ctime":1525168362,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"应该说都有自己的缺点和优点。看具体场合使用具体的方法，在软件领域就没有银弹的说法。因为业务场景不同，需要用不同的方法去解决业务上的问题。技术是为业务服务的。有些业务可能需要代码简单清晰，此时结构化编程就够了，业务规模加大时，发现耦合过于严重，面向对象就要拿出来解决耦合问题，提高软件可维护性。当规模继续加大，就可能要拆分系统，使用到了微服务的技术，那么此时架构设计就需要解决各个服务之间调用的问题。而在各个微服务里面又可能是用了结构化编程或者面向对象的方法(要看各个服务自己的业务需求)。软件工程我是不太了解😅😅😅","like_count":3},{"had_liked":false,"id":6921,"user_name":"KingPoker","can_delete":false,"product_type":"c1","uid":1050751,"ip_address":"","ucode":"1BEF76F900EC0A","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/7f/a0b0ac74.jpg","comment_is_top":false,"comment_ctime":1525142211,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"推荐一本书「伟大的计算原理」，把计算机的本质问题描述的很透彻，也给我有一些全新的认知。","like_count":12},{"had_liked":false,"id":6906,"user_name":"带刺的温柔","can_delete":false,"product_type":"c1","uid":1107210,"ip_address":"","ucode":"509C4CF0176EDB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/0a/13c0f653.jpg","comment_is_top":false,"comment_ctime":1525138198,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"软件架构是为了解决大规模开发时遇到的效率、复杂及扩展性问题。听老师所说让我对架构认知又更加清晰落地。但是对拆分粒度越来越粗，层次越来越高理解的还是不够，其实与我的一些开发习惯是相悖的，一般我会尽可能拆分细来保证后期的扩展性。不知道老师我是哪里理解偏差了","like_count":7,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311059,"discussion_content":"你的拆分是代码层面的，但是即使是代码层面的拆分，也不是越细越好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602206609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7076,"user_name":"强","can_delete":false,"product_type":"c1","uid":1105407,"ip_address":"","ucode":"F6010FCAB08BA1","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/ff/b61dbefd.jpg","comment_is_top":false,"comment_ctime":1525262341,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"关于银弹，我想从另外一个角度聊聊。上学时候，老师(c++标准编写者)跟我们分享的一思考题: 软件究竟属于工程行业还是偏艺术(或工艺)行业。前几十年，软件从业者基本是努力将其往工程化发展，像硬件制造一样可控，高度复用，流水生产。经过这些年的发展，工程化基本未实现(否则码农就和生产线工人一样，工资不会越来越高)，现在越来越多人思考，也行软件更多是艺术行业。既然是艺术类，自然就无银弹的说法","like_count":6},{"had_liked":false,"id":6911,"user_name":"阿罗","can_delete":false,"product_type":"c1","uid":1107508,"ip_address":"","ucode":"38325DEB582B5A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/34/1a2278d7.jpg","comment_is_top":false,"comment_ctime":1525139750,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"超赞👍🏻，\n饱含认识论和系统论的理论知识与软件实践知识。太难得了，非大集成者无以为之。我买过最值的课程！\n","like_count":6},{"had_liked":false,"id":6894,"user_name":"候鸟归来的季节","can_delete":false,"product_type":"c1","uid":1087591,"ip_address":"","ucode":"671FCF79037AD7","user_header":"https://static001.geekbang.org/account/avatar/00/10/98/67/818c980d.jpg","comment_is_top":false,"comment_ctime":1525134295,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"技术在不断发展，新的业务需求催生新的技术，没有银弹","like_count":6},{"had_liked":false,"id":7433,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1099269,"ip_address":"","ucode":"0867E5C288DDBF","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/05/2c55e929.jpg","comment_is_top":false,"comment_ctime":1525481862,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"怎么可能出现一套方法能解决一万年后出现的问题呢？\n可能时间是“银弹”吧。","like_count":5},{"had_liked":false,"id":6918,"user_name":"老甘","can_delete":false,"product_type":"c1","uid":1107043,"ip_address":"","ucode":"36E2F2E98BB05B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/63/a1c8e7a8.jpg","comment_is_top":false,"comment_ctime":1525142017,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"所有的解决方案都是为了解决某一类问题，既然是某一类问题势必是术业有专攻，从辩证的角度也很好理解，事物都有两面性，不存在某种方案可以解决所有问题而没有任何弊端，有弊端自然会出现针对某个场景更好的解决方案。而且，世界在变化，针对现实世界解决问题的软件业务逻辑也势必不断变化，所以只有针对多数场景暂时的银弹，而没有永久的。未来还有更好的","like_count":5},{"had_liked":false,"id":6909,"user_name":"Welton","can_delete":false,"product_type":"c1","uid":1100716,"ip_address":"","ucode":"A90A0CECB6AB80","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/ac/f0b04f06.jpg","comment_is_top":false,"comment_ctime":1525139001,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"技术在不断发展和更新，没有一劳永逸的事物能够代替不断变化的大千世界需求！","like_count":4},{"had_liked":false,"id":6902,"user_name":"laolinshi","can_delete":false,"product_type":"c1","uid":1024994,"ip_address":"","ucode":"269B879389D7D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/e2/5cb4f43f.jpg","comment_is_top":false,"comment_ctime":1525137026,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"每一种开发方法都是应对当时出现的危机而发展出来的，有一定的局限性。随着软件技术的发展，新的问题会层出不穷的出现，必然会催生新的开发方法来解决对应的问题。","like_count":4},{"had_liked":false,"id":6950,"user_name":"Jaime","can_delete":false,"product_type":"c1","uid":1078333,"ip_address":"","ucode":"904192CC4E916F","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/3d/54bbc1df.jpg","comment_is_top":false,"comment_ctime":1525168362,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"应该说都有自己的缺点和优点。看具体场合使用具体的方法，在软件领域就没有银弹的说法。因为业务场景不同，需要用不同的方法去解决业务上的问题。技术是为业务服务的。有些业务可能需要代码简单清晰，此时结构化编程就够了，业务规模加大时，发现耦合过于严重，面向对象就要拿出来解决耦合问题，提高软件可维护性。当规模继续加大，就可能要拆分系统，使用到了微服务的技术，那么此时架构设计就需要解决各个服务之间调用的问题。而在各个微服务里面又可能是用了结构化编程或者面向对象的方法(要看各个服务自己的业务需求)。软件工程我是不太了解😅😅😅","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311059,"discussion_content":"你的拆分是代码层面的，但是即使是代码层面的拆分，也不是越细越好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602206609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127270,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566629208,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":" 课后思考及问题\n1：我认为，如果想要深入理解一个事物的本质，最好的方式就是去追寻这个事物出现的历史背景和推动因素。\n这个观点极其认同，那问题是怎么快速的去追寻某个事物的出现的历史背景和推动因素？历史书+积累？\n\n2：无中生有(万物之始)——机器语言(面相机器，0&#47;1指令)——汇编语言(面相机器，命令助记符)——各种高级语言(面相具体问题和业务，函数式编程)——编译器加持(屏蔽底层硬件结构的差异，支持各种语言的执行)——结构化编程(面相过程)——面相对象编程(逼近人类思考的过程)。\n事物的发展规律，无中生有——由小及大——由简入繁——达到人类思维的带宽极限时，又会被分而治之，在不断复杂化和人类可理解的范围内达到平衡。从上层看人越来越容易操控，但由上往下探索下去，你会发现个人越来越难以独自掌控和理解，问题也在对人类分而治之。你觉得你在扩大你的认知边界，你会发现你的未知边界在更加迅猛的在扩张着，因为世间唯一不变的就是变化。所知是有限的，未知却是无限的，以有限的知识来解决无限的问题，很明显有些问题是无法解决的，那么银弹就只能无限逼近但是总也达不到。","like_count":2},{"had_liked":false,"id":7327,"user_name":"路易斯陈凯瑞","can_delete":false,"product_type":"c1","uid":1109703,"ip_address":"","ucode":"4FF5E5F970E9AC","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/c7/f8480f6b.jpg","comment_is_top":false,"comment_ctime":1525400318,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"银弹的出现是否意味着这个行业已经到头了","like_count":2},{"had_liked":false,"id":6972,"user_name":"白马","can_delete":false,"product_type":"c1","uid":1103540,"ip_address":"","ucode":"FD4DA715AC5984","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/b4/0808999d.jpg","comment_is_top":false,"comment_ctime":1525186726,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"同意布鲁克斯的观点，没有银弹的一个原因是由于软件本身具有复杂性，一致性，可变性，不可见性。复杂性主要是指软件的复杂程度可以看成代码数量的函数，但是这个函数究竟是什么类型的，不确定，和具体面对的业务领域也有关系。一致性指软件需要和硬件保持一致，而硬件种类繁多，也一直在发展。","like_count":2},{"had_liked":false,"id":6908,"user_name":"时光之刃","can_delete":false,"product_type":"c1","uid":1083381,"ip_address":"","ucode":"0F15CAD70BDDC3","user_header":"https://static001.geekbang.org/account/avatar/00/10/87/f5/c6d1ffed.jpg","comment_is_top":false,"comment_ctime":1525138928,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"知识量好大，循序渐进，读来挺顺畅","like_count":2},{"had_liked":false,"id":6903,"user_name":"南友力max先森🌈","can_delete":false,"product_type":"c1","uid":1101805,"ip_address":"","ucode":"A72ECEBD714A0A","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/ed/6d76d9de.jpg","comment_is_top":false,"comment_ctime":1525137336,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"软件系统是为业务服务的，随着业务的变化，软件系统面临的问题也会不断变化，要想得出所有业务问题（包括系统自身的维护问题）的通用解解决方案必须先知道所有的问题域，但现在谁又能说所有的业务和系统问题都已经浮现呢","like_count":2},{"had_liked":false,"id":6897,"user_name":"kx163","can_delete":false,"product_type":"c1","uid":1068237,"ip_address":"","ucode":"FBF3E71C90667A","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/cd/aab1da25.jpg","comment_is_top":false,"comment_ctime":1525134614,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"各种软件开发方法都有各自的利弊点，能提高开发效率和降低开发维护成本，但很难降低软件系统本身的复杂性和易变性的特点","like_count":2},{"had_liked":false,"id":6895,"user_name":"弓土","can_delete":false,"product_type":"c1","uid":1106472,"ip_address":"","ucode":"F438041661192B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/28/1d84d203.jpg","comment_is_top":false,"comment_ctime":1525134353,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"软件领域没有银弹我理解根因是需求的不断的变化包括底层软件每隔一段时间都会面对上层支撑业务的变化，而当初的制定的策论及方法都没有预料到未来的变化","like_count":2},{"had_liked":false,"id":282268,"user_name":"骑着🚀看银河","can_delete":false,"product_type":"c1","uid":1074734,"ip_address":"","ucode":"8706A99A89F0CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","comment_is_top":false,"comment_ctime":1615180013,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"架构是根据业务演变过来的，任何一种软件开发方法不可能长久不衰，短暂的银弹是有可能的","like_count":1},{"had_liked":false,"id":229879,"user_name":"一飞冲天","can_delete":false,"product_type":"c1","uid":1980707,"ip_address":"","ucode":"14CB54F27C4DD4","user_header":"https://static001.geekbang.org/account/avatar/00/1e/39/23/a8a23268.jpg","comment_is_top":false,"comment_ctime":1593173402,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"古往今来，许多科学家想要找一个万能公式来真正解开世界的真相也就是银弹，但是迄今为止，也没有人能找到，一种世界的物理真理可能在某种世界就失效了，这和软件设计情景很类似，一种很好软件设计思想可能只适合特定的业务场景，它是不可能适用于所有的业务场景的，所以一定要根据现有的业务进行软件设计，并且要适应业务的变化！","like_count":1},{"had_liked":false,"id":89041,"user_name":"yiwei.zhou","can_delete":false,"product_type":"c1","uid":1508854,"ip_address":"","ucode":"B31C80E71B198D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXjLm1ZXhj5fWo5QKYyc5dSNzibznmvDTickNFOXoJSNI0pB9wnwSVrbzIrmYzIzKibQBXX7ODcOoHg/132","comment_is_top":false,"comment_ctime":1556068226,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"因为复杂度所以有了模块，因为扩展性所以有了面向对象，因为系统变大所以架构设计变得关键。我们总是因为什么而有了什么。后者是前者的银弹。但新的问题还会出现。没有银弹的观点是站在变化的角度来看。其实银弹早就有了，只是过时了。","like_count":1},{"had_liked":false,"id":127270,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566629208,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":" 课后思考及问题\n1：我认为，如果想要深入理解一个事物的本质，最好的方式就是去追寻这个事物出现的历史背景和推动因素。\n这个观点极其认同，那问题是怎么快速的去追寻某个事物的出现的历史背景和推动因素？历史书+积累？\n\n2：无中生有(万物之始)——机器语言(面相机器，0&#47;1指令)——汇编语言(面相机器，命令助记符)——各种高级语言(面相具体问题和业务，函数式编程)——编译器加持(屏蔽底层硬件结构的差异，支持各种语言的执行)——结构化编程(面相过程)——面相对象编程(逼近人类思考的过程)。\n事物的发展规律，无中生有——由小及大——由简入繁——达到人类思维的带宽极限时，又会被分而治之，在不断复杂化和人类可理解的范围内达到平衡。从上层看人越来越容易操控，但由上往下探索下去，你会发现个人越来越难以独自掌控和理解，问题也在对人类分而治之。你觉得你在扩大你的认知边界，你会发现你的未知边界在更加迅猛的在扩张着，因为世间唯一不变的就是变化。所知是有限的，未知却是无限的，以有限的知识来解决无限的问题，很明显有些问题是无法解决的，那么银弹就只能无限逼近但是总也达不到。","like_count":2},{"had_liked":false,"id":7327,"user_name":"路易斯陈凯瑞","can_delete":false,"product_type":"c1","uid":1109703,"ip_address":"","ucode":"4FF5E5F970E9AC","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/c7/f8480f6b.jpg","comment_is_top":false,"comment_ctime":1525400318,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"银弹的出现是否意味着这个行业已经到头了","like_count":2},{"had_liked":false,"id":6972,"user_name":"白马","can_delete":false,"product_type":"c1","uid":1103540,"ip_address":"","ucode":"FD4DA715AC5984","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/b4/0808999d.jpg","comment_is_top":false,"comment_ctime":1525186726,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"同意布鲁克斯的观点，没有银弹的一个原因是由于软件本身具有复杂性，一致性，可变性，不可见性。复杂性主要是指软件的复杂程度可以看成代码数量的函数，但是这个函数究竟是什么类型的，不确定，和具体面对的业务领域也有关系。一致性指软件需要和硬件保持一致，而硬件种类繁多，也一直在发展。","like_count":2},{"had_liked":false,"id":6908,"user_name":"时光之刃","can_delete":false,"product_type":"c1","uid":1083381,"ip_address":"","ucode":"0F15CAD70BDDC3","user_header":"https://static001.geekbang.org/account/avatar/00/10/87/f5/c6d1ffed.jpg","comment_is_top":false,"comment_ctime":1525138928,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"知识量好大，循序渐进，读来挺顺畅","like_count":2},{"had_liked":false,"id":6903,"user_name":"南友力max先森🌈","can_delete":false,"product_type":"c1","uid":1101805,"ip_address":"","ucode":"A72ECEBD714A0A","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/ed/6d76d9de.jpg","comment_is_top":false,"comment_ctime":1525137336,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"软件系统是为业务服务的，随着业务的变化，软件系统面临的问题也会不断变化，要想得出所有业务问题（包括系统自身的维护问题）的通用解解决方案必须先知道所有的问题域，但现在谁又能说所有的业务和系统问题都已经浮现呢","like_count":2},{"had_liked":false,"id":6897,"user_name":"kx163","can_delete":false,"product_type":"c1","uid":1068237,"ip_address":"","ucode":"FBF3E71C90667A","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/cd/aab1da25.jpg","comment_is_top":false,"comment_ctime":1525134614,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"各种软件开发方法都有各自的利弊点，能提高开发效率和降低开发维护成本，但很难降低软件系统本身的复杂性和易变性的特点","like_count":2},{"had_liked":false,"id":6895,"user_name":"弓土","can_delete":false,"product_type":"c1","uid":1106472,"ip_address":"","ucode":"F438041661192B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/28/1d84d203.jpg","comment_is_top":false,"comment_ctime":1525134353,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"软件领域没有银弹我理解根因是需求的不断的变化包括底层软件每隔一段时间都会面对上层支撑业务的变化，而当初的制定的策论及方法都没有预料到未来的变化","like_count":2},{"had_liked":false,"id":282268,"user_name":"骑着🚀看银河","can_delete":false,"product_type":"c1","uid":1074734,"ip_address":"","ucode":"8706A99A89F0CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","comment_is_top":false,"comment_ctime":1615180013,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"架构是根据业务演变过来的，任何一种软件开发方法不可能长久不衰，短暂的银弹是有可能的","like_count":1},{"had_liked":false,"id":229879,"user_name":"一飞冲天","can_delete":false,"product_type":"c1","uid":1980707,"ip_address":"","ucode":"14CB54F27C4DD4","user_header":"https://static001.geekbang.org/account/avatar/00/1e/39/23/a8a23268.jpg","comment_is_top":false,"comment_ctime":1593173402,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"古往今来，许多科学家想要找一个万能公式来真正解开世界的真相也就是银弹，但是迄今为止，也没有人能找到，一种世界的物理真理可能在某种世界就失效了，这和软件设计情景很类似，一种很好软件设计思想可能只适合特定的业务场景，它是不可能适用于所有的业务场景的，所以一定要根据现有的业务进行软件设计，并且要适应业务的变化！","like_count":1},{"had_liked":false,"id":89041,"user_name":"yiwei.zhou","can_delete":false,"product_type":"c1","uid":1508854,"ip_address":"","ucode":"B31C80E71B198D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXjLm1ZXhj5fWo5QKYyc5dSNzibznmvDTickNFOXoJSNI0pB9wnwSVrbzIrmYzIzKibQBXX7ODcOoHg/132","comment_is_top":false,"comment_ctime":1556068226,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"因为复杂度所以有了模块，因为扩展性所以有了面向对象，因为系统变大所以架构设计变得关键。我们总是因为什么而有了什么。后者是前者的银弹。但新的问题还会出现。没有银弹的观点是站在变化的角度来看。其实银弹早就有了，只是过时了。","like_count":1},{"had_liked":false,"id":84251,"user_name":"NEO","can_delete":false,"product_type":"c1","uid":1441673,"ip_address":"","ucode":"8B9A665CD78C6A","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/89/2e2211d3.jpg","comment_is_top":false,"comment_ctime":1554813017,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"system360，一场50亿美元的豪赌.....不是5亿美元！","like_count":1},{"had_liked":false,"id":68889,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1550626254,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"正文相当精彩，一定得多看几遍。\n评论依然精彩，同样不可错过！","like_count":1},{"had_liked":false,"id":11859,"user_name":"水月洞天","can_delete":false,"product_type":"c1","uid":1055551,"ip_address":"","ucode":"58C98CEA27312D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/3f/9316f3f6.jpg","comment_is_top":false,"comment_ctime":1528413990,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"软件架构是在特定的环境下，对于特定业务复杂度的系统做出的设计和应对。硬件效率在变，网络资源在变，业务扩张水平在变，互联网的应用体量在变，导致复杂性在变，架构的设计是为了保证软件的稳定和顺利交付，而每次的人力投入水平和资源不同，所以没有万能的银弹。但不同的复杂度情况下，通用的设计能保证稳定性，但不能保证顺利交付","like_count":1},{"had_liked":false,"id":9276,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1526722610,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"没有一劳永逸的银弹，只有阶段性的银弹。因为软件开发是有生命的。随着时间的推移，软件开发的规模和业务复杂度会远远超出最初的预判，对应的银弹自然也就失效。","like_count":1},{"had_liked":false,"id":8161,"user_name":"王旭东","can_delete":false,"product_type":"c1","uid":1108106,"ip_address":"","ucode":"61950FD5D5BFF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/8a/e3032578.jpg","comment_is_top":false,"comment_ctime":1525931632,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"银弹只能是某个历史时间点上存在，但时代在变化，业务在变化（比如用户量剧增），所有以前的银弹并不可能满足现在。故而更多问题的出现也在催生那个时间点的最佳解决方案。大数据、分布式、人工智能等等","like_count":1},{"had_liked":false,"id":7725,"user_name":"QuincySx","can_delete":false,"product_type":"c1","uid":1123049,"ip_address":"","ucode":"F33848E1A4AF26","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","comment_is_top":false,"comment_ctime":1525676346,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"感觉架构实际上是在思想上进行引领与指导，而且与业务逻辑有强耦合，所以每个公司具体业务不同，架构也不太一样，只能说相同的功能去借鉴一下架构设计，并不是那种一针见血的大招，通用性很强","like_count":1},{"had_liked":false,"id":7687,"user_name":"ciciywg","can_delete":false,"product_type":"c1","uid":1028602,"ip_address":"","ucode":"C8177E168B46DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b1/fa/83034863.jpg","comment_is_top":false,"comment_ctime":1525633045,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"Jeff Atwood对《人月神话》的推荐：毫无疑问，这是我们领域里惟一的一本经典图书。如果你还没读过，你应该觉得丢脸！——我终于在2014年7月系统的读完了一遍……","like_count":1},{"had_liked":false,"id":7347,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1525410043,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"软件是用来满足业务的。随着时代的变化，人们思想的变化，软件需要满足和支撑的业务也在变化，所以软件结构也需要不断的演进来满足这种变化的需求。就像在数据爆炸的现在，要利用好这些数据，我们就要有分布式的架构方案来满足大数据存储，大数据的分析。","like_count":1},{"had_liked":false,"id":6955,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1032309,"ip_address":"","ucode":"44422C46F303EB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/75/acc6ebef.jpg","comment_is_top":false,"comment_ctime":1525173103,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"“没有银弹”直接说是没有意义。在特定的上下文，银弹是存在的。这是模块，对象，组件等概念。来解决特定的通常会碰到的问题。但会存在更多的地方还没有银弹。所以单独的“没有银弹”这句话是没有意义的，而比起这句话，更重要的是不上下文弄懂。","like_count":1},{"had_liked":false,"id":6932,"user_name":"🔰夏天的味道","can_delete":false,"product_type":"c1","uid":1069105,"ip_address":"","ucode":"3CA1DE1ADC95F0","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/31/98e2c8e9.jpg","comment_is_top":false,"comment_ctime":1525146278,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"现在组件级别的粒度都已经不够了，所以提出以服务划分的微服务😄","like_count":1},{"had_liked":false,"id":84251,"user_name":"NEO","can_delete":false,"product_type":"c1","uid":1441673,"ip_address":"","ucode":"8B9A665CD78C6A","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/89/2e2211d3.jpg","comment_is_top":false,"comment_ctime":1554813017,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"system360，一场50亿美元的豪赌.....不是5亿美元！","like_count":1},{"had_liked":false,"id":68889,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1550626254,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"正文相当精彩，一定得多看几遍。\n评论依然精彩，同样不可错过！","like_count":1},{"had_liked":false,"id":11859,"user_name":"水月洞天","can_delete":false,"product_type":"c1","uid":1055551,"ip_address":"","ucode":"58C98CEA27312D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/3f/9316f3f6.jpg","comment_is_top":false,"comment_ctime":1528413990,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"软件架构是在特定的环境下，对于特定业务复杂度的系统做出的设计和应对。硬件效率在变，网络资源在变，业务扩张水平在变，互联网的应用体量在变，导致复杂性在变，架构的设计是为了保证软件的稳定和顺利交付，而每次的人力投入水平和资源不同，所以没有万能的银弹。但不同的复杂度情况下，通用的设计能保证稳定性，但不能保证顺利交付","like_count":1},{"had_liked":false,"id":9276,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1526722610,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"没有一劳永逸的银弹，只有阶段性的银弹。因为软件开发是有生命的。随着时间的推移，软件开发的规模和业务复杂度会远远超出最初的预判，对应的银弹自然也就失效。","like_count":1},{"had_liked":false,"id":8161,"user_name":"王旭东","can_delete":false,"product_type":"c1","uid":1108106,"ip_address":"","ucode":"61950FD5D5BFF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/8a/e3032578.jpg","comment_is_top":false,"comment_ctime":1525931632,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"银弹只能是某个历史时间点上存在，但时代在变化，业务在变化（比如用户量剧增），所有以前的银弹并不可能满足现在。故而更多问题的出现也在催生那个时间点的最佳解决方案。大数据、分布式、人工智能等等","like_count":1},{"had_liked":false,"id":7725,"user_name":"QuincySx","can_delete":false,"product_type":"c1","uid":1123049,"ip_address":"","ucode":"F33848E1A4AF26","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","comment_is_top":false,"comment_ctime":1525676346,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"感觉架构实际上是在思想上进行引领与指导，而且与业务逻辑有强耦合，所以每个公司具体业务不同，架构也不太一样，只能说相同的功能去借鉴一下架构设计，并不是那种一针见血的大招，通用性很强","like_count":1},{"had_liked":false,"id":7687,"user_name":"ciciywg","can_delete":false,"product_type":"c1","uid":1028602,"ip_address":"","ucode":"C8177E168B46DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b1/fa/83034863.jpg","comment_is_top":false,"comment_ctime":1525633045,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"Jeff Atwood对《人月神话》的推荐：毫无疑问，这是我们领域里惟一的一本经典图书。如果你还没读过，你应该觉得丢脸！——我终于在2014年7月系统的读完了一遍……","like_count":1},{"had_liked":false,"id":7347,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1525410043,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"软件是用来满足业务的。随着时代的变化，人们思想的变化，软件需要满足和支撑的业务也在变化，所以软件结构也需要不断的演进来满足这种变化的需求。就像在数据爆炸的现在，要利用好这些数据，我们就要有分布式的架构方案来满足大数据存储，大数据的分析。","like_count":1},{"had_liked":false,"id":6955,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1032309,"ip_address":"","ucode":"44422C46F303EB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/75/acc6ebef.jpg","comment_is_top":false,"comment_ctime":1525173103,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"“没有银弹”直接说是没有意义。在特定的上下文，银弹是存在的。这是模块，对象，组件等概念。来解决特定的通常会碰到的问题。但会存在更多的地方还没有银弹。所以单独的“没有银弹”这句话是没有意义的，而比起这句话，更重要的是不上下文弄懂。","like_count":1},{"had_liked":false,"id":6932,"user_name":"🔰夏天的味道","can_delete":false,"product_type":"c1","uid":1069105,"ip_address":"","ucode":"3CA1DE1ADC95F0","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/31/98e2c8e9.jpg","comment_is_top":false,"comment_ctime":1525146278,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"现在组件级别的粒度都已经不够了，所以提出以服务划分的微服务😄","like_count":1},{"had_liked":false,"id":6914,"user_name":"华林","can_delete":false,"product_type":"c1","uid":1020238,"ip_address":"","ucode":"70A82E86FD78D5","user_header":"","comment_is_top":false,"comment_ctime":1525140693,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"解决问题的办法绝对不是依赖于越来越高的抽象层次，人类的弱点决定了这样的结果，无论抽象层次有多高，人都会把它变得更复杂，于是导致了更高级别的抽象，然后递归&#47;死循环","like_count":1},{"had_liked":false,"id":6913,"user_name":"华林","can_delete":false,"product_type":"c1","uid":1020238,"ip_address":"","ucode":"70A82E86FD78D5","user_header":"","comment_is_top":false,"comment_ctime":1525140692,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"解决问题的办法绝对不是依赖于越来越高的抽象层次，人类的弱点决定了这样的结果，无论抽象层次有多高，人都会把它变得更复杂，于是导致了更高级别的抽象，然后递归&#47;死循环","like_count":1},{"had_liked":false,"id":390981,"user_name":"Bravery168","can_delete":false,"product_type":"c1","uid":1232973,"ip_address":"广东","ucode":"DB08AEFBD6DF2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/4d/2116c1a4.jpg","comment_is_top":false,"comment_ctime":1716954078,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":14,"product_id":100006601,"comment_content":"本质就是管理复杂度，降低认知复杂度，保持在认知可控制的范围内。","like_count":0},{"had_liked":false,"id":382257,"user_name":"柯里","can_delete":false,"product_type":"c1","uid":2556517,"ip_address":"上海","ucode":"B66035EE1E389B","user_header":"https://static001.geekbang.org/account/avatar/00/27/02/65/ddb6460e.jpg","comment_is_top":false,"comment_ctime":1696946015,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"因为银弹是不存在的，软件以后会发展成什么样子都很难预测，那怎么会有一个啥都能解决的方案呢","like_count":0},{"had_liked":false,"id":376874,"user_name":"河南一线天","can_delete":false,"product_type":"c1","uid":1641026,"ip_address":"上海","ucode":"9D8FB86A577D2E","user_header":"https://static001.geekbang.org/account/avatar/00/19/0a/42/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1687611318,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"软件的显著特征是变量，结构化编程、面向对象编程、软件工程、架构设计只是为了让这种变化更容易控制和修改，所以不是它们不是银弹。","like_count":0},{"had_liked":false,"id":376157,"user_name":"赵伟","can_delete":false,"product_type":"c1","uid":1447138,"ip_address":"北京","ucode":"29FE137C436D14","user_header":"https://static001.geekbang.org/account/avatar/00/16/14/e2/261ed9a5.jpg","comment_is_top":false,"comment_ctime":1686396409,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"随着信息化革命越发深入，软件复杂度越来越高，旧的手段并不能解决新的问题。","like_count":0},{"had_liked":false,"id":375422,"user_name":"Sherk","can_delete":false,"product_type":"c1","uid":2156245,"ip_address":"广东","ucode":"AFE3E7F158258D","user_header":"https://static001.geekbang.org/account/avatar/00/20/e6/d5/4f1fc074.jpg","comment_is_top":false,"comment_ctime":1685447774,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"到现在业务逻辑复杂出现了DDD。","like_count":0},{"had_liked":false,"id":362349,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1752513,"ip_address":"北京","ucode":"A1D3C7C9DCCB89","user_header":"https://static001.geekbang.org/account/avatar/00/1a/bd/c1/992f6724.jpg","comment_is_top":false,"comment_ctime":1668432314,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"还是要多多学习，多多动脑筋，多多扣细节呀","like_count":0},{"had_liked":false,"id":357744,"user_name":"暮光谷","can_delete":false,"product_type":"c1","uid":1506587,"ip_address":"北京","ucode":"5A8BF90CCA46ED","user_header":"https://static001.geekbang.org/account/avatar/00/16/fd/1b/65c26382.jpg","comment_is_top":false,"comment_ctime":1663594753,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"因为软件工程历史过于宏大，所有我们无法考虑很多细节。比如第一次软件危机的原因是因为高级语言特性有问题，人员组织有问题，团队沟通方式有问题，人员素质有问题，还是领导层的战略问题，需求更改。根据现有资料，我认为银弹是讲如何少花钱，少花时间，产出高质量的软件产品。\n\n如果把观点集中在软件设计这个步骤，我们面对的问题是如何处理软件内不同角色的划分，层次和联系。就是如何制定这样一套约束让大家可以轻松的知道每个角色在做什么，角色调用起来顺手，有章可循。这个约束既保证大家思维统一，又保留灵活性。在这两者之间做个权衡。","like_count":0},{"had_liked":false,"id":351050,"user_name":"艺超(鲁鸣)","can_delete":false,"product_type":"c1","uid":1029436,"ip_address":"","ucode":"7F749FA543E0F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/3c/967d7291.jpg","comment_is_top":false,"comment_ctime":1657500981,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"唯一不变的是变化，只要有变化，解决方案都是暂时的啦","like_count":0},{"had_liked":false,"id":6914,"user_name":"华林","can_delete":false,"product_type":"c1","uid":1020238,"ip_address":"","ucode":"70A82E86FD78D5","user_header":"","comment_is_top":false,"comment_ctime":1525140693,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"解决问题的办法绝对不是依赖于越来越高的抽象层次，人类的弱点决定了这样的结果，无论抽象层次有多高，人都会把它变得更复杂，于是导致了更高级别的抽象，然后递归&#47;死循环","like_count":1},{"had_liked":false,"id":6913,"user_name":"华林","can_delete":false,"product_type":"c1","uid":1020238,"ip_address":"","ucode":"70A82E86FD78D5","user_header":"","comment_is_top":false,"comment_ctime":1525140692,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"解决问题的办法绝对不是依赖于越来越高的抽象层次，人类的弱点决定了这样的结果，无论抽象层次有多高，人都会把它变得更复杂，于是导致了更高级别的抽象，然后递归&#47;死循环","like_count":1},{"had_liked":false,"id":390981,"user_name":"Bravery168","can_delete":false,"product_type":"c1","uid":1232973,"ip_address":"广东","ucode":"DB08AEFBD6DF2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/4d/2116c1a4.jpg","comment_is_top":false,"comment_ctime":1716954078,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":14,"product_id":100006601,"comment_content":"本质就是管理复杂度，降低认知复杂度，保持在认知可控制的范围内。","like_count":0},{"had_liked":false,"id":382257,"user_name":"柯里","can_delete":false,"product_type":"c1","uid":2556517,"ip_address":"上海","ucode":"B66035EE1E389B","user_header":"https://static001.geekbang.org/account/avatar/00/27/02/65/ddb6460e.jpg","comment_is_top":false,"comment_ctime":1696946015,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"因为银弹是不存在的，软件以后会发展成什么样子都很难预测，那怎么会有一个啥都能解决的方案呢","like_count":0},{"had_liked":false,"id":376874,"user_name":"河南一线天","can_delete":false,"product_type":"c1","uid":1641026,"ip_address":"上海","ucode":"9D8FB86A577D2E","user_header":"https://static001.geekbang.org/account/avatar/00/19/0a/42/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1687611318,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"软件的显著特征是变量，结构化编程、面向对象编程、软件工程、架构设计只是为了让这种变化更容易控制和修改，所以不是它们不是银弹。","like_count":0},{"had_liked":false,"id":376157,"user_name":"赵伟","can_delete":false,"product_type":"c1","uid":1447138,"ip_address":"北京","ucode":"29FE137C436D14","user_header":"https://static001.geekbang.org/account/avatar/00/16/14/e2/261ed9a5.jpg","comment_is_top":false,"comment_ctime":1686396409,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"随着信息化革命越发深入，软件复杂度越来越高，旧的手段并不能解决新的问题。","like_count":0},{"had_liked":false,"id":375422,"user_name":"Sherk","can_delete":false,"product_type":"c1","uid":2156245,"ip_address":"广东","ucode":"AFE3E7F158258D","user_header":"https://static001.geekbang.org/account/avatar/00/20/e6/d5/4f1fc074.jpg","comment_is_top":false,"comment_ctime":1685447774,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"到现在业务逻辑复杂出现了DDD。","like_count":0},{"had_liked":false,"id":362349,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1752513,"ip_address":"北京","ucode":"A1D3C7C9DCCB89","user_header":"https://static001.geekbang.org/account/avatar/00/1a/bd/c1/992f6724.jpg","comment_is_top":false,"comment_ctime":1668432314,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"还是要多多学习，多多动脑筋，多多扣细节呀","like_count":0},{"had_liked":false,"id":357744,"user_name":"暮光谷","can_delete":false,"product_type":"c1","uid":1506587,"ip_address":"北京","ucode":"5A8BF90CCA46ED","user_header":"https://static001.geekbang.org/account/avatar/00/16/fd/1b/65c26382.jpg","comment_is_top":false,"comment_ctime":1663594753,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"因为软件工程历史过于宏大，所有我们无法考虑很多细节。比如第一次软件危机的原因是因为高级语言特性有问题，人员组织有问题，团队沟通方式有问题，人员素质有问题，还是领导层的战略问题，需求更改。根据现有资料，我认为银弹是讲如何少花钱，少花时间，产出高质量的软件产品。\n\n如果把观点集中在软件设计这个步骤，我们面对的问题是如何处理软件内不同角色的划分，层次和联系。就是如何制定这样一套约束让大家可以轻松的知道每个角色在做什么，角色调用起来顺手，有章可循。这个约束既保证大家思维统一，又保留灵活性。在这两者之间做个权衡。","like_count":0},{"had_liked":false,"id":351050,"user_name":"艺超(鲁鸣)","can_delete":false,"product_type":"c1","uid":1029436,"ip_address":"","ucode":"7F749FA543E0F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/3c/967d7291.jpg","comment_is_top":false,"comment_ctime":1657500981,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"唯一不变的是变化，只要有变化，解决方案都是暂时的啦","like_count":0},{"had_liked":false,"id":342979,"user_name":"吕凯 🌴","can_delete":false,"product_type":"c1","uid":1038841,"ip_address":"","ucode":"46A355ED5E67F0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/f9/f5d0dbc8.jpg","comment_is_top":false,"comment_ctime":1650559286,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计确实解决了当时的软件系统问题，但软件系统是在不断迭代的，更复杂的业务逻辑、更高的性能、更好的高可用、更大的数据处理量，从而导致了一定需要不断有新的技术来解决更复杂的问题。","like_count":0},{"had_liked":false,"id":342752,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1650445887,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"因为根本就不存在银弹","like_count":0},{"had_liked":false,"id":319075,"user_name":"厚子","can_delete":false,"product_type":"c1","uid":1079662,"ip_address":"","ucode":"023C6CD2903896","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/6e/0f84ea02.jpg","comment_is_top":false,"comment_ctime":1635567514,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"需求的变化，促进的软件技术的发展、进化","like_count":0},{"had_liked":false,"id":313742,"user_name":"do re mi fa","can_delete":false,"product_type":"c1","uid":2784420,"ip_address":"","ucode":"D6118C89DAD852","user_header":"https://static001.geekbang.org/account/avatar/00/2a/7c/a4/10dd0c22.jpg","comment_is_top":false,"comment_ctime":1632642412,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计各自解决不同的问题，结构化编程通过“自顶向下、结构化、模块化”的方法降低软件复杂度，面向对象编程解决业务变化带来的扩展难度，软件工程只能一定程度上缓解并不能根除软件危机，架构设计只能解决多部分组成的系统在设计方面的问题，每一种新方法的产生都是解决当下存在的问题，技术在进步，软件行业在发展，未来也会产生新的问题，不可能存在一劳永逸的“银弹”","like_count":0},{"had_liked":false,"id":311321,"user_name":"Drake敏","can_delete":false,"product_type":"c1","uid":2734734,"ip_address":"","ucode":"38366767EFDC90","user_header":"https://static001.geekbang.org/account/avatar/00/29/ba/8e/4645afae.jpg","comment_is_top":false,"comment_ctime":1631172677,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"不完善，没有合理的人去规划\n","like_count":0},{"had_liked":false,"id":300845,"user_name":"毛成方","can_delete":false,"product_type":"c1","uid":1459289,"ip_address":"","ucode":"DFBF3D464D8D7C","user_header":"https://static001.geekbang.org/account/avatar/00/16/44/59/b607b8c0.jpg","comment_is_top":false,"comment_ctime":1625402852,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"随着业务增加 模块增加 组件更新 从1.0 到X.0 软件设计需要不断升级进化以适应当前环境","like_count":0},{"had_liked":false,"id":298897,"user_name":"Geek_7cbad7","can_delete":false,"product_type":"c1","uid":2668565,"ip_address":"","ucode":"4D10CEDC135AD7","user_header":"","comment_is_top":false,"comment_ctime":1624363121,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"一切发展为了贴合需求。","like_count":0},{"had_liked":false,"id":298420,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1624092401,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"这些技术（面向结构，对象，架构）都是基于软件发张过程中历史问题或现象而寻求的解决方案。产生的背景就决定了它不是银弹，除非从更高的维度去设计解决方案，就像评论中说的：用4维的角度。","like_count":0},{"had_liked":false,"id":286523,"user_name":"佳楠","can_delete":false,"product_type":"c1","uid":1008809,"ip_address":"","ucode":"A1698AE91992AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/a9/27d63f2e.jpg","comment_is_top":false,"comment_ctime":1617355925,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计等都是一个向上总结的过程，这是软件开发发展的产物，不是基本元素。只要发展不停，那么总会产生更加贴合的现状的总结描述。","like_count":0},{"had_liked":false,"id":281976,"user_name":"张无忌","can_delete":false,"product_type":"c1","uid":1222000,"ip_address":"","ucode":"87E5FC2F415774","user_header":"https://static001.geekbang.org/account/avatar/00/12/a5/70/d7b70282.jpg","comment_is_top":false,"comment_ctime":1615000309,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"因为世界已经进入乌卡时代，计算机也普及开来，现在人人手里都有好几台计算设备（电脑、手机、智能手表、智能汽车、智能家居……），软件需求以前所未有量涌现出来，目前来看，上述概念还无法从根本上去解决时代的难题。可能量子计算才是革命性的。","like_count":0},{"had_liked":false,"id":342979,"user_name":"吕凯 🌴","can_delete":false,"product_type":"c1","uid":1038841,"ip_address":"","ucode":"46A355ED5E67F0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/f9/f5d0dbc8.jpg","comment_is_top":false,"comment_ctime":1650559286,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计确实解决了当时的软件系统问题，但软件系统是在不断迭代的，更复杂的业务逻辑、更高的性能、更好的高可用、更大的数据处理量，从而导致了一定需要不断有新的技术来解决更复杂的问题。","like_count":0},{"had_liked":false,"id":342752,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1650445887,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"因为根本就不存在银弹","like_count":0},{"had_liked":false,"id":319075,"user_name":"厚子","can_delete":false,"product_type":"c1","uid":1079662,"ip_address":"","ucode":"023C6CD2903896","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/6e/0f84ea02.jpg","comment_is_top":false,"comment_ctime":1635567514,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"需求的变化，促进的软件技术的发展、进化","like_count":0},{"had_liked":false,"id":313742,"user_name":"do re mi fa","can_delete":false,"product_type":"c1","uid":2784420,"ip_address":"","ucode":"D6118C89DAD852","user_header":"https://static001.geekbang.org/account/avatar/00/2a/7c/a4/10dd0c22.jpg","comment_is_top":false,"comment_ctime":1632642412,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计各自解决不同的问题，结构化编程通过“自顶向下、结构化、模块化”的方法降低软件复杂度，面向对象编程解决业务变化带来的扩展难度，软件工程只能一定程度上缓解并不能根除软件危机，架构设计只能解决多部分组成的系统在设计方面的问题，每一种新方法的产生都是解决当下存在的问题，技术在进步，软件行业在发展，未来也会产生新的问题，不可能存在一劳永逸的“银弹”","like_count":0},{"had_liked":false,"id":311321,"user_name":"Drake敏","can_delete":false,"product_type":"c1","uid":2734734,"ip_address":"","ucode":"38366767EFDC90","user_header":"https://static001.geekbang.org/account/avatar/00/29/ba/8e/4645afae.jpg","comment_is_top":false,"comment_ctime":1631172677,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"不完善，没有合理的人去规划\n","like_count":0},{"had_liked":false,"id":300845,"user_name":"毛成方","can_delete":false,"product_type":"c1","uid":1459289,"ip_address":"","ucode":"DFBF3D464D8D7C","user_header":"https://static001.geekbang.org/account/avatar/00/16/44/59/b607b8c0.jpg","comment_is_top":false,"comment_ctime":1625402852,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"随着业务增加 模块增加 组件更新 从1.0 到X.0 软件设计需要不断升级进化以适应当前环境","like_count":0},{"had_liked":false,"id":298897,"user_name":"Geek_7cbad7","can_delete":false,"product_type":"c1","uid":2668565,"ip_address":"","ucode":"4D10CEDC135AD7","user_header":"","comment_is_top":false,"comment_ctime":1624363121,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"一切发展为了贴合需求。","like_count":0},{"had_liked":false,"id":298420,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1624092401,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"这些技术（面向结构，对象，架构）都是基于软件发张过程中历史问题或现象而寻求的解决方案。产生的背景就决定了它不是银弹，除非从更高的维度去设计解决方案，就像评论中说的：用4维的角度。","like_count":0},{"had_liked":false,"id":286523,"user_name":"佳楠","can_delete":false,"product_type":"c1","uid":1008809,"ip_address":"","ucode":"A1698AE91992AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/a9/27d63f2e.jpg","comment_is_top":false,"comment_ctime":1617355925,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计等都是一个向上总结的过程，这是软件开发发展的产物，不是基本元素。只要发展不停，那么总会产生更加贴合的现状的总结描述。","like_count":0},{"had_liked":false,"id":281976,"user_name":"张无忌","can_delete":false,"product_type":"c1","uid":1222000,"ip_address":"","ucode":"87E5FC2F415774","user_header":"https://static001.geekbang.org/account/avatar/00/12/a5/70/d7b70282.jpg","comment_is_top":false,"comment_ctime":1615000309,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"因为世界已经进入乌卡时代，计算机也普及开来，现在人人手里都有好几台计算设备（电脑、手机、智能手表、智能汽车、智能家居……），软件需求以前所未有量涌现出来，目前来看，上述概念还无法从根本上去解决时代的难题。可能量子计算才是革命性的。","like_count":0},{"had_liked":false,"id":278312,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1612868394,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"我认为软件工程不存在银弹，因为软件工程是随着时代的发展(业务需求的变更)而变化的，我们不太可能在问题还没有暴露出来就想出来解决办法。所以面向过程、面向对象和现在的架构，都是软件工程发展到一定阶段带来的结果，或者说缓解问题的思路","like_count":0},{"had_liked":false,"id":276758,"user_name":"ThinkingMan.","can_delete":false,"product_type":"c1","uid":1217603,"ip_address":"","ucode":"722674A8BACA85","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/43/6e68c860.jpg","comment_is_top":false,"comment_ctime":1612102006,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"我理解这都是随着业务的多样化发展，怎么去让开发者设计者更高效更方便地去维护！","like_count":0},{"had_liked":false,"id":274014,"user_name":"曾子良","can_delete":false,"product_type":"c1","uid":1856182,"ip_address":"","ucode":"3C2F7234E40451","user_header":"https://static001.geekbang.org/account/avatar/00/1c/52/b6/202076f0.jpg","comment_is_top":false,"comment_ctime":1610788154,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"变化才是不变，各种方法论的出现，最终的目的就是有所取舍，找一个平衡点，实现业务的目标。没有最好的只有更好的。","like_count":0},{"had_liked":false,"id":261466,"user_name":"一马行千里","can_delete":false,"product_type":"c1","uid":1188090,"ip_address":"","ucode":"7725D8629B0265","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/fa/6ebaacb0.jpg","comment_is_top":false,"comment_ctime":1605346299,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"不会有一劳永逸的“银弹”。一个方法可能只能够解决目前的问题，但是基于这个方法会衍生出新的需求，超出了这个方法的能力，我们就需要寻找新的银弹。","like_count":0},{"had_liked":false,"id":259737,"user_name":"老艮额","can_delete":false,"product_type":"c1","uid":1180638,"ip_address":"","ucode":"60622F5DFE9D30","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/de/fe473006.jpg","comment_is_top":false,"comment_ctime":1604823072,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"都在寻找银弹，如果软件工程找到了银弹，说明这个行业已经进入夕阳期了，不会再有任何发展了。","like_count":0},{"had_liked":false,"id":256573,"user_name":"ugrg","can_delete":false,"product_type":"c1","uid":2073372,"ip_address":"","ucode":"573ECDC2AAF042","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaaDFHiag4sFbaEj4jiayVic8KoFrh0QU6wx4xSQWjCHw8jel2icmMCHXTakk6RsyMUfrnMGFibAASC1Q/132","comment_is_top":false,"comment_ctime":1603681266,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"没有银弹。软件开发是在一种动态的平衡上开展的，当我们能高效的解决现有问题后，新的需求便会应运而生。","like_count":0},{"had_liked":false,"id":253149,"user_name":"天草二十六","can_delete":false,"product_type":"c1","uid":1360712,"ip_address":"","ucode":"3165EE3007527B","user_header":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","comment_is_top":false,"comment_ctime":1602635811,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"总是听大佬们说银弹，原来出自狼人传说，还是打怪兽用的 。阔以啊~~\n没有银弹，难怪那么多自称为码农，而非架构师。","like_count":0},{"had_liked":false,"id":252066,"user_name":"我好像一点都不像程序员","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/63189817.jpg","comment_is_top":false,"comment_ctime":1602085170,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"因为没有一种方案可以适应所有的情况，时间是流动的，我们在三维角度所思考的方案，并不适用于四维的角度，最好的方案都是基于当前情况的最优解，而不是未来的最优解","like_count":0},{"had_liked":false,"id":251647,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1601747034,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"世界上没有完美的解决方案，新的技术解决方案出来必然会引来新的问题，我们要做的就是trade-off","like_count":0},{"had_liked":false,"id":246989,"user_name":"杨丽南","can_delete":false,"product_type":"c1","uid":1862885,"ip_address":"","ucode":"51B9926D6BE429","user_header":"","comment_is_top":false,"comment_ctime":1599551611,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"因为事物是在矛盾中发展的，解决了一个问题肯定会产生新的问题，所以又得有新的解决方案，如此循环往复，螺旋上升。","like_count":0,"discussions":[{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379718,"discussion_content":"很有意思的角度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624092181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278312,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1612868394,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"我认为软件工程不存在银弹，因为软件工程是随着时代的发展(业务需求的变更)而变化的，我们不太可能在问题还没有暴露出来就想出来解决办法。所以面向过程、面向对象和现在的架构，都是软件工程发展到一定阶段带来的结果，或者说缓解问题的思路","like_count":0},{"had_liked":false,"id":276758,"user_name":"ThinkingMan.","can_delete":false,"product_type":"c1","uid":1217603,"ip_address":"","ucode":"722674A8BACA85","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/43/6e68c860.jpg","comment_is_top":false,"comment_ctime":1612102006,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"我理解这都是随着业务的多样化发展，怎么去让开发者设计者更高效更方便地去维护！","like_count":0},{"had_liked":false,"id":274014,"user_name":"曾子良","can_delete":false,"product_type":"c1","uid":1856182,"ip_address":"","ucode":"3C2F7234E40451","user_header":"https://static001.geekbang.org/account/avatar/00/1c/52/b6/202076f0.jpg","comment_is_top":false,"comment_ctime":1610788154,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"变化才是不变，各种方法论的出现，最终的目的就是有所取舍，找一个平衡点，实现业务的目标。没有最好的只有更好的。","like_count":0},{"had_liked":false,"id":261466,"user_name":"一马行千里","can_delete":false,"product_type":"c1","uid":1188090,"ip_address":"","ucode":"7725D8629B0265","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/fa/6ebaacb0.jpg","comment_is_top":false,"comment_ctime":1605346299,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"不会有一劳永逸的“银弹”。一个方法可能只能够解决目前的问题，但是基于这个方法会衍生出新的需求，超出了这个方法的能力，我们就需要寻找新的银弹。","like_count":0},{"had_liked":false,"id":259737,"user_name":"老艮额","can_delete":false,"product_type":"c1","uid":1180638,"ip_address":"","ucode":"60622F5DFE9D30","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/de/fe473006.jpg","comment_is_top":false,"comment_ctime":1604823072,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"都在寻找银弹，如果软件工程找到了银弹，说明这个行业已经进入夕阳期了，不会再有任何发展了。","like_count":0},{"had_liked":false,"id":256573,"user_name":"ugrg","can_delete":false,"product_type":"c1","uid":2073372,"ip_address":"","ucode":"573ECDC2AAF042","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaaDFHiag4sFbaEj4jiayVic8KoFrh0QU6wx4xSQWjCHw8jel2icmMCHXTakk6RsyMUfrnMGFibAASC1Q/132","comment_is_top":false,"comment_ctime":1603681266,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"没有银弹。软件开发是在一种动态的平衡上开展的，当我们能高效的解决现有问题后，新的需求便会应运而生。","like_count":0},{"had_liked":false,"id":253149,"user_name":"天草二十六","can_delete":false,"product_type":"c1","uid":1360712,"ip_address":"","ucode":"3165EE3007527B","user_header":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","comment_is_top":false,"comment_ctime":1602635811,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"总是听大佬们说银弹，原来出自狼人传说，还是打怪兽用的 。阔以啊~~\n没有银弹，难怪那么多自称为码农，而非架构师。","like_count":0},{"had_liked":false,"id":252066,"user_name":"我好像一点都不像程序员","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/63189817.jpg","comment_is_top":false,"comment_ctime":1602085170,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"因为没有一种方案可以适应所有的情况，时间是流动的，我们在三维角度所思考的方案，并不适用于四维的角度，最好的方案都是基于当前情况的最优解，而不是未来的最优解","like_count":0,"discussions":[{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379718,"discussion_content":"很有意思的角度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624092181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251647,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1601747034,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"世界上没有完美的解决方案，新的技术解决方案出来必然会引来新的问题，我们要做的就是trade-off","like_count":0},{"had_liked":false,"id":246989,"user_name":"杨丽南","can_delete":false,"product_type":"c1","uid":1862885,"ip_address":"","ucode":"51B9926D6BE429","user_header":"","comment_is_top":false,"comment_ctime":1599551611,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"因为事物是在矛盾中发展的，解决了一个问题肯定会产生新的问题，所以又得有新的解决方案，如此循环往复，螺旋上升。","like_count":0},{"had_liked":false,"id":234903,"user_name":"林毅鑫","can_delete":false,"product_type":"c1","uid":1917916,"ip_address":"","ucode":"1BB3D186E90D96","user_header":"https://static001.geekbang.org/account/avatar/00/1d/43/dc/95d4f2c5.jpg","comment_is_top":false,"comment_ctime":1594823475,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"评论台精彩了。\n银弹被比喻为具有极端有效性的解决方法，作为杀手锏、最强杀招、王牌等的代称。\n市场不断变化，环境不断变化，想成为银弹太难。","like_count":0},{"had_liked":false,"id":229665,"user_name":"TIGEREI","can_delete":false,"product_type":"c1","uid":1925971,"ip_address":"","ucode":"B389D44B32C17E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0z6NdVNxFouNStz33ZFQAMhvEbhWzpicmibWmGiaazgC2WPSMls4hRSzSMXhAW7ttS8j2hWTbDsaSQ/132","comment_is_top":false,"comment_ctime":1593091900,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"时代在发展，业务在发展，业务对软件的要求也越来越高，势必要求软件方法的进步。","like_count":0},{"had_liked":false,"id":217339,"user_name":"程序员小岑","can_delete":false,"product_type":"c1","uid":1004089,"ip_address":"","ucode":"ECDE8A03AB3A31","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/39/3cc59148.jpg","comment_is_top":false,"comment_ctime":1589466760,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"因为软件的需求不断在变化，每一种方法都有自己适用的场景，没有一种方法可以能够完美解决任何一种场景。","like_count":0},{"had_liked":false,"id":207055,"user_name":"李乐平","can_delete":false,"product_type":"c1","uid":1245320,"ip_address":"","ucode":"BC716FBDA2C6B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/00/88/5b9847bb.jpg","comment_is_top":false,"comment_ctime":1587000692,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"不同领域软件的差异化很大，方法论也很多，而且在不断地变化，想要一个大一统的解决方案复杂度可想而知，只能针对不同阶段一些核心的，普适的问题，提供一些解决方案或模板，以此来缓解问题","like_count":0},{"had_liked":false,"id":200581,"user_name":"jeri","can_delete":false,"product_type":"c1","uid":1444375,"ip_address":"","ucode":"E3576BF43EC6F4","user_header":"https://static001.geekbang.org/account/avatar/00/16/0a/17/0f1c438e.jpg","comment_is_top":false,"comment_ctime":1585620354,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"“人月神话”：如果十个人干一个月，等同于一个人干十个月，那就是神话了，架构设计的目的就是limit趋向于这种神话","like_count":0},{"had_liked":false,"id":198777,"user_name":"哼歌儿李","can_delete":false,"product_type":"c1","uid":1357897,"ip_address":"","ucode":"D384DE36455A62","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/49/99ca2069.jpg","comment_is_top":false,"comment_ctime":1585467959,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"start with why！👍","like_count":0},{"had_liked":false,"id":192023,"user_name":"长街","can_delete":false,"product_type":"c1","uid":1929903,"ip_address":"","ucode":"1389AADC2859CB","user_header":"https://static001.geekbang.org/account/avatar/00/1d/72/af/474fc618.jpg","comment_is_top":false,"comment_ctime":1584814030,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":191053,"user_name":"杨小松","can_delete":false,"product_type":"c1","uid":1111742,"ip_address":"","ucode":"D89CAA76C60C13","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/be/e5b04e7d.jpg","comment_is_top":false,"comment_ctime":1584720348,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"打个卡，加深一下理解","like_count":0},{"had_liked":false,"id":181985,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582687555,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"抛开软件架构不讲，从同构性出发，在大尺度范围内看人类进化演进的历史就知道了，没有万能的原则或者方法论可以解释一切的，并且自然界无飞跃，这就决定演化过程是漫长的，极其复杂的过程，这这个过程中的解都是子问题的解，不是终极解。\n再回到软件架构来讲，软件架构出现是为了解决各种情况下出现的问题，在封闭组织中容易出现熵增，熵增则会带来混乱。别忘记了，软件架构解决问题的主体是人，是为了解决人的问题，而人的需求是一直在变化的，所以软件架构本身和人需求不断变化，这是没有银弹的两个核心原因。","like_count":0},{"had_liked":false,"id":163765,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1576801340,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":17,"product_id":100006601,"comment_content":"为何结构化编程、面向对象编程、软件工程、架构设计最后都没有成为软件领域的银弹？\n\n1. 软件设计是在质量、范围、时间、资源之间不停权衡之后的产物，没有任何一种方法可以同时满足上面所有需求。可以说软件开发的过程是带着脚镣跳舞的过程，所以没有银弹。\n2. 对于一个已经发布的成熟的产品或者解决方案，随着时间的推移，硬件、软件、行业都在快速发生变化，也不可能有一劳永逸的办法，只能是随着变化而变化，不断的进行演进。","like_count":0},{"had_liked":false,"id":234903,"user_name":"林毅鑫","can_delete":false,"product_type":"c1","uid":1917916,"ip_address":"","ucode":"1BB3D186E90D96","user_header":"https://static001.geekbang.org/account/avatar/00/1d/43/dc/95d4f2c5.jpg","comment_is_top":false,"comment_ctime":1594823475,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"评论台精彩了。\n银弹被比喻为具有极端有效性的解决方法，作为杀手锏、最强杀招、王牌等的代称。\n市场不断变化，环境不断变化，想成为银弹太难。","like_count":0},{"had_liked":false,"id":229665,"user_name":"TIGEREI","can_delete":false,"product_type":"c1","uid":1925971,"ip_address":"","ucode":"B389D44B32C17E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0z6NdVNxFouNStz33ZFQAMhvEbhWzpicmibWmGiaazgC2WPSMls4hRSzSMXhAW7ttS8j2hWTbDsaSQ/132","comment_is_top":false,"comment_ctime":1593091900,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"时代在发展，业务在发展，业务对软件的要求也越来越高，势必要求软件方法的进步。","like_count":0},{"had_liked":false,"id":217339,"user_name":"程序员小岑","can_delete":false,"product_type":"c1","uid":1004089,"ip_address":"","ucode":"ECDE8A03AB3A31","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/39/3cc59148.jpg","comment_is_top":false,"comment_ctime":1589466760,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"因为软件的需求不断在变化，每一种方法都有自己适用的场景，没有一种方法可以能够完美解决任何一种场景。","like_count":0},{"had_liked":false,"id":207055,"user_name":"李乐平","can_delete":false,"product_type":"c1","uid":1245320,"ip_address":"","ucode":"BC716FBDA2C6B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/00/88/5b9847bb.jpg","comment_is_top":false,"comment_ctime":1587000692,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"不同领域软件的差异化很大，方法论也很多，而且在不断地变化，想要一个大一统的解决方案复杂度可想而知，只能针对不同阶段一些核心的，普适的问题，提供一些解决方案或模板，以此来缓解问题","like_count":0},{"had_liked":false,"id":200581,"user_name":"jeri","can_delete":false,"product_type":"c1","uid":1444375,"ip_address":"","ucode":"E3576BF43EC6F4","user_header":"https://static001.geekbang.org/account/avatar/00/16/0a/17/0f1c438e.jpg","comment_is_top":false,"comment_ctime":1585620354,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"“人月神话”：如果十个人干一个月，等同于一个人干十个月，那就是神话了，架构设计的目的就是limit趋向于这种神话","like_count":0},{"had_liked":false,"id":198777,"user_name":"哼歌儿李","can_delete":false,"product_type":"c1","uid":1357897,"ip_address":"","ucode":"D384DE36455A62","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/49/99ca2069.jpg","comment_is_top":false,"comment_ctime":1585467959,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"start with why！👍","like_count":0},{"had_liked":false,"id":192023,"user_name":"长街","can_delete":false,"product_type":"c1","uid":1929903,"ip_address":"","ucode":"1389AADC2859CB","user_header":"https://static001.geekbang.org/account/avatar/00/1d/72/af/474fc618.jpg","comment_is_top":false,"comment_ctime":1584814030,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":191053,"user_name":"杨小松","can_delete":false,"product_type":"c1","uid":1111742,"ip_address":"","ucode":"D89CAA76C60C13","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/be/e5b04e7d.jpg","comment_is_top":false,"comment_ctime":1584720348,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"打个卡，加深一下理解","like_count":0},{"had_liked":false,"id":181985,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582687555,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"抛开软件架构不讲，从同构性出发，在大尺度范围内看人类进化演进的历史就知道了，没有万能的原则或者方法论可以解释一切的，并且自然界无飞跃，这就决定演化过程是漫长的，极其复杂的过程，这这个过程中的解都是子问题的解，不是终极解。\n再回到软件架构来讲，软件架构出现是为了解决各种情况下出现的问题，在封闭组织中容易出现熵增，熵增则会带来混乱。别忘记了，软件架构解决问题的主体是人，是为了解决人的问题，而人的需求是一直在变化的，所以软件架构本身和人需求不断变化，这是没有银弹的两个核心原因。","like_count":0},{"had_liked":false,"id":163765,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1576801340,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":17,"product_id":100006601,"comment_content":"为何结构化编程、面向对象编程、软件工程、架构设计最后都没有成为软件领域的银弹？\n\n1. 软件设计是在质量、范围、时间、资源之间不停权衡之后的产物，没有任何一种方法可以同时满足上面所有需求。可以说软件开发的过程是带着脚镣跳舞的过程，所以没有银弹。\n2. 对于一个已经发布的成熟的产品或者解决方案，随着时间的推移，硬件、软件、行业都在快速发生变化，也不可能有一劳永逸的办法，只能是随着变化而变化，不断的进行演进。","like_count":0},{"had_liked":false,"id":143076,"user_name":"JackFish","can_delete":false,"product_type":"c1","uid":1683571,"ip_address":"","ucode":"FEFC305F8E151F","user_header":"https://static001.geekbang.org/account/avatar/00/19/b0/73/112f6ede.jpg","comment_is_top":false,"comment_ctime":1571627395,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"从汇编、高级语言、面向过程直到架构设计。这些知识人类在计算机科学上的不断尝试而已。或许某一天会出现计算机领域的牛顿来解决某一场景下的所有问题。但人类总会发现新的问题又有新的方法来解决。这些都是人类从第维度到高维度进化的过程。","like_count":0},{"had_liked":false,"id":140842,"user_name":"梅西","can_delete":false,"product_type":"c1","uid":1596995,"ip_address":"","ucode":"9D10F8DCA714AB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELaM463iamXpl1zV4VvlZMuPDRaUlPyiaZvgA9IHVMa4TGnTwjkakHb9Otue6uORzBrMzvGlH8ZY7Rw/132","comment_is_top":false,"comment_ctime":1571057702,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"因为世上不存在完美。每个人看待的问题角度也不同。","like_count":0},{"had_liked":false,"id":121650,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1565178420,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"开发效率和业务复杂度是矛盾的综合体。业务的不断变化和复杂，需要技术上找到新的银弹。从单机到云原生开发这个过程中就可见一般。","like_count":0},{"had_liked":false,"id":118121,"user_name":"Tang","can_delete":false,"product_type":"c1","uid":1043591,"ip_address":"","ucode":"0FC724834EBA00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/87/f991a5f6.jpg","comment_is_top":false,"comment_ctime":1564249862,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"按照每个十年出现一个难题的规律，从二十世纪九十年代提出软件架构设计后，我们真正在解决的是什么问题？系统多样性的选择\n分别有哪些有代表性的解决方案？微服务，设计模式，各类框架\n在二十一世纪，有可能面临什么挑战？网络传输速度的加快，磁盘读写的加快，业务复杂度增加，变化的加快；\n也许需要计算机来完成这些低难度的业务变更，释放低级工作。","like_count":0},{"had_liked":false,"id":105555,"user_name":"AndyLee","can_delete":false,"product_type":"c1","uid":1268297,"ip_address":"","ucode":"778D0955217432","user_header":"","comment_is_top":false,"comment_ctime":1561029311,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"从发展的眼光看这个问题。\n1 从架构本身的演变来说，架构是为了解决已经出现的问题。有其固有的局限性。\n2 从要解决的领悟来说，领域不是一成不变的，新的领域你无法预期。\n","like_count":0},{"had_liked":false,"id":89226,"user_name":"cossea","can_delete":false,"product_type":"c1","uid":1007500,"ip_address":"","ucode":"8150119FB38BC8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJx2eP1mqjY5dXRxF5SKX4uvuSicYTGhOK3Q66uicFYicicpK53hnI5YAKOSvJ0qbAqKLE0gG8nEIQeww/132","comment_is_top":false,"comment_ctime":1556111899,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"历史就是借鉴，留给后人就是宝贵经验！","like_count":0},{"had_liked":false,"id":88375,"user_name":"缘由","can_delete":false,"product_type":"c1","uid":1508949,"ip_address":"","ucode":"F15C0B3436B7F4","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/55/1716235b.jpg","comment_is_top":false,"comment_ctime":1555913793,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"感觉就是一个天平，只有一端的加重砝码，另一端才能加砝码，不然肯定不平。所谓的银弹就是直接一端压死，这样不能是天平","like_count":0},{"had_liked":false,"id":87577,"user_name":"Illiya","can_delete":false,"product_type":"c1","uid":1496744,"ip_address":"","ucode":"DBF8764E312B9E","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/a8/77ea72fa.jpg","comment_is_top":false,"comment_ctime":1555637252,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"软件大多为实现业务逻辑而存在，最终面向的是人类，为人服务。妄想通过某个架构，某种软件解决人的需求，实在强人所难，这里的是软件～毕竟它们只是执行人类的命令，由人创造，无法完全媲美变化多端、思维广拓的人脑","like_count":0},{"had_liked":false,"id":85432,"user_name":"逍觉迷遥","can_delete":false,"product_type":"c1","uid":1070782,"ip_address":"","ucode":"4287B0B6A23A25","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/be/d68998fa.jpg","comment_is_top":false,"comment_ctime":1555059652,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"上古编程时期，使用简单粗暴的机器码(二进制串)，写个&quot;hello world&quot;需要几十甚至达到上百行！\n远古编程时期，汇编语言应运而生。采用指令(mov等)代表操作来对数和寄存器做操作，可读性得到了很大的提升！但是计算两个数相加同样需要14行代码，现在看来这个着实不少。\n古代编程时期，第一代高级语言横空出世。Fortran ，Lisp等为代表的语言极大程度提高了程序猿的编程效率！但是很快，第一次软件危机爆发(最具代表性的事件是美国水手一号火箭因为一行代码发射失败)\n近代编程时期，结构化编程语言带着解决第一次软件危机的使命从天而降！我最爱的C语言也是这个节点诞生的。然而，好景不长，第二次软件危机正悄然降临，它挥一挥衣袖，就让你的项目无所适从！\n现代编程时期，程序猿最喜欢的开发模式——面向对象编程浮出水面，它驱走第二次软件危机的阴霾。始于cpp，得益于Java，c#等迅速火遍全球。现在面向对象的语言种类更是层出不穷。话说面向对象编程问世四十余载，面向对象的程序猿真的有对象吗[捂脸][捂脸][捂脸]\n讲架构的课生生被我读成了编程语言进化论[奸笑][奸笑][奸笑]\n那么问题来了，什么时候会迎来第三次软件危机？[疑问][疑问][疑问]","like_count":0},{"had_liked":false,"id":79905,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1104812,"ip_address":"","ucode":"DFE9AD55030805","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/ac/d4f18665.jpg","comment_is_top":false,"comment_ctime":1553571804,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"软件为现实服务，现实结构多复杂，软件就要有多复杂，所以不存在万能的一个银弹来解决所有问题，但有一些方法论可以指导解决问题，比如架构设计上的&quot;因地制宜&quot;，&quot;可扩展性&quot;，&quot;模块解耦&quot;等。","like_count":0},{"had_liked":false,"id":143076,"user_name":"JackFish","can_delete":false,"product_type":"c1","uid":1683571,"ip_address":"","ucode":"FEFC305F8E151F","user_header":"https://static001.geekbang.org/account/avatar/00/19/b0/73/112f6ede.jpg","comment_is_top":false,"comment_ctime":1571627395,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"从汇编、高级语言、面向过程直到架构设计。这些知识人类在计算机科学上的不断尝试而已。或许某一天会出现计算机领域的牛顿来解决某一场景下的所有问题。但人类总会发现新的问题又有新的方法来解决。这些都是人类从第维度到高维度进化的过程。","like_count":0},{"had_liked":false,"id":140842,"user_name":"梅西","can_delete":false,"product_type":"c1","uid":1596995,"ip_address":"","ucode":"9D10F8DCA714AB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELaM463iamXpl1zV4VvlZMuPDRaUlPyiaZvgA9IHVMa4TGnTwjkakHb9Otue6uORzBrMzvGlH8ZY7Rw/132","comment_is_top":false,"comment_ctime":1571057702,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"因为世上不存在完美。每个人看待的问题角度也不同。","like_count":0},{"had_liked":false,"id":121650,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1565178420,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"开发效率和业务复杂度是矛盾的综合体。业务的不断变化和复杂，需要技术上找到新的银弹。从单机到云原生开发这个过程中就可见一般。","like_count":0},{"had_liked":false,"id":118121,"user_name":"Tang","can_delete":false,"product_type":"c1","uid":1043591,"ip_address":"","ucode":"0FC724834EBA00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/87/f991a5f6.jpg","comment_is_top":false,"comment_ctime":1564249862,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"按照每个十年出现一个难题的规律，从二十世纪九十年代提出软件架构设计后，我们真正在解决的是什么问题？系统多样性的选择\n分别有哪些有代表性的解决方案？微服务，设计模式，各类框架\n在二十一世纪，有可能面临什么挑战？网络传输速度的加快，磁盘读写的加快，业务复杂度增加，变化的加快；\n也许需要计算机来完成这些低难度的业务变更，释放低级工作。","like_count":0},{"had_liked":false,"id":105555,"user_name":"AndyLee","can_delete":false,"product_type":"c1","uid":1268297,"ip_address":"","ucode":"778D0955217432","user_header":"","comment_is_top":false,"comment_ctime":1561029311,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"从发展的眼光看这个问题。\n1 从架构本身的演变来说，架构是为了解决已经出现的问题。有其固有的局限性。\n2 从要解决的领悟来说，领域不是一成不变的，新的领域你无法预期。\n","like_count":0},{"had_liked":false,"id":89226,"user_name":"cossea","can_delete":false,"product_type":"c1","uid":1007500,"ip_address":"","ucode":"8150119FB38BC8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJx2eP1mqjY5dXRxF5SKX4uvuSicYTGhOK3Q66uicFYicicpK53hnI5YAKOSvJ0qbAqKLE0gG8nEIQeww/132","comment_is_top":false,"comment_ctime":1556111899,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"历史就是借鉴，留给后人就是宝贵经验！","like_count":0},{"had_liked":false,"id":88375,"user_name":"缘由","can_delete":false,"product_type":"c1","uid":1508949,"ip_address":"","ucode":"F15C0B3436B7F4","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/55/1716235b.jpg","comment_is_top":false,"comment_ctime":1555913793,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"感觉就是一个天平，只有一端的加重砝码，另一端才能加砝码，不然肯定不平。所谓的银弹就是直接一端压死，这样不能是天平","like_count":0},{"had_liked":false,"id":87577,"user_name":"Illiya","can_delete":false,"product_type":"c1","uid":1496744,"ip_address":"","ucode":"DBF8764E312B9E","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/a8/77ea72fa.jpg","comment_is_top":false,"comment_ctime":1555637252,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"软件大多为实现业务逻辑而存在，最终面向的是人类，为人服务。妄想通过某个架构，某种软件解决人的需求，实在强人所难，这里的是软件～毕竟它们只是执行人类的命令，由人创造，无法完全媲美变化多端、思维广拓的人脑","like_count":0},{"had_liked":false,"id":85432,"user_name":"逍觉迷遥","can_delete":false,"product_type":"c1","uid":1070782,"ip_address":"","ucode":"4287B0B6A23A25","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/be/d68998fa.jpg","comment_is_top":false,"comment_ctime":1555059652,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"上古编程时期，使用简单粗暴的机器码(二进制串)，写个&quot;hello world&quot;需要几十甚至达到上百行！\n远古编程时期，汇编语言应运而生。采用指令(mov等)代表操作来对数和寄存器做操作，可读性得到了很大的提升！但是计算两个数相加同样需要14行代码，现在看来这个着实不少。\n古代编程时期，第一代高级语言横空出世。Fortran ，Lisp等为代表的语言极大程度提高了程序猿的编程效率！但是很快，第一次软件危机爆发(最具代表性的事件是美国水手一号火箭因为一行代码发射失败)\n近代编程时期，结构化编程语言带着解决第一次软件危机的使命从天而降！我最爱的C语言也是这个节点诞生的。然而，好景不长，第二次软件危机正悄然降临，它挥一挥衣袖，就让你的项目无所适从！\n现代编程时期，程序猿最喜欢的开发模式——面向对象编程浮出水面，它驱走第二次软件危机的阴霾。始于cpp，得益于Java，c#等迅速火遍全球。现在面向对象的语言种类更是层出不穷。话说面向对象编程问世四十余载，面向对象的程序猿真的有对象吗[捂脸][捂脸][捂脸]\n讲架构的课生生被我读成了编程语言进化论[奸笑][奸笑][奸笑]\n那么问题来了，什么时候会迎来第三次软件危机？[疑问][疑问][疑问]","like_count":0},{"had_liked":false,"id":79905,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1104812,"ip_address":"","ucode":"DFE9AD55030805","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/ac/d4f18665.jpg","comment_is_top":false,"comment_ctime":1553571804,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"软件为现实服务，现实结构多复杂，软件就要有多复杂，所以不存在万能的一个银弹来解决所有问题，但有一些方法论可以指导解决问题，比如架构设计上的&quot;因地制宜&quot;，&quot;可扩展性&quot;，&quot;模块解耦&quot;等。","like_count":0},{"had_liked":false,"id":78034,"user_name":"小小杨","can_delete":false,"product_type":"c1","uid":1105218,"ip_address":"","ucode":"7E4DC9A782FFD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/42/4a82631e.jpg","comment_is_top":false,"comment_ctime":1553059853,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"软件是不断变化和发展的，所以没有任何方法能完全控制这种变化带来的复杂度，只能缓解，不存在银弹之说。","like_count":0},{"had_liked":false,"id":70901,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1551226128,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"结构化编程 面向对象编程 软件架构，都是针对当时面对的情况所提出的解决方案，所以对于未来遇到的问题，并不具有通用性。\n软件行业之所以没有银弹，是因为编程需要协调各方面的资源，是一件复杂的工作，任何改进的点都只能改善局部而已。","like_count":0},{"had_liked":false,"id":69277,"user_name":"HungerW","can_delete":false,"product_type":"c1","uid":1022091,"ip_address":"","ucode":"75689EDF0F8E7F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/8b/7a691d53.jpg","comment_is_top":false,"comment_ctime":1550710998,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"为什么它们没有成为软件领域的银弹？\n因为软件需求场景各异，需求复杂且多变。不可能像工业品一样，制造一个模具，然后批量化生产就好。","like_count":0},{"had_liked":false,"id":63621,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1548418202,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构设计其实是为了解决大系统耦合问题，系统过大时需要内部各模块相互协调和配合，只有设计合理的架构才能支撑其高性能，高并发，高扩展。\n架构设计产生的背景有其历史原因：语言的进化(机器语言-汇编语言-高级语言)释放了程序猿的生产力，软件危机的产生提高了复杂性及扩展性。\n从模块-对象-组件是架构的基本拆分单元和手段，从结构性编程-面向对象编程是提高应对复杂性，扩展性的基础。\n\n软件领域没有银弹，银弹只是相对于现在问题的解决方案，随着新问题的出现银弹也会失效。唯一不变的是变化是最好的证明。","like_count":0},{"had_liked":false,"id":62877,"user_name":"付志波","can_delete":false,"product_type":"c1","uid":1378093,"ip_address":"","ucode":"3842BD04E255DE","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/2d/eab19d59.jpg","comment_is_top":false,"comment_ctime":1548201401,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"耦合严重，代码复杂是很多软件设计思想无法成为银弹原因。","like_count":0},{"had_liked":false,"id":52368,"user_name":"刘滨涛(陆逾)","can_delete":false,"product_type":"c1","uid":1196178,"ip_address":"","ucode":"1BC816E0A43D7C","user_header":"https://static001.geekbang.org/account/avatar/00/12/40/92/e2988de4.jpg","comment_is_top":false,"comment_ctime":1545369492,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"设计的本质是为了解决变化问题，不同的环境，不同的需求急需解决的问题也不尽相同，所以没有最好的架构设计，只有合适的架构设计。","like_count":0},{"had_liked":false,"id":51244,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1545141786,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"通过这节的阅读学习，了解了程序语言的发展历程，从机器到汇编和第一个高级Fortran,然后结构化编程Pascal及现在主流的面向对象，在这个发展的过程中，由于软件系统规模的增加，90时代出现的软件架构的概念。\n\n软件架构主要最先出现在大厂，因为里面的系统规模庞大，耦合严重，逻辑复杂。这样通过阅读知道了编程语言的发展和软件架构的来源，对之后的学习同样会起到重要的帮助。\n\n","like_count":0},{"had_liked":false,"id":32757,"user_name":"小Z","can_delete":false,"product_type":"c1","uid":1262239,"ip_address":"","ucode":"7B5C0A31F49CEC","user_header":"https://static001.geekbang.org/account/avatar/00/13/42/9f/8fedb02d.jpg","comment_is_top":false,"comment_ctime":1539688484,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"评论已经说的很好了 架构没有银蛋的根本原因就是在于变化。但是对于变化到极致的点来说 银蛋已经存在了。","like_count":0},{"had_liked":false,"id":32102,"user_name":"Bravery168","can_delete":false,"product_type":"c1","uid":1232973,"ip_address":"","ucode":"DB08AEFBD6DF2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/4d/2116c1a4.jpg","comment_is_top":false,"comment_ctime":1539415905,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":19,"product_id":100006601,"comment_content":"从历史的角度可以看出，随着软件解决问题的背景在不断变化，解决问题的工具和方法论也在不断演进和变化。从模块，到组件，到框架，再到架构，前面提出的方法论并没有过时，是一个不断积累和沉淀的过程。最终的目的，我觉得还是要解决软件系统应对外部复杂变化的能力，降低复杂度，降低成本，提高技术的适应力。","like_count":0},{"had_liked":false,"id":31546,"user_name":"wenjianping","can_delete":false,"product_type":"c1","uid":1263152,"ip_address":"","ucode":"C69D31D0EA034C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0ialic1F0eibTpbqxdPngPpf8TOUljonTLtHIlnibcic7LN5ib1Y4xUic3ex1boaVwFO8XXTaBQ5AhJeqw/132","comment_is_top":false,"comment_ctime":1539226284,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"1.软件的复杂性：\n    a.机器交互的复杂性\n    b.不可见: 运行期不易观察导致的复杂性\n    c.需求的复杂性\n    d.协作交流的复杂性\n    e.要长期维护(变更)导致的复杂性\n    f.为性能、可用、可靠等而带来的额外的复杂性\n    g.为抽象到实现带来的复杂性\n2.对变化的支持\n    a.因需要对变化支持，导致不存在不可变的东西\n    b.变化导致原有复杂性持续产生影响\n    c.变化加剧了原有的复杂性\n","like_count":0},{"had_liked":false,"id":78034,"user_name":"小小杨","can_delete":false,"product_type":"c1","uid":1105218,"ip_address":"","ucode":"7E4DC9A782FFD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/42/4a82631e.jpg","comment_is_top":false,"comment_ctime":1553059853,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"软件是不断变化和发展的，所以没有任何方法能完全控制这种变化带来的复杂度，只能缓解，不存在银弹之说。","like_count":0},{"had_liked":false,"id":70901,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1551226128,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"结构化编程 面向对象编程 软件架构，都是针对当时面对的情况所提出的解决方案，所以对于未来遇到的问题，并不具有通用性。\n软件行业之所以没有银弹，是因为编程需要协调各方面的资源，是一件复杂的工作，任何改进的点都只能改善局部而已。","like_count":0},{"had_liked":false,"id":69277,"user_name":"HungerW","can_delete":false,"product_type":"c1","uid":1022091,"ip_address":"","ucode":"75689EDF0F8E7F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/8b/7a691d53.jpg","comment_is_top":false,"comment_ctime":1550710998,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"为什么它们没有成为软件领域的银弹？\n因为软件需求场景各异，需求复杂且多变。不可能像工业品一样，制造一个模具，然后批量化生产就好。","like_count":0},{"had_liked":false,"id":63621,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1548418202,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构设计其实是为了解决大系统耦合问题，系统过大时需要内部各模块相互协调和配合，只有设计合理的架构才能支撑其高性能，高并发，高扩展。\n架构设计产生的背景有其历史原因：语言的进化(机器语言-汇编语言-高级语言)释放了程序猿的生产力，软件危机的产生提高了复杂性及扩展性。\n从模块-对象-组件是架构的基本拆分单元和手段，从结构性编程-面向对象编程是提高应对复杂性，扩展性的基础。\n\n软件领域没有银弹，银弹只是相对于现在问题的解决方案，随着新问题的出现银弹也会失效。唯一不变的是变化是最好的证明。","like_count":0},{"had_liked":false,"id":62877,"user_name":"付志波","can_delete":false,"product_type":"c1","uid":1378093,"ip_address":"","ucode":"3842BD04E255DE","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/2d/eab19d59.jpg","comment_is_top":false,"comment_ctime":1548201401,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"耦合严重，代码复杂是很多软件设计思想无法成为银弹原因。","like_count":0},{"had_liked":false,"id":52368,"user_name":"刘滨涛(陆逾)","can_delete":false,"product_type":"c1","uid":1196178,"ip_address":"","ucode":"1BC816E0A43D7C","user_header":"https://static001.geekbang.org/account/avatar/00/12/40/92/e2988de4.jpg","comment_is_top":false,"comment_ctime":1545369492,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"设计的本质是为了解决变化问题，不同的环境，不同的需求急需解决的问题也不尽相同，所以没有最好的架构设计，只有合适的架构设计。","like_count":0},{"had_liked":false,"id":51244,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1545141786,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"通过这节的阅读学习，了解了程序语言的发展历程，从机器到汇编和第一个高级Fortran,然后结构化编程Pascal及现在主流的面向对象，在这个发展的过程中，由于软件系统规模的增加，90时代出现的软件架构的概念。\n\n软件架构主要最先出现在大厂，因为里面的系统规模庞大，耦合严重，逻辑复杂。这样通过阅读知道了编程语言的发展和软件架构的来源，对之后的学习同样会起到重要的帮助。\n\n","like_count":0},{"had_liked":false,"id":32757,"user_name":"小Z","can_delete":false,"product_type":"c1","uid":1262239,"ip_address":"","ucode":"7B5C0A31F49CEC","user_header":"https://static001.geekbang.org/account/avatar/00/13/42/9f/8fedb02d.jpg","comment_is_top":false,"comment_ctime":1539688484,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"评论已经说的很好了 架构没有银蛋的根本原因就是在于变化。但是对于变化到极致的点来说 银蛋已经存在了。","like_count":0},{"had_liked":false,"id":32102,"user_name":"Bravery168","can_delete":false,"product_type":"c1","uid":1232973,"ip_address":"","ucode":"DB08AEFBD6DF2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/4d/2116c1a4.jpg","comment_is_top":false,"comment_ctime":1539415905,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":19,"product_id":100006601,"comment_content":"从历史的角度可以看出，随着软件解决问题的背景在不断变化，解决问题的工具和方法论也在不断演进和变化。从模块，到组件，到框架，再到架构，前面提出的方法论并没有过时，是一个不断积累和沉淀的过程。最终的目的，我觉得还是要解决软件系统应对外部复杂变化的能力，降低复杂度，降低成本，提高技术的适应力。","like_count":0},{"had_liked":false,"id":31546,"user_name":"wenjianping","can_delete":false,"product_type":"c1","uid":1263152,"ip_address":"","ucode":"C69D31D0EA034C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0ialic1F0eibTpbqxdPngPpf8TOUljonTLtHIlnibcic7LN5ib1Y4xUic3ex1boaVwFO8XXTaBQ5AhJeqw/132","comment_is_top":false,"comment_ctime":1539226284,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"1.软件的复杂性：\n    a.机器交互的复杂性\n    b.不可见: 运行期不易观察导致的复杂性\n    c.需求的复杂性\n    d.协作交流的复杂性\n    e.要长期维护(变更)导致的复杂性\n    f.为性能、可用、可靠等而带来的额外的复杂性\n    g.为抽象到实现带来的复杂性\n2.对变化的支持\n    a.因需要对变化支持，导致不存在不可变的东西\n    b.变化导致原有复杂性持续产生影响\n    c.变化加剧了原有的复杂性\n","like_count":0},{"had_liked":false,"id":31337,"user_name":"lucoffee","can_delete":false,"product_type":"c1","uid":1133208,"ip_address":"","ucode":"27D20476D21D34","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/98/1c318d41.jpg","comment_is_top":false,"comment_ctime":1539154206,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"比较深刻的是第一次软件危机，火箭发射失败。","like_count":0},{"had_liked":false,"id":30447,"user_name":"leisure cat","can_delete":false,"product_type":"c1","uid":1188716,"ip_address":"","ucode":"06367B7544C10E","user_header":"https://static001.geekbang.org/account/avatar/00/12/23/6c/a8bffaa5.jpg","comment_is_top":false,"comment_ctime":1538870984,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"真有银弹的那一天，就不需要架构师了。","like_count":0},{"had_liked":false,"id":28740,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1022958,"ip_address":"","ucode":"1B8D884D254070","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/ee/8950c240.jpg","comment_is_top":false,"comment_ctime":1538137653,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"任何事都没有银弹","like_count":0},{"had_liked":false,"id":26176,"user_name":"self-discipline","can_delete":false,"product_type":"c1","uid":1024457,"ip_address":"","ucode":"A5AEDCA9ACC68A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/c9/501a1d02.jpg","comment_is_top":false,"comment_ctime":1537512504,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"个人认为软件编程的代码组织,业务的复杂度,乃至于现在的数据复杂度数据量来说,都没有唯一的模式加以处理的,计算机领域说不准将来哪个时刻又需要从量产达到质变的","like_count":0},{"had_liked":false,"id":20962,"user_name":"petit_kayak","can_delete":false,"product_type":"c1","uid":1025214,"ip_address":"","ucode":"6889CCCBFA0180","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/be/39cc22f5.jpg","comment_is_top":false,"comment_ctime":1534833548,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"在管理上有一个说法：每个人最终会被升职到不适合的岗位。软件设计上也有类似的规律，结构化设计、软件工程、面向对象、软件架构，这些出现的时候都起到了改善软件质量、促进软件设计的作用，结果就是软件在这些助推器的帮助下变得更加强大也更加复杂，最终软件的复杂度肯定会超越之前架构的管理能力，引起后者的失败","like_count":0},{"had_liked":false,"id":20299,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1102652,"ip_address":"","ucode":"E04A474CAF6D26","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/3c/ab6425f7.jpg","comment_is_top":false,"comment_ctime":1534369296,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"结构化编程，面向对象，软件架构之所以没有成为银弹，是因为系统复杂性的演变，系统的复杂性就像有生命一样，会不断成长。当今的软件的复杂度已经不是一个方法或一个规范能够应对的。它更多需要多种方法的融合，针对不同的细节点，使用不同的方法。也许随着业务或者科技的进步，还会出现新的问题，还会出现新的概念。","like_count":0},{"had_liked":false,"id":19949,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534175489,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"解决一个特定场景的方法很多，真不敢说某种方法就是银弹，说不定会有更好的方法未被挖掘出来。扩大一点看，就更没有某种方法能适应所有场景，也有新的场景在不断涌现。","like_count":0},{"had_liked":false,"id":16037,"user_name":"绿豆先生","can_delete":false,"product_type":"c1","uid":1118287,"ip_address":"","ucode":"6698F8B28588B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/4f/ac326acf.jpg","comment_is_top":false,"comment_ctime":1531749759,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"软件的出现就是为了满足需求，需求的变化是永无止境的，不断的适应新变化才是软件的生命力所在，因此上银弹不存在。","like_count":0},{"had_liked":false,"id":13802,"user_name":"哼","can_delete":false,"product_type":"c1","uid":1162262,"ip_address":"","ucode":"A3C3FB2773E0DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/16/0695027f.jpg","comment_is_top":false,"comment_ctime":1529990011,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"现在所做的所有方案都是针对目前发生的问题、所显现或认知到的问题，而并非针对未来在实践过程中产生的新问题，并不存在一个万能的方法一劳永逸解决所有问题。所以并不存在银弹。","like_count":0},{"had_liked":false,"id":13797,"user_name":"林步蜓","can_delete":false,"product_type":"c1","uid":1147804,"ip_address":"","ucode":"5EFF8F302D98B1","user_header":"https://static001.geekbang.org/account/avatar/00/11/83/9c/e65537eb.jpg","comment_is_top":false,"comment_ctime":1529986495,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"银弹，作为直线子弹，是用来对付明确的一个小目标靶的。\n而软件工程或者说一个大产品项目，不是一个目标靶，也不是战术目标，而是未知的战役。","like_count":0},{"had_liked":false,"id":31337,"user_name":"lucoffee","can_delete":false,"product_type":"c1","uid":1133208,"ip_address":"","ucode":"27D20476D21D34","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/98/1c318d41.jpg","comment_is_top":false,"comment_ctime":1539154206,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"比较深刻的是第一次软件危机，火箭发射失败。","like_count":0},{"had_liked":false,"id":30447,"user_name":"leisure cat","can_delete":false,"product_type":"c1","uid":1188716,"ip_address":"","ucode":"06367B7544C10E","user_header":"https://static001.geekbang.org/account/avatar/00/12/23/6c/a8bffaa5.jpg","comment_is_top":false,"comment_ctime":1538870984,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"真有银弹的那一天，就不需要架构师了。","like_count":0},{"had_liked":false,"id":28740,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1022958,"ip_address":"","ucode":"1B8D884D254070","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/ee/8950c240.jpg","comment_is_top":false,"comment_ctime":1538137653,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"任何事都没有银弹","like_count":0},{"had_liked":false,"id":26176,"user_name":"self-discipline","can_delete":false,"product_type":"c1","uid":1024457,"ip_address":"","ucode":"A5AEDCA9ACC68A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/c9/501a1d02.jpg","comment_is_top":false,"comment_ctime":1537512504,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"个人认为软件编程的代码组织,业务的复杂度,乃至于现在的数据复杂度数据量来说,都没有唯一的模式加以处理的,计算机领域说不准将来哪个时刻又需要从量产达到质变的","like_count":0},{"had_liked":false,"id":20962,"user_name":"petit_kayak","can_delete":false,"product_type":"c1","uid":1025214,"ip_address":"","ucode":"6889CCCBFA0180","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/be/39cc22f5.jpg","comment_is_top":false,"comment_ctime":1534833548,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"在管理上有一个说法：每个人最终会被升职到不适合的岗位。软件设计上也有类似的规律，结构化设计、软件工程、面向对象、软件架构，这些出现的时候都起到了改善软件质量、促进软件设计的作用，结果就是软件在这些助推器的帮助下变得更加强大也更加复杂，最终软件的复杂度肯定会超越之前架构的管理能力，引起后者的失败","like_count":0},{"had_liked":false,"id":20299,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1102652,"ip_address":"","ucode":"E04A474CAF6D26","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/3c/ab6425f7.jpg","comment_is_top":false,"comment_ctime":1534369296,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"结构化编程，面向对象，软件架构之所以没有成为银弹，是因为系统复杂性的演变，系统的复杂性就像有生命一样，会不断成长。当今的软件的复杂度已经不是一个方法或一个规范能够应对的。它更多需要多种方法的融合，针对不同的细节点，使用不同的方法。也许随着业务或者科技的进步，还会出现新的问题，还会出现新的概念。","like_count":0},{"had_liked":false,"id":19949,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534175489,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"解决一个特定场景的方法很多，真不敢说某种方法就是银弹，说不定会有更好的方法未被挖掘出来。扩大一点看，就更没有某种方法能适应所有场景，也有新的场景在不断涌现。","like_count":0},{"had_liked":false,"id":16037,"user_name":"绿豆先生","can_delete":false,"product_type":"c1","uid":1118287,"ip_address":"","ucode":"6698F8B28588B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/4f/ac326acf.jpg","comment_is_top":false,"comment_ctime":1531749759,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"软件的出现就是为了满足需求，需求的变化是永无止境的，不断的适应新变化才是软件的生命力所在，因此上银弹不存在。","like_count":0},{"had_liked":false,"id":13802,"user_name":"哼","can_delete":false,"product_type":"c1","uid":1162262,"ip_address":"","ucode":"A3C3FB2773E0DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/16/0695027f.jpg","comment_is_top":false,"comment_ctime":1529990011,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"现在所做的所有方案都是针对目前发生的问题、所显现或认知到的问题，而并非针对未来在实践过程中产生的新问题，并不存在一个万能的方法一劳永逸解决所有问题。所以并不存在银弹。","like_count":0},{"had_liked":false,"id":13797,"user_name":"林步蜓","can_delete":false,"product_type":"c1","uid":1147804,"ip_address":"","ucode":"5EFF8F302D98B1","user_header":"https://static001.geekbang.org/account/avatar/00/11/83/9c/e65537eb.jpg","comment_is_top":false,"comment_ctime":1529986495,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"银弹，作为直线子弹，是用来对付明确的一个小目标靶的。\n而软件工程或者说一个大产品项目，不是一个目标靶，也不是战术目标，而是未知的战役。","like_count":0},{"had_liked":false,"id":13594,"user_name":"念一","can_delete":false,"product_type":"c1","uid":1048521,"ip_address":"","ucode":"DFBFF24D5FDDAA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/c9/0f9aa462.jpg","comment_is_top":false,"comment_ctime":1529840177,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"时间不会停，问题一直会存在！","like_count":0},{"had_liked":false,"id":12886,"user_name":"wj","can_delete":false,"product_type":"c1","uid":1009760,"ip_address":"","ucode":"5A48E7DB083CBB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/60/54b07bd6.jpg","comment_is_top":false,"comment_ctime":1529113493,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"历史的发展已经说明了答案，软件开发演进从机器语言，汇编语言，高级语言，第一次软件危机产生的结构化理论，第二次软件危机的面向对象理论，演进过程中，技术的发展，需求的复杂变化，硬件的改进都会带来与当前的开发模式不协调的地方，例如多核带来的并发并行模型，区块链的发展，cpu的numa和smp架构，甚至未来量子理论的发展，都可能改变现在的研发思维..","like_count":0},{"had_liked":false,"id":10599,"user_name":"火山飘雪","can_delete":false,"product_type":"c1","uid":1135988,"ip_address":"","ucode":"8EA1CE2DA06DF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/74/04e95bd8.jpg","comment_is_top":false,"comment_ctime":1527607371,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"我认为软件是为业务需求服务的，只要业务服务不断的变化，复杂度不断得增加，软件开发就会跟着变更","like_count":0},{"had_liked":false,"id":10553,"user_name":"巫","can_delete":false,"product_type":"c1","uid":1023068,"ip_address":"","ucode":"85E71B16812776","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/5c/4f35bdfe.jpg","comment_is_top":false,"comment_ctime":1527592341,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"个人理解，从某些角度来说，银弹还是存在的。不同问题、不同时期会有不同的银弹。银弹可以杀死狼人，但可能杀不死进化的狼人。\n正像大家说的，软件有多方面的复杂性，银弹也就不止一种。","like_count":0},{"had_liked":false,"id":10530,"user_name":"Adun Ton","can_delete":false,"product_type":"c1","uid":1124129,"ip_address":"","ucode":"3AAF3B95AC480D","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/21/0adae3d2.jpg","comment_is_top":false,"comment_ctime":1527580203,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"没有银弹，需求的发展使问题总是超前于有效的方法。","like_count":0},{"had_liked":false,"id":10319,"user_name":"mkmonkey","can_delete":false,"product_type":"c1","uid":1063680,"ip_address":"","ucode":"6C621D68EE93E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/00/4174249e.jpg","comment_is_top":false,"comment_ctime":1527472526,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"银弹:终极大招！没有一个软件是靠大招来上线的，是靠着前后端的配合，测试的严谨来完成项目的，没有哪个环节代替所有","like_count":0},{"had_liked":false,"id":10263,"user_name":"sensitivemix","can_delete":false,"product_type":"c1","uid":1058510,"ip_address":"","ucode":"F1E374DD4BE177","user_header":"https://static001.geekbang.org/account/avatar/00/10/26/ce/db5405e7.jpg","comment_is_top":false,"comment_ctime":1527426822,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"需求总是变化～没有银弹，老师说的很好","like_count":0},{"had_liked":false,"id":10246,"user_name":"雨林霖","can_delete":false,"product_type":"c1","uid":1027232,"ip_address":"","ucode":"5C4585E473B9DA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a0/5832bb01.jpg","comment_is_top":false,"comment_ctime":1527411272,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构终究是为了实现业务，没有大一统的架构支撑千变万化的业务","like_count":0},{"had_liked":false,"id":9649,"user_name":"howie6879","can_delete":false,"product_type":"c1","uid":1067317,"ip_address":"","ucode":"2C22144D922CBA","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/35/53f278f3.jpg","comment_is_top":false,"comment_ctime":1527000921,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"简简单单的发展历程，道出了编程语言的进化史，老师很厉害，茅塞顿开，在解决问题中进化，问题无止尽，也就看不到所谓的银弹了","like_count":0},{"had_liked":false,"id":9484,"user_name":"Forrest Li","can_delete":false,"product_type":"c1","uid":1014880,"ip_address":"","ucode":"E5F3999FD888D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/60/0d508466.jpg","comment_is_top":false,"comment_ctime":1526904096,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构设计的历史背景：从机器语言、汇编语言到高级语言，程序员们终于可以开始施展拳脚，但面对现实世界中各种各样的复杂场景，这些初出茅庐、不经世事的年轻人、年轻技术还需要继续发展。\n计算机硬件技术的发展、业务场景的复杂多变使得软件技术也需要不断更新适配，因此没有一种彻底的解决思路。","like_count":0},{"had_liked":false,"id":13594,"user_name":"念一","can_delete":false,"product_type":"c1","uid":1048521,"ip_address":"","ucode":"DFBFF24D5FDDAA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/c9/0f9aa462.jpg","comment_is_top":false,"comment_ctime":1529840177,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"时间不会停，问题一直会存在！","like_count":0},{"had_liked":false,"id":12886,"user_name":"wj","can_delete":false,"product_type":"c1","uid":1009760,"ip_address":"","ucode":"5A48E7DB083CBB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/60/54b07bd6.jpg","comment_is_top":false,"comment_ctime":1529113493,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"历史的发展已经说明了答案，软件开发演进从机器语言，汇编语言，高级语言，第一次软件危机产生的结构化理论，第二次软件危机的面向对象理论，演进过程中，技术的发展，需求的复杂变化，硬件的改进都会带来与当前的开发模式不协调的地方，例如多核带来的并发并行模型，区块链的发展，cpu的numa和smp架构，甚至未来量子理论的发展，都可能改变现在的研发思维..","like_count":0},{"had_liked":false,"id":10599,"user_name":"火山飘雪","can_delete":false,"product_type":"c1","uid":1135988,"ip_address":"","ucode":"8EA1CE2DA06DF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/74/04e95bd8.jpg","comment_is_top":false,"comment_ctime":1527607371,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"我认为软件是为业务需求服务的，只要业务服务不断的变化，复杂度不断得增加，软件开发就会跟着变更","like_count":0},{"had_liked":false,"id":10553,"user_name":"巫","can_delete":false,"product_type":"c1","uid":1023068,"ip_address":"","ucode":"85E71B16812776","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/5c/4f35bdfe.jpg","comment_is_top":false,"comment_ctime":1527592341,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"个人理解，从某些角度来说，银弹还是存在的。不同问题、不同时期会有不同的银弹。银弹可以杀死狼人，但可能杀不死进化的狼人。\n正像大家说的，软件有多方面的复杂性，银弹也就不止一种。","like_count":0},{"had_liked":false,"id":10530,"user_name":"Adun Ton","can_delete":false,"product_type":"c1","uid":1124129,"ip_address":"","ucode":"3AAF3B95AC480D","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/21/0adae3d2.jpg","comment_is_top":false,"comment_ctime":1527580203,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"没有银弹，需求的发展使问题总是超前于有效的方法。","like_count":0},{"had_liked":false,"id":10319,"user_name":"mkmonkey","can_delete":false,"product_type":"c1","uid":1063680,"ip_address":"","ucode":"6C621D68EE93E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/00/4174249e.jpg","comment_is_top":false,"comment_ctime":1527472526,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"银弹:终极大招！没有一个软件是靠大招来上线的，是靠着前后端的配合，测试的严谨来完成项目的，没有哪个环节代替所有","like_count":0},{"had_liked":false,"id":10263,"user_name":"sensitivemix","can_delete":false,"product_type":"c1","uid":1058510,"ip_address":"","ucode":"F1E374DD4BE177","user_header":"https://static001.geekbang.org/account/avatar/00/10/26/ce/db5405e7.jpg","comment_is_top":false,"comment_ctime":1527426822,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"需求总是变化～没有银弹，老师说的很好","like_count":0},{"had_liked":false,"id":10246,"user_name":"雨林霖","can_delete":false,"product_type":"c1","uid":1027232,"ip_address":"","ucode":"5C4585E473B9DA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a0/5832bb01.jpg","comment_is_top":false,"comment_ctime":1527411272,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构终究是为了实现业务，没有大一统的架构支撑千变万化的业务","like_count":0},{"had_liked":false,"id":9649,"user_name":"howie6879","can_delete":false,"product_type":"c1","uid":1067317,"ip_address":"","ucode":"2C22144D922CBA","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/35/53f278f3.jpg","comment_is_top":false,"comment_ctime":1527000921,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"简简单单的发展历程，道出了编程语言的进化史，老师很厉害，茅塞顿开，在解决问题中进化，问题无止尽，也就看不到所谓的银弹了","like_count":0},{"had_liked":false,"id":9484,"user_name":"Forrest Li","can_delete":false,"product_type":"c1","uid":1014880,"ip_address":"","ucode":"E5F3999FD888D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/60/0d508466.jpg","comment_is_top":false,"comment_ctime":1526904096,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构设计的历史背景：从机器语言、汇编语言到高级语言，程序员们终于可以开始施展拳脚，但面对现实世界中各种各样的复杂场景，这些初出茅庐、不经世事的年轻人、年轻技术还需要继续发展。\n计算机硬件技术的发展、业务场景的复杂多变使得软件技术也需要不断更新适配，因此没有一种彻底的解决思路。","like_count":0},{"had_liked":false,"id":8782,"user_name":"missa","can_delete":false,"product_type":"c1","uid":1033417,"ip_address":"","ucode":"485CB229C4C556","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/c9/90c8a53e.jpg","comment_is_top":false,"comment_ctime":1526434504,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"软件领域，复杂性随意技术的发展，不断的变得复杂，多样化。架构也需要不断去优化，每个发展阶段可能都有不同的解决方案，但是从头到尾不能靠一种方案解决一切","like_count":0},{"had_liked":false,"id":8433,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1526215398,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"从唯物主义哲学来讲，任何时候都会存在主要矛盾和次要矛盾，利用一种方法解决了主要矛盾，之前的次要矛盾现在就变成了主要矛盾。换一个通用的说法，没有包治百病的药。\n学习架构的目的也是为找到一些应对常见问题的通用方法套路，这些方法套路不能保证一定可以解决问题，但可以确保不出现重要的遗漏，出现重大的风险和问题，如同学中医的人不会把两个相冲的药放到一起。","like_count":0},{"had_liked":false,"id":8387,"user_name":"海滨","can_delete":false,"product_type":"c1","uid":1009518,"ip_address":"","ucode":"F1B94D2DB944DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/6e/f5ee46e8.jpg","comment_is_top":false,"comment_ctime":1526141716,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"因为软件领域不断在发展，业务越来越复杂、规模越来越大，这几种方案都只能解决当时特定环境下的问题。","like_count":0},{"had_liked":false,"id":8375,"user_name":"阿飞","can_delete":false,"product_type":"c1","uid":1086104,"ip_address":"","ucode":"5D31D03003988C","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/98/064ce708.jpg","comment_is_top":false,"comment_ctime":1526132867,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、架构设计、软件工程这些解决当前时代问题而产生的方法，没有哪个方法是一劳永逸的","like_count":0},{"had_liked":false,"id":8028,"user_name":"Storm","can_delete":false,"product_type":"c1","uid":1032528,"ip_address":"","ucode":"930A085DD95BE2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/50/1667b7d6.jpg","comment_is_top":false,"comment_ctime":1525866290,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"所谓的银弹就是在当时历史环境下平衡各种条件的最佳实践。但历史在进步，所以没有一劳永逸的银弹。","like_count":0},{"had_liked":false,"id":7902,"user_name":"wocow","can_delete":false,"product_type":"c1","uid":1021989,"ip_address":"","ucode":"7335B115FCA06C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/25/93977b53.jpg","comment_is_top":false,"comment_ctime":1525773046,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"用反过来思考，什么样才能称之为银弹，我的理解是「能解决问题」，任何的技术都是为了需求为了业务场景服务，时代再变，需求在变，当原有的技术无法满足新的需求场景时，就会衍生出新的「银弹」。","like_count":0},{"had_liked":false,"id":7900,"user_name":"CHaNniNG","can_delete":false,"product_type":"c1","uid":1103943,"ip_address":"","ucode":"6D2654D0950FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/47/1825ffee.jpg","comment_is_top":false,"comment_ctime":1525771867,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计这一些列演变都是在追求“更好”的解决方案，而银弹的本质是一种“最好”的解决办法，我们在历史的局限环境下无法对一个时刻在演变的领域做出最优的解，而只能对现有的问题进行合适处理，让它在未来短暂的一段时间内不至于爆发出来，表面是我们人类的历史局限性导致的，根本还是我们对更复杂更大型更强大系统追求的欲望产物。","like_count":0},{"had_liked":false,"id":7797,"user_name":"周彬","can_delete":false,"product_type":"c1","uid":1109843,"ip_address":"","ucode":"74222E91952CF4","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/53/3fc1935a.jpg","comment_is_top":false,"comment_ctime":1525739129,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"无论什么样的语言，最终都将面对业务逻辑复杂度的增加裙带来的开发效率低下的问题，需求的变化和人们对业务理解的增加，都会使得软件复杂度不断增加，如何从设计上解决未来一定时间内的复杂度上升的方法，才是解决软件危机的方法，至少在这一段时间内是的，所以架构设计的重要性可见一斑，因为这就是架构设计的作用，这是我的一点理解，不知道有没有跑偏，额。","like_count":0},{"had_liked":false,"id":7774,"user_name":"小河","can_delete":false,"product_type":"c1","uid":1109751,"ip_address":"","ucode":"9C2E34943CADFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/f7/e9dc9bda.jpg","comment_is_top":false,"comment_ctime":1525712051,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"发展历史：架构设计的历史背景和推动因素。\n机器语言，汇编语言40，高级语言50+编译。\n\n第二次软件危机的根本原因还是在于软件生产力远远跟不上硬件和业务的发展。第一次软件危机的根源在于软件的“逻辑”变得非常复杂，而第二次软件危机主要体现在软件的“扩展”变得非常复杂。\n\n为了解决软件危机：（缓解方法）6070\n软件工程，\n结构化程序设计：自顶向下，逐步细化，模块化。\n面向对象，\n面向过程c语言和面向对象c++,c#,java等80。\n软件架构：组件90。\n\n“模块”“对象”“组件”本质上都是对达到一定规模的软件进行拆分，差别只是在于随着软件的复杂度不断增加，拆分的粒度越来越粗，拆分的层次越来越高。\n","like_count":0},{"had_liked":false,"id":7769,"user_name":"Enjoystudy","can_delete":false,"product_type":"c1","uid":1028212,"ip_address":"","ucode":"179ECDFA5F518B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/74/f553f094.jpg","comment_is_top":false,"comment_ctime":1525706582,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"这是个变化的世界，没有什么方法能一成不变地去解决软件开发中遇到的所有问题，唯有拥抱变化不断变革才能更好的拥抱这个时代","like_count":0},{"had_liked":false,"id":8782,"user_name":"missa","can_delete":false,"product_type":"c1","uid":1033417,"ip_address":"","ucode":"485CB229C4C556","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/c9/90c8a53e.jpg","comment_is_top":false,"comment_ctime":1526434504,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"软件领域，复杂性随意技术的发展，不断的变得复杂，多样化。架构也需要不断去优化，每个发展阶段可能都有不同的解决方案，但是从头到尾不能靠一种方案解决一切","like_count":0},{"had_liked":false,"id":8433,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1526215398,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"从唯物主义哲学来讲，任何时候都会存在主要矛盾和次要矛盾，利用一种方法解决了主要矛盾，之前的次要矛盾现在就变成了主要矛盾。换一个通用的说法，没有包治百病的药。\n学习架构的目的也是为找到一些应对常见问题的通用方法套路，这些方法套路不能保证一定可以解决问题，但可以确保不出现重要的遗漏，出现重大的风险和问题，如同学中医的人不会把两个相冲的药放到一起。","like_count":0},{"had_liked":false,"id":8387,"user_name":"海滨","can_delete":false,"product_type":"c1","uid":1009518,"ip_address":"","ucode":"F1B94D2DB944DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/6e/f5ee46e8.jpg","comment_is_top":false,"comment_ctime":1526141716,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"因为软件领域不断在发展，业务越来越复杂、规模越来越大，这几种方案都只能解决当时特定环境下的问题。","like_count":0},{"had_liked":false,"id":8375,"user_name":"阿飞","can_delete":false,"product_type":"c1","uid":1086104,"ip_address":"","ucode":"5D31D03003988C","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/98/064ce708.jpg","comment_is_top":false,"comment_ctime":1526132867,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、架构设计、软件工程这些解决当前时代问题而产生的方法，没有哪个方法是一劳永逸的","like_count":0},{"had_liked":false,"id":8028,"user_name":"Storm","can_delete":false,"product_type":"c1","uid":1032528,"ip_address":"","ucode":"930A085DD95BE2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/50/1667b7d6.jpg","comment_is_top":false,"comment_ctime":1525866290,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"所谓的银弹就是在当时历史环境下平衡各种条件的最佳实践。但历史在进步，所以没有一劳永逸的银弹。","like_count":0},{"had_liked":false,"id":7902,"user_name":"wocow","can_delete":false,"product_type":"c1","uid":1021989,"ip_address":"","ucode":"7335B115FCA06C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/25/93977b53.jpg","comment_is_top":false,"comment_ctime":1525773046,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"用反过来思考，什么样才能称之为银弹，我的理解是「能解决问题」，任何的技术都是为了需求为了业务场景服务，时代再变，需求在变，当原有的技术无法满足新的需求场景时，就会衍生出新的「银弹」。","like_count":0},{"had_liked":false,"id":7900,"user_name":"CHaNniNG","can_delete":false,"product_type":"c1","uid":1103943,"ip_address":"","ucode":"6D2654D0950FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/47/1825ffee.jpg","comment_is_top":false,"comment_ctime":1525771867,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"结构化编程、面向对象编程、软件工程、架构设计这一些列演变都是在追求“更好”的解决方案，而银弹的本质是一种“最好”的解决办法，我们在历史的局限环境下无法对一个时刻在演变的领域做出最优的解，而只能对现有的问题进行合适处理，让它在未来短暂的一段时间内不至于爆发出来，表面是我们人类的历史局限性导致的，根本还是我们对更复杂更大型更强大系统追求的欲望产物。","like_count":0},{"had_liked":false,"id":7797,"user_name":"周彬","can_delete":false,"product_type":"c1","uid":1109843,"ip_address":"","ucode":"74222E91952CF4","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/53/3fc1935a.jpg","comment_is_top":false,"comment_ctime":1525739129,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"无论什么样的语言，最终都将面对业务逻辑复杂度的增加裙带来的开发效率低下的问题，需求的变化和人们对业务理解的增加，都会使得软件复杂度不断增加，如何从设计上解决未来一定时间内的复杂度上升的方法，才是解决软件危机的方法，至少在这一段时间内是的，所以架构设计的重要性可见一斑，因为这就是架构设计的作用，这是我的一点理解，不知道有没有跑偏，额。","like_count":0},{"had_liked":false,"id":7774,"user_name":"小河","can_delete":false,"product_type":"c1","uid":1109751,"ip_address":"","ucode":"9C2E34943CADFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/f7/e9dc9bda.jpg","comment_is_top":false,"comment_ctime":1525712051,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"发展历史：架构设计的历史背景和推动因素。\n机器语言，汇编语言40，高级语言50+编译。\n\n第二次软件危机的根本原因还是在于软件生产力远远跟不上硬件和业务的发展。第一次软件危机的根源在于软件的“逻辑”变得非常复杂，而第二次软件危机主要体现在软件的“扩展”变得非常复杂。\n\n为了解决软件危机：（缓解方法）6070\n软件工程，\n结构化程序设计：自顶向下，逐步细化，模块化。\n面向对象，\n面向过程c语言和面向对象c++,c#,java等80。\n软件架构：组件90。\n\n“模块”“对象”“组件”本质上都是对达到一定规模的软件进行拆分，差别只是在于随着软件的复杂度不断增加，拆分的粒度越来越粗，拆分的层次越来越高。\n","like_count":0},{"had_liked":false,"id":7769,"user_name":"Enjoystudy","can_delete":false,"product_type":"c1","uid":1028212,"ip_address":"","ucode":"179ECDFA5F518B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/74/f553f094.jpg","comment_is_top":false,"comment_ctime":1525706582,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"这是个变化的世界，没有什么方法能一成不变地去解决软件开发中遇到的所有问题，唯有拥抱变化不断变革才能更好的拥抱这个时代","like_count":0},{"had_liked":false,"id":7664,"user_name":"余红松-北京","can_delete":false,"product_type":"c1","uid":1118528,"ip_address":"","ucode":"D764A0E06F77E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/40/16455a03.jpg","comment_is_top":false,"comment_ctime":1525613557,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"# 读书笔记\n  - 从一个事物的历史开始引入，对理解事物，是个很好的方式。\n  - 计算机语言发展的历史：计算机软件语言的发展历史，是一个从底层向上层，逐层封装面向人类更加友好的方式，一步步建立从01这种机器友好方式，到贴近于人类业务和语言和图形化的人类友好方式，的人机交互的接口进化的历史。\n  - 软件危机之魔咒，在现实生活中，通过观察发现计算机硬件一直没能跟上软件业务和需求的压力，不管技术如何进步，技术的发展并没有带来人类工作量下降，人类的劳动量一直处于极限状态下，无法跟上对文明的追求速度，而软件开发语言的进化程度，也将无法跟上实际人类在计算机上附加的业务的开发量，软件开发语言和工具的进化程度，也将永远处于人类文明业务量压力之下的危机之中。\n  - 软件危机将会再次来袭，下次将会是人工智能相关。","like_count":0},{"had_liked":false,"id":7596,"user_name":"孙晓明","can_delete":false,"product_type":"c1","uid":1117094,"ip_address":"","ucode":"CAD28E4D5A3E76","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/a6/b234aa79.jpg","comment_is_top":false,"comment_ctime":1525572284,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"社会在发展，人们对软件的需要也在不断变化，同时，软件运行的载体～硬件、网络等也不断更新换代，这都促使软件领域也要不断变化才能跟上时代，而软件工程、架构设计等技能都是为适应当时的软件需求而产生，当软件领域变化时，它所对应的解决方案和方法论也不可避免的要发生变化。只有一时的银弹，没有永远的银弹。","like_count":0},{"had_liked":false,"id":7532,"user_name":"loveluckystar","can_delete":false,"product_type":"c1","uid":1097877,"ip_address":"","ucode":"370C38AF0E9A43","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/95/6f0aad03.jpg","comment_is_top":false,"comment_ctime":1525512575,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"世界上就不存在针对某项事物的万金油或者银弹，只存在某种情况下的局部较优解。这也正是架构设计的价值，针对不同场景，不同阶段，进行架构设计，因地制宜，找到最佳实践。","like_count":0},{"had_liked":false,"id":7523,"user_name":"OnE","can_delete":false,"product_type":"c1","uid":1006058,"ip_address":"","ucode":"5D10DB1CBE6DCF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/ea/38c063d5.jpg","comment_is_top":false,"comment_ctime":1525508318,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"“模块”“对象”“组件”本质上都是对达到一定规模的软件进行拆分，差别只是在于随着软件的复杂度不断增加，拆分的粒度越来越粗，拆分的层次越来越高。","like_count":0},{"had_liked":false,"id":7436,"user_name":"赵小R","can_delete":false,"product_type":"c1","uid":1053286,"ip_address":"","ucode":"DE1C2B3B27C403","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/66/93a45b8b.jpg","comment_is_top":false,"comment_ctime":1525482781,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"结构化变成不是银弹，面向对象也没有成为银弹，同样软件架构也不会是银弹。这是一个哲学问题。","like_count":0},{"had_liked":false,"id":7348,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1525410048,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"软件是用来满足业务的。随着时代的变化，人们思想的变化，软件需要满足和支撑的业务也在变化，所以软件结构也需要不断的演进来满足这种变化的需求。就像在数据爆炸的现在，要利用好这些数据，我们就要有分布式的架构方案来满足大数据存储，大数据的分析。","like_count":0},{"had_liked":false,"id":7263,"user_name":"停下想想","can_delete":false,"product_type":"c1","uid":1100326,"ip_address":"","ucode":"48A26A1737DA6D","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/26/f300e187.jpg","comment_is_top":false,"comment_ctime":1525359786,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"倒觉得是通过软件架构和软件工程结合，共同解决人员分工、进度管理、质量控制的问题。","like_count":0},{"had_liked":false,"id":7253,"user_name":"杨宏志","can_delete":false,"product_type":"c1","uid":1047598,"ip_address":"","ucode":"BD78C246A86B9A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/2e/24688139.jpg","comment_is_top":false,"comment_ctime":1525356536,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"个人认为，没有银弹是因为好的架构永远不存在，架构没有好坏只有合适与否。特定的业务变化会演进特定的架构方式。过度设计肯定不好，但适当的臃肿不一定就是坏的","like_count":0},{"had_liked":false,"id":7217,"user_name":"aaa于海威","can_delete":false,"product_type":"c1","uid":1107058,"ip_address":"","ucode":"0917A369B61163","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/72/3dfc01f0.jpg","comment_is_top":false,"comment_ctime":1525343478,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"因为复杂度和并发量在一次次突破想象","like_count":0},{"had_liked":false,"id":7202,"user_name":"三军","can_delete":false,"product_type":"c1","uid":1115689,"ip_address":"","ucode":"C1BCA262D7DE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/29/bf619df8.jpg","comment_is_top":false,"comment_ctime":1525329281,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"结构化编程，面向对象编程，软件工程，软件架构之所以不是银弹，是因为它们是软件设计发展史上不同阶段的开发方式，它们是可行的，可实践的，在一定的阶段内起到各自的优势，不断发展必定存在它们的瓶颈，未来可能有&quot;软件生态&quot;，&quot;软件宇宙&quot;之称。","like_count":0},{"had_liked":false,"id":7664,"user_name":"余红松-北京","can_delete":false,"product_type":"c1","uid":1118528,"ip_address":"","ucode":"D764A0E06F77E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/40/16455a03.jpg","comment_is_top":false,"comment_ctime":1525613557,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"# 读书笔记\n  - 从一个事物的历史开始引入，对理解事物，是个很好的方式。\n  - 计算机语言发展的历史：计算机软件语言的发展历史，是一个从底层向上层，逐层封装面向人类更加友好的方式，一步步建立从01这种机器友好方式，到贴近于人类业务和语言和图形化的人类友好方式，的人机交互的接口进化的历史。\n  - 软件危机之魔咒，在现实生活中，通过观察发现计算机硬件一直没能跟上软件业务和需求的压力，不管技术如何进步，技术的发展并没有带来人类工作量下降，人类的劳动量一直处于极限状态下，无法跟上对文明的追求速度，而软件开发语言的进化程度，也将无法跟上实际人类在计算机上附加的业务的开发量，软件开发语言和工具的进化程度，也将永远处于人类文明业务量压力之下的危机之中。\n  - 软件危机将会再次来袭，下次将会是人工智能相关。","like_count":0},{"had_liked":false,"id":7596,"user_name":"孙晓明","can_delete":false,"product_type":"c1","uid":1117094,"ip_address":"","ucode":"CAD28E4D5A3E76","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/a6/b234aa79.jpg","comment_is_top":false,"comment_ctime":1525572284,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"社会在发展，人们对软件的需要也在不断变化，同时，软件运行的载体～硬件、网络等也不断更新换代，这都促使软件领域也要不断变化才能跟上时代，而软件工程、架构设计等技能都是为适应当时的软件需求而产生，当软件领域变化时，它所对应的解决方案和方法论也不可避免的要发生变化。只有一时的银弹，没有永远的银弹。","like_count":0},{"had_liked":false,"id":7532,"user_name":"loveluckystar","can_delete":false,"product_type":"c1","uid":1097877,"ip_address":"","ucode":"370C38AF0E9A43","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/95/6f0aad03.jpg","comment_is_top":false,"comment_ctime":1525512575,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"世界上就不存在针对某项事物的万金油或者银弹，只存在某种情况下的局部较优解。这也正是架构设计的价值，针对不同场景，不同阶段，进行架构设计，因地制宜，找到最佳实践。","like_count":0},{"had_liked":false,"id":7523,"user_name":"OnE","can_delete":false,"product_type":"c1","uid":1006058,"ip_address":"","ucode":"5D10DB1CBE6DCF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/ea/38c063d5.jpg","comment_is_top":false,"comment_ctime":1525508318,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"“模块”“对象”“组件”本质上都是对达到一定规模的软件进行拆分，差别只是在于随着软件的复杂度不断增加，拆分的粒度越来越粗，拆分的层次越来越高。","like_count":0},{"had_liked":false,"id":7436,"user_name":"赵小R","can_delete":false,"product_type":"c1","uid":1053286,"ip_address":"","ucode":"DE1C2B3B27C403","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/66/93a45b8b.jpg","comment_is_top":false,"comment_ctime":1525482781,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"结构化变成不是银弹，面向对象也没有成为银弹，同样软件架构也不会是银弹。这是一个哲学问题。","like_count":0},{"had_liked":false,"id":7348,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1525410048,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"软件是用来满足业务的。随着时代的变化，人们思想的变化，软件需要满足和支撑的业务也在变化，所以软件结构也需要不断的演进来满足这种变化的需求。就像在数据爆炸的现在，要利用好这些数据，我们就要有分布式的架构方案来满足大数据存储，大数据的分析。","like_count":0},{"had_liked":false,"id":7263,"user_name":"停下想想","can_delete":false,"product_type":"c1","uid":1100326,"ip_address":"","ucode":"48A26A1737DA6D","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/26/f300e187.jpg","comment_is_top":false,"comment_ctime":1525359786,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"倒觉得是通过软件架构和软件工程结合，共同解决人员分工、进度管理、质量控制的问题。","like_count":0},{"had_liked":false,"id":7253,"user_name":"杨宏志","can_delete":false,"product_type":"c1","uid":1047598,"ip_address":"","ucode":"BD78C246A86B9A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/2e/24688139.jpg","comment_is_top":false,"comment_ctime":1525356536,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"个人认为，没有银弹是因为好的架构永远不存在，架构没有好坏只有合适与否。特定的业务变化会演进特定的架构方式。过度设计肯定不好，但适当的臃肿不一定就是坏的","like_count":0},{"had_liked":false,"id":7217,"user_name":"aaa于海威","can_delete":false,"product_type":"c1","uid":1107058,"ip_address":"","ucode":"0917A369B61163","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/72/3dfc01f0.jpg","comment_is_top":false,"comment_ctime":1525343478,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"因为复杂度和并发量在一次次突破想象","like_count":0},{"had_liked":false,"id":7202,"user_name":"三军","can_delete":false,"product_type":"c1","uid":1115689,"ip_address":"","ucode":"C1BCA262D7DE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/29/bf619df8.jpg","comment_is_top":false,"comment_ctime":1525329281,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"结构化编程，面向对象编程，软件工程，软件架构之所以不是银弹，是因为它们是软件设计发展史上不同阶段的开发方式，它们是可行的，可实践的，在一定的阶段内起到各自的优势，不断发展必定存在它们的瓶颈，未来可能有&quot;软件生态&quot;，&quot;软件宇宙&quot;之称。","like_count":0},{"had_liked":false,"id":7181,"user_name":"十七","can_delete":false,"product_type":"c1","uid":1103979,"ip_address":"","ucode":"2AB53F785C3EA5","user_header":"","comment_is_top":false,"comment_ctime":1525317983,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"除了软件规模增长，复杂度增加，业务需求变化之外，软件工程对降低成本，提升效率的要求也倒逼着“银单”的升级","like_count":0},{"had_liked":false,"id":7168,"user_name":"ZYCHD(子玉)","can_delete":false,"product_type":"c1","uid":1109815,"ip_address":"","ucode":"32B2ED529450C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/37/4b12b4cc.jpg","comment_is_top":false,"comment_ctime":1525312841,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"从机器语言到高级语言的改变是本质上的改变它是银弹就像是从绳子打结记忆到到笔墨纸砚的出现是保存信息的银弹。面向过程编程面向对象编程组件模块的概念更像是从篆书到楷书行书的发展，这种发展更趋向在一个平面内的横向探索研究缺少纵向上的突破，所以它不是银弹。","like_count":0},{"had_liked":false,"id":7161,"user_name":"Forrest Li","can_delete":false,"product_type":"c1","uid":1014880,"ip_address":"","ucode":"E5F3999FD888D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/60/0d508466.jpg","comment_is_top":false,"comment_ctime":1525311264,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"业务为王，软件应用场景多有差别，即使确定场景下，需求变化也很频繁，很难说一种思路解决所有问题。","like_count":0},{"had_liked":false,"id":7152,"user_name":"碧海蓝天","can_delete":false,"product_type":"c1","uid":1047034,"ip_address":"","ucode":"A6984FB13CBBDE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/fa/abe4ca5d.jpg","comment_is_top":false,"comment_ctime":1525310232,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构本质就是对某一具体问题的具体解决方法。一万个问题可能有一万个架构。没有一成不变的问题，当然就没有一成不变的架构。业务在变，问题变了，架构也需跟着变，只是大变与小变的区别。","like_count":0},{"had_liked":false,"id":7139,"user_name":"丶Zero灬","can_delete":false,"product_type":"c1","uid":1073556,"ip_address":"","ucode":"B0C24B7071DABF","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/94/cc6c693d.jpg","comment_is_top":false,"comment_ctime":1525308145,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"个人观点：原因在于业务的发展还在继续，当你解决一个问题之后还会有新的问题出现。也就是发展。如果存在“银弹”反而说明技术停滞了。","like_count":0},{"had_liked":false,"id":7138,"user_name":"呆呆很爱你","can_delete":false,"product_type":"c1","uid":1104372,"ip_address":"","ucode":"FA6849342CF8E9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/f4/b96fce45.jpg","comment_is_top":false,"comment_ctime":1525307714,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"软件架构不可能“以不变应万变”，必须与时俱进，不同时代的新问题需要不同的技术应对策略","like_count":0},{"had_liked":false,"id":7133,"user_name":"张驰","can_delete":false,"product_type":"c1","uid":1080050,"ip_address":"","ucode":"0ED97C2FCE6599","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/f2/6770d0a9.jpg","comment_is_top":false,"comment_ctime":1525307070,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"因为软件的发展永远跟随着硬件的发展而发展，软件是跟着硬件后面跑的，随着硬件设备的发展会不断的有新问题出现，软件也要不断迭代更新，所以说没有一颗有效的银弹。","like_count":0},{"had_liked":false,"id":7103,"user_name":"itperson","can_delete":false,"product_type":"c1","uid":1008401,"ip_address":"","ucode":"1363D71C84CF8B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/11/ea921534.jpg","comment_is_top":false,"comment_ctime":1525275775,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"任何架构或者开发方法 只是部分适合某个团队 在团队磨合中逐渐找到适合团队自身的方法 而不是照搬某种模式 软件开发领域向来没有绝对的真理 只有不断迭代才能精进","like_count":0},{"had_liked":false,"id":7100,"user_name":"小柒2012","can_delete":false,"product_type":"c1","uid":1101719,"ip_address":"","ucode":"082E2746A13043","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/97/8951b2af.jpg","comment_is_top":false,"comment_ctime":1525272242,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"就像程序员总是抱怨需求老是在变一样，架构设计所谓的银弹也总是暂时的而已。","like_count":0},{"had_liked":false,"id":7097,"user_name":"YunliangChen","can_delete":false,"product_type":"c1","uid":1092211,"ip_address":"","ucode":"C29C530B57156A","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/73/60607907.jpg","comment_is_top":false,"comment_ctime":1525270973,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"没有一个方法能解决所有问题","like_count":0},{"had_liked":false,"id":7181,"user_name":"十七","can_delete":false,"product_type":"c1","uid":1103979,"ip_address":"","ucode":"2AB53F785C3EA5","user_header":"","comment_is_top":false,"comment_ctime":1525317983,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"除了软件规模增长，复杂度增加，业务需求变化之外，软件工程对降低成本，提升效率的要求也倒逼着“银单”的升级","like_count":0},{"had_liked":false,"id":7168,"user_name":"ZYCHD(子玉)","can_delete":false,"product_type":"c1","uid":1109815,"ip_address":"","ucode":"32B2ED529450C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/37/4b12b4cc.jpg","comment_is_top":false,"comment_ctime":1525312841,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"从机器语言到高级语言的改变是本质上的改变它是银弹就像是从绳子打结记忆到到笔墨纸砚的出现是保存信息的银弹。面向过程编程面向对象编程组件模块的概念更像是从篆书到楷书行书的发展，这种发展更趋向在一个平面内的横向探索研究缺少纵向上的突破，所以它不是银弹。","like_count":0},{"had_liked":false,"id":7161,"user_name":"Forrest Li","can_delete":false,"product_type":"c1","uid":1014880,"ip_address":"","ucode":"E5F3999FD888D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/60/0d508466.jpg","comment_is_top":false,"comment_ctime":1525311264,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"业务为王，软件应用场景多有差别，即使确定场景下，需求变化也很频繁，很难说一种思路解决所有问题。","like_count":0},{"had_liked":false,"id":7152,"user_name":"碧海蓝天","can_delete":false,"product_type":"c1","uid":1047034,"ip_address":"","ucode":"A6984FB13CBBDE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/fa/abe4ca5d.jpg","comment_is_top":false,"comment_ctime":1525310232,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构本质就是对某一具体问题的具体解决方法。一万个问题可能有一万个架构。没有一成不变的问题，当然就没有一成不变的架构。业务在变，问题变了，架构也需跟着变，只是大变与小变的区别。","like_count":0},{"had_liked":false,"id":7139,"user_name":"丶Zero灬","can_delete":false,"product_type":"c1","uid":1073556,"ip_address":"","ucode":"B0C24B7071DABF","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/94/cc6c693d.jpg","comment_is_top":false,"comment_ctime":1525308145,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"个人观点：原因在于业务的发展还在继续，当你解决一个问题之后还会有新的问题出现。也就是发展。如果存在“银弹”反而说明技术停滞了。","like_count":0},{"had_liked":false,"id":7138,"user_name":"呆呆很爱你","can_delete":false,"product_type":"c1","uid":1104372,"ip_address":"","ucode":"FA6849342CF8E9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/f4/b96fce45.jpg","comment_is_top":false,"comment_ctime":1525307714,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"软件架构不可能“以不变应万变”，必须与时俱进，不同时代的新问题需要不同的技术应对策略","like_count":0},{"had_liked":false,"id":7133,"user_name":"张驰","can_delete":false,"product_type":"c1","uid":1080050,"ip_address":"","ucode":"0ED97C2FCE6599","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/f2/6770d0a9.jpg","comment_is_top":false,"comment_ctime":1525307070,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"因为软件的发展永远跟随着硬件的发展而发展，软件是跟着硬件后面跑的，随着硬件设备的发展会不断的有新问题出现，软件也要不断迭代更新，所以说没有一颗有效的银弹。","like_count":0},{"had_liked":false,"id":7103,"user_name":"itperson","can_delete":false,"product_type":"c1","uid":1008401,"ip_address":"","ucode":"1363D71C84CF8B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/11/ea921534.jpg","comment_is_top":false,"comment_ctime":1525275775,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"任何架构或者开发方法 只是部分适合某个团队 在团队磨合中逐渐找到适合团队自身的方法 而不是照搬某种模式 软件开发领域向来没有绝对的真理 只有不断迭代才能精进","like_count":0},{"had_liked":false,"id":7100,"user_name":"小柒2012","can_delete":false,"product_type":"c1","uid":1101719,"ip_address":"","ucode":"082E2746A13043","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/97/8951b2af.jpg","comment_is_top":false,"comment_ctime":1525272242,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"就像程序员总是抱怨需求老是在变一样，架构设计所谓的银弹也总是暂时的而已。","like_count":0},{"had_liked":false,"id":7097,"user_name":"YunliangChen","can_delete":false,"product_type":"c1","uid":1092211,"ip_address":"","ucode":"C29C530B57156A","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/73/60607907.jpg","comment_is_top":false,"comment_ctime":1525270973,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"没有一个方法能解决所有问题","like_count":0},{"had_liked":false,"id":7092,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1019923,"ip_address":"","ucode":"66A054E8AFDC36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/13/b5479887.jpg","comment_is_top":false,"comment_ctime":1525269382,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"（1）软件领域的问题不光是技术问题，还有业务，资源，人等各种不同的问题交织在一起，而且随着时间的推进，这些问题的轻重缓急等等还在不断的发生变化，因此如果想要光从技术层面来解决社会问题，这本来就不太可能。\n（2）设计层面的改进，包括基于结构化，基于对象，基于架构本身都是要解决系统的复杂性，但是在这期间包括项目管理，系统测试，需求分析自己的方向上取得了很多进步，我想需要系统各个层面全方位的推进，并保持各个部分的均衡，才能更好的解决问题。","like_count":0},{"had_liked":false,"id":7083,"user_name":"井红军","can_delete":false,"product_type":"c1","uid":1106084,"ip_address":"","ucode":"524A8B65BA4560","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a4/bfd7bbc5.jpg","comment_is_top":false,"comment_ctime":1525264638,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"模块，对象，组件可以说是程序员组织代码的演变....这可以解决数据上离散问题，当今软件业务发展属于软件外的东西.设计模式也只不过解决特定领域的问题……通过软件架构能够解决业务复杂问题属于痴人说梦","like_count":0},{"had_liked":false,"id":7074,"user_name":"少年","can_delete":false,"product_type":"c1","uid":1009178,"ip_address":"","ucode":"2B6BCC526A5F2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/1a/9e9f7d58.jpg","comment_is_top":false,"comment_ctime":1525261908,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"银弹是个愿景，就像PHP是世界上最好的语言一样，是个美好的梦想。\n现实中来说，我们不需要银弹，我们需要的是能解决问题的又合适的。","like_count":0},{"had_liked":false,"id":7073,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1112202,"ip_address":"","ucode":"8CA4CB2745A427","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/8a/07cdeaf9.jpg","comment_is_top":false,"comment_ctime":1525261536,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"我想开发个SAAS云平台，做人事系统，想用Java开发，哪个框架比较好Spring Boot, Spring Clould?","like_count":0},{"had_liked":false,"id":7043,"user_name":"衡","can_delete":false,"product_type":"c1","uid":1041001,"ip_address":"","ucode":"BDF3AAF34EC124","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/69/3c6fae7d.jpg","comment_is_top":false,"comment_ctime":1525239397,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"软件的发展过程也是人类虚拟化世界的过程。人在变 世界在变 人对世界的认知也在变，没有银弹","like_count":0},{"had_liked":false,"id":7020,"user_name":"大兵","can_delete":false,"product_type":"c1","uid":1060235,"ip_address":"","ucode":"76951481DFAC1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKam4m4PWz4KpHB430SATc7tlO1EkDM5no0DVDH97icNePzD26ZaQjOW76IsMociaWtB5RnNibzldGBg/132","comment_is_top":false,"comment_ctime":1525227625,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"就像人们都在追求幸福，但是却没有幸福的统一标准，大家都在以各自的公式走在追求幸福的路上","like_count":0},{"had_liked":false,"id":7005,"user_name":"老王","can_delete":false,"product_type":"c1","uid":1054710,"ip_address":"","ucode":"02AA850A7A9767","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/f6/87aac8c1.jpg","comment_is_top":false,"comment_ctime":1525224683,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"先需求，后架构。架构设计是为了满足需求的，软件需求在不同的历史阶段，呈现不同的特点，未来也是不断变化的，软件开发方法也需要不断更新。","like_count":0},{"had_liked":false,"id":7001,"user_name":"琴扬枫","can_delete":false,"product_type":"c1","uid":1011802,"ip_address":"","ucode":"7D473084BBCE89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/5a/01637b6e.jpg","comment_is_top":false,"comment_ctime":1525223877,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"生产力和生产关系是相互影响的，就像从蒸汽时代进入电器时代再进入信息时代，blablabla。如果银弹存在，那文明可能就止步不前了。","like_count":0},{"had_liked":false,"id":7000,"user_name":"Jzw","can_delete":false,"product_type":"c1","uid":1101621,"ip_address":"","ucode":"F20A68F6BB16FE","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/35/f4bd4ea2.jpg","comment_is_top":false,"comment_ctime":1525223778,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"模块、对象和组件都是解决代码的组织和结构问题，而真正复杂的是业务。譬如我们懂得诗词的平仄和押韵技法，但不代表你能填出一阙好词。","like_count":0},{"had_liked":false,"id":6975,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1525187927,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"在时间成本存在的前提下，语言的发展，编程思想的发展，软件工程的发展都是不得不的，都是在解决有限认知带宽下削减软件复杂度","like_count":0},{"had_liked":false,"id":7092,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1019923,"ip_address":"","ucode":"66A054E8AFDC36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/13/b5479887.jpg","comment_is_top":false,"comment_ctime":1525269382,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"（1）软件领域的问题不光是技术问题，还有业务，资源，人等各种不同的问题交织在一起，而且随着时间的推进，这些问题的轻重缓急等等还在不断的发生变化，因此如果想要光从技术层面来解决社会问题，这本来就不太可能。\n（2）设计层面的改进，包括基于结构化，基于对象，基于架构本身都是要解决系统的复杂性，但是在这期间包括项目管理，系统测试，需求分析自己的方向上取得了很多进步，我想需要系统各个层面全方位的推进，并保持各个部分的均衡，才能更好的解决问题。","like_count":0},{"had_liked":false,"id":7083,"user_name":"井红军","can_delete":false,"product_type":"c1","uid":1106084,"ip_address":"","ucode":"524A8B65BA4560","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a4/bfd7bbc5.jpg","comment_is_top":false,"comment_ctime":1525264638,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"模块，对象，组件可以说是程序员组织代码的演变....这可以解决数据上离散问题，当今软件业务发展属于软件外的东西.设计模式也只不过解决特定领域的问题……通过软件架构能够解决业务复杂问题属于痴人说梦","like_count":0},{"had_liked":false,"id":7074,"user_name":"少年","can_delete":false,"product_type":"c1","uid":1009178,"ip_address":"","ucode":"2B6BCC526A5F2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/1a/9e9f7d58.jpg","comment_is_top":false,"comment_ctime":1525261908,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"银弹是个愿景，就像PHP是世界上最好的语言一样，是个美好的梦想。\n现实中来说，我们不需要银弹，我们需要的是能解决问题的又合适的。","like_count":0},{"had_liked":false,"id":7073,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1112202,"ip_address":"","ucode":"8CA4CB2745A427","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/8a/07cdeaf9.jpg","comment_is_top":false,"comment_ctime":1525261536,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"我想开发个SAAS云平台，做人事系统，想用Java开发，哪个框架比较好Spring Boot, Spring Clould?","like_count":0},{"had_liked":false,"id":7043,"user_name":"衡","can_delete":false,"product_type":"c1","uid":1041001,"ip_address":"","ucode":"BDF3AAF34EC124","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/69/3c6fae7d.jpg","comment_is_top":false,"comment_ctime":1525239397,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"软件的发展过程也是人类虚拟化世界的过程。人在变 世界在变 人对世界的认知也在变，没有银弹","like_count":0},{"had_liked":false,"id":7020,"user_name":"大兵","can_delete":false,"product_type":"c1","uid":1060235,"ip_address":"","ucode":"76951481DFAC1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKam4m4PWz4KpHB430SATc7tlO1EkDM5no0DVDH97icNePzD26ZaQjOW76IsMociaWtB5RnNibzldGBg/132","comment_is_top":false,"comment_ctime":1525227625,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"就像人们都在追求幸福，但是却没有幸福的统一标准，大家都在以各自的公式走在追求幸福的路上","like_count":0},{"had_liked":false,"id":7005,"user_name":"老王","can_delete":false,"product_type":"c1","uid":1054710,"ip_address":"","ucode":"02AA850A7A9767","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/f6/87aac8c1.jpg","comment_is_top":false,"comment_ctime":1525224683,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"先需求，后架构。架构设计是为了满足需求的，软件需求在不同的历史阶段，呈现不同的特点，未来也是不断变化的，软件开发方法也需要不断更新。","like_count":0},{"had_liked":false,"id":7001,"user_name":"琴扬枫","can_delete":false,"product_type":"c1","uid":1011802,"ip_address":"","ucode":"7D473084BBCE89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/5a/01637b6e.jpg","comment_is_top":false,"comment_ctime":1525223877,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"生产力和生产关系是相互影响的，就像从蒸汽时代进入电器时代再进入信息时代，blablabla。如果银弹存在，那文明可能就止步不前了。","like_count":0},{"had_liked":false,"id":7000,"user_name":"Jzw","can_delete":false,"product_type":"c1","uid":1101621,"ip_address":"","ucode":"F20A68F6BB16FE","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/35/f4bd4ea2.jpg","comment_is_top":false,"comment_ctime":1525223778,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"模块、对象和组件都是解决代码的组织和结构问题，而真正复杂的是业务。譬如我们懂得诗词的平仄和押韵技法，但不代表你能填出一阙好词。","like_count":0},{"had_liked":false,"id":6975,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1525187927,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"在时间成本存在的前提下，语言的发展，编程思想的发展，软件工程的发展都是不得不的，都是在解决有限认知带宽下削减软件复杂度","like_count":0},{"had_liked":false,"id":6962,"user_name":"caiyun","can_delete":false,"product_type":"c1","uid":1072194,"ip_address":"","ucode":"E36B27674F1322","user_header":"","comment_is_top":false,"comment_ctime":1525181657,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"事物是不断发展变化的，我们的系统也是一样，不断变化，错综复杂，面向过程或者面向对象或者架构都是不断发展过程中解决问题的方法和思想的产物，但也不能适用于所有的事物","like_count":0},{"had_liked":false,"id":6956,"user_name":"江明","can_delete":false,"product_type":"c1","uid":1107994,"ip_address":"","ucode":"076DF5B0DBE202","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/1a/9bd1f4fa.jpg","comment_is_top":false,"comment_ctime":1525175166,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"软件开发在不断的快速发展，不同的发展阶段会遇到不同的问题，不同的问题又会催生不同的解决办法。用发展的眼光看待的话，没有一个方案或是方法能解决所有问题。","like_count":0},{"had_liked":false,"id":6949,"user_name":"fish007","can_delete":false,"product_type":"c1","uid":1104203,"ip_address":"","ucode":"A3625A49573826","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/4b/013e19b7.jpg","comment_is_top":false,"comment_ctime":1525167586,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"个人以为目前的技术发展，脱离了“解决问题”这个根本，距离和机器语言最接近的汇编语言也太远。多样化的问题解决方案，本身就制造了无穷无尽的复杂性。整个行业缺乏大道至简的战略部署，也不可能产生全球一体化的技术发展规划，怎么可能产生银弹。","like_count":0},{"had_liked":false,"id":6946,"user_name":"还是我","can_delete":false,"product_type":"c1","uid":1112221,"ip_address":"","ucode":"7DF4F1B6824B5E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/9d/ce60e6bd.jpg","comment_is_top":false,"comment_ctime":1525165597,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"世界是个开放的不确定的进化的系统，软件开发一直在描述这个真实的系统，当然也会相应出现新的问题和困难。","like_count":0},{"had_liked":false,"id":6929,"user_name":"Mike Wang","can_delete":false,"product_type":"c1","uid":1111341,"ip_address":"","ucode":"4A7268451FFEB6","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2d/8a0bd9f1.jpg","comment_is_top":false,"comment_ctime":1525145749,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"人类的欲望无止境，渴望的是无所不能，至死不休，现有的事物包含计算机相关只是资源技术受限的一种妥协方案，架构模式也只是曲折中前进时总结的经验而已，银弹只是对未知恐惧的一种自欺欺人的想法，当然，因为未知，所以以银弹为寄托继续前进也挺好。","like_count":0},{"had_liked":false,"id":6928,"user_name":"Greeny","can_delete":false,"product_type":"c1","uid":1102359,"ip_address":"","ucode":"B8F486CEDBF04E","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/17/04612538.jpg","comment_is_top":false,"comment_ctime":1525145143,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"既定设计赶不上随时代变化的需求","like_count":0},{"had_liked":false,"id":6919,"user_name":"正弋","can_delete":false,"product_type":"c1","uid":1104283,"ip_address":"","ucode":"97CBC1C1AD9F90","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/9b/cbebc759.jpg","comment_is_top":false,"comment_ctime":1525142069,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"不同的软件有不同的功能侧重及非功能需求，注定了没有银弹能照顾到所有类型的软件","like_count":0},{"had_liked":false,"id":6917,"user_name":"codewu","can_delete":false,"product_type":"c1","uid":1060861,"ip_address":"","ucode":"BAA2B1CB48FD00","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/fd/dead7549.jpg","comment_is_top":false,"comment_ctime":1525141944,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"只要软件上线一直在服务于市场，那么对于软件需求的跟变就是不可预测的。任何应对未来变化的计划都不能确保百分百的hold住。","like_count":0},{"had_liked":false,"id":6962,"user_name":"caiyun","can_delete":false,"product_type":"c1","uid":1072194,"ip_address":"","ucode":"E36B27674F1322","user_header":"","comment_is_top":false,"comment_ctime":1525181657,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"事物是不断发展变化的，我们的系统也是一样，不断变化，错综复杂，面向过程或者面向对象或者架构都是不断发展过程中解决问题的方法和思想的产物，但也不能适用于所有的事物","like_count":0},{"had_liked":false,"id":6956,"user_name":"江明","can_delete":false,"product_type":"c1","uid":1107994,"ip_address":"","ucode":"076DF5B0DBE202","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/1a/9bd1f4fa.jpg","comment_is_top":false,"comment_ctime":1525175166,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"软件开发在不断的快速发展，不同的发展阶段会遇到不同的问题，不同的问题又会催生不同的解决办法。用发展的眼光看待的话，没有一个方案或是方法能解决所有问题。","like_count":0},{"had_liked":false,"id":6949,"user_name":"fish007","can_delete":false,"product_type":"c1","uid":1104203,"ip_address":"","ucode":"A3625A49573826","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/4b/013e19b7.jpg","comment_is_top":false,"comment_ctime":1525167586,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"个人以为目前的技术发展，脱离了“解决问题”这个根本，距离和机器语言最接近的汇编语言也太远。多样化的问题解决方案，本身就制造了无穷无尽的复杂性。整个行业缺乏大道至简的战略部署，也不可能产生全球一体化的技术发展规划，怎么可能产生银弹。","like_count":0},{"had_liked":false,"id":6946,"user_name":"还是我","can_delete":false,"product_type":"c1","uid":1112221,"ip_address":"","ucode":"7DF4F1B6824B5E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/9d/ce60e6bd.jpg","comment_is_top":false,"comment_ctime":1525165597,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"世界是个开放的不确定的进化的系统，软件开发一直在描述这个真实的系统，当然也会相应出现新的问题和困难。","like_count":0},{"had_liked":false,"id":6929,"user_name":"Mike Wang","can_delete":false,"product_type":"c1","uid":1111341,"ip_address":"","ucode":"4A7268451FFEB6","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2d/8a0bd9f1.jpg","comment_is_top":false,"comment_ctime":1525145749,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"人类的欲望无止境，渴望的是无所不能，至死不休，现有的事物包含计算机相关只是资源技术受限的一种妥协方案，架构模式也只是曲折中前进时总结的经验而已，银弹只是对未知恐惧的一种自欺欺人的想法，当然，因为未知，所以以银弹为寄托继续前进也挺好。","like_count":0},{"had_liked":false,"id":6928,"user_name":"Greeny","can_delete":false,"product_type":"c1","uid":1102359,"ip_address":"","ucode":"B8F486CEDBF04E","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/17/04612538.jpg","comment_is_top":false,"comment_ctime":1525145143,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"既定设计赶不上随时代变化的需求","like_count":0},{"had_liked":false,"id":6919,"user_name":"正弋","can_delete":false,"product_type":"c1","uid":1104283,"ip_address":"","ucode":"97CBC1C1AD9F90","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/9b/cbebc759.jpg","comment_is_top":false,"comment_ctime":1525142069,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"不同的软件有不同的功能侧重及非功能需求，注定了没有银弹能照顾到所有类型的软件","like_count":0},{"had_liked":false,"id":6917,"user_name":"codewu","can_delete":false,"product_type":"c1","uid":1060861,"ip_address":"","ucode":"BAA2B1CB48FD00","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/fd/dead7549.jpg","comment_is_top":false,"comment_ctime":1525141944,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"只要软件上线一直在服务于市场，那么对于软件需求的跟变就是不可预测的。任何应对未来变化的计划都不能确保百分百的hold住。","like_count":0}]}