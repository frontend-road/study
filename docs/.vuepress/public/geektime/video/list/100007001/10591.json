{"id":10591,"title":"63 | Zuul2.0简介","content":"无","comments":[{"had_liked":false,"id":23813,"user_name":"天天平安","can_delete":false,"product_type":"c3","uid":1119208,"ip_address":"","ucode":"C4850F9655F4DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/e8/08b829a9.jpg","comment_is_top":false,"comment_ctime":1536669963,"is_pvip":false,"replies":[{"id":9651,"content":"生产级代码很复杂和庞大，也充满细节，一堆堆的新功能迭代和bug fix，所以培训包括写书，很少有直接讲生产代码的，一般都是讲一个简化的模型（核心原理+样例）。重要的是通过简化模型理解原理，通过样例上手，然后在实践中自己探索和应用。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1537682817,"ip_address":"","comment_id":23813,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，你搞一套生产的代码，直接来讲，必火。讲这样的东西没有意义。","like_count":7,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423741,"discussion_content":"生产级代码很复杂和庞大，也充满细节，一堆堆的新功能迭代和bug fix，所以培训包括写书，很少有直接讲生产代码的，一般都是讲一个简化的模型（核心原理+样例）。重要的是通过简化模型理解原理，通过样例上手，然后在实践中自己探索和应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537682817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212386,"user_name":"小马哥","can_delete":false,"product_type":"c3","uid":1107153,"ip_address":"","ucode":"376833AC2A1589","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/d1/002f9955.jpg","comment_is_top":false,"comment_ctime":1588113955,"is_pvip":false,"replies":[{"id":79061,"content":"good to know, thx!","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1588249806,"ip_address":"","comment_id":212386,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"现在netty应该是同步非阻塞，aio在5.x版本，现在已经下了","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493490,"discussion_content":"good to know, thx!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588249806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112958,"user_name":"citysun2009","can_delete":false,"product_type":"c3","uid":1090468,"ip_address":"","ucode":"285AB0E13C5927","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/a4/fc9cf791.jpg","comment_is_top":false,"comment_ctime":1562854685,"is_pvip":false,"replies":[{"id":41325,"content":"简单将，对于cpu密集型应用，就是主要利用cpu做计算，io较少，这个时候你用blocking io，编程模型比较简单，多线程可以并行计算，因为io本身就少，不会有很多阻塞发生，大部分都在计算。对于io密集型应用，比如高流量web网站，大部分都是io操作，这个时候用blocking io就会有很多线程阻塞，线程和切换都是有开销的，所以这种场景适合用noblocking io，线程数量小，开销也少。\n\n如果想进一步理解细节，可以参考stackoverflow上的一个帖子https:&#47;&#47;stackoverflow.com&#47;questions&#47;34877705&#47;why-cpu-bound-is-better-with-blocking-i-o-and-i-o-bound-is-better-with-non-block","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563023227,"ip_address":"","comment_id":112958,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，您好。为什说阻塞同步模式适用于cpu密集型。还是只是非IO密集的都适用？\n阻塞同步模式对应cpu密集型好像也没太多优势啊。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457976,"discussion_content":"简单将，对于cpu密集型应用，就是主要利用cpu做计算，io较少，这个时候你用blocking io，编程模型比较简单，多线程可以并行计算，因为io本身就少，不会有很多阻塞发生，大部分都在计算。对于io密集型应用，比如高流量web网站，大部分都是io操作，这个时候用blocking io就会有很多线程阻塞，线程和切换都是有开销的，所以这种场景适合用noblocking io，线程数量小，开销也少。\n\n如果想进一步理解细节，可以参考stackoverflow上的一个帖子https://stackoverflow.com/questions/34877705/why-cpu-bound-is-better-with-blocking-i-o-and-i-o-bound-is-better-with-non-block","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563023227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40991,"user_name":"劳动维权","can_delete":false,"product_type":"c3","uid":1010192,"ip_address":"","ucode":"1D5CEB96618E01","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/10/4d2d6e64.jpg","comment_is_top":false,"comment_ctime":1542709480,"is_pvip":false,"replies":[{"id":15260,"content":"zuul2基于netty纯异步实现较复杂，且出来不久业界大规模应用案例还不多，其成熟可靠和性能有待进一步落地考验，所以暂无计划讲解zuul2，另外，对大部分企业和场景，zuul1简单够用。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1542985081,"ip_address":"","comment_id":40991,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"能否深入分析下zuul2的实现？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429668,"discussion_content":"zuul2基于netty纯异步实现较复杂，且出来不久业界大规模应用案例还不多，其成熟可靠和性能有待进一步落地考验，所以暂无计划讲解zuul2，另外，对大部分企业和场景，zuul1简单够用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542985081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26228,"user_name":"大卫","can_delete":false,"product_type":"c3","uid":1019127,"ip_address":"","ucode":"D861709E483793","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/f7/a4de6f64.jpg","comment_is_top":false,"comment_ctime":1537523468,"is_pvip":false,"replies":[{"id":9628,"content":"AsyncServlet只是前端异步，目的只是接受更多连接数，后台处理和调用还是使用容器线程池同步调用的；zuul2应该使用的是基于netty的纯异步，前端请求处理和后端处理和调用都是异步的。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1537674661,"ip_address":"","comment_id":26228,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"波波老师  AsyncServlet跟zuul2的异步有啥区别么","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424576,"discussion_content":"AsyncServlet只是前端异步，目的只是接受更多连接数，后台处理和调用还是使用容器线程池同步调用的；zuul2应该使用的是基于netty的纯异步，前端请求处理和后端处理和调用都是异步的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537674661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327694,"user_name":"Geek_a2849d","can_delete":false,"product_type":"c3","uid":1183791,"ip_address":"","ucode":"B2EE30752C836E","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/2f/cdd0b5d1.jpg","comment_is_top":false,"comment_ctime":1640240774,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师有没有zuul1.0升级2.0的经验分享啊","like_count":0}]}