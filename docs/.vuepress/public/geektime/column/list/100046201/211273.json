{"id":211273,"title":"13 | 优雅关闭：如何避免服务停机带来的业务损失？","content":"<p>你好，我是何小锋。上一讲我们讲了“异常重试”，总结来说，异常重试就是为了尽最大可能保证接口可用率的一种手段，但这种策略只能用在幂等接口上，否则就会因为重试导致应用系统数据“写花”。</p><p>接着昨天的内容，今天我们再来聊聊RPC中的关闭流程。</p><h2>关闭为什么有问题？</h2><p>我们知道，在“单体应用”复杂到一定程度后，我们一般会进行系统拆分，也就是时下流行的微服务架构。服务拆分之后，自然就需要协同，于是RPC框架就出来了，它用来解决各个子系统之间的通信问题。</p><p>我再倒回来问你一个非常基础的问题？你觉得系统为啥非要拆分呢？从我的角度，如果只说一个原因，我觉得拆分之后我们可以更方便、更快速地迭代业务。那么问题来了，更快速地迭代业务，说人话不就是我会经常更新应用系统，时不时还老要重启服务器吗？</p><p>那具体到我们的RPC体系里，你就要考虑，在重启服务的过程中，RPC怎么做到让调用方系统不出问题呢？</p><p>要想说明白这事，我们先要简述下上线的大概流程：当服务提供方要上线的时候，一般是通过部署系统完成实例重启。在这个过程中，服务提供方的团队并不会事先告诉调用方他们需要操作哪些机器，从而让调用方去事先切走流量。而对调用方来说，它也无法预测到服务提供方要对哪些机器重启上线，因此负载均衡就有可能把要正在重启的机器选出来，这样就会导致把请求发送到正在重启中的机器里面，从而导致调用方不能拿到正确的响应结果。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/c8/67/c899c36097fd5e3f70bf031f4b2c2167.jpg?wh=3596*1810\" alt=\"\"></p><p>在服务重启的时候，对于调用方来说，这时候可能会存在以下几种情况：</p><ul>\n<li>调用方发请求前，目标服务已经下线。对于调用方来说，跟目标节点的连接会断开，这时候调用方可以立马感知到，并且在其健康列表里面会把这个节点挪掉，自然也就不会被负载均衡选中。</li>\n<li>调用方发请求的时候，目标服务正在关闭，但调用方并不知道它正在关闭，而且两者之间的连接也没断开，所以这个节点还会存在健康列表里面，因此该节点就有一定概率会被负载均衡选中。</li>\n</ul><h2>关闭流程</h2><p>当然还存在目标服务正在启动的情况，如何优雅地启动我会在下一讲详细地讲，这也是重点。今天我们要聚焦讨论的就是当出现第二种情况的时候，在RPC里面怎么避免调用方业务受损。</p><p>这时候你可能会想到，我是不是在重启服务机器前，先通过“某种方式”把要下线的机器从调用方维护的“健康列表”里面删除就可以了，这样负载均衡就选不到这个节点了？你说得一点都没错，但这个具体的“某种方式”是怎么完成呢？</p><p>最没有效率的办法就是人工通知调用方，让他们手动摘除要下线的机器，这种方式很原始也很直接。但这样对于提供方上线的过程来说太繁琐了，每次上线都要通知到所有调用我接口的团队，整个过程既浪费时间又没有意义，显然不能被正常接受。</p><p>这时候，可能你还会想到，RPC里面不是有服务发现吗？它的作用不就是用来“实时”感知服务提供方的状态吗？当服务提供方关闭前，是不是可以先通知注册中心进行下线，然后通过注册中心告诉调用方进行节点摘除？关闭流程如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/50/a15be58b32195422bd5a18dba0e68050.jpg?wh=3195*1277\" alt=\"\" title=\"关闭流程图\"></p><p>这样不就可以实现不通过“人肉”的方式，从而达到一种自动化方式，但这么做就能完全保证实现无损上下线吗？</p><p>如上图所示，整个关闭过程中依赖了两次RPC调用，一次是服务提供方通知注册中心下线操作，一次是注册中心通知服务调用方下线节点操作。注册中心通知服务调用方都是异步的，我们在“服务发现”一讲中讲过在大规模集群里面，服务发现只保证最终一致性，并不保证实时性，所以注册中心在收到服务提供方下线的时候，并不能成功保证把这次要下线的节点推送到所有的调用方。所以这么来看，通过服务发现并不能做到应用无损关闭。</p><p>不能强依赖“服务发现”来通知调用方要下线的机器，那服务提供方自己来通知行不行？因为在RPC里面调用方跟服务提供方之间是长连接，我们可以在提供方应用内存里面维护一份调用方连接集合，当服务要关闭的时候，挨个去通知调用方去下线这台机器。这样整个调用链路就变短了，对于每个调用方来说就一次RPC，可以确保调用的成功率很高。大部分场景下，这么做确实没有问题，我们之前也是这么实现的，但是我们发现线上还是会偶尔会出现，因为服务提供方上线而导致调用失败的问题。</p><p>那到底哪里出问题了呢？我后面分析了调用方请求日志跟收到关闭通知的日志，并且发现了一个线索如下：出问题请求的时间点跟收到服务提供方关闭通知的时间点很接近，只比关闭通知的时间早不到1ms，如果再加上网络传输时间的话，那服务提供方收到请求的时候，它应该正在处理关闭逻辑。这就说明服务提供方关闭的时候，并没有正确处理关闭后接收到的新请求。</p><h2>优雅关闭</h2><p>知道了根本原因，问题就很好解决了。因为服务提供方已经开始进入关闭流程，那么很多对象就可能已经被销毁了，关闭后再收到的请求按照正常业务请求来处理，肯定是没法保证能处理的。所以我们可以在关闭的时候，设置一个请求“挡板”，挡板的作用就是告诉调用方，我已经开始进入关闭流程了，我不能再处理你这个请求了。</p><p>如果大家经常去银行办理业务，就会很熟悉这个流程。在交接班或者有其他要事情处理的时候，银行柜台工作人员会拿出一个纸板，放在窗口前，上面写到“该窗口已关闭”。在该窗口排队的人虽然有一万个不愿意，也只能换到其它窗口办理业务，因为柜台工作人员会把当前正在办理的业务处理完后正式关闭窗口。</p><p>基于这个思路，我们可以这么处理：当服务提供方正在关闭，如果这之后还收到了新的业务请求，服务提供方直接返回一个特定的异常给调用方（比如ShutdownException）。这个异常就是告诉调用方“我已经收到这个请求了，但是我正在关闭，并没有处理这个请求”，然后调用方收到这个异常响应后，RPC框架把这个节点从健康列表挪出，并把请求自动重试到其他节点，因为这个请求是没有被服务提供方处理过，所以可以安全地重试到其他节点，这样就可以实现对业务无损。</p><p>但如果只是靠等待被动调用，就会让这个关闭过程整体有点漫长。因为有的调用方那个时刻没有业务请求，就不能及时地通知调用方了，所以我们可以加上主动通知流程，这样既可以保证实时性，也可以避免通知失败的情况。</p><p>说到这里，我知道你肯定会问，那要怎么捕获到关闭事件呢？</p><p>在我的经验里，可以通过捕获操作系统的进程信号来获取，在Java语言里面，对应的是Runtime.addShutdownHook方法，可以注册关闭的钩子。在RPC启动的时候，我们提前注册关闭钩子，并在里面添加了两个处理程序，一个负责开启关闭标识，一个负责安全关闭服务对象，服务对象在关闭的时候会通知调用方下线节点。同时需要在我们调用链里面加上挡板处理器，当新的请求来的时候，会判断关闭标识，如果正在关闭，则抛出特定异常。</p><p>看到这里，感觉问题已经比较好地被解决了。但细心的同学可能还会提出问题，关闭过程中已经在处理的请求会不会受到影响呢？</p><p>如果进程结束过快会造成这些请求还没有来得及应答，同时调用方会也会抛出异常。为了尽可能地完成正在处理的请求，首先我们要把这些请求识别出来。这就好比日常生活中，我们经常看见停车场指示牌上提示还有多少剩余车位，这个是如何做到的呢？如果仔细观察一下，你就会发现它是每进入一辆车，剩余车位就减一，每出来一辆车，剩余车位就加一。我们也可以利用这个原理在服务对象加上引用计数器，每开始处理请求之前加一，完成请求处理减一，通过该计数器我们就可以快速判断是否有正在处理的请求。</p><p>服务对象在关闭过程中，会拒绝新的请求，同时根据引用计数器等待正在处理的请求全部结束之后才会真正关闭。但考虑到有些业务请求可能处理时间长，或者存在被挂住的情况，为了避免一直等待造成应用无法正常退出，我们可以在整个ShutdownHook里面，加上超时时间控制，当超过了指定时间没有结束，则强制退出应用。超时时间我建议可以设定成10s，基本可以确保请求都处理完了。整个流程如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/77/cc/7752081ec658f1d56ac4219f1c07fbcc.jpg?wh=3131*2891\" alt=\"\" title=\"优雅关闭流程图\"></p><h2>总结</h2><p>在RPC里面，关闭虽然看似不属于RPC主流程，但如果我们不能处理得很好的话，可能就会导致调用方业务异常，从而需要我们加入很多额外的运维工作。一个好的关闭流程，可以确保使用我们框架的业务实现平滑的上下线，而不用担心重启导致的问题。</p><p>其实“优雅关闭”这个概念除了在RPC里面有，在很多框架里面也都挺常见的，比如像我们经常用的应用容器框架Tomcat。Tomcat关闭的时候也是先从外层到里层逐层进行关闭，先保证不接收新请求，然后再处理关闭前收到的请求。</p><h2>课后思考</h2><p>今天我只讲了优雅关闭，其实应用重启上下线的时候，还涉及到应用启动流程。那么如何做到优雅启动，避免请求分发到没有就绪的服务节点呢？请你先自行考虑一下，我会在下一讲给你细说。</p><p>当然，也欢迎你留言先和我分享你的思考和疑惑，也欢迎你把文章分享给你的朋友，邀请他加入学习。我们下节课再见！</p>","neighbors":{"left":{"article_title":"12 | 异常重试：在约定时间内安全可靠地重试","id":211261},"right":{"article_title":"14 | 优雅启动：如何避免流量打到没有启动完成的节点？","id":213967}},"comments":[{"had_liked":false,"id":201054,"user_name":"小罗希冀","can_delete":false,"product_type":"c1","uid":1311995,"ip_address":"","ucode":"88416458FF0041","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/fb/40f298bb.jpg","comment_is_top":false,"comment_ctime":1585710118,"is_pvip":false,"replies":[{"id":"76833","content":"总结的太准确了","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586692173,"ip_address":"","comment_id":201054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"181974336550","product_id":100046201,"comment_content":"关闭由外到内；启动从内到外","like_count":43,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490228,"discussion_content":"总结的太准确了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586692173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190102,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1584603032,"is_pvip":false,"replies":[{"id":"73832","content":"👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007341,"ip_address":"","comment_id":190102,"utype":1}],"discussion_count":3,"race_medal":0,"score":"61714145176","product_id":100046201,"comment_content":"优雅启动，必须保证内部服务启动正常之后，才能接受服务调用。由于现有 RPC 一般都与 Spring 深度结合，所以需要等待 Spring 容器启动完毕之后，开始暴露服务。当内存 RPC 服务创建完成之后，才能向注册中心注册，此时就可以接受服务。<br>","like_count":15,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487884,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378005,"discussion_content":"他只是说了在Java中，一般是spring+rpc，rpc框架把bean交给spring管理，所以先要等spring容器启动之后，才开始根据rpc的配置文件，进行服务暴露","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622994406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437036,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ed/6c/6fb35017.jpg","nickname":"群书","note":"","ucode":"BA9EE71D2D818A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363269,"discussion_content":"为何rpc的讨论要基于特定语言特定框架？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617157149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189488,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1584521491,"is_pvip":false,"replies":[{"id":"73836","content":"这就更稳妥了","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007510,"ip_address":"","comment_id":189488,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57419096339","product_id":100046201,"comment_content":"我们在启动服务时会由请求一个health check接口。这个接口会检查服务本身是否启动以及连接数据库等组件是否正常。只有检查通过才会注册到注册中心","like_count":14,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487707,"discussion_content":"这就更稳妥了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189216,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1584489082,"is_pvip":false,"replies":[{"id":"73839","content":"加油","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007586,"ip_address":"","comment_id":189216,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44534162042","product_id":100046201,"comment_content":"老师你讲的我倒是明白😊还是需要实操，或者看代码能够加深印象，知识点需要强化","like_count":11,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487634,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217753,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589602332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31654373404","product_id":100046201,"comment_content":"优雅关闭：<br>第一不再接收新的请求，且提供一个正在关闭的异常，把请求重试到其他提供服务的机器<br>第二处理完已经接受的请求，为防止某些慢请求或程序挂住，设置一个超时时间<br>第三处理完已接受的请求或到超时时间了，则进行关闭动作，释放各种资源<br><br>优雅启动：<br>第一没有完全启动完毕，不去注册中心注册，不对外提供服务<br>第二检查各项资源准备完毕，可以对外提供服务了，则去注册中心注册<br>第三等待请求到来，开始一场业务逻辑的处理之旅<br><br>事情做到极致，每一步都没有漏洞才能成为真正的高手！","like_count":8},{"had_liked":false,"id":189180,"user_name":"🐾","can_delete":false,"product_type":"c1","uid":1087256,"ip_address":"","ucode":"D0AD0260351C31","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","comment_is_top":false,"comment_ctime":1584464997,"is_pvip":false,"replies":[{"id":"73838","content":"照着这个思路实现应该不难","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007573,"ip_address":"","comment_id":189180,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31649236069","product_id":100046201,"comment_content":"理论是看懂了、但实现的话却无从下手","like_count":7,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487628,"discussion_content":"照着这个思路实现应该不难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254309,"discussion_content":"有些伪代码会更好理解，及动手实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588313672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189303,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1584497977,"is_pvip":true,"replies":[{"id":"73837","content":"理解的很到位","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007530,"ip_address":"","comment_id":189303,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23059334457","product_id":100046201,"comment_content":"服务方万事具备后，上报信息到注册中心","like_count":5,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487667,"discussion_content":"理解的很到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303544,"user_name":"💎A","can_delete":false,"product_type":"c1","uid":1075412,"ip_address":"","ucode":"914FFA92CA2713","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/d4/c9b5d3f9.jpg","comment_is_top":false,"comment_ctime":1626850843,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10216785435","product_id":100046201,"comment_content":"太Java了","like_count":2,"discussions":[{"author":{"id":1518717,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/7d/840cdc02.jpg","nickname":"阿左不是蜗牛","note":"","ucode":"A18289B3265ED4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575694,"discussion_content":"哈哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655030391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242041,"user_name":"阿卧","can_delete":false,"product_type":"c1","uid":1229566,"ip_address":"","ucode":"68C0CC25E57707","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/fe/038a076e.jpg","comment_is_top":false,"comment_ctime":1597570453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5892537749","product_id":100046201,"comment_content":"优雅关闭：jvm中使用Runtime.addShutDownhook，关闭时执行以下流程<br>1. 开启关闭挡板，拒绝新的请求<br>2. 利用计数器来确保执行中的服务完整执行完<br>3. 设置超时时间，保证服务正常关闭<br>4. 执行关闭时，通知服务调用方列表。","like_count":2},{"had_liked":false,"id":189178,"user_name":"陈国林","can_delete":false,"product_type":"c1","uid":1438037,"ip_address":"","ucode":"83D12F3E79F197","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","comment_is_top":false,"comment_ctime":1584464466,"is_pvip":false,"replies":[{"id":"73841","content":"从工程角度考虑可能不是很合适，资源有的浪费","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007735,"ip_address":"","comment_id":189178,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879431762","product_id":100046201,"comment_content":"1. 每个服务提供方方提供一个服务就绪探针<br>2. 服务调用方可以周期性调用服务提供方的就绪探针来确保服务提供方已经就绪<br>3. 服务端调用方通过负载均衡选出某服务节点的时候，只能从已经就绪的节点列表中选","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487627,"discussion_content":"从工程角度考虑可能不是很合适，资源有的浪费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347957,"user_name":"周文童","can_delete":false,"product_type":"c1","uid":1005411,"ip_address":"","ucode":"0C65A0A67229FA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/63/be6db73e.jpg","comment_is_top":false,"comment_ctime":1654607732,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654607732","product_id":100046201,"comment_content":"做 RPC 这样承载超大流量的系统，1% 的比例都会被放大成很大的量。因此，优化每一个细节就变得非常重要。<br>为了解决服务下线后，仍然会有请求打过来的问题。<br>先是从服务注册与发现考虑，通过注销自己来宣布服务下线，但是考虑到调用方通常有缓存，影响还是很大。<br>再就是从调用方维护的长链接入手，下发停机请求，还是会有并发问题。<br>剩下就是优雅下线。服务端注册钩子，在下线时保持只出不进原则。具体来说就是不再接新请求，抛出指定异常，调用方捕获该异常，剔除服务节点，执行重试逻辑。对下线之前的请求保证有限时间的处理，比如最多处理 10s，没处理完的放弃。<br>这就是优雅下线的思考。","like_count":1},{"had_liked":false,"id":341633,"user_name":"Geek4233","can_delete":false,"product_type":"c1","uid":2845147,"ip_address":"","ucode":"EE8DFF7098A873","user_header":"","comment_is_top":false,"comment_ctime":1649744097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649744097","product_id":100046201,"comment_content":"先关北向再关南向  先启南向再启北向","like_count":0},{"had_liked":false,"id":311434,"user_name":"Geek_7d539e","can_delete":false,"product_type":"c1","uid":2037654,"ip_address":"","ucode":"0D116E904D616E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIVvyFCLRcfoWfiaJt99K0wiabvicWtQaJdSseVA6QqWyxcvN5nd2TgZqiaUACc94bBvPHZTibnfnZfdtQ/132","comment_is_top":false,"comment_ctime":1631237363,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1631237363","product_id":100046201,"comment_content":"服务端添加一个全局的服务请求数计数器，加一和减一操作，会存在热点更新问题，影响到服务性能，容易完成伸缩性问题，不知道老师怎么看，谢谢。","like_count":0,"discussions":[{"author":{"id":2826205,"avatar":"","nickname":"hillwater","note":"","ucode":"FB16D5FCE8C7E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590095,"discussion_content":"计数器是单机自己维护","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665537412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2826205,"avatar":"","nickname":"hillwater","note":"","ucode":"FB16D5FCE8C7E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590094,"discussion_content":"单机下线，不存在热点问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665537381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302909,"user_name":"独孤九剑","can_delete":false,"product_type":"c1","uid":2230909,"ip_address":"","ucode":"6C1253E2B8C1D4","user_header":"https://static001.geekbang.org/account/avatar/00/22/0a/7d/ac715471.jpg","comment_is_top":false,"comment_ctime":1626430300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626430300","product_id":100046201,"comment_content":"越来越发现，操作系统是基础之基。","like_count":0},{"had_liked":false,"id":297415,"user_name":"小叶","can_delete":false,"product_type":"c1","uid":1851730,"ip_address":"","ucode":"EFD624AD6B2686","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ooYDTtTQHL9CZQmonDOQSC4Af9S4uqicXzUicOqEJqSOtHyOZ81PTpxcTqK5ibNHsaNWJIuHiaVcxB8gIo9RNXsshA/132","comment_is_top":false,"comment_ctime":1623513710,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1623513710","product_id":100046201,"comment_content":"关闭不是停服务了吗，addshutdownhook在哪里运行呢","like_count":0,"discussions":[{"author":{"id":2231238,"avatar":"https://static001.geekbang.org/account/avatar/00/22/0b/c6/eacd1efd.jpg","nickname":"好好学习","note":"","ucode":"6DE79FE79CDCBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382622,"discussion_content":"服务启动时，注册的钩子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625647824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293583,"user_name":"仲卜","can_delete":false,"product_type":"c1","uid":1910438,"ip_address":"","ucode":"CF5BFCF273893B","user_header":"https://static001.geekbang.org/account/avatar/00/1d/26/a6/9e858024.jpg","comment_is_top":false,"comment_ctime":1621436930,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621436930","product_id":100046201,"comment_content":"还有一种思路：软重启，完成资源交接。","like_count":0},{"had_liked":false,"id":290016,"user_name":"chai","can_delete":false,"product_type":"c1","uid":1202222,"ip_address":"","ucode":"C686EB1B1EBAB6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep66fdwo3ebSicKjf0iacAx4C2tZOthDDD4bSJqib1iauFBK6EoMSWUBp4UbbN2BQlib7mFR3hQD6MUwew/132","comment_is_top":false,"comment_ctime":1619322064,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619322064","product_id":100046201,"comment_content":"“挡板”应该是应用层的功能，在添加“挡板”后，tcp连接还是能建立成功的，有没有一种方式，可以在tcp三次握手阶段添加“挡板”呢","like_count":0},{"had_liked":false,"id":286107,"user_name":"群书","can_delete":false,"product_type":"c1","uid":1437036,"ip_address":"","ucode":"BA9EE71D2D818A","user_header":"https://static001.geekbang.org/account/avatar/00/15/ed/6c/6fb35017.jpg","comment_is_top":false,"comment_ctime":1617157072,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1617157072","product_id":100046201,"comment_content":"请教个优雅关闭的问题，服务正在关闭，再收到服务请求给调用方返回异常这个没有问题，已经开始处理的请求怎么办？","like_count":0,"discussions":[{"author":{"id":2231238,"avatar":"https://static001.geekbang.org/account/avatar/00/22/0b/c6/eacd1efd.jpg","nickname":"好好学习","note":"","ucode":"6DE79FE79CDCBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382623,"discussion_content":"服务端在关闭客户端连接前，做一下等待，等待所有请求处理完成，在关闭","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625647917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281803,"user_name":"曹翔","can_delete":false,"product_type":"c1","uid":1114878,"ip_address":"","ucode":"B4D8B42DFB535C","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/fe/d539b96b.jpg","comment_is_top":false,"comment_ctime":1614908510,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1614908510","product_id":100046201,"comment_content":"看到一个文章写的挺好的，https:&#47;&#47;www.cnblogs.com&#47;trust-freedom&#47;p&#47;10744683.html","like_count":0},{"had_liked":false,"id":262254,"user_name":"司空摘星","can_delete":false,"product_type":"c1","uid":2082272,"ip_address":"","ucode":"B1B6BC53F432B0","user_header":"https://static001.geekbang.org/account/avatar/00/1f/c5/e0/7bbb6f3a.jpg","comment_is_top":false,"comment_ctime":1605677210,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605677210","product_id":100046201,"comment_content":"好消息要再三确认再告知。 坏消息要及早告知。 这是不是一个社畜的自我修养？","like_count":1},{"had_liked":false,"id":243043,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1597930352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597930352","product_id":100046201,"comment_content":"实用","like_count":0},{"had_liked":false,"id":225980,"user_name":"鸠摩智","can_delete":false,"product_type":"c1","uid":1106201,"ip_address":"","ucode":"853E584FC4CD64","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/19/c756aaed.jpg","comment_is_top":false,"comment_ctime":1591923677,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591923677","product_id":100046201,"comment_content":"对于非幂等接口，如果在关闭的时候因为超时而强行关闭，框架如果重试再调用其他服务提供方就有可能出现脏数据，所以非幂等接口不能重试。","like_count":0},{"had_liked":false,"id":210990,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1587876444,"is_pvip":false,"replies":[{"id":"78541","content":"👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1587950115,"ip_address":"","comment_id":210990,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587876444","product_id":100046201,"comment_content":"这一节课让我想到了socket底层的如何优雅关闭socket连接。不错！","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493165,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587950115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193011,"user_name":"桂冠远航","can_delete":false,"product_type":"c1","uid":1155463,"ip_address":"","ucode":"5959E1A1DAA05D","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/87/259ab5a3.jpg","comment_is_top":false,"comment_ctime":1584881906,"is_pvip":false,"replies":[{"id":"73783","content":"谢谢","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584967973,"ip_address":"","comment_id":193011,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584881906","product_id":100046201,"comment_content":"标题起的特别好。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488494,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584967973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192706,"user_name":"桂冠远航","can_delete":false,"product_type":"c1","uid":1155463,"ip_address":"","ucode":"5959E1A1DAA05D","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/87/259ab5a3.jpg","comment_is_top":false,"comment_ctime":1584869079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584869079","product_id":100046201,"comment_content":"听明白了，清晰。","like_count":0},{"had_liked":false,"id":190993,"user_name":"武装到牙齿","can_delete":false,"product_type":"c1","uid":1629842,"ip_address":"","ucode":"66F549E9C225A7","user_header":"https://static001.geekbang.org/account/avatar/00/18/de/92/f867b68c.jpg","comment_is_top":false,"comment_ctime":1584716584,"is_pvip":false,"replies":[{"id":"73824","content":"加流量的工作，一般都会内置在调用方逻辑里面","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585006938,"ip_address":"","comment_id":190993,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584716584","product_id":100046201,"comment_content":"启动成功，告诉注册中心，陆续加流量","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488096,"discussion_content":"加流量的工作，一般都会内置在调用方逻辑里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585006938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190446,"user_name":"刘楠","can_delete":false,"product_type":"c1","uid":1120773,"ip_address":"","ucode":"9F19D44CBEE039","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/05/f154d134.jpg","comment_is_top":false,"comment_ctime":1584662088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584662088","product_id":100046201,"comment_content":"喜欢，有用","like_count":0},{"had_liked":false,"id":189928,"user_name":"松花皮蛋me","can_delete":false,"product_type":"c1","uid":1000054,"ip_address":"","ucode":"B0846CEEF6B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","comment_is_top":false,"comment_ctime":1584582803,"is_pvip":false,"replies":[{"id":"73833","content":"是的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007352,"ip_address":"","comment_id":189928,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584582803","product_id":100046201,"comment_content":"启动预热","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487830,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189182,"user_name":"🐾","can_delete":false,"product_type":"c1","uid":1087256,"ip_address":"","ucode":"D0AD0260351C31","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","comment_is_top":false,"comment_ctime":1584465153,"is_pvip":false,"replies":[{"id":"73840","content":"是的，时机很重要","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007654,"ip_address":"","comment_id":189182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584465153","product_id":100046201,"comment_content":"启动的话，可以等服务接口、对象实例这些都初始化好后，再把服务注册到注册中心。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487630,"discussion_content":"是的，时机很重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189172,"user_name":"shen","can_delete":false,"product_type":"c1","uid":1215066,"ip_address":"","ucode":"AE5737B0C7DC4F","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/5a/b67a82e3.jpg","comment_is_top":false,"comment_ctime":1584463158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584463158","product_id":100046201,"comment_content":"启动成功后才注册到注册中心上  ","like_count":0}]}