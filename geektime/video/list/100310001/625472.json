{"id":625472,"title":"101｜如何使用Django搭建简单的Web服务器？","content":"<p><strong>课后习题</strong><br>\n请你将所在地区的气温、天气存入数据库，并利用 Django 框架，展示数据库中的天气信息。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":378677,"user_name":"Greenery","can_delete":false,"product_type":"c3","uid":3566765,"ip_address":"新加坡","ucode":"16111129C9EBA2","user_header":"https://static001.geekbang.org/account/avatar/00/36/6c/ad/0a694b50.jpg","comment_is_top":false,"comment_ctime":1690603771,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from django.shortcuts import render\nfrom django.http import HttpResponse\n\n\n\n# Create your views here.\ndef index(req):\n    import pymysql.cursors\n\n    # 连接数据库\n    connection = pymysql.connect(host=&#39;localhost&#39;,\n                                 user=&#39;root&#39;,\n                                 password=&#39;root&#39;,\n                                 database=&#39;db&#39;,\n                                 cursorclass=pymysql.cursors.DictCursor)\n\n    with connection:\n        with connection.cursor() as cursor:\n            # 读取纪录\n            sql = &quot;SELECT `date`, `city`,`temp` FROM `weather1`&quot;\n            cursor.execute(sql)\n            result = cursor.fetchall()\n            print(result)\n            # 将ctx转换为一个字典，以便传递给模板\n            ctx = {&#39;weathers&#39;: result}\n    return render(req, &#39;weather.html&#39;, ctx)\n\n# weather.html\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Zhe jiang Weathers&lt;&#47;title&gt;\n&lt;&#47;head&gt;\n&lt;body&gt;\n\n&lt;ul&gt;\n    {% for w in weathers %}\n        &lt;li&gt;\n            {{w.city}} | {{w.date}} | {{w.temp}}\n        &lt;&#47;li&gt;\n    {% endfor %}\n&lt;&#47;ul&gt;\n\n&lt;&#47;body&gt;\n&lt;&#47;html&gt;","like_count":1},{"had_liked":false,"id":385259,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702362830,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"首先，你需要从一个可靠的源获取深圳地区的气温和天气信息。你可以使用 Python 的 `requests` 库来从一个天气 API 获取数据。然后，你可以使用 Django 的模型来将这些数据存储到数据库中。最后，你可以创建一个 Django 视图和模板来展示这些数据。\n\n以下是一个简单的示例：\n\n1. **获取天气数据**：\n\n```python\nimport requests\n\n# 获取天气数据（假设你有一个可用的 API）\nresponse = requests.get(&#39;http:&#47;&#47;api.weather.com&#47;v1&#47;location&#47;SZXX0006:1:CH&#47;forecast&#47;daily&#47;10day.json?apiKey=your_api_key&#39;)\nweather_data = response.json()\n```\n\n2. **存储数据到数据库**：\n\n在你的 Django 模型中，你可以创建一个 `Weather` 模型来存储天气数据。\n\n```python\nfrom django.db import models\n\nclass Weather(models.Model):\n    date = models.DateField()\n    temperature = models.FloatField()\n    description = models.CharField(max_length=200)\n```\n\n然后，你可以使用获取到的天气数据来创建新的 `Weather` 对象并保存到数据库中。\n\n```python\nfor day in weather_data[&#39;forecast&#39;][&#39;simpleforecast&#39;][&#39;forecastday&#39;]:\n    weather = Weather(date=day[&#39;date&#39;], temperature=day[&#39;high&#39;][&#39;celsius&#39;], description=day[&#39;conditions&#39;])\n    weather.save()\n```\n\n3. **展示天气数据**：\n\n你可以创建一个 Django 视图来获取天气数据，并将其传递给模板。\n\n```python\nfrom django.shortcuts import render\nfrom .models import Weather\n\ndef weather_view(request):\n    weather_data = Weather.objects.all()\n    return render(request, &#39;weather.html&#39;, {&#39;weather_data&#39;: weather_data})\n```\n\n然后，你可以在 `weather.html` 模板中展示这些数据。\n\n```html\n{% for weather in weather_data %}\n    &lt;p&gt;{{ weather.date }}: {{ weather.temperature }}°C, {{ weather.description }}&lt;&#47;p&gt;\n{% endfor %}\n```\n\n以上就是使用 Django 框架将深圳地区的气温和天气信息存储到数据库并展示的基本步骤。你需要根据实际的 API 和数据结构来修改这些代码。希望这个答案对你有所帮助！","like_count":0},{"had_liked":false,"id":383741,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1699533955,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，我碰到一个TemplateDoesNotExist问题，这个问题怎么排查？","like_count":0,"discussions":[{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651648,"discussion_content":"# 验证模版， 比如我的应用的是myapp101 那么这个模版文件路径应该是\n    # mysite101 -&gt; myapp101 -&gt; templates -&gt; myapp101 -&gt; weather.html\n    return render(request, &#34;myapp101/weather.html&#34;)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727229490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"吉林","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367434,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1675233448,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from django.shortcuts import render\nimport pymysql\nimport time\n\ndef index(request):\n  conn = pymysql.connect(\n  host=&#39;localhost&#39;,\n  user=&#39;root&#39;,\n  password=&#39;&#39;,\n  database=&#39;pydb&#39;,\n  cursorclass=pymysql.cursors.DictCursor)\n\n  with conn:\n    with conn.cursor() as cursor:\n      sql = &quot;select * from `weather` where city =%s&quot;\n      cursor.execute(sql, (&#39;沈阳&#39;))\n      result = cursor.fetchall()\n  context          = {}\n  context[&#39;city&#39;] = result[0][&quot;city&quot;]\n  context[&#39;date&#39;] = time.strftime(&quot;%Y-%m-%d&quot;, time.strptime(result[0][&quot;date&quot;], &quot;%Y%m%d&quot;))\n  context[&#39;temp&#39;] = result[0][&quot;temp&quot;]\n  return render(request, &#39;index.html&#39;, context)","like_count":0}]}