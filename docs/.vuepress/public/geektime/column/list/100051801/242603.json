{"id":242603,"title":"11 | 一枝独秀的字符串：C++也能处理文本？","content":"<p>你好，我是Chrono。</p><p>在第一个单元里，我们学习了C++的生命周期和编程范式。在第二个单元里，我们学习了自动类型推导、智能指针、lambda表达式等特性。今天，我们又要开始进入一个新的单元了，这就是C++标准库。</p><p>以前，“C++”这个词还只是指编程语言，但是现在，“C++”早已变成了一个更大的概念——不单是词汇、语法，还必须要加上完备工整的标准库。只有语言、标准库“双剑合璧”，才能算是真正的C++。反过来说，如果只单纯用语言，拒绝标准库，那就成了“天残地缺”。</p><p>看一下官方发布的标准文档吧（C++14，可以参考<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3797.pdf\">这份资料</a>）， 全文有1300多页，而语言特性只有400出头，不足三分之一，其余的篇幅全是在讲标准库，可见它的份量有多重。</p><p>而且，按照标准委员会的意思，今后C++也会更侧重于扩充库而不是扩充语言，所以将来标准库的地位还会不断上升。</p><p>C++标准库非常庞大，里面有各式各样的精巧工具，可谓是“琳琅满目”。但是，正是因为它的庞大，很多人在学习标准库时会感觉无从下手，找不到学习的“突破口”。</p><p>今天我就先来讲和空气、水一样，最常用，也是最容易被忽视的字符串，看看在C++里该怎么处理文本数据。</p><h2>认识字符串</h2><p>对于C++里的字符串类string，你可能最熟悉不过了，几乎是天天用。但你知道吗？string其实并不是一个“真正的类型”，而是模板类basic_string的特化形式，是一个typedef：</p><!-- [[[read_end]]] --><pre><code>using string = std::basic_string&lt;char&gt;;  // string其实是一个类型别名\n</code></pre><p>这个特化是什么意思呢？</p><p>所谓的字符串，就是字符的序列。字符是人类语言、文字的计算机表示，而人类语言、文字又有很多种，相应的编码方式也有很多种。所以，C++就为字符串设计出了模板类basic_string，再用模板来搭配不同的字符类型，就能够更有“弹性”地处理各种文字了。</p><p>说到字符和编码，就不能不提到Unicode，它的目标是用一种编码方式统一处理人类语言文字，使用32位（4个字节）来保证能够容纳过去或者将来所有的文字。</p><p>但这就与C++产生了矛盾。因为C++的字符串源自C，而C里的字符都是单字节的char类型，无法支持Unicode。</p><p>为了解决这个问题，C++就又新增了几种字符类型。C++98定义了wchar_t，到了C++11，为了适配UTF-16、UTF-32，又多了char16_t、char32_t。于是，basic_string在模板参数里换上这些字符类型之后，就可以适应不同的编码方式了。</p><pre><code>using wstring = std::basic_string&lt;wchar_t&gt;;\nusing u16string = std::basic_string&lt;char16_t&gt;;\nusing u32string = std::basic_string&lt;char32_t&gt;;\n</code></pre><p>不过在我看来，虽然C++做了这些努力，但其实收效并不大。因为字符编码和国际化的问题实在是太复杂了，仅有这几个基本的字符串类型根本不够，而C++一直没有提供处理编码的配套工具，我们只能“自己造轮子”，用不好反而会把编码搞得一团糟。</p><p>这就导致wstring等新字符串基本上没人用，大多数程序员为了不“自找麻烦”，还是选择最基本的string。万幸的是Unicode还有一个UTF-8编码方式，与单字节的char完全兼容，用string也足以适应大多数的应用场合。</p><p>所以，我也建议你只用string，而且在涉及Unicode、编码转换的时候，尽量不要用C++，目前它还不太擅长做这种工作，可能还是改用其他语言来处理更好。接下来，我就讲一讲，该怎么用好String。</p><h2>用好字符串</h2><p>string在C++标准库里的身份也是比较特殊，虽然批评它的声音有不少，比如接口复杂、成本略高，但不像容器、算法，直到现在，仍然有且只有这么一个字符串类，“只此一家，别无分号”。</p><p>所以，在这种“别无选择”的情况下，我们就要多了解它的优缺点，尽量用好它。</p><p>首先你要看到，string是一个功能比较齐全的字符串类，可以提取子串、比较大小、检查长度、搜索字符……基本满足一般人对字符串的“想象”。</p><pre><code>string str = &quot;abc&quot;;\n\nassert(str.length() == 3); \nassert(str &lt; &quot;xyz&quot;);\nassert(str.substr(0, 1) == &quot;a&quot;);\nassert(str[1] == 'b');\nassert(str.find(&quot;1&quot;) == string::npos);\nassert(str + &quot;d&quot; == &quot;abcd&quot;);\n</code></pre><p>刚才也说了，string的接口比较复杂，除了字符串操作，还有size()、begin()、end()、push_back()等类似容器的操作，这很容易让人产生“联想”，把它当成是一个“字符容器”。</p><p>但我不建议你这样做。<strong>字符串和容器完全是两个不同的概念</strong>。</p><p>字符串是“文本”，里面的字符之间是强关系，顺序不能随便调换，否则就失去了意义，通常应该视为一个整体来处理。而容器是“集合”，里面的元素之间没有任何关系，可以随意增删改，对容器更多地是操作里面的单个元素。</p><p>理解了这一点，<strong>把每个字符串都看作是一个不可变的实体，你才能在C++里真正地用好字符串</strong>。</p><p>但有的时候，我们也确实需要存储字符的容器，比如字节序列、数据缓冲区，这该怎么办呢？</p><p>这个时候，我建议你<strong>最好改用<code>vector&lt;char&gt;</code></strong>，它的含义十分“纯粹”，只存储字符，没有string那些不必要的成本，用起来也就更灵活一些。</p><p>接下来我们再看看string的一些小技巧。</p><p><strong>1.字面量后缀</strong></p><p>C++14为方便使用字符串，新增了一个字面量的<strong>后缀“s”</strong>，明确地表示它是string字符串类型，而不是C字符串，这就可以利用auto来自动类型推导，而且在其他用到字符串的地方，也可以省去声明临时字符串变量的麻烦，效率也会更高：</p><pre><code>using namespace std::literals::string_literals;  //必须打开名字空间\n\nauto str = &quot;std string&quot;s;      // 后缀s，表示是标准字符串，直接类型推导\n\nassert(&quot;time&quot;s.size() == 4);   // 标准字符串可以直接调用成员函数\n</code></pre><p>不过要提醒你的是，<strong>为了避免与用户自定义字面量的冲突，后缀“s”不能直接使用，必须用using打开名字空间才行</strong>，这是它的一个小缺点。</p><p><strong>2.原始字符串</strong></p><p>C++11还为字面量增加了一个“<strong>原始字符串</strong>”（Raw string literal）的新表示形式，比原来的引号多了一个大写字母R和一对圆括号，就像下面这样：</p><pre><code>auto str = R&quot;(nier:automata)&quot;;    // 原始字符串：nier:automata\n</code></pre><p>这种形式初看上去显得有点多余，它有什么好处呢？</p><p>你一定知道，C++的字符有“转义”的用法，在字符前面加上一个“\\”，就可以写出“\\n”“\\t”来表示回车、跳格等不可打印字符。</p><p>但这个特性也会带来麻烦，有时我们不想转义，只想要字符串的“原始”形式，在C++里写起来就很难受了。特别是在用正则表达式的时候，由于它也有转义，两个转义效果“相乘”，就很容易出错。</p><p>比如说，我要在正则里表示“<code>\\$</code>”，需要写成\"<code>\\\\\\$</code>\"，而在C++里需要对“\\”再次转义，就是“<code>\\\\\\\\\\\\$</code>”，你能数出来里面到底有多少个“\\”吗？</p><p>如果使用原始字符串的话，就没有这样的烦恼了，它不会对字符串里的内容做任何转义，完全保持了“原始风貌”，即使里面有再多的特殊字符都不怕：</p><pre><code>auto str1 = R&quot;(char&quot;&quot;'')&quot;;    // 原样输出：char&quot;&quot;''\nauto str2 = R&quot;(\\r\\n\\t\\&quot;)&quot;;    // 原样输出：\\r\\n\\t\\&quot;\nauto str3 = R&quot;(\\\\\\$)&quot;;        // 原样输出：\\\\\\$\nauto str4 = &quot;\\\\\\\\\\\\$&quot;;         // 转义后输出：\\\\\\$\n</code></pre><p>不过，想要在原始字符串里面写引号+圆括号的形式该怎么办呢？</p><p>对于这个问题，C++也准备了应对的办法，就是在圆括号的两边加上最多16个字符的特别“界定符”（delimiter），这样就能够保证不与字符串内容发生冲突：</p><pre><code>auto str5 = R&quot;==(R&quot;(xxx)&quot;)==&quot;;// 原样输出：R&quot;(xxx)&quot;\n</code></pre><p><strong>3.字符串转换函数</strong></p><p>在处理字符串的时候，我们还会经常遇到与数字互相转换的事情，以前只能用C函数atoi()、atol()，它们的参数是C字符串而不是string，用起来就比较麻烦，于是，C++11就增加了几个新的转换函数：</p><ul>\n<li>stoi()、stol()、stoll()等把字符串转换成整数；</li>\n<li>stof()、stod()等把字符串转换成浮点数；</li>\n<li>to_string()把整数、浮点数转换成字符串。</li>\n</ul><p>这几个小函数在处理用户数据、输入输出的时候，非常方便：</p><pre><code>assert(stoi(&quot;42&quot;) == 42);          // 字符串转整数\nassert(stol(&quot;253&quot;) == 253L);       // 字符串转长整数\nassert(stod(&quot;2.0&quot;) == 2.0);       // 字符串转浮点数\n\nassert(to_string(1984) == &quot;1984&quot;);       // 整数转字符串\n</code></pre><p><strong>4.字符串视图类</strong></p><p>再来说一下string的成本问题。它确实有点“重”，大字符串的拷贝、修改代价很高，所以我们通常都尽量用const string&amp;，但有的时候还是无法避免（比如使用C字符串、获取子串）。如果你对此很在意，就有必要找一个“轻量级”的替代品。</p><p>在C++17里，就有这么一个完美满足所有需求的东西，叫string_view。顾名思义，它是一个字符串的视图，成本很低，内部只保存一个指针和长度，无论是拷贝，还是修改，都非常廉价。</p><p>唯一的遗憾是，它只出现在C++17里，不过你也可以参考它的接口，自己在C++11里实现一个简化版本。下面我给你一个简单的示范，你可以课下去扩展：</p><pre><code>class my_string_view final        // 简单的字符串视图类，示范实现\n{\npublic:\n    using this_type = my_string_view;     // 各种内部类型定义\n    using string_type = std::string;\n    using string_ref_type = const std::string&amp;;\n\n    using char_ptr_type = const char*;\n    using size_type = size_t;\nprivate:\n    char_ptr_type ptr = nullptr;     // 字符串指针\n    size_type len = 0;               // 字符串长度\npublic:\n    my_string_view() = default;\n   ~my_string_view() = default;\n\n    my_string_view(string_ref_type str) noexcept\n        : ptr(str.data()), len(str.length())\n    {}\npublic:\n    char_ptr_type data() const     // 常函数，返回字符串指针\n    {\n        return ptr;\n    }\n\n    size_type size() const        // 常函数，返回字符串长度\n    {\n        return len;\n    }\n};\n</code></pre><h2>正则表达式</h2><p>说了大半天，其实我们还是没有回答这节课开头提出的疑问，也就是“在C++里该怎么处理文本”。string只是解决了文本的表示和存储问题，要对它做大小写转换、判断前缀后缀、模式匹配查找等更复杂的处理，要如何做呢？</p><p>使用标准算法显然是不行的，因为算法的工作对象是容器，而刚才我就说了，字符串与容器是两个完全不同的东西，大部分算法都无法直接套用到字符串上，所以文本处理也一直是C++的“软肋”。</p><p>好在C++11终于在标准库里加入了正则表达式库regex（虽然有点晚），利用它的强大能力，你就能够任意操作文本、字符串。</p><p>很多语言都支持正则表达式，关于它的语法规则我也就不细说了（课下你可以参考下这个链接：<a href=\"https://www.pcre.org/\">https://www.pcre.org/</a>），我就重点介绍一下在C++里怎么用。</p><p>C++正则表达式主要有两个类。</p><ul>\n<li>regex：表示一个正则表达式，是basic_regex的特化形式；</li>\n<li>smatch：表示正则表达式的匹配结果，是match_results的特化形式。</li>\n</ul><p>C++正则匹配有三个算法，注意它们都是“只读”的，不会变动原字符串。</p><ul>\n<li>regex_match()：完全匹配一个字符串；</li>\n<li>regex_search()：在字符串里查找一个正则匹配；</li>\n<li>regex_replace()：正则查找再做替换。</li>\n</ul><p>所以，你只要用regex定义好一个表达式，然后再调用匹配算法，就可以立刻得到结果，用起来和其他语言差不多。不过，在写正则的时候，记得最好要用“原始字符串”，不然转义符绝对会把你折腾得够呛。</p><p>下面我举个例子：</p><pre><code>auto make_regex = [](const auto&amp; txt)    // 生产正则表达式\n{\n    return std::regex(txt);\n};\n\nauto make_match = []()                  // 生产正则匹配结果\n{\n    return std::smatch();\n};\n\nauto str = &quot;neir:automata&quot;s;          // 待匹配的字符串\nauto reg = \n    make_regex(R&quot;(^(\\w+)\\:(\\w+)$)&quot;);  // 原始字符串定义正则表达式\nauto what = make_match();             // 准备获取匹配的结果\n</code></pre><p>这里我先定义了两个简单的lambda表达式，生产正则对象，主要是为了方便用auto自动类型推导。当然，同时也隐藏了具体的类型信息，将来可以随时变化（这也有点函数式编程的味道了）。</p><p>然后我们就可以调用regex_match()检查字符串，函数会返回bool值表示是否完全匹配正则。如果匹配成功，结果存储在what里，可以像容器那样去访问，第0号元素是整个匹配串，其他的是子表达式匹配串：</p><pre><code>assert(regex_match(str, what, reg));  // 正则匹配\n\nfor(const auto&amp; x : what) {          // for遍历匹配的子表达式\n    cout &lt;&lt; x &lt;&lt; ',';\n}\n</code></pre><p>regex_search()、regex_replace()的用法也都差不多，很好理解，直接看代码吧：</p><pre><code>auto str = &quot;god of war&quot;s;             // 待匹配的字符串\n\nauto reg  = \n  make_regex(R&quot;((\\w+)\\s(\\w+))&quot;);    // 原始字符串定义正则表达式\nauto what = make_match();          // 准备获取匹配的结果\n\nauto found = regex_search(          // 正则查找，和匹配类似\n                str, what, reg);\n\nassert(found);                        // 断言找到匹配\nassert(!what.empty());                // 断言有匹配结果\nassert(what[1] == &quot;god&quot;);              // 看第一个子表达式\nassert(what[2] == &quot;of&quot;);              // 看第二个子表达式\n\nauto new_str = regex_replace(      // 正则替换，返回新字符串\n    str,                           // 原字符串不改动\n    make_regex(R&quot;(\\w+$)&quot;),         // 就地生成正则表达式对象\n    &quot;peace&quot;                        // 需要指定替换的文字\n);\n\ncout &lt;&lt; new_str &lt;&lt; endl;          // 输出god of peace\n</code></pre><p>这段代码的regex_search()搜索了两个连续的单词，然后在匹配结果里以数组下标的形式输出。</p><p>regex_replace()不需要匹配结果，而是要提供一个替换字符串，因为算法是“只读”的，所以它会返回修改后的新字符串。利用这一点，就可以把它的输出作为另一个函数的输入，用“函数套函数”的形式实现“函数式编程”。</p><p>在使用regex的时候，还要注意正则表达式的成本。因为正则串只有在运行时才会处理，检查语法、编译成正则对象的代价很高，所以<strong>尽量不要反复创建正则对象，能重用就重用</strong>。在使用循环的时候更要特别注意，一定要把正则提到循环体外。</p><p>regex库的功能非常强大，我们没有办法把方方面面的内容都涉及到，刚刚我讲的都是最实用的方法。像大小写敏感、优化匹配引擎、扩展语法、正则迭代/切分等其他高级的功能，建议你课下多努力，参考一下<a href=\"https://github.com/chronolaw/cpp_study\">GitHub</a>仓库里的资料链接，深入研究它的接口和设置参数。</p><h2>小结</h2><p>好了，今天我讲了字符串类string和正则表达式库regex，它们是C++标准库里处理文本的唯一工具，虽然离完美还有距离，但我们也别无选择。目前我们能做的，就是充分掌握一些核心技巧，规避一些使用误区。这节课是我的经验总结，建议你多读几遍，希望可以进一步提升你的编码能力。</p><p>简单小结一下今天的内容：</p><ol>\n<li>C++支持多种字符类型，常用的string其实是模板类basic_string的特化形式；</li>\n<li>目前C++对Unicode的支持还不太完善，建议尽量避开国际化和编码转化，不要“自讨苦吃”；</li>\n<li>应当把string视为一个完整的字符串来操作，不要把它当成容器来使用；</li>\n<li>字面量后缀“s”表示字符串类，可以用来自动推导出string类型；</li>\n<li>原始字符串不会转义，是字符串的原始形态，适合在代码里写复杂的文本；</li>\n<li>处理文本应当使用正则表达式库regex，它的功能非常强大，但需要花一些时间和精力才能掌握。</li>\n</ol><h2>课下作业</h2><p>最后是课下作业时间，给你留两个思考题：</p><ol>\n<li>你平时在使用字符串的时候有感觉到哪些不方便吗？如果有的话，是怎么解决的？</li>\n<li>你觉得正则表达式能够应用在什么地方，解决哪些实际的问题？</li>\n</ol><p>欢迎你在留言区写下你的思考和答案，如果觉得今天的内容对你有所帮助，也欢迎分享给你的朋友。我们下节课见。</p><p><img src=\"https://static001.geekbang.org/resource/image/33/58/3301d0231ebb46c0e70d726af3cbc858.jpg?wh=1400*2244\" alt=\"\"></p>","comments":[{"had_liked":false,"id":222940,"user_name":"禾桃","can_delete":false,"product_type":"c1","uid":1477855,"ip_address":"","ucode":"9FE85C34A9E9E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/8c/df/77acb793.jpg","comment_is_top":false,"comment_ctime":1590971645,"is_pvip":false,"replies":[{"id":"82194","content":"string会持有所有字符的拷贝，而string_view只有指针和长度。<br><br>比如一个1m的字符串，string就占1m内存，而string_view就几个字节。<br><br>string_view是字符串的轻量级引用，只读，而string是真实的字符串、可以拷贝修改。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590975064,"ip_address":"","comment_id":222940,"utype":1}],"discussion_count":2,"race_medal":0,"score":"66015481085","product_id":100051801,"comment_content":"string_view 较string的优势，能举个具体例子吗？<br>我感觉string里也是字符串指针和长度（可以变的长度），这个看不出string_view优势在哪？string可以做哪些string_view做不了的事？<br><br>谢谢！<br>","like_count":15,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496967,"discussion_content":"string会持有所有字符的拷贝，而string_view只有指针和长度。\n\n比如一个1m的字符串，string就占1m内存，而string_view就几个字节。\n\nstring_view是字符串的轻量级引用，只读，而string是真实的字符串、可以拷贝修改。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590975064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2004988,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/97/fc/0ca13c5c.jpg","nickname":"xGdl","note":"","ucode":"5ADD896F62A2B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286660,"discussion_content":"其实c++早就应该实现slice了，如果copy on write也提供也是好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593256937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222744,"user_name":"1coma","can_delete":false,"product_type":"c1","uid":1822536,"ip_address":"","ucode":"89C0B2B89D2FF2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/cf/48/de3caacb.jpg","comment_is_top":false,"comment_ctime":1590903560,"is_pvip":false,"replies":[{"id":"82143","content":"哈哈，前一阵刚玩了尼尔机械纪元，还没来得及开三周目。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590918952,"ip_address":"","comment_id":222744,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48835543816","product_id":100051801,"comment_content":"罗老师也打游戏吗？我听着尼尔的歌看着教程，还以为幻视了。。","like_count":11,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496899,"discussion_content":"哈哈，前一阵刚玩了尼尔机械纪元，还没来得及开三周目。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590918952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222824,"user_name":"HoshinoKanade","can_delete":false,"product_type":"c1","uid":1770245,"ip_address":"","ucode":"AA8B4F90FB9E5F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/03/05/140068f9.jpg","comment_is_top":false,"comment_ctime":1590922194,"is_pvip":false,"replies":[{"id":"82156","content":"在Windows下写C++确实比较辛苦，不过有vc这个神器，这是Linux比不了的。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590926018,"ip_address":"","comment_id":222824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35950660562","product_id":100051801,"comment_content":"老師一直在用linux，而我活在windows裡面一大堆wchar之中不能自救。","like_count":8,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496929,"discussion_content":"在Windows下写C++确实比较辛苦，不过有vc这个神器，这是Linux比不了的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590926018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222479,"user_name":"Weining Cao","can_delete":false,"product_type":"c1","uid":1026955,"ip_address":"","ucode":"6E3DB699A41518","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/8b/fdb853c4.jpg","comment_is_top":false,"comment_ctime":1590815433,"is_pvip":false,"replies":[{"id":"82044","content":"现在有了regex好了一点，用boost里的string_algo也比较方便。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590823193,"ip_address":"","comment_id":222479,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18770684617","product_id":100051801,"comment_content":"处理string的话，标准C++的接口实在不够友好，易用。反而第三方库QT的QString用起来就舒服，顺手很多。<br><br>在这方面，python语言的string处理比C++要友好太多。比如最简单的string内子串替换功能，python可以直接str. replace（a，b），但C++的replace函数需要先计算出替换string的起始位置，非常繁琐。","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496815,"discussion_content":"现在有了regex好了一点，用boost里的string_algo也比较方便。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590823193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226600,"user_name":"李莹","can_delete":false,"product_type":"c1","uid":2005055,"ip_address":"","ucode":"FA7C77A0C8D125","user_header":"https://static001.geekbang.org/account/avatar/00/1e/98/3f/ed597443.jpg","comment_is_top":false,"comment_ctime":1592148250,"is_pvip":false,"replies":[{"id":"83438","content":"字符串后缀s是C++14的特性，C++11没有，需要升级gcc到5.4，然后启用C++14标准。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1592183263,"ip_address":"","comment_id":226600,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14477050138","product_id":100051801,"comment_content":"using namespace std::literals::string_literals;<br>编译<br>no member named &#39;literals&#39; in namespace &#39;std&#39;<br><br>这个是怎么回事。","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498297,"discussion_content":"字符串后缀s是C++14的特性，C++11没有，需要升级gcc到5.4，然后启用C++14标准。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592183263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2005055,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/98/3f/ed597443.jpg","nickname":"李莹","note":"","ucode":"FA7C77A0C8D125","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283362,"discussion_content":"多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592237515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324856,"user_name":"c1rew","can_delete":false,"product_type":"c1","uid":1021813,"ip_address":"","ucode":"4F9FAFD8FCC0A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/75/d73a7828.jpg","comment_is_top":false,"comment_ctime":1638689568,"is_pvip":true,"replies":[{"id":"117888","content":"This is great!","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1638761166,"ip_address":"","comment_id":324856,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10228624160","product_id":100051801,"comment_content":"针对std::regex与boost::regex之间的性能差异，以下链接有相应的测试及对应的讨论，供大家参考，可以再根据自己项目的实际使用情况再验证下。<br>https:&#47;&#47;www.cnblogs.com&#47;bbqzsl&#47;p&#47;13714008.html<br>https:&#47;&#47;stackoverflow.com&#47;questions&#47;14205096&#47;c11-regex-slower-than-python","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536328,"discussion_content":"This is great!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638761166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2831233,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/33/81/3693f4d9.jpg","nickname":"坚定的抢手","note":"","ucode":"E5A5EC6196C518","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571387,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652191378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252708,"user_name":"涤生","can_delete":false,"product_type":"c1","uid":1025437,"ip_address":"","ucode":"8281BB7345D4FA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/9d/a2f555ba.jpg","comment_is_top":false,"comment_ctime":1602463511,"is_pvip":false,"replies":[{"id":"92392","content":"是的，C++在字符串方面缺乏很多基本工具，用正则又显得有点重。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1602500382,"ip_address":"","comment_id":252708,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10192398103","product_id":100051801,"comment_content":"处理文件名需要分割的时候，特别不方便，Python用一个split函数就够了","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506844,"discussion_content":"是的，C++在字符串方面缺乏很多基本工具，用正则又显得有点重。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602500382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2004587,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIOKHyDXN8YMQnM4HromAic1IAkkyAS1Gj3Bic2sVtzjHgv1rjDSuyVJZUq7XmMNWbrFa2m2wVgo5hQ/132","nickname":"wayne","note":"","ucode":"B732B2D19451A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332278,"discussion_content":"文件的话C++17可以std::filesystem::path，17之前就用boost吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607144718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222405,"user_name":"TC128","can_delete":false,"product_type":"c1","uid":1993621,"ip_address":"","ucode":"C5FF12BB7406FB","user_header":"","comment_is_top":false,"comment_ctime":1590796192,"is_pvip":false,"replies":[{"id":"82029","content":"什么事情都不是绝对的，像这种情况就必须用Unicode，但用C++处理还是挺费劲的，其他语言做起来要比C++容易一些。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590802603,"ip_address":"","comment_id":222405,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10180730784","product_id":100051801,"comment_content":"老师，小结2说尽量不要用UNICODE，但如果用C++写界面（MFC、DirectUI），且软件又需要国际化，这种情况也尽量不用UNICODE吗？还是说换个语言写界面？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496780,"discussion_content":"什么事情都不是绝对的，像这种情况就必须用Unicode，但用C++处理还是挺费劲的，其他语言做起来要比C++容易一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590802603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1068583,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4e/27/5c562ca4.jpg","nickname":"cleanairdoris","note":"","ucode":"D116638A8A32BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578960,"discussion_content":"之前就干过C++ 加UI库写界面程序，里面就是各种转码，utf-8和unicode互相转。\n程序里面都是处理的utf-8，需要在界面显示时候转成unicode，从界面获取到的unicode立马转utf-8，确实挺蛋疼的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657101551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234613,"user_name":"怪兽","can_delete":false,"product_type":"c1","uid":1324007,"ip_address":"","ucode":"3342C55CB83B08","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/e7/145be2f9.jpg","comment_is_top":false,"comment_ctime":1594733858,"is_pvip":false,"replies":[{"id":"86569","content":"应该是打开了std名字空间吧。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1594775774,"ip_address":"","comment_id":234613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889701154","product_id":100051801,"comment_content":"老师，我在VS2017测试了一下，为什么不使用命名空间也可以使用s后缀？<br>&#47;&#47; using namespace std::literals::string_literals;<br>auto str = &quot;hello&quot;s;","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501439,"discussion_content":"应该是打开了std名字空间吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594775774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228619,"user_name":"怪兽","can_delete":false,"product_type":"c1","uid":1324007,"ip_address":"","ucode":"3342C55CB83B08","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/e7/145be2f9.jpg","comment_is_top":false,"comment_ctime":1592753819,"is_pvip":false,"replies":[{"id":"84314","content":"字符串转码有一些开源库，好像有icov什么的吧，用起来也比较简单，但各种编码格式的选择还是要小心。<br><br>string_view就是个简单的字符串引用，内部用一个指针和长度来指向原字符串的位置，所以很轻量级，是只读的，用的时候要注意这一点，不能修改，还有引用的字符串必须是有效的。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1592781415,"ip_address":"","comment_id":228619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887721115","product_id":100051801,"comment_content":"我很赞同老师说的，字符串在程序中的作用就像人对空气一样，所有我也比较看重。也希望老师对字符串转码方面给点建议，以及稍微讲解一下string_view的一些坑或者注意事项。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499106,"discussion_content":"字符串转码有一些开源库，好像有icov什么的吧，用起来也比较简单，但各种编码格式的选择还是要小心。\n\nstring_view就是个简单的字符串引用，内部用一个指针和长度来指向原字符串的位置，所以很轻量级，是只读的，用的时候要注意这一点，不能修改，还有引用的字符串必须是有效的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592781415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222415,"user_name":"SometimesNever","can_delete":false,"product_type":"c1","uid":1197375,"ip_address":"","ucode":"E82A2ABC1ABDE5","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/3f/86d2f4bd.jpg","comment_is_top":false,"comment_ctime":1590801120,"is_pvip":false,"replies":[{"id":"82034","content":"对内存占用和效率很敏感，或者必须手工精细管理资源。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590806732,"ip_address":"","comment_id":222415,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5885768416","product_id":100051801,"comment_content":"老师，我想问个之前的智能指针相关的，什么情况不能用智能指针代替裸指针呢？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496787,"discussion_content":"对内存占用和效率很敏感，或者必须手工精细管理资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590806732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359190,"user_name":"小一日一","can_delete":false,"product_type":"c1","uid":1301097,"ip_address":"北京","ucode":"0A506C2B918C14","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKtVXiaJbfkpeXH4udkPUIlFte7z3HWMebdogk8jFpgFEkJ0ruGiawUMUcZj9RLpLkIWxV7QOzbHoSg/132","comment_is_top":false,"comment_ctime":1665311229,"is_pvip":false,"replies":[{"id":"130673","content":"这个可能还真是历史习惯了，虽然C++11这么规定的，但感觉还是区别使用更安全一些。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1665404808,"ip_address":"北京","comment_id":359190,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1665311229","product_id":100051801,"comment_content":"课外贴示中的第2点错误：<br><br>https:&#47;&#47;en.cppreference.com&#47;w&#47;cpp&#47;string&#47;basic_string&#47;data<br><br>从C++11开始data()与c_str()没有区别：<br><br>The returned array is not required to be null-terminated.<br><br>If empty() returns true, the pointer is a non-null pointer that should not be dereferenced.<br><br>(until C++11)<br><br>The returned array is null-terminated, that is, data() and c_str() perform the same function.<br><br>If empty() returns true, the pointer points to a single null character.<br><br>(since C++11)<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589938,"discussion_content":"这个可能还真是历史习惯了，虽然C++11这么规定的，但感觉还是区别使用更安全一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665404808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355055,"user_name":"Sugar","can_delete":false,"product_type":"c1","uid":2436149,"ip_address":"北京","ucode":"BEFD1950841EA0","user_header":"https://static001.geekbang.org/account/avatar/00/25/2c/35/b0b62c5f.jpg","comment_is_top":false,"comment_ctime":1661012825,"is_pvip":true,"replies":[{"id":"129225","content":"这个与stl、标准库没有关系，是语言特性。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1661144273,"ip_address":"北京","comment_id":355055,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1661012825","product_id":100051801,"comment_content":"比较好奇通过R就可以输入原始字符串在stl库中是如何实现的","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584808,"discussion_content":"这个与stl、标准库没有关系，是语言特性。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1661144273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346822,"user_name":"KevinJ","can_delete":false,"product_type":"c1","uid":2941881,"ip_address":"","ucode":"74A9D474A94C9E","user_header":"https://static001.geekbang.org/account/avatar/00/2c/e3/b9/9a934f5c.jpg","comment_is_top":false,"comment_ctime":1653460280,"is_pvip":true,"replies":[{"id":"126579","content":"c_str()和data()属于C++的历史遗留问题，小心一点总是没有坏处。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1653793815,"ip_address":"","comment_id":346822,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653460280","product_id":100051801,"comment_content":"第二点不对。从C++11开始c_str()和data()都会返回带null terminator的byte seq了, 这个不再有区别<br>然后现在为了提升程序性能 编译正则这块可以扔到编译期去做 比如可以用hana库","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574006,"discussion_content":"c_str()和data()属于C++的历史遗留问题，小心一点总是没有坏处。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653793815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340260,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1362659,"ip_address":"","ucode":"76F2CAFA309437","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/e3/447aff89.jpg","comment_is_top":false,"comment_ctime":1648705246,"is_pvip":true,"replies":[{"id":"124551","content":"great！","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1648989247,"ip_address":"","comment_id":340260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648705246","product_id":100051801,"comment_content":"开始二刷了  每天两节课。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559820,"discussion_content":"great！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648989247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321484,"user_name":"Nongpubin","can_delete":false,"product_type":"c1","uid":1767300,"ip_address":"","ucode":"0789B8BE133D4E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/f7/84/fdfd043b.jpg","comment_is_top":false,"comment_ctime":1636900539,"is_pvip":false,"replies":[{"id":"116775","content":"原始字符串是用来在源码里写字面量，如果是字符串编码，输出就是格式化了，这是另外一个问题。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1636942889,"ip_address":"","comment_id":321484,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636900539","product_id":100051801,"comment_content":"一个带着转义的正常字符串变量，有没有办法转换成原始字符串原样输出呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530303,"discussion_content":"原始字符串是用来在源码里写字面量，如果是字符串编码，输出就是格式化了，这是另外一个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636942889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311732,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1631431857,"is_pvip":true,"replies":[{"id":"112955","content":"可以看一下C++之父写的那本书《C++ 语言的设计与演化》。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1631486216,"ip_address":"","comment_id":311732,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1631431857","product_id":100051801,"comment_content":"C++ 为什么设计的那么复杂？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526721,"discussion_content":"可以看一下C++之父写的那本书《C++ 语言的设计与演化》。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631486216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245401,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1598936009,"is_pvip":true,"replies":[{"id":"90267","content":"窄字符和宽字符的转换在C++里确实不好处理，最好在C++之外用其他语言解决。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1598944549,"ip_address":"","comment_id":245401,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598936009","product_id":100051801,"comment_content":" 字符串和char的转换 wchar的转换","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504873,"discussion_content":"窄字符和宽字符的转换在C++里确实不好处理，最好在C++之外用其他语言解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598944549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232899,"user_name":"栗宝俊","can_delete":false,"product_type":"c1","uid":1317590,"ip_address":"","ucode":"09CCB16A7117EF","user_header":"https://static001.geekbang.org/account/avatar/00/14/1a/d6/c1a57e4d.jpg","comment_is_top":false,"comment_ctime":1594164874,"is_pvip":false,"replies":[{"id":"85948","content":"我个人感觉这个有点“语言律师”了，我比较喜欢工程实践，像这种语言细节深究起来意义不大，可能只在面试考试时才有用。<br><br>而且这个也可能跟编译器的实现有关，我觉得是可以用花括号初始化的，编译器是最懂C++的，它如果认可那就没问题。<br><br>抱歉不能给你更满意的答复。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1594169613,"ip_address":"","comment_id":232899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594164874","product_id":100051801,"comment_content":"罗老师，麻烦问下pod赋值知识点，比如：类型A是pod类型，可以执行A a; a={0}; 网上查资料说不允许这种类型，可我本地调试能过，麻烦罗老师能说一下这个知识点么，书上都是讲通过大括号列表初始化，没听过大括号来列表赋值呀？谢谢啦","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500805,"discussion_content":"我个人感觉这个有点“语言律师”了，我比较喜欢工程实践，像这种语言细节深究起来意义不大，可能只在面试考试时才有用。\n\n而且这个也可能跟编译器的实现有关，我觉得是可以用花括号初始化的，编译器是最懂C++的，它如果认可那就没问题。\n\n抱歉不能给你更满意的答复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594169613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232588,"user_name":"chao","can_delete":false,"product_type":"c1","uid":1358527,"ip_address":"","ucode":"AE1DBB0592747C","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/bf/e9a44c63.jpg","comment_is_top":false,"comment_ctime":1594044904,"is_pvip":false,"replies":[{"id":"85877","content":"C++虽然也有很多Unicode库，比如iconv，但用起来还是不那么方便，不是太完备。<br><br>而Python等其他语言就支持得很好，所以我个人建议在C++之外用其他语言处理Unicode，然后在C++里只处理纯字符串，尽量不涉及编码转换。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1594083078,"ip_address":"","comment_id":232588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594044904","product_id":100051801,"comment_content":"“在涉及 Unicode、编码转换的时候，尽量不要用 C++，目前它还不太擅长做这种工作，可能还是改用其他语言来处理更好” --- 老师，改用其它语言来处理是指在 C++ 调用其它语言，还是说其它的 C++ 库，这个有什么最佳实践吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500702,"discussion_content":"C++虽然也有很多Unicode库，比如iconv，但用起来还是不那么方便，不是太完备。\n\n而Python等其他语言就支持得很好，所以我个人建议在C++之外用其他语言处理Unicode，然后在C++里只处理纯字符串，尽量不涉及编码转换。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594083078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231834,"user_name":"颓废人才","can_delete":false,"product_type":"c1","uid":1984432,"ip_address":"","ucode":"DED839F68A822D","user_header":"https://static001.geekbang.org/account/avatar/00/1e/47/b0/f44aef75.jpg","comment_is_top":false,"comment_ctime":1593782604,"is_pvip":false,"replies":[{"id":"85618","content":"这个可以看gcc网站，里面有各个版本对C++标准的支持程度，里面每一个特性都写的很清楚。<br><br>https:&#47;&#47;gcc.gnu.org&#47;projects&#47;cxx-status.html#cxx11","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1593831100,"ip_address":"","comment_id":231834,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593782604","product_id":100051801,"comment_content":"老师您好，在centos 7 ，gcc版本4.8.5环境下使用stl的正则表达式 regex 很容易throw regex_error，网上查阅后说gcc4.9或以上版本才会支持度好。请问一般现在支持C++11的公司项目会使用4.9一下的版本么来发布么？或者说是否可以认为4.9一下的版本对C++11支持度还不算最友好。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500449,"discussion_content":"这个可以看gcc网站，里面有各个版本对C++标准的支持程度，里面每一个特性都写的很清楚。\n\nhttps://gcc.gnu.org/projects/cxx-status.html#cxx11","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593831100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225402,"user_name":"robonix","can_delete":false,"product_type":"c1","uid":1212323,"ip_address":"","ucode":"866EC82EDA455B","user_header":"https://static001.geekbang.org/account/avatar/00/12/7f/a3/23540579.jpg","comment_is_top":false,"comment_ctime":1591751079,"is_pvip":false,"replies":[{"id":"83037","content":"可以比较，但不精确，一般不这么用，好像有专门的浮点数比较函数吧，我记不清了，因为从来不这么做。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1591756005,"ip_address":"","comment_id":225402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591751079","product_id":100051801,"comment_content":"老师，浮点数是不是不可以比较相等呀？assert(stod(&quot;2.0&quot;) == 2.0);       &#47;&#47; 字符串转浮点数","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497837,"discussion_content":"可以比较，但不精确，一般不这么用，好像有专门的浮点数比较函数吧，我记不清了，因为从来不这么做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591756005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223518,"user_name":"Geek_1bbd74","can_delete":false,"product_type":"c1","uid":1672977,"ip_address":"","ucode":"407FD162718C42","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/tgCYQrx1n8ktGbmiaHXQbHR8wicp2rODD5ddoXjXOQiacx1icwvj2Gswhicp3MmCHOw2H0RaRxTCsiaV5zibLOIuohKYw/132","comment_is_top":false,"comment_ctime":1591105462,"is_pvip":false,"replies":[{"id":"82376","content":"疏忽了，感谢指正。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1591152980,"ip_address":"","comment_id":223518,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591105462","product_id":100051801,"comment_content":"字面量后缀功能看文档是在c++14才开始支持。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497153,"discussion_content":"疏忽了，感谢指正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591152980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222470,"user_name":"泰伦卢","can_delete":false,"product_type":"c1","uid":1141994,"ip_address":"","ucode":"FEA6B43C8D4FF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/ea/e03fec22.jpg","comment_is_top":false,"comment_ctime":1590814049,"is_pvip":true,"replies":[{"id":"82045","content":"看gcc源码，很厉害啊。<br><br>这里说的标准里的规定，c_str()必须有\\0结尾，而data()则不保证有\\0，可以实际写代码试试。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590823340,"ip_address":"","comment_id":222470,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1590814049","product_id":100051801,"comment_content":"关于. data和. c_str得区别，都说是多了个\\0，可我看gcc9.2的源码发现它俩没有任何区别啊，都没有\\0，不知道自己哪里看错了！","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496812,"discussion_content":"看gcc源码，很厉害啊。\n\n这里说的标准里的规定，c_str()必须有\\0结尾，而data()则不保证有\\0，可以实际写代码试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590823340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1743219,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/99/73/41a354c7.jpg","nickname":"Geek_cc6b96","note":"","ucode":"20D23076E128CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285636,"discussion_content":"string构造的时候就在末尾带了/0, c_str,data都只是返回指针","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1592899502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222464,"user_name":"EncodedStar","can_delete":false,"product_type":"c1","uid":1504234,"ip_address":"","ucode":"03958CA7DDD6AE","user_header":"https://static001.geekbang.org/account/avatar/00/16/f3/ea/2b2adda5.jpg","comment_is_top":false,"comment_ctime":1590811677,"is_pvip":false,"replies":[{"id":"82046","content":"regex还是有点重，如果什么都用正则也是挺麻烦的，所以我觉得C++在这方面还应该加强一下，让字符串用起来更方便些。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590823405,"ip_address":"","comment_id":222464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590811677","product_id":100051801,"comment_content":"遇到转换类型int转换string或者string转换int时确实觉得麻烦，之前版本没啥好的库函数，都是用sstream来流，或者有一些atoi,itoa,c11又出来stoi(看来前人也是遇到了麻烦)等来进行处理。语言迭代之所以更新，在处理时也是因为遇到的问题比较多，为了更方便而迭代起来。<br>正则一般都是用来匹配文件过传过来消息时有效字段时候用的。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496810,"discussion_content":"regex还是有点重，如果什么都用正则也是挺麻烦的，所以我觉得C++在这方面还应该加强一下，让字符串用起来更方便些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590823405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222409,"user_name":"桐仲康","can_delete":false,"product_type":"c1","uid":1060977,"ip_address":"","ucode":"6771B07B7428AB","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/71/3ef22394.jpg","comment_is_top":false,"comment_ctime":1590799112,"is_pvip":false,"replies":[{"id":"82033","content":"这个没试过，可以自己写点代码，跑个几十万次测试一下，不过这个函数一般也不会对性能有太大要求吧。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590806662,"ip_address":"","comment_id":222409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590799112","product_id":100051801,"comment_content":"请问老师，标准库里自带的stoi函数效率如何呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496783,"discussion_content":"这个没试过，可以自己写点代码，跑个几十万次测试一下，不过这个函数一般也不会对性能有太大要求吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590806662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}