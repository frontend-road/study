{"id":171590,"title":"01 | 程序员为什么要关心代码性能？","content":"<p>你好，我是庄振运。</p><p>感谢你加入这个专栏的学习，我也非常高兴能有机会和你一起探索这个领域。</p><p>我在计算机和互联网行业已经研究和工作近 20 年了，一直从事<span class=\"orange\">性能优化和容量管理</span>相关的工作。从今天起，我就和你分享我这些年的经验和感悟。</p><p>提起计算机和互联网，多数人首先想到的职业是程序员。中国有多少程序员呢？很多人估计有600万左右。全球的人数就更多了，肯定超过2000万。</p><p>我虽然也在互联网领域，也做过几年写程序的工作，但是现在的工作，严格意义上不算程序员，而是性能工程师。不过我和很多程序员朋友一起工作过，也讨论过。谈到性能优化和系统容量管理的时候，一开始他们经常会问我一个问题，就是程序员为什么需要了解性能和容量这些东西？通俗点说，这个问题就是：<span class=\"orange\">我就是一介程序员，性能和系统容量听起来很重要，但与我何干？</span></p><p>这个问题问得很好。我可以和你肯定地说，程序员应该关心，也必须关心代码性能和系统容量。今天这一讲，我们先说说程序员为什么需要关心性能。</p><h2>怎么定义“性能”和 “性能好”？</h2><p>说起代码性能，首先我们需要弄清楚什么样的代码算是性能好？怎么样算是性能不好？</p><p>代码性能表现在很多方面和指标，比较常见的几个指标有吞吐量（Throughput）、服务延迟（Service latency）、扩展性（Scalability）和资源使用效率（Resource Utilization）。</p><!-- [[[read_end]]] --><ul>\n<li>吞吐量：单位时间处理请求的数量。</li>\n<li>服务延迟：客户请求的处理时间。</li>\n<li>扩展性：系统在高压的情况下能不能正常处理请求。</li>\n<li>资源使用效率：单位请求处理所需要的资源量（比如CPU，内存等）。</li>\n</ul><p>必须说明的是，这几个指标之外，根据场景，还可以有其他性能指标，比如可靠性（Reliability）。可靠性注重的是在极端情况下能不能持续处理正常的服务请求。不过，我们这个专栏的讨论，主要围绕前四个更常见的目标。</p><p>性能好的代码，可以用四个字来概括：“多快好省”。</p><p><img src=\"https://static001.geekbang.org/resource/image/95/e6/95a0a14caf49b53ee4859fe892596fe6.jpg?wh=2622*1472\" alt=\"\"></p><p>看到这四个字，你可能想起了咱们国家当年制定的大跃进总路线，那就是：“鼓足干劲、力争上游、多快好省地建设社会主义”。没错，高性能代码的要求和这个“社会主义建设总路线”相当一致。这里的“多”，就是吞吐量大；“快”，就是服务延迟低；“好”，就是扩展性好；“省”，就是资源使用量低（也即是资源使用效率高）。</p><p>用这样的四个指标来衡量，那么性能不好的代码的表现就是：吞吐量小、延迟大、扩展性差、资源使用高（资源使用效率低）。</p><h2>程序员为什么要关心代码性能？</h2><p>对程序员来讲，写出的代码就是他的产品、他的生命线、他的形象和价值。代码性能不好，就是质量差，不靠谱。轻者影响程序员的声誉，重者影响他的工作。</p><p>对一个公司来讲，产品质量差，公司或许会倒闭。对程序员所在的互联网公司而言，如果公司的业务依赖于程序员写的代码，那么代码性能差，关键时刻掉链子，比如双十一促销的时候，公司的业务性能就会经常出问题，进而会影响公司的运营和营收，这可是天大的事情。</p><p>因此，如果一个程序员写出性能很差的代码，无异于耍流氓，并且相关程序员的工作也很难保住。</p><p>反过来讲，如果写出的代码性能很高，那代码的作者必定是我们大家认可的“靠谱”程序员，少不了“人见人爱”——客户喜欢，同事喜欢，领导也喜欢。</p><h2>不同级别的程序员都需要关心性能</h2><p>还有些朋友或许认为：代码性能是<strong>某些人或者其他人</strong>应该负责的；我就负责把代码写出来，优化的事，他们负责。这里的“某些人和其他人”可以是指软件测试人员、运维人员、技术专家，或者是性能工程师。</p><p>这种想法也是不对的。我下面就用几个案例来举例说明，代码性能是各个级别的程序员都应该关心和负责的。事实上，程序员从学校出来开始，一步步地在职业上攀升，每一步都应该和性能结伴而行。</p><p>我用一张图来表示一个成功程序员的技术职业轨迹（注意里面的职位和年限仅供参考）。</p><p><img src=\"https://static001.geekbang.org/resource/image/0b/de/0b74f5861099d26e00ec76007913b6de.jpg?wh=2622*1476\" alt=\"\"></p><p>学生刚刚从学校毕业，加入互联网公司，一般是入门级程序员。工作1到3年后，就成为普通的程序员。工作三五年后，可以算是资深程序员。工作6到10年后，可以成长为技术专家。10年以上，可能成为高级专家或者架构师。</p><h3>举例1：刚入门的程序员</h3><p>小李刚刚大学毕业，进入一个互联网公司。</p><p>领导给他的任务是写一个小模块，其中有一个需求是统计两个日期之间有几个正常工作日（也就是多少是周一到周五）。小李采取的是简单暴力法，就是用一个循环，循环的起始和截至日期就是给定的两个日期。在循环里面，对每一个日期判定一次，确定是工作日还是休息日，然后把工作日累加起来。</p><p>这样的代码显然性能不高，生产环境里面跑起来很快就会出问题。比如，如果两个日期差距很大，这个模块可能就需要很长时间才能处理完。</p><p>如果小李注重代码性能，他完全可以用更高效的方法，比如快速判定给定的两个日期间有多少个星期，然后乘以5，因为每个星期有5个工作日。然后，对头尾的星期进行特殊处理。这样的代码跑起来快多了。我可以想象，小李在优化完代码后，或许会吟诵两句“何当金络脑，快走踏清秋”来形容新代码的性能。</p><h3>举例2：普通的程序员</h3><p>小王做程序员2年了，在公司里已经可以独立负责一个模块了。有一天，他需要把一个二维整数数组进行重新赋值，于是，他写出了下面的二重循环：</p><p><img src=\"https://static001.geekbang.org/resource/image/35/a9/3549fc43c8199499d31b2bf5432f23a9.jpg?wh=2622*1474\" alt=\"\"></p><p>如果小王了解计算机内存和缓存的知识以及大小，他或许会写出下面的循环。虽然只有两个字母的差别，性能却提升了很多倍。</p><p><img src=\"https://static001.geekbang.org/resource/image/20/d9/2055088aa3fc67f23d0274435c1e48d9.jpg?wh=2622*1474\" alt=\"\"></p><p>原因是什么呢？</p><p>因为计算机通常都会有数量不大的缓存。数组在内存里是连续存放的，所以，如果访问数组元素的时候能够按照顺序来，缓存可以起到极大的加速作用。</p><p>小王一开始的二重循环，恰恰没有有效地使用缓存，反而对数组元素类似随机访问。第二个版本就改正了这个错误，优化了性能。</p><h3>举例3：资深的程序员</h3><p>小赵工作4年了，已经算是资深的C++程序员，负责一个程序的开发和设计。他的一个程序需要使用一个Map的数据结构。他开始使用的是STD库的标准实现：<code>unordered_map</code>。但是他发现，在数据量大的时候，键值的插入操作需要的时间很长。虽然做了各种代码优化，但性能总是不尽人意。</p><p>其实，如果他了解C++有些库有更高效的Map实现，比如<code>google::dense_hash_map</code>，他或许可以酌情采用，从而大幅度提升性能。</p><p>很多的测试结果显示，<code>google::dense_hash_map</code>的性能可以比<code>std::unordered_map</code>快好几倍。下图（图片来自<a href=\"https://tessil.github.io/\">https://tessil.github.io/</a> ）正是同一种测试环境下，两种实现的处理时间比较，我们可以清楚地看出性能的差距。</p><p><img src=\"https://static001.geekbang.org/resource/image/12/4e/124cbafaf8f452f8399c2c85a1a6534e.png?wh=788*418\" alt=\"\"></p><h3>举例4：技术专家</h3><p>小刘工作8年了，在公司里已经算是不大不小的技术专家了。</p><p>有一天，他看到一份项目计划，其中有一段引起了他的兴趣。这份计划是为了提高服务器的CPU使用效率，提出把应用程序的线程池增大，建议程序线程池的主线程数目应该和服务器的逻辑CPU的数目相等。当然，这里的逻辑CPU，就是我们通常说的虚拟内核数。</p><p>小刘这几年对硬件和操作系统钻研良多，他立刻指出，这样部署不妥，他建议降低主线程池大小到逻辑CPU的一半。技术讨论过程中，小刘给大家仔细讲解了原因，大家最后认可了他的建议，小刘也获得了大家的青睐。</p><p>小刘之所以这样建议，是因为他知道，服务器的逻辑CPU不是物理CPU。在超线程技术（Hyper Threading）的情况下，服务器的吞吐量不是严格按照逻辑CPU的使用率来提升的，因为两个逻辑CPU其实共享很多物理资源。</p><p>比如下面这张图，就表示了在一台有８个逻辑CPU的服务器上，如果部署超过4个线程，得到的性能提升非常有限，甚至可能会带来其他不好的后果。这里具体的提升率和效果，取决于线程和应用程序的特性。（图片来自<a href=\"http://blog.stuffedcow.net\">http://blog.stuffedcow.net</a>）<br>\n<img src=\"https://static001.geekbang.org/resource/image/fd/45/fd4b4e1797eed83f9967daaf0ea15745.png?wh=646*393\" alt=\"\"></p><h3>举例５：高级专家（架构师）</h3><p>老周是公司里的架构师和高级专家。他最近对公司的一个重要业务进行了性能优化，用很小的代码改动，就给公司节省了几百万美元的运营成本（这是我身边发生的一个真实案例，除了名字不一样）。</p><p>这个业务的性能瓶颈是CPU。因为业务量大，这个业务部署了1万台以上的服务器，占用了很大一部分数据中心的容量。</p><p>老周仔细研究了业务的逻辑，并且进行了性能测试和分析。他发现代码的执行过程卡在了CPU取指令的速度上：因为内存和缓存的物理特性，CPU花了很大一部分时间在等待指令获取，从而造成了CPU浪费。</p><p>他经过考虑，决定进行<strong>指令级别的提前获取优化</strong>。具体来讲，就是用GCC的<code>__builtin_prefetch</code>指令来预先提取关键指令，从而降低缓存的缺失比例，也就提高了CPU的使用效率。</p><p>下图是GCC关于这个指令的官方文档。</p><p><img src=\"https://static001.geekbang.org/resource/image/95/36/95c984c03bc60ccb3f56867e0c4bcb36.png?wh=712*226\" alt=\"\"></p><p>经过这样的优化，一台服务器可以处理比以前多50%的请求，从而节省了相应比例的服务器和容量。从公司成本角度来看，这一优化节省了3千台以上的服务器，价值几百万美元，老周被CEO开会表扬，也是自然的事情了。</p><p>有趣的是，整个的代码改进只需要几行代码的改动，真真切切是“一字万金”。</p><h2>总结</h2><p>重要的事情需要多说几遍：<span class=\"orange\">每个IT从业人员，尤其是程序员，都需要关心代码性能。</span></p><p>如果不了解性能的知识，也许能写出可运行但性能不好的代码。但一个真正对工作、对公司和对自己负责的程序员一定会发现，性能不好的代码无异于耍流氓，不经用还隐患无穷，万万要不得。</p><p>换句话说，对程序员来说，生活不仅是眼前的代码，还有效率和性能的优化。唐代诗人孟郊在考中进士后写了一首《登科后》，其中有两句：“春风得意马蹄疾，一日看尽长安花。”</p><p>我们谁不希望写出来的代码也运行飞快，自己能春风得意呢？！</p><h2>思考题</h2><p>无论你工作几年了，也无论是现在具体做什么工作，你能举出一两个，因为代码性能不好并导致严重后果的例子吗？是什么样的性能问题呢？</p><p>换个角度来说，如果写代码的程序员一开始就考虑到各种性能问题，并且提前在代码里面解决，写出的代码跑得飞快，而且很稳定。这样靠谱的程序员你会不会给他点赞？</p><p>欢迎留言和我分享你的观点，也欢迎你把今天的内容分享给身边的朋友，和他一起讨论。</p>","neighbors":{"left":{"article_title":"开篇词 | 代码不要眼前的苟且，而要效率的提升和性能的优化","id":171553},"right":{"article_title":"02 | 程序员也要关心整个系统和公司成本吗？","id":173668}},"comments":[{"had_liked":false,"id":158205,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1575348848,"is_pvip":false,"replies":[{"id":"60655","content":"好高的评价！谢谢谢谢。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575382583,"ip_address":"","comment_id":158205,"utype":1}],"discussion_count":1,"race_medal":0,"score":"74589792880","product_id":100041101,"comment_content":"有意思。文笔有优秀产品经理的雅致与风趣。逻辑有优秀程序员的清晰与精准。开篇两章，已见不凡。追了，追了。","like_count":18,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476670,"discussion_content":"好高的评价！谢谢谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575382583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158036,"user_name":"OlafOO","can_delete":false,"product_type":"c1","uid":1019254,"ip_address":"","ucode":"105F8B194ED37B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/76/994a9929.jpg","comment_is_top":false,"comment_ctime":1575301241,"is_pvip":true,"replies":[{"id":"60570","content":"😄，谢谢。祝愿你快速修炼到最高级！","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575330184,"ip_address":"","comment_id":158036,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57409876089","product_id":100041101,"comment_content":"老师对不同阶段程序员举的例子好经典","like_count":13,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476610,"discussion_content":"😄，谢谢。祝愿你快速修炼到最高级！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575330184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158706,"user_name":"Q","can_delete":false,"product_type":"c1","uid":1047423,"ip_address":"","ucode":"785546C617D3DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/7f/746a6f5e.jpg","comment_is_top":false,"comment_ctime":1575438504,"is_pvip":false,"replies":[{"id":"60797","content":"体会的很好！","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575473778,"ip_address":"","comment_id":158706,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23050274984","product_id":100041101,"comment_content":"第一，为什么那么多人不重视不了解性能优化，要怪就怪，现在的机器性能太强悍了，人类科技的进步，掩饰掉了大部分因为人为原因造成的性能问题，所以科技的惯性太隐蔽又太强悍。<br>第二，关键还在于业务数据量是否增长和公司是否重视性能测试，如果重视性能压测，那么早期都会发现系统性能的瓶颈和压力在哪里，否则总是会在生产过程某个时间点中出问题，所以测试手段很重要。<br><br>","like_count":5,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476820,"discussion_content":"体会的很好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575473778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114093,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/ed/b2fc0e7c.jpg","nickname":"7","note":"","ucode":"10A6E57A027D42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":75980,"discussion_content":"特别是公司不注重性能测试这一块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575802722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159130,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1575544723,"is_pvip":false,"replies":[{"id":"60877","content":"要允许年轻人犯错误，每个人都是从菜鸟到大虾的。😄","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575557180,"ip_address":"","comment_id":159130,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14460446611","product_id":100041101,"comment_content":"例子一的程序员直接开除。<br>例子五的架构师鼓舞着我们前行（做死）<br><br>每天都在做死的路上","like_count":3,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476962,"discussion_content":"要允许年轻人犯错误，每个人都是从菜鸟到大虾的。😄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575557180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158126,"user_name":"arsterc","can_delete":false,"product_type":"c1","uid":1023913,"ip_address":"","ucode":"A44501F87FC536","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/a9/378f8034.jpg","comment_is_top":false,"comment_ctime":1575336074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14460237962","product_id":100041101,"comment_content":"赞！ 以前都是零碎的学习性能方面的知识， 现在可以系统学习了. 期待！","like_count":3},{"had_liked":false,"id":158067,"user_name":"权奥","can_delete":false,"product_type":"c1","uid":1027724,"ip_address":"","ucode":"3067643082A874","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/8c/125954e0.jpg","comment_is_top":false,"comment_ctime":1575308800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14460210688","product_id":100041101,"comment_content":"遇到过快速启动200个Python进程，触发了系统oom，导致一个重要服务被kill的问题","like_count":3},{"had_liked":false,"id":158063,"user_name":"Bugzella","can_delete":false,"product_type":"c1","uid":1018969,"ip_address":"","ucode":"DA6E5620D682AD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/m7Ow3WiaSHeE4LBMqsRNVu0zgddEBxBv0OfsJick6icnAOTLSpaJ2ZGPF0rteY8yic3dUZUZmeOu1xPG2G1BSibZNdw/132","comment_is_top":false,"comment_ctime":1575307089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14460208977","product_id":100041101,"comment_content":"最近在做一些后台性能提升的工作，一个主要方式就是使用redis一类的缓存，降低读取操作数据库的频率，可以提升应用的延迟，提高数据库的吞吐量。另外一个例子是数据库读取语调优对于大部分严重依赖数据库的应用很重要，希望在这里也能读到相关的心得和分享。","like_count":3},{"had_liked":false,"id":157944,"user_name":"黄马","can_delete":false,"product_type":"c1","uid":1019506,"ip_address":"","ucode":"93E391B4678EC2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/72/63c94eee.jpg","comment_is_top":false,"comment_ctime":1575288086,"is_pvip":true,"replies":[{"id":"60573","content":"很不错的感想。的确，知道得多很重要。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575330267,"ip_address":"","comment_id":157944,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14460189974","product_id":100041101,"comment_content":"没有遇到什么有意思的性能问题<br>感想，性能问题的解决，依赖人对整个计算机运行的理解<br>对程序运行环境的理解：什么语言、什么系统、什么CPU、什么硬盘等等<br>有可能出现哪些问题，重点观察对应的指标，印证猜想，找对应的方案","like_count":3,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476588,"discussion_content":"很不错的感想。的确，知道得多很重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575330267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185871,"user_name":"锋子小串串","can_delete":false,"product_type":"c1","uid":1445991,"ip_address":"","ucode":"0833A9C9BF8875","user_header":"https://static001.geekbang.org/account/avatar/00/16/10/67/412601d1.jpg","comment_is_top":false,"comment_ctime":1583717505,"is_pvip":false,"replies":[{"id":"72943","content":"谢谢，也很高兴能有些帮助！","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1584455683,"ip_address":"","comment_id":185871,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173652097","product_id":100041101,"comment_content":"感谢庄老师，带我重新认识了不一样的性能世界。","like_count":2,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486536,"discussion_content":"谢谢，也很高兴能有些帮助！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584455683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159177,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1575552644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10165487236","product_id":100041101,"comment_content":"程序优化一般都在业务优化以后吧，业务流程的优化效果也不可忽视","like_count":2},{"had_liked":false,"id":158507,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1575387136,"is_pvip":true,"replies":[{"id":"60718","content":"对，Java应该更有效些。不过比起C++来，C++又胜一筹了。这就是开发速度和效率的关系。一般后端用C++和Java比较多，因为需要高效率。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575429937,"ip_address":"","comment_id":158507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165321728","product_id":100041101,"comment_content":"早期为了快速发展业务，公司使用了Ruby，开发是快，但扛不住多少访问量。后来业务验证之后，就更换成Java。在不同业务阶段，在快速验证和提升性能之间选择不同策略。","like_count":2,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476750,"discussion_content":"对，Java应该更有效些。不过比起C++来，C++又胜一筹了。这就是开发速度和效率的关系。一般后端用C++和Java比较多，因为需要高效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575429937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200035,"user_name":"京都念慈菴","can_delete":false,"product_type":"c1","uid":1744834,"ip_address":"","ucode":"2A310A91069A5E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9f/c2/3d1c2f88.jpg","comment_is_top":false,"comment_ctime":1585535375,"is_pvip":false,"replies":[{"id":"75739","content":"嗯，每个生产系统的情况都不太一样，多测量一下各种性能指标，慢慢就有感觉了。 ","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1586050546,"ip_address":"","comment_id":200035,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880502671","product_id":100041101,"comment_content":"老师我是一个测试主要是功能和业务，遇到问题是公司3000用户的特殊购物网站，需要线下资质审核过了才能注册使用网站购物，也就是实际业务流程最大在线用户数在3000左右。但是用着32核128g数据库，一个4核16g和8核32g的服务器，30M专线。到周年庆时cpu暴增到90多，数据库一直卡死，然后增加大量硬件。秒杀页面正常秒杀未开始时候需要多次尝试才能进入到页面。真的很头疼，然后自己开始性能学习","like_count":1,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489926,"discussion_content":"嗯，每个生产系统的情况都不太一样，多测量一下各种性能指标，慢慢就有感觉了。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586050546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184808,"user_name":"罗辑思维","can_delete":false,"product_type":"c1","uid":1318941,"ip_address":"","ucode":"D257A06EDE928E","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","comment_is_top":false,"comment_ctime":1583411002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878378298","product_id":100041101,"comment_content":"以前看过报道google公司说代码性能提升10%，就可以少采购10%的服务器。","like_count":1},{"had_liked":false,"id":158477,"user_name":":)","can_delete":false,"product_type":"c1","uid":1239198,"ip_address":"","ucode":"23D505949442B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/9e/6550a051.jpg","comment_is_top":false,"comment_ctime":1575379972,"is_pvip":false,"replies":[{"id":"60650","content":"太谢谢了！更加有干劲了，努力做得更好！","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575382272,"ip_address":"","comment_id":158477,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870347268","product_id":100041101,"comment_content":"老师讲得太好了！这课性价比 太高了！","like_count":1,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476741,"discussion_content":"太谢谢了！更加有干劲了，努力做得更好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575382272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158212,"user_name":"humor","can_delete":false,"product_type":"c1","uid":1181867,"ip_address":"","ucode":"9B48C4C7BEC92C","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/ab/caec7bca.jpg","comment_is_top":false,"comment_ctime":1575350256,"is_pvip":false,"replies":[{"id":"60656","content":"恩，尽量把锁的范围变小；只锁绝对需要锁的地方。","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575382631,"ip_address":"","comment_id":158212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870317552","product_id":100041101,"comment_content":"以前在一个方法上使用了synchronous关键字，自己测试觉得没问题，发布到线上之后，系统就特别慢，各种超时…以后再也不敢随便用锁了","like_count":1,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476674,"discussion_content":"恩，尽量把锁的范围变小；只锁绝对需要锁的地方。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575382631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157948,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1575288508,"is_pvip":false,"replies":[{"id":"60569","content":"非常感谢！","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575330121,"ip_address":"","comment_id":157948,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870255804","product_id":100041101,"comment_content":"老师讲的很好，写出跑的飞快的代码的程序员很让人佩服","like_count":1,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476591,"discussion_content":"非常感谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575330121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157937,"user_name":"故事、自己写","can_delete":false,"product_type":"c1","uid":1048419,"ip_address":"","ucode":"D3C87D6B9004D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/63/042aaa14.jpg","comment_is_top":false,"comment_ctime":1575286355,"is_pvip":false,"replies":[{"id":"60568","content":"哈哈，你一定可以的！","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575330067,"ip_address":"","comment_id":157937,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870253651","product_id":100041101,"comment_content":"不求一字万金，一字千金即可～","like_count":1,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476583,"discussion_content":"哈哈，你一定可以的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575330067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334755,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":2763179,"ip_address":"","ucode":"3588850B3370C8","user_header":"https://static001.geekbang.org/account/avatar/00/2a/29/ab/59a6e437.jpg","comment_is_top":false,"comment_ctime":1645104666,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1645104666","product_id":100041101,"comment_content":"先写可用代码（当然对代码的洁癖任何时候都不能丢），然后再进行系统的性能工程。<br><br>所以第二个问题我的答案是，我不会推荐这样的工程师，我会认为他在耍流氓。","like_count":0},{"had_liked":false,"id":318339,"user_name":"Geek_f71330","can_delete":false,"product_type":"c1","uid":1617615,"ip_address":"","ucode":"40F8CD661E8F59","user_header":"https://static001.geekbang.org/account/avatar/00/18/ae/cf/6186d936.jpg","comment_is_top":false,"comment_ctime":1635248695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635248695","product_id":100041101,"comment_content":"不得不说这个开篇让我看到了更多方向，燃起来了。","like_count":0},{"had_liked":false,"id":292528,"user_name":"王木杉","can_delete":false,"product_type":"c1","uid":1628501,"ip_address":"","ucode":"712288EE2A3F4B","user_header":"https://static001.geekbang.org/account/avatar/00/18/d9/55/bd65c4df.jpg","comment_is_top":false,"comment_ctime":1620871425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620871425","product_id":100041101,"comment_content":"扩展性：系统在高压的情况下能不能正常处理请求。<br>可靠性（Reliability）：注重的是在极端情况下能不能持续处理正常的服务请求。<br><br>描述是否有误","like_count":0},{"had_liked":false,"id":260065,"user_name":"谭鹏","can_delete":false,"product_type":"c1","uid":1142009,"ip_address":"","ucode":"4A8120C4AA6F2F","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/f9/af80b4da.jpg","comment_is_top":false,"comment_ctime":1604916495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604916495","product_id":100041101,"comment_content":"我是做iOS的 iOS有个runloop(运行循环）机制，页面的图片多了 滑动的时候就容易卡顿，所以 我通过对runloop机制的分析，把每一张缩略图的展示都放在一个runloop循环里,这样大量的缩略图就不需要再一个runloop循环里处理，分散到多个runloop循环里,大大提升了界面流畅度","like_count":0},{"had_liked":false,"id":225967,"user_name":"巴山夜雨","can_delete":false,"product_type":"c1","uid":1151520,"ip_address":"","ucode":"F64F36A88EDE67","user_header":"https://static001.geekbang.org/account/avatar/00/11/92/20/24630973.jpg","comment_is_top":false,"comment_ctime":1591920784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591920784","product_id":100041101,"comment_content":"这一讲的知识点对前端App性能优化来说，也是适用的","like_count":0},{"had_liked":false,"id":193952,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1585006457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585006457","product_id":100041101,"comment_content":"看到老师的成功程序员的技术轨迹，有点感触，自己工作 4 年了，如果正常轨迹应该是资深程序员了，很可惜貌似没有达到，如果想在程序员这条道路上继续走，得加油了","like_count":0},{"had_liked":false,"id":184119,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1583227330,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583227330","product_id":100041101,"comment_content":"我遇到过一些性能问题，分享两个：<br>1：日志导致的性能问题，不知道别人的应用如何，我们之前应用业务日志打的比较多，初衷是为了排查业务问题。不过如果量大起来就会严重影响性能，每逢大促必降日志，降与不降TP99能差上一倍。所以，后来我又做了日志优化的事情，重复日志、大日志、无效日志都需要优化一下，优化日志不仅能提高性能日志的服务空间也能节省不少，能为企业省不少钱。<br>2：为了提高性能我们的服务基本采用两级缓存的方式构建，一层分布式缓存，一层本地缓存，我曾经优化过一个经久年月的写本地缓存无效的bug，当时优化后性能也提升不少<br><br>贫穷不是社会主义，赚钱是一个企业存在的核心动力，公司里的人，范围小一点就程序员吧！基本的工作不是直接让公司赚钱，就是给公司省钱的。程序性能好了，公司运转的就会更快，钱也会多赚，关心性能真应该人人有责。","like_count":0},{"had_liked":false,"id":169303,"user_name":"云端漫漫步","can_delete":false,"product_type":"c1","uid":1024490,"ip_address":"","ucode":"80C9E1E477E921","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/ea/4afba3f1.jpg","comment_is_top":false,"comment_ctime":1578310511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578310511","product_id":100041101,"comment_content":"Java的现在太容易出现了，比如慢SQL、for循环业务处理等等，只要请求量上去或者for循环嵌套太深，就会很容易出现瓶颈；","like_count":0},{"had_liked":false,"id":162189,"user_name":"han","can_delete":false,"product_type":"c1","uid":1245221,"ip_address":"","ucode":"9F57929588D2B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJKr0jFhAf5MmL7zBzB7ZsmzEunI82MjULLPhgMd3Tc6d7GBuZHogd15IT1a1YLCMibouV5B2rDvKg/132","comment_is_top":false,"comment_ctime":1576473942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576473942","product_id":100041101,"comment_content":"以前公司的产品会做专业的性能测试，由专业的测试工程师完成，性能的要求也会被写到产品的PRD中，整个开发测试团队都要对性能负责。","like_count":0},{"had_liked":false,"id":161596,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1576242907,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576242907","product_id":100041101,"comment_content":"我正努力成为技术专家中","like_count":0},{"had_liked":false,"id":160106,"user_name":"志鑫","can_delete":false,"product_type":"c1","uid":1095392,"ip_address":"","ucode":"408869664EEA13","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/e0/52a07898.jpg","comment_is_top":false,"comment_ctime":1575871355,"is_pvip":false,"replies":[{"id":"61204","content":"赞！","user_name":"作者回复","user_name_real":"zhenyun2010","uid":"1272838","ctime":1575947307,"ip_address":"","comment_id":160106,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575871355","product_id":100041101,"comment_content":"用golang写了例2的benchmark，的确像老师说的那样，ij方式要快! 速度比 102:9<br><br>Running tool: &#47;usr&#47;local&#47;go&#47;bin&#47;go test -benchmem -run=^$ -bench ^(BenchmarkFor_IJ|BenchmarkFor_JI)$ -v<br><br>goos: darwin<br>goarch: amd64<br>BenchmarkFor_IJ-4   \t     102\t  12360520 ns&#47;op\t 1254901 B&#47;op\t       0 allocs&#47;op<br>BenchmarkFor_JI-4   \t       9\t 113365872 ns&#47;op\t14222222 B&#47;op\t       0 allocs&#47;op<br>``` golang<br>package main<br><br>import &quot;testing&quot;<br><br>const n = 4000<br><br>func BenchmarkFor_IJ(b *testing.B) {<br>\tvar arr [n][n]int<br>\tfor c := 0; c &lt; b.N; c++ {<br>\t\tfor i := 0; i &lt; n; i++ {<br>\t\t\tfor j := 0; j &lt; n; j++ {<br>\t\t\t\tarr[i][j] = i + j<br>\t\t\t}<br>\t\t}<br>\t}<br>}<br><br>func BenchmarkFor_JI(b *testing.B) {<br>\tvar arr [n][n]int<br>\tfor c := 0; c &lt; b.N; c++ {<br>\t\tfor i := 0; i &lt; n; i++ {<br>\t\t\tfor j := 0; j &lt; n; j++ {<br>\t\t\t\tarr[j][i] = i + j<br>\t\t\t}<br>\t\t}<br>\t}<br>}<br>```","like_count":0,"discussions":[{"author":{"id":1272838,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/nicib8gqImzrCGJYyJW3QEmsvtDcfuLe02wm55HBdC2mAHt1mqc6wT7I9GHyByS19zQRBiaZx2EeXKnyvslCZd4tQ/132","nickname":"zhenyun2010","note":"","ucode":"567187932468D8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477258,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575947307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}