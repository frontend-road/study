{"id":131234,"title":"29 | 混合开发，该用何种方案管理导航栈？","content":"<p>你好，我是陈航。</p><p>为了把Flutter引入到原生工程，我们需要把Flutter工程改造为原生工程的一个组件依赖，并以组件化的方式管理不同平台的Flutter构建产物，即Android平台使用aar、iOS平台使用pod进行依赖管理。这样，我们就可以在Android工程中通过FlutterView，iOS工程中通过FlutterViewController，为Flutter搭建应用入口，实现Flutter与原生的混合开发方式。</p><p>我在<a href=\"https://time.geekbang.org/column/article/127601\">第26篇</a>文章中提到，FlutterView与FlutterViewController是初始化Flutter的地方，也是应用的入口。可以看到，以混合开发方式接入Flutter，与开发一个纯Flutter应用在运行机制上并无任何区别，只需要原生工程为它提供一个画板容器（Android为FlutterView，iOS为FlutterViewController），Flutter就可以自己管理页面导航栈，从而实现多个复杂页面的渲染和切换。</p><p>关于纯Flutter应用的页面路由与导航，我已经在<a href=\"https://time.geekbang.org/column/article/118421\">第21篇文章</a>中与你介绍过了。今天这篇文章，我会为你讲述在混合开发中，应该如何管理混合导航栈。</p><!-- [[[read_end]]] --><p>对于混合开发的应用而言，通常我们只会将应用的部分模块修改成Flutter开发，其他模块继续保留原生开发，因此应用内除了Flutter的页面之外，还会有原生Android、iOS的页面。在这种情况下，Flutter页面有可能会需要跳转到原生页面，而原生页面也可能会需要跳转到Flutter页面。这就涉及到了一个新的问题：如何统一管理原生页面和Flutter页面跳转交互的混合导航栈。</p><p>接下来，我们就从这个问题入手，开始今天的学习吧。</p><h2>混合导航栈</h2><p>混合导航栈，指的是原生页面和Flutter页面相互掺杂，存在于用户视角的页面导航栈视图中。</p><p>以下图为例，Flutter与原生Android、iOS各自实现了一套互不相同的页面映射机制，即原生采用单容器单页面（一个ViewController/Activity对应一个原生页面）、Flutter采用单容器多页面（一个ViewController/Activity对应多个Flutter页面）的机制。Flutter在原生的导航栈之上又自建了一套Flutter导航栈，这使得Flutter页面与原生页面之间涉及页面切换时，我们需要处理跨引擎的页面切换。</p><p><img src=\"https://static001.geekbang.org/resource/image/60/dd/603d3f3777ef09a420b7b794efe0c9dd.png?wh=1056*842\" alt=\"\"></p><center><span class=\"reference\">图1 混合导航栈示意图</span></center><p>接下来，我们就分别看看从原生页面跳转至Flutter页面，以及从Flutter页面跳转至原生页面，应该如何处理吧。</p><h3>从原生页面跳转至Flutter页面</h3><p>从原生页面跳转至Flutter页面，实现起来比较简单。</p><p>因为Flutter本身依托于原生提供的容器（iOS为FlutterViewController，Android为Activity中的FlutterView），所以我们通过初始化Flutter容器，为其设置初始路由页面之后，就可以以原生的方式跳转至Flutter页面了。</p><p>如下代码所示。对于iOS，我们初始化一个FlutterViewController的实例，为其设置初始化页面路由后，将其加入原生的视图导航栈中完成跳转。</p><p>对于Android而言，则需要多加一步。因为Flutter页面的入口并不是原生视图导航栈的最小单位Activity，而是一个View（即FlutterView），所以我们还需要把这个View包装到Activity的contentView中。在Activity内部设置页面初始化路由之后，在外部就可以采用打开一个普通的原生视图的方式，打开Flutter页面了。</p><pre><code>//iOS 跳转至Flutter页面\nFlutterViewController *vc = [[FlutterViewController alloc] init];\n[vc setInitialRoute:@&quot;defaultPage&quot;];//设置Flutter初始化路由页面\n[self.navigationController pushViewController:vc animated:YES];//完成页面跳转\n\n\n//Android 跳转至Flutter页面\n\n//创建一个作为Flutter页面容器的Activity\npublic class FlutterHomeActivity extends AppCompatActivity {\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    //设置Flutter初始化路由页面\n    View FlutterView = Flutter.createView(this, getLifecycle(), &quot;defaultRoute&quot;); //传入路由标识符\n    setContentView(FlutterView);//用FlutterView替代Activity的ContentView\n  }\n}\n//用FlutterPageActivity完成页面跳转\nIntent intent = new Intent(MainActivity.this, FlutterHomeActivity.class);\nstartActivity(intent);\n</code></pre><h3>从Flutter页面跳转至原生页面</h3><p>从Flutter页面跳转至原生页面，则会相对麻烦些，我们需要考虑以下两种场景：</p><ul>\n<li>从Flutter页面打开新的原生页面；</li>\n<li>从Flutter页面回退到旧的原生页面。</li>\n</ul><p>首先，我们来看看Flutter如何打开原生页面。</p><p>Flutter并没有提供对原生页面操作的方法，所以不可以直接调用。我们需要通过方法通道（你可以再回顾下<a href=\"https://time.geekbang.org/column/article/127601\">第26篇</a>文章的相关内容），在Flutter和原生两端各自初始化时，提供Flutter操作原生页面的方法，并注册方法通道，在原生端收到Flutter的方法调用时，打开新的原生页面。</p><p>接下来，我们再看看如何从Flutter页面回退到原生页面。</p><p>因为Flutter容器本身属于原生导航栈的一部分，所以当Flutter容器内的根页面（即初始化路由页面）需要返回时，我们需要关闭Flutter容器，从而实现Flutter根页面的关闭。同样，Flutter并没有提供操作Flutter容器的方法，因此我们依然需要通过方法通道，在原生代码宿主为Flutter提供操作Flutter容器的方法，在页面返回时，关闭Flutter页面。</p><p>Flutter跳转至原生页面的两种场景，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/78/4b/78349cea1db3f8eb94ddb28af244494b.png?wh=1522*724\" alt=\"\"></p><center><span class=\"reference\">图2 Flutter页面跳转至原生页面示意图</span></center><p><strong>接下来，我们一起看看这两个需要通过方法通道实现的方法，即打开原生页面openNativePage，与关闭Flutter页面closeFlutterPage，在Android和iOS平台上分别如何实现。</strong></p><p>注册方法通道最合适的地方，是Flutter应用的入口，即在FlutterViewController（iOS端）和Activity中的FlutterView（Android端）这两个容器内部初始化Flutter页面前。为了将Flutter相关的行为封装到容器内部，我们需要分别继承FlutterViewController和Activity，在其viewDidLoad和onCreate初始化容器时，注册openNativePage和closeFlutterPage这两个方法。</p><p>iOS端的实现代码如下所示：</p><pre><code>@interface FlutterHomeViewController : FlutterViewController\n@end\n\n@implementation FlutterHomeViewController\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    //声明方法通道\n    FlutterMethodChannel* channel = [FlutterMethodChannel methodChannelWithName:@&quot;samples.chenhang/navigation&quot; binaryMessenger:self];\n    //注册方法回调\n    [channel setMethodCallHandler:^(FlutterMethodCall* call, FlutterResult result) {\n        //如果方法名为打开新页面\n        if([call.method isEqualToString:@&quot;openNativePage&quot;]) {\n            //初始化原生页面并打开\n            SomeOtherNativeViewController *vc = [[SomeOtherNativeViewController alloc] init];\n            [self.navigationController pushViewController:vc animated:YES];\n            result(@0);\n        }\n        //如果方法名为关闭Flutter页面\n        else if([call.method isEqualToString:@&quot;closeFlutterPage&quot;]) {\n            //关闭自身(FlutterHomeViewController)\n            [self.navigationController popViewControllerAnimated:YES];\n            result(@0);\n        }\n        else {\n            result(FlutterMethodNotImplemented);//其他方法未实现\n        }\n    }];\n}\n@end\n</code></pre><p>Android端的实现代码如下所示：</p><pre><code>//继承AppCompatActivity来作为Flutter的容器\npublic class FlutterHomeActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        //初始化Flutter容器       \n        FlutterView flutterView = Flutter.createView(this, getLifecycle(), &quot;defaultPage&quot;); //传入路由标识符\n        //注册方法通道\n        new MethodChannel(flutterView, &quot;samples.chenhang/navigation&quot;).setMethodCallHandler(\n            new MethodCallHandler() {\n                @Override\n                public void onMethodCall(MethodCall call, Result result) {\n                    //如果方法名为打开新页面\n                    if(call.method.equals(&quot;openNativePage&quot;)) {\n                        //新建Intent，打开原生页面\n                        Intent intent = new Intent(FlutterHomeActivity.this, SomeNativePageActivity.class);\n                        startActivity(intent);\n                        result.success(0);\n                    }\n                    //如果方法名为关闭Flutter页面\n                    else if(call.method.equals(&quot;closeFlutterPage&quot;)) {\n                        //销毁自身(Flutter容器)\n                        finish();\n                        result.success(0);\n                    }\n                    else {\n                        //方法未实现\n                        result.notImplemented();\n                    }\n                }\n            });\n        //将flutterView替换成Activity的contentView\n        setContentView(flutterView);\n    }\n}\n</code></pre><p>经过上面的方法注册，我们就可以在Flutter层分别通过openNativePage和closeFlutterPage方法，来实现Flutter页面与原生页面之间的切换了。</p><p>在下面的例子中，Flutter容器的根视图DefaultPage包含有两个按钮：</p><ul>\n<li>点击左上角的按钮后，可以通过closeFlutterPage返回原生页面；</li>\n<li>点击中间的按钮后，会打开一个新的Flutter页面PageA。PageA中也有一个按钮，点击这个按钮之后会调用openNativePage来打开一个新的原生页面。</li>\n</ul><pre><code>void main() =&gt; runApp(_widgetForRoute(window.defaultRouteName));\n//获取方法通道\nconst platform = MethodChannel('samples.chenhang/navigation');\n\n//根据路由标识符返回应用入口视图\nWidget _widgetForRoute(String route) {\n  switch (route) {\n    default://返回默认视图\n      return MaterialApp(home:DefaultPage());\n  }\n}\n\nclass PageA extends StatelessWidget {\n  ...\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n            body: RaisedButton(\n                    child: Text(&quot;Go PageB&quot;),\n                    onPressed: ()=&gt;platform.invokeMethod('openNativePage')//打开原生页面\n            ));\n  }\n}\n\nclass DefaultPage extends StatelessWidget {\n  ...\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n        appBar: AppBar(\n            title: Text(&quot;DefaultPage Page&quot;),\n            leading: IconButton(icon:Icon(Icons.arrow_back), onPressed:() =&gt; platform.invokeMethod('closeFlutterPage')//关闭Flutter页面\n        )),\n        body: RaisedButton(\n                  child: Text(&quot;Go PageA&quot;),\n                  onPressed: ()=&gt;Navigator.push(context, MaterialPageRoute(builder: (context) =&gt; PageA())),//打开Flutter页面 PageA\n        ));\n  }\n}\n</code></pre><p>整个混合导航栈示例的代码流程，如下图所示。通过这张图，你就可以把这个示例的整个代码流程串起来了。</p><p><img src=\"https://static001.geekbang.org/resource/image/93/53/932efcc59bcc0ee590e644e67288ba53.png?wh=1338*402\" alt=\"\"></p><center><span class=\"reference\">图3 混合导航栈示例</span></center><p>在我们的混合应用中，RootViewController与MainActivity分别是iOS和Android应用的原生页面入口，可以初始化为Flutter容器的FlutterHomeViewController（iOS端）与FlutterHomeActivity（Android端）。</p><p>在为其设置初始路由页面DefaultPage之后，就可以以原生的方式跳转至Flutter页面。但是，Flutter并未提供接口，来支持从Flutter的DefaultPage页面返回到原生页面，因此我们需要利用方法通道来注册关闭Flutter容器的方法，即closeFlutterPage，让Flutter容器接收到这个方法调用时关闭自身。</p><p>在Flutter容器内部，我们可以使用Flutter内部的页面路由机制，通过Navigator.push方法，完成从DefaultPage到PageA的页面跳转；而当我们想从Flutter的PageA页面跳转到原生页面时，因为涉及到跨引擎的页面路由，所以我们仍然需要利用方法通道来注册打开原生页面的方法，即openNativePage，让 Flutter容器接收到这个方法调用时，在原生代码宿主完成原生页面SomeOtherNativeViewController（iOS端）与SomeNativePageActivity（Android端）的初始化，并最终完成页面跳转。</p><h2>总结</h2><p>好了，今天的分享就到这里。我们一起总结下今天的主要内容吧。</p><p>对于原生Android、iOS工程混编Flutter开发，由于应用中会同时存在Android、iOS和Flutter页面，所以我们需要妥善处理跨渲染引擎的页面跳转，解决原生页面如何切换Flutter页面，以及Flutter页面如何切换到原生页面的问题。</p><p>在原生页面切换到Flutter页面时，我们通常会将Flutter容器封装成一个独立的ViewController（iOS端）或Activity（Android端），在为其设置好Flutter容器的页面初始化路由（即根视图）后，原生的代码就可以按照打开一个普通的原生页面的方式，来打开Flutter页面了。</p><p>而如果我们想在Flutter页面跳转到原生页面，则需要同时处理好打开新的原生页面，以及关闭自身回退到老的原生页面两种场景。在这两种场景下，我们都需要利用方法通道来注册相应的处理方法，从而在原生代码宿主实现新页面的打开和Flutter容器的关闭。</p><p>需要注意的是，与纯Flutter应用不同，原生应用混编Flutter由于涉及到原生页面与Flutter页面之间切换，因此导航栈内可能会出现多个Flutter容器的情况，即多个Flutter实例。</p><p>Flutter实例的初始化成本非常高昂，每启动一个Flutter实例，就会创建一套新的渲染机制，即Flutter Engine，以及底层的Isolate。而这些实例之间的内存是不互相共享的，会带来较大的系统资源消耗。</p><p>因此我们在实际业务开发中，应该尽量用Flutter去开发闭环的业务模块，原生只需要能够跳转到Flutter模块，剩下的业务都应该在Flutter内部完成，而<strong>尽量避免Flutter页面又跳回到原生页面，原生页面又启动新的Flutter实例的情况</strong>。</p><p>为了解决混编工程中Flutter多实例的问题，业界有两种解决方案：</p><ul>\n<li>以今日头条为代表的<a href=\"https://mp.weixin.qq.com/s/-vyU1JQzdGLUmLGHRImIvg\">修改Flutter Engine源码</a>，使多FlutterView实例对应的多Flutter Engine能够在底层共享Isolate；</li>\n<li>以闲鱼为代表的<a href=\"https://www.infoq.cn/article/VBqfCIuwdjtU_CmcKaEu\">共享FlutterView</a>，即由原生层驱动Flutter层渲染内容的方案。</li>\n</ul><p>坦白说，这两种方案各有不足：</p><ul>\n<li>前者涉及到修改Flutter源码，不仅开发维护成本高，而且增加了线程模型和内存回收出现异常的概率，稳定性不可控。</li>\n<li>后者涉及到跨渲染引擎的hack，包括Flutter页面的新建、缓存和内存回收等机制，因此在一些低端机或是处理页面切换动画时，容易出现渲染Bug。</li>\n<li>除此之外，这两种方式均与Flutter的内部实现绑定较紧，因此在处理Flutter SDK版本升级时往往需要耗费较大的适配成本。</li>\n</ul><p>综合来说，目前这两种解决方案都不够完美。所以，在Flutter官方支持多实例单引擎之前，我们还是尽量在产品模块层面，保证应用内不要出现多个Flutter容器实例吧。</p><p>我把今天分享所涉及到的知识点打包到了GitHub（<a href=\"https://github.com/cyndibaby905/29_flutter_module_page\">flutter_module_page</a>、<a href=\"https://github.com/cyndibaby905/29_android_hybrid_demo\">android_demo</a>、<a href=\"https://github.com/cyndibaby905/29_ios_hybrid_demo\">iOS_demo</a>）中，你可以下载下来，反复运行几次，加深理解与记忆。</p><h2>思考题</h2><p>最后，我给你留两道思考题吧。</p><ol>\n<li>请在openNativePage方法的基础上，增加页面id的功能，可以支持在Flutter页面打开任意的原生页面。</li>\n<li>混编工程中会出现两种页面过渡动画：原生页面之间的切换动画、Flutter页面之间的切换动画。请你思考下，如何能够确保这两种页面过渡动画在应用整体的效果是一致的。</li>\n</ol><p>欢迎你在评论区给我留言分享你的观点，我会在下一篇文章中等待你！感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":132397,"user_name":"Geek_joestar","can_delete":false,"product_type":"c1","uid":1587984,"ip_address":"","ucode":"B68345FBC5D311","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLFbNiaADSSo6SQhsoDRX95ey8zngVaj2fHqaVc6JAd1uXJFAle1sl4SaicicpSzcKwa4JjLvkpKItZQ/132","comment_is_top":false,"comment_ctime":1568109145,"is_pvip":false,"replies":[{"id":"51769","content":"Debug环境吧？Release环境加载会快很多，另外可以考虑提前把引擎初始化","user_name":"作者回复","comment_id":132397,"uid":"1088582","ip_address":"","utype":1,"ctime":1568962429,"user_name_real":"土豆盒子"}],"discussion_count":6,"race_medal":0,"score":"18747978329","product_id":100031001,"comment_content":"原生页面打开Flutter页面时会黑屏一两秒，然后出现Flutter页面内容，这个体验很不好","like_count":5,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466912,"discussion_content":"Debug环境吧？Release环境加载会快很多，另外可以考虑提前把引擎初始化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568962429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1911871,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rRCSdTPyqWdJkIdySLkRpKDkg6oXhGibbCsMVEBVumXZbWGHNW1dwVjAeazeTOukiauJxH9mB8dQM681Kbe7kVRA/132","nickname":"王文亮","note":"","ucode":"109317BB185796","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225709,"discussion_content":"提前初始化flutter view就行，等需要用的时候直接放进去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586393892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1596209,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqUP1oawANUYOmFic40JrcRC4AVp0qVvuoibUFYkKDJtJNP6qXKnibB0nQ9kQibqCiakHkGoYXZbLTcibUw/132","nickname":"liyuan","note":"","ucode":"82829DBE2244AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9942,"discussion_content":"可以试下将flutterview 做成单例，不销毁。在app启动时提前初始化。我以前做RN混合开发遇到类似的问题是这么解决的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568250320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1911871,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rRCSdTPyqWdJkIdySLkRpKDkg6oXhGibbCsMVEBVumXZbWGHNW1dwVjAeazeTOukiauJxH9mB8dQM681Kbe7kVRA/132","nickname":"王文亮","note":"","ucode":"109317BB185796","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1596209,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqUP1oawANUYOmFic40JrcRC4AVp0qVvuoibUFYkKDJtJNP6qXKnibB0nQ9kQibqCiakHkGoYXZbLTcibUw/132","nickname":"liyuan","note":"","ucode":"82829DBE2244AA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225708,"discussion_content":"做成单例意味着 flutter模块只能提供单一业务模块吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586393781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":9942,"ip_address":""},"score":225708,"extra":""}]},{"author":{"id":1040071,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/c7/26485903.jpg","nickname":"Yolo七夜","note":"","ucode":"7CB74C0A1DF785","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9390,"discussion_content":"我也是遇到了这个问题，不知道你是否有解决？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568164034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1180727,"avatar":"https://static001.geekbang.org/account/avatar/00/12/04/37/aa04f997.jpg","nickname":"和小胖","note":"","ucode":"406BD7AB987EBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1040071,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/c7/26485903.jpg","nickname":"Yolo七夜","note":"","ucode":"7CB74C0A1DF785","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33493,"discussion_content":"可以试着从 flutterlibrary 里面打出 release 的 aar，这样新启动的 flutter 应该不会黑屏了。debug 时候的确在有些手机上会黑屏，特别是硬件不好的手机。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571129208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":9390,"ip_address":""},"score":33493,"extra":""}]}]},{"had_liked":false,"id":145089,"user_name":"Carlo","can_delete":false,"product_type":"c1","uid":1001557,"ip_address":"","ucode":"7C3FF23B597506","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/55/48de9a24.jpg","comment_is_top":false,"comment_ctime":1572185750,"is_pvip":false,"replies":[{"id":"56199","content":"OpenNativePage，closeFlutterPage这两个方法可以增加参数","user_name":"作者回复","comment_id":145089,"uid":"1088582","ip_address":"","utype":1,"ctime":1572322067,"user_name_real":"土豆盒子"}],"discussion_count":1,"race_medal":0,"score":"14457087638","product_id":100031001,"comment_content":"从 Flutter 页面跳转至原生页面 或者 从原生页面跳转至Flutter页面 如何传参呢？","like_count":3,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472239,"discussion_content":"OpenNativePage，closeFlutterPage这两个方法可以增加参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572322067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153529,"user_name":"菜头","can_delete":false,"product_type":"c1","uid":1456964,"ip_address":"","ucode":"C5E95519F9EA21","user_header":"https://static001.geekbang.org/account/avatar/00/16/3b/44/dd534c9b.jpg","comment_is_top":false,"comment_ctime":1574253662,"is_pvip":false,"replies":[{"id":"59088","content":"保证整体效果一致，有两种方案：<br>一是，分别定制原生工程（主要是Android）的切换动画，及Flutter的切换动画；<br>二是，使用类似闲鱼的共享FlutterView的机制，将页面切换统一交由原生处理，FlutterView只负责刷新界面。","user_name":"作者回复","comment_id":153529,"uid":"1088582","ip_address":"","utype":1,"ctime":1574308043,"user_name_real":"土豆盒子"}],"discussion_count":2,"race_medal":0,"score":"5869220958","product_id":100031001,"comment_content":"请教一下<br>如何能够确保这两种页面过渡动画在应用整体的效果是一致的？<br><br>","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475201,"discussion_content":"保证整体效果一致，有两种方案：\n一是，分别定制原生工程（主要是Android）的切换动画，及Flutter的切换动画；\n二是，使用类似闲鱼的共享FlutterView的机制，将页面切换统一交由原生处理，FlutterView只负责刷新界面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574308043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1701883,"avatar":"","nickname":"Geek_20f143","note":"","ucode":"5D97BD5FA4A26F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100480,"discussion_content":"那iOS呢？也是定制UINavigationController的push动画和present动画？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577263325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146367,"user_name":"阿水","can_delete":false,"product_type":"c1","uid":1134736,"ip_address":"","ucode":"21BCE2E8E8D1CC","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/90/8cb1bf5d.jpg","comment_is_top":false,"comment_ctime":1572508177,"is_pvip":false,"replies":[{"id":"57768","content":"把flutter容器做成单例，提前初始化好","user_name":"作者回复","comment_id":146367,"uid":"1088582","ip_address":"","utype":1,"ctime":1573468568,"user_name_real":"土豆盒子"}],"discussion_count":2,"race_medal":0,"score":"5867475473","product_id":100031001,"comment_content":"老师我想请教一下，原生界面和flutter界面互相跳转的时候出现屏幕一闪的现象，有解决方案吗","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472820,"discussion_content":"把flutter容器做成单例，提前初始化好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573468568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1948081,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b9/b1/a61cf21d.jpg","nickname":"Tom","note":"","ucode":"95F0A20ECE0A24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220692,"discussion_content":"可以对前一个页面，做截图渐变过渡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585917529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134211,"user_name":"陆大胖","can_delete":false,"product_type":"c1","uid":1600555,"ip_address":"","ucode":"455C083198FC59","user_header":"https://static001.geekbang.org/account/avatar/00/18/6c/2b/adc58a65.jpg","comment_is_top":false,"comment_ctime":1568776041,"is_pvip":false,"replies":[{"id":"52440","content":"flutteView确实有内存泄漏问题，不过问题不大，技术上可以通过全局共享VC解决，实际落地尽量让业务闭环在Flutter内部即可。<br>对于纯flutter应用，整个页面都是flutter渲染的，不涉及跨技术栈的渲染切换，自然也就不需要重建和释放了。<br>","user_name":"作者回复","comment_id":134211,"uid":"1088582","ip_address":"","utype":1,"ctime":1569500403,"user_name_real":"土豆盒子"}],"discussion_count":1,"race_medal":0,"score":"5863743337","product_id":100031001,"comment_content":"Push FlutterViewController的方案不可取。起码现在stable分支上没有解决内存泄漏的问题。另外需知道每个FlutterViewController的创建都应了整个Flutter App的启动（xcode上暂停应用，会看到多了一套完整的Flutter线程，UI、io那些），无论你是否setInitialRoute，都是从Flutter代码的main函数开始运行，感觉上就是在你的应用内，启动了2个同样的Flutter App&#47;模块， 这还意味着2个FlutterViewController之间不做特殊处理的情况下不共享任何信息，以上，大多数情况下都会带来些水土不服。另外作者在回复中提到的“或者纯FlutterApp全部都是FlutterViewController，不释放其实也没什么问题”，这里的“全部都是FlutterViewController”可能我理解有偏差，先打个问号。","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467656,"discussion_content":"flutteView确实有内存泄漏问题，不过问题不大，技术上可以通过全局共享VC解决，实际落地尽量让业务闭环在Flutter内部即可。\n对于纯flutter应用，整个页面都是flutter渲染的，不涉及跨技术栈的渲染切换，自然也就不需要重建和释放了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569500403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296010,"user_name":"mirrors","can_delete":false,"product_type":"c1","uid":1602185,"ip_address":"","ucode":"6BF0C81D1A8452","user_header":"https://static001.geekbang.org/account/avatar/00/18/72/89/a346ba9b.jpg","comment_is_top":false,"comment_ctime":1622703061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622703061","product_id":100031001,"comment_content":"因此我们在实际业务开发中，应该尽量用 Flutter 去开发闭环的业务模块，原生只需要能够跳转到 Flutter 模块，剩下的业务都应该在 Flutter 内部完成，而尽量避免 Flutter 页面又跳回到原生页面，原生页面又启动新的 Flutter 实例的情况。<br><br>这个感觉没法避免，单个业务线可以做到flutter闭环，但如果我有多个业务线，那从另一个业务线退回到原生，然后又打开另一条业务线。这种情况应该比较常见，有什么好的方案吗？除非很极端原生只是个壳子，其他全用flutter实现，但这样混编还有什么意义呢？","like_count":0},{"had_liked":false,"id":296008,"user_name":"mirrors","can_delete":false,"product_type":"c1","uid":1602185,"ip_address":"","ucode":"6BF0C81D1A8452","user_header":"https://static001.geekbang.org/account/avatar/00/18/72/89/a346ba9b.jpg","comment_is_top":false,"comment_ctime":1622702776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622702776","product_id":100031001,"comment_content":"Flutter 实例的初始化成本非常高昂，每启动一个 Flutter 实例，就会创建一套新的渲染机制，即 Flutter Engine，以及底层的 Isolate。而这些实例之间的内存是不互相共享的，会带来较大的系统资源消耗。<br><br>现在有一种写法：<br>iOS在AppDelegate中<br>&#47;&#47;flutter engine启动<br>self.flutterEngine = [[FlutterEngine alloc] initWithName:@&quot;WMFlutterEngine&quot;];<br>&#47;&#47; Runs the default Dart entrypoint with a default Flutter route.<br>[self.flutterEngine run];<br><br>这样的话，我是不是之后创建的FlutterViewController实例都是共用的这个flutter engine。效率上会提升吗？还是说，只是提前启动了引擎，每次创建的FlutterViewController实例还是不共用flutter engine。","like_count":0},{"had_liked":false,"id":229141,"user_name":"Geek_efan","can_delete":false,"product_type":"c1","uid":1584882,"ip_address":"","ucode":"39170A2819A133","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1dD8rnYEI7V6wJkXOUQcENxicwhEEjUYbtYPEgjNfaSbTYzQVT0Ktl4KotNflbGHOWePriaGaIRFiabAO4mDYxqHQ/132","comment_is_top":false,"comment_ctime":1592906262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592906262","product_id":100031001,"comment_content":"请教一下，Flutter自1.12，不再支持用Android端使用Flutter.createView的方式了，而是用新的io.flutter.embedding.android包下的FlutterActivity和FlutterFragment，初始化路由也改到了FlutterEngine里，我想请教，是不是这样就一个引擎只能有一个初始化路由了，也就没办法做到灵活的原生端启动Flutter页面的时候传参了？","like_count":1},{"had_liked":false,"id":226084,"user_name":"Geek_fef1f7","can_delete":false,"product_type":"c1","uid":1594888,"ip_address":"","ucode":"042B74ECF4469D","user_header":"https://wx.qlogo.cn/mmopen/vi_32/qia3ujDMNj5sIavicvh3ib7rfDnS7ofAMVic0EA0VFE1Hpu5N1R8PibhjgBnicJQNuWS77tVHTS0BlhibmeqZ1ELdHPFg/132","comment_is_top":false,"comment_ctime":1591948462,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591948462","product_id":100031001,"comment_content":"您好！我按照您的代码编译试了一次，一直提示 Unhandled Exception: MissingPluginException(No implementation found for method openNativePage on channel samples.chenhang&#47;navigation) ，请问可用从哪些方面定位问题呢","like_count":1,"discussions":[{"author":{"id":1345506,"avatar":"https://static001.geekbang.org/account/avatar/00/14/87/e2/7ba15ce7.jpg","nickname":"清聚思然","note":"","ucode":"6F8EA2893CA8A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549970,"discussion_content":"同样的问题 试了一些方法，有人解决吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644314565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212883,"user_name":"小","can_delete":false,"product_type":"c1","uid":1943694,"ip_address":"","ucode":"1A150C4BA0AE49","user_header":"","comment_is_top":false,"comment_ctime":1588231410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588231410","product_id":100031001,"comment_content":"有个问题想请问下：通过OpenNativePage跳转到原生Activity(SomeNativePageActivity)后，我们返回，应该是退到FlutterHomeActivity吧？是PageA页面还是DefaultPage页？","like_count":0},{"had_liked":false,"id":204381,"user_name":"王文亮","can_delete":false,"product_type":"c1","uid":1911871,"ip_address":"","ucode":"109317BB185796","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rRCSdTPyqWdJkIdySLkRpKDkg6oXhGibbCsMVEBVumXZbWGHNW1dwVjAeazeTOukiauJxH9mB8dQM681Kbe7kVRA/132","comment_is_top":false,"comment_ctime":1586394093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586394093","product_id":100031001,"comment_content":"为了更加灵活的打开原生页面 可以考虑使用deeplink跳转，传参也方便","like_count":0},{"had_liked":false,"id":146120,"user_name":"zzz","can_delete":false,"product_type":"c1","uid":1041455,"ip_address":"","ucode":"352964E5D793DA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/2f/fb01f76d.jpg","comment_is_top":false,"comment_ctime":1572436724,"is_pvip":false,"replies":[{"id":"58828","content":"是，但是你需要自己去清理和恢复engine的运行上下文，可能会出现为定义的异常或者bug","user_name":"作者回复","comment_id":146120,"uid":"1088582","ip_address":"","utype":1,"ctime":1574165912,"user_name_real":"土豆盒子"}],"discussion_count":1,"race_medal":0,"score":"1572436724","product_id":100031001,"comment_content":"看文中提到的头条的文章，FlutterView -&gt; Engine —&gt; vm中的isolate，然后使用isolate共享，FlutterView -&gt; Engine还是一一对应的就解决了内存的问题，那请问下在iOS中，初始化FlutterViewController的方法中initWithEngine中传入同一个engine，是否是多个FlutterViewController对应同一个engine然后对应一个isolate呢？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472718,"discussion_content":"是，但是你需要自己去清理和恢复engine的运行上下文，可能会出现为定义的异常或者bug","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574165912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146065,"user_name":"N1eR","can_delete":false,"product_type":"c1","uid":1602084,"ip_address":"","ucode":"C2F3E2EBCF42B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/72/24/06d3f728.jpg","comment_is_top":false,"comment_ctime":1572427715,"is_pvip":false,"replies":[{"id":"58829","content":"一般是直接用acrivity，否则你需要单独隐藏工具栏。crash倒从来没遇到过，你可以查一下具体的报错信息","user_name":"作者回复","comment_id":146065,"uid":"1088582","ip_address":"","utype":1,"ctime":1574166000,"user_name_real":"土豆盒子"}],"discussion_count":1,"race_medal":0,"score":"1572427715","product_id":100031001,"comment_content":"跳转到的原生页面继承AppCompatActivity会崩溃   继承Activity就没事  这是为啥","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472696,"discussion_content":"一般是直接用acrivity，否则你需要单独隐藏工具栏。crash倒从来没遇到过，你可以查一下具体的报错信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574166000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139957,"user_name":"舒大飞","can_delete":false,"product_type":"c1","uid":1313651,"ip_address":"","ucode":"5CC2E0F8C40E38","user_header":"https://static001.geekbang.org/account/avatar/00/14/0b/73/4f1c9676.jpg","comment_is_top":false,"comment_ctime":1570774395,"is_pvip":true,"replies":[{"id":"54840","content":"如果不做特殊定制（头条或闲鱼的方案），是的","user_name":"作者回复","comment_id":139957,"uid":"1088582","ip_address":"","utype":1,"ctime":1571290520,"user_name_real":"土豆盒子"}],"discussion_count":1,"race_medal":0,"score":"1570774395","product_id":100031001,"comment_content":"如果混合开发中，多个不连续的flutter页面那个就会创建多个Flutter引擎吗","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470190,"discussion_content":"如果不做特殊定制（头条或闲鱼的方案），是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571290520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136804,"user_name":"辉哥","can_delete":false,"product_type":"c1","uid":1236983,"ip_address":"","ucode":"21A65F4EE6CD04","user_header":"","comment_is_top":false,"comment_ctime":1569512625,"is_pvip":false,"replies":[{"id":"53513","content":"对；理论上是，但考虑到Flutter引擎有内存泄漏问题，如果Flutter页面需要反复打开，不建议采用这种方式回收内存，可以考虑将Flutter容器做成一个单例。","user_name":"作者回复","comment_id":136804,"uid":"1088582","ip_address":"","utype":1,"ctime":1570516287,"user_name_real":"土豆盒子"}],"discussion_count":1,"race_medal":0,"score":"1569512625","product_id":100031001,"comment_content":"老师，请教一下，对于android来说，Flutter实例是不是对应的FlutterView对象？同时开启多个Flutter实例会占用过多的内存，那关闭当前Flutter容器所在的Activity是否能回收Flutter实例所占的内存？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468801,"discussion_content":"对；理论上是，但考虑到Flutter引擎有内存泄漏问题，如果Flutter页面需要反复打开，不建议采用这种方式回收内存，可以考虑将Flutter容器做成一个单例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570516287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135763,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1236087,"ip_address":"","ucode":"4CB4DBD048CD63","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/77/05b119eb.jpg","comment_is_top":false,"comment_ctime":1569255143,"is_pvip":false,"replies":[{"id":"52125","content":"draw.io","user_name":"作者回复","comment_id":135763,"uid":"1088582","ip_address":"","utype":1,"ctime":1569337535,"user_name_real":"土豆盒子"}],"discussion_count":1,"race_medal":0,"score":"1569255143","product_id":100031001,"comment_content":"我想问下老师，用什么画图软件画的图","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468331,"discussion_content":"draw.io","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569337535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130995,"user_name":"矮个子先生😝","can_delete":false,"product_type":"c1","uid":1147205,"ip_address":"","ucode":"2242A457B0E10D","user_header":"https://static001.geekbang.org/account/avatar/00/11/81/45/9aa91b75.jpg","comment_is_top":false,"comment_ctime":1567592216,"is_pvip":false,"replies":[{"id":"49520","content":"FlutterEngine内部实现存在循环引用的情况，所以会有内存泄漏的问题。不过一般的混合应用只会创建一个FlutterViewController，或者纯FlutterApp全部都是FlutterViewController，不释放其实也没什么问题。如果真的需要关闭flutter容器，可以把FlutterViewController缓存起来（作为单例使用）。","user_name":"作者回复","comment_id":130995,"uid":"1088582","ip_address":"","utype":1,"ctime":1567678763,"user_name_real":"土豆盒子"}],"discussion_count":1,"race_medal":0,"score":"1567592216","product_id":100031001,"comment_content":"老师,不知您是否有出现,push FlutterViewController之后,然后closeFlutterPage,但是内存依然居高不下.","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466233,"discussion_content":"FlutterEngine内部实现存在循环引用的情况，所以会有内存泄漏的问题。不过一般的混合应用只会创建一个FlutterViewController，或者纯FlutterApp全部都是FlutterViewController，不释放其实也没什么问题。如果真的需要关闭flutter容器，可以把FlutterViewController缓存起来（作为单例使用）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567678763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130753,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1567525247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567525247","product_id":100031001,"comment_content":"跟着老师一起精进，感谢老师的分享。","like_count":0}]}