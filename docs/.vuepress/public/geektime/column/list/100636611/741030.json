{"id":741030,"title":"第 8 章 文档的压缩与打包","content":"\n<p>在Windows下，我们接触最多的压缩文件是.rar格式的；但在Linux下，不能识别.rar格式，它有自己独特的压缩工具。.zip格式的文件在Windows和Linux下都能使用。使用压缩文件，不仅能节省磁盘空间，而且在传输时还能节省网络带宽。</p>\n<p>Linux下最常见的压缩文件通常都是.tar.gz格式的，除此之外，还有.tar、.gz、.bz2、.zip等格式。阿铭曾介绍过Linux下的文件后缀名可加可不加，但压缩文件最好加上后缀名。这是为了判断压缩文件是由哪种压缩工具压缩的，而后才能正确地解压缩这个文件。下面介绍Linux下常见的后缀名所对应的压缩工具。</p>\n<ul>\n<li><strong>.gz</strong>：表示由gzip压缩工具压缩的文件。</li>\n<li><strong>.bz2</strong>：表示由bzip2压缩工具压缩的文件。</li>\n<li><strong>.tar</strong>：表示由tar打包程序打包的文件（tar并没有压缩功能，只是把一个目录合并成一个文件）。</li>\n<li><strong>.tar.gz</strong>：可以理解为先由tar打包，然后再由gzip压缩。</li>\n<li><strong>.tar.bz2</strong>：可以理解为先由tar打包，然后再由bzip2压缩。</li>\n<li><strong>.tar.xz</strong>：可以理解为先由tar打包，然后再xz压缩。</li>\n</ul>\n<h2 id=\"nav_point_130\">8.1 gzip压缩工具</h2>\n<p><code>gzip</code>命令的格式为<code>gzip [-d#] filename</code>，其中<code>#</code>为1~9的数字。</p>\n<ul>\n<li><strong><code>-d</code></strong>：该参数在解压缩时使用。</li>\n<li><strong><code>-#</code></strong>：这里的<code>#</code>为数字，表示压缩等级。<code>-1</code>为最差，<code>-9</code>为最好，<code>-6</code>为默认。</li>\n</ul>\n<p>下面阿铭通过一个小例子来说明<code>gzip</code>的用法，示例命令如下：</p>\n<pre class=\"code-rows\"><code># mkdir /tmp/8\n# cd /tmp/8\n# mkdir test\n# mv /tmp/1.txt test/\n# cd test\n# ls\n1.txt\n# gzip 1.txt\n# ls\n1.txt.gz</code></pre>\n<p><code>gzip</code>后面直接跟文件名，表示在当前目录下压缩该文件，而原文件也会消失。解压该压缩文件的方法如下所示：</p>\n<pre class=\"code-rows\"><code># gzip -d 1.txt.gz\n# ls\n1.txt</code></pre>\n<p>命令<code>gzip -d</code>后面跟压缩文件表示解压压缩文件。<code>gzip</code>不支持压缩目录，压缩目录时会报错，如下所示：</p>\n<pre class=\"code-rows\"><code># cd ..\n# gzip test\ngzip: test is a directory -- ignored\n# ls test\n1.txt</code></pre>\n<p>关于<code>-#</code>选项，我们平时很少用到，使用默认的压缩级别足够了。</p>\n<h2 id=\"nav_point_131\">8.2 bzip2压缩工具</h2>\n<p><code>bzip2</code>命令的格式为<code>bzip2 [-dz] filename</code>，它只有<code>-z</code>（压缩）和<code>-d</code>（解压缩）两个常用选项。压缩级别有1~9，默认级别是9。压缩时，加或不加<code>-z</code>选项都可以压缩文件。示例命令如下：</p><!-- [[[read_end]]] -->\n<pre class=\"code-rows\"><code># cd test\n# bzip2 1.txt\n# ls\n1.txt.bz2\n# bzip2 -d 1.txt.bz2\n# bzip2 -z 1.txt\n# ls\n1.txt.bz2</code></pre>\n<p><code>bzip2</code>命令也不支持压缩目录，压缩目录时会报错，如下所示：</p>\n<pre class=\"code-rows\"><code># cd ..\n# bzip2 test\nbzip2: Input file test is a directory.</code></pre>\n<h2 id=\"nav_point_132\">8.3 xz压缩工具</h2>\n<p><code>xz</code>命令的格式为<code>xz [-dz] filename</code>，和<code>bzip2</code>类似，阿铭只介绍<code>-z</code>（压缩）和<code>-d</code>（解压缩）这两个常用选项。压缩时，加或不加<code>-z</code>选项都可以压缩文件。示例命令如下：</p>\n<pre class=\"code-rows\"><code># bzip2 –d 1.txt.bz2\n# xz 1.txt\n# ls\n1.txt.xz\n# xz -d 1.txt.xz\n# xz -z 1.txt\n# ls\n1.txt.xz</code></pre>\n<p><code>xz</code>命令同样也不支持压缩目录，压缩目录时会报错，如下所示：</p>\n<pre class=\"code-rows\"><code># cd ..\n# xz test\nxz: test: Is a directory, skipping</code></pre>\n<h2 id=\"nav_point_133\">8.4 tar打包工具</h2>\n<p>tar本身就是一个打包工具，可以把目录打包成一个文件，会把所有文件整合成一个大文件，方便复制或者移动。该命令的格式为<code>tar [-zjxcvfpP] filename tar</code>，它有多个选项，如下所示，其中不常用的阿铭在括号里做了标注。</p>\n<ul>\n<li><strong><code>-z</code></strong>：表示同时用gzip压缩。</li>\n<li><strong><code>-j</code></strong>：表示同时用bzip2压缩。</li>\n<li><strong><code>-J</code></strong>：表示同时用xz压缩。</li>\n<li><strong><code>-x</code></strong>：表示解包或者解压缩。</li>\n<li><strong><code>-t</code></strong>：表示查看tar包里的文件。</li>\n<li><strong><code>-c</code></strong>：表示建立一个tar包或者压缩文件包。</li>\n<li><strong><code>-v</code></strong>：表示可视化。</li>\n<li><strong><code>-f</code></strong>：后面跟文件名（即<code>-f filename</code>，表示压缩后的文件名为<code>filename</code>，或者解压文件<code>filename</code>。）需要注意的是，在多个参数组合的情况下，请把<code>-f</code>参数写到最后面。</li>\n<li><strong><code>-p</code></strong>：表示使用原文件的属性，即压缩前文件是什么属性压缩后就还什么属性。（不常用）</li>\n<li><strong><code>-P</code></strong>：表示可以使用绝对路径。（不常用）</li>\n<li><strong><code>--exclude filename</code></strong>：表示在打包或压缩时，不要将<code>filename</code>文件包括在内。（不常用）</li>\n</ul>\n<p>具体操作过程如下：</p>\n<pre class=\"code-rows\"><code># cd test\n# xz –d 1.txt.xz\n# mkdir test111\n# touch test111/2.txt\n# echo \"nihao\" &gt; !$\necho \"nihao\" &gt; test111/2.txt\n# cp 1.txt test111/\n# yum install tree // 安装tree命令，用来查看目录树形结构\n# tree .\n.\n|-- 1.txt\n`-- test111\n |-- 1.txt\n `-- 2.txt\n\n1 directory, 3 files\n# tar -cvf test111.tar test111\ntest111/\ntest111/2.txt\ntest111/1.txt\n# ls\n1.txt test111 test111.tar</code></pre>\n<p>首先，在test目录下建立test111目录，然后在test111目录下建立2.txt文件，并将nihao写入到2.txt中。接着，用<code>tar</code>命令把test111打包成test111.tar（请记住，<code>-f</code>参数后紧跟打包后的文件名，然后再跟需要打包的目录或者文件）。使用<code>tar</code>命令打包后，原文件不会消失。在上例中，阿铭使用了一个特殊符号<code>!$</code>，它表示上一条命令的最后一个参数，这里指test111/2.txt。</p>\n<p><code>tar</code>命令不仅可以打包目录，还可以打包文件，打包时可以不加<code>-v</code>选项，表示不可视化。示例命令如下：</p>\n<pre class=\"code-rows\"><code># rm -f test111.tar\n# tar -cf test.tar test111 1.txt\n# ls\n1.txt test111 test.tar</code></pre>\n<p>其实不管是打包还是解包，是不会删除原来的文件的，而且原来的文件会覆盖当前已经存在的文件或者目录。下面我们先删除原来的test111目录，然后解包test.tar，如下所示：</p>\n<pre class=\"code-rows\"><code># rm -rf test111\n# ls\n1.txt test.tar\n# tar -xvf test.tar\ntest111/\ntest111/2.txt\ntest111/1.txt\n1.txt</code></pre>\n<p>在日常管理工作中，你也许会用到<code>--exclude</code>选项，下面就来简单介绍一下它的用法，示例命令如下：</p>\n<pre class=\"code-rows\"><code># tar -cvf test111.tar --exclude 1.txt test111 // 不用删除test111.tar，会自动覆盖\ntest111/\ntest111/2.txt</code></pre>\n<p>请注意，上例中test111.tar放到了<code>--exclude</code>选项的前面。该选项除了可以排除文件，也可以排除目录，示例命令如下：</p>\n<pre class=\"code-rows\"><code># mkdir test111/test222\n# tar -cvf test111.tar --exclude test222 test111\ntest111/\ntest111/2.txt\ntest111/1.txt</code></pre>\n<h3 id=\"nav_point_134\">8.4.1 打包的同时使用gzip压缩</h3>\n<p><code>tar</code>命令非常好用的一个功能就是可以在打包时直接压缩，它支持gzip压缩、bzip2压缩和xz压缩。若使用<code>-z</code>选项，则可以压缩成gzip格式的文件，示例命令如下：</p>\n<pre class=\"code-rows\"><code># tar -czvf test111.tar.gz test111\ntest111/\ntest111/2.txt\ntest111/1.txt\n# ls\n1.txt test111 test111.tar.gz test.tar</code></pre>\n<p>使用<code>-tf</code>选项，可以查看包或者压缩包的文件列表，示例命令如下：</p>\n<pre class=\"code-rows\"><code># tar -tf test111.tar.gz\ntest111/\ntest111/2.txt\ntest111/1.txt\n# tar -tf test.tar\ntest111/\ntest111/2.txt\ntest111/1.txt\n1.txt</code></pre>\n<p>使用<code>-zxvf</code>选项，可以解压.tar.gz格式的压缩包，示例命令如下：</p>\n<pre class=\"code-rows\"><code># rm -rf test111\n# ls\n1.txt test111.tar.gz test.tar\n# tar -zxvf test111.tar.gz\ntest111/\ntest111/2.txt\ntest111/1.txt\n# ls\n1.txt test111 test111.tar.gz test.tar</code></pre>\n<h3 id=\"nav_point_135\">8.4.2 打包的同时使用bzip2压缩</h3>\n<p>和gzip压缩不同的是，这里使用<code>-cjvf</code>选项来压缩，压缩过程如下：</p>\n<pre class=\"code-rows\"><code># tar -cjvf test111.tar.bz2 test111\ntest111/\ntest111/2.txt\ntest111/1.txt\n# ls\n1.txt test111 test111.tar.bz2 test111.tar.gz test.tar</code></pre>\n<p>使用<code>-tf</code>选项来查看压缩包的文件列表，示例命令如下：</p>\n<pre class=\"code-rows\"><code># tar -tf test111.tar.bz2\ntest111/\ntest111/2.txt\ntest111/1.txt</code></pre>\n<p>使用<code>-jxvf</code>选项来解压 .tar.bz2格式的压缩包，示例命令如下：</p>\n<pre class=\"code-rows\"><code># tar -jxvf test111.tar.bz2\ntest111/\ntest111/2.txt\ntest111/1.txt</code></pre>\n<p>关于打包的同时使用xz压缩工具压缩，阿铭不再介绍，方法同8.4.1节和8.4.2节。</p>\n<h2 id=\"nav_point_136\">8.5 使用zip压缩</h2>\n<p>zip压缩包在Windows和Linux中都比较常用，它可以压缩目录和文件。压缩目录时，需要指定目录下的文件。示例命令如下：</p>\n<pre class=\"code-rows\"><code># zip 1.txt.zip 1.txt\n adding: 1.txt (deflated 64%)\n# zip test111.zip test111/*\n adding: test111/1.txt (deflated 64%)\n adding: test111/2.txt (stored 0%)\n adding: test111/test222/ (stored 0%)</code></pre>\n<blockquote>\n<p><strong>说明</strong> <code>zip</code>后面先跟目标文件名，即压缩后的自定义压缩包名，然后跟要压缩的文件或者目录。若你的CentOS没有该命令，需要使用yum工具安装它，如下所示：</p>\n<pre class=\"code-rows\"><code># yum install -y zip</code></pre>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<p><strong>思考题</strong> 在压缩目录时，如果只写目录名，会发生什么？若目录下还有二级目录甚至更多级目录时，能否也一并压缩二级目录下的文件呢？</p>\n</blockquote>\n<p>做完试验后就会发现，当目录下还有二级目录甚至更多级目录时，<code>zip</code>命令仅仅是把二级目录本身压缩而已。如果想要一并压缩二级目录下的文件，必须加上<code>-r</code>选项，如下所示：</p>\n<pre class=\"code-rows\"><code># zip -r test111.zip test111/\nupdating: test111/ (stored 0%)\nupdating: test111/1.txt (deflated 64%)\nupdating: test111/2.txt (stored 0%)\nupdating: test111/test222/ (stored 0%)</code></pre>\n<p>这样就不需要用test111/*了。</p>\n<p>解压.zip格式的文件时并不使用<code>zip</code>命令，而是用<code>unzip</code>命令。例如，解压1.txt.zip的命令为：</p>\n<pre class=\"code-rows\"><code># unzip 1.txt.zip</code></pre>\n<p>若系统中没有<code>unzip</code>命令，则需要使用yum工具安装它，如下所示：</p>\n<pre class=\"code-rows\"><code># yum install -y unzip</code></pre>\n<h2 id=\"nav_point_137\">8.6 <code>zcat</code>、<code>bzcat</code>命令的使用</h2>\n<p>上面介绍了使用<code>-t</code>选项可以查看tar压缩包的文件列表。对于gzip2或者bzip2压缩格式的文本文档，我们也可以使用<code>zcat</code>、<code>bzcat</code>命令直接查看文档内容。示例命令如下：</p>\n<pre class=\"code-rows\"><code># cp /etc/passwd ./11.txt\n# cp 11.txt 22.txt\n# gzip 11.txt\n# bzip2 22.txt\n# zcat 11.txt.gz\n# bzcat 22.txt.bz2</code></pre>\n<p>这样就可以查看11.txt或22.txt文件的内容了，大家猜一猜用什么命令可以查看xz压缩文件的内容呢？</p>\n<h2 id=\"nav_point_138\">8.7 课后习题</h2>\n<p>(1) <code>gzip</code>命令和<code>bzip2</code>命令能否直接压缩目录呢？</p>\n<p>(2) 请快速写出使用<code>gzip</code>和<code>bzip2</code>压缩和解压一个文件的命令。</p>\n<p>(3) tar在打包时，如果想排除多个文件或者目录，该如何操作？</p>\n<p>(4) 请试验：如果不加-是否正确，如<code>tar zcvf 1.tar.gz 1.txt 2.txt</code>？</p>\n<p>(5) 如何使用tar打包和解包格式为.tar.gz和.tar.bz2的压缩包？</p>\n<p>(6) 找一个大点的文件，使用tar分别把这个文件打成.tar.gz和.tar.bz2格式的压缩包，比较一下哪个包会更小，并由此判断是gzip压缩效果好还是bzip2压缩效果好。</p>\n<p>(7) 使用tar打包并压缩时，默认压缩级别为几？如何能够改变压缩级别呢？（提示：tar本身没有这个功能，可以尝试拆分打包和压缩。）</p>\n\n<br style=\"page-break-after:always\" />","comments":[]}