{"id":465503,"title":"09｜RTP & RTCP：如何正确地将视频装进RTP中？","content":"<p>你好，我是李江。</p><p>在前面的课程中，我们详细地讲述了视频编码的原理以及预测编码和变换编码的知识。通过这些我们了解了视频编码的基本原理和步骤。同时，我们还用了一节课的时间深入探讨了H264的码流结构，相信你已经清楚了H264码流是什么样的，以及如何从码流中分离出一帧帧图像数据，并学会了如何判断这些帧的类型。</p><p>那么从这节课开始呢，我们就要进入视频传输和网络对抗部分了。我们会在视频编码码流的基础上，讲讲如何将码流打包成一个个数据包发送到网络上，并进一步讨论如何避免在发送的过程中引起网络拥塞，从而保证视频的流畅性。同时，我们会进一步在后面的课程中讲解如何在网络不断变化的时候做好视频码控算法，如何防止视频出现花屏，以及如何尽量减少视频卡顿等非常有难度的实际工程问题。</p><p>这些问题是视频开发过程中经常会遇到且迫切需要解决的重要问题。而解决这些问题的基础就是需要熟悉RTP和RTCP协议，也就是我们这节课的重点。</p><p>接下来我们会分别从RTP协议、RTCP协议和H264的RTP打包方法这三个方面来展开这节课。首先让我们一起来认识一下RTP协议。</p><h2>RTP协议</h2><p>RTP（Real-time Transport Protocol）协议，全称是实时传输协议。它主要用于音视频数据的传输。那它的作用是什么呢？</p><!-- [[[read_end]]] --><p>一般我们在实时通信的时候，需要传输音频和视频数据。我们通常是这样做的，先将原始数据经过编码压缩之后，再将编码码流传输到接收端。在传输的时候我们通常不会直接将编码码流进行传输，而是<strong>先将码流打包成一个个RTP包再进行发送</strong>。</p><p>那为什么需要打包成RTP包呢？这是<strong>因为我们<strong><strong>的</strong></strong>接收端要能够正确<strong><strong>地</strong></strong>使用这些音视频编码数据，不仅仅需要原始的编码码流，还需要一些额外的信息</strong>。比如说：</p><ul>\n<li><strong>当前视频码流是哪种视频编码标准</strong>，是H264、H265、VP8、VP9还是AV1呢？我们知道每种不同的编码标准，其码流解析的方式肯定也不一样。这个就需要通过RTP协议告知接收端。</li>\n<li>当我们知道编码标准了，我们就可以正确地解析码流，并解码出图像了。但是我们又会遇到一个新的问题，那就是<strong>按照什么速度播放视频呢？</strong>这个也需要RTP协议告知接收端。<br>\n这就是RTP协议的一个重要的作用，即告知接收端一些必要的信息。当然RTP协议的作用不止这些，它其实在网络带宽预测和拥塞控制的时候也发挥出了至关重要的作用。我们在之后的课程中会继续讨论，这里就先不讲了，你大体有个印象就可以。</li>\n</ul><p>我们知道RTP包需要附带很多额外的信息，那这些信息在RTP包中是怎么存在的呢？其实RTP包包括两个部分：第一个部分是RTP头；另外一个部分是RTP有效载荷。其中RTP头主要是用来携带前面说的那些额外信息的，等会儿我会详细介绍一下RTP头部每个字段的意义。</p><p>这里我先稍微跟你解释一下另外一个部分，也就是RTP有效载荷。RTP有效载荷，其实就是RTP包里面的实际数据。如果是H264编码打包成RTP包，那有效载荷就是经过H264编码的码流；如果是VP8编码呢，那就是VP8码流。</p><p>接下来，我们重点来看看RTP包的头部。具体如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/14/e6/143a86a6aef7f664beca7268f58e99e6.jpg?wh=1280x426\" alt=\"\"><br>\n是不是有点懵，别急，下面我给了一张表格，你可以对照着表格看看RTP包头的每一个字段占用的位数和具体的含义。其中绿色部分是很重要的知识点，需要你重点掌握。</p><p><img src=\"https://static001.geekbang.org/resource/image/3b/52/3b724acdcb5a69f3c1831591be49ca52.png?wh=1354x1194\" alt=\"图片\"></p><p>上面讲的就是RTP头部的主要组成部分。在这里需要单独提一下RTP头部的另外一个比较重要的部分，就是RTP扩展头。从上表我们可以看到，RTP包头有一个扩展头标志位X，当扩展头标志位X为1的时候，说明有RTP扩展头。RTP扩展头由于平时大家很少用看似不怎么重要，但是在RTC场景中，尤其是WebRTC中经常会用到。另外，RTP扩展头我们在带宽预测的时候也会用到。所以建议你也了解一下。</p><p>扩展头主要是用来给用户自定义扩展使用的。因为协议是标准的，但是用户使用场景却是多种多样的，所以RTP需要考虑的比较全面，留了一个扩展头可以让用户根据使用场景和需求，自己定义扩展头，用来传输需要在RTP包中传输的信息。扩展头的格式可以参考<a href=\"https://www.cnblogs.com/ishen/p/12050077.html\">这篇文章</a>，这里就不做过多的展开了。</p><p>好了，以上就是RTP协议的主要知识点。有了RTP协议，我们就能够将码流打包成RTP包发给接收端了。如果你只负责传输RTP包，而不需要管传输过程中有没有丢包，以及传输RTP包的时候有没有引起网络拥塞的话，那你只需要使用RTP协议就可以了。比如说，你选择使用TCP协议传输RTP包的话就可以不用管这些事情，因为TCP协议具有丢包重传、拥塞控制等功能。</p><p>但是通常情况下，我们在传输音视频数据的时候不会使用TCP协议作为传输层协议。这是因为TCP协议更适合传输文本和文件等数据，而不适合传输实时音频流和视频流数据，所以我们通常会<strong>使用UDP协议作为音视频数据的传输层协议</strong>。但UDP协议不具有丢包重传和拥塞控制的功能，需要我们自己实现。那怎么办呢？</p><p>其实，真要做好丢包重传和拥塞控制是非常难的，一节课也讲述不清楚，所以，我们会在接下来的好几节课里详细解释。接下来我们可以先关注下丢包重传和拥塞控制的基础之一，也就是RTP协议的“好兄弟”，RTCP协议。</p><h2>RTCP协议</h2><p>RTCP（Real-time Transport Control Protocol）协议，全称是实时传输控制协议。它是辅助RTP协议使用的。RTCP报文有很多种，分别负责不同的功能。常用的报文有发送端报告（SR）、接收端报告（RR）、RTP反馈报告（RTPFB）等。而每一种报告的有效载荷都是不同的。我们就是通过这些报告在接收端和发送端传递当前统计的RTP包的传输情况的。我们使用这些统计信息来做丢包重传，以及预测带宽。</p><p>不过，我需要再次强调一下，<strong>RTCP协议只是用来传递RTP包的传输统计信息，本身不具有丢包重传和带宽预测的功能，</strong>而这些功能需要我们自己来实现。</p><p>我们上面讲到了RTCP协议有很多种报告，而每种报告其实定义的具体内容都是不一样的。我们这里以RTPFB报告中的NACK报告（丢包提示报告）作为一个例子来看看RTCP协议大概是什么样子的。（RTPFB报告包含了多种子报告，NACK报告只是其中的一种，因为我们后面还会用到这个报告，所以这里我们就先以这个报告为例子。）</p><p>下图就是NACK报告的协议格式。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/cf/8346b7d062d6e18c1700603a2dd1a5cf.jpg?wh=1280x434\" alt=\"\"><br>\n其中，每一个字段在下表中都有详细的解释。</p><p><img src=\"https://static001.geekbang.org/resource/image/c3/73/c3e2f8185a38c0746be0c0dbd6b52073.jpg?wh=1280x720\" alt=\"\"></p><p>从上面的NACK报告我们可以看到，RTCP协议跟RTP不同，它们传递的东西是不一样的。</p><p>我们知道RTP是用来传输实际的视频数据的。它就像一个快递盒，先装好视频，然后填好运送的视频基本信息和收件人信息，最后将视频运送到收件人手上。</p><p>而RTCP协议则像是一个用来统计快递运送情况的记录表。其中的NACK报告就是快递丢件情况的记录表。它记录着哪些快递丢了。发件人收到了NACK之后，可以重新寄一个同样的快递给收件人，防止收件人没有收到快递。在这里也就是将丢失的视频RTP包重传一遍。</p><p>虽然我们只讲了一种RTCP报告，但是其它的报告也是类似的。大多数报告都是用来记录传输信息的。因为数量很多，我们这里就不一一展开了。如果你有兴趣的话，可以查看这个<a href=\"https://datatracker.ietf.org/doc/html/rfc3550\">RFC文档</a>。</p><p>好了，通过学习RTP和RTCP的基础知识，我们了解了RTP包的协议格式和主要负责的功能，也知道了RTCP的协议格式和其主要承担的责任。接下来我们就进入实际工程部分的知识了。</p><p>我相信通过前面课程的学习，你对H264的码流结构已经较为熟悉了，H264是在工程中用得比较多的编码标准，所以这里我们以H264为例来讲讲实际工程开发中，我们怎么将H264码流打包成RTP包。</p><h2>H264 RTP打包</h2><p>我们前面说了，H264码流是放在RTP的有效载荷部分的。因此有效载荷前面的RTP头部跟码流本身是没有关系的，所以我们可以直接先将头部的字段填好就可以。接下来我们需要将H264码流填充到RTP有效载荷中去。</p><p><strong>RTP H264码流打包分为三种方式：分别是单NALU封包方式、组合封包方式、分片封包方式。</strong>顾名思义，单NALU封包方式是一个NALU打一个RTP包；而组合封包方式就是多个NALU打一个RTP包；分片封包方式则是一个NALU分开放在连续的多个RTP包中。下面我们来分别看一下各种打包方式是怎么样的。</p><p>1、单NALU封包方式</p><p>单NALU封包方式非常简单。我们在RTP头部的后面，直接放置NALU数据即可。注意，根据RTP的规定，这里需要<strong>将NALU数据前面的起始码去除</strong><strong>，</strong>不要将起始码也带入RTP包中。其格式如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/12/91/12961a82dca32ea3f1d760b4674fbf91.jpg?wh=1280x570\" alt=\"\"><br>\n为了让你更直观地理解这种打包方式，我给出了打包的示意图。具体如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/9b/3d4845a261ef2f7e0683d8a81522ab9b.jpg?wh=1280x504\" alt=\"\"><br>\n这种打包方式适合于单个RTP包小于1500字节（MTU大小）的时候。一般来说，一些P帧和B帧编码之后比较小，就可以使用这种打包方式。</p><p>2、组合封包方式</p><p>组合封包方式稍微复杂一些。它是将多个NALU放置在一个RTP包中。在RTP头部之后，且放置NALU数据之前，我们需要放置一个1字节的STAP-A的头部。其中，STAP-A Header跟NALU Header的格式是一样的，只是Type字段的值不一样。因此，你可以参考H264码流结构课程中NALU小节来理解STAP-A的头部的格式。具体如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/16/c2/16ec78c30e2760fab5a34a74524663c2.jpg?wh=1280x406\" alt=\"\"><br>\n其中，Type的取值如下表所示。这里我需要提醒你一下，表中的24和25类型就是STAP组合封包方式。注意，我们这里只讲STAP-A，这是因为STAP-B很少用到。</p><p><img src=\"https://static001.geekbang.org/resource/image/5a/a6/5a27c25b87c3fcb2be2a396f59ecb2a6.jpg?wh=1280x664\" alt=\"\"><br>\n放置完STAP-A Header之后，在每一个NALU的前面我们需要放置一个2字节的size字段，用于表示后面的NALU的大小。之后才是NALU的数据。记住同样需要<strong>去掉起始码</strong>。其格式如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/bb/c3/bb5498a2d629d5c754920d62d401c5c3.jpg?wh=1280x720\" alt=\"\"><br>\n同样地，为了让你更直观地理解这种打包方式，我也给出了打包的示意图。具体如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/9c/c8/9ceee0961afe0be20a20f663fbf932c8.jpg?wh=1280x454\" alt=\"\"></p><p>这种打包方式适合于单个NALU很小的时候。因此，我们将多个NALU打包到一起也小于1500字节的时候就可以使用。但是由于一般多个视频帧加到一起还小于1500的情况比较少，所以视频数据的RTP打包一般来说用组合封包方式的情况也很少。</p><p>3、分片封包方式</p><p>分片封包就更复杂一些了，但却是我们经常用到的打包方式。</p><p>它是将一个NALU分开打包在连续的多个RTP包中。因此，我们首先需要一个1字节的FU indicator来表示当前RTP包是不是分片封包方式，再用一个1字节的FU Header来表示当前这个RTP包是不是NALU的第一个包，是不是NALU的最后一个包，以及NALU的类型。</p><p>为什么需要表示是不是第一个包以及是不是最后一个包呢？这是因为一个NALU被分开放在多个RTP包中，我们需要知道哪个是第一个NALU分片，哪个是最后一个NALU分片，以及哪些是中间分片。这样我们才能组成一个完整的NALU。</p><p>那你可能会问，NALU不是已经在NALU Header中有了NALU Type字段吗？为什么FU Header中还要有NALU Type呢？这是因为分片封包时需要去掉NALU Header。因此，我们需要通过FU Header中的NALU Type得到NALU的类型。</p><p>其中，分片封装中的FU indicator跟NALU Header的格式也是一样的，也只是Type字段的值不同，所以我们可以参考组合封包小节中的表格。因为我们一般只使用FU-A，所以接下来讲述的将是FU-A的分片封包方式。另外，FU Header格式如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/d5/63/d50ff5960768966518f9dafdac33a463.jpg?wh=1280x402\" alt=\"\"><br>\n这里我简单解释一下各字段的含义：</p><ul>\n<li>S：起始位，占1bit，为1则表示是NALU的第一个RTP包。</li>\n<li>E：结束位，占1bit，为1则表示是NALU的最后一个RTP包。</li>\n<li>R：预留位，占1bit。</li>\n<li>Type：占5bits，表示NALU类型。<br>\n分片打包的格式如下：</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/e3/bd/e3590b35793907d565293bf592c514bd.jpg?wh=1280x560\" alt=\"\"><br>\n分片打包的示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/14/7b/1402a1e69a71d1d9dff7b4f40920907b.jpg?wh=1280x588\" alt=\"\"><br>\n这种打包方式主要用于将NALU数据打包成一个RTP包时大小大于1500字节的时候，这是经常使用的视频RTP打包方法。</p><p>好了，以上就是三种打包方式。我们怎么选择使用哪种方式打包呢？一般来说，我们在一个H264码流中会混合使用多种RTP打包方式。一般来说，对于小的P帧、B帧还有SPS、PPS我们可以使用单个NALU封包方式。而对于大的I帧、P帧或B帧，我们使用分片封包方式。当然，你可以根据实际情况进行选择。</p><h2>小结</h2><p>好了，以上就是这节课的主要内容。接下来我们来总结一下。</p><p>首先，我们一起讨论了RTP协议和RTCP协议的主要作用。RTP协议用来封装音视频数据，并且将音视频数据和一些基本信息打包到RTP包中传输到接收端。而RTCP协议则辅助RTP协议使用，其中一个主要的功能就是用来统计RTP包的发送情况，比如说丢包率和具体哪些RTP包在网络发送的过程中丢失了。RTCP包将这些信息收集起来发送给RTP包的发送端。</p><p>然后，我们说明了RTP和RTCP协议是带宽预测和拥塞控制的基础，并且重点强调了RTCP协议本身只统计信息，而带宽预测和拥塞控制算法是需要我们自己实现的，RTCP协议本身并没有这个功能。</p><p>最后，我们介绍了H264的RTP打包方式，总共有三种，分别是单NALU封包方式、组合封包方式和分片封包方式。</p><ul>\n<li>单NALU封包方式，一般适合NALU大小比较小，且打包出来的RTP大小小于1500字节的时候使用。</li>\n<li>组合封包方式，适合多个NALU都很小，且合并在一起打包的RTP包小于1500字节的时候使用。</li>\n<li>分片打包，则适合NALU比较大的情况，且打包成一个RTP包其大小会大于1500字节的时候使用。<br>\n这几种打包方式不是说只能选择一种，在一个RTP流中是可以存在多种打包方式的，即可以混合使用。</li>\n</ul><p>最后再一次强调，这节课和H264码流结构那节课都是非常重要的。它们在实际视频开发的过程中会经常用到，希望你可以熟练掌握。</p><h2>思考题</h2><p>为什么我们在选择RTP打包方式的时候，需要根据NALU大小是不是大于1500字节（MTU）来选择？</p><p>欢迎你在留言区和我分享你的思考和疑惑，你也可以把今天所学分享给身边的朋友，邀请他加入探讨，共同进步。下节课再见。</p>","neighbors":{"left":{"article_title":"08｜变换量化：如何减少视觉冗余？","id":464501},"right":{"article_title":"10｜带宽预测：3大算法准确预估网络带宽","id":467073}},"comments":[{"had_liked":false,"id":325697,"user_name":"狂奔的带刀蜗牛","can_delete":false,"product_type":"c1","uid":1063510,"ip_address":"","ucode":"75CC65C1B87EAC","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/56/96aa5869.jpg","comment_is_top":false,"comment_ctime":1639100865,"is_pvip":false,"replies":[{"id":"118428","content":"回答的很好","user_name":"作者回复","comment_id":325697,"uid":"2744713","ip_address":"","utype":1,"ctime":1639409187,"user_name_real":"编辑"}],"discussion_count":4,"race_medal":0,"score":"27408904641","product_id":100098901,"comment_content":"<br>不超过1500主要是因为Udp协议的MTU为1500，超过了会导致Udp分片传输，而分片的缺点是丢了一个片，整包数据就废弃了","like_count":7,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538471,"discussion_content":"回答的很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639409187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3029068,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/38/4c/d20f8abf.jpg","nickname":"颜","note":"","ucode":"94AD096D89A8C6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576498,"discussion_content":"UDP的MTU是1472吧，1500字节是链路层的MTU","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655608338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2615904,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ea/60/924c4fed.jpg","nickname":"方杰","note":"","ucode":"AD902ACC9A9B88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539137,"discussion_content":"MTU是IP层上的概念吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639620980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1898023,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","nickname":"术子米德","note":"","ucode":"382EA7E2AF0B56","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537765,"discussion_content":"Ethernet的典型MTU是1500字节，所以UDP在这种网络才是这个分片尺寸","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639180944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332116,"user_name":"我有一条鱼","can_delete":false,"product_type":"c1","uid":2143357,"ip_address":"","ucode":"9581A06A0EAF3B","user_header":"https://static001.geekbang.org/account/avatar/00/20/b4/7d/9455f31a.jpg","comment_is_top":false,"comment_ctime":1643027598,"is_pvip":true,"replies":[{"id":"122332","content":"像丢包率这种信息稍微丢一些问题不大，像NACK这种丢了有可能会造成重传慢了，是会有些影响。但一般只要不是非常大的丢包就没太大问题。一般不需要用TCP来传。","user_name":"作者回复","comment_id":332116,"uid":"2744713","ip_address":"","utype":1,"ctime":1645196749,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5937994894","product_id":100098901,"comment_content":"想问一下RTCP协议如果也是基于UDP协议的话，怎么保证统计信息是正确的呢？所以RTCP是不是应该具体TCP协议？","like_count":2,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551982,"discussion_content":"像丢包率这种信息稍微丢一些问题不大，像NACK这种丢了有可能会造成重传慢了，是会有些影响。但一般只要不是非常大的丢包就没太大问题。一般不需要用TCP来传。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645196749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1209653,"avatar":"https://static001.geekbang.org/account/avatar/00/12/75/35/a0c15ca8.jpg","nickname":"一頭蠻牛","note":"","ucode":"887E596A1DBF2D","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577175,"discussion_content":"好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655955346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328387,"user_name":"Geek_b8aa7b","can_delete":false,"product_type":"c1","uid":2866565,"ip_address":"","ucode":"AF744B7DCD62BA","user_header":"","comment_is_top":false,"comment_ctime":1640699039,"is_pvip":false,"replies":[{"id":"119810","content":"因为使用udp的话，你就需要自己实现拥塞控制等QOS的策略了。这个东西是很难的。rtmp用在直播领域，对实时性要求没有rtc高。","user_name":"作者回复","comment_id":328387,"uid":"2744713","ip_address":"","utype":1,"ctime":1640929351,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5935666335","product_id":100098901,"comment_content":"rtp和rtcp是基于udp的，上面也提到实时场景一般用udp，但为什么rtmp是基于tcp的，我看很多音视频传输是基于rtmp的，不是说tcp会延时嘛？","like_count":1,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543003,"discussion_content":"因为使用udp的话，你就需要自己实现拥塞控制等QOS的策略了。这个东西是很难的。rtmp用在直播领域，对实时性要求没有rtc高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640929351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325670,"user_name":"木希","can_delete":false,"product_type":"c1","uid":1961788,"ip_address":"","ucode":"C682F76A9824F6","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ef/3c/673826c1.jpg","comment_is_top":false,"comment_ctime":1639094579,"is_pvip":true,"replies":[{"id":"120353","content":"出发点是我觉得代码很多没有注释你很难看懂所以我想做一门课程让大家懂基本原理，之后看代码就会容易一些。这些原理在webrtc和ffmpeg 里面都有实现，只是光看代码很难看懂。我在想以后有时间我是不是可以直接讲讲里面的代码。可是最近太忙了。😭","user_name":"作者回复","comment_id":325670,"uid":"2744713","ip_address":"","utype":1,"ctime":1641893662,"user_name_real":"编辑"}],"discussion_count":5,"race_medal":0,"score":"5934061875","product_id":100098901,"comment_content":"江哥，您这课程介绍的视频技术原理性都很详细，可以很好的理解视频原理性的东西，后面是否会带上部分代码逻辑的实现，原理跟实现还是有很长的路。","like_count":1,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545283,"discussion_content":"出发点是我觉得代码很多没有注释你很难看懂所以我想做一门课程让大家懂基本原理，之后看代码就会容易一些。这些原理在webrtc和ffmpeg 里面都有实现，只是光看代码很难看懂。我在想以后有时间我是不是可以直接讲讲里面的代码。可是最近太忙了。😭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641893662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1471387,"avatar":"https://static001.geekbang.org/account/avatar/00/16/73/9b/67a38926.jpg","nickname":"keepgoing","note":"","ucode":"A2FE0687FB17E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":572668,"discussion_content":"李江老师能否有机会出一些系列课程讲解ffmpeg 和 webrtc的基本原理，的确说到了很多人的痛点，直接看代码很难看懂，并且对于整体代码结构掌握很困难，有一个好的老师带领的确能够事半功倍。如果可以有的话一定再来支持李江老师！另外请问李江老师有音视频交流的微信群可以加入交流吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652886378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545283,"ip_address":""},"score":572668,"extra":""},{"author":{"id":1960993,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJ4FhVnbLgPWLhpFEs3icl3p3qShEObhtIwviaSqPssHStFhYxADG5ib69Wz0sD7hwwiar52LsWJ9V9g/132","nickname":"吴成凯","note":"","ucode":"0149FD4D16115C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":575904,"discussion_content":"期待攻克视频技术 2 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655178080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545283,"ip_address":""},"score":575904,"extra":""}]},{"author":{"id":1898023,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","nickname":"术子米德","note":"","ucode":"382EA7E2AF0B56","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537766,"discussion_content":"这些开源代码都能找到，典型就是ffmpeg","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639181003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063510,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3a/56/96aa5869.jpg","nickname":"狂奔的带刀蜗牛","note":"","ucode":"75CC65C1B87EAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537545,"discussion_content":"不超过1500主要是因为Udp协议的MTU为1500，超过了会导致Udp分片传输，而分片的缺点是丢了一个片，整包数据就废弃了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639100825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350705,"user_name":"加油加油","can_delete":false,"product_type":"c1","uid":2032995,"ip_address":"","ucode":"4326347ED6E532","user_header":"https://static001.geekbang.org/account/avatar/00/1f/05/63/dd59ad18.jpg","comment_is_top":false,"comment_ctime":1657103563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657103563","product_id":100098901,"comment_content":"老师能补充讲讲     rtp&#47;rtsp    在tcp中的组织实现方式吗？","like_count":0},{"had_liked":false,"id":350598,"user_name":"加油加油","can_delete":false,"product_type":"c1","uid":2032995,"ip_address":"","ucode":"4326347ED6E532","user_header":"https://static001.geekbang.org/account/avatar/00/1f/05/63/dd59ad18.jpg","comment_is_top":false,"comment_ctime":1657029597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657029597","product_id":100098901,"comment_content":"rtsp header中的mark是不是也是表示当前帧数据的结束？","like_count":0},{"had_liked":false,"id":347823,"user_name":"龚长华","can_delete":false,"product_type":"c1","uid":2969046,"ip_address":"","ucode":"A710129E480788","user_header":"","comment_is_top":false,"comment_ctime":1654490557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654490557","product_id":100098901,"comment_content":"如果一个NALU的大小大于MTU （1500字节），那么这个NALU必须通过分片方式来封装其rtp包。","like_count":0},{"had_liked":false,"id":344083,"user_name":"accessory","can_delete":false,"product_type":"c1","uid":1455454,"ip_address":"","ucode":"988A99ACF03611","user_header":"https://static001.geekbang.org/account/avatar/00/16/35/5e/7a584fed.jpg","comment_is_top":false,"comment_ctime":1651225427,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1651225427","product_id":100098901,"comment_content":"请问，RTP 头中的 16 位 sequence number 起始值为什么是随机的？ 2 字节的能表示的范围是 [0, 2^16-1],超出这个范围后 sequence number 怎么处理，是从 0 重新开始，还是换一个随机数？","like_count":0,"discussions":[{"author":{"id":1513123,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKH4ILYLTcZjkl4lqZL6r4ZqPCic6IgPNByYccszEwhI0CU8SWW8g96gdIWiapw1RI6eYiagP10rXusA/132","nickname":"Geek_1760ca","note":"","ucode":"5D29BAB6ACDDF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572957,"discussion_content":"应该是从0开始，Facebook长时间视频通话的报文到了65535貌似就从0开始了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653104617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342666,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1650411512,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650411512","product_id":100098901,"comment_content":"预测帧经过编码后需要封装进RTP包才能发送，因为接收方要知道码流是使用哪种编码以及播放速度是多少等信息。RTP包没有丢包重传和拥塞控制，RTCP通过发送RTP记录来统计已接受包信息，用户可以根据这些信息来自己实现丢包重传。RTP也会根据码流大小采用单包或分片的格式来封装包。","like_count":0},{"had_liked":false,"id":338000,"user_name":"weekend","can_delete":false,"product_type":"c1","uid":2853514,"ip_address":"","ucode":"03EEAFC78B76B4","user_header":"https://static001.geekbang.org/account/avatar/00/2b/8a/8a/2aa0e992.jpg","comment_is_top":false,"comment_ctime":1647226924,"is_pvip":false,"replies":[{"id":"124414","content":"rtmp其实就是使用的flv的封装，并使用tcp传输。","user_name":"作者回复","comment_id":338000,"uid":"2744713","ip_address":"","utype":1,"ctime":1648687660,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1647226924","product_id":100098901,"comment_content":"好像没有讲RTMP相关的，RTMP的区别是什么","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559274,"discussion_content":"rtmp其实就是使用的flv的封装，并使用tcp传输。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648687660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334229,"user_name":"晓龙","can_delete":false,"product_type":"c1","uid":1004576,"ip_address":"","ucode":"78CDCEBD183D3A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/20/93c79f7c.jpg","comment_is_top":false,"comment_ctime":1644822604,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644822604","product_id":100098901,"comment_content":"记录下从视频从编码到传输分别经历了哪些格式：<br><br>一段视频 -&gt;由多个Frame组成（I，B，P）<br>一个Frame -&gt; 分为多个Slice<br>一个Slice -&gt; 由多个MB组成<br><br>编码：<br>Slice编码 -&gt; MB分析 -&gt; 熵编码 -&gt;封装NALU<br><br>传输：<br>NALU -&gt; 由一个或多个RTP包组装传输<br>","like_count":1},{"had_liked":false,"id":331957,"user_name":"Chris Zou","can_delete":false,"product_type":"c1","uid":1897148,"ip_address":"","ucode":"B6DFC71C1DD8B7","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f2/bc/ffc7ad67.jpg","comment_is_top":false,"comment_ctime":1642920443,"is_pvip":false,"replies":[{"id":"122333","content":"是的","user_name":"作者回复","comment_id":331957,"uid":"2744713","ip_address":"","utype":1,"ctime":1645196776,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1642920443","product_id":100098901,"comment_content":"老师，结合jitterbuffer那章来看，对于FU-A封包，一个NALU单元对应一个slice，一帧数据是有可能对应多个slice，也就是NALUT单元，每个slice都会有一次S起始位和E终止位？","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551983,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645196776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325998,"user_name":"王夏望","can_delete":false,"product_type":"c1","uid":1241588,"ip_address":"","ucode":"E878EC76576DC4","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/f4/707b7877.jpg","comment_is_top":false,"comment_ctime":1639300493,"is_pvip":false,"replies":[{"id":"118426","content":"实时采集的话不一定是固定的。比如有时帧率是变化的","user_name":"作者回复","comment_id":325998,"uid":"2744713","ip_address":"","utype":1,"ctime":1639409069,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"1639300493","product_id":100098901,"comment_content":"请问对于不同帧，rtp包中的timestamp的差值是固定的还是变化的？","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538469,"discussion_content":"实时采集的话不一定是固定的。比如有时帧率是变化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639409069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1897148,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f2/bc/ffc7ad67.jpg","nickname":"Chris Zou","note":"","ucode":"B6DFC71C1DD8B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547111,"discussion_content":"老师，RTP包中的这个时间戳是打包时候生成的时间戳吗？还是编码或者采集的时间戳？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642542540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}