{"id":83302,"title":"JavaScript执行（二）：闭包和执行上下文到底是怎么回事？","content":"<p>你好，我是winter。</p><p>在上一课，我们了解了JavaScript执行中最粗粒度的任务：传给引擎执行的代码段。并且，我们还根据“由JavaScript引擎发起”还是“由宿主发起”，分成了宏观任务和微观任务，接下来我们继续去看一看更细的执行粒度。</p><p>一段JavaScript代码可能会包含函数调用的相关内容，从今天开始，我们就用两节课的时间来了解一下函数的执行。</p><p>我们今天要讲的知识在网上有不同的名字，比较常见的可能有：</p><ul>\n<li>闭包；</li>\n<li>作用域链；</li>\n<li>执行上下文；</li>\n<li>this值。</li>\n</ul><p>实际上，尽管它们是表示不同的意思的术语，所指向的几乎是同一部分知识，那就是函数执行过程相关的知识。我们可以简单看一下图。</p><p><img src=\"https://static001.geekbang.org/resource/image/68/52/68f50c00d475a7d6d8c7eef6a91b2152.png?wh=745*481\" alt=\"\"></p><p>看着也许会有点晕，别着急，我会和你共同理一下它们之间的关系。</p><p>当然，除了让你理解函数执行过程的知识，理清这些概念也非常重要。所以我们先来讲讲这个有点复杂的概念：闭包。</p><h2>闭包</h2><p>闭包翻译自英文单词closure，这是个不太好翻译的词，在计算机领域，它就有三个完全不相同的意义：编译原理中，它是处理语法产生式的一个步骤；计算几何中，它表示包裹平面点集的凸多边形（翻译作凸包）；而在编程语言领域，它表示一种函数。</p><p>闭包这个概念第一次出现在1964年的《The Computer Journal》上，由P. J. Landin在《The mechanical evaluation of expressions》一文中提出了applicative expression和closure的概念。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/9b/0c/9b6c6693afe654b4cfdbf16852b82a0c.png?wh=1153*645\" alt=\"\"></p><p>在上世纪60年代，主流的编程语言是基于lambda演算的函数式编程语言，所以这个最初的闭包定义，使用了大量的函数式术语。一个不太精确的描述是“带有一系列信息的λ表达式”。对函数式语言而言，λ表达式其实就是函数。</p><p>我们可以这样简单理解一下，闭包其实只是一个绑定了执行环境的函数，这个函数并不是印在书本里的一条简单的表达式，闭包与普通函数的区别是，它携带了执行的环境，就像人在外星中需要自带吸氧的装备一样，这个函数也带有在程序中生存的环境。</p><p>这个古典的闭包定义中，闭包包含两个部分。</p><ul>\n<li>环境部分\n<ul>\n<li>环境</li>\n<li>标识符列表</li>\n</ul>\n</li>\n<li>表达式部分</li>\n</ul><p>当我们把视角放在JavaScript的标准中，我们发现，标准中并没有出现过closure这个术语，但是，我们却不难根据古典定义，在JavaScript中找到对应的闭包组成部分。</p><ul>\n<li>环境部分\n<ul>\n<li>环境：函数的词法环境（执行上下文的一部分）</li>\n<li>标识符列表：函数中用到的未声明的变量</li>\n</ul>\n</li>\n<li>表达式部分：函数体</li>\n</ul><p>至此，我们可以认为，JavaScript中的函数完全符合闭包的定义。它的环境部分是函数词法环境部分组成，它的标识符列表是函数中用到的未声明变量，它的表达式部分就是函数体。</p><p>这里我们容易产生一个常见的概念误区，有些人会把JavaScript执行上下文，或者作用域（Scope，ES3中规定的执行上下文的一部分）这个概念当作闭包。</p><p>实际上JavaScript中跟闭包对应的概念就是“函数”，可能是这个概念太过于普通，跟闭包看起来又没什么联系，所以大家才不自觉地把这个概念对应到了看起来更特别的“作用域”吧（其实我早年也是这么理解闭包，直到后来被朋友纠正，查了资料才改正过来）。</p><h3>执行上下文：执行的基础设施</h3><p>相比普通函数，JavaScript函数的主要复杂性来自于它携带的“环境部分”。当然，发展到今天的JavaScript，它所定义的环境部分，已经比当初经典的定义复杂了很多。</p><p>JavaScript中与闭包“环境部分”相对应的术语是“词法环境”，但是JavaScript函数比λ函数要复杂得多，我们还要处理this、变量声明、with等等一系列的复杂语法，λ函数中可没有这些东西，所以，在JavaScript的设计中，词法环境只是JavaScript执行上下文的一部分。</p><p>JavaScript标准把一段代码（包括函数），执行所需的所有信息定义为：“执行上下文”。</p><p>因为这部分术语经历了比较多的版本和社区的演绎，所以定义比较混乱，这里我们先来理一下JavaScript中的概念。</p><p><strong>执行上下文在ES3中</strong>，包含三个部分。</p><ul>\n<li>scope：作用域，也常常被叫做作用域链。</li>\n<li>variable object：变量对象，用于存储变量的对象。</li>\n<li>this value：this值。</li>\n</ul><p><strong>在ES5中</strong>，我们改进了命名方式，把执行上下文最初的三个部分改为下面这个样子。</p><ul>\n<li>lexical environment：词法环境，当获取变量时使用。</li>\n<li>variable environment：变量环境，当声明变量时使用。</li>\n<li>this value：this值。</li>\n</ul><p><strong>在ES2018中</strong>，执行上下文又变成了这个样子，this值被归入lexical environment，但是增加了不少内容。</p><ul>\n<li>lexical environment：词法环境，当获取变量或者this值时使用。</li>\n<li>variable environment：变量环境，当声明变量时使用。</li>\n<li>code evaluation state：用于恢复代码执行位置。</li>\n<li>Function：执行的任务是函数时使用，表示正在被执行的函数。</li>\n<li>ScriptOrModule：执行的任务是脚本或者模块时使用，表示正在被执行的代码。</li>\n<li>Realm：使用的基础库和内置对象实例。</li>\n<li>Generator：仅生成器上下文有这个属性，表示当前生成器。</li>\n</ul><p>我们在这里介绍执行上下文的各个版本定义，是考虑到你可能会从各种网上的文章中接触这些概念，如果不把它们理清楚，我们就很难分辨对错。如果是我们自己使用，我建议统一使用最新的ES2018中规定的术语定义。</p><p>尽管我们介绍了这些定义，但我并不打算按照JavaScript标准的思路，从实现的角度去介绍函数的执行过程，这是不容易被理解的。</p><p>我想试着从代码实例出发，跟你一起推导函数执行过程中需要哪些信息，它们又对应着执行上下文中的哪些部分。</p><p>比如，我们看以下的这段JavaScript代码：</p><pre><code>var b = {}\nlet c = 1\nthis.a = 2;\n</code></pre><p>要想正确执行它，我们需要知道以下信息：</p><ol>\n<li>var 把 b 声明到哪里；</li>\n<li>b 表示哪个变量；</li>\n<li>b 的原型是哪个对象；</li>\n<li>let 把 c 声明到哪里；</li>\n<li>this 指向哪个对象。</li>\n</ol><p>这些信息就需要执行上下文来给出了，这段代码出现在不同的位置，甚至在每次执行中，会关联到不同的执行上下文，所以，同样的代码会产生不一样的行为。</p><p>在这两篇文章中，我会基本覆盖执行上下文的组成部分，本篇我们先讲var声明与赋值，let，realm三个特性来分析上下文提供的信息，分析执行上下文中提供的信息。</p><h3>var 声明与赋值</h3><p>我们来分析一段代码：</p><pre><code>var b = 1\n</code></pre><p>通常我们认为它声明了b，并且为它赋值为1，var声明作用域函数执行的作用域。也就是说，var会穿透for 、if等语句。</p><p>在只有var，没有let的旧JavaScript时代，诞生了一个技巧，叫做：立即执行的函数表达式（IIFE），通过创建一个函数，并且立即执行，来构造一个新的域，从而控制var的范围。</p><p>由于语法规定了function关键字开头是函数声明，所以要想让函数变成函数表达式，我们必须得加点东西，最常见的做法是加括号。</p><pre><code>(function(){\n    var a;\n    //code\n}());\n\n\n(function(){\n    var a;\n    //code\n})();\n</code></pre><p>但是，括号有个缺点，那就是如果上一行代码不写分号，括号会被解释为上一行代码最末的函数调用，产生完全不符合预期，并且难以调试的行为，加号等运算符也有类似的问题。所以一些推荐不加分号的代码风格规范，会要求在括号前面加上分号。</p><pre><code>;(function(){\n    var a;\n    //code\n}())\n\n\n;(function(){\n    var a;\n    //code\n})()\n</code></pre><p>我比较推荐的写法是使用void关键字。也就是下面的这种形式。</p><pre><code>void function(){\n    var a;\n    //code\n}();\n</code></pre><p>这有效避免了语法问题，同时，语义上void运算表示忽略后面表达式的值，变成undefined，我们确实不关心IIFE的返回值，所以语义也更为合理。</p><p>值得特别注意的是，有时候var的特性会导致声明的变量和被赋值的变量是两个b，JavaScript中有特例，那就是使用with的时候：</p><pre><code>var b;\nvoid function(){\n    var env = {b:1};\n    b = 2;\n    console.log(&quot;In function b:&quot;, b);\n    with(env) {\n        var b = 3;\n        console.log(&quot;In with b:&quot;, b);\n    }\n}();\nconsole.log(&quot;Global b:&quot;, b);\n</code></pre><p>在这个例子中，我们利用立即执行的函数表达式（IIFE）构造了一个函数的执行环境，并且在里面使用了我们一开头的代码。</p><p>可以看到，在Global function with三个环境中，b的值都不一样，而在function环境中，并没有出现var b，这说明with内的var b作用到了function这个环境当中。</p><p>var b = {} 这样一句对两个域产生了作用，从语言的角度是个非常糟糕的设计，这也是一些人坚定地反对在任何场景下使用with的原因之一。</p><h3>let</h3><p>let是 ES6开始引入的新的变量声明模式，比起var的诸多弊病，let做了非常明确的梳理和规定。</p><p>为了实现let，JavaScript在运行时引入了块级作用域。也就是说，在let出现之前，JavaScript的 if for 等语句皆不产生作用域。</p><p>我简单统计了下，以下语句会产生let使用的作用域：</p><ul>\n<li>for；</li>\n<li>if；</li>\n<li>switch；</li>\n<li>try/catch/finally。</li>\n</ul><h3>Realm</h3><p>在最新的标准（9.0）中，JavaScript引入了一个新概念Realm，它的中文意思是“国度”“领域”“范围”。这个英文的用法就有点比喻的意思，几个翻译都不太适合JavaScript语境，所以这里就不翻译啦。</p><p>我们继续来看这段代码：</p><pre><code>var b = {}\n</code></pre><p>在 ES2016 之前的版本中，标准中甚少提及{}的原型问题。但在实际的前端开发中，通过iframe等方式创建多window环境并非罕见的操作，所以，这才促成了新概念Realm的引入。</p><p>Realm中包含一组完整的内置对象，而且是复制关系。</p><p>对不同Realm中的对象操作，会有一些需要格外注意的问题，比如 instanceOf 几乎是失效的。</p><p>以下代码展示了在浏览器环境中获取来自两个Realm的对象，它们跟本土的Object做instanceOf时会产生差异：</p><pre><code>var iframe = document.createElement('iframe')\ndocument.documentElement.appendChild(iframe)\niframe.src=&quot;javascript:var b = {};&quot;\n\nvar b1 = iframe.contentWindow.b;\nvar b2 = {};\n\nconsole.log(typeof b1, typeof b2); //object object\n\nconsole.log(b1 instanceof Object, b2 instanceof Object); //false true\n</code></pre><p>可以看到，由于b1、 b2由同样的代码“ {} ”在不同的Realm中执行，所以表现出了不同的行为。</p><h2>结语</h2><p>在今天的课程中，我帮你梳理了一些概念：有编程语言的概念闭包，也有各个版本中的JavaScript标准中的概念：执行上下文、作用域、this值等等。</p><p>之后我们又从代码的角度，分析了一些执行上下文中所需要的信息，并从<code>var</code>、<code>let</code>、对象字面量等语法中，推导出了词法作用域、变量作用域、Realm\b的设计。</p><p>最后留给你一个问题：你喜欢使用let还是var？听过今天的课程，你的想法是否有改变呢？为什么？</p><p></p>","neighbors":{"left":{"article_title":"JavaScript执行（一）：Promise里的代码为什么比setTimeout先执行？","id":82764},"right":{"article_title":"JavaScript执行（三）：你知道现在有多少种函数吗？","id":83719}},"comments":[{"had_liked":false,"id":70873,"user_name":"Geek_56013e","can_delete":false,"product_type":"c1","uid":1299160,"ip_address":"","ucode":"FF25787D443CC8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/eEBwOT9gbj3gRtD79LsFQUW0F0Pph3m3RoW0QL5O9fXogicG8xicciaj6qcpvbhwv3iapWe0R7iazDugMzK61v2GNNg/132","comment_is_top":false,"comment_ctime":1551199797,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1259976617525","product_id":100023201,"comment_content":"老师您的专业知识太强了，文中包含很多专业术语，在介绍某专业术语时带上了其他专业术语，而这些带上的专业术语部分在网上搜也是解释不清，导致很多地方看不懂、看起来比较费劲、只能猜测大意。比如对于「realm」的描述，只提了中文意思是“国度”“领域”“范围”和“包含一组完整的内置对象，而且是复制关系”，看完文章后，在js领域还是不清楚具体「realm」是什么含义，只能大概猜测。希望老师后续文章如果解释某专业术语时带上的其他专业术语时，能以日常常见代码为例解释。","like_count":294,"discussions":[{"author":{"id":1111903,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/5f/e4d58f7b.jpg","nickname":"Ryn","note":"","ucode":"C81A18608BB69F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567906,"discussion_content":"看着也是很是费劲，很多概念性的东西一闪而过，至于为什么这样，原因解释得也是很简略，像是结论性的，你记住就行了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1651025974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500269,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/HjZXA4OLm5H2sx8t7SHiccuYStuibLy94EsgpZQmrjSKtN0FM4Wqxj0TdxdmqwzODMnND6FUNMGwicGTicXMWE4WWw/132","nickname":"Geek_16783e","note":"","ucode":"39729218EDE17D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393934,"discussion_content":"这就是阿里味吧哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631667291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376746,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/ea/79065fca.jpg","nickname":"吉祥也是吉多","note":"","ucode":"05E5415541B34A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390194,"discussion_content":"https://stackoverflow.com/questions/49832187/how-to-understand-js-realms","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629709342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75212,"user_name":"James Bond","can_delete":false,"product_type":"c1","uid":1325483,"ip_address":"","ucode":"59BF615FD91159","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/ab/42622d70.jpg","comment_is_top":false,"comment_ctime":1552365180,"is_pvip":false,"discussion_count":23,"race_medal":0,"score":"761761576572","product_id":100023201,"comment_content":"说了半天闭包是什么呢？跟普通函数有什么区别呢！","like_count":178,"discussions":[{"author":{"id":1160107,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7iakTvMwXWBHCK6WicIV2M3yQMZ8BtBgYgzARcEjbEtcWfKsQ2JqpZianKibZ2D7l1D3rwyTOL56Pzw/132","nickname":"Jackchoumine","note":"","ucode":"B04B72E0D06FA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11544,"discussion_content":"说了半天，到底是什么没有说清楚。感觉一直在卖弄各种术语。","likes_number":36,"is_delete":false,"is_hidden":false,"ctime":1568390275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1046781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/fd/2c26fc52.jpg","nickname":"😳","note":"","ucode":"E91E08DEDDE3B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1160107,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7iakTvMwXWBHCK6WicIV2M3yQMZ8BtBgYgzARcEjbEtcWfKsQ2JqpZianKibZ2D7l1D3rwyTOL56Pzw/132","nickname":"Jackchoumine","note":"","ucode":"B04B72E0D06FA8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33438,"discussion_content":"闭包其实只是一个绑定了执行环境的函数","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1571123927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":11544,"ip_address":""},"score":33438,"extra":""},{"author":{"id":1378264,"avatar":"https://static001.geekbang.org/account/avatar/00/15/07/d8/636c1c04.jpg","nickname":"undefined","note":"","ucode":"814EEBBFE92A3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/fd/2c26fc52.jpg","nickname":"😳","note":"","ucode":"E91E08DEDDE3B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50486,"discussion_content":"我也是这么理解的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573726853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33438,"ip_address":""},"score":50486,"extra":""},{"author":{"id":1163321,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c0/39/16340f72.jpg","nickname":"zlxag","note":"","ucode":"136FB0201B64A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/fd/2c26fc52.jpg","nickname":"😳","note":"","ucode":"E91E08DEDDE3B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293919,"discussion_content":"你这不是老师的原话么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595729325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33438,"ip_address":""},"score":293919,"extra":""}]},{"author":{"id":1362023,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","nickname":"John Bull","note":"","ucode":"2A1B4191CD87B8","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49001,"discussion_content":"当函数可以记住并访问所在的词法作用域时，就产生了闭包。从广泛的角度说，普通函数就属于闭包，但这对于我们真正理解闭包毫无意义。真正的闭包应该是即使函数是在当前词法作用域之外执行，仍访问到函数内部属性，如：\nfunction foo () {\n    var a = 1;\n    function bar () {\n        console.log(a)\n    }\n   return bar\n}\nvar baz = foo()\nbaz() // 1","likes_number":23,"is_delete":false,"is_hidden":false,"ctime":1573546560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1468410,"avatar":"https://static001.geekbang.org/account/avatar/00/16/67/fa/720f57fa.jpg","nickname":"zer0fire","note":"","ucode":"F51772844B1534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1362023,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","nickname":"John Bull","note":"","ucode":"2A1B4191CD87B8","race_medal":5,"user_type":1,"is_pvip":true},"discussion":{"id":203291,"discussion_content":"是不是可以这么理解，当运行环境已经切出当前函数的词法作用域时，函数仍然可以访问到部分自己的执行环境，这个函数就是闭包，这么说可以吗？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1584021479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49001,"ip_address":""},"score":203291,"extra":""},{"author":{"id":1640477,"avatar":"https://static001.geekbang.org/account/avatar/00/19/08/1d/30b32c93.jpg","nickname":"路人丁","note":"","ucode":"078F0235DAFCA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1362023,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","nickname":"John Bull","note":"","ucode":"2A1B4191CD87B8","race_medal":5,"user_type":1,"is_pvip":true},"discussion":{"id":380076,"discussion_content":"比老师讲的好，至少闭包部分。这个老师的讲述方式有问题，很多问题都没有说明白，小白们就是各种崇拜，有啥用！","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1624329261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49001,"ip_address":""},"score":380076,"extra":""}]},{"author":{"id":1376366,"avatar":"https://static001.geekbang.org/account/avatar/00/15/00/6e/6982a56e.jpg","nickname":"WinfyHo","note":"","ucode":"1C1EBA315593A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202779,"discussion_content":"es6之前只有函数级作用域，函数执行完后会释放自己的执行环境。闭包就是一个函数中有子函数被保存到了外部。使得父函数的执行环境不被释放，被子函数拥有，这个子函数就形成了闭包","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1583942567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438506,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9Y45QovHzGatCRAIdAaCmWuQIZv88zdDeWsbR8w58FX34a4g5PPdna4f5phodeKDia2kWNR9mjJA/132","nickname":"Friday","note":"","ucode":"AAC10610CF848D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291166,"discussion_content":"老师废话太多","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1594721773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376366,"avatar":"https://static001.geekbang.org/account/avatar/00/15/00/6e/6982a56e.jpg","nickname":"WinfyHo","note":"","ucode":"1C1EBA315593A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202776,"discussion_content":"“ 我们可以这样简单理解一下，闭包其实只是一个绑定了执行环境的函数，这个函数并不是印在书本里的一条简单的表达式，闭包与普通函数的区别是，它携带了执行的环境，就像人在外星中需要自带吸氧的装备一样，这个函数也带有在程序中生存的环境。”","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1583942362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1391601,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3b/f1/80175915.jpg","nickname":"lstrive","note":"","ucode":"F0F232F85C0C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1376366,"avatar":"https://static001.geekbang.org/account/avatar/00/15/00/6e/6982a56e.jpg","nickname":"WinfyHo","note":"","ucode":"1C1EBA315593A8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303746,"discussion_content":"任何地方的函数不都是有自己的执行环境吗？即使是函数内的函数，也是有自己的执行环境的，那么普通函数也是闭包？可能我理解有差，在我的理解，闭包最大的特点就是跨作用域访问变量，一个函数中有另外一个函数，内部函数调用外部函数内的变量，那么，就形成了一个闭包。如果不调用外部函数的变量，但是return这个函数，那么其实这个函数还是携带了外部函数的作用域，那么应该也算是一个闭包。。。不知道我这样的理解是不是正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599368768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":202776,"ip_address":""},"score":303746,"extra":""},{"author":{"id":2124661,"avatar":"https://static001.geekbang.org/account/avatar/00/20/6b/75/4d45db54.jpg","nickname":"bunnyxt","note":"","ucode":"AF92F555DC2709","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1391601,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3b/f1/80175915.jpg","nickname":"lstrive","note":"","ucode":"F0F232F85C0C61","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339081,"discussion_content":"个人理解，如果外部函数返回的内部函数不会用到外部函数的变量，那么他的存在/执行就不需要携带外部函数的变量作为执行环境，就像人在一个有氧气的外星中不需要带吸氧装备一样，他不需要依赖外部函数的环境。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609497034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303746,"ip_address":""},"score":339081,"extra":""},{"author":{"id":1915533,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3a/8d/f5e7a20d.jpg","nickname":"何以解忧","note":"","ucode":"4DFE2BDBAF4919","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1391601,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3b/f1/80175915.jpg","nickname":"lstrive","note":"","ucode":"F0F232F85C0C61","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362611,"discussion_content":"实践中，函数内部定义的函数就是闭包函数，闭包函数对应的普通函数应该是定义的简单函数， 不依赖外部的变量的函数。严格来讲所有的js环境函数，都是闭包函数，因为可以访问到全局的变量","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616992210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303746,"ip_address":""},"score":362611,"extra":""}]},{"author":{"id":1146359,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7d/f7/2fe4c1a1.jpg","nickname":"洛河","note":"","ucode":"5CC7D1DA38FDF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5126,"discussion_content":"不是说了就是普通函数嘛，我的理解有问题嘛？","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1565966196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2973255,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/5e/47/c3e8a524.jpg","nickname":"家有饿犬","note":"","ucode":"3BAC268D143EE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1146359,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7d/f7/2fe4c1a1.jpg","nickname":"洛河","note":"","ucode":"5CC7D1DA38FDF9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572790,"discussion_content":"函数中嵌套一个子函数，这个子函数就是闭包","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652954988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5126,"ip_address":""},"score":572790,"extra":""}]},{"author":{"id":1237786,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e3/1a/7d571c39.jpg","nickname":"LiuJY","note":"","ucode":"EE5176AD2C23BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":176879,"discussion_content":"通常的解释是函数内部可以访问函数外部的变量就是闭包。但我绝对老师的解释更好，携带了执行环境的函数，更能贴切闭（函数）包（执行环境）这两个字","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1582044355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1832194,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/f5/02/d1a1f878.jpg","nickname":"买了就等于学了","note":"","ucode":"1FA56272783A53","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388120,"discussion_content":"讲了一大堆，完全不知道他的闭包是什么意思。我怀疑他自己的不清楚。还不如看阮一峰的 https://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1628600818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2563717,"avatar":"https://static001.geekbang.org/account/avatar/00/27/1e/85/23a511d1.jpg","nickname":"JsH","note":"","ucode":"5F63A27A0434C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1832194,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/f5/02/d1a1f878.jpg","nickname":"买了就等于学了","note":"","ucode":"1FA56272783A53","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549718,"discussion_content":"写的确实清晰","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644219116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":388120,"ip_address":""},"score":549718,"extra":""}]},{"author":{"id":1997806,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/7b/ee/53124b75.jpg","nickname":"东坡芝士","note":"","ucode":"FF267B7E865AD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320556,"discussion_content":"匿名函数，这个在众多语言中的解释比较形象。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1604397127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111903,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/5f/e4d58f7b.jpg","nickname":"Ryn","note":"","ucode":"C81A18608BB69F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567908,"discussion_content":"在 JavaScript 中，根据词法作用域的规则，内部函数总是可以访问其外部函数中声明的变量，当通过调用一个外部函数返回一个内部函数后，即使该外部函数已经执行结束了，但是内部函数引用外部函数的变量依然保存在内存中，我们就把这些变量的集合称为闭包。比如外部函数是 foo，那么这些变量的集合就称为 foo 函数的闭包。\n\n推荐去看李兵老师的《浏览器工作原理与实践》，这是我目前看过最简单易懂而且深刻的专栏","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1651026093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1647604,"avatar":"https://static001.geekbang.org/account/avatar/00/19/23/f4/95ae3dda.jpg","nickname":"Chousen","note":"","ucode":"F6E7B26F9A0544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567714,"discussion_content":"不是说了么，带环境的函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650980919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203567,"user_name":"wingsico","can_delete":false,"product_type":"c1","uid":1126631,"ip_address":"","ucode":"A91CB7B0497708","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/s0bx4WXQNkAJ3c3map0g6dlt3sKDgTtN7Ria96YoufjQcVVI8Shv5CN1jnK1ZTImNnlPcibRqvyiaUuhpIvV1TpnQ/132","comment_is_top":false,"comment_ctime":1586233937,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"233514467921","product_id":100023201,"comment_content":"在JS中，函数其实就是闭包，不管该函数内部是否使用外部变量，它都是一个闭包。如闭包定义的那样，由环境和表达式组成，作为js函数，环境为词法环境，而表达式就是函数本身。而词法环境是执行上下文的一部分，执行上下文包括 this 绑定, 词法环境和变量环境。词法环境是随着执行上下文一起创建的，在函数&#47;脚本&#47;eval执行时创建。<br><br>理解闭包，首先需要理解闭包是什么类型的东西，闭包实际上指的是函数，搞清楚问题的对象究竟是谁，而很多人会把环境&#47;作用域等其他的东西当做闭包，是对闭包的概念类型的错误理解。那么知道了闭包是函数，那么闭包应该是什么样的函数呢？也就是含有环境的函数，很明显，在js中，任何一个函数都有着自己的环境，这个环境让我们可以去找到定义的变量内部的this、外部作用域。<br><br>很多人认为，要让一个函数能去访问某个应该被回收的内存空间，但由于函数存在对该内存空间的变量的引用而不可回收，这样才形成了闭包。那么试问一下，这里你到底是把这个内存空间当做闭包呢？还是引用这块内存空间的函数当闭包呢？假如是前者，则和把环境当闭包的人犯了同样的错误，假如是后者，现在的这个函数实际上和你定义的普通函数本质上没有区别，都含有自己的环境，只不过这个函数的环境多了一些，但本质没有区别。理解了这点，你才能从上面的错误理解中解脱出来。","like_count":54,"discussions":[{"author":{"id":2884102,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/02/06/b2016157.jpg","nickname":"爸爸","note":"","ucode":"33F082B4AE7182","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545072,"discussion_content":"function haha() {\n    var haha1 = 1;\n    function haha1Seting() {\n        var setHaha1 = function () {\n            haha1++;\n        };\n        var getHaha1 = function () {\n            return haha1;\n        };\n        return {\n            getHaha1,\n            setHaha1,\n        };\n    }\n    return haha1Seting;\n}\n\nvar hahaSeting = haha()();\n\nhahaSeting.getHaha1() // 1\nhahaSeting.setHaha1() // 私有域内的值 +1\nhahaSeting.getHaha1() // 2\n\n我一直是这么理解闭包的： 创建一个私有域，暴露有限的方法给外部去使用，而且只能通过暴露的方法去修改这个私有域的值。  \n但这样，功能上跟下面的代码怕不是差不多  = = \nvoid (function () {\n    var haha1 = 1;\n    var haha = {\n        getHaha1:function () {\n            return haha;\n        },\n        setHah1:function () {\n            this.haha1++\n        }\n    }\n    window.haha = haha\n})();\n\n我现在陷入迷茫的地方就是，闭包这个东西，有什么用，什么时候该用 - -","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641819370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2801818,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/c0/9a/c2217ef2.jpg","nickname":"asdfghjkl","note":"","ucode":"6941A96865949B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414667,"discussion_content":"闭包明明是内部函数，引用外部函数变量的集合。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636854092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89988,"user_name":"_(:з」∠)_","can_delete":false,"product_type":"c1","uid":1387478,"ip_address":"","ucode":"B4A43EB418A604","user_header":"https://static001.geekbang.org/account/avatar/00/15/2b/d6/945f0d82.jpg","comment_is_top":false,"comment_ctime":1556358204,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"169060082748","product_id":100023201,"comment_content":"let 和 var 都不好用，98%的情况都是用 const","like_count":39,"discussions":[{"author":{"id":2716151,"avatar":"https://static001.geekbang.org/account/avatar/00/29/71/f7/a70c8cce.jpg","nickname":"二货仙人","note":"","ucode":"112F20FCAF5C6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386222,"discussion_content":"大量的const 会造成内存消耗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627476102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2054910,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5a/fe/3fada2bb.jpg","nickname":"permit","note":"","ucode":"081DE5CA35C98A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2716151,"avatar":"https://static001.geekbang.org/account/avatar/00/29/71/f7/a70c8cce.jpg","nickname":"二货仙人","note":"","ucode":"112F20FCAF5C6C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530657,"discussion_content":"你说反了吧\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637119428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":386222,"ip_address":""},"score":530657,"extra":"{\"user_type\":1}"}]},{"author":{"id":1669973,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7b/55/1a8c10f3.jpg","nickname":"前端1期-高雪荣","note":"","ucode":"F6168F6783F11D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254462,"discussion_content":"我也经常用const，哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588328799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4b/98/20ff3f6a.jpg","nickname":"这个需求做不了","note":"","ucode":"2BC0A306550D45","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584828,"discussion_content":"这么吊的吗 你的项目都不用改值的嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661149493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东"},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1039201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/db/61/406471c9.jpg","nickname":"晓折","note":"","ucode":"73AA0355F56528","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4b/98/20ff3f6a.jpg","nickname":"这个需求做不了","note":"","ucode":"2BC0A306550D45","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":589105,"discussion_content":"const 定义的值如果是引用对象的话, 你可以随便修改. \n你要了解, const 不能修改的是对象的指向","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664421600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":584828,"ip_address":"北京"},"score":589105,"extra":""}]},{"author":{"id":1961947,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ricKzCoviaZX5c3sGia38gWINUQVdPl7j2lSY5SDIKCpbWUItjrrv38yxdGmAwaShk7SlVCtk2uxiaCGkOqbB0gWgA/132","nickname":"Adrien","note":"","ucode":"703A2B5116ADD4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257602,"discussion_content":"主要是你并不会随便去改变变量的赋值\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588593728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71181,"user_name":"麦哲伦","can_delete":false,"product_type":"c1","uid":1382699,"ip_address":"","ucode":"14BAF6FE24CC6A","user_header":"https://static001.geekbang.org/account/avatar/00/15/19/2b/6337e969.jpg","comment_is_top":false,"comment_ctime":1551278596,"is_pvip":false,"replies":[{"id":"25929","content":"这个地方比较特殊，&quot;具有名称的函数表达式&quot;会在外层词法环境和它自己执行产生的词法环境之间产生一个词法环境，再把自己的名称和值当作变量塞进去，所以你这里的b = 20 并没有改变外面的b，而是试图改变一个只读的变量b。<br><br>这块知识有点偏，随便看看就好。","user_name":"作者回复","comment_id":71181,"uid":"1268524","ip_address":"","utype":1,"ctime":1551432898,"user_name_real":"winter"}],"discussion_count":10,"race_medal":0,"score":"134695264772","product_id":100023201,"comment_content":"老师能解释下这个么？<br>var b = 10;<br>(function b(){<br>b = 20;<br>console.log(b); &#47;&#47; [Function: b]<br>})();","like_count":31,"discussions":[{"author":{"id":1684882,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b5/92/ac0d4705.jpg","nickname":"geek_syk","note":"","ucode":"1CAA40765D1F23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39066,"discussion_content":"函数是第一公民，等级高，会覆盖之前的 b, 所以 b 是一个函数","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1571888234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1378345,"avatar":"https://static001.geekbang.org/account/avatar/00/15/08/29/e0a19ed5.jpg","nickname":"Yu","note":"","ucode":"1036F9AFED7A4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1684882,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b5/92/ac0d4705.jpg","nickname":"geek_syk","note":"","ucode":"1CAA40765D1F23","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226000,"discussion_content":"b=20怎么解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586413417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39066,"ip_address":""},"score":226000,"extra":""}]},{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441031,"discussion_content":"这个地方比较特殊，&amp;quot;具有名称的函数表达式&amp;quot;会在外层词法环境和它自己执行产生的词法环境之间产生一个词法环境，再把自己的名称和值当作变量塞进去，所以你这里的b = 20 并没有改变外面的b，而是试图改变一个只读的变量b。\n\n这块知识有点偏，随便看看就好。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1551432898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272789,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/d5/0e4b70a2.jpg","nickname":"Sean","note":"","ucode":"BC0715BF423613","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309188,"discussion_content":"在同一个作用域内，同名函数会覆盖变量；同名变量会被忽略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601211252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069772,"avatar":"https://static001.geekbang.org/account/avatar/00/10/52/cc/15e57326.jpg","nickname":"若如","note":"","ucode":"315D1560046129","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308691,"discussion_content":"为什么闭包内的b函数是只读的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601032368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276976,"discussion_content":"console.log(b); // [Function: b]此处打印出来的是这function 这个函数体啊，没明白老师的解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590977249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1887387,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Pv8ic2zJuG5QVwcRg7ENgqXs0VAx1NnYibm0CdPRVibDd7IXS2oOl7hkep1CzKafZiaCicaOw36BLq8nOxEqfPJoy1g/132","nickname":"闵常俊","note":"","ucode":"247881074287A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":287433,"discussion_content":"自执行函数的函数名恰巧也是b，console.log(b)打印的是这个函数，因为函数名是只读的，所以b=20这个赋值是无效的，最后打印出来的还是b这个函数体","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1593439570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":276976,"ip_address":""},"score":287433,"extra":""}]},{"author":{"id":1798660,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/72/04/eb5d6dec.jpg","nickname":"Kun","note":"","ucode":"A7EB2941AC8AB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129705,"discussion_content":"可以看看预编译的四个过程 https://blog.csdn.net/Bombas/article/details/80827756  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578729226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1378345,"avatar":"https://static001.geekbang.org/account/avatar/00/15/08/29/e0a19ed5.jpg","nickname":"Yu","note":"","ucode":"1036F9AFED7A4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1798660,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/72/04/eb5d6dec.jpg","nickname":"Kun","note":"","ucode":"A7EB2941AC8AB3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225998,"discussion_content":"并没有解释这个问题啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586413362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":129705,"ip_address":""},"score":225998,"extra":""}]},{"author":{"id":1381346,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJzmBzIeVHkjiaAd97rribW5vqOiaBZwGzFMZstfsjV8mGPWibeiaNROE6Rfmoyh4YPEIsoIAqyrTW5sEQ/132","nickname":"唧唧歪","note":"","ucode":"29E3747DCF9CA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8233,"discussion_content":"这不就是封闭空间吗\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567847205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76999,"user_name":"水瓶瓶盖盖","can_delete":false,"product_type":"c1","uid":1381894,"ip_address":"","ucode":"615D36D5798E24","user_header":"https://static001.geekbang.org/account/avatar/00/15/16/06/cffd605d.jpg","comment_is_top":false,"comment_ctime":1552799912,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"108926982312","product_id":100023201,"comment_content":"希望讲解能给通俗易懂一些。专业词汇太多，生涩","like_count":25,"discussions":[{"author":{"id":1163321,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c0/39/16340f72.jpg","nickname":"zlxag","note":"","ucode":"136FB0201B64A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293920,"discussion_content":"这是一本书，讲的是作者想讲的。看的人各取所需，你说的通俗易懂的经典书籍太多了！可能你的获取路径错了，这是重学前端。你可以看高程或者犀牛，或者忍者秘籍或者你不知道的JS 或者。。。。。了解了通俗易懂的再来重学前端将知识体系更标准化，去除一些杂碎和市面上认为的理解的概念。这样会更好。老师真的不想卖弄","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595729964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1804073,"avatar":"","nickname":"Geek_07edf6","note":"","ucode":"98F0A6ED3D3AC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132083,"discussion_content":"我也是这样觉得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578880915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1333425,"avatar":"https://static001.geekbang.org/account/avatar/00/14/58/b1/9369770b.jpg","nickname":"橘子哥","note":"","ucode":"F2E29FA8D219FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1804073,"avatar":"","nickname":"Geek_07edf6","note":"","ucode":"98F0A6ED3D3AC1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171864,"discussion_content":"我是碰到不会就去查，查明白了再回来看。和当初学习英语文章一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581753958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":132083,"ip_address":""},"score":171864,"extra":""},{"author":{"id":1389384,"avatar":"https://static001.geekbang.org/account/avatar/00/15/33/48/e9738f4f.jpg","nickname":"Niki爹","note":"","ucode":"EA092DA16BADDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1333425,"avatar":"https://static001.geekbang.org/account/avatar/00/14/58/b1/9369770b.jpg","nickname":"橘子哥","note":"","ucode":"F2E29FA8D219FC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329355,"discussion_content":"看这个文章我手边得备着高程书 然后随时查MDN才能勉强消化。。。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606370916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":171864,"ip_address":""},"score":329355,"extra":""}]}]},{"had_liked":false,"id":87975,"user_name":"K4SHIFZ","can_delete":false,"product_type":"c1","uid":1293057,"ip_address":"","ucode":"BFB49AAC0E4C74","user_header":"https://static001.geekbang.org/account/avatar/00/13/bb/01/568ac2d6.jpg","comment_is_top":false,"comment_ctime":1555774929,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"70275251665","product_id":100023201,"comment_content":"凡是{}包裹的代码都会产生let&#47;const作用域吧？除了文中提到的for等，还有while，do while，代码块等","like_count":16,"discussions":[{"author":{"id":1394238,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/3e/f9ae9462.jpg","nickname":"盖世英雄","note":"","ucode":"50CD6CCD4D8B76","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547065,"discussion_content":"就是块级作用域\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642513354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2716151,"avatar":"https://static001.geekbang.org/account/avatar/00/29/71/f7/a70c8cce.jpg","nickname":"二货仙人","note":"","ucode":"112F20FCAF5C6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386223,"discussion_content":"var bool = true;\nif(bool){\nvar num = 10;\n}\nconsole.log( num )","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627476341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1669973,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7b/55/1a8c10f3.jpg","nickname":"前端1期-高雪荣","note":"","ucode":"F6168F6783F11D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254463,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588328845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89357,"user_name":"Zach","can_delete":false,"product_type":"c1","uid":1469464,"ip_address":"","ucode":"8BA386AB756A56","user_header":"https://static001.geekbang.org/account/avatar/00/16/6c/18/850a0797.jpg","comment_is_top":false,"comment_ctime":1556158566,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"48800798822","product_id":100023201,"comment_content":"老师，关于realm最后一个示例<br><br>var iframe = document.createElement(&#39;iframe&#39;)<br>document.documentElement.appendChild(iframe)<br>iframe.src=&quot;javascript:var b = {};&quot;<br>var b1 = iframe.contentWindow.b;<br>var b2 = {};<br>console.log(typeof b1, typeof b2); &#47;&#47;object object<br>console.log(b1 instanceof Object, b2 instanceof Object); &#47;&#47;false true<br><br>应该有点问题，typeof b1 的结果在chrome和Firefox中都显示为 undefined object","like_count":11,"discussions":[{"author":{"id":1470104,"avatar":"https://static001.geekbang.org/account/avatar/00/16/6e/98/44e278ff.jpg","nickname":"dennisleung","note":"","ucode":"607B8F14A0545D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3986,"discussion_content":"我猜是浏览器安全策略升级了的原因，父frame无法直接获取子frame的内容了，把contentWindow log出来是能看到b:{}的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565023675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161349,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/85/27aa9f63.jpg","nickname":"CrazyMuyang","note":"","ucode":"C592928715EB9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421,"discussion_content":"```javascript\n  var iframe = document.createElement(&#39;iframe&#39;)\n  document.documentElement.appendChild(iframe)\n  iframe.src=&#34;alert(&#39;iframe&#39;)&#34;\n  alert(&#39;main window&#39;)\n```\n或许你可以通过这个找到原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561542027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102898,"user_name":"Geek_f51da4","can_delete":false,"product_type":"c1","uid":1522737,"ip_address":"","ucode":"2BF68DE0892EF3","user_header":"","comment_is_top":false,"comment_ctime":1560324010,"is_pvip":false,"replies":[{"id":"58947","content":"完全错了","user_name":"作者回复","comment_id":102898,"uid":"1268524","ip_address":"","utype":1,"ctime":1574222559,"user_name_real":"winter"}],"discussion_count":9,"race_medal":0,"score":"31625095082","product_id":100023201,"comment_content":"老师，闭包我是这样理解的，函数里边的函数，这样的理解对吗","like_count":7,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453638,"discussion_content":"完全错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574222559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1367048,"avatar":"https://static001.geekbang.org/account/avatar/00/14/dc/08/64f5ab52.jpg","nickname":"陈斌","note":"","ucode":"B639AB5F6AA03D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4435,"discussion_content":"错的，都说了闭包是与JavaScript的函数相对的，咋就是不听呢？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1565418398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1381744,"avatar":"https://static001.geekbang.org/account/avatar/00/15/15/70/3fa85df8.jpg","nickname":"Lt","note":"","ucode":"C706692C353D65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382164,"discussion_content":"一个一本正经的问，一个一本正经的回答😂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1625455076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1440591,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fb/4f/5d8e29a0.jpg","nickname":"hello world","note":"","ucode":"6ABC4EC88E733C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41807,"discussion_content":"内部函数访问了外部函数的变量","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572509516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2884102,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/02/06/b2016157.jpg","nickname":"爸爸","note":"","ucode":"33F082B4AE7182","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545068,"discussion_content":"主要是，我好像完全不知道闭包的使用场景在哪里，什么时候该用 - - ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641818513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2920167,"avatar":"","nickname":"红色1","note":"","ucode":"3A68114C8A66CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2884102,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/02/06/b2016157.jpg","nickname":"爸爸","note":"","ucode":"33F082B4AE7182","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":554267,"discussion_content":"闭包主要用来解决局部变量无法长期保存（函数运行结束函数作用域就被销毁了），全局变量污染命名空间。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646292350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545068,"ip_address":""},"score":554267,"extra":""}]},{"author":{"id":1765894,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/f2/06/ebb5b764.jpg","nickname":"NikkiZeng","note":"","ucode":"F669C811773394","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336764,"discussion_content":"函数里边的函数补充:当外层的函数内声明了变量,且外层函数执行完毕,退出执行栈,而内部的函数使用了外层函数的变量,这就会产生闭包\n\n因为内部的函数使用了外部函数中声明的变量,这些变量就还会在内存中,无论内部函数在哪里被调用了，除了内部函数可以访问到这些变量外,其他任何地方都是无法访问的\n\nfunction outer(){\n   var gift =&#34;outside&#34; \nfunction inner(){   \n  gift=&#34;inside&#34;  \n  return gift\n}\n  return inner\n}\n\n\n\nvar innter =outer()\n\nconsole.log(innter())","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608694492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1440591,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fb/4f/5d8e29a0.jpg","nickname":"hello world","note":"","ucode":"6ABC4EC88E733C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41808,"discussion_content":"并将这个外部函数的变量存储起来了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572509540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314538,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0e/ea/16291abc.jpg","nickname":"better man","note":"","ucode":"89E50F6762822F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3704,"discussion_content":"我也是这么理解的··","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564727281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70618,"user_name":"张祥儒","can_delete":false,"product_type":"c1","uid":1235656,"ip_address":"","ucode":"D66454D1E618C6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/lIN14g64kVO1Y8AC5hpKOrpTQiagL9O3zqbgmdDWO8V6FSOZd7ZhqH0v4AQHLy4OWjvMcP2WnUmt7AHzo4cHsLQ/132","comment_is_top":false,"comment_ctime":1551147578,"is_pvip":false,"replies":[{"id":"25917","content":"这是ES3里的解释法，现在已经解释不了很多语法了。","user_name":"作者回复","comment_id":70618,"uid":"1268524","ip_address":"","utype":1,"ctime":1551432001,"user_name_real":"winter"}],"discussion_count":2,"race_medal":0,"score":"31615918650","product_id":100023201,"comment_content":"winter大大，我觉得应该用global object，和active object 来解释这个闭包，作用域，执行器上下文。","like_count":7,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440731,"discussion_content":"这是ES3里的解释法，现在已经解释不了很多语法了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1551432001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374414,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/ce/495dfc91.jpg","nickname":"行云流水","note":"","ucode":"3CCE8B9902005A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":95658,"discussion_content":"哪些语法解释不了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577025544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85793,"user_name":"Geeker","can_delete":false,"product_type":"c1","uid":1032345,"ip_address":"","ucode":"9937127DE96D78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","comment_is_top":false,"comment_ctime":1555236186,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27325039962","product_id":100023201,"comment_content":"老师，可否稍加解释一下执行上下文的分类? 网络上的文章说“ JS 中可执行的代码可分为三种类型：全局代码、函数代码、eval 代码，对应三种执行上下文（全局执行上下文、函数执行上下文、eval 执行上下文），在 ECMAScript 2018 中没有找到这种说法的依据。我的意思是，我不太清楚这些文章的说法是否正确，是否不够全面。","like_count":6},{"had_liked":false,"id":70767,"user_name":"乃乎","can_delete":false,"product_type":"c1","uid":1393061,"ip_address":"","ucode":"03F587A06051AC","user_header":"https://static001.geekbang.org/account/avatar/00/15/41/a5/16c615cc.jpg","comment_is_top":false,"comment_ctime":1551178167,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27320981943","product_id":100023201,"comment_content":"更喜欢 const 哈哈","like_count":6,"discussions":[{"author":{"id":2148483,"avatar":"","nickname":"Geek_64271b","note":"","ucode":"893066AB510501","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301411,"discussion_content":"const 只能声明常量。如果用到变量的话就需要用let或者var","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598519276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255809,"user_name":"半橙汁","can_delete":false,"product_type":"c1","uid":1477902,"ip_address":"","ucode":"BB93BB9CCB7FA2","user_header":"https://static001.geekbang.org/account/avatar/00/16/8d/0e/5e97bbef.jpg","comment_is_top":false,"comment_ctime":1603435580,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23078272060","product_id":100023201,"comment_content":"闭包指的是那些引用了另一个函数作用域中变量的函数，通常是在嵌套函数中实现的。---高程4中的解释<br>好多问题，结合着书籍来看，就没那么晦涩难懂了~<br>书中自有黄金屋，书中自有颜如玉~","like_count":5},{"had_liked":false,"id":234789,"user_name":"Tokiomi","can_delete":false,"product_type":"c1","uid":1632052,"ip_address":"","ucode":"E2C0A59D1B1D4F","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/34/66289bd6.jpg","comment_is_top":false,"comment_ctime":1594795943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18774665127","product_id":100023201,"comment_content":"看晕了。。<br>http:&#47;&#47;www.ruanyifeng.com&#47;blog&#47;2009&#47;08&#47;learning_javascript_closures.html<br>阮一峰的闭包定义: <br>&quot;各种专业文献上的&quot;闭包&quot;（closure）定义非常抽象，很难看懂。我的理解是，闭包就是能够读取其他函数内部变量的函数。<br>由于在Javascript语言中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解成&quot;定义在一个函数内部的函数&quot;。<br>所以，在本质上，闭包就是将函数内部和函数外部连接起来的一座桥梁。&quot;<br>所以Winter大佬的定义和阮一峰的定义哪个对。。。","like_count":4},{"had_liked":false,"id":80185,"user_name":"比利利","can_delete":false,"product_type":"c1","uid":1439834,"ip_address":"","ucode":"2479D33B91BC5E","user_header":"","comment_is_top":false,"comment_ctime":1553614787,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18733483971","product_id":100023201,"comment_content":"我认为在目前的环境下，var已经没有存在的必要了，所有以前用var的情况都可以通过let和const代替，而且let和const更加符合大多数编程语言的习惯，而且现在有babel的话，写ES6语法也非常安全。","like_count":4,"discussions":[{"author":{"id":1163321,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c0/39/16340f72.jpg","nickname":"zlxag","note":"","ucode":"136FB0201B64A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293922,"discussion_content":"为了兼容吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595730139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1391888,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3d/10/ec31e6ac.jpg","nickname":"小胡子618","note":"","ucode":"B8354B3F467E4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303274,"discussion_content":"某些老旧项目或者政府部门的项目或许连babel都没用上呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599206478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79025,"user_name":"Snow同學","can_delete":false,"product_type":"c1","uid":1390875,"ip_address":"","ucode":"231E98C721E4D2","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/1b/bcabd223.jpg","comment_is_top":false,"comment_ctime":1553326160,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"18733195344","product_id":100023201,"comment_content":"函数就是闭包，这个理解对吗？","like_count":4,"discussions":[{"author":{"id":2148483,"avatar":"","nickname":"Geek_64271b","note":"","ucode":"893066AB510501","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301413,"discussion_content":"函数不是闭包，闭包是函数","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1598519627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2148483,"avatar":"","nickname":"Geek_64271b","note":"","ucode":"893066AB510501","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301414,"discussion_content":"闭包是能够读取其他函数内部变量的函数。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598519724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1362023,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","nickname":"John Bull","note":"","ucode":"2A1B4191CD87B8","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248392,"discussion_content":"对，但这样理解没有多大意义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587867242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/fd/2c26fc52.jpg","nickname":"😳","note":"","ucode":"E91E08DEDDE3B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33439,"discussion_content":"闭包其实只是一个绑定了执行环境的函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571124028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2956592,"avatar":"","nickname":"Geek_337ee8","note":"","ucode":"8F8F94EB2666EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/fd/2c26fc52.jpg","nickname":"😳","note":"","ucode":"E91E08DEDDE3B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563545,"discussion_content":"普通函数同样绑定了执行环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650021462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33439,"ip_address":""},"score":563545,"extra":""}]}]},{"had_liked":false,"id":70528,"user_name":"CC","can_delete":false,"product_type":"c1","uid":1021014,"ip_address":"","ucode":"2B732860C4231B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/56/4b8395f6.jpg","comment_is_top":false,"comment_ctime":1551120840,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18730990024","product_id":100023201,"comment_content":"今天是自己第一次结构性整理清楚 JavaScript 的函数部分。原来它除了函数体之外，还包括了函数所处的环境，而其中的词法环境，其实只是执行上下文七个部分中的的一支。<br><br>个人感觉 var 声明在不同的执行上下文中相对 let 更容易出错，同时也会增加冗余的临时变量。比如在 for loop 中，会遇到需要为不同的 loop 声明 i、j、k 变量。<br><br>代码不仅是写给机器看，也是写给同行看的。let 会使代码更加简洁易读。<br>","like_count":4},{"had_liked":false,"id":270752,"user_name":"疯羊先生","can_delete":false,"product_type":"c1","uid":1646242,"ip_address":"","ucode":"09F63E55DA492A","user_header":"https://static001.geekbang.org/account/avatar/00/19/1e/a2/083412c6.jpg","comment_is_top":false,"comment_ctime":1609237314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14494139202","product_id":100023201,"comment_content":"看完评论，我觉得闭包待分成广义的和狭义的了，简直了，婆说婆有理的感觉。。。广义--闭包就是函数函数就是闭包，狭义闭包就是引用另一个函数内部变量的函数。。。懵逼树上懵逼果，懵逼树下你和我","like_count":3},{"had_liked":false,"id":143295,"user_name":"beilunyang","can_delete":false,"product_type":"c1","uid":1161111,"ip_address":"","ucode":"280C989F887FA6","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/97/1f792153.jpg","comment_is_top":false,"comment_ctime":1571663621,"is_pvip":false,"replies":[{"id":"58902","content":"对，其实JS里任何函数都是闭包......","user_name":"作者回复","comment_id":143295,"uid":"1268524","ip_address":"","utype":1,"ctime":1574219633,"user_name_real":"winter"}],"discussion_count":1,"race_medal":0,"score":"14456565509","product_id":100023201,"comment_content":"闭包其实是一个绑定了执行环境的函数。<br>var foo = &#39;foo&#39;;<br>function printFoo() {<br>    console.log(foo);<br>}<br>printFoo();<br><br>所以printFoo这个函数是一个闭包，对吗","like_count":3,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471471,"discussion_content":"对，其实JS里任何函数都是闭包......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574219633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84950,"user_name":"霍光传不可不读","can_delete":false,"product_type":"c1","uid":1470825,"ip_address":"","ucode":"EA184C467399A6","user_header":"https://static001.geekbang.org/account/avatar/00/16/71/69/f7ae97c8.jpg","comment_is_top":false,"comment_ctime":1554948935,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"14439850823","product_id":100023201,"comment_content":"仔细看了下维基百科上面闭包的定义：闭包是一个record，它存储了一个函数和它的环境，这个环境存储了该函数的自由变量，js的函数完全符合这个定义，所以说js的函数其实就是闭包。倒是普通函数有点特别，我自己理解，这样的函数才是普通函数：<br>function(a, b) {<br>    const c = 10<br>    return a + b + c;<br>}<br>这个函数只访问了自己的函数作用域内部的变量和参数，这样的函数才是所谓的普通函数，不知道这样理解对不对？","like_count":3,"discussions":[{"author":{"id":2806749,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/d3/dd/2e6cb838.jpg","nickname":"幻云风","note":"","ucode":"6016C90CEA8B44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583845,"discussion_content":"你想想你在函数中为啥能调用console，这不就是闭包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660442479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441374,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fe/5e/814e74db.jpg","nickname":"刘程","note":"","ucode":"7B36843AE73E4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24675,"discussion_content":"闭包的原理，跟js的垃圾回收机制是密切相关的，你可以看看垃圾回收的具体概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570242567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441374,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fe/5e/814e74db.jpg","nickname":"刘程","note":"","ucode":"7B36843AE73E4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24672,"discussion_content":"应该不对，你返回的是一个具体计算好的值，函数结束后，函数内部变量已经被回收","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570242393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1347469,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8f/8d/5b82d3f7.jpg","nickname":"小细胞","note":"","ucode":"576E429FE658C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1441374,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fe/5e/814e74db.jpg","nickname":"刘程","note":"","ucode":"7B36843AE73E4F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61098,"discussion_content":"所以他说这是普通函数而不是闭包，说的是对的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574772822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24672,"ip_address":""},"score":61098,"extra":""},{"author":{"id":1994869,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/70/75/421516b6.jpg","nickname":"Uen","note":"","ucode":"9F436AD665C8F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1441374,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fe/5e/814e74db.jpg","nickname":"刘程","note":"","ucode":"7B36843AE73E4F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557811,"discussion_content":"所以他说这是普通函数，是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647962920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24672,"ip_address":""},"score":557811,"extra":""}]}]},{"had_liked":false,"id":91040,"user_name":"Ron","can_delete":false,"product_type":"c1","uid":1482073,"ip_address":"","ucode":"A8EC4E4D85CAE6","user_header":"https://static001.geekbang.org/account/avatar/00/16/9d/59/1c084632.jpg","comment_is_top":false,"comment_ctime":1556815328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10146749920","product_id":100023201,"comment_content":"很少见到用void写IIFE，感觉大多时候我们还是需要引用IIFE返回的东西，可以参考一下https:&#47;&#47;developer.mozilla.org&#47;en-US&#47;docs&#47;Glossary&#47;IIFE","like_count":2},{"had_liked":false,"id":82438,"user_name":"木棉","can_delete":false,"product_type":"c1","uid":1084629,"ip_address":"","ucode":"8A637B7435BF24","user_header":"https://static001.geekbang.org/account/avatar/00/10/8c/d5/398b31fe.jpg","comment_is_top":false,"comment_ctime":1554213301,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10144147893","product_id":100023201,"comment_content":"var b;<br>            void function(){<br>                var env = {b:1};<br>                b=2;<br>                console.log(b);<br>                with(env){<br>                    var b=3;<br>                    console.log(b);<br>                }<br>            }();<br>            console.log(b);<br>这块的执行结果是：2，3，undefined，不懂为什么，希望老是可以详细解答一下。<br>作用域这块的内容经常被问到，尤其是面试的时候做题，变量提升，闭包，立即执行的函数表达式等不同情况不同输出结果，总是各种被绕晕，希望老师可以帮忙梳理一下，谢谢","like_count":2,"discussions":[{"author":{"id":1359476,"avatar":"https://static001.geekbang.org/account/avatar/00/14/be/74/0d900ed9.jpg","nickname":"Tristan","note":"","ucode":"DC454E16AAA66A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306056,"discussion_content":"预编译阶段的四部曲----1.创建AO对象（就是执行期上下文，也叫作用域链）----2.变量声明提升，把形参和变量名作为AO对象的属性名，值为undefined-----3.实参形参相统一 -------4.函数声明整体提升，函数名作为变量名，值为函数体（函数名与变量名相同则覆盖）。你按照这个理解去看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600157594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75470,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1552401954,"is_pvip":true,"discussion_count":5,"race_medal":1,"score":"10142336546","product_id":100023201,"comment_content":"老师 我这有个问题：对于这段代码；<br>var b;<br>void function(){<br>    var env = {b:1};<br>    b = 2;<br>    console.log(&quot;In function start b:&quot;, b);<br>    with(env) {<br>        var b = 3;<br>        console.log(&quot;In with b:&quot;, b);<br>    }<br>\tconsole.log(&quot;In function end b:&quot;, b);<br>}();<br>console.log(&quot;Global b:&quot;, b);<br><br>打印结果是这样的：<br>In function start b: 2<br>In with b: 3<br>In function end b: 2<br>Global b: 10<br><br>不知道是怎得出老师文章中结论的，我看下面有好多评论也是这样的疑问，麻烦老师解答一下呢","like_count":2,"discussions":[{"author":{"id":1645213,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/9d/58e368bb.jpg","nickname":"柱子","note":"","ucode":"916517D331922D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209134,"discussion_content":"应该是你在执行这段代码，执行了其他类似 var b=10的代码，全局变量污染问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584613439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1646242,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1e/a2/083412c6.jpg","nickname":"疯羊先生","note":"","ucode":"09F63E55DA492A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338322,"discussion_content":"10就有点扯了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609238220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2148483,"avatar":"","nickname":"Geek_64271b","note":"","ucode":"893066AB510501","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301416,"discussion_content":"楼上说的对。刷新下浏览器再试试应该就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598519857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485706,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ab/8a/e1a8b835.jpg","nickname":"窗外明月","note":"","ucode":"D4C0BA5CC496CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194418,"discussion_content":"global b不是undefined吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583216610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1684249,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/19/0083394e.jpg","nickname":"培根熏肉","note":"","ucode":"AADD6D87738432","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30554,"discussion_content":"天哪，为啥会有个10？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570842478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289432,"user_name":"休文","can_delete":false,"product_type":"c1","uid":1378933,"ip_address":"","ucode":"5E1AB985B93A22","user_header":"https://static001.geekbang.org/account/avatar/00/15/0a/75/d74bdd3d.jpg","comment_is_top":false,"comment_ctime":1619009357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5913976653","product_id":100023201,"comment_content":"关于VariableEnvironment和LexicalEnvironment，看了一下标准里的说法（https:&#47;&#47;262.ecma-international.org&#47;11.0&#47;#sec-execution-contexts）：<br>- LexicalEnvironment： Identifies the Lexical Environment used to resolve identifier references made by code within this execution context.<br>- VariableEnvironment： Identifies the Lexical Environment whose EnvironmentRecord holds bindings created by VariableStatements within this execution context.<br>- The LexicalEnvironment and VariableEnvironment components of an execution context are always Lexical Environments.<br><br>我的理解是：<br>1. VariableEnvironment持有var声明的变量<br>2. LexicalEnvironment持有let、const等声明的变量<br>3. VariableEnvironment和LexicalEnvironment都是Lexical Environments类型的对象。（Lexical Environments和LexicalEnvironment不是一回事）<br><br>但是关于老师讲的：“LexicalEnvironment获取变量时使用，VariableEnvironment声明变量时使用”。还是不太理解。想问一下这个说法在标准里的依据是哪里？可以再深入解读一下吗？<br><br>感谢。","like_count":1},{"had_liked":false,"id":276688,"user_name":"Adam Lau","can_delete":false,"product_type":"c1","uid":1266698,"ip_address":"","ucode":"7E542D6E789500","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","comment_is_top":false,"comment_ctime":1612078309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5907045605","product_id":100023201,"comment_content":"这篇看了很多遍了，从糊涂到清晰又到糊涂，目前闭包清楚了，但是怎么话锋一转就到了var&#47;let作用域。这个域和函数执行上下文是什么关系？函数执行上下文是只有函数调用才发生切换吧，同一个函数内不同的块作用域与函数上下文是什么关系呢？","like_count":1},{"had_liked":false,"id":250935,"user_name":"x","can_delete":false,"product_type":"c1","uid":1472233,"ip_address":"","ucode":"75FA829EA820AB","user_header":"https://static001.geekbang.org/account/avatar/00/16/76/e9/73ed6cc1.jpg","comment_is_top":false,"comment_ctime":1601284713,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"5896252009","product_id":100023201,"comment_content":"看了另一位老师的浏览器知识，再回来看闭包的时候发现豁然贯通。果然学习一些基础知识对于学习一门语言挺有帮助的","like_count":1,"discussions":[{"author":{"id":1382731,"avatar":"https://static001.geekbang.org/account/avatar/00/15/19/4b/c30b6362.jpg","nickname":"周伟","note":"","ucode":"BE5DA105390106","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392622,"discussion_content":"另一位老师的浏览器知识是什么，问下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631074182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1508809,"avatar":"https://static001.geekbang.org/account/avatar/00/17/05/c9/637ca6a6.jpg","nickname":"空空Ryan","note":"","ucode":"37146A69CF5434","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1382731,"avatar":"https://static001.geekbang.org/account/avatar/00/15/19/4b/c30b6362.jpg","nickname":"周伟","note":"","ucode":"BE5DA105390106","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550332,"discussion_content":"我猜是李兵老师的《浏览器工作原理与实践》，讲得特别棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644485908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392622,"ip_address":""},"score":550332,"extra":""}]}]},{"had_liked":false,"id":245554,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1598975410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893942706","product_id":100023201,"comment_content":"结合本课的学习，讲讲个人感受，毕竟曾经也对闭包这概念困惑许久。<br>先想想，一个普通的函数其实就是一个表达式，比如中学学过的函数表达式。<br>而js的函数可以跳过使用函数的参数列表来把参数传递进函数内部，这就是函数的词法环境。所以说，js的函数就是闭包。<br>其实退一步讲，即使对闭包的理解不清晰也并不妨碍平常的使用，只需要记住借助闭包的特性，可以保存私有属性即可，例如：<br>function demo(){<br>  let x = 0;  &#47;&#47; 私有属性，在demo函数外部不能访问<br>  return {<br>    increment: () =&gt; x++  &#47;&#47; 函数表达式，实现计算逻辑<br>  }<br>}<br>let obj = demo(); &#47;&#47; 获得操作对象<br>obj.increment(); &#47;&#47; 调用计算表达式","like_count":1},{"had_liked":false,"id":235501,"user_name":"水木年华","can_delete":false,"product_type":"c1","uid":1388735,"ip_address":"","ucode":"A7E8145A553511","user_header":"https://static001.geekbang.org/account/avatar/00/15/30/bf/cacee340.jpg","comment_is_top":false,"comment_ctime":1595064913,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5890032209","product_id":100023201,"comment_content":"<br>var iframe = document.createElement(&#39;iframe&#39;)<br>document.documentElement.appendChild(iframe)<br>iframe.src=&quot;javascript:var b = {};&quot;<br><br>var b1 = iframe.contentWindow.b;<br>var b2 = {};<br><br>console.log(typeof b1, typeof b2); &#47;&#47;undefined object<br><br>console.log(b1 instanceof Object, b2 instanceof Object); &#47;&#47;false true<br>我运行上边代码是出现的是console.log(typeof b1, typeof b2); &#47;&#47;undefined object 和老师你的出现的不太一样 能解释一下为什么吗<br>","like_count":1,"discussions":[{"author":{"id":2188098,"avatar":"https://static001.geekbang.org/account/avatar/00/21/63/42/31e0cb29.jpg","nickname":"ywding","note":"","ucode":"17FA8552026B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311899,"discussion_content":"不要直接粘贴执行，等iframe创建好了再去获取b1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602515559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234443,"user_name":"小邓","can_delete":false,"product_type":"c1","uid":1451779,"ip_address":"","ucode":"AFA0F6244BC015","user_header":"https://static001.geekbang.org/account/avatar/00/16/27/03/ff1cac7d.jpg","comment_is_top":false,"comment_ctime":1594693533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5889660829","product_id":100023201,"comment_content":"老师  为啥会是这样的结果？<br><br>{ <br>function foo() {} <br>foo = 1; <br>} <br>console.log(foo);&#47;&#47;foo()","like_count":1},{"had_liked":false,"id":234442,"user_name":"小邓","can_delete":false,"product_type":"c1","uid":1451779,"ip_address":"","ucode":"AFA0F6244BC015","user_header":"https://static001.geekbang.org/account/avatar/00/16/27/03/ff1cac7d.jpg","comment_is_top":false,"comment_ctime":1594693387,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5889660683","product_id":100023201,"comment_content":"{ <br>   function foo() {} <br>   foo = 1; <br>} <br>console.log(foo);&#47;&#47;foo()    <br><br><br>{<br>    foo =1<br>    function foo() {}<br>} <br>console.log(foo);&#47;&#47; 1<br><br><br>为啥是这个结果？<br>","like_count":1},{"had_liked":false,"id":192282,"user_name":"站着瞌睡","can_delete":false,"product_type":"c1","uid":1169586,"ip_address":"","ucode":"55914C1DB5B873","user_header":"https://static001.geekbang.org/account/avatar/00/11/d8/b2/030ced3d.jpg","comment_is_top":false,"comment_ctime":1584845098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879812394","product_id":100023201,"comment_content":"1.粗略的理解，老师说的闭包就是函数，在自己的执行环境执行完函数体的语句，是这样？<br>2.网上有一种理解，所谓闭包就是在函数外部访问函数内部的局部变量，就是所谓函数中的函数，就是函数执行完，内部变量不释放，通过return一个函数达到访问局部变量的目的<br>不知道老师您的看法<br>","like_count":1},{"had_liked":false,"id":160904,"user_name":"宅神king","can_delete":false,"product_type":"c1","uid":1382676,"ip_address":"","ucode":"9BFE977278D9F2","user_header":"https://static001.geekbang.org/account/avatar/00/15/19/14/71cfa677.jpg","comment_is_top":false,"comment_ctime":1576058661,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5871025957","product_id":100023201,"comment_content":"如果内层函数没有调用外层函数的变量， 那它还能被称做闭包吗？<br><br>function a(){<br>  var name=&#39;a&#39;;<br>  function b(){<br>    console.log(&#39;没有调用&#39;)<br>  }<br>}<br>","like_count":1,"discussions":[{"author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276977,"discussion_content":"不算，里面的函数无法在外部执行和调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590977637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133569,"user_name":"海绵薇薇","can_delete":false,"product_type":"c1","uid":1601296,"ip_address":"","ucode":"37C7CC2EB81909","user_header":"https://static001.geekbang.org/account/avatar/00/18/6f/10/bfbf81dc.jpg","comment_is_top":false,"comment_ctime":1568610026,"is_pvip":false,"replies":[{"id":"54038","content":"执行上下文是词法作用域的一种实现方式，但不是唯一的实现方式，你要彻底搞清楚这些概念的意思，不要混在一起理解。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1570772758,"ip_address":"","comment_id":133569,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863577322","product_id":100023201,"comment_content":"老师您好，对于 --- JavaScript 中跟闭包对应的概念就是“函数” 这句话我还是理解不够。<br>说是闭包和执行上下文没关系，但是词法作用域，不就和执行上下文相关吗？用到的标识符在作用域链上，作用域链不是在执行上下文里吗？","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467430,"discussion_content":"执行上下文是词法作用域的一种实现方式，但不是唯一的实现方式，你要彻底搞清楚这些概念的意思，不要混在一起理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570772758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129605,"user_name":"陈斌","can_delete":false,"product_type":"c1","uid":1367048,"ip_address":"","ucode":"B639AB5F6AA03D","user_header":"https://static001.geekbang.org/account/avatar/00/14/dc/08/64f5ab52.jpg","comment_is_top":false,"comment_ctime":1567170652,"is_pvip":true,"replies":[{"id":"54047","content":"这个概念在标准中有过版本变化，所以以最新标准为准。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1570773234,"ip_address":"","comment_id":129605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862137948","product_id":100023201,"comment_content":"我查看另一篇博客资料：<br>执行上下文同时包含变量环境组件（VariableEnvironment）和词法环境组件（LexicalEnvironment），这两个组件多数情况下都指向相同的词法环境（Lexical Environment）。<br>一般情况下一个执行上下文内的Variable Environment和Lexical Environment指向同一个词法环境，之所以要区分两个组件，主要是为了实现块级作用域的同时不影响var声明及函数声明。<br>和老师您如下介绍的是否有点冲突？<br>lexical environment：词法环境，当获取变量或者 this 值时使用。<br>variable environment：变量环境，当声明变量时使用。<br>我觉得我看了上面的博客之后，理解不了您的意思了？","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465564,"discussion_content":"这个概念在标准中有过版本变化，所以以最新标准为准。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570773234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122336,"user_name":"🔅fighting🔅","can_delete":false,"product_type":"c1","uid":1392692,"ip_address":"","ucode":"5BFE5528B9E9A1","user_header":"https://static001.geekbang.org/account/avatar/00/15/40/34/6b524aee.jpg","comment_is_top":false,"comment_ctime":1565342252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5860309548","product_id":100023201,"comment_content":"我比较喜欢用let，let有自己的块状作用域，不存在变量升级的问题","like_count":1},{"had_liked":false,"id":114557,"user_name":"Cool","can_delete":false,"product_type":"c1","uid":1375032,"ip_address":"","ucode":"B1BC9DB17F54C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/fb/38/65a06b90.jpg","comment_is_top":false,"comment_ctime":1563334904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858302200","product_id":100023201,"comment_content":"var iframe = document.createElement(&#39;iframe&#39;)<br>document.documentElement.appendChild(iframe)<br>iframe.src=&quot;javascript:var b = {};&quot;<br><br>var b1 = iframe.contentWindow.b;<br>var b2 = {};<br>console.log(typeof b1, typeof b2); &#47;&#47;object object &#47;&#47; 这是错误的<br>console.log(typeof b1, typeof b2); &#47;&#47;undefined object &#47;&#47; 下面是正确的 undefined 肯定查找不到原型链<br><br>console.log(b1 instanceof Object, b2 instanceof Object); &#47;&#47;false true","like_count":1},{"had_liked":false,"id":107834,"user_name":"龙眼","can_delete":false,"product_type":"c1","uid":1383962,"ip_address":"","ucode":"8549009E822429","user_header":"https://static001.geekbang.org/account/avatar/00/15/1e/1a/e748832f.jpg","comment_is_top":false,"comment_ctime":1561619862,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856587158","product_id":100023201,"comment_content":"已经很少用var了，就是基本不用","like_count":1},{"had_liked":false,"id":95650,"user_name":"ethan","can_delete":false,"product_type":"c1","uid":1150011,"ip_address":"","ucode":"CE7007B18912EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLt51Sq1c4aicPJoD8cZ1w5LibHj1fK0CaBJDG9HroeKpSy4gKrZnmv7ZibCDeXnuphCHZ45V349fjAA/132","comment_is_top":false,"comment_ctime":1558112744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853080040","product_id":100023201,"comment_content":"winter大大，请教一下，这个是不是跟上面评论的差不多的，也是有一个单独的词法环境，然后变量也是只读的呢？<br>(function fn (b=3) {<br>console.log(b)<br>function b() {}<br>console.log(b)<br>var b = &#39;1&#39;;<br>})()<br><br>那跟下面这种又有什么区别呢<br>(function fn (b=3) {<br>console.log(b)<br>var b = function b() {}<br>console.log(b)<br>var b = &#39;1&#39;;<br>})()","like_count":1},{"had_liked":false,"id":84723,"user_name":"谷鱼","can_delete":false,"product_type":"c1","uid":1004052,"ip_address":"","ucode":"F22DB0C0269829","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/14/397145a4.jpg","comment_is_top":false,"comment_ctime":1554898688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5849865984","product_id":100023201,"comment_content":"我一般都会更多使用let作用于每一块函数，或者业务逻辑，var一般除非是一些全局不变的，会单独放一个文件来引用","like_count":1},{"had_liked":false,"id":79040,"user_name":"psaren","can_delete":false,"product_type":"c1","uid":1471497,"ip_address":"","ucode":"E1764DA7BBDB70","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Ab0qA9O310giaLldWw1ibsD8tMNIHzspD0rHYqFkkFodK89zdOgfymSttqBfibM5N3u3Gf6G3unibicKyy96Z2JM1cA/132","comment_is_top":false,"comment_ctime":1553329732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848297028","product_id":100023201,"comment_content":"请教 winter 大大，直接看ECMA最新版太吃力了，专业名词太多，应该怎么解决","like_count":1},{"had_liked":false,"id":73012,"user_name":"janus","can_delete":false,"product_type":"c1","uid":1376600,"ip_address":"","ucode":"CE08813BA499B6","user_header":"https://static001.geekbang.org/account/avatar/00/15/01/58/442114f2.jpg","comment_is_top":false,"comment_ctime":1551776754,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5846744050","product_id":100023201,"comment_content":"var b;<br>void function(){<br>    var env = {b:1};<br>    b = 2;<br>    console.log(&quot;In function b:&quot;, b);<br>    with(env) {<br>        var b = 1;<br>        console.log(&quot;In with b:&quot;, b);<br>    }<br>    console.log(&quot;In function2 b:&quot;, b);<br>}();<br>console.log(&quot;Global b:&quot;, b);<br>结果是<br>In function b: 2<br>In with b: 1<br>In function2 b: 2<br>Global b: undefined<br>可以看到with 内的 var b 并没有作用到 function 这个环境中啊<br>这里只是隐式声明了b吧","like_count":1,"discussions":[{"author":{"id":1177510,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/a6/0b590c34.jpg","nickname":"心平气和的韩丽媛","note":"","ucode":"ADB7DB7383EA4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40998,"discussion_content":"var b;\nvoid function(){\n    var env = {b:1};\n    b = 2;\n    console.log(&#34;In function b:&#34;, b);\n}();\nconsole.log(&#34;Global b:&#34;, b);\n把with去掉就比较直观了，这样输出的是：\nIn function b: 2\nGlobal b: 2\n\n但是增加了with以后，Global b: undefined, b是未定义的，所以with中 var b = 1，使b的声明被提升到了function中","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572321526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253687,"discussion_content":"https://blog.csdn.net/weixin_34342578/article/details/91467545\n这篇文章有对with带来的变化说明","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588252459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1689268,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c6/b4/e80a4fc8.jpg","nickname":"Wise","note":"","ucode":"A1915E54C26948","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236805,"discussion_content":"你不理解的地方是为什么 with里面是3而外面的是2， 因为 你在with 里面写的吧其实是env.b = 3 打印的值也是 env.b 所以 里面是3 外面是2 你可以吧env 的值打出来 ，就明白了  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587124033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71439,"user_name":"九","can_delete":false,"product_type":"c1","uid":1065946,"ip_address":"","ucode":"4A4C0F8295CA96","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/da/0702102a.jpg","comment_is_top":false,"comment_ctime":1551343058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846310354","product_id":100023201,"comment_content":"吸氧装备的比喻好玩","like_count":1},{"had_liked":false,"id":358547,"user_name":"晓折","can_delete":false,"product_type":"c1","uid":1039201,"ip_address":"北京","ucode":"73AA0355F56528","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/61/406471c9.jpg","comment_is_top":false,"comment_ctime":1664421803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664421803","product_id":100023201,"comment_content":"我的实际开发中, 可以说, 百分之 90都是只用 conts 来定义<br>如果是常量, 会单独定义到顶部, 全大写定义(这种常量一般都是字符串或者数字)<br>如果是变量, 除非是非引用类型使用 let, 否则也全部使用 const<br>var 造成的困扰我实在是控制不了.<br>","like_count":0},{"had_liked":false,"id":357708,"user_name":"逍遥散人","can_delete":false,"product_type":"c1","uid":2765180,"ip_address":"山东","ucode":"A9088B5C0844FC","user_header":"https://static001.geekbang.org/account/avatar/00/2a/31/7c/4f94d556.jpg","comment_is_top":false,"comment_ctime":1663576461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663576461","product_id":100023201,"comment_content":"应用一个大佬的话就是 闭包的本质: 他们会捕捉自身定义所在外部函数的局部变量(及参数)绑定","like_count":0},{"had_liked":false,"id":342556,"user_name":"努力努力的玉龙","can_delete":false,"product_type":"c1","uid":2910069,"ip_address":"","ucode":"D86CFC83540426","user_header":"https://static001.geekbang.org/account/avatar/00/2c/67/75/63721d0b.jpg","comment_is_top":false,"comment_ctime":1650340743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650340743","product_id":100023201,"comment_content":"个人理解分享：根据MDN:闭包是一个函数对周围状态的引用捆绑在一起，这样的组合就是闭包。这句话前半段跟老师讲的环境部分和表达式部分可以对应理解，后半段中组合这个词解释了闭包。所以闭包并不能简单理解成一块作用域或环境或一块内存空间或是指向内存空间的函数，而是一个组合","like_count":0},{"had_liked":false,"id":337069,"user_name":"周胜","can_delete":false,"product_type":"c1","uid":1974266,"ip_address":"","ucode":"BAE27CC6F67BB9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erw3icVIkgTwYx5H9gwOSHdVibjxvzrmSe8G3Cg7kOicjibkHaDeibkntE4kdhibj4KHM0zCzM07YlbbteA/132","comment_is_top":false,"comment_ctime":1646583700,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646583700","product_id":100023201,"comment_content":"闭包是函数与他周围的词法环境的引用捆绑在一起，这种组合叫闭包","like_count":0},{"had_liked":false,"id":333772,"user_name":"电单车","can_delete":false,"product_type":"c1","uid":2859389,"ip_address":"","ucode":"21FE87326A8B9C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/a1/7d/64ed0fdd.jpg","comment_is_top":false,"comment_ctime":1644507965,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644507965","product_id":100023201,"comment_content":"js中的闭包就是作用域，当函数返回的是一个函数时，且返回的函数引用了父函数的变量，被引用的产量就形成了一个特殊作用域，在当前执行环境上可以看到local-&gt;closure-&gt;global这样一条作用域查找链，其中local是当前执行上下文的作用域，closure就是父函数被子函数引用到的变量集合，global就是全局作用域。浏览器调试窗口中的scoped里展示的作用域链明明白白写的closure，都不用翻译，点开就能看到里边有哪个被引用的变量，浏览器已经很好的表达了啥是closure，就是作用域链上的一个作用域而已，扯了半天说不到关键呢","like_count":0},{"had_liked":false,"id":330153,"user_name":"爸爸","can_delete":false,"product_type":"c1","uid":2884102,"ip_address":"","ucode":"33F082B4AE7182","user_header":"https://static001.geekbang.org/account/avatar/00/2c/02/06/b2016157.jpg","comment_is_top":false,"comment_ctime":1641819036,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641819036","product_id":100023201,"comment_content":"function haha() {<br>            var haha1 = 1;<br>            function haha1Seting() {<br>                var setHaha1 = function () {<br>                    haha1++;<br>                };<br>                var getHaha1 = function () {<br>                    return haha1;<br>                };<br>                return {<br>                    getHaha1,<br>                    setHaha1,<br>                };<br>            }<br>            return haha1Seting;<br>        }<br><br>var hahaSeting = haha()();<br><br>hahaSeting.getHaha1() &#47;&#47; 1<br>hahaSeting.setHaha1() &#47;&#47; 私有域内的值 +1<br>hahaSeting.getHaha1() &#47;&#47; 2<br><br>我一直是这么理解闭包的： 创建一个私有域，暴露有限的方法给外部去使用，而且只能通过暴露的方法去修改这个私有域的值。  <br>但这样，功能上跟下面的代码怕不是差不多  = = <br>void (function () {<br>            var haha = {<br>                haha1:1,<br>                getHaha1:function () {<br>                    return haha;<br>                },<br>                setHah1:function () {<br>                    this.haha1++<br>                }<br>            }<br>            window.haha = haha<br>        })();<br><br>我现在陷入迷茫的地方就是，闭包这个东西，有什么用，什么时候该用 - -","like_count":0},{"had_liked":false,"id":328498,"user_name":"*","can_delete":false,"product_type":"c1","uid":1710685,"ip_address":"","ucode":"DB5BA86B4D7E5C","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1a/5d/3c8004c6.jpg","comment_is_top":false,"comment_ctime":1640754396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640754396","product_id":100023201,"comment_content":"呜呜，Realm在mdn里都没查到","like_count":0},{"had_liked":false,"id":328290,"user_name":"Robert","can_delete":false,"product_type":"c1","uid":1036870,"ip_address":"","ucode":"AF2A0EFDD3ADF9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/46/16d36cf7.jpg","comment_is_top":false,"comment_ctime":1640655263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640655263","product_id":100023201,"comment_content":"这里有关于Javascript闭包的解释，简单清晰，觉得还不错。https:&#47;&#47;www.runoob.com&#47;js&#47;js-function-closures.html","like_count":0},{"had_liked":false,"id":321907,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":1129186,"ip_address":"","ucode":"8FE9CE88EA0C57","user_header":"https://static001.geekbang.org/account/avatar/00/11/3a/e2/c48bd3b7.jpg","comment_is_top":false,"comment_ctime":1637108962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637108962","product_id":100023201,"comment_content":"realm是Java的class loader？","like_count":0},{"had_liked":false,"id":320719,"user_name":"Men.","can_delete":false,"product_type":"c1","uid":1627189,"ip_address":"","ucode":"E8141E75A248F2","user_header":"https://static001.geekbang.org/account/avatar/00/18/d4/35/85fd774c.jpg","comment_is_top":false,"comment_ctime":1636467809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636467809","product_id":100023201,"comment_content":"上文中 函数中用到的未声明的变量是什么意思","like_count":0},{"had_liked":false,"id":312149,"user_name":"Geek_16783e","can_delete":false,"product_type":"c1","uid":1500269,"ip_address":"","ucode":"39729218EDE17D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/HjZXA4OLm5H2sx8t7SHiccuYStuibLy94EsgpZQmrjSKtN0FM4Wqxj0TdxdmqwzODMnND6FUNMGwicGTicXMWE4WWw/132","comment_is_top":false,"comment_ctime":1631667050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631667050","product_id":100023201,"comment_content":"阿里味太浓了..  技术文章都写的这么晦涩，像在看百科全书...","like_count":0},{"had_liked":false,"id":311898,"user_name":"　1234567890","can_delete":false,"product_type":"c1","uid":2311910,"ip_address":"","ucode":"623CD7E3B26769","user_header":"https://static001.geekbang.org/account/avatar/00/23/46/e6/f17cfee2.jpg","comment_is_top":false,"comment_ctime":1631525718,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631525718","product_id":100023201,"comment_content":"var a = 0;<br>console.log(a,window.a)<br>if(true){<br>    console.log(a,window.a)<br>    a = 10;<br>    console.log(a,window.a)<br>    function a(){}<br>    console.log(a,window.a)<br>    a = 20;<br>    console.log(a,window.a)<br>}<br> console.log(a,window.a)<br>老师您好，我想问一下function a(){}这行代码执行完为什么会把全局的a改为10呢？","like_count":0},{"had_liked":false,"id":288101,"user_name":"许永平","can_delete":false,"product_type":"c1","uid":2452820,"ip_address":"","ucode":"E784E0F328545E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLI6ibAJRoCG6gib0NOmBOM80iaibLx8Wz7kUXqRkxZGIWqDyOMyAaSypOV7zjRq6GNia8icbKnCm4oOXhQ/132","comment_is_top":false,"comment_ctime":1618299095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618299095","product_id":100023201,"comment_content":"所以你想表达什么……","like_count":0},{"had_liked":false,"id":282376,"user_name":"闲闲","can_delete":false,"product_type":"c1","uid":1637571,"ip_address":"","ucode":"B2099BDCFF6191","user_header":"https://static001.geekbang.org/account/avatar/00/18/fc/c3/0991edfc.jpg","comment_is_top":false,"comment_ctime":1615209802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615209802","product_id":100023201,"comment_content":"Day 3.8<br>总结：<br>1. 闭包就是带有执行环境的函数<br>2. JavaScript标准把一段代码（包括函数），执行所需要的所有信息定义为：执行上下文<br>3. js的执行理解就应该是包括了变量声明，声明到哪里，变量在那些范围有效（作用域），this当前指的是谁，以及代码的运行等等<br>本片稍微有点凌乱，可能需要结合下一篇知识在回顾下。","like_count":0},{"had_liked":false,"id":280102,"user_name":"enforceway","can_delete":false,"product_type":"c1","uid":1384797,"ip_address":"","ucode":"767E20852057D9","user_header":"https://static001.geekbang.org/account/avatar/00/15/21/5d/38811b1c.jpg","comment_is_top":false,"comment_ctime":1614080095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614080095","product_id":100023201,"comment_content":"闭包不是一个场景吗，如果是函数，那函数执行完成，需要对上下文对象释放，这种行为如何定义呢？","like_count":0},{"had_liked":false,"id":263246,"user_name":"Evan Xia","can_delete":false,"product_type":"c1","uid":2310344,"ip_address":"","ucode":"6800538102355E","user_header":"https://static001.geekbang.org/account/avatar/00/23/40/c8/17af3598.jpg","comment_is_top":false,"comment_ctime":1606058172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606058172","product_id":100023201,"comment_content":"基本上const ,let，const我一般用在页面初始化列表的比较多一点","like_count":0},{"had_liked":false,"id":253242,"user_name":"那么那么强国","can_delete":false,"product_type":"c1","uid":2108832,"ip_address":"","ucode":"04577E8AC5C7A3","user_header":"https://static001.geekbang.org/account/avatar/00/20/2d/a0/053aeff5.jpg","comment_is_top":false,"comment_ctime":1602661198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602661198","product_id":100023201,"comment_content":"作用域-》作用域链=》闭包，说实话这篇文章看下来感觉有点卖弄知识，并没有符合逻辑的传达知识。","like_count":0},{"had_liked":false,"id":252922,"user_name":"ywding","can_delete":false,"product_type":"c1","uid":2188098,"ip_address":"","ucode":"17FA8552026B54","user_header":"https://static001.geekbang.org/account/avatar/00/21/63/42/31e0cb29.jpg","comment_is_top":false,"comment_ctime":1602515458,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602515458","product_id":100023201,"comment_content":"var iframe = document.createElement(&#39;iframe&#39;)<br>document.documentElement.appendChild(iframe)<br>iframe.src=&quot;javascript:var b = {};&quot;<br><br>setTimeout(()=&gt;{<br>var b1 = iframe.contentWindow.b;<br>var b2 = {};<br>console.log(typeof b1, typeof b2); <br>console.log(b1 instanceof Object, b2 instanceof Object); <br>},0)","like_count":0},{"had_liked":false,"id":246968,"user_name":"Geek_0edb17","can_delete":false,"product_type":"c1","uid":2156458,"ip_address":"","ucode":"1B64A4E246C751","user_header":"","comment_is_top":false,"comment_ctime":1599545164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599545164","product_id":100023201,"comment_content":"这个闭包有点没有讲清楚。希望讲一下闭包的应用，函数嵌套函数，函数内部引用函数外部的参数和变量<br>var counter = function() {<br>   var count = 0;<br>   return function() {<br>      count++;<br>      console.log(count);<br>   };<br>};<br><br>var a = counter();<br>a(); &#47;&#47; 1<br>a(); &#47;&#47; 2<br>或者再深一点 throttle和debounce的实现","like_count":0},{"had_liked":false,"id":240319,"user_name":"张理查","can_delete":false,"product_type":"c1","uid":1003152,"ip_address":"","ucode":"1F93E631CD4B35","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/90/a8d19e7b.jpg","comment_is_top":false,"comment_ctime":1596858958,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596858958","product_id":100023201,"comment_content":"我挺开心看到评论里说讲得晦涩的，这篇我看了大概三遍，最后那个代码没有问题，你们得出undefined object 要再多思考下～我一开始也是这个结果，但简单思考下就知道问题出在哪里了。<br>","like_count":0},{"had_liked":false,"id":233878,"user_name":"Geek_wang","can_delete":false,"product_type":"c1","uid":1585571,"ip_address":"","ucode":"0D90AEAF96032A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuG6DnwpoPpMyyXfnrIW01jDw2EUIxvGkIXqyXGLWdaiaWuicVLiaJLQZmwV7SJEtqSWniaGXVWtPFgQ/132","comment_is_top":false,"comment_ctime":1594488561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594488561","product_id":100023201,"comment_content":"想问一下，js闭包中环境部分的标识列表：函数中用到的未声明的变量  指的是函数的参数么？还是别的什么？","like_count":0},{"had_liked":false,"id":233016,"user_name":"Cander","can_delete":false,"product_type":"c1","uid":1381524,"ip_address":"","ucode":"838B8F877C7080","user_header":"https://static001.geekbang.org/account/avatar/00/15/14/94/7fcd4c89.jpg","comment_is_top":false,"comment_ctime":1594194038,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594194038","product_id":100023201,"comment_content":"函数产生的作用域是会开辟内存空间的, 那么if等块级作用域会开辟内存空间吗?","like_count":0},{"had_liked":false,"id":231453,"user_name":"L","can_delete":false,"product_type":"c1","uid":1385439,"ip_address":"","ucode":"39FF051FBEF22B","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/df/be7c7a6a.jpg","comment_is_top":false,"comment_ctime":1593679323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593679323","product_id":100023201,"comment_content":"<br>var b;<br>void function(){<br>    var env = {b:1};<br>    b = 2;<br>    console.log(&quot;In function b:&quot;, b);<br>    with(env) {<br>        var b = 3;<br>        console.log(&quot;In with b:&quot;, b);<br>    }<br>}();<br>console.log(&quot;Global b:&quot;, b);<br>这段代码注释掉 with 的话，结果依旧是一样的，难道不是因为 var 定义的变量 有变量提升的问题吗？<br>b=2 这行相当于是更新了下面的 var b = 3的这行代码把。","like_count":0},{"had_liked":false,"id":231451,"user_name":"L","can_delete":false,"product_type":"c1","uid":1385439,"ip_address":"","ucode":"39FF051FBEF22B","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/df/be7c7a6a.jpg","comment_is_top":false,"comment_ctime":1593679131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593679131","product_id":100023201,"comment_content":"var b;<br>void function(){<br>    var env = {b:1};<br>    b = 2;<br>    console.log(&quot;In function b:&quot;, b);<br>   &#47;&#47; with(env) {<br>        var b = 3;<br>        console.log(&quot;In with b:&quot;, b);<br>   &#47;&#47; }<br>}();<br>console.log(&quot;Global b:&quot;, b);<br><br>这段代码，去掉with ，打印的结果依旧是 In function b: 2，In with b: 3，Global b: undefined，<br><br>var 定义的变量是有变量提升的功效的。所以当 b = 2 的时候实际改变的只是下面的 var b = 3的这段代码吧。","like_count":0},{"had_liked":false,"id":231180,"user_name":"Summer","can_delete":false,"product_type":"c1","uid":2048830,"ip_address":"","ucode":"C305AD8A2AF1C3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/43/3e/07d372bd.jpg","comment_is_top":false,"comment_ctime":1593602990,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593602990","product_id":100023201,"comment_content":"文章第一张图就给出答案了，javascript 函数就是闭包。什么绑定作用域、函数嵌套只是不同的表现形式而已。","like_count":0},{"had_liked":false,"id":222980,"user_name":"都市夜归人","can_delete":false,"product_type":"c1","uid":1071909,"ip_address":"","ucode":"DFF59BE3D80B42","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","comment_is_top":false,"comment_ctime":1590976760,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590976760","product_id":100023201,"comment_content":"&quot;可以看到，在 Global function with 三个环境中，b 的值都不一样，而在 function 环境中，并没有出现 var b，这说明 with 内的 var b 作用到了 function 这个环境当中。var b = {} 这样一句对两个域产生了作用，从语言的角度是个非常糟糕的设计，这也是一些人坚定地反对在任何场景下使用 with 的原因之一。&quot;<br>这段话对应上面代码感觉比较凌乱了。","like_count":0},{"had_liked":false,"id":221666,"user_name":"咚咚咚咚咚咚","can_delete":false,"product_type":"c1","uid":1649779,"ip_address":"","ucode":"C256D70088F02C","user_header":"https://static001.geekbang.org/account/avatar/00/19/2c/73/e5fe80b8.jpg","comment_is_top":false,"comment_ctime":1590561790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590561790","product_id":100023201,"comment_content":"var会产生很模糊的作用范围，现在基本上是String，Number，Boolean这样的类型变量会使用let，Array，Object等会使用const","like_count":0},{"had_liked":false,"id":216008,"user_name":"芳芳","can_delete":false,"product_type":"c1","uid":1986546,"ip_address":"","ucode":"2ABC51246E1309","user_header":"https://static001.geekbang.org/account/avatar/00/1e/4f/f2/5c438fc7.jpg","comment_is_top":false,"comment_ctime":1589166400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589166400","product_id":100023201,"comment_content":"从Java转过来的，看到闭包的时候就觉得是个函数，但是没有看到有文档这样讲，所以一直在心里纠结。今天看到老师的讲解瞬间豁然开朗。而且有了更专业的认识。","like_count":0},{"had_liked":false,"id":216003,"user_name":"芳芳","can_delete":false,"product_type":"c1","uid":1986546,"ip_address":"","ucode":"2ABC51246E1309","user_header":"https://static001.geekbang.org/account/avatar/00/1e/4f/f2/5c438fc7.jpg","comment_is_top":false,"comment_ctime":1589166158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589166158","product_id":100023201,"comment_content":"从Java转过来的程序员表示var的穿透无法接受，穿透结果无法控制，所以从开始就养成了用let的习惯  几乎不用var","like_count":0},{"had_liked":false,"id":211994,"user_name":"Yully","can_delete":false,"product_type":"c1","uid":1254946,"ip_address":"","ucode":"66034995A6282F","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/22/dd505e6d.jpg","comment_is_top":false,"comment_ctime":1588043847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588043847","product_id":100023201,"comment_content":"必须是let了，毕竟语言在进步，明确好变量和函数的作用域还是很有必要的，期待以后出现private变量、private函数","like_count":0},{"had_liked":false,"id":206679,"user_name":"HoSalt","can_delete":false,"product_type":"c1","uid":1156074,"ip_address":"","ucode":"610B03E2A002D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","comment_is_top":false,"comment_ctime":1586916578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586916578","product_id":100023201,"comment_content":"老师，词法环境不是在函数定义的时侯确定的吗？this是要等到函数调用的时侯才能确定，那将this放到词法环境中不会有问题吗？<br>","like_count":0},{"had_liked":false,"id":205690,"user_name":"子铭","can_delete":false,"product_type":"c1","uid":1156419,"ip_address":"","ucode":"221383803E5732","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/43/d32dd35a.jpg","comment_is_top":false,"comment_ctime":1586702915,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586702915","product_id":100023201,"comment_content":"realm这个真没看明白，这个好像是个iframe的内置属性？没懂。","like_count":0,"discussions":[{"author":{"id":1689268,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c6/b4/e80a4fc8.jpg","nickname":"Wise","note":"","ucode":"A1915E54C26948","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236818,"discussion_content":"Before it is evaluated, all ECMAScript code must be associated with a realm. Conceptually, a realm consists of a set of intrinsic objects, an ECMAScript global environment, all of the ECMAScript code that is loaded within the scope of that global environment, and other associated state and resources.\n大体意思是就提供一个全局的环境和一些内置对象，在求值之前","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587124869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204910,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1586489580,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586489580","product_id":100023201,"comment_content":"<br>var iframe = document.createElement(&#39;iframe&#39;)<br>document.documentElement.appendChild(iframe)<br>iframe.src=&quot;javascript:var b = {};&quot;<br><br>var b1 = iframe.contentWindow.b;<br>var b2 = {};<br><br>console.log(typeof b1, typeof b2); &#47;&#47;object  object  ,本人测试typeof b1返回的是undefined，谷歌浏览器 81<br><br>console.log(b1 instanceof Object, b2 instanceof Object); &#47;&#47;false true","like_count":0,"discussions":[{"author":{"id":1230401,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c6/41/1ef25224.jpg","nickname":"金池","note":"","ucode":"4F44AB708ECC5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257909,"discussion_content":"同上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588608635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204841,"user_name":"小玲子ida","can_delete":false,"product_type":"c1","uid":1177005,"ip_address":"","ucode":"A447EF847D375E","user_header":"https://static001.geekbang.org/account/avatar/00/11/f5/ad/2f7d5e50.jpg","comment_is_top":false,"comment_ctime":1586481832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586481832","product_id":100023201,"comment_content":"看评论才理解了什么是闭包，就是一个普通函数内部可以访问函数外部的var变量a，这里就产生了闭包，普通函数里面定义了子函数，返回函数体，将普通函数执行方法赋值给一个var变量b，调用变量b这里也产生了闭包","like_count":0},{"had_liked":false,"id":195527,"user_name":"day day up","can_delete":false,"product_type":"c1","uid":1501020,"ip_address":"","ucode":"E9875555B6BD8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/e7/5c/38afffa2.jpg","comment_is_top":false,"comment_ctime":1585193940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585193940","product_id":100023201,"comment_content":"一直坚持使用let，避免意外的发生","like_count":0},{"had_liked":false,"id":174064,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":1167046,"ip_address":"","ucode":"454538FF253B5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","comment_is_top":false,"comment_ctime":1579939177,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579939177","product_id":100023201,"comment_content":"请教个vue源码中看到的用法，在vue2.6版本中 源码里很多地方用｛ 和 ｝扩起来一个块级作用域，里面依然是var声明变量，这样做的目的是什么呢？既然var 何必还要外边包一层块级作用域呢","like_count":0,"discussions":[{"author":{"id":1362023,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","nickname":"John Bull","note":"","ucode":"2A1B4191CD87B8","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248398,"discussion_content":"提高代码的可读性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587867555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170020,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1578493722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578493722","product_id":100023201,"comment_content":"Javascript中的函数就是闭包","like_count":0},{"had_liked":false,"id":146021,"user_name":"J","can_delete":false,"product_type":"c1","uid":1237739,"ip_address":"","ucode":"49008F98A504CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/eb/a11560a8.jpg","comment_is_top":false,"comment_ctime":1572420630,"is_pvip":false,"replies":[{"id":"58893","content":"这不就是课程讲的内容么","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574219282,"ip_address":"","comment_id":146021,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572420630","product_id":100023201,"comment_content":"小白有点懵逼，老师可以解答下几个问题吗<br><br>&gt; <br>var 把 b 声明到哪里；<br>b 表示哪个变量；<br>b 的原型是哪个对象；<br>let 把 c 声明到哪里；<br>this 指向哪个对象。<br><br>&gt; var b = {} 这样一句对两个域产生了作用<br>? 两个域是指哪两个<br><br>&gt; 分析了一些执行上下文中所需要的信息，并从var、let、对象字面量等语法中，推导出了词法作用域、变量作用域、Realm\b的设计。<br>? 执行上下文需要的信息是哪些<br>? 在哪里推导了，两个作用域在哪里","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472673,"discussion_content":"这不就是课程讲的内容么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574219282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112068,"user_name":"lsy","can_delete":false,"product_type":"c1","uid":1581063,"ip_address":"","ucode":"A9FA51A302C97E","user_header":"","comment_is_top":false,"comment_ctime":1562664005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562664005","product_id":100023201,"comment_content":"个人觉得 realm 比喻成“国度”还是挺形象的，两个国家都拥有生产某产品的机器，但是 A 国生产的产品就不能贴上“made in B”的标签。当然，作为术语肯定不合适。","like_count":0},{"had_liked":false,"id":99916,"user_name":"吃菠菜的大力士","can_delete":false,"product_type":"c1","uid":1550322,"ip_address":"","ucode":"27762EB01A38AE","user_header":"https://static001.geekbang.org/account/avatar/00/17/a7/f2/2bdf0826.jpg","comment_is_top":false,"comment_ctime":1559357543,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559357543","product_id":100023201,"comment_content":"确实是with,是我自己弄错了","like_count":0},{"had_liked":false,"id":99915,"user_name":"吃菠菜的大力士","can_delete":false,"product_type":"c1","uid":1550322,"ip_address":"","ucode":"27762EB01A38AE","user_header":"https://static001.geekbang.org/account/avatar/00/17/a7/f2/2bdf0826.jpg","comment_is_top":false,"comment_ctime":1559357475,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559357475","product_id":100023201,"comment_content":"var b;<br>void function(){<br>    var env = {b:1};<br>    b = 2;<br>    console.log(&quot;In function b:&quot;, b);<br>    with(env) {<br>        var b = 3;<br>        console.log(&quot;In with b:&quot;, b);<br>    }<br>}();<br>console.log(&quot;Global b:&quot;, b);<br><br>为什么说with内部的var b 作用到了 function中呢 而不是 应该是全局的 var 作用到function啊？","like_count":0},{"had_liked":false,"id":95846,"user_name":"行问","can_delete":false,"product_type":"c1","uid":1039504,"ip_address":"","ucode":"F3AED699218475","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/90/c980113a.jpg","comment_is_top":false,"comment_ctime":1558226583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558226583","product_id":100023201,"comment_content":"while中的let是一种什么行为？在平时的开发中，能用let的就多用。","like_count":0},{"had_liked":false,"id":95551,"user_name":"Turner","can_delete":false,"product_type":"c1","uid":1368614,"ip_address":"","ucode":"E9B74ABC2083FA","user_header":"https://static001.geekbang.org/account/avatar/00/14/e2/26/04265985.jpg","comment_is_top":false,"comment_ctime":1558079759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558079759","product_id":100023201,"comment_content":"老大能不能把Realm这块补一下？还有iframe和window之间到底是什么关系？<br><br>var iframe = document.createElement(&#39;iframe&#39;)<br>document.documentElement.appendChild(iframe)<br>iframe.src=&quot;javascript:var b = {};&quot;<br>var b1 = iframe.contentWindow.b;<br>console.log(typeof b1); &#47;&#47; undefined<br>console.log(typeof iframe.contentWindow.b); &#47;&#47;object<br>console.log(iframe.contentWindow.b instanceof Object); &#47;&#47; false<br>console.log(iframe.contentWindow.b instanceof iframe.contentWindow.Object); &#47;&#47; true<br><br>意思是iframe里面的window跟外层的window没有半毛钱关系么？","like_count":0},{"had_liked":false,"id":93702,"user_name":"__qms","can_delete":false,"product_type":"c1","uid":1271438,"ip_address":"","ucode":"E220BFD272A54B","user_header":"https://static001.geekbang.org/account/avatar/00/13/66/8e/99c0c5a3.jpg","comment_is_top":false,"comment_ctime":1557563645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557563645","product_id":100023201,"comment_content":"给老师一个赞👍","like_count":0},{"had_liked":false,"id":92585,"user_name":"我要飞","can_delete":false,"product_type":"c1","uid":1382243,"ip_address":"","ucode":"2A6A0B1154F30A","user_header":"https://static001.geekbang.org/account/avatar/00/15/17/63/241cb09b.jpg","comment_is_top":false,"comment_ctime":1557304702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557304702","product_id":100023201,"comment_content":"首次接触闭包的时候看到这样的总结,说是两个函数之间有嵌套关系,然后这个函数具有读取其他函数内部变量的能力","like_count":0},{"had_liked":false,"id":90197,"user_name":"温木","can_delete":false,"product_type":"c1","uid":1507210,"ip_address":"","ucode":"EAB6EDD6EDFE96","user_header":"","comment_is_top":false,"comment_ctime":1556445782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556445782","product_id":100023201,"comment_content":"喜欢使用let和const，看很多库里面，他们都喜欢使用const，并且推荐使用const，比如声明一个数组。<br>老师能讲解下声明一个数组用let和const有什么区别吗？<br>在操作数组时，都是往数组中push值，原先的变量并物理地址并没有发生变化，如果用let，和用const有什么区别，为什么const的性能会好一点？","like_count":0},{"had_liked":false,"id":89989,"user_name":"xlm","can_delete":false,"product_type":"c1","uid":1382463,"ip_address":"","ucode":"DF8CA3B2F676D8","user_header":"https://static001.geekbang.org/account/avatar/00/15/18/3f/93e02812.jpg","comment_is_top":false,"comment_ctime":1556358237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556358237","product_id":100023201,"comment_content":"<br>老师，听了这章后，还是不太清楚下面这段代码的输出要如何解释才好，希望您能指点一下，谢谢<br><br>var a = 1;<br><br>(function a () {<br>\ta = 2;<br>\tconsole.log(&#39;function scope&#39;, a);<br>})()<br><br>console.log(&#39;global scope:&#39;,a);<br><br><br>分别输出：<br>1.function scope:  ƒ a () {  <br>  ...<br>}<br>2.global scope: 1","like_count":0},{"had_liked":false,"id":82635,"user_name":"刘长锋","can_delete":false,"product_type":"c1","uid":1060922,"ip_address":"","ucode":"E4ABC6E335C989","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/3a/e970285b.jpg","comment_is_top":false,"comment_ctime":1554265847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554265847","product_id":100023201,"comment_content":"老师，目前有办法通过脚本反射的方式获取所有js原生对象吗？还是只能查文档？通过for. in 遍历全局对象是不可以的，因为这些js原生对象虽然挂到了全局，但是属于不可枚举成员。","like_count":0},{"had_liked":false,"id":81342,"user_name":"源墨","can_delete":false,"product_type":"c1","uid":1377428,"ip_address":"","ucode":"CE680B48111D56","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/94/3ab2d124.jpg","comment_is_top":false,"comment_ctime":1553867040,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1553867040","product_id":100023201,"comment_content":"var iframe = document.createElement(&#39;iframe&#39;)<br>document.documentElement.appendChild(iframe)<br>iframe.src=&quot;javascript:var b = {};&quot;<br><br>var b1 = iframe.contentWindow.b;<br>var b2 = {};<br><br>console.log(typeof b1, typeof b2); &#47;&#47;object object<br><br>console.log(b1 instanceof Object, b2 instanceof Object); &#47;&#47;false true<br>老是，这段代码，在chrome的控制台打印的typeof b1 是undefined 是为什么呢？","like_count":0},{"had_liked":false,"id":80715,"user_name":"K4SHIFZ","can_delete":false,"product_type":"c1","uid":1293057,"ip_address":"","ucode":"BFB49AAC0E4C74","user_header":"https://static001.geekbang.org/account/avatar/00/13/bb/01/568ac2d6.jpg","comment_is_top":false,"comment_ctime":1553701451,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553701451","product_id":100023201,"comment_content":"任何{}包裹的代码都会产生let作用域吧？不只是文中提到的if for try&#47;catch等。","like_count":0},{"had_liked":false,"id":79971,"user_name":"K4SHIFZ","can_delete":false,"product_type":"c1","uid":1293057,"ip_address":"","ucode":"BFB49AAC0E4C74","user_header":"https://static001.geekbang.org/account/avatar/00/13/bb/01/568ac2d6.jpg","comment_is_top":false,"comment_ctime":1553585742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553585742","product_id":100023201,"comment_content":"Realm这一块还是不太懂，希望老师出一个ECMAScript2018标准讲解专题，必买！！！","like_count":0},{"had_liked":false,"id":78819,"user_name":"斑马","can_delete":false,"product_type":"c1","uid":1389908,"ip_address":"","ucode":"C9E5EDF724C485","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/54/23cc9655.jpg","comment_is_top":false,"comment_ctime":1553247361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553247361","product_id":100023201,"comment_content":"var 声明变量到作用域函数执行的作用域，声明的变量b表示的该作用域里的变量，它的原型是谁？let将c声明到哪里？this指向哪个对象？","like_count":0},{"had_liked":false,"id":78349,"user_name":"Ranjay","can_delete":false,"product_type":"c1","uid":1134279,"ip_address":"","ucode":"E7EE5F2A2D2E59","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/c7/cb93c786.jpg","comment_is_top":false,"comment_ctime":1553132440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553132440","product_id":100023201,"comment_content":"let和const不应该是块级作用域嘛，只要有{}包裹哪怕只有{}就会形成独立的作用域","like_count":0},{"had_liked":false,"id":78114,"user_name":"泡泡","can_delete":false,"product_type":"c1","uid":1450772,"ip_address":"","ucode":"8142CAE464D2FB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKS4a1IwJOrnOGqCVAQSPWQeW6KTAPPGichBa53tyD3aJ3MmMIq8oueVSFLlkSTp2MHStseAkCDtBw/132","comment_is_top":false,"comment_ctime":1553073219,"is_pvip":false,"replies":[{"id":"28479","content":"你具体在哪里不懂呢，可以留言呀。","user_name":"编辑回复","user_name_real":"马越","uid":"1003953","ctime":1553073887,"ip_address":"","comment_id":78114,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1553073219","product_id":100023201,"comment_content":"老师，已经读了十几篇了，感觉知识讲的太深，专业词汇较多，读起来比较生涩","like_count":0,"discussions":[{"author":{"id":1003953,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/51/b1/7d6879dc.jpg","nickname":"未设置","note":"","ucode":"9DFC368CA29EDC","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443973,"discussion_content":"你具体在哪里不懂呢，可以留言呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553073887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77383,"user_name":"存","can_delete":false,"product_type":"c1","uid":1293900,"ip_address":"","ucode":"66DDE719450B77","user_header":"https://static001.geekbang.org/account/avatar/00/13/be/4c/8d19d90a.jpg","comment_is_top":false,"comment_ctime":1552916080,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1552916080","product_id":100023201,"comment_content":"var b;<br>void function(){<br>    var env = {b:1};<br>    b = 2;<br>    console.log(&quot;In function b:&quot;, b);<br>    with(env) {<br>        var b = 1;<br>        console.log(&quot;In with b:&quot;, b);<br>    }<br>    console.log(&quot;In function2 b:&quot;, b);<br>}();<br>console.log(&quot;Global b:&quot;, b);<br>结果是<br>In function b: 2<br>In with b: 1<br>In function2 b: 2<br>Global b: undefined<br>可以看到with 内的 var b 并没有作用到 function 这个环境中啊<br>这里只是隐式声明了b吧    这里没看懂，老师能解释一下吗","like_count":0,"discussions":[{"author":{"id":1646242,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1e/a2/083412c6.jpg","nickname":"疯羊先生","note":"","ucode":"09F63E55DA492A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338324,"discussion_content":"你把with去掉，看看function中的b和global的b又是什么样子的，肯定是影响了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609238478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2006936,"avatar":"http://thirdwx.qlogo.cn/mmopen/ibxcyEpkUnt01g86jRQDQg8QJZibm5m5akHibeu0YG1TSYczsnSLkamG5LvRm3kGPYS21u6zu2h4KpY5KQS2BWjxviaJtcibI3ZzA/132","nickname":"非要我换名字","note":"","ucode":"C0299798D0E429","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273615,"discussion_content":"这个你明白了吗？我也没明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590477309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77382,"user_name":"存","can_delete":false,"product_type":"c1","uid":1293900,"ip_address":"","ucode":"66DDE719450B77","user_header":"https://static001.geekbang.org/account/avatar/00/13/be/4c/8d19d90a.jpg","comment_is_top":false,"comment_ctime":1552915931,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1552915931","product_id":100023201,"comment_content":"with 哪里没看懂，怎么影响两个作用域了","like_count":0,"discussions":[{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253688,"discussion_content":"https://blog.csdn.net/weixin_34342578/article/details/91467545\n可以看看这里关于with","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588252544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1646242,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1e/a2/083412c6.jpg","nickname":"疯羊先生","note":"","ucode":"09F63E55DA492A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338315,"discussion_content":"我也搞不懂为什么function内部和with都产生了一个b。。。我以为with中的b上升到function中，最终function中的b和with中的应该是同一个b。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609237436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253688,"ip_address":""},"score":338315,"extra":""},{"author":{"id":1646242,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1e/a2/083412c6.jpg","nickname":"疯羊先生","note":"","ucode":"09F63E55DA492A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338319,"discussion_content":"看过了，还是不理解，解释的仅是with的属性在对象中不存在的情况下会继续往上找，甚至自己创建一个全局变量。但问题是这里的with更像是with内部先产生了一个局部变量b，然后对env中的b赋值，同时var声明提升，又使得function内部产生了一个b。我对with不是很理解，望指教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609238048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253688,"ip_address":""},"score":338319,"extra":""}]}]},{"had_liked":false,"id":76924,"user_name":"tzmf","can_delete":false,"product_type":"c1","uid":1375276,"ip_address":"","ucode":"E02B0286E85A01","user_header":"https://static001.geekbang.org/account/avatar/00/14/fc/2c/bf72b2ae.jpg","comment_is_top":false,"comment_ctime":1552752463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552752463","product_id":100023201,"comment_content":"Winter 老师，对这块知识我有一个疑问：“词法环境”和“词法作用域”这两个概念的区别是什么？希望你能帮我解惑。","like_count":0},{"had_liked":false,"id":75667,"user_name":"James Bond","can_delete":false,"product_type":"c1","uid":1325483,"ip_address":"","ucode":"59BF615FD91159","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/ab/42622d70.jpg","comment_is_top":false,"comment_ctime":1552446341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552446341","product_id":100023201,"comment_content":"作用域链是什么","like_count":0},{"had_liked":false,"id":73650,"user_name":"让时间说真话","can_delete":false,"product_type":"c1","uid":1387656,"ip_address":"","ucode":"5C86450864189F","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/88/2a7fe1a9.jpg","comment_is_top":false,"comment_ctime":1551949080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551949080","product_id":100023201,"comment_content":"有let以后还是喜欢用let，声明的变量更可控，也更容易理解。想问作者一个问题，本章并没有解释var b ={}  b从哪里来？b的原型是谁？","like_count":0},{"had_liked":false,"id":73557,"user_name":"风吹一个大耳东","can_delete":false,"product_type":"c1","uid":1393383,"ip_address":"","ucode":"53918AD171F5C5","user_header":"https://static001.geekbang.org/account/avatar/00/15/42/e7/e5afadf7.jpg","comment_is_top":false,"comment_ctime":1551925295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551925295","product_id":100023201,"comment_content":"var 声明作用域函数 执行的作用域，老师这句话不是太理解","like_count":0},{"had_liked":false,"id":73385,"user_name":"Dream.","can_delete":false,"product_type":"c1","uid":1187286,"ip_address":"","ucode":"49B94CE5BA0D21","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/d6/76fe5259.jpg","comment_is_top":false,"comment_ctime":1551875307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551875307","product_id":100023201,"comment_content":"看完之后对闭包的概念更迷糊了。。。<br><br>我原有的理解就是『function内使用的变量不需要声明，直接调用function外的变量。』<br><br>看了几遍之后虽然觉得这样理解错倒是没错，就总感觉少了什么，但是又不知道少了什么。","like_count":0},{"had_liked":false,"id":72518,"user_name":"zhbo","can_delete":false,"product_type":"c1","uid":1382758,"ip_address":"","ucode":"B0682F108284B2","user_header":"https://static001.geekbang.org/account/avatar/00/15/19/66/ce957bd4.jpg","comment_is_top":false,"comment_ctime":1551663393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551663393","product_id":100023201,"comment_content":"老师，我不懂这个地方说的：。。相比普通函数，JavaScript 函数的主要复杂性来自于它携带的“环境部分”。什么算普通函数，什么是js函数","like_count":0},{"had_liked":false,"id":71777,"user_name":"追梦","can_delete":false,"product_type":"c1","uid":1378520,"ip_address":"","ucode":"A2EDA67C002CD4","user_header":"https://static001.geekbang.org/account/avatar/00/15/08/d8/43cd704d.jpg","comment_is_top":false,"comment_ctime":1551430712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551430712","product_id":100023201,"comment_content":"async&#47;await是否可以理解为promise和generator的语法糖？用promise和generator是可以模拟async&#47;await的行为的","like_count":0},{"had_liked":false,"id":71352,"user_name":"追梦","can_delete":false,"product_type":"c1","uid":1389125,"ip_address":"","ucode":"50C54AC9B1A6CF","user_header":"https://static001.geekbang.org/account/avatar/00/15/32/45/3ac375a1.jpg","comment_is_top":false,"comment_ctime":1551325691,"is_pvip":false,"replies":[{"id":"25931","content":"这里写错了一个地方，我改一下","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551433201,"ip_address":"","comment_id":71352,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551325691","product_id":100023201,"comment_content":"请问老师，这个例子，是如何得出“可以看到，在 Global function with 三个环境中，b 的值都不一样”这个结论的？<br>var b;<br>void function(){<br>    var env = {b:1};<br>    b = 1;<br>    console.log(&quot;In function b:&quot;, b);<br>    with(env) {<br>        var b = 1;<br>        console.log(&quot;In with b:&quot;, b);<br>    }<br>}();<br>console.log(&quot;Global b:&quot;, b);<br>","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441119,"discussion_content":"这里写错了一个地方，我改一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551433201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71104,"user_name":"Rushan-Chen","can_delete":false,"product_type":"c1","uid":1374410,"ip_address":"","ucode":"CE514A1205C61D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/XSnxM4uP67kdzzCRW8KxhS5jkHiaaSrgkuLh1Z5BxawvQase46pbGAL4Bngmd3eFHckQml6zexyukFoWpeNENTg/132","comment_is_top":false,"comment_ctime":1551266336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551266336","product_id":100023201,"comment_content":"var 声明与赋值，`var b = 1` 下面的“var 声明作用域函数执行的作用域”，这句没看明白😳","like_count":0},{"had_liked":false,"id":71015,"user_name":"费马","can_delete":false,"product_type":"c1","uid":1190201,"ip_address":"","ucode":"BCAAF9C16F0CC5","user_header":"https://static001.geekbang.org/account/avatar/00/12/29/39/0aec7827.jpg","comment_is_top":false,"comment_ctime":1551245133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551245133","product_id":100023201,"comment_content":"&gt; Before it is evaluated, all ECMAScript code must be associated with a realm. Conceptually, a realm consists of a set of intrinsic objects, an ECMAScript global environment, all of the ECMAScript code that is loaded within the scope of that global environment, and other associated state and resources.","like_count":0},{"had_liked":false,"id":70840,"user_name":"芳玥","can_delete":false,"product_type":"c1","uid":1381506,"ip_address":"","ucode":"869679DD97A6AD","user_header":"https://static001.geekbang.org/account/avatar/00/15/14/82/c2b825c0.jpg","comment_is_top":false,"comment_ctime":1551192873,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551192873","product_id":100023201,"comment_content":"用let更多一点","like_count":0},{"had_liked":false,"id":70537,"user_name":"@Tc彭于晏","can_delete":false,"product_type":"c1","uid":1392186,"ip_address":"","ucode":"3E5096168DF639","user_header":"https://static001.geekbang.org/account/avatar/00/15/3e/3a/d132a529.jpg","comment_is_top":false,"comment_ctime":1551134909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551134909","product_id":100023201,"comment_content":"最后一个代码片段，中的b1  b2  o1 o2","like_count":0}]}