{"id":103397,"title":"12 | 客户端都有哪些不常见但是很高级的功能？","content":"<p>你好，我是胡夕。今天我要和你分享的主题是：客户端都有哪些不常见但是很高级的功能。</p><p>既然是不常见，那就说明在实际场景中并没有太高的出场率，但它们依然是很高级很实用的。下面就有请今天的主角登场：Kafka拦截器。</p><h2><strong>什么是拦截器？</strong></h2><p>如果你用过Spring Interceptor或是Apache Flume，那么应该不会对拦截器这个概念感到陌生，其基本思想就是允许应用程序在不修改逻辑的情况下，动态地实现一组可插拔的事件处理逻辑链。它能够在主业务操作的前后多个时间点上插入对应的“拦截”逻辑。下面这张图展示了Spring MVC拦截器的工作原理：</p><p><img src=\"https://static001.geekbang.org/resource/image/09/c4/096831a3ba037b3f9e507e6db631d3c4.png?wh=770*461\" alt=\"\"></p><center><a href=\"https://o7planning.org/en/11229/spring-mvc-interceptors-tutorial\">图片来源</a> </center><p>拦截器1和拦截器2分别在请求发送之前、发送之后以及完成之后三个地方插入了对应的处理逻辑。而Flume中的拦截器也是同理，它们插入的逻辑可以是修改待发送的消息，也可以是创建新的消息，甚至是丢弃消息。这些功能都是以配置拦截器类的方式动态插入到应用程序中的，故可以快速地切换不同的拦截器而不影响主程序逻辑。</p><p>Kafka拦截器借鉴了这样的设计思路。你可以在消息处理的前后多个时点动态植入不同的处理逻辑，比如在消息发送前或者在消息被消费后。</p><p>作为一个非常小众的功能，Kafka拦截器自0.10.0.0版本被引入后并未得到太多的实际应用，我也从未在任何Kafka技术峰会上看到有公司分享其使用拦截器的成功案例。但即便如此，在自己的Kafka工具箱中放入这么一个有用的东西依然是值得的。今天我们就让它来发挥威力，展示一些非常酷炫的功能。</p><!-- [[[read_end]]] --><h2><strong>Kafka拦截器</strong></h2><p><strong>Kafka拦截器分为生产者拦截器和消费者拦截器</strong>。生产者拦截器允许你在发送消息前以及消息提交成功后植入你的拦截器逻辑；而消费者拦截器支持在消费消息前以及提交位移后编写特定逻辑。值得一提的是，这两种拦截器都支持链的方式，即你可以将一组拦截器串连成一个大的拦截器，Kafka会按照添加顺序依次执行拦截器逻辑。</p><p>举个例子，假设你想在生产消息前执行两个“前置动作”：第一个是为消息增加一个头信息，封装发送该消息的时间，第二个是更新发送消息数字段，那么当你将这两个拦截器串联在一起统一指定给Producer后，Producer会按顺序执行上面的动作，然后再发送消息。</p><p>当前Kafka拦截器的设置方法是通过参数配置完成的。生产者和消费者两端有一个相同的参数，名字叫interceptor.classes，它指定的是一组类的列表，每个类就是特定逻辑的拦截器实现类。拿上面的例子来说，假设第一个拦截器的完整类路径是com.yourcompany.kafkaproject.interceptors.AddTimeStampInterceptor，第二个类是com.yourcompany.kafkaproject.interceptors.UpdateCounterInterceptor，那么你需要按照以下方法在Producer端指定拦截器：</p><pre><code>Properties props = new Properties();\nList&lt;String&gt; interceptors = new ArrayList&lt;&gt;();\ninterceptors.add(&quot;com.yourcompany.kafkaproject.interceptors.AddTimestampInterceptor&quot;); // 拦截器1\ninterceptors.add(&quot;com.yourcompany.kafkaproject.interceptors.UpdateCounterInterceptor&quot;); // 拦截器2\nprops.put(ProducerConfig.INTERCEPTOR_CLASSES_CONFIG, interceptors);\n……\n</code></pre><p>现在问题来了，我们应该怎么编写AddTimeStampInterceptor和UpdateCounterInterceptor类呢？其实很简单，这两个类以及你自己编写的所有Producer端拦截器实现类都要继承org.apache.kafka.clients.producer.ProducerInterceptor接口。该接口是Kafka提供的，里面有两个核心的方法。</p><ol>\n<li>\n<p>onSend：该方法会在消息发送之前被调用。如果你想在发送之前对消息“美美容”，这个方法是你唯一的机会。</p>\n</li>\n<li>\n<p>onAcknowledgement：该方法会在消息成功提交或发送失败之后被调用。还记得我在上一期中提到的发送回调通知callback吗？onAcknowledgement的调用要早于callback的调用。值得注意的是，这个方法和onSend不是在同一个线程中被调用的，因此如果你在这两个方法中调用了某个共享可变对象，一定要保证线程安全哦。还有一点很重要，这个方法处在Producer发送的主路径中，所以最好别放一些太重的逻辑进去，否则你会发现你的Producer TPS直线下降。</p>\n</li>\n</ol><p>同理，指定消费者拦截器也是同样的方法，只是具体的实现类要实现org.apache.kafka.clients.consumer.ConsumerInterceptor接口，这里面也有两个核心方法。</p><ol>\n<li>\n<p>onConsume：该方法在消息返回给Consumer程序之前调用。也就是说在开始正式处理消息之前，拦截器会先拦一道，搞一些事情，之后再返回给你。</p>\n</li>\n<li>\n<p>onCommit：Consumer在提交位移之后调用该方法。通常你可以在该方法中做一些记账类的动作，比如打日志等。</p>\n</li>\n</ol><p>一定要注意的是，<strong>指定拦截器类时要指定它们的全限定名</strong>，即full qualified name。通俗点说就是要把完整包名也加上，不要只有一个类名在那里，并且还要保证你的Producer程序能够正确加载你的拦截器类。</p><h2><strong>典型使用场景</strong></h2><p>Kafka拦截器都能用在哪些地方呢？其实，跟很多拦截器的用法相同，<strong>Kafka拦截器可以应用于包括客户端监控、端到端系统性能检测、消息审计等多种功能在内的场景</strong>。</p><p>我以端到端系统性能检测和消息审计为例来展开介绍下。</p><p>今天Kafka默认提供的监控指标都是针对单个客户端或Broker的，你很难从具体的消息维度去追踪集群间消息的流转路径。同时，如何监控一条消息从生产到最后消费的端到端延时也是很多Kafka用户迫切需要解决的问题。</p><p>从技术上来说，我们可以在客户端程序中增加这样的统计逻辑，但是对于那些将Kafka作为企业级基础架构的公司来说，在应用代码中编写统一的监控逻辑其实是很难的，毕竟这东西非常灵活，不太可能提前确定好所有的计算逻辑。另外，将监控逻辑与主业务逻辑耦合也是软件工程中不提倡的做法。</p><p>现在，通过实现拦截器的逻辑以及可插拔的机制，我们能够快速地观测、验证以及监控集群间的客户端性能指标，特别是能够从具体的消息层面上去收集这些数据。这就是Kafka拦截器的一个非常典型的使用场景。</p><p>我们再来看看消息审计（message audit）的场景。设想你的公司把Kafka作为一个私有云消息引擎平台向全公司提供服务，这必然要涉及多租户以及消息审计的功能。</p><p>作为私有云的PaaS提供方，你肯定要能够随时查看每条消息是哪个业务方在什么时间发布的，之后又被哪些业务方在什么时刻消费。一个可行的做法就是你编写一个拦截器类，实现相应的消息审计逻辑，然后强行规定所有接入你的Kafka服务的客户端程序必须设置该拦截器。</p><h2><strong>案例分享</strong></h2><p>下面我以一个具体的案例来说明一下拦截器的使用。在这个案例中，我们通过编写拦截器类来统计消息端到端处理的延时，非常实用，我建议你可以直接移植到你自己的生产环境中。</p><p>我曾经给一个公司做Kafka培训，在培训过程中，那个公司的人提出了一个诉求。他们的场景很简单，某个业务只有一个Producer和一个Consumer，他们想知道该业务消息从被生产出来到最后被消费的平均总时长是多少，但是目前Kafka并没有提供这种端到端的延时统计。</p><p>学习了拦截器之后，我们现在知道可以用拦截器来满足这个需求。既然是要计算总延时，那么一定要有个公共的地方来保存它，并且这个公共的地方还是要让生产者和消费者程序都能访问的。在这个例子中，我们假设数据被保存在Redis中。</p><p>Okay，这个需求显然要实现生产者拦截器，也要实现消费者拦截器。我们先来实现前者：</p><pre><code>public class AvgLatencyProducerInterceptor implements ProducerInterceptor&lt;String, String&gt; {\n\n\n    private Jedis jedis; // 省略Jedis初始化\n\n\n    @Override\n    public ProducerRecord&lt;String, String&gt; onSend(ProducerRecord&lt;String, String&gt; record) {\n        jedis.incr(&quot;totalSentMessage&quot;);\n        return record;\n    }\n\n\n    @Override\n    public void onAcknowledgement(RecordMetadata metadata, Exception exception) {\n    }\n\n\n    @Override\n    public void close() {\n    }\n\n\n    @Override\n    public void configure(Map&lt;java.lang.String, ?&gt; configs) {\n    }\n</code></pre><p>上面的代码比较关键的是在发送消息前更新总的已发送消息数。为了节省时间，我没有考虑发送失败的情况，因为发送失败可能导致总发送数不准确。不过好在处理思路是相同的，你可以有针对性地调整下代码逻辑。</p><p>下面是消费者端的拦截器实现，代码如下：</p><pre><code>public class AvgLatencyConsumerInterceptor implements ConsumerInterceptor&lt;String, String&gt; {\n\n\n    private Jedis jedis; //省略Jedis初始化\n\n\n    @Override\n    public ConsumerRecords&lt;String, String&gt; onConsume(ConsumerRecords&lt;String, String&gt; records) {\n        long lantency = 0L;\n        for (ConsumerRecord&lt;String, String&gt; record : records) {\n            lantency += (System.currentTimeMillis() - record.timestamp());\n        }\n        jedis.incrBy(&quot;totalLatency&quot;, lantency);\n        long totalLatency = Long.parseLong(jedis.get(&quot;totalLatency&quot;));\n        long totalSentMsgs = Long.parseLong(jedis.get(&quot;totalSentMessage&quot;));\n        jedis.set(&quot;avgLatency&quot;, String.valueOf(totalLatency / totalSentMsgs));\n        return records;\n    }\n\n\n    @Override\n    public void onCommit(Map&lt;TopicPartition, OffsetAndMetadata&gt; offsets) {\n    }\n\n\n    @Override\n    public void close() {\n    }\n\n\n    @Override\n    public void configure(Map&lt;String, ?&gt; configs) {\n</code></pre><p>在上面的消费者拦截器中，我们在真正消费一批消息前首先更新了它们的总延时，方法就是用当前的时钟时间减去封装在消息中的创建时间，然后累计得到这批消息总的端到端处理延时并更新到Redis中。之后的逻辑就很简单了，我们分别从Redis中读取更新过的总延时和总消息数，两者相除即得到端到端消息的平均处理延时。</p><p>创建好生产者和消费者拦截器后，我们按照上面指定的方法分别将它们配置到各自的Producer和Consumer程序中，这样就能计算消息从Producer端到Consumer端平均的处理延时了。这种端到端的指标监控能够从全局角度俯察和审视业务运行情况，及时查看业务是否满足端到端的SLA目标。</p><h2><strong>小结</strong></h2><p>今天我们花了一些时间讨论Kafka提供的冷门功能：拦截器。如之前所说，拦截器的出场率极低，以至于我从未看到过国内大厂实际应用Kafka拦截器的报道。但冷门不代表没用。事实上，我们可以利用拦截器满足实际的需求，比如端到端系统性能检测、消息审计等。</p><p>从这一期开始，我们将逐渐接触到更多的实际代码。看完了今天的分享，我希望你能够亲自动手编写一些代码，去实现一个拦截器，体会一下Kafka拦截器的功能。要知道，“纸上得来终觉浅，绝知此事要躬行”。也许你在敲代码的同时，就会想到一个使用拦截器的绝妙点子，让我们拭目以待吧。</p><p><img src=\"https://static001.geekbang.org/resource/image/f2/0d/f2cbe18428396aab14749be10dc5550d.jpg?wh=2069*2560\" alt=\"\"></p><h2><strong>开放讨论</strong></h2><p>思考这样一个问题：Producer拦截器onSend方法的签名如下：</p><pre><code>public ProducerRecord&lt;K, V&gt; onSend(ProducerRecord&lt;K, V&gt; record)\n</code></pre><p>如果我实现的逻辑仅仅是return null，你觉得Kafka会丢弃该消息，还是原封不动地发送消息？请动手试验一下，看看结果是否符合你的预期。</p><p>欢迎写下你的思考和答案，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p></p>","comments":[{"had_liked":false,"id":110311,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1562228191,"is_pvip":false,"replies":[{"id":"40152","content":"消息堆积可能原因如下：1. 生产速度大于消费速度，这样可以适当增加分区，增加consumer数量，提升消费TPS；2. consumer消费性能低，查一下是否有很重的消费逻辑（比如拿到消息后写HDFS或HBASE这种逻辑就挺重的），看看是否可以优化consumer TPS；3. 确保consumer端没有因为异常而导致消费hang住; 4. 如果你使用的是消费者组，确保没有频繁地发生rebalance<br><br>主要排查下可能是哪些原因 ","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562287256,"ip_address":"","comment_id":110311,"utype":1}],"discussion_count":17,"race_medal":0,"score":"319389808095","product_id":100029201,"comment_content":"胡老师您好！ 我公司现在就我一个人懂点kafka，但是公司线下却有使用kafka，现在知道我学习这个就交给我了，我现在遇到一个线上问题：消息经常堆积起来，不能消费了，重启服务就能继续消费了。我目前得能力还搞不定，望老师能给指点一二 。谢谢。谢谢","like_count":75,"discussions":[{"author":{"id":1448893,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKj4w4lW7ibGEVxPv8wS1CrXKDeBz3RAaAdISxQSD23uUpV3wicsIMepaYZE8GzRcWmSpjet5NDN4MA/132","nickname":"Zm","note":"","ucode":"831FF80F07E965","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378278,"discussion_content":"如果不能消费了，基本上是消费端异常线程挂了。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1623144268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456810,"discussion_content":"消息堆积可能原因如下：1. 生产速度大于消费速度，这样可以适当增加分区，增加consumer数量，提升消费TPS；2. consumer消费性能低，查一下是否有很重的消费逻辑（比如拿到消息后写HDFS或HBASE这种逻辑就挺重的），看看是否可以优化consumer TPS；3. 确保consumer端没有因为异常而导致消费hang住; 4. 如果你使用的是消费者组，确保没有频繁地发生rebalance\n\n主要排查下可能是哪些原因 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562287256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":5,"child_discussions":[{"author":{"id":1450353,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/71/f881973f.jpg","nickname":"乔康","note":"","ucode":"332B93AB67D6CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":563699,"discussion_content":"如何确定生产速度大于消费速度呢？是有查询命令，还是需要代码实现统计功能？线上总会出现不消费的现象，这边是龙芯机器，性能很差，总有死机和断网情况，建立了五台的kafka 集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650065890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":456810,"ip_address":""},"score":563699,"extra":""},{"author":{"id":1214808,"avatar":"https://static001.geekbang.org/account/avatar/00/12/89/58/ba318314.jpg","nickname":"db","note":"","ucode":"2E21B60B4C0FC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1450353,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/71/f881973f.jpg","nickname":"乔康","note":"","ucode":"332B93AB67D6CA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572284,"discussion_content":"装一下kagka manager管理软件，期间需要编译一下再安装，然后可以通过kafka管理页面查看消息堆积情况，如果消息很快就消费完了，没有堆积那就没问题，要是显示消息数量一直在增长，那么说明消费者那边消费存在问题(可能是消费者所在机器性能太低，或者消费进程掉了之类的吧，比如logstash、flume等等)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652691645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":563699,"ip_address":""},"score":572284,"extra":""},{"author":{"id":1214808,"avatar":"https://static001.geekbang.org/account/avatar/00/12/89/58/ba318314.jpg","nickname":"db","note":"","ucode":"2E21B60B4C0FC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1450353,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/71/f881973f.jpg","nickname":"乔康","note":"","ucode":"332B93AB67D6CA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572286,"discussion_content":"1、kafka manager编译好的软件链接：链接：https://pan.baidu.com/s/1hGtmZH7eODeOttt6LEypnw 提取码：e7w9\n2、kafka manager管理软件安装文件介绍：https://blog.csdn.net/Kammingo/article/details/106813447","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652692004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":563699,"ip_address":""},"score":572286,"extra":""}]},{"author":{"id":2270904,"avatar":"","nickname":"102447","note":"","ucode":"82B85EFB6AB052","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338080,"discussion_content":"所以高手。。。列出的问题很能看出水平","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609166373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1516600,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/wBjvGCCZmO0Bic0DrnG466y6hwPkibGevAV6E6FPfQEricvw5toL7a2HSgjhI83cCiadrUibIyVibkgbbMOHVxo7HA8Q/132","nickname":"距离30米","note":"","ucode":"5566D9AB9E47DE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590123,"discussion_content":"还有一个，如果每次poll的时间，和你消费的能力不足，会被kafka把你主动T掉的，这也是为什么不能消费的原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665543234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3071431,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/dd/c7/9523b3dc.jpg","nickname":"月影","note":"","ucode":"39D5315F2365A8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587058,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662722408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2071279,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9a/ef/6162b0e0.jpg","nickname":"Rangarok","note":"","ucode":"D13AF6E247EFCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575434,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654830493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2906256,"avatar":"","nickname":"Geek_7cd8d7","note":"","ucode":"18F8A69B1C710E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549505,"discussion_content":"如果你用的kafkastream 那网络抖动都有可能导致消费者不消费 这种情况下可以增大心跳周期和session时长尽可能避免","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644037762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543972,"discussion_content":"一种情况可能是你本身消息格式有问题，异常导致没法手动提交，重启后这个消息又过期了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641369441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179249,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/71/28b73687.jpg","nickname":"Zz","note":"","ucode":"C3A3C11071E86B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530775,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637145296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061786,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/9a/a323b2f1.jpg","nickname":"悠悠小竹子","note":"","ucode":"A5E6731D28EBF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197125,"discussion_content":"大概率是消费短异常了，然后消费线程挂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583408830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49986,"discussion_content":"使用的是消费者组，今天发生rebalance了,然后就挂了.还真不知道为什么.我再百度一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573654981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49985,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573654923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108853,"user_name":"王槐铤","can_delete":false,"product_type":"c1","uid":1073782,"ip_address":"","ucode":"D01A18E5025391","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/76/0564a5ee.jpg","comment_is_top":false,"comment_ctime":1561901811,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78871313139","product_id":100029201,"comment_content":"onSend传null会在KafkaProducer类中调用doSend时引发NPE，并通过 ProducerInterceptors.onSendError 方法传导至onAcknowledgement，以及throw到用户编写的Producer中。","like_count":19},{"had_liked":false,"id":108729,"user_name":"落霞与孤鹜","can_delete":false,"product_type":"c1","uid":1111004,"ip_address":"","ucode":"1F06EB86DD2E6B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/dc/e7e5c159.jpg","comment_is_top":false,"comment_ctime":1561866228,"is_pvip":false,"replies":[{"id":"39432","content":"我假设你指的名字是group.id。那么把A改成B对于Kafka而言就是新的consumer。新consumer从头还是从最新开始消费取决于auto.offset.reset的设置","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561946372,"ip_address":"","comment_id":108729,"utype":1}],"discussion_count":3,"race_medal":0,"score":"78871277556","product_id":100029201,"comment_content":"这个问题和这期的内容没关系😓。<br><br>如果一个主题，由一个应用的名为A的消费组消费，然后把消费组名改为B，重新发布应用，这个时候是不是从主题的分区头开始消费？如何保证从上次A消费组的最新偏移量处开始消费？","like_count":19,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456093,"discussion_content":"我假设你指的名字是group.id。那么把A改成B对于Kafka而言就是新的consumer。新consumer从头还是从最新开始消费取决于auto.offset.reset的设置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561946372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1058231,"avatar":"https://static001.geekbang.org/account/avatar/00/10/25/b7/c90b315b.jpg","nickname":"羊八井","note":"","ucode":"72731AC6ECCFA1","race_medal":3,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299486,"discussion_content":"group.id 换了的话，可以先把老的 offset 取出来，再按 offset 开始消费，就能保持从之前的最新偏移量处开始消费了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1597717006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183423,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAqN8yGhXKdbmiaewYGaTtKGYgy8d691LOCRJdDbfW8hDFM5HagwvTJup9p5mNjoPyl0cvapHEyWA/132","nickname":"Kyrie","note":"","ucode":"C548CB78393159","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138586,"discussion_content":"可以从指定offset开始消费的吧，不然如果新加进来一个group 从头消费 最坏的情况可能要消费7天的消息，别的consumer估计要等死了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579254546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205042,"user_name":"李先生","can_delete":false,"product_type":"c1","uid":1237614,"ip_address":"","ucode":"D9039715F7D290","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/6e/0a300829.jpg","comment_is_top":false,"comment_ctime":1586514220,"is_pvip":false,"replies":[{"id":"76728","content":"如果只是这样使用，我倒是不建议用MySQL来做去重，你还不如在应用层面自行去重。一定要用的话，不妨试试把MySQL表为topic key做分区表吧","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1586610180,"ip_address":"","comment_id":205042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44536187180","product_id":100029201,"comment_content":"胡哥：<br>consumer消费：比如异步发积分，发积分的消息进入kafka，加积分服务监听kafka的topic，为了避免重复消费，加积分服务获取到消息后先写入mysql，并利用mysql的唯一索引的能力来避免重复消费，然后加积分服务异步去执行mysql中的信息去实现加积分。这种实现方案会导致消费性能低下，但是写入mysql一是避免重复消费，二是做一条成功的记录(便于后期查询)。这种如何优化呢","like_count":11,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491364,"discussion_content":"如果只是这样使用，我倒是不建议用MySQL来做去重，你还不如在应用层面自行去重。一定要用的话，不妨试试把MySQL表为topic key做分区表吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586610180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109510,"user_name":"张庆","can_delete":false,"product_type":"c1","uid":1050284,"ip_address":"","ucode":"17AE1E23B83304","user_header":"https://static001.geekbang.org/account/avatar/00/10/06/ac/604de2e8.jpg","comment_is_top":false,"comment_ctime":1562047692,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44511720652","product_id":100029201,"comment_content":"return null ; 报错了，NullPointException错误，KafkaProducer doSend方法里面获取消息主题和分区。","like_count":10,"discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49993,"discussion_content":"马克,未完成验证","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573655417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108609,"user_name":"Lei@时速云","can_delete":false,"product_type":"c1","uid":1054183,"ip_address":"","ucode":"F9BD7DBD99864C","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/e7/da14c0a9.jpg","comment_is_top":false,"comment_ctime":1561814886,"is_pvip":false,"replies":[{"id":"39439","content":"磊总别闹：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561946600,"ip_address":"","comment_id":108609,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35921553254","product_id":100029201,"comment_content":"👍 胡总出专栏了","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456057,"discussion_content":"磊总别闹：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561946600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109013,"user_name":"打码的土豆","can_delete":false,"product_type":"c1","uid":1395211,"ip_address":"","ucode":"33B8ED2BFE0752","user_header":"https://static001.geekbang.org/account/avatar/00/15/4a/0b/775b0a98.jpg","comment_is_top":false,"comment_ctime":1561948537,"is_pvip":false,"replies":[{"id":"39461","content":"它这句话的意思是不需要用户手动调用flush来刷盘，由os自己来做：)","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561951997,"ip_address":"","comment_id":109013,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31626719609","product_id":100029201,"comment_content":"老师你好 最近在看kafka官方文档时有一处没看懂还望老师指教 <br>All data is immediately written to a persistent log on the filesystem without necessarily flushing to disk. In effect this just means that it is transferred into the kernel&#39;s pagecache<br>这上面说的文件系统上的持久日志为什么会是pagecache  pagecache不是内存的一部分吗","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456210,"discussion_content":"它这句话的意思是不需要用户手动调用flush来刷盘，由os自己来做：)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561951997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397491,"discussion_content":"写入数据一开始都会在cache（这里只讨论文件系统 裸io不考虑）之后打满或是遇到close flush就提交","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632628232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171204,"user_name":"IT小僧","can_delete":false,"product_type":"c1","uid":1036906,"ip_address":"","ucode":"4DC9B291AAD748","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/6a/a9039139.jpg","comment_is_top":false,"comment_ctime":1578880692,"is_pvip":true,"replies":[{"id":"66482","content":"是的，你是对的~ 其实放在哪个方法里面取决于你的计时逻辑：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578968339,"ip_address":"","comment_id":171204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27348684468","product_id":100029201,"comment_content":"老师好！这个消费者段onConsume是在消费数据之前执行的方法，并不能真正统计实际处理该消费耗费时间的吧。我觉得理应放在onCommit里面。","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481261,"discussion_content":"是的，你是对的~ 其实放在哪个方法里面取决于你的计时逻辑：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578968339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170240,"user_name":"小马","can_delete":false,"product_type":"c1","uid":1490686,"ip_address":"","ucode":"92B7ECD23BDCB5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoXW5rycAcrNTwgOvib8poPXO0zvIekIPzBZJfsnciaLPIw9Q1t3rsXeH6DR24QndpYQibvibhR1tKHPw/132","comment_is_top":false,"comment_ctime":1578555538,"is_pvip":false,"replies":[{"id":"66076","content":"1. 确实有这个问题。用户自己来规避之<br>2. 同意~<br>3. 我们还是能保证消息不丢失的吧：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578619194,"ip_address":"","comment_id":170240,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27348359314","product_id":100029201,"comment_content":"老师有两个疑问请教下：<br>1、时间的一致性问题。System.currentTimeMillis() - record.timestamp()发送和接收的时间实际上可能来自两台机器，有可能时间不一致，会导致统计结果偏差很大;<br>2、消费端代码计算时间差是在循环里面进行的，把System.currentTimeMillis()提到循环外面应该会好一点吧，毕竟这一批消息应该算是同时接收的;<br>3、消息总数是在生产端统计的，时延是在消费端统计的，但是如果在消息传输过程中出现部分消息丢失是不是会影响统计的准确性。","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480900,"discussion_content":"1. 确实有这个问题。用户自己来规避之\n2. 同意~\n3. 我们还是能保证消息不丢失的吧：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578619194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/1b/82310e20.jpg","nickname":"拿笔小星","note":"","ucode":"D3D8F6A959710D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533561,"discussion_content":"好问题，赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637905870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397496,"discussion_content":"可能这个patch太古老 胡老师已经不记得了吧 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632628536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397495,"discussion_content":"这里有个注意点System.currentTimeMillis()在kafka中如果用作统计时长 那么调用频次一定非常高 而这个问题当年kafka就遇到过严重性能下降。参见KAFKA-2950","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632628514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123805,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1565764878,"is_pvip":false,"replies":[{"id":"45640","content":"1. 实际上这个交由OS来决定，Kafka不管<br>2. 从拉取的方式。Kafka定义了水位的概念来标识拉取的进度","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565876464,"ip_address":"","comment_id":123805,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27335568654","product_id":100029201,"comment_content":"胡老师好，请教两个小问题<br>1：broker通过网络拿到消息后，落盘的规则是什么？来一条消息就落盘一条？还是积攒够一定的量再落盘？<br>2：从追主，新的消息是主主动推给各个从的？还是从主动拉取的？如果是主动拉取，从怎么知道主有新的消息的？另外，同步的时候是只要有一条新消息就同步嘛？<br>如果其他同学清楚，也请帮忙解答一下，多谢。","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462822,"discussion_content":"1. 实际上这个交由OS来决定，Kafka不管\n2. 从拉取的方式。Kafka定义了水位的概念来标识拉取的进度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565876464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183423,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAqN8yGhXKdbmiaewYGaTtKGYgy8d691LOCRJdDbfW8hDFM5HagwvTJup9p5mNjoPyl0cvapHEyWA/132","nickname":"Kyrie","note":"","ucode":"C548CB78393159","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138588,"discussion_content":"1 如果是OS来决定刷盘时机的话， broker宕机就有可能丢消息\n2 高水位和低水位我记得是用来控制某个消息是否可以同步给follower的规则呢\n\n希望老师解答哈 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579254919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061786,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/9a/a323b2f1.jpg","nickname":"悠悠小竹子","note":"","ucode":"A5E6731D28EBF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197131,"discussion_content":"如果是拉的，实效性如何处理？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583409004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204610,"user_name":"周曙光爱学习","can_delete":false,"product_type":"c1","uid":1022920,"ip_address":"","ucode":"98EAB6EBAB34B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/c8/665100a3.jpg","comment_is_top":false,"comment_ctime":1586428962,"is_pvip":false,"replies":[{"id":"76528","content":"嗯嗯，算是一个不太常见功能的典型应用了：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1586481559,"ip_address":"","comment_id":204610,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18766298146","product_id":100029201,"comment_content":"拦截器的确是很有用，我们在grpc的拦截器中做限流处理。同理，由于下游存储TPS能力有限，也完全可以在kafka消费的拦截器中做消费限流处理，防止把存储打挂","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491232,"discussion_content":"嗯嗯，算是一个不太常见功能的典型应用了：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586481559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154628,"user_name":"进击的姬哥","can_delete":false,"product_type":"c1","uid":1527231,"ip_address":"","ucode":"0A6ED9C58F1FE0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1T8Etnuwm77aViawR2wyricV9SIh7EadUEmCZStBHZKC0BYibmwwFTVaVVBJLibnfibOPyfkgfrBuQePcicVHzny8iaNg/132","comment_is_top":false,"comment_ctime":1574496008,"is_pvip":false,"replies":[{"id":"59491","content":"单条消息","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574642934,"ip_address":"","comment_id":154628,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18754365192","product_id":100029201,"comment_content":"Interceptor处理数据是单条的吗，还是多条数据作为一个集合","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475530,"discussion_content":"单条消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151114,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1573654906,"is_pvip":false,"replies":[{"id":"58203","content":"我的经验是先解决OOM的问题吧。至于commit 失败，通常是因为事件处理的速度太慢了","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1573695395,"ip_address":"","comment_id":151114,"utype":1}],"discussion_count":7,"race_medal":0,"score":"18753524090","product_id":100029201,"comment_content":"请问老师无法完成提交,是因为重新平衡,是什么原因才会导致.<br>刚接触不久,就要修改线上环境问题.但是一直跑了一小时就会下面问题,然后oom<br>Group coordinator rl-hadoop5.gci.com:9092 (id: 2147483646 rack: null) is unavailable or invalid, will attempt rediscovery<br><br><br>Offset commit failed on partition dispatch_bus-1 at offset 28978632: The coordinator is not aware of this member.<br><br><br>Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474367,"discussion_content":"我的经验是先解决OOM的问题吧。至于commit 失败，通常是因为事件处理的速度太慢了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573695395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2071279,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9a/ef/6162b0e0.jpg","nickname":"Rangarok","note":"","ucode":"D13AF6E247EFCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575437,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654831288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179293,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/9d/105fa746.jpg","nickname":"宇翔","note":"","ucode":"CDEAAB29FC1A9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":168485,"discussion_content":"遇到同样的问题，请问楼主最后是怎么解决的？或者有没有什么思路\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581583927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179293,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/9d/105fa746.jpg","nickname":"宇翔","note":"","ucode":"CDEAAB29FC1A9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265772,"discussion_content":"才看到，其实是因为程度消费队列累积太多处理不过来导致oom，消费端处理时要处理掉一些过期数据以及处理逻辑不要太重。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589436913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":168485,"ip_address":""},"score":265772,"extra":""},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179293,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/9d/105fa746.jpg","nickname":"宇翔","note":"","ucode":"CDEAAB29FC1A9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265773,"discussion_content":"比如加锁，比如一些数据其实已经过期了，应该过滤了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589436970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":168485,"ip_address":""},"score":265773,"extra":""}]},{"author":{"id":1132315,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","nickname":"胡小禾","note":"","ucode":"1C23B7492C0C9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":158900,"discussion_content":"事件处理太慢导致 commit失败 ，为啥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580637271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1132315,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","nickname":"胡小禾","note":"","ucode":"1C23B7492C0C9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543973,"discussion_content":"过长时间没拉取消息时，会被Kafka认定该消费者可能出现问题导致rebalance，因为需要poll中发送元数据信息，相当于发送心跳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641369836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":158900,"ip_address":""},"score":543973,"extra":""}]}]},{"had_liked":false,"id":206417,"user_name":"Roy Liang","can_delete":false,"product_type":"c1","uid":1098898,"ip_address":"","ucode":"1DF5FC831A35DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/92/338b5609.jpg","comment_is_top":false,"comment_ctime":1586857931,"is_pvip":false,"replies":[{"id":"77341","content":"hmmm.... 我的意思是消息被broker端应答就表示消息被提交成功了。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587004138,"ip_address":"","comment_id":206417,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14471759819","product_id":100029201,"comment_content":"老师你好，onAcknowledgement不应该是消息ACK后吗？怎么是提交成功后呢？提交成功后感觉应该属于callback的","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491782,"discussion_content":"hmmm.... 我的意思是消息被broker端应答就表示消息被提交成功了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587004138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108429,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1561771430,"is_pvip":false,"replies":[{"id":"39443","content":"onsend是producer进程下的线程；onConsume是consumer进程下的线程，它们不是一个进程。我说的是onSend和onAcknowledgement是一个进程下的多个线程。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561946836,"ip_address":"","comment_id":108429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14446673318","product_id":100029201,"comment_content":"请问下老师。onsend或onconsumer的执行线程和发送或消费消息的线程是否是同一个线程？加入太多耗时逻辑是否会影响主逻辑？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455971,"discussion_content":"onsend是producer进程下的线程；onConsume是consumer进程下的线程，它们不是一个进程。我说的是onSend和onAcknowledgement是一个进程下的多个线程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561946836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108464,"user_name":"振超","can_delete":false,"product_type":"c1","uid":1103529,"ip_address":"","ucode":"D55B896810DBBF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/a9/ffd70fdc.jpg","comment_is_top":false,"comment_ctime":1561777671,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10151712263","product_id":100029201,"comment_content":"Producer 发送的是被 ProducerInterceptor 修改后的消息，返回 null 也是一种修改的行为，所以 kafka 不应该对这种情况特殊对待。不过将 null 发送到服务端没有意义，实际执行会出现 NPE，不过异常最终会被捕获传递给 ProducerInterceptor 的 onAcknowledgement 方法。","like_count":2},{"had_liked":false,"id":293316,"user_name":"小马哥","can_delete":false,"product_type":"c1","uid":1358045,"ip_address":"","ucode":"B2C0FF38F8C9BC","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","comment_is_top":false,"comment_ctime":1621332572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5916299868","product_id":100029201,"comment_content":"结果: KafkaProducer.doSend(KafkaProducer.java:876)抛出java.lang.NullPointerException异常<br>原理解释: 与Javaweb的拦截器一样, 被自定义的拦截器拦截之后, 在生产者doSend之前没有将消息放行, 而是放行了null, 生产者doSend(null)抛异常","like_count":1},{"had_liked":false,"id":234292,"user_name":"双椒叔叔","can_delete":false,"product_type":"c1","uid":1395385,"ip_address":"","ucode":"9C4B1DB2E693AF","user_header":"https://static001.geekbang.org/account/avatar/00/15/4a/b9/1531ff1c.jpg","comment_is_top":false,"comment_ctime":1594633944,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5889601240","product_id":100029201,"comment_content":"胡老师，我看了源码后发现<br>1038，1037，1029-----reassign-----&gt;1038,1037,1048<br>迁移计划卡住的那步是这样的<br>首先1029副本的状态从replica中移除流程是<br>controller先把1029offline,<br>然后<br>controller发送状态改变请求给1029<br><br><br>1、first move the replica to offline state (the controller removes it from the ISR)<br><br>2、send stop replica command to the old replicas<br><br><br>3、Eventually partition reassignment could use a callback that does retries if deletion failed<br><br><br>然后返回一个回调状态值NonExistentReplica（因为1029现在是死了的状态）。<br>那么这种情况如何解决呢？<br>是直接在zk中修改该主题的问题分区（执行迁移计划卡主的那个分区）吗？<br>","like_count":2,"discussions":[{"author":{"id":1879982,"avatar":"","nickname":"Geek_505716","note":"","ucode":"4D521700DE208E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349824,"discussion_content":"请问问题解决了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613568260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234291,"user_name":"双椒叔叔","can_delete":false,"product_type":"c1","uid":1395385,"ip_address":"","ucode":"9C4B1DB2E693AF","user_header":"https://static001.geekbang.org/account/avatar/00/15/4a/b9/1531ff1c.jpg","comment_is_top":false,"comment_ctime":1594633770,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5889601066","product_id":100029201,"comment_content":"分区迁移遇到的问题怎么解决呢<br>1038，1037，1029-----reassign-----&gt;1038,1037,1048<br>迁移计划卡死了<br>replica变成1038，1037，1048，1029了，ISR变成了1038,1048<br>其实就是1029机子先宕掉了，我想要把死掉的1029机子上的副本迁移到1048上<br>现在卡死了，一直in progress<br>我想要在replica中remove1029，但是我看了源码发现是状态机维护每一个replica，自己没办法删除，所以现在没辙了。。。","like_count":1},{"had_liked":false,"id":204200,"user_name":"飞猪环游记","can_delete":false,"product_type":"c1","uid":1120765,"ip_address":"","ucode":"BEE1A2E097997D","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/fd/b77903c0.jpg","comment_is_top":false,"comment_ctime":1586350347,"is_pvip":false,"replies":[{"id":"76531","content":"不同同一条，是一批消息。onConsume方法就是在poll返回消息前调用的，你可以在这个方法中加入你的处理逻辑。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1586481912,"ip_address":"","comment_id":204200,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881317643","product_id":100029201,"comment_content":"老师，你好，消费端拦截器里接收到的多条消息是同一条吗？想在拦截器发送前，消费前对同一条消息做些处理可以实现吗","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491100,"discussion_content":"不同同一条，是一批消息。onConsume方法就是在poll返回消息前调用的，你可以在这个方法中加入你的处理逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586481912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173866,"user_name":"yic","can_delete":false,"product_type":"c1","uid":1201577,"ip_address":"","ucode":"C8DC471B7C28B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/a9/5282a560.jpg","comment_is_top":false,"comment_ctime":1579746213,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5874713509","product_id":100029201,"comment_content":"胡老师，关于分享的案例。我感觉消息总数和时延的统计都应该放在消费端呢。毕竟消息的发送和消费是异步的，并不能保证生产者发送的消息立刻就被消费者一次消费。","like_count":1,"discussions":[{"author":{"id":1206149,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/85/a5ad73d8.jpg","nickname":"洋","note":"","ucode":"C7F9707FBCD15F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355976,"discussion_content":"我也是这么想的，异步下不能保证统计数是准确的。不过老师的目的应该是要演示生产和消费拦截器的使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615513608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145305,"user_name":"此方彼方Francis","can_delete":false,"product_type":"c1","uid":1001390,"ip_address":"","ucode":"73E6C93CF1FE39","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/ae/0a5f7a56.jpg","comment_is_top":false,"comment_ctime":1572247703,"is_pvip":false,"replies":[{"id":"56144","content":"Kafka本身也提供了一整套权限控制的逻辑。当然如果你这么用能满足你的需求，我觉得没有任何问题：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1572309203,"ip_address":"","comment_id":145305,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867214999","product_id":100029201,"comment_content":"老师好，在kafka的interceptor里面实现权限控制的逻辑合适吗？<br>假设说有另外一个服务维护了IP和topic之间的关系，在interceptor里面线获取到本机ip有权限的topic列表，然后每次发消息的时候做判断。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472328,"discussion_content":"Kafka本身也提供了一整套权限控制的逻辑。当然如果你这么用能满足你的需求，我觉得没有任何问题：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572309203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115102,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1563495786,"is_pvip":true,"replies":[{"id":"42091","content":"默认情况下是消息发生时producer程序所在机器时钟","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1563517594,"ip_address":"","comment_id":115102,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858463082","product_id":100029201,"comment_content":"System.currentTimeMillis() - record.timestamp() 是否要求生产客户端设置record的timestamp字段？还是Producer Client会自动生成？对于Kafka中的timestamp还搞不太清楚，这对监控比较关键，不知道后面有没有介绍，谢谢","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458966,"discussion_content":"默认情况下是消息发生时producer程序所在机器时钟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563517594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110794,"user_name":"小头针","can_delete":false,"product_type":"c1","uid":1422920,"ip_address":"","ucode":"21EB7CDE48EC9B","user_header":"https://static001.geekbang.org/account/avatar/00/15/b6/48/1275e0ce.jpg","comment_is_top":false,"comment_ctime":1562336194,"is_pvip":false,"replies":[{"id":"40299","content":"可以啊，你想在里面实现什么样的逻辑都行。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562370527,"ip_address":"","comment_id":110794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857303490","product_id":100029201,"comment_content":"我们的应用场景是这样的，将采集到的数据接收到kafka，并由kafka再进行生产供下一逻辑消费，消费的数据进行一些业务的修改，最后进入到查询平台中，但是经常会出现采集端的数据与查询端的数据量相差较大的情况，所以我们就简单的统计了数据写入到redis中。<br><br>胡老师，请问Interceptor可以对生产者生产的数据以及消费者消费的数据进行统计么？<br><br><br>","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457059,"discussion_content":"可以啊，你想在里面实现什么样的逻辑都行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562370527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109059,"user_name":"Geek_Sue","can_delete":false,"product_type":"c1","uid":1580774,"ip_address":"","ucode":"B2C9400D72BB1D","user_header":"","comment_is_top":false,"comment_ctime":1561953913,"is_pvip":false,"replies":[{"id":"39535","content":"事实上，即使不用Kafka的拦截器，这种计数类的指标也可能有些许的不准确，不过应该没关系吧。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561982603,"ip_address":"","comment_id":109059,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856921209","product_id":100029201,"comment_content":"胡老师，我想问下您文中的例子，在onConsume的时候，是否会存在这一时刻Producer仍然在发送消息，然后totalSentMessage这个值拿到的偏小，并不完全准确呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456229,"discussion_content":"事实上，即使不用Kafka的拦截器，这种计数类的指标也可能有些许的不准确，不过应该没关系吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561982603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108508,"user_name":"lmtoo","can_delete":false,"product_type":"c1","uid":1133918,"ip_address":"","ucode":"FCD5B9C941D448","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","comment_is_top":false,"comment_ctime":1561789397,"is_pvip":false,"replies":[{"id":"39441","content":"时钟频率？你是说时钟保持一样吗？一般使用NTP。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561946719,"ip_address":"","comment_id":108508,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5856756693","product_id":100029201,"comment_content":"这个怎么保证不同机器的时钟频率是一样的？，如果不完全一样，误差应该会越累积越大","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456016,"discussion_content":"时钟频率？你是说时钟保持一样吗？一般使用NTP。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561946719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397497,"discussion_content":"如果误差在一秒内 一般可以忽略，否则就要自己做个时钟同步器 NTP lamport clock一类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632628659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342946,"user_name":"崔崔","can_delete":false,"product_type":"c1","uid":1001624,"ip_address":"","ucode":"AEFF335158786B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep7yaY0ibpBicMoQz4QZKOh9Uxv0xZdb4JxmVnlJ5HBRiaENibUKKJrb2u3JibckqIVmuQdQwVxflLIvOQ/132","comment_is_top":false,"comment_ctime":1650543648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650543648","product_id":100029201,"comment_content":"使用生产拦截器，会影响kafka的tps吗","like_count":0},{"had_liked":false,"id":339815,"user_name":"i_chase","can_delete":false,"product_type":"c1","uid":1795511,"ip_address":"","ucode":"09C41C863F4EA3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/b7/058276dc.jpg","comment_is_top":false,"comment_ctime":1648400311,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648400311","product_id":100029201,"comment_content":"思考题：<br>将brokers地址打乱，然后逐个尝试进行连接并获取meta data，只要成功就结束。golang sarama客户端的producer就是这么做的","like_count":0},{"had_liked":false,"id":339810,"user_name":"i_chase","can_delete":false,"product_type":"c1","uid":1795511,"ip_address":"","ucode":"09C41C863F4EA3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/b7/058276dc.jpg","comment_is_top":false,"comment_ctime":1648397866,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648397866","product_id":100029201,"comment_content":"示例代码里，既然将records时延累积，又何必引入redis计算total count?<br>len(records)不是就可以了嘛","like_count":0},{"had_liked":false,"id":326286,"user_name":"葉家豪","can_delete":false,"product_type":"c1","uid":1669220,"ip_address":"","ucode":"21EAB56467F7DA","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/64/c703163a.jpg","comment_is_top":false,"comment_ctime":1639460304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639460304","product_id":100029201,"comment_content":"要怎么强制指定用户必须实现某一个拦截器？","like_count":0},{"had_liked":false,"id":313714,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1632628448,"is_pvip":false,"replies":[{"id":"114438","content":"是的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1634004554,"ip_address":"","comment_id":313714,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1632628448","product_id":100029201,"comment_content":"胡老师 使用kafka统计latency要尤其注意system.currentTimeMills() 如果是kafka这类高吞吐量的埋点要注意频繁的用户态切换问题。<br>这个问题在KAFKA-2950 中也提到过","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527450,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634004554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2071279,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9a/ef/6162b0e0.jpg","nickname":"Rangarok","note":"","ucode":"D13AF6E247EFCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575439,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654831559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292542,"user_name":"xxh","can_delete":false,"product_type":"c1","uid":2531606,"ip_address":"","ucode":"289A870D9FC0FE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/lvLKFmCZfCB7V6e2YA9kL4Fr9KaNEyGiaKBDGDRSuSKqMukJKLb8JH7BXIicdNiaHLmaQladtWJJPqZkyu5icCyrjw/132","comment_is_top":false,"comment_ctime":1620874051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620874051","product_id":100029201,"comment_content":"redis是怎么注入到这个拦截器中的实例？？配置是配置的拦截器的全路径，拦截器的实例spring ioc 并没有管理起来。","like_count":0},{"had_liked":false,"id":288784,"user_name":"eviltion","can_delete":false,"product_type":"c1","uid":1515445,"ip_address":"","ucode":"022DE8510B825E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mWicFKgbjL299CQPEhoFdSAphVb4UpibkhF8loRxryBRt3H7ZGkibibhaKANTxvSiatic4PLCy2MsbEMH1hc76YefPUw/132","comment_is_top":false,"comment_ctime":1618670580,"is_pvip":true,"replies":[{"id":"104997","content":"没太懂你的问题，到底是要发送消息还是消费消息？","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1619004003,"ip_address":"","comment_id":288784,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1618670580","product_id":100029201,"comment_content":"胡老师，问个问题，现在有这样一个需求，定义一个接口，根据传入的参数的其中一个字段来判断是否存在topic,来创建topic，并发送消息，想知道怎么实现动态consumer来消费","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518736,"discussion_content":"没太懂你的问题，到底是要发送消息还是消费消息？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619004003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310388,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","nickname":"Allan","note":"","ucode":"8DA4DBECC2C45C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391340,"discussion_content":"这个问题描述的。。。。。。真不知道再说啥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630406987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284426,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1616241251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616241251","product_id":100029201,"comment_content":"1、如果拦截器返回null，那么我们producer发送的时候就会报空指针，同理consumer的时候也是。感谢老师，我去做了实战操作，所有收获！！","like_count":0},{"had_liked":false,"id":267553,"user_name":"归零","can_delete":false,"product_type":"c1","uid":1103208,"ip_address":"","ucode":"C99B8E93009A46","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","comment_is_top":false,"comment_ctime":1607826877,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1607826877","product_id":100029201,"comment_content":"上述实例有一个前提，就是record.timestamp()表示的是发送消息的时间，这个直接使用kafka的api获取的","like_count":0},{"had_liked":false,"id":267547,"user_name":"归零","can_delete":false,"product_type":"c1","uid":1103208,"ip_address":"","ucode":"C99B8E93009A46","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","comment_is_top":false,"comment_ctime":1607824899,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1607824899","product_id":100029201,"comment_content":"看了四分之一了，冒泡打个卡，每次看评论都有新的思考🤔，坚持下去✊","like_count":0},{"had_liked":false,"id":265644,"user_name":"Lvjsky","can_delete":false,"product_type":"c1","uid":1257661,"ip_address":"","ucode":"9DC0F199596CAF","user_header":"https://static001.geekbang.org/account/avatar/00/13/30/bd/00cc9f72.jpg","comment_is_top":false,"comment_ctime":1606968729,"is_pvip":false,"replies":[{"id":"96625","content":"直接使用流处理框架的filter更加容易些","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1607077641,"ip_address":"","comment_id":265644,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606968729","product_id":100029201,"comment_content":"老师，是否可以使用消费者过滤器，在使用Spark Streaming或Flink消费数据前，通过消费者拦截器过滤掉不需要的数据呢？这样可以减少下游消费者计算量","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511004,"discussion_content":"直接使用流处理框架的filter更加容易些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607077641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244526,"user_name":"氧气🌙 🐟 🌺","can_delete":false,"product_type":"c1","uid":1591015,"ip_address":"","ucode":"8E23C210A9F09E","user_header":"https://static001.geekbang.org/account/avatar/00/18/46/e7/e20279ea.jpg","comment_is_top":false,"comment_ctime":1598572370,"is_pvip":false,"replies":[{"id":"89995","content":"������","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1598580328,"ip_address":"","comment_id":244526,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598572370","product_id":100029201,"comment_content":"如果实现的逻辑仅仅是 return null，你觉得 Kafka 会丢弃该消息，还是原封不动地发送消息？<br>回答：拦截器 return null 意味着什么也不做，会原封不动的发送消息","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504618,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598580328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231244,"user_name":"Rio正在努力赶作业中...","can_delete":false,"product_type":"c1","uid":1338093,"ip_address":"","ucode":"3A0AB026A1B272","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/ed/c3e98fbb.jpg","comment_is_top":false,"comment_ctime":1593613013,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593613013","product_id":100029201,"comment_content":"拦截器的确很有用的，OpenTracing和SkyWalking","like_count":0},{"had_liked":false,"id":229650,"user_name":"mm马","can_delete":false,"product_type":"c1","uid":1462076,"ip_address":"","ucode":"8CD674E4F61FC7","user_header":"https://static001.geekbang.org/account/avatar/00/16/4f/3c/296b5fa7.jpg","comment_is_top":false,"comment_ctime":1593087377,"is_pvip":false,"replies":[{"id":"84795","content":"每个消费者有自己的拦截器，互不影响","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593163488,"ip_address":"","comment_id":229650,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593087377","product_id":100029201,"comment_content":"如果消费者是多个，示例中的消费者端拦截器就有并发问题了吧？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499582,"discussion_content":"每个消费者有自己的拦截器，互不影响","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593163488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212944,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1185504,"ip_address":"","ucode":"34A37F73A48E7F","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","comment_is_top":false,"comment_ctime":1588242011,"is_pvip":false,"replies":[{"id":"79132","content":"集合也要是List&lt;String&gt;，你的是这样吗？","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588400465,"ip_address":"","comment_id":212944,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1588242011","product_id":100029201,"comment_content":"遇到过奇怪的现象：拦截用集合传进去，说class找不到，用字符串传却可以<br>props.put(ProducerConfig.INTERCEPTOR_CLASSES_CONFIG,  &quot;&quot;);<br>这是什么现象啊","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493654,"discussion_content":"集合也要是List&amp;lt;String&amp;gt;，你的是这样吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588400465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185504,"avatar":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","nickname":"星期八","note":"","ucode":"34A37F73A48E7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256006,"discussion_content":"是string集合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588433213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181243,"user_name":"HZ","can_delete":false,"product_type":"c1","uid":1371862,"ip_address":"","ucode":"883D79CEEA9C66","user_header":"https://static001.geekbang.org/account/avatar/00/14/ee/d6/0142c3a3.jpg","comment_is_top":false,"comment_ctime":1582525197,"is_pvip":false,"replies":[{"id":"70339","content":"producer目前使用2个线程：前端主线程和Sender线程。很多操作实际上是在Sender线程完成的，比如ProducerInterceptor的onAcknowledgement方法。<br><br>抛开ProducerInterceptor不说，Java producer目前的线程安全性是自己实现的，你大致可以认为是底层用了线程安全的消息队列类实现简单的生产者-消费者模式而带来的线程安全","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582593452,"ip_address":"","comment_id":181243,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582525197","product_id":100029201,"comment_content":"老师，interceptor的处理，sender，ack，更新元数据，callback处理 这些producer端的功能都是用的不同的线程吗？ producer端的线程安全如何来理解？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484973,"discussion_content":"producer目前使用2个线程：前端主线程和Sender线程。很多操作实际上是在Sender线程完成的，比如ProducerInterceptor的onAcknowledgement方法。\n\n抛开ProducerInterceptor不说，Java producer目前的线程安全性是自己实现的，你大致可以认为是底层用了线程安全的消息队列类实现简单的生产者-消费者模式而带来的线程安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582593452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135939,"user_name":"我已经设置了昵称","can_delete":false,"product_type":"c1","uid":1364034,"ip_address":"","ucode":"ED672C5EBDBDC4","user_header":"https://static001.geekbang.org/account/avatar/00/14/d0/42/6fd01fb9.jpg","comment_is_top":false,"comment_ctime":1569310130,"is_pvip":false,"replies":[{"id":"52132","content":"可以复用你在Spring中创建的producer吗？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569371087,"ip_address":"","comment_id":135939,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569310130","product_id":100029201,"comment_content":"老师，遇到个问题， 自己建了个consumer的interceptor，需要在interceptor中收到消息后，发送响应消息给发送方，但发现interceptor这个实例并没有被spring管理起来，就需要自己再new一个producer。但这个kafka配置又是配置在配置中心，也读不到，只能写死了。有啥好的方法吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468394,"discussion_content":"可以复用你在Spring中创建的producer吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569371087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1364034,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d0/42/6fd01fb9.jpg","nickname":"我已经设置了昵称","note":"","ucode":"ED672C5EBDBDC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20807,"discussion_content":"不行，拿不到那个值，因为kafka在创建interceptor的时候是new出来的，这个new的对象里面根本拿不到任何spring管理的bean","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569378696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119501,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1564619934,"is_pvip":false,"replies":[{"id":"43871","content":"没什么太好的方法。你可以试试压缩。其实消息队列本不适合发送太大的消息体","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564627837,"ip_address":"","comment_id":119501,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1564619934","product_id":100029201,"comment_content":"老师好，有个场景想请教下。我们发送的数据是个大json，大概500K，有一百多的字段，其中一个字段450K是图片base64，发送的速度不到100条&#47;秒，像这种大消息体数据的发送，kafka有什么好的办法么？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460931,"discussion_content":"没什么太好的方法。你可以试试压缩。其实消息队列本不适合发送太大的消息体","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564627837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1096984,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","nickname":"兔2🐰🍃","note":"","ucode":"1FEDA044BB6CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7058,"discussion_content":"将图片数据转移，字段存储图片地址，不知道该方法是否可用于你的场景","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567328582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1006735,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","nickname":"小可","note":"","ucode":"8834AF621FA67D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1096984,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","nickname":"兔2🐰🍃","note":"","ucode":"1FEDA044BB6CBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7097,"discussion_content":"谢谢提供帮助，目前用就是这种方式，想知道不用图片存储服务有没有其他办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567384143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7058,"ip_address":""},"score":7097,"extra":""}]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397499,"discussion_content":"这种最大的问题：1.压缩图片需要动用的码率肯定是吃cpu的 2. 450K * 100 = 45MB  这个带宽不小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632628786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119374,"user_name":"撒旦的堕落","can_delete":false,"product_type":"c1","uid":1116864,"ip_address":"","ucode":"15F6AA41EE556F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/c0/401c240e.jpg","comment_is_top":false,"comment_ctime":1564574790,"is_pvip":false,"replies":[{"id":"43877","content":"这两个方法是在不同的线程中被调用的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564628424,"ip_address":"","comment_id":119374,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564574790","product_id":100029201,"comment_content":"我看到老师回答的onsend 和onAcknowledgement是生产者进程下的不同线程  既然都是子线程 为啥又特意提到onAcknowledgement这个方法又处在发送的主路径中 难道是源码中对这两个方法的调用有区别？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460874,"discussion_content":"这两个方法是在不同的线程中被调用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564628424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112036,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1562657857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562657857","product_id":100029201,"comment_content":"又看了一次！ ","like_count":0},{"had_liked":false,"id":110178,"user_name":"October","can_delete":false,"product_type":"c1","uid":1137879,"ip_address":"","ucode":"CEDA78F4A5F8B1","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/d7/e4673fde.jpg","comment_is_top":false,"comment_ctime":1562204272,"is_pvip":false,"replies":[{"id":"40145","content":"类似于埋点的逻辑。可以在消息处理（发送或消费）的 各个环节埋一些你在意的统计逻辑进去","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562286620,"ip_address":"","comment_id":110178,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562204272","product_id":100029201,"comment_content":"请问老师，kafka Interceptor可以对客户端做哪些监控？可以举个例子吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456761,"discussion_content":"类似于埋点的逻辑。可以在消息处理（发送或消费）的 各个环节埋一些你在意的统计逻辑进去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562286620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109877,"user_name":"mellow","can_delete":false,"product_type":"c1","uid":1257852,"ip_address":"","ucode":"C44F0A588263C6","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/7c/14df0dbf.jpg","comment_is_top":false,"comment_ctime":1562124189,"is_pvip":false,"replies":[{"id":"39798","content":"不支持","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562132303,"ip_address":"","comment_id":109877,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562124189","product_id":100029201,"comment_content":"拦 截 器可以支持在服务端boker吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456619,"discussion_content":"不支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562132303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109020,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1561949629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561949629","product_id":100029201,"comment_content":"看完了，打个卡！ 这个东西设计思想其实不少变成语言都有，思想还是好理解，但是具体到一些特定应用场合是应该好好品味一番！先装kafka ,来实战下！哇咔咔","like_count":0},{"had_liked":false,"id":109016,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1561949213,"is_pvip":false,"replies":[{"id":"39462","content":"要看你的拦截器逻辑是怎么样的了。通常不会有太大影响，。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561952042,"ip_address":"","comment_id":109016,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561949213","product_id":100029201,"comment_content":"拦    截   器 会对Tps产生影响，怎样权衡？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456212,"discussion_content":"要看你的拦截器逻辑是怎么样的了。通常不会有太大影响，。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561952042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108432,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1561771648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561771648","product_id":100029201,"comment_content":"没试验，我觉得是会继续，原因是拦 截器是链式实现的，如果这个拦  截器丢了，后续的如何调用那？","like_count":0}]}