{"id":42154,"title":"26 | 基于角色的权限控制：RBAC","content":"<p>你好，我是张磊。今天我和你分享的主题是：基于角色的权限控制之RBAC。</p><p>在前面的文章中，我已经为你讲解了很多种Kubernetes内置的编排对象，以及对应的控制器模式的实现原理。此外，我还剖析了自定义API资源类型和控制器的编写方式。</p><p>这时候，你可能已经冒出了这样一个想法：控制器模式看起来好像也不难嘛，我能不能自己写一个编排对象呢？</p><p>答案当然是可以的。而且，这才是Kubernetes项目最具吸引力的地方。</p><p>毕竟，在互联网级别的大规模集群里，Kubernetes内置的编排对象，很难做到完全满足所有需求。所以，很多实际的容器化工作，都会要求你设计一个自己的编排对象，实现自己的控制器模式。</p><p>而在Kubernetes项目里，我们可以基于插件机制来完成这些工作，而完全不需要修改任何一行代码。</p><p>不过，你要通过一个外部插件，在Kubernetes里新增和操作API对象，那么就必须先了解一个非常重要的知识：RBAC。</p><p>我们知道，Kubernetes中所有的API对象，都保存在Etcd里。可是，对这些API对象的操作，却一定都是通过访问kube-apiserver实现的。其中一个非常重要的原因，就是你需要APIServer来帮助你做授权工作。</p><!-- [[[read_end]]] --><p>而<strong>在Kubernetes项目中，负责完成授权（Authorization）工作的机制，就是RBAC</strong>：基于角色的访问控制（Role-Based Access Control）。</p><p>如果你直接查看Kubernetes项目中关于RBAC的文档的话，可能会感觉非常复杂。但实际上，等到你用到这些RBAC的细节时，再去查阅也不迟。</p><p>而在这里，我只希望你能明确三个最基本的概念。</p><ol>\n<li>\n<p>Role：角色，它其实是一组规则，定义了一组对Kubernetes API对象的操作权限。</p>\n</li>\n<li>\n<p>Subject：被作用者，既可以是“人”，也可以是“机器”，也可以是你在Kubernetes里定义的“用户”。</p>\n</li>\n<li>\n<p>RoleBinding：定义了“被作用者”和“角色”的绑定关系。</p>\n</li>\n</ol><p>而这三个概念，其实就是整个RBAC体系的核心所在。</p><p><span class=\"orange\">我先来讲解一下Role。</span></p><p>实际上，Role本身就是一个Kubernetes的API对象，定义如下所示：</p><pre><code>kind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  namespace: mynamespace\n  name: example-role\nrules:\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;pods&quot;]\n  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]\n</code></pre><p>首先，这个Role对象指定了它能产生作用的Namepace是：mynamespace。</p><p>Namespace是Kubernetes项目里的一个逻辑管理单位。不同Namespace的API对象，在通过kubectl命令进行操作的时候，是互相隔离开的。</p><p>比如，kubectl get pods -n mynamespace。</p><p>当然，这仅限于逻辑上的“隔离”，Namespace并不会提供任何实际的隔离或者多租户能力。而在前面文章中用到的大多数例子里，我都没有指定Namespace，那就是使用的是默认Namespace：default。</p><p>然后，这个Role对象的rules字段，就是它所定义的权限规则。在上面的例子里，这条规则的含义就是：允许“被作用者”，对mynamespace下面的Pod对象，进行GET、WATCH和LIST操作。</p><p>那么，<span class=\"orange\">这个具体的“被作用者”又是如何指定的呢？这就需要通过RoleBinding来实现了。</span></p><p>当然，RoleBinding本身也是一个Kubernetes的API对象。它的定义如下所示：</p><pre><code>kind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: example-rolebinding\n  namespace: mynamespace\nsubjects:\n- kind: User\n  name: example-user\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: example-role\n  apiGroup: rbac.authorization.k8s.io\n</code></pre><p>可以看到，这个RoleBinding对象里定义了一个subjects字段，即“被作用者”。它的类型是User，即Kubernetes里的用户。这个用户的名字是example-user。</p><p>可是，在Kubernetes中，其实并没有一个叫作“User”的API对象。而且，我们在前面和部署使用Kubernetes的流程里，既不需要User，也没有创建过User。</p><p><strong>这个User到底是从哪里来的呢？</strong></p><p>实际上，Kubernetes里的“User”，也就是“用户”，只是一个授权系统里的逻辑概念。它需要通过外部认证服务，比如Keystone，来提供。或者，你也可以直接给APIServer指定一个用户名、密码文件。那么Kubernetes的授权系统，就能够从这个文件里找到对应的“用户”了。当然，在大多数私有的使用环境中，我们只要使用Kubernetes提供的内置“用户”，就足够了。这部分知识，我后面马上会讲到。</p><p>接下来，我们会看到一个roleRef字段。正是通过这个字段，<span class=\"orange\">RoleBinding对象就可以直接通过名字，来引用我们前面定义的Role对象（example-role），从而定义了“被作用者（Subject）”和“角色（Role）”之间的绑定关系。</span></p><p>需要再次提醒的是，Role和RoleBinding对象都是Namespaced对象（Namespaced Object），它们对权限的限制规则仅在它们自己的Namespace内有效，roleRef也只能引用当前Namespace里的Role对象。</p><p>那么，<strong>对于非Namespaced（Non-namespaced）对象（比如：Node），或者，某一个Role想要作用于所有的Namespace的时候，我们又该如何去做授权呢？</strong></p><p>这时候，我们就必须要使用ClusterRole和ClusterRoleBinding这两个组合了。这两个API对象的用法跟Role和RoleBinding完全一样。只不过，它们的定义里，没有了Namespace字段，如下所示：</p><pre><code>kind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: example-clusterrole\nrules:\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;pods&quot;]\n  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]\n</code></pre><pre><code>kind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: example-clusterrolebinding\nsubjects:\n- kind: User\n  name: example-user\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: example-clusterrole\n  apiGroup: rbac.authorization.k8s.io\n</code></pre><p>上面的例子里的ClusterRole和ClusterRoleBinding的组合，意味着名叫example-user的用户，拥有对所有Namespace里的Pod进行GET、WATCH和LIST操作的权限。</p><p>更进一步地，在Role或者ClusterRole里面，如果要赋予用户example-user所有权限，那你就可以给它指定一个verbs字段的全集，如下所示：</p><pre><code>verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;, &quot;create&quot;, &quot;update&quot;, &quot;patch&quot;, &quot;delete&quot;]\n</code></pre><p>这些就是当前Kubernetes（v1.11）里能够对API对象进行的所有操作了。</p><p>类似地，Role对象的rules字段也可以进一步细化。比如，你可以只针对某一个具体的对象进行权限设置，如下所示：</p><pre><code>rules:\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;configmaps&quot;]\n  resourceNames: [&quot;my-config&quot;]\n  verbs: [&quot;get&quot;]\n</code></pre><p>这个例子就表示，这条规则的“被作用者”，只对名叫“my-config”的ConfigMap对象，有进行GET操作的权限。</p><p>而正如我前面介绍过的，在大多数时候，我们其实都不太使用“用户”这个功能，而是直接使用Kubernetes里的“内置用户”。</p><p><span class=\"orange\">这个由Kubernetes负责管理的“内置用户”，正是我们前面曾经提到过的：ServiceAccount。</span></p><p>接下来，我通过一个具体的实例来为你讲解一下为ServiceAccount分配权限的过程。</p><p><strong>首先，我们要定义一个ServiceAccount</strong>。它的API对象非常简单，如下所示：</p><pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  namespace: mynamespace\n  name: example-sa\n</code></pre><p>可以看到，一个最简单的ServiceAccount对象只需要Name和Namespace这两个最基本的字段。</p><p><strong>然后，我们通过编写RoleBinding的YAML文件，来为这个ServiceAccount分配权限：</strong></p><pre><code>kind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: example-rolebinding\n  namespace: mynamespace\nsubjects:\n- kind: ServiceAccount\n  name: example-sa\n  namespace: mynamespace\nroleRef:\n  kind: Role\n  name: example-role\n  apiGroup: rbac.authorization.k8s.io\n</code></pre><p>可以看到，在这个RoleBinding对象里，subjects字段的类型（kind），不再是一个User，而是一个名叫example-sa的ServiceAccount。而roleRef引用的Role对象，依然名叫example-role，也就是我在这篇文章一开始定义的Role对象。</p><p><strong>接着，我们用kubectl命令创建这三个对象：</strong></p><pre><code>$ kubectl create -f svc-account.yaml\n$ kubectl create -f role-binding.yaml\n$ kubectl create -f role.yaml\n</code></pre><p>然后，我们来查看一下这个ServiceAccount的详细信息：</p><pre><code>$ kubectl get sa -n mynamespace -o yaml\n- apiVersion: v1\n  kind: ServiceAccount\n  metadata:\n    creationTimestamp: 2018-09-08T12:59:17Z\n    name: example-sa\n    namespace: mynamespace\n    resourceVersion: &quot;409327&quot;\n    ...\n  secrets:\n  - name: example-sa-token-vmfg6\n</code></pre><p>可以看到，Kubernetes会为一个ServiceAccount自动创建并分配一个Secret对象，即：上述ServiceAcount定义里最下面的secrets字段。</p><p>这个Secret，就是这个ServiceAccount对应的、用来跟APIServer进行交互的授权文件，我们一般称它为：Token。Token文件的内容一般是证书或者密码，它以一个Secret对象的方式保存在Etcd当中。</p><p>这时候，用户的Pod，就可以声明使用这个ServiceAccount了，比如下面这个例子：</p><pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  namespace: mynamespace\n  name: sa-token-test\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.7.9\n  serviceAccountName: example-sa\n</code></pre><p>在这个例子里，我定义了Pod要使用的要使用的ServiceAccount的名字是：example-sa。</p><p>等这个Pod运行起来之后，我们就可以看到，该ServiceAccount的token，也就是一个Secret对象，被Kubernetes自动挂载到了容器的/var/run/secrets/kubernetes.io/serviceaccount目录下，如下所示：</p><pre><code>$ kubectl describe pod sa-token-test -n mynamespace\nName:               sa-token-test\nNamespace:          mynamespace\n...\nContainers:\n  nginx:\n    ...\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from example-sa-token-vmfg6 (ro)\n</code></pre><p>这时候，我们可以通过kubectl exec查看到这个目录里的文件：</p><pre><code>$ kubectl exec -it sa-token-test -n mynamespace -- /bin/bash\nroot@sa-token-test:/# ls /var/run/secrets/kubernetes.io/serviceaccount\nca.crt namespace  token\n</code></pre><p>如上所示，容器里的应用，就可以使用这个ca.crt来访问APIServer了。更重要的是，此时它只能够做GET、WATCH和LIST操作。因为example-sa这个ServiceAccount的权限，已经被我们绑定了Role做了限制。</p><p>此外，我在第15篇文章<a href=\"https://time.geekbang.org/column/article/40466\">《深入解析Pod对象（二）：使用进阶》</a>中曾经提到过，如果一个Pod没有声明serviceAccountName，Kubernetes会自动在它的Namespace下创建一个名叫default的默认ServiceAccount，然后分配给这个Pod。</p><p>但在这种情况下，这个默认ServiceAccount并没有关联任何Role。也就是说，此时它有访问APIServer的绝大多数权限。当然，这个访问所需要的Token，还是默认ServiceAccount对应的Secret对象为它提供的，如下所示。</p><pre><code>$kubectl describe sa default\nName:                default\nNamespace:           default\nLabels:              &lt;none&gt;\nAnnotations:         &lt;none&gt;\nImage pull secrets:  &lt;none&gt;\nMountable secrets:   default-token-s8rbq\nTokens:              default-token-s8rbq\nEvents:              &lt;none&gt;\n\n$ kubectl get secret\nNAME                  TYPE                                  DATA      AGE\nkubernetes.io/service-account-token   3         82d\n\n$ kubectl describe secret default-token-s8rbq\nName:         default-token-s8rbq\nNamespace:    default\nLabels:       &lt;none&gt;\nAnnotations:  kubernetes.io/service-account.name=default\n              kubernetes.io/service-account.uid=ffcb12b2-917f-11e8-abde-42010aa80002\n\nType:  kubernetes.io/service-account-token\n\nData\n====\nca.crt:     1025 bytes\nnamespace:  7 bytes\ntoken:      &lt;TOKEN数据&gt;\n</code></pre><p>可以看到，Kubernetes会自动为默认ServiceAccount创建并绑定一个特殊的Secret：它的类型是<code>kubernetes.io/service-account-token</code>；它的Annotation字段，声明了<code>kubernetes.io/service-account.name=default</code>，即这个Secret会跟同一Namespace下名叫default的ServiceAccount进行绑定。</p><p>所以，在生产环境中，我强烈建议你为所有Namespace下的默认ServiceAccount，绑定一个只读权限的Role。这个具体怎么做，就当作思考题留给你了。</p><p>除了前面使用的“用户”（User），<span class=\"orange\">Kubernetes还拥有“用户组”（Group）的概念，也就是一组“用户”的意思。</span>如果你为Kubernetes配置了外部认证服务的话，这个“用户组”的概念就会由外部认证服务提供。</p><p>而对于Kubernetes的内置“用户”ServiceAccount来说，上述“用户组”的概念也同样适用。</p><p>实际上，一个ServiceAccount，在Kubernetes里对应的“用户”的名字是：</p><pre><code>system:serviceaccount:&lt;Namespace名字&gt;:&lt;ServiceAccount名字&gt;\n</code></pre><p>而它对应的内置“用户组”的名字，就是：</p><pre><code>system:serviceaccounts:&lt;Namespace名字&gt;\n</code></pre><p><strong>这两个对应关系，请你一定要牢记。</strong></p><p>比如，现在我们可以在RoleBinding里定义如下的subjects：</p><pre><code>subjects:\n- kind: Group\n  name: system:serviceaccounts:mynamespace\n  apiGroup: rbac.authorization.k8s.io\n</code></pre><p>这就意味着这个Role的权限规则，作用于mynamespace里的所有ServiceAccount。这就用到了“用户组”的概念。</p><p>而下面这个例子：</p><pre><code>subjects:\n- kind: Group\n  name: system:serviceaccounts\n  apiGroup: rbac.authorization.k8s.io\n</code></pre><p>就意味着这个Role的权限规则，作用于整个系统里的所有ServiceAccount。</p><p>最后，值得一提的是，<strong>在Kubernetes中已经内置了很多个为系统保留的ClusterRole，它们的名字都以system:开头</strong>。你可以通过kubectl get clusterroles查看到它们。</p><p>一般来说，这些系统ClusterRole，是绑定给Kubernetes系统组件对应的ServiceAccount使用的。</p><p>比如，其中一个名叫system:kube-scheduler的ClusterRole，定义的权限规则是kube-scheduler（Kubernetes的调度器组件）运行所需要的必要权限。你可以通过如下指令查看这些权限的列表：</p><pre><code>$ kubectl describe clusterrole system:kube-scheduler\nName:         system:kube-scheduler\n...\nPolicyRule:\n  Resources                    Non-Resource URLs Resource Names    Verbs\n  ---------                    -----------------  --------------    -----\n...\n  services                     []                 []                [get list watch]\n  replicasets.apps             []                 []                [get list watch]\n  statefulsets.apps            []                 []                [get list watch]\n  replicasets.extensions       []                 []                [get list watch]\n  poddisruptionbudgets.policy  []                 []                [get list watch]\n  pods/status                  []                 []                [patch update]\n</code></pre><p>这个system:kube-scheduler的ClusterRole，就会被绑定给kube-system Namesapce下名叫kube-scheduler的ServiceAccount，它正是Kubernetes调度器的Pod声明使用的ServiceAccount。</p><p>除此之外，Kubernetes还提供了四个预先定义好的ClusterRole来供用户直接使用：</p><ol>\n<li>\n<p>cluster-admin；</p>\n</li>\n<li>\n<p>admin；</p>\n</li>\n<li>\n<p>edit；</p>\n</li>\n<li>\n<p>view。</p>\n</li>\n</ol><p>通过它们的名字，你应该能大致猜出它们都定义了哪些权限。比如，这个名叫view的ClusterRole，就规定了被作用者只有Kubernetes API的只读权限。</p><p>而我还要提醒你的是，上面这个cluster-admin角色，对应的是整个Kubernetes项目中的最高权限（verbs=*），如下所示：</p><pre><code>$ kubectl describe clusterrole cluster-admin -n kube-system\nName:         cluster-admin\nLabels:       kubernetes.io/bootstrapping=rbac-defaults\nAnnotations:  rbac.authorization.kubernetes.io/autoupdate=true\nPolicyRule:\n  Resources  Non-Resource URLs Resource Names  Verbs\n  ---------  -----------------  --------------  -----\n  *.*        []                 []              [*]\n             [*]                []              [*]\n</code></pre><p>所以，请你务必要谨慎而小心地使用cluster-admin。</p><h2>总结</h2><p>在今天这篇文章中，我主要为你讲解了基于角色的访问控制（RBAC）。</p><p>其实，你现在已经能够理解，所谓角色（Role），其实就是一组权限规则列表。而我们分配这些权限的方式，就是通过创建RoleBinding对象，将被作用者（subject）和权限列表进行绑定。</p><p>另外，与之对应的ClusterRole和ClusterRoleBinding，则是Kubernetes集群级别的Role和RoleBinding，它们的作用范围不受Namespace限制。</p><p>而尽管权限的被作用者可以有很多种（比如，User、Group等），但在我们平常的使用中，最普遍的用法还是ServiceAccount。所以，Role + RoleBinding + ServiceAccount的权限分配方式是你要重点掌握的内容。我们在后面编写和安装各种插件的时候，会经常用到这个组合。</p><h2>思考题</h2><p>请问，如何为所有Namespace下的默认ServiceAccount（default ServiceAccount），绑定一个只读权限的Role呢？请你提供ClusterRoleBinding（或者RoleBinding）的YAML文件。</p><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p>","neighbors":{"left":{"article_title":"25 | 深入解析声明式API（二）：编写自定义控制器","id":42076},"right":{"article_title":"27 | 聪明的微创新：Operator工作原理解读","id":42493}},"comments":[{"had_liked":false,"id":34397,"user_name":"huan","can_delete":false,"product_type":"c1","uid":1012286,"ip_address":"","ucode":"46CB95F6E4E5FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/3e/534db55d.jpg","comment_is_top":false,"comment_ctime":1540145067,"is_pvip":false,"discussion_count":12,"race_medal":0,"score":"259238182827","product_id":100015201,"comment_content":"kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:<br>- kind: User<br>  name: system.serviceaccount.default<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io","like_count":61,"discussions":[{"author":{"id":1350159,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","nickname":"芒果少侠","note":"","ucode":"98D0BBB52BB80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196156,"discussion_content":"这个是给default namespace下所有的service account绑定。不是给所有namespace下的default service account. 跟思考题的题意不太一样","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1583332093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1350159,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","nickname":"芒果少侠","note":"","ucode":"98D0BBB52BB80F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":354557,"discussion_content":"你理解反了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615301659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":196156,"ip_address":""},"score":354557,"extra":""}]},{"author":{"id":1793475,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5d/c3/69019d24.jpg","nickname":"江东","note":"","ucode":"391A62BC7039B3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560635,"discussion_content":"kind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: readonly-all-default\nsubjects:\n- kind: Group\n  name: system:serviceaccounts\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: view\n  apiGroup: rbac.authorization.k8s.io","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1649409594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1675771,"avatar":"https://static001.geekbang.org/account/avatar/00/19/91/fb/b7ec1659.jpg","nickname":"Adam HU","note":"","ucode":"342EC2A0CEAA97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212990,"discussion_content":"不是应该用冒号&#34;:&#34; 隔开吗？另外也没法绕开namaspace呀\nsystem:serviceaccount:<Namespace名字>:<ServiceAccount名字>\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585040909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354637,"discussion_content":"唯一不理解的是system.serviceaccount.default，这个官方文档有说明吗，能用来表示所有空间下的default服务用户吗，没查到，谁能给解答一下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615305910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1466809,"avatar":"https://static001.geekbang.org/account/avatar/00/16/61/b9/dbf629c0.jpg","nickname":"Tao","note":"","ucode":"75FBDF49C601F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70536,"discussion_content":"这是对的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575365514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218483,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLNmwVr1RbIaUC59VbqicrusHTQ9O4QeibhqX8bibsRXgsjnwmsLuE9Ghoh74HyiaxdduDRTsM8EgNFLg/132","nickname":"荣华","note":"","ucode":"51F228E8D0D311","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43,"discussion_content":"kind user就明显错误了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561013999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1198324,"avatar":"","nickname":"小球球","note":"","ucode":"72F0008E81D9F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1218483,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLNmwVr1RbIaUC59VbqicrusHTQ9O4QeibhqX8bibsRXgsjnwmsLuE9Ghoh74HyiaxdduDRTsM8EgNFLg/132","nickname":"荣华","note":"","ucode":"51F228E8D0D311","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":1624,"discussion_content":"kind 就是User好不好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562747203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43,"ip_address":""},"score":1624,"extra":""},{"author":{"id":1793475,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5d/c3/69019d24.jpg","nickname":"江东","note":"","ucode":"391A62BC7039B3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1198324,"avatar":"","nickname":"小球球","note":"","ucode":"72F0008E81D9F8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560631,"discussion_content":"Group","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649408358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1624,"ip_address":""},"score":560631,"extra":""}]},{"author":{"id":1610260,"avatar":"https://static001.geekbang.org/account/avatar/00/18/92/14/6ca50b3b.jpg","nickname":"大G来了呦","note":"","ucode":"97711D9CCA73B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302562,"discussion_content":"wrong answer!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598956455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1675771,"avatar":"https://static001.geekbang.org/account/avatar/00/19/91/fb/b7ec1659.jpg","nickname":"Adam HU","note":"","ucode":"342EC2A0CEAA97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212998,"discussion_content":"另外，根据下边这个问题，感觉应该用 serviceaccount：\nhttps://github.com/fabric8io/fabric8/issues/6840","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585041797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073666,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/02/2370d8c0.jpg","nickname":"浮白","note":"","ucode":"6FB94B1EB3D4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56517,"discussion_content":"这会使一个namespace下的默认serviceaccount拥有这个集群的只读权限吗？或者说，将一个ClusterRole绑定给一个用户，会使这个用户拥有集群级别的权限吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574492710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44005,"user_name":"喜剧。","can_delete":false,"product_type":"c1","uid":1042681,"ip_address":"","ucode":"5F9CF567792B8A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/f9/4412b473.jpg","comment_is_top":false,"comment_ctime":1543364597,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"156162187253","product_id":100015201,"comment_content":"kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>name: readonly-all-default<br>subjects:<br>- kind: ServiceAccount<br>name: system.serviceaccount.default<br>roleRef:<br>kind: ClusterRole<br>name: view<br>apiGroup: rbac.authorization.k8s.io<br><br>前面的朋友写的问题在于，default应该是serciveacount","like_count":37,"discussions":[{"author":{"id":1433247,"avatar":"https://static001.geekbang.org/account/avatar/00/15/de/9f/b6c59a75.jpg","nickname":"dust！","note":"","ucode":"7ADCCC7985B381","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302352,"discussion_content":"name: system:serviceaccount:default","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1598884646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181417,"avatar":"https://static001.geekbang.org/account/avatar/00/12/06/e9/a99ced9e.jpg","nickname":"Gary","note":"","ucode":"12255F392C208C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53242,"discussion_content":"会报 Subjects[0].namespace 不存在的错误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574149425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218483,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLNmwVr1RbIaUC59VbqicrusHTQ9O4QeibhqX8bibsRXgsjnwmsLuE9Ghoh74HyiaxdduDRTsM8EgNFLg/132","nickname":"荣华","note":"","ucode":"51F228E8D0D311","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44,"discussion_content":"name:system.serviceaccount:default","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561014033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34459,"user_name":"无痕飞客","can_delete":false,"product_type":"c1","uid":1251468,"ip_address":"","ucode":"C7FF4AFDD8A562","user_header":"","comment_is_top":false,"comment_ctime":1540178035,"is_pvip":false,"replies":[{"id":"12362","content":"kubeadm reset","user_name":"作者回复","comment_id":34459,"uid":"1218095","ip_address":"","utype":1,"ctime":1540260715,"user_name_real":"Geek_6ef93d"}],"discussion_count":4,"race_medal":0,"score":"130389196915","product_id":100015201,"comment_content":"老师，怎么优雅的卸载掉kubernetes呢？","like_count":31,"discussions":[{"author":{"id":1740409,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8e/79/f9d5dd3a.jpg","nickname":"吕超","note":"","ucode":"B36883984BE16B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354386,"discussion_content":"从入门到放弃么","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1615284529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427217,"discussion_content":"kubeadm reset","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1540260715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2031603,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/ff/f3/de2233f5.jpg","nickname":"浅陌","note":"","ucode":"1C80224154E747","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578497,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656833077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1389941,"avatar":"https://static001.geekbang.org/account/avatar/00/15/35/75/a99df8bb.jpg","nickname":"智伤","note":"","ucode":"897CA384BF9B28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572415,"discussion_content":"笑死","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652776427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48586,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1544491806,"is_pvip":false,"replies":[{"id":"17501","content":"所有的中间层都是为了解耦","user_name":"作者回复","comment_id":48586,"uid":"1218095","ip_address":"","utype":1,"ctime":1544533250,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"87443837726","product_id":100015201,"comment_content":"为什么要生命这类service account，不能直接使用role进行权限分配吗？这个中间代理的好处是啥呢？","like_count":21,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432260,"discussion_content":"所有的中间层都是为了解耦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544533250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236602,"user_name":"蹦蹦","can_delete":false,"product_type":"c1","uid":2055624,"ip_address":"","ucode":"D20A4CA503B868","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/c8/7ece6f4b.jpg","comment_is_top":false,"comment_ctime":1595475591,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"44545148551","product_id":100015201,"comment_content":"kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:<br>- kind: ServiceAccount<br>  name: default<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io<br><br>kind是ServiceAccount，不是Group。name直接写default，不指定namespace<br>","like_count":10,"discussions":[{"author":{"id":1229769,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c3/c9/a8e03342.jpg","nickname":"x","note":"","ucode":"96C5BFB1449FFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394910,"discussion_content":"The ClusterRoleBinding &#34;readonly-all-default&#34; is invalid: subjects[0].namespace: Required value","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632125434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354642,"discussion_content":"您测试通过吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615306392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1909024,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/21/20/d7f5bb18.jpg","nickname":"刘易之","note":"","ucode":"1CDC3E98B92CE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297715,"discussion_content":"感觉组的概念,划分的纬度更像是namespace,而不是针对sa本身,那对于既要针对namespace 又要针对sa的集合的概念, 用group不太合适.这个答案应该是合理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597032194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184550,"user_name":"芒果少侠","can_delete":false,"product_type":"c1","uid":1350159,"ip_address":"","ucode":"98D0BBB52BB80F","user_header":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","comment_is_top":false,"comment_ctime":1583335574,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"40238041238","product_id":100015201,"comment_content":"老师，我查阅了相关资料。觉得思考题中的场景（为【所有namespace】下的【default service account】添加只读权限）无法实现。ClusterRoleBinding的subjects字段最多能允许我们给【default namespace】下的【所有service account】或者所有namespace下的所有 service account添加只读权限。不知道老师是否有其他方式实现？恳请回答，感谢。<br><br>思考题请问:<br>如何为所有 Namespace 下的默认 ServiceAccount（default ServiceAccount），绑定一个只读权限的 Role 呢？请你提供 ClusterRoleBinding（或者 RoleBinding）的 YAML 文件。","like_count":9,"discussions":[{"author":{"id":1284474,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","nickname":"AceslupK","note":"","ucode":"048F84D019CBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580680,"discussion_content":"所以老师消失了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658317950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1734912,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/79/00/cacc3f62.jpg","nickname":"佘鹏辉","note":"","ucode":"4C964815D5FD39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402526,"discussion_content":"请问最后这个思考题的答案是什么呢？也没有看到作者答复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633913197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","nickname":"Geek_c22199","note":"","ucode":"1CE5B65513E360","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213631,"discussion_content":"留言果然还是要看的哈哈，有收获","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585110274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34717,"user_name":"runner","can_delete":false,"product_type":"c1","uid":1200107,"ip_address":"","ucode":"6037BEDDF7AA48","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/eb/b5bb4227.jpg","comment_is_top":false,"comment_ctime":1540267171,"is_pvip":false,"replies":[{"id":"12435","content":"kubernetes 里最小的调度单位是pod，所以不可以的","user_name":"作者回复","comment_id":34717,"uid":"1218095","ip_address":"","utype":1,"ctime":1540317202,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"40194972835","product_id":100015201,"comment_content":"老师还是之前的问题，现在机器上有一个手动起的容器（比如是老的业务容器），想把他加到pod里管理起来，比如pod生成的时候发现已经有这个容器了，就关联这个容器，不再创建了。有办法实现么？","like_count":10,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427307,"discussion_content":"kubernetes 里最小的调度单位是pod，所以不可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540317202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69902,"user_name":"张振宇","can_delete":false,"product_type":"c1","uid":1130691,"ip_address":"","ucode":"7A6FD7294E65FF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/c3/e545ba80.jpg","comment_is_top":false,"comment_ctime":1550900289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35910638657","product_id":100015201,"comment_content":"老师rbac怎么结合企业自己的ldap用户数据进行外部登录自研的web平台","like_count":9},{"had_liked":false,"id":54977,"user_name":"yuanlinios","can_delete":false,"product_type":"c1","uid":1223176,"ip_address":"","ucode":"0861321E352FE0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/nhLS152kEs5J65bBpM2fzMn4agfoow8xibFzNSDcmo9Oiby2lNB4hWRcetRWFyY2y05IJu8GbkZer9BUiahtadU0w/132","comment_is_top":false,"comment_ctime":1545990798,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"31610761870","product_id":100015201,"comment_content":"虽然 clusterrole&#47;clusterrolebinding 不受 namespace 限制, 但是 serviceaccount 总是存在于 namespace 下. 为一个 namespace 下的 default sa 做只读限制很容易. 那么怎么为&quot;所有&quot; (包括现有的和未来的) 的 namespace 下的 default sa 做只读的限制? 希望给点提示<br><br>","like_count":7,"discussions":[{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341801,"discussion_content":"用组不好么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610527234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133945,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/79/803537db.jpg","nickname":"慢动作","note":"","ucode":"62C944F4A4D8AC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288752,"discussion_content":"system:serviceaccounts","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593861061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133945,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/79/803537db.jpg","nickname":"慢动作","note":"","ucode":"62C944F4A4D8AC","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":354645,"discussion_content":"你这个不只是包含default服务用户了，而是包含了所有serviceaccount用户了，不满足题目要求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615306520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288752,"ip_address":""},"score":354645,"extra":""}]},{"author":{"id":1350159,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","nickname":"芒果少侠","note":"","ucode":"98D0BBB52BB80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196379,"discussion_content":"同问 思索许久得不到答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583335835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189499,"user_name":"艾利特-G","can_delete":false,"product_type":"c1","uid":1195204,"ip_address":"","ucode":"8C4DA0ABE77CDC","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/c4/4ee2968a.jpg","comment_is_top":false,"comment_ctime":1584522747,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"27354326523","product_id":100015201,"comment_content":"关于课后思考，我看了官方文档的这个例子。<br>&gt; https:&#47;&#47;kubernetes.io&#47;docs&#47;reference&#47;access-authn-authz&#47;rbac&#47;#rolebinding-and-clusterrolebinding<br>暂时得出的结论是通过ClusterRoleBinding做不到让每个NameSpace下的&quot;default&quot; ServiceAccount拥有namespaced resources的只读权限。<br>这里面描述了如何在ClusterRolebinding中将ClusterRole与&quot;manager&quot;这个group绑定。但是这个&quot;manager&quot; group，是一个user的group，不是ServiceAccount的group。<br>我想，将ClusterRolebinding其中的subjects[0].kind属性指定为ServiceAccount，name指定为system:serviceaccount:*:default，应该是无效的吧。<br>如果这样不行的话，那就只有subjects[0].kind属性指定为group，然后name指定为system:serviceaccounts，这将会对所有ServiceAccount绑定&quot;view&quot;这个ClusterRole，包括&quot;default&quot;之外的ServiceAccount。这样会对所有ServiceAccount授权集群级别的只读权限，也就是不能限制在该ServiceAccount所在的Namespace下。<br>如果在每个Namespace下创建RoleBinding，subjects[0].kind属性指定为ServiceAccount，name指定为default，namespace指定为该namespace，则可以使每个NameSpace下的&quot;default&quot; ServiceAccount拥有该Namespace的只读权限。","like_count":6,"discussions":[{"author":{"id":2057031,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/63/47/e8164679.jpg","nickname":"正z","note":"","ucode":"9220ECB4B0A2CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300056,"discussion_content":"貌似用RoleBinding 引用 ClusterRole 可以解决问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597921594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1195204,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3c/c4/4ee2968a.jpg","nickname":"艾利特-G","note":"","ucode":"8C4DA0ABE77CDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2057031,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/63/47/e8164679.jpg","nickname":"正z","note":"","ucode":"9220ECB4B0A2CC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300391,"discussion_content":"主要的问题是如何用一条规则选择每个namespace下的default这个SA。有答案吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598078758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300056,"ip_address":""},"score":300391,"extra":""}]},{"author":{"id":1441876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","nickname":"Geek_c22199","note":"","ucode":"1CE5B65513E360","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213630,"discussion_content":"看了之后好像懂了点什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585110196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34477,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1540184949,"is_pvip":false,"replies":[{"id":"12359","content":"就是为了安全。role是用来做限制的，你没限制当然就撒野了。","user_name":"作者回复","comment_id":34477,"uid":"1218095","ip_address":"","utype":1,"ctime":1540260679,"user_name_real":"Geek_6ef93d"}],"discussion_count":4,"race_medal":0,"score":"27309988725","product_id":100015201,"comment_content":"但在这种情况下，这个默认 ServiceAccount 并没有关联任何 Role。也就是说，此时它有访问 APIServer 的绝大多数权限。<br>为什么没有关联role，就会有绝大多数权限呢？有一个默认的role么，都有什么权限呢？<br><br>另外，建议在所有的namespace给default serviceaccount绑定view，是出于安全的考虑是么？","like_count":7,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427220,"discussion_content":"就是为了安全。role是用来做限制的，你没限制当然就撒野了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540260679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1494838,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cf/36/8d12c4cc.jpg","nickname":"jamie","note":"","ucode":"659CFA7F10B6D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281195,"discussion_content":"作者學藝不精還誤導讀者：https://stackoverflow.com/questions/52995962/kubernetes-namespace-default-service-account，default默認是沒有權限去讀取和操作cluster相關資源的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591690404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1494838,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cf/36/8d12c4cc.jpg","nickname":"jamie","note":"","ucode":"659CFA7F10B6D6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354647,"discussion_content":"你说的这个有可能是后来更新的结果","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615306658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281195,"ip_address":""},"score":354647,"extra":""},{"author":{"id":2014285,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKNv880TlsNuKaWcKbxiaAZTQIBWfJAddC8wfOROnwRPRwJXaEGSTBH2sic4jK7IGpxZn79tTDcREjw/132","nickname":"Geek_7482f6","note":"","ucode":"F3565F78525D30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1494838,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cf/36/8d12c4cc.jpg","nickname":"jamie","note":"","ucode":"659CFA7F10B6D6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402646,"discussion_content":"文章是18年发布的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633925401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281195,"ip_address":""},"score":402646,"extra":""}]}]},{"had_liked":false,"id":184528,"user_name":"芒果少侠","can_delete":false,"product_type":"c1","uid":1350159,"ip_address":"","ucode":"98D0BBB52BB80F","user_header":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","comment_is_top":false,"comment_ctime":1583333541,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"18763202725","product_id":100015201,"comment_content":"kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:<br>- kind: ServiceAccount<br>  name: default<br>  namespace: system:systemaccounts<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io<br><br>老师，请问这样写对吗？","like_count":4,"discussions":[{"author":{"id":2055624,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5d/c8/7ece6f4b.jpg","nickname":"蹦蹦","note":"","ucode":"D20A4CA503B868","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293200,"discussion_content":"ClusterRoleBinding不需要定义namespace，删掉就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595476056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","nickname":"Geek_c22199","note":"","ucode":"1CE5B65513E360","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213629,"discussion_content":"前面的都被Gruop带偏了，但是这个namespace 字段感觉有点问题，还有一种可能是namespace字段什么都不填(这种又可能是default namespace，再想一下也许ClusterRoleBingding特殊不用写？得看文档)或者特殊匹配符，得具体试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585110008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122238,"user_name":"tianfeiyu","can_delete":false,"product_type":"c1","uid":1157786,"ip_address":"","ucode":"E65E6841AD5D7F","user_header":"https://static001.geekbang.org/account/avatar/00/11/aa/9a/92d2df36.jpg","comment_is_top":false,"comment_ctime":1565321070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14450222958","product_id":100015201,"comment_content":"老师，我就想问一下，namespace 下的 default sa 没有关联任何 role，它到底有哪些权限呢？","like_count":3},{"had_liked":false,"id":34729,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1540273617,"is_pvip":false,"replies":[{"id":"12434","content":"是的，这个风险肯定的","user_name":"作者回复","comment_id":34729,"uid":"1218095","ip_address":"","utype":1,"ctime":1540317160,"user_name_real":"Geek_6ef93d"}],"discussion_count":6,"race_medal":0,"score":"14425175505","product_id":100015201,"comment_content":"Prior to Kubernetes 1.6, many deployments used very permissive ABAC policies, including granting full API access to all service accounts.<br><br>Default RBAC policies grant scoped permissions to control-plane components, nodes, and controllers, but grant no permissions to service accounts outside the kube-system namespace (beyond discovery permissions given to all authenticated users).<br><br>Quoting from https:&#47;&#47;kubernetes.io&#47;docs&#47;reference&#47;access-authn-authz&#47;rbac&#47;#service-account-permissions<br><br>按我对官方文档的理解，RBAC策略下 default service account 是不是并没有任何权限，ABAC才会grant full access？<br><br>如果给所有namespace的default service account都赋予view 权限。会不会出现如下风险？<br>Warning: This allows any user with read access to secrets or the ability to create a pod to access super-user credentials.<br>","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427313,"discussion_content":"是的，这个风险肯定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540317160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2847763,"avatar":"","nickname":"孙俊伟","note":"","ucode":"84643F0B65A6C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588391,"discussion_content":"默认default namespace的default  sa账号连只读权限都没有。加了view 后可以只读list get。另外即使加了cluster-admin，依旧无法修改集群服务yaml。。。求解？能否突破该限制？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663735901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1249652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/11/74/72ffa6d6.jpg","nickname":"StayLet","note":"","ucode":"6B748CA3AF3C5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377224,"discussion_content":"同问，按官方文档（https://kubernetes.io/docs/reference/access-authn-authz/rbac/）的说法， `kube-system` namespace 以外的 `default` service accounts 好象是没有任何权限的；我 minikube(1.20.0, kubernetes v1.20.2)  里面用 `curl --cacert ca.crt --header &#34;Authorization: Bearer $(cat token)&#34; https://10.96.0.1/api/v1/namespaces/default/pods` 试了一下也是没有权限的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622553410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354648,"discussion_content":"按这么说，本文留的思考题还有什么意义，每个namespace下的default本来就没有安全风险啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615307356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190532,"discussion_content":"&#34;RBAC策略下 default service account 是不是并没有任何权限&#34;\n我也有这个疑问, 因为在 ClusterRoleBinding 和 RoleBinding 中都没看见绑定这个默认用户.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582955611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184067,"discussion_content":"你就是我心目中的学霸🤓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582543964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94403,"user_name":"诗泽","can_delete":false,"product_type":"c1","uid":1031865,"ip_address":"","ucode":"F28BE01C3FD12F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/b9/f2481c2c.jpg","comment_is_top":false,"comment_ctime":1557801825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10147736417","product_id":100015201,"comment_content":"“实际上，一个 ServiceAccount，在 Kubernetes 里对应的“用户”的名字是：”<br>ServiceAccount 有namespace 但是用户没有，那serviceaccount 与用户的映射关系是怎样的呢，所有namespace 的default ServiceAccount 对应同一个user 吗？即system.serviceaccount.default ？","like_count":2},{"had_liked":false,"id":35289,"user_name":"Pixar","can_delete":false,"product_type":"c1","uid":1197659,"ip_address":"","ucode":"E653387BA8EA16","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/5b/07858c33.jpg","comment_is_top":false,"comment_ctime":1540511985,"is_pvip":false,"replies":[{"id":"12622","content":"找不到对象","user_name":"作者回复","comment_id":35289,"uid":"1218095","ip_address":"","utype":1,"ctime":1540593482,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"10130446577","product_id":100015201,"comment_content":"role roleBanding serviceAccount 都是 namespaced , 那跨namespace 操作会怎么样？","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427504,"discussion_content":"找不到对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540593482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316937,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/49/b1d864e5.jpg","nickname":"Hinimix","note":"","ucode":"7994136C93BD89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36959,"discussion_content":"诅咒啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571469892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324137,"user_name":"tale","can_delete":false,"product_type":"c1","uid":1813691,"ip_address":"","ucode":"143B4CA752A783","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ac/bb/db0f9d8c.jpg","comment_is_top":false,"comment_ctime":1638321536,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5933288832","product_id":100015201,"comment_content":"思考题正解在此：<br><br>kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:<br>- kind: Group<br>  name: system:serviceaccounts<br>  apiGroup: rbac.authorization.k8s.io<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io<br><br>关于subjects中kind的解释：<br><br>1、kind为ServiceAccount的话，官方文档明确说了必须指定namespace的，所以排除这种方式。<br>2、kind为User时，name中一定会带有&lt;namespace&gt;信息，与题目要求“所有namespace”不符，所以也排除。<br>3、kind为Group时，name中填system:serviceaccounts即可。很多人担心这个Group过大，可能不止包含了所有default“用户”。但经我查明，这个Group只有Get权限，所以符合View规则，即使包含了其他“用户”也无妨。","like_count":1,"discussions":[{"author":{"id":2268886,"avatar":"https://static001.geekbang.org/account/avatar/00/22/9e/d6/4b07f8b5.jpg","nickname":"我来烤烤你","note":"","ucode":"C0444817B6B16F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537816,"discussion_content":"并不是说GET权限就一定没问题，你使用Group的效果是修改了所有的ServiceAccount，原题目的要求确实满足了，但是其他的ServiceAccount是否受到影响？比如某个ServiceAccount本应该有更大的权限，结果被成只读？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639207680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321112,"user_name":"神毓逍遥","can_delete":false,"product_type":"c1","uid":2147220,"ip_address":"","ucode":"83351CB18B190E","user_header":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","comment_is_top":false,"comment_ctime":1636682982,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5931650278","product_id":100015201,"comment_content":"课代表来了，最近使用部署的 AWS 上的项目，由于config 中是 aws 特质的 CLI 命令，需要重新生成一个账号与去哪先，我自己使用的 LEN 工具，图形化界面操作，非常好用；另外这张内容蛮重要的，结合自己的经验主要在，1. 学会如何创建 账号、角色、绑定，方便授权权限，2则理解 <br>system:serviceaccount:&lt;Namespace名字&gt;:&lt;ServiceAccount名字&gt; 这个结构的含义，一定要注意，因为操作中报错，极大的概率会遇到这个问题，理解概念方便排查","like_count":1},{"had_liked":false,"id":218884,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1589892690,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5884859986","product_id":100015201,"comment_content":"实测通过，所有默认default serviceaccount有了list pod的权限<br><br>#cat example-clusterrolebinding.yaml<br>kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: example-clusterrolebinding<br>subjects:<br>- kind: Group<br>  name: system:serviceaccounts<br>  apiGroup: rbac.authorization.k8s.io<br>roleRef:<br>  kind: ClusterRole<br>  name: example-clusterrole<br>  apiGroup: rbac.authorization.k8s.io","like_count":1,"discussions":[{"author":{"id":1954544,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/d2/f0/2616649b.jpg","nickname":"Zee","note":"","ucode":"9FF140675469D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294766,"discussion_content":"但这实际上给了所有 SA 权限，而非给 ”所有 namespace 下默认 SA“ 读取权限。","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1595991995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1643296,"avatar":"https://static001.geekbang.org/account/avatar/00/19/13/20/2d22b331.jpg","nickname":"H.Z","note":"","ucode":"728417BD5B4DA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392748,"discussion_content":"除了default 的sa，别的sa是否也有list pod权限呢，这个测试过吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631110793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64171,"user_name":"Brown羊羊","can_delete":false,"product_type":"c1","uid":1315332,"ip_address":"","ucode":"354EC478E57DEE","user_header":"https://static001.geekbang.org/account/avatar/00/14/12/04/5837b21c.jpg","comment_is_top":false,"comment_ctime":1548684879,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5843652175","product_id":100015201,"comment_content":"kind: RoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: example-rolebinding<br>subjects:<br>- kind: Group<br>  name: system:serviceaccounts<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io","like_count":1,"discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190530,"discussion_content":"我也是这么写的,但不知道怎么测试.\n另外,这种写法,会给所有的用户都创建了集群内的访问权限,感觉也不科学.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582955519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34821,"user_name":"吕凯 🌴","can_delete":false,"product_type":"c1","uid":1038841,"ip_address":"","ucode":"46A355ED5E67F0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/f9/f5d0dbc8.jpg","comment_is_top":false,"comment_ctime":1540311655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5835278951","product_id":100015201,"comment_content":"我是使用的二进制方式部署，ClusterRole为system:kube-scheduler绑定到system:kube-scheduler用户，跟kube-system namespace无关","like_count":1},{"had_liked":false,"id":34714,"user_name":"看不穿","can_delete":false,"product_type":"c1","uid":1259769,"ip_address":"","ucode":"8D35C36C7A35F0","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/f9/2b4755b5.jpg","comment_is_top":false,"comment_ctime":1540265892,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5835233188","product_id":100015201,"comment_content":"老师，问个网络问题，如果集群外部想访问集群里面的pod服务，可以用ingress或者NodePort实现；那请问pod想访问集群外部的服务应该怎么办？","like_count":1,"discussions":[{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354650,"discussion_content":"可以直接访问啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615307393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018071,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/d7/07f8bc6c.jpg","nickname":"sljoai","note":"","ucode":"FF88C4BA265DE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":176987,"discussion_content":"可以尝试实现一个外部service","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582073701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34457,"user_name":"无痕飞客","can_delete":false,"product_type":"c1","uid":1251468,"ip_address":"","ucode":"C7FF4AFDD8A562","user_header":"","comment_is_top":false,"comment_ctime":1540177854,"is_pvip":false,"replies":[{"id":"12361","content":"kubeadm reset","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540260706,"ip_address":"","comment_id":34457,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5835145150","product_id":100015201,"comment_content":"老师，我kubernetes安装好了，怎么停止启动的kube进程并且卸载掉kubernetes呢？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427215,"discussion_content":"kubeadm reset","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540260706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34433,"user_name":"Dillion","can_delete":false,"product_type":"c1","uid":1219687,"ip_address":"","ucode":"502EDF7ECA5569","user_header":"https://static001.geekbang.org/account/avatar/00/12/9c/67/c0128e6c.jpg","comment_is_top":false,"comment_ctime":1540171125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5835138421","product_id":100015201,"comment_content":"system:serviceaccount:&lt;ServiceAccount 名字 &gt;<br>老师，这个ServiceAccount名字前面，是不是应该还有namespace","like_count":1},{"had_liked":false,"id":34406,"user_name":"Geek_zz","can_delete":false,"product_type":"c1","uid":1130682,"ip_address":"","ucode":"A3AC7C2991B50D","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/ba/2c8af305.jpg","comment_is_top":false,"comment_ctime":1540165295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5835132591","product_id":100015201,"comment_content":"rbac 和token是怎么联系的呢","like_count":1},{"had_liked":false,"id":357893,"user_name":"孙俊伟","can_delete":false,"product_type":"c1","uid":2847763,"ip_address":"浙江","ucode":"84643F0B65A6C4","user_header":"","comment_is_top":false,"comment_ctime":1663736025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663736025","product_id":100015201,"comment_content":"我测试情况是，默认default namespace的default sa账号连只读权限都没有。加了view 后可以只读list get。另外即使加了cluster-admin，依旧无法修改集群服务yaml。。。求解？能否突破该限制？","like_count":0},{"had_liked":false,"id":354619,"user_name":"Geek_0b0ccb","can_delete":false,"product_type":"c1","uid":3022898,"ip_address":"辽宁","ucode":"AC7FC7EED2DAEF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLPiaj14cVKiaicdag88vRmXic8Wknzr2C3SF8Haibw4nH3BoiafiaPIqYOGvL5RTZCiaLtoLIfeGOEAz9hWQ/132","comment_is_top":false,"comment_ctime":1660616743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660616743","product_id":100015201,"comment_content":"创建一个 ServiceAccount 会自动创建一个 默认的secret，能否控制不创建默认的secret，因为我想只用自己创建的secret。","like_count":0},{"had_liked":false,"id":351590,"user_name":"S","can_delete":false,"product_type":"c1","uid":1518689,"ip_address":"","ucode":"2B02E9548DA952","user_header":"https://static001.geekbang.org/account/avatar/00/17/2c/61/bede8a20.jpg","comment_is_top":false,"comment_ctime":1657966420,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657966420","product_id":100015201,"comment_content":"能否编写一个controller ，watch namespace 的创建，然后做rolebinding ","like_count":0},{"had_liked":false,"id":351558,"user_name":"Youngpig1998","can_delete":false,"product_type":"c1","uid":2245226,"ip_address":"","ucode":"69899CEF09AE3B","user_header":"https://static001.geekbang.org/account/avatar/00/22/42/6a/f658c33a.jpg","comment_is_top":false,"comment_ctime":1657897273,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657897273","product_id":100015201,"comment_content":"可不可以写个shell脚本，给每个namespace都创建一个clusterrolebing<br>subjects:<br>- kind: User<br>  name: system:serviceaccount:${kubectl get ns}:default","like_count":0},{"had_liked":false,"id":351127,"user_name":"sy","can_delete":false,"product_type":"c1","uid":1433482,"ip_address":"","ucode":"492DBA3700879E","user_header":"","comment_is_top":false,"comment_ctime":1657536767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657536767","product_id":100015201,"comment_content":"没法用一个subject表示所有namespace下的default service account,用subjects列表一个个列出来吧","like_count":0},{"had_liked":false,"id":348732,"user_name":"TIAN","can_delete":false,"product_type":"c1","uid":1276795,"ip_address":"","ucode":"CCCF80602C1753","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/7b/5b39b47b.jpg","comment_is_top":false,"comment_ctime":1655356725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655356725","product_id":100015201,"comment_content":"service account其实就是云中的SP或者说事MI吧？","like_count":0},{"had_liked":false,"id":323180,"user_name":"晓峰Ontheway","can_delete":false,"product_type":"c1","uid":1782484,"ip_address":"","ucode":"7A39F2237B8D54","user_header":"https://static001.geekbang.org/account/avatar/00/1b/32/d4/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1637752963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637752963","product_id":100015201,"comment_content":"老师，你好。<br>为什么在创建Pod时，如果没有显示声明该Pod的service account的话，会绑定一个default service account。Pod访问api server时需要携带service account中的token，那Pod会访问api server吗？Pod绑定default service account的作用是什么？","like_count":0},{"had_liked":false,"id":316384,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1634293176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634293176","product_id":100015201,"comment_content":"第二十六课:基于角色权限的控制：RBAC<br>K8s负责完成授权工作的机制就是RBAC。其中有三个基本概念：Role（定义了一组对K8s API对象的操作权限的规则），Subject（被规则作用的用户，可以是人user，也可以是机器servicaccount）和RoleBinding（将Role和Subject绑定起来）。以上概念是针对namespace的API对象，比如Pod等，对于没有namespace概念的,比如Node，PV，用的是ClusterRole和ClusterRoleBinding","like_count":0},{"had_liked":false,"id":308906,"user_name":"路边的猪","can_delete":false,"product_type":"c1","uid":2057354,"ip_address":"","ucode":"92F7C082E44FC4","user_header":"https://static001.geekbang.org/account/avatar/00/1f/64/8a/bc8cb43c.jpg","comment_is_top":false,"comment_ctime":1629857695,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1629857695","product_id":100015201,"comment_content":"kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>name: readonly-all-default<br>subjects:<br>- kind: ServiceAccount<br>name: system.serviceaccount<br>roleRef:<br>kind: ClusterRole<br>name: view<br>apiGroup: rbac.authorization.k8s.io<br><br><br>看了几个回答 发现 有人在subject 字段里面的name 写的是  system.serviceaccount.default 这样不对吧。<br>system.serviceaccount.default = system.serviceaccount.&lt;namespace&gt;<br><br>所以 这个写法就只是给default命名空间下的所有serviceAccount 设置权限了 并没有为所有命名空间的SA设置权限。<br><br>所以正确写法是不是 name:system.serviceaccount<br> 这样就行了？<br>","like_count":0,"discussions":[{"author":{"id":1643296,"avatar":"https://static001.geekbang.org/account/avatar/00/19/13/20/2d22b331.jpg","nickname":"H.Z","note":"","ucode":"728417BD5B4DA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392750,"discussion_content":"你不写namespace，不是给所有的namespace都授权了吗，你这个范围更广啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631110907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301557,"user_name":"AA","can_delete":false,"product_type":"c1","uid":1103583,"ip_address":"","ucode":"CADCB958D6DA1B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/df/1e4ecd94.jpg","comment_is_top":false,"comment_ctime":1625737740,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1625737740","product_id":100015201,"comment_content":"答案是：<br>kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:<br>- kind: ServiceAccount<br>  name: default<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io","like_count":0,"discussions":[{"author":{"id":1284474,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","nickname":"AceslupK","note":"","ucode":"048F84D019CBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580678,"discussion_content":"测都没测就发啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658317738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1229769,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c3/c9/a8e03342.jpg","nickname":"x","note":"","ucode":"96C5BFB1449FFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394913,"discussion_content":"The ClusterRoleBinding &#34;readonly-all-default&#34; is invalid: subjects[0].namespace: Required value\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632125832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301556,"user_name":"AA","can_delete":false,"product_type":"c1","uid":1103583,"ip_address":"","ucode":"CADCB958D6DA1B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/df/1e4ecd94.jpg","comment_is_top":false,"comment_ctime":1625737687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625737687","product_id":100015201,"comment_content":"kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:<br>- kind: ServiceAccount<br>  name: default<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io","like_count":0},{"had_liked":false,"id":300906,"user_name":"董永刚","can_delete":false,"product_type":"c1","uid":1169147,"ip_address":"","ucode":"ADA792B226A6CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/d6/fb/837af7bf.jpg","comment_is_top":false,"comment_ctime":1625449433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625449433","product_id":100015201,"comment_content":"为pod指定了 serviceAccountName 之后，我想验证一下绑定的role的权限，<br>如何进行验证呢？？？<br>直接使用kubectl delete 还是会删除成功的","like_count":0},{"had_liked":false,"id":300011,"user_name":"gcus","can_delete":false,"product_type":"c1","uid":2155037,"ip_address":"","ucode":"ECA65D86273E82","user_header":"","comment_is_top":false,"comment_ctime":1624955053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624955053","product_id":100015201,"comment_content":"clusterrole：<br>-----------------------------<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>kind: ClusterRole<br>metadata:<br>  name: all-reader<br>rules:<br>- apiGroups: [&quot;*&quot;]<br>  resources: [&quot;*&quot;]<br>  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]<br><br>clusterrolebinding可以根据需求绑定对应namespace的serviceaccount进行限制<br>clusterrolebinding：<br>---------------------------<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>kind: ClusterRoleBinding<br>metadata:<br>  name: test-reader<br>subjects:<br>- kind: Group<br>  name: manager <br>  apiGroup: rbac.authorization.k8s.io<br>roleRef:<br>  kind: ClusterRole<br>  name: all-reader<br>  apiGroup: rbac.authorization.k8s.io<br>","like_count":0},{"had_liked":false,"id":294540,"user_name":"徐冰","can_delete":false,"product_type":"c1","uid":1239250,"ip_address":"","ucode":"3F544A53C71060","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/d2/688b294b.jpg","comment_is_top":false,"comment_ctime":1621993025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621993025","product_id":100015201,"comment_content":"kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:                                 <br>- kind: ServiceAccount                    <br>  name: default<br>  namespace: default<br>roleRef:                                  <br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io","like_count":0},{"had_liked":false,"id":293245,"user_name":"去尘远","can_delete":false,"product_type":"c1","uid":1067577,"ip_address":"","ucode":"233E908D4F4E3B","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/39/dcb9f684.jpg","comment_is_top":false,"comment_ctime":1621303468,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1621303468","product_id":100015201,"comment_content":"使用命令：<br>kubectl create clusterrolebinding serviceaccounts-view \\<br>    --clusterrole=view \\<br>    --group=system:serviceaccounts \\<br>    --dry-run \\<br>    -o yaml<br><br>生成的yaml：<br>apiVersion: rbac.authorization.k8s.io&#47;v1beta1<br>kind: ClusterRoleBinding<br>metadata:<br>  creationTimestamp: null<br>  name: serviceaccounts-view<br>roleRef:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: ClusterRole<br>  name: view<br>subjects:<br>- apiGroup: rbac.authorization.k8s.io<br>  kind: Group<br>  name: system:serviceaccounts<br>","like_count":0,"discussions":[{"author":{"id":1284474,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","nickname":"AceslupK","note":"","ucode":"048F84D019CBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580679,"discussion_content":"除了默认sa，其他的也影响了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658317817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291762,"user_name":"jking","can_delete":false,"product_type":"c1","uid":1352415,"ip_address":"","ucode":"05611E2DC82125","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/YD1RqdHwfuNHSot5OcjlNhWiatJLmlhF47sUiczmzo0znLYvOpssdsqdlGKjUenXJzTG4eBR0bIJkJeUTibQ04Yqw/132","comment_is_top":false,"comment_ctime":1620468343,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620468343","product_id":100015201,"comment_content":"这些clusterrole怎么用的，怎么看出的权限的<br><br>kubectl --kubeconfig=my.conf 指向里的有个用户token都没有啊","like_count":0},{"had_liked":false,"id":290667,"user_name":"jking","can_delete":false,"product_type":"c1","uid":1352415,"ip_address":"","ucode":"05611E2DC82125","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/YD1RqdHwfuNHSot5OcjlNhWiatJLmlhF47sUiczmzo0znLYvOpssdsqdlGKjUenXJzTG4eBR0bIJkJeUTibQ04Yqw/132","comment_is_top":false,"comment_ctime":1619681253,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619681253","product_id":100015201,"comment_content":"如上所示，容器里的应用，就可以使用这个 ca.crt 来访问 APIServer 了。更重要的是，此时它只能够做 GET、WATCH 和 LIST 操作。因为 example-sa 这个 ServiceAccount 的权限，已经被我们绑定了 Role 做了限制。<br><br>只是api访问的时候 有限制么，直接使用kubectrl访问的时候还是能访问得到啊","like_count":0},{"had_liked":false,"id":283003,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1615516318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615516318","product_id":100015201,"comment_content":"我们公司向把这个角色授权的操作步骤做成一个平台，有没有开源的可以参考？不太会啊","like_count":0},{"had_liked":false,"id":260094,"user_name":"Dig","can_delete":false,"product_type":"c1","uid":2256597,"ip_address":"","ucode":"E3D09276A46068","user_header":"https://static001.geekbang.org/account/avatar/00/22/6e/d5/ac7e7db3.jpg","comment_is_top":false,"comment_ctime":1604923143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604923143","product_id":100015201,"comment_content":"kind: RoleBinding<br>apiVersion: rbac.authorization.i0&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:<br>- kind: User<br>  name: default<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io","like_count":0},{"had_liked":false,"id":252307,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1602230869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602230869","product_id":100015201,"comment_content":"Kubernetes中所有对象的操作都通过访问kube-apiserver实现，apiserver通过RBAC做访问权限的控制。<br><br>Role和RoleBinding作用与某一个namespace。ClusterRole和ClusterRoleBinding作用于所有namespace。<br><br>核心：Role来定义权限、Subject是被权限作用的对象（最常用的就是ServiceAccount）、RoleBinding指定了Role和Subject的绑定关系<br>","like_count":0},{"had_liked":false,"id":232739,"user_name":"萝卜头","can_delete":false,"product_type":"c1","uid":1254333,"ip_address":"","ucode":"4A05A9C1213D50","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/bd/a57350da.jpg","comment_is_top":false,"comment_ctime":1594105115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594105115","product_id":100015201,"comment_content":"发现有system:authenticated和system:unauthenticated针对认证过和非认证过的  好像可以","like_count":0},{"had_liked":false,"id":232728,"user_name":"萝卜头","can_delete":false,"product_type":"c1","uid":1254333,"ip_address":"","ucode":"4A05A9C1213D50","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/bd/a57350da.jpg","comment_is_top":false,"comment_ctime":1594103264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594103264","product_id":100015201,"comment_content":"按Group感觉行不通，system.serviceaccount是针对所有的sa，我觉得可以添加一个Admission即创建ns的时候自动去做一个绑定","like_count":0},{"had_liked":false,"id":197245,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1185504,"ip_address":"","ucode":"34A37F73A48E7F","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","comment_is_top":false,"comment_ctime":1585365113,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585365113","product_id":100015201,"comment_content":"apiVersion: rbac.authorization.k8s.io&#47;v1<br>kind: RoleBinding<br>metadata:<br>  name: all-default<br>  namespace: default<br>subjects:<br>- kind: ServiceAccount<br>  name: default<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io","like_count":0},{"had_liked":false,"id":194850,"user_name":"Geek_c22199","can_delete":false,"product_type":"c1","uid":1441876,"ip_address":"","ucode":"1CE5B65513E360","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","comment_is_top":false,"comment_ctime":1585110426,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585110426","product_id":100015201,"comment_content":"基本看了所有留言，艾利特-G 与 芒果少侠的最棒","like_count":0},{"had_liked":false,"id":170403,"user_name":"tangzc1","can_delete":false,"product_type":"c1","uid":1311254,"ip_address":"","ucode":"78CB596D2F33DC","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/16/6fe3fe44.jpg","comment_is_top":false,"comment_ctime":1578586028,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578586028","product_id":100015201,"comment_content":"kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io&#47;v1<br>metadata:<br>  name: readonly-all-default<br>subjects:<br>  - kind: ServiceAccount<br>  name: system:serviceaccount:default<br>roleRef:<br>  kind: ClusterRole<br>  name: view<br>  apiGroup: rbac.authorization.k8s.io<br>我觉得问题本身存在歧义，“如何为所有 Namespace 下的默认 ServiceAccount（default ServiceAccount），绑定一个只读权限的 Role 呢？”是各ns下的default sa对本ns中的api只读还是各ns下的default sa对所有ns中的api只读，我上面写的答案应该是第二种情况。","like_count":0},{"had_liked":false,"id":141214,"user_name":"窗外","can_delete":false,"product_type":"c1","uid":1542520,"ip_address":"","ucode":"3FF86229C97428","user_header":"","comment_is_top":false,"comment_ctime":1571129693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571129693","product_id":100015201,"comment_content":"为了学习此课程，因为kubernetes是基于golang语言。所以最近还特地学习了go语言的一些基础知识，但是没有linux运维经验，目前拥有的运维经验大多都是在windows上，linux只会进行一些普通的部署。<br>望老师指点迷津，谢谢。","like_count":0},{"had_liked":false,"id":141209,"user_name":"窗外","can_delete":false,"product_type":"c1","uid":1542520,"ip_address":"","ucode":"3FF86229C97428","user_header":"","comment_is_top":false,"comment_ctime":1571129372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571129372","product_id":100015201,"comment_content":"老师你好，我是一个开发人员。由于公司特殊的人员结构，我们需要兼做运维的工作。<br>前面看过的章节中提到过，看完此书可以变成kubernets玩家。但是这个对于我的要求来说太高啦，我只想快速上手kubernetes来部署容器化的应用。<br>因为以前公司的项目都是采用的单体架构，所有组件都是需要按个安装，有docker之后当然不需要这样操作了。但是有了容器，就需要kubernets这样的平台来支撑。<br>而看过的一些有kubernetes云服务的公司：如腾讯云的容器托管服务也是基于kubernetes的。<br>前面的章节都挨个看下来了，但是由于缺乏linux下的系统知识和运维经验，所以学习起来很累。<br>望老师给个学习路线，怎么样上手kubernetes，只要能熟练的应用就是达到我的目标了。<br><br>","like_count":0},{"had_liked":false,"id":138475,"user_name":"tuyu","can_delete":false,"product_type":"c1","uid":1448863,"ip_address":"","ucode":"B235325B541408","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BIRpwViaN51yynIeFonD7QRlwDCVtKibrG956NTxzEqibOZZVjhMMgibOPmd3VicfYxpknZsic1oJq8KicZvXkmmiajuQg/132","comment_is_top":false,"comment_ctime":1570265206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570265206","product_id":100015201,"comment_content":"控制器模式不难是因为代码都写好了.......","like_count":0},{"had_liked":false,"id":132577,"user_name":"骏骏","can_delete":false,"product_type":"c1","uid":1192417,"ip_address":"","ucode":"899B32D219D1A0","user_header":"https://static001.geekbang.org/account/avatar/00/12/31/e1/e9efc2ae.jpg","comment_is_top":false,"comment_ctime":1568167979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568167979","product_id":100015201,"comment_content":"老师，那我自研的程序如何接入API呢，就好比最简单的，我想写个PY脚本获取所有的POD列表 该怎么写RABC。","like_count":0},{"had_liked":false,"id":93080,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1500888,"ip_address":"","ucode":"E895030BE6D4CB","user_header":"https://static001.geekbang.org/account/avatar/00/16/e6/d8/8939848a.jpg","comment_is_top":false,"comment_ctime":1557392858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557392858","product_id":100015201,"comment_content":"老师，为所有 Namespace 下的默认ServiceAccount(default)绑定好一个只读role之后，我怎么去判断这个ServiceAccount对相应的resource真的只有只读权限呢","like_count":0},{"had_liked":false,"id":88745,"user_name":"强者之风","can_delete":false,"product_type":"c1","uid":1500643,"ip_address":"","ucode":"E7608F908B87E1","user_header":"https://static001.geekbang.org/account/avatar/00/16/e5/e3/06aa87b5.jpg","comment_is_top":false,"comment_ctime":1555989603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555989603","product_id":100015201,"comment_content":"老师请教一下，我k8s撘了一个dashboard,但是我使用kubectl create sa  user1,创建出来的uses1也可以登录dashboard, 并且有权限删除所有名称空间的pod,不只是是不是default的role权限太大，还是其它什么原因","like_count":0},{"had_liked":false,"id":82345,"user_name":"媛妹子","can_delete":false,"product_type":"c1","uid":1219742,"ip_address":"","ucode":"25EA82DC1FE023","user_header":"https://static001.geekbang.org/account/avatar/00/12/9c/9e/c04d48f0.jpg","comment_is_top":false,"comment_ctime":1554188152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554188152","product_id":100015201,"comment_content":"老师有个问题，service account下生成的ca.crt 和token 都是用来跟api server通信时验证吗？那只要证书就可以了吧？token是做什么用呢？难道是证书认证一次之后，每次访问都要携带token才可以？生成的namespace是有什么用呢？谢谢老师","like_count":0},{"had_liked":false,"id":80589,"user_name":"Torsnail","can_delete":false,"product_type":"c1","uid":1448418,"ip_address":"","ucode":"24923476C134AC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkWzKQhaexDY05NDaB4PHwBx0hGduNabsLCjS34YJJV8RWxA2SkP8S2pFcSSJQIlapn1GZkrFHTA/132","comment_is_top":false,"comment_ctime":1553685460,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1553685460","product_id":100015201,"comment_content":"请问，Rbac，在k8s中申请了新的namespace，然后在该namespace中申明使用serviceAccount 绑定 ClusterRole的admin权限，部署都可以正确，但通过kubectl logs 查看该域名下pod日志，报没有权限，Error from Server: user= system. anonymous。这是为什么呢?pod 通过serviceAccountName 使用了serviceAccount","like_count":0,"discussions":[{"author":{"id":2847763,"avatar":"","nickname":"孙俊伟","note":"","ucode":"84643F0B65A6C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588392,"discussion_content":"我测试情况是，默认default namespace的default sa账号连只读权限都没有。加了view 后可以只读list get。另外即使加了cluster-admin，依旧无法修改集群服务yaml。。。求解？能否突破该限制？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663735990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72864,"user_name":"x","can_delete":false,"product_type":"c1","uid":1429487,"ip_address":"","ucode":"9F77A010D83610","user_header":"https://static001.geekbang.org/account/avatar/00/15/cf/ef/64a0f8d8.jpg","comment_is_top":false,"comment_ctime":1551748501,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1551748501","product_id":100015201,"comment_content":"老师，怎么通过curl方式访问api  https，带证书的","like_count":0,"discussions":[{"author":{"id":1466809,"avatar":"https://static001.geekbang.org/account/avatar/00/16/61/b9/dbf629c0.jpg","nickname":"Tao","note":"","ucode":"75FBDF49C601F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70540,"discussion_content":"加个-k\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575366022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48593,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1544492803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544492803","product_id":100015201,"comment_content":"张老师，用户和service account有啥区别没，都适合什么样的场景使用？另外，声明（role和subject）绑定后，Kubernetes会为service account添加secret字段，而默认绑定的那个是不是没有role？直接在secret中来个annotation就直接绑定service account了呢？它俩我有点分不开？","like_count":0},{"had_liked":false,"id":42350,"user_name":"小明root","can_delete":false,"product_type":"c1","uid":1231573,"ip_address":"","ucode":"BE080897AC53DB","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/d5/a2cd57c9.jpg","comment_is_top":false,"comment_ctime":1542942084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542942084","product_id":100015201,"comment_content":"1楼的type是user 吗？ 不应该是serviceaccount 么？","like_count":0},{"had_liked":false,"id":34461,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1540178914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540178914","product_id":100015201,"comment_content":"老师你好 我有一个问题 RoleBinding.subjects.namespace是不是只能设置和RoleBinding.metadata.namespace同一个值， RoleBinding 是不是只能针对同一个namespace 的 serviceaccount  做权限绑定，如果是这样的话，那 RoleBinding.subjects.namespace 是不是有点多余了 可以直接不用写了， 为什么还要加这个字段呢？ 还是可以使用 RoleBinding 授权其他 namespace 的 serviceaccount 有 RoleBinding <br> 对象所在的 namespace 的权限？","like_count":0},{"had_liked":false,"id":34408,"user_name":"Joe Black","can_delete":false,"product_type":"c1","uid":1052528,"ip_address":"","ucode":"21FE222A286445","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/70/c8680841.jpg","comment_is_top":false,"comment_ctime":1540165767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540165767","product_id":100015201,"comment_content":"好像可以通过RoleBinding去绑定ClusterRole，这样能拥有后者的所有权限，但是只局限在所属namespace中。好像是这样。","like_count":0},{"had_liked":false,"id":34403,"user_name":"Ethan","can_delete":false,"product_type":"c1","uid":1219325,"ip_address":"","ucode":"F75FB3E91EAA25","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/fd/fac45bdc.jpg","comment_is_top":false,"comment_ctime":1540164825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540164825","product_id":100015201,"comment_content":"赞一个","like_count":0}]}