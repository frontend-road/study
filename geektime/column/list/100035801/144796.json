{"id":144796,"title":"07 | 池化技术：如何减少频繁创建数据库连接的性能损耗？","content":"<p>在前面几节课程中，我从宏观的角度带你了解了高并发系统设计的基础知识，你已经知晓了，我们系统设计的目的是为了获得更好的性能、更高的可用性，以及更强的系统扩展能力。</p><p>那么从这一讲开始，我们正式进入演进篇，我会再从局部出发，带你逐一了解完成这些目标会使用到的一些方法，这些方法会针对性地解决高并发系统设计中出现的问题。比如，在15讲中我会提及布隆过滤器，这个组件就是为了解决存在大量缓存穿透的情况下，如何尽量提升缓存命中率的问题。</p><p>当然，单纯地讲解理论，讲解方案会比较枯燥，所以我将用一个虚拟的系统作为贯穿整个课程的主线，说明当这个系统到达某一个阶段时，我们会遇到什么问题，然后要采用什么样的方案应对，应对的过程中又涉及哪些技术点。通过这样的讲述方式，力求以案例引出问题，能够让你了解遇到不同问题时，解决思路是怎样的，<strong>当然，在这个过程中，我希望你能多加思考，然后将学到的知识活学活用到实际的项目中。</strong></p><p><strong>接下来，让我们正式进入课程。</strong></p><p>来想象这样一个场景，一天，公司CEO把你叫到会议室，告诉你公司看到了一个新的商业机会，希望你能带领一位兄弟，迅速研发出一套面向某个垂直领域的电商系统。</p><p>在人手紧张，时间不足的情况下，为了能够完成任务，你毫不犹豫地采用了最简单的架构：前端一台Web服务器运行业务代码，后端一台数据库服务器存储业务数据。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/83/6a/838911dd61e5a61408c3bf96871b846a.jpg?wh=1142*669\" alt=\"\"></p><p>这个架构图是我们每个人最熟悉的，最简单的架构原型，很多系统在一开始都是长这样的，只是随着业务复杂度的提高，架构做了叠加，然后看起来就越来越复杂了。</p><p>再说回我们的垂直电商系统，系统一开始上线之后，虽然用户量不大，但运行平稳，你很有成就感，不过CEO觉得用户量太少了，所以紧急调动运营同学做了一次全网的流量推广。</p><p>这一推广很快带来了一大波流量，<strong>但这时，系统的访问速度开始变慢。</strong></p><p>分析程序的日志之后，你发现系统慢的原因出现在和数据库的交互上。因为你们数据库的调用方式是先获取数据库的连接，然后依靠这条连接从数据库中查询数据，最后关闭连接释放数据库资源。这种调用方式下，每次执行SQL都需要重新建立连接，所以你怀疑，是不是频繁地建立数据库连接耗费时间长导致了访问慢的问题。</p><p><strong>那么为什么频繁创建连接会造成响应时间慢呢？来看一个实际的测试。</strong></p><p>我用\"tcpdump -i bond0  -nn -tttt port 4490\"命令抓取了线上MySQL建立连接的网络包来做分析，从抓包结果来看，整个MySQL的连接过程可以分为两部分：</p><p><strong>第一部分是前三个数据包。</strong>第一个数据包是客户端向服务端发送的一个“SYN”包，第二个包是服务端回给客户端的“ACK”包以及一个“SYN”包，第三个包是客户端回给服务端的“ACK”包，熟悉TCP协议的同学可以看出这是一个TCP的三次握手过程。</p><p><strong>第二部分是MySQL服务端校验客户端密码的过程。</strong>其中第一个包是服务端发给客户端要求认证的报文，第二和第三个包是客户端将加密后的密码发送给服务端的包，最后两个包是服务端回给客户端认证OK的报文。从图中，你可以看到整个连接过程大概消耗了4ms（969012-964904）。</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/1b/3d2f10c8fb21873f482688dba6f4f71b.jpg?wh=1142*190\" alt=\"\"></p><p>那么单条SQL执行时间是多少呢？我们统计了一段时间的SQL执行时间，发现SQL的平均执行时间大概是1ms，也就是说相比于SQL的执行，MySQL建立连接的过程是比较耗时的。这在请求量小的时候其实影响不大，因为无论是建立连接还是执行SQL，耗时都是毫秒级别的。可是请求量上来之后，如果按照原来的方式建立一次连接只执行一条SQL的话，1s只能执行200次数据库的查询，而数据库建立连接的时间占了其中4/5。</p><p><strong>那这时你要怎么做呢？</strong></p><p>一番谷歌搜索之后，你发现解决方案也很简单，只要使用连接池将数据库连接预先建立好，这样在使用的时候就不需要频繁地创建连接了。调整之后，你发现1s就可以执行1000次的数据库查询，查询性能大大提升了。</p><h2>用连接池预先建立数据库连接</h2><p>虽然短时间解决了问题，不过你还是想彻底搞明白解决问题的核心原理，于是又开始补课。</p><p>其实，在开发过程中我们会用到很多的连接池，像是数据库连接池、HTTP连接池、Redis连接池等等。而连接池的管理是连接池设计的核心，<strong>我就以数据库连接池为例，来说明一下连接池管理的关键点。</strong></p><p>数据库连接池有两个最重要的配置：<strong>最小连接数和最大连接数，</strong>它们控制着从连接池中获取连接的流程：</p><ul>\n<li>如果当前连接数小于最小连接数，则创建新的连接处理数据库请求；</li>\n<li>如果连接池中有空闲连接则复用空闲连接；</li>\n<li>如果空闲池中没有连接并且当前连接数小于最大连接数，则创建新的连接处理请求；</li>\n<li>如果当前连接数已经大于等于最大连接数，则按照配置中设定的时间（C3P0的连接池配置是checkoutTimeout）等待旧的连接可用；</li>\n<li>如果等待超过了这个设定时间则向用户抛出错误。</li>\n</ul><p>这个流程你不用死记，非常简单。你可以停下来想想如果你是连接池的设计者你会怎么设计，有哪些关键点，这个设计思路在我们以后的架构设计中经常会用到。</p><p>为了方便你理解记忆这个流程，我来举个例子。</p><p>假设你在机场里经营着一家按摩椅的小店，店里一共摆着10台按摩椅（类比最大连接数），为了节省成本（按摩椅费电），你平时会保持店里开着4台按摩椅（最小连接数），其他6台都关着。</p><p>有顾客来的时候，如果平时保持启动的4台按摩椅有空着的，你直接请他去空着的那台就好了。但如果顾客来的时候，4台按摩椅都不空着，那你就会新启动一台，直到你的10台按摩椅都被用完。</p><p>那10台按摩椅都被用完之后怎么办呢？你会告诉用户，稍等一会儿，我承诺你5分钟（等待时间）之内必定能空出来，然后第11位用户就开始等着。这时，会有两个结果：如果5分钟之内有空出来的，那顾客直接去空出来的那台按摩椅就可以了，但如果用户等了5分钟都没空出来，那你就得赔礼道歉，让用户去其他店再看看。</p><p>对于数据库连接池，根据我的经验，一般在线上我建议最小连接数控制在10左右，最大连接数控制在20～30左右即可。</p><p>在这里，你需要注意池子中连接的维护问题，也就是我提到的按摩椅。有的按摩椅虽然开着，但有的时候会有故障，一般情况下，“按摩椅故障”的原因可能有以下几种：</p><p>1.数据库的域名对应的IP发生了变更，池子的连接还是使用旧的IP，当旧的IP下的数据库服务关闭后，再使用这个连接查询就会发生错误；</p><p>2.MySQL有个参数是“wait_timeout”，控制着当数据库连接闲置多长时间后，数据库会主动地关闭这条连接。这个机制对于数据库使用方是无感知的，所以当我们使用这个被关闭的连接时就会发生错误。</p><p>那么，作为按摩椅店老板，你怎么保证你启动着的按摩椅一定是可用的呢？</p><p>1.启动一个线程来定期检测连接池中的连接是否可用，比如使用连接发送“select 1”的命令给数据库看是否会抛出异常，如果抛出异常则将这个连接从连接池中移除，并且尝试关闭。目前C3P0连接池可以采用这种方式来检测连接是否可用，<strong>也是我比较推荐的方式。</strong></p><p>2.在获取到连接之后，先校验连接是否可用，如果可用才会执行SQL语句。比如DBCP连接池的testOnBorrow配置项，就是控制是否开启这个验证。这种方式在获取连接时会引入多余的开销，<strong>在线上系统中还是尽量不要开启，在测试服务上可以使用。</strong></p><p>至此，你彻底搞清楚了连接池的工作原理。可是，当你刚想松一口气的时候，CEO又提出了一个新的需求。你分析了一下这个需求，发现在一个非常重要的接口中，你需要访问3次数据库。根据经验判断，你觉得这里未来肯定会成为系统瓶颈。</p><p>进一步想，你觉得可以创建多个线程来并行处理与数据库之间的交互，这样速度就能快了。不过，因为有了上次数据库的教训，你想到在高并发阶段，频繁创建线程的开销也会很大，于是顺着之前的思路继续想，猜测到了线程池。</p><h2>用线程池预先创建线程</h2><p>果不其然，JDK 1.5中引入的ThreadPoolExecutor就是一种线程池的实现，它有两个重要的参数：coreThreadCount和maxThreadCount，这两个参数控制着线程池的执行过程。它的执行原理类似上面我们说的按摩椅店的模式，我这里再给你描述下，以加深你的记忆：</p><ul>\n<li>如果线程池中的线程数少于coreThreadCount时，处理新的任务时会创建新的线程；</li>\n<li>如果线程数大于coreThreadCount则把任务丢到一个队列里面，由当前空闲的线程执行；</li>\n<li>当队列中的任务堆积满了的时候，则继续创建线程，直到达到maxThreadCount；</li>\n<li>当线程数达到maxTheadCount时还有新的任务提交，那么我们就不得不将它们丢弃了。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/d4/99/d4f7b06f3c28d88d17b5e2d4b49b6999.jpg?wh=1142*925\" alt=\"\"></p><p>这个任务处理流程看似简单，实际上有很多坑，你在使用的时候一定要注意。</p><p><strong>首先，</strong> JDK实现的这个线程池优先把任务放入队列暂存起来，而不是创建更多的线程，它比较适用于执行CPU密集型的任务，也就是需要执行大量CPU运算的任务。这是为什么呢？因为执行CPU密集型的任务时CPU比较繁忙，因此只需要创建和CPU核数相当的线程就好了，多了反而会造成线程上下文切换，降低任务执行效率。所以当前线程数超过核心线程数时，线程池不会增加线程，而是放在队列里等待核心线程空闲下来。</p><p>但是，我们平时开发的Web系统通常都有大量的IO操作，比方说查询数据库、查询缓存等等。任务在执行IO操作的时候CPU就空闲了下来，这时如果增加执行任务的线程数而不是把任务暂存在队列中，就可以在单位时间内执行更多的任务，大大提高了任务执行的吞吐量。所以你看Tomcat使用的线程池就不是JDK原生的线程池，而是做了一些改造，当线程数超过coreThreadCount之后会优先创建线程，直到线程数到达maxThreadCount，这样就比较适合于Web系统大量IO操作的场景了，你在实际使用过程中也可以参考借鉴。</p><p><strong>其次，</strong>线程池中使用的队列的堆积量也是我们需要监控的重要指标，对于实时性要求比较高的任务来说，这个指标尤为关键。</p><p><strong>我在实际项目中就曾经遇到过任务被丢给线程池之后，长时间都没有被执行的诡异问题。</strong>最初，我认为这是代码的Bug导致的，后来经过排查发现，是因为线程池的coreThreadCount和maxThreadCount设置得比较小，导致任务在线程池里面大量的堆积，在调大了这两个参数之后问题就解决了。跳出这个坑之后，我就把重要线程池的队列任务堆积量，作为一个重要的监控指标放到了系统监控大屏上。</p><p><strong>最后，</strong>如果你使用线程池请一定记住不要使用无界队列（即没有设置固定大小的队列）。也许你会觉得使用了无界队列后，任务就永远不会被丢弃，只要任务对实时性要求不高，反正早晚有消费完的一天。但是，大量的任务堆积会占用大量的内存空间，一旦内存空间被占满就会频繁地触发Full GC，造成服务不可用，我之前排查过的一次GC引起的宕机，起因就是系统中的一个线程池使用了无界队列。</p><p>理解了线程池的关键要点，你在系统里加上了这个特性，至此，系统稳定，你圆满完成了公司给你的研发任务。</p><p>这时，你回顾一下这两种技术，会发现它们都有一个<strong>共同点：</strong>它们所管理的对象，无论是连接还是线程，它们的创建过程都比较耗时，也比较消耗系统资源。所以，我们把它们放在一个池子里统一管理起来，以达到提升性能和资源复用的目的。</p><p><strong>这是一种常见的软件设计思想，叫做池化技术，</strong>它的核心思想是空间换时间，期望使用预先创建好的对象来减少频繁创建对象的性能开销，同时还可以对对象进行统一的管理，降低了对象的使用的成本，总之是好处多多。</p><p>不过，池化技术也存在一些缺陷，比方说存储池子中的对象肯定需要消耗多余的内存，如果对象没有被频繁使用，就会造成内存上的浪费。再比方说，池子中的对象需要在系统启动的时候就预先创建完成，这在一定程度上增加了系统启动时间。</p><p>可这些缺陷相比池化技术的优势来说就比较微不足道了，只要我们确认要使用的对象在创建时确实比较耗时或者消耗资源，并且这些对象也确实会被频繁地创建和销毁，我们就可以使用池化技术来优化。</p><h2>课程小结</h2><p>本节课，我模拟了研发垂直电商系统最原始的场景，在遇到数据库查询性能下降的问题时，我们使用数据库连接池解决了频繁创建连接带来的性能问题，后面又使用线程池提升了并行查询数据库的性能。</p><p>其实，连接池和线程池你并不陌生，不过你可能对它们的原理和使用方式上还存在困惑或者误区，\b我在面试时，就发现有很多的同学对线程池的基本使用方式都不了解。借用这节课，我想再次强调的重点是：</p><ul>\n<li>池子的最大值和最小值的设置很重要，初期可以依据经验来设置，后面还是需要根据实际运行情况做调整。</li>\n<li>池子中的对象需要在使用之前预先初始化完成，这叫做池子的预热，比方说使用线程池时就需要预先初始化所有的核心线程。如果池子未经过预热可能会导致系统重启后产生比较多的慢请求。</li>\n<li>池化技术核心是一种空间换时间优化方法的实践，所以要关注空间占用情况，避免出现空间过度使用出现内存泄露或者频繁垃圾回收等问题。</li>\n</ul><h2>一课一思</h2><p>在实际的项目中，你可能会用到其他的池化技术，那么结合今天的内容，你可以和我分享一下在研发过程中，还使用过哪些其它池化技术吗？又因池化技术踩过哪些坑，当时你是怎么解决的？欢迎在留言区和我一起讨论，或者将你的实战经验分享给更多的人。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":138042,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1569993133,"is_pvip":false,"replies":[{"id":"53116","content":"1. ThreadpoolExecutor提供了prestartAllCoreThreads方法可以预先启动核心线程<br>2. 如果使用无界队列的话，最大线程数就没有意义了，因为永远不会用到，所以尽量不要使用无界队列<br>","user_name":"作者回复","comment_id":138042,"uid":"1448977","ip_address":"","utype":1,"ctime":1570060851,"user_name_real":"唐扬"}],"discussion_count":20,"race_medal":1,"score":"220613325229","product_id":100035801,"comment_content":"1.老师我想请教下文中说的线程池预热，既初始化核心线程数的线程，我看jdk的源码没看到预热过程。<br>而且请求过来，如果线程数小于核心线程数，就创建线程处理，如果线程数大于核心线程数，就往队列中添加，如果是有界队列，则判断队列是否满了，如果满了，且线程数没有达到最大线程数就继续创建线程，是这样的流程，没有在初始化时就创建核心线程数这个数量的线程<br>2.如果线程池采用无界队列，确实会存在内存撑爆的问题，且最大线程数这个参数就没用了，这种队列存在有意义吗？<br>3.我们工作中也用到了池化技术，线程池，各种连接池<br>4.我工作中遇到一个关于vertx-redis-clent的频繁fgc的问题，这个就是把请求放队列里，而队列是无界的，导致内存满了，频繁fgc，下面是我的排查过程，希望能对大家有帮助<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;fWsy26VeUvb8yPKON3OTmA","like_count":52,"discussions":[{"author":{"id":1130333,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3f/5d/75e98cd4.jpg","nickname":"朋朋 mart 💻","note":"","ucode":"31C1FB164F2F91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272418,"discussion_content":"哪里都能看见的白牙","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590303416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1130333,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3f/5d/75e98cd4.jpg","nickname":"朋朋 mart 💻","note":"","ucode":"31C1FB164F2F91","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318269,"discussion_content":"看来是个大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603691612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":272418,"ip_address":""},"score":318269,"extra":""},{"author":{"id":1130333,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3f/5d/75e98cd4.jpg","nickname":"朋朋 mart 💻","note":"","ucode":"31C1FB164F2F91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318608,"discussion_content":"哈哈 必须的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603789837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318269,"ip_address":""},"score":318608,"extra":""}]},{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469361,"discussion_content":"1. ThreadpoolExecutor提供了prestartAllCoreThreads方法可以预先启动核心线程\n2. 如果使用无界队列的话，最大线程数就没有意义了，因为永远不会用到，所以尽量不要使用无界队列\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570060851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692942,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","nickname":"JOHN","note":"","ucode":"6936DE275AA543","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":144139,"discussion_content":"无界队列还是有用的，tomcat就是使用了一个无界队列来保存未处理的请求任务，重点是这个无界队列重写了一个比较有意思的offer方法，使得当队列没有满但线程数不够时也可以去fork线程，可以看我的一篇博文 https://blog.csdn.net/qq_35695616/article/details/104038008","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579521608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1692942,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","nickname":"JOHN","note":"","ucode":"6936DE275AA543","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373287,"discussion_content":"nice, 不错的Tomcat池化技术的讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620691457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":144139,"ip_address":""},"score":373287,"extra":""}]},{"author":{"id":1139455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/ff/f71034e9.jpg","nickname":"悟空WuKong","note":"","ucode":"49AFD2B048C1BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133695,"discussion_content":"在别的课也看到你了，厉害","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578981010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1358225,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJnfEgoyUEPw8dvMVz42K1nt1YIoOt5dIH8onNE1db4N4ViaOFjv8uPxkguCJ414IyYILqpkeRAzfA/132","nickname":"Geek_ab2b44","note":"","ucode":"17CE6624374E3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42868,"discussion_content":"看了你的文章，学习了。同事啊哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572793393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2288955,"avatar":"","nickname":"Geek_a0106d","note":"","ucode":"4DD5D472FB915A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415013,"discussion_content":"曾经有个公开课，说，在生产环境使用jmap导出dump文件的都是小屁公司，所以问题来了，如果现在你们生产环境堆大小10个G，你要怎么排查你文章中的问题，继续dump堆文件吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636964627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2288955,"avatar":"","nickname":"Geek_a0106d","note":"","ucode":"4DD5D472FB915A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550698,"discussion_content":"我也想问这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644675562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":415013,"ip_address":""},"score":550698,"extra":""}]},{"author":{"id":1721694,"avatar":"","nickname":"小写丶H","note":"","ucode":"30DF5C21E23425","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390589,"discussion_content":"太简单了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629905214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1206539,"avatar":"https://static001.geekbang.org/account/avatar/00/12/69/0b/780b0aac.jpg","nickname":"nora","note":"","ucode":"3A3EABF27D0261","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229315,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586619394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201733,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/45/24a5eea7.jpg","nickname":"小河","note":"","ucode":"70E299D670D0B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201915,"discussion_content":"文章写得不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583849655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1735876,"avatar":"","nickname":"Geek_21ec93","note":"","ucode":"825485B9EAA5D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49492,"discussion_content":"既然说最好不用，那设计者这样设计的初中是啥呢？会不会有的场景是需要用到无界队列呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573605780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1213078,"avatar":"https://static001.geekbang.org/account/avatar/00/12/82/96/aa795685.jpg","nickname":"mghio","note":"","ucode":"74883EDE4FD0DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1735876,"avatar":"","nickname":"Geek_21ec93","note":"","ucode":"825485B9EAA5D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227211,"discussion_content":"存在即合理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586478123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49492,"ip_address":""},"score":227211,"extra":""}]},{"author":{"id":1004192,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/a0/d308434e.jpg","nickname":"StarKing","note":"","ucode":"EB825CFA70AC1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27106,"discussion_content":"厉害了 下次建议哥们先猜在验证，亲测有效率高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570630736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","nickname":"忆水寒","note":"","ucode":"E3F86BD8AA8903","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24562,"discussion_content":"哪里都能看到你，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570180013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1004698,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","nickname":"每天晒白牙","note":"","ucode":"A1B102CD933DEA","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1147453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","nickname":"忆水寒","note":"","ucode":"E3F86BD8AA8903","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24570,"discussion_content":"我是话痨😂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570181602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24562,"ip_address":""},"score":24570,"extra":""},{"author":{"id":1147453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","nickname":"忆水寒","note":"","ucode":"E3F86BD8AA8903","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004698,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","nickname":"每天晒白牙","note":"","ucode":"A1B102CD933DEA","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":24585,"discussion_content":"蛮好的，每次都能从你的回答get到新知识","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570186926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24570,"ip_address":""},"score":24585,"extra":""},{"author":{"id":1196234,"avatar":"https://static001.geekbang.org/account/avatar/00/12/40/ca/1313a90b.jpg","nickname":"退役的球童","note":"","ucode":"CD5157830D9606","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004698,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","nickname":"每天晒白牙","note":"","ucode":"A1B102CD933DEA","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":63908,"discussion_content":"感谢你的分享，特别是你的那些外部链接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574921174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24570,"ip_address":""},"score":63908,"extra":""}]}]},{"had_liked":false,"id":138017,"user_name":"Chocolate","can_delete":false,"product_type":"c1","uid":1013822,"ip_address":"","ucode":"242CF0E3C10E97","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/3e/c39d86f1.jpg","comment_is_top":false,"comment_ctime":1569981816,"is_pvip":false,"replies":[{"id":"53111","content":"jdk的ThreadPoolExecutor可以调用executor.getQueue().size()","user_name":"作者回复","comment_id":138017,"uid":"1448977","ip_address":"","utype":1,"ctime":1570060607,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"151893837176","product_id":100035801,"comment_content":"重要线程池的队列任务堆积量，请问下老师，这个指标怎么监控。","like_count":36,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469353,"discussion_content":"jdk的ThreadPoolExecutor可以调用executor.getQueue().size()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570060607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004192,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/a0/d308434e.jpg","nickname":"StarKing","note":"","ucode":"EB825CFA70AC1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27110,"discussion_content":"直接SPRING 监控就能看到 底层也JDK的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570630823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24203,"discussion_content":"java的话，想办法获取到这个线程池实例。里面就有自带的队列可以查询。dubbo和spring的异步这些好点的设计都比较好获取线程池。但有些就比较蛋疼，比如rocketmq，只能反射一路下去拿。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570031962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138988,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1570523535,"is_pvip":false,"replies":[{"id":"53634","content":"我理解的QPS是每秒查询数，是针对读请求的<br>TPS是每秒执行事务数，倾向于写请求","user_name":"作者回复","comment_id":138988,"uid":"1448977","ip_address":"","utype":1,"ctime":1570582819,"user_name_real":"唐扬"}],"discussion_count":5,"race_medal":0,"score":"126124575119","product_id":100035801,"comment_content":"老师在网上查了很多的资料对于TPS和QPS两个性能指标的区分，但是也没有搞清楚到底两者有什么区别，以及两者的计算公式，老师能不能详细解释下呢？感谢。打卡06.","like_count":30,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469728,"discussion_content":"我理解的QPS是每秒查询数，是针对读请求的\nTPS是每秒执行事务数，倾向于写请求","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570582819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042503,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e8/47/3e4a03ac.jpg","nickname":"renwotao","note":"","ucode":"8054CA7EC0C8AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82697,"discussion_content":"至少我也有类似的疑问，谢谢解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576367268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44419,"discussion_content":"老师这个解释很有道理的样子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572947650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306868,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","nickname":"肖大保健","note":"","ucode":"E3209A00C1B954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36481,"discussion_content":"追问一下TPS和QPS ，可否结合线程数量，每秒查询数，执行事务数讲一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571381949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004192,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/a0/d308434e.jpg","nickname":"StarKing","note":"","ucode":"EB825CFA70AC1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27120,"discussion_content":"这个回答更容易让同学们理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570631230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139191,"user_name":"613","can_delete":false,"product_type":"c1","uid":1671010,"ip_address":"","ucode":"9CA007DD3A4BD6","user_header":"https://static001.geekbang.org/account/avatar/00/19/7f/62/75f5a988.jpg","comment_is_top":false,"comment_ctime":1570584458,"is_pvip":false,"replies":[{"id":"53676","content":"怎么会，是最好的语言呀：）","user_name":"作者回复","comment_id":139191,"uid":"1448977","ip_address":"","utype":1,"ctime":1570600871,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"74585028490","product_id":100035801,"comment_content":"phper太难了","like_count":17,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469837,"discussion_content":"怎么会，是最好的语言呀：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570600871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297887,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","nickname":"董俊俊","note":"","ucode":"732300A779660B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403585,"discussion_content":"phper在强行学java","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634113516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039447,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dc/57/7fd33d06.jpg","nickname":"upup","note":"","ucode":"8BE34008AB9DE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217433,"discussion_content":"java是绕不过去的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585559295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","nickname":"啦啦啦","note":"","ucode":"6B12EC90A62525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100369,"discussion_content":"哈哈，我也是phper","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577255023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138345,"user_name":"大卫","can_delete":false,"product_type":"c1","uid":1019127,"ip_address":"","ucode":"D861709E483793","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/f7/a4de6f64.jpg","comment_is_top":false,"comment_ctime":1570174928,"is_pvip":false,"replies":[{"id":"53253","content":"👍","user_name":"作者回复","comment_id":138345,"uid":"1448977","ip_address":"","utype":1,"ctime":1570264737,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"61699717072","product_id":100035801,"comment_content":"我在设计一个产品要求的专辑详情页中使用到了自定义的线程池。<br><br>专辑详情页中包含多个板块，部分几个板块要求动态请求搜索或者推荐接口获取数据，板块与板块之间要求内容去重，搜索推荐对于本系统来说属于第三方接口。<br><br>经过考量，使用了CompletableFuture来实现并行请求，同时自定义线程池，使用有界队列，设置合理的线程池大小。根据压测结果，调整出一个合适的线程池大小，使该接口性能达到预期。","like_count":14,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469494,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570264737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318270,"discussion_content":"是并行开几个线程，分别去不同系统的接口里获取数据，然后在本系统汇总数据再去重吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603691837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169610,"user_name":"折枳","can_delete":false,"product_type":"c1","uid":1512836,"ip_address":"","ucode":"A361B63AAE52D1","user_header":"https://static001.geekbang.org/account/avatar/00/17/15/84/a0cfdb9a.jpg","comment_is_top":false,"comment_ctime":1578388416,"is_pvip":false,"replies":[{"id":"66150","content":"是的，但是这是最轻量的","user_name":"作者回复","comment_id":169610,"uid":"1448977","ip_address":"","utype":1,"ctime":1578669873,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"44528061376","product_id":100035801,"comment_content":"刚看完丁奇老师的MySQL实战45讲，有说到“select 1 成功返回，只能说明这个库的进程还在，并不能说明主库没问题”，需要了解的同学可以去看下第29讲","like_count":10,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480633,"discussion_content":"是的，但是这是最轻量的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578669873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104850,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","nickname":"lidashuang","note":"","ucode":"560ABE8032760E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297620,"discussion_content":"99的场景够用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596987431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1990288,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/5e/90/6ab53210.jpg","nickname":"付威","note":"","ucode":"7C0E9724647F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266988,"discussion_content":"一般DBA监控的话，就不会简单用select 1了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589586670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1990288,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/5e/90/6ab53210.jpg","nickname":"付威","note":"","ucode":"7C0E9724647F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266987,"discussion_content":"一般框架都是这么做的，毕竟在数据库层面，公司有DBA的话会做更全面的库指标监控，主库有问题的话会告警，框架上使用select 1其实更多的是用来保持连接吃最小配置的活性连接吧，避免超时被数据库杀掉而应用无感知，拿到已关闭连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589586611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138123,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1570034480,"is_pvip":false,"replies":[{"id":"53121","content":"线程在等待io操作的时候确实会让出CPU时间片，可以说说你是如何测试的吗~<br>","user_name":"作者回复","comment_id":138123,"uid":"1448977","ip_address":"","utype":1,"ctime":1570061171,"user_name_real":"唐扬"}],"discussion_count":11,"race_medal":0,"score":"44519707440","product_id":100035801,"comment_content":"1.先回答课后题，池化的应用。池化就是空间换时间。万物皆对象，而java里面的对象是有生命周期的。对象的生死对应着有生时资源申请和死时资源释放这两步操作，而这些操作是有时间开销的。这个时候如果想降低这些开销，那么就要少生对象少死对象，而要少生少死就得复用，即干完继续干不准死，即延长对象生命周期并重用之。那么就可以采用池化，用的时候往里面拿，用完放回去。所以就出现了对象池，而对象即万物。也就是说，只要你是想降低对象生死开销的，那么就可以采用池化。但于我个人，我不喜欢池化。<br>2.我个人认为，池化仅用在线程池好点。其他都不咋地。因为线程是执行体本身，所以挺合适。其他池化操作，都属于资源，那么复用就要无状态，即拿出来和放回去要一个样，不然就会影响下一个人使用（下一个线程），那么在操作池化对象时要么得设计无状态要么得在归还或拿取做init操作，太麻烦，不直观，不喜。而且池化资源还是个竞量，这就是个提高复杂度的大坑，太糟糕了，弃了弃了。<br>3.说归说，其实用还是用的，毕竟也不全是jvm内部的“干净”对象池，有些对象池跟jvm外部资源有关系“不干净”。这种不干净的对象池，采用池化按需配置也是比较恰当的操作，毕竟外部关系这种开销大小不好确定，比如各种连接池。<br>4.但我个人做的工具，碰到这种空间换时间，随手就是线程空间绑定，虽然还有复用无状态的问题，但至少不担心竞量问题了。而各种数据链接池，如果开启了事务也是往线程空间内放该链接的（为了拿到同一条链接）。<br><br>5.请教环节，系统的线程池我自己埋点压过，确如老师所说，cpu密集线程池看核数就够了，io密集可以多些并行，因为数据传输不需要cpu。但是，从我自己压，捣鼓出来的结果看。io操作的线程确实可以在不处于cpu操作的时间片内时，继续做数据传输，但是，它不让渡时间片，也就是当一个cpu调度到一个执行io操作的线程，这条线程不会快速让渡出时间片给其他cpu操作的线程，就像sleep似的。我想问下老师，为什么这样设计，出于什么考量，更或者是我自己捣鼓错了？","like_count":10,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469395,"discussion_content":"线程在等待io操作的时候确实会让出CPU时间片，可以说说你是如何测试的吗~\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570061171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24968,"discussion_content":"这就看出协程的好了","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1570350803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24244,"discussion_content":"1.4核8线程cpu。\n16条线程读同一个大的excel，读取完打印成功。（度量点是全成功的耗时）\n\n分析：如果io操作必须在cpu时间片内才传输数据。那么16条线程的时间开销应该接近8条的1倍。因为最大并行度是8，要排先后。而实际结果却是大于8条开销，但时间并没有1倍这么夸张。多了三分一的样子。所以就推断哪怕非cpu时间片内，也能进行数据传输，进而才能省掉这份时间。\n\n2.4核8线程\n\n64条线程读大excel，1条线程死循环打印时间截。（度量点是时间截输出是否连续）。\n\n分析，如果io操作线程会快速让渡时间片，那么cpu线程将稳定持有时间片，打印出来的时间截将连续无抖动。可现象却是会抖动，所以猜测不让渡。\n\n确认这些应该可以监听linx其他指标来看。这样会更严谨科学点。但自己也仅是好奇随手试一下，并没有太深入去探究真实情况。故在这边请教，想偷懒直接知道结论。当然，若以后有机会，自己也会再亲自验证一番，毕竟挺有趣的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1570069617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295025,"discussion_content":"2. 数据输出到标准输出也是io操作，调用sci都会陷入内核，触发线程切换，同时还有其他进程执行影响。具体可以看一下中断机制和cfs内核调度算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596072307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24244,"ip_address":""},"score":295025,"extra":""},{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295026,"discussion_content":"1.io读文件需要从磁盘加载到内存，操作系统里面有磁盘预读，时间增长不符合预期，可能是因为已经前一个线程读取已经完成加载，后面线程再读取省去了磁盘加载到内存过程。\n2020-07-30","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596072356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24244,"ip_address":""},"score":295026,"extra":""},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295035,"discussion_content":"dmac的存在，io读取可以不用cpu参与。我后面都用干净的环境验证过，和老师说的是一样的。我之前测试的场景是生产系统，排开网络io还有各种拦截和鉴权，并非纯io。最后，测试的话sleep也不占用cpu使用率，让不让度就不确定了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596073394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295026,"ip_address":""},"score":295035,"extra":""}]},{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295023,"discussion_content":"1.io读文件需要从磁盘加载到内存，操作系统里面有磁盘预读，时间增长不符合预期，可能是因为已经前一个线程读取已经完成加载，后面线程再读取省去了磁盘加载到内存过程。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596071836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095289,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b6/79/22e582a5.jpg","nickname":"刘岚乔月","note":"","ucode":"99A9AB4E4E1111","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291474,"discussion_content":"除了线程池方面，netty 对象池了解下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594827967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009046,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/96/6dc690d2.jpg","nickname":"Flower","note":"","ucode":"74CBF03554E100","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24253,"discussion_content":"老师您好，我也有同样的疑问: 执行IO完全不需要cpu参与吗？比如从磁盘读文件时，会用到内存cache，那么判断这个数据块是否在cache中，不是由cpu判断的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570071201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140732,"user_name":"cai","can_delete":false,"product_type":"c1","uid":1161186,"ip_address":"","ucode":"BC00A979051963","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/e2/0dd06f0c.jpg","comment_is_top":false,"comment_ctime":1571039388,"is_pvip":false,"replies":[{"id":"54415","content":"是的，理解原理很重要","user_name":"作者回复","comment_id":140732,"uid":"1448977","ip_address":"","utype":1,"ctime":1571046468,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"35930777756","product_id":100035801,"comment_content":"对ThreadPoolExecutor的每一个参数理解透彻很重要，曾经以为maximumPoolSize调大就可以增加线程数，其实不然，如果任务队列不满，线程数是不会增加的，所以导致任务在队列里面排队，然后线程池还是只有corePoolSize大小。","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470531,"discussion_content":"是的，理解原理很重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571046468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385433,"discussion_content":"为了充利用线程池资源，只有当阻塞队列满了的时候，才创建新的线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627037548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140996,"user_name":"sun","can_delete":false,"product_type":"c1","uid":1076100,"ip_address":"","ucode":"0358B9288D4018","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/84/d1e6eac9.jpg","comment_is_top":false,"comment_ctime":1571101723,"is_pvip":false,"replies":[{"id":"54577","content":"还好，谢谢关心~","user_name":"作者回复","comment_id":140996,"uid":"1448977","ip_address":"","utype":1,"ctime":1571117256,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"31635872795","product_id":100035801,"comment_content":"老师你的发量还好吗？","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470645,"discussion_content":"还好，谢谢关心~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571117256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193744,"user_name":"lofaith","can_delete":false,"product_type":"c1","uid":1322553,"ip_address":"","ucode":"5DF6922BBF1AD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/39/7682b49e.jpg","comment_is_top":false,"comment_ctime":1584957151,"is_pvip":false,"replies":[{"id":"73868","content":"算是的","user_name":"作者回复","comment_id":193744,"uid":"1448977","ip_address":"","utype":1,"ctime":1585012202,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"27354760927","product_id":100035801,"comment_content":"老师，我想问下，IOC容器技术是不是相当于一个对象池，里面放着一堆创建好的对象，当你需要的时候通过依赖注入提供给你，这也算池化技术的一种应用吗","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488642,"discussion_content":"算是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585012202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138005,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1569978093,"is_pvip":false,"replies":[{"id":"53114","content":"😄","user_name":"作者回复","comment_id":138005,"uid":"1448977","ip_address":"","utype":1,"ctime":1570060666,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"23044814573","product_id":100035801,"comment_content":"老师理论听的挺明白，还是需要动手实战啊，有些东西理解起来很模糊，但实践上有可能一下子就明白了😊","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469349,"discussion_content":"😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570060666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138892,"user_name":"xu晓晨","can_delete":false,"product_type":"c1","uid":1513945,"ip_address":"","ucode":"EE0374EB48FBDC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoTDBX4a5u3Oc0zDpKDp6UbcYDcwAJXfBSmicqQwoyxaoVLEWzjIoUqYBiaDJHAYkO8icLtXqk4ibqKg/132","comment_is_top":false,"comment_ctime":1570500985,"is_pvip":false,"replies":[{"id":"53497","content":"go，😂","user_name":"作者回复","comment_id":138892,"uid":"1448977","ip_address":"","utype":1,"ctime":1570503097,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"18750370169","product_id":100035801,"comment_content":"学完这节课我发现php不是最好的语言了。<br>另外想问一下phper想学另外一名语言 是选择java还是go呢？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469688,"discussion_content":"go，😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570503097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004192,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/a0/d308434e.jpg","nickname":"StarKing","note":"","ucode":"EB825CFA70AC1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27131,"discussion_content":"老师说他也想出轨GO 算广大JAVAER的心声","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570631525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1765541,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/f0/a5/ff758400.jpg","nickname":"belief","note":"","ucode":"563EDA9F2C9214","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383309,"discussion_content":"php存在一定局限性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626055530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137999,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1569976711,"is_pvip":false,"replies":[{"id":"53110","content":"1. 其实这些是经验所得，这个数值需要在实际运行中来调整，初期可以按照这个来设置<br>2. 连接池的最大连接数肯定要小于max_connections的，你的理解没错~","user_name":"作者回复","comment_id":137999,"uid":"1448977","ip_address":"","utype":1,"ctime":1570060402,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"18749845895","product_id":100035801,"comment_content":"国庆打卡，感谢老师的分享，对于这篇文章存有个疑问，希望老师能解答一下：<br>1.文中说的最小连接数是10和最大连接数是20-30，这个数是如何计算出来的？有没有参考标准或者计算公式？根据具体的业务场景或者规模，有什么可以套用的配置经验吗？<br>2.这个最大连接数跟mysql配置参数中的max_connections有什么联系吗？如果连接池的最大连接数设置成100，最后的连接请求还是会打到mysql上，如果max_connections这个值太小，还是会报错的啊？这两个值应该一起配合使用吧？我的理解有问题吗？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469343,"discussion_content":"1. 其实这些是经验所得，这个数值需要在实际运行中来调整，初期可以按照这个来设置\n2. 连接池的最大连接数肯定要小于max_connections的，你的理解没错~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570060402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186115,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/43/226ca347.jpg","nickname":"Michael 🛡YZY","note":"","ucode":"F1D2BF8489A7D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170051,"discussion_content":"摘取隔壁讲座关于线程池参数的计算 线程数 =N（CPU 核数）*（1+WT（线程等待时间）/ST（线程时间运行时间））\nCPU intensive: N (number of CPUs) +1, 4-6 threads\nI/O intensive: 2N\nSet thread number between N+1 and 2N","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581666803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187590,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1584168059,"is_pvip":false,"replies":[{"id":"73107","content":"差不多这些了","user_name":"作者回复","comment_id":187590,"uid":"1448977","ip_address":"","utype":1,"ctime":1584590915,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14469069947","product_id":100035801,"comment_content":"池化技术<br>1. 内存管理：比如memcached，jvm<br>2. 线程池：jdk，tomcat<br>3. 连接池：数据库<br>4. 对象池：单例模式的扩展<br>还有其他吗？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487159,"discussion_content":"差不多这些了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148140,"user_name":"雷霹雳的爸爸","can_delete":false,"product_type":"c1","uid":1119490,"ip_address":"","ucode":"99BBA6D83DD11F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","comment_is_top":false,"comment_ctime":1572947564,"is_pvip":true,"replies":[{"id":"57336","content":"😂😂","user_name":"作者回复","comment_id":148140,"uid":"1448977","ip_address":"","utype":1,"ctime":1573170287,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14457849452","product_id":100035801,"comment_content":"坑啊，jedis的连接池，旧版的jedis有个奇怪的玩意儿，.returnBrokenResource，得写段套路得代码避免把一个坏掉的连接又在之后被使用，结果我们那东西没按套路来，自己一通乱封装，还是个多租户的系统，写到别人家去了，然后就是如文章所说，maxThreadCount设小了，自己给自己把吞吐量给限制住了，怎么压也压不上去...","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473412,"discussion_content":"😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573170287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212950,"user_name":"小默","can_delete":false,"product_type":"c1","uid":1555154,"ip_address":"","ucode":"47AF780F36E78D","user_header":"https://static001.geekbang.org/account/avatar/00/17/ba/d2/f71fea31.jpg","comment_is_top":false,"comment_ctime":1588244846,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10178179438","product_id":100035801,"comment_content":"如果线程数小于核心线程数，就创建线程处理。那如果此时有空闲线程的话，为什么不直接使用空闲线程呢？","like_count":2,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385507,"discussion_content":"源码注释：If fewer than corePoolSize threads are running, try to start a new thread with the given command as its first task\n\n个人理解：当线程数小于核心线程数，现提交一个任务线程池会新起一个线程来执行这个新任务，不管老线程是否空闲。之所以新建实际是想要快速拥有核心线程数的线程，也就是说本质上线程池是需要这么些数量的线程来处理任务的，所以急着先把核心线程数填满\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627102260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203369,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586180351,"is_pvip":false,"replies":[{"id":"78265","content":"2 确实是内存泄漏，文中有提到是队列中放置了太多的对象","user_name":"作者回复","comment_id":203369,"uid":"1448977","ip_address":"","utype":1,"ctime":1587623906,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10176114943","product_id":100035801,"comment_content":"1：线程池的使用描述是不具体不严谨的，拒绝策略有好几种，也可以自定义，JDK提供了几种线程池，也可以自定义，另外，超过核心线程数的线程存活是有存活时间的。<br>2：在什么场景下使用线程池会出现内存泄露问题？怎么发现的？怎么解决的？有实际案例吗？不是内存溢出哈！<br>3：池化技术还有一个好处是保护系统，避免创建过多的池化对象。<br>4：重复利用的资源都可以池化吧！数据库连接池、线程池、RPC服务线程池、HTTP连接池、单例对象也可以看作一种对象池吧！各种框架中估计都有不少使用。<br>5：有个解释，解释的有道理——为什么把任务放入任务等待队列中，不直接创建线程，直到达到最大线程数。<br>核心是为CPU密集型的场景设计的，io密集型的系统，CPU会不那么繁忙，所以可以处理更多线程的安排的任务。那CPU密集型的，就会使CPU比较繁忙，所以，新加入的任务放入任务等待队列，在队列未满时等待空闲的队列处理是一个更加的策略。即使立马创建线程，由于CPU比较繁忙也可能不会让渡时间片，而且切换线程上下文也是一个重型操作。","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490847,"discussion_content":"2 确实是内存泄漏，文中有提到是队列中放置了太多的对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181891,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1582673774,"is_pvip":false,"replies":[{"id":"71102","content":"两个是不同场景吧，连接池是管理连接，线程池是管理线程的","user_name":"作者回复","comment_id":181891,"uid":"1448977","ip_address":"","utype":1,"ctime":1583115232,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10172608366","product_id":100035801,"comment_content":"老师可以详细说一下，为什么有了连接池还需要线程池吗？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485157,"discussion_content":"两个是不同场景吧，连接池是管理连接，线程池是管理线程的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149925,"user_name":"逍遥","can_delete":false,"product_type":"c1","uid":1070213,"ip_address":"","ucode":"95C583EF780159","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/85/081804f7.jpg","comment_is_top":false,"comment_ctime":1573433385,"is_pvip":false,"replies":[{"id":"57791","content":"是tomcat中使用的线程池与原生的线程池不同，tomcat使用的线程池是先增加线程，后放入队列","user_name":"作者回复","comment_id":149925,"uid":"1448977","ip_address":"","utype":1,"ctime":1573481878,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10163367977","product_id":100035801,"comment_content":"老师，我还是没理解，那我们自己写代码创建的线程池，如果是按jdk原生线程池的流程先放入队列，那不就只适合cpu密集型的场景？这个是怎么解决？还是说tomcat帮我们处理了？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474015,"discussion_content":"是tomcat中使用的线程池与原生的线程池不同，tomcat使用的线程池是先增加线程，后放入队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573481878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146570,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1572575028,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"10162509620","product_id":100035801,"comment_content":"要使用连接池，程序需要常驻内存，如果像PHP使用nginx phpfpm方式，每来一个请求fork一个子进程来处理，处理完子进程就结束了，似乎没法使用连接池","like_count":2,"discussions":[{"author":{"id":1013493,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/76/f5/e3f5bd8d.jpg","nickname":"宝仔","note":"","ucode":"A0F17DFF99DB21","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207614,"discussion_content":"phpfpm分配子进程有动态和静态两种方式。动态分配就是池化思想，有最小空闲子进程数，最大子进程数，最大空闲子进程数，可以网上查下","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584505674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1872697,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/93/39/f642023f.jpg","nickname":"Hplus","note":"","ucode":"DC32CBC3E9C11D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566278,"discussion_content":"不太对，php mod和fpm也是类似本文的池化模式。比如prefork就有最小空闲子进程数，最大空闲子进程数等设置，另外每个子进程可以重复处理多次请求，也可以配置处理完多少次请求就销毁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650638353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1718942,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/3a/9e/3efae88f.jpg","nickname":"董永政","note":"","ucode":"AFBB94FA61B85B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390041,"discussion_content":"swoole","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629620036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139453,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1570640319,"is_pvip":false,"replies":[{"id":"53775","content":"嗯那 可以自定义策略","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665090,"ip_address":"","comment_id":139453,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160574911","product_id":100035801,"comment_content":"哈哈，老师我之前一直用Executor的FixedPool，它是无界的队列，所以也 core == max，但是我拿它来处理数据库相关的了，看来以后我得改过来～  还有，max满了不一定是丢弃呀，可以实现接口自定义满空间的操作，可以丢弃，也可以重试，也可以记录什么的，但是重试一定要给它一定的时间，否则过快提交会StackOverFlow嗷～","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469953,"discussion_content":"嗯那 可以自定义策略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227678,"user_name":"Hesunfly","can_delete":false,"product_type":"c1","uid":1224695,"ip_address":"","ucode":"1264B4494DDA3A","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/f7/f80e9675.jpg","comment_is_top":false,"comment_ctime":1592451973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5887419269","product_id":100035801,"comment_content":"php使用连接池的话，目前看到的都是swoole提供的，但是用户量好像比较少，不敢在正式产品上使用啊！phper太难受了，https:&#47;&#47;smproxy.louislivi.com&#47;#&#47;, https:&#47;&#47;github.com&#47;swoole&#47;php-cp","like_count":1},{"had_liked":false,"id":224470,"user_name":"in","can_delete":false,"product_type":"c1","uid":1437481,"ip_address":"","ucode":"55329844488EA7","user_header":"https://static001.geekbang.org/account/avatar/00/15/ef/29/5f0094ff.jpg","comment_is_top":false,"comment_ctime":1591413471,"is_pvip":false,"replies":[{"id":"82710","content":"算是的~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591538214,"ip_address":"","comment_id":224470,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886380767","product_id":100035801,"comment_content":"这个可以理解为生产者-消费者模式吗？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497488,"discussion_content":"算是的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591538214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206889,"user_name":"林腾","can_delete":false,"product_type":"c1","uid":1963793,"ip_address":"","ucode":"8E2438E56BF677","user_header":"","comment_is_top":false,"comment_ctime":1586952839,"is_pvip":false,"replies":[{"id":"78093","content":"是可以的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587473273,"ip_address":"","comment_id":206889,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881920135","product_id":100035801,"comment_content":"对于ThreadExecutorPool，我觉得最好是用自定义的队列，一是方便监控，而是可以应急处理队列中阻塞的操作。我用的是linkedBlockingDeque,可以将队列尾部堆积的操作进行一些应急处理，不会影响到队列头部可能正准备执行的操作。其实用我觉得用无界队列也可以，根据具体业务场景监控队列当前大小+自动应急积累在队列尾部的操作（比如清除尾部的操作）来保证不会因为积攒过多而OOM。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491938,"discussion_content":"是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587473273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181227,"user_name":"停三秒","can_delete":false,"product_type":"c1","uid":1442497,"ip_address":"","ucode":"C9D8F39F24672E","user_header":"https://static001.geekbang.org/account/avatar/00/16/02/c1/80e68043.jpg","comment_is_top":false,"comment_ctime":1582522257,"is_pvip":false,"replies":[{"id":"71113","content":"预热其实只是创建核心线程，如果你的系统请求量很高，核心线程反正都要创建，不如提前创建，避免启动时会慢请求","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115546,"ip_address":"","comment_id":181227,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877489553","product_id":100035801,"comment_content":"线程池方面，在使用时，线程的切换也会引起上下文的切换，其实也很耗时，感觉线程池不一定要预热，但是需要控制好使用的线程数，防止频繁的创建和切换线程，防止过多的线程对内存空间的占用，不知道我说的对不对，老师。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484965,"discussion_content":"预热其实只是创建核心线程，如果你的系统请求量很高，核心线程反正都要创建，不如提前创建，避免启动时会慢请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176436,"user_name":"Geek_908e99","can_delete":false,"product_type":"c1","uid":1724843,"ip_address":"","ucode":"5E7C4D317F0C73","user_header":"","comment_is_top":false,"comment_ctime":1581060440,"is_pvip":false,"replies":[{"id":"68827","content":"其实主要的问题是，io密集型的系统，CPU会不那么繁忙，所以可以处理更多线程的安排的任务","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1581335138,"ip_address":"","comment_id":176436,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5876027736","product_id":100035801,"comment_content":"没有完全理解线程池的那一段关于CPU密集系统和IO密集系统的区别，为什么IO密集的系统适合创建大于coreThreadCount数目的线程？一个任务在被线程执行时，如果遇到IO操作需要等待，那这个任务就被放回队列了，这个线程就被释放了，可以执行其他的任务。如果线程池的线程数大于CPU核心数的话，不是会有和CPU密集型系统同样的上下文切换的问题吗？除非这里的假设是IO密集型系统的线程池里的线程永远是有一部分空闲的，但是如果是那样的话为什么还要创建更多线程呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483104,"discussion_content":"其实主要的问题是，io密集型的系统，CPU会不那么繁忙，所以可以处理更多线程的安排的任务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581335138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024994,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a3/e2/5cb4f43f.jpg","nickname":"laolinshi","note":"","ucode":"269B879389D7D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554309,"discussion_content":"线程在执行任务时遇到IO相关的操作时线程会被阻塞而不是把任务重新放入队列中，只有当IO操作完成时线程才会被操作系统重新唤醒继续执行，从这里可以看出IO密集型的任务会占用大量的线程资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646310026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182690,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/e2/68daf201.jpg","nickname":"Alex","note":"","ucode":"6726EA3EFD2F79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":396259,"discussion_content":"> 如果遇到IO操作需要等待，那这个任务就被放回队列了，这个线程就被释放了\n\nIO操作等待是个阻塞操作，任务不会被放回队列，线程会等待阻塞操作完成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632406534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163945,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1576832456,"is_pvip":false,"replies":[{"id":"63078","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577242628,"ip_address":"","comment_id":163945,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871799752","product_id":100035801,"comment_content":"线程池，数据库连接池，tomcat线程都是相同，通过缓存池化，空间换时间，控制好核心线程数和有界队列就能很好使用池化优化性能。其中tomcat是但核心线程超了不是放入队列而是新建线程，比较适合io密集型的。线程数要根据cpu和资源确定，不是越大越好。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478590,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577242628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139995,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1570781702,"is_pvip":false,"replies":[{"id":"54208","content":"testOnBorrow是在获取连接的时候校验连接<br>testWhileIdle是有周期性的校验<br>这两个都依赖validationQuery","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570851016,"ip_address":"","comment_id":139995,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865748998","product_id":100035801,"comment_content":"validationQuery = &quot;SELECT 1&quot;  ，testWhileIdle ，testOnBorrow <br>老师好，<br>1、请问testWhileIdle和testOnBorrow这两个配置项有什么区别呀？<br>2、testWhileIdle和testOnBorrow的校验都依赖与validationQuery配置的语句吗？<br>谢谢。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470204,"discussion_content":"testOnBorrow是在获取连接的时候校验连接\ntestWhileIdle是有周期性的校验\n这两个都依赖validationQuery","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570851016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138138,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1570062051,"is_pvip":false,"replies":[{"id":"53183","content":"是的，内存池也是一种常见的池化技术的常见实现","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570104073,"ip_address":"","comment_id":138138,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5865029347","product_id":100035801,"comment_content":"还有一种是内存池，用的地方相对较少，基本都是重型武器才有，比如netty这种。<br>这门课总会提到实际工作中遇到的坑，还挺不错","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469402,"discussion_content":"是的，内存池也是一种常见的池化技术的常见实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570104073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107550,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/5e/62158841.jpg","nickname":"取经人","note":"","ucode":"C3668CA65200DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157252,"discussion_content":"约书亚这老兄我在那都能看到。买的真多还是大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580459553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254530,"avatar":"https://static001.geekbang.org/account/avatar/00/13/24/82/b5808a60.jpg","nickname":"李冲","note":"","ucode":"C8C12308B0FDDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37534,"discussion_content":"👍，内存池具体还可以分block pool和byte pool，前者是一种优化了的对象池，后者就是通用型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571630636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349237,"user_name":"赵文帅","can_delete":false,"product_type":"c1","uid":2169775,"ip_address":"","ucode":"B36E8BD8136B02","user_header":"https://static001.geekbang.org/account/avatar/00/21/1b/af/f766fef7.jpg","comment_is_top":false,"comment_ctime":1655821524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655821524","product_id":100035801,"comment_content":"连接池本身是一种长连接缓存的思想，那么问题来了，长连接一般是需要探活的，但是通常情况下市面上的这些连接池的每个连接是没有探活机制的，他们是如何保证连接一定有效的，正如课程里说的1.定时检测每个连接状态，如果异常直接从池中剔除，2.使用连接之前先校验是否可用，可用才会真正的执行，否则从池中剔除。","like_count":0},{"had_liked":false,"id":342016,"user_name":"IT届的感情青年","can_delete":false,"product_type":"c1","uid":2977725,"ip_address":"","ucode":"E4D47FC89F277E","user_header":"https://static001.geekbang.org/account/avatar/00/2d/6f/bd/99841b4e.jpg","comment_is_top":false,"comment_ctime":1649964764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649964764","product_id":100035801,"comment_content":"老师好,既然连接池，在预热的时候也会创建连接，那么，预热时一般创建多少个连接，跟最小连接数有什么关系？","like_count":0},{"had_liked":false,"id":341684,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1649767966,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649767966","product_id":100035801,"comment_content":"http连接池，如果没有合理的设置连接超时和请求超时，会导致使用该池子的请求报错或者池化无效的问题","like_count":0},{"had_liked":false,"id":338535,"user_name":"梦楼","can_delete":false,"product_type":"c1","uid":2093516,"ip_address":"","ucode":"2D0F3050ACC091","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f1/cc/3bd32c6f.jpg","comment_is_top":false,"comment_ctime":1647562749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647562749","product_id":100035801,"comment_content":"JDK的线程池机制讲的不错，这个可以有","like_count":0},{"had_liked":false,"id":324303,"user_name":" 木易♚佳","can_delete":false,"product_type":"c1","uid":2457408,"ip_address":"","ucode":"E9098F1A59B124","user_header":"https://static001.geekbang.org/account/avatar/00/25/7f/40/509dc130.jpg","comment_is_top":false,"comment_ctime":1638364906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638364906","product_id":100035801,"comment_content":"请教下，应用部署的cpu多的话，单机架构多服务，每秒200qps的话，数据库连接池配置也是30吗？好像太小大部分时候会造成等待吧？","like_count":0},{"had_liked":false,"id":304546,"user_name":"张小方","can_delete":false,"product_type":"c1","uid":1251014,"ip_address":"","ucode":"D2C9732832728E","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/c6/08c6fccf.jpg","comment_is_top":false,"comment_ctime":1627474776,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1627474776","product_id":100035801,"comment_content":"请问下，文中说的C3P0是什么？","like_count":0,"discussions":[{"author":{"id":1182690,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/e2/68daf201.jpg","nickname":"Alex","note":"","ucode":"6726EA3EFD2F79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":396260,"discussion_content":"一种数据库连接池","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632406585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303651,"user_name":"walle斌","can_delete":false,"product_type":"c1","uid":1062848,"ip_address":"","ucode":"0DB3243004951F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","comment_is_top":false,"comment_ctime":1626916973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626916973","product_id":100035801,"comment_content":"除了连接池、线程池，还有对象池技术，对于某一段空间持续复用提升效率，以空间换时间的思路。","like_count":0},{"had_liked":false,"id":303493,"user_name":"刘聪为","can_delete":false,"product_type":"c1","uid":1139128,"ip_address":"","ucode":"8DFDCA7B37D04E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJh4fE4WryeIpjKCYB7TuWS2IEFV0paiaZt3hSh8jrPZRD8cvalPWndTv1VbdDiaEKibY0IgGGPEMbCw/132","comment_is_top":false,"comment_ctime":1626831511,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1626831511","product_id":100035801,"comment_content":"为什么连接池对数据库关闭连接无感知，不是一方关闭后双方都关闭吗，比如tcp四次挥手？","like_count":0,"discussions":[{"author":{"id":1182690,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/e2/68daf201.jpg","nickname":"Alex","note":"","ucode":"6726EA3EFD2F79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":396263,"discussion_content":"客户端连接虽然关闭了，但是连接池中的连接对象还在，直接拿来用会抛错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632406671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1139128,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJh4fE4WryeIpjKCYB7TuWS2IEFV0paiaZt3hSh8jrPZRD8cvalPWndTv1VbdDiaEKibY0IgGGPEMbCw/132","nickname":"刘聪为","note":"","ucode":"8DFDCA7B37D04E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1182690,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/e2/68daf201.jpg","nickname":"Alex","note":"","ucode":"6726EA3EFD2F79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406293,"discussion_content":"意思是连接池就是线程池线程持有的连接。连接关闭了，但线程对象还在。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634736010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":396263,"ip_address":""},"score":406293,"extra":""}]}]},{"had_liked":false,"id":298016,"user_name":"芋头","can_delete":false,"product_type":"c1","uid":1227492,"ip_address":"","ucode":"A9C875548E4EE5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ba/e4/6df89add.jpg","comment_is_top":false,"comment_ctime":1623891774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623891774","product_id":100035801,"comment_content":"池化技术：核心思想，以时间换空间，减少频繁创建对象（数据库连接或者线程）带来的时间开销。<br>数据库连接池：<br>线程池：尽量不使用无界队列，监控任务队列的数量，合理配置核心线程数和最大线程数，核心线程最好预先创建","like_count":0},{"had_liked":false,"id":297422,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1623544877,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623544877","product_id":100035801,"comment_content":"老师端午安康，昨天线上出现了一个整体，在5分钟内，数据库出现卡顿，在该数据库上的所有表操作上的所有sql执行都出现慢操作，持续了5分钟左右，5分钟后又都恢复了正常。分析了半天，没有得出有效结论，请问老师可能是什么原因？谢谢老师","like_count":0},{"had_liked":false,"id":281706,"user_name":"Jayliud","can_delete":false,"product_type":"c1","uid":1048329,"ip_address":"","ucode":"0274FC2607B1BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/09/e0c39733.jpg","comment_is_top":false,"comment_ctime":1614853326,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1614853326","product_id":100035801,"comment_content":"对应业务线程池一直没理解怎么用。。。都是把jar放到Tomcat里，由Tomcat来负责处理业务请求，配置最多的也是Tomcat的线程池参数。<br><br>所以Tomcat的线程池里的线程算是主线程吗，负责请求接收，请求处理和请求返回，如果请求处理中的业务代码不启动其他线程或线程池，就是由主线程依次处理所有流程，肯定比较耗时。<br><br>实际场景遇到一个批量查询接口，一次需要查几百个用户数据。其中需要经过两个耗时处理步骤：1，从3个redis集群中获取数据得到三个不同业务集合（redis集群没法合并为一个由于各种原因）  2，遍历这几百个用户数据经过业务筛选规则(会用到上面的三个集合数据)，最终得到一个过滤后的用户集合。<br><br>这个场景中我想提高性能的话，是需要用单独用两个线程池吗？因为步骤1偏IO消耗，步骤2偏CPU计算消耗，然后步骤1调用线程池1，步骤2调用线程池2来提高整体响应？<br><br>最后线程池使用方法是写在接口业务代码中当请求来了实时启动服务于单个批量接口（这种情况下线程池肯定参数都设置很小），还是有地方提前配置好这样所有批量接口请求都能用（这种情况下线程池肯定参数都要设置很大）呢？<br>","like_count":0,"discussions":[{"author":{"id":2586341,"avatar":"","nickname":"石头","note":"","ucode":"EB3C9A277C7B0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369913,"discussion_content":"一次请求几百个这种请求如果是高并发的感觉很不合理。\ntomcat模式可以采用nio，有很多线程非阻塞处理。\n如果是第一步每次请求几十个到redis，其实非常快，吞吐没问题。和第一步比起来，第2步全内存操作，和第一步比起来耗时可以忽略不计。没必要为2单独准备线程池。\n另外java的线程成本太高，如果用过go就会发现，轻量级协程真是个好东西。简单易用成本低还快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619191583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254456,"user_name":"Suarge","can_delete":false,"product_type":"c1","uid":2065035,"ip_address":"","ucode":"89F0B968E472ED","user_header":"https://static001.geekbang.org/account/avatar/00/1f/82/8b/74996124.jpg","comment_is_top":false,"comment_ctime":1603117670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603117670","product_id":100035801,"comment_content":"老师，对于线程池我有个问题，就是怎样修改成让coreThreadCount满了后不放入队列，而是直接放到maxThreadCount啊，具体怎样的呢","like_count":0},{"had_liked":false,"id":235178,"user_name":"peterxuxu","can_delete":false,"product_type":"c1","uid":2055567,"ip_address":"","ucode":"B4CFA603480041","user_header":"","comment_is_top":false,"comment_ctime":1594914881,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594914881","product_id":100035801,"comment_content":"这个所谓的连接池最小10，最大20的连接数的经验从哪里来的？怎么算的有依据？另外min和max之间过大，且每次新增连接数(即step)不消耗资源？在突增流量发生的时候，连接池陡增连接的情况下，怎么保证短暂性阻塞？","like_count":0},{"had_liked":false,"id":233136,"user_name":"易轻尘","can_delete":false,"product_type":"c1","uid":1136684,"ip_address":"","ucode":"0D0CB9D6D45A70","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","comment_is_top":false,"comment_ctime":1594237040,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1594237040","product_id":100035801,"comment_content":"我能想到的还有内存池，预先分配大块内存，然后自己管理这块内存。感觉这个技术在数据库开发的时候用得很多。<br>另外池化这种思想在云计算领域就是核心思想了，几乎任何资源都是被池化了的。<br>坑点暂时想不起来（业务经验还比较少，没有遇到过什么大坑）","like_count":0},{"had_liked":false,"id":218207,"user_name":"念影","can_delete":false,"product_type":"c1","uid":1222742,"ip_address":"","ucode":"E8688E06B033C4","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/56/9e9594d5.jpg","comment_is_top":false,"comment_ctime":1589758009,"is_pvip":false,"replies":[{"id":"82728","content":"这个线程池本身没啥办法，如果队列中任务很重要可以考虑写入分布式队列","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591539041,"ip_address":"","comment_id":218207,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589758009","product_id":100035801,"comment_content":"老师，问一下如果，队列中有任务，但这时系统挂掉了或系统重启，这时队列中的任务都会丢失，这种情况会怎么解决？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495383,"discussion_content":"这个线程池本身没啥办法，如果队列中任务很重要可以考虑写入分布式队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591539041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207092,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1587005456,"is_pvip":false,"replies":[{"id":"78089","content":"执行执行在sql客户端可以看到的<br>当次任务由这个创建的线程处理呀","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587473186,"ip_address":"","comment_id":207092,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587005456","product_id":100035801,"comment_content":"老师，您好！<br><br>原文：那么单条 SQL 执行时间是多少呢？我们统计了一段时间的 SQL 执行时间。<br>问题：老师，您是怎么统计 SQL 执行时间的呀？<br><br>原文图示「JDK 线程池提交任务示意图」，第三步，队列满了，但是线程数未超过 maxThreadCount，这时创建线程。<br>问题：创建新线程后，当次任务咋处理呀，因为队列满了，无法放入队列，由新创建的线程直接执行么？<br><br>谢谢老师！","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492007,"discussion_content":"执行执行在sql客户端可以看到的\n当次任务由这个创建的线程处理呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587473186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207070,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1587002592,"is_pvip":false,"replies":[{"id":"78090","content":"啊哈？","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587473202,"ip_address":"","comment_id":207070,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587002592","product_id":100035801,"comment_content":"【一课一思】哈哈哈，线程池+threadlocal，没有 remove！","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492000,"discussion_content":"啊哈？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587473202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203132,"user_name":"零度","can_delete":false,"product_type":"c1","uid":1071119,"ip_address":"","ucode":"C121285CD9D999","user_header":"https://static001.geekbang.org/account/avatar/00/10/58/0f/8ed4be99.jpg","comment_is_top":false,"comment_ctime":1586142805,"is_pvip":false,"replies":[{"id":"78255","content":"文章的原意就是在处理IO密集型任务时，可以优先增加线程数，让任务中一些耗CPU的操作可以并行处理","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623583,"ip_address":"","comment_id":203132,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586142805","product_id":100035801,"comment_content":"唐老师，您好，没有完全理解线程池的那一段关于CPU密集系统和IO密集系统的区别，在IO密集型时有更多的CPU资源可以处理更多的线程，但这样瓶颈还在IO吧，虽然CPU接收了更多线程，但最终任务还是卡在IO处理上，相对于效率还是没有变高。是不是在处理IO密集型任务的同时空闲的CPU资源再用来处理CPU密集的任务才能提高效率呢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490777,"discussion_content":"文章的原意就是在处理IO密集型任务时，可以优先增加线程数，让任务中一些耗CPU的操作可以并行处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201589,"user_name":"小小程序猿","can_delete":false,"product_type":"c1","uid":1259854,"ip_address":"","ucode":"DCE81131B24285","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/4e/f937748b.jpg","comment_is_top":false,"comment_ctime":1585808717,"is_pvip":false,"replies":[{"id":"75822","content":"是为了cpu密集型的场景设计的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586087579,"ip_address":"","comment_id":201589,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585808717","product_id":100035801,"comment_content":"为什么jdk的线程池创建不是先判断max线程数量，而是先判断队列是否满了？为什么要这么设计","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490371,"discussion_content":"是为了cpu密集型的场景设计的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586087579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196472,"user_name":"Cactus","can_delete":false,"product_type":"c1","uid":1179453,"ip_address":"","ucode":"0A64D13A5B96A2","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/3d/b24e44aa.jpg","comment_is_top":false,"comment_ctime":1585284438,"is_pvip":false,"replies":[{"id":"75823","content":"不会的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586087598,"ip_address":"","comment_id":196472,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585284438","product_id":100035801,"comment_content":"老师我想请教数据库连接配置中validationQuery = &quot;SELECT 1&quot; ，testWhileIdle 的问题。<br>使用了testWhileIdle会不会导致连接一直不释放呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489309,"discussion_content":"不会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586087598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196443,"user_name":"随风🐿","can_delete":false,"product_type":"c1","uid":1345968,"ip_address":"","ucode":"2D7A06E445E14B","user_header":"https://static001.geekbang.org/account/avatar/00/14/89/b0/988921fe.jpg","comment_is_top":false,"comment_ctime":1585281916,"is_pvip":false,"replies":[{"id":"75854","content":"加油💪","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586089255,"ip_address":"","comment_id":196443,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585281916","product_id":100035801,"comment_content":"打卡学习，受益匪浅","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489302,"discussion_content":"加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586089255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194755,"user_name":"厕所看C","can_delete":false,"product_type":"c1","uid":1048888,"ip_address":"","ucode":"344DC9E80F0F9D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/38/554ece99.jpg","comment_is_top":false,"comment_ctime":1585103421,"is_pvip":false,"replies":[{"id":"75852","content":"谢谢，一起学习：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586089244,"ip_address":"","comment_id":194755,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585103421","product_id":100035801,"comment_content":"有深入讲解，也有横向扩展，又有思想方法论总结。也可以借鉴到其他知识的学习呢，赞","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488889,"discussion_content":"谢谢，一起学习：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586089244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189534,"user_name":"Jone_乔泓恺","can_delete":false,"product_type":"c1","uid":1407941,"ip_address":"","ucode":"158154301D5E40","user_header":"https://static001.geekbang.org/account/avatar/00/15/7b/c5/35f92dad.jpg","comment_is_top":false,"comment_ctime":1584526552,"is_pvip":false,"replies":[{"id":"73093","content":"一般是需要的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590510,"ip_address":"","comment_id":189534,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584526552","product_id":100035801,"comment_content":"请问老师：数据库连接池和线程池是否使用了预先初始化建立数据库连接或者线程的方式呢？这样的话当数据库连接数或者线程数小于最小连接数和coreThreadCount时就可以直接使用预先初始化的连接和线程了。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487724,"discussion_content":"一般是需要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189324,"user_name":"Eric86","can_delete":false,"product_type":"c1","uid":1104236,"ip_address":"","ucode":"E2EBF5B3A819CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/6c/7af7f67b.jpg","comment_is_top":false,"comment_ctime":1584500264,"is_pvip":false,"replies":[{"id":"73095","content":"这个要看官方的benchmark结果，而且在实际应用中对于不同类型的业务，这个值也是不同的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590555,"ip_address":"","comment_id":189324,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584500264","product_id":100035801,"comment_content":"老师，并发场景下DB可以支持多少个连接这个看哪个指标呢，比如单台Mysql高并发下能支持多个连接，谢谢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487670,"discussion_content":"这个要看官方的benchmark结果，而且在实际应用中对于不同类型的业务，这个值也是不同的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183050,"user_name":"范闲","can_delete":false,"product_type":"c1","uid":1073125,"ip_address":"","ucode":"F21FD7DF6BA53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/e5/54325854.jpg","comment_is_top":false,"comment_ctime":1582942408,"is_pvip":false,"replies":[{"id":"71092","content":"线程池中的线程不会被杀死，会放回到池子中","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583114878,"ip_address":"","comment_id":183050,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582942408","product_id":100035801,"comment_content":"Java里面的一个线程运行完任务后不会被杀死么？如果被杀死了，岂不是线程数量一直在减少。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485547,"discussion_content":"线程池中的线程不会被杀死，会放回到池子中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583114878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173505,"user_name":"张珂","can_delete":false,"product_type":"c1","uid":1249512,"ip_address":"","ucode":"E0AFA940BEAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/e8/172b5915.jpg","comment_is_top":false,"comment_ctime":1579581231,"is_pvip":false,"replies":[{"id":"67358","content":"是的，内存池化也是比较常见的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579694801,"ip_address":"","comment_id":173505,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579581231","product_id":100035801,"comment_content":"老师好，相似的还有在以高效操作内存的场景下，内存资源管理也使用“池化”思想实现的，比如memcache或其他内存组件，使用“内存池”，内存申请到后一般不再还给系统，自己管理起来，以便于后续复用，省去了反复申请释放内存的时间。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482088,"discussion_content":"是的，内存池化也是比较常见的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579694801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171624,"user_name":"悟空WuKong","can_delete":false,"product_type":"c1","uid":1139455,"ip_address":"","ucode":"49AFD2B048C1BA","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/ff/f71034e9.jpg","comment_is_top":false,"comment_ctime":1578980836,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578980836","product_id":100035801,"comment_content":"http连接池","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364099,"discussion_content":"也是连接池","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617364289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166500,"user_name":"耀","can_delete":false,"product_type":"c1","uid":1634462,"ip_address":"","ucode":"3692BEC242A399","user_header":"https://static001.geekbang.org/account/avatar/00/18/f0/9e/cf6570f7.jpg","comment_is_top":false,"comment_ctime":1577459619,"is_pvip":false,"replies":[{"id":"63464","content":"是的 这个在高并发场景下是标配","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577492396,"ip_address":"","comment_id":166500,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577459619","product_id":100035801,"comment_content":"连接池接触的比较少，只是用过一次，就如同作者讲的，设置了最小连接和最大连接，只是那个链接的队列大小没有做限制，目前没有遇到流量很大的场景，若是遇到了很可能会有作者相同的问题。这便是学习专栏最直接的价值，能让我们避开陷阱，或者发现没有意识到的bug。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479519,"discussion_content":"是的 这个在高并发场景下是标配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577492396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165897,"user_name":"xqs42b","can_delete":false,"product_type":"c1","uid":1590102,"ip_address":"","ucode":"E1B85D10E44672","user_header":"https://static001.geekbang.org/account/avatar/00/18/43/56/3572a20c.jpg","comment_is_top":false,"comment_ctime":1577342130,"is_pvip":false,"replies":[{"id":"63258","content":"额 为啥要传递连接对象呢","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577348332,"ip_address":"","comment_id":165897,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1577342130","product_id":100035801,"comment_content":"请问一下老师，我该如何传递mysql连接对象？我的思路是开启一个线程或者进程负责添加连接对象去列表中，然后在http请求中接收连接对象。我用的是python，但是连接对象不能序列化，请问老师一个思路，我用的是python？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479310,"discussion_content":"额 为啥要传递连接对象呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577348332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1590102,"avatar":"https://static001.geekbang.org/account/avatar/00/18/43/56/3572a20c.jpg","nickname":"xqs42b","note":"","ucode":"E1B85D10E44672","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106331,"discussion_content":"老师，我水平有限，能想到的就是把mysq连接对象放到一个容器中，需要用的时候在取出来。那老师，能提示一下思路吗，不保存连接对象，万分感谢……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577531803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1221991,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/67/bf286335.jpg","nickname":"AllenGFLiu","note":"","ucode":"90FA8A619A2629","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590102,"avatar":"https://static001.geekbang.org/account/avatar/00/18/43/56/3572a20c.jpg","nickname":"xqs42b","note":"","ucode":"E1B85D10E44672","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162595,"discussion_content":"你可以看看这个 package，这个包就是提供老师讲的数据库连接池功能。\nhttps://pypi.org/project/PySQLPool/0.3.8/#description\n我也是搜的，没用过。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580999067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":106331,"ip_address":""},"score":162595,"extra":""}]}]},{"had_liked":false,"id":165172,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1577175246,"is_pvip":false,"replies":[{"id":"63042","content":"用语言做例子会直观一些","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577239427,"ip_address":"","comment_id":165172,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577175246","product_id":100035801,"comment_content":"最好别用具体某种语言做例子","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479058,"discussion_content":"用语言做例子会直观一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577239427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157449,"user_name":"大鸡腿🍗","can_delete":false,"product_type":"c1","uid":1413499,"ip_address":"","ucode":"38AF8AE00F6166","user_header":"https://static001.geekbang.org/account/avatar/00/15/91/7b/2dd4d0c1.jpg","comment_is_top":false,"comment_ctime":1575166339,"is_pvip":false,"replies":[{"id":"60624","content":"1. 需要监控队列里面堆积的任务数<br>2. 这个要看线程池的使用方式","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575367749,"ip_address":"","comment_id":157449,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575166339","product_id":100035801,"comment_content":"唐老师，你说的监控队列的个数，他的作用是？根据监控调整队列个数，还是说我加任务的时候，过多需要把抛弃的任务记录下来。<br>其次，有点不解的地方：有一次，我用线程池创建线程处理io密集任务，后面改成CompletableFuture更加快，这是为什么？CompletableFuture也是使用了线程池","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476426,"discussion_content":"1. 需要监控队列里面堆积的任务数\n2. 这个要看线程池的使用方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575367749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156074,"user_name":"被过去推开","can_delete":false,"product_type":"c1","uid":1276690,"ip_address":"","ucode":"8B4F34FE93FD5B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","comment_is_top":false,"comment_ctime":1574817095,"is_pvip":false,"replies":[{"id":"60239","content":"线程池的组件中可以获取堆积量的，ThreadPoolExecutor.getQueue().size()，可以启动一个线程定期打印到日志中","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575015660,"ip_address":"","comment_id":156074,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574817095","product_id":100035801,"comment_content":"线程池任务堆积量在提交任务时打印日志来监控吗？或者在其他事件触发后查看队列任务堆积量？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475977,"discussion_content":"线程池的组件中可以获取堆积量的，ThreadPoolExecutor.getQueue().size()，可以启动一个线程定期打印到日志中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575015660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153049,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1574148072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574148072","product_id":100035801,"comment_content":"老师，我看Dubbo默认线程池实现是使用核心线程数=最大线程数=200个，还有默认使用同步队列SynchronousQueue。这样的设计有什么好处？一般这样的线程数同时能处理多少的并发请求？","like_count":0},{"had_liked":false,"id":150589,"user_name":"港岛妹夫","can_delete":false,"product_type":"c1","uid":1097416,"ip_address":"","ucode":"9F6AAA29B60D8F","user_header":"https://static001.geekbang.org/account/avatar/00/10/be/c8/7c5f324f.jpg","comment_is_top":false,"comment_ctime":1573564267,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573564267","product_id":100035801,"comment_content":"给合作公司需要同步一些数据, 每天定时同步. 不能走文件,只能HTTP.<br>起了一个线程池, 最大最小都是5. 用的无界队列. 一直都没有问题. <br>去年有一天, 这个线程池突然不工作了. 同事跟我反馈, 任务不处理, 系统也没有崩. 只有这个线程池不工作了. 没找到问题, 重启好了. 至今不知道为什么.  ","like_count":0,"discussions":[{"author":{"id":1196234,"avatar":"https://static001.geekbang.org/account/avatar/00/12/40/ca/1313a90b.jpg","nickname":"退役的球童","note":"","ucode":"CD5157830D9606","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63894,"discussion_content":"以后再遇到同样的问题可以dump线程栈出来看看啥问题.根据你的描述，我个人觉得有可能是死锁或者产生了饥饿方面的问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574919410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149913,"user_name":"逍遥","can_delete":false,"product_type":"c1","uid":1070213,"ip_address":"","ucode":"95C583EF780159","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/85/081804f7.jpg","comment_is_top":false,"comment_ctime":1573432141,"is_pvip":false,"replies":[{"id":"57661","content":"默认的ThreadPoolExecutor是JDK原生的线程池","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573432791,"ip_address":"","comment_id":149913,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1573432141","product_id":100035801,"comment_content":"老师请问一下，那我平时代码里面创建的线程池是属于jdk的原生线程池，还是tomcat的线程池呢，第一次知道两者的区别，为什么我在一些并发书籍里面看到的都是老师你说的类似tomcat线程池的执行过程😂","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474008,"discussion_content":"默认的ThreadPoolExecutor是JDK原生的线程池","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573432791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1070213,"avatar":"https://static001.geekbang.org/account/avatar/00/10/54/85/081804f7.jpg","nickname":"逍遥","note":"","ucode":"95C583EF780159","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47877,"discussion_content":"另外我们常用的线程池就是fixedThreadPool，也是无界队列，如果不推荐使用，换什么好呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573434285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149756,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1573367886,"is_pvip":false,"replies":[{"id":"57652","content":"要用代码实现，比如线程池可以获取队列的堆积数量","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573431252,"ip_address":"","comment_id":149756,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573367886","product_id":100035801,"comment_content":"请问下如何监控连接池的使用情况，还有有界对列使用情况？自己用代码实现还是有现成的工具？？？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473967,"discussion_content":"要用代码实现，比如线程池可以获取队列的堆积数量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573431252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149391,"user_name":"lanco","can_delete":false,"product_type":"c1","uid":1188352,"ip_address":"","ucode":"C24A0A8716C78C","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/00/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1573208004,"is_pvip":true,"replies":[{"id":"57666","content":"这样是对DB的查询量增加了一倍，高并发下可能性能会有影响","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573432853,"ip_address":"","comment_id":149391,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573208004","product_id":100035801,"comment_content":"我认为中的检测连接池中的连接活性还是每次使用前去select 1会比较好，虽然依旧不会是原子性操作，但是相比于定期让线程去检测，检测完其实说不准因为其他原因挂了，我们去使用就gg了","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473847,"discussion_content":"这样是对DB的查询量增加了一倍，高并发下可能性能会有影响","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573432853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146045,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1572423646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572423646","product_id":100035801,"comment_content":"所以老师，核心线程数和最大线程数比例初始怎么设置才好","like_count":0},{"had_liked":false,"id":145676,"user_name":"chp","can_delete":false,"product_type":"c1","uid":1112415,"ip_address":"","ucode":"F0A2442230CD45","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/5f/b0a125a9.jpg","comment_is_top":false,"comment_ctime":1572341580,"is_pvip":false,"replies":[{"id":"56284","content":"要看方法内部的执行逻辑，如果方法内部的逻辑有可以并行的操作，就可以用线程池来解决","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572392897,"ip_address":"","comment_id":145676,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572341580","product_id":100035801,"comment_content":"老师，方法内部创建的局部线程池，您觉得合不合适？方法可能会被频繁调用","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472523,"discussion_content":"要看方法内部的执行逻辑，如果方法内部的逻辑有可以并行的操作，就可以用线程池来解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572392897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145529,"user_name":"浩瀚有边","can_delete":false,"product_type":"c1","uid":1087384,"ip_address":"","ucode":"B4540E94EAFFE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/98/5ef15aa0.jpg","comment_is_top":false,"comment_ctime":1572311281,"is_pvip":false,"replies":[{"id":"56180","content":"嗯那 但是需要了解两者的区别，出问题的时候可以有优化的方法","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572319902,"ip_address":"","comment_id":145529,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572311281","product_id":100035801,"comment_content":"老师好，文中讲到tomcat自定义了线程池，我的理解是原生线程池也可以应对IO密集型的场景，把线程数调大，任务等待队列调小。当然，tomcat作为一个使用广泛的基础软件，自定义是必要的，但如果是一般的业务场景，使用原生线程池也不是不可","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472446,"discussion_content":"嗯那 但是需要了解两者的区别，出问题的时候可以有优化的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572319902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142666,"user_name":"肖大保健","can_delete":false,"product_type":"c1","uid":1306868,"ip_address":"","ucode":"E3209A00C1B954","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","comment_is_top":false,"comment_ctime":1571452537,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571452537","product_id":100035801,"comment_content":"追问一下TPS和QPS ，可否结合线程数量，关于每秒查询数，执行事务数讲一下，单线程和多线程的情况是怎么计算","like_count":0},{"had_liked":false,"id":142224,"user_name":"肖大保健","can_delete":false,"product_type":"c1","uid":1306868,"ip_address":"","ucode":"E3209A00C1B954","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","comment_is_top":false,"comment_ctime":1571314575,"is_pvip":false,"replies":[{"id":"54896","content":"1. gc造成服务不可用<br>2. 任务堆积造成消费延迟","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571359990,"ip_address":"","comment_id":142224,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571314575","product_id":100035801,"comment_content":"大量的任务堆积会占用大量的内存空间，一旦内存空间被占满就会频繁GC，造成服务不可用，这里指的是会导致内存溢出，服务搞挂嘛，另外频繁GC，对服务性能方面还有那些影响，能否讲下！<br>","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471035,"discussion_content":"1. gc造成服务不可用\n2. 任务堆积造成消费延迟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571359990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306868,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","nickname":"肖大保健","note":"","ucode":"E3209A00C1B954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36470,"discussion_content":"我查到每次GC，根据垃圾回收器的类型，分为串行和并行，在执行期间，其他线程会暂停，业务线程会挂起，频繁GC，那么业务响应应该会延迟，甚至超时，性能会受到影响","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571380599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142031,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1571281144,"is_pvip":false,"replies":[{"id":"54922","content":"创建连接比较耗时，需要提前创建好","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571362023,"ip_address":"","comment_id":142031,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571281144","product_id":100035801,"comment_content":"老师，连接池用不着最小连接数吧，连接池初始为空就可以吧。当需要连接时再创建并使用，使用完关闭时不真正关闭，而是放入连接池。下次取出使用时，先检查是否过期，如果过期，则关闭并创建新连接。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470960,"discussion_content":"创建连接比较耗时，需要提前创建好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571362023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141851,"user_name":"overland","can_delete":false,"product_type":"c1","uid":1208835,"ip_address":"","ucode":"609A463519E5F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/03/da1fcc81.jpg","comment_is_top":false,"comment_ctime":1571236876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571236876","product_id":100035801,"comment_content":"我在写网络请求的时候也用到了池，nio的以及httpclient的","like_count":0},{"had_liked":false,"id":141761,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1571219661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571219661","product_id":100035801,"comment_content":"个人把池化技术，理解为现在的共享单车。<br><br>每个使用者，自己购置一辆单车成本略高。所以，有公司提供了共享单车。<br>共享单车只有一个停放的站点，就是这个池子。<br><br>每个要骑车的人，就从这个站点（池）里找辆单车骑走，用完了再还回来。<br>如果站点（池）里没有车子可以用了，站点会给你一个建议等待时间，等超过这个等待时间的时候，就不等了，直接离开。","like_count":0},{"had_liked":false,"id":140474,"user_name":"赵亮","can_delete":false,"product_type":"c1","uid":1072864,"ip_address":"","ucode":"053E4C61B77C23","user_header":"https://static001.geekbang.org/account/avatar/00/10/5e/e0/e45b7839.jpg","comment_is_top":false,"comment_ctime":1570954459,"is_pvip":false,"replies":[{"id":"54295","content":"连接是共享的，只是同一时间只能给一个线程使用<br>连接空闲的判断是由连接池做的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570969973,"ip_address":"","comment_id":140474,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570954459","product_id":100035801,"comment_content":"请问同一个连接为什么不能共享使用？怎样判断连接是否空闲？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470407,"discussion_content":"连接是共享的，只是同一时间只能给一个线程使用\n连接空闲的判断是由连接池做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570969973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5e/e0/e45b7839.jpg","nickname":"赵亮","note":"","ucode":"053E4C61B77C23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31963,"discussion_content":"比较好奇连接池如何判断连接空闲的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570973322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140196,"user_name":"Hinimix","can_delete":false,"product_type":"c1","uid":1316937,"ip_address":"","ucode":"7994136C93BD89","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/49/b1d864e5.jpg","comment_is_top":false,"comment_ctime":1570847526,"is_pvip":false,"replies":[{"id":"54205","content":"不算吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570850477,"ip_address":"","comment_id":140196,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570847526","product_id":100035801,"comment_content":"老师，websocket算池化吗","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470294,"discussion_content":"不算吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570850477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140072,"user_name":"ub8","can_delete":false,"product_type":"c1","uid":1481811,"ip_address":"","ucode":"0D937C3EAEB781","user_header":"https://static001.geekbang.org/account/avatar/00/16/9c/53/ade0afb0.jpg","comment_is_top":false,"comment_ctime":1570802233,"is_pvip":false,"replies":[{"id":"54168","content":"主要是对于共有数据的维护，要注意线程安全","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570837051,"ip_address":"","comment_id":140072,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570802233","product_id":100035801,"comment_content":"老师，在多线程使用中有哪些注意事项？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470232,"discussion_content":"主要是对于共有数据的维护，要注意线程安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570837051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139359,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1003104,"ip_address":"","ucode":"E8F0F3B000020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","comment_is_top":false,"comment_ctime":1570618685,"is_pvip":false,"replies":[{"id":"53782","content":"jdk里面可以自定义丢弃策略的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665394,"ip_address":"","comment_id":139359,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570618685","product_id":100035801,"comment_content":"老师您好，如果线程池设置的有界队列容量很小，线程数超过了最大线程数之后，线程被丢弃，这样影响业务，应该怎么解决呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469906,"discussion_content":"jdk里面可以自定义丢弃策略的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004192,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/a0/d308434e.jpg","nickname":"StarKing","note":"","ucode":"EB825CFA70AC1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27126,"discussion_content":"提前要有个预期和最高系统的阈值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570631404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139009,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1570526143,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570526143","product_id":100035801,"comment_content":"目前好多公司不提倡直接使用 JDK 的自带线程池，也是考虑无界队列的原因，基于此 Tomcat 重写了线程池，可以参考一下：）","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364103,"discussion_content":"根据阿里规范，建议使用ThreadPoolExecutor自定义参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617364836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138990,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1570523739,"is_pvip":false,"replies":[{"id":"53631","content":"啊哈，特意google了一下~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570582711,"ip_address":"","comment_id":138990,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570523739","product_id":100035801,"comment_content":"看到第七篇我猛然发现，老师对马卡龙情有独钟：）","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469730,"discussion_content":"啊哈，特意google了一下~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138919,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1570505824,"is_pvip":false,"replies":[{"id":"53640","content":"额  MySQL可能大家用的更普遍吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570582978,"ip_address":"","comment_id":138919,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570505824","product_id":100035801,"comment_content":"MySQL 有个参数是“wait_timeout”？提一个建议:我发现老师每次举例都是以MySQL为例，能举例其他数据库吗？比如Sql Server？谢谢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469700,"discussion_content":"额  MySQL可能大家用的更普遍吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145404,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","nickname":"堵车","note":"","ucode":"7BC1E50A4F8D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25994,"discussion_content":"除了mysql，其他的都是邪魔外道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570583717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138873,"user_name":"包子","can_delete":false,"product_type":"c1","uid":1089345,"ip_address":"","ucode":"6CC4EBB8CD3924","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/41/82306dfe.jpg","comment_is_top":false,"comment_ctime":1570496777,"is_pvip":false,"replies":[{"id":"53488","content":"看你的数据库的配置，benchmark的结果是4核8g机器会有500的tps和10000qps，实际场景下会小很多，读请求大概2000左右，写请求几百","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570499955,"ip_address":"","comment_id":138873,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570496777","product_id":100035801,"comment_content":"老师，数据库连接池链接数设置在10～30。在该文中假设数据库sql执行在1ms。这样该文的系统，可以支持多大的并发？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469680,"discussion_content":"看你的数据库的配置，benchmark的结果是4核8g机器会有500的tps和10000qps，实际场景下会小很多，读请求大概2000左右，写请求几百","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570499955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138361,"user_name":"周鸣","can_delete":false,"product_type":"c1","uid":1080563,"ip_address":"","ucode":"0796B633876E92","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/f3/d5cc779e.jpg","comment_is_top":false,"comment_ctime":1570178821,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570178821","product_id":100035801,"comment_content":"请教老师，为什么是先判断最小连接数，而不是先判断空闲，如果最小连接数是10，目前连接数是9但是其中有一个是空闲的为什么不先用这个空闲的而是先去创建一个。这样是不是不太合理。","like_count":0,"discussions":[{"author":{"id":1004192,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/a0/d308434e.jpg","nickname":"StarKing","note":"","ucode":"EB825CFA70AC1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27136,"discussion_content":"按大小原则来看，小的满了像大的看。大的满了小的肯定满。\n另外这里面不讲究严格区分空闲。就看数量。简单粗暴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570631726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138140,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1570062147,"is_pvip":false,"replies":[{"id":"53182","content":"：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570104033,"ip_address":"","comment_id":138140,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570062147","product_id":100035801,"comment_content":"另外，jdk线程池为什么设计得如此奇怪，这问题以前也求证过，都没有信服的答案，今天看到这个解释，比较合理，而且有种灯火阑珊处的感觉，特意感谢一下","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469404,"discussion_content":"：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570104033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138048,"user_name":"learn more","can_delete":false,"product_type":"c1","uid":1128702,"ip_address":"","ucode":"0EF628B2E0F95E","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/fe/00ddeb81.jpg","comment_is_top":false,"comment_ctime":1569998164,"is_pvip":false,"replies":[{"id":"53117","content":"就是用mac原生的keynote","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570060868,"ip_address":"","comment_id":138048,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569998164","product_id":100035801,"comment_content":"请问老师的示意图是用什么软件绘制的，感觉简洁且清晰。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469364,"discussion_content":"就是用mac原生的keynote","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570060868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138035,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1569988160,"is_pvip":false,"replies":[{"id":"53115","content":"1. 在后面的课程中会有一讲专门讲到监控<br>2. 定期检查没有那么大的压力，其实还好，你想就是每隔几分钟向数据库发几十个请求，相比于业务请求来说很少了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570060769,"ip_address":"","comment_id":138035,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569988160","product_id":100035801,"comment_content":"老师好，我有两个问题：<br><br>1.能讲讲怎样分析程序的日志发现数据库慢吗？怎样监控数据库和线程池的一些指标呢？或者有没有关于全面监控并优化系统的课程呢？<br>2.怎样启动一个线程来定期检测连接池中的连接是否可用？是否会增加数据库的负担？<br><br>谢谢。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469358,"discussion_content":"1. 在后面的课程中会有一讲专门讲到监控\n2. 定期检查没有那么大的压力，其实还好，你想就是每隔几分钟向数据库发几十个请求，相比于业务请求来说很少了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570060769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137993,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1569971918,"is_pvip":false,"replies":[{"id":"53107","content":"php不太了解，不过应该是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570060286,"ip_address":"","comment_id":137993,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569971918","product_id":100035801,"comment_content":"老师，像php这种需要，如果需要使用线程池，是不是得借助第三方<br>","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469339,"discussion_content":"php不太了解，不过应该是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570060286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179533,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/8d/8601f035.jpg","nickname":"淞淞同学","note":"","ucode":"529A326B898008","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41362,"discussion_content":"启动一个线程来定期检测连接池中的连接是否可用，比如使用连接发送“select 1”的命令给数据库看是否会抛出异常，如果抛出异常则将这个连接从连接池中移除，并且尝试关闭。\n您好老师，想请教下，这个轮询的机制，应该也会有时间差。比如还没有轮询到就ip切换了，马上被使用了；又或者轮询检测完之后刚好过期了，刚好这个连接又被使用了，那么这个连接被使用后也是会有异常的。会有我说的这种问题吗？如何能避免吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572409223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}