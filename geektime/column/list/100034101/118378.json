{"id":118378,"title":"02 | 正则文法和有限自动机：纯手工打造词法分析器","content":"<p>上一讲，我提到词法分析的工作是将一个长长的字符串识别出一个个的单词，这一个个单词就是Token。而且词法分析的工作是一边读取一边识别字符串的，不是把字符串都读到内存再识别。你在听一位朋友讲话的时候，其实也是同样的过程，一边听，一边提取信息。</p><p>那么问题来了，字符串是一连串的字符形成的，怎么把它断开成一个个的Token呢？分割的依据是什么呢？本节课，我会通过讲解正则表达式（Regular Expression）和有限自动机的知识带你解决这个问题。</p><p>其实，我们手工打造词法分析器的过程，就是写出正则表达式，画出有限自动机的图形，然后根据图形直观地写出解析代码的过程。而我今天带你写的词法分析器，能够分析以下3个程序语句：</p><ul>\n<li>age &gt;= 45</li>\n<li>int age = 40</li>\n<li>2+3*5</li>\n</ul><p>它们分别是关系表达式、变量声明和初始化语句，以及算术表达式。</p><p>接下来，我们先来解析一下“age &gt;= 45”这个关系表达式，这样你就能理解有限自动机的概念，知道它是做词法解析的核心机制了。</p><h2>解析 age &gt;= 45</h2><p>在“<a href=\"https://time.geekbang.org/column/article/118132\">01 | 理解代码：编译器的前端技术</a>”里，我举了一个词法分析的例子，并且提出词法分析要用到有限自动机。当时，我画了这样一个示意图：</p><p><img src=\"https://static001.geekbang.org/resource/image/6d/7e/6d78396e6426d0ad5c5230203d17da7e.jpg?wh=1142*325\" alt=\"\"></p><p>我们来描述一下标识符、比较操作符和数字字面量这三种Token的词法规则。</p><!-- [[[read_end]]] --><ul>\n<li><strong>标识符：</strong>第一个字符必须是字母，后面的字符可以是字母或数字。</li>\n<li><strong>比较操作符：</strong>&gt;和&gt;=（其他比较操作符暂时忽略）。</li>\n<li><strong>数字字面量：</strong>全部由数字构成（像带小数点的浮点数，暂时不管它）。</li>\n</ul><p>我们就是依据这样的规则，来构造有限自动机的。这样，词法分析程序在遇到age、&gt;=和45时，会分别识别成标识符、比较操作符和数字字面量。不过上面的图只是一个简化的示意图，一个严格意义上的有限自动机是下面这种画法：</p><p><img src=\"https://static001.geekbang.org/resource/image/15/35/15da400d09ede2ce6ac60fa6d5342835.jpg?wh=1142*726\" alt=\"\"></p><p>我来解释一下上图的5种状态。</p><p><strong>1.初始状态：</strong>刚开始启动词法分析的时候，程序所处的状态。</p><p><strong>2.标识符状态：</strong>在初始状态时，当第一个字符是字母的时候，迁移到状态2。当后续字符是字母和数字时，保留在状态2。如果不是，就离开状态2，写下该Token，回到初始状态。</p><p><strong>3.大于操作符（GT）：</strong>在初始状态时，当第一个字符是&gt;时，进入这个状态。它是比较操作符的一种情况。</p><p><strong>4.大于等于操作符（GE）：</strong>如果状态3的下一个字符是=，就进入状态4，变成&gt;=。它也是比较操作符的一种情况。</p><p><strong>5.数字字面量：</strong>在初始状态时，下一个字符是数字，进入这个状态。如果后续仍是数字，就保持在状态5。</p><p>这里我想补充一下，你能看到上图中的圆圈有单线的也有双线的。双线的意思是这个状态已经是一个合法的Token了，单线的意思是这个状态还是临时状态。</p><p>按照这5种状态迁移过程，你很容易编成程序（我用Java写了代码示例，你可以用自己熟悉的语言编写）。我们先从状态1开始，在遇到不同的字符时，分别进入2、3、5三个状态：</p><pre><code>DfaState newState = DfaState.Initial;\nif (isAlpha(ch)) {              //第一个字符是字母\n    newState = DfaState.Id; //进入Id状态\n    token.type = TokenType.Identifier;\n    tokenText.append(ch);\n} else if (isDigit(ch)) {       //第一个字符是数字\n    newState = DfaState.IntLiteral;\n    token.type = TokenType.IntLiteral;\n    tokenText.append(ch);\n} else if (ch == '&gt;') {         //第一个字符是&gt;\n    newState = DfaState.GT;\n    token.type = TokenType.GT;\n    tokenText.append(ch);\n}\n</code></pre><p>上面的代码中，我用Java中的枚举（enum）类型定义了一些枚举值来代表不同的状态，让代码更容易读。</p><p>其中Token是自定义的一个数据结构，它有两个主要的属性：一个是“type”，就是Token的类型，它用的也是一个枚举类型的值；一个是“text”，也就是这个Token的文本值。</p><p>我们接着处理进入2、3、5三个状态之后的状态迁移过程：</p><pre><code>case Initial:\n    state = initToken(ch);          //重新确定后续状态\n    break;\ncase Id:\n    if (isAlpha(ch) || isDigit(ch)) {\n        tokenText.append(ch);       //保持标识符状态\n    } else {\n        state = initToken(ch); //退出标识符状态，并保存Token\n    }\n    break;\ncase GT:\n    if (ch == '=') {\n        token.type = TokenType.GE;  //转换成GE\n        state = DfaState.GE;\n        tokenText.append(ch);\n    } else {\n        state = initToken(ch);      //退出GT状态，并保存Token\n    }\n    break;\ncase GE:\n    state = initToken(ch);        //退出当前状态，并保存Token\n    break;\ncase IntLiteral:\n    if (isDigit(ch)) {\n        tokenText.append(ch);    //继续保持在数字字面量状态\n    } else {\n        state = initToken(ch);    //退出当前状态，并保存Token\n    }\n    break;\n</code></pre><p>运行这个示例程序，你就会成功地解析类似“age &gt;= 45”这样的程序语句。不过，你可以先根据我的讲解自己实现一下，然后再去参考这个示例程序。</p><p>示例程序的输出如下，其中第一列是Token的类型，第二列是Token的文本值：</p><pre><code>Identifier   age\nGE           &gt;=  \nIntLiteral   45  \n</code></pre><p>上面的例子虽然简单，但其实已经讲清楚了词法原理，<strong>就是依据构造好的有限自动机，在不同的状态中迁移，从而解析出Token来。</strong>你只要再扩展这个有限自动机，增加里面的状态和迁移路线，就可以逐步实现一个完整的词法分析器了。</p><h2>初识正则表达式</h2><p>但是，这里存在一个问题。我们在描述词法规则时用了自然语言。比如，在描述标识符的规则时，我们是这样表达的：</p><blockquote>\n<p>第一个字符必须是字母，后面的字符可以是字母或数字。</p>\n</blockquote><p>这样描述规则并不精确，我们需要换一种严谨的表达方式，这种方式就是<strong>正则表达式。</strong></p><p>上面的例子涉及了4种Token，这4种Token用正则表达式表达，是下面的样子：</p><pre><code>Id :        [a-zA-Z_] ([a-zA-Z_] | [0-9])*\nIntLiteral: [0-9]+\nGT :        '&gt;'\nGE :        '&gt;='\n</code></pre><p>我先来解释一下这几个规则中用到的一些符号：</p><p><img src=\"https://static001.geekbang.org/resource/image/f6/17/f6601b74204140836bd409137924be17.jpg?wh=1142*403\" alt=\"\"></p><p>需要注意的是，不同语言的标识符、整型字面量的规则可能是不同的。比如，有的语言可以允许用Unicode作为标识符，也就是说变量名称可以是中文的。还有的语言规定，十进制数字字面量的第一位不能是0。这时候正则表达式会有不同的写法，对应的有限自动机自然也不同。而且，不同工具的正则表达式写法会略有不同，但大致是差不多的。</p><p>我在本节课讲正则表达式，主要是为了让词法规则更为严谨，当然了，也是为后面的内容做铺垫。在后面的课程中，我会带你用工具生成词法分析器，而工具读取的就是用正则表达式描述的词法规则。到时候，我们会把所有常用的词法都用正则表达式描述出来。</p><p>不过在这之前，如果你想主动了解更完整的正则表达式规则，完全可以参考自己所采用的正则表达式工具的文档。比如，Java的正则式表达式工具在java.util.regex包中，在其Javadoc中有详细的规则说明。</p><h2>解析int age = 40，处理标识符和关键字规则的冲突</h2><p>说完正则表达式，我们接着去处理其他词法，比如解析“int age = 40”这个语句，以这个语句为例研究一下词法分析中会遇到的问题：多个规则之间的冲突。</p><p>如果我们把这个语句涉及的词法规则用正则表达式写出来，是下面这个样子：</p><pre><code>Int:        'int'\nId :        [a-zA-Z_] ([a-zA-Z_] | [0-9])*\nAssignment : '='\n</code></pre><p>这时候，你可能会发现这样一个问题：int这个关键字，与标识符很相似，都是以字母开头，后面跟着其他字母。</p><p>换句话说，int这个字符串，既符合标识符的规则，又符合int这个关键字的规则，这两个规则发生了重叠。这样就起冲突了，我们扫描字符串的时候，到底该用哪个规则呢？</p><p>当然，我们心里知道，int这个关键字的规则，比标识符的规则优先级高。普通的标识符是不允许跟这些关键字重名的。</p><p><strong>在这里，我们来回顾一下：什么是关键字？</strong></p><p>关键字是语言设计中作为语法要素的词汇，例如表示数据类型的int、char，表示程序结构的while、if，表述特殊数据取值的null、NAN等。</p><p>除了关键字，还有一些词汇叫保留字。保留字在当前的语言设计中还没用到，但是保留下来，因为将来会用到。我们命名自己的变量、类名称，不可以用到跟关键字和保留字相同的字符串。<strong>那么我们在词法分析器中，如何把关键字和保留字跟标识符区分开呢？</strong></p><p>以“int age = 40”为例，我们把有限自动机修改成下面的样子，借此解决关键字和标识符的冲突。</p><p><img src=\"https://static001.geekbang.org/resource/image/11/3c/11cf7add8fb07db41f4eb067db4ac13c.jpg?wh=1142*678\" alt=\"\"></p><p>这个思路其实很简单。在识别普通的标识符之前，你先看看它是关键字还是保留字就可以了。具体做法是：</p><blockquote>\n<p>当第一个字符是i的时候，我们让它进入一个特殊的状态。接下来，如果它遇到n和t，就进入状态4。但这还没有结束，如果后续的字符还有其他的字母和数字，它又变成了普通的标识符。比如，我们可以声明一个intA（int和A是连着的）这样的变量，而不会跟int关键字冲突。</p>\n</blockquote><p>相应的代码也修改一下，文稿里的第一段代码要改成：</p><pre><code>if (isAlpha(ch)) {\n    if (ch == 'i') {\n        newState = DfaState.Id_int1;  //对字符i特殊处理\n    } else {\n        newState = DfaState.Id;\n    }\n    ...  //后续代码\n}\n</code></pre><p>第二段代码要增加下面的语句：</p><pre><code>case Id_int1:\n    if (ch == 'n') {\n        state = DfaState.Id_int2;\n        tokenText.append(ch);\n    }\n    else if (isDigit(ch) || isAlpha(ch)){\n        state = DfaState.Id;    //切换回Id状态\n        tokenText.append(ch);\n    }\n    else {\n        state = initToken(ch);\n    }\n    break;\ncase Id_int2:\n    if (ch == 't') {\n        state = DfaState.Id_int3;\n        tokenText.append(ch);\n    }\n    else if (isDigit(ch) || isAlpha(ch)){\n        state = DfaState.Id;    //切换回Id状态\n        tokenText.append(ch);\n    }\n    else {\n        state = initToken(ch);\n    }\n    break;\ncase Id_int3:\n    if (isBlank(ch)) {\n        token.type = TokenType.Int;\n        state = initToken(ch);\n    }\n    else{\n        state = DfaState.Id;    //切换回Id状态\n        tokenText.append(ch);\n    }\n    break;\n</code></pre><p>接着，我们运行示例代码，就会输出下面的信息：</p><pre><code>Int               int\nIdentifier        age\nAssignment        =  \nIntLiteral        45  \n</code></pre><p>而当你试着解析“intA = 10”程序的时候，会把intA解析成一个标识符。输出如下：</p><pre><code>Identifier    intA\nAssignment    =  \nIntLiteral    10  \n</code></pre><h2>解析算术表达式</h2><p>解析完“int age = 40”之后，我们再按照上面的方法增加一些规则，这样就能处理算术表达式，例如“2+3*5”。 增加的词法规则如下：</p><pre><code>Plus :  '+'\nMinus : '-'\nStar :  '*' \nSlash : '/'\n</code></pre><p>然后再修改一下有限自动机和代码，就能解析“2+3*5”了，会得到下面的输出：</p><pre><code>IntLiteral  2\nPlus        +  \nIntLiteral  3  \nStar        *  \nIntLiteral  5  \n</code></pre><p>好了，现在我们已经能解析不少词法了，之后的课程里，我会带你实现一个公式计算器，所以在这里要先准备好所需要的词法分析功能。</p><h2>课程小结</h2><p>本节课，我们实现了一个简单的词法分析器。你可以看到，要实现一个词法分析器，首先需要写出每个词法的正则表达式，并画出有限自动机，之后，只要用代码表示这种状态迁移过程就可以了。</p><p><strong>我们总是说理解原理以后，实现并不困难。</strong>今天的分享，你一定有所共鸣。</p><p>反之，如果你在编程工作中遇到困难，往往是因为不清楚原理，没有将原理吃透。而这门课就是要帮助你真正吃透编译技术中的几个核心原理，让你将知识应用到实际工作中，解决工作中遇到的困难。</p><p>小试了词法分析器之后，在下一讲，我会带你手工打造一下语法分析器，并实现一个公式计算器的功能。</p><h2>一课一思</h2><p>很多同学已经用到过正则表达式，这是学计算机必懂的知识点，十分有用。正则表达式工具其实就可以看做一个通用的词法分析器。那么你都用正则表达式功能做过哪些事情？有没有发现一些软件工具因为支持正则表达式而变得特别强大的情况呢？可以在留言区与大家一起交流。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p><p>另外，为了便于你更好地学习，我将本节课的示例程序放到了<a href=\"https://github.com/RichardGong/PlayWithCompiler/blob/master/lab/craft/SimpleLexer.java\">GitHub</a>上，你可以看一下。</p>","comments":[{"had_liked":false,"id":124458,"user_name":"KnowNothing","can_delete":false,"product_type":"c1","uid":1630420,"ip_address":"","ucode":"E3E5DC7594BCF7","user_header":"","comment_is_top":false,"comment_ctime":1565887799,"is_pvip":false,"replies":[{"id":"45736","content":"没错，可以的。<br>但是构造成有限自动机的话，程序就可以标准化处理。不需要再手写其他代码。比如正则表达式工具。<br><br>当然，如果纯手写词法分析器，不受任何标准算法的限制的话，那发挥空间就会大很多。<br><br>爱动脑的好同学！","user_name":"作者回复","comment_id":124458,"uid":"1543380","ip_address":"","utype":1,"ctime":1565920092,"user_name_real":"宫文学Richard"}],"discussion_count":13,"race_medal":0,"score":"242084056375","product_id":100034101,"comment_content":"老师，在关键字和保留字的识别上，我认为有不需要加入中间状态的更简单的方式：<br>完成词法分析后，遍历所有ID token，如果其text在关键字和保留字集合内，将该token类型改成对应的关键字&#47;保留字类型。<br>或者，<br>每当识别出一个ID token，都检查其text，如果是在关键字和保留字集合内，纠正type。","like_count":57,"discussions":[{"author":{"id":1748055,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ac/57/db7cc2a1.jpg","nickname":"学不完不改名","note":"","ucode":"68AE66A2E35734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120791,"discussion_content":"想法是好的 但现实是残酷的 老师也很配合你 夸赞了你一句 实际上你的想法有冗余\n我第一遍已经遍历了一个字符串的每个字符 我又重新再判断(遍历或用map去取key)下? 这属于多此一举 重复劳动 这就叫冗余\n多写写算法 就会把这些相对幼稚的思想去除 加油","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1578296219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1705334,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/05/76/d2ba6ad5.jpg","nickname":"蒋先生","note":"","ucode":"B4C7D8FA8413A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":117945,"discussion_content":"我们的ecelips 就是一边 写代码，一边用词法分析器去 解析Token的， 如果按你的意思，是先全部都当成 ID Token处理 → 这样是否还有高亮提示？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1578145737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1371800,"avatar":"","nickname":"秋","note":"","ucode":"A2EAF7B003CD34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16805,"discussion_content":"这样相当于把字符串都读到了内存，然后还要再遍历n遍，时间复杂度和空间复杂度都变大，在编译阶段相当耗费性能。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1568907644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5180,"discussion_content":"但这样的话，要多扫描一遍。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1566030741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2322123,"avatar":"","nickname":"Geek_44188e","note":"","ucode":"09C0B12EEB504A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"discussion":{"id":326038,"discussion_content":"扫描一边很简单，但如果手写有限状态机，为每一个关键字和保留字都写一个状态迁移显然复杂很多把","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1605505071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5180,"ip_address":""},"score":326038,"extra":""},{"author":{"id":1263910,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/26/ca88947c.jpg","nickname":"妖艳货","note":"","ucode":"CC2D0B6A090837","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2322123,"avatar":"","nickname":"Geek_44188e","note":"","ucode":"09C0B12EEB504A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414981,"discussion_content":"扫描一遍的代码是不复杂，但是性能就...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636953186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326038,"ip_address":""},"score":414981,"extra":""}]},{"author":{"id":1022021,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/45/318ba48a.jpg","nickname":"pebble","note":"","ucode":"871930CB227C68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5390,"discussion_content":"如果关键字跟保留字都构造成有限自动机，一门语言少说几十个，平均每个四个字符的话，就是一两百个一状态了，性能是否有影响，还有复杂度也大不少了吧。不知道实际中是怎么实现的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1566223548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463185,"discussion_content":"没错，可以的。\n但是构造成有限自动机的话，程序就可以标准化处理。不需要再手写其他代码。比如正则表达式工具。\n\n当然，如果纯手写词法分析器，不受任何标准算法的限制的话，那发挥空间就会大很多。\n\n爱动脑的好同学！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565920092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390641,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUdfNDQs3eLoIjfIXDm77W66udicLfqh6NA8QX4QuZNO48UlRTfDo2Fm2jGX0z3hjnbARib8wSbxcg/132","nickname":"Demon","note":"","ucode":"58CD838717F36D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319927,"discussion_content":"如果在每个identifier判断结束的时候再确认是不是关键遍历字不就可以避免重新遍历一遍了。从小白的角度看，平白生成这么多中间状态确实有点增加状态机的复杂度。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604198489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1167662,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/2e/d531b29b.jpg","nickname":"图吐兔","note":"","ucode":"2395E9506CBE0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1390641,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUdfNDQs3eLoIjfIXDm77W66udicLfqh6NA8QX4QuZNO48UlRTfDo2Fm2jGX0z3hjnbARib8wSbxcg/132","nickname":"Demon","note":"","ucode":"58CD838717F36D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320290,"discussion_content":"你想一下代码中是关键字多还是identifier更多？显然关键字会更少，那么在关键字做检查的次数会比在identifier做检查会少，耗时自然会更少","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1604311182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319927,"ip_address":""},"score":320290,"extra":""}]},{"author":{"id":2654280,"avatar":"https://static001.geekbang.org/account/avatar/00/28/80/48/7e93bfab.jpg","nickname":"bigSheller","note":"","ucode":"BFE786598F174D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380260,"discussion_content":"或者词法分析不处理关键字，语法分析的时候处理吗，还没学到语法分析，一个猜测。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624415282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2654280,"avatar":"https://static001.geekbang.org/account/avatar/00/28/80/48/7e93bfab.jpg","nickname":"bigSheller","note":"","ucode":"BFE786598F174D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380259,"discussion_content":"或者直接将type设计成能表达多个状态，如二进制标记位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624415073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2654280,"avatar":"https://static001.geekbang.org/account/avatar/00/28/80/48/7e93bfab.jpg","nickname":"bigSheller","note":"","ucode":"BFE786598F174D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380256,"discussion_content":"保留字增加一个附加类型属性，就不用增加一个状态了，状态迁移的时候附加类型也参与判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624414841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125189,"user_name":"傲娇的小宝","can_delete":false,"product_type":"c1","uid":1493922,"ip_address":"","ucode":"C079B19BCC1B7C","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/a2/5e7c557e.jpg","comment_is_top":false,"comment_ctime":1566115369,"is_pvip":false,"replies":[{"id":"45986","content":"有限自动机是比较简单的一种自动机，对应于正则文法，也叫做3型文法。<br>比它强大的是下推自动机，对应于上下文无关文法，也叫做2型文法。<br>比它更强大的是线性有界自动机，对应于上下文相关文法，也叫1型文法。<br>图灵机的范围比它们都大，它对应0型文法。你任何能用产生式写出来的文法规则，都属于0型文法。<br><br>希望对你有帮助，了解有限自动机和图灵机的关系：)","user_name":"作者回复","comment_id":125189,"uid":"1543380","ip_address":"","utype":1,"ctime":1566137489,"user_name_real":"宫文学Richard"}],"discussion_count":2,"race_medal":0,"score":"233494349353","product_id":100034101,"comment_content":"感觉有限状态机有点类似图灵机的工作方式。我一般只用正则匹配一下文件名或者某个字符串是否符合我的预期。","like_count":54,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463469,"discussion_content":"有限自动机是比较简单的一种自动机，对应于正则文法，也叫做3型文法。\n比它强大的是下推自动机，对应于上下文无关文法，也叫做2型文法。\n比它更强大的是线性有界自动机，对应于上下文相关文法，也叫1型文法。\n图灵机的范围比它们都大，它对应0型文法。你任何能用产生式写出来的文法规则，都属于0型文法。\n\n希望对你有帮助，了解有限自动机和图灵机的关系：)","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566137489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1493922,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cb/a2/5e7c557e.jpg","nickname":"傲娇的小宝","note":"","ucode":"C079B19BCC1B7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5310,"discussion_content":"哦哦！谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566169335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124821,"user_name":"易林林","can_delete":false,"product_type":"c1","uid":1049836,"ip_address":"","ucode":"27F84A3FCBBCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/ec/0539c89d.jpg","comment_is_top":false,"comment_ctime":1566002750,"is_pvip":false,"replies":[{"id":"45831","content":"课程的示例代码的主要目的是把意思讲明白，我甚至把状态都用枚举表示，就是为了易读。性能不是第一考虑。<br>从性能的角度，词法分析可以用查表的方法实现状态迁移。在每个状态，接收什么字符，切换到另外的状态。那样更快，这是常用的方法。<br>不光词法分析可以这么做，语法分析也可以。基于表驱动。这时候，最重要的是构造那张表。代码的话，就不大看明白是啥意思。","user_name":"作者回复","comment_id":124821,"uid":"1543380","ip_address":"","utype":1,"ctime":1566022734,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"194839531070","product_id":100034101,"comment_content":"宫老师，例子里面的词法分析大多是靠条件判断来实现，如果对一门完整的语言来进行分析的话，工作量会不会很大。我在想，是否有其他方式可以实现？","like_count":46,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463333,"discussion_content":"课程的示例代码的主要目的是把意思讲明白，我甚至把状态都用枚举表示，就是为了易读。性能不是第一考虑。\n从性能的角度，词法分析可以用查表的方法实现状态迁移。在每个状态，接收什么字符，切换到另外的状态。那样更快，这是常用的方法。\n不光词法分析可以这么做，语法分析也可以。基于表驱动。这时候，最重要的是构造那张表。代码的话，就不大看明白是啥意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566022734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124729,"user_name":"Fan","can_delete":false,"product_type":"c1","uid":1115232,"ip_address":"","ucode":"3BF28670FD9407","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","comment_is_top":false,"comment_ctime":1565953510,"is_pvip":false,"replies":[{"id":"45793","content":"最好的demo，就是现有语言的词法分析器，比如Java的、GNU c的，都能拿到源代码。比如Java的编译器在JDK的源代码里就有。<br><br>此外，我们在后端时会讲到LLVM工具。LLVM的文档里有一个小的教程，做了一个完整的前端。你也可以参考一下。http:&#47;&#47;llvm.org&#47;docs&#47;tutorial&#47;MyFirstLanguageFrontend&#47;LangImpl01.html<br><br>回头我整理一份清单放到github上，告诉大家去哪里下载。你的需求估计其他同学也有。<br><br>谢谢你！","user_name":"作者回复","comment_id":124729,"uid":"1543380","ip_address":"","utype":1,"ctime":1565959152,"user_name_real":"宫文学Richard"}],"discussion_count":2,"race_medal":0,"score":"130414972390","product_id":100034101,"comment_content":"宫老师，有没有一些词法分析的demo可以推荐看看呢？","like_count":31,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463298,"discussion_content":"最好的demo，就是现有语言的词法分析器，比如Java的、GNU c的，都能拿到源代码。比如Java的编译器在JDK的源代码里就有。\n\n此外，我们在后端时会讲到LLVM工具。LLVM的文档里有一个小的教程，做了一个完整的前端。你也可以参考一下。http://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html\n\n回头我整理一份清单放到github上，告诉大家去哪里下载。你的需求估计其他同学也有。\n\n谢谢你！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565959152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005351,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/27/805786be.jpg","nickname":"笨笨","note":"","ucode":"6DA6DCAF6A7DCB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5174,"discussion_content":"有同样的需求，因为受限于篇幅，感觉代码较少看的不过瘾和透彻，希望（这次包括后面的知识点）有更多，有难易梯度的demo能分享，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566028749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124851,"user_name":"逗逼师父","can_delete":false,"product_type":"c1","uid":1017863,"ip_address":"","ucode":"ECC2D82F83CBE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/07/7804f4cc.jpg","comment_is_top":false,"comment_ctime":1566005311,"is_pvip":true,"replies":[{"id":"45828","content":"很好的问题。<br>是这样的。从Token分类的角度，我们确实可以把这两个归为一类。<br>但如果把它们看做同一个状态，就会有一些问题。比如，接收到=号应该怎么处理呢？接收第一个=号，仍然处于比较操作符状态。那么接收第二个呢？问题是，有限状态机接收字符的时候，是没法数个数的。如果你要记个数，也就相当于在内部新增加了一个状态，还是等价于两个状态。我这么说你理解吗？","user_name":"作者回复","comment_id":124851,"uid":"1543380","ip_address":"","utype":1,"ctime":1566022113,"user_name_real":"宫文学Richard"}],"discussion_count":5,"race_medal":0,"score":"96055285823","product_id":100034101,"comment_content":"老师您好，我的疑问是，age&gt;=45的有限状态机图中，为什么比较操作符不像标识符那样停留在同一个状态？我觉得&gt;和&gt;=都是属于比较操作符呀","like_count":22,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463342,"discussion_content":"很好的问题。\n是这样的。从Token分类的角度，我们确实可以把这两个归为一类。\n但如果把它们看做同一个状态，就会有一些问题。比如，接收到=号应该怎么处理呢？接收第一个=号，仍然处于比较操作符状态。那么接收第二个呢？问题是，有限状态机接收字符的时候，是没法数个数的。如果你要记个数，也就相当于在内部新增加了一个状态，还是等价于两个状态。我这么说你理解吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566022113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039717,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dd/65/3b4a2930.jpg","nickname":"lpf32","note":"","ucode":"E1B127FDFF74BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325535,"discussion_content":"使用比较操作符，如果出现 “>========” 可以在语法分析层进行报错处理","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605340952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017863,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/07/7804f4cc.jpg","nickname":"逗逼师父","note":"","ucode":"ECC2D82F83CBE6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5281,"discussion_content":"多谢老师解答，实际写下代码就更好理解了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566133290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1666583,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6e/17/d3d3ef14.jpg","nickname":"烈日烹雪","note":"","ucode":"6C9B8A6D79DA9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47200,"discussion_content":"4😌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573293523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000070,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/86/d05de870.jpg","nickname":"Xiang","note":"","ucode":"374744FF627C00","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5882,"discussion_content":"不小心点击了，投诉按钮🔘……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566524939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127370,"user_name":"诺亚","can_delete":false,"product_type":"c1","uid":1636524,"ip_address":"","ucode":"14850A3823E927","user_header":"https://static001.geekbang.org/account/avatar/00/18/f8/ac/3a8a0b69.jpg","comment_is_top":false,"comment_ctime":1566667980,"is_pvip":false,"replies":[{"id":"47318","content":"你很细心，所以我也仔细给你解答下:-)<br>isAlpha是 is alphabetic 的缩写。isalpha()函数是好几个语言的标准库里都提供的，比如C、python等。<br>alphabet指的是整个字母表，不是字母表里的单个字母。<br>","user_name":"作者回复","comment_id":127370,"uid":"1543380","ip_address":"","utype":1,"ctime":1566789531,"user_name_real":"宫文学Richard"}],"discussion_count":2,"race_medal":0,"score":"83171046604","product_id":100034101,"comment_content":"isAlpha 的 alpha 好像没有字母的意思吧？用 alphabet 会不会比较合适点？","like_count":19,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464461,"discussion_content":"你很细心，所以我也仔细给你解答下:-)\nisAlpha是 is alphabetic 的缩写。isalpha()函数是好几个语言的标准库里都提供的，比如C、python等。\nalphabet指的是整个字母表，不是字母表里的单个字母。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566789531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1748055,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ac/57/db7cc2a1.jpg","nickname":"学不完不改名","note":"","ucode":"68AE66A2E35734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120796,"discussion_content":"不懂装懂真...","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578296396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194339,"user_name":"宋健","can_delete":false,"product_type":"c1","uid":1283082,"ip_address":"","ucode":"7DD1CAB40440C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/0a/7f7c9b25.jpg","comment_is_top":false,"comment_ctime":1585052205,"is_pvip":false,"replies":[{"id":"74119","content":"主要是你自己的功劳:)<br>在技术领域，有时候你会觉得某个领域高山仰止，其实你自己也可以成为高山上的一棵青松。知识这东西，就在那里，只要想学，没有可能学不会。一旦学会，没有可能再变得不会，是个只会增加的过程，这是多便宜的事情！<br>不过，学习过程中，肯定还是会遇到挫折的，会觉得难懂，会觉得坚持不下去。这也没关系。你吃的苦越多，进入的境界就越高，这都是值得的！","user_name":"作者回复","comment_id":194339,"uid":"1543380","ip_address":"","utype":1,"ctime":1585125389,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"74599496237","product_id":100034101,"comment_content":"老师，我写完这一节激动的浑身发抖，自己果然实现了一个简单的词法分析器！老师讲得太棒了！","like_count":17,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488813,"discussion_content":"主要是你自己的功劳:)\n在技术领域，有时候你会觉得某个领域高山仰止，其实你自己也可以成为高山上的一棵青松。知识这东西，就在那里，只要想学，没有可能学不会。一旦学会，没有可能再变得不会，是个只会增加的过程，这是多便宜的事情！\n不过，学习过程中，肯定还是会遇到挫折的，会觉得难懂，会觉得坚持不下去。这也没关系。你吃的苦越多，进入的境界就越高，这都是值得的！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585125389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124901,"user_name":"梓航(﹏)","can_delete":false,"product_type":"c1","uid":1027773,"ip_address":"","ucode":"8ECA3C994D697C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/bd/d12f8907.jpg","comment_is_top":false,"comment_ctime":1566011609,"is_pvip":true,"replies":[{"id":"45825","content":"好的，谢谢您提意见！已通知后台调整一下。<br>02课的文件是目录中的SimpleLexer.java文件。<br><br>另，如果到github的https:&#47;&#47;github.com&#47;RichardGong&#47;PlayWithCompiler项目主页，里面有每堂课的课件的介绍，供您参考。","user_name":"作者回复","comment_id":124901,"uid":"1543380","ip_address":"","utype":1,"ctime":1566021695,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"65990521049","product_id":100034101,"comment_content":"我是来提意见的，麻烦老师在讲示例的时候，把对应的github链接贴上，而不是在最后贴一个总的地址，我点进去一脸懵，哪个文件对应哪个例子啊？","like_count":15,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463353,"discussion_content":"好的，谢谢您提意见！已通知后台调整一下。\n02课的文件是目录中的SimpleLexer.java文件。\n\n另，如果到github的https://github.com/RichardGong/PlayWithCompiler项目主页，里面有每堂课的课件的介绍，供您参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566021695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129010,"user_name":"请叫我赓哥","can_delete":false,"product_type":"c1","uid":1645033,"ip_address":"","ucode":"3DF5FF13FB1CF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKvFRQRW4JSXBF6eeM2S6KyTR7dDNJbxXjbicOSvJqxYIDayjCEZcQOibAp6O6UluYuYF1tEKlW1jDg/132","comment_is_top":false,"comment_ctime":1567006623,"is_pvip":false,"replies":[{"id":"48276","content":"在编译领域，有一个事情，叫做自举（bootstraping），也就是这门语言的编译器可以用自己这门语言编写。这是语言迈向成熟的标志。一般前面的版本，是要借助别的语言编写编译器，但后面就应该用自己的语言来编译了。<br>著名的语言都实现了自举。比如，go语言的编译器是用go编写的（早期版本应该是用C语言写的编译器。能实现自举，还是go发展历程上的一个历程碑），jdk里面自带了java语言的编译器，本身也是用java写的。<br>更早的语言，那当然是用汇编写编译器。比尔盖茨当年就是用汇编写。<br>掌握编译原理之后，其实用什么语言都可以写。<br>这门课程的示例语言是playscript。我有计划后面把playscript实现自举。","user_name":"作者回复","comment_id":129010,"uid":"1543380","ip_address":"","utype":1,"ctime":1567151739,"user_name_real":"宫文学Richard"}],"discussion_count":2,"race_medal":0,"score":"61696548767","product_id":100034101,"comment_content":"您好，老师，初步接触编译原理，您讲的手工打造词法分析，是用已知的java或c或其他语言实现，我想问一下，c语言的编译器是用什么实现的呢，或者其他语言的编译器？另外其他的词法分析器又是用什么语言编写的呢，谢谢","like_count":15,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465222,"discussion_content":"在编译领域，有一个事情，叫做自举（bootstraping），也就是这门语言的编译器可以用自己这门语言编写。这是语言迈向成熟的标志。一般前面的版本，是要借助别的语言编写编译器，但后面就应该用自己的语言来编译了。\n著名的语言都实现了自举。比如，go语言的编译器是用go编写的（早期版本应该是用C语言写的编译器。能实现自举，还是go发展历程上的一个历程碑），jdk里面自带了java语言的编译器，本身也是用java写的。\n更早的语言，那当然是用汇编写编译器。比尔盖茨当年就是用汇编写。\n掌握编译原理之后，其实用什么语言都可以写。\n这门课程的示例语言是playscript。我有计划后面把playscript实现自举。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567151739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1866485,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/7a/f5/54a5084b.jpg","nickname":"简单猫","note":"","ucode":"EA027D4C344E25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380749,"discussion_content":"我认为自举 应该是先用机低级语实现了一套核心core  API，然后在此基础上利用这些core API 实现高级API，和高级应用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624684588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138195,"user_name":"(╯‵□′)╯︵┻━┻","can_delete":false,"product_type":"c1","uid":1387589,"ip_address":"","ucode":"10A03AB1CB6B42","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","comment_is_top":false,"comment_ctime":1570089611,"is_pvip":false,"replies":[{"id":"53823","content":"嗯。等你学了算法篇第16讲，了解了正则表达式的机制后，可以设计点正则表达式测试一下谷歌的性能，看看能否把谷歌的服务器累趴下...","user_name":"作者回复","comment_id":138195,"uid":"1543380","ip_address":"","utype":1,"ctime":1570677943,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"57404664459","product_id":100034101,"comment_content":"有回随手发现Google搜索可以使用正则表达式……然后感觉星星都亮了","like_count":13,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469431,"discussion_content":"嗯。等你学了算法篇第16讲，了解了正则表达式的机制后，可以设计点正则表达式测试一下谷歌的性能，看看能否把谷歌的服务器累趴下...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570677943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124552,"user_name":"devna","can_delete":false,"product_type":"c1","uid":1014408,"ip_address":"","ucode":"A175FE9B73D773","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/88/b787338a.jpg","comment_is_top":false,"comment_ctime":1565919778,"is_pvip":false,"replies":[{"id":"45748","content":"great!<br>基于你已有的积累，是否可以进一步想想，能否自己写一个支持正则的工具？比如像grep、sed这些超级命令一样。那几个命令被认为是神级的命令，就是因为支持正则表达式，让它们能适应各种情况。","user_name":"作者回复","comment_id":124552,"uid":"1543380","ip_address":"","utype":1,"ctime":1565921370,"user_name_real":"宫文学Richard"}],"discussion_count":2,"race_medal":0,"score":"57400494626","product_id":100034101,"comment_content":"之前做的一个项目中有大量的历史遗留脚本是用Perl写的，于是主动去学了下Perl，不得不说，Perl是我见过所有语言里对正则表达式支持最强的，效率也是最高的(我想可能是因为Perl在语言核心内置了正则表达式引擎，不像其他语言，是通过各种模块支持的)。<br>后来从Perl了解到《精通正则表达式》这本书，买来看了下，确实是很好的一本书。虽然读完很久很多东西都忘了，但是对正则表达式的理解深刻了很多。","like_count":13,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463221,"discussion_content":"great!\n基于你已有的积累，是否可以进一步想想，能否自己写一个支持正则的工具？比如像grep、sed这些超级命令一样。那几个命令被认为是神级的命令，就是因为支持正则表达式，让它们能适应各种情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565921370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014408,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/88/b787338a.jpg","nickname":"devna","note":"","ucode":"A175FE9B73D773","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5368,"discussion_content":"谢谢老师点拨，等跟着老师学完了，我试着实现一个😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566208460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124526,"user_name":"xindoo","can_delete":false,"product_type":"c1","uid":1101718,"ip_address":"","ucode":"AEAF3208E644BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/96/251c0cee.jpg","comment_is_top":false,"comment_ctime":1565916721,"is_pvip":true,"replies":[{"id":"45731","content":"哇，真好玩！<br>点赞！","user_name":"作者回复","comment_id":124526,"uid":"1543380","ip_address":"","utype":1,"ctime":1565919506,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"44515589681","product_id":100034101,"comment_content":"正则表达式匹配3的任意倍数 https:&#47;&#47;www.zhihu.com&#47;question&#47;24824487","like_count":10,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463213,"discussion_content":"哇，真好玩！\n点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565919506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129797,"user_name":"阿尔伯特","can_delete":false,"product_type":"c1","uid":1300012,"ip_address":"","ucode":"70B8EA81FAD7BB","user_header":"https://static001.geekbang.org/account/avatar/00/13/d6/2c/9aa0ae40.jpg","comment_is_top":false,"comment_ctime":1567256127,"is_pvip":false,"replies":[{"id":"48566","content":"下载，编译，并运行了。<br>你提供的cmake配置很赞，让编译很顺畅！<br>也看出你C++功底很扎实呀！<br>再次点赞！<br>","user_name":"作者回复","comment_id":129797,"uid":"1543380","ip_address":"","utype":1,"ctime":1567407301,"user_name_real":"宫文学Richard"}],"discussion_count":2,"race_medal":0,"score":"35926994495","product_id":100034101,"comment_content":"Mark.<br>https:&#47;&#47;github.com&#47;albertabc&#47;compiler&#47;blob&#47;master&#47;main.cpp","like_count":8,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465655,"discussion_content":"下载，编译，并运行了。\n你提供的cmake配置很赞，让编译很顺畅！\n也看出你C++功底很扎实呀！\n再次点赞！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567407301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1300012,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d6/2c/9aa0ae40.jpg","nickname":"阿尔伯特","note":"","ucode":"70B8EA81FAD7BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7165,"discussion_content":"谢谢老师。宫老师见笑，都不好意思了。我悄悄告诉下，那个cmake file是用vscode自动生成的。主要跟老师学习基础知识。我并非计算机专业出身，但也在这个行业混，寻思得多学点。昨天学习了第三讲，刚开始没太懂，多读了几遍，后来发现评论都解决了。以后得把评论当正文看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567410482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127482,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1566727269,"is_pvip":false,"replies":[{"id":"47311","content":"不完全是。<br>1. int和age之间是以空格分割。更准确的说，是以“即非字母又非数字的任何字符”作为分割点。因为只要是字母或数字，就会一直停留在标识符的状态里。<br>2. 等号前后可以不必有空格，算法仍然能正确的切分开。<br>这样说，能明白吗？","user_name":"作者回复","comment_id":127482,"uid":"1543380","ip_address":"","utype":1,"ctime":1566788102,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"35926465637","product_id":100034101,"comment_content":"老师 这个有限自动机的状态确认是不是以空格为分界点？比如 int age = 45 在读i时进入int1状态 然后读n进入int2状态然后读t进入int3状态然后读到一个空格结束此时是在关键字状态 所以说int是一个关键字 然后在重新初始化状态开始读取age直到读到；为止？","like_count":8,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464516,"discussion_content":"不完全是。\n1. int和age之间是以空格分割。更准确的说，是以“即非字母又非数字的任何字符”作为分割点。因为只要是字母或数字，就会一直停留在标识符的状态里。\n2. 等号前后可以不必有空格，算法仍然能正确的切分开。\n这样说，能明白吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566788102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153447,"user_name":"哆啦B梦จุ๊บ","can_delete":false,"product_type":"c1","uid":1631411,"ip_address":"","ucode":"84D7E6CAB7DAFE","user_header":"https://static001.geekbang.org/account/avatar/00/18/e4/b3/4dc5c168.jpg","comment_is_top":false,"comment_ctime":1574237270,"is_pvip":false,"replies":[{"id":"59560","content":"看到了，不错！<br>破山中贼易，破心中贼难。<br>任何高峰，都是能找到一条缓坡上去的。","user_name":"作者回复","comment_id":153447,"uid":"1543380","ip_address":"","utype":1,"ctime":1574666328,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"18754106454","product_id":100034101,"comment_content":"听了老师的讲解，感觉没有想象的那么难，不管好坏，先敲一版出来总是没错的：<br>https:&#47;&#47;github.com&#47;zyfandtmx&#47;compile&#47;blob&#47;master&#47;src&#47;main&#47;java&#47;mycompiler&#47;lexical&#47;LexicalAnalysis.java","like_count":4,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475170,"discussion_content":"看到了，不错！\n破山中贼易，破心中贼难。\n任何高峰，都是能找到一条缓坡上去的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574666328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124764,"user_name":"sheeeeep","can_delete":false,"product_type":"c1","uid":1340246,"ip_address":"","ucode":"218AA77BAA73C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/73/56/9cfb1e43.jpg","comment_is_top":false,"comment_ctime":1565966404,"is_pvip":false,"replies":[{"id":"45839","content":"非常好！要号召大家跟你学习！<br>太棒了！<br><br>你有精力的话，还可以再精进一下，参考一下成熟编译器的词法分析工具，从课程示例的代码的基础上再提升一个等级:)  <br><br>比如说，另一个同学提到过，如何提升词法分析的性能什么的。","user_name":"作者回复","comment_id":124764,"uid":"1543380","ip_address":"","utype":1,"ctime":1566025666,"user_name_real":"宫文学Richard"}],"discussion_count":4,"race_medal":0,"score":"18745835588","product_id":100034101,"comment_content":"ts的实现，请老师和同学指正。https:&#47;&#47;github.com&#47;sheeeeep&#47;fundamentals-of-compiling&#47;blob&#47;Ch02&#47;src&#47;lexical-analyser.ts","like_count":4,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463312,"discussion_content":"非常好！要号召大家跟你学习！\n太棒了！\n\n你有精力的话，还可以再精进一下，参考一下成熟编译器的词法分析工具，从课程示例的代码的基础上再提升一个等级:)  \n\n比如说，另一个同学提到过，如何提升词法分析的性能什么的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566025666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201835,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/ab/79b6198f.jpg","nickname":"windseeker","note":"","ucode":"9D289A99DD9667","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375345,"discussion_content":"写的很工整 赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621586189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107001,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLg1BhBeNfibU9lW9fWWIhwRdqjmZzAJ6tW850qGibdFPmRia2CDIEAsYciaiag43ElaHRtBcHLggM9zuw/132","nickname":"测试昵称","note":"","ucode":"8FC9D76F9E6584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38100,"discussion_content":"哦，已经切分支，看见了～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571726306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107001,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLg1BhBeNfibU9lW9fWWIhwRdqjmZzAJ6tW850qGibdFPmRia2CDIEAsYciaiag43ElaHRtBcHLggM9zuw/132","nickname":"测试昵称","note":"","ucode":"8FC9D76F9E6584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38098,"discussion_content":"咋看不见了呢。。。还想参考一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571726269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124761,"user_name":"冬瓜","can_delete":false,"product_type":"c1","uid":1023471,"ip_address":"","ucode":"930D726F39AED1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9d/ef/93729443.jpg","comment_is_top":false,"comment_ctime":1565965180,"is_pvip":false,"replies":[{"id":"45804","content":"就是个习惯而已，把数字和字符分两组。<br><br>我们在写正式的词法文件时，有时会这么写：<br>Id: Charactor (Charactor | Digit)*<br>Number: Digit+<br>Charactor: [a-zA-Z_]<br>Digit: [0-9]<br><br>这时候，Digit在几个不同的规则中是复用的。","user_name":"作者回复","comment_id":124761,"uid":"1543380","ip_address":"","utype":1,"ctime":1565966981,"user_name_real":"宫文学Richard"}],"discussion_count":4,"race_medal":0,"score":"18745834364","product_id":100034101,"comment_content":"int 后面的 id 的正则是不是 [a-zA-Z_][0-9a-zA-Z_]*这样就行，为啥要将数字通过|连接呢？是不是有什么用意😳","like_count":4,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463311,"discussion_content":"就是个习惯而已，把数字和字符分两组。\n\n我们在写正式的词法文件时，有时会这么写：\nId: Charactor (Charactor | Digit)*\nNumber: Digit+\nCharactor: [a-zA-Z_]\nDigit: [0-9]\n\n这时候，Digit在几个不同的规则中是复用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565966981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2656508,"avatar":"","nickname":"Geek_56cceb","note":"","ucode":"AAD5DB5E172361","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379537,"discussion_content":"java的编译器有自己的词法文件吗？在哪里可以找到啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623944451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274660,"avatar":"https://static001.geekbang.org/account/avatar/00/13/73/24/199023bb.jpg","nickname":"tao1024","note":"","ucode":"5FCFDB7D8B570D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5132,"discussion_content":"老师的写法算是解耦吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565973049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1023471,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9d/ef/93729443.jpg","nickname":"冬瓜","note":"","ucode":"930D726F39AED1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1274660,"avatar":"https://static001.geekbang.org/account/avatar/00/13/73/24/199023bb.jpg","nickname":"tao1024","note":"","ucode":"5FCFDB7D8B570D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5155,"discussion_content":"明白了 感谢😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566013797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5132,"ip_address":""},"score":5155,"extra":""}]}]},{"had_liked":false,"id":124472,"user_name":"鱼_XueTr","can_delete":false,"product_type":"c1","uid":1506691,"ip_address":"","ucode":"A164D2540F251D","user_header":"https://static001.geekbang.org/account/avatar/00/16/fd/83/b432b125.jpg","comment_is_top":false,"comment_ctime":1565907733,"is_pvip":false,"replies":[{"id":"45734","content":"是滴。<br>程序编译的第一阶段工作，本质也是文本处理。","user_name":"作者回复","comment_id":124472,"uid":"1543380","ip_address":"","utype":1,"ctime":1565919859,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"18745776917","product_id":100034101,"comment_content":"正则表达式在做爬虫和文本处理中用过比较多。","like_count":4,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463194,"discussion_content":"是滴。\n程序编译的第一阶段工作，本质也是文本处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565919859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124707,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565948532,"is_pvip":false,"replies":[{"id":"45783","content":"如果要实现一个通用的正则表达式工具，这时候没办法手工构造DFA，会遇到你说的情况。<br><br>如果往深看一步，词法分析和我们后面讲的自顶向下的语法分析有共同之处，所以都会有回溯的可能性。<br><br>一般语言的词法，都不会太复杂，并且可以手工构造DFA，所以也就可以尽量避免回溯了。","user_name":"作者回复","comment_id":124707,"uid":"1543380","ip_address":"","utype":1,"ctime":1565955525,"user_name_real":"宫文学Richard"}],"discussion_count":1,"race_medal":0,"score":"14450850420","product_id":100034101,"comment_content":"正则表达式在实现中一般有两种：NFA和DFA，一般语言用DFA，但会有回溯的性能问题，用的时候一定要注意。","like_count":3,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463287,"discussion_content":"如果要实现一个通用的正则表达式工具，这时候没办法手工构造DFA，会遇到你说的情况。\n\n如果往深看一步，词法分析和我们后面讲的自顶向下的语法分析有共同之处，所以都会有回溯的可能性。\n\n一般语言的词法，都不会太复杂，并且可以手工构造DFA，所以也就可以尽量避免回溯了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565955525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146682,"user_name":"恩佐","can_delete":false,"product_type":"c1","uid":1509370,"ip_address":"","ucode":"955C45137073EE","user_header":"https://static001.geekbang.org/account/avatar/00/17/07/fa/62186c97.jpg","comment_is_top":false,"comment_ctime":1572602807,"is_pvip":false,"replies":[{"id":"57656","content":"看了你的代码，挺不错的。如果再补充一下README，让人可以迅速build和测试你的项目就更好了。","user_name":"作者回复","comment_id":146682,"uid":"1543380","ip_address":"","utype":1,"ctime":1573432202,"user_name_real":"宫文学Richard"}],"discussion_count":2,"race_medal":0,"score":"10162537399","product_id":100034101,"comment_content":"https:&#47;&#47;github.com&#47;shaojintian&#47;learn_compiler<br>老师能看看我的lexer么？用golang写的<br>请老师和同学们指正，感谢","like_count":2,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472973,"discussion_content":"看了你的代码，挺不错的。如果再补充一下README，让人可以迅速build和测试你的项目就更好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573432202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1509370,"avatar":"https://static001.geekbang.org/account/avatar/00/17/07/fa/62186c97.jpg","nickname":"恩佐","note":"","ucode":"955C45137073EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47875,"discussion_content":"好的老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573434221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130143,"user_name":"姜大牙","can_delete":false,"product_type":"c1","uid":1023717,"ip_address":"","ucode":"4043220A61B848","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9e/e5/6d03a341.jpg","comment_is_top":false,"comment_ctime":1567390041,"is_pvip":false,"replies":[{"id":"48584","content":"这个题目比较大:-D<br>这需要我去仔细看看方舟的代码才敢评价。我也很想抽出时间来研究一下。如果安排这个内容，应该是在答疑模块中。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1567413246,"ip_address":"","comment_id":130143,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10157324633","product_id":100034101,"comment_content":"老师，是否有计划讲一下方舟编译器？","like_count":2,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465830,"discussion_content":"这个题目比较大:-D\n这需要我去仔细看看方舟的代码才敢评价。我也很想抽出时间来研究一下。如果安排这个内容，应该是在答疑模块中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567413246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127277,"user_name":"乐毅","can_delete":false,"product_type":"c1","uid":1348052,"ip_address":"","ucode":"6361ADC9B0E8D5","user_header":"https://static001.geekbang.org/account/avatar/00/14/91/d4/3785c799.jpg","comment_is_top":false,"comment_ctime":1566631070,"is_pvip":false,"replies":[{"id":"47364","content":"可以呀。<br>算法可以是灵活的，可以有多种实现。课程里讲的理论往往更通用，比如可以根据正则表达式自动生成有限自动机。<br>在具体领域中，比如如果只是给计算机语言做词法分析，当然可以针对关键字这种特殊情况做特殊处理。<br>所以，在实际工程中，往往比纯原理更简单。因为允许变通。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566794476,"ip_address":"","comment_id":127277,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10156565662","product_id":100034101,"comment_content":"老师，是否可以将关键字和保留字预先存储起来？ 如果可以，那和文中描述的方式有什么区别吗？","like_count":2,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464410,"discussion_content":"可以呀。\n算法可以是灵活的，可以有多种实现。课程里讲的理论往往更通用，比如可以根据正则表达式自动生成有限自动机。\n在具体领域中，比如如果只是给计算机语言做词法分析，当然可以针对关键字这种特殊情况做特殊处理。\n所以，在实际工程中，往往比纯原理更简单。因为允许变通。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566794476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126431,"user_name":"Hkesd","can_delete":false,"product_type":"c1","uid":1136053,"ip_address":"","ucode":"61EB7DE871734D","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/b5/39affaad.jpg","comment_is_top":false,"comment_ctime":1566386416,"is_pvip":true,"replies":[{"id":"46764","content":"问题问得好。<br><br>有限自动机是Finite-state Automaton，它包括了DFA和NFA。<br><br>我在第二节没有切入到DFA和NFA的细节。准备在后面看看是否设置个加餐的环节，在讲LR算法之前把这个知识点讲明白，那时大家建立了很多直观认识，再学就不难了。<br>","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566389175,"ip_address":"","comment_id":126431,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10156321008","product_id":100034101,"comment_content":"这里的有限自动机就是DFA吗？","like_count":2,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463982,"discussion_content":"问题问得好。\n\n有限自动机是Finite-state Automaton，它包括了DFA和NFA。\n\n我在第二节没有切入到DFA和NFA的细节。准备在后面看看是否设置个加餐的环节，在讲LR算法之前把这个知识点讲明白，那时大家建立了很多直观认识，再学就不难了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566389175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124824,"user_name":"janey","can_delete":false,"product_type":"c1","uid":1619748,"ip_address":"","ucode":"B2160B363F23EB","user_header":"https://static001.geekbang.org/account/avatar/00/18/b7/24/17f6c240.jpg","comment_is_top":false,"comment_ctime":1566002997,"is_pvip":false,"replies":[{"id":"45830","content":"这个问题有点大。<br><br>可能要写很大一篇文章才行。我记着这下问题。抽时间看能不能写一篇博文，“从编译原理的角度看Go语言”。<br><br>如果你跟着这门课程学完，可能自己对Go语言也会有更好的认知能力。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566022417,"ip_address":"","comment_id":124824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10155937589","product_id":100034101,"comment_content":"Golang 语言看上去简单搞清楚底层实现不容易，老师可否从编译原理的角度指点迷津？","like_count":2,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463336,"discussion_content":"这个问题有点大。\n\n可能要写很大一篇文章才行。我记着这下问题。抽时间看能不能写一篇博文，“从编译原理的角度看Go语言”。\n\n如果你跟着这门课程学完，可能自己对Go语言也会有更好的认知能力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566022417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124741,"user_name":"benben","can_delete":false,"product_type":"c1","uid":1222193,"ip_address":"","ucode":"A861DEB5A88AA2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mWicFKgbjL299CQPEhoFdSLGvibCiaXeZo2EjV1hDLicPxicyRTWCODxeYwq8eBgxU6zUuU6rrIw3d7hGwFmRflicibHA/132","comment_is_top":false,"comment_ctime":1565957559,"is_pvip":false,"replies":[{"id":"45806","content":"谢谢肯定:)","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565967020,"ip_address":"","comment_id":124741,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10155892151","product_id":100034101,"comment_content":"每当看到状态机图后就感觉明白怎么做了！老师的图真厉害😄","like_count":2,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463303,"discussion_content":"谢谢肯定:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565967020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124709,"user_name":"(口-口)🌟","can_delete":false,"product_type":"c1","uid":1493259,"ip_address":"","ucode":"4E439C0DE8EBCF","user_header":"https://static001.geekbang.org/account/avatar/00/16/c9/0b/1f95abb4.jpg","comment_is_top":false,"comment_ctime":1565948698,"is_pvip":false,"replies":[{"id":"45781","content":"谢谢分享！<br>没错，这是词法分析的应用之一。<br>再进一步，在处理一些复杂格式的日志时，仅仅用词法分析还不够，还要加上语法分析功能才行。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565952440,"ip_address":"","comment_id":124709,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10155883290","product_id":100034101,"comment_content":"一般都是用来批量的处理数据的，比如把csv格式转换为json格式，方便程序操作，或者从日志冲筛选出指定的字段。","like_count":2,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463289,"discussion_content":"谢谢分享！\n没错，这是词法分析的应用之一。\n再进一步，在处理一些复杂格式的日志时，仅仅用词法分析还不够，还要加上语法分析功能才行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565952440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124455,"user_name":"Varphp","can_delete":false,"product_type":"c1","uid":1590892,"ip_address":"","ucode":"889550391E3F75","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTImmLJCKerl9CI4sTpPDNCUgswp04ybsJ4J6mpJmMlHh43Iibp1RPOLam5PpOv2ZDGcjvGrY94lNRw/132","comment_is_top":false,"comment_ctime":1565887534,"is_pvip":false,"replies":[{"id":"45737","content":"不用怕。我给出的学习过程是非常缓慢的爬坡。你看看我的提纲，把讲语法分析的算法都排到第一部分的最后两节去了。我会让你积累对语法分析的足够的直观认识，然后再总结严格意义上的算法，这样你接受起来很容易的。<br>这个过程是先懂再学的过程。最重要的是懂。你明白我的意思吧？<br>","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565920271,"ip_address":"","comment_id":124455,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10155822126","product_id":100034101,"comment_content":"学习了  有点惧怕语法解析 词法还能看下去  ","like_count":2,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463184,"discussion_content":"不用怕。我给出的学习过程是非常缓慢的爬坡。你看看我的提纲，把讲语法分析的算法都排到第一部分的最后两节去了。我会让你积累对语法分析的足够的直观认识，然后再总结严格意义上的算法，这样你接受起来很容易的。\n这个过程是先懂再学的过程。最重要的是懂。你明白我的意思吧？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565920271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1590892,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTImmLJCKerl9CI4sTpPDNCUgswp04ybsJ4J6mpJmMlHh43Iibp1RPOLam5PpOv2ZDGcjvGrY94lNRw/132","nickname":"Varphp","note":"","ucode":"889550391E3F75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5065,"discussion_content":"明白 辛苦了老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565920887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302844,"user_name":"jacklovepdf","can_delete":false,"product_type":"c1","uid":1501300,"ip_address":"","ucode":"64CF166C45908B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ26xdibLibk37rdrIA3zStsayOo9b0SGiasibNGfic6n2EIJiba1ptZOtWqV797wkszdjDM8aQkz1A2vibw/132","comment_is_top":false,"comment_ctime":1626405304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5921372600","product_id":100034101,"comment_content":"我的想法稍微跟“KnowNothing”同学不同，是在画这个状态机的时候可以对状态机进行优化。以上面“int age = 40”为例，比如我们可以加上预判的逻辑，遇到i，我们可以先判断一下接下来是否是int关键字，如果不是的话就是，就是identifier，这样理论上来说可以减少状态机复杂度，也不用重新遍历一次tonken进行修正；","like_count":1},{"had_liked":false,"id":292763,"user_name":"大鱼","can_delete":false,"product_type":"c1","uid":1352665,"ip_address":"","ucode":"1418EE18C4BDD4","user_header":"","comment_is_top":false,"comment_ctime":1620968451,"is_pvip":false,"replies":[{"id":"106050","content":"对。所有处理文本的场景，都离不开正则表达式。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1621072551,"ip_address":"","comment_id":292763,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5915935747","product_id":100034101,"comment_content":"我相信搞数据清洗的同学或多或少的都会用到正则表达式：比如提取纯数字，纯字母，日期，http URL等“规则”的数据","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519949,"discussion_content":"对。所有处理文本的场景，都离不开正则表达式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621072551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141752,"user_name":"Sudouble","can_delete":false,"product_type":"c1","uid":1365574,"ip_address":"","ucode":"B369B09DAF8D20","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/46/5eb5261b.jpg","comment_is_top":false,"comment_ctime":1571217712,"is_pvip":true,"replies":[{"id":"57579","content":"编译原理呀、操作系统呀，容易被认为高不可攀，因为这两个领域我们国内目前建树都不多。但我认为，很快中国人在这些基础领域也会有话语权。<br><br>实现这个目标的基础之一，就是有越来越多的中国工程师有自信能在这些领域做出真正卓越的成果。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1573343680,"ip_address":"","comment_id":141752,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866185008","product_id":100034101,"comment_content":"感觉编译原理对逻辑的要求挺高，很容易被绕晕，老师你的图很有帮助，看了感觉清晰很多。写了个c++版，运行处结果的那一刻成就感爆棚。<br>https:&#47;&#47;github.com&#47;potterhere&#47;TheBeautyOfCompiling&#47;tree&#47;master&#47;w2_re_and_dfa","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470872,"discussion_content":"编译原理呀、操作系统呀，容易被认为高不可攀，因为这两个领域我们国内目前建树都不多。但我认为，很快中国人在这些基础领域也会有话语权。\n\n实现这个目标的基础之一，就是有越来越多的中国工程师有自信能在这些领域做出真正卓越的成果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573343680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133671,"user_name":"吴军旗^_^","can_delete":false,"product_type":"c1","uid":1507640,"ip_address":"","ucode":"5760CE31AE3FA5","user_header":"https://static001.geekbang.org/account/avatar/00/17/01/38/5daf2cfb.jpg","comment_is_top":false,"comment_ctime":1568632713,"is_pvip":false,"replies":[{"id":"51362","content":"下载运行了。不错喔！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1568692338,"ip_address":"","comment_id":133671,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863600009","product_id":100034101,"comment_content":"用PHP实现的一个简单的词法分析器：https:&#47;&#47;github.com&#47;wujunqi&#47;compile&#47;blob&#47;master&#47;SimpleLexer.php","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467472,"discussion_content":"下载运行了。不错喔！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568692338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129256,"user_name":"周小明","can_delete":false,"product_type":"c1","uid":1187141,"ip_address":"","ucode":"A7BA114A53DD3D","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/45/aaad1f9a.jpg","comment_is_top":false,"comment_ctime":1567071707,"is_pvip":false,"replies":[{"id":"48256","content":"点赞！<br>代码是程序员之间沟通的语言:-)","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1567150496,"ip_address":"","comment_id":129256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862039003","product_id":100034101,"comment_content":"原理看懂了，但是看部分代码看了半天蒙了，乖乖滑到最后果然有 demo。看着完整的代码瞬间明白了。<br>","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465364,"discussion_content":"点赞！\n代码是程序员之间沟通的语言:-)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567150496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128165,"user_name":"Rockbean","can_delete":false,"product_type":"c1","uid":1632261,"ip_address":"","ucode":"30D0BDFB47D38B","user_header":"https://static001.geekbang.org/account/avatar/00/18/e8/05/a623c531.jpg","comment_is_top":false,"comment_ctime":1566839063,"is_pvip":false,"replies":[{"id":"47811","content":"为动手实操点赞！<br>谢谢你还在页面上加了课程链接:-D","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566960017,"ip_address":"","comment_id":128165,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861806359","product_id":100034101,"comment_content":"用Swift Playground写了一个小DEMO<br>[Swift Playground词法分析器DEMO](https:&#47;&#47;juejin.im&#47;post&#47;5d640edde51d453b5d4d8d94)","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464819,"discussion_content":"为动手实操点赞！\n谢谢你还在页面上加了课程链接:-D","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566960017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127602,"user_name":"weijiezhu","can_delete":false,"product_type":"c1","uid":1027720,"ip_address":"","ucode":"5D073D10D57C37","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/88/d486ce25.jpg","comment_is_top":false,"comment_ctime":1566747200,"is_pvip":true,"replies":[{"id":"47301","content":"点赞！<br>自己动手，掌握知识更深刻！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566786840,"ip_address":"","comment_id":127602,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861714496","product_id":100034101,"comment_content":"https:&#47;&#47;github.com&#47;WeijieZhu0204&#47;compilers-principles&#47;blob&#47;master&#47;lexical_analyzer&#47;dfa.ts<br><br>小撸怡情","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464572,"discussion_content":"点赞！\n自己动手，掌握知识更深刻！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566786840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126835,"user_name":"老雷","can_delete":false,"product_type":"c1","uid":1026696,"ip_address":"","ucode":"76029674332913","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/88/999de4d9.jpg","comment_is_top":false,"comment_ctime":1566487327,"is_pvip":false,"replies":[{"id":"46977","content":"不错不错！<br>我看到你在认真做自己的实现，这样会建立自己的认知，而不是局限在课程给你的知识点上。这是真正的学习！<br>大写点赞！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566530385,"ip_address":"","comment_id":126835,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5861454623","product_id":100034101,"comment_content":"老师看看我这个怎么样：https:&#47;&#47;github.com&#47;leizongmin&#47;PlayWithCompiler&#47;blob&#47;master&#47;lesson-2&#47;main.go 😄😄","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464191,"discussion_content":"不错不错！\n我看到你在认真做自己的实现，这样会建立自己的认知，而不是局限在课程给你的知识点上。这是真正的学习！\n大写点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566530385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027720,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/88/d486ce25.jpg","nickname":"weijiezhu","note":"","ucode":"5D073D10D57C37","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6145,"discussion_content":"NB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566725159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125517,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1566197931,"is_pvip":false,"replies":[{"id":"46097","content":"对的，总的意思都差不多。<br>具体到每个领域，上下文的具体指什么会有不同。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566210264,"ip_address":"","comment_id":125517,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861165227","product_id":100034101,"comment_content":"想问一下  一般的 高级语言中的context (上下文) 和编译有什么关联吗？ 在状态机模式中也有一个context 代表环境 包含了各种状态  ","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463593,"discussion_content":"对的，总的意思都差不多。\n具体到每个领域，上下文的具体指什么会有不同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566210264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124947,"user_name":"ct","can_delete":false,"product_type":"c1","uid":1055035,"ip_address":"","ucode":"00B2F7302915D8","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/3b/0ad9b613.jpg","comment_is_top":false,"comment_ctime":1566024737,"is_pvip":false,"replies":[{"id":"45909","content":"自己动手，很棒！<br>其中的lexPlus和lexMinus代码还需要调整，是吧？<br>","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566124207,"ip_address":"","comment_id":124947,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5860992033","product_id":100034101,"comment_content":"golang 的实现 https:&#47;&#47;play.golang.org&#47;p&#47;hs-2izlOJUk","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463371,"discussion_content":"自己动手，很棒！\n其中的lexPlus和lexMinus代码还需要调整，是吧？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566124207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055035,"avatar":"https://static001.geekbang.org/account/avatar/00/10/19/3b/0ad9b613.jpg","nickname":"ct","note":"","ucode":"00B2F7302915D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5285,"discussion_content":"没懂，是指没解析 -1, +2 这种吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566134497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124601,"user_name":"mom","can_delete":false,"product_type":"c1","uid":1243910,"ip_address":"","ucode":"07278AFDD273F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/fb/06/09393f2a.jpg","comment_is_top":false,"comment_ctime":1565926240,"is_pvip":false,"replies":[{"id":"45763","content":"Great!","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565934321,"ip_address":"","comment_id":124601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860893536","product_id":100034101,"comment_content":"正则表达式经常在对文本的搜索、替换中用到，而且在一些代码编辑器里面可以利用正则表达式来实现语法高亮","like_count":1,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463244,"discussion_content":"Great!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565934321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359896,"user_name":"丿醉月丨飞羽觞","can_delete":false,"product_type":"c1","uid":1807024,"ip_address":"广东","ucode":"01874317EC1FE1","user_header":"https://static001.geekbang.org/account/avatar/00/1b/92/b0/8b58ff2d.jpg","comment_is_top":false,"comment_ctime":1666022701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666022701","product_id":100034101,"comment_content":"老师看看我的https:&#47;&#47;github.com&#47;DrunkMoonRemex&#47;CompilerPrinciple&#47;blob&#47;master&#47;src&#47;practice&#47;SimpleLexer.java","like_count":0},{"had_liked":false,"id":359891,"user_name":"丿醉月丨飞羽觞","can_delete":false,"product_type":"c1","uid":1807024,"ip_address":"广东","ucode":"01874317EC1FE1","user_header":"https://static001.geekbang.org/account/avatar/00/1b/92/b0/8b58ff2d.jpg","comment_is_top":false,"comment_ctime":1666016490,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666016490","product_id":100034101,"comment_content":"老师的例子SimpleLexer.java中没有对 == 做处理，如果输入int age == 45; 结果是错的。<br>输出：<br>parse :int age == 45;<br>text\ttype<br>int\t\tInt<br>age\t\tIdentifier<br>=\t\tAssignment<br>=\t\tAssignment<br>45\t\tIntLiteral<br>;\t\tSemiColon","like_count":0},{"had_liked":false,"id":359023,"user_name":"ACE","can_delete":false,"product_type":"c1","uid":2350967,"ip_address":"四川","ucode":"F53A39BB4C4618","user_header":"https://static001.geekbang.org/account/avatar/00/23/df/77/d23023d1.jpg","comment_is_top":false,"comment_ctime":1665159682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665159682","product_id":100034101,"comment_content":"编译原理学生们交流 4 2 4 3 4 9 6 4 0","like_count":0},{"had_liked":false,"id":330879,"user_name":"Gaollard","can_delete":false,"product_type":"c1","uid":1378779,"ip_address":"","ucode":"1B200F5E73C3E1","user_header":"https://static001.geekbang.org/account/avatar/00/15/09/db/78996b11.jpg","comment_is_top":false,"comment_ctime":1642241067,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642241067","product_id":100034101,"comment_content":"把关键字也看作标识符，当一个标识符解析结束时，再去看他是否是一个关键字。状态机可以少写很多中间状态(关于标识符的)。","like_count":0},{"had_liked":false,"id":316535,"user_name":"小石头","can_delete":false,"product_type":"c1","uid":1690759,"ip_address":"","ucode":"7B2EC4C8C6192F","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/87/2a196164.jpg","comment_is_top":false,"comment_ctime":1634372944,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634372944","product_id":100034101,"comment_content":"之前做过类似的算法题目，现在才知道原来属于词法分析的范畴","like_count":0},{"had_liked":false,"id":315223,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1633755085,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1633755085","product_id":100034101,"comment_content":"当你觉得无从下手，的确是因为没有把原理吃透","like_count":0},{"had_liked":false,"id":311525,"user_name":"hYector","can_delete":false,"product_type":"c1","uid":2173880,"ip_address":"","ucode":"C1DEEB8FAC0B2E","user_header":"https://static001.geekbang.org/account/avatar/00/21/2b/b8/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1631266870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631266870","product_id":100034101,"comment_content":"只学不练云泥之别，开始不准备实现这个自动机，实现一次下来，对于自动机的运行机制更清楚了。像对ischr()，isdigit()这些判断过程具体实现更清楚；结合‘=’， ‘==’， ‘===’的识别都是很细节；另外一个小猜想，我们习惯在程序追加一个空行，这样的操作至少对课程中的自动机来说，可以少写一个结尾识别，这是像数组从0开始这般的历史习惯使然？老师讲得棒，下面很多留言也不能落下，有些观点对学习者来说很开放","like_count":0},{"had_liked":false,"id":302993,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1626504183,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1626504183","product_id":100034101,"comment_content":"vscode查找关键字支持正则表达式查找，很有用","like_count":0},{"had_liked":false,"id":290033,"user_name":"刘超","can_delete":false,"product_type":"c1","uid":1029456,"ip_address":"","ucode":"B413FF6DFE47C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/50/cedc2cd4.jpg","comment_is_top":false,"comment_ctime":1619332739,"is_pvip":false,"replies":[{"id":"105333","content":"嗯是的，可以共享一个状态！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1619681855,"ip_address":"","comment_id":290033,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619332739","product_id":100034101,"comment_content":"老师，int和if的第一个字母都都一样，是不是可以共用一个状态？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519091,"discussion_content":"嗯是的，可以共享一个状态！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619681855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286048,"user_name":"桃源小盼","can_delete":false,"product_type":"c1","uid":1039664,"ip_address":"","ucode":"3FA0819FD69FF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/30/9d36ccaf.jpg","comment_is_top":false,"comment_ctime":1617118972,"is_pvip":true,"replies":[{"id":"105369","content":"是同一个意思。<br>英文是finite-state automata。所以翻译成“有限状态自动机”、“有限自动机”，都可以。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1619765123,"ip_address":"","comment_id":286048,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617118972","product_id":100034101,"comment_content":"这里说的有限自动机就是有限状态机吧？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517855,"discussion_content":"是同一个意思。\n英文是finite-state automata。所以翻译成“有限状态自动机”、“有限自动机”，都可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619765123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283328,"user_name":"赵源😈","can_delete":false,"product_type":"c1","uid":1609114,"ip_address":"","ucode":"3D438CC59126F2","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/9a/61db513f.jpg","comment_is_top":false,"comment_ctime":1615707889,"is_pvip":false,"replies":[{"id":"102807","content":"是这一节的代码吗？能不能把错误的具体信息贴上来？","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1615771588,"ip_address":"","comment_id":283328,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615707889","product_id":100034101,"comment_content":"提出疑问：难道就我一个人用老师的代码编译一堆报错吗？？？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516998,"discussion_content":"是这一节的代码吗？能不能把错误的具体信息贴上来？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615771588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283323,"user_name":"赵源😈","can_delete":false,"product_type":"c1","uid":1609114,"ip_address":"","ucode":"3D438CC59126F2","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/9a/61db513f.jpg","comment_is_top":false,"comment_ctime":1615706217,"is_pvip":false,"replies":[{"id":"102808","content":"好，我看一下。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1615771636,"ip_address":"","comment_id":283323,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615706217","product_id":100034101,"comment_content":"我是java初学者，有个疑问就是按老师github上的代码的话，如果遇到空格程序会进入死循环，因为initToken这个函数里没有判断是否为空格的情况呀？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516995,"discussion_content":"好，我看一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615771636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279505,"user_name":"饭","can_delete":false,"product_type":"c1","uid":1610573,"ip_address":"","ucode":"B3F1702D4DE604","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJKj3GbvevFibxwJibTqm16NaE8MXibwDUlnt5tt73KF9WS2uypha2m1Myxic6Q47Zaj2DZOwia3AgicO7Q/132","comment_is_top":false,"comment_ctime":1613808906,"is_pvip":false,"replies":[{"id":"102108","content":"加油！<br>代码可以放在码云或github，把链接贴上来给同学们显摆一下。好多同学都分享过！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1614649805,"ip_address":"","comment_id":279505,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1613808906","product_id":100034101,"comment_content":"入手一年了，今年下决心开始认真学完，立TAG努力实现老师文中所有案例<br>c#实现<br>。。。代码太长，贴不下","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515759,"discussion_content":"加油！\n代码可以放在码云或github，把链接贴上来给同学们显摆一下。好多同学都分享过！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614649805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271304,"user_name":"Nikola","can_delete":false,"product_type":"c1","uid":1337553,"ip_address":"","ucode":"5E3AA9B8A45924","user_header":"https://static001.geekbang.org/account/avatar/00/14/68/d1/9550690a.jpg","comment_is_top":false,"comment_ctime":1609529199,"is_pvip":false,"replies":[{"id":"98455","content":"正则表达式和有限状态机是同构的。它们是用不同的方式，表达了同一个意思，但两种方式各有优点。<br>有限状态机的优点是直观，并且可以直接转化为程序。<br>正则表达式则符合形式化的文法，便于进行推导。逻辑学、数学等很多需要严格证明的地方，都是建立在这种形式化表达和推理的基础上的。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1609727870,"ip_address":"","comment_id":271304,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609529199","product_id":100034101,"comment_content":"老师，您讲的我都看懂了，但是我觉得正则表达式和有限状态机只要用一个就够了啊。比方说我写出了所有token的正则表达式，然后就可以一点一点匹配整个程序文本解析token。或者我用有限状态机一个字符一个字符分析，也就不用正则表达式了啊。","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512894,"discussion_content":"正则表达式和有限状态机是同构的。它们是用不同的方式，表达了同一个意思，但两种方式各有优点。\n有限状态机的优点是直观，并且可以直接转化为程序。\n正则表达式则符合形式化的文法，便于进行推导。逻辑学、数学等很多需要严格证明的地方，都是建立在这种形式化表达和推理的基础上的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609727870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268217,"user_name":"summer_xx","can_delete":false,"product_type":"c1","uid":2364202,"ip_address":"","ucode":"EB4AF83751E7AD","user_header":"https://static001.geekbang.org/account/avatar/00/24/13/2a/23cc75f0.jpg","comment_is_top":false,"comment_ctime":1608103436,"is_pvip":false,"replies":[{"id":"98481","content":"你问的问题，是跟编译原理相关，但又有很大不同的一个领域，这个领域叫做“计算机语言”，会涉及计算机语言的设计等问题。这个领域比较窄，很少有人会专门做这个方向。<br>实现一个编译器是比较工程化的工作，很多技术都是比较确定的。而设计计算机语言，则是科学和艺术的结合。它有一些理论的支撑，但设计者本身根据自己的经验和偏好，有很大的自由创作的空间。编译器实现的好坏，可以拿编译速度、运行速度等准确地衡量。而计算机语言设计的好坏，则是充满争议的一个领域，所以网上程序员们的辩论永不止歇。<br>有一点是肯定的，如果你自己去设计一门语言，那你完全可以自己决定很多特性。当然，会不会流行起来，那就是另一个问题了。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1609736436,"ip_address":"","comment_id":268217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608103436","product_id":100034101,"comment_content":"看完了这些，有些疑问，但是我也不知道怎么表达出来，老师写的分析过程和实现逻辑很清楚，很易懂，但是，我比较好奇的事，一门语言实在什么指导下来做关键这的设计，为什么要有这样或那样的关键字，比如为什么要有int，然后设计的关键字或者设计的语言，怎么来验证他的可靠性，我知道现在有很多成熟的语言，按照他们的经验我们很容易知道这些，但是却无法知道他们是怎么被设计出来的。","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511877,"discussion_content":"你问的问题，是跟编译原理相关，但又有很大不同的一个领域，这个领域叫做“计算机语言”，会涉及计算机语言的设计等问题。这个领域比较窄，很少有人会专门做这个方向。\n实现一个编译器是比较工程化的工作，很多技术都是比较确定的。而设计计算机语言，则是科学和艺术的结合。它有一些理论的支撑，但设计者本身根据自己的经验和偏好，有很大的自由创作的空间。编译器实现的好坏，可以拿编译速度、运行速度等准确地衡量。而计算机语言设计的好坏，则是充满争议的一个领域，所以网上程序员们的辩论永不止歇。\n有一点是肯定的，如果你自己去设计一门语言，那你完全可以自己决定很多特性。当然，会不会流行起来，那就是另一个问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609736436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264816,"user_name":"Fan","can_delete":false,"product_type":"c1","uid":1115232,"ip_address":"","ucode":"3BF28670FD9407","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","comment_is_top":false,"comment_ctime":1606660495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606660495","product_id":100034101,"comment_content":"宫老师，在看这个代码<br>PlayWithCompiler&#47;lab&#47;craft&#47;SimpleLexer.java 中public SimpleTokenReader tokenize(String code){}这个方法时没明白为什么最后还需要将最后一个token送进去。在switch分支中不是已经处理了吗？<br><br>&#47;&#47; 把最后一个token送进去<br>if (tokenText.length() &gt; 0) {<br>      initToken(ch);<br>}","like_count":0},{"had_liked":false,"id":263285,"user_name":"ljf10000","can_delete":false,"product_type":"c1","uid":1494064,"ip_address":"","ucode":"44957329A61EAE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eop9WylZJicLQ5wib49kcMPqCTRT1aThh6mMAVl6qseLwbVOLhicVLjZCxCoyQd5CrrHHibs2CVPaoK3g/132","comment_is_top":false,"comment_ctime":1606092067,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606092067","product_id":100034101,"comment_content":"请教老师一个关于词法&#47;正则的问题<br><br>已知给定的输入，进行词法&#47;正则分析。比如&gt;=和&gt;，需要多看一个字符才能识别，这对于已知长度是容易的，可以用一个栈状态进行跟踪。<br><br>但如果输入是流式输入，极端情况下一个字符一个字符进行输入，不知道什么时候终止，那么处理就需要考虑状态，这种情况如何处理？需要哪方面的知识？有什么源码可以借鉴？<br><br>谢谢老师，望解答。","like_count":0},{"had_liked":false,"id":251940,"user_name":"叶筱","can_delete":false,"product_type":"c1","uid":1388844,"ip_address":"","ucode":"A613A652E39ADA","user_header":"https://static001.geekbang.org/account/avatar/00/15/31/2c/b91ce98e.jpg","comment_is_top":false,"comment_ctime":1601992922,"is_pvip":true,"replies":[{"id":"94597","content":"不错！多动手！<br>老师的示例代码，准备在某个时间用自己设计的语言再实现一遍:-)  ","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1605059228,"ip_address":"","comment_id":251940,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1601992922","product_id":100034101,"comment_content":"老师的代码原来有好多没实现啊，我又重新实现了一下https:&#47;&#47;github.com&#47;windycn&#47;ManualCompiler","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506670,"discussion_content":"不错！多动手！\n老师的示例代码，准备在某个时间用自己设计的语言再实现一遍:-)  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605059228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237313,"user_name":"不会魔法","can_delete":false,"product_type":"c1","uid":2085129,"ip_address":"","ucode":"6B470D893A64F1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/BF6K1pR632UTLOpVU6ibaTRacFtoiaia4Ojs5BLQtbrullKuQtfDwfOyqBpRDb7W8JzDicAbwOLicCbcHX9DreC9WXw/132","comment_is_top":false,"comment_ctime":1595776765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595776765","product_id":100034101,"comment_content":"老师，我没有使用初始状态，而是判断为连续标识符（id，num）时，当前字符是否符合当前标识符的规则，如果符合则在上次token上追加，不符合则判断是否为符合某种标识符类型的字符，符合则新建token，不符合则跳过执行下一个字符。<br>我测试了三种示例，均可输出正常tokens结果。请问老师这种实现方式有什么弊端吗？<br>git地址：https:&#47;&#47;github.com&#47;qingchiapp&#47;learn-compiler&#47;blob&#47;master&#47;chapter02_Reg.ts<br><br><br>","like_count":0},{"had_liked":false,"id":224621,"user_name":"A.Y.","can_delete":false,"product_type":"c1","uid":2029589,"ip_address":"","ucode":"7A9701DD436547","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f8/15/2724d7ec.jpg","comment_is_top":false,"comment_ctime":1591486643,"is_pvip":false,"replies":[{"id":"82805","content":"语法制导，对应的是上下文无关文法。<br>DFA对应的是正则文法，正则文法是上下文无关文法的一个子集，所以处理起来更简单一些。<br>你往后面学，学习到语法解析的相关算法，就能比较出它们之间的差别了。<br>","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1591622001,"ip_address":"","comment_id":224621,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591486643","product_id":100034101,"comment_content":"老师您好！我翻看了一下编译原理一书第二章中使用语法制导翻译将中缀表达式翻译成后缀表达式的代码，其实现好像与本节中基于DFA的实现感觉很类似，但是实现上又有很多不同。二者的概念我这边没有分的很清晰，能简单讲一讲二者的区别和联系吗？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497543,"discussion_content":"语法制导，对应的是上下文无关文法。\nDFA对应的是正则文法，正则文法是上下文无关文法的一个子集，所以处理起来更简单一些。\n你往后面学，学习到语法解析的相关算法，就能比较出它们之间的差别了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591622001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224135,"user_name":"nobody","can_delete":false,"product_type":"c1","uid":1284005,"ip_address":"","ucode":"262F5DB1A40FB6","user_header":"https://static001.geekbang.org/account/avatar/00/13/97/a5/ba371e7f.jpg","comment_is_top":false,"comment_ctime":1591283594,"is_pvip":false,"replies":[{"id":"82804","content":"DFA, Deterministic Finite Automata，确定的有限自动机。在后面课程里会讲到。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1591621765,"ip_address":"","comment_id":224135,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591283594","product_id":100034101,"comment_content":"DfaState中的Dfa是哪个单词的缩写？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497372,"discussion_content":"DFA, Deterministic Finite Automata，确定的有限自动机。在后面课程里会讲到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591621765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224072,"user_name":"pencilCool","can_delete":false,"product_type":"c1","uid":1461770,"ip_address":"","ucode":"49A9FE2DEE2911","user_header":"https://static001.geekbang.org/account/avatar/00/16/4e/0a/0ff15eaa.jpg","comment_is_top":false,"comment_ctime":1591266118,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591266118","product_id":100034101,"comment_content":"有些词根词缀字典就支持正则查询，挺强大的","like_count":0},{"had_liked":false,"id":223880,"user_name":"笨小孩","can_delete":false,"product_type":"c1","uid":1152152,"ip_address":"","ucode":"F0481EB8FF1FE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/98/b929beec.jpg","comment_is_top":false,"comment_ctime":1591204346,"is_pvip":false,"replies":[{"id":"82813","content":"没错。<br>很多手工编写的词法分析器就是这样实现的。<br>但如果要自动生成词法分析器，可能还是要构造有限自动机。<br>","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1591622802,"ip_address":"","comment_id":223880,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591204346","product_id":100034101,"comment_content":"可以把关键字和保留字存到map里面，每次得到一个标识符，先判断一下是否是关键字","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497280,"discussion_content":"没错。\n很多手工编写的词法分析器就是这样实现的。\n但如果要自动生成词法分析器，可能还是要构造有限自动机。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591622802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214949,"user_name":"有品味的混球","can_delete":false,"product_type":"c1","uid":1041616,"ip_address":"","ucode":"C69D823A9DF5E5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/d0/ed066d6a.jpg","comment_is_top":false,"comment_ctime":1588855618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588855618","product_id":100034101,"comment_content":"前段时间在学习编译原理的时候，还看到过一种叫 Parser Combinators 的解析方法，是函数式的写法，感觉还蛮优雅的。原文是 https:&#47;&#47;kean.github.io&#47;post&#47;regex-parser#parser-combinators，我照着这个写了一下关于这三种表达式的解析 https:&#47;&#47;github.com&#47;xxx50236&#47;PlayWithCompiler","like_count":0},{"had_liked":false,"id":204045,"user_name":"深水蓝","can_delete":false,"product_type":"c1","uid":1637933,"ip_address":"","ucode":"3E3B195DE54DE1","user_header":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","comment_is_top":false,"comment_ctime":1586324237,"is_pvip":false,"replies":[{"id":"76602","content":"是的，凡是要处理文本，都离不开正则表达式工具。<br>话说回来，对程序做编译，也是处理文本。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1586510281,"ip_address":"","comment_id":204045,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586324237","product_id":100034101,"comment_content":"学习正则表达式真的非常有用。例如在海量的文章中寻找符合规则而又不是固定字符串的内容，或者检查甚至批量替换内容中的一次错误。","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491055,"discussion_content":"是的，凡是要处理文本，都离不开正则表达式工具。\n话说回来，对程序做编译，也是处理文本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586510281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200278,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1399673,"ip_address":"","ucode":"929E3FFD14EFC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/79/d55044ac.jpg","comment_is_top":false,"comment_ctime":1585567848,"is_pvip":false,"replies":[{"id":"76640","content":"感谢分享。<br>你列的三个命令是有名的“三剑客”，它们都因为支持正则表达式而功能强大！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1586524220,"ip_address":"","comment_id":200278,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585567848","product_id":100034101,"comment_content":"Vim里的文本搜索和替换，sed awk grep等文本查询和搜索工具","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489983,"discussion_content":"感谢分享。\n你列的三个命令是有名的“三剑客”，它们都因为支持正则表达式而功能强大！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586524220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195887,"user_name":"伤心的小码码","can_delete":false,"product_type":"c1","uid":1812419,"ip_address":"","ucode":"7935C7E9C01010","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a7/c3/c15d8f64.jpg","comment_is_top":false,"comment_ctime":1585221489,"is_pvip":false,"replies":[{"id":"74393","content":"可以的。在第16讲。我放在后面了，怕其中的算法一下子给大家太多挑战。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1585267098,"ip_address":"","comment_id":195887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585221489","product_id":100034101,"comment_content":"能不能通过文法规则动态生成这个有限自动机呢？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489181,"discussion_content":"可以的。在第16讲。我放在后面了，怕其中的算法一下子给大家太多挑战。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585267098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192225,"user_name":"webs507wh","can_delete":false,"product_type":"c1","uid":1625555,"ip_address":"","ucode":"F93B8906D164F7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JF5ZUbI5KMFsTASqrVTUhpxyrOqGtBR4iaobxaASEjyZ7rPic50kzqQvNhFOw04MkyzUN0sc3pu7QsJwD57moibtw/132","comment_is_top":false,"comment_ctime":1584843602,"is_pvip":false,"replies":[{"id":"74123","content":"16讲，对正则表达式涉及的算法，做了更深入的介绍，你可以看看。<br>另外，你还可以看看形式语言里，怎样用产生式来表示正则表达式，这样可以跟后面的语法分析部分对照着看，更深入地理解一下正则文法和上下文无关文法的区别。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1585126208,"ip_address":"","comment_id":192225,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584843602","product_id":100034101,"comment_content":"正则表达式确实很重要","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488345,"discussion_content":"16讲，对正则表达式涉及的算法，做了更深入的介绍，你可以看看。\n另外，你还可以看看形式语言里，怎样用产生式来表示正则表达式，这样可以跟后面的语法分析部分对照着看，更深入地理解一下正则文法和上下文无关文法的区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585126208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191012,"user_name":"幻境之桥","can_delete":false,"product_type":"c1","uid":1061517,"ip_address":"","ucode":"F9F4DD94CB554E","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/8d/91cd624b.jpg","comment_is_top":false,"comment_ctime":1584717427,"is_pvip":false,"replies":[{"id":"74128","content":"嗯，用于这两方面就已经能解决很多问题了！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1585126610,"ip_address":"","comment_id":191012,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584717427","product_id":100034101,"comment_content":"正则暂时只用于搜索和替换","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488100,"discussion_content":"嗯，用于这两方面就已经能解决很多问题了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585126610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183850,"user_name":"wine99","can_delete":false,"product_type":"c1","uid":1682531,"ip_address":"","ucode":"F22F3E23E6F851","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/h6unp47tSLwwUZgnd3tuSSSEEOvXrC8aTI38ESYzsVZU8zZLMxvLDv8Zw2fmhr9M8CM46HCvQvicoutzwTjwNaA/132","comment_is_top":false,"comment_ctime":1583145509,"is_pvip":false,"replies":[{"id":"74157","content":"你已经开始触类旁通了！<br>计算机科学的核心原理、核心算法，不是太多。掌握了，很多就都通了！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1585132575,"ip_address":"","comment_id":183850,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583145509","product_id":100034101,"comment_content":"看到词法分析器的过程，就想起来上学期的数字逻辑课画的状态转移表，设计时序电路可不就是构造有限自动机嘛~","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485801,"discussion_content":"你已经开始触类旁通了！\n计算机科学的核心原理、核心算法，不是太多。掌握了，很多就都通了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585132575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178004,"user_name":"luckysmile","can_delete":false,"product_type":"c1","uid":1263891,"ip_address":"","ucode":"4422D9881911C5","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/13/d2ce4a34.jpg","comment_is_top":false,"comment_ctime":1581567743,"is_pvip":false,"replies":[{"id":"76755","content":"我在示例程序里只放了两个属性：Token类型（type）和文本值（text）。<br>你还可以放更多属性。一般肯定要放Token在原始字符串中的起始位置、结束位置、行号、列号。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1586663433,"ip_address":"","comment_id":178004,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581567743","product_id":100034101,"comment_content":"老师，github里面的Token类包含什么属性？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483632,"discussion_content":"我在示例程序里只放了两个属性：Token类型（type）和文本值（text）。\n你还可以放更多属性。一般肯定要放Token在原始字符串中的起始位置、结束位置、行号、列号。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586663433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167386,"user_name":"hy","can_delete":false,"product_type":"c1","uid":1036492,"ip_address":"","ucode":"70586DF38F146B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/cc/0b578873.jpg","comment_is_top":false,"comment_ctime":1577782091,"is_pvip":false,"replies":[{"id":"74222","content":"Great!<br>真正上手，收获会更多！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1585147918,"ip_address":"","comment_id":167386,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577782091","product_id":100034101,"comment_content":"一个 Go 语言的简单实现：<br><br>https:&#47;&#47;github.com&#47;liunian1004&#47;compiler&#47;tree&#47;master&#47;pkg&#47;lexer","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479842,"discussion_content":"Great!\n真正上手，收获会更多！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585147918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164514,"user_name":"简玉","can_delete":false,"product_type":"c1","uid":1013401,"ip_address":"","ucode":"C7F9471C7BFC7F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/99/00597feb.jpg","comment_is_top":false,"comment_ctime":1577017111,"is_pvip":false,"replies":[{"id":"63355","content":"感谢分享经验！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1577430798,"ip_address":"","comment_id":164514,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577017111","product_id":100034101,"comment_content":"webstorm的`command+r`批量替换功能，可以直接使用正则替换。配合捕获非常好用。比如多行不同变量批量去掉前缀等。就可以使用`antrl_(\\w+)`匹配然后用`$0`直接替换掉。","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478796,"discussion_content":"感谢分享经验！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577430798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164288,"user_name":"熊大","can_delete":false,"product_type":"c1","uid":1786512,"ip_address":"","ucode":"E228BD23ECA6EF","user_header":"https://static001.geekbang.org/account/avatar/00/1b/42/90/1b402e4a.jpg","comment_is_top":false,"comment_ctime":1576925835,"is_pvip":false,"replies":[{"id":"63365","content":"练习把不同的文法画成自动机，还是挺有趣的，比较直观。如果你要应付学校的考试，还是要多练练画图看图。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1577431759,"ip_address":"","comment_id":164288,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576925835","product_id":100034101,"comment_content":"从来不画图，也不会画各种图，然就后直接写代码开始干……","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478710,"discussion_content":"练习把不同的文法画成自动机，还是挺有趣的，比较直观。如果你要应付学校的考试，还是要多练练画图看图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577431759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160334,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1575937982,"is_pvip":false,"replies":[{"id":"63391","content":"第16讲会介绍。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1577438165,"ip_address":"","comment_id":160334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575937982","product_id":100034101,"comment_content":"一直好奇，正则是如何实现的","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477340,"discussion_content":"第16讲会介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577438165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158830,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1575460985,"is_pvip":false,"replies":[{"id":"63422","content":"第16讲涉及了正则表达式的实现:)","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1577446878,"ip_address":"","comment_id":158830,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575460985","product_id":100034101,"comment_content":"所以正则表达式又是怎么实现的呢，也是暴力枚举么","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476862,"discussion_content":"第16讲涉及了正则表达式的实现:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577446878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158177,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1575342306,"is_pvip":true,"replies":[{"id":"76765","content":"感谢分享！<br>这个领域我还真不了解，学习了！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1586670381,"ip_address":"","comment_id":158177,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575342306","product_id":100034101,"comment_content":"正则表达式正好用来解析dnf表达式（广告里通用的一种表达形式）","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476654,"discussion_content":"感谢分享！\n这个领域我还真不了解，学习了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586670381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150361,"user_name":"Milittle","can_delete":false,"product_type":"c1","uid":1045455,"ip_address":"","ucode":"80E566639A8ABB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/cf/851dab01.jpg","comment_is_top":false,"comment_ctime":1573522801,"is_pvip":true,"replies":[{"id":"59572","content":"谢谢分享！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1574668190,"ip_address":"","comment_id":150361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573522801","product_id":100034101,"comment_content":"Everthing这款软件，支持正则表达式，用起来很棒~","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474135,"discussion_content":"谢谢分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574668190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142527,"user_name":"eviltion","can_delete":false,"product_type":"c1","uid":1515445,"ip_address":"","ucode":"022DE8510B825E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mWicFKgbjL299CQPEhoFdSAphVb4UpibkhF8loRxryBRt3H7ZGkibibhaKANTxvSiatic4PLCy2MsbEMH1hc76YefPUw/132","comment_is_top":false,"comment_ctime":1571387762,"is_pvip":true,"replies":[{"id":"57583","content":"多看几遍，温故知新，很正常。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1573344151,"ip_address":"","comment_id":142527,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571387762","product_id":100034101,"comment_content":"看到07 又回来看下，基础薄弱","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471161,"discussion_content":"多看几遍，温故知新，很正常。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573344151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140596,"user_name":"Kian.Lee","can_delete":false,"product_type":"c1","uid":1086568,"ip_address":"","ucode":"3FB08A00F2DFD7","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/68/56794ea3.jpg","comment_is_top":false,"comment_ctime":1571013931,"is_pvip":false,"replies":[{"id":"54559","content":"谢谢分享经验！一旦赋予软件一定的定制化能力，就会出现很好的效果。这实际上就是定义了一个领域的小语言，DSL。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1571107218,"ip_address":"","comment_id":140596,"utype":1}],"discussion_count":1,"race_medal":5,"score":"1571013931","product_id":100034101,"comment_content":"10年在研发  ERP 系统时，系统的单据打印格式是模板化可配置的，除了关键词替换，还有嵌套、循环、分支，就是使用正则表达式实现，应该是我距今正则表达式使用最多最广的一次，好处就不用多讲了，有了这个引擎所有的打印格式都告别编码开发，而且再复杂的样式也都能配置出来。","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470458,"discussion_content":"谢谢分享经验！一旦赋予软件一定的定制化能力，就会出现很好的效果。这实际上就是定义了一个领域的小语言，DSL。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571107218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138283,"user_name":"郑家庄赶大车的老郑","can_delete":false,"product_type":"c1","uid":1687570,"ip_address":"","ucode":"D432A3961840B8","user_header":"https://static001.geekbang.org/account/avatar/00/19/c0/12/1afb4b75.jpg","comment_is_top":false,"comment_ctime":1570153871,"is_pvip":false,"replies":[{"id":"57696","content":"我看了一下代码，token的type一直是id。直到case Id_int3:的时候，也就是真的获取了一个完整的&quot;int&quot;的时候，才把type变成int。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1573443247,"ip_address":"","comment_id":138283,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570153871","product_id":100034101,"comment_content":"int处理的部分，有一点疑问，int1状态下ch是空格时，是不应该先将type转id后再init？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469465,"discussion_content":"我看了一下代码，token的type一直是id。直到case Id_int3:的时候，也就是真的获取了一个完整的&amp;quot;int&amp;quot;的时候，才把type变成int。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573443247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1687570,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c0/12/1afb4b75.jpg","nickname":"郑家庄赶大车的老郑","note":"","ucode":"D432A3961840B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24507,"discussion_content":"学习了一下原代码，我没厘清type和state的差别😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570161962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135745,"user_name":"李公子胜治","can_delete":false,"product_type":"c1","uid":1455420,"ip_address":"","ucode":"7D48D78D289935","user_header":"https://static001.geekbang.org/account/avatar/00/16/35/3c/9800b0ba.jpg","comment_is_top":false,"comment_ctime":1569251756,"is_pvip":false,"replies":[{"id":"52072","content":"链接，在后端部分会讲。<br>符号表，在语义分析部分已经讲到了。在后端部分还会去使用它。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1569294810,"ip_address":"","comment_id":135745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569251756","product_id":100034101,"comment_content":"老师，你好，不知道可否讲讲链接和符号表之类的C++编译知识","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468321,"discussion_content":"链接，在后端部分会讲。\n符号表，在语义分析部分已经讲到了。在后端部分还会去使用它。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569294810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133858,"user_name":"fy","can_delete":false,"product_type":"c1","uid":1152186,"ip_address":"","ucode":"EDB661C3A05910","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jsMMDDzhbsTzhicsGZiaeV0PWSnAS0fBlb1r6CsuB32vr3hRwV9UubmfHQx45v7jtaXajPlQ8kQ17b3zpQzHmqVw/132","comment_is_top":false,"comment_ctime":1568685011,"is_pvip":false,"replies":[{"id":"51360","content":"先模仿着课程的示例程序来写。逐步的，你就找到感觉了。<br>只要动手练习，那些似是而非的理解就会变得清晰起来。<br>动手就对了，不管是完全自己写，还是模仿者别人的写！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1568691580,"ip_address":"","comment_id":133858,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568685011","product_id":100034101,"comment_content":"老师，我是先通过读懂你的文本，在想如下写，但写不出来。只好看你的代码！自己写不出来.....","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467535,"discussion_content":"先模仿着课程的示例程序来写。逐步的，你就找到感觉了。\n只要动手练习，那些似是而非的理解就会变得清晰起来。\n动手就对了，不管是完全自己写，还是模仿者别人的写！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568691580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131432,"user_name":"缺个豆饼吗","can_delete":false,"product_type":"c1","uid":1390212,"ip_address":"","ucode":"EF050C820E4E17","user_header":"https://static001.geekbang.org/account/avatar/00/15/36/84/e19b05dd.jpg","comment_is_top":false,"comment_ctime":1567751346,"is_pvip":false,"replies":[{"id":"50767","content":"自己动手，非常好！<br>回头我也可能会拿TS实现一版，给Visual Studio Code做个插件。<br>加油！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1568184475,"ip_address":"","comment_id":131432,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567751346","product_id":100034101,"comment_content":"ts 的实现 https:&#47;&#47;github.com&#47;yuguomin&#47;my-compiler&#47;tree&#47;master&#47;src，感谢老师","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466449,"discussion_content":"自己动手，非常好！\n回头我也可能会拿TS实现一版，给Visual Studio Code做个插件。\n加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568184475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129486,"user_name":"狐狸","can_delete":false,"product_type":"c1","uid":1342498,"ip_address":"","ucode":"B8F5A73AD9DA8B","user_header":"https://static001.geekbang.org/account/avatar/00/14/7c/22/d488bf85.jpg","comment_is_top":false,"comment_ctime":1567137076,"is_pvip":false,"replies":[{"id":"48251","content":"用分号和用换行符来分隔语句，是等价的。只不过用分号的的话，可以尽量压缩一些空白字符，让源代码变少些。性能上应该没有太大差别。<br>这里应该注意的是，无论用分号还是换行符，都是语法规则的构成部分，要在文法中写出来。我们在语法分析的时候，如果遇到这个符号，就意味这个语句已经结束了。否则，我们不知道在哪里“断句”。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1567149999,"ip_address":"","comment_id":129486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567137076","product_id":100034101,"comment_content":"宫老师，看了您的文章，在自己也写了一遍后，有如下思考：请问像google新的js规范中提到语句要用分号&#39;;&#39;结尾。除了在一定程度上提高代码的可读性外，是否也有为了提高编译速度的考虑，毕竟在之前不用分号结尾的时候，js编译是不是还需要考虑断句，弱语法的断句可能需要联系上下文。但是有分号结尾，断句就变得更加简单了。","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465501,"discussion_content":"用分号和用换行符来分隔语句，是等价的。只不过用分号的的话，可以尽量压缩一些空白字符，让源代码变少些。性能上应该没有太大差别。\n这里应该注意的是，无论用分号还是换行符，都是语法规则的构成部分，要在文法中写出来。我们在语法分析的时候，如果遇到这个符号，就意味这个语句已经结束了。否则，我们不知道在哪里“断句”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567149999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129022,"user_name":"SyuuKensyou","can_delete":false,"product_type":"c1","uid":1298149,"ip_address":"","ucode":"F1193867DD299D","user_header":"https://static001.geekbang.org/account/avatar/00/13/ce/e5/f6dea218.jpg","comment_is_top":false,"comment_ctime":1567009332,"is_pvip":false,"replies":[{"id":"48274","content":"对！<br>其实真正动手，往往并不难。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1567151310,"ip_address":"","comment_id":129022,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567009332","product_id":100034101,"comment_content":"发现实际操刀的代码很是简单","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465226,"discussion_content":"对！\n其实真正动手，往往并不难。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567151310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128918,"user_name":"mudfrog","can_delete":false,"product_type":"c1","uid":1506545,"ip_address":"","ucode":"3789D4C231D113","user_header":"","comment_is_top":false,"comment_ctime":1566983318,"is_pvip":false,"replies":[{"id":"48283","content":"我在后面课程尽量贴运行结果。<br>但因为后面的例子太多，如果都贴上来，文稿会太长。<br>我还是建议你用java运行一下例子。不一定要用java修改代码，但跑一跑还是没问题的。<br>另外，课程中介绍的Antlr工具，也是用java写的。所以你还是需要能够运行java程序才行。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1567152936,"ip_address":"","comment_id":128918,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566983318","product_id":100034101,"comment_content":"老师，可以把程序的运行结果截图贴上来么？因为没有学过java，所以想把源程序翻译成为其他的语言，但是不明白具体的操作步骤以及具体的输出。谢谢","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465176,"discussion_content":"我在后面课程尽量贴运行结果。\n但因为后面的例子太多，如果都贴上来，文稿会太长。\n我还是建议你用java运行一下例子。不一定要用java修改代码，但跑一跑还是没问题的。\n另外，课程中介绍的Antlr工具，也是用java写的。所以你还是需要能够运行java程序才行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567152936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1506545,"avatar":"","nickname":"mudfrog","note":"","ucode":"3789D4C231D113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6688,"discussion_content":"我今天装了一个java运行环境，已经可以运行了。请问老师能搞一个论坛么？这几天学习下来，感觉这个编译原理还是比较难的，而且在极客这个页面留言、讨论什么的都不是很方便，如果搞成论坛形式什么的，大家交流和讨论都会更方便一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567050514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128669,"user_name":"yunyun","can_delete":false,"product_type":"c1","uid":1644392,"ip_address":"","ucode":"8F9E66BEFEBD19","user_header":"","comment_is_top":false,"comment_ctime":1566945949,"is_pvip":false,"replies":[{"id":"47787","content":"谢谢肯定！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566957897,"ip_address":"","comment_id":128669,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566945949","product_id":100034101,"comment_content":"老师讲的真好，居然一次就听得很明白了","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465049,"discussion_content":"谢谢肯定！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566957897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127095,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1566552702,"is_pvip":false,"replies":[{"id":"47021","content":"点赞！<br>动手是王道！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566562523,"ip_address":"","comment_id":127095,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566552702","product_id":100034101,"comment_content":"看了github上的代码 然后也跟着敲了两边  彻底搞懂了 这一讲 。  还是需要多读一读 写写代码 ","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464319,"discussion_content":"点赞！\n动手是王道！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566562523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125703,"user_name":"Kai","can_delete":false,"product_type":"c1","uid":1632915,"ip_address":"","ucode":"D98ED73330CBB9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/249LPSDdbibAgvUTTWkGId3Ge6v09OMiavrobv87t2qTLhdtAVjvVyXZc6WgUsD8ib3iaSvBic6wRcDicZ67qE2c0MYQ/132","comment_is_top":false,"comment_ctime":1566228353,"is_pvip":false,"replies":[{"id":"46245","content":"动手去实践，才能真正学会！<br>为你点赞！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566273964,"ip_address":"","comment_id":125703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566228353","product_id":100034101,"comment_content":"用c++ 改写老师的代码，争取跟得上<br><br>https:&#47;&#47;github.com&#47;kai-xie&#47;play-with-compiler","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463669,"discussion_content":"动手去实践，才能真正学会！\n为你点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566273964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125513,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1566197638,"is_pvip":false,"replies":[{"id":"46098","content":"是。一样的。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566210285,"ip_address":"","comment_id":125513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566197638","product_id":100034101,"comment_content":"有限状态机  让我想到了 设计模式中的 状态模式 又称状态机模式","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463590,"discussion_content":"是。一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566210285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125512,"user_name":"冲","can_delete":false,"product_type":"c1","uid":1149914,"ip_address":"","ucode":"4191C8A4DF3840","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIk46cor5XVFTPZbPOnb7pViabgy450pobo46hRHFQz5nR5ocYRKIzC8vShic36vwa553H4Vj50x5wA/132","comment_is_top":false,"comment_ctime":1566197372,"is_pvip":false,"replies":[{"id":"46099","content":"1.状态有可能是中间状态，中间状态不能成为一个真正的Token。<br>2.就算是两个可以成为Token的状态，它们的type也可以是一样的，比如&gt;和&gt;=可以归为同一类。<br><br>建议你一定要跑一跑示例程序，并且动手改一改。这个时候你就会深入理解了！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566210474,"ip_address":"","comment_id":125512,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566197372","product_id":100034101,"comment_content":"问下老师这两个变量的区别在哪？ nextState， token.type，不是特别明白","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463589,"discussion_content":"1.状态有可能是中间状态，中间状态不能成为一个真正的Token。\n2.就算是两个可以成为Token的状态，它们的type也可以是一样的，比如&amp;gt;和&amp;gt;=可以归为同一类。\n\n建议你一定要跑一跑示例程序，并且动手改一改。这个时候你就会深入理解了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566210474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014408,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/88/b787338a.jpg","nickname":"devna","note":"","ucode":"A175FE9B73D773","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5371,"discussion_content":"我理解nextState是真正的状态机下一步要进入的状态，是词法分析过程中的一个中间状态。token.type目前看只有在最终打印结果的时候会用到，我想可能在之后的语法分析中也会用到。希望老师帮忙斧正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566208952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125292,"user_name":"M1racle","can_delete":false,"product_type":"c1","uid":1057144,"ip_address":"","ucode":"CFA981F34AFDA8","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/78/732a2e33.jpg","comment_is_top":false,"comment_ctime":1566139915,"is_pvip":true,"replies":[{"id":"46010","content":"你看得很细致！<br>是的。在我们的示例中，遇到不认识的字符，都会调到初始状态去。在初始状态的处理代码中，把空白字符都忽略了。<br>","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566173881,"ip_address":"","comment_id":125292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566139915","product_id":100034101,"comment_content":"再不用正则的情况下只能一个字符一个字符的判定么？那是不是还得考虑空格啥的情况适时跳出当前判定重新进入初始化阶段呢？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463515,"discussion_content":"你看得很细致！\n是的。在我们的示例中，遇到不认识的字符，都会调到初始状态去。在初始状态的处理代码中，把空白字符都忽略了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566173881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125231,"user_name":"Joe Black","can_delete":false,"product_type":"c1","uid":1052528,"ip_address":"","ucode":"21FE222A286445","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/70/c8680841.jpg","comment_is_top":false,"comment_ctime":1566124656,"is_pvip":false,"replies":[{"id":"45980","content":"tokenText是一个临时变量，用的StringBuffer类型。你可以参考一下代码文件，在文稿末尾有链接。因为文稿里我们只截取了一些片段，所以可能会看不清楚: )","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566136215,"ip_address":"","comment_id":125231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566124656","product_id":100034101,"comment_content":"文中的tokenText.append(ch)是不是应该改为token.text.append(ch)？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463489,"discussion_content":"tokenText是一个临时变量，用的StringBuffer类型。你可以参考一下代码文件，在文稿末尾有链接。因为文稿里我们只截取了一些片段，所以可能会看不清楚: )","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566136215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125158,"user_name":"MwumLi","can_delete":false,"product_type":"c1","uid":1274328,"ip_address":"","ucode":"9A8A72334ADF6E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLicryBoLjDicckia0c5bkOoAlYoR2I9NMK8BiaD7HCGxhS1eM9YSfDuUJuZC90uwv9FvHIVSsBoxFgZw/132","comment_is_top":false,"comment_ctime":1566102032,"is_pvip":true,"replies":[{"id":"45901","content":"嗯。对的。代码修改的时候，文稿没有同步。我们马上改一下。<br>谢谢你的仔细阅读！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566123745,"ip_address":"","comment_id":125158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566102032","product_id":100034101,"comment_content":"nextState 是什么？没看到呀，是文稿中 newState 吗","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463456,"discussion_content":"嗯。对的。代码修改的时候，文稿没有同步。我们马上改一下。\n谢谢你的仔细阅读！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566123745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124845,"user_name":"幻月剑","can_delete":false,"product_type":"c1","uid":1120906,"ip_address":"","ucode":"44F7B62F5CB4E9","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/8a/ae50ecbb.jpg","comment_is_top":false,"comment_ctime":1566005105,"is_pvip":false,"replies":[{"id":"45829","content":"是的，支持正则让很多工具变得很灵活。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1566022167,"ip_address":"","comment_id":124845,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566005105","product_id":100034101,"comment_content":"原来正则表达式是词法分析器！<br>之前一直没想过，只知道正则在处理字符串和内容上特别有用<br>正则强大的地方，个人觉得在搜索的地方，特别有用，支持正则和不支持正则，就是两个搜索","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463340,"discussion_content":"是的，支持正则让很多工具变得很灵活。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566022167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124844,"user_name":"幻月剑","can_delete":false,"product_type":"c1","uid":1120906,"ip_address":"","ucode":"44F7B62F5CB4E9","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/8a/ae50ecbb.jpg","comment_is_top":false,"comment_ctime":1566004973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566004973","product_id":100034101,"comment_content":"原来正则表达式是词法","like_count":0},{"had_liked":false,"id":124706,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565948456,"is_pvip":false,"replies":[{"id":"45784","content":"谢谢鼓励！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565955540,"ip_address":"","comment_id":124706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565948456","product_id":100034101,"comment_content":"老师讲得好啊，之前看到词法分析什么的就是一脸蒙蔽，看了老师的这篇文章，醍醐灌顶啊，讲得好！老师牛逼。加油。","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463286,"discussion_content":"谢谢鼓励！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565955540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124673,"user_name":"小广","can_delete":false,"product_type":"c1","uid":1263294,"ip_address":"","ucode":"9738E8DCEF9E3C","user_header":"https://static001.geekbang.org/account/avatar/00/13/46/be/d3040f9e.jpg","comment_is_top":false,"comment_ctime":1565941339,"is_pvip":false,"replies":[{"id":"45778","content":"文稿中版本的算法，是再转一圈，跑到第26行那里去处理，在那里把状态变成Id，你看一下。当时的思路是把Int看成一个大状态，里面包含几个小状态，所以在Case Int那里统一离开这个状态。<br><br>后来的版本是简化了的，没有case Int这个环节了，你参考一下这里的代码：<br>https:&#47;&#47;github.com&#47;RichardGong&#47;PlayWithCompiler&#47;blob&#47;master&#47;lab&#47;craft&#47;SimpleLexer.java<br><br>谢谢你提出的这个问题！","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565952260,"ip_address":"","comment_id":124673,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565941339","product_id":100034101,"comment_content":" 老师你好，第7段代码中，第7行和19行的代码是不是应该从&quot;state = DfaState.Int&quot;改为&quot;state = DfaState.Id&quot;呢，因为已经没有和int匹配上，需要被理解为标识符了，不知道我理解是否有问题呢？","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463272,"discussion_content":"文稿中版本的算法，是再转一圈，跑到第26行那里去处理，在那里把状态变成Id，你看一下。当时的思路是把Int看成一个大状态，里面包含几个小状态，所以在Case Int那里统一离开这个状态。\n\n后来的版本是简化了的，没有case Int这个环节了，你参考一下这里的代码：\nhttps://github.com/RichardGong/PlayWithCompiler/blob/master/lab/craft/SimpleLexer.java\n\n谢谢你提出的这个问题！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565952260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1263294,"avatar":"https://static001.geekbang.org/account/avatar/00/13/46/be/d3040f9e.jpg","nickname":"小广","note":"","ucode":"9738E8DCEF9E3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5120,"discussion_content":"感谢老师的回复^ - ^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565961244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124564,"user_name":"雲至","can_delete":false,"product_type":"c1","uid":1568487,"ip_address":"","ucode":"47E2D099322BB1","user_header":"https://static001.geekbang.org/account/avatar/00/17/ee/e7/4375e97c.jpg","comment_is_top":false,"comment_ctime":1565921591,"is_pvip":false,"replies":[{"id":"45751","content":"你是指正文和代码里写的不一致吗？<br>在正文里，我和编辑都是统一用大写的Token。但在代码里，变量名称可能用小写的。<br>不知道是否解决了你的疑问。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565923967,"ip_address":"","comment_id":124564,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565921591","product_id":100034101,"comment_content":"<br>老师  问下token和Token是什么关系呢？  <br>","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463226,"discussion_content":"你是指正文和代码里写的不一致吗？\n在正文里，我和编辑都是统一用大写的Token。但在代码里，变量名称可能用小写的。\n不知道是否解决了你的疑问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565923967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1568487,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ee/e7/4375e97c.jpg","nickname":"雲至","note":"","ucode":"47E2D099322BB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5083,"discussion_content":"谢谢老师   这就明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565930814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124563,"user_name":"雨泽Kresnik Zero","can_delete":false,"product_type":"c1","uid":1632408,"ip_address":"","ucode":"5853255E32ADEE","user_header":"https://static001.geekbang.org/account/avatar/00/18/e8/98/8cc47c5a.jpg","comment_is_top":false,"comment_ctime":1565921544,"is_pvip":false,"replies":[{"id":"45752","content":"看来你喜欢钻研底层技术:)","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565924008,"ip_address":"","comment_id":124563,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565921544","product_id":100034101,"comment_content":"想赶快能学到整个课程的第二部分","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463225,"discussion_content":"看来你喜欢钻研底层技术:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565924008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124537,"user_name":"Fan","can_delete":false,"product_type":"c1","uid":1115232,"ip_address":"","ucode":"3BF28670FD9407","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","comment_is_top":false,"comment_ctime":1565917799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565917799","product_id":100034101,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":124498,"user_name":"ヾ(◍°∇°◍)ﾉﾞ","can_delete":false,"product_type":"c1","uid":1044175,"ip_address":"","ucode":"89545632BDA56E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","comment_is_top":false,"comment_ctime":1565913143,"is_pvip":false,"replies":[{"id":"45732","content":"现在好像哪门语言的正则工具都挺完善。因为都想拥有灵活处理文本的能力。<br>当然还是有的语言在细节上更强。","user_name":"作者回复","user_name_real":"宫文学Richard","uid":"1543380","ctime":1565919653,"ip_address":"","comment_id":124498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565913143","product_id":100034101,"comment_content":"正则程序中用的比较多的是账号，手机号，身份证，IP等的匹配，因正则而强大的应该是perl脚本语言了吧","like_count":0,"discussions":[{"author":{"id":1543380,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/d4/5972b7cc.jpg","nickname":"宫文学Richard","note":"","ucode":"09EADF0CB62C91","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463203,"discussion_content":"现在好像哪门语言的正则工具都挺完善。因为都想拥有灵活处理文本的能力。\n当然还是有的语言在细节上更强。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565919653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}