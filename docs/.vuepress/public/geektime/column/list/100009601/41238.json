{"id":41238,"title":"44 | 测试先行：测试驱动开发(TDD)","content":"<p>你好，我是茹炳晟。今天我和你分享的主题是“测试先行：测试驱动开发（TDD）”。</p>\n<p>通过上一篇文章，我们已经深入理解了什么是探索式测试，以及如何用探索式测试开展具体的测试。今天我这次分享的目的，就是和你聊聊软件测试领域中的另一个很热门的话题：测试驱动开发，也就是Test-Driven Development，通常简称为TDD。</p>\n<p>听上去有些迷惑是不是？测试怎么可能驱动开发呢？在传统软件的开发流程中，软件开发人员先开发好功能代码，再针对这些功能设计测试用例、实现测试脚本，以此保证开发的这些功能的正确性和稳定性。那么，TDD从字面上理解就是要让测试先行，这又是怎么一回事呢？</p>\n<p>确切地说，TDD并不是一门技术，而是一种开发理念。它的核心思想，是在开发人员实现功能代码前，先设计好测试用例的代码，然后再根据测试用例的代码编写产品的功能代码，最终目的是让开发前设计的测试用例代码都能够顺利执行通过。</p>\n<p>这样对于开发人员来说，他就需要参与到这个功能的完整设计过程中，而不是凭自己想象去开发一个功能。他有一个非常明确的目标，就是要让提前设计的测试用例都可以顺利通过，为此，他先实现测试用例要求的功能，再通过不断修改和完善，让产品代码可以满足测试用例，可以说是“小而美”的开发过程。</p><!-- [[[read_end]]] -->\n<p>所以，从本质上来讲，TDD并不属于测试技术的范畴。那么，我为什么还要单独用一篇文章和你分享这个主题呢？因为，TDD中通常会用到很多常见的自动化测试技术，使得测试在整个软件生命周期中的重要性和地位得到了大幅提升。</p>\n<p>可以说，TDD的思想和理念给软件研发流程带来了颠覆性的变化，使得测试工作从原本软件研发生命周期的最后端走向了最前端。也就是说，原本测试工作是软件研发生命周期最后的一个环节，而现在TDD相当于把测试提到了需求定义的高度，跑到了软件研发生命周期最前面。</p>\n<p>那么，接下来我们就一起看看TDD的优势有哪些，以及TDD的具体实施过程。</p>\n<h2>TDD的优势</h2>\n<p>TDD的优势，可以概括为以下五个方面：</p>\n<ol>\n<li><strong>保证开发的功能一定是符合实际需求的。</strong></li>\n</ol>\n<p>用户需求才应该是软件开发的源头，但在实际的软件开发过程中，往往会在不知情的情况下，或者自己的主观判断下，开发出一个完全没有实际应用场景的功能。而这些没有实际应用场景的功能，却因为产品验证和测试工作介入的时机都在项目后期，所以往往在集成测试中或者产品上线后才会被发现。</p>\n<p>比如，开发人员在实现用户注册的功能时，认为需要提供使用手机号注册的功能。但是，这个功能开发完成后，测试人员却告知开发人员这个功能用不上，或者产品上线后才发现这个功能在实际场景中完全不是必须的，因为用户可以使用邮箱注册，然后再通过绑定手机号实现手机号登陆。所以，直接用手机号注册这个功能是不需要的，真正需要的是绑定邮箱和手机号的功能。</p>\n<p>试想一下，如果是测试驱动开发，即先根据用户的实际需求编写测试用例，再根据测试用例来完成功能代码，就不会出现这种既浪费时间、精力，又没有必要的功能了。</p>\n<ol start=\"2\">\n<li><strong>更加灵活的迭代方式。</strong></li>\n</ol>\n<p>传统的需求文档，往往会从比较高的层次去描述功能。开发人员面对这种抽象的需求文档，往往会感觉无从下手。但是，在TDD的流程里，需求是以测试用例描述的，非常具体。那么，开发人员拿到这样的需求时，就可以先开发一个很明确的、针对用户某一个小需求的功能代码。</p>\n<p>在开发过程中，开发人员可以不断的调试这个功能，通过测试-&gt;失败-修改/重构-&gt;测试-&gt;成功的过程，使开发的代码符合预期，而不是等所有功能开发完成后，再将一个笨重的产品交给测试人员进行一个长周期的测试，发现缺陷后再整个打回来修改，然后由此又可能会引入新的缺陷。</p>\n<p>另外，如果用户需求有变化，我们能够很快地定位到要修改的功能，从而实现快速修改。</p>\n<ol start=\"3\">\n<li><strong>保证系统的可扩展性。</strong></li>\n</ol>\n<p>为了满足测试先行的灵活迭代方式，我们会要求开发人员设计更松耦合的系统，以保证它的可扩展性和易修改性。这就要求，开发人员在设计系统时，要考虑它的整体架构，搭建系统的骨架，提供规范的接口定义而非具体的功能类。</p>\n<p>这样，当用户需求有变化时，或者有新增测试用例时，能够通过设计的接口快速实现新功能，满足新的测试场景。</p>\n<ol start=\"4\">\n<li><strong>更好的质量保证。</strong></li>\n</ol>\n<p>TDD要求测试先于开发，也就是说在每次新增功能时，都需要先用测试用例去验证功能是否运行正常，并运行所有的测试来保证整个系统的质量。在这个测试先行的过程中，开发人员会不断调试功能模块、优化设计、重构代码，使其能够满足所有测试场景。所以，很多的代码实现缺陷和系统设计漏洞，都会在这个不断调优的过程中暴露出来。</p>\n<p>也就是说，TDD可以保证更好的产品质量。</p>\n<ol start=\"5\">\n<li><strong>测试用例即文档。</strong></li>\n</ol>\n<p>因为在TDD过程中编写的测试用例，首先一定是贴合用户实际需求的，然后又在开发调试的过程中经过了千锤百炼，即一定是符合系统的业务逻辑的，所以我们直接将测试用例生成需求文档。</p>\n<p>这里，直接将测试用例生成需求文档的方法有很多、很简单的方法，比如JavaDoc。</p>\n<p>这样，我们就无须再花费额外的精力，去撰写需求文档了。</p>\n<p>你看，TDD真的是优势多多吧。那么，接下来我们就一起来看看实施TDD的具体过程。</p>\n<h2>测试驱动开发的实施过程</h2>\n<p>站在全局的角度来看，TDD的整个过程遵循以下流程：</p>\n<ol>\n<li>\n<p>为需要实现的新功能添加一批测试；</p>\n</li>\n<li>\n<p>运行所有测试，看看新添加的测试是否失败；</p>\n</li>\n<li>\n<p>编写实现软件新功能的实现代码；</p>\n</li>\n<li>\n<p>再次运行所有的测试，看是否有测试失败；</p>\n</li>\n<li>\n<p>重构代码；</p>\n</li>\n<li>\n<p>重复以上步骤直到所有测试通过。</p>\n</li>\n</ol>\n<p>接下来，我们就通过一个具体的例子，来看看TDD的整个流程吧。</p>\n<p>我们现在要实现这么一个功能：用户输入自己的生日，就可以输出还要多少天到下次生日。</p>\n<p>根据TDD测试先行的原则，我们<strong>首先要做的是设计测试用例。</strong></p>\n<p>测试用例一，用户输入空字符串或者null：</p>\n<pre><code>@Test\n//测试输入空字符串null时，是否抛出&quot;Birthday should not be null or empty&quot;异常\npublic void birthdayIsNull() {\n    RuntimeException exception = null;\n    try {\n        BirthdayCaculator.caculate(null);\n    }catch(RuntimeException e) {\n       exception = e;\n    }\n    Assert.assertNotNull(exception);\n    Assert.assertEquals(exception.getMessage(), &quot;Birthday should not be null or empty&quot;);\n}\n\n@Test\n//测试输入空字符串&quot;&quot;时，是否抛出&quot;Birthday should not be null or empty&quot;异常\npublic void birthdayIsEmpty() {\n    RuntimeException exception = null;\n    try {\n        BirthdayCaculator.caculate(&quot;&quot;);\n    }catch(RuntimeException e) {\n        exception = e;\n    }\n    Assert.assertNotNull(exception);\n    Assert.assertEquals(exception.getMessage(), &quot;Birthday should not be null or empty&quot;);\n}\n</code></pre>\n<p>根据这个测试用例，我们可以很容易地写出这部分的Java代码：</p>\n<pre><code>public static int caculate(String birthday) {\n    if(birthday == null || birthday.isEmpty()) {\n        throw new RuntimeException(&quot;Birthday should not be null or empty&quot;);\n    }\n}\n</code></pre>\n<p>测试用例二，用户输入的生日格式不符合YYYY-MM-dd的格式：</p>\n<pre><code>@Test\n//测试输入错误的时间格式，是否抛出&quot;Birthday format is invalid!&quot;异常\npublic void birthdayFormatIsInvalid() {\n    RuntimeException exception = null;\n    try {\n        BirthdayCaculator.caculate(&quot;Sep 3, 1996&quot;);\n    }catch(RuntimeException e) {\n        exception = e;\n    }\n    Assert.assertNotNull(exception);\n    Assert.assertEquals(exception.getMessage(), &quot;Birthday format is invalid！&quot;);\n}\n</code></pre>\n<p>那么，这部分的Java代码实现便要catch住ParseException, 重新自定义错误信息并抛出异常。</p>\n<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);\nCalendar birthDate = Calendar.getInstance();\ntry {\n    //使用SimpleDateFormat来格式化输入日期值\n    birthDate.setTime(sdf.parse(birthday));\n} catch (ParseException e) {\n    throw new RuntimeException(&quot;Birthday format is invalid!&quot;);\n}\n</code></pre>\n<p>测试用例三，用户输入的生日格式正确，但是今年的生日已经过了，就应该返回离明年的生日还有多少天：</p>\n<pre><code>@Test\n//测试用户输入的日期晚于今年生日的情况，判断是否返回离明年的生日有多少天\npublic void thisYearBirthdayPassed() {\n    Calendar birthday = Calendar.getInstance();\n    birthday.add(Calendar.DATE, -1);\n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;YYYY-MM-dd&quot;);\n    String date = sdf.format(birthday.getTime());\n    int days = BirthdayCaculator.caculate(date);\n    //天数不应该出现负数\n    Assert.assertTrue(days &gt; 0);\n}\n</code></pre>\n<p>测试用例四，用户输入的生日格式正确且今年生日还没过，返回的结果应该不大于365天：</p>\n<pre><code>@Test\n//测试用户输入的日期早于今年生日的情况，判断返回的天数是否小于365\npublic void thisYearBirthdayNotPass() {\n    Calendar birthday = Calendar.getInstance();\n    birthday.add(Calendar.DATE, 5);\n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;YYYY-MM-dd&quot;);\n    String date = sdf.format(birthday.getTime());\n    int days = BirthdayCaculator.caculate(date);\n    //天数不应该大于一年的天数，365天\n    Assert.assertTrue(days &lt; 365);\n}\n</code></pre>\n<p>测试用例五，用户输入的生日格式正确并且是今天，返回的结果应该为0：</p>\n<pre><code>@Test\n//测试用户输入的日期恰好等于今年生日的情况，判断返回的天数是否是0\npublic void todayIsBirthday() {\n    Calendar birthday = Calendar.getInstance();\n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;YYYY-MM-dd&quot;);\n    String date = sdf.format(birthday.getTime());\n    int days = BirthdayCaculator.caculate(date);\n    Assert.assertEquals(days, 0);\n}\n</code></pre>\n<p>综合上述五种测试场景，根据测试用例，我们可以编写完整的功能代码覆盖所有类型的用户输入，完整代码如下：</p>\n<pre><code>public static int caculate(String birthday) {\n    //首先对输入的日期是否是null或者是&quot;&quot;进行判断\n    if(birthday == null || birthday.isEmpty()) {\n        throw new RuntimeException(&quot;Birthday should not be null or empty&quot;);\n    }\n    \n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);\n    Calendar today = Calendar.getInstance();\n    \n    //处理输入的日期恰好等于今年生日的情况\n    if(birthday.equals(sdf.format(today.getTime()))) {\n        return 0;\n    }\n    \n    //输入日期格式的有效性检查\n    Calendar birthDate = Calendar.getInstance();\n    try {\n        birthDate.setTime(sdf.parse(birthday));\n    } catch (ParseException e) {\n        throw new RuntimeException(&quot;Birthday format is invalid!&quot;);\n    }\n    birthDate.set(Calendar.YEAR, today.get(Calendar.YEAR));\n    \n    //实际计算的逻辑\n    int days;\n    if (birthDate.get(Calendar.DAY_OF_YEAR) &lt; today.get(Calendar.DAY_OF_YEAR)) {\n        days = today.getActualMaximum(Calendar.DAY_OF_YEAR) - today.get(Calendar.DAY_OF_YEAR);\n        days += birthDate.get(Calendar.DAY_OF_YEAR);\n    } else {\n        days = birthDate.get(Calendar.DAY_OF_YEAR) - today.get(Calendar.DAY_OF_YEAR);\n    }\n    return days;\n}\n</code></pre>\n<p>以上场景，每添加一个新的功能点，都会添加一个测试方法；完成新功能点的软件代码后，接着运行当前所有的测试用例，以保证新加的功能代码能够满足现有的测试需求。这就是一个典型的TDD过程了。但是，在实际开发场景，肯定会更复杂， 你想要用TDD思想写出健壮稳定的代码，就需要深入理解TDD中的每一步。</p>\n<p><strong>首先，需要控制TDD测试用例的粒度</strong>。如果测试用例并不是最小粒度的单元测试，开发人员就不能不假思索地直接根据测试用例开发功能代码，而应该先把测试用例分解成更小粒度的任务列表，保证每一个任务列表都是一个最小的功能模块。</p>\n<p>在开发过程中，要把测试用例当成用户，不断分析他可能会怎样调用这个功能，大到功能的设计是用类还是接口，小到方法的参数类型，都要充分考虑到用户的使用场景。</p>\n<p><strong>其次，要注意代码的简洁和高效</strong>。随着功能代码的增加，开发人员为了让测试能顺利通过，很可能会简单粗暴地使用复制粘贴来完成某个功能，而这就违背了TDD的初衷，本来是为了写出更优雅的代码，结果反而造成了代码冗余混乱。因此，在开发-测试循环过程中，我们要不断地检查代码，时刻注意是否有重复代码、以及不需要的功能，将功能代码变得更加高效优雅。</p>\n<p><strong>最后，通过重构保证最终交付代码的优雅和简洁</strong>。所有功能代码都完成，所有测试都通过之后，我们就要考虑重构了。这里可以考虑类名、方法名甚至变量名命名，是否规范且有意义，太长的类可以考虑拆分；从系统角度检查是否有重复代码，是否有可以合并的代码，你也可以参考市面上比较权威的关于重构的书完成整个系统的重构和优化。这里我建议你阅读Martin Fowler的《重构：改善既有代码的设计》这本书。</p>\n<p><strong>总的来说，TDD有其优于传统开发的特点，但在实际开发过程中，我们应该具体场景具体分析。</strong></p>\n<p>比如，最典型的一个场景就是，一个旧系统需要翻新重做，并且针对这个老系统已经有很多不错的测试用例了，这就很适合选用TDD。</p>\n<p>总之，我们可以通过分析当前的时间、人、方式、效果各要素来最终决定是否选用TDD。另外，需要特别注意的是，选用TDD并不是测试人员或者测试部门的事情，而是需要公司层面的流程和体系的配合，也正是这种原因，虽然大家都能看到TDD的优势，但是在实际项目中的运用还是比较有限。</p>\n<h2>总结</h2>\n<p>今天我和你分享了测试驱动开发的核心理念，以及TDD的优势。</p>\n<p>TDD的核心思想便是在开发人员实现功能代码前，先设计好测试用例，编写测试代码，然后再针对新增的测试代码来编写产品的功能代码，最终目的是让新增的测试代码能够通过。</p>\n<p>相对于传统软件开发流程，TDD的优势主要包括对需求精准的把控、更灵活的迭代、促使更好的系统设计、更好的交付质量以及轻量级的文档等。</p>\n<p>最后，我用用“用户输入自己的生日，就可以输出还要多少天到下次生日”作为例子，展示了测试驱动开发的完整流程，希望帮助你对TDD有更直观的认识。</p>\n<h2>思考题</h2>\n<p>在实际的工程项目中，你实际使用过TDD吗？如果有的话，是否可以分享一下你的实践心得？如果没有的话，你是否可以设象一下你会怎么规划和设计一个TDD的项目？</p>\n<p>感谢你的收听，欢迎你给我留言一起讨论。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"43 | 发挥人的潜能：探索式测试","id":41203},"right":{"article_title":"45 | 打蛇打七寸：精准测试","id":41368}},"comments":[{"had_liked":false,"id":83970,"user_name":"秦浩然","can_delete":false,"product_type":"c1","uid":1087101,"ip_address":"","ucode":"08BF98B6219E53","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/7d/50fc447e.jpg","comment_is_top":false,"comment_ctime":1554740781,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"181943367213","product_id":100009601,"comment_content":"虽然 TDD 并不适合所有项目，但是将 TDD 思想放大到整个开发流程上，我总结了一套开发流程，请大家参考。<br><br>所有人员参与需求评审 -&gt; 测试人员编写测试用例 -&gt; 所有人员参与用例评审 -&gt; 开发人员按照测试用例进行编码 -&gt; 开发人员执行用例，进行自测，所有用例通过后 -&gt; 开发人员提测 -&gt; 测试人员进行测试。<br><br>其中的好处个人觉得主要有两点：<br>1. 在编码前完成测试用例，可减少开发中需求变更带来的风险。因为在写测试用例的时候，会对需求进行深度分析，思考需求是否合理，在我的经验中，测试组一定会发现不合理的需求，如果这些不合理的需求在编码前就被发现，后面返工的几率就小很多；<br>2. 在自测环节，开发人员保证所有用例都通过，可以减少测试环节的轮次。因为如果提测质量太差，会增加测试人员和开发人员沟通成本，如果一些基本问题能在自测环节解决，那测试人员会有更多精力放在探索性测试、压力测试、整体功能回归等测试中。<br><br>总而言之，如果能达到“缩短发布周期，提高发布质量”的目的，都是好方法。","like_count":43,"discussions":[{"author":{"id":1133496,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4b/b8/6d3ed13d.jpg","nickname":"依然范德彪","note":"","ucode":"F17B91BF0AA61A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274352,"discussion_content":"前几年我刚毕业时，在新浪做测试，流程就是这样的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1590572677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1824119,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK6xc7vGca4Kv6ShoXVr2skyGDfic0jxRicU6rLzXAyj6iaJZldLMvuXuiahsghZR8CTLdHBtqoIuibhmA/132","nickname":"ghost","note":"","ucode":"8F99ACAEEF7EB6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225234,"discussion_content":"本质上是把需求分析的过程开发和测试换了位置，测试来做主导。\n1、首先测试能力要求要高，非常了解业务，测试用例的粒度也要足够细。\n2、测试资源投入不能低，就是测试开发比不能很低，要不然测试时间和抗风险能力（人员调休/离职/）比较差。\n3、需要有类似的团队文化，因为测试用例是会在测试过程中添加的（探索性测试）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586353047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637019,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/9b/17e188fd.jpg","nickname":"滚筒洗衣机","note":"","ucode":"389E3D5DA37F68","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579943,"discussion_content":"我们部门 研发流程就是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657782036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319515,"discussion_content":"上家公司做云计算平台用的流程就是这样，测试对需求理解能力要求较高，用例评审不通过需要重复评审，软件质量还是不错的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604043173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014806,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","nickname":"mgxian","note":"","ucode":"7B7E77E6A83B87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29578,"discussion_content":"测试人员编写测试用例这个要求可能比编码要求都要难实现，如果想写出好的测试用例，必须要求有很好的代码能力，这可能就要求测试人员的代码功力要和开发差不多，或者可能比开发还好，那还要开发干什么呢，测试直接把业务代码也写了不就好了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570774382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1569736,"avatar":"https://static001.geekbang.org/account/avatar/00/17/f3/c8/80185760.jpg","nickname":"Agori","note":"","ucode":"05FBC2E90F7869","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1014806,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","nickname":"mgxian","note":"","ucode":"7B7E77E6A83B87","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32472,"discussion_content":"测试人员不用写代码，只是用文字设计测试用例，考察测试人员对业务的理解能力了，再用例评审，可以确保产品、开发、测试 需求理解一致","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571040827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29578,"ip_address":""},"score":32472,"extra":""}]},{"author":{"id":1594470,"avatar":"https://static001.geekbang.org/account/avatar/00/18/54/66/5e52fbb9.jpg","nickname":"绿箩","note":"","ucode":"D89C80690FBD13","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4929,"discussion_content":"1、测试人员编写测试用例这个时间段开发做什么呢？\n2、实际上很多项目在开发过程中会有变动，比如需求变更，开发实现不了的功能\n3、这种模式项目周期会更长","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565838113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1737995,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/85/0b/747e1f89.jpg","nickname":"mark_bo","note":"","ucode":"8E588EE85F561F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1594470,"avatar":"https://static001.geekbang.org/account/avatar/00/18/54/66/5e52fbb9.jpg","nickname":"绿箩","note":"","ucode":"D89C80690FBD13","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71555,"discussion_content":"测试人员在写测试用例的时候，开发写技术设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575432803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4929,"ip_address":""},"score":71555,"extra":""},{"author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":1594470,"avatar":"https://static001.geekbang.org/account/avatar/00/18/54/66/5e52fbb9.jpg","nickname":"绿箩","note":"","ucode":"D89C80690FBD13","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":123004,"discussion_content":"开发写这个任务代码的时候，测试在写下个任务的用例。\n这个模式是为了提高开发自测质量，减少回归bug时间。\n这样调整了顺序，大家都没有多做事情，提测质量高了，时间也缩短了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578385135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4929,"ip_address":""},"score":123004,"extra":""}]},{"author":{"id":1270292,"avatar":"https://static001.geekbang.org/account/avatar/00/13/62/14/1a219456.jpg","nickname":"꧁༺Eve Pan༻꧂","note":"","ucode":"588C887866D052","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4916,"discussion_content":"和我之前推行的开发模式很像，只是我用检查点来代替了测试用例。需求分析-测试检查点-开发（测试开始准备具体的测试用例）-开发自测-测试测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565831580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122492,"user_name":"刘海贤","can_delete":false,"product_type":"c1","uid":1167033,"ip_address":"","ucode":"C93E42DEEAEF32","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/b9/347e9704.jpg","comment_is_top":false,"comment_ctime":1565407584,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"14450309472","product_id":100009601,"comment_content":"做到TDD这样的流程，目前国内我是不知道有哪些公司。另外，这样的研发改革，是不是开发可有可无了？因为实现这些功能测试同学都可以去完成了哈。。。","like_count":4,"discussions":[{"author":{"id":2062975,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/7f/4bce9aff.jpg","nickname":"东方不败之鸭梨","note":"","ucode":"C590EEC03BCFFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384495,"discussion_content":"代码还是开发在写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626616763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288985,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcFhGY0NV4kFzOSXWDHR2lrI2UbUP4Y016GOnpTH7dqSbicqJarX0pHxMsfLopRiacKEPXLx7IHHqg/132","nickname":"一路前行","note":"","ucode":"32D3C715690783","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353245,"discussion_content":"TDD思想中的测试用例代码可以由开发人员来编写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615092333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319529,"discussion_content":"TDD还是有许多公司在用，不然这个词也不会这么火，测试能写测试用例，但开发代码功能还是相对比较弱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604044145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30748,"user_name":"叶夏立","can_delete":false,"product_type":"c1","uid":1184057,"ip_address":"","ucode":"0A756C4553D4BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/39/f7dcc2e6.jpg","comment_is_top":false,"comment_ctime":1538987997,"is_pvip":false,"replies":[{"id":"11356","content":"很高的问题，首先就像你说的，不是所有的项目都适合tdd，而且采用tdd对测试人员的要求会很高。我的建议是一些小型的poc项目，或者是功能相对单一的微服务开发是比较适合tdd的。另外，要推动tdd，一定需要改革整个研发的流程，这个往往是十分困难的，也正是这个原因，实际开展tdd的项目也不是很多。","user_name":"作者回复","comment_id":30748,"uid":"1002226","ip_address":"","utype":1,"ctime":1539250783,"user_name_real":"dhrbc"}],"discussion_count":1,"race_medal":0,"score":"14423889885","product_id":100009601,"comment_content":"tdd怎么样做才能落实到项目中，我觉得这才是核心问题，当然不是所有的项目都适合tdd。不知道茹老师是否能分享一下tdd落地推动的做法？","like_count":3,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426081,"discussion_content":"很高的问题，首先就像你说的，不是所有的项目都适合tdd，而且采用tdd对测试人员的要求会很高。我的建议是一些小型的poc项目，或者是功能相对单一的微服务开发是比较适合tdd的。另外，要推动tdd，一定需要改革整个研发的流程，这个往往是十分困难的，也正是这个原因，实际开展tdd的项目也不是很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539250783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101709,"user_name":"a坚果","can_delete":false,"product_type":"c1","uid":1127277,"ip_address":"","ucode":"9FC180E18E8789","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/6d/25b6554f.jpg","comment_is_top":false,"comment_ctime":1559921332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10149855924","product_id":100009601,"comment_content":"有一本书就是《测试驱动开发》，老外写的，使用python需要，TDD的思想开发的一个项目，对这方面有需要了解和学习的可以去看看。<br>欢迎大家关注我的微信公众号「软件测试艺术」，一起交流，一起学习。","like_count":2},{"had_liked":false,"id":83942,"user_name":"秦浩然","can_delete":false,"product_type":"c1","uid":1087101,"ip_address":"","ucode":"08BF98B6219E53","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/7d/50fc447e.jpg","comment_is_top":false,"comment_ctime":1554736564,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10144671156","product_id":100009601,"comment_content":"确实要考虑项目的适用性，如果对于试水项目、用户需求不确定的，就不太合适了。后期需求频繁变更的话，测试的维护成本也是很高的。","like_count":3,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319530,"discussion_content":"敏捷开发模式下且公司只维护自己的一个APP或网站，非常适合推动TDD，每次迭代的功能不多，产出效益可观。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604044579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230130,"user_name":"Yin","can_delete":false,"product_type":"c1","uid":1513803,"ip_address":"","ucode":"3529971BAB4CEC","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/4b/c09c60e6.jpg","comment_is_top":false,"comment_ctime":1593270702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888237998","product_id":100009601,"comment_content":"有一点不太理解，以文中计算距离下一次生日天数的例子来说，在我理解看来，所编写的测试代码也正是要实现的业务代码啊，有些困惑，岂不是测试干了开发的工作","like_count":1},{"had_liked":false,"id":68176,"user_name":"我是谁","can_delete":false,"product_type":"c1","uid":1347901,"ip_address":"","ucode":"CDBE54AD1F69BB","user_header":"https://static001.geekbang.org/account/avatar/00/14/91/3d/2fc84343.jpg","comment_is_top":false,"comment_ctime":1550453921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845421217","product_id":100009601,"comment_content":"tdd感觉就是详细的单元测试，那对于测试用例的项目建立，包括持续集成，都是由测试来做。开发人员是不是就不需要写单元测试了，那开发自测用测试人员写的测试用例吗，是拉去测试这边项目吗","like_count":1},{"had_liked":false,"id":53363,"user_name":"subona","can_delete":false,"product_type":"c1","uid":1244400,"ip_address":"","ucode":"8F4E128FF687CC","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/f0/38db74c9.jpg","comment_is_top":false,"comment_ctime":1545633256,"is_pvip":false,"replies":[{"id":"20860","content":"都是直接面向代码的","user_name":"作者回复","comment_id":53363,"uid":"1002226","ip_address":"","utype":1,"ctime":1546923914,"user_name_real":"dhrbc"}],"discussion_count":2,"race_medal":0,"score":"5840600552","product_id":100009601,"comment_content":"tdd测试代码都是单元测试了吧","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434114,"discussion_content":"都是直接面向代码的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546923914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692907,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d4/eb/46319136.jpg","nickname":"。。。","note":"","ucode":"3EF9692AAF8C12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138241,"discussion_content":"都是单测的话   那系统测试的用例肯定也是必不可少的吧   是否还需要最后执行黑盒测试呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579230486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37359,"user_name":"郭小菜","can_delete":false,"product_type":"c1","uid":1017297,"ip_address":"","ucode":"C4044C80BB331B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYfcUOVhf3vhEBUNGHgtIcw8ujMZnkabicLzzjn3xwdeeic2PJSe7ibJgMx2UjF0d7L4B4gsRpaqe2A/132","comment_is_top":false,"comment_ctime":1541555457,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5836522753","product_id":100009601,"comment_content":"个人认为先写测试代码比较适合单一场景，如果是较为复杂业务场景先去写测试代码是很复杂的，测试代码的数量甚至多余系统代码","like_count":1},{"had_liked":false,"id":32460,"user_name":"喵呜呀呵嘿🌈","can_delete":false,"product_type":"c1","uid":1170622,"ip_address":"","ucode":"CF14E19A571457","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/be/723738df.jpg","comment_is_top":false,"comment_ctime":1539579916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5834547212","product_id":100009601,"comment_content":"测试人员的综合能力强于开发人员，感觉TDD会更好推行也适合使用。相反则不然吧。","like_count":1},{"had_liked":false,"id":30888,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1539043094,"is_pvip":false,"replies":[{"id":"11353","content":"支持打卡👍","user_name":"作者回复","comment_id":30888,"uid":"1002226","ip_address":"","utype":1,"ctime":1539250461,"user_name_real":"dhrbc"}],"discussion_count":1,"race_medal":0,"score":"5834010390","product_id":100009601,"comment_content":"打卡44，国庆节后 好好学习","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426131,"discussion_content":"支持打卡👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539250461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30854,"user_name":"伪专家","can_delete":false,"product_type":"c1","uid":1227786,"ip_address":"","ucode":"B22182B970F94F","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/0a/2ac3417a.jpg","comment_is_top":false,"comment_ctime":1539012970,"is_pvip":false,"replies":[{"id":"11354","content":"是的，tdd一定要求有很好的代码能力。","user_name":"作者回复","comment_id":30854,"uid":"1002226","ip_address":"","utype":1,"ctime":1539250487,"user_name_real":"dhrbc"}],"discussion_count":2,"race_medal":0,"score":"5833980266","product_id":100009601,"comment_content":"没有强的coding能力，不行的","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426117,"discussion_content":"是的，tdd一定要求有很好的代码能力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539250487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319532,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604044643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30594,"user_name":"仰望星空","can_delete":false,"product_type":"c1","uid":1117087,"ip_address":"","ucode":"4EA928AC927055","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/9f/788b964e.jpg","comment_is_top":false,"comment_ctime":1538957783,"is_pvip":false,"replies":[{"id":"11359","content":"感谢支持，后面马上会有讲渗透测试的文章","user_name":"作者回复","comment_id":30594,"uid":"1002226","ip_address":"","utype":1,"ctime":1539251062,"user_name_real":"dhrbc"}],"discussion_count":1,"race_medal":0,"score":"5833925079","product_id":100009601,"comment_content":"老师讲的很系统，每篇都听，几乎涵盖了测试的方方面面。有一点就是设计安全性方面的测试能否也讲一讲呢","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426043,"discussion_content":"感谢支持，后面马上会有讲渗透测试的文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539251062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337144,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1646645882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646645882","product_id":100009601,"comment_content":"测试用例是测试写吗？如果是的话，测试在写测试用例的时候，就把接口、pojo等等都定义好了，那开发岂不是只要实现就行。那这对测试的要求岂不是很高很高了。","like_count":0},{"had_liked":false,"id":335029,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1645260837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645260837","product_id":100009601,"comment_content":"没经历过，学习啦","like_count":0},{"had_liked":false,"id":321761,"user_name":"宋琦","can_delete":false,"product_type":"c1","uid":1004672,"ip_address":"","ucode":"FE8961BF810FED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/80/d1d9b493.jpg","comment_is_top":false,"comment_ctime":1637033619,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637033619","product_id":100009601,"comment_content":"要是能讲一讲如何在项目中落实BDD就更好了。<br>","like_count":0},{"had_liked":false,"id":309426,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1630122421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630122421","product_id":100009601,"comment_content":"本文总计<br><br>### 什么是测试驱动开发（TDD）<br><br>TDD 并不是一门技术，而是一种开发理念<br><br>在实现功能代码前先设计好测试用例的代码<br><br>根据测试用例的代码编写产品的功能代码<br><br>让开发前设计的测试用例代码都能够顺利执行通过<br><br><br><br>### TDD 的优势<br><br>保证开发的功能符合需求<br><br>更加灵活的迭代方式<br><br>保证系统的可扩展性<br><br>更好的质量保证<br><br>测试用例即文档<br><br><br><br>### 测试驱动开发的实施过程<br><br>- 为需要实现的新功能添加一批测试<br><br>- 运行所有测试，看看新添加的测试是否失败<br><br>- 编写实现软件新功能的实现代码<br><br>- 再次运行所有的测试，看是否有测试失败<br><br>- 重构代码<br><br>- 重复以上步骤直到所有测试通过<br><br><br><br>**三个注意点**<br><br>需要控制测试用例的粒度<br><br>要注意代码的简洁和高效<br><br>通过重构保证代码的优雅和简洁","like_count":0},{"had_liked":false,"id":303145,"user_name":"东方不败之鸭梨","can_delete":false,"product_type":"c1","uid":2062975,"ip_address":"","ucode":"C590EEC03BCFFC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7a/7f/4bce9aff.jpg","comment_is_top":false,"comment_ctime":1626616932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626616932","product_id":100009601,"comment_content":"感觉TDD是在需求和开发的代码之间介入，用测试用例代码来引导开发代码的实现","like_count":1},{"had_liked":false,"id":287447,"user_name":"棱角","can_delete":false,"product_type":"c1","uid":2537525,"ip_address":"","ucode":"C7ABE0E3FA0CC6","user_header":"https://static001.geekbang.org/account/avatar/00/26/b8/35/65196a66.jpg","comment_is_top":false,"comment_ctime":1617954841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617954841","product_id":100009601,"comment_content":"这样会不会增加开发周期？在这个敏捷开发盛行的时代，tdd真的合适吗。开发人员或许会花更多时间去阅读用例。","like_count":1},{"had_liked":false,"id":283338,"user_name":"派森","can_delete":false,"product_type":"c1","uid":1169937,"ip_address":"","ucode":"063AC75FA77EFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/11/bdffffa6.jpg","comment_is_top":false,"comment_ctime":1615714834,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1615714834","product_id":100009601,"comment_content":"感觉特别适合研发之间的交叉测试，测试驱动开发，并不是说测试人员驱动开发人员开发，这个测试用例也可以是研发写的，我理解有问题吗？","like_count":0},{"had_liked":false,"id":257616,"user_name":"凯耐","can_delete":false,"product_type":"c1","uid":1672674,"ip_address":"","ucode":"DF9C2170509BD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","comment_is_top":false,"comment_ctime":1604043981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604043981","product_id":100009601,"comment_content":"TDD对接口测试不适用，测试无法根据需求文档编写测试用例。TDD适用于UI层次的测试，可以根据需求文档编写测试用例，开发参与用例评审确保开发的功能符合测试用例的标准","like_count":0},{"had_liked":false,"id":257073,"user_name":"Geek_sst","can_delete":false,"product_type":"c1","uid":1872084,"ip_address":"","ucode":"6A921E8D71C5F1","user_header":"https://static001.geekbang.org/account/avatar/00/1c/90/d4/1fec25d2.jpg","comment_is_top":false,"comment_ctime":1603847725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603847725","product_id":100009601,"comment_content":"我感觉有点像冒烟测试。只是它在完成代码前。  其实开发在完成自己大概的代码。再根据冒烟用例一样的可以的","like_count":0},{"had_liked":false,"id":241311,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1597243785,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597243785","product_id":100009601,"comment_content":"在开发不熟悉场景的时候，是不是可以由测试人员编写测试用例，然后提供给开发人员参考。","like_count":0,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319533,"discussion_content":"测试不理解的业务场景遗漏的测试点，开发也可以给测试补充测试用例，相互相成嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604044861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241310,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1597243689,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597243689","product_id":100009601,"comment_content":"虽然说不是所有的项目都适合TDD，但是其实在开发的过程中是有运用TDD思想的，开发每次写一个分支判断，很可能就是针对一种场景或者一条用例，只是没有很正规地写出来，可能只是在大脑思考了一下，实现这个功能分哪几种情况，就动手敲代码。","like_count":0,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319534,"discussion_content":"项目需要白盒测试或者API测试，TDD应该就用不上了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604044923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218782,"user_name":"Amos","can_delete":false,"product_type":"c1","uid":1112210,"ip_address":"","ucode":"61DB72D99AF9EA","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/92/eaafff96.jpg","comment_is_top":false,"comment_ctime":1589874879,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589874879","product_id":100009601,"comment_content":"老师你好，有一点不明白，BirthdayCaculator.caculate(String brithday) 该方法未实现之前，测试代码里面就包含了这个方法了吗？ 那怎么会测试通过的呢 ？ ","like_count":0,"discussions":[{"author":{"id":1242455,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","nickname":"天天向上","note":"","ucode":"0CCCA6F4DCC480","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554876,"discussion_content":"我也有这样的疑问，既然测试编写的测试用例都有了调用了，那接口、pojo都已经被测试定义好了，那开发岂不是只做业务实现就行，接口、pojo都不用写。那要是这样的话，对测试要求可太高了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646646172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164401,"user_name":"刘超  mingo","can_delete":false,"product_type":"c1","uid":1698904,"ip_address":"","ucode":"28F6AA245D38BF","user_header":"https://static001.geekbang.org/account/avatar/00/19/ec/58/a8e35513.jpg","comment_is_top":false,"comment_ctime":1576979050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576979050","product_id":100009601,"comment_content":"我们写java单元测试时候都是需要注册到主测试类，这样每个人都改主测试类，提交不拼频繁，容易冲突，有没有好的团队写单元测试，避免冲突的方法？","like_count":0},{"had_liked":false,"id":145584,"user_name":"Gz","can_delete":false,"product_type":"c1","uid":1057466,"ip_address":"","ucode":"78897C7FC7611A","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/ba/7b73c9e1.jpg","comment_is_top":false,"comment_ctime":1572320702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572320702","product_id":100009601,"comment_content":"TDD这件事情实话我觉得应该是在开发自己对业务更加了解的情况下来做，现在的情况下“测试”驱动开发的话之前需要定义好规则尤其在GUI测试上，相对来说接口也还好因为前置条件是后端开发出接口文档，那么这个就是测试依据，也就是说能够先出用例，然后上持续集成平台让开发自己上测试服务自己进行测试 。在通过所有用例以后基本上也就能快测试了。","like_count":0},{"had_liked":false,"id":139528,"user_name":"Kelly","can_delete":false,"product_type":"c1","uid":1435203,"ip_address":"","ucode":"2880316A872C01","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/43/023e1a11.jpg","comment_is_top":false,"comment_ctime":1570673108,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570673108","product_id":100009601,"comment_content":"实施过程中2的测试不太理解怎么执行，此时开发代码都没写出来。","like_count":0,"discussions":[{"author":{"id":1544887,"avatar":"https://static001.geekbang.org/account/avatar/00/17/92/b7/24995e89.jpg","nickname":"Morris","note":"","ucode":"91601DE6C295F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219156,"discussion_content":"都没写出来的话那肯定全部都失败了呀，失败率100%，然后写代码，再测试一次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585740113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112403,"user_name":"Geek_905bf9","can_delete":false,"product_type":"c1","uid":1599748,"ip_address":"","ucode":"70BD0AD8B01B63","user_header":"","comment_is_top":false,"comment_ctime":1562729183,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562729183","product_id":100009601,"comment_content":"那么想问下，用例变成需求了，那么产品人员呢？需求文档呢？是不是就可以粗糙的写了呢？","like_count":0,"discussions":[{"author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138238,"discussion_content":"用例变成需求是针对开发来理解的需求，没有产品和根本需求，测试怎么写用例呢。谁来设计需求呢，需求怎么收集呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579230364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112283,"user_name":"wangq","can_delete":false,"product_type":"c1","uid":1174283,"ip_address":"","ucode":"7AAC51A6601ECE","user_header":"https://static001.geekbang.org/account/avatar/00/11/eb/0b/6022512d.jpg","comment_is_top":false,"comment_ctime":1562715277,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562715277","product_id":100009601,"comment_content":"会不会增加代码量，延长代码开发周期？理论上讲整体交付时间应该不会影响甚至提前","like_count":0},{"had_liked":false,"id":95491,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1558063702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558063702","product_id":100009601,"comment_content":"对于TDD，我有两点要说。1是TDD对于测试人员的要求较高，至少要会百合测试，而且测试用例的粒度，是否有遗漏，测试用例代码通过率都有要求，这对于很多企业都觉得测试职业都是点点点的公司来说，根本做不到，而且从领导层面上都没有这个意识去落实的。2是TDD的推动要从领导层，甚至公司技术部的最高层从上而下去推动，这才是最难执行的，这一点也和作者想法一样，所以现实中很多无法实现。","like_count":0},{"had_liked":false,"id":44633,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1543467304,"is_pvip":false,"replies":[{"id":"15905","content":"本质上这三个是不同层面的东西，但是出发点和思路是异曲同工的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1543468136,"ip_address":"","comment_id":44633,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543467304","product_id":100009601,"comment_content":"您是不是把TDD、BDD、ATDD混在一起了😄","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430812,"discussion_content":"本质上这三个是不同层面的东西，但是出发点和思路是异曲同工的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543468136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35791,"user_name":"木宇寒影","can_delete":false,"product_type":"c1","uid":1232202,"ip_address":"","ucode":"A3E40CA376A256","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/4a/e2ce9181.jpg","comment_is_top":false,"comment_ctime":1540802824,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540802824","product_id":100009601,"comment_content":"如果代码能力不高，测试驱动开发可以先从excel用例入手，先保证开发出的功能都是符合要求的","like_count":0},{"had_liked":false,"id":30958,"user_name":"~黑凤梨~","can_delete":false,"product_type":"c1","uid":1085636,"ip_address":"","ucode":"89E0A1960D7BAF","user_header":"https://static001.geekbang.org/account/avatar/00/10/90/c4/99e6f7cb.jpg","comment_is_top":false,"comment_ctime":1539052766,"is_pvip":false,"replies":[{"id":"11357","content":"严格来说，前端项目不一定适合tdd，更适合的应该是bdd，当然和jenkins之类的工具结合本身的确是个好方法，这种情况下，测试用例也都需要通过代码仓库来集中版本化管理","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1539250912,"ip_address":"","comment_id":30958,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539052766","product_id":100009601,"comment_content":"我们WEB项目也在要求做TDD，并将TDD与现有的CICD（其实只有CD）结合，不知道具体如何来管理TDD的test case那些东西。希望老师指点一下，谢谢。","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426158,"discussion_content":"严格来说，前端项目不一定适合tdd，更适合的应该是bdd，当然和jenkins之类的工具结合本身的确是个好方法，这种情况下，测试用例也都需要通过代码仓库来集中版本化管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539250912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30901,"user_name":"CoolPanda","can_delete":false,"product_type":"c1","uid":1156121,"ip_address":"","ucode":"8EABAF97BE952A","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/19/e09d3529.jpg","comment_is_top":false,"comment_ctime":1539045830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539045830","product_id":100009601,"comment_content":"我们WEB项目也在要求做TDD，但是开发做的极其敷衍，后补TDD的test case已经算是好的了。有想法将TDD与现有的CICD（其实只有CD）结合，不知道具体如何来管理TDD的test case那些东西。希望老师指点一下，谢谢。","like_count":0}]}