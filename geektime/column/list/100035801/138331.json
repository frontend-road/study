{"id":138331,"title":"02 | 架构分层：我们为什么一定要这么做？","content":"<p>在系统从0到1的阶段，为了让系统快速上线，我们通常是不考虑分层的。但是随着业务越来越复杂，大量的代码纠缠在一起，会出现逻辑不清晰、各模块相互依赖、代码扩展性差、改动一处就牵一发而动全身等问题。</p><p>这时，对系统进行分层就会被提上日程，那么我们要如何对架构进行分层？架构分层和高并发架构设计又有什么关系呢？本节课，我将带你寻找答案。</p><h2>什么是分层架构</h2><p>软件架构分层在软件工程中是一种常见的设计方式，它是将整体系统拆分成N个层次，每个层次有独立的职责，多个层次协同提供完整的功能。</p><p>我们在刚刚成为程序员的时候，会被“教育”说系统的设计要是“MVC”（Model-View-Controller）架构。它将整体的系统分成了Model（模型），View（视图）和Controller（控制器）三个层次，也就是将用户视图和业务处理隔离开，并且通过控制器连接起来，很好地实现了表现和逻辑的解耦，是一种标准的软件分层架构。</p><p><img src=\"https://static001.geekbang.org/resource/image/a3/a3/a3fbea25c3d39cab31826ad7e3c300a3.jpg?wh=1142*557\" alt=\"\"></p><p>另外一种常见的分层方式是将整体架构分为表现层、逻辑层和数据访问层：</p><ul>\n<li>表现层，顾名思义嘛，就是展示数据结果和接受用户指令的，是最靠近用户的一层；</li>\n<li>逻辑层里面有复杂业务的具体实现；</li>\n<li>数据访问层则是主要处理和存储之间的交互。</li>\n</ul><!-- [[[read_end]]] --><p>这是在架构上最简单的一种分层方式。其实，我们在不经意间已经按照三层架构来做系统分层设计了，比如在构建项目的时候，我们通常会建立三个目录：Web、Service和Dao，它们分别对应了表现层、逻辑层还有数据访问层。</p><p><img src=\"https://static001.geekbang.org/resource/image/86/25/86aa315ef6b6752dc58db69f44f82725.jpg?wh=1142*746\" alt=\"\"></p><p>除此之外，如果我们稍加留意，就可以发现很多的分层的例子。比如我们在大学中学到的OSI网络模型，它把整个网络分成了七层，自下而上分别是物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。</p><p>工作中经常能用到TCP/IP协议，它把网络简化成了四层，即链路层、网络层、传输层和应用层。每一层各司其职又互相帮助，网络层负责端到端的寻址和建立连接，传输层负责端到端的数据传输等，同时相邻两层还会有数据的交互。这样可以隔离关注点，让不同的层专注做不同的事情。</p><p><img src=\"https://static001.geekbang.org/resource/image/40/2a/408c9e360c55765bd00b1aff80de382a.jpg?wh=1142*773\" alt=\"\"></p><p>Linux文件系统也是分层设计的，从下图你可以清晰地看出文件系统的层次。在文件系统的最上层是虚拟文件系统（VFS），用来屏蔽不同的文件系统之间的差异，提供统一的系统调用接口。虚拟文件系统的下层是Ext3、Ext4等各种文件系统，再向下是为了屏蔽不同硬件设备的实现细节，我们抽象出来的单独的一层——通用块设备层，然后就是不同类型的磁盘了。</p><p>我们可以看到，某些层次负责的是对下层不同实现的抽象，从而对上层屏蔽实现细节。比方说VFS对上层（系统调用层）来说提供了统一的调用接口，同时对下层中不同的文件系统规约了实现模型，当新增一种文件系统实现的时候，只需要按照这种模型来设计，就可以无缝插入到Linux文件系统中。</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/88/c76a7f98b633939cd47fec24670fb188.jpg?wh=1142*822\" alt=\"\"></p><p>那么，为什么这么多系统一定要做分层的设计呢？答案是分层设计存在一定的优势。</p><h2>分层有什么好处</h2><p><strong>分层的设计可以简化系统设计，让不同的人专注做某一层次的事情。</strong>想象一下，如果你要设计一款网络程序却没有分层，该是一件多么痛苦的事情。</p><p>因为你必须是一个通晓网络的全才，要知道各种网络设备的接口是什么样的，以便可以将数据包发送给它。你还要关注数据传输的细节，并且需要处理类似网络拥塞，数据超时重传这样的复杂问题。当然了，你更需要关注数据如何在网络上安全传输，不会被别人窥探和篡改。</p><p>而有了分层的设计，你只需要专注设计应用层的程序就可以了，其他都可以交给下面几层来完成。</p><p><strong>再有，分层之后可以做到很高的复用。</strong>比如，我们在设计系统A的时候，发现某一层具有一定的通用性，那么我们可以把它抽取独立出来，在设计系统B的时候使用起来，这样可以减少研发周期，提升研发的效率。</p><p><strong>最后一点，分层架构可以让我们更容易做横向扩展。</strong>如果系统没有分层，当流量增加时我们需要针对整体系统来做扩展。但是，如果我们按照上面提到的三层架构将系统分层后，就可以针对具体的问题来做细致的扩展。</p><p>比如说，业务逻辑里面包含有比较复杂的计算，导致CPU成为性能的瓶颈，那这样就可以把逻辑层单独抽取出来独立部署，然后只对逻辑层来做扩展，这相比于针对整体系统扩展所付出的代价就要小得多了。</p><p>这一点也可以解释我们课程开始时提出的问题：架构分层究竟和高并发设计的关系是怎样的？从“<a href=\"https://time.geekbang.org/column/article/137323\">01 | 高并发系统：它的通用设计方法是什么？</a>”中我们了解到，横向扩展是高并发系统设计的常用方法之一，既然分层的架构可以为横向扩展提供便捷， 那么支撑高并发的系统一定是分层的系统。</p><h2>如何来做系统分层</h2><p>说了这么多分层的优点，那么当我们要做分层设计的时候，需要考虑哪些关键因素呢？</p><p>在我看来，最主要的一点就是你需要理清楚每个层次的边界是什么。你也许会问：“如果按照三层架构来分层的话，每一层的边界不是很容易就界定吗？”</p><p>没错，当业务逻辑简单时，层次之间的边界的确清晰，开发新的功能时也知道哪些代码要往哪儿写。但是当业务逻辑变得越来越复杂时，边界就会变得越来越模糊，给你举个例子。</p><p>任何一个系统中都有用户系统，最基本的接口是返回用户信息的接口，它调用逻辑层的GetUser方法，GetUser方法又和User DB交互获取数据，就像下图左边展示的样子。</p><p>这时，产品提出一个需求，在APP中展示用户信息的时候，如果用户不存在，那么要自动给用户创建一个用户。同时，要做一个HTML5的页面，HTML5页面要保留之前的逻辑，也就是不需要创建用户。这时逻辑层的边界就变得不清晰，表现层也承担了一部分的业务逻辑（将获取用户和创建用户接口编排起来）。</p><p><img src=\"https://static001.geekbang.org/resource/image/92/17/921ab923ef3f7097450458b7d1d6a617.jpg?wh=1142*762\" alt=\"\"></p><p>那我们要如何做呢？参照阿里发布的<a href=\"https://yq.aliyun.com/articles/69327\">《阿里巴巴Java开发手册v1.4.0（详尽版）》</a>，我们可以将原先的三层架构细化成下面的样子：</p><p><img src=\"https://static001.geekbang.org/resource/image/45/b1/45e6640e70d3e1eae4b45a45fefa32b1.jpg?wh=1142*912\" alt=\"\"></p><p>我来解释一下这个分层架构中的每一层的作用。</p><ul>\n<li>终端显示层：各端模板渲染并执行显示的层。当前主要是 Velocity 渲染，JS 渲染， JSP 渲染，移动端展示等。</li>\n<li>开放接口层：将Service层方法封装成开放接口，同时进行网关安全控制和流量控制等。</li>\n<li>Web层：主要是对访问控制进行转发，各类基本参数校验，或者不复用的业务简单处理等。</li>\n<li>Service层：业务逻辑层。</li>\n<li>Manager 层：通用业务处理层。这一层主要有两个作用，其一，你可以将原先Service层的一些通用能力下沉到这一层，比如与缓存和存储交互策略，中间件的接入；其二，你也可以在这一层封装对第三方接口的调用，比如调用支付服务，调用审核服务等。</li>\n<li>DAO层：数据访问层，与底层 MySQL、Oracle、HBase 等进行数据交互。</li>\n<li>外部接口或第三方平台：包括其它部门 RPC 开放接口，基础平台，其它公司的 HTTP 接口。</li>\n</ul><p>在这个分层架构中主要增加了Manager层，它与Service层的关系是：Manager层提供原子的服务接口，Service层负责依据业务逻辑来编排原子接口。</p><p>以上面的例子来说，Manager层提供创建用户和获取用户信息的接口，而Service层负责将这两个接口组装起来。这样就把原先散布在表现层的业务逻辑都统一到了Service层，每一层的边界就非常清晰了。</p><p>除此之外，分层架构需要考虑层次之间一定是相邻层互相依赖，数据的流转也只能在相邻的两层之间流转。</p><p>我们还是以三层架构为例，数据从表示层进入之后一定要流转到逻辑层，做业务逻辑处理，然后流转到数据访问层来和数据库交互。那么你可能会问：“如果业务逻辑很简单的话可不可以从表示层直接到数据访问层，甚至直接读数据库呢？”</p><p>其实从功能上是可以的，但是从长远的架构设计考虑，这样会造成层级调用的混乱，比方说如果表示层或者业务层可以直接操作数据库，那么一旦数据库地址发生变更，你就需要在多个层次做更改，这样就失去了分层的意义，并且对于后面的维护或者重构都会是灾难性的。</p><h2>分层架构的不足</h2><p>任何事物都不可能是尽善尽美的，分层架构虽有优势也会有缺陷，它最主要的一个缺陷就是增加了代码的复杂度。</p><p>这是显而易见的嘛，明明可以在接收到请求后就可以直接查询数据库获得结果，却偏偏要在中间插入多个层次，并且有可能每个层次只是简单地做数据的传递。有时增加一个小小的需求也需要更改所有层次上的代码，看起来增加了开发的成本，并且从调试上来看也增加了复杂度，原本如果直接访问数据库我只需要调试一个方法，现在我却要调试多个层次的多个方法。</p><p>另外一个可能的缺陷是，如果我们把每个层次独立部署，层次间通过网络来交互，那么多层的架构在性能上会有损耗。这也是为什么服务化架构性能要比单体架构略差的原因，也就是所谓的“多一跳”问题。</p><p>那我们是否要选择分层的架构呢？<strong>答案当然是肯定的。</strong></p><p>你要知道，任何的方案架构都是有优势有缺陷的，天地尚且不全何况我们的架构呢？分层架构固然会增加系统复杂度，也可能会有性能的损耗，但是相比于它能带给我们的好处来说，这些都是可以接受的，或者可以通过其它的方案解决的。<strong>我们在做决策的时候切不可以偏概全，因噎废食。</strong></p><h2>课程小结</h2><p>今天我带着你了解了分层架构的优势和不足，以及我们在实际工作中如何来对架构做分层。我想让你了解的是，分层架构是软件设计思想的外在体现，是一种实现方式。我们熟知的一些软件设计原则都在分层架构中有所体现。</p><p>比方说，单一职责原则规定每个类只有单一的功能，在这里可以引申为每一层拥有单一职责，且层与层之间边界清晰；迪米特法则原意是一个对象应当对其它对象有尽可能少的了解，在分层架构的体现是数据的交互不能跨层，只能在相邻层之间进行；而开闭原则要求软件对扩展开放，对修改关闭。它的含义其实就是将抽象层和实现层分离，抽象层是对实现层共有特征的归纳总结，不可以修改，但是具体的实现是可以无限扩展，随意替换的。</p><p>掌握这些设计思想会自然而然地明白分层架构设计的妙处，同时也能帮助我们做出更好的设计方案。</p><h2>一课一思</h2><p>课程中我们提到了分层架构的多种模型，比如三层架构模型，阿里巴巴提出的分层架构模型，那么在你日常开发的过程中，会如何来做架构分层呢？你觉得如此分层的优势是什么呢？欢迎在留言区与我一同交流。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":135097,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1569025174,"is_pvip":false,"replies":[{"id":"51853","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569049971,"ip_address":"","comment_id":135097,"utype":1}],"discussion_count":2,"race_medal":0,"score":"190547586198","product_id":100035801,"comment_content":"明白了一些东西，老师比如我做一个接口，这个实现可以放在server层！ 之后公司内部调用逻辑可以放在web层！而哪一天公司要开放这个接口，那我最好是新抽象一层出来(一个新的服务)就是开放平台层！这样做的好处是，可以讲自家使用和第三方使用做隔离！比如在提供服务时，为了保证自家接口性能，对开放平台层做限流处理！","like_count":45,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468046,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569049971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350425,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/19/41dbba8c.jpg","nickname":"破晓","note":"","ucode":"1162E00FF08DF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370226,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619338052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134967,"user_name":"fish","can_delete":false,"product_type":"c1","uid":1670039,"ip_address":"","ucode":"EBC306460F2962","user_header":"https://static001.geekbang.org/account/avatar/00/19/7b/97/950082a4.jpg","comment_is_top":false,"comment_ctime":1568963863,"is_pvip":false,"replies":[{"id":"51803","content":"好的👌","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974656,"ip_address":"","comment_id":134967,"utype":1}],"discussion_count":2,"race_medal":0,"score":"104648178967","product_id":100035801,"comment_content":"希望每篇都结合一点点实例程序架构","like_count":24,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467982,"discussion_content":"好的👌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014091,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/4b/abb7bfe3.jpg","nickname":"SPxiaomin","note":"","ucode":"F632051A83CF27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24159,"discussion_content":"没有例子还是很模糊的感觉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570021215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136066,"user_name":"那一夜","can_delete":false,"product_type":"c1","uid":1127542,"ip_address":"","ucode":"AA3C750FF0D744","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/76/d81137fe.jpg","comment_is_top":false,"comment_ctime":1569338448,"is_pvip":false,"replies":[{"id":"52137","content":"在我来看业务逻辑放在manager，service来编排manager的原子服务","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569372225,"ip_address":"","comment_id":136066,"utype":1}],"discussion_count":4,"race_medal":0,"score":"87468684368","product_id":100035801,"comment_content":"老师你好，我之前也看过很多次阿里的代码分层规范，一直对service层和manager层有点混淆不清，所以想请教一下老师我下面理解的分层是不是合理的<br>1. controller层接收客户端的请求<br>2. service层调用manager层和dao层处理业务<br>3. manager主要对service层通用的代码的沉淀，例如对多个dao调用的组合（逻辑意义上的连接查询），以及缓存等中间件的调用，并且在manager层处理事务<br>4. dao层主要放mybatis逆向工程生成的代码以及自己写的查询方法<br>不知道自己这样理解正不正确，还有就是事务处理应该放在哪一层，是在manager层还是应该在service层？","like_count":20,"discussions":[{"author":{"id":1206134,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/76/56d6aa9d.jpg","nickname":"zjg","note":"","ucode":"8D76683AE7C25D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24901,"discussion_content":"manager主要是领域模型的功能提供层，是基于领域的功能封装。service主要是把领域的各个功能做编排，这样就能保证领域的稳定性。同意作者…","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1570326121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000977,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/46/11/1cf8c174.jpg","nickname":"小沫","note":"","ucode":"52341656210E0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23403,"discussion_content":"我觉得事物的控制 应该放到 Service层吧。 Service层主要用来根据上层Web的请求来进行拼装Manager层的单个服务能力。在Service层控制事物比较合理。 而且用户的需求变化之快我们是不可能预期的，只能按照长期的业务积累，打散业务单个功能服务，构建Manager层，在通过配置的方式来进行拼装实现Service层。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1569813371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468440,"discussion_content":"在我来看业务逻辑放在manager，service来编排manager的原子服务","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569372225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041396,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","nickname":"宙斯","note":"","ucode":"80DF36BAD298AD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349805,"discussion_content":"manager若是领域，那若事务涉及跨领域操作，那这种情况是不是还要提升层次呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613559567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135086,"user_name":"can","can_delete":false,"product_type":"c1","uid":1099445,"ip_address":"","ucode":"435B4D49C681B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/b5/e2304f0b.jpg","comment_is_top":false,"comment_ctime":1569014623,"is_pvip":false,"replies":[{"id":"51860","content":"业务类的校验放在service层，一般性的参数校验可以放在web层，可以通用化","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569050308,"ip_address":"","comment_id":135086,"utype":1}],"discussion_count":5,"race_medal":0,"score":"87468360543","product_id":100035801,"comment_content":"参数校验，放在哪","like_count":20,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468041,"discussion_content":"业务类的校验放在service层，一般性的参数校验可以放在web层，可以通用化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569050308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014691,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/a3/82b2a73e.jpg","nickname":"黑暗浪子","note":"","ucode":"FBB8C24EBEC5BB","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23973,"discussion_content":"自定义注解实现业务含义校验，普通注解使用hibernate-validator包就行。一般都是在controller就是mvc的控制层实现","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569952087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097497,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bf/19/24cc3e7c.jpg","nickname":"二康","note":"","ucode":"45E85D80DE4544","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23077,"discussion_content":"控制层注解实现校验 百度一下jsr303","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569751800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140570,"avatar":"https://static001.geekbang.org/account/avatar/00/11/67/5a/416a7afa.jpg","nickname":"张乐辉","note":"","ucode":"F89656C75C248E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22191,"discussion_content":"如果这样 web层校验了参数 然后web层调用service层又要校验一次 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569588652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1120472,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqhkxW4icQZYdPQe9CGVlIt5Me9QzkXX7RpyTAFLCKrJEXic31mXKlaibCEcibNvUv09WElNRZtzU8JNQ/132","nickname":"Damon","note":"","ucode":"4BDEB96F4FAE99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140570,"avatar":"https://static001.geekbang.org/account/avatar/00/11/67/5a/416a7afa.jpg","nickname":"张乐辉","note":"","ucode":"F89656C75C248E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22219,"discussion_content":"二者校验的应该是不同层次的参数,没毛病","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569596660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22191,"ip_address":""},"score":22219,"extra":""}]}]},{"had_liked":false,"id":136551,"user_name":"AaronM","can_delete":false,"product_type":"c1","uid":1247691,"ip_address":"","ucode":"C98CE68E76BA8D","user_header":"https://static001.geekbang.org/account/avatar/00/13/09/cb/ab647007.jpg","comment_is_top":false,"comment_ctime":1569470312,"is_pvip":false,"replies":[{"id":"52493","content":"controller层的逻辑有区别，一种是需要创建用户，一种是不需要，需要提供两个service方法，每个方法编排不同的manager层的原子方法。当然也可以提供一个service方法，使用不同的参数来区分。但这是一个简单的例子，引申来看，同一个服务接口，针对不同的场景可能会有一些差异，这种差异要在service层屏蔽，不应该蔓延到controller层","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569546808,"ip_address":"","comment_id":136551,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48814110568","product_id":100035801,"comment_content":"getuser之后创建user的案例，如果不加manager层，在service的getuser方法中做以下逻辑判断呢<br>if(未获取到用户){<br>this.createuser();<br>}<br><br>这样做有什么不妥吗~~望指教","like_count":11,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468689,"discussion_content":"controller层的逻辑有区别，一种是需要创建用户，一种是不需要，需要提供两个service方法，每个方法编排不同的manager层的原子方法。当然也可以提供一个service方法，使用不同的参数来区分。但这是一个简单的例子，引申来看，同一个服务接口，针对不同的场景可能会有一些差异，这种差异要在service层屏蔽，不应该蔓延到controller层","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569546808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134869,"user_name":"xu晓晨","can_delete":false,"product_type":"c1","uid":1513945,"ip_address":"","ucode":"EE0374EB48FBDC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoTDBX4a5u3Oc0zDpKDp6UbcYDcwAJXfBSmicqQwoyxaoVLEWzjIoUqYBiaDJHAYkO8icLtXqk4ibqKg/132","comment_is_top":false,"comment_ctime":1568944381,"is_pvip":false,"replies":[{"id":"51800","content":"是的呢","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974491,"ip_address":"","comment_id":134869,"utype":1}],"discussion_count":4,"race_medal":0,"score":"40223650045","product_id":100035801,"comment_content":"架构不分语言。我司主力语言php 架构至上而下是这样controller+module(service)+class(manager)+dao。第三方的调用服务也都封成基础类来调用了。基本上跟您讲的思路一样呢","like_count":9,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467936,"discussion_content":"是的呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095740,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","nickname":"Panda","note":"","ucode":"911A200C7B18BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51079,"discussion_content":"Controller =>  Service => Data => Dao  分层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573808434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1144021,"avatar":"https://static001.geekbang.org/account/avatar/00/11/74/d5/de9641dc.jpg","nickname":"poettian","note":"","ucode":"26EE408F908D12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17132,"discussion_content":"你们的class这一层功能主要是做什么？我们省略了这一层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568949458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1513945,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoTDBX4a5u3Oc0zDpKDp6UbcYDcwAJXfBSmicqQwoyxaoVLEWzjIoUqYBiaDJHAYkO8icLtXqk4ibqKg/132","nickname":"xu晓晨","note":"","ucode":"EE0374EB48FBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1144021,"avatar":"https://static001.geekbang.org/account/avatar/00/11/74/d5/de9641dc.jpg","nickname":"poettian","note":"","ucode":"26EE408F908D12","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25319,"discussion_content":"class就是基础操作类 比如关于某个功能的curd都在这一层来做。说白了就是抽象基础方法供上层的service调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570500378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":17132,"ip_address":""},"score":25319,"extra":""}]}]},{"had_liked":false,"id":156511,"user_name":"刘鹏","can_delete":false,"product_type":"c1","uid":1230417,"ip_address":"","ucode":"44F3D4DB3F5678","user_header":"https://static001.geekbang.org/account/avatar/00/12/c6/51/e39b5828.jpg","comment_is_top":false,"comment_ctime":1574904193,"is_pvip":false,"replies":[{"id":"60230","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575014904,"ip_address":"","comment_id":156511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35934642561","product_id":100035801,"comment_content":"老师，可以这样理解吗。manager放的都是单一功能的接口，service层去组装manager的接口，这样service层只需要注入manager层的接口就可以了，但是service层接口也会有复用的情况，相当于service还是要互相注入的","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476137,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575014904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135750,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1569252627,"is_pvip":false,"replies":[{"id":"52045","content":"我理解你说的防腐层就是manager层，而我说的manager层也封装了数据访问层，提供原子的服务接口，而service层是对这些原子接口的编排，所以说尽量不要数据层打交道。<br>当然每个团队可能有更合适的分层方式","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569280404,"ip_address":"","comment_id":135750,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35928990995","product_id":100035801,"comment_content":"感觉图有点问题。补下个人理解，共同探讨。<br>1.通用层改名领域层，个人习惯。<br>2.数据层同领域层也有交互。领域层交互数据层主要做业务；service层交互数据层主要开放接口，提供外部支撑。这块还涉及crud，读与命令分离。<br>3.第三方和外部接口，进入系统加入一层防腐层，千万别用第三方的实体bean去写自己项目的业务，千万别，千万别。这种依赖外部bean写业务的操作，接手的人深感绝望。<br>4.防腐层和第三方层也可以直接与service层交互。这里涉及胖领域和瘦领域的权衡了。个人偏向业务重就直接胖领域，没啥业务或跟本没有业务，瘦领域我也不要了，直接service层走你。这里的选择主要看当下业务情况和个人对将来的预期。<br>5.简单一定优雅，优雅不一定简单。k8s的容器编排很复杂，麻烦，但它的开放思想和架构抽象，真心让人惊叹。","like_count":8,"discussions":[{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544783,"discussion_content":"为感觉是这样的原来的service对接mapper或dao层，但有对原子服务其实是细粒度的，比如转账业务，现在作者说加入manager层，那么这个转账业务的这个细粒度查询可以加入manager，如果应对有（转账+打印转账单据+记录用户操作）这样整合性业务的话，估计要将转账的manager，打印单据的manager，以及记录用户操作的manager三个放入到service中进行编排。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641712484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468323,"discussion_content":"我理解你说的防腐层就是manager层，而我说的manager层也封装了数据访问层，提供原子的服务接口，而service层是对这些原子接口的编排，所以说尽量不要数据层打交道。\n当然每个团队可能有更合适的分层方式","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569280404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323868,"avatar":"https://static001.geekbang.org/account/avatar/00/14/33/5c/8c0a372a.jpg","nickname":"Fourty Seven","note":"","ucode":"DD213225842F68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20195,"discussion_content":"你说的是ddd的架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569288685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134938,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1568959624,"is_pvip":false,"replies":[{"id":"51796","content":"可以的呀 数据访问层也是可以独立部署的，controller也是独立部署的web服务","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974289,"ip_address":"","comment_id":134938,"utype":1}],"discussion_count":15,"race_medal":0,"score":"31633730696","product_id":100035801,"comment_content":"这里有个误导？我们所谓的独立部署并不是按照层次来部署。而是服务。因为不可能一个项目只部署controller，一个服务只部署dao层的。更多的是每一个服务按照这种层次来写。","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467966,"discussion_content":"可以的呀 数据访问层也是可以独立部署的，controller也是独立部署的web服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139384,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/b8/bb9657c6.jpg","nickname":"Promise°","note":"","ucode":"0BFDBDAD852D6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39581,"discussion_content":"如果独立部署dao层 那么事务如何处理呢？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1571962622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013147,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","nickname":"技术修行者","note":"","ucode":"28CA41A1214D6B","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79371,"discussion_content":"关于各层分别部署，我目前的项目是这么设计的，DAO也有独立的service，它用来向业务service提供和DB交互的服务。\n这样做对数据访问比较集中的系统，可以灵活的调整DAO Service的部署策略。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1576074246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692942,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","nickname":"JOHN","note":"","ucode":"6936DE275AA543","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160420,"discussion_content":"独立部署controller可以横向扩容tomcat，提高web端并发连接数以及分流，有实际的场景需要的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580801195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","nickname":"考休","note":"","ucode":"968DFC00D6D0CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55747,"discussion_content":"大部分项目应该都不需要service、dao层独立部署，再加上现在微服务大行其道，每个服务其实是有完备的service层、dao层的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574394216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","nickname":"考休","note":"","ucode":"968DFC00D6D0CF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164688,"discussion_content":"这分层即使不单独部署，每一个微服务上也是这么分层的啊，每层一个包，开发原则上不让隔包交互数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581213133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55747,"ip_address":""},"score":164688,"extra":""}]},{"author":{"id":1102916,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d4/44/ec084136.jpg","nickname":"LoveDlei","note":"","ucode":"68065848DF518B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17906,"discussion_content":"其实我也有同样的疑问❓service 层和dao 层如何单独部署，并对外提供服务啊？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568988164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1047604,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","nickname":"何磊","note":"","ucode":"78934C3ED4A342","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1102916,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d4/44/ec084136.jpg","nickname":"LoveDlei","note":"","ucode":"68065848DF518B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18810,"discussion_content":"独立部署其实也可以。不过如果每一层都独立部署，服务也独立部署。这样子太麻烦了。而且dao层独立部署的意义确实不大，都到db层面了，压力肯定主要在db上","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569111370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":17906,"ip_address":""},"score":18810,"extra":""},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1047604,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","nickname":"何磊","note":"","ucode":"78934C3ED4A342","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18871,"discussion_content":"独立部署C，S，D有些牵强了","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1569116862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":18810,"ip_address":""},"score":18871,"extra":""}]},{"author":{"id":1282698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/8a/17d1ef40.jpg","nickname":"cafe babe","note":"","ucode":"A29D4F89824A65","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356475,"discussion_content":"部署过一个项目只有Controller层的，通过RPC转发，Controller的服务不能访问数据库，相当于一层隔离。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615604919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129689,"discussion_content":"可以分开部署，还不如搞微服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578727827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048329,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/09/e0c39733.jpg","nickname":"Jayliud","note":"","ucode":"0274FC2607B1BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":128103,"discussion_content":"真正项目没有这么干的，这样分层部署了还不如上微服务架构，作者自己也可能没有类似实战经验，说的含糊其辞。大家这么多评论也不给个让人信服的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578616219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1351487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9f/3f/a51e6376.jpg","nickname":"IT之眼","note":"","ucode":"AB0F40D96C38D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1048329,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/09/e0c39733.jpg","nickname":"Jayliud","note":"","ucode":"0274FC2607B1BF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282490,"discussion_content":"分层可以独立部署，转转公司的都这么搞。DAO层单独部署，叫做原子层（或原子服务）。把业务逻辑层逻辑服务，也是单独部署。接入层（网关层）也是独立部署，接入层直接调各个业务方的逻辑层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591981629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":128103,"ip_address":""},"score":282490,"extra":""}]},{"author":{"id":1746324,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a5/94/b7fa086f.jpg","nickname":"王晓嘉","note":"","ucode":"EFC28B3A32EAB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72077,"discussion_content":"独立部署各层。能拿出可落地的方案吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575469533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1351487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9f/3f/a51e6376.jpg","nickname":"IT之眼","note":"","ucode":"AB0F40D96C38D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1746324,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a5/94/b7fa086f.jpg","nickname":"王晓嘉","note":"","ucode":"EFC28B3A32EAB3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282491,"discussion_content":"转转公司就这么搞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591981682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":72077,"ip_address":""},"score":282491,"extra":""}]}]},{"had_liked":false,"id":214619,"user_name":"hex","can_delete":false,"product_type":"c1","uid":1757301,"ip_address":"","ucode":"B983D40DCD159F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d0/75/3e034f71.jpg","comment_is_top":false,"comment_ctime":1588774075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27358577851","product_id":100035801,"comment_content":"第一遍看没看出门道。最近换了份工作。才发现原来老师讲的是非常有道理的。设置前置网关开放接口给外部调用，前置做验签，权限，封装对象，然后才调用服务。自己调用的话不经过前置网关直接调用服务。这样做可以给外部提供出统一的加解密以及权限接口。并且不影响自己内部调用逻辑！！","like_count":6},{"had_liked":false,"id":140050,"user_name":"W","can_delete":false,"product_type":"c1","uid":1254217,"ip_address":"","ucode":"CEBEB8042DE386","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/49/5a3f295a.jpg","comment_is_top":false,"comment_ctime":1570796800,"is_pvip":true,"replies":[{"id":"54174","content":"我理解简单的业务可以不抽取manager，直接调用dao","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570837272,"ip_address":"","comment_id":140050,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27340600576","product_id":100035801,"comment_content":"老师，我看阿里分层图中，service层是可以直接调用dao层的，manager层也是可以直接调用dao层的，这两种调用分别是针对什么情况的呢","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470221,"discussion_content":"我理解简单的业务可以不抽取manager，直接调用dao","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570837272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136487,"user_name":"那一夜","can_delete":false,"product_type":"c1","uid":1127542,"ip_address":"","ucode":"AA3C750FF0D744","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/76/d81137fe.jpg","comment_is_top":false,"comment_ctime":1569459687,"is_pvip":false,"replies":[{"id":"52495","content":"业务逻辑就是你的产品逻辑，比如创建用户要做些啥。<br>manager层的原子服务指的是实现单一功能的服务。<br>事务应该是在service层","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569546955,"ip_address":"","comment_id":136487,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27339263463","product_id":100035801,"comment_content":"老师你好，请问你说的业务逻辑放在manager，service来编排manager的原子服务，所谓的业务逻辑是指？manager的原子服务是指？如果这样处理的话，事务应该放在哪一层处理","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468659,"discussion_content":"业务逻辑就是你的产品逻辑，比如创建用户要做些啥。\nmanager层的原子服务指的是实现单一功能的服务。\n事务应该是在service层","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569546955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/38/fe/00ddeb81.jpg","nickname":"learn more","note":"","ucode":"0EF628B2E0F95E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274116,"discussion_content":"看到这条回复信息终于明白了，manager和service的关系，强烈建议置顶","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590543253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437769,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/49/889f9ef6.jpg","nickname":"M","note":"","ucode":"1A756D9AFCEB48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53874,"discussion_content":"manager层放最基础的功能方法，service层放这些基础方法的逻辑组合","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574227850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164515,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577017308,"is_pvip":false,"replies":[{"id":"63008","content":"相关领域的知识的确是大同小异～大厂的实践也基本类似～多学、多看、多练、多思，不久就会成为更好的你","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577198712,"ip_address":"","comment_id":164515,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23051853788","product_id":100035801,"comment_content":"有一本书叫，大型网站实战与Java中间件实践，和老师课程里的知识异曲同工之妙。学习了","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478797,"discussion_content":"相关领域的知识的确是大同小异～大厂的实践也基本类似～多学、多看、多练、多思，不久就会成为更好的你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577198712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135212,"user_name":"李米","can_delete":false,"product_type":"c1","uid":1110982,"ip_address":"","ucode":"355D5CC72ACF48","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/c6/5d186c6f.jpg","comment_is_top":false,"comment_ctime":1569063989,"is_pvip":true,"replies":[{"id":"51891","content":"是苹果自带的keynote","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569119262,"ip_address":"","comment_id":135212,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23043900469","product_id":100035801,"comment_content":"请问下老师用的什么工具画图？很漂亮","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468097,"discussion_content":"是苹果自带的keynote","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569119262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247574,"avatar":"https://static001.geekbang.org/account/avatar/00/13/09/56/2628852c.jpg","nickname":"星之所在","note":"","ucode":"03ADB0ADD5FC27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226948,"discussion_content":"我也去下个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586445105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135034,"user_name":"堵车","can_delete":false,"product_type":"c1","uid":1145404,"ip_address":"","ucode":"7BC1E50A4F8D3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","comment_is_top":false,"comment_ctime":1568984938,"is_pvip":false,"replies":[{"id":"51856","content":"缓存可以放在存储层，manager可以分为业务类和外部交互类","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569050118,"ip_address":"","comment_id":135034,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23043821418","product_id":100035801,"comment_content":"老师您看下我理解的有没有问题。manager是用来控制事务，缓存外部调用的层。service层才是业务层。service调用dao和manager。manager要不要分一个事务类，一个缓存类，一个外部交互类呢？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468011,"discussion_content":"缓存可以放在存储层，manager可以分为业务类和外部交互类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569050118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134930,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1568957998,"is_pvip":false,"replies":[{"id":"51810","content":"贫血模型把数据和行为区分开，层次上更清晰，但是呢不够面向对象，因为对象肯定是有数据和行为的<br>充血模型是把数据和行为混在一起，缺点是我就不知道业务逻辑是写在biz层还是领域模型里面。<br>我更倾向于贫血模型吧，因为我觉得大团队里面很难规范哪些放在领域模型里面，哪些放在biz层，所以干脆就都放在biz层就好了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568976996,"ip_address":"","comment_id":134930,"utype":1}],"discussion_count":5,"race_medal":0,"score":"23043794478","product_id":100035801,"comment_content":"有人说传统的 MVC 是贫血模式，与之对立的是充血模式，边界划分衍生出 DDD ，优劣到底是哪一个，弄不清楚呐，老师的观点是什么？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467963,"discussion_content":"贫血模型把数据和行为区分开，层次上更清晰，但是呢不够面向对象，因为对象肯定是有数据和行为的\n充血模型是把数据和行为混在一起，缺点是我就不知道业务逻辑是写在biz层还是领域模型里面。\n我更倾向于贫血模型吧，因为我觉得大团队里面很难规范哪些放在领域模型里面，哪些放在biz层，所以干脆就都放在biz层就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568976996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074640,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/d0/c11d4a31.jpg","nickname":"滴水藏海","note":"","ucode":"9C1F9C91189F69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227667,"discussion_content":"亲身感受，充血模型在系统抽象和代码复用上很有效果，但在团队协作上的确很难把控好这个“充血”的度，很多人在胀血和贫血的区间内来回游荡～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586511748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36027,"discussion_content":"好问题，正好是我想问的。老师回答的也很好，现在 DDD 很火，但是真正将 DDD 应用到自己项目的很少。毕竟 DDD 需要解决很多问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571317068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187021,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","nickname":"Gojustforfun","note":"","ucode":"7513A40F27344F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19797,"discussion_content":"biz层是哪一层？图中的service层？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569226119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1231549,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","nickname":"吃饭饭","note":"","ucode":"95CFA07CDA2957","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1187021,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","nickname":"Gojustforfun","note":"","ucode":"7513A40F27344F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":19804,"discussion_content":"biz，英文是[business]，翻译成中文是业务逻辑层。正常的业务你可以理解为 MVC  中的 service 层，但是本质上它是 service 层的一个外部封装，也就是相对于  service 层的 API","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1569227317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":19797,"ip_address":""},"score":19804,"extra":""}]}]},{"had_liked":false,"id":135150,"user_name":"Toutoublue","can_delete":false,"product_type":"c1","uid":1667307,"ip_address":"","ucode":"C1B1AFC8FBA972","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/eb/34301b40.jpg","comment_is_top":false,"comment_ctime":1569044534,"is_pvip":false,"replies":[{"id":"51858","content":"对滴","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569050144,"ip_address":"","comment_id":135150,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18748913718","product_id":100035801,"comment_content":"我们公司电商平台原来是经典三层，后来加了一层，统一做process。大家刚开始觉得没用，后来发现有了process层后，很方便扩展业务渠道，不同业务渠道的逻辑层和process层对接，然后再到统一的数据层。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468068,"discussion_content":"对滴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569050144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134812,"user_name":"段启超","can_delete":false,"product_type":"c1","uid":1258209,"ip_address":"","ucode":"164CF3018071B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/32/e1/c9aacb37.jpg","comment_is_top":false,"comment_ctime":1568939331,"is_pvip":false,"replies":[{"id":"51813","content":"是的，分层的方式也是不断演进的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568977214,"ip_address":"","comment_id":134812,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18748808515","product_id":100035801,"comment_content":"mvc这种结构让太多的人觉得项目工程结构理所应当就是这样的，然后呢，一大堆的业务逻辑就随意的堆砌在了service中，对象啥的，只是单纯的数据传输作用，出现了用面向对象的语言，写面向过程的程序的普遍现象。按照领域驱动设计的思路，最重要的还要有领域模型层。当然manage层这种方案也是一种思路，但是我觉得，这种方式，还不够，必须有清晰的业务模型和合理的分层结构配合，才能更好的提现分层的作用。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467906,"discussion_content":"是的，分层的方式也是不断演进的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568977214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","nickname":"大魔王汪汪","note":"","ucode":"4B205CB52FC95F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17019,"discussion_content":"系统分层还需要建立在一定经验和抽象能力之上的，有些系统为了分层而分层，逻辑散落在多个service中，如果是个通用方法，牵一发而动全身，维护起来苦不堪言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568942595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1258209,"avatar":"https://static001.geekbang.org/account/avatar/00/13/32/e1/c9aacb37.jpg","nickname":"段启超","note":"","ucode":"164CF3018071B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1010680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","nickname":"大魔王汪汪","note":"","ucode":"4B205CB52FC95F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17720,"discussion_content":"是的，分层的主要作用是隔离，层和层之间的依赖应该依赖于抽象而不是具体的实现。如果不明确分层的目的，为赋新词强说愁，就没有意义了，还会有反作用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568976999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":17019,"ip_address":""},"score":17720,"extra":""}]}]},{"had_liked":false,"id":135849,"user_name":"寒溪","can_delete":false,"product_type":"c1","uid":1001970,"ip_address":"","ucode":"67B9F1A1C15A20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","comment_is_top":false,"comment_ctime":1569288433,"is_pvip":false,"replies":[{"id":"52086","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569297500,"ip_address":"","comment_id":135849,"utype":1}],"discussion_count":3,"race_medal":1,"score":"14454190321","product_id":100035801,"comment_content":"传统公司很多是分层部署的，比如保险和金融公司。service和dao部署在比较严密的网络区域，controller层部署在一个较宽松的网络区域，对外提供服务。等于在网络上增加了一个缓冲区，来保证服务的安全；而且可以通过单向网络规范层级调用，controller可以调用服务层，而服务层是不能调用web层的。","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468359,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569297500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001970,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","nickname":"寒溪","note":"","ucode":"67B9F1A1C15A20","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39382,"discussion_content":"是的rpc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571920383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009385,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","nickname":"小陈","note":"","ucode":"A03A299310AD18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37220,"discussion_content":"controller不是请求转发吗？独立部署后难道直接rpc调用？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571546190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134819,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1568939615,"is_pvip":false,"replies":[{"id":"51809","content":"是合理的呀~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568975039,"ip_address":"","comment_id":134819,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14453841503","product_id":100035801,"comment_content":"目前有个业务（下单业务）**不知道这样的分层是否合理。<br>OrderServiceFacade: 接受Controller的调用，具体是一些组织逻辑，组织数据等，然后调用OrderService的创建订单方法.<br>OrderBillService.createBill(): 具有统一事务，具体把order入库，另外它依赖了库存服务(InventoryService),<br>InventoryService.reduce(): 来减少库存<br><br>( OrderBillService 依赖自己的OrderDao，但依赖了库存Service而不是库存DAO )<br><br>&#47;&#47; 订单门面<br>public class OrderServiceFacade {<br>    @Autowrited<br>\tprivate OrderBillService orderBillService;<br>\tpublic boolean submitOrder(Dto dto) {<br>\t\t&#47;&#47; TODO 组织数据 一些特殊验证check<br>\t\t&#47;&#47; TODO 其他非事务性逻辑代码<br>\t\t<br>\t\tString billNo = orderBillService.createBill(dto);<br>\t\t&#47;&#47; TODO 后续工作<br>\t\treturn billNo != null;<br>\t}<br>}<br>&#47;&#47; 订单服务<br>public class OrderBillService {<br>\t@Autowrited<br>\tprivate OrderDao orderDao;<br>\t@Autowrited<br>\tprivate InventoryService inventoryService;<br>\t@Transaction<br>\tpublic String createBill(Dto dto) {<br>\t\tBill bill = dto.convertToBill();<br>\t\torderDao.insert(bill);     &#47;&#47; 保存订单<br>\t\tinventoryService.reduce(); &#47;&#47; 扣减库存服务<br>\t\treturn bill.getBillNo();<br>\t}<br>}<br>&#47;&#47; 库存服务<br>public class InventoryService {<br>\t@Autowrited<br>\tprivate InventoryDao inventoryDao;<br>\t@Transaction<br>\tpublic void reduce() {<br>\t\tint updateCount = inventoryDao.decrease();<br>\t\tif( updateCount != 1 ) {<br>\t\t\tthrow new BizException(&quot;扣减库存失败&quot;);<br>\t\t}<br>\t\t&#47;&#47;TODO 记录库存日志<br>\t}<br>}","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467909,"discussion_content":"是合理的呀~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568975039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222327,"user_name":"😚 46","can_delete":false,"product_type":"c1","uid":1433535,"ip_address":"","ucode":"EED0EBBBF80A43","user_header":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","comment_is_top":false,"comment_ctime":1590749347,"is_pvip":false,"replies":[{"id":"82720","content":"是合理的，分层之后，service是服务的入口，服务之间的调用必须要经过service，而不是之下的任何一级","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591538649,"ip_address":"","comment_id":222327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10180683939","product_id":100035801,"comment_content":"“分层架构需要考虑层次之间一定是相邻层互相依赖，数据的流转也只能在相邻的两层之间流转”<br>请教下，同一层之间的流转合理吗？<br>比如AService依赖BService，在实现AService中的A方法里又调用了BService的B方法。<br>老师能具体的解惑下，这样做合理吗？如果不合理，为什么不合理呢？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496752,"discussion_content":"是合理的，分层之后，service是服务的入口，服务之间的调用必须要经过service，而不是之下的任何一级","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591538649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203166,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586146683,"is_pvip":false,"replies":[{"id":"78257","content":"总结到位~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623613,"ip_address":"","comment_id":203166,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10176081275","product_id":100035801,"comment_content":"分而治之是处理一切复杂问题的最终解决思路，问题太大或者太复杂不分而治之，我真不知道该怎么办?猜测上帝也不知道该怎么办?<br>架构分层是分而治之思想在软件架构侧的具体体现吧！分层之后，可以各司其职、可以并行开发、可以明确权责，以后维护、扩展、完善也可以按层来做，另外就是上层依赖下层但不管也不关注下层的具体实现，那下层的实现就更加灵活，下层实现的变化对于上层也是透明的，这样整个系统就非常的灵活可扩展易维护。这就会使我们能够获得更大的成本和收益比，最终达到成本最小化利益最大化的终极目标。","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490786,"discussion_content":"总结到位~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155959,"user_name":"梅子黄时雨","can_delete":false,"product_type":"c1","uid":1015938,"ip_address":"","ucode":"9F788D09C2E9E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/82/3c21b30c.jpg","comment_is_top":false,"comment_ctime":1574783007,"is_pvip":false,"replies":[{"id":"60249","content":"是可以的~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575016269,"ip_address":"","comment_id":155959,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10164717599","product_id":100035801,"comment_content":"自己的项目中没有用过manager这层。平常看到一个service类中有上千行代码，就有想过怎么优化，看到专栏后，我觉得对这个类就可以分层，把一部分代码下沉到manager。","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475939,"discussion_content":"是可以的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575016269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137656,"user_name":"小沫","can_delete":false,"product_type":"c1","uid":1000977,"ip_address":"","ucode":"52341656210E0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/11/1cf8c174.jpg","comment_is_top":false,"comment_ctime":1569813576,"is_pvip":false,"replies":[{"id":"52891","content":"嗯那 是一种更细粒度的拆分","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569815536,"ip_address":"","comment_id":137656,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159748168","product_id":100035801,"comment_content":"老师您好：<br>如果将数据访问层单独部署，一方面可以为后期服务运维降低成本，二来可以提高数据访问层的复用度（数据访问层对外提供API，其他层的应用通过API方式与数据库进行交互），三来可以屏蔽各个数据库实现的具体细节。<br><br>","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469196,"discussion_content":"嗯那 是一种更细粒度的拆分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569815536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230662,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1071877,"ip_address":"","ucode":"8ED1AA14E8D1CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/05/863fc875.jpg","comment_is_top":false,"comment_ctime":1593443836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888411132","product_id":100035801,"comment_content":"很多时候，复杂的业务逻辑会很难搞得出manager层，或者说满足不了service层的，会导致manager层不断膨胀。而且完成某个逻辑，可能需要调多次manager来完成数据组装，带来很大的性能问题，不如一次sql来得快  <br>这种怎么解决 ","like_count":1},{"had_liked":false,"id":191222,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1584756188,"is_pvip":false,"replies":[{"id":"73900","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585020088,"ip_address":"","comment_id":191222,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879723484","product_id":100035801,"comment_content":"分层的好处，我是这样理解的 <br>1.分层 - 层就确定了层的边界 边界内的事就能专注，专注为分工提供了可能<br>2.分层 - 复用，其实也可以理解封装 - 对外面的透明<br>3.分层 - 利于横向扩展 - 层内是自治的，所以就提供了集群的充分条件","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488132,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585020088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142195,"user_name":"Allen Zou","can_delete":false,"product_type":"c1","uid":1121996,"ip_address":"","ucode":"869093D74E5EF3","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/cc/ee358b34.jpg","comment_is_top":false,"comment_ctime":1571308180,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5866275476","product_id":100035801,"comment_content":"老师，Service 编排时如何处理各原子方法间的事务问题呢？我一般的做法是把数据库操作的句柄以参数方式传递给原子方法，但这样的坏处是 方法参数多了一个与业务无关的参数，比较丑","like_count":1,"discussions":[{"author":{"id":1033096,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/88/d16816a8.jpg","nickname":"如来神掌","note":"","ucode":"45E20FF935BD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306770,"discussion_content":"我是get的方法通过实例化类注入到原子层，使其在原子层全局可用，更新的是在service里获取DB，传入原子方法，和你的一样。不知道有没有更好的招数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600386833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141532,"user_name":"岁寒","can_delete":false,"product_type":"c1","uid":1066921,"ip_address":"","ucode":"D062733384F4BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/a9/3ace68b6.jpg","comment_is_top":false,"comment_ctime":1571188640,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5866155936","product_id":100035801,"comment_content":"我的分法类似，不过我是采用golang语言，可以用internal屏蔽开发细节，internal里面实现model dao service注重service的接口，对外提供server接口，server可以是http grpc或者其他，聚合服务，如果是单体应用，可以在controller里面，可以把多个通用聚合服务，放到一个叫compose的专门文件夹，做通用聚合服务","like_count":1,"discussions":[{"author":{"id":1066921,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/a9/3ace68b6.jpg","nickname":"岁寒","note":"","ucode":"D062733384F4BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34278,"discussion_content":"internal里面可以采用任何方式设计，可以是ddd可以是传统三层，都可以，只要接口定义好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571190057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1971269,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oltLEqTrmHm2aJP99BK6tHu5h7hp4aj08wR5Wt6H31iadFduDAVvjYKmhQ2nvGbLV3lkVdiat2GRasgWXoJeTibUg/132","nickname":"杨","note":"","ucode":"7EFEFE285975C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373113,"discussion_content":"你的意思是第一层是controller  第二层是service  第三层是Dao  显示出是一个树形结构吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620618714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138334,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1570169607,"is_pvip":false,"replies":[{"id":"53251","content":"不同的端 service的逻辑会完全一致吗？如果有细微差别怎么办","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570264715,"ip_address":"","comment_id":138334,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5865136903","product_id":100035801,"comment_content":"关于分层的代码复用那块内容，我觉得最主要的目的不是复用代码，而是如遇到变更只需要改一处。<br><br>场景：<br>现在的需求是创建用户，app端，网页端，微信端创建用户都有自己的逻辑，自己的接口，但是他们最终都直接调用了数据库层的插入。后来需求变更，需要在创建之后留一个保存的日志。这时候就需要改三个接口的逻辑。<br>但是，如果中间有service就不一样。在他们公共的创建接口前，调用存日志就解决了。就算再有几个接口也能做到只改一处。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469491,"discussion_content":"不同的端 service的逻辑会完全一致吗？如果有细微差别怎么办","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570264715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274117,"avatar":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","nickname":"👽","note":"","ucode":"D313AF941B412D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24797,"discussion_content":"肯定不会完全一致，如果完全一致就不需要多个接口了。但是如果80%一致，那就值得把这80%尝试提取出来，共同调用它。我说的这个场景就是这个前提下的情况。\n\n另外，我想说的是，代码的复用，个人认为根本上并不是为了少写一次，而是在变动的时候只需要改一处。因为少写的话其实并不在乎，反正是复制粘贴。但是改动就不一样了，假设一套代码复制粘贴了十个地方，那就要改十处，万一少改了一处，后果是严重的。\n\n假如有四个端用到了创建用户，为了推广，一开始的业务创建成功后将其余额设为10¥，如果需求变化，不再赠送余额，那就在service里把默认赋予余额屏蔽掉，如果需求再变化，只有微信端赠送余额，就在微信端调用service之后多吊用一次赋予余额的方法就好。\n\n\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570266052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033096,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/88/d16816a8.jpg","nickname":"如来神掌","note":"","ucode":"45E20FF935BD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306774,"discussion_content":"可以在service里分别创建自己的创建方法，相同的地方抽出一个方法，不同之处在各方法里处理机即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600387568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138234,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1570110486,"is_pvip":false,"replies":[{"id":"53246","content":"我建议还是需要的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570264521,"ip_address":"","comment_id":138234,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865077782","product_id":100035801,"comment_content":"老师你讲出了我的疑惑，我有时就在想有时只是简单的“二传手”什么也不做，直到底层才做事，何不直接调用底层？现在知道了。 同时我有一个疑问，例如有些能力提供的http REST接口出来可供调用，这时候我JavaScript也能直接调用，且对方不支持JAVA级别的API，用JAVA也要HTTP封装一次，这种情况依然坚持分层原则吗？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469447,"discussion_content":"我建议还是需要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570264521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137391,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1569728345,"is_pvip":false,"replies":[{"id":"52798","content":"数据访问层作为单独的RPC服务来部署~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569739208,"ip_address":"","comment_id":137391,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5864695641","product_id":100035801,"comment_content":" “数据访问层也是可以独立部署的，controller也是独立部署的web服务”<br>老师好，没这么操作过，不是很理解，请问具体怎么部署呀？什么场景需要适合独立部署呀？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469066,"discussion_content":"数据访问层作为单独的RPC服务来部署~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569739208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1671720,"avatar":"https://static001.geekbang.org/account/avatar/00/19/82/28/c7b817b9.jpg","nickname":"viima","note":"","ucode":"5F56EE13E67138","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25420,"discussion_content":"存储服务化","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570525698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136678,"user_name":"alexgreenbar","can_delete":false,"product_type":"c1","uid":1003655,"ip_address":"","ucode":"87ED7233E2767C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/87/dde718fa.jpg","comment_is_top":false,"comment_ctime":1569490616,"is_pvip":true,"replies":[{"id":"52468","content":"SRP是一个类有单一的职责，是期望功能尽量内聚到一个类中。也许功能这个词儿不准确，不过思想是这样的。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569512868,"ip_address":"","comment_id":136678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864457912","product_id":100035801,"comment_content":"比方说，单一职责原则规定每个类只有单一的功能<br><br>这个定义是对SRP的误解，原定义是：<br>SRP: 1. A module should be responsible to one, and only one, actor. 2. Separate the code that different actors depend on.<br><br>所以单一职责原则不是说每个类只有单一的功能，而是每个类最好只有一个被改变的原因。<br>","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468750,"discussion_content":"SRP是一个类有单一的职责，是期望功能尽量内聚到一个类中。也许功能这个词儿不准确，不过思想是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569512868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136556,"user_name":"_Axios丶靜ﻩ","can_delete":false,"product_type":"c1","uid":1477364,"ip_address":"","ucode":"B2E8867CFCF92C","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/f4/fbbe4601.jpg","comment_is_top":false,"comment_ctime":1569472029,"is_pvip":false,"replies":[{"id":"52470","content":"也是有分层的，只是不像业务系统这样分为典型的三层架构","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569512943,"ip_address":"","comment_id":136556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864439325","product_id":100035801,"comment_content":"感觉这种分层的思想大多是体现在业务系统中，但是像spring，dubbo之类的并不是按照这个去分层的","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468692,"discussion_content":"也是有分层的，只是不像业务系统这样分为典型的三层架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569512943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136536,"user_name":"黄小咸","can_delete":false,"product_type":"c1","uid":1324680,"ip_address":"","ucode":"FBEA89F7E7D556","user_header":"https://static001.geekbang.org/account/avatar/00/14/36/88/7ed30552.jpg","comment_is_top":false,"comment_ctime":1569466208,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5864433504","product_id":100035801,"comment_content":"打卡，分层架构优点：提高复用性，层次分明各司其职，更容易做横向扩展。缺点：提高代码复杂性，服务化架构相比单体架构的多一跳问题","like_count":1},{"had_liked":false,"id":136118,"user_name":"王枫","can_delete":false,"product_type":"c1","uid":1170852,"ip_address":"","ucode":"0F423C19D23C20","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/a4/706c3984.jpg","comment_is_top":false,"comment_ctime":1569370506,"is_pvip":false,"replies":[{"id":"52145","content":"苹果自带的Keynote哦😜","user_name":"编辑回复","user_name_real":"朱会","uid":"1564447","ctime":1569374440,"ip_address":"","comment_id":136118,"utype":2}],"discussion_count":1,"race_medal":0,"score":"5864337802","product_id":100035801,"comment_content":"文中的图用什么软件画的？方便告知一下么？","like_count":1,"discussions":[{"author":{"id":1564447,"avatar":"https://static001.geekbang.org/account/avatar/00/17/df/1f/650a1d51.jpg","nickname":"小白兔奶糖","note":"","ucode":"AD0B858CFD1304","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468468,"discussion_content":"苹果自带的Keynote哦😜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569374440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135047,"user_name":"惠武","can_delete":false,"product_type":"c1","uid":1666930,"ip_address":"","ucode":"CC1A3BE10B095A","user_header":"https://static001.geekbang.org/account/avatar/00/19/6f/72/5392293a.jpg","comment_is_top":false,"comment_ctime":1568988086,"is_pvip":false,"replies":[{"id":"51859","content":"数据访问层可以拆分为单独的rpc服务，当然这样拆分粒度比较细。controller就是对外的门面，调用单独的服务层","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569050212,"ip_address":"","comment_id":135047,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863955382","product_id":100035801,"comment_content":"唐老师，您好。您说：数据访问层也是可以独立部署的，controller也是独立部署的web服务。。<br><br>这个技术上用什么实现？分层的两个服务如何数据交互呢，它们毕竟不是两个完整的服务（有完整的三层架构甚至更细化架构）","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468019,"discussion_content":"数据访问层可以拆分为单独的rpc服务，当然这样拆分粒度比较细。controller就是对外的门面，调用单独的服务层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569050212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134943,"user_name":"逍遥法外","can_delete":false,"product_type":"c1","uid":1103533,"ip_address":"","ucode":"75458730192696","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/ad/52df3832.jpg","comment_is_top":false,"comment_ctime":1568960265,"is_pvip":false,"replies":[{"id":"51805","content":"是的，分层和扩展性是强相关的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974684,"ip_address":"","comment_id":134943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863927561","product_id":100035801,"comment_content":"分层架构第一感觉还是应对可扩展的复杂度","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467969,"discussion_content":"是的，分层和扩展性是强相关的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134926,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1568957360,"is_pvip":false,"replies":[{"id":"51811","content":"大厂应该类似阿里的这套拆分方法多一些，只不过不同的公司又夹带一些私货进去，有一些自己的特点","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568977082,"ip_address":"","comment_id":134926,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5863924656","product_id":100035801,"comment_content":"感谢老师的分享，我个人认为不同的技术栈作比较，没太大意义，关键在业务场景以及使用的技术栈所包含的优势是不是关注的重点，它的缺点是否对业务没有太大影响，另外对于架构分层来讲有个疑问就是，现在有一些架构的分层是从逻辑上做分层，也就是一些把原先整体的业务逻辑，拆分成几个子系统，做成微服务架构，但是各个微服务之间的数据交互的链路追踪和服务可用性的监听就非常重要了，另外一种就是在业务代码层面做一些分层，也就是更多的分离出一些类似service，manager，这样的模块，但还是嵌在整个代码逻辑中，后期流量上来后采用负载均衡+数据库HA+缓存+异步消息队列的形式，但是随着时间的迁移，业务的代码量会越来越复杂，这么想的话，到最后也只有走微服务这一条路了吗？除此之外， 业界还有没有其他比较通用的架构分层的解决方案，对于PHP技术栈那边用的更多的应该是后面这一种，因为貌似没有听说有特别好用的微服务rpc框架，如果自己造轮子又存在可用性和性能的考验，不知道一些大厂是采用什么分层架构比较多呢？希望得到老师的回复","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467959,"discussion_content":"大厂应该类似阿里的这套拆分方法多一些，只不过不同的公司又夹带一些私货进去，有一些自己的特点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568977082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095740,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","nickname":"Panda","note":"","ucode":"911A200C7B18BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51081,"discussion_content":"PHP  的微服务技术栈可以选 Swoft  😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573808809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134860,"user_name":"logant","can_delete":false,"product_type":"c1","uid":1244556,"ip_address":"","ucode":"F7AC53F477BE8D","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/8c/357dc701.jpg","comment_is_top":false,"comment_ctime":1568943833,"is_pvip":false,"replies":[{"id":"51812","content":"有的呀，比如rpc框架的服务端就有分集群层，协议层等等，只是没有那么明显。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568977184,"ip_address":"","comment_id":134860,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863911129","product_id":100035801,"comment_content":"个人见解 这种分层提现的一种思想 一种对事物拆分实现的思想<br>疑问点:这种分层的思想 在大型来源软件中感觉提现的较弱，也可能是自己没看出来，比如hdfs或者mapreduce这种来源组件里面 基本上很难看到这种分层？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467932,"discussion_content":"有的呀，比如rpc框架的服务端就有分集群层，协议层等等，只是没有那么明显。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568977184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134845,"user_name":"堵车","can_delete":false,"product_type":"c1","uid":1145404,"ip_address":"","ucode":"7BC1E50A4F8D3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","comment_is_top":false,"comment_ctime":1568942188,"is_pvip":false,"replies":[{"id":"51807","content":"业务层应该就是manager层","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974816,"ip_address":"","comment_id":134845,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5863909484","product_id":100035801,"comment_content":"我把业务层拆成两层，业务层biz和事务层service。业务层做业务处理，比如调用事务层操作数据，发送短信，kfk。事务层只做事务控制，不做其他业务。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467922,"discussion_content":"业务层应该就是manager层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012843,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/6b/a98162a1.jpg","nickname":"winner_0715","note":"","ucode":"A033A30539181F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21254,"discussion_content":"biz是文中的service,service是文中的manager，个人感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569459539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134833,"user_name":"业余草","can_delete":false,"product_type":"c1","uid":1126538,"ip_address":"","ucode":"99BDC1E629049D","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","comment_is_top":false,"comment_ctime":1568941072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863908368","product_id":100035801,"comment_content":"分层的设计可以简化系统设计，让不同的人专注做某一层次的事情。","like_count":1},{"had_liked":false,"id":134783,"user_name":"三年过后","can_delete":false,"product_type":"c1","uid":1283157,"ip_address":"","ucode":"5E9106C5F11BED","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/55/afc64956.jpg","comment_is_top":false,"comment_ctime":1568934354,"is_pvip":false,"replies":[{"id":"51695","content":"adduser和getUser都应该是在manager层，service来对这两个方法封装。中台其实是整合不同业务的通用逻辑的，让新业务接入时间更短，是更大范围的事情","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935601,"ip_address":"","comment_id":134783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863901650","product_id":100035801,"comment_content":"阿里分层架构图中，上层依赖下层，箭头关系表示直接依赖。文中提到需求案例getUser细化，引申出阿里分层架构图，那么新增用户addUser业务逻辑是放在业务逻辑层（Service层），getUser就放在通用处理层（Manager层）吧？  老师可以引入最近大家在讨论的中台，个人拙见。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467896,"discussion_content":"adduser和getUser都应该是在manager层，service来对这两个方法封装。中台其实是整合不同业务的通用逻辑的，让新业务接入时间更短，是更大范围的事情","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134763,"user_name":"刘晖","can_delete":false,"product_type":"c1","uid":1048896,"ip_address":"","ucode":"3BE8ACA7E0D846","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/40/ab312f06.jpg","comment_is_top":false,"comment_ctime":1568911581,"is_pvip":true,"replies":[{"id":"51697","content":"其实是不分语言的：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935649,"ip_address":"","comment_id":134763,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5863878877","product_id":100035801,"comment_content":"总觉得php框架大都是MVC。<br><br>实际工作中不同公司会加其他层。比如service。比如manager。<br><br>感觉php框架没有Java框架分层分的好。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467891,"discussion_content":"其实是不分语言的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128084,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/94/5aecb0ef.jpg","nickname":"y3","note":"","ucode":"C93F8EC2AAACF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16956,"discussion_content":"这一章节内容比较理论化，希望唐老师在后面的章节中，针对案例讲解一下做架构分层需要注意的地方！谢谢🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568937586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351165,"user_name":"Geek4399","can_delete":false,"product_type":"c1","uid":2961300,"ip_address":"","ucode":"A4185CA5DE47C6","user_header":"","comment_is_top":false,"comment_ctime":1657587071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657587071","product_id":100035801,"comment_content":"分层架构也要演进，符合业务发展的阶段","like_count":0},{"had_liked":false,"id":346849,"user_name":"郑小鹿","can_delete":false,"product_type":"c1","uid":1186808,"ip_address":"","ucode":"E8AF63B4CFCD6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/1b/f8/01e7fc0e.jpg","comment_is_top":false,"comment_ctime":1653470872,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653470872","product_id":100035801,"comment_content":"MVC-&gt; CLD -&gt; 扩展成多层<br>manager提供单一实体的操作接口<br>service通过组合调用这些接口实现业务逻辑的处理","like_count":0},{"had_liked":false,"id":330234,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1641873688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641873688","product_id":100035801,"comment_content":"1、在service中调用多个service，一个service对应一个DAO<br>2、在service中调用多个DAO，service之间不互相调用<br><br>这两种方式哪一种更好呢？","like_count":0},{"had_liked":false,"id":292496,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1100251,"ip_address":"","ucode":"9BEEC9E38E8DBC","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/db/04abe949.jpg","comment_is_top":false,"comment_ctime":1620856998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620856998","product_id":100035801,"comment_content":"咨询一个问题 逻辑上技术是用来简化问题的，架构目的也是如此，作者提到分层提升了复杂度 这一点感觉不好理解 ","like_count":0},{"had_liked":false,"id":292426,"user_name":"感谢经历","can_delete":false,"product_type":"c1","uid":1306878,"ip_address":"","ucode":"74D8914FEDED10","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/fe/b13419ce.jpg","comment_is_top":false,"comment_ctime":1620815207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620815207","product_id":100035801,"comment_content":"当遇到列表导出功能的时候，导出功能和service做的查询是一样的，我们是应该把查询挪到model还是分离一个manager层出来呢？","like_count":0},{"had_liked":false,"id":292425,"user_name":"感谢经历","can_delete":false,"product_type":"c1","uid":1306878,"ip_address":"","ucode":"74D8914FEDED10","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/fe/b13419ce.jpg","comment_is_top":false,"comment_ctime":1620815060,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620815060","product_id":100035801,"comment_content":"老师我想问，我们现在是controller接收请求，service层处理业务和查询，model层定义关联和固定值。","like_count":0},{"had_liked":false,"id":289488,"user_name":"红高粱","can_delete":false,"product_type":"c1","uid":2365564,"ip_address":"","ucode":"0DD331C8E01A81","user_header":"https://static001.geekbang.org/account/avatar/00/24/18/7c/91d6dd83.jpg","comment_is_top":false,"comment_ctime":1619052108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619052108","product_id":100035801,"comment_content":"我看完后来说说我的看法，本节指出了服务的层次划分，特别是指出了聚合服务和基本服务，指出了一个外层web的controller层，一般聚合服务或者基本服务可以做成微服务，供多个处理入口访问，服务拆分后意味着，更加复杂的日志链条，分布式事务的控制，业务上的分布式锁，多台机器之间的业务幂等性等处理。希望相互交流。","like_count":0},{"had_liked":false,"id":286453,"user_name":"李雷","can_delete":false,"product_type":"c1","uid":1128727,"ip_address":"","ucode":"12BD2E55479CF2","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/17/25833aa7.jpg","comment_is_top":false,"comment_ctime":1617326664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617326664","product_id":100035801,"comment_content":"这个分层结构已经演化，融入领域驱动设计，原先的manager、数据库dao层变成领域层和基础设施层","like_count":0},{"had_liked":false,"id":270853,"user_name":"大鱼","can_delete":false,"product_type":"c1","uid":1352665,"ip_address":"","ucode":"1418EE18C4BDD4","user_header":"","comment_is_top":false,"comment_ctime":1609302864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609302864","product_id":100035801,"comment_content":"看了一下评论区里面，大家更多的是关注每一层具体的职责是什么，那定义的层次的结构是不是可以根据自己公司的业务来进行划分，三层或者n层的通用设计只是给一个大致的规范","like_count":0},{"had_liked":false,"id":257323,"user_name":"Destiny","can_delete":false,"product_type":"c1","uid":1258567,"ip_address":"","ucode":"B9F1AE7CDF5C30","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/47/6d212e42.jpg","comment_is_top":false,"comment_ctime":1603937708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603937708","product_id":100035801,"comment_content":"自认为有点牵强的总结：<br>系统垂直分层：<br>弊端：1. 增加了系统的复杂性<br>     2. 延长了系统的调用链路，增加了消耗。<br><br><br>优势： 1. 分层的概念是面向接口编程的一种扩展，让不同的服务更接近于单一职能，让不同的人专注做某一层的事情。系统相对比较清晰。<br>2.  有种场景比如涉及计算，在用户相关的功能里面存在计算，在工单相关的页面也存在计算，如果是单体项目，就会加大服务器压力，使其吞吐量减少。只能采用scala-out扩展，但是每个服务所需要的资源相对来说也比较多。<br>3. 分层更有利于扩展，如果说工单相关的项目访问量比较高，就可以只对工单做scala-out.<br>4. 复用行提高，当其他模块需要调用工单服务的时候，可以直接在原子服务暴漏接口。","like_count":0},{"had_liked":false,"id":243168,"user_name":"　　　　　　　　","can_delete":false,"product_type":"c1","uid":1174056,"ip_address":"","ucode":"A68855A9893CC3","user_header":"https://static001.geekbang.org/account/avatar/00/11/ea/28/9d621043.jpg","comment_is_top":false,"comment_ctime":1597979962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597979962","product_id":100035801,"comment_content":"我们一般分为控制层、业务逻辑层、数据层","like_count":0},{"had_liked":false,"id":242349,"user_name":"O N E","can_delete":false,"product_type":"c1","uid":1582090,"ip_address":"","ucode":"D4903338F7EA16","user_header":"https://static001.geekbang.org/account/avatar/00/18/24/0a/baa35501.jpg","comment_is_top":false,"comment_ctime":1597677052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597677052","product_id":100035801,"comment_content":"老师，有分层的示例项目吗？","like_count":0},{"had_liked":false,"id":227853,"user_name":"@","can_delete":false,"product_type":"c1","uid":1112124,"ip_address":"","ucode":"9FB1632E6C98E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/3c/29d8afd7.jpg","comment_is_top":false,"comment_ctime":1592494813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592494813","product_id":100035801,"comment_content":"有很多架构模式，分层架构，洋葱架构，六边形架构？都有什么区别和联系呢？","like_count":0},{"had_liked":false,"id":216993,"user_name":"也許有一天","can_delete":false,"product_type":"c1","uid":1899883,"ip_address":"","ucode":"61D4A89C97B096","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fd/6b/d91521bf.jpg","comment_is_top":false,"comment_ctime":1589382171,"is_pvip":false,"replies":[{"id":"82724","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591538905,"ip_address":"","comment_id":216993,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589382171","product_id":100035801,"comment_content":"老师，MVVM也算一种分层吗?","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495003,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591538905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203305,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1244248,"ip_address":"","ucode":"86A78303C9AB9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/58/90b7b363.jpg","comment_is_top":false,"comment_ctime":1586168691,"is_pvip":false,"replies":[{"id":"78262","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623722,"ip_address":"","comment_id":203305,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586168691","product_id":100035801,"comment_content":"我们现在采用微服务的架构，gomicro 到service,controller,dao","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490825,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202750,"user_name":"蓝莲花","can_delete":false,"product_type":"c1","uid":1208222,"ip_address":"","ucode":"69CA73B9BAEBE3","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/9e/5c41ff1c.jpg","comment_is_top":false,"comment_ctime":1586062267,"is_pvip":false,"replies":[{"id":"75848","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586089189,"ip_address":"","comment_id":202750,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586062267","product_id":100035801,"comment_content":"分层架构的初衷，应该是降低系统复杂度，而不是增加了复杂度。过度的分层才会增加复杂度，适得其反。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490675,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586089189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187421,"user_name":"啊潮","can_delete":false,"product_type":"c1","uid":1074344,"ip_address":"","ucode":"3F9C9E016D47E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/a8/5043f088.jpg","comment_is_top":false,"comment_ctime":1584106738,"is_pvip":false,"replies":[{"id":"73106","content":"y也可以的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590885,"ip_address":"","comment_id":187421,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584106738","product_id":100035801,"comment_content":"通用服务层和服务层都放在一层里，也是为了简化开发","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487103,"discussion_content":"y也可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181395,"user_name":"黄马","can_delete":false,"product_type":"c1","uid":1019506,"ip_address":"","ucode":"93E391B4678EC2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/72/63c94eee.jpg","comment_is_top":false,"comment_ctime":1582534773,"is_pvip":true,"replies":[{"id":"71109","content":"单一层次独立部署","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115442,"ip_address":"","comment_id":181395,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1582534773","product_id":100035801,"comment_content":"分层怎么独立部署？不是服务独立部署吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484988,"discussion_content":"单一层次独立部署","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172553,"user_name":"飞鸟在途","can_delete":false,"product_type":"c1","uid":1154316,"ip_address":"","ucode":"1F6F21B25F0B79","user_header":"https://static001.geekbang.org/account/avatar/00/11/9d/0c/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1579222918,"is_pvip":false,"replies":[{"id":"66899","content":"赞~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579228083,"ip_address":"","comment_id":172553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579222918","product_id":100035801,"comment_content":"这个mvc感觉是小学生必修课，哪有不分层的系统。整个系统架构更像是一棵树，合适优化节点，何时进阶，看着容易，实际是非常难的。即：所谓的他能把代码写成几千行的问题，另外是里面的文件类等路由规则，多个路由等于没有路由...","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481774,"discussion_content":"赞~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579228083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170447,"user_name":"Jayliud","can_delete":false,"product_type":"c1","uid":1048329,"ip_address":"","ucode":"0274FC2607B1BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/09/e0c39733.jpg","comment_is_top":false,"comment_ctime":1578616626,"is_pvip":false,"replies":[{"id":"66143","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1578668118,"ip_address":"","comment_id":170447,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578616626","product_id":100035801,"comment_content":"相当于是每一层当做一个微服务部署，每层之间通过rpc调用。介于单体项目和纯微服务之间。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480987,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578668118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167114,"user_name":"沧海一声笑哈哈","can_delete":false,"product_type":"c1","uid":1345064,"ip_address":"","ucode":"4086BD04D68673","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ericCme76GR5tsxktQjbJgIurEvjqpsia58HqagibrhaGshiaMvvTMKqBh6XWQdwBoJTV2oB4enYjBsCw/132","comment_is_top":false,"comment_ctime":1577693802,"is_pvip":false,"replies":[{"id":"65130","content":"可以呀","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577944731,"ip_address":"","comment_id":167114,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577693802","product_id":100035801,"comment_content":"老师，我们公司的代码（php）基本都按照业务功能做成了一个个独立的package包，将package放在本地进行，composer安装，这种方式是否可取？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479749,"discussion_content":"可以呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577944731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164467,"user_name":"Daniel","can_delete":false,"product_type":"c1","uid":1767163,"ip_address":"","ucode":"C081ADEFF02C2A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jA97yib7VetVLH5vAU7Q1OAKFiaXyDhibBRFYDKdOxhNMOEHmNlACOzqyLjR1gtlribyRicFc0ClIyx1o0ld7WOyMNw/132","comment_is_top":false,"comment_ctime":1577002027,"is_pvip":false,"replies":[{"id":"63001","content":"加油💪","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577196319,"ip_address":"","comment_id":164467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577002027","product_id":100035801,"comment_content":"打卡","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478778,"discussion_content":"加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577196319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153423,"user_name":"🌜","can_delete":false,"product_type":"c1","uid":1513966,"ip_address":"","ucode":"190C308B747FF8","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/ee/6154cfd8.jpg","comment_is_top":false,"comment_ctime":1574233793,"is_pvip":false,"replies":[{"id":"59013","content":"压测在32节课中会讲到","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294320,"ip_address":"","comment_id":153423,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574233793","product_id":100035801,"comment_content":"老师您好，我想问一下，我如何评估目前系统的极限，如何压测，有什么软件，或者您的方法，贡献一下吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475160,"discussion_content":"压测在32节课中会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153358,"user_name":"🌜","can_delete":false,"product_type":"c1","uid":1513966,"ip_address":"","ucode":"190C308B747FF8","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/ee/6154cfd8.jpg","comment_is_top":false,"comment_ctime":1574221981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574221981","product_id":100035801,"comment_content":"老师您好，我想问一下，我如何知道现在系统的性能极限，如何压测吗，有什么要的软件，或者什么办法呢？","like_count":0},{"had_liked":false,"id":151896,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1573808342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573808342","product_id":100035801,"comment_content":"高内聚低耦合   拆分模块  拆分服务  都是这个原则","like_count":0},{"had_liked":false,"id":149390,"user_name":"周鸣","can_delete":false,"product_type":"c1","uid":1080563,"ip_address":"","ucode":"0796B633876E92","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/f3/d5cc779e.jpg","comment_is_top":false,"comment_ctime":1573207847,"is_pvip":false,"replies":[{"id":"57674","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573433927,"ip_address":"","comment_id":149390,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573207847","product_id":100035801,"comment_content":"老师对于文中的例子，是在manger里面有两个方法。createUser和getUser然后在serive里面根据业务场景不同对这两个接口做不同的编排吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473846,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573433927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143307,"user_name":"周楷","can_delete":false,"product_type":"c1","uid":1181802,"ip_address":"","ucode":"526135B1793FF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/6a/97621b8e.jpg","comment_is_top":false,"comment_ctime":1571665511,"is_pvip":false,"replies":[{"id":"55354","content":"超时报错","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571701074,"ip_address":"","comment_id":143307,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571665511","product_id":100035801,"comment_content":"这个manager层对接第三方接口， 超时咋整。 ","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471480,"discussion_content":"超时报错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571701074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139931,"user_name":"拉格朗日的忧桑","can_delete":false,"product_type":"c1","uid":1312991,"ip_address":"","ucode":"5FCB2C6616E113","user_header":"https://static001.geekbang.org/account/avatar/00/14/08/df/4e5c2b29.jpg","comment_is_top":false,"comment_ctime":1570769618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570769618","product_id":100035801,"comment_content":"老师阿里的架构 能提供一下代码示例吗？比如github","like_count":0},{"had_liked":false,"id":137378,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1003104,"ip_address":"","ucode":"E8F0F3B000020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","comment_is_top":false,"comment_ctime":1569726484,"is_pvip":false,"replies":[{"id":"52799","content":"就是mac自带的keynote~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569739231,"ip_address":"","comment_id":137378,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569726484","product_id":100035801,"comment_content":"老师画图用的什么字体呢，能分享下吗","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469059,"discussion_content":"就是mac自带的keynote~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569739231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136671,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1569489361,"is_pvip":false,"replies":[{"id":"52491","content":"已经修改，感谢~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569546580,"ip_address":"","comment_id":136671,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569489361","product_id":100035801,"comment_content":"老师，文稿配图有问题，网络分层模型，数据链路图，图 -&gt; 层。<br>谢谢老师分享。<br>拿我所在的项目举例，开始时，程序员一手都数的过来，在这种情况下，如何多快好省的开发功能是重点，分层在其次。<br>随着项目的逐渐发展，人员从几人扩展到几十人，为了更好的协作，提升大家工作效率，分层就是重中之重。<br>分层，从某种意义上来讲是设计模式中的单一职责模式的体现，是项目变强的必经之路。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468746,"discussion_content":"已经修改，感谢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569546580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136664,"user_name":"怪盗基德","can_delete":false,"product_type":"c1","uid":1680653,"ip_address":"","ucode":"EADBDF850A873E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83errHypG6kuO0V2WwHy7sOjrUUBkkffmCAfSMQ1yDXdFzfnyg7KFXrwXf42FficeU7WLibyRnsEicWFVA/132","comment_is_top":false,"comment_ctime":1569488706,"is_pvip":false,"replies":[{"id":"52474","content":"是的，养成了好的习惯，也能尽量避免埋坑","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569520599,"ip_address":"","comment_id":136664,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569488706","product_id":100035801,"comment_content":"在实际的开发过程中，我有的时候严格要求自己做好代码分层，有的时候又会偷懒简化分层，挺纠结和矛盾的，看到你说的“从长远的架构设计考虑，这样会造成层级调用的混乱。“，现在觉得好的习惯还是要努力养成的~","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468744,"discussion_content":"是的，养成了好的习惯，也能尽量避免埋坑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569520599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135909,"user_name":"RogerRoger","can_delete":false,"product_type":"c1","uid":1667213,"ip_address":"","ucode":"B22D39549F2BD0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Ia8qXKLnJJbHjsYNQnlQguAM9YHiaBLWgSlDeGjVOrVTwibLmGqur0wMO0S8f2eC2PjPicIlUqNvNTbDa4yZMCDjg/132","comment_is_top":false,"comment_ctime":1569297921,"is_pvip":false,"replies":[{"id":"52138","content":"也是一种架构方式","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569372243,"ip_address":"","comment_id":135909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569297921","product_id":100035801,"comment_content":"Event driven architecture呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468380,"discussion_content":"也是一种架构方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569372243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135449,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1569163677,"is_pvip":false,"replies":[{"id":"51947","content":"也可以这么说吧~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569199682,"ip_address":"","comment_id":135449,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569163677","product_id":100035801,"comment_content":"分层的好处解耦团队","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468201,"discussion_content":"也可以这么说吧~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569199682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135410,"user_name":"Liush","can_delete":false,"product_type":"c1","uid":1670430,"ip_address":"","ucode":"A02C6AD7B2DD8D","user_header":"https://static001.geekbang.org/account/avatar/00/19/7d/1e/ba1a32aa.jpg","comment_is_top":false,"comment_ctime":1569150259,"is_pvip":false,"replies":[{"id":"51948","content":"是的，还是对于业务的抽象能力比较重要","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569199699,"ip_address":"","comment_id":135410,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569150259","product_id":100035801,"comment_content":"我是采用领域驱动设计的方式进行代码分层设计，这种比传统的分层能更好的表现业务，当然学习成本也更高，设计较好领域模型较困难，但是对整体代码的提升还是有显著改善的","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468178,"discussion_content":"是的，还是对于业务的抽象能力比较重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569199699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135350,"user_name":"Geek_5034d9","can_delete":false,"product_type":"c1","uid":1649827,"ip_address":"","ucode":"4F4B1279CDC6F6","user_header":"","comment_is_top":false,"comment_ctime":1569135536,"is_pvip":false,"replies":[{"id":"51914","content":"大概12月底","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569147138,"ip_address":"","comment_id":135350,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569135536","product_id":100035801,"comment_content":"老师，你这个课程啥时候更新完？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468149,"discussion_content":"大概12月底","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569147138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135320,"user_name":"大雄","can_delete":false,"product_type":"c1","uid":1371593,"ip_address":"","ucode":"4AF29A183AB495","user_header":"https://static001.geekbang.org/account/avatar/00/14/ed/c9/9abdd4c6.jpg","comment_is_top":false,"comment_ctime":1569125076,"is_pvip":false,"replies":[{"id":"51911","content":"应该是M","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569147102,"ip_address":"","comment_id":135320,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569125076","product_id":100035801,"comment_content":"在MVC的分层设计中，C负责接收请求，M负责与数据库进行交互。那么业务逻辑到底应该放在M还是C呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468142,"discussion_content":"应该是M","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569147102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135314,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1569123710,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1569123710","product_id":100035801,"comment_content":"我们现在的架构就是在controller直接访问数据库  除了查询以外  剩下的sql全部是根据basedao生成  简单高效  连mybatis都没用  但是数据库连接池还是用到了","like_count":0,"discussions":[{"author":{"id":1012843,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/6b/a98162a1.jpg","nickname":"winner_0715","note":"","ucode":"A033A30539181F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21251,"discussion_content":"为啥这么设计？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569459187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1101929,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","nickname":"张德","note":"","ucode":"31FE63E8725EFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1012843,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/6b/a98162a1.jpg","nickname":"winner_0715","note":"","ucode":"A033A30539181F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":21256,"discussion_content":"简单高效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569459846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21251,"ip_address":""},"score":21256,"extra":""}]},{"author":{"id":1042354,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e7/b2/334bc992.jpg","nickname":"AlfredLover","note":"","ucode":"A3A998F362CC37","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19269,"discussion_content":"业务逻辑呢？写在哪一层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569159093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1101929,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","nickname":"张德","note":"","ucode":"31FE63E8725EFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1042354,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e7/b2/334bc992.jpg","nickname":"AlfredLover","note":"","ucode":"A3A998F362CC37","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":19821,"discussion_content":"业务逻辑写在controller里面  事务写在dao或者controller里面  没有service","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569229165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":19269,"ip_address":""},"score":19821,"extra":""}]}]},{"had_liked":false,"id":135281,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1569117136,"is_pvip":false,"replies":[{"id":"51895","content":"只是粒度的问题","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569119614,"ip_address":"","comment_id":135281,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569117136","product_id":100035801,"comment_content":"分层思想，不过文中对于分层的原则例如单独部署控制层，服务层，数据访问层还是第一次听说，学习中。打卡03。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468124,"discussion_content":"只是粒度的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569119614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135193,"user_name":"Keith","can_delete":false,"product_type":"c1","uid":1193337,"ip_address":"","ucode":"B40774090714D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","comment_is_top":false,"comment_ctime":1569057204,"is_pvip":false,"replies":[{"id":"51889","content":"两者起的作用差不多，如果非要说区别，感觉分层是横向的，模块化是纵向的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569111165,"ip_address":"","comment_id":135193,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569057204","product_id":100035801,"comment_content":"文中提到的分层跟模块化是类似的吗? 有什么区别和联系吗?","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468090,"discussion_content":"两者起的作用差不多，如果非要说区别，感觉分层是横向的，模块化是纵向的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569111165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254530,"avatar":"https://static001.geekbang.org/account/avatar/00/13/24/82/b5808a60.jpg","nickname":"李冲","note":"","ucode":"C8C12308B0FDDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35772,"discussion_content":"也许这两个词语概念过于笼统。\n\n层次决定的是模型中的位置（或者是级别），模块是对层的具体分割。服务于同一个业务目标跨越了两个层次的一对一联系的模块也很正常，没有必要强行当作一个模块看成纵向的。可以说是把层理解为优先的概念，层里面才有模块。你可以想象一个设备的开发项目如果需要硬件，软件和机械3个职能的参与。架构层的架构师负责项目对外接口，开发层的开发人员负责落实架构师提出的具体工作。那软件架构师和软件工程师其实是两个不同的模块，即使他们是同一个职能组甚至于是同一个人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571304095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135167,"user_name":"迁橘","can_delete":false,"product_type":"c1","uid":1492125,"ip_address":"","ucode":"8FE37B7CA6CB74","user_header":"https://static001.geekbang.org/account/avatar/00/16/c4/9d/7c4dbcd9.jpg","comment_is_top":false,"comment_ctime":1569050714,"is_pvip":false,"replies":[{"id":"51877","content":"是的呢：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569058333,"ip_address":"","comment_id":135167,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569050714","product_id":100035801,"comment_content":"个人感觉就是分层意义就是: 各个层之间相互不依赖, 各层专一自己的职责, 程序易维护, 可扩展性高","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468077,"discussion_content":"是的呢：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569058333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135124,"user_name":"传说","can_delete":false,"product_type":"c1","uid":1617612,"ip_address":"","ucode":"78F0E70385509B","user_header":"https://static001.geekbang.org/account/avatar/00/18/ae/cc/768928cd.jpg","comment_is_top":false,"comment_ctime":1569033634,"is_pvip":false,"replies":[{"id":"51852","content":"分层可以是独立部署也可以是非独立部署，但是如果要提升扩展性的话就需要单独部署了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569049944,"ip_address":"","comment_id":135124,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569033634","product_id":100035801,"comment_content":"这个分层的意思是每一层可以独立运行吗。如果不能独立开运行，那对于分布布属怎么样有突出的优势","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468059,"discussion_content":"分层可以是独立部署也可以是非独立部署，但是如果要提升扩展性的话就需要单独部署了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569049944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135100,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1569026018,"is_pvip":false,"replies":[{"id":"51854","content":"是的 横向的剥离","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569050013,"ip_address":"","comment_id":135100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569026018","product_id":100035801,"comment_content":"感觉从某种意义上说，是不是分层也可以理解为某项业务的剥离？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468048,"discussion_content":"是的 横向的剥离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569050013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135018,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1568979636,"is_pvip":false,"replies":[{"id":"51855","content":"这个有些宽泛，不过转账系统应该是保证可用性和安全性，设计时可以着重考虑","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1569050068,"ip_address":"","comment_id":135018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568979636","product_id":100035801,"comment_content":"老师，面试有涉及一个高性能的转账系统，如果在海量用户情况下怎么设计，能否解答下","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468002,"discussion_content":"这个有些宽泛，不过转账系统应该是保证可用性和安全性，设计时可以着重考虑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569050068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134912,"user_name":"马杰","can_delete":false,"product_type":"c1","uid":1654350,"ip_address":"","ucode":"3D09B875EC1C08","user_header":"","comment_is_top":false,"comment_ctime":1568950306,"is_pvip":false,"replies":[{"id":"51801","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974497,"ip_address":"","comment_id":134912,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1568950306","product_id":100035801,"comment_content":"应用层、控制层、数据处理层，感觉是适用绝大部分系统架构","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467955,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36024,"discussion_content":"只适合单体应用、比较简单的业务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571316960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134846,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1568942434,"is_pvip":false,"replies":[{"id":"51798","content":"所以需要权衡，要依据业务来决定<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974361,"ip_address":"","comment_id":134846,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1568942434","product_id":100035801,"comment_content":"老师，系统分层只是代码层次的吗？上面分层架构是否需要考虑独立部署呢？如果独立部署了，每一层就会很薄，存在资源浪费的问题，不独立部署每次代码变更整体系统都需要测试和发布","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467923,"discussion_content":"所以需要权衡，要依据业务来决定\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36023,"discussion_content":"其实就类似微服务，如何进行服务间的边界划分，将系统拆成多少服务。拆多了运维起来痛苦不堪。拆少了每次修改代码测试和重新部署都很耗时。权衡利弊，根据业务需要来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571316926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134842,"user_name":"Amber","can_delete":false,"product_type":"c1","uid":1496037,"ip_address":"","ucode":"EDCB252D72D3D3","user_header":"https://static001.geekbang.org/account/avatar/00/16/d3/e5/08dad30d.jpg","comment_is_top":false,"comment_ctime":1568941917,"is_pvip":true,"replies":[{"id":"51808","content":"是的 ，是一种简化","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974910,"ip_address":"","comment_id":134842,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568941917","product_id":100035801,"comment_content":"TCPIP那里我觉得是OSI模型将网络划分成七层，实际使用时将网络简化成四层，TCPIP分别属于传输层和网络层，他们只是那一层里的一种协议","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467920,"discussion_content":"是的 ，是一种简化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134794,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1568936790,"is_pvip":false,"replies":[{"id":"51797","content":"是相通的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568974329,"ip_address":"","comment_id":134794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568936790","product_id":100035801,"comment_content":"阿里这个分层和领域驱动设计里的分层有点类似","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467900,"discussion_content":"是相通的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568974329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134791,"user_name":"AllenGFLiu","can_delete":false,"product_type":"c1","uid":1221991,"ip_address":"","ucode":"90FA8A619A2629","user_header":"https://static001.geekbang.org/account/avatar/00/12/a5/67/bf286335.jpg","comment_is_top":false,"comment_ctime":1568935395,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568935395","product_id":100035801,"comment_content":"Python中web开发框架大而全的是Django，其遵循的也是MVC的变形体：MVT。","like_count":0,"discussions":[{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18842,"discussion_content":"按字母意义的对应关系，应该叫MTV","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569114063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134780,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1568930891,"is_pvip":false,"replies":[{"id":"51696","content":"应该是策略模式","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1568935632,"ip_address":"","comment_id":134780,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568930891","product_id":100035801,"comment_content":"老师我问一下本节课提到Linux分层那块，用的是哪种设计模式或者借鉴的参考抽象出参考代码","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467895,"discussion_content":"应该是策略模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568935632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}