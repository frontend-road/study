{"id":719698,"title":"13｜研发全过程中的应用：硅基工程师诞生","content":"","comments":[{"had_liked":false,"id":383791,"user_name":"jumpfox","can_delete":false,"product_type":"c3","uid":1084844,"ip_address":"广东","ucode":"BE81144D7A043D","user_header":"https://static001.geekbang.org/account/avatar/00/10/8d/ac/35b512dc.jpg","comment_is_top":false,"comment_ctime":1699628741,"is_pvip":false,"replies":[{"id":139982,"content":"感谢认可！\n无论是LangChain，还是Assistants API都是为了简化LLM的使用，解决公共问题，如：记忆，利用LLM的推理编排方法等等\n对于开发者而言提供了更多的利用LLM进行应用开发的选择，作为开发者最重要是掌握LLM及其应用的核心原理，如：in-context learning等，并且始终从用户问题出发，选择合适的方式实现应用。","user_name":"作者回复","user_name_real":"编辑","uid":1008262,"ctime":1699800226,"ip_address":"北京","comment_id":383791,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100625601,"comment_content":"谢谢老师的精彩讲授，很有趣。\n\nOpenai前几天发布了GPT-4 turbo和Assistants API，老师您看这会对langchain生态带来什么样的冲击，从业者如何适应、拥抱这种变化？","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631598,"discussion_content":"感谢认可！\n无论是LangChain，还是Assistants API都是为了简化LLM的使用，解决公共问题，如：记忆，利用LLM的推理编排方法等等\n对于开发者而言提供了更多的利用LLM进行应用开发的选择，作为开发者最重要是掌握LLM及其应用的核心原理，如：in-context learning等，并且始终从用户问题出发，选择合适的方式实现应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699800226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383633,"user_name":"脱尼","can_delete":false,"product_type":"c3","uid":1579987,"ip_address":"中国香港","ucode":"627947E7BED072","user_header":"https://static001.geekbang.org/account/avatar/00/18/1b/d3/5cf53a64.jpg","comment_is_top":false,"comment_ctime":1699382097,"is_pvip":false,"replies":[{"id":139810,"content":"1. 在你的案例中可以利用课程中的in-context learning，让GPT 来生成符合的schema格式的JSON\n2. 另外，可以是让GPT根据用户的输入&#47;上下文生成查询，或者对现有的方法（数据提取，数据处理，数据转换...)进行编排生成执行序列","user_name":"作者回复","user_name_real":"编辑","uid":1008262,"ctime":1699407391,"ip_address":"北京","comment_id":383633,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100625601,"comment_content":"请问老师，低代码和GPT的结合生成思路是怎样的？ 例如低代码页面的描述是一份JSON，想利用GPT生成一个表单页面（JSON），交给运行时去解析执行。前提是有一份schema。","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631212,"discussion_content":"1. 在你的案例中可以利用课程中的in-context learning，让GPT 来生成符合的schema格式的JSON\n2. 另外，可以是让GPT根据用户的输入/上下文生成查询，或者对现有的方法（数据提取，数据处理，数据转换...)进行编排生成执行序列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699407391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}