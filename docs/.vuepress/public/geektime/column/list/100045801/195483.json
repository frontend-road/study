{"id":195483,"title":"04 | 案例：如何把流程化的测试脚本抽象为测试框架？","content":"<p>你好，我是陈磊。</p><p>在上一节课中我和你强调了，用什么工具或代码解决测试问题并不重要，拥有接口测试思维才更重要。在今天的课程中，我会带你从零开始打造一个测试框架，建立你自己的技术体系。</p><p>在这里，我推荐你学习一门编程语言，以便你可以更加得心应手、个性化地改造你的测试框架或工具。在这节课中，我会以Python语言来展示我的代码示例，不过语言本身不是重点，你只需要了解这其中的逻辑与方法即可，同样的事情，你可以使用Java、Go等任何你喜欢的语言来完成。</p><p>当然，如果你想学习Python语言的话，我推荐你花一个周末的时间看看<a href=\"https://time.geekbang.org/course/intro/100008801\">尹会生老师的“零基础学Python”课程</a>。</p><h2>为什么要开发自己的测试框架？</h2><p>之前，我们说到了用Postman来完成接口测试，但随着你的接口测试项目逐渐增加，你会发现越来越难以管理它的脚本，虽然测试工具导出的测试脚本也可以存放到代码仓库，但是，如果只是通过代码来查看是很难看懂的，你必须用原来的测试工具打开，才能更容易看懂原来的脚本做了什么样的操作。</p><p>同时，Postman也有其自身的局限性，最重要的一点就是它支持的接口协议有限，如果你接到了一个它无法完成的接口类型的测试任务，就不得不再去寻找另一个工具。由于接口类型的多样和变化，你会有一堆工具需要维护，这无疑会提高你的学习成本和技术投入成本。</p><!-- [[[read_end]]] --><p>Postman是如此，其他的工具也是如此，随着接口测试项目的增加，以及被测接口类型的增加，维护的难度会成指数级增长，所以，开发你自己的测试框架非常重要。</p><p>今天这节课，我就带你用Python 3.7来完成接口测试，并通过测试脚本的不断优化和封装，让你拥有一套完全适合你自己的接口测试框架。当然，我不会告诉你如何写出全部代码，我更想让你掌握的是，从不同的测试脚本抽象出一个测试框架的技巧和思路。</p><h2>搭建测试框架，不要纠结于技术选型</h2><p><strong>在做接口测试脚本开发的技术选型上，我更建议你根据自己的技术实力和技术功底来选择，而不要以开发工程师的技术栈来选择。</strong></p><p>这是因为，开发工程师和测试工程师关注的点，以及工作的交付目标是不同的。</p><ul>\n<li>对于任何一个开发工程师来说，他们主要的工作就是通过写代码实现产品需求或原型设计，他们会关心高并发、低消耗、分布式、多冗余，相对来说，也更加关注代码的性能和可靠性。</li>\n<li>我们作为测试工程师，无论是使用自动化的接口测试，还是界面的手工测试，第一目标都是保障交付项目的质量，那些业务侧的表现，在大多数情况下不是我们关心的重点。</li>\n</ul><p>因此，开发工程师在开发技术栈上的使用频度、使用广度，都会远远高于我们，除非你本来就有对应的知识储备，否则不要强求炫技，为了提高工作效率，你只要使用自己熟悉的技术栈完成自动化接口测试就可以了。</p><p>这里我再强调一下，用什么技术栈来写代码，只是一种帮助你实现接口测试的手段，它不是你要交付的结果。所以你在搭建测试框架时，不要太纠结技术选型。</p><h2>搭建前的准备工作</h2><p>我相信现在你已经准备好，和我一起完成今天的内容了，但在开工之前，我要先把一些基础知识简单介绍给你。</p><p>我们今天会用到Python的一个第三方HTTP协议支持库requests，它可以让我们在和HTTP协议打交道时更轻松；requests项目的描述是“HTTP for Humans”，由此可见，这会是一个人见人爱的HTTP协议库。你可以通过下面这个命令，完成requests的安装：</p><pre><code>pip install requests\n</code></pre><p>完成安装后，你就可以使用requests完成我用Postman完成的接口测试了。主要代码段我会在文章中给出，我会尽最大努力给你一个可以直接运行的代码段，这样，即使你看不懂也不用担心，你只要把这些代码复制到一个有Python运行环境的机器上，直接使用就可以了。</p><p>第一个接口的单接口测试脚本如下，我在代码中做了详细的注释，你既可以复制出去直接运行，也可以通过注释看懂代码的作用。这样，你就完成了一个无参数的、GET访问的验证工作。</p><pre><code># Python代码中引入requests库，引入后才可以在你的代码中使用对应的类以及成员函数\nimport requests\n# 建立url_index的变量，存储战场的首页\nurl_index='http://127.0.0.1:12356/'\n# 调用requests类的get方法，也就是HTTP的GET请求方式，访问了url_index存储的首页URL，返回结果存到了response_index中\nresponse_index = requests.get(url_index)\n# 存储返回的response_index对象的text属性存储了访问主页的response信息，通过下面打印出来\nprint('Response内容：'+response_index.text)\n</code></pre><p>接下来，是第二个被测试的接口，它是登录接口，是以POST方式访问的，它需要通过Body传递username和password这两个参数，这两个参数都是字符串类型，字符长度不可以超过10，并且不能为空。</p><p>你还记得在上节课中，我们一起用边界值法设计的测试用例吗？如果你忘记了，那么请你在本节课结束后，再回去看一下。这里你用下面的代码段，就可以完成第二个接口的单接口测试脚本了。</p><pre><code># python代码中引入requests库，引入后才可以在你的代码中使用对应的类以及成员函数\nimport requests\n# 建立url_login的变量，存储战场系统的登录URL\nurl_login = 'http://127.0.0.1:12356/login'\n# username变量存储用户名参数\nusername = 'criss'\n# password变量存储密码参数\npassword = 'criss'\n# 拼凑body的参数\npayload = 'username=' + username + '&amp;password=' + password\n# 调用requests类的post方法，也就是HTTP的POST请求方式，\n# 访问了url_login，其中通过将payload赋值给data完成body传参\nresponse_login = requests.post(url_login, data=payload)\n# 存储返回的response_index对象的text属性存储了访问主页的response信息，通过下面打印出来\nprint('Response内容：' + response_login.text)\n</code></pre><p>无论你是不是看得懂上面的两段代码，你都能看出来，这其中有很多代码都是重叠在一起的，这两段代码的结构很相似，但又有明显的差异性。</p><h2>开始打造一个测试框架</h2><p>我想请你先思考这么一个问题，你在用Postman这类工具做接口测试时，除去你自己构建的访问路由和Requsts参数，其他的是不是就靠工具帮你处理完成了呢？</p><p>那么，我们接口测试的脚本，是不是也可以把一些公共的操作，抽象到一个文件中呢？这样你在写测试脚本时，通过拼凑路由、设计Request入参就可以完成接口测试了。在这样的思路之下，我们来一起改造一下刚刚的脚本。</p><p>第一步，你要建立一个叫做common.py的公共的方法类。下面我给出的这段注释详细的代码，就是类似我们使用Postman的公共方法的封装，它可以完成HTTP协议的GET请求或POST请求的验证，并且和你的业务无关。</p><pre><code># 定义一个common的类，它的父类是object\nclass Common(object):\n  # common的构造函数\n  def __init__(self):\n    # 被测系统的根路由\n    self.url_root = 'http://127.0.0.1:12356'\n  # 封装你自己的get请求，uri是访问路由，params是get请求的参数，如果没有默认为空\n  def get(self, uri, params=''):\n    # 拼凑访问地址\n    url = self.url_root + uri + params\n    # 通过get请求访问对应地址\n    res = requests.get(url)\n    # 返回request的Response结果，类型为requests的Response类型\n    return res\n  # 封装你自己的post方法，uri是访问路由，params是post请求需要传递的参数，如果没有参数这里为空\n  def post(self, uri, params=''):\n    # 拼凑访问地址\n    url = self.url_root + uri\n    if len(params) &gt; 0:\n      # 如果有参数，那么通过post方式访问对应的url，并将参数赋值给requests.post默认参数data\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.post(url, data=params)\n    else:\n      # 如果无参数，访问方式如下\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.post(url)\n    return res\n</code></pre><p>接下来，用你自己的Common类，修改第一个接口的单接口测试脚本，就可以得到下面的代码了。</p><pre><code># Python代码中引入requests库，引入后才可以在你的代码中使用对应的类以及成员函数\nfrom common import Common\n# 首页的路由\nuri = '/'\n# 实例化自己的Common\ncomm = Common()\n#调用你自己在Common封装的get方法 ，返回结果存到了response_index中\nresponse_index = comm.get(uri)\n# 存储返回的response_index对象的text属性存储了访问主页的response信息，通过下面打印出来\nprint('Response内容：' + response_index.text)\n</code></pre><p>从这段代码中你可以看到，与前面对应的单接口测试脚本相比，代码的行数有明显的减少，这也能减少你很多的工作量，与此同时，如果你有任何关于HTTP协议的操作，都可以在Common类中进行修改和完善。</p><p>如果使用你自己刚刚建立的公共类（在我们内部有时候喜欢把它叫做轮子，这是源于一句俚语“不用重复造轮子”，因为Common类就是重复被各个检测代码使用的“轮子”）修改一下第二个接口的单接口测试脚本，代码就会变成下面这个样子：</p><pre><code>#登录页路由\nuri = '/login'\n# username变量存储用户名参数\nusername = 'criss'\n# password变量存储密码参数\npassword = 'criss'\n# 拼凑body的参数\npayload = 'username=' + username + '&amp;password=' + password\ncomm = Common()\nresponse_login = comm.post(uri,params=payload)\nprint('Response内容：' + response_login.text)\n</code></pre><p>当你有一些更加复杂的脚本时，你会发现两次代码的变化会变得更明显，也更易读。</p><p>这就是那些曾经让你羡慕不已的框架诞生的过程，通过分析和观察你可以看到，原始的第一个接口的单接口测试脚本和第二个接口的单接口测试脚本，它们存在相同的部分，通过将这些相同的部分合并和抽象，就增加了代码的可读性和可维护性，也减少了脚本的开发量。通过这个方法，你就可以打造出一个属于自己的测试框架。</p><h2>用你的框架完成多接口测试</h2><p>上面我们仅仅进行了一小步的封装，就取得了很大的进步，在你写出越来越多的脚本后，你还会发现新的重叠部分，这时如果你能不断改进，最终就会得到完全适合你的测试框架，而且其中每一个类、每一个函数你都会非常熟悉，这样，碰到任何一个难解的问题时，你都有能力通过修改你的框架来解决它，这样，这个框架实际上就变成了一个你在接口测试方面的工具箱了。</p><p>那么，怎么用我们刚刚一起搭建的测试框架，来完成多接口测试的业务逻辑测试呢？</p><p>不知道你是不是还记得在上节课中，我们讲到的Battle使用流程的测试用例，如果你没记起来，我先告诉你：“正确登录系统后，选择武器，与敌人决斗后杀死了敌人。”其他的，在本次课程结束后，你可以自己再去温习一下。</p><p>那么。使用我们一起封装的框架来完成上面的多接口测试后，就会得到下面的代码：</p><pre><code># Python代码中引入requests库，引入后才可以在你的代码中使用对应的类以及成员函数\nfrom common import Common\n# 建立uri_index的变量，存储战场的首页路由\nuri_index = '/'\n# 实例化自己的Common\ncomm = Common()\n#调用你自己在Common封装的get方法 ，返回结果存到了response_index中\nresponse_index = comm.get(uri_index)\n# 存储返回的response_index对象的text属性存储了访问主页的response信息，通过下面打印出来\nprint('Response内容：' + response_index.text)\n# uri_login存储战场的登录\nuri_login = '/login'\n# username变量存储用户名参数\nusername = 'criss'\n# password变量存储密码参数\npassword = 'criss'\n# 拼凑body的参数\npayload = 'username=' + username + '&amp;password=' + password\ncomm = Common()\nresponse_login = comm.post(uri_login,params=payload)\nprint('Response内容：' + response_login.text)\n# uri_selectEq存储战场的选择武器\nuri_selectEq = '/selectEq'\n# 武器编号变量存储用户名参数\nequipmentid = '10003'\n# 拼凑body的参数\npayload = 'equipmentid=' + equipmentid\ncomm = Common()\nresponse_selectEq = comm.post(uri_selectEq,params=payload)\nprint('Response内容：' + response_selectEq.text)\n# uri_kill存储战场的选择武器\nuri_kill = '/kill'\n# 武器编号变量存储用户名参数\nenemyid = '20001'\n# 拼凑body的参数\npayload = 'enemyid=' + enemyid+&quot;&amp;equipmentid=&quot;+equipmentid\ncomm = Common()\nresponse_kill = comm.post(uri_kill,params=payload)\nprint('Response内容：' + response_kill.text)\n</code></pre><p>上面的代码有点长，但你先不要有抵触的心理，每一个代码行的注释我都写得很清楚。然而我并不是想让你知道，上面那么多类似蝌蚪文的代码都是干什么的，我是想让你看看上面的代码中，是否有可以用前面“抽象和封装重复代码的方法”进行优化的地方。</p><p>你可以看到，上面的代码大量重复了你自己写的通用类的调用，这个其实是可以合成一个的；同时，你再观察一下我们一起写的Common类，你会发现有一个self.url_root = ‘<a href=\"http://127.0.0.1:12356\">http://127.0.0.1:12356</a>’，如果这里这样写，你的Common就只能用来测试我们这个小系统了，除非你每次都去修改框架。</p><p>但是，任何一个框架的维护者，都不希望框架和具体逻辑强相关，因此这也是一个优化点，那么将上面的内容都修改后，代码就会变成下面这个样子：</p><pre><code># Python代码中引入requests库，引入后才可以在你的代码中使用对应的类以及成员函数\nfrom common import Common\n# 建立uri_index的变量，存储战场的首页路由\nuri_index = '/'\n# 实例化自己的Common\ncomm = Common('http://127.0.0.1:12356')\n#调用你自己在Common封装的get方法 ，返回结果存到了response_index中\nresponse_index = comm.get(uri_index)\n# 存储返回的response_index对象的text属性存储了访问主页的response信息，通过下面打印出来\nprint('Response内容：' + response_index.text)\n# uri_login存储战场的登录\nuri_login = '/login'\n# username变量存储用户名参数\nusername = 'criss'\n# password变量存储密码参数\npassword = 'criss'\n# 拼凑body的参数\npayload = 'username=' + username + '&amp;password=' + password\nresponse_login = comm.post(uri_login,params=payload)\nprint('Response内容：' + response_login.text)\n# uri_selectEq存储战场的选择武器\nuri_selectEq = '/selectEq'\n# 武器编号变量存储用户名参数\nequipmentid = '10003'\n# 拼凑body的参数\npayload = 'equipmentid=' + equipmentid\nresponse_selectEq = comm.post(uri_selectEq,params=payload)\nprint('Response内容：' + response_selectEq.text)\n# uri_kill存储战场的选择武器\nuri_kill = '/kill'\n# 武器编号变量存储用户名参数\nenemyid = '20001'\n# 拼凑body的参数\npayload = 'enemyid=' + enemyid+&quot;&amp;equipmentid=&quot;+equipmentid\nresponse_kill = comm.post(uri_kill,params=payload)\nprint('Response内容：' + response_kill.text)\n是不是比上一个节省了很多代码，同时也看的更加的易读了，那么我们封住好的Common就变成了如下的样子：\n\n# 定义一个common的类，它的父类是object\n\nclass Common(object):\n\n# common的构造函数\n\n def __init__(self,url_root):\n\n# 被测系统的跟路由\n\nself.url_root = url_root\n\n\n \n# 封装你自己的get请求，uri是访问路由，params是get请求的参数，如果没有默认为空\n\ndef get(self, uri, params=''):\n\n # 拼凑访问地址\n\n url = self.url_root + uri + params\n\n # 通过get请求访问对应地址\n\n res = requests.get(url)\n\n # 返回request的Response结果，类型为requests的Response类型\n\n \n\nreturn res\n\n # 封装你自己的post方法，uri是访问路由，params是post请求需要传递的参数，如果没有参数这里为空\n\ndef post(self, uri, params=''):\n\n # 拼凑访问地址\n\n url = self.url_root + uri\n\n if len(params) &gt; 0:\n\n # 如果有参数，那么通过post方式访问对应的url，并将参数赋值给requests.post默认参数data\n\n # 返回request的Response结果，类型为requests的Response类型\n\n res = requests.post(url, data=params)\n\n else:\n\n# 如果无参数，访问方式如下\n\n# 返回request的Response结果，类型为requests的Response类型\n\n res = req\n</code></pre><p>你可以看到，在上面这段代码中，我主要是让我们Common类的构造函数接受了一个变量，这个变量就是被测系统的根路由。这样是不是就比上一个代码段节省了很多代码，同时也更加易读了？那么我们封装好的Common就变成了下面这个样子：</p><pre><code># 定义一个common的类，它的父类是object\nclass Common(object):\n  # common的构造函数\n  def __init__(self,url_root):\n    # 被测系统的跟路由\n    self.url_root = url_root\n  # 封装你自己的get请求，uri是访问路由，params是get请求的参数，如果没有默认为空\n  def get(self, uri, params=''):\n    # 拼凑访问地址\n    url = self.url_root + uri + params\n    # 通过get请求访问对应地址\n    res = requests.get(url)\n    # 返回request的Response结果，类型为requests的Response类型\n    return res\n  # 封装你自己的post方法，uri是访问路由，params是post请求需要传递的参数，如果没有参数这里为空\n  def post(self, uri, params=''):    \n    # 拼凑访问地址    \n    url = self.url_root + uri    \n    if len(params) &gt; 0:    \n      # 如果有参数，那么通过post方式访问对应的url，并将参数赋值给requests.post默认参数data   \n      # 返回request的Response结果，类型为requests的Response类型   \n      res = requests.post(url, data=params)    \n    else:\n      # 如果无参数，访问方式如下\n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.post(url) \n      return res\n</code></pre><p>通过改造Common类的构造函数，这个类已经变成一个通用类了，无论是哪一个项目的接口测试，都可以使用它来完成HTTP协议的接口验证了。</p><p>我相信现在你已经掌握了测试框架的形成过程，就如下图所示，测试框架的形成是在撰写大量测试脚本的过程中不断抽象封装出来的，然后，再用这个不断完善的框架，改写原有的测试脚本。循环往复这个过程，你就会慢慢获得一个独一无二的、又完全适合你工作的接口测试框架。</p><p><img src=\"https://static001.geekbang.org/resource/image/d6/7e/d6066b2a101012f4fac20160d386a57e.jpg?wh=1142*640\" alt=\"\"></p><p>其实到这里，我们上面说的只能算是一个调试代码，还不能算是一个测试框架。上面这些代码所有的返回值都打印到控制台后，为了完成接口测试，你需要时时刻刻看着控制台，这还不能算是自动化，只能说是一个辅助小工具。</p><p>在这里，你应该让全部测试结果都存储到测试报告里面，同时通过一个测试驱动框架来完成各个模块的驱动，这也是为什么你在学习任何一种框架的时候，总会遇见类似Java的JUnit、Python的Unittest的原因，因此，上面的Common类还需要和Python的unittest一起使用，才算是一个完美的测试框架。</p><p>至于你自己的Common类怎么和测试驱动框架相结合，这部分内容就留给你在未来的接口测试工作中，自己去学习并完成了。</p><h2>总结</h2><p>今天，我们一起学习了一个测试框架的诞生过程。测试框架就是在你测试脚本中不断抽象和封装得来的。今天我们课程的内容充斥着各种代码，如果你的代码基础稍微比较薄弱，并没有完全记住上面的内容，那么我希望你记住从测试脚本到测试框架的转化过程：</p><ol>\n<li>不断撰写测试脚本，所有的抽象和封装都是站在已有的测试脚本基础之上的；</li>\n<li>多观察已经写好的测试脚本，找出其中的重叠部分，最后完成封装；</li>\n<li>以上两步是一个不断循环又循序渐进的过程，你要在你的工作中始终保持思考和警惕，发现重复马上进行框架封装。</li>\n</ol><p>最后我想和你强调的是，测试框架的封装和抽象过程并不是一蹴而就的，它是靠一点一点的积累得来的，因此，你要通过自己的实践，慢慢积累和完善你的测试框架，而不要妄想一次就能有一个完善的测试框架。我相信，当你通过写脚本完成整个项目的接口测试后，你一定会得到一个完美的测试框架。</p><h2>思考题</h2><p>在我讲的最后一个多接口测试脚本，其实也并不是最完美的修改，你能提出更好的修改意见吗？如果它可以抽取到你的框架中，那么是完成一个什么样任务的类或者函数呢？</p><p>我是陈磊，欢迎你在留言区留言分享你的观点，如果这篇文章让你有新的启发，也欢迎你把文章分享给你的朋友，我们一起探讨和学习。</p>","neighbors":{"left":{"article_title":"03 | 思维方式：用一个案例彻底理解接口测试的关键逻辑","id":193912},"right":{"article_title":"05 | 案例：测试框架如何才能支持RESTful风格的接口？","id":195503}},"comments":[{"had_liked":false,"id":264582,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1606532258,"is_pvip":false,"replies":[{"id":"97233","content":"看你的总结 我都想修改我的课程总结了。太棒了","user_name":"作者回复","comment_id":264582,"uid":"1064280","ip_address":"","utype":1,"ctime":1607906760,"user_name_real":"陈磊@Criss"}],"discussion_count":3,"race_medal":0,"score":"216354897058","product_id":100045801,"comment_content":"接口测试框架的形成过程<br>流水账式的接口测试脚本<br>在编写不少流水账式的接口测试脚本后，发现其中存在大量重复的代码<br>思考：能不能把公共的操作单独抽离出来，抽象到一个common文件中，在其他文件继承或导入文件进行使用<br><br>如何区分哪些是公共的部分？<br>一般哪些是公共部分？<br>公共部分与非公共部分的边界是什么？<br>提供common文件的通用性<br>如不写死测试系统，通过传入参数指定测试系统<br><br>加入测试报告<br>加入测试报告模块，把测试结果储存在测试报告当中，而是都使用print打印<br><br>加入测试驱动框架<br>加入unittest或pytest测试驱动框架来驱动各个模块，更好地组织测试脚本<br><br>加入日志<br>为了更好地定位和分析问题，加入日志模块<br><br>加入断言<br>针对复杂断言，引入jsonpath断言、Xml断言、Xpath断言、hamcrest断⾔、Json schema校验<br><br>引入POM<br>为了更好地区分业务操作，方便脚本维护，引入POM<br><br>引入参数化<br>为了应对大数据量测试，引入参数化<br><br>......<br><br>不要把测试框架看得太高大上了，不是只有像selenium、appium、httprunner才叫测试框架，你可以从一个简单地测试框架开始做起。<br><br>测试框架是在编写大量测试脚本地过程中不断抽象封装出来地，然后不断完善，是一个循环往复地过程。","like_count":51,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510610,"discussion_content":"看你的总结 我都想修改我的课程总结了。太棒了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607906760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1884177,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c0/11/2e845c47.jpg","nickname":"常正鹏","note":"","ucode":"2A3A2B1A12D216","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591512,"discussion_content":"总结的很赞，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666607435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1077731,"avatar":"https://static001.geekbang.org/account/avatar/00/10/71/e3/afdc92e1.jpg","nickname":"花灰","note":"","ucode":"CA1474945A2A7E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591152,"discussion_content":"这个总结好赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666328175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181928,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1582681460,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53122289012","product_id":100045801,"comment_content":"😁确实比较基础，不过思路是完全没问题，任何东西基本都是无中生有，然后发展壮大，然后又归于无。<br>测试的诉求就是想快，其实各行各业都一样都想快，怎么才能快起来呢？更强壮、更灵活、更聪明的人明显会快许多，不过精力再好也有疲惫的时候，所以，人肉这条路天花板太低啦！那还能怎样？用机器呀！他不仅擅长简单重复的事情，而且不知疲倦，只要有电用到报废都无所谓。OK，问题来了怎么用机器？机器擅长简单重复的事情，那好就找简单重复的事情给他做，找的过程就是抽象封装的过程，告诉机器怎么做就是编程的过程。然后就是再想法子搞一个定时任务，让他自己动起来，这些都不难，下面其实就没有了，不过测试这么干，其他使用机器的思路基本如此，剩下就是不断优化，提高用户体验，说通俗点就是让傻瓜也能操作是最理想的。<br>做到这些确实可以提高测试效率，不过路还很长，就我自己的感受而言，我们的业务比较复杂，变化快，细节多，许多好几年的老测试甚至研发本身对于业务都不能完全搞清楚，代码像像小说一样，入参、出参、调用都是容易搞定的事情，难点在于你不知道走了什么逻辑，你不知道结果对不对。当然，这是一个难题，破解之道别无他法熟悉业务知识积累业务知识，不过之所以，这么难就是分布式系统本身的特性，高并发高可用高性能易扩展的代价就复杂度的提升。","like_count":12,"discussions":[{"author":{"id":1163974,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c2/c6/88d0c7b2.jpg","nickname":"一默","note":"","ucode":"F23A6E42DFD0C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200610,"discussion_content":"业务的路很长，其实这也是行业背景决定的，如果想搞定这些业务，是要有心人长时间积累的，最后已经不是测试，开发，产品之类的了，而是这个行业的业务专家。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583689549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176652,"user_name":"happychap","can_delete":false,"product_type":"c1","uid":1388033,"ip_address":"","ucode":"C872B959BF2F3D","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/01/14a478bb.jpg","comment_is_top":false,"comment_ctime":1581130636,"is_pvip":true,"replies":[{"id":"68579","content":"您好，看了您的留言，你的观点也有道理，我不推荐按照rd的技术栈选择是因为rd的技术栈入门门槛高，ci，cd流水线也不依赖rd技术栈，因此我建议在基础薄弱的小伙伴选择上以简单的开始。","user_name":"作者回复","comment_id":176652,"uid":"1064280","ip_address":"","utype":1,"ctime":1581144763,"user_name_real":"Criss Chan"}],"discussion_count":6,"race_medal":0,"score":"44530803596","product_id":100045801,"comment_content":"有个观点与老师不同，就是在编程语言的选择上，针对新手而言，选择与研发团队相同的编程语言（java,python,js,go）个人觉得会更好一些，一方面有研发团队作为依靠，另一方面在接入ci时，可以复用研发团队的ci接入技术栈。再有就是能复用面向测试的底层开源库就先复用它们，把更多的精力放在测试领域功能封装上，如：入参的处理，出参的传递，接口请求结果的抽取等方面。<br>如果对编程语言还是一知半解，老师本讲所讲的内容就要多去理解、实践了，它是很好的入门窗口。","like_count":10,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483173,"discussion_content":"您好，看了您的留言，你的观点也有道理，我不推荐按照rd的技术栈选择是因为rd的技术栈入门门槛高，ci，cd流水线也不依赖rd技术栈，因此我建议在基础薄弱的小伙伴选择上以简单的开始。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581144763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253842,"discussion_content":"对于新手而言，哪个上手快选择哪个。对于老手而言，哪个熟练选择哪个。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588259186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1388033,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/01/14a478bb.jpg","nickname":"happychap","note":"","ucode":"C872B959BF2F3D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164221,"discussion_content":"是的，基础薄弱的同学入门进去很重要的，免不了需要在最基础环节走一遭。｡◕‿◕｡","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581163770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1166957,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/6d/6de830ef.jpg","nickname":"Kuzaman","note":"","ucode":"DB60937873CBF1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332390,"discussion_content":"CI系统其实用的都是现成工具，只要对外提供暴露接口，即使PY框架，也能融入，没有必要和开发的系统保持完全代码技术栈一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607178145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255922,"discussion_content":"真没必要，py 即可，没必要和开发去拼深度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588432100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257460,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","nickname":"小老鼠","note":"","ucode":"C663A0C863A515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239542,"discussion_content":"开发与测试代码沒必要一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587302946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180810,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1582419892,"is_pvip":true,"replies":[{"id":"70190","content":"谢谢您的支持，每个人都有自己的评价，我虚心学习","user_name":"作者回复","comment_id":180810,"uid":"1064280","ip_address":"","utype":1,"ctime":1582438663,"user_name_real":"接口测试专栏作者陈磊"}],"discussion_count":2,"race_medal":1,"score":"23057256372","product_id":100045801,"comment_content":"看完这篇文章，可以更清晰的感觉到这个专栏的受众应该是初级测试人员，不太适合开发人员。<br><br>在部落中也零星看到一些关于这个专栏的讨论和批评，我觉得可能是因为大家对专栏的期望太高了，结果在这里没有看到化腐朽为神奇的东西。<br><br>一步一步来吧，总归是开卷有益，拓展思路，查漏补缺也挺好的。","like_count":5,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484803,"discussion_content":"谢谢您的支持，每个人都有自己的评价，我虚心学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582438663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1365578,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d6/4a/159db001.jpg","nickname":"。。。","note":"","ucode":"7F943EEB55560C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203917,"discussion_content":"都说是接口测试入门课了。哈哈哈哈，我是杠精","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584101785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213490,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1588432202,"is_pvip":false,"replies":[{"id":"79164","content":"好书","user_name":"作者回复","comment_id":213490,"uid":"1064280","ip_address":"","utype":1,"ctime":1588470074,"user_name_real":"CrissChan"}],"discussion_count":1,"race_medal":0,"score":"10178366794","product_id":100045801,"comment_content":"推荐一本书，martin flower 的重构。","like_count":2,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493796,"discussion_content":"好书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588470074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201245,"user_name":"深瞳","can_delete":false,"product_type":"c1","uid":1938877,"ip_address":"","ucode":"5A13C3582B87E3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/95/bd/20ec9f4c.jpg","comment_is_top":false,"comment_ctime":1585739289,"is_pvip":false,"replies":[{"id":"75266","content":"发现了不足就是最大的收获，也是对我最大的鼓励，谢谢您的支持","user_name":"作者回复","comment_id":201245,"uid":"1064280","ip_address":"","utype":1,"ctime":1585749409,"user_name_real":"CrissChan"}],"discussion_count":1,"race_medal":0,"score":"10175673881","product_id":100045801,"comment_content":"上了这个课程以后才知道自己会的接口测试知识太太少了，要学的太多了，自己的基础太薄弱了","like_count":2,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490271,"discussion_content":"发现了不足就是最大的收获，也是对我最大的鼓励，谢谢您的支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585749409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176858,"user_name":"陈优雅","can_delete":false,"product_type":"c1","uid":1019577,"ip_address":"","ucode":"D07B8D6BED85A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/b9/740b3563.jpg","comment_is_top":false,"comment_ctime":1581184425,"is_pvip":false,"replies":[{"id":"68627","content":"谢谢，后续课程也就有相关讲解","user_name":"作者回复","comment_id":176858,"uid":"1064280","ip_address":"","utype":1,"ctime":1581209882,"user_name_real":"Criss Chan"}],"discussion_count":1,"race_medal":0,"score":"10171119017","product_id":100045801,"comment_content":"单一接口测试代码可以用postman直接生成","like_count":2,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483228,"discussion_content":"谢谢，后续课程也就有相关讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581209882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176458,"user_name":"Geek_a57228","can_delete":false,"product_type":"c1","uid":1819338,"ip_address":"","ucode":"1C5D5DF40B629E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/kHzFLDAfayvKGWDMWeAhQEAZ4ug0mlaYaPA9gwlEKeOfJxRomv4AytoaxefEebzGicGnQwZTKxPcX8g1iapytzJQ/132","comment_is_top":false,"comment_ctime":1581064125,"is_pvip":false,"replies":[{"id":"68547","content":"嗯，是的谢谢指出。","user_name":"作者回复","comment_id":176458,"uid":"1064280","ip_address":"","utype":1,"ctime":1581087679,"user_name_real":"Criss Chan"}],"discussion_count":2,"race_medal":0,"score":"10170998717","product_id":100045801,"comment_content":"老师，看你的脚步，写公共方法的那一段是否需要加上import requests呢？不然后面调用requests包时，会有问题吧，刚学Python代码，所以问题比较初级","like_count":2,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483115,"discussion_content":"嗯，是的谢谢指出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581087679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1787562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/46/aa/5e1b5a8a.jpg","nickname":"罗春南_Nancy","note":"","ucode":"271E958AC9F0C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170121,"discussion_content":"牛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581670814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303720,"user_name":"懒猫","can_delete":false,"product_type":"c1","uid":2538092,"ip_address":"","ucode":"094F30C802C0F6","user_header":"","comment_is_top":false,"comment_ctime":1626944386,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5921911682","product_id":100045801,"comment_content":"对我个人而言，看完了前面几篇收获比较少，但毕竟只是入门课程不能强求，不过老师的大部分观点和思想都比较赞同，只想知道老师后续是否有进阶课程？","like_count":1},{"had_liked":false,"id":215319,"user_name":"牺牲","can_delete":false,"product_type":"c1","uid":1619402,"ip_address":"","ucode":"5780E562A43494","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","comment_is_top":false,"comment_ctime":1588952332,"is_pvip":false,"replies":[{"id":"80182","content":"也不差啊","user_name":"作者回复","comment_id":215319,"uid":"1064280","ip_address":"","utype":1,"ctime":1589334150,"user_name_real":"CrissChan"}],"discussion_count":2,"race_medal":0,"score":"5883919628","product_id":100045801,"comment_content":"我真的没看出common接收变量后，代码量有什么节省。就是不用动框架了，每次传参就可以了。","like_count":1,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494391,"discussion_content":"也不差啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589334150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296018,"discussion_content":"增强隔离还不行?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596428264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208213,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1587303093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882270389","product_id":100045801,"comment_content":"对于非HTTP协议用什么类？比如DNS、Webservices、DHCP？","like_count":1},{"had_liked":false,"id":197926,"user_name":"Geek_a859b9","can_delete":false,"product_type":"c1","uid":1936961,"ip_address":"","ucode":"0B6D83A2BB7B8D","user_header":"","comment_is_top":false,"comment_ctime":1585403749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880371045","product_id":100045801,"comment_content":"测试框架的形成是在撰写大量测试脚本的过程中不断抽象封装出来的，然后，再用这个不断完善的框架，改写原有的测试脚本。循环往复这个过程，你就会慢慢获得一个独一无二的、又完全适合你工作的接口测试框架。","like_count":1},{"had_liked":false,"id":176899,"user_name":"7F","can_delete":false,"product_type":"c1","uid":1163540,"ip_address":"","ucode":"4A98A6979CDE58","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/14/659c8ca2.jpg","comment_is_top":false,"comment_ctime":1581218433,"is_pvip":false,"replies":[{"id":"68638","content":"每个框架都有它的优势和劣势，HTTPRunner我还没听说，有时间我去学习一下。","user_name":"作者回复","comment_id":176899,"uid":"1064280","ip_address":"","utype":1,"ctime":1581222218,"user_name_real":"Criss Chan"}],"discussion_count":4,"race_medal":0,"score":"5876185729","product_id":100045801,"comment_content":"有一个Python业界很获得接口测试框架，HTTPrunner，老师你怎么看这个框架。","like_count":1,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483242,"discussion_content":"每个框架都有它的优势和劣势，HTTPRunner我还没听说，有时间我去学习一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581222218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1164500,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c4/d4/2d338d73.jpg","nickname":"白梦","note":"","ucode":"4D5A8CB4D643C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":174548,"discussion_content":"httpRunner是个好轮子，但是只能测试基于http和https协议的接口。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581926453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348823,"avatar":"https://static001.geekbang.org/account/avatar/00/14/94/d7/bd4ffe8c.jpg","nickname":"么么直播","note":"","ucode":"1D4C3EDBCCD2F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234065,"discussion_content":"目前我司也在用 挺方便的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586957244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1831424,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/f2/00/d8f0c5db.jpg","nickname":"cici","note":"","ucode":"ECA5648E827EA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183571,"discussion_content":"目前也在用这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582502022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176691,"user_name":"杨亚玲","can_delete":false,"product_type":"c1","uid":1820025,"ip_address":"","ucode":"44A25AD6DC0E22","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c5/79/91f38906.jpg","comment_is_top":false,"comment_ctime":1581139119,"is_pvip":false,"replies":[{"id":"68628","content":"您好，我在我的电脑上没有发现有类似保存，您方便把全部代码贴出来看一下吗。","user_name":"作者回复","comment_id":176691,"uid":"1064280","ip_address":"","utype":1,"ctime":1581211617,"user_name_real":"Criss Chan"}],"discussion_count":3,"race_medal":0,"score":"5876106415","product_id":100045801,"comment_content":"有下面这样的错误：<br>print(&#39;Response内容：&#39; + response_login.text)<br>AttributeError: &#39;NoneType&#39; object has no attribute &#39;text&#39;","like_count":1,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483180,"discussion_content":"您好，我在我的电脑上没有发现有类似保存，您方便把全部代码贴出来看一下吗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581211617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406245,"avatar":"https://static001.geekbang.org/account/avatar/00/15/75/25/37ba8b1f.jpg","nickname":"Jolin","note":"","ucode":"65CBD25865EE03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164865,"discussion_content":"最后一个return的问题，要不然往前缩进，要不然在分支处再加一个return res.","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1581227349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1787562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/46/aa/5e1b5a8a.jpg","nickname":"罗春南_Nancy","note":"","ucode":"271E958AC9F0C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170260,"discussion_content":"是的。找半天，对比两个前后两个common才发现第二个最后一个有个多了个缩进","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581677535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357289,"user_name":"Geek_fab5d2","can_delete":false,"product_type":"c1","uid":3179281,"ip_address":"重庆","ucode":"F48FE5E01DB74C","user_header":"","comment_is_top":false,"comment_ctime":1663139440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663139440","product_id":100045801,"comment_content":"类里面的init函数没有默认执行，弄得他报AttributeError: &#39;Common&#39; object has no attribute &#39;url_root&#39;错误。要怎么弄咧？","like_count":0},{"had_liked":false,"id":355906,"user_name":"伶花","can_delete":false,"product_type":"c1","uid":2273920,"ip_address":"上海","ucode":"BA327CD828280B","user_header":"https://static001.geekbang.org/account/avatar/00/22/b2/80/d94b46b3.jpg","comment_is_top":false,"comment_ctime":1661845353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661845353","product_id":100045801,"comment_content":"if len(params) &gt; 0: # 如果有参数，那么通过post方式访问对应的url，并将参数赋值给requests.post默认参数data # 返回request的Response结果，类型为requests的Response类型 res = requests.post(url, data=params) else: # 如果无参数，访问方式如下 # 返回request的Response结果，类型为requests的Response类型 res = requests.post(url) return res<br><br>老师，测别的系统时，运行会提示 &#39;&gt;&#39; not supported between instances of &#39;str&#39; and &#39;int&#39;","like_count":0},{"had_liked":false,"id":349330,"user_name":"Duxuebing","can_delete":false,"product_type":"c1","uid":1050444,"ip_address":"","ucode":"3902E4B0C9F63E","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/4c/1eec5844.jpg","comment_is_top":false,"comment_ctime":1655889507,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655889507","product_id":100045801,"comment_content":"看起来不难，等我自己封装get请求，想添加header 和 params却折腾了好久还没成功，老师，基础知识太弱怎么办","like_count":0},{"had_liked":false,"id":345796,"user_name":"IT小村","can_delete":false,"product_type":"c1","uid":1330357,"ip_address":"","ucode":"BDFEE0D821CB6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/b5/fcede1a9.jpg","comment_is_top":false,"comment_ctime":1652600884,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652600884","product_id":100045801,"comment_content":"测试开发，注重功能简单实现即可。","like_count":0},{"had_liked":false,"id":332559,"user_name":"张小兵","can_delete":false,"product_type":"c1","uid":2877818,"ip_address":"","ucode":"6F436593F22E04","user_header":"","comment_is_top":false,"comment_ctime":1643341605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643341605","product_id":100045801,"comment_content":"老师，你好，请问怎么把你说的4个接口连接起来，组成一个场景 ？","like_count":0},{"had_liked":false,"id":296354,"user_name":"晚枫","can_delete":false,"product_type":"c1","uid":1315439,"ip_address":"","ucode":"B0EF439E28BF35","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKfYfHAvhZmsKiauxPAt9T2D7ntiaZrP8mial07CAdWiaCEJMawZwficjL3PFvZl35WM7D6ibcYf6miaERJQ/132","comment_is_top":false,"comment_ctime":1622931333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622931333","product_id":100045801,"comment_content":"我们是直接借用rf框架，然后用Python语言实现了很多业务相关的关键字来使用的自动化测试框架","like_count":0},{"had_liked":false,"id":283554,"user_name":"lei","can_delete":false,"product_type":"c1","uid":1638811,"ip_address":"","ucode":"D17D91EE7D2025","user_header":"https://static001.geekbang.org/account/avatar/00/19/01/9b/37beee9e.jpg","comment_is_top":false,"comment_ctime":1615815649,"is_pvip":false,"replies":[{"id":"103481","content":"不错的想法，可以实现。如果你可以尝试把print替换成assert 就更好了","user_name":"作者回复","user_name_real":"陈磊@Criss","uid":"1064280","ctime":1616681103,"ip_address":"","comment_id":283554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615815649","product_id":100045801,"comment_content":"payload是不是可以作为参数加到post方法里？<br>print也可以封装个方法到common类里","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517075,"discussion_content":"不错的想法，可以实现。如果你可以尝试把print替换成assert 就更好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616681103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223648,"user_name":"Aaron Liu","can_delete":false,"product_type":"c1","uid":1125662,"ip_address":"","ucode":"DECCD16350C2A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/1e/4a93ebb5.jpg","comment_is_top":false,"comment_ctime":1591148270,"is_pvip":false,"replies":[{"id":"82387","content":"您可以通过抽取你团队的response格式，将公共部分拿出来完成对应设计","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1591160652,"ip_address":"","comment_id":223648,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591148270","product_id":100045801,"comment_content":"Python测试框架验证response的scheme(swagger格式)是如何做","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497200,"discussion_content":"您可以通过抽取你团队的response格式，将公共部分拿出来完成对应设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591160652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214730,"user_name":"继华","can_delete":false,"product_type":"c1","uid":1251195,"ip_address":"","ucode":"3C5E7BD0B141AF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9HJlSdlulgnMTxKHXlxEicpZPGwhPoS58nnmQPnZXW8osEzA5rBFXxAAM6pZgMOo62RMWH4gaDfg/132","comment_is_top":false,"comment_ctime":1588811563,"is_pvip":false,"replies":[{"id":"79890","content":"适合自己就好了","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1589159026,"ip_address":"","comment_id":214730,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588811563","product_id":100045801,"comment_content":"我们用的是robotframe work 框架 ，觉得很好用","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494186,"discussion_content":"适合自己就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589159026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213488,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1588431872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588431872","product_id":100045801,"comment_content":"我就是开发工程师，我选py  主要是简单。","like_count":0},{"had_liked":false,"id":213001,"user_name":"牺牲","can_delete":false,"product_type":"c1","uid":1619402,"ip_address":"","ucode":"5780E562A43494","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","comment_is_top":false,"comment_ctime":1588259340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588259340","product_id":100045801,"comment_content":"看前两节的时候还觉得有点枯燥，这节的思路很清晰，像敲门砖，对未实现过自动化的人员很受用。","like_count":0},{"had_liked":false,"id":199831,"user_name":"Pyel","can_delete":false,"product_type":"c1","uid":1000293,"ip_address":"","ucode":"7551BD8A7AC5F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/65/bf57c323.jpg","comment_is_top":false,"comment_ctime":1585496682,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585496682","product_id":100045801,"comment_content":"“测试框架的形成是在撰写大量测试脚本的过程中不断抽象封装出来的，然后，再用这个不断完善的框架，改写原有的测试脚本”","like_count":0},{"had_liked":false,"id":190354,"user_name":"橘子🍊","can_delete":false,"product_type":"c1","uid":1436601,"ip_address":"","ucode":"0CFA16F5BBBB8E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erHVQYic6jiaiaqXzrkjYiclibhf315CNshiaECer8ib4B1ot1HMGEDlgqm49gfsicQibrowDdfibLhH5ecGjvg/132","comment_is_top":false,"comment_ctime":1584631602,"is_pvip":false,"replies":[{"id":"73220","content":"特别棒的框架","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1584665169,"ip_address":"","comment_id":190354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584631602","product_id":100045801,"comment_content":"pytest 框架也是很不错的","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487959,"discussion_content":"特别棒的框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584665169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189415,"user_name":"米包","can_delete":false,"product_type":"c1","uid":1410658,"ip_address":"","ucode":"2A7F1010D0206E","user_header":"https://static001.geekbang.org/account/avatar/00/15/86/62/89b04a24.jpg","comment_is_top":false,"comment_ctime":1584513632,"is_pvip":false,"replies":[{"id":"73130","content":"postman的就是一个小工具，可以在postman里面完成场景设置以及执行测试，详细的使用方法可以参考https:&#47;&#47;criss.blog.csdn.net&#47;article&#47;details&#47;104966448我的blog。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1584598103,"ip_address":"","comment_id":189415,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1584513632","product_id":100045801,"comment_content":"老师，postman的测试用例应该怎么写？就是在test里面可以执行的，能点拨一下嘛？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487690,"discussion_content":"postman的就是一个小工具，可以在postman里面完成场景设置以及执行测试，详细的使用方法可以参考https://criss.blog.csdn.net/article/details/104966448我的blog。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584598103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1410658,"avatar":"https://static001.geekbang.org/account/avatar/00/15/86/62/89b04a24.jpg","nickname":"米包","note":"","ucode":"2A7F1010D0206E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244818,"discussion_content":"那接口B需要先拿到接口A的出参作为入参，python脚本应该怎么写？？求指教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587633626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186512,"user_name":"mia","can_delete":false,"product_type":"c1","uid":1458307,"ip_address":"","ucode":"83F6B65AE65121","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/9P7mlmEwl2E1m4b42bdUlaGVGunibesicCRJ9CLvkJB6Ljcgfk42BwJjiatv8mIHCWF3nNCT8o05hmC9k1nQvUQqg/132","comment_is_top":false,"comment_ctime":1583854990,"is_pvip":false,"replies":[{"id":"72118","content":"具体的技术选择 并没有好坏之分，你更加习惯用哪个就选择那个谢谢","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1583976743,"ip_address":"","comment_id":186512,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583854990","product_id":100045801,"comment_content":"老师我想问问，单接口测试案例和业务流程接口测试案例是不是都用测试框架来管理比较好？实际工作中的单接口是不是更多直接用postman来完成比较快呢？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486785,"discussion_content":"具体的技术选择 并没有好坏之分，你更加习惯用哪个就选择那个谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583976743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185606,"user_name":"Geek_dc09d9","can_delete":false,"product_type":"c1","uid":1896144,"ip_address":"","ucode":"E07759F52BC422","user_header":"","comment_is_top":false,"comment_ctime":1583643894,"is_pvip":false,"replies":[{"id":"71726","content":"专栏中推荐了极客时间的python专栏的 可以学习一下。<br>课程中代码我做了整理：https:&#47;&#47;github.com&#47;crisschan&#47;api_geektime。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1583668433,"ip_address":"","comment_id":185606,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583643894","product_id":100045801,"comment_content":"0基础学习python，想让大家给点学习资料推荐","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486435,"discussion_content":"专栏中推荐了极客时间的python专栏的 可以学习一下。\n课程中代码我做了整理：https://github.com/crisschan/api_geektime。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583668433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184317,"user_name":"桃子","can_delete":false,"product_type":"c1","uid":1820404,"ip_address":"","ucode":"83128A5B33F703","user_header":"http://thirdwx.qlogo.cn/mmopen/KFgDEHIEpnT0EXnh02VHqNugxtuFzzXNHc5VNvJRd1dVAGbXeszwhqnEfg0FyeNOWDJrksEDuhtVh6FUMS7OBFaBzE6OEiagr/132","comment_is_top":false,"comment_ctime":1583289031,"is_pvip":false,"replies":[{"id":"71358","content":"pycharm需要配置一下解释器，可以参考我的blog内容配置：https:&#47;&#47;criss.blog.csdn.net&#47;article&#47;details&#47;104664018<br><br>课程中代码我做了整理：https:&#47;&#47;github.com&#47;crisschan&#47;api_geektime。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1583331385,"ip_address":"","comment_id":184317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583289031","product_id":100045801,"comment_content":"老师，我直接拷贝你的第一个接口测试的代码，在pycharm中想跑一下看看效果，结果都没有运行按钮，这个是为什么呢？方便解惑一下嘛","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485972,"discussion_content":"pycharm需要配置一下解释器，可以参考我的blog内容配置：https://criss.blog.csdn.net/article/details/104664018\n\n课程中代码我做了整理：https://github.com/crisschan/api_geektime。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583331385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183802,"user_name":"志强","can_delete":false,"product_type":"c1","uid":1141536,"ip_address":"","ucode":"1C5DC9C7D70A82","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/20/004af747.jpg","comment_is_top":false,"comment_ctime":1583137438,"is_pvip":false,"replies":[{"id":"71170","content":"你需要在pycharm下面的terminal里运行安装requests<br>","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1583147126,"ip_address":"","comment_id":183802,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583137438","product_id":100045801,"comment_content":"C:\\Users\\lzq\\PycharmProjects\\untitled\\venv\\Scripts\\python.exe C:&#47;Users&#47;lzq&#47;Desktop&#47;aaa.py<br>Traceback (most recent call last):<br>  File &quot;C:&#47;Users&#47;lzq&#47;Desktop&#47;aaa.py&quot;, line 3, in &lt;module&gt;<br>    import requests;<br>ModuleNotFoundError: No module named &#39;requests&#39;<br><br>Process finished with exit code 1<br><br><br>老师 我安装requests了 但是提示上述错误，请问是怎么回事，谢谢","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485784,"discussion_content":"你需要在pycharm下面的terminal里运行安装requests\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583147126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181604,"user_name":"恍如少年时","can_delete":false,"product_type":"c1","uid":1736142,"ip_address":"","ucode":"5A0FD8525CCBFC","user_header":"https://static001.geekbang.org/account/avatar/00/1a/7d/ce/8778d2ff.jpg","comment_is_top":false,"comment_ctime":1582593713,"is_pvip":false,"replies":[{"id":"70349","content":"API测试必然会面临两种接口，一种是有参数的，一种是无参数的，无参数的重点关注返回内容，有参数重点关注入参和返回，其实所有的都是在关注代码的一些逻辑覆盖程度，单接口站在单接口内部代码实现逻辑，多接口关注业务逻辑，但是这些都是代码主导的。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1582599128,"ip_address":"","comment_id":181604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582593713","product_id":100045801,"comment_content":"一个接口无参数传递，除了看返回的参数，还有哪些异常可以考虑啊😂","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485048,"discussion_content":"API测试必然会面临两种接口，一种是有参数的，一种是无参数的，无参数的重点关注返回内容，有参数重点关注入参和返回，其实所有的都是在关注代码的一些逻辑覆盖程度，单接口站在单接口内部代码实现逻辑，多接口关注业务逻辑，但是这些都是代码主导的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582599128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180151,"user_name":"沉寂","can_delete":false,"product_type":"c1","uid":1079621,"ip_address":"","ucode":"0DDDE369ADED6F","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/45/33bed7ab.jpg","comment_is_top":false,"comment_ctime":1582200167,"is_pvip":false,"replies":[{"id":"69981","content":"谢谢指正","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1582213497,"ip_address":"","comment_id":180151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582200167","product_id":100045801,"comment_content":"def get(self, uri, params=&#39;&#39;):    # 拼凑访问地址    url = self.url_root + uri + params    # 通过get请求访问对应地址    res = requests.get(url)<br>这个位置缺少一个问号啊","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484546,"discussion_content":"谢谢指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582213497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177296,"user_name":"宁江孤影","can_delete":false,"product_type":"c1","uid":1309850,"ip_address":"","ucode":"70C34A0F56336B","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/9a/124b986d.jpg","comment_is_top":false,"comment_ctime":1581343771,"is_pvip":false,"replies":[{"id":"68860","content":"两种方向都可以，但是选择一个更好抽象的方向对以后的维护来说成本最小。也要考虑自己team的技术水平和人员接受程度。谢谢","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581387777,"ip_address":"","comment_id":177296,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581343771","product_id":100045801,"comment_content":"对于接口之间有数据依赖的测试，我们在搭建自己框架的时候，应该是按接口业务功能分类去封装成方法供调用方调用呢？还是按接口类型封装成通用的方法去实现呢？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483381,"discussion_content":"两种方向都可以，但是选择一个更好抽象的方向对以后的维护来说成本最小。也要考虑自己team的技术水平和人员接受程度。谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581387777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177190,"user_name":"Kino_testdevelopment","can_delete":false,"product_type":"c1","uid":1762509,"ip_address":"","ucode":"4C6F39CBB34EF4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIFXmwIa2QLKiaJ2tgm56JVoDXuywnV0VicDVNI6ayHFvNgnE4RxZPveM3GGoBt5TiarlC7PILrEGibBg/132","comment_is_top":false,"comment_ctime":1581317823,"is_pvip":false,"replies":[{"id":"68803","content":"目前没推荐现有框架，更提倡自己积累自己的框架","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581322693,"ip_address":"","comment_id":177190,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581317823","product_id":100045801,"comment_content":"老师有相关的测试框架可以给我使用学习的么？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483336,"discussion_content":"目前没推荐现有框架，更提倡自己积累自己的框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581322693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177117,"user_name":"安安","can_delete":false,"product_type":"c1","uid":1165470,"ip_address":"","ucode":"CE97A51FBB9BBD","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/9e/2054719e.jpg","comment_is_top":false,"comment_ctime":1581294514,"is_pvip":false,"replies":[{"id":"68707","content":"谢谢，这个选择依照你团队的技术栈选择，如果代码技术好点，优先选择代码会好一点","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581298129,"ip_address":"","comment_id":177117,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1581294514","product_id":100045801,"comment_content":"老师，您好，想请教一下：一个项目的接口测试建议是直接用代码完成还是用工具，类似postman呢？测试同学有代码基础。<br>","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483312,"discussion_content":"谢谢，这个选择依照你团队的技术栈选择，如果代码技术好点，优先选择代码会好一点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581298129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165470,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/9e/2054719e.jpg","nickname":"安安","note":"","ucode":"CE97A51FBB9BBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165535,"discussion_content":"好的，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581300031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177066,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1581259204,"is_pvip":false,"replies":[{"id":"68698","content":"谢谢，我还没有见过商业化的产品，方便留下产品名字吗","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581293216,"ip_address":"","comment_id":177066,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1581259204","product_id":100045801,"comment_content":"我司就是直接购买一个商业api测试产品","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483296,"discussion_content":"谢谢，我还没有见过商业化的产品，方便留下产品名字吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581293216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1474130,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7e/52/e444696a.jpg","nickname":"小闪电","note":"","ucode":"60A0DF6674ADCC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183832,"discussion_content":"同求问~ 是什么产品？我司听起来好像国企呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582523123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176671,"user_name":"roychris","can_delete":false,"product_type":"c1","uid":1171260,"ip_address":"","ucode":"B0E239FB11A006","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/etbNBmR5PEicra7jbaV9pRsCaibXZ3ichB6JicMOnYowP65W5QMKb8Zicud19jicmEGAGh8ylwDXoYM3SHVU6hf6dFpQ/132","comment_is_top":false,"comment_ctime":1581134347,"is_pvip":false,"replies":[{"id":"68575","content":"谢谢您，您可以按照您的想法去实践，我很提倡大家去试错，实践出真知，我也特别期望您的想法落地后的效果和感悟😀","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581143595,"ip_address":"","comment_id":176671,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581134347","product_id":100045801,"comment_content":"是不是可以按照业务流程封装一个大类，从头到尾去执行不同的分支？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483178,"discussion_content":"谢谢您，您可以按照您的想法去实践，我很提倡大家去试错，实践出真知，我也特别期望您的想法落地后的效果和感悟😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581143595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176363,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1581043770,"is_pvip":false,"replies":[{"id":"68483","content":"您好，我没有写是因为网络上unittest教程特别多，就不重复在这里讲解了。你可以自行查找一下","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581047306,"ip_address":"","comment_id":176363,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1581043770","product_id":100045801,"comment_content":"上面的 Common 类还需要和 Python 的 unittest 一起使用，才算是一个完美的测试框架。这块老师简单补充下我想知道具体怎么结合的谢谢","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483087,"discussion_content":"您好，我没有写是因为网络上unittest教程特别多，就不重复在这里讲解了。你可以自行查找一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581047306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1843147,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/1f/cb/22325ae6.jpg","nickname":"road","note":"","ucode":"B0D04FAD7E69B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163586,"discussion_content":"用pytest吧，好用的不要不要的，我自己写的框架就用的pytest +allure ","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581086198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1819500,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c3/6c/d24a23a7.jpg","nickname":"彦鋆","note":"","ucode":"400A12A6ADD7C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1843147,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/1f/cb/22325ae6.jpg","nickname":"road","note":"","ucode":"B0D04FAD7E69B3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":168526,"discussion_content":"pytest确实比unittest简单一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581587382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":163586,"ip_address":""},"score":168526,"extra":""}]},{"author":{"id":1148589,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/ad/dd7bfa58.jpg","nickname":"一生一世一双人","note":"","ucode":"563500BA097B45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166003,"discussion_content":"个人有个问题，接口框架封装问题不大。但是一直纠结Case的管理。用例达到一定数量的时候，感觉管理就不是很方便了。有没有好的推荐做法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581344874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}