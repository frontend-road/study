{"id":78449,"title":"50 | 索引：如何在海量数据中快速查找某个数据？","content":"<p>在第48节中，我们讲了MySQL数据库索引的实现原理。MySQL底层依赖的是B+树这种数据结构。留言里有同学问我，那<strong><span class=\"orange\">类似Redis这样的Key-Value数据库中的索引，又是怎么实现的呢？底层依赖的又是什么数据结构呢？</span></strong></p><p>今天，我就来讲一下索引这种常用的技术解决思路，底层往往会依赖哪些数据结构。同时，通过索引这个应用场景，我也带你回顾一下，之前我们学过的几种支持动态集合的数据结构。</p><h2>为什么需要索引？</h2><p>在实际的软件开发中，业务纷繁复杂，功能千变万化，但是，万变不离其宗。如果抛开这些业务和功能的外壳，其实它们的本质都可以抽象为“对数据的存储和计算”。对应到数据结构和算法中，那“存储”需要的就是数据结构，“计算”需要的就是算法。</p><p>对于存储的需求，功能上无外乎增删改查。这其实并不复杂。但是，一旦存储的数据很多，那性能就成了这些系统要关注的重点，特别是在一些跟存储相关的基础系统（比如MySQL数据库、分布式文件系统等）、中间件（比如消息中间件RocketMQ等）中。</p><p>“如何节省存储空间、如何提高数据增删改查的执行效率”，这样的问题就成了设计的重点。而这些系统的实现，都离不开一个东西，那就是<strong>索引</strong>。不夸张地说，索引设计得好坏，直接决定了这些系统是否优秀。</p><!-- [[[read_end]]] --><p>索引这个概念，非常好理解。你可以类比书籍的目录来理解。如果没有目录，我们想要查找某个知识点的时候，就要一页一页翻。通过目录，我们就可以快速定位相关知识点的页数，查找的速度也会有质的提高。</p><h2>索引的需求定义</h2><p>索引的概念不难理解，我想你应该已经搞明白。接下来，我们就分析一下，在设计索引的过程中，需要考虑到的一些因素，换句话说就是，我们该如何定义清楚需求呢？</p><p>对于系统设计需求，我们一般可以从<strong>功能性需求</strong>和<strong>非功能性需求</strong>两方面来分析，这个我们之前也说过。因此，这个问题也不例外。</p><h3>1.功能性需求</h3><p>对于功能性需求需要考虑的点，我把它们大致概括成下面这几点。</p><p><strong>数据是格式化数据还是非格式化数据</strong>？要构建索引的原始数据，类型有很多。我把它分为两类，一类是结构化数据，比如，MySQL中的数据；另一类是非结构化数据，比如搜索引擎中网页。对于非结构化数据，我们一般需要做预处理，提取出查询关键词，对关键词构建索引。</p><p><strong>数据是静态数据还是动态数据</strong>？如果原始数据是一组静态数据，也就是说，不会有数据的增加、删除、更新操作，所以，我们在构建索引的时候，只需要考虑查询效率就可以了。这样，索引的构建就相对简单些。不过，大部分情况下，我们都是对动态数据构建索引，也就是说，我们不仅要考虑到索引的查询效率，在原始数据更新的同时，我们还需要动态地更新索引。支持动态数据集合的索引，设计起来相对也要更加复杂些。</p><p><strong>索引存储在内存还是硬盘</strong>？如果索引存储在内存中，那查询的速度肯定要比存储在磁盘中的高。但是，如果原始数据量很大的情况下，对应的索引可能也会很大。这个时候，因为内存有限，我们可能就不得不将索引存储在磁盘中了。实际上，还有第三种情况，那就是一部分存储在内存，一部分存储在磁盘，这样就可以兼顾内存消耗和查询效率。</p><p><strong>单值查找还是区间查找</strong>？所谓单值查找，也就是根据查询关键词等于某个值的数据。这种查询需求最常见。所谓区间查找，就是查找关键词处于某个区间值的所有数据。你可以类比MySQL数据库的查询需求，自己想象一下。实际上，不同的应用场景，查询的需求会多种多样。</p><p><strong>单关键词查找还是多关键词组合查找</strong>？比如，搜索引擎中构建的索引，既要支持一个关键词的查找，比如“数据结构”，也要支持组合关键词查找，比如“数据结构 AND 算法”。对于单关键词的查找，索引构建起来相对简单些。对于多关键词查询来说，要分多种情况。像MySQL这种结构化数据的查询需求，我们可以实现针对多个关键词的组合，建立索引；对于像搜索引擎这样的非结构数据的查询需求，我们可以针对单个关键词构建索引，然后通过集合操作，比如求并集、求交集等，计算出多个关键词组合的查询结果。</p><p>实际上，不同的场景，不同的原始数据，对于索引的需求也会千差万别。我这里只列举了一些比较有共性的需求。</p><h3>2.非功能性需求</h3><p>讲完了功能性需求，我们再来看，索引设计的非功能性需求。</p><p><strong>不管是存储在内存中还是磁盘中，索引对存储空间的消耗不能过大</strong>。如果存储在内存中，索引对占用存储空间的限制就会非常苛刻。毕竟内存空间非常有限，一个中间件启动后就占用几个GB的内存，开发者显然是无法接受的。如果存储在硬盘中，那索引对占用存储空间的限制，稍微会放宽一些。但是，我们也不能掉以轻心。因为，有时候，索引对存储空间的消耗会超过原始数据。</p><p><strong>在考虑索引查询效率的同时，我们还要考虑索引的维护成本</strong>。索引的目的是提高查询效率，但是，基于动态数据集合构建的索引，我们还要考虑到，索引的维护成本。因为在原始数据动态增删改的同时，我们也需要动态地更新索引。而索引的更新势必会影响到增删改操作的性能。</p><h2>构建索引常用的数据结构有哪些？</h2><p>我刚刚从很宏观的角度，总结了在索引设计的过程中，需要考虑的一些共性因素。现在，我们就来看，对于不同需求的索引结构，底层一般使用哪种数据结构。</p><p>实际上，常用来构建索引的数据结构，就是我们之前讲过的几种支持动态数据集合的数据结构。比如，散列表、红黑树、跳表、B+树。除此之外，位图、布隆过滤器可以作为辅助索引，有序数组可以用来对静态数据构建索引。</p><p>我们知道，<strong>散列表</strong>增删改查操作的性能非常好，时间复杂度是O(1)。一些键值数据库，比如Redis、Memcache，就是使用散列表来构建索引的。这类索引，一般都构建在内存中。</p><p><strong>红黑树</strong>作为一种常用的平衡二叉查找树，数据插入、删除、查找的时间复杂度是O(logn)，也非常适合用来构建内存索引。Ext文件系统中，对磁盘块的索引，用的就是红黑树。</p><p><strong>B+树</strong>比起红黑树来说，更加适合构建存储在磁盘中的索引。B+树是一个多叉树，所以，对相同个数的数据构建索引，B+树的高度要低于红黑树。当借助索引查询数据的时候，读取B+树索引，需要的磁盘IO次数会更少。所以，大部分关系型数据库的索引，比如MySQL、Oracle，都是用B+树来实现的。</p><p><strong>跳表</strong>也支持快速添加、删除、查找数据。而且，我们通过灵活调整索引结点个数和数据个数之间的比例，可以很好地平衡索引对内存的消耗及其查询效率。Redis中的有序集合，就是用跳表来构建的。</p><p>除了散列表、红黑树、B+树、跳表之外，位图和布隆过滤器这两个数据结构，也可以用于索引中，辅助存储在磁盘中的索引，加速数据查找的效率。我们来看下，具体是怎么做的？</p><p>我们知道，<strong>布隆过滤器</strong>有一定的判错率。但是，我们可以规避它的短处，发挥它的长处。尽管对于判定存在的数据，有可能并不存在，但是对于判定不存在的数据，那肯定就不存在。而且，布隆过滤器还有一个更大的特点，那就是内存占用非常少。我们可以针对数据，构建一个布隆过滤器，并且存储在内存中。当要查询数据的时候，我们可以先通过布隆过滤器，判定是否存在。如果通过布隆过滤器判定数据不存在，那我们就没有必要读取磁盘中的索引了。对于数据不存在的情况，数据查询就更加快速了。</p><p>实际上，有序数组也可以被作为索引。如果数据是静态的，也就是不会有插入、删除、更新操作，那我们可以把数据的关键词（查询用的）抽取出来，组织成有序数组，然后利用二分查找算法来快速查找数据。</p><h2>总结引申</h2><p>今天这节算是一节总结课。我从索引这个非常常用的技术方案，给你展示了散列表、红黑树、跳表、位图、布隆过滤器、有序数组这些数据结构的应用场景。学习完这节课之后，不知道你对这些数据结构以及索引，有没有更加清晰的认识呢？</p><p>从这一节内容中，你应该可以看出，架构设计离不开数据结构和算法。要想成长为一个优秀的业务架构师、基础架构师，数据结构和算法的根基一定要打稳。因为，那些看似很惊艳的架构设计思路，实际上，都是来自最常用的数据结构和算法。</p><h2>课后思考</h2><p>你知道基础系统、中间件、开源软件等系统中，有哪些用到了索引吗？这些系统的索引是如何实现的呢？</p><p>欢迎留言和我分享，也欢迎点击“<span class=\"orange\">请朋友读</span>”，把今天的内容分享给你的好友，和他一起讨论、学习。</p>","neighbors":{"left":{"article_title":"49 | 搜索：如何用A*搜索算法实现游戏中的寻路功能？","id":78175},"right":{"article_title":"51 | 并行算法：如何利用并行处理提高算法的执行效率？","id":78795}},"comments":[{"had_liked":false,"id":62393,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1548044961,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"555598826145","product_id":100017301,"comment_content":"我对索引的理解<br>------------<br>索引真是个好东西。索引的英文名字叫：index，记住这个英文单词，会让我们更容易记忆和联想它到底是什么。在实际的编程中，index这个单词，真是到处可见。例如：数组的下标就是index<br><br>如果用一句话描述“索引”的作用，那会是什么？我想是这样：索引是用来辅助查找，用计算机专业术语叫：Addressing(寻址）<br><br>现实世界中，我们的查找会存在两种场景：<br>1. 从局部信息，查询与其相关的整体信息<br>2. 从整体信息中查询局部信息<br>怎么理解呢？<br>搜索引擎需要查询一个网页中是否存在某个关键词以及通过某个关键词查询包含它的所有网页。<br><br>索引的应用<br>--------<br>正是因为计算机大部分工作都是在Addressing，所以，在计算机中，索引到处存在。小到操作系统虚拟内存到真实内存的映射，就是索引嘛，大到分布式系统、网络，都是这个原理。<br><br>以上，我对索引的理解有点“广义”。我觉得数据结构和算法如此重要，它体现计算机精髓的地方便在于此。<br><br><br><br><br>","like_count":130,"discussions":[{"author":{"id":2273754,"avatar":"https://static001.geekbang.org/account/avatar/00/22/b1/da/5602cb4b.jpg","nickname":"king","note":"","ucode":"1E5BD0E2A789C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408769,"discussion_content":"计算机本来的一个很重要的任务就是数据存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635321564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397149,"avatar":"https://static001.geekbang.org/account/avatar/00/15/51/9d/e6947e9b.jpg","nickname":"遇事不决，量子力学","note":"","ucode":"6E5B015F4E427B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347566,"discussion_content":"倒排索引就是你说的局部到全局吧，查询某个单次就能检索到对应哪些doc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612259131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1796339,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/68/f3/57456c44.jpg","nickname":"飘到站","note":"","ucode":"0C9A9521061127","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309811,"discussion_content":"不知怎么滴，就想到了  命名，名称就是索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601450097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036705,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/13/e1/6939ae4f.jpg","nickname":"knight劉先生","note":"","ucode":"CEE9BFC8D3D969","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291755,"discussion_content":"招牌银银","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594946924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1638187,"avatar":"","nickname":"Geek_94adb8","note":"","ucode":"B142F473E1A0B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183683,"discussion_content":"陈独秀也没你秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582507922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1482915,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","nickname":"业余爱好者","note":"","ucode":"A890935A982988","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133274,"discussion_content":"听说过这种说法，但没联想到这里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578959033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62340,"user_name":"freeland","can_delete":false,"product_type":"c1","uid":1023562,"ip_address":"","ucode":"F0005A096EF819","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9e/4a/2f81b0f5.jpg","comment_is_top":false,"comment_ctime":1548034846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"254951105310","product_id":100017301,"comment_content":"es中的单排索引其实用了trie树，对每个需要索引的key维护了一个trie树，用于定位到这个key在文件中的位置， 然后直接用有序列表直接去访问对应的documents   ，区块链拿以太坊来说吧，存储用的leveldb，数据存储用的数据结构是帕特利夏树，是一种高级的trie树，很好的做了数据的压缩， 消息中间件像kafka这种，会去做持久化，每个partition都会有很多数据，会有大量数据存储在磁盘中，所以每个partition也会有个索引，方便去做快速访问","like_count":60},{"had_liked":false,"id":208174,"user_name":"大毛","can_delete":false,"product_type":"c1","uid":1899599,"ip_address":"","ucode":"93B18287F06706","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","comment_is_top":false,"comment_ctime":1587291465,"is_pvip":true,"discussion_count":6,"race_medal":0,"score":"151911146825","product_id":100017301,"comment_content":"谈一谈自己对数据结构和索引的理解：<br><br>- 数据的存储，在底层只有两种形式：连续空间存储 和 零散空间存储，这两种形式对应了两种最基本的数据结构：数组 和 链表<br><br>- 使用这两种数据结构存储数据的空间利用率是最高的，但是如果想要实现更加快速的查找，我们就需要使用额外的操作，这两种操作是：用额外计算获取数据地址 和 用额外空间保持一种方便查找的结构。<br><br>- 用额外的计算获取数据地址，这种思路只能用于数组，因为数组的下标可以计算内存地址。具体应用如下：<br>1.使用数组下标进行数据的随机访问，这也是数组的杀手锏<br>2.通过对数据的计算确定数据应该存放的位置，这就是 散列表，这种计算方法就是哈希函数<br><br>- 用额外的空间保持方便查找的结构，这种思路用于“使用零散空间存储数据的情况”，你仔细思考，跳表、红黑树、B+树 是不是都是这种思路的产儿？<br>1.跳表通过设置额外的节点索引，实现了加快数据查询的功能。<br>2.红黑树、B+树 通过树这种结构用不同孩子保存了不同数据间的关系。<br><br>- 不同数据结构的组合可以实现更多功能。<br><br>- 如果想实现范围索引，最好的办法是使用有序链表，我们通过某种方法，找到数据范围中的起始结点，然后通过有序链表依次输出范围内的结点，直到数据超出范围，这里有几个现成的例子：<br>1.跳表：通过额外的结点找到有序链表的起始结点，然后依次输出<br>2.B+树：通过查找叶子节点定位有序链表的起始节点，然后依次输出","like_count":36,"discussions":[{"author":{"id":1972505,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/19/19/d82e24fb.jpg","nickname":"李润东","note":"","ucode":"65CFEA3C8B27C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268061,"discussion_content":"总结的很好！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589725733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1972505,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/19/19/d82e24fb.jpg","nickname":"李润东","note":"","ucode":"65CFEA3C8B27C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268818,"discussion_content":"谢谢，一起精进","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589817964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":268061,"ip_address":""},"score":268818,"extra":""}]},{"author":{"id":2971870,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/58/de/dad844b1.jpg","nickname":"晨遥","note":"","ucode":"C3972A1FE5E021","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576372,"discussion_content":"动态数据结构要用额外的计算保持其定义的规则吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655476872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2971870,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/58/de/dad844b1.jpg","nickname":"晨遥","note":"","ucode":"C3972A1FE5E021","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580139,"discussion_content":"没太明白你的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657904896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":576372,"ip_address":""},"score":580139,"extra":""},{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2971870,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/58/de/dad844b1.jpg","nickname":"晨遥","note":"","ucode":"C3972A1FE5E021","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580140,"discussion_content":"能举个例子吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657904910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":576372,"ip_address":""},"score":580140,"extra":""}]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332498,"discussion_content":"总结的很好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607242583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62575,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1548116314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78857527642","product_id":100017301,"comment_content":"可以讲讲es 到排序索引结构原理和数据结构？","like_count":19},{"had_liked":false,"id":62396,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1548045599,"is_pvip":false,"replies":[{"id":"22200","content":"官方读法就是 S Q L 哈","user_name":"编辑回复","comment_id":62396,"uid":"1058895","ip_address":"","utype":2,"ctime":1548146109,"user_name_real":"王锦"}],"discussion_count":7,"race_medal":0,"score":"61677587743","product_id":100017301,"comment_content":"今天音频朗读帅哥把MySQL读成了 my s q l  ，早上起来听音频，萌了\\(&#47;&#47;∇&#47;&#47;)\\","like_count":14,"discussions":[{"author":{"id":1058895,"avatar":"https://static001.geekbang.org/account/avatar/00/10/28/4f/48e48553.jpg","nickname":"@阿锦啊","note":"","ucode":"3C5F00333D7174","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437195,"discussion_content":"官方读法就是 S Q L 哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548146109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70896,"discussion_content":"以前跟我们公司一个俄罗斯哥们聊天跟他说MySQL他都没听懂，他在美国留学10年英语满级了，后来他说这个叫My S Q L，但是为了简单我还是说MySQL，最后他被顺利同化了","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1575382739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1113874,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2rgam9XfHbuSIZB4S3UG2GLrf9CLkiatDG62eEMicT4yprYdSAZET3kfqQBPxqBHkZw2KRhMdJX4Q/132","nickname":"啸歌","note":"","ucode":"D8C8963BB940F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273656,"discussion_content":"我们在一个My S Q L的环境下也会被同化的，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590484907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70896,"ip_address":""},"score":273656,"extra":""}]},{"author":{"id":1476490,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/8a/07ab933c.jpg","nickname":"璀璨星空","note":"","ucode":"CE6324C4261A52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336747,"discussion_content":"The official way to pronounce “MySQL” is “My Ess Que Ell” (not “my sequel”), but we do not mind if you pronounce it as “my sequel” or in some other localized way.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608691548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397351,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/67/fcba0967.jpg","nickname":"zapup","note":"","ucode":"388D6BB5D7B137","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230632,"discussion_content":"高级高级长见识~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586758344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182731,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0c/0b/1ccc90b7.jpg","nickname":"-Violet Evergarden-","note":"","ucode":"B483A3ACFB36F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369346,"discussion_content":"读法其实不需要纠结，大家都懂你说的是什么就行了。官方是拆开来3个字母的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619009393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1504956,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/mkcNxKyJibOd8bsLpQRJ9Yjsew5yTBm2GTXUSkvwbwibMqPPMV9GbmXPzFIRC9iaX2s7HxvSryTLhGnrSogYqB7NQ/132","nickname":"kaisheng","note":"","ucode":"FD9EFEBEB7BFDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215826,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585388109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62563,"user_name":"在路边鼓掌的人","can_delete":false,"product_type":"c1","uid":1342023,"ip_address":"","ucode":"BC1388BA330CD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/7a/47/d9090056.jpg","comment_is_top":false,"comment_ctime":1548112875,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"53087720427","product_id":100017301,"comment_content":"昨天刚学了操作系统的多级页表，应该是比较经典的索引了😂","like_count":12},{"had_liked":false,"id":156948,"user_name":"海贼王","can_delete":false,"product_type":"c1","uid":1239233,"ip_address":"","ucode":"9F35793FAA3F5E","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/c1/e2cc1d04.jpg","comment_is_top":false,"comment_ctime":1574999863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44524672823","product_id":100017301,"comment_content":"从评论可以看出能坚持到这里的人不多，不过也不绝对，因为有些坚持到这里的人可能因为某些原因没有发表评论。不过还是很感谢老师的，从这个课程中，我体会到了数据结构的用处。之前有人说数据结构在平常的开发中没有用，当时我表示认同。现在看来，这句话也不完全正确。不同层次的人看问题的思路不同，结果也南辕北辙。","like_count":11},{"had_liked":false,"id":110773,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1562330139,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"35922068507","product_id":100017301,"comment_content":"最近在用的是倒排索引和roaring bitmap，用在广告检索中简直无敌搬的存在","like_count":9},{"had_liked":false,"id":176360,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1581043282,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"31645814354","product_id":100017301,"comment_content":"为什么需要索引？<br>（1）在实际的软件开发工作的本质都可以抽象为“对数据的存储和计算”。对应到数据结构和算法中，那“存储”需要的就是数据结构，“计算”需要的就是算法。<br>（2）对于存储的需求，功能上无外乎增删改查。当存储的数据很多，性能就会成为这些系统要关注的重点，特别是在存储相关的基础系统、中间件中。<br>（3）“如何节省存储空间、如何提高数据增删改查的执行效率”，解决这样的问题离不开索引<br><br>索引的需求定义<br>对于系统设计需求，一般可以从功能性需求和非功能性需求两方面来分析<br>1. 功能性需求<br>（1）数据是格式化数据还是非格式化数据？<br>构建索引的原始数据，可分为两类：<br>\t* 一类是结构化数据，如MySQL 中的数据；<br>\t* 一类是非结构化数据，如搜索引擎中网页。非结构化数据，一般需要预处理，提取出查询关键词，对关键词构建索引。<br><br>（2）数据是静态数据还是动态数据？<br>\t* 如果是一组静态数据，在构建索引时只需考虑查询效率<br>\t* 动态数据构建索引，不仅要考虑索引的查询效率，在原始数据更新的同时，还需要动态地更新索引<br><br>（3）索引存储在内存还是硬盘？<br>\t* 当数据量小时，索引可以存储在内存中。<br>\t* 原始数据量很大时，对应的索引可能也会很大。内存有限，可能需要将索引存储在磁盘中。<br>\t* 第三种情况：一部分存储在内存，一部分存储在磁盘，这样可以兼顾内存消耗和查询效率。<br><br>（4）单值查找还是区间查找？<br>\t* 所谓单值查找，也就是根据查询关键词等于某个值的数据。<br>\t* 所谓区间查找，就是查找关键词处于某个区间值的所有数据。不同的应用场景，查询的需求会多种多样。<br><br>（5）单关键词查找还是多关键词组合查找？<br>\t* 对于单关键词的查找，索引构建起来相对简单。<br>\t* 多关键词查询要分多种情况:<br>          A：像 MySQL 这种结构化数据的查询，可以实现针对多个关键词的组合，建立索引；<br>          B：像搜索引擎这样的非结构数据的查询，可以针对单个关键词构建索引，然后通过集合操作，如求并集、求交集等，计算出多个关键词组合的查询结果。<br>不同的场景，不同的原始数据，对于索引的需求也会千差万别<br><br>2. 非功能性需求<br>（1）不管是存储在内存中还是磁盘中，索引对存储空间的消耗不能过大。<br>\t* 如果存储在内存中，索引对占用存储空间的限制就会非常苛刻<br>\t* 如果存储在硬盘中，也不能掉以轻心，因为有时索引对存储空间的消耗会超过原始数据<br><br><br>（2）在考虑索引查询效率的同时，还要考虑索引的维护成本。<br>\t* 基于动态数据集合构建的索引要考虑索引的维护成本。因为在原始数据动态增删改的同时，也需要动态的更新索引。而索引的更新势必会影响到增删改操作的性能。<br><br>构建索引常用的数据结构有哪些？<br>如散列表、红黑树、跳表、B+ 树，除此之外，位图、布隆过滤器可以作为辅助索引，有序数组可以用来对静态数据构建索引<br><br>\t* 散列表增删改查操作的时间复杂度是 O(1)，被一些键值数据库用来构建索引，如 Redis、Memcache。这类索引，一般都构建在内存中。<br><br>\t* 红黑树是常用的平衡二叉查找树，数据插入、删除、查找的时间复杂度是 O(logn)，也非常适合用来构建内存索引。Ext 文件系统中，对磁盘块的索引，用的就是红黑树。<br><br>\t* B+ 树比起红黑树更加适合构建存储在磁盘中的索引<br>        （1）B+ 树是一个多叉树，对相同个数的数据构建索引，B+ 树的高度要低于红黑树。<br>        （2）当借助索引查询数据时，读取 B+ 树索引需要的磁盘 IO 次数会更少。<br>所以，如 MySQL、Oracle等，大部分关系型数据库的索引都是用 B+ 树来实现的<br><br>\t* 跳表也支持快速添加、删除、查找数据，通过调整索引结点个数和数据个数之间的比例，可以很好地平衡索引对内存的消耗及其查询效率。Redis 中的有序集合，就是用跳表来构建的<br><br>\t* 布隆过滤器有一定的判错率，但可以规避它的短处，发挥它的长处<br>        （1）尽管对于判定存在的数据可能并不存在，但是对于判定不存在的数据是一定不存在<br>        （2）布隆过滤器有个大特点：内存占用非常少，所以可以针对数据，构建一个布隆过滤器存储在内存中。<br>        （3）查询数据时，如果布隆过滤器判定数据不存在，就不必读取磁盘中的索引了。对于数据不存在的情况，数据查询就更加快速了。<br><br>\t* 有序数组也可以被作为索引，如果数据是静态的只有查询操作，可以把数据的关键词（查询用的）抽取出来，组织成有序数组，然后利用二分查找算法来快速查找数据。<br><br>","like_count":8},{"had_liked":false,"id":146820,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1572665007,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"31637436079","product_id":100017301,"comment_content":"HBase在读写过程中用到了跳表、LSM树和布隆过滤器。","like_count":7,"discussions":[{"author":{"id":1249400,"avatar":"https://static001.geekbang.org/account/avatar/00/13/10/78/29bd3f1e.jpg","nickname":"王子瑞Aliloke有事电联","note":"","ucode":"9ABE8E475E336B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340305,"discussion_content":"高手，数据结构＋算法，学得很有意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609948917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332510,"discussion_content":"都是高手，知道的这么细节。都看过这部分源码？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607245175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2249227,"avatar":"https://static001.geekbang.org/account/avatar/00/22/52/0b/50bf0f05.jpg","nickname":"橙子橙","note":"","ucode":"CD51367A14D955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325680,"discussion_content":"rocksdb 内存memtable使用skiptable, sst文件lsm tree, bloomfilter加入查找sst.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605406668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309321,"discussion_content":"先缓存，然后布隆过滤器吧。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601257189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1268674,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/c2/ee31ed92.jpg","nickname":"坏牧羊人","note":"","ucode":"8627E06C667A4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267371,"discussion_content":"不是步隆过滤器，LSM树，二分查找吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589637421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1062864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","nickname":"aof","note":"","ucode":"5815D63C4926BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1268674,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/c2/ee31ed92.jpg","nickname":"坏牧羊人","note":"","ucode":"8627E06C667A4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332772,"discussion_content":"跳表的实现原理就是多级索引实现二分查找啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607335537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":267371,"ip_address":""},"score":332772,"extra":""}]}]},{"had_liked":false,"id":120012,"user_name":"胡小禾","can_delete":false,"product_type":"c1","uid":1132315,"ip_address":"","ucode":"1C23B7492C0C9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","comment_is_top":false,"comment_ctime":1564755060,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31629526132","product_id":100017301,"comment_content":"我以前只是人云亦云地认同“数据结构和算法”十分重要。看完本节，豁然开朗。似乎庞大的计算机体系，将其本质，半隐半现地展示在我面前","like_count":7},{"had_liked":false,"id":85506,"user_name":"万里有云","can_delete":false,"product_type":"c1","uid":1443026,"ip_address":"","ucode":"C715F2A9094413","user_header":"https://static001.geekbang.org/account/avatar/00/16/04/d2/4a5e3034.jpg","comment_is_top":false,"comment_ctime":1555081543,"is_pvip":false,"replies":[{"id":"30979","content":"是的","user_name":"作者回复","comment_id":85506,"uid":"1190123","ip_address":"","utype":1,"ctime":1555372627,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"27324885319","product_id":100017301,"comment_content":"把数据的关键词（查询用的）抽取出来，组织成有序数组。如果关键词是整型，那索引就是整形数组，关键词是字符串，那索引就是字符串指针数组吗？","like_count":6,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446690,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555372627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62351,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1548036799,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"23022873279","product_id":100017301,"comment_content":"everything","like_count":6,"discussions":[{"author":{"id":2699218,"avatar":"","nickname":"Geek_279849","note":"","ucode":"FC6A3514FC955C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556888,"discussion_content":"用的啥数据结构呢？好奇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647566869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330333,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4c/9d/601b1949.jpg","nickname":"huguo","note":"","ucode":"418B04E2AB13EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141772,"discussion_content":"很好奇使用的是什么索引，以及mac 的spotlight","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579440876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1341068,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqxCNYbtwpaicsJxjU8f8htibTjpdQYOhyUoaCgJ2nVicdEF3Vwu9dxCtMtOjSupJUzuvtebSPvxNwOg/132","nickname":"高新刚","note":"","ucode":"018B77C57E94C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5111,"discussion_content":"查找文件神器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565950315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62336,"user_name":"one","can_delete":false,"product_type":"c1","uid":1234736,"ip_address":"","ucode":"297FF7940E7C06","user_header":"","comment_is_top":false,"comment_ctime":1548034349,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23022870829","product_id":100017301,"comment_content":"希望老师能讲讲二级索引（从V查K）这块，一直搞不清楚，没有自己写过。还有空间数据结构的range现在也很火，比如uber，滴滴常用的，面试常考。","like_count":5,"discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332512,"discussion_content":"这。。从value 查 key ？二级索引？二级索引 常是类似跳表那种多级索引。range ？这两种数据结构，第一次知道。哪位说说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607245975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160379,"user_name":"退而结网","can_delete":false,"product_type":"c1","uid":1055867,"ip_address":"","ucode":"CA4375BADE311A","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/7b/d89ba212.jpg","comment_is_top":false,"comment_ctime":1575943275,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14460845163","product_id":100017301,"comment_content":"b+树在进行节点合并和分离时会有随机io问题，但是磁盘寻道需要花费时间，大量的随机io会降低性能，所以出现了lsm树，分割成多棵内存小树，然后超过的部分进行merged到磁盘上，用于平衡红黑树和b+树","like_count":3,"discussions":[{"author":{"id":2249227,"avatar":"https://static001.geekbang.org/account/avatar/00/22/52/0b/50bf0f05.jpg","nickname":"橙子橙","note":"","ucode":"CD51367A14D955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325684,"discussion_content":"lsm主要是利用磁盘顺序io的特性, 但是lsm tree会有读放大 空间放大, 需要merge, 也需要比较好的ssd盘, 各有利弊吧~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605406820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281115,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1614586851,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"10204521443","product_id":100017301,"comment_content":"茶艺师学编程<br><br>到这里，已经感觉实在听天书了········<br>没关系，来二刷，三刷·····（自我鼓劲中）","like_count":2},{"had_liked":false,"id":134234,"user_name":"李冲","can_delete":false,"product_type":"c1","uid":1254530,"ip_address":"","ucode":"C8C12308B0FDDA","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/82/b5808a60.jpg","comment_is_top":false,"comment_ctime":1568780216,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10158714808","product_id":100017301,"comment_content":"想起一句不知道谁说的话，有点莫名其妙的感触。<br><br>“计算机科学领域的任何问题都可以通过增加一个间接的中间层来解决”<br><br>是不是基础体系中的线性编址和寻址已经把模型给固定死了呢？举例来说位图以少代多，散列优化编排，树（跳表）二者兼有，都在一维与线性下转悠。","like_count":2,"discussions":[{"author":{"id":1686668,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erict2efTRIYd3KAeTnwcGjxicplBTr15CDUXvjOAicZcLHWS1dC1Isn1I8CpJ4Uak0jdU93MQerSe5A/132","nickname":"haten01","note":"","ucode":"DE42BDCE7F446B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216544,"discussion_content":"这句话出自David Wheeler，原话是&#34;All problems in computer science can be solved by another level of indirection&#34;","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585462328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332515,"discussion_content":"理论容易，实际难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607247219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2249227,"avatar":"https://static001.geekbang.org/account/avatar/00/22/52/0b/50bf0f05.jpg","nickname":"橙子橙","note":"","ucode":"CD51367A14D955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325685,"discussion_content":"第一次看到是在: 计算机组成原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605406849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192590,"user_name":"makermade","can_delete":false,"product_type":"c1","uid":1133194,"ip_address":"","ucode":"03386B90CB8F20","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","comment_is_top":false,"comment_ctime":1584862355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879829651","product_id":100017301,"comment_content":"如果抛开这些业务和功能的外壳，其实它们的本质都可以抽象为“对数据的存储和计算”。对应到数据结构和算法中，那“存储”需要的就是数据结构，“计算”需要的就是算法。<br>总结的真好","like_count":1},{"had_liked":false,"id":167847,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1577949874,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872917170","product_id":100017301,"comment_content":"索引是为了快速寻址，这句话说的真好，言简意赅","like_count":1},{"had_liked":false,"id":133539,"user_name":"static","can_delete":false,"product_type":"c1","uid":1138754,"ip_address":"","ucode":"1697966367370E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYfReHXMbPaxO890ib9GvY9iciclPIUvaAYMYON4scP7ElXCPVzicghF0SH5HN2LqibYOrdrppC7DuSpw/132","comment_is_top":false,"comment_ctime":1568599794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863567090","product_id":100017301,"comment_content":"课后思考：Kafka的日志偏移量索引文件，时间戳索引文件，用于根据消息的偏移量、时间戳快速找到消息在磁盘中的位置。","like_count":1},{"had_liked":false,"id":84211,"user_name":"xuery","can_delete":false,"product_type":"c1","uid":1027584,"ip_address":"","ucode":"F461B61BE06131","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/00/025f37e7.jpg","comment_is_top":false,"comment_ctime":1554804562,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5849771858","product_id":100017301,"comment_content":"索引的底层数据结构实现很多，有些时候可以结合使用，比如王争老师说的，查询某个数据是否存在，可以先通过布隆过滤器的不存在的一定不存在判断，在这一层可以拦截掉不存在的数据","like_count":1},{"had_liked":false,"id":62365,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1548038969,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5843006265","product_id":100017301,"comment_content":"理论联系实际，融会贯通。","like_count":1},{"had_liked":false,"id":62350,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1548036514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843003810","product_id":100017301,"comment_content":"这一节就高深了....","like_count":1},{"had_liked":false,"id":345902,"user_name":"苏成","can_delete":false,"product_type":"c1","uid":2668694,"ip_address":"","ucode":"80A8E7B243DD73","user_header":"https://static001.geekbang.org/account/avatar/00/28/b8/96/716ba431.jpg","comment_is_top":false,"comment_ctime":1652688304,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1652688304","product_id":100017301,"comment_content":"索引：我理解的索引就是指向我们要查找的地址。<br>\t1.为什么需要索引：节省存储，提高效率<br>\t2.功能需求<br>\t\t1.数据格式<br>\t\t2.静态还是动态<br>\t\t3.内存还是磁盘<br>\t\t4.单值查找还是区间查找<br>\t\t5.单关键词查找还是多关键词组合查找<br>\t3非功能需求<br>\t\t.空间消耗，维护成本<br>\t4.数据结构<br>\t\t散列表， 红黑树，跳表，B+树，<br>\t\t位图，布隆过滤器，数组<br>","like_count":0},{"had_liked":false,"id":334490,"user_name":"Geek_c0013c","can_delete":false,"product_type":"c1","uid":2372558,"ip_address":"","ucode":"B1E6E3A9DE25B0","user_header":"","comment_is_top":false,"comment_ctime":1644976383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644976383","product_id":100017301,"comment_content":"老师结尾问的问题怎么没人回答！我还想来看看大神是怎么解答的呢！","like_count":0},{"had_liked":false,"id":289842,"user_name":"dst","can_delete":false,"product_type":"c1","uid":1861196,"ip_address":"","ucode":"9177BBB6C8B905","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKx6EdicYYuYK745brMa9yAlkZs2YmzxRAm4BQ2kw9GbtcC8ebnQlyBfIJnGjH57ib4HVlQIpSbTrBw/132","comment_is_top":false,"comment_ctime":1619226611,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619226611","product_id":100017301,"comment_content":"索引是帮助高效查找和排序的一种数据结构","like_count":0},{"had_liked":false,"id":278420,"user_name":"Geek_24cbbb","can_delete":false,"product_type":"c1","uid":2437888,"ip_address":"","ucode":"92447AFD1C0CAC","user_header":"","comment_is_top":false,"comment_ctime":1612936658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612936658","product_id":100017301,"comment_content":"书籍的目录就是索引吧！","like_count":0},{"had_liked":false,"id":261533,"user_name":"橙子橙","can_delete":false,"product_type":"c1","uid":2249227,"ip_address":"","ucode":"CD51367A14D955","user_header":"https://static001.geekbang.org/account/avatar/00/22/52/0b/50bf0f05.jpg","comment_is_top":false,"comment_ctime":1605406549,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1605406549","product_id":100017301,"comment_content":"&quot;要想成长为一个优秀的业务架构师、基础架构师，数据结构和算法的根基一定要打稳。因为，那些看似很惊艳的架构设计思路，实际上，都是来自最常用的数据结构和算法。&quot;  加油~","like_count":0,"discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332518,"discussion_content":"哈哈 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607247370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242621,"user_name":"prepared","can_delete":false,"product_type":"c1","uid":1194853,"ip_address":"","ucode":"00E54A5C7CDCBE","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/65/3a4fc8cf.jpg","comment_is_top":false,"comment_ctime":1597798589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597798589","product_id":100017301,"comment_content":"1. mysql B+树、hash、map<br>2. ES 倒排索引<br>3. redis 散列表","like_count":0},{"had_liked":false,"id":235386,"user_name":"xiao_辉++","can_delete":false,"product_type":"c1","uid":2067596,"ip_address":"","ucode":"4069BBE56F4B80","user_header":"https://static001.geekbang.org/account/avatar/00/1f/8c/8c/b6c359c8.jpg","comment_is_top":false,"comment_ctime":1594994530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594994530","product_id":100017301,"comment_content":"druid也用到了倒排索引，bitmap，各种压缩编码存储","like_count":0},{"had_liked":false,"id":228227,"user_name":"Beyond myself","can_delete":false,"product_type":"c1","uid":1921394,"ip_address":"","ucode":"BB0218446CD64F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/51/72/16b13cd4.jpg","comment_is_top":false,"comment_ctime":1592619927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592619927","product_id":100017301,"comment_content":"给现实问题建模，数字化，转化为计算机能处理的问题就是编码的过程。<br>编码过程也可以理解为建索引。<br>从这个角度外推，索引在软件中无处不再。","like_count":0},{"had_liked":false,"id":209713,"user_name":"抱抱","can_delete":false,"product_type":"c1","uid":1962738,"ip_address":"","ucode":"17F79E6E855828","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f2/f2/29d273e1.jpg","comment_is_top":false,"comment_ctime":1587604147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587604147","product_id":100017301,"comment_content":"看完了1到50的，，总体感觉不错，如果能多出几篇实战的更好了。。带领我们这些后辈，运用这些知识和技术，在生活和应用中怎么解决实际问题，那收获会更大了","like_count":0},{"had_liked":false,"id":208766,"user_name":"Eason Lau","can_delete":false,"product_type":"c1","uid":1035123,"ip_address":"","ucode":"51C987C477F1F0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/73/9eb7c992.jpg","comment_is_top":false,"comment_ctime":1587434592,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587434592","product_id":100017301,"comment_content":"用hashmap的地方可以用红黑树？","like_count":0,"discussions":[{"author":{"id":2249227,"avatar":"https://static001.geekbang.org/account/avatar/00/22/52/0b/50bf0f05.jpg","nickname":"橙子橙","note":"","ucode":"CD51367A14D955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325686,"discussion_content":"cpp的map就是用红黑树实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605406952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201721,"user_name":"蜗牛","can_delete":false,"product_type":"c1","uid":1086220,"ip_address":"","ucode":"01CC18F12E556D","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/0c/0a6a0d5e.jpg","comment_is_top":false,"comment_ctime":1585825208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585825208","product_id":100017301,"comment_content":"打卡~","like_count":0},{"had_liked":false,"id":174994,"user_name":"万万","can_delete":false,"product_type":"c1","uid":1178812,"ip_address":"","ucode":"7ECB1DD9E9A3A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/bc/06d42ecc.jpg","comment_is_top":false,"comment_ctime":1580517775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580517775","product_id":100017301,"comment_content":"老师能分享一下关于分布式算法的网站吗","like_count":0},{"had_liked":false,"id":74660,"user_name":"xiao皮孩。。","can_delete":false,"product_type":"c1","uid":1367499,"ip_address":"","ucode":"27AE899819D10F","user_header":"https://static001.geekbang.org/account/avatar/00/14/dd/cb/23b114a7.jpg","comment_is_top":false,"comment_ctime":1552274351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552274351","product_id":100017301,"comment_content":"理论 结合 应用场景，very good！","like_count":0},{"had_liked":false,"id":73668,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1551953059,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1551953059","product_id":100017301,"comment_content":"想听es的倒排索引","like_count":0,"discussions":[{"author":{"id":2249227,"avatar":"https://static001.geekbang.org/account/avatar/00/22/52/0b/50bf0f05.jpg","nickname":"橙子橙","note":"","ucode":"CD51367A14D955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325688,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605406967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72869,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1551748727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551748727","product_id":100017301,"comment_content":"索引，软件的本质是对数据的存储和计算，数据结构是存储，算法是计算。节省存储的空间和提高增删改查的执行效率效率，索引是最重要的一环。1为什么需要索引2 索引的功能性需求和非功能性需求3底层用到的数据结构","like_count":0},{"had_liked":false,"id":62321,"user_name":"『LHCY』","can_delete":false,"product_type":"c1","uid":1188449,"ip_address":"","ucode":"A8B5E0467B5F25","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/61/bbfb2d4a.jpg","comment_is_top":false,"comment_ctime":1548032920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548032920","product_id":100017301,"comment_content":"es的倒排索引","like_count":0}]}