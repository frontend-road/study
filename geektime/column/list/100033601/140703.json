{"id":140703,"title":"23 | 渲染流水线：CSS如何影响首次加载时的白屏时间？","content":"<p>在<a href=\"https://time.geekbang.org/column/article/140140\">上一篇文章</a>中我们详细介绍了DOM的生成过程，并结合具体例子分析了JavaScript是如何阻塞DOM生成的。那本文我们就继续深入聊聊渲染流水线中的CSS。因为CSS是页面中非常重要的资源，它决定了页面最终显示出来的效果，并影响着用户对整个网站的第一体验。所以，搞清楚浏览器中的CSS是怎么工作的很有必要，只有理解了CSS是如何工作的，你才能更加深刻地理解如何去优化页面。</p><p>本文我们先站在渲染流水线的视角来介绍CSS是如何工作的，然后通过CSS的工作流程来分析性能瓶颈，最后再来讨论如何减少首次加载时的白屏时间。</p><h2>渲染流水线视角下的CSS</h2><p>我们先结合下面代码来看看最简单的渲染流程：</p><pre><code>//theme.css\ndiv{ \n    color : coral;\n    background-color:black\n}\n</code></pre><pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;link href=&quot;theme.css&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;geekbang com&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>这两段代码分别由CSS文件和HTML文件构成，我们来分析下打开这段HTML文件时的渲染流水线，你可以先参考下面这张渲染流水线示意图：</p><p><img src=\"https://static001.geekbang.org/resource/image/70/18/70a7ea0212ff35fc2be79f1d574ed518.png?wh=1142*469\" alt=\"\"></p><center><span class=\"reference\">含有CSS的页面渲染流水线</span></center><p>下面我们结合上图来分析这个页面文件的渲染流水线。</p><p>首先是发起主页面的请求，这个发起请求方可能是渲染进程，也有可能是浏览器进程，发起的请求被送到网络进程中去执行。网络进程接收到返回的HTML数据之后，将其发送给渲染进程，渲染进程会解析HTML数据并构建DOM。这里你需要特别注意下，请求HTML数据和构建DOM中间有一段空闲时间，这个空闲时间有可能成为页面渲染的瓶颈。</p><!-- [[[read_end]]] --><p><a href=\"https://time.geekbang.org/column/article/140140\">上一篇文章</a>中我们提到过，当渲染进程接收HTML文件字节流时，会先开启一个<strong>预解析线程</strong>，如果遇到JavaScript文件或者CSS文件，那么预解析线程会提前下载这些数据。对于上面的代码，预解析线程会解析出来一个外部的theme.css文件，并发起theme.css的下载。这里也有一个空闲时间需要你注意一下，就是在DOM构建结束之后、theme.css文件还未下载完成的这段时间内，渲染流水线无事可做，因为下一步是合成布局树，而合成布局树需要CSSOM和DOM，所以这里需要等待CSS加载结束并解析成CSSOM。</p><p><strong>那渲染流水线为什么需要CSSOM呢？</strong></p><p>和HTML一样，渲染引擎也是无法直接理解CSS文件内容的，所以需要将其解析成渲染引擎能够理解的结构，这个结构就是CSSOM。和DOM一样，CSSOM也具有两个作用，<strong>第一个是提供给JavaScript操作样式表的能力，第二个是为布局树的合成提供基础的样式信息</strong>。这个CSSOM体现在DOM中就是<code>document.styleSheets</code>。具体结构你可以去查阅相关资料，这里我就不过多介绍了，你知道CSSOM的两个作用是怎样的就行了。</p><p>有了DOM和CSSOM，接下来就可以合成布局树了，我们在前面<a href=\"https://time.geekbang.org/column/article/118205\">《05 | 渲染流程（上）：HTML、CSS和JavaScript文件，是如何变成页面的？》</a>这篇文章中讲解过布局树的构造过程，这里咱们再简单回顾下。等DOM和CSSOM都构建好之后，渲染引擎就会构造布局树。布局树的结构基本上就是复制DOM树的结构，不同之处在于DOM树中那些不需要显示的元素会被过滤掉，如display:none属性的元素、head标签、script标签等。复制好基本的布局树结构之后，渲染引擎会为对应的DOM元素选择对应的样式信息，这个过程就是<strong>样式计算</strong>。样式计算完成之后，渲染引擎还需要计算布局树中每个元素对应的几何位置，这个过程就是<strong>计算布局</strong>。通过样式计算和计算布局就完成了最终布局树的构建。再之后，就该进行后续的绘制操作了。</p><p>这就是在渲染过程中涉及到CSS的一些主要流程。</p><p>了解了这些之后，我们再来看看稍微复杂一点的场景，还是看下面这段HTML代码：</p><pre><code>//theme.css\ndiv{ \n    color : coral;\n    background-color:black\n}\n</code></pre><pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;link href=&quot;theme.css&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;geekbang com&lt;/div&gt;\n    &lt;script&gt;\n        console.log('time.geekbang.org')\n    &lt;/script&gt;\n    &lt;div&gt;geekbang com&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>这段代码是我在开头代码的基础之上做了一点小修改，在body标签内部加了一个简单的JavaScript。有了JavaScript，渲染流水线就有点不一样了，可以参考下面这张渲染流水线图：</p><p><img src=\"https://static001.geekbang.org/resource/image/f8/1c/f85f8778f273710ca559a52027ed731c.png?wh=1142*487\" alt=\"\"></p><center><span class=\"reference\">含有JavaScript和CSS的页面渲染流水线</span></center><p>那我们就结合这张图来分析含有外部CSS文件和JavaScript代码的页面渲染流水线，<a href=\"https://time.geekbang.org/column/article/140140\">上一篇文章</a>中我们提到过在解析DOM的过程中，如果遇到了JavaScript脚本，那么需要先暂停DOM解析去执行JavaScript，因为JavaScript有可能会修改当前状态下的DOM。</p><p>不过在执行JavaScript脚本之前，如果页面中包含了外部CSS文件的引用，或者通过style标签内置了CSS内容，那么渲染引擎还需要将这些内容转换为CSSOM，因为JavaScript有修改CSSOM的能力，所以在执行JavaScript之前，还需要依赖CSSOM。也就是说CSS在部分情况下也会阻塞DOM的生成。</p><p>我们再来看看更加复杂一点的情况，如果在body中被包含的是JavaScript外部引用文件，Demo代码如下所示：</p><pre><code>//theme.css\ndiv{ \n    color : coral;\n    background-color:black\n}\n</code></pre><pre><code>//foo.js\nconsole.log('time.geekbang.org')\n</code></pre><pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;link href=&quot;theme.css&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;geekbang com&lt;/div&gt;\n    &lt;script src='foo.js'&gt;&lt;/script&gt;\n    &lt;div&gt;geekbang com&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>从上面代码可以看出来，HTML文件中包含了CSS的外部引用和JavaScript外部文件，那它们的渲染流水线是怎样的呢？可参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/76/1f/7641c75a80133e747aa2faae8f4c8d1f.png?wh=1142*518\" alt=\"\"></p><center><span class=\"reference\">含有JavaScript文件和CSS文件页面的渲染流水线</span></center><p>从图中可以看出来，在接收到HTML数据之后的预解析过程中，HTML预解析器识别出来了有CSS文件和JavaScript文件需要下载，然后就同时发起这两个文件的下载请求，需要注意的是，这两个文件的下载过程是重叠的，所以下载时间按照最久的那个文件来算。</p><p>后面的流水线就和前面是一样的了，不管CSS文件和JavaScript文件谁先到达，都要先等到CSS文件下载完成并生成CSSOM，然后再执行JavaScript脚本，最后再继续构建DOM，构建布局树，绘制页面。</p><h2>影响页面展示的因素以及优化策略</h2><p>前面我们为什么要花这么多文字来分析渲染流水线呢？主要原因就是<strong>渲染流水线影响到了首次页面展示的速度，而首次页面展示的速度又直接影响到了用户体验</strong>，所以我们分析渲染流水线的目的就是为了找出一些影响到首屏展示的因素，然后再基于这些因素做一些针对性的调整。</p><p>那么接下来我们就来看看从发起URL请求开始，到首次显示页面的内容，在视觉上经历的三个阶段。</p><ul>\n<li>第一个阶段，等请求发出去之后，到提交数据阶段，这时页面展示出来的还是之前页面的内容。关于提交数据你可以参考前面<a href=\"https://time.geekbang.org/column/article/117637\">《04 | 导航流程：从输入URL到页面展示，这中间发生了什么？》</a>这篇文章。</li>\n<li>第二个阶段，提交数据之后渲染进程会创建一个空白页面，我们通常把这段时间称为<strong>解析白屏</strong>，并等待CSS文件和JavaScript文件的加载完成，生成CSSOM和DOM，然后合成布局树，最后还要经过一系列的步骤准备首次渲染。</li>\n<li>第三个阶段，等首次渲染完成之后，就开始进入完整页面的生成阶段了，然后页面会一点点被绘制出来。</li>\n</ul><p>影响第一个阶段的因素主要是网络或者是服务器处理这块儿，前面文章中我们已经讲过了，这里我们就不再继续分析了。至于第三个阶段，我们会在后续文章中分析，所以这里也不做介绍了。</p><p>现在我们重点关注第二个阶段，这个阶段的主要问题是白屏时间，如果白屏时间过久，就会影响到用户体验。为了缩短白屏时间，我们来挨个分析这个阶段的主要任务，包括了解析HTML、下载CSS、下载JavaScript、生成CSSOM、执行JavaScript、生成布局树、绘制页面一系列操作。</p><p>通常情况下的瓶颈主要体现在<strong>下载CSS文件、下载JavaScript文件和执行JavaScript</strong>。</p><p>所以要想缩短白屏时长，可以有以下策略：</p><ul>\n<li>通过内联JavaScript、内联CSS来移除这两种类型的文件下载，这样获取到HTML文件之后就可以直接开始渲染流程了。</li>\n<li>但并不是所有的场合都适合内联，那么还可以尽量减少文件大小，比如通过webpack等工具移除一些不必要的注释，并压缩JavaScript文件。</li>\n<li>还可以将一些不需要在解析HTML阶段使用的JavaScript标记上sync或者defer。</li>\n<li>对于大的CSS文件，可以通过媒体查询属性，将其拆分为多个不同用途的CSS文件，这样只有在特定的场景下才会加载特定的CSS文件。</li>\n</ul><p>通过以上策略就能缩短白屏展示的时长了，不过在实际项目中，总是存在各种各样的情况，这些策略并不能随心所欲地去引用，所以还需要结合实际情况来调整最佳方案。</p><h2>总结</h2><p>好了，今天就介绍到这里，下面我来总结下今天的内容。</p><p>我们首先介绍了CSS在渲染流水线中的位置，以及CSS是如何影响到渲染流程的；接下来我们通过渲染流水线分析了从发出请求到页面首次绘制的三个阶段；最后重点介绍了第二个白屏阶段以及优化该阶段的一些策略。</p><p>通过今天的内容我们可以知道虽然JavaScript和CSS给我们带来了极大的便利，不过也对页面的渲染带来了很多的限制，所以我们要关注资源加载速度，需要小心翼翼地处理各种资源之间的关联关系。</p><h2>思考时间</h2><p>今天留给你的思考题是：当你横屏方向拿着一个手机时，打开一个页面，观察下面几种资源的加载方式，你认为哪几种会阻塞页面渲染？为什么？</p><pre><code>1:&lt;script src=&quot;foo.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n2:&lt;script defer src=&quot;foo.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n3:&lt;script sync src=&quot;foo.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n4:&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;foo.css&quot; /&gt;\n5:&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;foo.css&quot; media=&quot;screen&quot;/&gt;\n6:&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;foo.css&quot; media=&quot;print&quot; /&gt;\n7:&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;foo.css&quot; media=&quot;orientation:landscape&quot; /&gt;\n8:&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;foo.css&quot; media=&quot;orientation:portrait&quot; /&gt;\n</code></pre><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":136538,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1569466896,"is_pvip":false,"discussion_count":22,"race_medal":0,"score":"564210182672","product_id":100033601,"comment_content":"第1条：下载JavaScript文件并执行同步代码，会阻塞页面渲染<br>第2条：defer异步下载JavaScript文件，会在HTML解析完成之后执行，不会阻塞页面渲染<br>第3条：sync异步下载JavaScript文件，下载完成之后会立即执行，有可能会阻塞页面渲染<br>第4条：下载CSS文件，可能阻塞页面渲染<br>第5条：media属性用于区分设备，screen表示用于有屏幕的设备，无法用于打印机、3D眼镜、盲文阅读机等，在题设手机条件下，会加载，与第4条一致，可能阻塞页面渲染<br>第6条：print用于打印预览模式或打印页面，这里不会加载，不会阻塞页面渲染<br>第7条：orientation:landscape表示横屏，与题设条件一致，会加载，与第4条一致，可能阻塞页面渲染<br>第8天：orientation:portrait表示竖屏，这里不会加载，不会阻塞页面渲染<br><br>会阻塞页面的有1、3、4、5、7。我这里的问题在于是否加载CSS文件和JavaScript文件时，CSS文件一定会阻塞JavaScript代码的执行，还是说在JavaScript脚本需要使用到CSSOM能力的时候才会有这个前置依赖。","like_count":131,"discussions":[{"author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26875,"discussion_content":"上一节课上说，因为不知道js是否有访问或者修改cssom的操作，所以都等cssom完成之后才进行执行的js","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1570623170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280099,"discussion_content":"既然是不知道，那不就是一定会吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591492896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26875,"ip_address":""},"score":280099,"extra":""},{"author":{"id":1997739,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/KeR5dnuAd2ia0qbvgjOnBPJp2fI60yxjI4QorSB57DmqWtGsnu2ET6sKSIDq5cZkKHLtlVTXY90TV8K0ibteaBMQ/132","nickname":"熊永将","note":"","ucode":"34F35667A483F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296042,"discussion_content":"就因为补知道，所以 不管有没有访问css 都要等cssom完成过后执行js","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596437397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":280099,"ip_address":""},"score":296042,"extra":""}]},{"author":{"id":1388975,"avatar":"https://static001.geekbang.org/account/avatar/00/15/31/af/71a7c4f7.jpg","nickname":"布兰","note":"","ucode":"F4AF2471542390","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340194,"discussion_content":"外链CSS 一定会阻塞定义在其之后的脚本的执行。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1609925091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2631455,"avatar":"https://static001.geekbang.org/account/avatar/00/28/27/1f/42059b0f.jpg","nickname":"HXL","note":"","ucode":"97298EEC95BFCA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1388975,"avatar":"https://static001.geekbang.org/account/avatar/00/15/31/af/71a7c4f7.jpg","nickname":"布兰","note":"","ucode":"F4AF2471542390","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572292,"discussion_content":"之前的就不会阻塞吗？ 应该都会吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652693651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340194,"ip_address":""},"score":572292,"extra":""},{"author":{"id":1094885,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b4/e5/3a09ab5f.jpg","nickname":"Quintus Peng","note":"","ucode":"541983C95D27F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2631455,"avatar":"https://static001.geekbang.org/account/avatar/00/28/27/1f/42059b0f.jpg","nickname":"HXL","note":"","ucode":"97298EEC95BFCA","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":572432,"discussion_content":"之前的好像确实不会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652781175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":572292,"ip_address":""},"score":572432,"extra":""}]},{"author":{"id":1168666,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZO2lNDlECbEc1Ykkne3nfaXSJunnJa5ia0IWLLdcibrXdtVmjMEpdUWaUHx67ArRw35taAgfaYt9PO3aR73Sl8w/132","nickname":"zhaozigang","note":"","ucode":"4F05977DB5380A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312189,"discussion_content":"因为js会操作css，js也不知道操作的是哪个cssom，所以cssom的生成一定会阻塞js的执行，而js的执行又会阻塞dom的构建，页面的渲染，因为是线性的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602604125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279946,"discussion_content":"defer是在contentloaded之前执行，为什么不会阻塞页面渲染？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1591453968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":2111791,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKtBwSeHSkf6W5iaYIDrxt8DgldgL8gx6eQwicSI4MxguVEMXbicvB5qfZpeSFNVZswu8M5TiaqEYwRiag/132","nickname":"小熊","note":"","ucode":"5E3459C4F40A7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304575,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599618234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":279946,"ip_address":""},"score":304575,"extra":""},{"author":{"id":2140649,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a9/e9/d58716e2.jpg","nickname":"木人","note":"","ucode":"0BC8C18EE851B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333290,"discussion_content":"首先，defer脚本并不一定会在contentLoaded之前执行，之前和之后都有可能。\n其次，defer脚本的执行时机是在页面渲染完毕，或者说页面构造完毕后才执行，也就是</html>标签解析完后才执行。\n注意：一般给不会操作DOM的脚本才添加defer属性，尽量避免DOM树的“重排”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607496223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":279946,"ip_address":""},"score":333290,"extra":""},{"author":{"id":2286113,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e2/21/60adf96b.jpg","nickname":"stone","note":"","ucode":"65816E57253D0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2140649,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a9/e9/d58716e2.jpg","nickname":"木人","note":"","ucode":"0BC8C18EE851B3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335902,"discussion_content":"我测试的结果是defer都在DOMContentLoaded之前执行","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1608375203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333290,"ip_address":""},"score":335902,"extra":""}]},{"author":{"id":1499244,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e0/6c/ef405cc1.jpg","nickname":"关山楂","note":"","ucode":"C32E201FA33045","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102529,"discussion_content":"一定会","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1577351882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1499244,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e0/6c/ef405cc1.jpg","nickname":"关山楂","note":"","ucode":"C32E201FA33045","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280100,"discussion_content":"一定会阻塞，是吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591492926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":102529,"ip_address":""},"score":280100,"extra":""}]},{"author":{"id":2040734,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/23/9e/60bfb7e4.jpg","nickname":"winter","note":"","ucode":"C82F506837FC6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390050,"discussion_content":"js是运行时才知道代码内容的，没法静态分析，所以无论如何都会先加载css","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629623403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1547168,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9b/a0/91f22e54.jpg","nickname":"man","note":"","ucode":"1B7D79A9FA4D01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2040734,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/23/9e/60bfb7e4.jpg","nickname":"winter","note":"","ucode":"C82F506837FC6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393974,"discussion_content":"就是说，js代码执行时机是在css加载完成且已被解析器处理成cssom后，才会开始执行js代码。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631676358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":390050,"ip_address":""},"score":393974,"extra":""}]},{"author":{"id":1374337,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","nickname":"1830","note":"","ucode":"246FEF7C97F39C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375937,"discussion_content":"是async吧  async是会在加载完成后执行，而defer不会执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621885797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2514423,"avatar":"","nickname":"Xx","note":"","ucode":"0BE62D47E42B0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361243,"discussion_content":"这个老哥在好几个专题下回答了问题，感谢！但是老师没有给出答案，我觉得第二条不对，js defer了也是会阻塞渲染的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616632613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2144931,"avatar":"https://static001.geekbang.org/account/avatar/00/20/ba/a3/0885ef2b.jpg","nickname":"wave","note":"","ucode":"04CA9E7E9B20DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2514423,"avatar":"","nickname":"Xx","note":"","ucode":"0BE62D47E42B0E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371203,"discussion_content":"是的，会阻塞渲染，不会阻塞dom构建","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1619683616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361243,"ip_address":""},"score":371203,"extra":""}]},{"author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278396,"discussion_content":"同学，你好。你这里说，css文件有可能阻塞渲染。什么情况下css文件会，什么情况下不会呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591181980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279950,"discussion_content":"下面这NBE解释了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591454174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278396,"ip_address":""},"score":279950,"extra":""}]}]},{"had_liked":false,"id":140460,"user_name":"老余","can_delete":false,"product_type":"c1","uid":1295848,"ip_address":"","ucode":"17AC6C60D0EB86","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","comment_is_top":false,"comment_ctime":1570951369,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"91765264585","product_id":100033601,"comment_content":"script异步的属性是async，不是sync","like_count":21,"discussions":[{"author":{"id":1137659,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5b/fb/7b9a3147.jpg","nickname":"IWSR","note":"","ucode":"E7AD888B6B3F6D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587721,"discussion_content":"https://zh.javascript.info/script-async-defer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663238432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136921,"user_name":"SeaYang","can_delete":false,"product_type":"c1","uid":1393840,"ip_address":"","ucode":"F44622A44CE8B9","user_header":"https://static001.geekbang.org/account/avatar/00/15/44/b0/c196c056.jpg","comment_is_top":false,"comment_ctime":1569554672,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"74583998704","product_id":100033601,"comment_content":"老师，浏览器是不是有一个尽量快速渲染页面的机制呢？比如说，有时候打开一个网页很慢，后面慢慢地显示了样式错乱的页面，这明显是css没有加载构建完成，但是还是看到有页面出来了，只是样式有点乱。老师，能解释一下浏览器在这个过程中的一些优化措施吗？","like_count":17,"discussions":[{"author":{"id":1005351,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/27/805786be.jpg","nickname":"笨笨","note":"","ucode":"6DA6DCAF6A7DCB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300426,"discussion_content":"这里应该也不是浏览器的优化措施，这里的case应该也没跳出老师也影响所描述的，即这里看到【缺少样式的绘制】的原因只在于样式所在的位置靠后（样式之前一定没有js），且样式加载比较慢，而整个DOM构建比较快，且DOM构建好之后不存在依赖CSSOM的js，故就可以渲染了，等css下载解析完毕会触发浏览器重排和重绘。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598091255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2514423,"avatar":"","nickname":"Xx","note":"","ucode":"0BE62D47E42B0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005351,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/27/805786be.jpg","nickname":"笨笨","note":"","ucode":"6DA6DCAF6A7DCB","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":361234,"discussion_content":"css不是阻塞渲染吗，DOM构建好CSS没解析完也不会渲染吧？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616631526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300426,"ip_address":""},"score":361234,"extra":""}]}]},{"had_liked":false,"id":158478,"user_name":"🍐 🍾 🔆","can_delete":false,"product_type":"c1","uid":1147347,"ip_address":"","ucode":"1B7C90800AD4D0","user_header":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","comment_is_top":false,"comment_ctime":1575380857,"is_pvip":false,"replies":[{"id":"60666","content":"依然会阻塞啊，只不过DOM会提前生成，但是渲染之前还需要等待该JS的执行完成！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1575385505,"ip_address":"","comment_id":158478,"utype":1}],"discussion_count":15,"race_medal":0,"score":"65999890297","product_id":100033601,"comment_content":"老师我想问下 如果script放在&lt;&#47;body&gt; 还有优化的意义么  这样就不会阻塞渲染了么 ","like_count":15,"discussions":[{"author":{"id":1380541,"avatar":"https://static001.geekbang.org/account/avatar/00/15/10/bd/5b935d38.jpg","nickname":"你微笑时好美","note":"","ucode":"EE23BE679FC901","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290864,"discussion_content":"我的理解：影响 dom 树构建的因素有两点，js 的加载解析是直接因素，css 的加载解析是间接因素。把 script 放到底部，那么 js 越晚加载解析，css 越不容易阻塞 js ，从而让构建 dom 树的所需要的时间相对减少了（因为构建 dom 树和构建 cssom 两者是并行的，只要没有遇到 js 或者说遇到 js 之前 ，两者之间不会相互影响）。最后等到加载 js 的时候，cssom 可能已经构建完毕了，这个时候 css 不会再影响 js 的加载，那么能阻塞 dom 树构建的就只有 js 加载解析这个因素了。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1594628791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1963947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/0iaIWczXBpgnVVQwKmKNg62rMUDhMyuZOD9BMzbcfg37zu5NFMAAm79FTwsiblmMHfSu0ew6BHWRTyaCR7s8vbtw/132","nickname":"Geek_392d92","note":"","ucode":"73F65CC90BE036","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1380541,"avatar":"https://static001.geekbang.org/account/avatar/00/15/10/bd/5b935d38.jpg","nickname":"你微笑时好美","note":"","ucode":"EE23BE679FC901","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356395,"discussion_content":"也就是依然会阻塞dom解析渲染，快的是同步等待css解析那一步咯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615579826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290864,"ip_address":""},"score":356395,"extra":""}]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476742,"discussion_content":"依然会阻塞啊，只不过DOM会提前生成，但是渲染之前还需要等待该JS的执行完成！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1575385505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":5,"child_discussions":[{"author":{"id":1520163,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/icHicAP9M4M4ALsKr6vgLW7FNTmmBJGcvicg9QiamucYpNfupwZYrPicgeK73KNw0rgNuwnJdgLfSzkQ34ibfltZYUbQ/132","nickname":"刘亚辉","note":"","ucode":"60CD2FF352BED9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":534315,"discussion_content":"浏览器需要等js都执行完才渲染页面吗，如果我在js页面上写个4⃣️循环，吧js放在html前面 页面显示不出来，放在html最后页面是可以显示出来的，看样子放在最好并没有阻塞页面渲染呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638160018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":476742,"ip_address":""},"score":534315,"extra":""},{"author":{"id":2311402,"avatar":"https://static001.geekbang.org/account/avatar/00/23/44/ea/8a9b868d.jpg","nickname":"琼斯基亚","note":"","ucode":"24892258DF0CC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1520163,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/icHicAP9M4M4ALsKr6vgLW7FNTmmBJGcvicg9QiamucYpNfupwZYrPicgeK73KNw0rgNuwnJdgLfSzkQ34ibfltZYUbQ/132","nickname":"刘亚辉","note":"","ucode":"60CD2FF352BED9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544188,"discussion_content":"上一节课的课后题已经说明了，页面是显示了，但是，不是想要的页面。第一个内容改变了，第二个内容报错了是因为DOM还没有该元素，在这个过程中js脚本先于第二个div执行了，标签是按顺序解析也就可以断定js是会阻塞页面渲染的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641436456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534315,"ip_address":""},"score":544188,"extra":""},{"author":{"id":1020726,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/93/36/abb7bfe3.jpg","nickname":"Hhpon","note":"","ucode":"12FE37D4B67631","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1520163,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/icHicAP9M4M4ALsKr6vgLW7FNTmmBJGcvicg9QiamucYpNfupwZYrPicgeK73KNw0rgNuwnJdgLfSzkQ34ibfltZYUbQ/132","nickname":"刘亚辉","note":"","ucode":"60CD2FF352BED9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552632,"discussion_content":"可以看一下performance呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645532469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534315,"ip_address":""},"score":552632,"extra":""}]},{"author":{"id":1086570,"avatar":"https://static001.geekbang.org/account/avatar/00/10/94/6a/d40f64ec.jpg","nickname":"尝试者说","note":"","ucode":"305ABCD369E7D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213661,"discussion_content":"这一块很费解，既然要等到所有dom解析完成才能渲染，那js脚本放在前面和后面也没区别啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585112185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1086570,"avatar":"https://static001.geekbang.org/account/avatar/00/10/94/6a/d40f64ec.jpg","nickname":"尝试者说","note":"","ucode":"305ABCD369E7D3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279958,"discussion_content":"JS肯定会阻塞渲染，至于为什么放在后面，我觉得是为了避免DOM没解析完，JS无法获取DOM的问题，至于浏览器对这种放在底部的JS有没有什么优化策略，那就不知道了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1591454844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213661,"ip_address":""},"score":279958,"extra":""},{"author":{"id":1288733,"avatar":"https://static001.geekbang.org/account/avatar/00/13/aa/1d/b8fdd622.jpg","nickname":"laoergege","note":"","ucode":"559CCF36805A04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1086570,"avatar":"https://static001.geekbang.org/account/avatar/00/10/94/6a/d40f64ec.jpg","nickname":"尝试者说","note":"","ucode":"305ABCD369E7D3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393627,"discussion_content":"不必等到DOM 完成解析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631522592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213661,"ip_address":""},"score":393627,"extra":""}]},{"author":{"id":1328142,"avatar":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","nickname":"-_-|||","note":"","ucode":"94B21594658BF9","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77496,"discussion_content":"Dom还没生成完吧？下面还有</body></html>","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575904698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1686457,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeOax1CZKbFicWib6Eicl7WHVpFG269qQCes0wbiawJsqPs45B8sAgF7eGyjhJJkibXTjtApNicnmicPh1g/132","nickname":"rookie","note":"","ucode":"F6CCC3EEE2A96E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1328142,"avatar":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","nickname":"-_-|||","note":"","ucode":"94B21594658BF9","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":386086,"discussion_content":"其实已经解析完了。浏览器内部自己做了优化处理，像这种非自封闭标签只需要解析到startTag就已经可以获取到当前标签的dom了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627396244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":77496,"ip_address":""},"score":386086,"extra":""}]},{"author":{"id":1557433,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c3/b9/c177ce04.jpg","nickname":"弓","note":"","ucode":"A83780FE6AC7A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214550,"discussion_content":"我记得有一个首屏渲染时机","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585207316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71133,"discussion_content":"好的  谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575386774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280144,"user_name":"梦见君笑","can_delete":false,"product_type":"c1","uid":1078786,"ip_address":"","ucode":"7C06D6351D75B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/76/02/ce50af35.jpg","comment_is_top":false,"comment_ctime":1614093050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53153700602","product_id":100033601,"comment_content":"DOMContentLoaded: 当页面的内容解析完成后，则触发该事件 <br>   •JS 会阻塞DOM的解析和渲染，所以DOMContentLoaded会在JS执行后触发<br>   • 因为CSS会阻塞JS执行<br>       • 如果JS在CSS之前或只有CSS资源，则DOMContentLoaded事件不必等CSS加载完毕<br>       • 如果页面同时存在JS和CSS且CSS在JS之前，那DOMContentLoaded事件需等待CSS加载完毕后触发<br><br>onLoad: 等待页面的所有资源都加载完成才会触发，这些资源包括css、js、图片视频等","like_count":12},{"had_liked":false,"id":228834,"user_name":"梦星魂","can_delete":false,"product_type":"c1","uid":1718831,"ip_address":"","ucode":"062AB6E7AE5BD2","user_header":"https://static001.geekbang.org/account/avatar/00/1a/3a/2f/70c1007f.jpg","comment_is_top":false,"comment_ctime":1592820145,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27362623921","product_id":100033601,"comment_content":"老师好，经过我实践后的得知，chrome遇到外部脚本就会渲染标签之前的dom,  这应该是chrome的优化处理，但如果是内联脚本，则会阻塞全部dom的渲染","like_count":6,"discussions":[{"author":{"id":1167767,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/97/3abdd9cd.jpg","nickname":"stanny","note":"","ucode":"DD2BB91548A881","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374648,"discussion_content":"如果是外联样式呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621301580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182492,"user_name":"诤","can_delete":false,"product_type":"c1","uid":1046141,"ip_address":"","ucode":"1EEA4BDDD6227E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/7d/29432580.jpg","comment_is_top":false,"comment_ctime":1582795724,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"23057632204","product_id":100033601,"comment_content":"网络进程不是按流式把数据给渲染进程，同时渲染进程用HTML parser构造DOM的么，似乎不存在预解释的机会阿","like_count":5,"discussions":[{"author":{"id":1288733,"avatar":"https://static001.geekbang.org/account/avatar/00/13/aa/1d/b8fdd622.jpg","nickname":"laoergege","note":"","ucode":"559CCF36805A04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392415,"discussion_content":"我理解是两条线程同时接受 html 字节流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631000042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374181,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","nickname":"张宗伟","note":"","ucode":"1447A20C7A8982","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366372,"discussion_content":"我理解是这样，网络进程将文件以字节流的形式“传输”给渲染进程，这里假设字节流中包含了很多字节，其中就包含link或script标签，那么渲染进程接收到后就可以预解析了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618043911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1232765,"avatar":"https://static001.geekbang.org/account/avatar/00/12/cf/7d/0f900e7b.jpg","nickname":"木木","note":"","ucode":"F8A410FBF29937","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350484,"discussion_content":"解析的是主线程，预加载的是新开的预加载线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613892728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2295944,"avatar":"https://static001.geekbang.org/account/avatar/00/23/08/88/e4029a4a.jpg","nickname":"~白天真","note":"","ucode":"5A54A760B13C90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329784,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606458649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282954,"discussion_content":"老师什么时候来解答下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592127824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1991463,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/63/27/deefd03f.jpg","nickname":"HucerF","note":"","ucode":"68F847741F8D8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282833,"discussion_content":"有知道答案的兄弟也回复我一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592101315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1512860,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Rr8ABLicfgJHZ3xs3bXNjHdicwVN0zBiaFtIEXw4D1licedSuia3zicxJC4lqtrNwPmCeAW5UR2Ugia0dNfcvtXYnpOwQ/132","nickname":"LearnAndTry","note":"","ucode":"0ECF4398C870DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261570,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588984487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230655,"discussion_content":"有知道答案的回复我一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586759569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136590,"user_name":"HB","can_delete":false,"product_type":"c1","uid":1607795,"ip_address":"","ucode":"80D38E55C6DBDF","user_header":"https://static001.geekbang.org/account/avatar/00/18/88/73/592c8ddd.jpg","comment_is_top":false,"comment_ctime":1569476966,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23044313446","product_id":100033601,"comment_content":"有个疑问，DOM tree 和 render tree  构建是同时进行的还是DOM tree和 cssom都构建完成后才构建render tree呢？看how browser works  有些没看清楚","like_count":5,"discussions":[{"author":{"id":1288733,"avatar":"https://static001.geekbang.org/account/avatar/00/13/aa/1d/b8fdd622.jpg","nickname":"laoergege","note":"","ucode":"559CCF36805A04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392735,"discussion_content":"主线程就一条","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631106595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286220,"user_name":"雨晴","can_delete":false,"product_type":"c1","uid":2462088,"ip_address":"","ucode":"86847BEA4B549E","user_header":"https://static001.geekbang.org/account/avatar/00/25/91/88/85e0e2a3.jpg","comment_is_top":false,"comment_ctime":1617197367,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18797066551","product_id":100033601,"comment_content":"我觉得有两个问题不是很明确<br>1.网速很慢的时候，会出现无样式的DOM，此时的css文件没有下载解析完成，但文章中说，DOM 构建结束之后、css 文件还未下载完成的这段时间内，渲染流水线无事可做，因为下一步是合成布局树，而合成布局树需要 CSSOM 和 DOM，所以这里需要等待 CSS 加载结束并解析成 CSSOM。布局树没有生成的情况下，怎么布局？怎么渲染呢？无样式dom怎么出现的呢？<br>2.为什么要把JS放在&#47;body前，反正都是一样阻塞","like_count":4,"discussions":[{"author":{"id":1451554,"avatar":"https://static001.geekbang.org/account/avatar/00/16/26/22/f826d202.jpg","nickname":"within〃","note":"","ucode":"8F2219F0DC463C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383704,"discussion_content":"在遇到外联脚本时，如果外联脚本请求时间过长，导致浏览器无事可做，此时浏览器会去找其他事做（1.判断是否有其他css加载完毕，有则解析，2.判断是否有可渲染的dom，有则进入渲染过程）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626194681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624036,"avatar":"","nickname":"hejueting","note":"","ucode":"0E3876426905A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375332,"discussion_content":"我的理解：\n1、如果dom解析完成但是css文件超时，或者css太慢，浏览器也会先渲染dom，等css下载完成再另一次渲染。\n2、无论是内联JS脚本或者是外链JS文件都会阻塞 DOM 解析，如果JS内容中有DOM操作，此时DOM没有解析完，JS就会报错。注意区分DOM解析和DOM渲染两个概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621581560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195630,"user_name":"弓","can_delete":false,"product_type":"c1","uid":1557433,"ip_address":"","ucode":"A83780FE6AC7A6","user_header":"https://static001.geekbang.org/account/avatar/00/17/c3/b9/c177ce04.jpg","comment_is_top":false,"comment_ctime":1585207263,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18765076447","product_id":100033601,"comment_content":"如果没有js，解析到link 有 css这个标签的时候，css不管下没下载好，是否都会阻塞html的解析<br>","like_count":4,"discussions":[{"author":{"id":2217956,"avatar":"https://static001.geekbang.org/account/avatar/00/21/d7/e4/8154a102.jpg","nickname":"CV练习生","note":"","ucode":"E874C7992ECA72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322431,"discussion_content":"不会，html预解析会下载css和js。这时候html正在解析了，","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604742524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005351,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/27/805786be.jpg","nickname":"笨笨","note":"","ucode":"6DA6DCAF6A7DCB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300427,"discussion_content":"应该不会，因为这里没有逻辑，浏览器应该只能是一路解析html，当遇到js了，才停止html解析，并且在开始下载前，通过浏览器某种机制策略确认当前是否还有CSS未下载或解析完成，如果有，则等待，如果没有则开始下载并解析js，然后继续解析html。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598091552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211884,"user_name":"在路上_W","can_delete":false,"product_type":"c1","uid":1909693,"ip_address":"","ucode":"632D9130F58D3A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/23/bd/b150086a.jpg","comment_is_top":false,"comment_ctime":1588035188,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10177969780","product_id":100033601,"comment_content":"Hardboiled Web Design这本书中讲，这个方法初看起来似乎在区分不同媒体查询的时候非常有效，但是当心，浏览器会下载每一个外联的样式表，无论这些样式在当前设备中<br>是否有效，这将会大大降低网站或者APP 的性能。<br>李老师文章说是特定场景下会才会加载，这个只是会都下载，但有些不符合条件的文件不会被解析吗？","like_count":2},{"had_liked":false,"id":191380,"user_name":"(ಡωಡ)hahaha","can_delete":false,"product_type":"c1","uid":1374075,"ip_address":"","ucode":"8EC05C5DF56770","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/7b/bd2d9d0c.jpg","comment_is_top":false,"comment_ctime":1584768671,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10174703263","product_id":100033601,"comment_content":"老师，请问一下，你在说  这个问题（渲染引擎还需要将这些内容转换为 CSSOM，因为 JavaScript 有修改 CSSOM 的能力，所以在执行 JavaScript 之前，还需要依赖 CSSOM。也就是说 CSS 在部分情况下也会阻塞 DOM 的生成）css也会阻塞dom生成，是因为js阻塞了dom, 而 JavaScript 执行之前，还需要依赖 CSSOM，是怎么判断js依赖 cssom,是 执行js  发现 需要cssom,渲染引擎 停止执行js,开始去解析css吗","like_count":2,"discussions":[{"author":{"id":2078154,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/b5/ca/d8783f69.jpg","nickname":"blue","note":"","ucode":"07E4383E7E91B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299858,"discussion_content":"JavaScript 引擎在解析 JavaScript 之前，是不知道 JavaScript 是否操纵了 CSSOM 的，所以渲染引擎在遇到 JavaScript 脚本时，不管该脚本是否操纵了 CSSOM，都会执行 CSS 文件下载，解析操作，再执行 JavaScript 脚本。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1597841070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556438,"discussion_content":"css 并不会阻塞 html 的解析，准确来说 css 阻塞 html 解析是 css 阻塞了 javascript 的执行，javascript 的执行阻塞了 html 的解析，从而产生 css 阻塞 html 即系的表象，实质上如果只有 html 和 css 的话，css 并不会阻塞 html 的解析。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647358813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2054146,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/58/02/d07b3c76.jpg","nickname":"hoverCow🍎🍰","note":"","ucode":"079E10A6B6FA3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290982,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594654408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287596,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1618043667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5913010963","product_id":100033601,"comment_content":"<br>1:&lt;script src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt; &#47;&#47; 会，因为加载了js文件<br>2:&lt;script defer src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt; &#47;&#47; 不会，因为是在DOM解析完成后， DOMContentLoaded 之前执行<br>3:&lt;script sync src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt; &#47;&#47; 会，因为加载后立即执行<br>4:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; &#47;&gt; &#47;&#47; 会，因为需要生成CSSOM<br>5:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;screen&quot;&#47;&gt; &#47;&#47; 会，因为针对屏幕<br>6:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;print&quot; &#47;&gt; &#47;&#47; 不会，因为在打印机才生效<br>7:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;orientation:landscape&quot; &#47;&gt; &#47;&#47; 会，因为横屏<br>8:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;orientation:portrait&quot; &#47;&gt; &#47;&#47; 不会，因为竖屏","like_count":1},{"had_liked":false,"id":244077,"user_name":"星星Leo","can_delete":false,"product_type":"c1","uid":1966620,"ip_address":"","ucode":"DAA75C2760DA08","user_header":"https://static001.geekbang.org/account/avatar/00/1e/02/1c/fa6f649e.jpg","comment_is_top":false,"comment_ctime":1598386203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893353499","product_id":100033601,"comment_content":"所以要把js放在下面。<br>因为遇到js 如果是引入的话 就要等下载 而js又要等css的下载 也就是取其大者 不是引入也要等css下载 <br>css放在哪里应该无所谓 老师说过会提前下载","like_count":1},{"had_liked":false,"id":223791,"user_name":"卡尔","can_delete":false,"product_type":"c1","uid":1445936,"ip_address":"","ucode":"BD6F76BC18FF8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","comment_is_top":false,"comment_ctime":1591181898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5886149194","product_id":100033601,"comment_content":"老师，css文件会不会阻塞页面渲染是需要通过js内容判断的吗？如果js里未引用css文件的话，是不是css文件就不会阻塞渲染呢？","like_count":1},{"had_liked":false,"id":360683,"user_name":"Light 胖虎","can_delete":false,"product_type":"c1","uid":2876591,"ip_address":"北京","ucode":"D5FCFE14172D31","user_header":"https://static001.geekbang.org/account/avatar/00/2b/e4/af/f8cf4bc2.jpg","comment_is_top":false,"comment_ctime":1666756360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666756360","product_id":100033601,"comment_content":"有一个问题，把这种外部引用全部放到html文件的最后是不是就可以解决这个问题呢<br>","like_count":0},{"had_liked":false,"id":358879,"user_name":"kkkkkkkk","can_delete":false,"product_type":"c1","uid":1511545,"ip_address":"北京","ucode":"E1D8AC7CF39E7E","user_header":"https://static001.geekbang.org/account/avatar/00/17/10/79/390568f3.jpg","comment_is_top":false,"comment_ctime":1664961960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664961960","product_id":100033601,"comment_content":"页面渲染需要DOM树（来自于HTML dom和JS影响） &amp; CSS树（CSS文件和JS影响）。<br>在解析HTML的过程中会构建DOM，同时也会请求JS和CSS文件<br>构建顺序：<br>- 从上到下<br>- 遇到JS和CSS文件就请求<br><br>阻塞优先级：CSS构建  &gt; JS解析 &gt; DOM构建","like_count":0},{"had_liked":false,"id":357018,"user_name":"潘小安","can_delete":false,"product_type":"c1","uid":2261166,"ip_address":"广东","ucode":"5655D06F167A10","user_header":"https://static001.geekbang.org/account/avatar/00/22/80/ae/2c863d55.jpg","comment_is_top":false,"comment_ctime":1662864552,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662864552","product_id":100033601,"comment_content":"”对于大的 CSS 文件，可以通过媒体查询属性，将其拆分为多个不同用途的 CSS 文件，这样只有在特定的场景下才会加载特定的 CSS 文件。“<br>请问老师，页面需要媒体查询的时候需要从后端请求 css，这个时候会不会有页面卡顿","like_count":0},{"had_liked":false,"id":346094,"user_name":"Echo","can_delete":false,"product_type":"c1","uid":2548495,"ip_address":"","ucode":"9CAFD53B8CEDE7","user_header":"https://static001.geekbang.org/account/avatar/00/26/e3/0f/0657ebc0.jpg","comment_is_top":false,"comment_ctime":1652836155,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652836155","product_id":100033601,"comment_content":"css是下载下来之后就开始解析成cssom树了吗，还是要等待一个时机再对css进行解析","like_count":0},{"had_liked":false,"id":335740,"user_name":"Hhpon","can_delete":false,"product_type":"c1","uid":1020726,"ip_address":"","ucode":"12FE37D4B67631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/36/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1645669845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645669845","product_id":100033601,"comment_content":"老师，您好，请问解析白屏之后的首次渲染是什么？会显示出页面内容吗？","like_count":0},{"had_liked":false,"id":314268,"user_name":"LS","can_delete":false,"product_type":"c1","uid":1016903,"ip_address":"","ucode":"D2F3A876E4FC1D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/47/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1632924565,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1632924565","product_id":100033601,"comment_content":"这里有点问题，预解析会提前下载，其实也相当于异步了，而defer，async也是异步下载。那么用了defer，async理论上应该没啥区别？defer会在最后执行，不加defer就在中间执行，这时间(dom解析+执行js+继续dom解析， dom解析+继续dom解析+执行js)加起来时间不也是一样的么。async可能在dom解析完执行，好像也差不多没啥差别。","like_count":0,"discussions":[{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556439,"discussion_content":"预解析不是异步，预解析是多线程，defer 和 async 的下载也算多线程，区别在于执行，async 下载完就会执行，此时 html 有可能还没解析完，那么此时就会阻塞 dom 构建，如果 async 下载完 html 已经解析完了，那和 defer 确实没区别。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647359096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309863,"user_name":"Geek_7be3ab","can_delete":false,"product_type":"c1","uid":2740229,"ip_address":"","ucode":"E2A54A00F570EC","user_header":"","comment_is_top":false,"comment_ctime":1630376427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630376427","product_id":100033601,"comment_content":"老师，请问微信订阅号内的文章打开首屏渲染优化也是这些吗？有什么其他方式吗？","like_count":0},{"had_liked":false,"id":300930,"user_name":"1830","can_delete":false,"product_type":"c1","uid":1374337,"ip_address":"","ucode":"246FEF7C97F39C","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","comment_is_top":false,"comment_ctime":1625454367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625454367","product_id":100033601,"comment_content":"老师，这几节课介绍了渲染是依赖布局树的，布局树依赖dom树和cssom。我有个问题是布局树是必须所有的dom解析完成和cssom创建完成后再开始的嘛，还是一边解析创建，一边渲染绘制","like_count":0},{"had_liked":false,"id":298081,"user_name":"Jinx","can_delete":false,"product_type":"c1","uid":1168860,"ip_address":"","ucode":"2473F91CCC04B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/d5/dc/94057bab.jpg","comment_is_top":false,"comment_ctime":1623904069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623904069","product_id":100033601,"comment_content":"请问老师，在两个非白色背景色的页面直接跳转，浏览器是不是把这里的解析白屏有优化？ 如果不是的话，那页面跳转时白屏终会一闪而过，但是在chrome里我看到这个现象（黑页面直接到黑页面）。 但是如果在iframe里进行页面跳转，就会出现 （黑-&gt; 白 -&gt; 黑）的状况。。 ","like_count":0},{"had_liked":false,"id":287905,"user_name":"v8","can_delete":false,"product_type":"c1","uid":1863552,"ip_address":"","ucode":"22FE67E8C124DA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/zFOVquVttt7aTLtyHhPvH1SCUk19Rd14XoGz9QrCpFefwun86CdBJB4rbsY1M5zywXHibvRs4EqJLoUjpNyknFQ/132","comment_is_top":false,"comment_ctime":1618213204,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618213204","product_id":100033601,"comment_content":"老师好，文中说的【在接收到 HTML 数据之后的预解析过程中，HTML 预解析器识别出来了有 CSS 文件和 JavaScript 文件需要下载】，HTML 预解析器和真正的HTML解析器区别在哪呢？既然都拿到了HTML数据了为什么真正的HTML解析器不直接解析？","like_count":0},{"had_liked":false,"id":287624,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1618053918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618053918","product_id":100033601,"comment_content":"&lt;!-- 会，同步加载且执行 --&gt;<br>&lt;script src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt;<br>&lt;!-- 不会，因为其是在DOM树构建完成后，DOMContentLoaded 之前执行  --&gt;<br>&lt;script defer src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt;<br>&lt;!-- 可能会，因为其下载完之后就立即执行，有可能DOM树完成之前就加载完成 --&gt;<br>&lt;script async src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt;<br>&lt;!-- 可能会，其实css本身并不会阻断DOM构建，但是结合js脚本就可能了 --&gt;<br>&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; &#47;&gt;<br>&lt;!-- 同上 --&gt;<br>&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;screen&quot;&#47;&gt;<br>&lt;!-- 不会，在打印预览时才会加载 --&gt;<br>&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;print&quot; &#47;&gt;<br>&lt;!-- 可能会，其实css本身并不会阻断DOM构建，但是结合js脚本就可能了 --&gt;<br>&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;orientation:landscape&quot; &#47;&gt;<br>&lt;!-- 不会，在竖屏时才会加载 --&gt;<br>&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;orientation:portrait&quot; &#47;&gt;<br>","like_count":0},{"had_liked":false,"id":287622,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1618053723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618053723","product_id":100033601,"comment_content":"老师，您好！对于课后题，阻断页面渲染其实指的是HTML解析过程吧？","like_count":0},{"had_liked":false,"id":287543,"user_name":"哦啦啦","can_delete":false,"product_type":"c1","uid":2104322,"ip_address":"","ucode":"5C0B035E261BBC","user_header":"https://static001.geekbang.org/account/avatar/00/20/1c/02/7d613e6c.jpg","comment_is_top":false,"comment_ctime":1618022354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618022354","product_id":100033601,"comment_content":"【复制好基本的布局树结构之后，渲染引擎会为对应的 DOM 元素选择对应的样式信息，这个过程就是样式计算。】<br>老师，这里的描述跟前面渲染流程的章节有矛盾啊，样式计算不是在布局树构建之前就做好的吗？","like_count":0},{"had_liked":false,"id":269421,"user_name":"余熙","can_delete":false,"product_type":"c1","uid":1240802,"ip_address":"","ucode":"7F98DCFB899CB7","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","comment_is_top":false,"comment_ctime":1608639112,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1608639112","product_id":100033601,"comment_content":"1:&lt;script src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt;<br>     JavaScript下载和执行，都会阻塞页面渲染。<br>     上节课有解释：<br>         解析到&lt;script&gt;标签时，渲染引擎判断这是一段脚本，此时 HTML 解析器就会暂停 DOM 的解析，因为接下来的 JavaScript 可能要修改当前已经生成的 DOM 结构。这是浏览器对开发者使用的理解，“需求”本身如此<br><br>2:&lt;script defer src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt;<br>          加 defer 的JavaScript下载不会阻塞页面渲染。<br>          加 defer 的JavaScript执行会阻塞页面渲染。<br><br>3:&lt;script sync src=&quot;foo.js&quot; type=&quot;text&#47;javascript&quot;&gt;&lt;&#47;script&gt;<br>         JavaScript下载和执行，都会阻塞页面渲染。<br><br>4:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; &#47;&gt;<br>          HTML解析和CSS解析，是不会相互阻塞的。<br>          <br>5:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;screen&quot;&#47;&gt;<br>6:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;print&quot; &#47;&gt;<br>7:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;orientation:landscape&quot; &#47;&gt;<br>8:&lt;link rel=&quot;stylesheet&quot; type=&quot;text&#47;css&quot; href=&quot;foo.css&quot; media=&quot;orientation:portrait&quot; &#47;&gt;","like_count":0,"discussions":[{"author":{"id":1374337,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","nickname":"1830","note":"","ucode":"246FEF7C97F39C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375938,"discussion_content":"是async吧？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621886888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1240802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","nickname":"余熙","note":"","ucode":"7F98DCFB899CB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1374337,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","nickname":"1830","note":"","ucode":"246FEF7C97F39C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377956,"discussion_content":"题目应该是sync吧＠_＠","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622979363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":375938,"ip_address":""},"score":377956,"extra":""}]}]},{"had_liked":false,"id":252577,"user_name":"林浩","can_delete":false,"product_type":"c1","uid":1375777,"ip_address":"","ucode":"266C06165AFA47","user_header":"https://static001.geekbang.org/account/avatar/00/14/fe/21/df75ca94.jpg","comment_is_top":false,"comment_ctime":1602388967,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1602388967","product_id":100033601,"comment_content":"看了下答案，我觉得2，3都不会影响页面渲染，原因如老师所说<br>1，使用async或者defer表明了该js文件里面没有修改dom或者cssom操作<br>2，提交数据之后渲染进程开始对字节流做html parse，chrome有个优化策略 会在预加载线程里面去下载这些脚本，从而不影响渲染进程的解析dom操作，我想这是设计预加载的初衷吧  是吗老师？希望如果有错老师可以看到并指出","like_count":0,"discussions":[{"author":{"id":1205180,"avatar":"https://static001.geekbang.org/account/avatar/00/12/63/bc/df9b52e6.jpg","nickname":"gnat35","note":"","ucode":"32F13B54C5AF92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324243,"discussion_content":"就算加了 async 或者 defer 都有可能在DOMContentLoaded前执行，有可能会影响的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605077541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1375777,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fe/21/df75ca94.jpg","nickname":"林浩","note":"","ucode":"266C06165AFA47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1205180,"avatar":"https://static001.geekbang.org/account/avatar/00/12/63/bc/df9b52e6.jpg","nickname":"gnat35","note":"","ucode":"32F13B54C5AF92","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328555,"discussion_content":"你好我更正下答案，defer会在parse阶段下载的，但执行是在parse完成之后，且是在domcontentloaded之前执行，所以不会阻塞，具体你可以用performance查看，至于async是异步下载，完成后就立刻执行会阻塞，只不过这两个属性应该是为了提升页面首屏渲染性能而做，会提前确认好不会在对应的js文件中做dom操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606180268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":324243,"ip_address":""},"score":328555,"extra":""},{"author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1375777,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fe/21/df75ca94.jpg","nickname":"林浩","note":"","ucode":"266C06165AFA47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374865,"discussion_content":"那defer会加长白屏时间，影响页面渲染吗，既然async会阻塞，那和直接用什么区别呢，从定点阻塞变为不定点阻塞吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621394120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328555,"ip_address":""},"score":374865,"extra":""},{"author":{"id":1375777,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fe/21/df75ca94.jpg","nickname":"林浩","note":"","ucode":"266C06165AFA47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":378528,"discussion_content":"影响白屏的指标FP是跟网络有关系，还没到编译执行js这一步，该加载的js还是会加载，有加载就会阻塞html parser，defer和async区别在于执行顺序和执行时机","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623260183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374865,"ip_address":""},"score":378528,"extra":""}]}]},{"had_liked":false,"id":246869,"user_name":"Herman","can_delete":false,"product_type":"c1","uid":1235569,"ip_address":"","ucode":"6728A2B034CB59","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/71/a0121a65.jpg","comment_is_top":false,"comment_ctime":1599495860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599495860","product_id":100033601,"comment_content":"您好，有个问题想请教下？<br>如果html中的link(style)标签在script之后，这个link的加载会不会阻塞script的执行？<br>按照常规分析这个link在html解析过程中还没有解析到，故不会阻塞；但是chrome是有css文件预解析的，这种情况下会阻塞呢？","like_count":0},{"had_liked":false,"id":243800,"user_name":"‏5102","can_delete":false,"product_type":"c1","uid":2116537,"ip_address":"","ucode":"476092AB890CF2","user_header":"https://static001.geekbang.org/account/avatar/00/20/4b/b9/2449c7b7.jpg","comment_is_top":false,"comment_ctime":1598279169,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598279169","product_id":100033601,"comment_content":"看上图中外部引入的js和css都是同时进行请求的，那么添加async的script不是也是异步下载的吗？添加和不添加async难道不都是异步下载吗？还是说没添加async的时候script是同步下载的","like_count":0,"discussions":[{"author":{"id":1374181,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","nickname":"张宗伟","note":"","ucode":"1447A20C7A8982","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366376,"discussion_content":"没加 async 应该是同步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618044362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228184,"user_name":"与我常在","can_delete":false,"product_type":"c1","uid":2036506,"ip_address":"","ucode":"B11C8CF262AFE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIL8Wb8NJgwZIwMGYEWDJRiaMHfFaWKVPfuAibo7SibR7FNc6gFEVygibvia10UqNpmbxFTyvkqaGIymsg/132","comment_is_top":false,"comment_ctime":1592582502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592582502","product_id":100033601,"comment_content":"老师，如果在标签上写样式，解析过程是怎样的呢","like_count":0},{"had_liked":false,"id":225446,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1591757902,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1591757902","product_id":100033601,"comment_content":"第1条：下载JavaScript文件并执行同步代码，会阻塞页面渲染<br>第2条：defer异步下载JavaScript文件，会在HTML解析完成之后执行，不会阻塞页面渲染<br>第3条：sync异步下载JavaScript文件，下载完成之后会立即执行，有可能会阻塞页面渲染<br>第4条：下载CSS文件，可能阻塞页面渲染<br>第5条：media属性用于区分设备，screen表示用于有屏幕的设备，无法用于打印机、3D眼镜、盲文阅读机等，在题设手机条件下，会加载，与第4条一致，可能阻塞页面渲染<br>第6条：print用于打印预览模式或打印页面，这里不会加载，不会阻塞页面渲染<br>第7条：orientation:landscape表示横屏，与题设条件一致，会加载，与第4条一致，可能阻塞页面渲染<br>第8天：orientation:portrait表示竖屏，这里不会加载，不会阻塞页面渲染","like_count":0},{"had_liked":false,"id":220234,"user_name":"sh","can_delete":false,"product_type":"c1","uid":1428920,"ip_address":"","ucode":"720991D01D50D9","user_header":"https://static001.geekbang.org/account/avatar/00/15/cd/b8/14597b01.jpg","comment_is_top":false,"comment_ctime":1590210829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590210829","product_id":100033601,"comment_content":"感谢 很有收获","like_count":0},{"had_liked":false,"id":203850,"user_name":"CS逍遥剑仙卍SUNSHINE-STUDIO","can_delete":false,"product_type":"c1","uid":1951708,"ip_address":"","ucode":"CFEA550366F7EA","user_header":"https://static001.geekbang.org/account/avatar/00/1d/c7/dc/a237a744.jpg","comment_is_top":false,"comment_ctime":1586274660,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586274660","product_id":100033601,"comment_content":"发起主页面的请求，这个发起请求方可能是渲染进程，也有可能是浏览器进程，这个怎么理解呢","like_count":0,"discussions":[{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332174,"discussion_content":"导航栏输入的URL就是浏览器进程发起的请求，渲染进程解析html时，html中需要加载css/js，就是从渲染进程发起的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607083299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187490,"user_name":"慢慢来的比较快","can_delete":false,"product_type":"c1","uid":1387527,"ip_address":"","ucode":"268B638E9B6688","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/07/636a47cd.jpg","comment_is_top":false,"comment_ctime":1584145727,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584145727","product_id":100033601,"comment_content":"预解析的时候，会同时发送css文件js文件的请求，那通常的xss放在头部，js放在尾部还有意义吗？","like_count":0,"discussions":[{"author":{"id":1946181,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b2/45/b49a92f5.jpg","nickname":"后脑勺","note":"","ucode":"50704EC5545C4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273988,"discussion_content":"意义在于：在这之前 DOM 可以正常解析，遇到 script 标签时才阻塞 DOM 去下载 script，而 script 会预下载，所以省了一点下载的事件。\n而如果把 script 放到最上面的话，一开始就会阻塞 DOM，而因为此时给预下载的时间又少，所以阻塞 DOM 的时间相较于上面的会更久一点；而且上面的方法 DOM 在遇到 script 标签时已经基本把 DOM　都解析完了，而下面这种是等　script 下载完之后才刚开始解析，所以这又是一个时间差。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590511972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182487,"user_name":"诤","can_delete":false,"product_type":"c1","uid":1046141,"ip_address":"","ucode":"1EEA4BDDD6227E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/7d/29432580.jpg","comment_is_top":false,"comment_ctime":1582795198,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1582795198","product_id":100033601,"comment_content":"比较好奇javascript的执行都可以不等到dom加载完毕，为啥却需要等css加载完毕呢","like_count":0,"discussions":[{"author":{"id":1443661,"avatar":"https://static001.geekbang.org/account/avatar/00/16/07/4d/408daf20.jpg","nickname":"Geek_93f234","note":"","ucode":"B9E9717622CDE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256485,"discussion_content":"如果css外联文件在script之前，script操作cssom会与加载中的css解析产生歧义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588484931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1822678,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/cf/d6/7f912c6d.jpg","nickname":"头号大家庭","note":"","ucode":"257EA88817AC98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199227,"discussion_content":"为了给 js 操作 dom 样式的能力  前一篇文章说了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583572673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177674,"user_name":"小蛋糕","can_delete":false,"product_type":"c1","uid":1807662,"ip_address":"","ucode":"335A6F4301CF22","user_header":"https://static001.geekbang.org/account/avatar/00/1b/95/2e/f8575abb.jpg","comment_is_top":false,"comment_ctime":1581471716,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581471716","product_id":100033601,"comment_content":"1、3、4、5、7 会影响页面渲染。","like_count":0},{"had_liked":false,"id":160302,"user_name":"极客时间","can_delete":false,"product_type":"c1","uid":1015564,"ip_address":"","ucode":"AF7565BB5EF164","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/0c/392ce255.jpg","comment_is_top":false,"comment_ctime":1575909407,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1575909407","product_id":100033601,"comment_content":"另外styleSheets和cssom是一回事儿吗 感觉有点懵","like_count":0,"discussions":[{"author":{"id":1019849,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","nickname":"玉皇大亮","note":"","ucode":"5C4FDF1FDCF8A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115585,"discussion_content":"同有这个疑问，在看渲染流程那一节时，老师说不是一回事，这里好像又说是一回事了，还请老师帮忙解惑","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578020979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2102876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/YCFmFsvsGV8nQ2oevPmjiaq9coH6BPB8XlwHiahOgGFb1W8ibOXKCYdxTCJbUbWN5EzibevnRaMAQict0mRV6c4UDyw/132","nickname":"祖安一哥","note":"","ucode":"8A3E2CF8537DBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299081,"discussion_content":"应该是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597558017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1651618,"avatar":"https://static001.geekbang.org/account/avatar/00/19/33/a2/585be249.jpg","nickname":"草原上的骆驼🐫","note":"","ucode":"F0B12CB1FEED84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":247738,"discussion_content":"我觉得不是，styleSheets是cssom以节点的形式挂在在DOM树中document对象下边的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587823478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160301,"user_name":"极客时间","can_delete":false,"product_type":"c1","uid":1015564,"ip_address":"","ucode":"AF7565BB5EF164","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/0c/392ce255.jpg","comment_is_top":false,"comment_ctime":1575909369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575909369","product_id":100033601,"comment_content":"老师我重读文章发现一个问题 生成styleSheets是在dom解析完成之后进行的吗？还是在解析dom过程中有另外一个线程来生成styleSheets。","like_count":0},{"had_liked":false,"id":160283,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575904420,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1575904420","product_id":100033601,"comment_content":"“还可以将一些不需要在解析 HTML 阶段使用的 JavaScript 标记上 sync 或者 defer。”，这里应该是async ，我记得async和defer的作用是资源空闲时下载和自动放入body后下载，倒是不知道这两属性运用在不解析html的js上，难道是不操作dom 的js吗？","like_count":0},{"had_liked":false,"id":160272,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575902605,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1575902605","product_id":100033601,"comment_content":"“中我们提到过，当渲染进程接收 HTML 文件字节流时，会先开启一个预解析线程，如果遇到 JavaScript 文件或者 CSS 文件，那么预解析线程会提前下载这些数据。”这个预解析不是async 或defer才触发吗？","like_count":0},{"had_liked":false,"id":157877,"user_name":"vianem","can_delete":false,"product_type":"c1","uid":1748290,"ip_address":"","ucode":"59A2D19426ABC4","user_header":"","comment_is_top":false,"comment_ctime":1575275547,"is_pvip":false,"replies":[{"id":"60512","content":"你确定能显示？","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1575285974,"ip_address":"","comment_id":157877,"utype":1}],"discussion_count":6,"race_medal":0,"score":"1575275547","product_id":100033601,"comment_content":"老师求解答：<br><br><br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;link href=&quot;theme.css&quot; rel=&quot;stylesheet&quot;&gt;<br>&lt;&#47;head&gt;<br>&lt;body&gt;<br>    &lt;div&gt;geekbang com&lt;&#47;div&gt;<br>    &lt;script&gt;<br>        while (1) {}<br>    &lt;&#47;script&gt;<br>    &lt;div&gt;geekbang com&lt;&#47;div&gt;<br>&lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>按照文章中所说，dom解析应该一直被while循环阻塞，更生成不了布局树和绘制位图。但是我们还是能看到页面能显示出script标签前的内容呀。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476558,"discussion_content":"你确定能显示？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575285974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2967906,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/49/62/67e2a3a4.jpg","nickname":"哄哄","note":"","ucode":"D2A5AD3DEEC99E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":567898,"discussion_content":"chrome(版本 99.0.4844.51)确实会显示“geekbang com”，但会一直处于加载状态，任何调试工具无法使用；360极速浏览器不会显示","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651024578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":476558,"ip_address":""},"score":567898,"extra":""}]},{"author":{"id":2019208,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/cf/88/62a9f47a.jpg","nickname":"🍓","note":"","ucode":"C39A40F1CCDB6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374112,"discussion_content":"这个会导致一直转圈的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621003784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","nickname":"余熙","note":"","ucode":"7F98DCFB899CB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336634,"discussion_content":"可能是浏览器缓存，建议关浏览器缓存，同时每次测试前\n都更改<div>geekbang com12312312313</div> div 里面的内容，应该是不能显示的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608639197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230636,"discussion_content":"估计是一开始没加死循环打开的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586758456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019849,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","nickname":"玉皇大亮","note":"","ucode":"5C4FDF1FDCF8A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115587,"discussion_content":"不能展示的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578021057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156161,"user_name":"江谢木","can_delete":false,"product_type":"c1","uid":1563403,"ip_address":"","ucode":"E1B1B0F0F03D41","user_header":"https://static001.geekbang.org/account/avatar/00/17/db/0b/f0ded153.jpg","comment_is_top":false,"comment_ctime":1574826766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574826766","product_id":100033601,"comment_content":"老师这里有个疑问，是所有阻塞都是会影响白屏？假如我的页面大部分是用js动态生成的，那么我先解析js操作已用的dom, 不是会比先解析html生成dom后再修改dom省力？","like_count":0},{"had_liked":false,"id":141490,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1571184410,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1571184410","product_id":100033601,"comment_content":"在不考虑与解析线程的存在，CSS 资源的加载会阻塞DOM的构建吗？ 构建CSSOM树会阻塞DOM树的构建吗？","like_count":0},{"had_liked":false,"id":141489,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1571184311,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1571184311","product_id":100033601,"comment_content":"在渲染流水线中 构建 DOM 树和 构建 CSSOM 树是同时进行的吗？ 还是CSSOM 的构建会阻塞DOM的构建，交替执行的？ （这里前提是 css 的资源下载非常快，在DOM树构建完成之前就下载完成了）","like_count":0},{"had_liked":false,"id":136867,"user_name":"Marvin","can_delete":false,"product_type":"c1","uid":1096381,"ip_address":"","ucode":"443BD8B20285A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/ba/bd/6f2f078c.jpg","comment_is_top":false,"comment_ctime":1569545059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569545059","product_id":100033601,"comment_content":"因为cssom构造优先，所以先考虑css加载：没有media配置和配置了screen、landscape，3个css文件会命中，也就是4、5、7。js文件分加载和执行两部分，其中defer和async两种属性配置之后都会与dom树构造无关，也就是与渲染无关，其他的情况都会阻塞渲染，也就是1、3。总结：1、3、4、5、7会阻塞渲染。我查阅了h5规范，没有sync属性显式配置的定义，所以sync是无效属性，和1效果一致。网上有文章称，sync和defer同为异步加载和执行，区别在于，多个defer是顺序执行，多个sync是先加载完成先执行，但这个无从考证。","like_count":0},{"had_liked":false,"id":136587,"user_name":"柒月","can_delete":false,"product_type":"c1","uid":1371240,"ip_address":"","ucode":"839A8F88C376A3","user_header":"https://static001.geekbang.org/account/avatar/00/14/ec/68/06d59613.jpg","comment_is_top":false,"comment_ctime":1569476681,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569476681","product_id":100033601,"comment_content":"1 4吧  一样的资源应该只加载一次吧","like_count":0},{"had_liked":false,"id":136450,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1569453184,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1569453184","product_id":100033601,"comment_content":"首先说下几个属性的含义：defer：异步下载js文件，等待domcontendloaded事件后解析执行，sync猜应该是async，异步下载js文件，下载完成后立即解析执行，media=&#39;screen&#39; 电脑屏幕场景，media=&#39;print&#39; 打印场景，orientation:landscope输出设备可见区域高度小于宽度；portrait 剩余场景。<br>阻塞页面渲染的有1 4 5 8。","like_count":0,"discussions":[{"author":{"id":1822678,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/cf/d6/7f912c6d.jpg","nickname":"头号大家庭","note":"","ucode":"257EA88817AC98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199229,"discussion_content":"defer 是在 domcontendloaded 之前执行的  可以打开 perfermance 面板看一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583572769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1626734,"avatar":"","nickname":"Geek_f74777","note":"","ucode":"8B512972A145A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21243,"discussion_content":"题目中说的是横屏，难道不是第7行代码会阻塞页面吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569457418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1373624,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","nickname":"mfist","note":"","ucode":"4F99F422C23FB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1626734,"avatar":"","nickname":"Geek_f74777","note":"","ucode":"8B512972A145A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21357,"discussion_content":"哈哈，对的，谢谢提醒。我想反了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569471296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21243,"ip_address":""},"score":21357,"extra":""}]}]}]}