{"id":342135,"title":"58 | trait与泛型：泛型和trait实现模板方法","content":"<p><strong>课件及Demo下载链接</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Rust\">https://gitee.com/geektime-geekbang/geektime-Rust</a></p>","comments":[{"had_liked":false,"id":356965,"user_name":"🐲礁sir","can_delete":false,"product_type":"c3","uid":1016004,"ip_address":"四川","ucode":"6AF330B5B9C2CC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/c4/1c0e3b84.jpg","comment_is_top":false,"comment_ctime":1662735550,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"我在这里跟着看源码的时候发现一个奇怪的点想请教一下老师：\n\nimpl&lt;S: Scheme&gt; Header for Authorization&lt;S&gt; {\n    #[inline]\n    fn name() -&gt; HeaderName {\n        AUTHORIZATION\n    }\n\n    fn parse&lt;T: HttpMessage&gt;(msg: &amp;T) -&gt; Result&lt;Self, ParseError&gt; {\n        let header = msg.headers().get(Self::name()).ok_or(ParseError::Header)?;\n        let scheme = S::parse(header).map_err(|_| ParseError::Header)?;\n\n        Ok(Authorization(scheme))\n    }\n}\n\n这段代码里面的S::parse是调用Scheme trait里面的parse方法。但是这个trait里面的方法也没有去具体实现：\n\npub trait Scheme: TryIntoHeaderValue + Debug + Display + Clone + Send + Sync {\n    &#47;&#47;&#47; Try to parse an authentication scheme from the `Authorization` header.\n    fn parse(header: &amp;HeaderValue) -&gt; Result&lt;Self, ParseError&gt;;\n}\n\n想问下这样的话具体是调用什么呢？","like_count":0}]}