{"id":12288,"title":"第36讲 | 谈谈MySQL支持的事务隔离级别，以及悲观锁和乐观锁的原理和应用场景？","content":"<p>在日常开发中，尤其是业务开发，少不了利用Java对数据库进行基本的增删改查等数据操作，这也是Java工程师的必备技能之一。做好数据操作，不仅仅需要对Java语言相关框架的掌握，更需要对各种数据库自身体系结构的理解。今天这一讲，作为补充Java面试考察知识点的完整性，关于数据库的应用和细节还需要在实践中深入学习。</p>\n<p>今天我要问你的问题是，<span class=\"orange\">谈谈MySQL支持的事务隔离级别，以及悲观锁和乐观锁的原理和应用场景？</span></p>\n<h2>典型回答</h2>\n<p>所谓隔离级别（<a href=\"https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels\">Isolation Level</a>），就是在数据库事务中，为保证并发数据读写的正确性而提出的定义，它并不是MySQL专有的概念，而是源于<a href=\"https://en.wikipedia.org/wiki/American_National_Standards_Institute\">ANSI</a>/<a href=\"https://en.wikipedia.org/wiki/International_Organization_for_Standardization\">ISO</a>制定的<a href=\"https://en.wikipedia.org/wiki/SQL-92\">SQL-92</a>标准。</p>\n<p>每种关系型数据库都提供了各自特色的隔离级别实现，虽然在通常的<a href=\"https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels\">定义</a>中是以锁为实现单元，但实际的实现千差万别。以最常见的MySQL InnoDB引擎为例，它是基于 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/innodb-multi-versioning.html\">MVCC</a>（Multi-Versioning Concurrency Control）和锁的复合实现，按照隔离程度从低到高，MySQL事务隔离级别分为四个不同层次：</p>\n<ul>\n<li>\n<p>读未提交（Read uncommitted），就是一个事务能够看到其他事务尚未提交的修改，这是最低的隔离水平，允许<a href=\"https://en.wikipedia.org/wiki/Isolation_(database_systems)#Dirty_reads\">脏读</a>出现。</p>\n</li>\n<li>\n<p>读已提交（Read committed），事务能够看到的数据都是其他事务已经提交的修改，也就是保证不会看到任何中间性状态，当然脏读也不会出现。读已提交仍然是比较低级别的隔离，并不保证再次读取时能够获取同样的数据，也就是允许其他事务并发修改数据，允许不可重复读和幻象读（Phantom Read）出现。</p>\n</li>\n<li>\n<p>可重复读（Repeatable reads），保证同一个事务中多次读取的数据是一致的，这是MySQL InnoDB引擎的默认隔离级别，但是和一些其他数据库实现不同的是，可以简单认为MySQL在可重复读级别不会出现幻象读。</p>\n</li>\n<li>\n<p>串行化（Serializable），并发事务之间是串行化的，通常意味着读取需要获取共享读锁，更新需要获取排他写锁，如果SQL使用WHERE语句，还会获取区间锁（MySQL以GAP锁形式实现，可重复读级别中默认也会使用），这是最高的隔离级别。</p>\n</li>\n</ul><!-- [[[read_end]]] -->\n<p>至于悲观锁和乐观锁，也并不是MySQL或者数据库中独有的概念，而是并发编程的基本概念。主要区别在于，操作共享数据时，“悲观锁”即认为数据出现冲突的可能性更大，而“乐观锁”则是认为大部分情况不会出现冲突，进而决定是否采取排他性措施。</p>\n<p>反映到MySQL数据库应用开发中，悲观锁一般就是利用类似SELECT … FOR UPDATE这样的语句，对数据加锁，避免其他事务意外修改数据。乐观锁则与Java并发包中的AtomicFieldUpdater类似，也是利用CAS机制，并不会对数据加锁，而是通过对比数据的时间戳或者版本号，来实现乐观锁需要的版本判断。</p>\n<p>我认为前面提到的MVCC，其本质就可以看作是种乐观锁机制，而排他性的读写锁、双阶段锁等则是悲观锁的实现。</p>\n<p>有关它们的应用场景，你可以构建一下简化的火车余票查询和购票系统。同时查询的人可能很多，虽然具体座位票只能是卖给一个人，但余票可能很多，而且也并不能预测哪个查询者会购票，这个时候就更适合用乐观锁。</p>\n<h2>考点分析</h2>\n<p>今天的问题来源于实际面试，这两部分问题反映了面试官试图考察面试者在日常应用开发中，是否学习或者思考过数据库内部的机制，是否了解并发相关的基础概念和实践。</p>\n<p>我从普通数据库应用开发者的角度，提供了一个相对简化的答案，面试官很有可能进一步从实例的角度展开，例如设计一个典型场景重现脏读、幻象读，或者从数据库设计的角度，可以用哪些手段避免类似情况。我建议你在准备面试时，可以在典型的数据库上试验一下，验证自己的观点。</p>\n<p>其他可以考察的点也有很多，在准备这个问题时你也可以对比Java语言的并发机制，进行深入理解，例如，随着隔离级别从低到高，竞争性（Contention）逐渐增强，随之而来的代价同样是性能和扩展性的下降。</p>\n<p>数据库衍生出很多不同的职责方向：</p>\n<ul>\n<li>\n<p>数据库管理员（DBA），这是一个单独的专业领域。</p>\n</li>\n<li>\n<p>数据库应用工程师，很多业务开发者就是这种定位，综合利用数据库和其他编程语言等技能，开发业务应用。</p>\n</li>\n<li>\n<p>数据库工程师，更加侧重于开发数据库、数据库中间件等基础软件。</p>\n</li>\n</ul>\n<p>后面两者与Java开发更加相关，但是需要的知识和技能是不同的，所以面试的考察角度也有区别，今天我会分析下对相关知识学习和准备面试的看法。</p>\n<p>另外，在数据库相关领域，Java工程师最常接触到的就是O/R Mapping框架或者类似的数据库交互类库，我会选取最广泛使用的框架进行对比和分析。</p>\n<h2>知识扩展</h2>\n<p>首先，我来谈谈对数据库相关领域学习的看法，从最广泛的应用开发者角度，至少需要掌握：</p>\n<ul>\n<li>\n<p>数据库设计基础，包括数据库设计中的几个基本范式，各种数据库的基础概念，例如表、视图、索引、外键、序列号生成器等，清楚如何将现实中业务实体和其依赖关系映射到数据库结构中，掌握典型实体数据应该使用什么样的数据库数据类型等。</p>\n</li>\n<li>\n<p>每种数据库的设计和实现多少会存在差异，所以至少要精通你使用过的数据库的设计要点。我今天开篇谈到的MySQL事务隔离级别，就区别于其他数据库，进一步了解MVCC、Locking等机制对于处理进阶问题非常有帮助；还需要了解，不同索引类型的使用，甚至是底层数据结构和算法等。</p>\n</li>\n<li>\n<p>常见的SQL语句，掌握基础的SQL调优技巧，至少要了解基本思路是怎样的，例如SQL怎样写才能更好利用索引、知道如何分析<a href=\"https://dev.mysql.com/doc/workbench/en/wb-performance-explain.html\">SQL执行计划</a>等。</p>\n</li>\n<li>\n<p>更进一步，至少需要了解针对高并发等特定场景中的解决方案，例如读写分离、分库分表，或者如何利用缓存机制等，目前的数据存储也远不止传统的关系型数据库了。</p>\n</li>\n</ul>\n<p><img src=\"https://static001.geekbang.org/resource/image/ae/9d/ae0959aafa30d1530ad4bdf7b1a8a19d.png?wh=891*532\" alt=\"\" /></p>\n<p>上面的示意图简单总结了我对数据库领域的理解，希望可以给你进行准备时提供个借鉴。当然在准备面试时并不是一味找一堆书闷头苦读，我还是建议从实际工作中使用的数据库出发，侧重于结合实践，完善和深化自己的知识体系。</p>\n<p>接下来我们还是回到Java本身，目前最为通用的Java和数据库交互技术就是JDBC，最常见的开源框架基本都是构建在JDBC之上，包括我们熟悉的<a href=\"https://www.tutorialspoint.com/jpa/jpa_introduction.htm\">JPA</a>/<a href=\"https://en.wikipedia.org/wiki/Hibernate_(framework)\">Hibernate</a>、<a href=\"http://www.mybatis.org/mybatis-3/\">MyBatis</a>、Spring JDBC Template等，各自都有独特的设计特点。</p>\n<p>Hibernate是最负盛名的O/R Mapping框架之一，它也是一个JPA Provider。顾名思义，它是以对象为中心的，其强项更体现在数据库到Java对象的映射，可以很方便地在Java对象层面体现外键约束等相对复杂的关系，提供了强大的持久化功能。内部大量使用了<a href=\"https://en.wikipedia.org/wiki/Lazy_loading\">Lazy-load</a>等技术提高效率。并且，为了屏蔽数据库的差异，降低维护开销，Hibernate提供了类SQL的HQL，可以自动生成某种数据库特定的SQL语句。</p>\n<p>Hibernate应用非常广泛，但是过度强调持久化和隔离数据库底层细节，也导致了很多弊端，例如HQL需要额外的学习，未必比深入学习SQL语言更高效；减弱程序员对SQL的直接控制，还可能导致其他代价，本来一句SQL的事情，可能被Hibernate生成几条，隐藏的内部细节也阻碍了进一步的优化。</p>\n<p>而MyBatis虽然仍然提供了一些映射的功能，但更加以SQL为中心，开发者可以侧重于SQL和存储过程，非常简单、直接。如果我们的应用需要大量高性能的或者复杂的SELECT语句等，“半自动”的MyBatis就会比Hibernate更加实用。</p>\n<p>而Spring JDBC Template也是更加接近于SQL层面，Spring本身也可以集成Hibernate等O/R Mapping框架。</p>\n<p>关于这些具体开源框架的学习，我的建议是：</p>\n<ul>\n<li>\n<p>从整体上把握主流框架的架构和设计理念，掌握主要流程，例如SQL解析生成、SQL执行到结果映射等处理过程到底发生了什么。</p>\n</li>\n<li>\n<p>掌握映射等部分的细节定义和原理，根据我在准备专栏时整理的面试题目，发现很多题目都是偏向于映射定义的细节。</p>\n</li>\n<li>\n<p>另外，对比不同框架的设计和实现，既有利于你加深理解，也是面试考察的热点方向之一。</p>\n</li>\n</ul>\n<p>今天我从数据库应用开发者的角度，分析了MySQL数据库的部分内部机制，并且补充了我对数据库相关面试准备和知识学习的建议，最后对主流O/R Mapping等框架进行了简单的对比。</p>\n<h2>一课一练</h2>\n<p>关于今天我们讨论的题目你做到心中有数了吗？ 今天的思考题是，从架构设计的角度，可以将MyBatis分为哪几层？每层都有哪些主要模块？</p>\n<p>请你在留言区写写你对这个问题的思考，我会选出经过认真思考的留言，送给你一份学习奖励礼券，欢迎你与我一起讨论。</p>\n<p>你的朋友是不是也在准备面试呢？你可以“请朋友读”，把今天的题目分享给好友，或许你能帮到他。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":17838,"user_name":"lizishushu","can_delete":false,"product_type":"c1","uid":1188495,"ip_address":"","ucode":"9D257E731BCFDF","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/8f/00468236.jpg","comment_is_top":false,"comment_ctime":1532995173,"is_pvip":false,"replies":[{"id":"6315","content":"这是比较正式的观点","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533141623,"ip_address":"","comment_id":17838,"utype":1}],"discussion_count":2,"race_medal":0,"score":"452504561253","product_id":100006701,"comment_content":"mybatis架构自下而上分为基础支撑层、数据处理层、API接口层这三层。<br><br>基础支撑层，主要是用来做连接管理、事务管理、配置加载、缓存管理等最基础组件，为上层提供最基础的支撑。<br>数据处理层，主要是用来做参数映射、sql解析、sql执行、结果映射等处理，可以理解为请求到达，完成一次数据库操作的流程。<br>API接口层，主要对外提供API，提供诸如数据的增删改查、获取配置等接口。","like_count":106,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421297,"discussion_content":"这是比较正式的观点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533141623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042644,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e8/d4/a0c2569d.jpg","nickname":"骑白马的菜鸟","note":"","ucode":"6BD69C742B3AE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540575,"discussion_content":"说得好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640085344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42820,"user_name":"一首歌一种心情一段路","can_delete":false,"product_type":"c1","uid":1233287,"ip_address":"","ucode":"2A485D5BA15B13","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/87/b8308152.jpg","comment_is_top":false,"comment_ctime":1543051534,"is_pvip":false,"replies":[{"id":"15439","content":"出去面试千万别这么说","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1543194223,"ip_address":"","comment_id":42820,"utype":1}],"discussion_count":9,"race_medal":0,"score":"211996449038","product_id":100006701,"comment_content":"悲观锁和乐观锁在哪儿用的.......平时写sql没接触过啊","like_count":50,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430208,"discussion_content":"出去面试千万别这么说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543194223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1923990,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/5b/96/57d4970d.jpg","nickname":"魏玉会 Gabby","note":"","ucode":"4D6D8FB1895B53","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551088,"discussion_content":"我也是啊，自己从来没有主动使用过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644894449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2259479,"avatar":"","nickname":"傻咪和傻蛋","note":"","ucode":"A3E775EA972D50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316155,"discussion_content":"jpa中会有version注解使用，其实就是乐观锁的使用。sql大概是这样的update table set  a=a,v=v+1 where id = id and v=version","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603367695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1876212,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/a0/f4/7e122a67.jpg","nickname":"之渊","note":"","ucode":"02B9299DBB4881","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302110,"discussion_content":"悲观锁其实用得很少。但是乐观锁还是经常用的，特别是数据库比如更新库存的时候使用版本号来更新库存。hibernate上就是对应了实体使用了 @version 注解，就是使用了乐观锁了 。 还有一些单体项目的秒杀也会用到乐观锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598792494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1537341,"avatar":"https://static001.geekbang.org/account/avatar/00/17/75/3d/71ad2330.jpg","nickname":"在路上","note":"","ucode":"C68778C04D61DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1876212,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/a0/f4/7e122a67.jpg","nickname":"之渊","note":"","ucode":"02B9299DBB4881","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332343,"discussion_content":"并发修改数据库数量时会加个版本号，用乐观锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607161010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302110,"ip_address":""},"score":332343,"extra":""},{"author":{"id":2806171,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/z4hFFGreQKeXzVG5eiaFuuUBgW6nnc3Y8AOdFFo97SUh8jYI7DmicJuBHNF3RiaN2byhwbVHwibicTQCk7s08Wia1EUA/132","nickname":"Geek_c3a0c0","note":"","ucode":"23980979632633","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1876212,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/a0/f4/7e122a67.jpg","nickname":"之渊","note":"","ucode":"02B9299DBB4881","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556041,"discussion_content":"每次insert update都是悲观锁呢😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647178041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302110,"ip_address":""},"score":556041,"extra":""}]},{"author":{"id":2052476,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Qq6oLfOTgKzjiculoUDicdv7WoY1iabPfOTumibWeInVP2Mnod9XVPrNSClvIiaLbvtDlIjRnWUNaXcYwREGzlcaDog/132","nickname":"Geek_在下蟑螂王","note":"","ucode":"E1F5BBB5BC5962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291606,"discussion_content":"因为框架已经帮你做了。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594887394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054201,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/f9/0b14785a.jpg","nickname":"三三","note":"","ucode":"4A76933C29BDA1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233572,"discussion_content":"数据库给你处理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586931971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018620,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","nickname":"ipofss","note":"","ucode":"DE3061C9259F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388,"discussion_content":"我也只是听过，了解，实际项目中我也没用过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561523180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19805,"user_name":"任鹏斌","can_delete":false,"product_type":"c1","uid":1104086,"ip_address":"","ucode":"34319B05EA6E74","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/d6/47da34bf.jpg","comment_is_top":false,"comment_ctime":1534082263,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"61663624407","product_id":100006701,"comment_content":"对于mysql四个隔离级别中的不可重复读的最后一句不是很理解。不可重复读应该是不能避免幻读，为什么说是不产生幻读呢？","like_count":13,"discussions":[{"author":{"id":2676330,"avatar":"https://static001.geekbang.org/account/avatar/00/28/d6/6a/1d844a27.jpg","nickname":"冲冲冲","note":"","ucode":"4DA7596B5AFD51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388295,"discussion_content":"innoDB引擎在可重复读的情况下默认开启间隙锁，间隙锁解决了这个问题","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1628685420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315800,"discussion_content":"隔壁 丁奇大佬mysql 45讲   学完了就知道了。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603328130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1415619,"avatar":"https://static001.geekbang.org/account/avatar/00/15/99/c3/e4f408d4.jpg","nickname":"陌兮","note":"","ucode":"00CE47CAECD5CD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352859,"discussion_content":"了解一下MVCC就知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614871511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1563245,"avatar":"https://static001.geekbang.org/account/avatar/00/17/da/6d/7c8fdb14.jpg","nickname":"嗯。","note":"","ucode":"30FC6EF9A01070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291828,"discussion_content":"使用的是Next-Key-Lock算法，它是row-lock行锁和GAP-lock间隙锁的结合，会锁住当前行以及间隙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594963434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178101,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f9/f5/5aecc3cb.jpg","nickname":"给我一秒毁坏世界","note":"","ucode":"310B851553363D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115807,"discussion_content":"mvcc+行锁和GAP锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578036733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1605158,"avatar":"https://static001.geekbang.org/account/avatar/00/18/7e/26/946f58e2.jpg","nickname":"Scarecrow","note":"","ucode":"76D783B5B32DE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60835,"discussion_content":"mysql 增加了间隙锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574759219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37583,"user_name":"文彦","can_delete":false,"product_type":"c1","uid":1087351,"ip_address":"","ucode":"157C65813AF7E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/77/dac7d3b3.jpg","comment_is_top":false,"comment_ctime":1541644742,"is_pvip":false,"replies":[{"id":"13668","content":"还是明确目的+实践，不一定非要都看jdk源码，初期明白并掌握通用原则更高效，比如 冠宝的 《阿里Java手册》或者经典书籍，并且达到水平还是要有代码量","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1541906098,"ip_address":"","comment_id":37583,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53081252294","product_id":100006701,"comment_content":"晓峰老师。最近感觉基础有点差，开始看jdk的源码，主要是结合api来看。但是感觉事倍功半，有什么好的建议吗？","like_count":13,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428411,"discussion_content":"还是明确目的+实践，不一定非要都看jdk源码，初期明白并掌握通用原则更高效，比如 冠宝的 《阿里Java手册》或者经典书籍，并且达到水平还是要有代码量","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1541906098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19672,"user_name":"clz1341521","can_delete":false,"product_type":"c1","uid":1179557,"ip_address":"","ucode":"3BDB4AB454C918","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/a5/eccc7653.jpg","comment_is_top":false,"comment_ctime":1533957413,"is_pvip":false,"replies":[{"id":"6847","content":"不错","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533993814,"ip_address":"","comment_id":19672,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48778597669","product_id":100006701,"comment_content":"mysql inndb默认可重复读级别，不会出现幻读。<br>mybatis架构自下而上分为基础支撑层、数据处理层、API接口层这三层。<br><br>基础支撑层，主要是用来做连接管理、事务管理、配置加载、缓存管理等最基础组件，为上层提供最基础的支撑。<br>数据处理层，主要是用来做参数映射、sql解析、sql执行、结果映射等处理，可以理解为请求到达，完成一次数据库操作的流程。<br>API接口层，主要对外提供API，提供诸如数据的增删改查、获取配置等接口。","like_count":12,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421936,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533993814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1956589,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoyNOEic1I3QM2hyFYU3t7OrzicJK6woJQDiaKhq0alwt3twdriba944GsBibe2tuN99242o1HicV4VIcsg/132","nickname":"Geek_1b58fa","note":"","ucode":"0D0F983B8E2109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327445,"discussion_content":"mysql可重复读级别读操作不会出现幻读，但是写操作还是会出现幻读吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605838947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17868,"user_name":"L.B.Q.Y","can_delete":false,"product_type":"c1","uid":1069325,"ip_address":"","ucode":"5567989D1CDBBE","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/0d/14d9364a.jpg","comment_is_top":false,"comment_ctime":1533000074,"is_pvip":false,"replies":[{"id":"6223","content":"从技术角度实现，mysq用mvcc做了snapshot，如果是locking read文档明确指出了会做区间锁定","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533054327,"ip_address":"","comment_id":17868,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44482673034","product_id":100006701,"comment_content":"mysql（innodb）的可重复读隔离级别下，为什么可以认为不会出现幻像读呢?","like_count":10,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421309,"discussion_content":"从技术角度实现，mysq用mvcc做了snapshot，如果是locking read文档明确指出了会做区间锁定","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533054327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1136329,"avatar":"https://static001.geekbang.org/account/avatar/00/11/56/c9/7b3cd3e0.jpg","nickname":"马振","note":"","ucode":"94234F533219C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42036,"discussion_content":"幻读场景：事务1和2 select .. id=3都查不到，事务2插入 id=3且提交，在可重复读级别下，事务1select .. id=3仍然查不到，但是 inset id=3失败；所以会出现幻读的，因为mvcc的更新是个例外，会在最新提交内容基础之上更新","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1572574983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66528,"user_name":"饭粒","can_delete":false,"product_type":"c1","uid":1153455,"ip_address":"","ucode":"4C3220B0D43997","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","comment_is_top":false,"comment_ctime":1549953352,"is_pvip":false,"replies":[{"id":"24411","content":"嗯呢","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1550593546,"ip_address":"","comment_id":66528,"utype":1}],"discussion_count":5,"race_medal":0,"score":"27319757128","product_id":100006701,"comment_content":"SQL标准的隔离级别可重复读还是有幻读问题的。 InnoDB 和 XtraDB存储引擎 通过多版本并发控制（ MVCC， Multiversion Concurrency Control） 解决了幻读的问题。","like_count":6,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438823,"discussion_content":"嗯呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550593546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126538,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","nickname":"业余草","note":"","ucode":"99BDC1E629049D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291396,"discussion_content":"在RR的隔离级别下，Innodb使用MVVC和next-key locks解决幻读，MVVC解决的是普通读（快照读）的幻读，next-key locks解决的是当前读情况下的幻读。https://mp.weixin.qq.com/s/TcGavX_tYdnJTv9NJn6srw","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1594803885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2052476,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Qq6oLfOTgKzjiculoUDicdv7WoY1iabPfOTumibWeInVP2Mnod9XVPrNSClvIiaLbvtDlIjRnWUNaXcYwREGzlcaDog/132","nickname":"Geek_在下蟑螂王","note":"","ucode":"E1F5BBB5BC5962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1126538,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","nickname":"业余草","note":"","ucode":"99BDC1E629049D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336621,"discussion_content":"真牛啊。我捋清楚了。原来rr的时候，快照读是用mvcc解决幻读的。一直以为只有当前读才需要解决幻读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608636087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291396,"ip_address":""},"score":336621,"extra":""}]},{"author":{"id":1029186,"avatar":"","nickname":"唐唐","note":"","ucode":"52876E04BB3A9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215165,"discussion_content":"Mvcc通过快照解决不可重复读问题，gap锁解决幻读。是这样吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585295278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1640364,"avatar":"","nickname":"张天明","note":"","ucode":"58D38329D7B883","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7517,"discussion_content":"牛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567525278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17854,"user_name":"郝国梁","can_delete":false,"product_type":"c1","uid":1120673,"ip_address":"","ucode":"83B62E1072D096","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/a1/d25786fc.jpg","comment_is_top":false,"comment_ctime":1532997756,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23007834236","product_id":100006701,"comment_content":"乐观锁 悲观锁 脏读 幻读 不可重复读 CAS MVCC 隔离级别 锁队列 2PC TCC","like_count":5},{"had_liked":false,"id":17876,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1533001454,"is_pvip":true,"replies":[{"id":"6222","content":"这最好问MyBatis作者，抱歉","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533053761,"ip_address":"","comment_id":17876,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18712870638","product_id":100006701,"comment_content":"说到mybatis,就想起了分页，现在绝大多分页都用到了pagehelper插件，我想问下老师为啥mybatis没有设计一个好用的分页了？","like_count":5,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421312,"discussion_content":"这最好问MyBatis作者，抱歉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533053761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1326012,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3b/bc/68a0b861.jpg","nickname":"yida","note":"","ucode":"B609AEC8DDBAC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7767,"discussion_content":"有可能mybatis作者认为已经有一个很好用的pagehelper了，所以就没开发，不重复造轮子嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567667205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17865,"user_name":"anji","can_delete":false,"product_type":"c1","uid":1155421,"ip_address":"","ucode":"9F66A6D2BEF9A8","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/5d/6f754b1f.jpg","comment_is_top":false,"comment_ctime":1532999769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18712868953","product_id":100006701,"comment_content":"0.sql工厂-主要设定数据库连接信息<br>1.接口层-主要有mapper接口用于对外提供具体的sql执行方法<br>2.xml文件-有具体的sql实现语句，以及数据库字段对应java类字段的映射关系，每个mapper对应每个数据库表<br>","like_count":4},{"had_liked":false,"id":21107,"user_name":"old_snail","can_delete":false,"product_type":"c1","uid":1005140,"ip_address":"","ucode":"3FA9B51633120A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/54/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1534919721,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14419821609","product_id":100006701,"comment_content":"杨老师 您好，关于“可以简单认为MySQL在可重复读级别不会出现幻象读”没能理解，个人认为正是因为可重复读，即每个事务保存了快照，才导致了幻读的现象。想要解决幻读，只能加共享锁或者排它锁吧。 可能是因为知识浅导致无法理解，还望方便的话，您能点拨一下，感谢","like_count":3,"discussions":[{"author":{"id":1126538,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","nickname":"业余草","note":"","ucode":"99BDC1E629049D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291398,"discussion_content":"RR 和 RC 是不一样的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594804129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18115,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1162307,"ip_address":"","ucode":"0E0D44ABB35DBB","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/43/11acdc02.jpg","comment_is_top":false,"comment_ctime":1533138299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14418040187","product_id":100006701,"comment_content":"请问什么时候可以细说一哈ORM映射😋","like_count":3},{"had_liked":false,"id":252966,"user_name":"sunnyrqw","can_delete":false,"product_type":"c1","uid":1000971,"ip_address":"","ucode":"249AD5F48C1159","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/0b/c57f4f43.jpg","comment_is_top":false,"comment_ctime":1602550404,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5897517700","product_id":100006701,"comment_content":"评论有说悲观锁和乐观锁在哪里用，说下我的理解<br>悲观锁和乐观锁是概念，如专栏说的<br>悲观锁是完全排他性的，我在执行的时候，你不能动，具体实现 java的synchronized、ReentrantLock<br>乐观锁就是我在执行的时候不限制你的操作，通过对比前后的值看有没人操作，没人操作就更新，有人操作就重来一次，具体实现是java cas","like_count":1},{"had_liked":false,"id":56180,"user_name":"小笨蛋","can_delete":false,"product_type":"c1","uid":1118331,"ip_address":"","ucode":"7065FB157C4B70","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/7b/eed9d6d6.jpg","comment_is_top":false,"comment_ctime":1546400430,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5841367726","product_id":100006701,"comment_content":"sql方面我们从来没有使用过悲观锁，一直都是用的乐观锁，怎么办？","like_count":1},{"had_liked":false,"id":21267,"user_name":"Dream","can_delete":false,"product_type":"c1","uid":1112973,"ip_address":"","ucode":"30A99690C14762","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/8d/6c3cccc7.jpg","comment_is_top":false,"comment_ctime":1534987916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5829955212","product_id":100006701,"comment_content":"MVCC到底有没有加锁？如何应用的？","like_count":1},{"had_liked":false,"id":217754,"user_name":"李飞","can_delete":false,"product_type":"c1","uid":1555180,"ip_address":"","ucode":"930458850AA05B","user_header":"https://static001.geekbang.org/account/avatar/00/17/ba/ec/2b1c6afc.jpg","comment_is_top":false,"comment_ctime":1589602403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589602403","product_id":100006701,"comment_content":"数据库管理系统（DBMS）中的并发控制的任务是确保在多个事务同时存取数据库中同一数据时不破坏事务的隔离性和统一性以及数据库的统一性。<br><br>乐观并发控制(乐观锁)和悲观并发控制（悲观锁）是并发控制主要采用的技术手段。<br><br>无论是悲观锁还是乐观锁，都是人们定义出来的概念，可以认为是一种思想。其实不仅仅是关系型数据库系统中有乐观锁和悲观锁的概念，像memcache、hibernate、tair等都有类似的概念。<br><br>针对于不同的业务场景，应该选用不同的并发控制方式。所以，不要把乐观并发控制和悲观并发控制狭义的理解为DBMS中的概念，更不要把他们和数据中提供的锁机制（行锁、表锁、排他锁、共享锁）混为一谈。其实，在DBMS中，悲观锁正是利用数据库本身提供的锁机制来实现的。<br><br>当我们要对一个数据库中的一条数据进行修改的时候，为了避免同时被其他人修改，最好的办法就是直接对该数据进行加锁以防止并发。<br><br>这种借助数据库锁机制在修改数据之前先锁定，再修改的方式被称之为悲观并发控制（又名“悲观锁”，Pessimistic Concurrency Control，缩写“PCC”）。<br><br>在关系数据库管理系统里，悲观并发控制（又名“悲观锁”，Pessimistic Concurrency Control，缩写“PCC”）是一种并发控制的方法。它可以阻止一个事务以影响其他用户的方式来修改数据。如果一个事务执行的操作都某行数据应用了锁，那只有当这个事务把锁释放，其他事务才能够执行与该锁冲突的操作。<br>悲观并发控制主要用于数据争用激烈的环境，以及发生并发冲突时使用锁保护数据的成本要低于回滚事务的成本的环境中。<br><br>悲观锁，正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保守态度(悲观)，因此，在整个数据处理过程中，将数据处于锁定状态。 悲观锁的实现，往往依靠数据库提供的锁机制 （也只有数据库层提供的锁机制才能真正保证数据访问的排他性，否则，即使在本系统中实现了加锁机制，也无法保证外部系统不会修改数据）<br><br>在数据库中，悲观锁的流程如下：<br>在对任意记录进行修改前，先尝试为该记录加上排他锁（exclusive locking）。<br>如果加锁失败，说明该记录正在被修改，那么当前查询可能要等待或者抛出异常。 具体响应方式由开发者根据实际需要决定。<br>如果成功加锁，那么就可以对记录做修改，事务完成后就会解锁了。<br>其间如果有其他对该记录做修改或加排他锁的操作，都会等待我们解锁或直接抛出异常。","like_count":0},{"had_liked":false,"id":175274,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1580637803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580637803","product_id":100006701,"comment_content":"这个数据库的隔离级别个人认为是停留在理论的层次上，我在学习专栏《SQL必知必会》中，做过实验，按照例子中执行的实际结果跟隔离级别的定义不一样，不清楚这是在什么场景下才会出现这些问题。","like_count":0},{"had_liked":false,"id":173369,"user_name":"尚有智","can_delete":false,"product_type":"c1","uid":1590683,"ip_address":"","ucode":"CE6D2BA3C36944","user_header":"https://static001.geekbang.org/account/avatar/00/18/45/9b/b11a2421.jpg","comment_is_top":false,"comment_ctime":1579512835,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1579512835","product_id":100006701,"comment_content":"亲测后，发现一个问题，没搞懂，希望老师指点一下（自动提交修改成了手动提交）：<br>start transaction；<br>select * from  user where status = 0 and id = 1;<br>update user set status = 1 where id =1;<br>select * from user where status = 0 and id =1;<br>并未commit，第一个select能查询到数据，第二个select 不能查询到数据，我的理解是事务没有提交的时候，第二个select也能查询到数据，不清楚这个是怎么回事，isolation level 设置为read committed 和 repeatable read 都有这个问题，望解答！<br>","like_count":1,"discussions":[{"author":{"id":1298594,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/G2hKWVwthOFMChTia10NqpDn1ib6ibibtIHsEN8lbdApwrenOqmicAWBkCTb9zFeuPSXFrKpruwJqEhfZHk99scYS1Q/132","nickname":"李晟","note":"","ucode":"5E3F8A1CD8CC67","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182826,"discussion_content":"事务隔离级别中所描述的读不到未提交的数据，指的当前事务对另一个事务，而你这个update和第二个select是在同一个事务中，update修改后的值肯定是可以被select得到的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582459081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179028,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fd/94/0247f945.jpg","nickname":"咸鱼","note":"","ucode":"5E79636DE48155","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286854,"discussion_content":"同一个事务里面，前面执行的DML操作，后面肯定是可以查询到的，这叫当前读，根据MVCC的实现来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593310538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34434,"user_name":"互联网联络员","can_delete":false,"product_type":"c1","uid":1186667,"ip_address":"","ucode":"CCF63EBE5C6E99","user_header":"https://static001.geekbang.org/account/avatar/00/12/1b/6b/4a6b774c.jpg","comment_is_top":false,"comment_ctime":1540171249,"is_pvip":false,"replies":[{"id":"12421","content":"大家理解的范围可能有些区别，你可以设计一个简单的测试用例并试验一下吗？","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1540311040,"ip_address":"","comment_id":34434,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1540171249","product_id":100006701,"comment_content":"老师是不是写错了，在可重复读隔离级别中，基于锁的并发控制 DBMS实现保持读取和写入锁定（在选定数据上获取），直到事务结束。但是，range-locks没有被管理 ，因此可能会发生幻像读取。<br><br>事物的隔离级别增强分别解决由脏读、不可重复读再到幻读，只有串行化能解决三者，但是损失了效率。","like_count":0,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427208,"discussion_content":"大家理解的范围可能有些区别，你可以设计一个简单的测试用例并试验一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540311040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18016,"user_name":"kitten","can_delete":false,"product_type":"c1","uid":1027789,"ip_address":"","ucode":"E451DE087CB7CE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/cd/3bffed26.jpg","comment_is_top":false,"comment_ctime":1533086878,"is_pvip":true,"replies":[{"id":"6313","content":"是 有，另一个回复里提到了","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1533141231,"ip_address":"","comment_id":18016,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533086878","product_id":100006701,"comment_content":"mysql，可重复读的隔离级别，也在有gap间隙锁吧？","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421360,"discussion_content":"是 有，另一个回复里提到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533141231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17981,"user_name":"又双叒叕是一年啊","can_delete":false,"product_type":"c1","uid":1000015,"ip_address":"","ucode":"E067320E537DEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","comment_is_top":false,"comment_ctime":1533081729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533081729","product_id":100006701,"comment_content":"不同的事务隔离级别分别怎么实现事务机制一样吗","like_count":0}]}