{"id":644790,"title":"08｜文本改写和内容审核，别让你的机器人说错话","content":"<p>你好，我是徐文浩。</p><p>前面，我们已经把OpenAI最主要的接口介绍完了。这一讲也是我们基础知识篇里面的最后一讲，我们会覆盖完OpenAI的GPT系列模型剩下的一些接口。也许有些接口你不一定会频繁使用，但是了解一下没有什么坏处，说不定你有什么需求就能用得上它。</p><p>在这一讲里，我们会一起来看看OpenAI为文本改写和内容审核提供的功能有哪些。以及OpenAI的GPT系列有哪些模型，这些模型有哪些区别，什么情况下我们应该用什么模型。</p><h2>文本改写，从使用提示语开始</h2><p>我猜课程学到这里，你应该已经用过不少基于AI大语言模型的产品了。很常见的一类应用，就是写作助手。比如Notion AI就能帮助你，在已经写好的文章里面选取一段内容，你可以让AI帮你修改。这个修改可以是让文本短一点或者长一点，也可以是让文本改一下自己的语气。</p><p><img src=\"https://static001.geekbang.org/resource/image/f3/e0/f3df3181e7f0a44f50e5f870a2256ae0.png?wh=556x459\" alt=\"图片\" title=\"Notion的文本改写的界面\"></p><p>不过，OpenAI的GPT的系列模型是一个生成式的模型，也就是它的用法是你给它一段文字，然后它补全后面的文字。按理来说，你是没法让它修改一段内容的。当然，在看了那么多不同的“提示语”之后，相信你自然想到可以通过一段提示语来解决这个问题。比如，下面这段代码就是这样的，我们通过上一讲介绍的ChatGPT的模型来实现了这个功能。</p><!-- [[[read_end]]] --><pre><code class=\"language-python\">def make_text_short(text):\n    messages = []\n    messages.append( {\"role\": \"system\", \"content\": \"你是一个用来将文本改写得短的AI助手，用户输入一段文本，你给出一段意思相同，但是短小精悍的结果\"})\n    messages.append( {\"role\": \"user\", \"content\": text})\n    response = openai.ChatCompletion.create(\n        model=\"gpt-3.5-turbo\",\n        messages=messages,\n        temperature=0.5,\n        max_tokens=2048,\n        presence_penalty=0,\n        frequency_penalty=2,\n        n=3,\n    )\n    return response\n\nlong_text = \"\"\"\n在这个快节奏的现代社会中，我们每个人都面临着各种各样的挑战和困难。\n在这些挑战和困难中，有些是由外部因素引起的，例如经济萧条、全球变暖和自然灾害等。\n还有一些是由内部因素引起的，例如情感问题、健康问题和自我怀疑等。\n面对这些挑战和困难，我们需要采取积极的态度和行动来克服它们。\n这意味着我们必须具备坚韧不拔的意志和创造性思维，以及寻求外部支持的能力。\n只有这样，我们才能真正地实现自己的潜力并取得成功。\n\"\"\"\nshort_version = make_text_short(long_text)\n\nindex = 1\nfor choice in short_version[\"choices\"]:\n    print(f\"version {index}: \" + choice[\"message\"][\"content\"])\n    index += 1\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">version 1: 现代社会中，我们面临外部和内部的挑战。要克服它们，需要积极态度、创造性思维和寻求支持能力。这样才能实现自己潜力并成功。\nversion 2: 现代社会中，我们面临各种挑战和困难。有些是外部因素引起的，如经济萧条、全球变暖等；还有些是内部因素引起的，如情感问题、健康问题等。为了克服这些困难，我们需要积极应对，并具备坚韧不拔的意志和创造性思维能力，并寻求外部支持。只有这样才能实现自己潜力并取得成功。\nversion 3: 现代社会中，我们面临各种挑战和困难。有些源于外部因素（如经济萧条、全球变暖），而另一些则来自内部（如情感问题、健康问题）。为了克服这些困难，我们需要积极应对并展现坚韧的意志和创造性思维，并寻求外界支持。只有这样，我们才能实现潜力并获得成功。\n</code></pre><p>使用ChatGPT的模型接口，是因为它的价格比较低廉。而我们使用的参数也有以下几个调整。</p><ol>\n<li>首先是我们使用了 n=3 这个参数，也就是让AI给我们返回3个答案供我们选择。在文本改写类的应用里面，我们通常不只是直接给出答案，而是会给用户几个选项来选择。</li>\n<li>其次是我们引入了两个参数 presence_penalty=0 以及 frequency_penalty=2。这两个参数我们之前没有介绍过，它们和temperature参数类似，都是来控制你输出的内容的。\n<ol>\n<li>presence_penalty，顾名思义就是如果一个Token在前面的内容已经出现过了，那么在后面生成的时候给它的概率一定的惩罚。这样，AI就会倾向于聊新的话题和内容。在这里，我们把它设置成了默认值0。</li>\n<li>frequency_penalty，指的是对于重复出现的Token进行概率惩罚。这样，AI就会尽量使用不同的表述。在这里我们设成了最大的2，你也可以设置成最小的-2。但是那样的话，它就更容易说车轱辘话了。</li>\n</ol>\n</li>\n</ol><h2>通过logit_bias参数精确控制内容</h2><p>不过，无论是temperature还是presence_penalty和frequency_penalty，都是一个参数，我们没有办法精确控制哪些词我们不想出现。不过，对于这一点，OpenAI还是提供了解决方案，比如，我们想要在上面生成的内容里面，不允许出现灾害两个字，就可以这么做。</p><pre><code class=\"language-python\">import tiktoken\nencoding = tiktoken.get_encoding('p50k_base')\ntoken_ids = encoding.encode(\"灾害\")\nprint(token_ids)\n\nbias_map = {}\nfor token_id in token_ids:\n    bias_map[token_id] = -100\n\ndef make_text_short(text):\n    messages = []\n    messages.append( {\"role\": \"system\", \"content\": \"你是一个用来将文本改写得短的AI助手，用户输入一段文本，你给出一段意思相同，但是短小精悍的结果\"})\n    messages.append( {\"role\": \"user\", \"content\": text})\n    response = openai.ChatCompletion.create(\n        model=\"gpt-3.5-turbo\", messages=messages, temperature=0.5, max_tokens=2048,\n        n=3, presence_penalty=0, frequency_penalty=2, \n        logit_bias = bias_map,\n    )\n    return response\n\nshort_version = make_text_short(long_text)\n\nindex = 1\nfor choice in short_version[\"choices\"]:\n    print(f\"version {index}: \" + choice[\"message\"][\"content\"])\n    index += 1\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">[163, 223, 122, 22522, 111]\nversion 1: 现代社会中，我们面对各种挑战和困障。有些是外部原因引起的，如经济萧条、全球变暖和自然災宣等；还有一些是内心问题，如情感、健康和自我怀念等。为克服这些困障我们需要积枝正面态度并采取行动，并具备坚韧不拔的意志与创造性思维能力以及寻求外部支持的技巧。只要这样做了, 我们就可以真正实现潜力并获得成功.\nversion 2: 现代社会中，我们面对外部和内部的挑战。为了克服这些困难示意，需要积架主动态度和行动，并具备坚韧不拔的意志、创造性思维以及寻求支持能力。只有这样才能实现潜力并取得成功。\nversion 3: 现代社会中，我们面临各种挑战和困障。有外部因素如经济萧条、全球变暖等，也有内部因素如情感问题、健康问题等。为克服这些困境，需要积架态度和行动，并具备坚韧意志、创造性思维及外部支持能力。只有这样才能实现自我潜力并取得成功。\n</code></pre><p>这段代码里面，我们是这样做的。</p><ol>\n<li>我们通过之前使用过的Tiktoken库，把我们不希望出现的“灾害”这个词儿，找到它对应的Token，然后给它们都赋了一个-100的bias。</li>\n<li>然后把整个的bias_map作为参数，传给了Completion的logit_bias参数。</li>\n</ol><p>在生成结果里面，你可以看到，三个回复都没有“灾害”这两个字了。即使是之前出现的第一个回复里原来是有“灾害”这两个字的。现在一个被强行改成了繁体的“災”字，另一个干脆是给了个错别字“宣”。</p><p>对于 logit_bias 参数里面的取值范围，是在-100到100之间。不过，一般情况下，设置在1到-1之间就足够了。我自己的体会是，设置成100，你一定要某些字出现，那么整个生成会慢到无法忍受。</p><h2>使用英文来减少Token的使用</h2><p>不知道你有没有注意到，虽然灾害只有两个中文汉字，但是我们通过Tiktoken去处理的时候，我们打印了对应的Token的id是什么，实际上有5个Token。这里其实和我们之前看到的英文一样，并不是一个字或者一个单词是一个Token。事实上，同样含义的中文，目前消耗的Token数量是比英文多的。比如，我们把上面的一句话翻译成英文，然后数一下对应同样内容的中英文的Token数。</p><pre><code class=\"language-python\">def translate(text):\n    messages = []\n    messages.append( {\"role\": \"system\", \"content\": \"你是一个翻译，把用户的话翻译成英文\"})\n    messages.append( {\"role\": \"user\", \"content\": text})\n    response = openai.ChatCompletion.create(\n        model=\"gpt-3.5-turbo\", messages=messages, temperature=0.5, max_tokens=2048,        n=1\n    )\n    return response[\"choices\"][0][\"message\"][\"content\"]\n\nchinese = long_text\nenglish = translate(chinese)\n\nnum_of_tokens_in_chinese = len(encoding.encode(chinese))\nnum_of_tokens_in_english = len(encoding.encode(english))\nprint(english)\nprint(f\"chinese: {num_of_tokens_in_chinese} tokens\")\nprint(f\"english: {num_of_tokens_in_english} tokens\")\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">In this fast-paced modern society, each of us faces various challenges and difficulties. Some of these challenges and difficulties are caused by external factors, such as economic recession, global warming, and natural disasters. There are also some caused by internal factors, such as emotional issues, health problems, and self-doubt. To overcome these challenges and difficulties, we need to adopt a positive attitude and take action. This means we must possess a strong will and creative thinking, as well as the ability to seek external support. Only in this way can we truly realize our potential and achieve success.\nchinese: 432 tokens\nenglish: 115 tokens\n</code></pre><p>可以看到，同样的内容，中文消耗的Token数量超过400，而英文的Token数量只有100出头。如果你在生产环境中使用OpenAI的接口，最好还是使用英文的提示语，最多在输出结果的时候，告诉它 “generate Chinese” 之类的，可以极大地节约成本。不过，我们后面课程的演示，还是会尽量使用中文，方便你理解。</p><h2>看看OpenAI给了我们哪些模型</h2><p>有些同学可能看过文档会说，改写文本不是OpenAI单独提供了一个Edit的接口吗？的确，曾经，OpenAI单独给过一个Edit接口，也单独提供了文本编辑的模型。目前，你在OpenAI的官网上还能看到相关的<a href=\"https://platform.openai.com/docs/api-reference/edits\">文档</a>。但是根据我的测试，这个接口和模型目前是不能使用的，不知道是因为是Alpha版本还是已经被下线了。</p><p>因为目前OpenAI的产品更新非常快，所以很可能会出现一个问题，我告诉你应该使用某个模型，但是这个模型已经不是效果最好或者最新的了。所以，最好的办法，还是通过它提供的接口看看它到底有哪些模型。</p><pre><code class=\"language-python\">import pandas as pd\n# list all open ai models\nengines = openai.Engine.list()\npd = pd.DataFrame(openai.Engine.list()['data'])\ndisplay(pd[['id', 'owner']])\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">\tid\towner\n0\tbabbage\topenai\n1\tdavinci\topenai\n2\tbabbage-code-search-code\topenai-dev\n3\ttext-similarity-babbage-001\topenai-dev\n4\ttext-davinci-001\topenai\n……\n14\ttext-embedding-ada-002\topenai-internal\n……\n30\tgpt-3.5-turbo-0301\topenai\n……\n41\tgpt-4\topenai\n42\ttext-search-davinci-doc-001\topenai-dev\n43\tgpt-4-0314\topenai\n……\n47\ttext-similarity-davinci-001\topenai-dev\n48\ttext-davinci-002\topenai\n49\tdavinci-similarity\topenai-dev\n</code></pre><p>在我写下这节课的时候，输出结果里有49个模型。其实顾名思义，你就能够知道这些模型是用来干啥的。比如 text-similarity-babbage-001 肯定就是用来进行相似度匹配的，就会比较适合用在我们 <a href=\"https://time.geekbang.org/column/article/642179\">02 讲</a>介绍的零样本分类。而 text-search-davinci-doc-001 肯定就更适合用来搜索文档。</p><p>尽管有些模型的名字标注了 openai-dev 或者 openai-internal，但是这些模型都是可以使用的。比如，我们在 <a href=\"https://time.geekbang.org/column/article/642179\">02 讲</a>里面调用get_embedding方法拿到向量，背后用的就是 text-similarity-davinci-001 模型，也是一个openai-dev的模型。</p><p>不过，里面的很多模型都已经老旧了，实际上主要用的模型就是这几类。</p><ol>\n<li>GPT-4家族的模型，包括 gpt-4 和 gpt-4-0314。使用的方式和ChatGPT的模型一样，其中带日期的模型表示是一个模型快照。也就是模型不会随着时间迁移不断更新。GPT-4的模型现在还很昂贵，输入1000个Token需要0.03美分，生成1000个Token则需要0.06美分。一般呢，我都是拿它帮我写代码，准确率会比较高。</li>\n<li>GPT-3.5家族的模型，包括ChatGPT所使用的gpt-3.5-turbo或者gpt-3.5-turbo-0301，以及 text-davinci-003 和 text-davinci-002 这两个模型。前者专门针对对话的形式进行了微调，并且价格便宜，无论输入输出，1000个Token都只需要0.002美分。后两个里，003的模型有一个特殊的功能，就是支持“插入文本”这个功能，我们稍后就讲。003也是基于强化学习微调的，而002则是做了监督学习下的微调。text-davinci-003和002模型比3.5-turbo要贵10倍，但是输出更稳定。你可以根据自己的需要来决定。</li>\n<li>剩下的，则是 Ada、Babbage、Curie以及Davinci这四个基础模型。只适合用于下达单轮的指令，不适合考虑复杂的上下文和进行逻辑推理。这四个模型按照首字母排序，价格越来越贵，效果越来越好。而且我们如果要微调一个属于自己的模型，也需要基于这四个基础模型。</li>\n<li>最后则是 text-embedding-ada-002、text-similarity-ada-001 这些专门用途模型。一般来说，我们通过这个模型来获取Embedding，再用在其他的机器学习模型的训练，或者语义相似度的比较上。</li>\n</ol><p>所有模型的名字都来自科学史上的名人。Ada来自人类史上第一位程序员Ada，她也是著名诗人拜伦的女儿。而Babadge则是设计了分析机的巴贝奇，巴贝奇分析机也被认为是现代计算机的前身。Curie则是指居里夫人，Davinci是指达芬奇。</p><p>我们可以挑几个模型，试一下它们Embedding的维度数量，你就知道模型的尺寸本身就是不一样的了。</p><pre><code class=\"language-python\">from openai.embeddings_utils import get_embedding\n\ntext = \"让我们来算算Embedding\"\n\nembedding_ada = get_embedding(text, engine=\"text-embedding-ada-002\")\nprint(\"embedding-ada: \", len(embedding_ada))\n\nsimilarity_ada = get_embedding(text, engine=\"text-similarity-ada-001\")\nprint(\"similarity-ada: \", len(similarity_ada))\n\nbabbage_similarity = get_embedding(text, engine=\"babbage-similarity\")\nprint(\"babbage-similarity: \", len(babbage_similarity))\n\nbabbage_search_query = get_embedding(text, engine=\"text-search-babbage-query-001\")\nprint(\"search-babbage-query: \", len(babbage_search_query))\n\ncurie = get_embedding(text, engine=\"curie-similarity\")\nprint(\"curie-similarity: \", len(curie))\n\ndavinci = get_embedding(text, engine=\"text-similarity-davinci-001\")\nprint(\"davinci-similarity: \", len(davinci))\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">embedding-ada:  1536\nsimilarity-ada:  1024\nbabbage-similarity:  2048\nsearch-babbage-query:  2048\ncurie-similarity:  4096\ndavinci-similarity:  12288\n</code></pre><p>可以看到，最小的ada-similarity只有1024维，而最大的davinci-similarity则有12288维，所以它们的效果和价格不同也是可以理解的了。</p><h2>插入内容，GPT也可以像BERT</h2><p>我们前面介绍的时候说过，text-davinci-003 这个模型有个特殊的功能，就是“插入文本”（Inserting Text）。某种意义上来说，你也可以通过这个功能来做文本改写。</p><pre><code class=\"language-python\">prefix = \"\"\"在这个快节奏的现代社会中，我们每个人都面临着各种各样的挑战和困难。\n在这些挑战和困难中，有些是由外部因素引起的，例如经济萧条、全球变暖和自然灾害等。\\n\"\"\"\n# 还有一些是由内部因素引起的，例如情感问题、健康问题和自我怀疑等。\nsuffix = \"\"\"\\n面对这些挑战和困难，我们需要采取积极的态度和行动来克服它们。\n这意味着我们必须具备坚韧不拔的意志和创造性思维，以及寻求外部支持的能力。\n只有这样，我们才能真正地实现自己的潜力并取得成功。\"\"\"\n\ndef insert_text(prefix, suffix):\n    response = openai.Completion.create(\n        model=\"text-davinci-003\",\n        prompt=prefix,\n        suffix=suffix,\n        max_tokens=1024,\n        )\n    return response\n\nresponse = insert_text(prefix, suffix)\nprint(response[\"choices\"][0][\"text\"])\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">另一些是内部因素，例如事业难以发展、无法解决的个人和家庭矛盾等。\n</code></pre><p>可以看到，这个接口的使用，和普通的Completion接口基本一致，只有一个区别就是除了前缀的prompt参数之外，还需要一个后缀的suffix参数。</p><p>不过，对于插入内容，我们同样需要注意提示语。如果我们把上面的内容稍微改一改，比如去掉Suffix一开始的换行符号，插入的文本内容有些就会在我们的预期之外。</p><pre><code class=\"language-python\">prefix = \"\"\"在这个快节奏的现代社会中，我们每个人都面临着各种各样的挑战和困难。\n在这些挑战和困难中，有些是由外部因素引起的，例如经济萧条、全球变暖和自然灾害等。\\n\"\"\"\n# 还有一些是由内部因素引起的，例如情感问题、健康问题和自我怀疑等。\nsuffix = \"\"\"面对这些挑战和困难，我们需要采取积极的态度和行动来克服它们。\n这意味着我们必须具备坚韧不拔的意志和创造性思维，以及寻求外部支持的能力。\n只有这样，我们才能真正地实现自己的潜力并取得成功。\"\"\"\n\nresponse = insert_text(prefix, suffix)\nprint(response[\"choices\"][0][\"text\"])\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">例如，因应全球变暖，政府和人民在做出更加清晰的计划时就面临着巨大的压力，以减少大气污染和减少碳排放。\n更重要的是，每个人必须为自己所做的付出努力，以防止这些外部环境变化的不利影响。\n此外，也存在一些由内部因素引起的挑战和困难，比如心理问题，贫穷和学习困难。\n例如，一些人因为焦虑或抑郁症而无法集中精力，他们的学习能力受到了影响，从而影响了他们的学业成绩。\n再者，贫穷也是另一个棘手的话题，它影响了一个人的生活质量，从而阻碍了他们发展个人潜能的能力。\n因此，\n</code></pre><p>可以看到，AI一下子啰嗦了很多，并且最后一句不是个完整的句子，而是下句话开头的内容。所以，在使用这个INSERT接口的时候，考虑好文本之间需要使用什么样的分隔符，是非常重要的。</p><h2>不要乱问乱说，做个“正直”的AI</h2><p>接下来，我们介绍一下OpenAI对于自然语言处理提供的最后一个接口，也是唯一一个免费的接口——Moderate。因为OpenAI可以接受任何自然语言的输入，所有的回复也是通过模型自动生成的。一旦我们的产品依赖于它对外开放，免不了我们总会遇到一些用户输入一些奇怪的内容，比如色情、暴力等等。所以，OpenAI专门提供了一个moderate接口，可以让你对输入以及返回的内容做个检查。如果出现了这样的内容，你也可以屏蔽这些用户的访问，也可以人工审核一下用户的问题。</p><p>下面我们就来看个例子，这个接口怎么用。</p><pre><code class=\"language-python\">def chatgpt(text):\n    messages = []\n    messages.append( {\"role\": \"system\", \"content\": \"You are a useful AI assistant\"})\n    messages.append( {\"role\": \"user\", \"content\": text})\n    response = openai.ChatCompletion.create(\n        model=\"gpt-3.5-turbo\",\n        messages=messages,\n        temperature=0.5,\n        max_tokens=2048,\n        top_p=1,\n    )\n    message = response[\"choices\"][0][\"message\"][\"content\"]\n    return message\n\nthreaten = \"你不听我的我就拿刀砍死你\"\nprint(chatgpt(threaten))\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">很抱歉，我是一台人工智能助手，没有实体存在，也不会对任何人或事物造成伤害。同时，我也不会对任何不适当或暴力的言语做出回应。请尊重彼此，保持良好的沟通和交流方式。\n</code></pre><p>我们先对AI提了一句暴力威胁，可以看到，如果我们简单调用ChatGPT的API，它的返回并不是一个日常的对话，而是告知用户，不会回应暴力言论。</p><p>那我们接着把这句话发送到moderate的接口看看。</p><pre><code class=\"language-python\">threaten = \"你不听我的我就拿刀砍死你\"\n\ndef moderation(text):\n    response = openai.Moderation.create(\n        input=text\n    )\n    output = response[\"results\"][0]\n    return output\nprint(moderation(threaten))\n</code></pre><p>输出结果：</p><pre><code class=\"language-python\">{\n  \"categories\": {\n    \"hate\": false,\n    \"hate/threatening\": false,\n    \"self-harm\": false,\n    \"sexual\": false,\n    \"sexual/minors\": false,\n    \"violence\": true,\n    \"violence/graphic\": false\n  },\n  \"category_scores\": {\n    \"hate\": 0.030033664777874947,\n    \"hate/threatening\": 0.0002820899826474488,\n    \"self-harm\": 0.004850226454436779,\n    \"sexual\": 2.2907377569936216e-05,\n    \"sexual/minors\": 6.477687275463495e-09,\n    \"violence\": 0.9996402263641357,\n    \"violence/graphic\": 4.35576839663554e-05\n  },\n  \"flagged\": true\n}\n</code></pre><p>可以看到，moderate的接口返回的是一个JSON，里面包含是否应该对输入的内容进行标记的flag字段，也包括具体是什么类型的问题的categories字段，以及对应每个categories的分数的category_scores字段。我们举的这个例子就被标记成了violence，也就是暴力。</p><p>因为这个接口是免费的，所以你对所有的内容无论是输入还是输出，都可以去调用一下这个接口。而且，即使你不使用ChatGPT的AI功能，只是经营一个在线网站，你也可以把用户发送的内容拿给这个接口看一看，过滤掉那些不合适的内容。</p><h2>小结</h2><p>这节课我们对ChatGPT的API的基础功能做了一个收尾。我们一起来看了如何通过合适的提示语，进行文本改写。并且，深入了解了Completion接口里面的一些新参数，特别是其中的 logit_bias 参数，可以帮助我们在生成的内容里面，精确避免出现我们不希望出现的Token。我们也看到了，相同的内容，目前中文消耗的Token数量要远高于英文，所以除了最后的输出，其他的提示语在生产环境下我会建议你使用英文。</p><p>接着，我们一起来看了OpenAI到底提供了哪些模型，以及不同的模型适合拿来干什么。最后，我们体验了两个特殊的接口，一个是只有 text-davinci-003 模型支持的文本插入功能；另一个，则是帮助我们对色情、暴力等内容进行审核过滤的moderate接口。</p><p>到这里，课程的第一部分也就学习完了。我们已经过了一遍OpenAI的GPT模型的所有基本接口，以及如何利用这些接口完成最简单的功能。包括简单的文本处理的任务、聊天机器人、机器学习里的分类和聚类，以及文本改写和内容审核。有了这些基础知识，我们马上就要进入第二部分，就是怎么利用这些能力，开发属于自己的应用，特别是怎么和自己的专有数据结合起来。这也是这门课程中更精彩的一部分。</p><h2>课后练习</h2><p>你能尝试使用 <a href=\"https://time.geekbang.org/column/article/643915\">06 讲</a>里的Gradio和这一讲介绍的内容，尝试做一个文本改写的应用吗？另外，你可以试着直接把你的问题拆解一下，扔给ChatGPT看看它能否写出对应的代码。</p><p>期待能在评论区看到你的分享，也欢迎你把这节课分享给感兴趣的朋友，我们下一讲再见。</p>","comments":[{"had_liked":false,"id":371814,"user_name":"阿斌斯基","can_delete":false,"product_type":"c1","uid":1320988,"ip_address":"广东","ucode":"1E5B7717BD37A0","user_header":"https://static001.geekbang.org/account/avatar/00/14/28/1c/b7e3941c.jpg","comment_is_top":false,"comment_ctime":1680362322,"is_pvip":false,"replies":[{"id":135714,"content":"如果是公司的话，可以找 Azure 云的合作伙伴渠道。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680581449,"ip_address":"上海","comment_id":371814,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"gpt4.0 api加入waitlist好久了 没下文。有没有什么其他途径可以获取权限？","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612213,"discussion_content":"如果是公司的话，可以找 Azure 云的合作伙伴渠道。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680581449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373363,"user_name":"Z12","can_delete":false,"product_type":"c1","uid":1118159,"ip_address":"广东","ucode":"59F5E62F67FFDC","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/cf/bfa0dc80.jpg","comment_is_top":false,"comment_ctime":1682425767,"is_pvip":false,"replies":[{"id":136479,"content":"我最早是在这里 https:&#47;&#47;github.com&#47;openai&#47;openai-python&#47;issues&#47;304\n判断应该通过 p50k_base\n\n但是看了一下最新的文档，似乎应该用 cl100k_base\nhttps:&#47;&#47;github.com&#47;openai&#47;openai-cookbook&#47;blob&#47;main&#47;examples&#47;How_to_count_tokens_with_tiktoken.ipynb\n\n晚点我实验一下看是否需要修正。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1683086186,"ip_address":"上海","comment_id":373363,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"老师在这里通过 logit_bias 参数精确控制内容，我有一点不明白，这句话encoding = tiktoken.get_encoding(&#39;p50k_base&#39;)，你取的是p50k_base然后取获取灾害对应的token，这里好像有一个假设即tiktoken库中的p50k_base编码与OpenAI的GPT-3.5-turbo模型使用的编码相同，但是我并没有从资料中查出OpenAI的GPT-3.5-turbo使用的是&#39;p50k_base&#39;编码，但是你的输出结果中又确实过滤掉了灾害，这是巧合，还是？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616715,"discussion_content":"我最早是在这里 https://github.com/openai/openai-python/issues/304\n判断应该通过 p50k_base\n\n但是看了一下最新的文档，似乎应该用 cl100k_base\nhttps://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb\n\n晚点我实验一下看是否需要修正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683086186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372086,"user_name":"烧瓶小人","can_delete":false,"product_type":"c1","uid":3574671,"ip_address":"浙江","ucode":"255A29AFB58601","user_header":"https://static001.geekbang.org/account/avatar/00/36/8b/8f/6fcba5f3.jpg","comment_is_top":false,"comment_ctime":1680696690,"is_pvip":false,"replies":[{"id":135884,"content":"多搜索一下，有不少人贴了各种自己的解决方案\n可以通过修改 openai.api_base 来用第三方搭建的代理访问入口\n\n不过的确现在的访问限制是个门槛","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680974235,"ip_address":"日本","comment_id":372086,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"付费账号也被封了，有没有能自己能通过公布的模型搭建一个服务器的可能，不然课程完全是空中楼阁了","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612880,"discussion_content":"多搜索一下，有不少人贴了各种自己的解决方案\n可以通过修改 openai.api_base 来用第三方搭建的代理访问入口\n\n不过的确现在的访问限制是个门槛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680974235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1222233,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a6/59/1689ea0c.jpg","nickname":"金hb.Ryan 冷空氣駕到","note":"","ucode":"CAD363576696E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618786,"discussion_content":"知道为什么被封么? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684552731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374548,"user_name":"Geek_b7449f","can_delete":false,"product_type":"c1","uid":2957535,"ip_address":"日本","ucode":"07E7023A3ECD5A","user_header":"https://static001.geekbang.org/account/avatar/00/2d/20/df/55bacf31.jpg","comment_is_top":false,"comment_ctime":1684169800,"is_pvip":false,"replies":[{"id":136809,"content":"👍 一起加油","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1684725620,"ip_address":"新加坡","comment_id":374548,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"历时两个星期过了第一遍基础知识篇，收获很多很多，遇到问题能不问就不问，实在不行就问 gpt，自己一步一个坑，能踩得都踩了，因为额度被自己玩完了，甚至还办了一张万事通的信用卡，跟着老师多学点，进步收获真的会很多，下一个星期继续夯实下基础知识后，再去看下一部分，很感谢老师~","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618954,"discussion_content":"👍 一起加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684725620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372140,"user_name":"程序员半支烟","can_delete":false,"product_type":"c1","uid":1230837,"ip_address":"江苏","ucode":"23C7B588F400A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/c7/f5/108cd83b.jpg","comment_is_top":false,"comment_ctime":1680774476,"is_pvip":false,"replies":[{"id":135892,"content":"所有的代码都在 https:&#47;&#47;github.com&#47;xuwenhao&#47;geektime-ai-course","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680974593,"ip_address":"日本","comment_id":372140,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"这一节的代码的github地址，麻烦老师发一下，谢谢","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612888,"discussion_content":"所有的代码都在 https://github.com/xuwenhao/geektime-ai-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680974593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371729,"user_name":"Bonnenult丶凉煜","can_delete":false,"product_type":"c1","uid":1448629,"ip_address":"中国台湾","ucode":"9CF78FCAE98AC3","user_header":"https://static001.geekbang.org/account/avatar/00/16/1a/b5/9635696d.jpg","comment_is_top":false,"comment_ctime":1680236510,"is_pvip":false,"replies":[{"id":135738,"content":"最近好像OpenAI又封禁了一批账户，可以找周围的朋友看看是否有可以用的付费账户。","user_name":"作者回复","user_name_real":"编辑","uid":1053568,"ctime":1680583473,"ip_address":"上海","comment_id":371729,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"注册的账号没有免费额度，连最后免费的接口也不能调用qaq\n\nRateLimitError: You exceeded your current quota, please check your plan and billing details.","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612239,"discussion_content":"最近好像OpenAI又封禁了一批账户，可以找周围的朋友看看是否有可以用的付费账户。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680583473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1481283,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcEKI64IovCBe0XvmatsRjRI3AYdBzicjqHHWsDXb5vAG0V4rgg2Gv6XRFOfD6lMhDN9Eud6bRTqw/132","nickname":"Geek_71a740","note":"","ucode":"ABBE2C9927301C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611849,"discussion_content":"今天也试了一下，果然没有免费额度了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680357008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371710,"user_name":"Oli张帆","can_delete":false,"product_type":"c1","uid":1338098,"ip_address":"新加坡","ucode":"6E60A370C3C14A","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/f2/db90fa96.jpg","comment_is_top":false,"comment_ctime":1680225972,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"老师，最后讲的那个免费模型，真的是太好了，解决了一个大的问题","like_count":31},{"had_liked":false,"id":375179,"user_name":"石云升","can_delete":false,"product_type":"c1","uid":1024195,"ip_address":"广东","ucode":"78F1DD33EFD000","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/c3/c5db35df.jpg","comment_is_top":false,"comment_ctime":1685011956,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":2,"product_id":100541001,"comment_content":"presence_penalty 和 frequency_penalty 是 OpenAI GPT-3 API 中的两个参数，它们对模型生成的文本有影响。\n\npresence_penalty：这个参数决定了模型在生成新的文本时，对于新颖或不常见的词语的偏好程度。如果将其设置得更高，模型就更倾向于使用它不常见的词语。例如，如果你设置了较高的presence_penalty，模型可能会选择“他赞扬了我，就像一只鸟儿在春天的清晨歌唱”，而不是简单的“他赞扬了我”。\n\nfrequency_penalty：这个参数控制了模型对于频繁出现的词语的偏好程度。如果将其设置得更高，模型就更倾向于避免使用频繁出现的词语。例如，如果你设置了较高的frequency_penalty，模型可能会选择“他赞扬了我，就像一只鸟儿在春天的清晨歌唱”，而不是重复的“他赞扬了我，他赞扬了我”。\n\n这两个参数的范围都是0.0到1.0。默认情况下，这两个参数的值都是0.0，意味着模型不会对新颖或频繁的词语有任何偏好。\n\n注意，这两个参数的设置并不保证模型一定会按照你期望的方式生成文本，但可以在一定程度上影响模型的输出。","like_count":1},{"had_liked":false,"id":394947,"user_name":"coderlee","can_delete":false,"product_type":"c1","uid":1027564,"ip_address":"福建","ucode":"09569C08693514","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ad/ec/406130f3.jpg","comment_is_top":false,"comment_ctime":1728886799,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"比较晚，在2024年10月份才开始学习老师的课程，跟了基础知识篇下来，对于大模型可以说是有了一些基础的认知。老师写的demo应该是比较早的，有蛮多，如果直接pip install openai，是需要适配成现在的api。如果不修改demo的话，需要指定openai的版本，由于我是个刚接触的新手，所以这里我采用了 !pip install openai==0.28 来完美运行老师提供的demo。","like_count":0},{"had_liked":false,"id":394811,"user_name":"Mamba","can_delete":false,"product_type":"c1","uid":1475049,"ip_address":"湖北","ucode":"8B3EC90736B8EB","user_header":"https://static001.geekbang.org/account/avatar/00/16/81/e9/d131dd81.jpg","comment_is_top":false,"comment_ctime":1728459802,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100541001,"comment_content":"目前的版本查看openai的模型\nfrom openai import OpenAI\nclient = OpenAI()\nimport pandas as pd\n# list all open ai models\nmodels = client.models.list()\ndata =[[model.id,model.created,model.object,model.owned_by] for model in models.data]\ndf = pd.DataFrame(data, columns=[&#39;id&#39;, &#39;created&#39;, &#39;object&#39;, &#39;owned_by&#39;])\ndisplay(df[[&#39;id&#39;, &#39;owned_by&#39;]])\n\n以及chat.completion接口\ndef make_text_short(text):\n    messages = []\n    messages.append( {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;你是一个用来将文本改写得短的AI助手，用户输入一段文本，你给出一段意思相同，但是短小精悍的结果&quot;})\n    messages.append( {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: text})\n    response = client.chat.completions.create(\n        model=&quot;gpt-4o-mini&quot;,\n        messages=messages,\n        temperature=0.5,\n        max_tokens=2048,\n        presence_penalty=0,\n        frequency_penalty=2,\n        n=3,\n    )\n    return response\nlong_text = &quot;&quot;&quot;\n在这个快节奏的现代社会中，我们每个人都面临着各种各样的挑战和困难。\n在这些挑战和困难中，有些是由外部因素引起的，例如经济萧条、全球变暖和自然灾害等。\n还有一些是由内部因素引起的，例如情感问题、健康问题和自我怀疑等。\n面对这些挑战和困难，我们需要采取积极的态度和行动来克服它们。\n这意味着我们必须具备坚韧不拔的意志和创造性思维，以及寻求外部支持的能力。\n只有这样，我们才能真正地实现自己的潜力并取得成功。\n&quot;&quot;&quot;\nshort_version = make_text_short(long_text)\nindex = 1\nfor choice in short_version.choices:\n    print(f&quot;version {index}: &quot; + choice.message.content)\n    index += 1\n获取内容需要遵循json格式","like_count":0},{"had_liked":false,"id":388714,"user_name":"茂松","can_delete":false,"product_type":"c1","uid":1052375,"ip_address":"广东","ucode":"458A6FBC49C48E","user_header":"https://static001.geekbang.org/account/avatar/00/10/0e/d7/7d7579c1.jpg","comment_is_top":false,"comment_ctime":1710763521,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"COMPLETION_MODEL = &quot;gtp-3.5-turbo&quot;\n\ndef generate_data_by_prompt(prompt):\n      response = openai.chat.completions.create(\n           model = COMPLETION_MODEL,\n           messages = [{&quot;role&quot;:&quot;user&quot;, &quot;content&quot;:prompt}],\n           temperature=0.5,\n           max_tokens=2048,\n           top_p=1,\n   )\n   return response.choices[0].message.content","like_count":0},{"had_liked":false,"id":388632,"user_name":"茂松","can_delete":false,"product_type":"c1","uid":1052375,"ip_address":"广东","ucode":"458A6FBC49C48E","user_header":"https://static001.geekbang.org/account/avatar/00/10/0e/d7/7d7579c1.jpg","comment_is_top":false,"comment_ctime":1710519117,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"openai.chat.completions.create()","like_count":0},{"had_liked":false,"id":388603,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"广东","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1710466162,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"不操作一遍，看不下去了。只能先过一遍","like_count":0},{"had_liked":false,"id":379522,"user_name":"Zachary","can_delete":false,"product_type":"c1","uid":2497600,"ip_address":"广东","ucode":"7A3C1DC8B4F629","user_header":"https://static001.geekbang.org/account/avatar/00/26/1c/40/9fde5f9b.jpg","comment_is_top":false,"comment_ctime":1692064132,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"输入 1000 个 Token 需要 0.03 美分，生成 1000 个 Token 则需要 0.06 美分。\n---\n好像是3美分、6美分，0.03美元、0.06美元","like_count":0},{"had_liked":false,"id":379017,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"广东","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":false,"comment_ctime":1691139389,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"用GPT生成了一个“文本生成应用”的代码，测试可用，分享如下：\nimport openai\nimport os\nimport gradio as gr\n\n# 设置你的API密钥\nopenai.api_key = os.getenv(&quot;OPENAI_API_KEY&quot;)\n\ndef generate_text(prefix: str, suffix: str) -&gt; str:\n    response = openai.Completion.create(\n        model=&quot;text-davinci-003&quot;,\n        prompt=prefix,\n        suffix=suffix,\n        max_tokens=1024,\n    )\n    return response[&quot;choices&quot;][0][&quot;text&quot;]\n\n# 定义Gradio接口\niface = gr.Interface(\n    fn=generate_text,\n    inputs=[gr.inputs.Textbox(lines=10, label=&quot;Prefix&quot;), \n            gr.inputs.Textbox(lines=10, label=&quot;Suffix&quot;)],\n    outputs=gr.outputs.Textbox(),\n)\n\n# 启动Gradio接口\niface.launch()\n#以上的代码将在一个新的浏览器窗口中启动一个Web应用。你可以在&quot;Prefix&quot;和&quot;Suffix&quot;的输入框中输入文本，然后点击&quot;Submit&quot;按钮来生成文本。","like_count":0},{"had_liked":false,"id":379016,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"广东","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":false,"comment_ctime":1691139341,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"让GPT帮生成了一个“文本生成应用”，测试可用。\nimport openai\nimport os\nimport gradio as gr\n\n# 设置你的API密钥\nopenai.api_key = os.getenv(&quot;OPENAI_API_KEY&quot;)\n\ndef generate_text(prefix: str, suffix: str) -&gt; str:\n    response = openai.Completion.create(\n        model=&quot;text-davinci-003&quot;,\n        prompt=prefix,\n        suffix=suffix,\n        max_tokens=1024,\n    )\n    return response[&quot;choices&quot;][0][&quot;text&quot;]\n\n# 定义Gradio接口\niface = gr.Interface(\n    fn=generate_text,\n    inputs=[gr.inputs.Textbox(lines=10, label=&quot;Prefix&quot;), \n            gr.inputs.Textbox(lines=10, label=&quot;Suffix&quot;)],\n    outputs=gr.outputs.Textbox(),\n)\n\n# 启动Gradio接口\niface.launch()\n#以上的代码将在一个新的浏览器窗口中启动一个Web应用。你可以在&quot;Prefix&quot;和&quot;Suffix&quot;的输入框中输入文本，然后点击&quot;Submit&quot;按钮来生成文本。","like_count":0},{"had_liked":false,"id":379015,"user_name":"Penguin Shi","can_delete":false,"product_type":"c1","uid":3646806,"ip_address":"广东","ucode":"477A24D7ECE09A","user_header":"https://static001.geekbang.org/account/avatar/00/37/a5/56/b3cf71a9.jpg","comment_is_top":false,"comment_ctime":1691139172,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"我让GPT帮助生成了“一个文本改写的应用”，测试了是能使用的。现在这个时代，真是绝好的时代。\nimport openai\nimport os\nimport gradio as gr\n\n# 设置你的API密钥\nopenai.api_key = os.getenv(&quot;OPENAI_API_KEY&quot;)\n\ndef generate_text(prefix: str, suffix: str) -&gt; str:\n    response = openai.Completion.create(\n        model=&quot;text-davinci-003&quot;,\n        prompt=prefix,\n        suffix=suffix,\n        max_tokens=1024,\n    )\n    return response[&quot;choices&quot;][0][&quot;text&quot;]\n\n# 定义Gradio接口\niface = gr.Interface(\n    fn=generate_text,\n    inputs=[gr.inputs.Textbox(lines=10, label=&quot;Prefix&quot;), \n            gr.inputs.Textbox(lines=10, label=&quot;Suffix&quot;)],\n    outputs=gr.outputs.Textbox(),\n)\n\n# 启动Gradio接口\niface.launch()\n#以上的代码将在一个新的浏览器窗口中启动一个Web应用。你可以在&quot;Prefix&quot;和&quot;Suffix&quot;的输入框中输入文本，然后点击&quot;Submit&quot;按钮来生成文本。","like_count":0},{"had_liked":false,"id":378441,"user_name":"小理想。","can_delete":false,"product_type":"c1","uid":2238528,"ip_address":"北京","ucode":"EDC35A907570DB","user_header":"https://static001.geekbang.org/account/avatar/00/22/28/40/82d748e6.jpg","comment_is_top":false,"comment_ctime":1690265848,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100541001,"comment_content":"prefix = &quot;&quot;&quot;在这个快节奏的现代社会中，我们每个人都面临着各种各样的挑战和困难。\n在这些挑战和困难中，有些是由外部因素引起的，例如经济萧条、全球变暖和自然灾害等。\\n&quot;&quot;&quot;\n# 还有一些是由内部因素引起的，例如情感问题、健康问题和自我怀疑等。\nsuffix = &quot;&quot;&quot;面对这些挑战和困难，我们需要采取积极的态度和行动来克服它们。\n这意味着我们必须具备坚韧不拔的意志和创造性思维，以及寻求外部支持的能力。\n只有这样，我们才能真正地实现自己的潜力并取得成功。&quot;&quot;&quot;\n\nresponse = insert_text(prefix, suffix)\nprint(response[&quot;choices&quot;][0][&quot;text&quot;])\n\n返回结果居然是对的，没有分隔符的情况下返回的也是对的，返回这个而其他的则来自我们内部的因素，如心理阻碍、缺乏信心和信念等。\n要","like_count":0},{"had_liked":false,"id":371756,"user_name":"Ethan New","can_delete":false,"product_type":"c1","uid":2063962,"ip_address":"浙江","ucode":"9CA2EF39E58030","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7e/5a/da39f489.jpg","comment_is_top":false,"comment_ctime":1680274471,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":4,"score":3,"product_id":100541001,"comment_content":"学习打卡，期待下一部分的内容","like_count":0}]}