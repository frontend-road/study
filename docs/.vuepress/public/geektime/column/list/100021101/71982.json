{"id":71982,"title":"05 | 卡顿优化（上）：你要掌握的卡顿分析方法","content":"<p>“我的后羿怎么动不了！”，在玩《王者荣耀》的时候最怕遇到团战时卡得跟幻灯片一样。对于应用也是这样，我们经常会听到用户抱怨：“这个应用启动怎么那么慢？”“滑动的时候怎么那么卡？”。</p><p>对用户来说，内存占用高、耗费电量、耗费流量可能不容易被发现，但是用户对卡顿特别敏感，很容易直观感受到。另一方面，对于开发者来说，卡顿问题又非常难以排查定位，产生的原因错综复杂，跟CPU、内存、磁盘I/O都可能有关，跟用户当时的系统环境也有很大关系。</p><p>那到底该如何定义卡顿呢？在本地有哪些工具可以帮助我们更好地发现和排查问题呢？这些工具之间的差异又是什么呢？今天我来帮你解决这些困惑。</p><h2>基础知识</h2><p>在具体讲卡顿工具前，你需要了解一些基础知识，它们主要都和CPU相关。造成卡顿的原因可能有千百种，不过最终都会反映到<strong>CPU时间</strong>上。我们可以把CPU时间分为两种：用户时间和系统时间。用户时间就是执行用户态应用程序代码所消耗的时间；系统时间就是执行内核态系统调用所消耗的时间，包括I/O、锁、中断以及其他系统调用的时间。</p><p><strong>1. CPU性能</strong></p><p>我们先来简单讲讲CPU的性能，考虑到功耗、体积这些因素，移动设备和PC的CPU会有不少的差异。但近年来，手机CPU的性能也在向PC快速靠拢，华为Mate 20的“麒麟980”和iPhone XS的“A12”已经率先使用领先PC的7纳米工艺。</p><!-- [[[read_end]]] --><p>评价一个CPU的性能，需要看主频、核心数、缓存等参数，具体表现出来的是计算能力和指令执行能力，也就是每秒执行的浮点计算数和每秒执行的指令数。</p><p>当然还要考虑到架构问题， “麒麟980”采用三级能效架构，2个2.6GHz主频的A76超大核 + 2个1.92GHz主频的A76大核 + 4个1.8GHz主频的A55小核。相比之下，“A12”使用2个性能核心 + 4个能效核心的架构，这样设计主要是为了在日常低负荷工作时，使用低频核心更加节省电量。在开发过程中，我们可以通过下面的方法获得设备的CPU信息。</p><pre><code>// 获取 CPU 核心数\ncat /sys/devices/system/cpu/possible  \n\n// 获取某个 CPU 的频率\ncat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq\n</code></pre><p>随着机器学习的兴起，现代芯片不仅带有强大的GPU，还配备了专门为神经网络计算打造的NPU（Neural network Processing Unit）。“A12”就使用了八核心的NPU，每秒可执行五万亿次运算。<strong>从CPU到GPU再到AI芯片，随着手机CPU 整体性能的飞跃，医疗诊断、图像超清化等一些AI应用场景也可以在移动端更好地落地。最近边缘计算也越来越多的被提及，我们希望可以更大程度地利用移动端的计算能力来降低高昂的服务器成本。</strong></p><p>也因此在开发过程中，我们需要根据设备CPU性能来“看菜下饭”，例如线程池使用线程数根据CPU的核心数，一些高级的AI功能只在主频比较高或者带有NPU的设备开启。</p><p>拓展了那么多再回到前面我讲的CPU时间，也就是用户时间和系统时间。当出现卡顿问题的时候，应该怎么去区分究竟是我们代码的问题，还是系统的问题？用户时间和系统时间可以给我们哪些线索？这里还要集合两个非常重要的指标，可以帮助我们做判断。</p><p><strong>2. 卡顿问题分析指标</strong></p><p>出现卡顿问题后，首先我们应该查看<strong>CPU的使用率</strong>。怎么查呢？我们可以通过<code>/proc/stat</code>得到整个系统的CPU使用情况，通过<code>/proc/[pid]/stat</code>可以得到某个进程的CPU使用情况。</p><p>关于stat文件各个属性的含义和CPU使用率的计算，你可以阅读<a href=\"http://www.samirchen.com/linux-cpu-performance/\">《Linux环境下进程的CPU占用率》</a>和<a href=\"http://man7.org/linux/man-pages/man5/proc.5.html\">Linux文档</a>。其中比较重要的字段有：</p><pre><code>proc/self/stat:\n  utime:       用户时间，反应用户代码执行的耗时  \n  stime:       系统时间，反应系统调用执行的耗时\n  majorFaults：需要硬盘拷贝的缺页次数\n  minorFaults：无需硬盘拷贝的缺页次数\n</code></pre><p>如果CPU使用率长期大于60% ，表示系统处于繁忙状态，就需要进一步分析用户时间和系统时间的比例。对于普通应用程序，系统时间不会长期高于30%，如果超过这个值，我们就应该进一步检查是I/O过多，还是其他的系统调用问题。</p><p>Android是站在Linux巨人的肩膀上，虽然做了不少修改也砍掉了一些工具，但还是保留了很多有用的工具可以协助我们更容易地排查问题，这里我给你介绍几个常用的命令。例如，<strong>top命令</strong>可以帮助我们查看哪个进程是CPU的消耗大户；<strong>vmstat命令</strong>可以实时动态监视操作系统的虚拟内存和CPU活动；<strong>strace命令</strong>可以跟踪某个进程中所有的系统调用。</p><p>除了CPU的使用率，我们还需要查看<strong>CPU饱和度</strong>。CPU饱和度反映的是线程排队等待CPU的情况，也就是CPU的负载情况。</p><p>CPU饱和度首先会跟应用的线程数有关，如果启动的线程过多，容易导致系统不断地切换执行的线程，把大量的时间浪费在上下文切换，我们知道每一次CPU上下文切换都需要刷新寄存器和计数器，至少需要几十纳秒的时间。</p><p>我们可以通过使用<code>vmstat</code>命令或者<code>/proc/[pid]/schedstat</code>文件来查看CPU上下文切换次数，这里特别需要注意<code>nr_involuntary_switches</code>被动切换的次数。</p><pre><code>proc/self/sched:\n  nr_voluntary_switches：     \n  主动上下文切换次数，因为线程无法获取所需资源导致上下文切换，最普遍的是IO。    \n  nr_involuntary_switches：   \n  被动上下文切换次数，线程被系统强制调度导致上下文切换，例如大量线程在抢占CPU。\n  se.statistics.iowait_count：IO 等待的次数\n  se.statistics.iowait_sum：  IO 等待的时间\n</code></pre><p>此外也可以通过uptime命令可以检查CPU在1分钟、5分钟和15分钟内的平均负载。比如一个4核的CPU，如果当前平均负载是8，这意味着每个CPU上有一个线程在运行，还有一个线程在等待。一般平均负载建议控制在“0.7 × 核数”以内。</p><pre><code>00:02:39 up 7 days, 46 min,  0 users,  \nload average: 13.91, 14.70, 14.32\n</code></pre><p>另外一个会影响CPU饱和度的是线程优先级，线程优先级会影响Android系统的调度策略，它主要由nice和cgroup类型共同决定。nice值越低，抢占CPU时间片的能力越强。当CPU空闲时，线程的优先级对执行效率的影响并不会特别明显，但在CPU繁忙的时候，线程调度会对执行效率有非常大的影响。</p><p><img src=\"https://static001.geekbang.org/resource/image/52/0b/526d72f3dbc70ef45c00e7c0e7bdd80b.png?wh=1502*902\" alt=\"\"></p><p>关于线程优先级，你需要注意<strong>是否存在高优先级的线程空等低优先级线程，例如主线程等待某个后台线程的锁</strong>。从应用程序的角度来看，无论是用户时间、系统时间，还是等待CPU的调度，都是程序运行花费的时间。</p><h2>Android卡顿排查工具</h2><p>可能你会觉得按照上面各种Linux命令组合来排查问题太麻烦了，有没有更简单的、图形化的操作界面呢？Traceview和systrace都是我们比较熟悉的排查卡顿的工具，从实现上这些工具分为两个流派。</p><p>第一个流派是instrument。获取一段时间内所有函数的调用过程，可以通过分析这段时间内的函数调用流程，再进一步分析待优化的点。</p><p>第二个流派是sample。有选择性或者采用抽样的方式观察某些函数调用过程，可以通过这些有限的信息推测出流程中的可疑点，然后再继续细化分析。</p><p>这两种流派有什么差异？我们在什么场景应该选择哪种合适的工具呢？还有没有其他有用的工具可以使用呢？下面我们一一来看。</p><p><strong>1. Traceview</strong></p><p><a href=\"http://developer.android.com/studio/profile/generate-trace-logs\">Traceview</a>是我第一个使用的性能分析工具，也是吐槽的比较多的工具。它利用Android Runtime函数调用的event事件，将函数运行的耗时和调用关系写入trace文件中。</p><p>由此可见，Traceview属于instrument类型，它可以用来查看整个过程有哪些函数调用，但是工具本身带来的性能开销过大，有时无法反映真实的情况。比如一个函数本身的耗时是1秒，开启Traceview后可能会变成5秒，而且这些函数的耗时变化并不是成比例放大。</p><p>在Android 5.0之后，新增了<code>startMethodTracingSampling</code>方法，可以使用基于样本的方式进行分析，以减少分析对运行时的性能影响。新增了sample类型后，就需要我们在开销和信息丰富度之间做好权衡。</p><p><img src=\"https://static001.geekbang.org/resource/image/4b/f5/4b0b688b5248aa2e018f7841b5834cf5.png?wh=1582*1080\" alt=\"\"></p><p>无论是哪种的Traceview对release包支持的都不太好，例如无法反混淆。其实trace文件的格式十分简单，之前曾经写个一个小工具，支持通过mapping文件反混淆trace。</p><p><strong>2. Nanoscope</strong></p><p>那在instrument类型的性能分析工具里，有没有性能损耗比较小的呢？</p><p>答案是有的，Uber开源的<a href=\"http://github.com/uber/nanoscope\">Nanoscope</a>就能达到这个效果。它的实现原理是直接修改Android虚拟机源码，在<code>ArtMethod</code>执行入口和执行结束位置增加埋点代码，将所有的信息先写到内存，等到trace结束后才统一生成结果文件。</p><p>在使用过程可以明显感觉到应用不会因为开启Nanoscope而感到卡顿，但是trace结束生成结果文件这一步需要的时间比较长。<strong>另一方面它可以支持分析任意一个应用，可用于做竞品分析。</strong></p><p>但是它也有不少限制：</p><ul>\n<li>\n<p>需要自己刷ROM，并且当前只支持Nexus 6P，或者采用其提供的x86架构的模拟器。</p>\n</li>\n<li>\n<p>默认只支持主线程采集，其他线程需要<a href=\"http://github.com/uber/nanoscope/wiki/Architecture%3A-Nanoscope-ROM#java-api\">代码手动设置</a>。考虑到内存大小的限制，每个线程的内存数组只能支持大约20秒左右的时间段。</p>\n</li>\n</ul><p>Uber写了一系列自动化脚本协助整个流程，使用起来还算简单。Nanoscope作为基本没有性能损耗的instrument工具，它非常适合做启动耗时的自动化分析。</p><p>Nanoscope生成的是符合Chrome tracing规范的HTML文件。我们可以通过脚本来实现两个功能：</p><p>第一个是反混淆。通过mapping自动反混淆结果文件。</p><p>第二个是自动化分析。传入相同的起点和终点，实现两个结果文件的diff，自动分析差异点。</p><p>这样我们可以每天定期去跑自动化启动测试，查看是否存在新增的耗时点。<strong>我们有时候为了实现更多定制化功能或者拿到更加丰富的信息，这个时候不得不使用定制ROM的方式。而Nanoscope恰恰是一个很好的工具，可以让我们更方便地实现定制ROM，在后面启动和I/O优化里我还会提到更多类似的案例。</strong></p><p><strong>3. systrace</strong></p><p><a href=\"http://source.android.com/devices/tech/debug/systrace?hl=zh-cn\">systrace</a>是Android 4.1新增的性能分析工具。我通常使用systrace跟踪系统的I/O操作、CPU负载、Surface渲染、GC等事件。</p><p>systrace利用了Linux的<a href=\"http://source.android.com/devices/tech/debug/ftrace\">ftrace</a>调试工具，相当于在系统各个关键位置都添加了一些性能探针，也就是在代码里加了一些性能监控的埋点。Android在ftrace的基础上封装了<a href=\"http://android.googlesource.com/platform/frameworks/native/+/master/cmds/atrace/atrace.cpp\">atrace</a>，并增加了更多特有的探针，例如Graphics、Activity Manager、Dalvik VM、System Server等。</p><p>systrace工具只能监控特定系统调用的耗时情况，所以它是属于sample类型，而且性能开销非常低。但是它不支持应用程序代码的耗时分析，所以在使用时有一些局限性。</p><p>由于系统预留了<code>Trace.beginSection</code>接口来监听应用程序的调用耗时，那我们有没有办法在systrace上面自动增加应用程序的耗时分析呢？</p><p>划重点了，我们可以通过<strong>编译时给每个函数插桩</strong>的方式来实现，也就是在重要函数的入口和出口分别增加<code>Trace.beginSection</code>和<code>Trace.endSection</code>。当然出于性能的考虑，我们会过滤大部分指令数比较少的函数，这样就实现了在systrace基础上增加应用程序耗时的监控。通过这样方式的好处有：</p><ul>\n<li>\n<p>可以看到整个流程系统和应用程序的调用流程。包括系统关键线程的函数调用，例如渲染耗时、线程锁，GC耗时等。</p>\n</li>\n<li>\n<p>性能损耗可以接受。由于过滤了大部分的短函数，而且没有放大I/O，所以整个运行耗时不到原来的两倍，基本可以反映真实情况。</p>\n</li>\n</ul><p>systrace生成的也是HTML格式的结果，我们利用跟Nanoscope相似方式实现对反混淆的支持。</p><p><img src=\"https://static001.geekbang.org/resource/image/12/15/127526ef09381587f48fb16187b91715.jpg?wh=1920*490\" alt=\"\"></p><p><strong>4. Simpleperf</strong></p><p>那如果我们想分析Native函数的调用，上面的三个工具都不能满足这个需求。</p><p>Android 5.0新增了<a href=\"http://android.googlesource.com/platform/system/extras/+/master/simpleperf/doc/README.md\">Simpleperf</a>性能分析工具，它利用CPU的性能监控单元（PMU）提供的硬件perf事件。使用Simpleperf可以看到所有的Native代码的耗时，有时候一些Android系统库的调用对分析问题有比较大的帮助，例如加载dex、verify class的耗时等。</p><p>Simpleperf同时封装了systrace的监控功能，通过Android几个版本的优化，现在Simpleperf比较友好地支持Java代码的性能分析。具体来说分几个阶段：</p><p>第一个阶段：在Android M和以前，Simpleperf不支持Java代码分析。</p><p>第二个阶段：在Android O和以前，需要手动指定编译OAT文件。</p><p>第三个阶段：在Android P和以后，无需做任何事情，Simpleperf就可以支持Java代码分析。</p><p>从这个过程可以看到Google还是比较看重这个功能，在Android Studio 3.2也在Profiler中直接支持Simpleperf。</p><p>顾名思义，从名字就能看出Simpleperf是属于sample类型，它的性能开销非常低，使用火焰图展示分析结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/de/5f/de8b2064c4fee25166602781fbff915f.jpg?wh=1920*822\" alt=\"\"></p><p>目前除了Nanoscope之外的三个工具都只支持debugable的应用程序，如果想测试release包，需要将测试机器root。对于这个限制，我们在实践中会专门打出debugable的测试包，然后自己实现针对mapping的反混淆功能。<strong>其中Simpleperf的反混淆比较难实现，因为在函数聚合后会抛弃参数，无法直接对生成的HTML文件做处理</strong>。当然我们也可以根据各个工具的实现思路，自己重新打造一套支持非debugable的自动化测试工具。</p><p><strong>选择哪种工具，需要看具体的场景。我来汇总一下，如果需要分析Native代码的耗时，可以选择Simpleperf；如果想分析系统调用，可以选择systrace；如果想分析整个程序执行流程的耗时，可以选择Traceview或者插桩版本的systrace。</strong></p><h2>可视化方法</h2><p>随着Android版本的演进，Google不仅提供了更多的性能分析工具，而且也在慢慢优化现有工具的体验，使功能更强大、使用门槛更低。而Android Studio则肩负另外一个重任，那就是让开发者使用起来更加简单的，图形界面也更加直观。</p><p>在Android Studio 3.2的Profiler中直接集成了几种性能分析工具，其中：</p><ul>\n<li>\n<p>Sample Java Methods的功能类似于Traceview的sample类型。</p>\n</li>\n<li>\n<p>Trace Java Methods的功能类似于Traceview的instrument类型。</p>\n</li>\n<li>\n<p>Trace System Calls的功能类似于systrace。</p>\n</li>\n<li>\n<p>SampleNative  (API Level 26+) 的功能类似于Simpleperf。</p>\n</li>\n</ul><p>坦白来说，Profiler界面在某些方面不如这些工具自带的界面，支持配置的参数也不如命令行，不过Profiler的确大大降低了开发者的使用门槛。</p><p>另外一个比较大的变化是分析结果的展示方式，这些分析工具都支持了Call Chart和Flame Chart两种展示方式。下面我来讲讲这两种展示方式适合的场景。</p><p><strong>1. Call Chart</strong></p><p>Call Chart是Traceview和systrace默认使用的展示方式。它按照应用程序的函数执行顺序来展示，适合用于分析整个流程的调用。举一个最简单的例子，A函数调用B函数，B函数调用C函数，循环三次，就得到了下面的Call Chart。</p><p><img src=\"https://static001.geekbang.org/resource/image/db/3e/db3612f661d29efe59854df2e6c2383e.jpg?wh=2824*904\" alt=\"\"></p><p>Call Chart就像给应用程序做一个心电图，我们可以看到在这一段时间内，各个线程的具体工作，比如是否存在线程间的锁、主线程是否存在长时间的I/O操作、是否存在空闲等。</p><p><strong>2. Flame Chart</strong></p><p>Flame Chart也就是大名鼎鼎的<a href=\"http://www.brendangregg.com/flamegraphs.html\">火焰图</a>。它跟Call Chart不同的是，Flame Chart以一个全局的视野来看待一段时间的调用分布，它就像给应用程序拍X光片，可以很自然地把时间和空间两个维度上的信息融合在一张图上。上面函数调用的例子，换成火焰图的展示结果如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/01/6ca232173daf9e71f06ac22252d65d01.jpg?wh=1736*784\" alt=\"\"></p><p>当我们不想知道应用程序的整个调用流程，只想直观看出哪些代码路径花费的CPU时间较多时，火焰图就是一个非常好的选择。例如，之前我的一个反序列化实现非常耗时，通过火焰图发现耗时最多的是大量Java字符串的创建和拷贝，通过将核心实现转为Native，最终使性能提升了很多倍。</p><p>火焰图还可以使用在各种各样的维度，例如内存、I/O的分析。有些内存可能非常缓慢地泄漏，通过一个内存的火焰图，我们就知道哪些路径申请的内存最多，有了火焰图我们根本不需要分析源代码，也不需要分析整个流程。</p><p>最后我想说，每个工具都可以生成不同的展示方式，我们需要根据不同的使用场景选择合适的方式。</p><h2>总结</h2><p>在写今天的文章，也就是分析卡顿的基础知识和四种Android卡顿排查工具时，我越发觉得底层基础知识的重要性。Android底层基于Linux内核，像systrace、Simpleperf也是利用Linux提供的机制实现，因此学习一些Linux的基础知识，对于理解这些工具的工作原理以及排查性能问题，都有很大帮助。</p><p>另一方面，虽然很多大厂有专门的性能优化团队，但我觉得鼓励和培养团队里的每一个人都去关注性能问题更加重要。我们在使用性能工具的同时，要学会思考，应该知道它们的原理和局限性。更进一步来说，你还可以尝试去为这些工具做一些优化，从而实现更加完善的方案。</p><h2>课后作业</h2><p>当发生ANR的时候，Android系统会打印CPU相关的信息到日志中，使用的是<a href=\"http://androidxref.com/9.0.0_r3/xref/frameworks/base/core/java/com/android/internal/os/ProcessCpuTracker.java\">ProcessCpuTracker.java</a>。但是这样好像并没有权限可以拿到其他应用进程的CPU信息，那能不能换一个思路？</p><p>当发现应用的某个进程CPU使用率比较高的时候，可以通过下面几个文件检查该进程下各个线程的CPU使用率，继而统计出该进程各个线程的时间占比。</p><pre><code>/proc/[pid]/stat             // 进程CPU使用情况\n/proc/[pid]/task/[tid]/stat  // 进程下面各个线程的CPU使用情况\n/proc/[pid]/sched            // 进程CPU调度相关\n/proc/loadavg                // 系统平均负载，uptime命令对应文件\n</code></pre><p>如果线程销毁了，它的CPU运行信息也会被删除，所以我们一般只会计算某一段时间内CPU使用率。下面是计算5秒间隔内一个Sample进程的CPU使用示例。<strong>有的时候可能找不到耗时的线程，有可能是有大量生命周期很短的线程，这个时候可以把时间间隔缩短来看看。</strong></p><pre><code>usage: CPU usage 5000ms(from 23:23:33.000 to 23:23:38.000):\nSystem TOTAL: 2.1% user + 16% kernel + 9.2% iowait + 0.2% irq + 0.1% softirq + 72% idle\nCPU Core: 8\nLoad Average: 8.74 / 7.74 / 7.36\n\nProcess:com.sample.app \n  50% 23468/com.sample.app(S): 11% user + 38% kernel faults:4965\n\nThreads:\n  43% 23493/singleThread(R): 6.5% user + 36% kernel faults：3094\n  3.2% 23485/RenderThread(S): 2.1% user + 1% kernel faults：329\n  0.3% 23468/.sample.app(S): 0.3% user + 0% kernel faults：6\n  0.3% 23479/HeapTaskDaemon(S): 0.3% user + 0% kernel faults：982\n  ...\n</code></pre><p><span class=\"orange\">今天的课后作业是，请你在留言区解读一下上面的信息，分享一下你认为这个示例的瓶颈在什么地方。</span>之后能不能更进一步，自己动手写一个工具，得到一段时间内上面的这些统计信息。同样最终的实现可以通过向<a href=\"http://github.com/AndroidAdvanceWithGeektime/Chapter05\">Sample</a>发送Pull Request。</p><p>欢迎你点击“请朋友读”，把今天的内容分享给好友，邀请他一起学习。最后别忘了在评论区提交今天的作业，我也为认真完成作业的同学准备了丰厚的“学习加油礼包”，期待与你一起切磋进步哦。</p>","comments":[{"had_liked":false,"id":49553,"user_name":"刘伟","can_delete":false,"product_type":"c1","uid":1317862,"ip_address":"","ucode":"B62EF9B5E0C8E1","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/e6/6a88c8a3.jpg","comment_is_top":false,"comment_ctime":1544711800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"366616931960","product_id":100021101,"comment_content":"高级的东西看的越多，越觉得Android高深的东西都是在Andriod之外的~","like_count":86},{"had_liked":false,"id":48776,"user_name":"志伟","can_delete":false,"product_type":"c1","uid":1013422,"ip_address":"","ucode":"AD6698E01B08A4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/ae/d6f40a9b.jpg","comment_is_top":false,"comment_ctime":1544535090,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"353731853362","product_id":100021101,"comment_content":"8核cpu，平均负载8，idle时间去到72%，说明应用运行中系统CPU性能有很大的盈余。<br>sample应用时间分布大头在kernel，细分看线程，SingleThread是主要耗时线程，并且共发生了3094次缺页异常(faults字段)。缺页异常的处理是在内核空间，也解释了kernel 耗时大头的原因，而这里做的操作就是读写磁盘。猜测可能是很多小文件的读写。<br>综合分析瓶颈应该是sample将io集中在一个线程中处理，系统的全部cpu没有利用上，一核忙死，其他3核闲死。","like_count":83},{"had_liked":false,"id":49818,"user_name":"nodlee","can_delete":false,"product_type":"c1","uid":1155871,"ip_address":"","ucode":"C1D36A5A72A0D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/1f/c94facb8.jpg","comment_is_top":false,"comment_ctime":1544775473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"246357911345","product_id":100021101,"comment_content":"理论是基石，例子是上层建筑。希望作者多结合一些实际案例讲解，理论太多，感觉很空洞。作为付费用户，这个要求不高吧。","like_count":58},{"had_liked":false,"id":48722,"user_name":"小雨点","can_delete":false,"product_type":"c1","uid":1330102,"ip_address":"","ucode":"0AE2AFFDD054AF","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/b6/b7c79ed7.jpg","comment_is_top":false,"comment_ctime":1544522541,"is_pvip":false,"replies":[{"id":"17497","content":"是linux部分还是四个卡顿工具比较难呢？<br>","user_name":"作者回复","comment_id":48722,"uid":"1009577","ip_address":"","utype":1,"ctime":1544529088,"user_name_real":"张绍文"}],"discussion_count":2,"race_medal":0,"score":"44494195501","product_id":100021101,"comment_content":"有点深了，表示看不太懂","like_count":10,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432328,"discussion_content":"是linux部分还是四个卡顿工具比较难呢？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544529088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1497082,"avatar":"","nickname":"勇敢地追","note":"","ucode":"29B94AC2ABC2BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354974,"discussion_content":"主要还是因为这些工具基本没听说过，就算听说过，平时工作太忙也不可能去学习去运用吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615370373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48997,"user_name":"memory","can_delete":false,"product_type":"c1","uid":1334237,"ip_address":"","ucode":"86F314F5BBE4A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/dd/26056401.jpg","comment_is_top":false,"comment_ctime":1544586554,"is_pvip":false,"replies":[{"id":"17599","content":"已经很少很简单但是又可以进阶的内容，可以尝试看看文章中的一些背景知识<br><br>后续也会给出学习路线图出来","user_name":"作者回复","comment_id":48997,"uid":"1009577","ip_address":"","utype":1,"ctime":1544590825,"user_name_real":"张绍文"}],"discussion_count":1,"race_medal":0,"score":"35904324922","product_id":100021101,"comment_content":"感觉这个课可能更适用于比较深入研究过内存方面知识的人，但是大部分人应该都是开发业务的程序员，想对这方面做个系统的学习，感觉还是有点难了，给出的课后作业，有点一脸懵逼，有点无从下手的感觉","like_count":8,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432454,"discussion_content":"已经很少很简单但是又可以进阶的内容，可以尝试看看文章中的一些背景知识\n\n后续也会给出学习路线图出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544590825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49436,"user_name":"Dr.strange🐬","can_delete":false,"product_type":"c1","uid":1262993,"ip_address":"","ucode":"B2E9E70E782E12","user_header":"https://static001.geekbang.org/account/avatar/00/13/45/91/1233679c.jpg","comment_is_top":false,"comment_ctime":1544687895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27314491671","product_id":100021101,"comment_content":"大神，能给Linux的学习路线吗","like_count":6},{"had_liked":false,"id":48792,"user_name":"will","can_delete":false,"product_type":"c1","uid":1156207,"ip_address":"","ucode":"7A7DBE3E0EEAEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/6f/672a27d4.jpg","comment_is_top":false,"comment_ctime":1544538150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27314341926","product_id":100021101,"comment_content":"很多没有接触的工具，还是需要去了解一下Linux方面的基础，后面的作业没看太明白","like_count":6},{"had_liked":false,"id":146852,"user_name":"勇敢地追","can_delete":false,"product_type":"c1","uid":1497082,"ip_address":"","ucode":"29B94AC2ABC2BB","user_header":"","comment_is_top":false,"comment_ctime":1572676434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18752545618","product_id":100021101,"comment_content":"大略分析一下，问题集中在kernal和io上。R表示正在运行，S表示TASK_INTERRUPTIBLE，在等待某件事情发生（多数是IO）。可见很可能是一个线程在执行IO操作，其他线程在等待。kernel faults的解释在这里有：https:&#47;&#47;blog.csdn.net&#47;vanquishedzxl&#47;article&#47;details&#47;47029805。通常是在内核申请分配物理内存。kernel faults数字大表示申请了好多次。也就是说有大量IO操作<br>说点体会吧，分析这个需要查阅好多资料，以及对Linux最好也要熟悉。熟悉以后基本就知道sample大致该怎么写了","like_count":4},{"had_liked":false,"id":133434,"user_name":"风炫灬梦想","can_delete":false,"product_type":"c1","uid":1338249,"ip_address":"","ucode":"3A4735E9F04679","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/lQAcCTVoe0L9qKjwibB4U6ib5jyRl31n9ErOuOF1MgHghC1cibtLSqyug4ibMGowMD9HCHAZzfwic3FNZU1wtTcUwWA/132","comment_is_top":false,"comment_ctime":1568560879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18748430063","product_id":100021101,"comment_content":"最近去补充了一些linux知识，感觉现在看起来比之前轻松了一些。推荐大家可以先把整个系列看完之后，在看一下linux相关的知识，再来复习一下，会有新的收获","like_count":4},{"had_liked":false,"id":218570,"user_name":"Zain Zhu","can_delete":false,"product_type":"c1","uid":1125986,"ip_address":"","ucode":"5402E6FF76333A","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/62/ea49480e.jpg","comment_is_top":false,"comment_ctime":1589819355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14474721243","product_id":100021101,"comment_content":"工作好多年完全没有接触过这个层次的知识，惭愧！现在来恶补这些东西还是有点吃力的，主要原因还是基础功不扎实，看这些东西就有点像空中楼阁，能远远的看到，但摸不到门。","like_count":3},{"had_liked":false,"id":49217,"user_name":"国庆","can_delete":false,"product_type":"c1","uid":1330301,"ip_address":"","ucode":"0D9BAECDF3C0DC","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/7d/15dd5caf.jpg","comment_is_top":false,"comment_ctime":1544625171,"is_pvip":false,"replies":[{"id":"17647","content":"所讲的内容并不是为了炫技，都是我们日常工作中可能会用到的知识","user_name":"作者回复","comment_id":49217,"uid":"1009577","ip_address":"","utype":1,"ctime":1544629262,"user_name_real":"张绍文"}],"discussion_count":1,"race_medal":0,"score":"14429527059","product_id":100021101,"comment_content":"太极客了吧，讲的东西感觉像是华山论剑！","like_count":3,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432534,"discussion_content":"所讲的内容并不是为了炫技，都是我们日常工作中可能会用到的知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544629262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49133,"user_name":"石先","can_delete":false,"product_type":"c1","uid":1329688,"ip_address":"","ucode":"C5901FC038D75E","user_header":"https://static001.geekbang.org/account/avatar/00/14/4a/18/90810a3d.jpg","comment_is_top":false,"comment_ctime":1544609006,"is_pvip":false,"replies":[{"id":"17630","content":"这个其实没那么简单，编译的时候也要把Bitmap相关的很多头文件引入。<br><br>调用是通过dlsym来实现的，这块我后续有时间提交到github吧","user_name":"作者回复","comment_id":49133,"uid":"1009577","ip_address":"","utype":1,"ctime":1544612630,"user_name_real":"张绍文"}],"discussion_count":1,"race_medal":0,"score":"14429510894","product_id":100021101,"comment_content":"绍文哥，我又来了。我比较感兴趣之前内存优化文章里面提到对 Bitmap 的优化，可以[通过直接调用 libandroid_runtime.so 中 Bitmap 的构造函数]来创建一个空的 nativeBitmap 对象，但这个操作跟平时自己通过 jni 调用自己编译的 so 包里的 native 方法不太一样，网上也找不到例子来说明这个过程，所以能不能把这个过程再描述详细一点，或者最好是能 show me code，我也想自己实操一遍你说的那些点，非常感谢。","like_count":3,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432495,"discussion_content":"这个其实没那么简单，编译的时候也要把Bitmap相关的很多头文件引入。\n\n调用是通过dlsym来实现的，这块我后续有时间提交到github吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544612630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285653,"user_name":"天堂泪","can_delete":false,"product_type":"c1","uid":1421826,"ip_address":"","ucode":"352CE6F95DD1F3","user_header":"https://static001.geekbang.org/account/avatar/00/15/b2/02/db9abbda.jpg","comment_is_top":false,"comment_ctime":1616941406,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10206875998","product_id":100021101,"comment_content":"要我讲，我喜欢一篇文章说一个这种工具，或者只讲一个或两个推荐使用的工具。<br>还有一点不好的是不够深入，比如这个工具怎么使用，有什么使用技巧，举实例来分析问题。<br>这样讲更费心，也更费时间。可以朝这个方向优化。","like_count":3},{"had_liked":false,"id":49195,"user_name":"我的心情在荡漾","can_delete":false,"product_type":"c1","uid":1328935,"ip_address":"","ucode":"A6066305E8BF1F","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/27/448b5262.jpg","comment_is_top":false,"comment_ctime":1544620541,"is_pvip":false,"replies":[{"id":"17645","content":"这些都是比较基本linux命令，可以在网上查一下用法","user_name":"作者回复","comment_id":49195,"uid":"1009577","ip_address":"","utype":1,"ctime":1544627078,"user_name_real":"张绍文"}],"discussion_count":1,"race_medal":0,"score":"10134555133","product_id":100021101,"comment_content":"各种命令一脸懵逼","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432522,"discussion_content":"这些都是比较基本linux命令，可以在网上查一下用法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544627078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49080,"user_name":"庐州月","can_delete":false,"product_type":"c1","uid":1333474,"ip_address":"","ucode":"0BC9269502A3E1","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/e2/11ccd4d0.jpg","comment_is_top":false,"comment_ctime":1544600043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10134534635","product_id":100021101,"comment_content":"虽然好多东西不懂或者没听过，但是这么系统的了解下还是比较好的，等以后慢慢会看消化。作为一个当枪匹马干了5年的开发来说，争取以后慢慢把这些一点点应用到开发中，建议绍文大神可以在以后的课程中讲解中结合单干者的开发场景做一些分享，感谢大佬分享，也希望单干着一起交流。","like_count":2},{"had_liked":false,"id":48777,"user_name":"snzang","can_delete":false,"product_type":"c1","uid":1238621,"ip_address":"","ucode":"29F1CC892CE2BA","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/5d/377ccba0.jpg","comment_is_top":false,"comment_ctime":1544535135,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10134469727","product_id":100021101,"comment_content":"歪个楼，想请教大神们一个问题，我司的项目打debug签名的包跑在Android8.0以上的机器时会非常卡，换成release签名就很流畅。在8.0以下的手机上运行release和debug的包都很流畅，不知道是不是8.0限制了debug包的运行内存，想在这里问下有遇到相同情况的同学吗？","like_count":2,"discussions":[{"author":{"id":1920102,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLrbyvyBdlQfKzkUiblaQVKXOqNVibXYp8SMZWLgyeicicoYm7IicvJRxJ7ZHG9czcNaqo1HiclonNRP7OA/132","nickname":"Geek_850e4f","note":"","ucode":"29B044F2D932ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342855,"discussion_content":"还有特殊的编译特性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610854761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592920,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4e/58/3eb6ceb5.jpg","nickname":"十八","note":"","ucode":"714E0656F03FFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307138,"discussion_content":"debug包dex比较多，类加载慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600511065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208543,"user_name":"放学别走。","can_delete":false,"product_type":"c1","uid":1328544,"ip_address":"","ucode":"8362A94669B145","user_header":"https://static001.geekbang.org/account/avatar/00/14/45/a0/23905112.jpg","comment_is_top":false,"comment_ctime":1587377818,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882345114","product_id":100021101,"comment_content":"Android 系统 man 5 not found 怎么查看那些文件格式呢？","like_count":1},{"had_liked":false,"id":161550,"user_name":"Geek_sky","can_delete":false,"product_type":"c1","uid":1733288,"ip_address":"","ucode":"BBFE6FF1193873","user_header":"https://static001.geekbang.org/account/avatar/00/1a/72/a8/c24a66a1.jpg","comment_is_top":false,"comment_ctime":1576227531,"is_pvip":false,"replies":[{"id":"62068","content":"Android很多Linux的命令是没有支持的","user_name":"作者回复","comment_id":161550,"uid":"1009577","ip_address":"","utype":1,"ctime":1576681171,"user_name_real":"张绍文"}],"discussion_count":2,"race_medal":0,"score":"5871194827","product_id":100021101,"comment_content":"我尝试用uptime查看系统负载，只能看到up time: 06:40:38, idle time: 20:50:31, sleep time: 00:00:00。我是用了cat &#47;proc&#47;loadavg查看到了系统负载。是不是现在的机器不能通过uptime查看了？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477757,"discussion_content":"Android很多Linux的命令是没有支持的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576681171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1733288,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/72/a8/c24a66a1.jpg","nickname":"Geek_sky","note":"","ucode":"BBFE6FF1193873","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88728,"discussion_content":"是的，有一些机器的uptime是无法查看到需要的信息。但是有一些机器是可以的。估计是不同的厂商修改的时候对于Linux的命令执行是有修改的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576727939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118033,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1564214949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5859182245","product_id":100021101,"comment_content":"感觉都看懂，但是自己理解的是皮毛，底层的知识不懂～～<br><br>感觉其实都是假的～～","like_count":1},{"had_liked":false,"id":51882,"user_name":"Akon Convict","can_delete":false,"product_type":"c1","uid":1044453,"ip_address":"","ucode":"364E1CA9F347C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ef/e5/7ee97c9a.jpg","comment_is_top":false,"comment_ctime":1545273437,"is_pvip":true,"replies":[{"id":"19027","content":"正在整理中","user_name":"作者回复","comment_id":51882,"uid":"1171070","ip_address":"","utype":1,"ctime":1545368716,"user_name_real":"孙鹏飞"}],"discussion_count":1,"race_medal":0,"score":"5840240733","product_id":100021101,"comment_content":"希望作者能给出个深入学习的路线图","like_count":1,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433662,"discussion_content":"正在整理中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545368716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51048,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1545105721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5840073017","product_id":100021101,"comment_content":"绍文老师： 我在我虚拟机上查看cpu 频率，可是您文中说的那个文件没有<br>root@vbox86p:&#47;sys&#47;devices&#47;system&#47;cpu&#47;cpu0 # cd cpufreq<br>&#47;system&#47;bin&#47;sh: cd: &#47;sys&#47;devices&#47;system&#47;cpu&#47;cpu0&#47;cpufreq: No such file or directory<br>这和android 系统机器相关吗？<br>","like_count":1},{"had_liked":false,"id":49314,"user_name":"李大可","can_delete":false,"product_type":"c1","uid":1331424,"ip_address":"","ucode":"DA0C97BC6BCA45","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/e0/e0b368c1.jpg","comment_is_top":false,"comment_ctime":1544664147,"is_pvip":false,"replies":[{"id":"17743","content":"从我们的应用来看，获得的成功率还是非常高的。<br><br>因为我们应用基本做了线程池收拢，大部分线程都是常驻的。可以从整体上看到各个线程的一些情况，这块数据在一些场景作用不大，一些场景还是可以发现问题。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544668976,"ip_address":"","comment_id":49314,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839631443","product_id":100021101,"comment_content":"通过读取文件获取进程cpu,线程cpu等使用状态的一个问题是在不少机型上，没有读取这些文件的权限。如果需要将release版本的这些性能数据采集并上传供数据分析，数据的采集就是一个问题，比如线程cpu使用率，常规的做法是才用两个间隔时间较短的cpu快照，然后计算应用cpu使用时间在系统cpu使用时间所占的比例，但是cpu使用时间是一个一个时间片，上述的统计方法并不够准确","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432571,"discussion_content":"从我们的应用来看，获得的成功率还是非常高的。\n\n因为我们应用基本做了线程池收拢，大部分线程都是常驻的。可以从整体上看到各个线程的一些情况，这块数据在一些场景作用不大，一些场景还是可以发现问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544668976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48812,"user_name":"两天","can_delete":false,"product_type":"c1","uid":1328852,"ip_address":"","ucode":"672B92E74AB23E","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/d4/d195e55d.jpg","comment_is_top":false,"comment_ctime":1544541208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839508504","product_id":100021101,"comment_content":"表示很有用，满满的干货","like_count":1},{"had_liked":false,"id":323944,"user_name":"GEEKBANG_9266151","can_delete":false,"product_type":"c1","uid":1267835,"ip_address":"","ucode":"209788FB0B6630","user_header":"https://static001.geekbang.org/account/avatar/00/13/58/7b/55bdc72c.jpg","comment_is_top":false,"comment_ctime":1638236624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638236624","product_id":100021101,"comment_content":"&#47;proc&#47;loadavg的前3个数值是1&#47;5&#47;15分钟平均的“Kernel中处于调度队列中的task数”，并非是CPU利用率，也非百分比的值。","like_count":0},{"had_liked":false,"id":308896,"user_name":"猎户星座","can_delete":false,"product_type":"c1","uid":2315155,"ip_address":"","ucode":"36ED17B7CA80A2","user_header":"https://static001.geekbang.org/account/avatar/00/23/53/93/01e30482.jpg","comment_is_top":false,"comment_ctime":1629854940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629854940","product_id":100021101,"comment_content":"太硬核了，要补课了","like_count":0},{"had_liked":false,"id":302436,"user_name":"Roy","can_delete":false,"product_type":"c1","uid":1930723,"ip_address":"","ucode":"909B8B605C317A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/75/e3/ef489d57.jpg","comment_is_top":false,"comment_ctime":1626225055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626225055","product_id":100021101,"comment_content":"Traceview已经删除了，目前用profiler进行跟踪。","like_count":0},{"had_liked":false,"id":300044,"user_name":"小昕😙","can_delete":false,"product_type":"c1","uid":1120463,"ip_address":"","ucode":"DE823BC5D4A4E0","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/cf/787c7e37.jpg","comment_is_top":false,"comment_ctime":1624962070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624962070","product_id":100021101,"comment_content":"邵文哥，请问要了解Linux的话，是要往内核方面去了解吗？大概到什么程度？这块完全不懂，能有个学习路线或指导方向就好了。 毕竟咱是Android开发的，底层涉及的相对较少。","like_count":0},{"had_liked":false,"id":291273,"user_name":"JesseHuan","can_delete":false,"product_type":"c1","uid":1513718,"ip_address":"","ucode":"809A6152EA1E67","user_header":"https://static001.geekbang.org/account/avatar/00/17/18/f6/9593775a.jpg","comment_is_top":false,"comment_ctime":1620178473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620178473","product_id":100021101,"comment_content":"讲的很好，但是这些工具都用的太少了，甚至不会用，就像单元测试一样，你想写但是无从下手。此时我就觉得后台Java的单元测试非常好写。","like_count":0},{"had_liked":false,"id":256904,"user_name":"泠牙","can_delete":false,"product_type":"c1","uid":1331027,"ip_address":"","ucode":"AA1C7CDA9AA9F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/4f/53/54629e04.jpg","comment_is_top":false,"comment_ctime":1603780533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603780533","product_id":100021101,"comment_content":"adb shell <br>&#47;proc&#47;1492&#47;stat<br>&#47;proc&#47;1492&#47;stat: can&#39;t execute: Permission denied<br>卒。。。。。。","like_count":1},{"had_liked":false,"id":236567,"user_name":"Shelly","can_delete":false,"product_type":"c1","uid":1961134,"ip_address":"","ucode":"AB82CBB85C64C0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ec/ae/b4a4ddf4.jpg","comment_is_top":false,"comment_ctime":1595469315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595469315","product_id":100021101,"comment_content":"这节课受益匪浅，性能分析是个比较难入手的问题，通过这节课的学习，好像摸到门路了。<br>关于作业，idle占比72%，说明CPU并不是很繁忙，然后该进程的kernel占比38%，占了大头，说明是内核态的代码比较耗时，singleThread线程一看就不正常，kernel的耗时操作都在这个线程，缺页3000+，初步猜想是文件读写在该线程里太多。<br>看app的代码，发现果然如此，读写文件这些耗时操作集中在了一个线程，CPU资源分配不均，造成该线程耗时过长。","like_count":0},{"had_liked":false,"id":177648,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1581457993,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581457993","product_id":100021101,"comment_content":"43% 23493&#47;singleThread(R): 6.5% user + 36% kernel faults：3094<br>例子中singleThread 占用的kernel时间过多，缺页中断也过多，应该是瓶颈，可能是过度的io调用造成的。缓存io的结果，只有真的服务端数据修改了，再去获取网络数据可能能够缓解这个问题。","like_count":0},{"had_liked":false,"id":161754,"user_name":"张亚运","can_delete":false,"product_type":"c1","uid":1721718,"ip_address":"","ucode":"2D0C667E0D7B07","user_header":"https://static001.geekbang.org/account/avatar/00/1a/45/76/2b1354f6.jpg","comment_is_top":false,"comment_ctime":1576316675,"is_pvip":false,"replies":[{"id":"61984","content":"终生学习","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576673746,"ip_address":"","comment_id":161754,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576316675","product_id":100021101,"comment_content":"计算机科学太高深了，知道自己渺小的办法是多出去看看走走，在自己圈子里，总以为自己无所不知。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477843,"discussion_content":"终生学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576673746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154374,"user_name":"Sharry","can_delete":false,"product_type":"c1","uid":1239293,"ip_address":"","ucode":"045DDB864659F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/fd/035f4c94.jpg","comment_is_top":false,"comment_ctime":1574416616,"is_pvip":false,"replies":[{"id":"62078","content":"8.0之后慢慢收紧了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576682594,"ip_address":"","comment_id":154374,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574416616","product_id":100021101,"comment_content":"获取当前进程下的使用率成功了, 不过获取 &#47;proc&#47;stat 和 &#47;proc&#47;loadavg 出现了无权限访问的问题..","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475447,"discussion_content":"8.0之后慢慢收紧了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576682594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97783,"user_name":"bywuu","can_delete":false,"product_type":"c1","uid":1078675,"ip_address":"","ucode":"2EDDB7E70CABB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/93/8135f895.jpg","comment_is_top":false,"comment_ctime":1558771995,"is_pvip":false,"replies":[{"id":"62032","content":"递归并不是问题，但是为了避免调用栈太长，要过滤短的函数","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576678074,"ip_address":"","comment_id":97783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558771995","product_id":100021101,"comment_content":"那么，递归函数，能通过插桩来分析吗？估计还是要放在上层函数里","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451417,"discussion_content":"递归并不是问题，但是为了避免调用栈太长，要过滤短的函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576678074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89448,"user_name":"th0sky","can_delete":false,"product_type":"c1","uid":1340214,"ip_address":"","ucode":"CFBD981D742575","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ5mXhSvjKm6aGTgkGxSV6t9iaIicvUG3TmD3NUn0V6zNTDUM1JMu31M8zj2gicibco7jCZoXLkxh7kBQ/132","comment_is_top":false,"comment_ctime":1556176758,"is_pvip":false,"replies":[{"id":"61999","content":"这块网上的资料就比较多","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576674857,"ip_address":"","comment_id":89448,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556176758","product_id":100021101,"comment_content":"可以详细讲解systrace的分析思路吗？ systrace生成的html里面内容太多了","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448138,"discussion_content":"这块网上的资料就比较多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576674857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65185,"user_name":"三杯两盏","can_delete":false,"product_type":"c1","uid":1330826,"ip_address":"","ucode":"B42B5902069E7A","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/8a/558ec176.jpg","comment_is_top":false,"comment_ctime":1549095183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549095183","product_id":100021101,"comment_content":"虽然只看懂一点皮毛，但是文章的文风真的很好，读起来很顺畅。","like_count":0},{"had_liked":false,"id":64139,"user_name":"Mr.Zhao","can_delete":false,"product_type":"c1","uid":1345368,"ip_address":"","ucode":"2F97A57B416C6B","user_header":"https://static001.geekbang.org/account/avatar/00/14/87/58/829d7c4f.jpg","comment_is_top":false,"comment_ctime":1548675681,"is_pvip":false,"replies":[{"id":"23112","content":"课后继续加深学习实践","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549102774,"ip_address":"","comment_id":64139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548675681","product_id":100021101,"comment_content":"看完了，还是不知道这几个工具怎么用。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437878,"discussion_content":"课后继续加深学习实践","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549102774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64080,"user_name":"Swing","can_delete":false,"product_type":"c1","uid":1330065,"ip_address":"","ucode":"55FCA9ECEFBBEB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","comment_is_top":false,"comment_ctime":1548661947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548661947","product_id":100021101,"comment_content":"卡顿、anr这一块儿，去年研究了一些，正好也搞了cputracker，总算这篇文章看起来没前面这么懵逼了。。。","like_count":0},{"had_liked":false,"id":64003,"user_name":"Geek_6174df","can_delete":false,"product_type":"c1","uid":1100886,"ip_address":"","ucode":"CA74D3642FDAF2","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/56/df75ed7d.jpg","comment_is_top":false,"comment_ctime":1548640262,"is_pvip":false,"replies":[{"id":"23111","content":"会的，可能会导致10倍20倍的放大","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549102749,"ip_address":"","comment_id":64003,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548640262","product_id":100021101,"comment_content":"请教一下taceview会不会出现本来耗时少的方法显示比耗时长的方法，耗时的情况？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437803,"discussion_content":"会的，可能会导致10倍20倍的放大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549102749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61547,"user_name":"森森","can_delete":false,"product_type":"c1","uid":1370253,"ip_address":"","ucode":"BC496062C8DA49","user_header":"https://static001.geekbang.org/account/avatar/00/14/e8/8d/f4320226.jpg","comment_is_top":false,"comment_ctime":1547720737,"is_pvip":false,"replies":[{"id":"22040","content":"通过拿系统和应用的stat自己做分析，在后面的sample解析有一个例子","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1548041749,"ip_address":"","comment_id":61547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547720737","product_id":100021101,"comment_content":"绍文哥，课后作业中这个结果是怎么拿到的","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436908,"discussion_content":"通过拿系统和应用的stat自己做分析，在后面的sample解析有一个例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548041749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60970,"user_name":"HI","can_delete":false,"product_type":"c1","uid":1238921,"ip_address":"","ucode":"C65218113883E6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/89/207cc841.jpg","comment_is_top":false,"comment_ctime":1547599814,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1547599814","product_id":100021101,"comment_content":"看来有必要去搞一个Linux 了解一下，要不然很多常识都不懂","like_count":0},{"had_liked":false,"id":58696,"user_name":"yongxiang","can_delete":false,"product_type":"c1","uid":1082351,"ip_address":"","ucode":"16D826814D4C4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/ef/445e1421.jpg","comment_is_top":false,"comment_ctime":1547177585,"is_pvip":false,"replies":[{"id":"22038","content":"对，我找了一下，暂时似乎还没有太多的办法","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1548041660,"ip_address":"","comment_id":58696,"utype":1}],"discussion_count":1,"race_medal":3,"score":"1547177585","product_id":100021101,"comment_content":"绍文老师，从 Android O 开始不允许非系统 app 读取 &#47;proc&#47;stat 文件了，无法读取系统 cpu 的 使用情况。不知是否还有新的在线监控 cpu 使用率的方法？网上找了好久好久，都没有找到新的方法。谢谢https:&#47;&#47;issuetracker.google.com&#47;issues&#47;37140047","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436177,"discussion_content":"对，我找了一下，暂时似乎还没有太多的办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548041660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58278,"user_name":"Xmilton","can_delete":false,"product_type":"c1","uid":1329678,"ip_address":"","ucode":"B85918F9CFE536","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyqjqjTlaiavWBEgKwfDqzsFKDb3JgNMLxgaT6EHKkYJCIctZ7eZQ8quS3pvx43YZcMBCnKxCSonA/132","comment_is_top":false,"comment_ctime":1547025538,"is_pvip":false,"replies":[{"id":"22041","content":"Android 8.0之后的确不让读这个文件了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1548041811,"ip_address":"","comment_id":58278,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547025538","product_id":100021101,"comment_content":"张总，我想问下真机是不是读不到&#47;proc&#47;stat里的信息？该怎么处理呢。","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435985,"discussion_content":"Android 8.0之后的确不让读这个文件了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548041811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51805,"user_name":"______心岛已晴。","can_delete":false,"product_type":"c1","uid":1332641,"ip_address":"","ucode":"E5DF65E6B62370","user_header":"https://static001.geekbang.org/account/avatar/00/14/55/a1/5cf57038.jpg","comment_is_top":false,"comment_ctime":1545265570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545265570","product_id":100021101,"comment_content":"好多关于linux的只是，现在需要去整理一下，有点好深奥","like_count":0},{"had_liked":false,"id":51639,"user_name":"张敬东","can_delete":false,"product_type":"c1","uid":1329702,"ip_address":"","ucode":"2BC15EE134A7CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epZHmvJIosQ5OrAnIwCE7BY8D5XxJxtVa1rrkHTKImUzianyXfibtiapZauWgUpmXbyJu4X3QxMlnCNw/132","comment_is_top":false,"comment_ctime":1545213375,"is_pvip":false,"replies":[{"id":"18775","content":"可以根据内存优化的思路来看一下","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545269732,"ip_address":"","comment_id":51639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545213375","product_id":100021101,"comment_content":"app运行是内存基本在500M左右算不算是很高的内存表现了? 看了下主要是native内存可以到190M左右，平时native内存也是最低在120M左右。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433547,"discussion_content":"可以根据内存优化的思路来看一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545269732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51039,"user_name":"双子座的马克思","can_delete":false,"product_type":"c1","uid":1150663,"ip_address":"","ucode":"4D43FB644E9870","user_header":"https://static001.geekbang.org/account/avatar/00/11/8e/c7/6d08d502.jpg","comment_is_top":false,"comment_ctime":1545104061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545104061","product_id":100021101,"comment_content":"[补充评论区留言]singleThread线程kernel失误率3094占36%，System TOTAL中iowait占9.2%，io等待时间过长，应该是文件操作不当导致内核失误率过高，可能情况：一、文件内容读写操作不当；二、文件过多。5秒时间间隔下，第一种情况更可能一些。","like_count":0},{"had_liked":false,"id":50832,"user_name":"许圣明","can_delete":false,"product_type":"c1","uid":1026695,"ip_address":"","ucode":"2549A0CB2F7821","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/87/7f44ec43.jpg","comment_is_top":false,"comment_ctime":1545052571,"is_pvip":false,"replies":[{"id":"18245","content":"只是参考它内部的实现，写一个类似的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545053409,"ip_address":"","comment_id":50832,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545052571","product_id":100021101,"comment_content":"你好，github 上的作业要求没太明白，本作业的实现方式和 ProcessCpuTracker 是一样的吧？二者有什么区别吗？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433130,"discussion_content":"只是参考它内部的实现，写一个类似的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545053409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50599,"user_name":"双子座的马克思","can_delete":false,"product_type":"c1","uid":1150663,"ip_address":"","ucode":"4D43FB644E9870","user_header":"https://static001.geekbang.org/account/avatar/00/11/8e/c7/6d08d502.jpg","comment_is_top":false,"comment_ctime":1545014568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545014568","product_id":100021101,"comment_content":"绍文大大介绍的工具，只要能用起来，就一定会对底层有更深的理解。这次用了新工具Better Terminal Emulator Pro，虽然之前知道Android底层是Linux，但总感觉无从关联，这次通过BTEP算是真的认识到了。真的是文章中的任何一处都能学到东西啊，太赞了！","like_count":0},{"had_liked":false,"id":50425,"user_name":"张亮","can_delete":false,"product_type":"c1","uid":1180355,"ip_address":"","ucode":"CC3526F0A96318","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/c3/e9026d82.jpg","comment_is_top":false,"comment_ctime":1544971562,"is_pvip":false,"replies":[{"id":"18110","content":"正式包，就是针对用户","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1545004867,"ip_address":"","comment_id":50425,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544971562","product_id":100021101,"comment_content":"请问，经常说的 “线上”是什么意思","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432980,"discussion_content":"正式包，就是针对用户","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545004867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50381,"user_name":"L","can_delete":false,"product_type":"c1","uid":1330979,"ip_address":"","ucode":"8514C3CABFCC84","user_header":"https://static001.geekbang.org/account/avatar/00/14/4f/23/db8403c7.jpg","comment_is_top":false,"comment_ctime":1544964580,"is_pvip":false,"replies":[{"id":"18222","content":"嗯嗯，这个我们后面会做一个总结。关于工具的使用，我们并不打算写到文章里，因为篇幅有限，很多工具的使用方式，参数解析网上的文章有讲的很详细的，可以自行搜索查看。我们也会写到我们的一篇总结里","user_name":"作者回复","user_name_real":"孙鹏飞","uid":"1171070","ctime":1545050181,"ip_address":"","comment_id":50381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544964580","product_id":100021101,"comment_content":"其实吧，作者有时间的话，可以整理一下几个工具具体怎么用，以及工具中关注点是什么，以及读者应该重点关注的相关知识点等等，不然对于很多没有分析过性能问题的，可能你讲的这些估计他们都云里雾里的！效果可能不太好！仅此个人意见！","like_count":0,"discussions":[{"author":{"id":1171070,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/7e/5c2b1efe.jpg","nickname":"孙鹏飞","note":"","ucode":"18ADF5C2B78938","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432962,"discussion_content":"嗯嗯，这个我们后面会做一个总结。关于工具的使用，我们并不打算写到文章里，因为篇幅有限，很多工具的使用方式，参数解析网上的文章有讲的很详细的，可以自行搜索查看。我们也会写到我们的一篇总结里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545050181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50130,"user_name":"华尔街之狼","can_delete":false,"product_type":"c1","uid":1343016,"ip_address":"","ucode":"0956AFFE1103AC","user_header":"https://static001.geekbang.org/account/avatar/00/14/7e/28/cb5c2e3b.jpg","comment_is_top":false,"comment_ctime":1544875538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544875538","product_id":100021101,"comment_content":"完全懵逼，但是感觉讲的很细，平时在工作中没有注意的问题这里全都讲到","like_count":0},{"had_liked":false,"id":49483,"user_name":"双子座的马克思","can_delete":false,"product_type":"c1","uid":1150663,"ip_address":"","ucode":"4D43FB644E9870","user_header":"https://static001.geekbang.org/account/avatar/00/11/8e/c7/6d08d502.jpg","comment_is_top":false,"comment_ctime":1544696063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544696063","product_id":100021101,"comment_content":"感谢绍文大大的这节课，认真看完了。首先查看CPU的两个cat命令之前没接触过，看到后面感觉好像是Linux的知识，看文章的过程加深了对Android底层是Linux的认识。基本没接触过Linux，我想可能是这个原因，导致我对后面几个分析工具感觉无从下手吧。所以这也是我借此学习Linux的好机会，卖过这个门槛是不是理解这几个工具起来会相对容易一些。觉得自己差的知识好多，努力。","like_count":0},{"had_liked":false,"id":49334,"user_name":"AndU","can_delete":false,"product_type":"c1","uid":1316534,"ip_address":"","ucode":"3031D72EF5A874","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/b6/03144162.jpg","comment_is_top":false,"comment_ctime":1544667756,"is_pvip":false,"replies":[{"id":"17745","content":"课后作业并不是获取ANR，而是自己应用的cpu信息，例如各个线程的占比等等，是用于分析应用中的卡顿问题。<br><br>放这里例子主要是为了让大家能加深linux底层的一些知识，知道什么文件代表什么内容，可以怎么帮助我们分析问题。<br><br>Linux系统的很多命令也是通过这些文件获得的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544672006,"ip_address":"","comment_id":49334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544667756","product_id":100021101,"comment_content":"张老师您好，看了您这些篇文章，相对于前几篇感觉好了挺多的。也慢慢趋于我买这个专栏的期待。不过还有一个问题是您这边最开始说的是结合案例与课后作业来教学。例如本章节我们应该有一个案例来如何使用systrace 或者traceview分析一个卡顿应用。课后作业也应该是分析卡顿问题，而非是如何获取anr的信息，ANR不属于性能卡顿，只能说是属于稳定性方面。希望能够跟着张老师的案例不断的学习进步。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432579,"discussion_content":"课后作业并不是获取ANR，而是自己应用的cpu信息，例如各个线程的占比等等，是用于分析应用中的卡顿问题。\n\n放这里例子主要是为了让大家能加深linux底层的一些知识，知道什么文件代表什么内容，可以怎么帮助我们分析问题。\n\nLinux系统的很多命令也是通过这些文件获得的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544672006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49305,"user_name":"彪","can_delete":false,"product_type":"c1","uid":1329402,"ip_address":"","ucode":"16F0A59E6D32B4","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/fa/ce66bff5.jpg","comment_is_top":false,"comment_ctime":1544663314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544663314","product_id":100021101,"comment_content":"工具应用不熟练啊，有时候对启动反应慢和各种ANR束手无策，特别是ANR发生在底层系统函数，比如file.exists这种应该咋办？","like_count":0},{"had_liked":false,"id":49084,"user_name":"灰","can_delete":false,"product_type":"c1","uid":1329236,"ip_address":"","ucode":"58CDFF5442D333","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/54/872fc401.jpg","comment_is_top":false,"comment_ctime":1544600751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544600751","product_id":100021101,"comment_content":"有点深了。。四个工具只用过traceview","like_count":0}]}