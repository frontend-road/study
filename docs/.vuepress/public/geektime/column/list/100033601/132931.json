{"id":132931,"title":"15 | 消息队列和事件循环：页面是怎么“活”起来的？","content":"<p>前面我们讲到了每个渲染进程都有一个主线程，并且主线程非常繁忙，既要处理DOM，又要计算样式，还要处理布局，同时还需要处理JavaScript任务以及各种输入事件。要让这么多不同类型的任务在主线程中有条不紊地执行，这就需要一个系统来统筹调度这些任务，这个统筹调度系统就是我们今天要讲的消息队列和事件循环系统。</p><p>在写这篇文章之前，我翻阅了大量的资料，却发现没有一篇文章能把消息循环系统给讲清楚的，所以我决定用一篇文章来专门介绍页面的事件循环系统。事件循环非常底层且非常重要，学会它能让你理解页面到底是如何运行的， 所以在本篇文章中，我们会将页面的事件循环给梳理清楚、讲透彻。</p><p>为了能让你更加深刻地理解事件循环机制，我们就从最简单的场景来分析，然后带你一步步了解浏览器页面主线程是如何运作的。</p><p>需要说明的是，文章中的代码我会采用C++来示范。如果你不熟悉C++，也没有关系，这里并没有涉及到任何复杂的知识点，只要你了解JavaScript或Python，你就会看懂。</p><h2>使用单线程处理安排好的任务</h2><p>我们先从最简单的场景讲起，比如有如下一系列的任务：</p><ul>\n<li>任务1：1+2</li>\n<li>任务2：20/5</li>\n<li>任务3：7*8</li>\n<li>任务4：打印出任务1、任务2、任务3的运算结果</li>\n</ul><!-- [[[read_end]]] --><p>现在要在一个线程中去执行这些任务，通常我们会这样编写代码：</p><pre><code>void MainThread(){\n     int num1 = 1+2; //任务1\n     int num2 = 20/5; //任务2\n     int num3 = 7*8; //任务3\n     print(&quot;最终计算的值为:%d,%d,%d&quot;,num1,num2,num3)； //任务4\n  }\n</code></pre><p>在上面的执行代码中，我们把所有任务代码按照顺序写进主线程里，等线程执行时，这些任务会按照顺序在线程中依次被执行；等所有任务执行完成之后，线程会自动退出。可以参考下图来直观地理解下其执行过程：</p><p><img src=\"https://static001.geekbang.org/resource/image/72/bc/72726678ac6604116c1d5dad160780bc.png?wh=1142*488\" alt=\"\"></p><center><span class=\"reference\">第一版：线程的一次执行</span></center><h2>在线程运行过程中处理新任务</h2><p>但并不是所有的任务都是在执行之前统一安排好的，大部分情况下，新的任务是在线程运行过程中产生的。比如在线程执行过程中，又接收到了一个新的任务要求计算“10+2”，那上面那种方式就无法处理这种情况了。</p><p><strong>要想在线程运行过程中，能接收并执行新的任务，就需要采用事件循环机制</strong>。我们可以通过一个for循环语句来监听是否有新的任务，如下面的示例代码：</p><pre><code>//GetInput\n//等待用户从键盘输入一个数字，并返回该输入的数字\nint GetInput(){\n    int input_number = 0;\n    cout&lt;&lt;&quot;请输入一个数:&quot;;\n    cin&gt;&gt;input_number;\n    return input_number;\n}\n\n//主线程(Main Thread)\nvoid MainThread(){\n     for(;;){\n          int first_num = GetInput()；\n          int second_num = GetInput()；\n          result_num = first_num + second_num;\n          print(&quot;最终计算的值为:%d&quot;,result_num)；\n      }\n}\n</code></pre><p>相较于第一版的线程，这一版的线程做了两点改进。</p><ul>\n<li><strong>第一点引入了循环机制</strong>，具体实现方式是在线程语句最后添加了一个<strong>for循环语句</strong>，线程会一直循环执行。</li>\n<li><strong>第二点是引入了事件</strong>，可以在线程运行过程中，等待用户输入的数字，等待过程中线程处于暂停状态，一旦接收到用户输入的信息，那么线程会被激活，然后执行相加运算，最后输出结果。</li>\n</ul><p>通过引入事件循环机制，就可以让该线程“活”起来了，我们每次输入两个数字，都会打印出两数字相加的结果，你可以结合下图来参考下这个改进版的线程：</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/e3/9e0f595324fbd5b7cd1c1ae1140f7de3.png?wh=1142*673\" alt=\"\"></p><center><span class=\"reference\">第二版：在线程中引入事件循环</span></center><h2>处理其他线程发送过来的任务</h2><p>上面我们改进了线程的执行方式，引入了事件循环机制，可以让其在执行过程中接受新的任务。不过在第二版的线程模型中，所有的任务都是来自于线程内部的，如果另外一个线程想让主线程执行一个任务，利用第二版的线程模型是无法做到的。</p><p>那下面我们就来看看其他线程是如何发送消息给渲染主线程的，具体形式你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/05/2eb6a8ecb7cb528da4663573d74eb305.png?wh=1142*661\" alt=\"\"></p><center><span class=\"reference\">渲染进程线程之间发送任务</span></center><p>从上图可以看出，渲染主线程会频繁接收到来自于IO线程的一些任务，接收到这些任务之后，渲染进程就需要着手处理，比如接收到资源加载完成的消息后，渲染进程就要着手进行DOM解析了；接收到鼠标点击的消息后，渲染主线程就要开始执行相应的JavaScript脚本来处理该点击事件。</p><p>那么如何设计好一个线程模型，能让其能够接收其他线程发送的消息呢？</p><p>一个通用模式是使用<strong>消息队列</strong>。在解释如何实现之前，我们先说说什么是消息队列，可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/6d/5e/6d141ec0925590d83d97a37cce8e6f5e.png?wh=1142*316\" alt=\"\"></p><p>从图中可以看出，<strong>消息队列是一种数据结构，可以存放要执行的任务</strong>。它符合队列“<strong>先进先出</strong>”的特点，也就是说<strong>要添加任务的话，添加到队列的尾部；要取出任务的话，从队列头部去取</strong>。</p><p>有了队列之后，我们就可以继续改造线程模型了，改造方案如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/ab/2ac6bc0361cb4690c5cc83d8abad22ab.png?wh=1142*692\" alt=\"\"></p><center><span class=\"reference\">第三版线程模型：队列+循环</span></center><p>从上图可以看出，我们的改造可以分为下面三个步骤：</p><ol>\n<li>添加一个消息队列；</li>\n<li>IO线程中产生的新任务添加进消息队列尾部；</li>\n<li>渲染主线程会循环地从消息队列头部中读取任务，执行任务。</li>\n</ol><p>有了这些步骤之后，那么接下来我们就可以<strong>按步骤使用代码来实现第三版的线程模型</strong>。</p><p>首先，构造一个队列。当然，在本篇文章中我们不需要考虑队列实现的细节，只是构造队列的接口：</p><pre><code>class TaskQueue{\n  public:\n  Task takeTask(); //取出队列头部的一个任务\n  void pushTask(Task task); //添加一个任务到队列尾部\n};\n</code></pre><p>接下来，改造主线程，让主线程从队列中读取任务：</p><pre><code>TaskQueue task_queue；\nvoid ProcessTask();\nvoid MainThread(){\n  for(;;){\n    Task task = task_queue.takeTask();\n    ProcessTask(task);\n  }\n}\n</code></pre><p>在上面的代码中，我们添加了一个消息队列的对象，然后在主线程的for循环代码块中，从消息队列中读取一个任务，然后执行该任务，主线程就这样一直循环往下执行，因此只要消息队列中有任务，主线程就会去执行。</p><p>主线程的代码就这样改造完成了。这样改造后，主线程执行的任务都全部从消息队列中获取。所以如果有其他线程想要发送任务让主线程去执行，只需要将任务添加到该消息队列中就可以了，添加任务的代码如下：</p><pre><code>Task clickTask;\ntask_queue.pushTask(clickTask)\n</code></pre><p>由于是多个线程操作同一个消息队列，所以在添加任务和取出任务时还会加上一个同步锁，这块内容你也要注意下。</p><h2>处理其他进程发送过来的任务</h2><p>通过使用消息队列，我们实现了线程之间的消息通信。在Chrome中，跨进程之间的任务也是频繁发生的，那么如何处理其他进程发送过来的任务？你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/e2/c6/e2582e980632fd2df5043f81a11461c6.png?wh=1142*834\" alt=\"\"></p><center><span class=\"reference\">跨进程发送消息</span></center><p>从图中可以看出，<strong>渲染进程专门有一个IO线程用来接收其他进程传进来的消息</strong>，接收到消息之后，会将这些消息组装成任务发送给渲染主线程，后续的步骤就和前面讲解的“处理其他线程发送的任务”一样了，这里就不再重复了。</p><h2>消息队列中的任务类型</h2><p>现在你知道页面主线程是如何接收外部任务的了，那接下来我们再来看看消息队列中的任务类型有哪些。你可以参考下<a href=\"https://cs.chromium.org/chromium/src/third_party/blink/public/platform/task_type.h\">Chromium的官方源码</a>，这里面包含了很多内部消息类型，如输入事件（鼠标滚动、点击、移动）、微任务、文件读写、WebSocket、JavaScript定时器等等。</p><p>除此之外，消息队列中还包含了很多与页面相关的事件，如JavaScript执行、解析DOM、样式计算、布局计算、CSS动画等。</p><p>以上这些事件都是在主线程中执行的，所以在编写Web应用时，你还需要衡量这些事件所占用的时长，并想办法解决单个任务占用主线程过久的问题。</p><h2>如何安全退出</h2><p>当页面主线程执行完成之后，又该如何保证页面主线程能够安全退出呢？Chrome是这样解决的，确定要退出当前页面时，页面主线程会设置一个退出标志的变量，在每次执行完一个任务时，判断是否有设置退出标志。</p><p>如果设置了，那么就直接中断当前的所有任务，退出线程，你可以参考下面代码：</p><pre><code>TaskQueue task_queue；\nvoid ProcessTask();\nbool keep_running = true;\nvoid MainThread(){\n  for(;;){\n    Task task = task_queue.takeTask();\n    ProcessTask(task);\n    if(!keep_running) //如果设置了退出标志，那么直接退出线程循环\n        break; \n  }\n}\n</code></pre><h2>页面使用单线程的缺点</h2><p>上面讲述的就是页面线程的循环系统是如何工作的，那接下来，我们继续探讨页面线程的一些特征。</p><p>通过上面的介绍，你应该清楚了，页面线程所有执行的任务都来自于消息队列。消息队列是“先进先出”的属性，也就是说放入队列中的任务，需要等待前面的任务被执行完，才会被执行。鉴于这个属性，就有如下两个问题需要解决。</p><p><strong>第一个问题是如何处理高优先级的任务。</strong></p><p>比如一个典型的场景是监控DOM节点的变化情况（节点的插入、修改、删除等动态变化），然后根据这些变化来处理相应的业务逻辑。一个通用的设计的是，利用JavaScript设计一套监听接口，当变化发生时，渲染引擎同步调用这些接口，这是一个典型的观察者模式。</p><p>不过这个模式有个问题，因为DOM变化非常频繁，如果每次发生变化的时候，都直接调用相应的JavaScript接口，那么这个当前的任务执行时间会被拉长，从而导致<strong>执行效率的下降</strong>。</p><p>如果将这些DOM变化做成异步的消息事件，添加到消息队列的尾部，那么又会影响到监控的实时性，因为在添加到消息队列的过程中，可能前面就有很多任务在排队了。</p><p>这也就是说，如果DOM发生变化，采用同步通知的方式，会影响当前任务的<strong>执行效率</strong>；如果采用异步方式，又会影响到<strong>监控的实时性</strong>。</p><p>那该如何权衡<strong>效率</strong>和<strong>实时性</strong>呢？</p><p>针对这种情况，微任务就应用而生了，下面我们来看看微任务是如何权衡效率和实时性的。</p><p>通常我们把消息队列中的任务称为<strong>宏任务</strong>，每个宏任务中都包含了一个<strong>微任务队列</strong>，在执行宏任务的过程中，如果DOM有变化，那么就会将该变化添加到微任务列表中，这样就不会影响到宏任务的继续执行，因此也就解决了执行效率的问题。</p><p>等宏任务中的主要功能都直接完成之后，这时候，渲染引擎并不着急去执行下一个宏任务，而是执行当前宏任务中的微任务，因为DOM变化的事件都保存在这些微任务队列中，这样也就解决了实时性问题。</p><p><strong>第二个是如何解决单个任务执行时长过久的问题。</strong></p><p>因为所有的任务都是在单线程中执行的，所以每次只能执行一个任务，而其他任务就都处于等待状态。如果其中一个任务执行时间过久，那么下一个任务就要等待很长时间。可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/cc/8de4b43fca99b180fdffe6a5af07b5cc.png?wh=1142*428\" alt=\"\"></p><center><span class=\"reference\">单个任务执行时间过久</span></center><p>从图中你可以看到，如果在执行动画过程中，其中有个JavaScript任务因执行时间过久，占用了动画单帧的时间，这样会给用户制造了卡顿的感觉，这当然是极不好的用户体验。针对这种情况，JavaScript可以通过回调功能来规避这种问题，也就是让要执行的JavaScript任务滞后执行。至于浏览器是如何实现回调功能的，我们在后面的章节中再详细介绍。</p><h2>实践：浏览器页面是如何运行的</h2><p>有了上面的基础知识之后，我们最后来看看浏览器的页面是如何运行的。</p><p>你可以打开开发者工具，点击“Performance”标签，选择左上角的“start porfiling and load page”来记录整个页面加载过程中的事件执行情况，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/1b/c0d59d5b58e387f30cc39ceb4d54f31b.png?wh=1142*702\" alt=\"\"></p><center><span class=\"reference\">Performance页面</span></center><p>从图中可以看出，我们点击展开了Main这个项目，其记录了主线程执行过程中的所有任务。图中灰色的就是一个个任务，每个任务下面还有子任务，其中的Parse HTML任务，是把HTML解析为DOM的任务。值得注意的是，在执行Parse HTML的时候，如果遇到JavaScript脚本，那么会暂停当前的HTML解析而去执行JavaScript脚本。</p><p>至于Performance工具，在后面的章节中我们还会详细介绍，在这里你只需要建立一个直观的印象就可以了。</p><h2>总结</h2><p>好了，今天就讲到这里，下面我来总结下今天所讲的内容。</p><ul>\n<li>如果有一些确定好的任务，可以使用一个单线程来按照顺序处理这些任务，这是第一版线程模型。</li>\n<li>要在线程执行过程中接收并处理新的任务，就需要引入循环语句和事件系统，这是第二版线程模型。</li>\n<li>如果要接收其他线程发送过来的任务，就需要引入消息队列，这是第三版线程模型。</li>\n<li>如果其他进程想要发送任务给页面主线程，那么先通过IPC把任务发送给渲染进程的IO线程，IO线程再把任务发送给页面主线程。</li>\n<li>消息队列机制并不是太灵活，为了适应效率和实时性，引入了微任务。</li>\n</ul><p>基于消息队列的设计是目前使用最广的消息架构，无论是安卓还是Chrome都采用了类似的任务机制，所以理解了本篇文章的内容后，你再理解其他项目的任务机制也会比较轻松。</p><h2>思考时间</h2><p>今天给你留的思考题是：结合消息队列和事件循环，你认为微任务是什么？引入微任务能带来什么优势呢？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"14 | 编译器和解释器：V8是如何执行一段JavaScript代码的？","id":131887},"right":{"article_title":"16 | WebAPI：setTimeout是如何实现的？","id":134456}},"comments":[{"had_liked":false,"id":132046,"user_name":"肥嘟嘟左卫门","can_delete":false,"product_type":"c1","uid":1358889,"ip_address":"","ucode":"BA6D8E04C6B2CE","user_header":"https://static001.geekbang.org/account/avatar/00/14/bc/29/c248bfd1.jpg","comment_is_top":false,"comment_ctime":1568012970,"is_pvip":false,"replies":[{"id":"50916","content":"首先我的观点是工作和知识体系的构建都是重要的，这两者向铺相成。<br><br>所以学习过程也是停不下来的，基础知识的学习不要间断。<br><br>工作是实践的好机会，但是在工作中你涉及到内容通常会限定在一个很窄的领域，要想通过工作拓宽自己的知识边界，那该如何突破呢？<br><br>我是这样做：<br><br>把工作中的项目看成是一个探险游戏，游戏中有你熟悉的领域，也有你不熟悉的领域，通常你所做的工作都是在你最熟悉的领域。<br><br>不过我还会做另外一件事，就是把游戏地图画出来，画地图的过程也就是全面熟悉项目架构的过程，其中可能涉及到很多你不熟悉的领域，然后你要做的事逐步拓宽这张地图！<br><br>当然人的精力是有限的，所以搭建知识架构很重要，然后再找几个领域深耕。<br><br>","user_name":"作者回复","comment_id":132046,"uid":"1141464","ip_address":"","utype":1,"ctime":1568278153,"user_name_real":"李兵"}],"discussion_count":9,"race_medal":0,"score":"628633238186","product_id":100033601,"comment_content":"老师，我感觉最近学起来很迷茫。我本身是非计算机专业的，转行前端将近一年，也能照搬代码去干活，但是总感觉很多东西不通，整个就是一个闭塞的状态，于是我把今年的目标定为恶补计算机基础知识，然后我就找计算机网络方面的知识，浏览器方面的，也包括您的这个专栏，并且也结合着极客时间另外一个关于http的专栏，感觉看的时候好像是懂了（其实我也知道也只是停留在我这个知识层面的“懂了”），会有那种原来平时工作时候他们说的那些概念是这样的意思，也会觉得曾经觉得很难得东西，一下子就通了的感觉，但是另一边我又发现一个问题就是看到现在，像之前专栏讲的我就忘了，平时打通的点也都没有太多印象。我有点迷茫了，我不知道是不是因为我实操太少了，平时遇到的问题太少，所以在学这些的时候会印象不深刻。难道我现在应该把更多的精力放在框架的使用，不停的写代码，而不是基础上吗？","like_count":147,"discussions":[{"author":{"id":1546855,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9a/67/73f384f9.jpg","nickname":"好好好","note":"","ucode":"EE1878ADC840B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260941,"discussion_content":"我觉得不用太过焦虑，没有必要死记硬背，可以用思维导图或其他方式做个笔记，有个印象就行。\n\n因为只要你持续不断的学习，你总会遇到跟这些知识相关的场景，无论是在个人学习中，还是在项目中。\n\n每当你遇到的时候，你意识到了这个知识点，然后就巩固了这个知识点了。遇得多了你自然就记住了。\n\n即便到时你记不太清了，你也有笔记做后手。","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1588915623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","nickname":"Sinvi","note":"","ucode":"2A90976980CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299976,"discussion_content":"故余虽愚，卒获有所闻","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1597892063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266451,"avatar":"https://static001.geekbang.org/account/avatar/00/13/53/13/9b68ca16.jpg","nickname":"🍜tommy","note":"","ucode":"504D3D81B64790","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539661,"discussion_content":"针对&#34;记不住知识点&#34;这个困惑，我的见解是这样的：\n\n知识是为解决问题而生的，我们如果记不住某个知识，很可能是因为我们没有解决某个问题的需要。\n\n而且，一个很重要的点是，我们应当从使用者和发明者的角度去思考这个设计所解决的问题。\n\n比如浏览器的事件循环模型。\n\n对“使用者”来说：我们应该如何利用事件循环模型去实现我们所需要的逻辑？有什么使用场景？……\n\n对“发明者”来说：浏览器是为了解决什么问题而设计这个事件循环的？他为什么要通过这个方案解决这个问题？还有没有其他解决方案，为什么它相对更合理？\n\n了解清楚这些问题之后我相信你对事件循环会有远超其他人的理解和记忆。\n\n当然，去了解这些问题本身也要花不少精力，要学到什么样的程度，也是自己的选择，但是如果想透彻的学习某个知识点，这些思考必不可少。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1639802379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253128,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/08/14642f9e.jpg","nickname":"相望于江湖","note":"","ucode":"9CCB6F89F92C89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370045,"discussion_content":"我觉的学习应该先建立一个大局观，首先要明白所学知识点所处的位置，明白学习的目的才能更好的去学。\n学习之后忘了是大部分人的人之常情，有个印象就好，之后遇到类似的场景就能按图索骥，一遍遍重复加深，知识脉络就慢慢完善了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1619265910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2621549,"avatar":"https://static001.geekbang.org/account/avatar/00/28/00/6d/425d2bb0.jpg","nickname":"Censwin","note":"","ucode":"1AD6AD4A1136C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374766,"discussion_content":"背过单词吧？一个单词最少需要背8次才有印象，更别说这些晦涩难懂的知识，科班出身也是如此，我的建议是自己带着问题去找答案，画出地图，搞懂了就会很爽","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1621338721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2136469,"avatar":"https://static001.geekbang.org/account/avatar/00/20/99/95/1e332315.jpg","nickname":"Geek_2014ce","note":"","ucode":"167B4CCDA4D5BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364033,"discussion_content":"科班出身的也这样。忘记了就再重看一遍，没关系的，&#34;温故而知新，不亦说乎&#34;。读书的时候你可能没有太多温故而知新的体验。但是现在结合工作不断回顾重学，这种体验会不断出现。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1617355202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1630111,"avatar":"https://static001.geekbang.org/account/avatar/00/18/df/9f/6db75dff.jpg","nickname":"Random","note":"","ucode":"4E164C8CF487FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362638,"discussion_content":"计算机科班出身的也会有这个困惑，但是学习就是如此，需要不断的学习，当所有的知识点都听过，加上实践中的经验，最终这些知识点会在脑袋中生成一个网状的图普。这是一个持续的过程。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1616996684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466736,"discussion_content":"首先我的观点是工作和知识体系的构建都是重要的，这两者向铺相成。\n\n所以学习过程也是停不下来的，基础知识的学习不要间断。\n\n工作是实践的好机会，但是在工作中你涉及到内容通常会限定在一个很窄的领域，要想通过工作拓宽自己的知识边界，那该如何突破呢？\n\n我是这样做：\n\n把工作中的项目看成是一个探险游戏，游戏中有你熟悉的领域，也有你不熟悉的领域，通常你所做的工作都是在你最熟悉的领域。\n\n不过我还会做另外一件事，就是把游戏地图画出来，画地图的过程也就是全面熟悉项目架构的过程，其中可能涉及到很多你不熟悉的领域，然后你要做的事逐步拓宽这张地图！\n\n当然人的精力是有限的，所以搭建知识架构很重要，然后再找几个领域深耕。\n\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568278153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2389114,"avatar":"https://static001.geekbang.org/account/avatar/00/24/74/7a/17373040.jpg","nickname":"阿松","note":"","ucode":"3DA3F0E52CD75E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346059,"discussion_content":"确实，会记不住，但是当你在项目中遇到类似的问题的时候。你再回来回顾，然后往返几次，就熟悉了。反正我是这样的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1611846838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131892,"user_name":"易儿易","can_delete":false,"product_type":"c1","uid":1242864,"ip_address":"","ucode":"B15D1031CA841E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLcWH3mSPmhjrs1aGL4b3TqI7xDqWWibM4nYFrRlp0z7FNSWaJz0mqovrgIA7ibmrPt8zRScSfRaqQ/132","comment_is_top":false,"comment_ctime":1567952079,"is_pvip":false,"replies":[{"id":"50402","content":"这个比喻形象","user_name":"作者回复","comment_id":131892,"uid":"1141464","ip_address":"","utype":1,"ctime":1567983907,"user_name_real":"李兵"}],"discussion_count":3,"race_medal":0,"score":"559913700559","product_id":100033601,"comment_content":"宏任务是开会分配的工作内容，微任务是工作过程中被临时安排的内容，可以这么比喻吗？","like_count":131,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466670,"discussion_content":"这个比喻形象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567983907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356905,"discussion_content":"setTimeout安排的就是宏任务，promise安排的就是微任务，你怎么也不能给promise安排成宏任务。事先定好的，这个比喻不恰当吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615705363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1446810,"avatar":"https://static001.geekbang.org/account/avatar/00/16/13/9a/842a9dc6.jpg","nickname":"求求你，别卷了！","note":"","ucode":"8F7DE1DF8A0B29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391714,"discussion_content":"单个宏任务这比喻还是合适的，多个宏任务，譬如宏任务a里面有宏任务b跟微任务c，宏任务b里面又有微任务d，这就不合适了。个人理解","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630589806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":356905,"ip_address":""},"score":391714,"extra":""}]}]},{"had_liked":true,"id":133550,"user_name":"拖鞋","can_delete":false,"product_type":"c1","uid":1089424,"ip_address":"","ucode":"09985C731090A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/90/4656119a.jpg","comment_is_top":false,"comment_ctime":1568602835,"is_pvip":false,"replies":[{"id":"51265","content":"是这样的，部分css3的动画效果是在合成线程上实现的，不需要主线程介入，所以省去了重拍和重绘的过程，这就大大提升了渲染效率。<br><br>JavaScript都是在在主线程上执行的，所以JavaScript的动画需要主线程的参与，所以效率会大打折扣！","user_name":"作者回复","comment_id":133550,"uid":"1141464","ip_address":"","utype":1,"ctime":1568605406,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"332281084627","product_id":100033601,"comment_content":"老师请教个问题 用CSS3实现动画是不是不会影响主线程，和用JS实现动画会影响主线程，这个说法对么","like_count":78,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467423,"discussion_content":"是这样的，部分css3的动画效果是在合成线程上实现的，不需要主线程介入，所以省去了重拍和重绘的过程，这就大大提升了渲染效率。\n\nJavaScript都是在在主线程上执行的，所以JavaScript的动画需要主线程的参与，所以效率会大打折扣！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568605406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":135360,"user_name":"阿桐","can_delete":false,"product_type":"c1","uid":1160167,"ip_address":"","ucode":"E82211BD6E9E89","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/e7/227ee616.jpg","comment_is_top":false,"comment_ctime":1569138009,"is_pvip":false,"replies":[{"id":"51918","content":"是的，他们都是在渲染进程的主线程上工作，所以同时只能执行一个。<br><br>比如v8除了在主线程上执行JavaScript代码之外，还会在主线程上执行垃圾回收，所以执行垃圾回收时停止主线程上的所有任务，我们把垃圾回收这个特性叫着全停顿。","user_name":"作者回复","comment_id":135360,"uid":"1141464","ip_address":"","utype":1,"ctime":1569152455,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"173367829849","product_id":100033601,"comment_content":"老师，为什么说页面是单线程架构？<br><br>默认情况下每个标签页都会配套一个渲染进程，而一个渲染进程里不是有主线程、合成线程、IO线程等多个线程吗<br><br>是因为【排版引擎 blink】 和【JavaScript引擎 v8】都工作在渲染进程的主线程上并且是互斥的，基于这点说页面是单线程架构？","like_count":41,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468155,"discussion_content":"是的，他们都是在渲染进程的主线程上工作，所以同时只能执行一个。\n\n比如v8除了在主线程上执行JavaScript代码之外，还会在主线程上执行垃圾回收，所以执行垃圾回收时停止主线程上的所有任务，我们把垃圾回收这个特性叫着全停顿。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569152455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191647,"user_name":"052D-131","can_delete":false,"product_type":"c1","uid":1069559,"ip_address":"","ucode":"F6D5B8F6B5A278","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/f7/b6c62ff3.jpg","comment_is_top":false,"comment_ctime":1584786518,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"164793543766","product_id":100033601,"comment_content":"早就了解宏任务和微任务的区别了，但这篇文章让我一下子明白了微任务的来龙去脉，有拨云见日之感。","like_count":39,"discussions":[{"author":{"id":1160050,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b3/72/8c6366aa.jpg","nickname":"烈鸟","note":"","ucode":"F568728E862D50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536800,"discussion_content":"是的，知道了为啥要有个微任务机制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638870424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131570,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1567815487,"is_pvip":false,"replies":[{"id":"50338","content":"你对微任务的理解还是有些偏差的！<br><br>每个宏任务都有一个微任务列表，在宏任务的执行过程中产生微任务会被添加到改列表中，等宏任务快执行结束之后，会执行微认为列表，所以微任务依然运行在当前宏任务的执行环境中，这个特性会导致宏任务和微任务有一些本质上的区别！我们后面再介绍，你可以重点关注下。","user_name":"作者回复","comment_id":131570,"uid":"1141464","ip_address":"","utype":1,"ctime":1567846854,"user_name_real":"李兵"}],"discussion_count":12,"race_medal":0,"score":"156186638143","product_id":100033601,"comment_content":"微任务的本质结合消息队列和事件循环我理解：当事件循环接受到消息时候，判断是否是优先级高的任务，选择插入消息队列的位置不同，进而影响消息执行的顺序。<br>很期待通过js回调方式解决一次执行很长js带来的页面卡顿的问题。<br><br>今日总结<br>为了应对渲染进程主线程繁琐的任务（DOM解析、样式计算、布局、处理js任务、各种输入事件），引入了消息队列和事件循环系统。<br>从任务的复杂度逐渐增加，循序渐进的分析每种场景的处理方式。<br>1. 单线程处理安排好的同步任务<br>2. 引入事件循环接受新的任务<br>3. 引入消息队列处理其他进程发来的任务<br>4. 引入宏任务和微任务解决任务优先级的问题<br>5. 通过Js回调功能解决单个js任务执行时间过长的问题。","like_count":36,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466519,"discussion_content":"你对微任务的理解还是有些偏差的！\n\n每个宏任务都有一个微任务列表，在宏任务的执行过程中产生微任务会被添加到改列表中，等宏任务快执行结束之后，会执行微认为列表，所以微任务依然运行在当前宏任务的执行环境中，这个特性会导致宏任务和微任务有一些本质上的区别！我们后面再介绍，你可以重点关注下。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1567846854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1389336,"avatar":"https://static001.geekbang.org/account/avatar/00/15/33/18/00966d84.jpg","nickname":"mark","note":"","ucode":"CF87A1908A109F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":241512,"discussion_content":"老师，如果微任务里面又嵌套着要执行的微微任务怎么办，层层嵌套的现象会不会出现呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587429059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1371535,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ed/8f/493738b7.jpg","nickname":"Libolus","note":"","ucode":"CACDFBB9B81575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1389336,"avatar":"https://static001.geekbang.org/account/avatar/00/15/33/18/00966d84.jpg","nickname":"mark","note":"","ucode":"CF87A1908A109F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310161,"discussion_content":"我的理解是，如果在微任务中发起了微任务，就会把新发起的微任务推到微任务队列中，只有等微任务队列清空了，才会执行下一个宏任务","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1601650512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":241512,"ip_address":""},"score":310161,"extra":""}]},{"author":{"id":1568263,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ee/07/465058c7.jpg","nickname":"Even.Yu","note":"","ucode":"D55F190AC6E4FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392226,"discussion_content":"那同步代码怎么理解呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630914519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2635932,"avatar":"https://static001.geekbang.org/account/avatar/00/28/38/9c/5b44d8ca.jpg","nickname":"11","note":"","ucode":"F7C5A5F4FD6DFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1568263,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ee/07/465058c7.jpg","nickname":"Even.Yu","note":"","ucode":"D55F190AC6E4FB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540556,"discussion_content":"宏任务开始以后，会先去执行同步代码，遇到了微任务，会加到当前宏任务的微任务队列中，如果遇到了宏任务，就会加到宏任务队列中。当同步代码执行完毕以后，才会去执行微任务列表。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1640080677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392226,"ip_address":""},"score":540556,"extra":""}]},{"author":{"id":1946452,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b3/54/0e76114d.jpg","nickname":"wlaba","note":"","ucode":"EAE1FA3808271F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232139,"discussion_content":"既然只有一个线程，并且该线程正在执行宏任务，想问：微任务是什么时候添加进去的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586856227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1382114,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyiafLesAhyuicJZAhz9XGrG61455c3docOMhyLKMszjLMSBuasV3icuxmuSapjTLdHpNwiaUlAwTTCA/132","nickname":"nicola","note":"","ucode":"E60ED40AAC9D47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1946452,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b3/54/0e76114d.jpg","nickname":"wlaba","note":"","ucode":"EAE1FA3808271F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367461,"discussion_content":"微任务push过程是同步的，执行才会有时序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618369084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":232139,"ip_address":""},"score":367461,"extra":""},{"author":{"id":2114442,"avatar":"https://static001.geekbang.org/account/avatar/00/20/43/8a/9380fe92.jpg","nickname":"KeilingZhuang","note":"","ucode":"CDBA0336FE3E26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1946452,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b3/54/0e76114d.jpg","nickname":"wlaba","note":"","ucode":"EAE1FA3808271F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381034,"discussion_content":"暂停当前宏任务，把微任务push到当前宏任务的微任务列表中，再继续执行当前宏任务，运行环境还是当前宏任务的运行环境，微任务的添加非常迅速，用户感觉不到卡顿。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1624873056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":232139,"ip_address":""},"score":381034,"extra":""}]},{"author":{"id":1557433,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c3/b9/c177ce04.jpg","nickname":"弓","note":"","ucode":"A83780FE6AC7A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212270,"discussion_content":"老师应该把一次微任务的范畴先讲一下，是一次宏任务执行完毕，再调用事件队列的回调函数之前，调用一次微任务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584952902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1229411,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c2/63/e91ba1c4.jpg","nickname":"猫叔","note":"","ucode":"0B72F3DCB0E126","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46580,"discussion_content":"但是老师我在w3c文档中看到 事件循环才有一个微任务，为啥是每个宏任务有一个微任务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573184071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1879990,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/af/b6/734267c2.jpg","nickname":"王小伞","note":"","ucode":"CED58F1555CB6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1229411,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c2/63/e91ba1c4.jpg","nickname":"猫叔","note":"","ucode":"0B72F3DCB0E126","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301501,"discussion_content":"每个EventLoop只有一个微任务队列。只是微任务执行的优先级高于宏任务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598541467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46580,"ip_address":""},"score":301501,"extra":""},{"author":{"id":1382114,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyiafLesAhyuicJZAhz9XGrG61455c3docOMhyLKMszjLMSBuasV3icuxmuSapjTLdHpNwiaUlAwTTCA/132","nickname":"nicola","note":"","ucode":"E60ED40AAC9D47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1879990,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/af/b6/734267c2.jpg","nickname":"王小伞","note":"","ucode":"CED58F1555CB6C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367462,"discussion_content":"每一个宏任务中有一个微任务队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618369135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301501,"ip_address":""},"score":367462,"extra":""}]}]},{"had_liked":true,"id":155419,"user_name":"六个周","can_delete":false,"product_type":"c1","uid":1067697,"ip_address":"","ucode":"7FFED12CC3346F","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/b1/e2b9e94f.jpg","comment_is_top":false,"comment_ctime":1574687330,"is_pvip":false,"replies":[{"id":"59676","content":"这里提到的任务是指浏览器所以需要处理的任务！<br><br>浏览器是基于多进程+多线程架构的，所以多进程通讯（IPC）和多线程同步的问题！<br><br>因为JavaScript引擎是运行在渲染进程的主线程上的，所以我们说JavaScript是单线程执行的！<br>","user_name":"作者回复","comment_id":155419,"uid":"1141464","ip_address":"","utype":1,"ctime":1574715786,"user_name_real":"李兵"}],"discussion_count":4,"race_medal":0,"score":"121833771618","product_id":100033601,"comment_content":"由于是多个线程操作同一个消息队列，所以在添加任务和取出任务时还会加上一个同步锁。<br>请问老师，JS执行不是单线程的吗？为什么这里会说是由多个线程操作同一个队列？","like_count":28,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475746,"discussion_content":"这里提到的任务是指浏览器所以需要处理的任务！\n\n浏览器是基于多进程+多线程架构的，所以多进程通讯（IPC）和多线程同步的问题！\n\n因为JavaScript引擎是运行在渲染进程的主线程上的，所以我们说JavaScript是单线程执行的！\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574715786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2062515,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/78/b3/27ca90f1.jpg","nickname":"(｡ì _ í｡)","note":"","ucode":"6BF86085311937","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329076,"discussion_content":"意思是浏览器多个tab下各自的渲染进程的的各个主线程使用的是一个任务队列吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606307817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1447496,"avatar":"https://static001.geekbang.org/account/avatar/00/16/16/48/01567df1.jpg","nickname":"郑泽洲","note":"","ucode":"EA1B540A040875","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2062515,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/78/b3/27ca90f1.jpg","nickname":"(｡ì _ í｡)","note":"","ucode":"6BF86085311937","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348838,"discussion_content":"猜测是不同渲染进程使用不同任务队列。好不容易用不同渲染进程隔离了不同页面，为什么还要用同一个队列又耦合起来？若是共用，某个渲染进程死了，遗留在任务队列中的任务怎么处理？队列被某个进程长时间锁死怎么办？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612749096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329076,"ip_address":""},"score":348838,"extra":""},{"author":{"id":1447496,"avatar":"https://static001.geekbang.org/account/avatar/00/16/16/48/01567df1.jpg","nickname":"郑泽洲","note":"","ucode":"EA1B540A040875","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2062515,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/78/b3/27ca90f1.jpg","nickname":"(｡ì _ í｡)","note":"","ucode":"6BF86085311937","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348845,"discussion_content":"为了求证，瞄了一下老师链接中的源代码，应该是这样（欢迎指正）：https://source.chromium.org/chromium/chromium/src/+/master:base/task/single_thread_task_executor.cc;l=31","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612751303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329076,"ip_address":""},"score":348845,"extra":""}]}]},{"had_liked":false,"id":223215,"user_name":"鹿一君","can_delete":false,"product_type":"c1","uid":1698311,"ip_address":"","ucode":"EA3645F19F7EAB","user_header":"https://static001.geekbang.org/account/avatar/00/19/ea/07/2a551f9d.jpg","comment_is_top":false,"comment_ctime":1591022730,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"96080303242","product_id":100033601,"comment_content":"这是目前买的几个课里面讲的最好和最认真的","like_count":22,"discussions":[{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353181,"discussion_content":"确实如此，我目前没看到极客时间哪个课程比这个更好的。认真&amp;专业","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615045237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347425,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8f/61/8c28ae2b.jpg","nickname":"D","note":"","ucode":"10A0F1F79156B7","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571917,"discussion_content":"认同，讲的非常通俗易懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652490871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163889,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1576819236,"is_pvip":false,"replies":[{"id":"62330","content":"JavaScript没有自己循环系统，它依赖的就是浏览器的循环系统，也就是渲染进程提供的循环系统！<br><br>所以可以说是一回事","user_name":"作者回复","comment_id":163889,"uid":"1141464","ip_address":"","utype":1,"ctime":1576827050,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"91771132452","product_id":100033601,"comment_content":"老师，请问浏览器的事件循环和js event loop是一回事吗？","like_count":21,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478571,"discussion_content":"JavaScript没有自己循环系统，它依赖的就是浏览器的循环系统，也就是渲染进程提供的循环系统！\n\n所以可以说是一回事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576827050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217052,"user_name":"L-Chris","can_delete":false,"product_type":"c1","uid":1991042,"ip_address":"","ucode":"5906B3127A8B2E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/61/82/2d4f9596.jpg","comment_is_top":false,"comment_ctime":1589413351,"is_pvip":false,"replies":[{"id":"80413","content":"不会，实际过程中采用系统级中断机制，也就是有事件时，线程才会被激活，没事件时，线程就会被挂起","user_name":"作者回复","comment_id":217052,"uid":"1141464","ip_address":"","utype":1,"ctime":1589493971,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"70308890087","product_id":100033601,"comment_content":"事件循环的本质是for循环，循环不会一直迭代导致主线程卡主吗？","like_count":16,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495022,"discussion_content":"不会，实际过程中采用系统级中断机制，也就是有事件时，线程才会被激活，没事件时，线程就会被挂起","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589493971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131853,"user_name":"Rapheal","can_delete":false,"product_type":"c1","uid":1636368,"ip_address":"","ucode":"71BCD0F9131EF2","user_header":"","comment_is_top":false,"comment_ctime":1567937729,"is_pvip":false,"replies":[{"id":"50405","content":"主要有IO线程，用开负责和其它进程IPC通信的，然后主线程主要跑页面的！<br><br>V8是在主线程上执行的，因为dom操作啥的都是在主线程上执行的。<br><br>当然还有其它很多辅助线程，比如预解析DOM的线程，垃圾回收也有一些辅助线程。","user_name":"作者回复","comment_id":131853,"uid":"1141464","ip_address":"","utype":1,"ctime":1567984392,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"53107545281","product_id":100033601,"comment_content":"老师，可以请问下：渲染进程的主线程和V8执行机主线程是同一个线程吗？一个渲染进程有几个线程，分别有啥作用？ <br>","like_count":12,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466646,"discussion_content":"主要有IO线程，用开负责和其它进程IPC通信的，然后主线程主要跑页面的！\n\nV8是在主线程上执行的，因为dom操作啥的都是在主线程上执行的。\n\n当然还有其它很多辅助线程，比如预解析DOM的线程，垃圾回收也有一些辅助线程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567984392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226310,"user_name":"趁你还年轻233","can_delete":false,"product_type":"c1","uid":1053875,"ip_address":"","ucode":"B7CC120EF42980","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/b3/b6e1817a.jpg","comment_is_top":false,"comment_ctime":1592032946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44541705906","product_id":100033601,"comment_content":"宏任务是开会时PM定好的需求，微任务是开发过程中PM新加的加急需求。<br>假设一场迭代会议定下来3个宏任务，在开发第2个宏任务到60%进度的时候，PM新提了一些小的微任务。执行时间可以表示为：第2个宏任务完成之后---[执行新加入的微任务]---第3个宏任务开始之前。","like_count":10},{"had_liked":false,"id":131789,"user_name":"花儿与少年","can_delete":false,"product_type":"c1","uid":1046304,"ip_address":"","ucode":"E2D685737E4F1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","comment_is_top":false,"comment_ctime":1567907464,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"40222613128","product_id":100033601,"comment_content":"宿主发起的任务是宏任务 如点击事件，settimeout 进消息队列；js引擎发起的任务是微任务如promise ","like_count":9,"discussions":[{"author":{"id":2194683,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIia8vbJEhpFlu4ppkwRNJxibRBZ9rnPFL5gevWN7VmKCYdQEB64QnlMEiahLNoKt6KH7IjDXs7yXomg/132","nickname":"李乐勇","note":"","ucode":"0314C148C68B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364994,"discussion_content":"重学前端里的内容","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1617679679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622868,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yxWUVmiccGZdE0lVATCpdUQDh7ubI7BGXRxiadfog14S3TjRR2dcqMLOR87jf2EA3taEFw4FdNMSDhRanKhMB2Kw/132","nickname":"Geek_panda","note":"","ucode":"ED245B851B841A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381666,"discussion_content":"这个看起来有点误导人，不应该这么简单的区分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625155161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1382114,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyiafLesAhyuicJZAhz9XGrG61455c3docOMhyLKMszjLMSBuasV3icuxmuSapjTLdHpNwiaUlAwTTCA/132","nickname":"nicola","note":"","ucode":"E60ED40AAC9D47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367463,"discussion_content":"云里雾里的，什么宿主、js引擎？ 不都是v8吗? 只听过dom api或者web api这些区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618369329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255462,"discussion_content":"重学前端里的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588403667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136265,"user_name":"GY","can_delete":false,"product_type":"c1","uid":1379119,"ip_address":"","ucode":"764214512E67C1","user_header":"https://static001.geekbang.org/account/avatar/00/15/0b/2f/6efc3051.jpg","comment_is_top":false,"comment_ctime":1569400196,"is_pvip":false,"discussion_count":16,"race_medal":0,"score":"35929138564","product_id":100033601,"comment_content":"非常疑惑，几个问题希望能解答一下<br>1.我在查阅一些资料，是这么描述的，渲染进程主要有GUI渲染渲染线程，JS引擎线程，事件触发线程，定时触发器线程。而本文一直在讲主线程，那么主线程到底是什么？是独立于这几个线程吗，还是这几个线程中的某一个<br>2.您在回答提问中，有提到了IO线程，以及辅助线程，这些又是什么？我在网上查不到比较好的回答<br>3.比较好奇window.onload的是如何执行的，js引擎执行到这段代码时，不会立即执行，那么会将这段代码怎么处理，什么时候执行，当他被触发时，是作为宏任务进入消息队列还是微任务进入微任务队列，还是其他的方式？<br>4.我该如何理解任务，因为我在测试一个HTML文件中出现多个script标签且都包含一段setTimeout，前面的script中的setTimeout函数，有时会先于后面的script块执行，那么我应该怎么理解这个过程，他并不是按照   第一个script标签中代码编译--执行--setTimeout进入消息队列--微任务执行--第二个script标签编译--执行--setTimeout进入消息队列--微任务执行.....--从消息队列取出第1个script标签中的setTImeout执行--从消息队列取出第2个script标签中的setTImeout执行","like_count":8,"discussions":[{"author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46711,"discussion_content":"至于，什么是一个任务，我在这里需要强调：一段js代码 才是一个任务，而不是一行 js 代码。所谓的 “一段js代码 才是一个任务” 是什么意思呢？可以肯定的告诉你：一个 script 标签里的所有代码，它们组成了一个任务（宏任务，多个 script 多个宏任务）；一个 onClick 回调里的代码，它们也组成了一个任务（宏任务）；promis.then 回调里的代码 是一个任务（微任务）等等。script 标签中的代码通过 类似 addEventListenner(&#39;click&#39;, callback) 的方式，记录了一个事件: 当 click 发生的时候，callback 作为一个任务被推入到 User Interaction\nTask Queue。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1573198210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1374337,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","nickname":"1830","note":"","ucode":"246FEF7C97F39C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554170,"discussion_content":"大佬，有技术博客或者个人微信嘛，想要认识一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646234066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46711,"ip_address":""},"score":554170,"extra":""},{"author":{"id":2708942,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VzjUV1Io39wvVzLpdyF2ibIodS1JpTiaDKosSQSWDMgSjhxrWUSQYwUzK3cSeJW5Zz3zwLlDnyKcX1QAib9TCcvAw/132","nickname":"Geek_e2c59e","note":"","ucode":"14B60545ABB9F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560895,"discussion_content":"答人之所惑，谓之大佬也","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649485877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46711,"ip_address":""},"score":560895,"extra":""}]},{"author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46709,"discussion_content":"哈哈哈！对于事件循环，我也是查阅了大量的资料（中文的英文的），结果就被一堆的“任务队列”、“消息队列”、“异步队列”，“同步队列”，“事件队列” 搞懵逼了。同时也被各种线程，尤其是 “主线程” 这个概念给彻底搞懵逼了。\n\n我发现国内外其实对这个机制都理解的很不透彻。于是我决定溯源，仔细查看了 HTML 标准的 Event Loop 部分。有些发现，分享给你","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1573198159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46714,"discussion_content":"脚本任务 将会由 v8 模块所在的线程（js线程）执行；界面渲染任务则会由 webkit 模块所在线程（渲染线程）执行；而 HTTP 任务则会由 网络进程 中的 网络线程执行。我们都知道 js 的长时间执行会导致界面卡顿、js线程与渲染线程互斥，其本质是 脚本任务 作为 current running task 执行过长时间，渲染任务 无法成为 currrent running task 导致。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1573198253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1342497,"avatar":"https://static001.geekbang.org/account/avatar/00/14/7c/21/0aaa3835.jpg","nickname":"李章鱼","note":"","ucode":"0C0C8EF0611914","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299107,"discussion_content":"讲得很好，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597565913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46714,"ip_address":""},"score":299107,"extra":""}]},{"author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46713,"discussion_content":"关于这个任务执行的调度算法，需要知道：\n0. 调度算法综合很多的因素：队列的权重、队列内任务的等待时间、任务类型（宏/微）等\n1. User InteractionTask Queue 这个 queue 比其他的 queue 有着更高的优先级。以便能够更流畅的响应界面交互；\n2. 每次执行完一个宏任务之后，就会循环所有的微任务，并依次将他们执行完毕，直至微任务队列清空\n3. 任务有很多种，有脚本执行，还有界面渲染等","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573198239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46712,"discussion_content":"事件循环中，有一个 current running task 的引用。它引用就是当前正在执行的任务。事实上浏览器的事件循环是有一个调度算法的。每次从 众多的 queue 当中选取一个任务出队，然后将 current running task 设置为这个任务。接下来通过js 引擎的预编译(字节码)以及逐行解析，在执行栈当中产生了 Execution Context 的堆栈（这个老师讲的很好）。有些资料认为这个执行栈就是 “同步队列”，这是大错特错的。需要注意。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573198226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46716,"discussion_content":"至于 谁是主线程，我倾向于认为在上述的几条线程之外，还有一条线程来执行这个调度算法。事实上我已经有初步的模型。不过先把本课程学完，之后看看有没有需要迭代的，然后再跟你分享。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1573198266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1308806,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLUabUgtOZicYOXBr3LSGrRcXCkMNFn3qWib56Gc7got9XL940BC9SZW3lZlwxowG8RhODcB7C5rHlQ/132","nickname":"大西瓜撒","note":"","ucode":"11A5AA3456FB49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214558,"discussion_content":"有没有写相关的文章？想要参考一下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585208129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46716,"ip_address":""},"score":214558,"extra":""}]},{"author":{"id":1073756,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/5c/550fb243.jpg","nickname":"auscarᶘ ᵒᴥᵒᶅ","note":"","ucode":"639D40557863BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46710,"discussion_content":"首先 浏览器 并没有 消息队列 的概念。有的只是 任务队列。而且 任务队列 不止一个。不同类型的事件触发后，相应的任务会推入到不同的任务队列当中。如用户的 鼠标事件、定时器事件、HTTP 回调事件 等等，其对应的 任务队列 分别为 User Interaction\nTask Queue、Timer Callback Task Queue、HTTP Callback Task Queue。注意，这些事件如果不触发，相应的任务就不会入队，也就得不到 js 引擎的执行。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573198195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3020655,"avatar":"","nickname":"Geek_28745a","note":"","ucode":"242F2D4477D006","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575083,"discussion_content":"GUI渲染渲染线程，JS引擎线程，事件触发线程，定时触发器线程，这些说法没有一个权威的出处，怀疑是各个文章互相抄袭而来的，在performance面板里面没有看到有这些线程存在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654585554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691581,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cf/bd/4fa01a1c.jpg","nickname":"wd2010","note":"","ucode":"E194E4EFECA013","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26511,"discussion_content":"@充电中 你讲的疑惑刚刚也是我疑惑的，希望老师能帮忙解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570605258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1430382,"avatar":"https://static001.geekbang.org/account/avatar/00/15/d3/6e/7b6a9d91.jpg","nickname":"浪里行舟","note":"","ucode":"23D7E1C4DD5221","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22918,"discussion_content":"&#34;渲染进程主要有GUI渲染渲染线程，JS引擎线程，事件触发线程，定时触发器线程&#34;。网上文章好多这种说法，但好像跟本文中出入较大，我也很困扰","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569727590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1430382,"avatar":"https://static001.geekbang.org/account/avatar/00/15/d3/6e/7b6a9d91.jpg","nickname":"浪里行舟","note":"","ucode":"23D7E1C4DD5221","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223572,"discussion_content":"可以结合 01 章，里面就说了渲染进程所包含的线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586236941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22918,"ip_address":""},"score":223572,"extra":""},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1430382,"avatar":"https://static001.geekbang.org/account/avatar/00/15/d3/6e/7b6a9d91.jpg","nickname":"浪里行舟","note":"","ucode":"23D7E1C4DD5221","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225107,"discussion_content":"哈哈哈哈 大佬调研下 主要不知道去哪里获取一手资料","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586348735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22918,"ip_address":""},"score":225107,"extra":""}]}]},{"had_liked":false,"id":131569,"user_name":"得闲读书","can_delete":false,"product_type":"c1","uid":1562743,"ip_address":"","ucode":"44969F6575E94B","user_header":"https://static001.geekbang.org/account/avatar/00/17/d8/77/123b6608.jpg","comment_is_top":false,"comment_ctime":1567815474,"is_pvip":false,"replies":[{"id":"50337","content":"第一个理解没错，事件循环系统就是在监听并执行消息队列中的任务！<br><br>第二个理解也没问题，不过promise触发的微任务，settimeout触发的是宏任务！","user_name":"作者回复","comment_id":131569,"uid":"1141464","ip_address":"","utype":1,"ctime":1567846522,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"31632586546","product_id":100033601,"comment_content":"老师，所以，事件循环其实是监听执行任务的循环机制吗？而每一个执行任务都存档在消息队列里面，这些统称为宏任务，微任务是执行宏任务中遇到的异步操作吧，就是异步代码，如promise,settimeout任务。执行宏任务遇到异步任务先将其放入微任务列表，等该宏任务执行一遍后再执行该宏任务的微任务列表，我这样理解对吗？","like_count":7,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466518,"discussion_content":"第一个理解没错，事件循环系统就是在监听并执行消息队列中的任务！\n\n第二个理解也没问题，不过promise触发的微任务，settimeout触发的是宏任务！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567846522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134457,"user_name":"阿段","can_delete":false,"product_type":"c1","uid":1620143,"ip_address":"","ucode":"D9EA14A0BE1B69","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ExHHyMiauDKhjmy4n8rgA1e3IVRd8vegMAnOFC7u6p9aiaefEJEZKa2Pu5rARLbeNicuz9NFicpF5YXEFf35gNn2vQ/132","comment_is_top":false,"comment_ctime":1568850683,"is_pvip":false,"replies":[{"id":"51557","content":"每个宏任务都有微任务队列","user_name":"作者回复","comment_id":134457,"uid":"1141464","ip_address":"","utype":1,"ctime":1568857704,"user_name_real":"李兵"}],"discussion_count":3,"race_medal":0,"score":"23043687163","product_id":100033601,"comment_content":"每一个宏任务都有一个微任务队列？还是整个任务队列有一个微任务队列？","like_count":5,"discussions":[{"author":{"id":1141913,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6c/99/c0572424.jpg","nickname":"🐑郑星星","note":"","ucode":"1676E1C5ECD6EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":231883,"discussion_content":"假如只有一个微任务队列，每次微任务队列执行完毕后，清空该队列，这个模型也是可以的吧。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586835821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1273044,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/d4/85ef1463.jpg","nickname":"路漫漫","note":"","ucode":"F70F1DC612DE9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141913,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6c/99/c0572424.jpg","nickname":"🐑郑星星","note":"","ucode":"1676E1C5ECD6EB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549146,"discussion_content":"我认为也是可以的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643621925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":231883,"ip_address":""},"score":549146,"extra":""}]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467757,"discussion_content":"每个宏任务都有微任务队列","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568857704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311653,"user_name":"斯塔克","can_delete":false,"product_type":"c1","uid":2019446,"ip_address":"","ucode":"8BE17C01CADF0F","user_header":"","comment_is_top":false,"comment_ctime":1631366730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14516268618","product_id":100033601,"comment_content":"面试官：讲一下浏览器的事件循环<br>事件其实就是一系列的任务，比如网络进程负责调度资源加载、渲染进程负责调度DOM解析、styleSheet生成、布局计算等，但由于浏览器只有一个主线程，而且在线程运行过程中可能产生新的任务，这时候就需要一种机制，能够不断的加入任务和执行任务。这就是事件循环系统。而加入任务的地方就是消息队列<br>之所以叫消息队列，我们分别从消息和队列来理解。<br>消息：每个渲染进程都有一个IO线程用来接受其他进程（比如网络进程等）传来的消息，这些消息便是未来（这个未来可以是一个很短的瞬间，如果当前任务不多、计算量不多）要执行的任务。<br>队列：这是一种数据结构，任务的调度符合队列‘先进先出’的特点，先进去的任务，拥有优先执行权，后进去的任务要等前面的任务执行完成后（完成 = 当前循环宏任务 + 对应微任务 2种任务都清空）。","like_count":3},{"had_liked":false,"id":132753,"user_name":"朱维娜🍍","can_delete":false,"product_type":"c1","uid":1625918,"ip_address":"","ucode":"2BE89ABFE2BF0C","user_header":"https://static001.geekbang.org/account/avatar/00/18/cf/3e/5c684022.jpg","comment_is_top":false,"comment_ctime":1568213933,"is_pvip":false,"replies":[{"id":"50921","content":"有啊，比如渲染过程就有合成线程，解析DOM过程中还有预解析线程，这些现场都会和主线程有交互的","user_name":"作者回复","comment_id":132753,"uid":"1141464","ip_address":"","utype":1,"ctime":1568279005,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"14453115821","product_id":100033601,"comment_content":"在渲染进程里面，除了I&#47;O线程，其他线程也会往消息队列中添加任务，是吗？","like_count":3,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467105,"discussion_content":"有啊，比如渲染过程就有合成线程，解析DOM过程中还有预解析线程，这些现场都会和主线程有交互的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568279005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131719,"user_name":"阿桐","can_delete":false,"product_type":"c1","uid":1160167,"ip_address":"","ucode":"E82211BD6E9E89","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/e7/227ee616.jpg","comment_is_top":false,"comment_ctime":1567862424,"is_pvip":false,"replies":[{"id":"50358","content":"这个我会在微任务那节详细分析","user_name":"作者回复","comment_id":131719,"uid":"1141464","ip_address":"","utype":1,"ctime":1567923965,"user_name_real":"李兵"}],"discussion_count":2,"race_medal":0,"score":"14452764312","product_id":100033601,"comment_content":"老师，专栏中有段内容我看了几遍还是似懂非懂，您方便举个例子再给我说说吗？<br><br>“比如一个典型的场景是监控 DOM 节点的变化情况（节点的插入、修改、删除等动态变化），然后根据这些变化来处理相应的业务逻辑。一个通用的设计的是，利用 JavaScript 设计一套监听接口，当变化发生时，渲染引擎同步调用这些接口，这是一个典型的观察者模式。<br>不过这个模式有个问题，因为 DOM 变化非常频繁，如果每次发生变化的时候，都直接调用相应的 JavaScript 接口，那么这个当前的任务执行时间会被拉长，从而导致执行效率的下降。”","like_count":3,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466592,"discussion_content":"这个我会在微任务那节详细分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567923965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1375438,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fc/ce/f7d37213.jpg","nickname":"kyo","note":"","ucode":"0A53071242C672","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8312,"discussion_content":"应该是MutationObserver这类的接口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567913654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344100,"user_name":"纪颖志","can_delete":false,"product_type":"c1","uid":1619653,"ip_address":"","ucode":"2235F460779627","user_header":"https://static001.geekbang.org/account/avatar/00/18/b6/c5/6d8d0ffd.jpg","comment_is_top":false,"comment_ctime":1651238841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10241173433","product_id":100033601,"comment_content":"事件循环是需要一个单独的线程来控制，还是在主线程上执行的？","like_count":2},{"had_liked":false,"id":219226,"user_name":"张萌","can_delete":false,"product_type":"c1","uid":1377299,"ip_address":"","ucode":"89C08DB3239BE5","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/13/84d35588.jpg","comment_is_top":false,"comment_ctime":1589968806,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10179903398","product_id":100033601,"comment_content":"怎么区分宏任务还是微任务，宏任务中不能产生新的宏任务吗","like_count":2,"discussions":[{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577473,"discussion_content":"宏任务可以产生新的宏任务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656134162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204645,"user_name":"宅神","can_delete":false,"product_type":"c1","uid":1567899,"ip_address":"","ucode":"D44140A208744F","user_header":"https://static001.geekbang.org/account/avatar/00/17/ec/9b/29863411.jpg","comment_is_top":false,"comment_ctime":1586434837,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10176369429","product_id":100033601,"comment_content":"老师，我发现一个问题：很多博客在讲事件循环时，会先引入宏任务和微任务概念。这样捆绑着会让人以为事件循环和它俩是密不可分的。 看了您的介绍发现两者是独立的机制。为了解决不同的问题 事件循环让渲染主线程可以接收其他线程发来的消息，微任务队列让主线程及时的处理异步任务。 我这样理解对吗？","like_count":2,"discussions":[{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291787,"discussion_content":"是的 赞同 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594953403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174727,"user_name":"NikkiZeng","can_delete":false,"product_type":"c1","uid":1765894,"ip_address":"","ucode":"F669C811773394","user_header":"https://static001.geekbang.org/account/avatar/00/1a/f2/06/ebb5b764.jpg","comment_is_top":false,"comment_ctime":1580364574,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"10170299166","product_id":100033601,"comment_content":"老师, 请问一下所有的 主线程执行的任务都全部从消息队列中获取,而任务是原子性的，执行了就不会中断,那为什么遇到js脚本还会暂停DOM解析呢","like_count":2,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224723,"discussion_content":"17章节我看了一下，有说到这个问题 “Parse HTML 是一个完整的任务，在执行过程中的脚本解析、样式表解析都是该任务的子过程” ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586325883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1765894,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/f2/06/ebb5b764.jpg","nickname":"NikkiZeng","note":"","ucode":"F669C811773394","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251447,"discussion_content":"对，也就说在Parse HTML(解析HTML)这个完整的任务当中，会构建DOM树, CSSOM，解析js脚本等等。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588084887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":224723,"ip_address":""},"score":251447,"extra":""}]},{"author":{"id":1111184,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/90/00e44acd.jpg","nickname":"错夕","note":"","ucode":"7452E1D7B38236","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362586,"discussion_content":"排版引擎和JS引擎都是跑在主线程之上  当遇到JS脚本会调度JS引擎来执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616986131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223583,"discussion_content":"有答案了回复我一下，我也想知道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586237796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140836,"user_name":"L","can_delete":false,"product_type":"c1","uid":1228268,"ip_address":"","ucode":"26BB686671F7D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/ec/cc7abf0b.jpg","comment_is_top":false,"comment_ctime":1571056670,"is_pvip":true,"replies":[{"id":"54535","content":"等专栏结束后起来补充介绍。几个主要线程的架构","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1571095051,"ip_address":"","comment_id":140836,"utype":1}],"discussion_count":4,"race_medal":0,"score":"10160991262","product_id":100033601,"comment_content":"老师我觉得在第一篇那个进程哪里，应该可以顺手说一下浏览器主进程中的那些线程。。。","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470583,"discussion_content":"等专栏结束后起来补充介绍。几个主要线程的架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571095051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577475,"discussion_content":"主线程，合成线程，I/O线程，垃圾回收辅助线程，一些预解析线程，等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656134359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2240734,"avatar":"https://static001.geekbang.org/account/avatar/00/22/30/de/10a85475.jpg","nickname":"z","note":"","ucode":"98B89DC574793C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362994,"discussion_content":"补充在哪里？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617087578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623929,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c7/79/96c68b66.jpg","nickname":"ONE","note":"","ucode":"12165571846C49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319346,"discussion_content":"补充在哪里？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604003731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134632,"user_name":"レイン小雨","can_delete":false,"product_type":"c1","uid":1219933,"ip_address":"","ucode":"45BED977EFE852","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/5d/3fdead91.jpg","comment_is_top":false,"comment_ctime":1568882847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10158817439","product_id":100033601,"comment_content":"宏任务好比是项目开发过程中安排好的工作，先开发哪一块再开发哪一块，微任务就是产品或测试突然过来要你改个bug。","like_count":2},{"had_liked":false,"id":131631,"user_name":"Geek_Jamorx","can_delete":false,"product_type":"c1","uid":1608908,"ip_address":"","ucode":"5B5669D0C75FBD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0F94uoYZQicRd7YEFjEJWm0EaUJXzkhiaqa5GQQ8a1FkicQIoHC4sp2ZG9m1JAFABuGsj34ucztjibA/132","comment_is_top":false,"comment_ctime":1567828077,"is_pvip":false,"replies":[{"id":"50335","content":"这个在下篇文章揭晓","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567846102,"ip_address":"","comment_id":131631,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10157762669","product_id":100033601,"comment_content":"切入角度很好，通俗易懂。微任务就是优先级最高的消息队列，用于在当前函数执行结束后立即执行<br>有个问题，宏任务队列和微任务队列分别只有一个么，还是宏任务队列中又有setTimeout队列和setInterval队列？希望解答一下","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466547,"discussion_content":"这个在下篇文章揭晓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567846102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307937,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/21/51712400.jpg","nickname":"黑白印象","note":"","ucode":"DAEDAE8FEAE98E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293751,"discussion_content":"微任务就是宏任务后边托了一个小油瓶","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595659100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347202,"user_name":"何江涛","can_delete":false,"product_type":"c1","uid":1938247,"ip_address":"","ucode":"844470733623BF","user_header":"https://static001.geekbang.org/account/avatar/00/1d/93/47/ef2c3c4e.jpg","comment_is_top":false,"comment_ctime":1653813986,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5948781282","product_id":100033601,"comment_content":"事件循环，循环队列，微任务是不同的机制。很多博客把它们捆绑。<br><br>事件循环，解决主线程不能接收任务的问题。<br><br>循环队列，解决众多任务，按什么顺序被主线程接受的问题。(这里说的任务称为宏任务)<br><br>微任务，解决 临时产生的高优先级任务，无法被优先执行的问题。","like_count":1},{"had_liked":false,"id":314527,"user_name":"HXL","can_delete":false,"product_type":"c1","uid":2631455,"ip_address":"","ucode":"97298EEC95BFCA","user_header":"https://static001.geekbang.org/account/avatar/00/28/27/1f/42059b0f.jpg","comment_is_top":false,"comment_ctime":1633176196,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5928143492","product_id":100033601,"comment_content":"现在我的答案是:微任务的出现就是用来处理高优任务的","like_count":1},{"had_liked":false,"id":305908,"user_name":"Liber","can_delete":false,"product_type":"c1","uid":1244231,"ip_address":"","ucode":"A5CBFDB15A7745","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/47/a4be64d8.jpg","comment_is_top":false,"comment_ctime":1628226998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5923194294","product_id":100033601,"comment_content":"“现在你知道页面主线程是如何接收外部任务的了，那接下来我们再来看看消息队列中的任务类型有哪些。你可以参考下Chromium 的官方源码，这里面包含了很多内部消息类型，如输入事件（鼠标滚动、点击、移动）、微任务、文件读写、WebSocket、JavaScript 定时器等等。”<br><br>下一讲提到settimeout会放在延迟队列中，每次渲染主线程执行完一个任务之后会去检查延迟队列。<br>看似跟这里说的“JavaScript定时器”也放在消息队列中有出入，怎么理解呢？","like_count":1},{"had_liked":false,"id":209863,"user_name":"Yu","can_delete":false,"product_type":"c1","uid":1378345,"ip_address":"","ucode":"1036F9AFED7A4B","user_header":"https://static001.geekbang.org/account/avatar/00/15/08/29/e0a19ed5.jpg","comment_is_top":false,"comment_ctime":1587628096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882595392","product_id":100033601,"comment_content":"每一个线程是不是都有自己的消息循环和消息队列呢？这里讲的是主线程上的默认的消息循环嘛？<br>另外，消息是如何被添加到消息队列中的呢？主线程又是如何发送消息给其他线程的？<br>chrome是如何避免两个线程同时添加任务到主线程消息队列的呢？","like_count":1},{"had_liked":false,"id":208725,"user_name":"mark","can_delete":false,"product_type":"c1","uid":1389336,"ip_address":"","ucode":"CF87A1908A109F","user_header":"https://static001.geekbang.org/account/avatar/00/15/33/18/00966d84.jpg","comment_is_top":false,"comment_ctime":1587429128,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5882396424","product_id":100033601,"comment_content":"老师，如果微任务里面又嵌套着要执行的微微任务怎么办，层层嵌套的现象会不会出现呢","like_count":1,"discussions":[{"author":{"id":1909693,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/23/bd/b150086a.jpg","nickname":"在路上_W","note":"","ucode":"632D9130F58D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244420,"discussion_content":"微任务又产生微任务的话，会加到微任务队列后面，直到当前这个微任务队列空了，才会走到下一个宏任务。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587603107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255475,"discussion_content":"后面章节有讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588404362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181874,"user_name":"Change","can_delete":false,"product_type":"c1","uid":1161260,"ip_address":"","ucode":"FB60D2378C9F02","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/2c/0f7baf3a.jpg","comment_is_top":false,"comment_ctime":1582652049,"is_pvip":false,"replies":[{"id":"70632","content":"就一个线程也是可以使用消息队列的，任务过多，需要排队执行，就需要引入队列","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1582792764,"ip_address":"","comment_id":181874,"utype":1}],"discussion_count":1,"race_medal":2,"score":"5877619345","product_id":100033601,"comment_content":"老师，消息队列可不可以理解为是为多线程之间相互合作而引入的机制？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485149,"discussion_content":"就一个线程也是可以使用消息队列的，任务过多，需要排队执行，就需要引入队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582792764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161984,"user_name":"尝试者说","can_delete":false,"product_type":"c1","uid":1086570,"ip_address":"","ucode":"305ABCD369E7D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/6a/d40f64ec.jpg","comment_is_top":false,"comment_ctime":1576424098,"is_pvip":false,"replies":[{"id":"61703","content":"任务是原子性的，执行了就不会中断","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1576469989,"ip_address":"","comment_id":161984,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5871391394","product_id":100033601,"comment_content":"何为高优先级的任务？如果当前正在执行一个任务，突然有个高优先级的任务，那么当前这个任务要暂停，先执行这个高优先级的任务吗？这个高优先级的任务执行完后，在接着执行当前的任务？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477938,"discussion_content":"任务是原子性的，执行了就不会中断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576469989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1490128,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJwHLLQK3AicN8XqichEbfqSACpRB5kry8bIMBcuB3bSiaeic9hABrmn7TZgqaWJ8Xc1gWh6icasZCt3Fg/132","nickname":"l_j_dota_1111","note":"","ucode":"4CA8A41F5107C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232361,"discussion_content":"DOM解析任务，遇到JavaScript代码进来，不是暂停解析任务，执行js代码吗，怎么说不能中断呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586867505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1307937,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/21/51712400.jpg","nickname":"黑白印象","note":"","ucode":"DAEDAE8FEAE98E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1490128,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJwHLLQK3AicN8XqichEbfqSACpRB5kry8bIMBcuB3bSiaeic9hABrmn7TZgqaWJ8Xc1gWh6icasZCt3Fg/132","nickname":"l_j_dota_1111","note":"","ucode":"4CA8A41F5107C7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293757,"discussion_content":"Dom解析任务，应该是n多个宏任务组成吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595660172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":232361,"ip_address":""},"score":293757,"extra":""}]}]},{"had_liked":false,"id":143537,"user_name":"Sean","can_delete":false,"product_type":"c1","uid":1272789,"ip_address":"","ucode":"BC0715BF423613","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/d5/0e4b70a2.jpg","comment_is_top":false,"comment_ctime":1571727488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5866694784","product_id":100033601,"comment_content":"微任务是优先级、实时性要求比较高的任务；引入微任务之后可以提高实时响应性","like_count":1},{"had_liked":false,"id":143297,"user_name":"l1shu","can_delete":false,"product_type":"c1","uid":1624297,"ip_address":"","ucode":"FCF3E36905B404","user_header":"https://static001.geekbang.org/account/avatar/00/18/c8/e9/c7c5cbf5.jpg","comment_is_top":false,"comment_ctime":1571664094,"is_pvip":false,"replies":[{"id":"55344","content":"嗯，你的理解的是对的，这块语言我考虑重新组织下","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1571669841,"ip_address":"","comment_id":143297,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5866631390","product_id":100033601,"comment_content":"接收到消息之后，会将这些消息组装成任务发送给渲染主线程<br><br>这里的【渲染主线程】应该是【消息队列】吧？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471472,"discussion_content":"嗯，你的理解的是对的，这块语言我考虑重新组织下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571669841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2078154,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/b5/ca/d8783f69.jpg","nickname":"blue","note":"","ucode":"07E4383E7E91B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293491,"discussion_content":"我看到这里也懵了一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595558044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141089,"user_name":"splm","can_delete":false,"product_type":"c1","uid":1338601,"ip_address":"","ucode":"2216332252CEA7","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/e9/072b33b9.jpg","comment_is_top":false,"comment_ctime":1571112272,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5866079568","product_id":100033601,"comment_content":"疑问：宏任务与微任务的加入是为了实时性和效率。按照策略，微任务的执行是在宏任务主要功能执行完毕后调用，也就是说优先于下一个任务，但仍会因为宏任务正在执行主要功能而有存在延迟？如果宏任务的主要功能相对耗时，那是不是也意味着微任务也要等待，那实时性又是怎么确定的？","like_count":1,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223579,"discussion_content":"只能说实时性有提升，但不是完美解决。相当于一开始是从队尾排队，变成了现在的插队","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586237456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314461,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0e/9d/e7a960a9.jpg","nickname":"药","note":"","ucode":"011960DB28FCE4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38492,"discussion_content":"我也想知道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571795237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133632,"user_name":"蔡金标","can_delete":false,"product_type":"c1","uid":1115483,"ip_address":"","ucode":"439F1EB9759DAA","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/5b/ed7c4b97.jpg","comment_is_top":false,"comment_ctime":1568624906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863592202","product_id":100033601,"comment_content":"老师您好，我想请问一下，这里说的主线程是指JS引擎线程吗，如果是的话，所以前面章节讲的构建DOM树那些都是在JS引擎线程上的而不是GUI渲染线程对吗","like_count":1},{"had_liked":false,"id":133144,"user_name":"AICC","can_delete":false,"product_type":"c1","uid":1020746,"ip_address":"","ucode":"C1D18B1E8B2DCE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/4a/de82f373.jpg","comment_is_top":false,"comment_ctime":1568386222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863353518","product_id":100033601,"comment_content":"老师，有一个疑问，我理解一个tab标签页是在任务管理器是被视为一个进程，那在这样的进程内，理论上都应该是线程，比如一个tab页里分为：GUI线程，JS引擎线程，事件触发线程，定时器线程，网络线程，而不是像文中提到的网络进程，浏览器进程？","like_count":1},{"had_liked":false,"id":131607,"user_name":"早起不吃虫","can_delete":false,"product_type":"c1","uid":1369757,"ip_address":"","ucode":"13CD3B5E1F9435","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7WkTI1IicbKvsPJng5vQh5qlrf1smbfl2zb7icHZfzcAk1k4lr8w8IDEAdrqq1NHW5XZMPXiaa1h7Jn1LGOWOCkIA/132","comment_is_top":false,"comment_ctime":1567824280,"is_pvip":false,"replies":[{"id":"50336","content":"马上会有专门的章节来讲微认为，不过理解消息队列和事件循环是理解微任务的基础！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567846237,"ip_address":"","comment_id":131607,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862791576","product_id":100033601,"comment_content":"老师，宏任务跟微任务能不能详细讲讲呢，譬如哪些是宏任务哪些是微任务？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466533,"discussion_content":"马上会有专门的章节来讲微认为，不过理解消息队列和事件循环是理解微任务的基础！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567846237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359002,"user_name":"iLeGeND","can_delete":false,"product_type":"c1","uid":1055475,"ip_address":"北京","ucode":"4055A628A6E97C","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","comment_is_top":false,"comment_ctime":1665139110,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665139110","product_id":100033601,"comment_content":"阈（yu）值","like_count":0},{"had_liked":false,"id":357164,"user_name":"Geek_8476da","can_delete":false,"product_type":"c1","uid":1623282,"ip_address":"广东","ucode":"9AE358E5F160AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erMrXia5kb1AXUJoiccmIQxSQ7ib5SkibsQqd9FZInQcwYeNbZXp7CCtMibtg0RLHoza1NVo8A5M3uIluA/132","comment_is_top":false,"comment_ctime":1663001210,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663001210","product_id":100033601,"comment_content":"微任务就是异步","like_count":0},{"had_liked":false,"id":357156,"user_name":"Geek_8476da","can_delete":false,"product_type":"c1","uid":1623282,"ip_address":"广东","ucode":"9AE358E5F160AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erMrXia5kb1AXUJoiccmIQxSQ7ib5SkibsQqd9FZInQcwYeNbZXp7CCtMibtg0RLHoza1NVo8A5M3uIluA/132","comment_is_top":false,"comment_ctime":1662995486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662995486","product_id":100033601,"comment_content":"事件循环，一直循环，为啥不会阻塞进程呢，js不是单线程么","like_count":0},{"had_liked":false,"id":354605,"user_name":"sheerhr","can_delete":false,"product_type":"c1","uid":1633993,"ip_address":"上海","ucode":"212544DF727522","user_header":"https://static001.geekbang.org/account/avatar/00/18/ee/c9/65b3c6be.jpg","comment_is_top":false,"comment_ctime":1660582229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660582229","product_id":100033601,"comment_content":"宏任务和微任务是hashmap结构吗？","like_count":0},{"had_liked":false,"id":351172,"user_name":"Geek_116864","can_delete":false,"product_type":"c1","uid":2613671,"ip_address":"","ucode":"D8A8C3194E5080","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/LWicoUend7QOH6pyXGJyJicFn2ITHZ7iaVorxj3cNlX0EOfknIvgC0mPrVPS0CavPGbwMbRM3Jb0V7HIRicq5bEc8g/132","comment_is_top":false,"comment_ctime":1657590185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657590185","product_id":100033601,"comment_content":"消息队列中的任务有同步任务和异步任务，他们都叫宏任务吗？","like_count":0},{"had_liked":false,"id":350351,"user_name":"云中行走","can_delete":false,"product_type":"c1","uid":1798511,"ip_address":"","ucode":"99C0EF21FCF6B3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/71/6f/0193d484.jpg","comment_is_top":false,"comment_ctime":1656841916,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656841916","product_id":100033601,"comment_content":"我理解的这里的微任务是为了优先调度引入的优化机制","like_count":0},{"had_liked":false,"id":339665,"user_name":"cdran","can_delete":false,"product_type":"c1","uid":1941234,"ip_address":"","ucode":"BD3DCC7FF70EF8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRArQL0LsyDFYj0iakNfKMicfJEzYmibwicOw4EEicUpGbQ4FibCLd90Naj2YAFwU8bQmMRbbdibKylNPGg/132","comment_is_top":false,"comment_ctime":1648281990,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648281990","product_id":100033601,"comment_content":"渲染进程中的主线程是指什么呢？是js引擎线程吗？","like_count":0},{"had_liked":false,"id":335444,"user_name":"观山","can_delete":false,"product_type":"c1","uid":2916084,"ip_address":"","ucode":"E59B190A0A12A1","user_header":"https://static001.geekbang.org/account/avatar/00/2c/7e/f4/bae2de8c.jpg","comment_is_top":false,"comment_ctime":1645520553,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645520553","product_id":100033601,"comment_content":"老师，这里的循环执行和上一章里面的执行栈，堆的关系 应该就是，每执行一个循环，就产生一个执行上下文？<br>对宏任务，微任务的概念有点不太清晰，或者说是一个任务里面可能包含了很多函数，一个循环里面已经进行了很多步进栈出栈的操作？<br>","like_count":0},{"had_liked":false,"id":334564,"user_name":"Hhpon","can_delete":false,"product_type":"c1","uid":1020726,"ip_address":"","ucode":"12FE37D4B67631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/36/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1645002054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645002054","product_id":100033601,"comment_content":"您好，鼠标点击为什么会进入消息队列呢？浏览器事件都会进入到消息队列吗？他们是宏任务？","like_count":0},{"had_liked":false,"id":329443,"user_name":"weineel","can_delete":false,"product_type":"c1","uid":1049741,"ip_address":"","ucode":"6DC6EF4F256A53","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/8d/005c2ff3.jpg","comment_is_top":false,"comment_ctime":1641352250,"is_pvip":true,"discussion_count":1,"race_medal":2,"score":"1641352250","product_id":100033601,"comment_content":"老师您好，为什么下面的代码执行顺序是不固定的？是在是不能理解。<br><br>按我的理解在Chrome 中应该是固定的 1 0 2 才对，但是我多次实验，发现 1 0 2 和 1 2 0 都出现过，只是 1 0 2 的概率更大。<br><br>setTimeout(() =&gt; {<br>\tconsole.log(2)<br>}, 2)<br><br>setTimeout(() =&gt; {<br>\tconsole.log(1)<br>}, 1)<br><br>setTimeout(() =&gt; {<br>\tconsole.log(0)<br>}, 0)<br><br>","like_count":0,"discussions":[{"author":{"id":1466882,"avatar":"https://static001.geekbang.org/account/avatar/00/16/62/02/fd00a1de.jpg","nickname":"七月拾思","note":"","ucode":"7E405CBB9820F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561071,"discussion_content":"chrome V8规定，小于4毫秒的定时器，都会按4毫秒来处理，所以这三个定时器都相当于 setTimeOut(() =&gt; {}, 4)","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649525543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326848,"user_name":"MINGO","can_delete":false,"product_type":"c1","uid":2664634,"ip_address":"","ucode":"E2776B97BED55D","user_header":"https://static001.geekbang.org/account/avatar/00/28/a8/ba/d2053559.jpg","comment_is_top":false,"comment_ctime":1639720514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639720514","product_id":100033601,"comment_content":"老师我有些疑问，如果像该栏所说操作dom为异步事件的中的微任务，那么在下面这个代码的案例中不应该是先执行dom操作再执行promise的微任务吗（因为同样是微任务，但是dom操作先排入任务队列中），而实际操作过程中确实先执行了promise的微任务，再执行了dom操作<br>const main = document.getElementById(&#39;main&#39;);<br>const frg = document.createDocumentFragment();<br>for(let i = 0; i &lt; 4; i++) {<br>  const li = document.createElement(&#39;li&#39;);<br>  li.innerHTML = i;<br>  console.log(&#39;aaa&#39;);<br>  frg.appendChild(li);<br>  console.log(&#39;bbb&#39;);<br>}<br>main.appendChild(frg);<br>new Promise((resolve) =&gt; {<br>  resolve();<br>}).then(() =&gt; {<br>  console.log(&#39;微任务已经执行&#39;);<br>  alert(&#39;dom 还未插入&#39;)<br>});<br><br>setTimeout(() =&gt; {<br>  console.log(&#39;宏任务执行&#39;);<br>  alert(&#39;dom 已经插入&#39;)<br>});","like_count":0},{"had_liked":false,"id":326777,"user_name":"砌下落花起，犹罔顾春寒。","can_delete":false,"product_type":"c1","uid":2527788,"ip_address":"","ucode":"B43A986E957220","user_header":"https://static001.geekbang.org/account/avatar/00/26/92/2c/7975bdd9.jpg","comment_is_top":false,"comment_ctime":1639670645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639670645","product_id":100033601,"comment_content":"老师好，主线程到底是啥线程？不是说dom和css解析在GUI渲染线程上，js在js引擎线程上执行的吗？这个主线程是啥","like_count":0},{"had_liked":false,"id":326498,"user_name":"hao-kuai","can_delete":false,"product_type":"c1","uid":1272354,"ip_address":"","ucode":"DFDFDDDBA4503C","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/22/527904b2.jpg","comment_is_top":false,"comment_ctime":1639542039,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1639542039","product_id":100033601,"comment_content":"1.理解：宏任务是重要不紧急的事情，按计划执行（日常安排）；微任务是重要且紧急的事情，需要临时插队（领导任务）。<br>2.好处：就是领导任务到达之后，能够相对较快的被响应处理，不需要排在计划的最后。最后的结果是领导满意，然后整体上计划任务也么没有被耽误。<br>3.简单来说就是最有插队算法，通俗来说就是插队艺术。","like_count":0},{"had_liked":false,"id":318166,"user_name":"撒哈拉","can_delete":false,"product_type":"c1","uid":1608406,"ip_address":"","ucode":"2F64B26543D772","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/d6/00cf9218.jpg","comment_is_top":false,"comment_ctime":1635168773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635168773","product_id":100033601,"comment_content":"消息队列和事件循环总结<br><br>这节主要讲如何处理任务，任务可以理解为执行一段代码，任务的不确定性，优先级使得处理起来不是那么容易<br><br>最简单的方式： 任务是确定的，单线程执行这个任务<br><br>应对任务不确定的情况<br>输入呗，输入一个任务执行一个任务，执行完后等待输入任务，这就是事件循环的由来<br><br><br>真实情况是有一个主线程，有很多其他的线程，甚至进程都需要主线程处理任务<br>此时需要一个数据结构作为媒介存储需要执行的任务，显然用队列存储，先进先出的原则最为公平合理。这就是消息队列<br><br><br>既然都是任务，那如果有的任务优先级很高，要求优先处理怎么办？<br>此时任务就分为宏任务，微任务。通常情况下执行的时宏任务，但宏任务中可能会产生微任务，微任务中还有可能在产生微任务，<br>只要产生微任务就需要把任务添加微任务队列中，本次宏任务执行完毕后再执行微任务，微任务产生微任务只是使得微任务队列延长了。<br><br>通俗的比喻如下：<br>想象一下，你正在干一件普通的事情，有人说有个紧急的活要处理，此时合理的做法应该是，先把当前的活干完，不能半途而废啊，紧急的活存起来，<br>待干完手头的事情再处理紧急的活。<br><br><br>现在就清楚了，事件循环和消息队列就是不断循环执行消息队列中的任务。进一步细化就是渲染进程中的主线程循环执行消息队列中的任务，<br>这些任务是其他线程或进程放到消息队列中的，比如，浏览器加载完成事件，鼠标点击事件等其他异步回调函数。","like_count":0},{"had_liked":false,"id":318156,"user_name":"撒哈拉","can_delete":false,"product_type":"c1","uid":1608406,"ip_address":"","ucode":"2F64B26543D772","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/d6/00cf9218.jpg","comment_is_top":false,"comment_ctime":1635166153,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635166153","product_id":100033601,"comment_content":"消息队列和事件循环总结<br><br>这节主要讲如何处理任务，任务可以理解为执行一段代码<br><br>最简单的方式： 任务是确定的，单线程执行这个任务<br><br>应对任务不确定的情况<br>输入呗，输入一个任务执行一个任务，执行完后等待输入任务，这就是事件循环的由来<br><br><br>真实情况是有一个主线程，有很多其他的线程，甚至进程都需要主线程处理任务<br>此时需要一个数据结构作为媒介存储需要执行的任务，显然用队列存储，先进先出的原则最为公平合理。这就是消息队列<br><br><br>既然都是任务，那如果有的任务优先级很高，要求优先处理怎么办？<br>此时任务就分为宏任务，微任务。通常情况下执行的时宏任务，但宏任务中可能会产生微任务，微任务中还有可能在产生微任务，<br>只要产生微任务就需要把任务添加微任务队列中，本次宏任务执行完毕后再执行微任务，微任务产生微任务只是使得微任务队列延长了。<br><br>通俗的比喻如下：<br>想象一下，你正在干一件普通的事情，有人说有个紧急的活要处理，此时合理的做法应该是，先把当前的活干完，不能半途而废啊，紧急的活存起来，<br>待干完手头的事情再处理紧急的活。","like_count":0},{"had_liked":false,"id":306531,"user_name":"snow","can_delete":false,"product_type":"c1","uid":1343414,"ip_address":"","ucode":"750FBF37CCFD86","user_header":"https://static001.geekbang.org/account/avatar/00/14/7f/b6/09efa8e5.jpg","comment_is_top":false,"comment_ctime":1628598638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628598638","product_id":100033601,"comment_content":"请作者明确下渲染进程的线程，你老是用主线程来说事，我搞不清楚主线程指的是GUI线程，还是js引擎线程？似乎你的主线程就是他们俩。然后渲染流水线是主线程在执行，事件循环也是主线程，定时器也是主线程。最后我认为渲染进程只有三个线程主线程，io，合成。但是我查了一下资料发现，渲染进程有七个线程，他们各司其职。","like_count":0},{"had_liked":false,"id":305078,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1627805463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627805463","product_id":100033601,"comment_content":"再次重新回顾以前的学习<br>消息队列与事件循环<br>1.最开始引入循环与事件机制，确保浏览器能够处理不同的事件<br>2.然后引入消息队列，确保不同的事件可以按照先后顺序来处理，同时由于存在多个线程同时存任务和取任务，所以进入了同步锁<br>3.为了兼顾时效性和实时性，引入了微任务，消息队列种每一项都是一个宏任务，但宏任务又有自己的微任务队列，当宏任务执行结束后，优先执行宏任务的微任务，这样保证了实时性","like_count":0},{"had_liked":false,"id":293148,"user_name":"DL","can_delete":false,"product_type":"c1","uid":2542781,"ip_address":"","ucode":"420FEBEC9916EB","user_header":"https://static001.geekbang.org/account/avatar/00/26/cc/bd/b067cb54.jpg","comment_is_top":false,"comment_ctime":1621243338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621243338","product_id":100033601,"comment_content":"引入微任务，能够兼容实时性和执行效率。微任务中可以放置优先级较高的任务","like_count":0},{"had_liked":false,"id":291283,"user_name":"stanny","can_delete":false,"product_type":"c1","uid":1167767,"ip_address":"","ucode":"DD2BB91548A881","user_header":"https://static001.geekbang.org/account/avatar/00/11/d1/97/3abdd9cd.jpg","comment_is_top":false,"comment_ctime":1620180868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620180868","product_id":100033601,"comment_content":"求解呀老师： 之前看到，脚本线程可以操作 DOM，渲染线程也可以操作 DOM ，所以在浏览器中，这俩被设计成互斥的；但是看这篇文章意思是v8引擎也是运行在渲染主线程上的，这里的`渲染主线程`和`渲染线程`是一回事吗？","like_count":0},{"had_liked":false,"id":289562,"user_name":"周大侠","can_delete":false,"product_type":"c1","uid":1011288,"ip_address":"","ucode":"4C76FE3CF0C96D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/58/59673667.jpg","comment_is_top":false,"comment_ctime":1619082839,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619082839","product_id":100033601,"comment_content":"老师这地地方有一点不太懂：你可以参考下Chromium 的官方源码，这里面包含了很多内部消息类型，如输入事件（鼠标滚动、点击、移动）、微任务、文件读写、WebSocket、JavaScript 定时器等等。<br><br>但是在 settimeout中又说。settimeout是一个延迟队列，不在消息队列中。<br><br>和上面的说法是否冲突？？？","like_count":0},{"had_liked":false,"id":289143,"user_name":"李乐勇","can_delete":false,"product_type":"c1","uid":2194683,"ip_address":"","ucode":"0314C148C68B11","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIia8vbJEhpFlu4ppkwRNJxibRBZ9rnPFL5gevWN7VmKCYdQEB64QnlMEiahLNoKt6KH7IjDXs7yXomg/132","comment_is_top":false,"comment_ctime":1618888099,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1618888099","product_id":100033601,"comment_content":"微任务与延迟队列中到期的任务，哪个优先级更高？","like_count":0,"discussions":[{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577477,"discussion_content":"微任务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656135053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286518,"user_name":"Geek_2014ce","can_delete":false,"product_type":"c1","uid":2136469,"ip_address":"","ucode":"167B4CCDA4D5BD","user_header":"https://static001.geekbang.org/account/avatar/00/20/99/95/1e332315.jpg","comment_is_top":false,"comment_ctime":1617354738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617354738","product_id":100033601,"comment_content":"&#47;&#47; 对宏任务与微任务的理解<br>&#47;&#47; html代码，一个点击按钮，点击触发一系列的UI更新<br>&lt;button onclick=&quot;updateUI&quot;&gt;&lt;&#47;button&gt;<br><br>&#47;&#47; 我们写的updateUI方法<br>function updateUI() {<br>    page.style.backgroundColor = &quot;#eee&quot;;<br>    page.style.fontSize = &quot;14px&quot;;<br>    container.style.display = &quot;block&quot;; <br>    ...<br>}<br><br>&#47;&#47; 1. 用户点击按钮将updateUI方法添加进入宏任务队列<br>&#47;&#47; 2. 当任务队列执行到updateUI方法的时候，发现大量UI更新操作需要更新页面UI，如果每条都触发UI的更新，那么每条语句执行效率将极低，如果将系统更新UI的操作放入宏任务队列末端，则可能等很久才会更新。遂将更新系统UI的操作放入微任务队列，待该宏任务执行完成之后立即执行。<br>既保证了该宏任务快速执行完成，又使系统更新UI不至于太晚执行。 ","like_count":0},{"had_liked":false,"id":285945,"user_name":"z","can_delete":false,"product_type":"c1","uid":2240734,"ip_address":"","ucode":"98B89DC574793C","user_header":"https://static001.geekbang.org/account/avatar/00/22/30/de/10a85475.jpg","comment_is_top":false,"comment_ctime":1617084591,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617084591","product_id":100033601,"comment_content":"子线程是不是不断添加任务？子线程不干活，全是主线程在干 可不可以这样理解？","like_count":0},{"had_liked":false,"id":283656,"user_name":"Geek_ef2827","can_delete":false,"product_type":"c1","uid":2042503,"ip_address":"","ucode":"F8A1A02A1E0D33","user_header":"","comment_is_top":false,"comment_ctime":1615870842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615870842","product_id":100033601,"comment_content":"以下是我的理解，老师指正。<br>微任务要快速响应并且不能影响当前宏任务的执行，那么微任务就具备以下特点：<br>1、异步调用。因为微任务要插在当前宏任务的微任务队列中。<br>2、尽可能快的执行。这个时间取决于当前宏任务的执行速度和微任务队列的任务多少。<br><br>我理解把定时器当做宏任务的原因是：<br>1、定时器是由单独的定时器线程去执行的，按照消息队列的机制，当定时任务执行时会生成一个任务放到消息队列中，参考线程间通信<br><br><br>不过我还有一个问题，requestAnimationFrame 属于宏任务还是微任务呢？","like_count":0},{"had_liked":false,"id":281797,"user_name":"今宵酒醒何处","can_delete":false,"product_type":"c1","uid":1383229,"ip_address":"","ucode":"87E218058F8D8F","user_header":"https://static001.geekbang.org/account/avatar/00/15/1b/3d/bebb4fa4.jpg","comment_is_top":false,"comment_ctime":1614907004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614907004","product_id":100033601,"comment_content":"老师，您文中提到的页面线程、渲染进程，他们之间的关系是什么？是否是包含关系呢","like_count":0},{"had_liked":false,"id":281794,"user_name":"今宵酒醒何处","can_delete":false,"product_type":"c1","uid":1383229,"ip_address":"","ucode":"87E218058F8D8F","user_header":"https://static001.geekbang.org/account/avatar/00/15/1b/3d/bebb4fa4.jpg","comment_is_top":false,"comment_ctime":1614906719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614906719","product_id":100033601,"comment_content":"老师，看你文中提到了页面线程、渲染进程、渲染主线程。他们之间的关系是什么，是否是页面线程独立于渲染进程，而渲染进程在执行任务的过程中又创建了渲染主线程来处理来自消息队列中的任务","like_count":0},{"had_liked":false,"id":271755,"user_name":"你听得到","can_delete":false,"product_type":"c1","uid":1218472,"ip_address":"","ucode":"F4BB5EDE60D3FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/a8/779cdd2f.jpg","comment_is_top":false,"comment_ctime":1609781276,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1609781276","product_id":100033601,"comment_content":"关闭页面的时候主线程就退出了，这种方式会不会太粗暴了，为什么不能等主线程的代码执行完或者设置一个超时的时间呢？","like_count":0,"discussions":[{"author":{"id":1447496,"avatar":"https://static001.geekbang.org/account/avatar/00/16/16/48/01567df1.jpg","nickname":"郑泽洲","note":"","ucode":"EA1B540A040875","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348835,"discussion_content":"需求决定实现。看不出这样做的必要性。页面负责展示，一般无状态。后端负责存储状态，倒是经常有你说的这种设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612748760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262276,"user_name":"A.     成事在天","can_delete":false,"product_type":"c1","uid":2056450,"ip_address":"","ucode":"0B069A8EAD0E9B","user_header":"https://static001.geekbang.org/account/avatar/00/1f/61/02/6ccf315c.jpg","comment_is_top":false,"comment_ctime":1605683114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605683114","product_id":100033601,"comment_content":"老师不知道是如何看待这个说法，主线程运行完毕，会先查看微任务队列是否有任务执行，再查看宏任务队列是否有任务，还有js自己本身没有事件循环机制吗，靠的是浏览器提供的吗","like_count":0},{"had_liked":false,"id":261521,"user_name":"Gopal","can_delete":false,"product_type":"c1","uid":1295144,"ip_address":"","ucode":"7FEC1096AEBE43","user_header":"https://static001.geekbang.org/account/avatar/00/13/c3/28/4b8bc05c.jpg","comment_is_top":false,"comment_ctime":1605371440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605371440","product_id":100033601,"comment_content":"宏任务就像正常排期，我们会按照正常的节奏进行。微任务就像紧急需求，高优先级，也就是说，你完成你手头上的任务之后（宏任务）就要立马做微任务，而且要全部执行完当前的微任务，再去执行宏任务","like_count":0},{"had_liked":false,"id":260372,"user_name":"爱呀顶呀","can_delete":false,"product_type":"c1","uid":1153768,"ip_address":"","ucode":"52206B98CA6907","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/e8/37163caf.jpg","comment_is_top":false,"comment_ctime":1604994321,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604994321","product_id":100033601,"comment_content":"不过这个模式有个问题，因为 DOM 变化非常频繁，如果每次发生变化的时候，都直接调用相应的 JavaScript 接口，那么这个当前的任务执行时间会被拉长，从而导致执行效率的下降。<br><br>这里说的直接调用JavaScript接口，是������️暂停当前的宏任务，然后直接调用这些DOM变化的接口吗？<br>这里的微任务就是在原本宏任务后面，再加些任务而已。应该同样导致 “执行效率”下降吧","like_count":0},{"had_liked":false,"id":247941,"user_name":"QG","can_delete":false,"product_type":"c1","uid":1155469,"ip_address":"","ucode":"85DB7C41472C6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/8d/b6117f5c.jpg","comment_is_top":false,"comment_ctime":1599922310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599922310","product_id":100033601,"comment_content":"“在每次执行完一个任务时，判断是否有设置退出标志。”这句话的意思是，即使要退出，也要先把当前任务执行完？","like_count":0},{"had_liked":false,"id":246975,"user_name":"小熊","can_delete":false,"product_type":"c1","uid":2111791,"ip_address":"","ucode":"5E3459C4F40A7A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKtBwSeHSkf6W5iaYIDrxt8DgldgL8gx6eQwicSI4MxguVEMXbicvB5qfZpeSFNVZswu8M5TiaqEYwRiag/132","comment_is_top":false,"comment_ctime":1599547286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599547286","product_id":100033601,"comment_content":"老师，你说的这个浏览器中的宏任务与微任务和js中的事件执行机制的宏任务微任务是一回事吗？类似promise","like_count":0},{"had_liked":false,"id":246092,"user_name":"草舟","can_delete":false,"product_type":"c1","uid":1383510,"ip_address":"","ucode":"41FE0F9AAA9285","user_header":"https://static001.geekbang.org/account/avatar/00/15/1c/56/b7329e72.jpg","comment_is_top":false,"comment_ctime":1599177531,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599177531","product_id":100033601,"comment_content":"有点懵，之前听一个老师讲微任务是在同步事件执行完 ，Dom渲染之前执行，而宏任务是在Dom渲染之后even loop才开始执行。为什么现在是微任务在宏任务里了 不太明白","like_count":0},{"had_liked":false,"id":245144,"user_name":"丁田秀","can_delete":false,"product_type":"c1","uid":1691948,"ip_address":"","ucode":"0AA83E11481AF9","user_header":"https://static001.geekbang.org/account/avatar/00/19/d1/2c/c9f72c08.jpg","comment_is_top":false,"comment_ctime":1598844955,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598844955","product_id":100033601,"comment_content":"请问老师：<br>document.body.style.backgroundColor = &#39;red&#39;;<br>document.body.style.backgroundColor = &#39;blue&#39;<br>在已经渲染的页面执行这两行代码，会渲染几次","like_count":0},{"had_liked":false,"id":240873,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1597108394,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1597108394","product_id":100033601,"comment_content":"宏任务和微任务就像linux的中断处理程序分上半部和下半部。","like_count":0},{"had_liked":false,"id":236317,"user_name":"划水摸鱼小能手","can_delete":false,"product_type":"c1","uid":1602279,"ip_address":"","ucode":"1B5E7CDD49AC49","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL17rDiannrcya8o5PJVfZuSqmDLrTnvuU8239MDOeTXiaLx11M4Wc9YScWajxoibUnKaUTnriaFafLsw/132","comment_is_top":false,"comment_ctime":1595390278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595390278","product_id":100033601,"comment_content":"你好，请问消息队列中的函数在内存中是怎么表现的？<br><br>前文有讲到栈的概念，举的函数调用的例子都是同步调用，同步函数都会进栈，那异步函数呢？如果同步函数调用异步函数，那异步函数也会被压入执行栈吗？<br><br>消息队列是个什么机制呢？是在哪里的？是在堆空间开辟出的内存空间吗？内存区域连续还是不连续？会有垃圾回收吗？函数进队列是进了哪里？调用异步函数的时候怎么和执行栈联系在一起的？","like_count":0},{"had_liked":false,"id":235104,"user_name":"沧海一声笑","can_delete":false,"product_type":"c1","uid":1039904,"ip_address":"","ucode":"5297F2F4736B63","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","comment_is_top":false,"comment_ctime":1594892665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594892665","product_id":100033601,"comment_content":"&gt; 从图中你可以看到，如果在执行动画过程中，其中有个 JavaScript 任务因执行时间过久，占用了动画单帧的时间，这样会给用户制造了卡顿的感觉，这当然是极不好的用户体验。针对这种情况，JavaScript 可以通过回调功能来规避这种问题，也就是让要执行的 JavaScript 任务滞后执行。至于浏览器是如何实现回调功能的，我们在后面的章节中再详细介绍<br><br><br>有一个问题：这里的单个任务是指回调里的任务吗 那么这样好像放在渲染主线程去执行 也不过避免出现过长 比如5000个for循环","like_count":0},{"had_liked":false,"id":231430,"user_name":"啊哈哈","can_delete":false,"product_type":"c1","uid":1243584,"ip_address":"","ucode":"A8542946C03707","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","comment_is_top":false,"comment_ctime":1593675737,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1593675737","product_id":100033601,"comment_content":"没明白高优先级这块。为了避免宏任务执行时间长，影响效率，所以引入微任务。但是当前宏任务执行完，又会执行微任务，那这样，时间不是一样长吗？","like_count":0,"discussions":[{"author":{"id":2042503,"avatar":"","nickname":"Geek_ef2827","note":"","ucode":"F8A1A02A1E0D33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288284,"discussion_content":"这里主要是解决了一个队列先进先出的问题吧。如果只有一个队列，那这种模型的执行方式只能是先进先出，优先级高的任务没有办法优先执行。引入微任务就可以不用等队列清空之后再执行优先级高的任务了，而是当前任务执行完毕之后一股脑把微任务先执行，优先级高的任务就可以插在这个时间节点执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593701335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2042503,"avatar":"","nickname":"Geek_ef2827","note":"","ucode":"F8A1A02A1E0D33","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289434,"discussion_content":"你这么说我就理解了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594099577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288284,"ip_address":""},"score":289434,"extra":""}]}]},{"had_liked":false,"id":225062,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1591626669,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1591626669","product_id":100033601,"comment_content":"每个宏任务都有一个微任务列表，在宏任务的执行过程中产生的微任务会被添加到该列表中，等宏任务快执行结束之后，会执行微任务列表，所以微任务依然运行在当前宏任务的执行环境中，这个特性会导致宏任务和微任务有一些本质上的区别","like_count":0},{"had_liked":false,"id":223956,"user_name":"胖橘猫","can_delete":false,"product_type":"c1","uid":1230281,"ip_address":"","ucode":"DDE0F409616CD8","user_header":"","comment_is_top":false,"comment_ctime":1591241425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591241425","product_id":100033601,"comment_content":"微任务类似协程,能够解决切换线程带来的时间开销问题,优势是减少切换线程的时间开销,一个消息循环中处理更多的任务,减少页面卡顿现象","like_count":0},{"had_liked":false,"id":218697,"user_name":"你与氧气平起平坐","can_delete":false,"product_type":"c1","uid":1183736,"ip_address":"","ucode":"B256DE5A923F20","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/f8/6be60670.jpg","comment_is_top":false,"comment_ctime":1589856289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589856289","product_id":100033601,"comment_content":"这是我见过的讲课有粗有细有条理，而且回答问题最认真的老师，点赞！","like_count":0},{"had_liked":false,"id":215156,"user_name":"好好好","can_delete":false,"product_type":"c1","uid":1546855,"ip_address":"","ucode":"EE1878ADC840B6","user_header":"https://static001.geekbang.org/account/avatar/00/17/9a/67/73f384f9.jpg","comment_is_top":false,"comment_ctime":1588916618,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1588916618","product_id":100033601,"comment_content":"前面章节讲js代码是v8解释器执行的，这一节说主线程执行包括js在内的很多任务。想请教下老师主线程和v8什么关系？v8有处于哪个线程中吗？希望老师有空的时候解答下哈","like_count":0,"discussions":[{"author":{"id":1307937,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/21/51712400.jpg","nickname":"黑白印象","note":"","ucode":"DAEDAE8FEAE98E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293756,"discussion_content":"说是V8在主线程上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595659826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212604,"user_name":"蹦哒","can_delete":false,"product_type":"c1","uid":1458931,"ip_address":"","ucode":"56591A657DE7C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epcs6PibsP9vEXv4EibUw3bhQPUK04zRTOvfrvF08TwM67xPb1LBh2uRENHQwo2VqYfC5GhJmM7icxHA/132","comment_is_top":false,"comment_ctime":1588161896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588161896","product_id":100033601,"comment_content":"请教：为啥JavaScript引擎是运行在渲染进程的主线程上的呢，可以是子线程吗？这也是JavaScript不支持多线程的原因吗","like_count":0},{"had_liked":false,"id":209189,"user_name":"李隆熙","can_delete":false,"product_type":"c1","uid":1373430,"ip_address":"","ucode":"162248F706F000","user_header":"https://static001.geekbang.org/account/avatar/00/14/f4/f6/6fc8caa9.jpg","comment_is_top":false,"comment_ctime":1587518103,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587518103","product_id":100033601,"comment_content":"老师您好，请问如果一个使用webWorker这种启动了多个线程。那么这种线程模型还会有微任务和宏任务的区分吗？webWorker摸不了dom的话。里边的事件都是同步消费的吗？还有就是比如GUI线程这种会有微任务和宏任务的区分吗？","like_count":0},{"had_liked":false,"id":207113,"user_name":"穿秋裤的男孩","can_delete":false,"product_type":"c1","uid":1748640,"ip_address":"","ucode":"D0F48C66377893","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ae/a0/707350ef.jpg","comment_is_top":false,"comment_ctime":1587008078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587008078","product_id":100033601,"comment_content":"微任务队列是和消息队列一个层次得概念吗？实质都是一个队列结构吗","like_count":0},{"had_liked":false,"id":204935,"user_name":"HoSalt","can_delete":false,"product_type":"c1","uid":1156074,"ip_address":"","ucode":"610B03E2A002D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","comment_is_top":false,"comment_ctime":1586494599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586494599","product_id":100033601,"comment_content":"『每个宏任务中都包含了一个微任务队列，在执行宏任务的过程中，如果 DOM 有变化，那么就会将该变化添加到微任务列表中，这样就不会影响到宏任务的继续执行，因此也就解决了执行效率的问题。<br>等宏任务中的主要功能都直接完成之后，这时候，渲染引擎并不着急去执行下一个宏任务，而是执行当前宏任务中的微任务』<br><br>微任务是放在宏任务中的吗？那如果没有宏任务，全是微任务呢？","like_count":0},{"had_liked":false,"id":201636,"user_name":"拼命的小贝壳","can_delete":false,"product_type":"c1","uid":1033144,"ip_address":"","ucode":"F3736814722A94","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/b8/45799abf.jpg","comment_is_top":false,"comment_ctime":1585814809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585814809","product_id":100033601,"comment_content":"消息队列是运行在渲染主线程内么？  还是作为一个单独的线程执行？","like_count":0},{"had_liked":false,"id":196823,"user_name":"墨灵","can_delete":false,"product_type":"c1","uid":1409700,"ip_address":"","ucode":"185D70CA20BEEE","user_header":"https://static001.geekbang.org/account/avatar/00/15/82/a4/a92c6eca.jpg","comment_is_top":false,"comment_ctime":1585315927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585315927","product_id":100033601,"comment_content":"微任务队列的处理方法就像是宏任务结束后的回调方法","like_count":0},{"had_liked":false,"id":182685,"user_name":"小蛋糕","can_delete":false,"product_type":"c1","uid":1807662,"ip_address":"","ucode":"335A6F4301CF22","user_header":"https://static001.geekbang.org/account/avatar/00/1b/95/2e/f8575abb.jpg","comment_is_top":false,"comment_ctime":1582849839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582849839","product_id":100033601,"comment_content":"渲染器进程中包含了好多的线程，通常叫做渲染线程，其中一个为主，叫做渲染主线程。<br><br>JavaScript，事件，DOM解析等都需要在渲染主线程执行，但是产生自不同的线程或者是进程，Chrome 在渲染进程用一个消息队列来管理这些来自四面八方的任务—宏任务。<br><br>由于不同的任务对于实时性的要求不同，因此又划分出了微任务，他们就像一个个小尾巴，依附在当前宏任务的身后等待被执行。","like_count":0},{"had_liked":false,"id":174697,"user_name":"NikkiZeng","can_delete":false,"product_type":"c1","uid":1765894,"ip_address":"","ucode":"F669C811773394","user_header":"https://static001.geekbang.org/account/avatar/00/1a/f2/06/ebb5b764.jpg","comment_is_top":false,"comment_ctime":1580354662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580354662","product_id":100033601,"comment_content":"老师,请问一下,JavaScript是在渲染进程中的主线程上运行的,那么可以理解为JavaScript是主线程上的一个模块,DOM解析这些也是主线程中的一个模块吗","like_count":0},{"had_liked":false,"id":161188,"user_name":"匡晨辉","can_delete":false,"product_type":"c1","uid":1763707,"ip_address":"","ucode":"BF88FE410C20F4","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e9/7b/b844f3a4.jpg","comment_is_top":false,"comment_ctime":1576140670,"is_pvip":false,"replies":[{"id":"61461","content":"对的，当前任务创建的微任务一定会在当前任务结束之前执行掉！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1576145290,"ip_address":"","comment_id":161188,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576140670","product_id":100033601,"comment_content":"老师，微任务队列是不是只可能存在与任务队列中当前正在执行的任务中？就是说在当前任务中创建微任务队列？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477633,"discussion_content":"对的，当前任务创建的微任务一定会在当前任务结束之前执行掉！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576145290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156931,"user_name":"古小静","can_delete":false,"product_type":"c1","uid":1037744,"ip_address":"","ucode":"084290B81A5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/b0/3b24bd1d.jpg","comment_is_top":false,"comment_ctime":1574998158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574998158","product_id":100033601,"comment_content":"微任务可以理解为一个宏任务的对应队列，在执行完宏任务之后进行该任务对应微任务的执行，如果按照老师说的，微任务中存的是DOM的操作，这样会免去很多无用的DOM的操作，对性能来说也是一种提升。可以这样理解吗？","like_count":0},{"had_liked":false,"id":144467,"user_name":"Allen_","can_delete":false,"product_type":"c1","uid":1677187,"ip_address":"","ucode":"CA5E00E4644CD5","user_header":"https://static001.geekbang.org/account/avatar/00/19/97/83/845b48e2.jpg","comment_is_top":false,"comment_ctime":1571929987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571929987","product_id":100033601,"comment_content":"宏观任务就像上级为一件事情调用人力物力财力，而微观任务就像利用这些人力物力财力来做一些变化，并且这些微观任务也有对应的顺序。做一件工程的时候，不可能让上级一直给你资源然后你啥都不做吧，所以得在每一次宏观任务下来后做对应的一些微观任务，并且这些微观任务也是先进先出，这样就不会一下子block掉渲染进程了。这样在页面上才有流畅的感觉和保证了及时性。","like_count":0},{"had_liked":false,"id":144128,"user_name":"Geek_d972f2","can_delete":false,"product_type":"c1","uid":1379184,"ip_address":"","ucode":"72381CF0C973B7","user_header":"","comment_is_top":false,"comment_ctime":1571846378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571846378","product_id":100033601,"comment_content":"“比如一个典型的场景是监控 DOM 节点的变化情况”，这个例子的意思是，在JS中监听DOM的变化吗？比如MutationObserver？","like_count":0},{"had_liked":false,"id":139298,"user_name":"wd2010","can_delete":false,"product_type":"c1","uid":1691581,"ip_address":"","ucode":"E194E4EFECA013","user_header":"https://static001.geekbang.org/account/avatar/00/19/cf/bd/4fa01a1c.jpg","comment_is_top":false,"comment_ctime":1570605423,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570605423","product_id":100033601,"comment_content":"老师，请问下 渲染进程主要有GUI渲染渲染线程，JS引擎线程，事件触发线程，定时触发器线程等等，这些与本文的主线程是什么关系呢","like_count":0,"discussions":[{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225054,"discussion_content":"我也想知道 可惜老师没有回答啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586346141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138187,"user_name":"zeke","can_delete":false,"product_type":"c1","uid":1650017,"ip_address":"","ucode":"E81681972753EF","user_header":"","comment_is_top":false,"comment_ctime":1570087821,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570087821","product_id":100033601,"comment_content":"微任务的执行不也是同步的么，这样的话对执行效率的提升好像没有多大的提升吧？恳请解惑","like_count":0,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223600,"discussion_content":"宏、微任务调整的主要是任务的执行顺序","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586239646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134528,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1003156,"ip_address":"","ucode":"4060B4E2EF1D13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/94/0b22b6a2.jpg","comment_is_top":false,"comment_ctime":1568859253,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568859253","product_id":100033601,"comment_content":"老师，关于“单个任务执行时间过久”那个图片展示的执行顺序有点疑问，我一直以为layout是在javascript 执行之后，但是这个图片显示的是layout在javascript 执行之前。如果layout在javascript 执行之前，那么<br>1、javascript 修改了dom后，不就又要重新layout吗？是不是有点重复计算？<br>2、dom的构建和layout是同时进行的吗？<br>3、浏览器是按帧来进行渲染的，页面第一次渲染的时候，当前帧要执行的任务有解析html, 解析css, 执行js, 构建domtree，构建layouttree, 构建layertree, 然后渲染。第二帧渲染的时候是不是就不用再解析html和css了，直接执行js，修改dom，然后渲染？","like_count":0,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223616,"discussion_content":"有答案了回复我一下，也想知道~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586240417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134514,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1003156,"ip_address":"","ucode":"4060B4E2EF1D13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/94/0b22b6a2.jpg","comment_is_top":false,"comment_ctime":1568857353,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568857353","product_id":100033601,"comment_content":"老师，事件循环机制在循环的时候，有sleep吗？如果有，那设置多久合适呢？sleep太久实时性会降低，程序执行性能也会降低；如果没有，那么循环会一直执行，会非常占用系统资源，特别是任务队列一直没有任务时，会毫无意义的占用系统资源。有没有一种更好的机制，让任务队列有任务时再让循环机制主动获取任务？","like_count":0,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223606,"discussion_content":"当队列任务清空时，会退出事件循环。当再次有新的任务加进来时，再次触发事件循环？我暂时这么想的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586240048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134433,"user_name":"ChaoZzz","can_delete":false,"product_type":"c1","uid":1007680,"ip_address":"","ucode":"E338FEF55D9BAA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/40/e6d4c1b4.jpg","comment_is_top":false,"comment_ctime":1568824333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568824333","product_id":100033601,"comment_content":"宏任务是主任务，微任务是附加任务","like_count":0},{"had_liked":false,"id":133580,"user_name":"x","can_delete":false,"product_type":"c1","uid":1472233,"ip_address":"","ucode":"75FA829EA820AB","user_header":"https://static001.geekbang.org/account/avatar/00/16/76/e9/73ed6cc1.jpg","comment_is_top":false,"comment_ctime":1568613846,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1568613846","product_id":100033601,"comment_content":"对事件循环还是有点迷糊，事件循环的作用是监听消息队列中是否有新的任务？","like_count":0},{"had_liked":false,"id":132985,"user_name":"tick","can_delete":false,"product_type":"c1","uid":1106123,"ip_address":"","ucode":"D2C864306C06CB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","comment_is_top":false,"comment_ctime":1568291834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568291834","product_id":100033601,"comment_content":"用优先级队列可以的不？","like_count":0},{"had_liked":false,"id":132334,"user_name":"Chao","can_delete":false,"product_type":"c1","uid":1108745,"ip_address":"","ucode":"DD7742F5537521","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/09/ba5f0135.jpg","comment_is_top":false,"comment_ctime":1568086664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568086664","product_id":100033601,"comment_content":"一次循环中微任务、宏任务都是一个列表， 宏任务一次循环只执行一个任务， 微任务在循环到会将列表执行情况。 微任务保证了需要高效执行的任务","like_count":0},{"had_liked":false,"id":131982,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1567999224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567999224","product_id":100033601,"comment_content":"这节主要讲述了JavaScript的任务处理机制，从单线程处理到引入消息队列机制，优化了其他线程中产生的新任务处理，为了处理高优先级任务，在消息队列中的每个宏任务中再包含一个微任务队列，提高任务处理的效率和实时性。<br><br>思考题：微任务相当于对当前宏任务的一个补充，也是为下一个宏任务的提供准备环境。引入微任务可以弥补任务队列中宏任务状态不同步的问题，及时高效的同步其他线程带来的任务状态改变。","like_count":0},{"had_liked":false,"id":131684,"user_name":"Hurry","can_delete":false,"product_type":"c1","uid":1138560,"ip_address":"","ucode":"12FEE2A50CC667","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/80/51269d88.jpg","comment_is_top":false,"comment_ctime":1567845428,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567845428","product_id":100033601,"comment_content":"关于 微任务和宏任务，老师是否可以画张图，解释一下，我理解就是两个消息队列，微任务会被优先处理，另外能否举例，那些js 操作或者内置函数会将任务加到宏任务队列还是微任务队列？","like_count":0},{"had_liked":false,"id":131608,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1567824317,"is_pvip":false,"replies":[{"id":"50339","content":"这个解释有点笼统","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567846899,"ip_address":"","comment_id":131608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567824317","product_id":100033601,"comment_content":"我理解微任务就是优先级比较高的任务。有的任务有高优先级的需求，所以，出现了微任务。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466534,"discussion_content":"这个解释有点笼统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567846899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131577,"user_name":"远","can_delete":false,"product_type":"c1","uid":1122211,"ip_address":"","ucode":"D2F8ABDC1366DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/a3/0d807a69.jpg","comment_is_top":false,"comment_ctime":1567817184,"is_pvip":false,"replies":[{"id":"50342","content":"“固定到消息队列中”可以这么理解，但是实际情况却不是这样","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567847523,"ip_address":"","comment_id":131577,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567817184","product_id":100033601,"comment_content":"微任务就是开始执行前就已经固定的消息队列和事情循环","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466523,"discussion_content":"“固定到消息队列中”可以这么理解，但是实际情况却不是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567847523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}