{"id":161820,"title":"86 | 实践出真知：多线程典型应用场景分析","content":"<p><strong>课件地址</strong></p><p><a href=\"https://gitee.com/geektime-geekbang/swift-course\">https://gitee.com/geektime-geekbang/swift-course</a></p>","comments":[{"had_liked":false,"id":189445,"user_name":"muzzy","can_delete":false,"product_type":"c3","uid":1778005,"ip_address":"","ucode":"A2E4291405D00D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKaOTc2Lx04iackJhiaOYjBQccVsyzYUrGzibeJw2G5eQez1XmnOianUTD4hFZkQWpVdLVS8ogBIxibffg/132","comment_is_top":false,"comment_ctime":1584516797,"is_pvip":false,"replies":[{"id":79900,"content":"我们要返回值，这里简便的用了sync。  async也是可以的，不过你也要用信号量等方式等async取到数据再返回","user_name":"作者回复","user_name_real":"Geek_f72435","uid":1341726,"ctime":1589163541,"ip_address":"","comment_id":189445,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"读取操作为什么不用async异步读取呢","like_count":0,"discussions":[{"author":{"id":1341726,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLxtKhpmvzx2VB4iajicfJVFmQR3eP3xBpdpQEovpSqUfAOrNImvYwVb7P37ibI0ONziau9sbFEk8oDaA/132","nickname":"elfgate","note":"","ucode":"3C0B5F7C1F664C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487699,"discussion_content":"我们要返回值，这里简便的用了sync。  async也是可以的，不过你也要用信号量等方式等async取到数据再返回","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589163541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156798,"user_name":"老杨","can_delete":false,"product_type":"c3","uid":1627949,"ip_address":"","ucode":"1033A33C53020D","user_header":"https://static001.geekbang.org/account/avatar/00/18/d7/2d/d4c37a3f.jpg","comment_is_top":false,"comment_ctime":1574959253,"is_pvip":false,"replies":[{"id":60595,"content":"是正常的，这个示例多线程运行每一次结果都不一样，依赖你的硬件、当时系统状态等等","user_name":"作者回复","user_name_real":"Geek_f72435","uid":1341726,"ctime":1575343778,"ip_address":"","comment_id":156798,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"请问为什么我按照视频来写的代码，最后运行结果还是有很多-1呢？我的代码如下：\nlet queue = DispatchQueue(label: &quot;myQueue&quot;, qos: DispatchQoS.default, attributes: DispatchQueue.Attributes.concurrent, autoreleaseFrequency: DispatchQueue.AutoreleaseFrequency.inherit, target: nil)\nlet queue2 = DispatchQueue(label: &quot;myQueue2&quot;, qos: DispatchQoS.default, attributes: DispatchQueue.Attributes.concurrent, autoreleaseFrequency: DispatchQueue.AutoreleaseFrequency.inherit, target: nil)\nlet arrayQueue = DispatchQueue(label: &quot;myQueue3&quot;, qos: DispatchQoS.default, attributes: DispatchQueue.Attributes.concurrent, autoreleaseFrequency: DispatchQueue.AutoreleaseFrequency.inherit, target: nil)\n\nvar array = Array(1...1000)\n\nfunc getLastItem() -&gt; Int {\n    return arrayQueue.sync { () -&gt; Int in\n        if array.count &gt; 0 {\n            return array[array.count - 1]\n        }\n        return -1\n    }\n}\n\nfunc removeLastItem() {\n    let workItem = DispatchWorkItem(qos: DispatchQoS.default, flags: DispatchWorkItemFlags.barrier) {\n        array.removeLast()\n    }\n    arrayQueue.async(execute: workItem)\n}\n\nqueue.async {\n    for _ in 0..&lt;1000 {\n        removeLastItem()\n    }\n}\n\nqueue2.async {\n    for _ in 0..&lt;1000 {\n        print(getLastItem())\n    }\n}","like_count":0,"discussions":[{"author":{"id":1341726,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLxtKhpmvzx2VB4iajicfJVFmQR3eP3xBpdpQEovpSqUfAOrNImvYwVb7P37ibI0ONziau9sbFEk8oDaA/132","nickname":"elfgate","note":"","ucode":"3C0B5F7C1F664C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476235,"discussion_content":"是正常的，这个示例多线程运行每一次结果都不一样，依赖你的硬件、当时系统状态等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575343778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1456412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/39/1c/f52aa71d.jpg","nickname":"MingLL","note":"","ucode":"492F53919A753A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243564,"discussion_content":"因为 你建立的数组大小为1000。你删除了1001次  数组被删空了。 所以返回了-1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587549589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242667,"user_name":"小千","can_delete":false,"product_type":"c3","uid":1286065,"ip_address":"","ucode":"8A1274AD7B87F0","user_header":"https://static001.geekbang.org/account/avatar/00/13/9f/b1/ae61b184.jpg","comment_is_top":false,"comment_ctime":1597806424,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"&#47;*** 编写一个多线程下载器，可以执行多个下载任务，每个任务可以保持当下下载字节数、总字节数，可以设置回调得到当前下载进度 ***&#47;\n&#47;*** 利用Operation可子类化，定义自己属性和状态，实现复杂逻辑，保存业务状态的特点 ***&#47;\n\n&#47;&#47; 自定义下载的Operation子类\nclass DownloadOperation: Operation {\n    let urlString: String\n    var currentBytes = 0\n    var totalBytes = 0\n    var progressChanged: ((Float)-&gt;Void)?\n\n    init(urlString:String){\n        self.urlString = urlString\n        super.init()\n    }\n\n    &#47;&#47; 重写main，实现下载逻辑\n    override func main() {\n        guard !isCancelled else { return }\n\n        &#47;*以下为模拟下载，实际场景根据不同下载方式来实现*&#47;\n\n        &#47;&#47; 随机假设总字节(1000-10000)\n        totalBytes = Int(1000 + arc4random()%(5000))\n        let random = Int(8 + arc4random()%(15))\n        let temp = totalBytes&#47;random\n        &#47;&#47; 模拟下载过程的进度变化\n        while currentBytes &lt; totalBytes {\n            sleep(1)\n            currentBytes += temp\n            currentBytes = currentBytes&gt;totalBytes ? totalBytes : currentBytes\n            progressChanged?( Float(currentBytes)&#47;Float(totalBytes) )\n        }\n    }\n}\n\n&#47;&#47; 创建queue\nlet queue = OperationQueue()\nlet urlStrs = [&quot;url1&quot;,&quot;url2&quot;,&quot;url3&quot;]\n&#47;&#47; 添加任务到queue中\nfor str in urlStrs {\n    let operation = DownloadOperation(urlString: str)\n    operation.progressChanged = { progress in\n        print(&quot;下载\\(str)，总字节数\\(operation.totalBytes)，已下载\\(operation.currentBytes)，进度：\\(Int(progress*100))%&quot;)\n    }\n    operation.completionBlock = {\n        print(&quot;&gt;&gt;&gt;&gt;&gt;&gt; 下载\\(str)完成 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;)\n    }\n    queue.addOperation(operation)\n}\n\n&#47;**\n下载url1，总字节数3567，已下载198，进度：5%\n下载url3，总字节数2883，已下载131，进度：4%\n下载url2，总字节数3224，已下载322，进度：9%\n...\n下载url3，总字节数2883，已下载1441，进度：49%\n下载url1，总字节数3567，已下载2178，进度：61%\n下载url2，总字节数3224，已下载3224，进度：100%\n&gt;&gt;&gt;&gt;&gt;&gt; 下载url2完成 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n…\n下载url3，总字节数2883，已下载2489，进度：86%\n下载url1，总字节数3567，已下载3567，进度：100%\n&gt;&gt;&gt;&gt;&gt;&gt; 下载url1完成 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n...\n下载url3，总字节数2883，已下载2882，进度：99%\n下载url3，总字节数2883，已下载2883，进度：100%\n&gt;&gt;&gt;&gt;&gt;&gt; 下载url3完成 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n*&#47;","like_count":4,"discussions":[{"author":{"id":1069713,"avatar":"https://static001.geekbang.org/account/avatar/00/10/52/91/d07baf7e.jpg","nickname":"风早","note":"","ucode":"A4D046C90F832E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406573,"discussion_content":"感谢大神分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634797856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242665,"user_name":"小千","can_delete":false,"product_type":"c3","uid":1286065,"ip_address":"","ucode":"8A1274AD7B87F0","user_header":"https://static001.geekbang.org/account/avatar/00/13/9f/b1/ae61b184.jpg","comment_is_top":false,"comment_ctime":1597806335,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"&#47;*** 一个页面三个网络请求，需要在三个网络请求都返回的时候刷新界面 ***&#47;\n&#47;*** 使用OperationQueue+Operation+Dependency ***&#47;\n\n&#47;&#47; 创建用于请求数据的BlockOperation\nlet requestOperation = BlockOperation()\n&#47;&#47; 添加多个请求的block\nrequestOperation.addExecutionBlock {\n    sleep(1)\n    print(&quot;接口1数据请求完成&quot;)\n}\nrequestOperation.addExecutionBlock {\n    sleep(1)\n    print(&quot;接口2数据请求完成&quot;)\n}\nrequestOperation.addExecutionBlock {\n    sleep(1)\n    print(&quot;接口3数据请求完成&quot;)\n}\n\n&#47;&#47; 创建用于刷新界面的BlockOperation\nlet refreshOperation = BlockOperation {\n    print(&quot;3个接口数据请求完成，刷新界面！&quot;)\n}\n\n&#47;&#47; 添加依赖\nrefreshOperation.addDependency(requestOperation)\n\nlet queue = OperationQueue()\n&#47;&#47; 将Operation加入到queue\nqueue.addOperations([requestOperation, refreshOperation], waitUntilFinished: false)\n\nprint(&quot;开始执行！”)\n\n&#47;**\n开始执行！\n接口2数据请求完成\n接口3数据请求完成\n接口1数据请求完成\n3个接口数据请求完成，刷新界面！\n*&#47;","like_count":3,"discussions":[{"author":{"id":1069713,"avatar":"https://static001.geekbang.org/account/avatar/00/10/52/91/d07baf7e.jpg","nickname":"风早","note":"","ucode":"A4D046C90F832E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406574,"discussion_content":"感谢大神分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634797863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317723,"user_name":"风早","can_delete":false,"product_type":"c3","uid":1069713,"ip_address":"","ucode":"A4D046C90F832E","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/91/d07baf7e.jpg","comment_is_top":false,"comment_ctime":1634903438,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"func getLastItem() -&gt; Int {\n    \n    return arrayQueue.sync { () -&gt; Int in\n        \n        if array.count &gt; 0 {\n            \n            return array[array.count - 1]\n        }\n        return -1\n    }\n   \n    \n}\n\n\n arrayQueue.sync是并发的吗 ？sync不是同步的吗 ","like_count":1},{"had_liked":false,"id":352998,"user_name":"畅畅","can_delete":false,"product_type":"c3","uid":1834962,"ip_address":"陕西","ucode":"6BCDEF603F2C14","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ff/d2/67090203.jpg","comment_is_top":false,"comment_ctime":1659072330,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"多线程读写，读操作大于写操作，是否可以使用CopyOnWrite(写入时复制)思想来实现","like_count":0},{"had_liked":false,"id":317487,"user_name":"风早","can_delete":false,"product_type":"c3","uid":1069713,"ip_address":"","ucode":"A4D046C90F832E","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/91/d07baf7e.jpg","comment_is_top":false,"comment_ctime":1634812492,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"希望老师开新的课程，比如如何分析崩溃，如何调试，runloop啊 等等一些进阶课程。","like_count":0}]}