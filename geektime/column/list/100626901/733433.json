{"id":733433,"title":"21｜Web开发（上）：如何使用Axum框架进行Web后端开发？","content":"<p>你好，我是Mike, 今天我们来讲一讲如何用Axum框架进行Web服务器后端开发。</p><p>关于Rust是否适合做Web后端开发，很多人持怀疑态度。认为Web开发讲究的是敏捷，一种动态的、带运行时的、方便修改的语言可能更适合Web开发。</p><p>但有一些因素，其实决定了Rust非常适合Web开发。</p><ol>\n<li>时代变化：芯片摩尔定律已失效，服务器成本逐渐占据相当大的比例，无脑堆服务器的时代已经过去。当前阶段，对于规模稍微大一些的公司来说，降本增效是一个很重要的任务。而Rust的高性能和稳定可靠的表现非常适合帮助公司节省服务器成本。</li>\n<li>随着业务的成型，一些核心业务会趋于稳定，模型和流程抽象已经基本不会有大的改动。这时，使用Rust重写或部分重写这些业务，会带来更强的性能和更可靠稳定的服务表现。</li>\n<li>Rust非常适合用来做一些通用的中间件服务，目前开源社区已经出现了一些相当优秀的中间件产品。</li>\n<li>Rust的表达能力其实非常强，其强大的类型系统可帮助开发者轻松地对问题进行建模。一个中等熟练的Rust开发者做原型的速度不会比Python慢多少，在复杂问题场景下，甚至更快。</li>\n<li>Rust的语言层面的设计使它特别适合做重构。重构Rust工程特别快，重构完后，也不用担心出错的问题。相对于动态语言，对应的测试用例都可以少准备很多。</li>\n</ol><!-- [[[read_end]]] --><h2>Rust Web Backend 生态</h2><p>Rust Web后端开发生态目前处于一种欣欣向荣的局面。就Web开发框架来说，能叫得上名字的就有十几种，其中按 <a href=\"https://crates.io\">crates.io</a> 最新下载量排名，排列靠前的是这几位。</p><ol>\n<li>Axum</li>\n<li>Actix-web</li>\n<li>Rocket</li>\n<li>Poem</li>\n<li>Rouille</li>\n<li>Salvo</li>\n</ol><p>从最近下载的绝对数量来说，Axum 的下载量是第二名 Actix-web 的 3 倍多。因此，我们选择了下载量最多的框架——Axum。</p><h3>Tokio技术栈介绍</h3><p>Axum有这么强劲的表现，得益于其本身优秀的设计，还有它无缝依赖的 Tokio 技术栈。Tokio从 2017 年发布 0.1 版本开始到现在，已经形成一套强大的技术栈。</p><p><img src=\"https://static001.geekbang.org/resource/image/e1/40/e1e84b20997c3a99540c7559e6dc5b40.jpg?wh=1414x1594\" alt=\"\"></p><p>这些可靠的工具链，为Rust在服务器端的发展打下了坚实的基础，越来越多的项目开始采用这一套技术栈。</p><h2>Axum框架</h2><blockquote>\n<p>Axum是一个专注于人体工程学和模块化的Web开发框架。——官方文档的Slogan</p>\n</blockquote><p>从上层视角来看，Axum具有以下特性：</p><ol>\n<li>写Router和Handler的时候，不需要使用宏（非标注风格）。</li>\n<li>使用解包器进行声明式的请求解析。</li>\n<li>简单和可预测的错误处理模型。</li>\n<li>生成响应时只需用到最小的样板代码。</li>\n<li>充分利用 tower 和 tower-http 的中间件、服务和工具的生态系统。</li>\n</ol><p>特别是最后一点，让Axum显著不同于其他框架。Axum自己不带中间件系统，而是使用 tower 系的中间件。这样就能和生态里的其他项目，如 hyper 或 tonic 共享中间件系统。 这种设计太棒了。</p><h3>Tower中间层服务</h3><p>Tower是一个模块化、可重用的组件系统，用于构建稳健的网络服务端和客户端应用。它对<strong>请求/响应模型</strong>做了一个统一的服务抽象，和具体的实现协议无关。你可以看一下Service的定义。</p><pre><code class=\"language-plain\">async fn(Request) -&gt; Result&lt;Response, Error&gt;\n</code></pre><p>Tower包含 Service 和 Layer 两个抽象。一个Service是一个接受请求，做出响应的异步函数；而一个 Layer 接受一个Service，处理并返回另一个Service。Service和Layer一起，就可以方便地构建中间件服务。而完全基于流（stream）的服务，并不适合使用Tower。</p><h3>Tower-http介绍</h3><p><a href=\"https://docs.rs/tower-http/latest/tower_http/\">Tower-http</a> 是一个专门用于提供HTTP相关的中间件和设施的库，里面罗列了二十多个中间件。</p><p>在Axum中，最常用的中间件是下面这几个。</p><ul>\n<li>TracyLayer 中间件，用于提供高层日志或跟踪。</li>\n<li>CorsLayer 中间件，用于处理CORS。</li>\n<li>CompressionLayer 中间件，用于自动压缩响应。</li>\n<li>RequestIdLayer 和 PropagateRequestIdLayer&nbsp;中间件，用于设置和传播请求ID。</li>\n<li>TimeoutLayer 中间件，用于设置超时。</li>\n<li>HandleErrorLayer 中间件，用于转换各种错误类型到响应。</li>\n</ul><p>而每个中间件都可以用在全局Router、模块Router和Handler三个层次。</p><h3>Router</h3><p>Router用来定义URL到handler的映射，并用来构建模块化URL的层级，既能支持全局性路由，也能支持模块层级的路由。比如：</p><pre><code class=\"language-rust\">let user_routes = Router::new().route(\"/:id\", get(|| async {}));\nlet team_routes = Router::new().route(\"/\", post(|| async {}));\nlet api_routes = Router::new()\n    .nest(\"/users\", user_routes)\n    .nest(\"/teams\", team_routes);\nlet app = Router::new().nest(\"/api\", api_routes);\n</code></pre><h3>Handler</h3><p>在Axum里，Handler是一个异步函数，这个异步函数接受一个或多个解包器作为参数，返回一个可以转换为响应（impl IntoResponse）的类型。</p><p>最简单的 handler 类似下面这个样子：</p><pre><code class=\"language-plain\">async fn string_handler() -&gt; String {\n    \"Hello, World!\".to_string()\n}\n</code></pre><h2>使用Axum进行Web后端开发</h2><p>现在话不多说，让我们开始Axum实战环节吧！</p><p><span class=\"reference\">注：目前（2023年12月）Axum的最新版本是 v0.7 版，我们下面会基于这个版本来编写代码。</span></p><h3>第一步：Hello world</h3><p>我们先来看看Axum的Hello World是什么样子。</p><pre><code class=\"language-plain\">use axum::{response::Html, routing::get, Router};\n\n#[tokio::main]\nasync fn main() {\n    // build our application with a route\n    let app = Router::new().route(\"/\", get(handler));\n\n    // run it\n    let listener = tokio::net::TcpListener::bind(\"127.0.0.1:3000\")\n        .await\n        .unwrap();\n    println!(\"listening on {}\", listener.local_addr().unwrap());\n    axum::serve(listener, app).await.unwrap();\n}\n\nasync fn handler() -&gt; Html&lt;&amp;'static str&gt; {\n    Html(\"&lt;h1&gt;Hello, World!&lt;/h1&gt;\")\n}\n</code></pre><p>这里我给出这个步骤的<a href=\"https://github.com/miketang84/jikeshijian/tree/master/2122-axumapp_stepbystep/axumapp01_helloworld\">原始代码地址</a>，你可以直接下载到本地运行。</p><p>从这个例子里，我们可以一窥Axum应用的基本结构。首先，一个Axum应用其实就是一个Tokio应用，以标志性的tokio::main属性宏开头。</p><pre><code class=\"language-plain\">#[tokio::main]\nasync fn main() {\n</code></pre><p>然后，创建一个Router实例，代表App。在Router中，绑定URL与handler。</p><p>然后使用 <code>tokio::net::TcpListener::bind()</code> 监听服务器地址，并将生成的 listener 传入 <code>axum::serve()</code> 中使用，启动axum服务。而这个应用的 handler 参数里没有解包器（extractor），是因为我们暂时不解析请求参数，所以参数部分留空。</p><pre><code class=\"language-plain\">async fn handler() -&gt; Html&lt;&amp;'static str&gt; {\n    Html(\"&lt;h1&gt;Hello, World!&lt;/h1&gt;\")\n}\n</code></pre><p>然后，这个handler的返回值是 <code>Html&lt;&amp;'static str&gt;</code> 类型，它已经实现了 IntoResponse，所以可以作为 Response 返回类型。下面我们来测试，打开终端在代码目录下执行 <code>cargo run</code>。终端下输出 <code>listening on 127.0.0.1:3000</code>。</p><p>打开浏览器，输入 <code>127.0.0.1:3000</code>，可以看到下面这样的页面效果。</p><p><img src=\"https://static001.geekbang.org/resource/image/d7/cb/d757695525f1fd973f4532bf7475fdcb.png?wh=1920x499\" alt=\"图片\"></p><h3>第二步：实现静态文件服务</h3><p>静态文件服务非常有用，用于对服务器上的静态资源如图片、HTML、JS、CSS等文件提供服务。下面我们来看看如何使用Axum实现一个简单的静态文件服务。我们只需要引入ServeDir服务，然后在Router实例上使用 nest_service 挂载这个服务就可以了。</p><pre><code class=\"language-rust\">&nbsp; &nbsp; Router::new().nest_service(\"/assets\", ServeDir::new(\"assets\"))\n</code></pre><p><code>ServeDir::new()</code> 的参数是资源目录的路径，上面一句表示把 <code>/assets/*</code> 的URL映射到 assets 目录下的哪些文件。</p><p>而如果需要配置获取默认文件，可以按照下面这样，在ServeDir里配置not_found_service，传一个ServeFile实例进去，这个ServeFile实例就是默认获取的那个文件。然后在Router实例配置时，添加一个 fallback_service 挂载 serve_dir。</p><pre><code class=\"language-rust\">let serve_dir =\n    ServeDir::new(\"assets2\")\n    .not_found_service(ServeFile::new(\"assets2/index.html\"));\nlet app = Router::new()\n    .route(\"/foo\", get(handler))\n    .nest_service(\"/assets\", ServeDir::new(\"assets\"))\n    .nest_service(\"/assets2\", serve_dir.clone())\n    .fallback_service(serve_dir);\n</code></pre><p>上述示例里，即使我们访问一些不存在的URL地址，服务器也会返回assets2目录下的index.html文件。这通常正是我们想要的。你可以根据<a href=\"https://github.com/miketang84/jikeshijian/tree/master/2122-axumapp_stepbystep/axumapp02_staticfile\">示例源码</a>自行测试，查看效果。</p><p>你可以尝试如下URL地址：</p><pre><code>http://127.0.0.1:3000/\nhttp://127.0.0.1:3000/foo\nhttp://127.0.0.1:3000/bar\nhttp://127.0.0.1:3000/assets/index.html\nhttp://127.0.0.1:3000/assets/ferris.png\nhttp://127.0.0.1:3000/assets/script.js\nhttp://127.0.0.1:3000/assets2/index.html\nhttp://127.0.0.1:3000/assets2/ferris2.png\nhttp://127.0.0.1:3000/assets2/script.js\n...\n</code></pre><h3>第三步：加入日志记录</h3><p>日志系统是一个服务必不可少的组件，我们一起来看看如何为Axum应用添加日志。在Axum中添加日志很简单。第一步，我们需要添加 tracing 和 tracing-subscriber 两个crates。</p><pre><code class=\"language-rust\">cargo add tracing\ncargo add tracing-subscriber\n</code></pre><p>然后引入TraceLayer。</p><pre><code class=\"language-rust\">use tower_http::trace::TraceLayer;\n</code></pre><p>在main函数的开头添加代码：</p><pre><code class=\"language-rust\">&nbsp; &nbsp; tracing_subscriber::fmt::init();\n</code></pre><p>再在Router配置的时候，添加下面这行代码配置日志中间件服务就可以了。</p><pre><code class=\"language-rust\">let app = Router::new()\n    .route(\"/foo\", get(handler))\n    .nest_service(\"/assets\", serve_dir.clone())\n    .fallback_service(serve_dir)\n    .layer(TraceLayer::new_for_http());  // 添加这行\n</code></pre><p>使用时，需要按照下面这个方式来使用。</p><pre><code class=\"language-rust\">tracing::debug!(\"listening on {}\", addr);\n</code></pre><p>我们用上面一句替代了之前的 <code>println!</code>，在一个正经一点的应用中，我们都不会使用 <code>println!</code> 去打印日志的。</p><p>这里需要补充一点知识：Rust中的日志标准。Rust标准的log协议在<a href=\"https://docs.rs/log/latest/log/\">链接</a>里。这个crate中定义了5个级别的日志打印语句。</p><ul>\n<li><code>error!</code></li>\n<li><code>warn!</code></li>\n<li><code>info!</code></li>\n<li><code>debug!</code></li>\n<li><code>trace!</code></li>\n</ul><p>这5个级别从上到下警示程度为由高到低。也就是说，越往下会越详细。</p><p>但是这只是一套协议的定义，而不是具体实现。具体使用的时候，需要用另外的crate来实现。我们常用的 env_logger 就是其中一种实现，它把日志输出到标准终端里，用环境变量来控制打印的级别开关。而这里我们使用的 tracing 库也是这样一种实现。它是为tokio异步运行时专门设计的，适合在异步并发代码中使用。</p><p>你可以使用RUST_LOG来打开日志开关。比如：</p><pre><code class=\"language-rust\">RUST_LOG=trace cargo run\n</code></pre><p>访问 <a href=\"http://127.0.0.1:3000/foo\">http://127.0.0.1:3000/foo</a> ，可以看到，TRACE级别的和DEBUG级别的日志都打印出来了。</p><pre><code class=\"language-rust\">2023-12-11T05:36:39.240674Z TRACE mio::poll: registering event source with poller: token=Token(0), interests=READABLE | WRITABLE\n2023-12-11T05:36:39.240718Z DEBUG axumapp03: listening on 127.0.0.1:3000\n2023-12-11T05:36:50.029388Z TRACE mio::poll: registering event source with poller: token=Token(1), interests=READABLE | WRITABLE\n2023-12-11T05:36:50.029678Z TRACE mio::poll: registering event source with poller: token=Token(2), interests=READABLE | WRITABLE\n2023-12-11T05:36:50.030011Z DEBUG request{method=GET uri=/foo version=HTTP/1.1}: tower_http::trace::on_request: started processing request\n2023-12-11T05:36:50.030127Z DEBUG request{method=GET uri=/foo version=HTTP/1.1}: tower_http::trace::on_response: finished processing request\n latency=0 ms status=200\n</code></pre><p>用debug模式日志会少一些。</p><pre><code class=\"language-rust\">RUST_LOG=debug cargo run\n</code></pre><p>访问 <a href=\"http://127.0.0.1:3000/foo\">http://127.0.0.1:3000/foo</a> ， 输出：</p><pre><code class=\"language-rust\">2023-12-11T05:43:45.223551Z DEBUG axumapp03: listening on 127.0.0.1:3000\n2023-12-11T05:43:50.558174Z DEBUG request{method=GET uri=/foo version=HTTP/1.1}: tower_http::trace::on_request: started processing request\n2023-12-11T05:43:50.558303Z DEBUG request{method=GET uri=/foo version=HTTP/1.1}: tower_http::trace::on_response: finished processing request\n latency=0 ms status=200\n</code></pre><p>我们还可以指定只打印某些crate里的日志。</p><pre><code class=\"language-rust\">RUST_LOG=tower_http=debug,axumapp03=debug cargo run\n</code></pre><p>访问 <a href=\"http://127.0.0.1:3000/foo\">http://127.0.0.1:3000/foo</a> ，输出：</p><pre><code class=\"language-rust\">2023-12-11T05:45:03.578294Z DEBUG axumapp03: listening on 127.0.0.1:3000\n2023-12-11T05:45:08.036568Z DEBUG request{method=GET uri=/foo version=HTTP/1.1}: tower_http::trace::on_request: started processing request\n2023-12-11T05:45:08.036696Z DEBUG request{method=GET uri=/foo version=HTTP/1.1}: tower_http::trace::on_response: finished processing request\n latency=0 ms status=200\n</code></pre><p>你可以下载<a href=\"https://github.com/miketang84/jikeshijian/tree/master/2122-axumapp_stepbystep/axumapp03_addlog\">源码</a>自行测试查看效果。</p><h3>第四步：解析 Get 请求参数</h3><p>一般一个URL是这样的：</p><pre><code>https://rustcc.cn/article?id=8ba98036-e2fb-41cf-9dad-7cd874c397c4\n</code></pre><p>最后面一段是 query，query 的格式为键值对列表，比如 <code>x1=yyy&amp;x2=zzz</code> ，键值对之间使用 &amp; 符号隔开。</p><p>Axum采用一种解包器（extractor）的方式，直接从HTTP Request里提取出开发者关心的参数信息。这种设计有一些好处：</p><ol>\n<li>减少样板重复代码，可以让代码更紧凑易读。</li>\n<li>类型化，充分利用Rust强大的类型能力。</li>\n<li>配置式开发，轻松惬意。</li>\n</ol><p>下面我们先来看如何从GET请求的URL中，取出Query参数。</p><p>在 Axum中，我们只需要在Handler中这样配置解包器就可以。</p><pre><code class=\"language-plain\">#[derive(Debug, Deserialize)]\nstruct InputParams {\n&nbsp; &nbsp; foo: i32,\n&nbsp; &nbsp; bar: String,\n&nbsp; &nbsp; third: Option&lt;i32&gt;,\n}\n\nasync fn query(Query(params): Query&lt;InputParams&gt;) -&gt; impl IntoResponse {\n&nbsp; &nbsp; tracing::debug!(\"query params {:?}\", params);\n&nbsp; &nbsp; Html(\"&lt;h3&gt;Test query&lt;/h3&gt;\")\n}\n</code></pre><p>这里这个 params 参数就是我们想要的query请求参数。可以看到，Axum框架自动帮我们处理了解析工作，让我们直接得到了Rust 结构体对象。减轻了我们处理具体协议的繁琐度，不易出错。请注意示例第8行的参数中使用了模式匹配，你可以回顾一下<a href=\"https://time.geekbang.org/column/article/720999\">第 6 讲</a>的模式匹配相关知识点。</p><p>我们可以继续折腾一下，InputParams里定义了一个third字段，它是 <code>Option&lt;i32&gt;</code> 类型，请你尝试在浏览器URL地址栏或插件中变换请求参数，查看及日志输出返回情况。可能的参数组合有下面这几种。</p><pre><code>http://127.0.0.1:3000/query?foo=1&amp;bar=2&amp;third=3\nhttp://127.0.0.1:3000/query?foo=1&amp;bar=2\nhttp://127.0.0.1:3000/query?foo=1\nhttp://127.0.0.1:3000/query?bar=2\nhttp://127.0.0.1:3000/query?foo=1&amp;bar=2&amp;third=3&amp;another=4\n</code></pre><p>本示例完整代码在<a href=\"https://github.com/miketang84/jikeshijian/tree/master/2122-axumapp_stepbystep/axumapp04_query\">这里</a>。</p><h2>小结</h2><p>通过这节课的展示，你有没有体会到使用Rust进行Web开发的感觉？其实跟那些动态语言如Python、JavaScript等开发Web没太大区别，Axum的代码也是比较精练的。请你一定要参考我给出的代码示例，对照源代码在你的本地跑起来。Web开发一个非常方便的地方就是方便测试，易于看到渐进的效果正反馈，所以动手是非常重要而且高效的。</p><p>相比于动态语言来讲，Rust的强类型更加能够保证Web后端服务的正确性和可靠性。性能自不用说，你选择了Rust，就是选择了高起点。</p><p>同时你可以看到，这节课出现的Axum示例代码，一点都不复杂，甚至都没有用到Rust的所谓各种高级特性。其实就是这样，你用Rust做日常开发，特别是业务开发，根本不难，不要被那些所谓的高级特性吓到，先用现成的框架，快速捣鼓出自己的东西，后面再慢慢上难度就好了。</p><h2>思考题</h2><p>请你说一说Request/Response 模型是什么，Axum框架和其他gRPC框架（比如Tonic）有什么区别。欢迎你把自己的思考分享到评论区，也欢迎你把这节课的内容分享给其他朋友，我们下节课再见！</p>","comments":[{"had_liked":false,"id":385206,"user_name":"小虎子🐯","can_delete":false,"product_type":"c1","uid":2843479,"ip_address":"北京","ucode":"4C9530B3FB407B","user_header":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","comment_is_top":true,"comment_ctime":1702283413,"is_pvip":false,"replies":[{"id":140406,"content":"对的，今天已经更新啦","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1702289574,"ip_address":"重庆","comment_id":385206,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"版本已经更新到 0.7 啦","like_count":3,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633536,"discussion_content":"对的，今天已经更新啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702289574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385171,"user_name":"鸠摩智","can_delete":false,"product_type":"c1","uid":1106201,"ip_address":"江苏","ucode":"853E584FC4CD64","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/19/c756aaed.jpg","comment_is_top":false,"comment_ctime":1702259350,"is_pvip":true,"replies":[{"id":140405,"content":"好的，感谢补充win下的信息。","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1702270508,"ip_address":"重庆","comment_id":385171,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"windows powershell中的启动命令：$env:RUST_LOG=&quot;debug&quot; ; cargo run 。不设置级别的话，默认看不到debug级别的日志","like_count":3,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633507,"discussion_content":"好的，感谢补充win下的信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702270508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386484,"user_name":"tan","can_delete":false,"product_type":"c1","uid":1477463,"ip_address":"重庆","ucode":"20E176CB1EFD51","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/57/a3daeaae.jpg","comment_is_top":false,"comment_ctime":1704941021,"is_pvip":false,"replies":[{"id":140898,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1705027438,"ip_address":"重庆","comment_id":386484,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"时区设置\n● cargo add time --features macros\n● cargo add tracing-subscriber --features time\n\n```rust\nuse time::macros::{format_description, offset};\nuse tracing_subscriber::fmt::time::OffsetTime;\n\nlet time_fmt = format_description!(&quot;[year]-[month]-[day]T[hour]:[minute]:[second].[subsecond digits:3]&quot;);\nlet timer = OffsetTime::new(offset!(+8), time_fmt);\n\n\n&#47;&#47; init \ntracing_subscriber::fmt().with_max_level(Level::TRACE).with_timer(timer).init();\n\n\n&#47;&#47; use\ntracing::info!(&quot;listening on {}&quot;, listener.local_addr().unwrap());\n```\n","like_count":2,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635659,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705027438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385163,"user_name":"一只","can_delete":false,"product_type":"c1","uid":1234345,"ip_address":"上海","ucode":"084823F4BE9EFD","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/a9/2cac96a9.jpg","comment_is_top":false,"comment_ctime":1702251939,"is_pvip":false,"replies":[{"id":140400,"content":"抱歉，文章是基于0.6的版本，这个月出的0.7有一些break change。今天已经更新了。","user_name":"作者回复","user_name_real":"作者","uid":2186062,"ctime":1702264339,"ip_address":"重庆","comment_id":385163,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"第一个例子 hello-world 需要使用链接中的依赖版本才能运行，应该是库的接口发生变更了。\n或者使用 官方最新例子\n```rust\nuse axum::{response::Html, routing::get, Router};\n\n#[tokio::main]\nasync fn main() {\n    &#47;&#47; build our application with a route\n    let app = Router::new().route(&quot;&#47;&quot;, get(handler));\n\n    &#47;&#47; run it\n    let listener = tokio::net::TcpListener::bind(&quot;127.0.0.1:3000&quot;)\n        .await\n        .unwrap();\n    println!(&quot;listening on {}&quot;, listener.local_addr().unwrap());\n    axum::serve(listener, app).await.unwrap();\n}\n\nasync fn handler() -&gt; Html&lt;&amp;&#39;static str&gt; {\n    Html(&quot;&lt;h1&gt;Hello, World!&lt;&#47;h1&gt;&quot;)\n}\n```","like_count":2,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633496,"discussion_content":"抱歉，文章是基于0.6的版本，这个月出的0.7有一些break change。今天已经更新了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702264339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385649,"user_name":"buoge","can_delete":false,"product_type":"c1","uid":1018506,"ip_address":"北京","ucode":"646FC6717A09BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/8a/7c1baa25.jpg","comment_is_top":false,"comment_ctime":1703041574,"is_pvip":false,"replies":[{"id":140551,"content":"很棒！","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1703122324,"ip_address":"重庆","comment_id":385649,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"日志部分配合这个看会更佳\n使用 tracing 记录日志：https:&#47;&#47;course.rs&#47;logs&#47;tracing.html","like_count":1,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634226,"discussion_content":"很棒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1703122325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388006,"user_name":"土土人","can_delete":false,"product_type":"c1","uid":1045486,"ip_address":"福建","ucode":"6501B7D4F63E95","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/ee/33ef689b.jpg","comment_is_top":false,"comment_ctime":1709126978,"is_pvip":false,"replies":[{"id":141755,"content":"报错信息是什么？\n\n启动线程数可以配置的，默认就是分配核心数。","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1713028859,"ip_address":"加拿大","comment_id":388006,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"Axum ctrl c退出为啥会报错？还有启动线程不会按核数自动分配吗？","like_count":0,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641837,"discussion_content":"报错信息是什么？\n\n启动线程数可以配置的，默认就是分配核心数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713028859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"加拿大","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385478,"user_name":"Geek_e72251","can_delete":false,"product_type":"c1","uid":3733050,"ip_address":"广东","ucode":"894904DE2E6AC0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/VF71Gcf2C2bjYPFCRv0TPfwhkJmT5WhtusltuaXQM0KMDibdallNFypqWV6v2FJ4bqNwzujiaF5LEDeia7JMZTTtw/132","comment_is_top":false,"comment_ctime":1702725069,"is_pvip":false,"replies":[{"id":140568,"content":"这里：https:&#47;&#47;users.rust-lang.org&#47;t&#47;tracing-print-in-different-timezone&#47;83994&#47;4\nhttps:&#47;&#47;rustcc.cn&#47;article?id=66e2a76e-8c65-42f7-a773-66dff1a2a21e","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1703123665,"ip_address":"重庆","comment_id":385478,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"tracing输出的日志时区不对，怎么设置时区啊？","like_count":0,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634244,"discussion_content":"这里：https://users.rust-lang.org/t/tracing-print-in-different-timezone/83994/4\nhttps://rustcc.cn/article?id=66e2a76e-8c65-42f7-a773-66dff1a2a21e","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1703123665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":1477463,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8b/57/a3daeaae.jpg","nickname":"tan","note":"","ucode":"20E176CB1EFD51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":635483,"discussion_content":"链接不能看了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704876930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":634244,"ip_address":"重庆","group_id":0},"score":635483,"extra":""}]}]},{"had_liked":false,"id":385263,"user_name":"Carlsama","can_delete":false,"product_type":"c1","uid":2074039,"ip_address":"广东","ucode":"51817638E336F0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1ooqYIZ7khDvoGHWv21vPYECXjd562DM1boWqIUxhyNUic5uyYnfglAjluMZWLZcONtTSib57EAJz4cicm4nBkpug/132","comment_is_top":false,"comment_ctime":1702364136,"is_pvip":false,"replies":[{"id":140424,"content":"是的，更新到0.7啦，可以等今晚的（下）出来一起看","user_name":"编辑回复","user_name_real":"编辑","uid":2843479,"ctime":1702364239,"ip_address":"北京","comment_id":385263,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"内容已经调整到0.7了吗？看了评论有点不敢跟着抄写代码，等都更完再一块看","like_count":0,"discussions":[{"author":{"id":2843479,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","nickname":"小虎子🐯","note":"","ucode":"4C9530B3FB407B","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633599,"discussion_content":"是的，更新到0.7啦，可以等今晚的（下）出来一起看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702364239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385247,"user_name":"My dream","can_delete":false,"product_type":"c1","uid":1077733,"ip_address":"四川","ucode":"2FEFB344230C17","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/e5/bcdc382a.jpg","comment_is_top":false,"comment_ctime":1702348430,"is_pvip":false,"replies":[{"id":140431,"content":"xlsx和pdf的生成原理就是 数据+ driver。crates.io 上你可以搜索这两个关键字，找下载量最大的用。你先拿到数据，然后按对应格式在axum handler里面调用驱动处理就行啦","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1702436225,"ip_address":"重庆","comment_id":385247,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"怎么用这个框架实现读取、导出xls或者pdf文件啊？","like_count":0,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633653,"discussion_content":"xlsx和pdf的生成原理就是 数据+ driver。crates.io 上你可以搜索这两个关键字，找下载量最大的用。你先拿到数据，然后按对应格式在axum handler里面调用驱动处理就行啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702436225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385167,"user_name":"雍和","can_delete":false,"product_type":"c1","uid":2695785,"ip_address":"广东","ucode":"C703A7FDCAD58C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qUHuge7oea6mA4bUTyJ4rpTP7Havj5m2WEqKvrARDbe8HYnu52vQ8DfAWNkLEfQbic83ibDhnUZYRTwut5Dl8icDA/132","comment_is_top":false,"comment_ctime":1702253923,"is_pvip":false,"replies":[{"id":140404,"content":"好的，谢谢，马上处理。另外，我们正在升级到0.7来讲解。2，3天搞定。","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1702270472,"ip_address":"重庆","comment_id":385167,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100626901,"comment_content":"老师，文中说的evn_logger是不是笔误了呢？实际是env_logger？","like_count":0,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633506,"discussion_content":"好的，谢谢，马上处理。另外，我们正在升级到0.7来讲解。2，3天搞定。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1702270472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385164,"user_name":"-","can_delete":false,"product_type":"c1","uid":1546505,"ip_address":"陕西","ucode":"7B34258D346793","user_header":"https://static001.geekbang.org/account/avatar/00/17/99/09/29c46a7b.jpg","comment_is_top":false,"comment_ctime":1702252066,"is_pvip":false,"replies":[{"id":140401,"content":"今天紧急更新了。","user_name":"作者回复","user_name_real":"作者","uid":2186062,"ctime":1702264367,"ip_address":"重庆","comment_id":385164,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100626901,"comment_content":"咋没有用最新版的0.7版本啊？","like_count":0,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633497,"discussion_content":"今天紧急更新了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702264367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1519230,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/7e/a15b477c.jpg","nickname":"Noya","note":"","ucode":"52EEB72E80BAF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633489,"discussion_content":"```rust\nasync fn serve(app: Router, port: u16) {\n    let addr = SocketAddr::from(([127, 0, 0, 1], port));\n    let listener = TcpListener::bind(addr).await.unwrap();\n    tracing::debug!(&#34;listening on {}&#34;, addr);\n    axum::serve(\n        listener,\n        app.layer(TraceLayer::new_for_http()).into_make_service(),\n    )\n    .await\n    .unwrap();\n}\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702262339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385161,"user_name":"刘丹","can_delete":false,"product_type":"c1","uid":1081922,"ip_address":"广东","ucode":"66594D1C957E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","comment_is_top":false,"comment_ctime":1702244608,"is_pvip":false,"replies":[{"id":140403,"content":"好的，谢谢，马上处理。另外，我们正在升级到0.7来讲解。2，3天搞定。","user_name":"作者回复","user_name_real":"编辑","uid":2186062,"ctime":1702270467,"ip_address":"重庆","comment_id":385161,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100626901,"comment_content":"错别字： \ncarge add tracing-subscriber\n","like_count":0,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633505,"discussion_content":"好的，谢谢，马上处理。另外，我们正在升级到0.7来讲解。2，3天搞定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702270467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385160,"user_name":"刘丹","can_delete":false,"product_type":"c1","uid":1081922,"ip_address":"广东","ucode":"66594D1C957E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","comment_is_top":false,"comment_ctime":1702244165,"is_pvip":false,"replies":[{"id":140399,"content":"抱歉，这篇文章在写的时候是今年上半年，后面我更新一下。已经更新了。","user_name":"作者回复","user_name_real":"作者","uid":2186062,"ctime":1702264285,"ip_address":"重庆","comment_id":385160,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100626901,"comment_content":"老师，请问能否介绍最新版本的 axum ?","like_count":0,"discussions":[{"author":{"id":2186062,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/4e/8e1f699e.jpg","nickname":"Mike Tang","note":"","ucode":"55775BCEDB5937","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633495,"discussion_content":"抱歉，这篇文章在写的时候是今年上半年，后面我更新一下。已经更新了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702264285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1519230,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/7e/a15b477c.jpg","nickname":"Noya","note":"","ucode":"52EEB72E80BAF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633490,"discussion_content":"稍微改改就好啦!\n```rust\nuse std::net::SocketAddr;\n\nuse axum::{response::Html, routing, Router};\nuse tokio::net::TcpListener;\n\n#[tokio::main]\nasync fn main() {\n    let app = Router::new().route(&#34;/&#34;, routing::get(handler));\n    let addr = SocketAddr::from(([127, 0, 0, 1], 3088));\n    println!(&#34;Listening on {addr}&#34;);\n    let listener = TcpListener::bind(addr).await.unwrap();\n    axum::serve(listener, app.into_make_service()).await.unwrap();\n}\n\nasync fn handler() -&gt; Html&lt;&amp;&#39;static str&gt; {\n    Html(&#34;&lt;h1&gt; Hello, World!!!! &lt;/h1&gt;&#34;)\n}\n\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702262396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391901,"user_name":"安石","can_delete":false,"product_type":"c1","uid":1508755,"ip_address":"浙江","ucode":"185AD0046CF1C2","user_header":"https://static001.geekbang.org/account/avatar/00/17/05/93/3c3f2a6d.jpg","comment_is_top":false,"comment_ctime":1719372807,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100626901,"comment_content":"并发性能好像没有node的好。。。。","like_count":0}]}