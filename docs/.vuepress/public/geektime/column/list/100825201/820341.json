{"id":820341,"title":"11｜模型训练：如何教会模型学习","content":"<p>你好，我是柳博文，欢迎和我一起学习前端工程师的AI实战课。</p><p>前面两节课中，我们先后准备好了基础的图像数据，并且按照PASCAL VOC的标准制作出了一份用于目标检测模型训练的数据集。那么现在万事具备，接下来我们就可以进行模型训练了。</p><h2>模型选择</h2><p>在这个实践课程中，我们需要使用AI来完成页面的布局，简单来说，就是需要使用目标检测来识别出页面的组件类型和定位组件的位置，再通过工程化的方法来完成页面布局代码的自动生成。所以，在AI识别部分这是一个典型的目标检测任务。</p><p>那么，通过前面第5节课的学习，我们知道目标检测现在的模型方法分为两类，一类是one-stage，另外一类是two-stage。</p><p>两种方法的不同之处主要在于前者模型对目标的类别判断和位置识别在同一次计算中完成，而后者则是分为两步进行。one-stage方法速度快但是精度相对较低，代表模型为YOLO系列；two-stage精度高但是速度慢，代表模型是R-CNN系列。</p><p>结合我们要做的H5页面布局助手，我们需要完成的是页面的布局识别，对精度的要求不是很高，所以选择YOLOv5作为基础模型来训练。</p><p>YOLOv5（You Only Look Once version 5）是一个广泛使用的实时目标检测系统。它能快速、高效地检测图像中的多个物体，具有速度快，精度高的优点，同时也易于使用。对于前端工程师来说，理解并使用YOLOv5可以显著增强应用的视觉识别能力。</p><!-- [[[read_end]]] --><p>YOLOv5 的核心思想是<strong>将目标检测任务转化为一个回归问题，通过一个单一的神经网络直接从输入图像中预测出边界框和类别</strong>。具体来说，YOLOv5 将输入图像划分为 SxS 的网格，每个网格预测 B 个边界框和每个边界框的置信度，同时预测 C 个类别的概率分布。</p><p>下面是YOLOv5的层级结构图。</p><p><img src=\"https://static001.geekbang.org/resource/image/61/a5/61f38589a50934f93f15ea47e0d277a5.jpg?wh=5658x725\" alt=\"\"></p><p>本质上来，说YOLOv5也是一个典型的CNN结构，由基础网络模型加上其他计算层组合而成。可以看到图中包含了YOLOv5的层结构，至于更多细节的原理和设计，你如果有兴趣可以在课后查阅更多资料。</p><h2>模型评估标准</h2><p>在模型训练中如何评判是否达到了训练标准呢？在正式开始模型训练前，我们一起来看一下目标检测中有哪些模型评判标准。</p><p>在目标检测的数据集评估标准中主要包括以下几个指标。</p><p><img src=\"https://static001.geekbang.org/resource/image/17/c9/17b30236c36e53cbf3533277e224c7c9.jpg?wh=6769x2678\" alt=\"\"></p><p>第一项指标平均精度均值（mean Average Precision），简称mAP，这是目标检测任务中最常见的评估标准之一。mAP用于衡量模型在不同阈值下的平均精度以及模型在检测多个类别时的整体性能。另外，在mAP的计算过程中又结合了精度 (Precision) 和召回率 (Recall) 这两个标准。</p><p>mAP也是我们即将使用的YOLOv5模型训练和评估过程中的重要指标，那么我们结合例子来看看mAP是如何计算的。</p><p>假设我们有一个目标检测模型，用于检测图片中的猫和狗。我们有以下几张图片及其对应的检测结果。</p><ul>\n<li>图片1：模型检测到一只猫，实际也有一只猫。</li>\n<li>图片2：模型检测到一只狗，实际也有一只狗。</li>\n<li>图片3：模型检测到一只猫，实际没有猫（误报）。</li>\n<li>图片4：模型检测到一只狗，实际没有狗（误报）。</li>\n<li>图片5：模型没有检测到任何东西，但实际有一只猫（漏报）。</li>\n</ul><p>首先需要计算每个类别（猫和狗两个类别）的精确率和召回率。</p><p>对于猫这个类别：</p><p>精确率 (Precision) 等于检测到的猫中实际为猫的比例 = 1/2 = 0.5</p><p>召回率 (Recall) 等于实际为猫中被正确检测到的比例 = 1/2 = 0.5</p><p>同样对于狗这个类别：</p><p>精确率 (Precision) 等于检测到的狗中实际为狗的比例 = 1/2 = 0.5</p><p>召回率 (Recall) 等于实际为狗中被正确检测到的比例 = 1/1 = 1.0</p><p>接下来，我们计算可以计算每个类别的平均精确率 (AP)了。猫类别的AP等于在不同的召回率下精确率的平均值。假设我们有多个阈值下的精确率和召回率，计算其平均值。对于狗类别的AP，我们也同样计算其平均值。</p><p>最后我们来计算 mAP，mAP 是所有类别的 AP 的平均值，mAP的计算公式如下，其中N是总类别数，$AP_{i}$ 是类别 i 的平均精度。</p><p>$$mAP = \\frac{1}{N}\\sum_{i=1}^{N}{AP_{i}}$$</p><p>那么，假设猫类别的 AP 是 0.5，狗类别的 AP 是 0.75，那么 mAP的结果就是0.625，计算过程是：mAP = (0.5 + 0.75)/2 = 0.625。</p><p>通过这样一个mAP的示例计算过程，可以看出 mAP 值越高，表示模型在检测不同类别的目标时，能够更准确地识别和定位目标。相反 mAP 值越低，就表示模型在检测不同类别的目标时，存在较多的误报（False Positives）或漏报（False Negatives）。在我们训练模型时，也可以通过观察mAP值来判断是否达到训练要求。</p><h2>模型训练</h2><p>接下来我们就可以开始训练模型了。首先需要下载YOLOv5的源代码，这是一个开源代码，需要从GitHub上拉取。</p><pre><code class=\"language-powershell\">git clone https://github.com/ultralytics/yolov5.git\n</code></pre><p>在下载代码的同时，我们还需要下载一些预训练模型。这些预训练模型是通过一些公共数据集训练好的模型，在预训练模型上进行训练可以显著提高模型性能，减少训练时间。在同等硬件资源下使用预训练模型进行二次训练会有更快的模型收敛速度。</p><p>YOLOv5的源代码结构如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/f0/f443a99731c022d42cded260641215f0.jpg?wh=3871x2300\" alt=\"\"></p><p>我们来一起看一下需要我们关注和修改的几个文件。首先是根目录下的 train.py，这是模型训练的入。在train.py这个文件大概第560行左右的位置，会有一些<strong>使用argparse进行超参数设置的代码</strong>，需要我们根据先验知识进行设置。这里的先验知识通常来源于一些经典论文或者网络搜索，并在训练的过程中不断调整。</p><p>我们来一起看看一些必要的超参数。</p><pre><code class=\"language-python\">&nbsp; &nbsp; parser.add_argument('--weights', type=str, default=ROOT / 'yolov5s.pt', help='initial weights path')\n&nbsp; &nbsp; parser.add_argument('--cfg', type=str, default='models/yolov5s.yaml', help='model.yaml path')\n&nbsp; &nbsp; parser.add_argument('--data', type=str, default=ROOT / 'data/myvoc.yaml', help='dataset.yaml path')\n&nbsp; &nbsp; parser.add_argument('--hyp', type=str, default=ROOT / 'data/hyps/hyp.scratch-low.yaml', help='hyperparameters path')\n&nbsp; &nbsp; parser.add_argument('--epochs', type=int, default=200, help='total training epochs')\n&nbsp; &nbsp; parser.add_argument('--batch-size', type=int, default=8, help='total batch size for all GPUs, -1 for autobatch')\n</code></pre><ul>\n<li>\n<p>–widgets 参数，用于设置预训练模型的路径，加载预训练模型的权重。</p>\n</li>\n<li>\n<p>-cfg参数是模型配置文件的路径。该文件定义了模型的架构和参数。</p>\n</li>\n<li>\n<p>–data 参数, 它定义了模型读取数据的路径，以及一些数据相关的配置信息。</p>\n</li>\n<li>\n<p>–hyp参数是超参数配置文件的路径。该文件定义了训练过程中使用的超参数，如学习率、动量等。</p>\n</li>\n<li>\n<p>–epochs参数代表总训练轮数，定义了模型训练的总迭代次数。</p>\n</li>\n<li>\n<p>–batch-size是总批量大小，定义了每次训练迭代中使用的样本数量。</p>\n</li>\n</ul><p>接下来我们把制作好的数据集放在根目录下，并激活在环境配置课程中搭建好的Conda环境，再执行tarin.py 便可以开始训练了。</p><p>在训练的过程中，命令行程序会不断有log打出，输出当前批次的训练进度（如下图为第三批次的一条训练进度日志）。同时，在目录的runs/train文件夹下会显示完成定长批次训练后的结果，直到完成我们设定的epochs次数结束训练。</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/da/7ba1a95c36da94644580ab99e506e1da.jpg?wh=2916x80\" alt=\"\"></p><p>训练结束后，打开位于runs/train文件夹下的最后一次训练结果，就能看到里面有一张训练结果图，我们来一起分析下这个训练结果图：</p><p><img src=\"https://static001.geekbang.org/resource/image/45/cb/45fa25d8f74b05d5d01eff19ecbfb7cb.jpg?wh=1572x789\" alt=\"\"></p><p>mAP值代表了模型在不同阈值下的平均精度。通过这张图我们可以看到当训练次数达到200左右的时候，mAP值能够达到90%以上并且趋于稳定，也就是是说在这个时候，模型已经通过训练达到了一个不错的预测精准度。那么这个训练次数下的权重文件便可用于预测了。</p><p>这里我们通过直接观察mAP值来判断了模型的训练效果。其实，对于YOLOv5的训练效果分析不仅通过mAP，还可以通过分析训练和验证损失、精度和召回率等指标来实现。我们可以通过这样一个命令打开一个本地服务，来查看和分析更多的训练结果指标。</p><pre><code class=\"language-powershell\">tensorboard --logdir runs/train/exp10\n</code></pre><p>然后，通过浏览器访问http://locahost:6006，即可浏览到如下界面，这样就可以借助图里的指标进行分析了。</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/26/f9832f1203a6a09457a9104c708c9b26.jpg?wh=4083x1871\" alt=\"\"></p><h2>总结</h2><p>我们来一起做个总结吧。</p><p>我们选择了 YOLOv5 作为本次目标检测任务的基础模型，主要因为它在性能和检测精度方面表现出色。</p><p>在学习目标检测领域的模型评估标准时，我们重点理解了 mAP（mean Average Precision）。通过猫狗检测的实例，我们详细学习了 mAP 的计算过程。</p><p>接着，我们深入分析了 YOLOv5 的源代码，并详细解读了其中的关键部分。在这个过程中，我们特别关注了超参数的设置，这些超参数就像函数的参数一样，能够直接影响模型的性能。</p><p>完成模型训练后，我们对生成的结果图进行了分析，重点关注了 mAP 的变化趋势以及超参数之间的关系。</p><h2>思考题</h2><p>在模型训练结果的分析中，我们用mAP进行了分析，那么，还有哪些指标可以用来分析，以及观测方法是什么？</p><p>欢迎你在留言区和我交流互动，如果这节课对你有启发，也推荐分享给身边更多朋友。</p>","neighbors":{"left":{"article_title":"10｜标签制作：模型到底理解的是什么","id":819680},"right":{"article_title":"12｜模型预测：让模型告诉我们组件的信息","id":821061}},"comments":[{"had_liked":false,"id":395459,"user_name":"Meow戴","can_delete":false,"product_type":"c1","uid":1901198,"ip_address":"上海","ucode":"562C8A736A201D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/02/8e/67ccf859.jpg","comment_is_top":false,"comment_ctime":1730884713,"is_pvip":false,"replies":[{"id":143567,"content":"你好，同学\n感谢你的提问\n是的，将上节课dataSet中的所有文件放入yolov5根目录下的VOCData文件夹中。\n这是我本地做实验时候的YOLOv5的代码链接，有需要的话可以参考一下：https:&#47;&#47;github.com&#47;IrvingBB&#47;geektime_AIFE&#47;tree&#47;main&#47;Chapter_3&#47;lesson_12&#47;layoutassistant&#47;detection","user_name":"作者回复","user_name_real":"编辑","uid":3971025,"ctime":1730956045,"ip_address":"浙江","comment_id":395459,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100825201,"comment_content":"“接下来我们把制作好的数据集放在根目录下，并激活在环境配置课程中搭建好的 Conda 环境，再执行 tarin.py 便可以开始训练了”意思是，把上节课的dataSet目录，复制到yolov5这个项目下，然后执行“python tarin.py”就行了？\n\n","like_count":1,"discussions":[{"author":{"id":3971025,"avatar":"https://static001.geekbang.org/account/avatar/00/3c/97/d1/52acf459.jpg","nickname":"柳博文","note":"","ucode":"1E60D52922548C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653485,"discussion_content":"你好，同学\n感谢你的提问\n是的，将上节课dataSet中的所有文件放入yolov5根目录下的VOCData文件夹中。\n这是我本地做实验时候的YOLOv5的代码链接，有需要的话可以参考一下：https://github.com/IrvingBB/geektime_AIFE/tree/main/Chapter_3/lesson_12/layoutassistant/detection","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1730956045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1901198,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/02/8e/67ccf859.jpg","nickname":"Meow戴","note":"","ucode":"562C8A736A201D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653449,"discussion_content":"这里的需要做哪些配置呢？我搜了下，好像还需要相关的yaml配置文件，能不能具体一点呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1730889556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395503,"user_name":"Brian","can_delete":false,"product_type":"c1","uid":2141216,"ip_address":"江西","ucode":"32AD96ACB2B6B3","user_header":"https://static001.geekbang.org/account/avatar/00/20/ac/20/ea743a52.jpg","comment_is_top":false,"comment_ctime":1730988565,"is_pvip":false,"replies":[{"id":143568,"content":"你好，Brian同学\n感谢你的互动留言\n这个是代码的仓库：https:&#47;&#47;github.com&#47;IrvingBB&#47;geektime_AIFE\n点击下载代码的ZIP包，应该是可以下载下来的，可以再试试~","user_name":"作者回复","user_name_real":"编辑","uid":3971025,"ctime":1731034175,"ip_address":"浙江","comment_id":395503,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100825201,"comment_content":"老师可以开放仓库的下载权限吗","like_count":0,"discussions":[{"author":{"id":3971025,"avatar":"https://static001.geekbang.org/account/avatar/00/3c/97/d1/52acf459.jpg","nickname":"柳博文","note":"","ucode":"1E60D52922548C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653511,"discussion_content":"你好，Brian同学\n感谢你的互动留言\n这个是代码的仓库：https://github.com/IrvingBB/geektime_AIFE\n点击下载代码的ZIP包，应该是可以下载下来的，可以再试试~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731034175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2141216,"avatar":"https://static001.geekbang.org/account/avatar/00/20/ac/20/ea743a52.jpg","nickname":"Brian","note":"","ucode":"32AD96ACB2B6B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653548,"discussion_content":"Uploads are disabled.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731080707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2141216,"avatar":"https://static001.geekbang.org/account/avatar/00/20/ac/20/ea743a52.jpg","nickname":"Brian","note":"","ucode":"32AD96ACB2B6B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653546,"discussion_content":"git clone 和下载zip都试了 文件夹是空的 没下载权限好像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731080649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395500,"user_name":"Brian","can_delete":false,"product_type":"c1","uid":2141216,"ip_address":"英国","ucode":"32AD96ACB2B6B3","user_header":"https://static001.geekbang.org/account/avatar/00/20/ac/20/ea743a52.jpg","comment_is_top":false,"comment_ctime":1730985498,"is_pvip":false,"replies":[{"id":143569,"content":"你好，Brian同学\n感谢你的互动留言\n这是实验过程中用到图像数据，可以直接下载使用\nhttps:&#47;&#47;github.com&#47;IrvingBB&#47;geektime_AIFE&#47;tree&#47;main&#47;Chapter_3&#47;lesson_12&#47;layoutassistant&#47;detection&#47;VOCData&#47;images\n\n如有其他疑问，欢迎再次留言交流。\n加油~","user_name":"作者回复","user_name_real":"编辑","uid":3971025,"ctime":1731034384,"ip_address":"浙江","comment_id":395500,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100825201,"comment_content":"训练用的数据可以下载就好了","like_count":0,"discussions":[{"author":{"id":3971025,"avatar":"https://static001.geekbang.org/account/avatar/00/3c/97/d1/52acf459.jpg","nickname":"柳博文","note":"","ucode":"1E60D52922548C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653512,"discussion_content":"你好，Brian同学\n感谢你的互动留言\n这是实验过程中用到图像数据，可以直接下载使用\nhttps://github.com/IrvingBB/geektime_AIFE/tree/main/Chapter_3/lesson_12/layoutassistant/detection/VOCData/images\n\n如有其他疑问，欢迎再次留言交流。\n加油~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731034384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]}]}