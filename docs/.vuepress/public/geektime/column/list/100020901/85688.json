{"id":85688,"title":"48 | 案例篇：服务器总是时不时丢包，我该怎么办？（下）","content":"<p>你好，我是倪朋飞。</p><p>上一节，我们一起学习了如何分析网络丢包的问题，特别是从链路层、网络层以及传输层等主要的协议栈中进行分析。</p><p>不过，通过前面这几层的分析，我们还是没有找出最终的性能瓶颈。看来，还是要继续深挖才可以。今天，我们就来继续分析这个未果的案例。</p><p>在开始下面的内容前，你可以先回忆一下上节课的内容，并且自己动脑想一想，除了我们提到的链路层、网络层以及传输层之外，还有哪些潜在问题可能会导致丢包呢？</p><h3>iptables</h3><p>首先我们要知道，除了网络层和传输层的各种协议，iptables 和内核的连接跟踪机制也可能会导致丢包。所以，这也是发生丢包问题时，我们必须要排查的一个因素。</p><p>我们先来看看连接跟踪，我已经在 <a href=\"https://time.geekbang.org/column/article/83189\">如何优化NAT性能</a>  文章中，给你讲过连接跟踪的优化思路。要确认是不是连接跟踪导致的问题，其实只需要对比当前的连接跟踪数和最大连接跟踪数即可。</p><p>不过，由于连接跟踪在 Linux 内核中是全局的（不属于网络命名空间），我们需要退出容器终端，回到主机中来查看。</p><p>你可以在容器终端中，执行 exit ；然后执行下面的命令，查看连接跟踪数：</p><pre><code># 容器终端中执行exit\nroot@nginx:/# exit\nexit\n\n# 主机终端中查询内核配置\n$ sysctl net.netfilter.nf_conntrack_max\nnet.netfilter.nf_conntrack_max = 262144\n$ sysctl net.netfilter.nf_conntrack_count\nnet.netfilter.nf_conntrack_count = 182\n</code></pre><p>从这儿你可以看到，连接跟踪数只有 182，而最大连接跟踪数则是 262144。显然，这里的丢包，不可能是连接跟踪导致的。</p><!-- [[[read_end]]] --><p>接着，再来看 iptables。回顾一下 iptables 的原理，它基于 Netfilter 框架，通过一系列的规则，对网络数据包进行过滤（如防火墙）和修改（如 NAT）。</p><p>这些 iptables 规则，统一管理在一系列的表中，包括 filter（用于过滤）、nat（用于NAT）、mangle（用于修改分组数据） 和 raw（用于原始数据包）等。而每张表又可以包括一系列的链，用于对 iptables 规则进行分组管理。</p><p>对于丢包问题来说，最大的可能就是被 filter 表中的规则给丢弃了。要弄清楚这一点，就需要我们确认，那些目标为 DROP 和 REJECT 等会弃包的规则，有没有被执行到。</p><p>你可以把所有的 iptables 规则列出来，根据收发包的特点，跟 iptables 规则进行匹配。不过显然，如果 iptables 规则比较多，这样做的效率就会很低。</p><p>当然，更简单的方法，就是直接查询 DROP 和 REJECT 等规则的统计信息，看看是否为 0。如果统计值不是 0 ，再把相关的规则拎出来进行分析。</p><p>我们可以通过 iptables -nvL 命令，查看各条规则的统计信息。比如，你可以执行下面的 docker exec 命令，进入容器终端；然后再执行下面的 iptables 命令，就可以看到 filter 表的统计数据了：</p><pre><code># 在主机中执行\n$ docker exec -it nginx bash\n\n# 在容器中执行\nroot@nginx:/# iptables -t filter -nvL\nChain INPUT (policy ACCEPT 25 packets, 1000 bytes)\n pkts bytes target     prot opt in     out     source               destination\n    6   240 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.29999999981\n\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain OUTPUT (policy ACCEPT 15 packets, 660 bytes)\n pkts bytes target     prot opt in     out     source               destination\n    6   264 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.29999999981\n</code></pre><p>从 iptables 的输出中，你可以看到，两条 DROP 规则的统计数值不是 0，它们分别在 INPUT 和 OUTPUT 链中。这两条规则实际上是一样的，指的是使用 statistic 模块，进行随机 30% 的丢包。</p><p>再观察一下它们的匹配规则。0.0.0.0/0 表示匹配所有的源 IP 和目的 IP，也就是会对所有包都进行随机 30% 的丢包。看起来，这应该就是导致部分丢包的“罪魁祸首”了。</p><p>既然找出了原因，接下来的优化就比较简单了。比如，把这两条规则直接删除就可以了。我们可以在容器终端中，执行下面的两条 iptables 命令，删除这两条 DROP 规则：</p><pre><code>root@nginx:/# iptables -t filter -D INPUT -m statistic --mode random --probability 0.30 -j DROP\nroot@nginx:/# iptables -t filter -D OUTPUT -m statistic --mode random --probability 0.30 -j DROP\n</code></pre><p>删除后，问题是否就被解决了呢？我们可以切换到终端二中，重新执行刚才的 hping3 命令，看看现在是否正常：</p><pre><code>$ hping3 -c 10 -S -p 80 192.168.0.30\nHPING 192.168.0.30 (eth0 192.168.0.30): S set, 40 headers + 0 data bytes\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=0 win=5120 rtt=11.9 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=1 win=5120 rtt=7.8 ms\n...\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=9 win=5120 rtt=15.0 ms\n\n--- 192.168.0.30 hping statistic ---\n10 packets transmitted, 10 packets received, 0% packet loss\nround-trip min/avg/max = 3.3/7.9/15.0 ms\n</code></pre><p>这次输出你可以看到，现在已经没有丢包了，并且延迟的波动变化也很小。看来，丢包问题应该已经解决了。</p><p>不过，到目前为止，我们一直使用的 hping3 工具，只能验证案例 Nginx 的 80 端口处于正常监听状态，却还没有访问 Nginx 的 HTTP 服务。所以，不要匆忙下结论结束这次优化，我们还需要进一步确认，Nginx 能不能正常响应 HTTP 请求。</p><p>我们继续在终端二中，执行如下的 curl 命令，检查 Nginx 对 HTTP 请求的响应：</p><pre><code>$ curl --max-time 3 http://192.168.0.30\ncurl: (28) Operation timed out after 3000 milliseconds with 0 bytes received\n</code></pre><p>从 curl 的输出中，你可以发现，这次连接超时了。可是，刚才我们明明用 hping3 验证了端口正常，现在却发现 HTTP 连接超时，是不是因为 Nginx 突然异常退出了呢？</p><p>不妨再次运行 hping3 来确认一下：</p><pre><code>$ hping3 -c 3 -S -p 80 192.168.0.30\nHPING 192.168.0.30 (eth0 192.168.0.30): S set, 40 headers + 0 data bytes\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=0 win=5120 rtt=7.8 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=1 win=5120 rtt=7.7 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=2 win=5120 rtt=3.6 ms\n\n--- 192.168.0.30 hping statistic ---\n3 packets transmitted, 3 packets received, 0% packet loss\nround-trip min/avg/max = 3.6/6.4/7.8 ms\n</code></pre><p>奇怪，hping3 的结果显示，Nginx 的 80 端口确确实实还是正常状态。这该如何是好呢？别忘了，我们还有个大杀器——抓包操作。看来有必要抓包看看了。</p><h3>tcpdump</h3><p>接下来，我们切换回终端一，在容器终端中，执行下面的 tcpdump 命令，抓取 80 端口的包：</p><pre><code>root@nginx:/# tcpdump -i eth0 -nn port 80\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes\n</code></pre><p>然后，切换到终端二中，再次执行前面的 curl 命令：</p><pre><code>$ curl --max-time 3 http://192.168.0.30/\ncurl: (28) Operation timed out after 3000 milliseconds with 0 bytes received\n</code></pre><p>等到curl 命令结束后，再次切换回终端一，查看 tcpdump 的输出：</p><pre><code>14:40:00.589235 IP 10.255.255.5.39058 &gt; 172.17.0.2.80: Flags [S], seq 332257715, win 29200, options [mss 1418,sackOK,TS val 486800541 ecr 0,nop,wscale 7], length 0\n14:40:00.589277 IP 172.17.0.2.80 &gt; 10.255.255.5.39058: Flags [S.], seq 1630206251, ack 332257716, win 4880, options [mss 256,sackOK,TS val 2509376001 ecr 486800541,nop,wscale 7], length 0\n14:40:00.589894 IP 10.255.255.5.39058 &gt; 172.17.0.2.80: Flags [.], ack 1, win 229, options [nop,nop,TS val 486800541 ecr 2509376001], length 0\n14:40:03.589352 IP 10.255.255.5.39058 &gt; 172.17.0.2.80: Flags [F.], seq 76, ack 1, win 229, options [nop,nop,TS val 486803541 ecr 2509376001], length 0\n14:40:03.589417 IP 172.17.0.2.80 &gt; 10.255.255.5.39058: Flags [.], ack 1, win 40, options [nop,nop,TS val 2509379001 ecr 486800541,nop,nop,sack 1 {76:77}], length 0\n</code></pre><p>经过这么一系列的操作，从 tcpdump 的输出中，我们就可以看到：</p><ul>\n<li>\n<p>前三个包是正常的 TCP 三次握手，这没问题；</p>\n</li>\n<li>\n<p>但第四个包却是在 3 秒以后了，并且还是客户端（VM2）发送过来的 FIN 包，也就说明，客户端的连接关闭了。</p>\n</li>\n</ul><p>我想，根据 curl 设置的 3 秒超时选项，你应该能猜到，这是因为 curl 命令超时后退出了。</p><p>我把这一过程，用 TCP 交互的流程图（实际上来自 Wireshark 的 Flow Graph）来表示，你可以更清楚地看到上面这个问题：</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/c2/a81bd7639a1f81c23bc6d2e030af97c2.png?wh=1314*364\" alt=\"\"><br>\n这里比较奇怪的是，我们并没有抓取到 curl 发来的 HTTP GET 请求。那么，究竟是网卡丢包了，还是客户端压根儿就没发过来呢？</p><p>我们可以重新执行 netstat -i 命令，确认一下网卡有没有丢包问题：</p><pre><code>root@nginx:/# netstat -i\nKernel Interface table\nIface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\neth0       100      157      0    344 0            94      0      0      0 BMRU\nlo       65536        0      0      0 0             0      0      0      0 LRU\n</code></pre><p>从 netstat 的输出中，你可以看到，接收丢包数（RX-DRP）是 344，果然是在网卡接收时丢包了。不过问题也来了，为什么刚才用 hping3 时不丢包，现在换成 GET 就收不到了呢？</p><p>还是那句话，遇到搞不懂的现象，不妨先去查查工具和方法的原理。我们可以对比一下这两个工具：</p><ul>\n<li>\n<p>hping3 实际上只发送了 SYN 包；</p>\n</li>\n<li>\n<p>而 curl 在发送 SYN 包后，还会发送 HTTP GET 请求。</p>\n</li>\n</ul><p>HTTP GET ，本质上也是一个 TCP 包，但跟 SYN 包相比，它还携带了 HTTP GET 的数据。</p><p>那么，通过这个对比，你应该想到了，这可能是 MTU 配置错误导致的。为什么呢？</p><p>其实，仔细观察上面 netstat 的输出界面，第二列正是每个网卡的 MTU 值。eth0 的 MTU 只有 100，而以太网的 MTU 默认值是 1500，这个100 就显得太小了。</p><p>当然，MTU 问题是很好解决的，把它改成 1500 就可以了。我们继续在容器终端中，执行下面的命令，把容器 eth0 的 MTU 改成 1500：</p><pre><code>root@nginx:/# ifconfig eth0 mtu 1500\n</code></pre><p>修改完成后，再切换到终端二中，再次执行 curl 命令，确认问题是否真的解决了：</p><pre><code>$ curl --max-time 3 http://192.168.0.30/\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n...\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>非常不容易呀，这次终于看到了熟悉的 Nginx 响应，说明丢包的问题终于彻底解决了。</p><p>当然，案例结束前，不要忘记停止今天的 Nginx 应用。你可以切换回终端一，在容器终端中执行 exit 命令，退出容器终端：</p><pre><code>root@nginx:/# exit\nexit\n</code></pre><p>最后，再执行下面的 docker 命令，停止并删除 Nginx 容器：</p><pre><code>$ docker rm -f nginx\n</code></pre><h2>小结</h2><p>今天，我继续带你分析了网络丢包的问题。特别是在时不时丢包的情况下，定位和优化都需要我们花心思重点投入。</p><p>网络丢包问题的严重性不言而喻。碰到丢包问题时，我们还是要从 Linux 网络收发的流程入手，结合 TCP/IP 协议栈的原理来逐层分析。</p><h2>思考</h2><p>最后，我想邀请你一起来聊聊，你碰到过的网络丢包问题。你是怎么分析它们的根源？又是怎么解决的？你可以结合我的讲解，总结自己的思路。</p><p>欢迎在留言区和我讨论，也欢迎把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","comments":[{"had_liked":false,"id":76513,"user_name":"怀特","can_delete":false,"product_type":"c1","uid":1072331,"ip_address":"","ucode":"3DACB205798ED3","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/cb/3ebdcc49.jpg","comment_is_top":false,"comment_ctime":1552621954,"is_pvip":true,"replies":[{"id":"28061","content":"也可以设置不允许拆包","user_name":"作者回复","comment_id":76513,"uid":"1001282","ip_address":"","utype":1,"ctime":1552750786,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"74567065986","product_id":100020901,"comment_content":"有一个问题不明白：IP包不是可以根据网络自动组合和拆分的吗？为什么会直接丢弃呢？","like_count":18,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443335,"discussion_content":"也可以设置不允许拆包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552750786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76630,"user_name":"佳","can_delete":false,"product_type":"c1","uid":1334190,"ip_address":"","ucode":"482C90C3DC17DB","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/ae/3d639ea4.jpg","comment_is_top":false,"comment_ctime":1552650098,"is_pvip":false,"replies":[{"id":"28063","content":"👍谢谢分享","user_name":"作者回复","comment_id":76630,"uid":"1001282","ip_address":"","utype":1,"ctime":1552750876,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"61682192242","product_id":100020901,"comment_content":"我在用k8s中过netfilter的招。通过service cluster访问pod，发现包到了pod。被丢弃了，tcp超时。抓包发现目的地址没有修改为pod ip.安装脚本没有配置centos开机加载netfilter驱动","like_count":15,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443384,"discussion_content":"👍谢谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552750876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2982173,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/nN4uel4ia1n8oQW2LryIKT5B5w2kEBQz818IPsBwRoFfib0f24ks36r4jVBp4sXvoelYPe08MxhicDXeOy1N1EN2w/132","nickname":"Geek_e63d9e","note":"","ucode":"6B148801B2A100","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574682,"discussion_content":"还能有这种情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654241678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85392,"user_name":"大坏狐狸","can_delete":false,"product_type":"c1","uid":1325678,"ip_address":"","ucode":"5044F89A505C5B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/6e/e39e90ca.jpg","comment_is_top":false,"comment_ctime":1555051273,"is_pvip":false,"replies":[{"id":"30627","content":"😊","user_name":"作者回复","comment_id":85392,"uid":"1001282","ip_address":"","utype":1,"ctime":1555074349,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"44504724233","product_id":100020901,"comment_content":"学到这，突然有种这个订阅是我职业生涯中做的一件很正确的事情了的感觉。","like_count":11,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446655,"discussion_content":"😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555074349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76431,"user_name":"kissingers","can_delete":false,"product_type":"c1","uid":1135299,"ip_address":"","ucode":"615151808CF628","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzqiaZnBw2myRWY802u48Rw3W2zDtKoFQ6vN63m4FdyjibM21FfaOYe8MbMpemUdxXJeQH6fRdVbZA/132","comment_is_top":false,"comment_ctime":1552611284,"is_pvip":false,"replies":[{"id":"28164","content":"分片带来的成本还是蛮高的","user_name":"作者回复","comment_id":76431,"uid":"1001282","ip_address":"","utype":1,"ctime":1552904248,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"44502284244","product_id":100020901,"comment_content":"还有传输设备引入的丢包，比如接口模式不匹配，物理接口或线缆，广播风暴大流量等。另外案例这里如果get 包允许分片那就不会丢包吧？只是传输效率低。那么既然允许分片可以规避中间链路mtu 过小引起的问题，为什么很多应用默认就是不允许分片呢？谢谢","like_count":11,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443305,"discussion_content":"分片带来的成本还是蛮高的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552904248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2291160,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f5/d8/121e4b68.jpg","nickname":"Woa 🤞","note":"","ucode":"6033F496082F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553676,"discussion_content":"有一种攻击方法就是基于分片的。想想给你分片发了一个超级大的包，但是最后一个迟迟不送过来，那岂不是占用了自己很大的内存空间，用不了几回就溢出来了！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646025268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76414,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1552607925,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35912346293","product_id":100020901,"comment_content":"打卡day51<br>知识没有融会贯通，我能想到iptables的问题，也能想到抓包分析，但是后面定位到mtu的问题，我估计只能凭灵感了，思维不能马上跟这个产生关联","like_count":9},{"had_liked":false,"id":129155,"user_name":"麦小旭","can_delete":false,"product_type":"c1","uid":1346575,"ip_address":"","ucode":"FDC132B4CDA0DB","user_header":"https://static001.geekbang.org/account/avatar/00/14/8c/0f/7516306e.jpg","comment_is_top":false,"comment_ctime":1567051092,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31631822164","product_id":100020901,"comment_content":"老师关于mtu100的问题，我想问下在三次握手的时候不是会协商mtu窗口的大小吗，容器的mtu明明是100为什么容器返回给客户端的ack包的mss值是256？","like_count":8,"discussions":[{"author":{"id":1476507,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/9b/8bebc8b6.jpg","nickname":"Marshall","note":"","ucode":"0FB004E8163F44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341362,"discussion_content":"mtu是ip层的概念，你说的应该是mss，但是数据到ip层就按照mtu大小拆包发送，发送过程中如果发现其他网络设备mtu小 可以进行分组传递","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610410419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271384,"user_name":"Spoon","can_delete":false,"product_type":"c1","uid":1959822,"ip_address":"","ucode":"2FF9193AD482C2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","comment_is_top":false,"comment_ctime":1609589571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10199524163","product_id":100020901,"comment_content":"用tcpdump抓包发现<br>1.只有length（tcpdump输出，表示TCP playload值为0）为0的tcp包才能被走到tcp协议层，IP头20字节，TCP头40字节加起来就60字节了<br>2.在client端抓包发现tcp playload为76字节，加上IP和TCP头肯定是超过100字节的MTU<br>3.可以做个试验将MTU设置为137字节","like_count":3},{"had_liked":false,"id":106095,"user_name":"王聪 Claire","can_delete":false,"product_type":"c1","uid":1090310,"ip_address":"","ucode":"0D9CC82C9F44D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/06/9fa93074.jpg","comment_is_top":false,"comment_ctime":1561173120,"is_pvip":false,"replies":[{"id":"38369","content":"1. 谢谢指出，wireshark的图片标错了<br>2. 不是的，是因为容器的eth0实际上只是veth pair，不会分包","user_name":"作者回复","comment_id":106095,"uid":"1001282","ip_address":"","utype":1,"ctime":1561214831,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10151107712","product_id":100020901,"comment_content":"1. 不应该是0.2向0.30发送请求吗？为什么wireshark的图SYN是0.30发给0.2的？2. MTU过小，是因为要进行大量的数据分片分包，所以导致服务器端接收不到curl http get请求吗？谢谢。","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454946,"discussion_content":"1. 谢谢指出，wireshark的图片标错了\n2. 不是的，是因为容器的eth0实际上只是veth pair，不会分包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561214831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97331,"user_name":"挺直腰板","can_delete":false,"product_type":"c1","uid":1178397,"ip_address":"","ucode":"B7DD679A3A4EEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/1d/12c7c021.jpg","comment_is_top":false,"comment_ctime":1558657182,"is_pvip":false,"replies":[{"id":"34969","content":"查内核源码","user_name":"作者回复","comment_id":97331,"uid":"1001282","ip_address":"","utype":1,"ctime":1558793671,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10148591774","product_id":100020901,"comment_content":"老师，跟踪到内核函数，但不清楚任何函数是做什么的，怎么查？","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451230,"discussion_content":"查内核源码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558793671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76920,"user_name":"Huayra","can_delete":false,"product_type":"c1","uid":1031596,"ip_address":"","ucode":"5F8F6EF2783C1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/ac/c9154dfe.jpg","comment_is_top":false,"comment_ctime":1552750952,"is_pvip":false,"replies":[{"id":"28099","content":"嗯嗯，好主意","user_name":"作者回复","comment_id":76920,"uid":"1001282","ip_address":"","utype":1,"ctime":1552834419,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10142685544","product_id":100020901,"comment_content":"针对这问题，tcpdump效率太低了，倒不如使用系统动态追踪或者pcap技术来实现这么一个专门的工具","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443501,"discussion_content":"嗯嗯，好主意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552834419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316292,"user_name":"AceslupK","can_delete":false,"product_type":"c1","uid":1284474,"ip_address":"","ucode":"048F84D019CBBB","user_header":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","comment_is_top":false,"comment_ctime":1634262665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5929229961","product_id":100020901,"comment_content":"老师，47篇也执行过netstat -i，为啥那个时候没注意MTU值呢？","like_count":1},{"had_liked":false,"id":91232,"user_name":"无名老卒","can_delete":false,"product_type":"c1","uid":1348261,"ip_address":"","ucode":"48874CE670E122","user_header":"","comment_is_top":false,"comment_ctime":1556940412,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5851907708","product_id":100020901,"comment_content":"iptables我后面是想到了，但是mtu没有想到。有一个疑问，为什么说mtu值等于100是太小了，我测试过这个案例，当mtu值小于127值就会出现异常，等于以及大于127这个值就是正常的，倪老师，这个可以解释一下吗？","like_count":1,"discussions":[{"author":{"id":1346575,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8c/0f/7516306e.jpg","nickname":"麦小旭","note":"","ucode":"FDC132B4CDA0DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6689,"discussion_content":"因为案例的curl请求的tcp包大小是127","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567050978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":86057,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1555306822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850274118","product_id":100020901,"comment_content":"DAY48，打卡","like_count":1},{"had_liked":false,"id":76422,"user_name":"西红柿牛腩","can_delete":false,"product_type":"c1","uid":1152898,"ip_address":"","ucode":"DEC94B4A647A92","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/82/394c88ad.jpg","comment_is_top":false,"comment_ctime":1552609788,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5847577084","product_id":100020901,"comment_content":"好玩，抽空要把Netfilter好好玩一遍","like_count":1},{"had_liked":false,"id":335248,"user_name":"moooofly","can_delete":false,"product_type":"c1","uid":1008348,"ip_address":"","ucode":"4A20795C281B6F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","comment_is_top":false,"comment_ctime":1645426641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645426641","product_id":100020901,"comment_content":"什么情况&#47;条件&#47;设置下，系统收发包的时候会按照 mtu 值进行分片呢？","like_count":0},{"had_liked":false,"id":187874,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1584264064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584264064","product_id":100020901,"comment_content":"定位问题的思路太清晰了，没有一点碰运气的成分。","like_count":0},{"had_liked":false,"id":158952,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1362659,"ip_address":"","ucode":"76F2CAFA309437","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/e3/447aff89.jpg","comment_is_top":false,"comment_ctime":1575506390,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575506390","product_id":100020901,"comment_content":"老师好，有个问题想问下，服务端发送了两组数据包，我用txpdump抓包然后wireshark看到的那两组包在一个tcp包里，这个是协议栈组在一起的吗？另外这个组过包我调用recv接口接收的时候只有第一包的数据  是怎么回事？感谢老师，期待您的回复。","like_count":0},{"had_liked":false,"id":139486,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1570667666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570667666","product_id":100020901,"comment_content":"为什么最后一次握手的时候ack=1而不是seq+1呢？","like_count":0},{"had_liked":false,"id":103005,"user_name":"深海极光","can_delete":false,"product_type":"c1","uid":1096111,"ip_address":"","ucode":"331024F7E99C64","user_header":"https://static001.geekbang.org/account/avatar/00/10/b9/af/f59b4c7c.jpg","comment_is_top":false,"comment_ctime":1560346996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560346996","product_id":100020901,"comment_content":"老师最近在查线上问题时，发现服务在tcp层有丢包，通过netstat - s可以看到，具体如下: 32474 passive connections rejected because of time stamp<br>    71707 packets rejects in established connections because of timestamp<br>查看机器配置，也确实是开启了tcp timestamp和recycle，都为1，但是这个是通过nat访问才回有这个问题吧，我们是nginx直接打给我的网关服务的，理论上不回有放弃链接啥，还请老师解答，谢谢了","like_count":0},{"had_liked":false,"id":78144,"user_name":"fran712","can_delete":false,"product_type":"c1","uid":1284429,"ip_address":"","ucode":"B09A1186FA1FA5","user_header":"","comment_is_top":false,"comment_ctime":1553077922,"is_pvip":false,"replies":[{"id":"28768","content":"嗯，这是直接禁止掉了","user_name":"作者回复","comment_id":78144,"uid":"1001282","ip_address":"","utype":1,"ctime":1553318690,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"1553077922","product_id":100020901,"comment_content":"曾经被跟踪表坑过，索性就<br># cat &#47;etc&#47;modprobe.d&#47;conntrack.conf<br>install nf_conntrack &#47;bin&#47;false","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443983,"discussion_content":"嗯，这是直接禁止掉了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553318690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76556,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1552632146,"is_pvip":false,"replies":[{"id":"28062","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552750798,"ip_address":"","comment_id":76556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552632146","product_id":100020901,"comment_content":"[D48打卡]<br>之前理应想到 iptables .这个相当于是个防火墙.<br>还是这个工具接触的少了.<br><br>这个iptables的问题没解决前,用 tcpdump 能看出啥来不.<br>我用tcpdump看时只显示出那些连接成功了的包信息,好像没看到丢失的信息.😁<br><br>连接跟踪数要做宿主机上查看. 学习了.<br><br>除此之外,还需要配合`netstat -i`查看网卡底层的信息.<br>","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443353,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552750798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76426,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1552610777,"is_pvip":false,"replies":[{"id":"28059","content":"看时间戳","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552750694,"ip_address":"","comment_id":76426,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552610777","product_id":100020901,"comment_content":"tcpdump怎么看出第四次出现问题，前三次握手正常，哪里体现","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443302,"discussion_content":"看时间戳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552750694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76387,"user_name":"Huayra","can_delete":false,"product_type":"c1","uid":1031596,"ip_address":"","ucode":"5F8F6EF2783C1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/ac/c9154dfe.jpg","comment_is_top":false,"comment_ctime":1552581396,"is_pvip":false,"replies":[{"id":"28058","content":"最简单的就是tcpdump抓包","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552750614,"ip_address":"","comment_id":76387,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552581396","product_id":100020901,"comment_content":"请问有没有专门检测网络包大小异常的工具呢？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443285,"discussion_content":"最简单的就是tcpdump抓包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552750614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}