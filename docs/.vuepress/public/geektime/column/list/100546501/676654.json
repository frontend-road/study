{"id":676654,"title":"答疑篇｜前导篇&前端实战篇思考题答案","content":"<p>你好，我是Barry。</p><p>今天是一节答疑课。课程更新到现在，很开心你的一路支持。很多同学也在留言区记录了自己的学习收获和自己对于思考题的解答。</p><p>其实设置思考题，就是为了帮助同学们检验和巩固自己的学习成果。这次我把前面十几节课的参考答案公布出来，供你作为参考。这里我要提醒一下，建议你先自己思考和练习后，再来对答案，这样的学习效果会更好一些。每节课我都准备了超链接，方便你跳转回顾。</p><h2><a href=\"https://time.geekbang.org/column/article/652102\">第一节课</a></h2><p>你知道Python内置函数split和replace有什么区别吗？</p><p>Python replace() 方法起到了替换功能，把字符串中的 old（旧字符串）替换成 new（新字符串），如果指定第三个参数max，则替换不超过 max 次。具体使用方法如下。</p><pre><code class=\"language-plain\">str.replace(old, new[, max])\n</code></pre><p>Python&nbsp;<strong>split()</strong>&nbsp;通过指定分隔符对字符串进行切片，如果参数 num 有指定值，则分隔 num+1 个子字符串。</p><pre><code class=\"language-plain\">str.split(str=\"\", num=string.count(str)).\n</code></pre><ul>\n<li>str：分隔符，默认为所有的空字符，包括空格、换行(\\n)、制表符(\\t)等。</li>\n<li>num：分割次数。默认为 -1，即分隔所有。</li>\n</ul><p>replace主要用于解决替换需求，split主要用于字符串切片，而且两者在参数含义上也存在很大的区别。</p><!-- [[[read_end]]] --><h2><a href=\"https://time.geekbang.org/column/article/652736?\">第二节课</a></h2><p>请你使用Matploylib画一个饼状图，巩固一下对Matploylib的认识。</p><p>你可以参考后面这个例子，我们用饼状图呈现出了一个班级的学生对不同球类运动兴趣偏好的分布情况。</p><pre><code class=\"language-python\">import matplotlib.pyplot as plt\nimport numpy as np\n#添加图形对象\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\n#使得X/Y轴的间距相等\nax.axis('equal')\n#准备数据\nlangs = ['football', 'tennis', 'basketball', 'ping-pong', 'volleyball']\nstudents = [20,18,35,22,5]\n#绘制饼状图\nax.pie(students, labels = langs,autopct='%1.2f%%')\nplt.show()\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/2b/81/2bfe7d987d2a8cb4aca0a61ed294ee81.jpg?wh=1186x789\" alt=\"\"></p><h2><a href=\"https://time.geekbang.org/column/article/653426\">第三节课</a></h2><p>后面是一段HTML代码，呈现的内容就是有p标签的“变化前- 1”，还有一个按钮写着“文本变换”，点击网页上的按钮，让p标签里的文字变成“变化后-2”，这里就是让你再次应用一下JS动效，快来试试吧！</p><pre><code class=\"language-css\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;动效小测试&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;变化前-1&lt;/p&gt;\n&lt;button&gt;文本变换&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>这道题目属于代码实操类题目。参考代码如下。很多同学留言的实现我也看到了，做得也非常不错。</p><pre><code class=\"language-css\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;动效小测试&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;变换前-1&lt;/p&gt;\n&lt;button onclick=\"changetext(this)\"&gt;文本变换&lt;/button&gt;\n\n&lt;/body&gt;\n&lt;script&gt;\nfunction changetext(id){\n\tid.innerHTML=\"变换后-2\";\n}\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre><h2><a href=\"https://time.geekbang.org/column/article/653986\">第四节课</a></h2><p>Vue采用了MVVM架构思想的框架，你知道什么是MVVM吗？</p><p>MVVM&nbsp;是 Vue 实现数据驱动视图和双向数据绑定的核心原理。MVVM指的是&nbsp;Model、&nbsp;View 和&nbsp;ViewModel，它把每个 HTML 页面都拆分成了三个部分。</p><p><img src=\"https://static001.geekbang.org/resource/image/37/51/372151b69ec407ca3cdb6fe117413751.jpg?wh=1361x925\" alt=\"\"></p><ul>\n<li>Model 表示当前页面渲染时所依赖的数据源。</li>\n<li>View 表示当前页面所渲染的 DOM 结构。</li>\n<li>ViewModel 表示 Vue 的实例，它是 MVVM 的核心。</li>\n</ul><p>MVVM采用双向数据绑定，View中的数据变化将自动反映到ViewModel上。反之，Dodel中的数据变化也会自动展示在页面上。把Model和View关联起来的就是ViewModel。ViewModel负责把Model的数据同步到View并显示出来，还负责把View的修改同步回Model。</p><p>MVVM的核心思想是关注Model的变化，让MVVM框架利用自己的机制自动更新DOM，也就是所谓的数据-视图分离，数据不会影响视图。</p><h2><a href=\"https://time.geekbang.org/column/article/654616\">第六节课</a></h2><p>如果在我们平台中有一些公共的展示内容，例如平台的Icon，在每一个页面都可以看到它，并且点击可以跳回首页，你有什么好的想法呢？</p><p>我们可以直接把它放在App.vue文件（这是一个公共文件）中，另一种方法是可以通过路由跳转来控制。</p><h2><a href=\"https://time.geekbang.org/column/article/655607\">第七节课</a></h2><p>这节课我们在Vue框架中整合了Vue Router，整合其他依赖也是同样的道理。你可以尝试整合一下Vue常用的UI组件库Element-UI。</p><p>提示：<a href=\"https://element.eleme.io/#/\">Element-UI官网</a></p><p>main.js代码如下。</p><pre><code class=\"language-javascript\">import Vue from 'vue';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport App from './App.vue';\nVue.use(ElementUI);\nnew Vue({\n  el: '#app',\n  render: h =&gt; h(App)\n});\n</code></pre><h2><a href=\"https://time.geekbang.org/column/article/656369\">第八节课</a></h2><p>我们在处理菜单权限控制的时候，选择的方法是根据 access 权限参数来控制对应的展示内容。如果想应对更复杂的角色情况，还有什么更好的解决方法呢？</p><p>我们可以通过对menuList中特殊的菜单栏绑定新的参数，可以针对不同的情况实现，例如下面的代码。为了应对更多复杂情况，我们给对应的菜单级加入新的标识参数hidden，通过access+hidden的组合参数来形成权限判定。</p><pre><code class=\"language-plain\">{\n        path: '/course', \n        icon: 'funnel',\n        title: '课程管理',\n        name: 'course',\n        header: 0,\n        access: 1, //权限参数\n        hidden：2, // 加入多个唯一标识从而解决复杂条件的情况,以此类推\n        component: Main,\n        children: [\n            {\n                path: 'course',\n                icon: 'battery-charging',\n                name: 'course',\n                title: '课程列表',\n                component: resolve =&gt; { require(['@/views/myView/course/courselist.vue'], resolve); }\n            }\n        ]\n    }\n</code></pre><h2><a href=\"https://time.geekbang.org/column/article/656997\">第九节课</a></h2><p>尝试用 Element-UI 来实现一个 tab 可以切换的标签页，效果是点击不同的标签能够显示不同的内容。</p><p>参考代码如下。</p><pre><code class=\"language-css\">&lt;template&gt;\n  &lt;el-tabs v-model=\"activeName\" @tab-click=\"handleClick\"&gt;\n    &lt;el-tab-pane label=\"用户管理\" name=\"first\"&gt;用户管理&lt;/el-tab-pane&gt;\n    &lt;el-tab-pane label=\"配置管理\" name=\"second\"&gt;配置管理&lt;/el-tab-pane&gt;\n    &lt;el-tab-pane label=\"角色管理\" name=\"third\"&gt;角色管理&lt;/el-tab-pane&gt;\n    &lt;el-tab-pane label=\"定时任务补偿\" name=\"fourth\"&gt;定时任务补偿&lt;/el-tab-pane&gt;\n  &lt;/el-tabs&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        activeName: 'second'\n      };\n    },\n    methods: {\n      handleClick(tab, event) {\n        console.log(tab, event);\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre><h2><a href=\"https://time.geekbang.org/column/article/658229\">第十节课</a></h2><p>我们一起来讨论一下，关于用户个人中心的“我的点赞”和“我的收藏”视频列表，是否有必要做分页？</p><p>这个可以分情况讨论，如果不太大的话，比如50以内的数量其实没必要分页展示，反而整个页面呈现出来对用户的体验更好，不需要来回切换。</p><p>但是如果量级特别大，例如快到100了，那这个需要滑非常久，这个体验就不太好，所以建议通过分页的方式来进行内容呈现管理，体验更佳。</p><h2><a href=\"https://time.geekbang.org/column/article/658963\">第十一节课</a></h2><p>如果我们想要在用户点击视频暂停的时候，弹出一个弹窗，你有什么好的实现方法？</p><p>我们可以通过视频播放器的暂停钩子函数来触发Element-ui的弹窗组件，这个题目的核心是你会应用播放器的内置方法来实现。</p><h2><a href=\"https://time.geekbang.org/column/article/659854\">第十二节课</a></h2><p>如果想在表单中el-input组件中实现输入数字的验证功能，你有什么好办法？</p><p>在表单验证rules中，对应的prop值加上后面的内容。</p><pre><code class=\"language-plain\">{ type: 'number', message: '输入内容必须为数字值'}\n</code></pre><h2><a href=\"https://time.geekbang.org/column/article/660706\">第十三节课</a></h2><p>除了课程里提到的四个维度的数据，你觉得数据中心里还有必要新增哪些维度的数据？</p><p>这个是一个活命题，没有固定答案，只要是有助于用户数据检测的维度、最终服务于优化用户视频质量的思路都是可取的。比如后面这几个维度。</p><ol>\n<li>稿件播放完成率对比</li>\n<li>粉丝的兴趣分布</li>\n<li>粉丝地区分布等等</li>\n</ol><h2><a href=\"https://time.geekbang.org/column/article/661435\">第十四节课</a></h2><p>如何实现一个图表在多个页面中使用？这里不建议每一个页面都写一次代码，这样会有大量的代码量。</p><p>可以采用组件封装的形式来实现，我们把共用的这个图表作为一个子组件，对于不同页面的实现需求，我们分别传入不同的data值，实现数据效果的展示就可以，这样只需要写一次代码，就可以实现多处复用。</p><h2><a href=\"https://time.geekbang.org/column/article/662105?\">第十五节课</a></h2><p>在Layout组件中，如果我们不想使用<el-col>来实现空的内容占位，还有什么好的方式？</el-col></p><p>可以直接利用Layout的offset属性来实现占位，它的作用是实现栅格左侧的间隔格数，直接完成占位。</p><h2><a href=\"https://time.geekbang.org/column/article/662742\">第十六节课</a></h2><p>直播中心应用中我们一起实现了申请中心，你可以尝试模拟实现一下直播间信息的配置。请你思考一下需要用户提交哪些信息呢？页面又该怎样实现呢？</p><p>这是一道开放题，通常包含频道名称、频道类型、频道描述或直播描述、上传直播间的封面。通过表单的形式提交即可。</p><h2><a href=\"https://time.geekbang.org/column/article/663146\">第十七节课</a></h2><p>在 Webpack 中，loader 中 test 选项用于匹配需要被处理的文件。你知道它是通过什么样的方式进行文件类型匹配的吗？</p><p>test主要应用的是正则进行文件类型的匹配。例如后面这个表达式。</p><pre><code class=\"language-plain\">test: /\\.vue$/\n</code></pre><p>$符号表示匹配字符串的末尾，即以.vue结尾的字符串。因此，该正则表达式会匹配所有以.vue结尾的文件。</p><p>好，这次的答疑加餐就到这里。如果有什么疑问，也欢迎你继续通过留言区和我交流。</p>","comments":[{"had_liked":false,"id":378124,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1689775785,"is_pvip":false,"replies":[{"id":137836,"content":"前后端分离是现在企业中都在应用的开发模式，你会发现有前端岗位，也有后端岗位，在日常开发中，前后端可以同步进行。完成分别的功能开发之后，需要通过接口联动，实现前后端的交互。不需要前端打包放在后端工程中这样的操作。这样理解才是正确的。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1690038605,"ip_address":"北京","comment_id":378124,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"前后端分离，只是开发阶段的概念，对吗？\n开发阶段分为前后端，各自独立开发。但开发完成以后，前端页面需要放到后端工程中，具体来说，比如前端页面打包后放到后端工程中的某个目录下面，用户请求页面的时候，由后端将该页面发送给用户（当然会有填充数据一类的处理）。这样理解对吗？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623942,"discussion_content":"前后端分离是现在企业中都在应用的开发模式，你会发现有前端岗位，也有后端岗位，在日常开发中，前后端可以同步进行。完成分别的功能开发之后，需要通过接口联动，实现前后端的交互。不需要前端打包放在后端工程中这样的操作。这样理解才是正确的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690038605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}