{"id":75670,"title":"18 | 案例篇：内存泄漏了，我该如何定位和处理？","content":"<p>你好，我是倪朋飞。</p><p>通过前几节对内存基础的学习，我相信你对 Linux 内存的工作原理，已经有了初步了解。</p><p>对普通进程来说，能看到的其实是内核提供的虚拟内存，这些虚拟内存还需要通过页表，由系统映射为物理内存。</p><p>当进程通过 malloc() 申请虚拟内存后，系统并不会立即为其分配物理内存，而是在首次访问时，才通过缺页异常陷入内核中分配内存。</p><p>为了协调 CPU 与磁盘间的性能差异，Linux 还会使用 Cache 和 Buffer ，分别把文件和磁盘读写的数据缓存到内存中。</p><p>对应用程序来说，动态内存的分配和回收，是既核心又复杂的一个逻辑功能模块。管理内存的过程中，也很容易发生各种各样的“事故”，比如，</p><ul>\n<li>\n<p>没正确回收分配后的内存，导致了泄漏。</p>\n</li>\n<li>\n<p>访问的是已分配内存边界外的地址，导致程序异常退出，等等。</p>\n</li>\n</ul><p>今天我就带你来看看，内存泄漏到底是怎么发生的，以及发生内存泄漏之后该如何排查和定位。</p><p>说起内存泄漏，这就要先从内存的分配和回收说起了。</p><h2>内存的分配和回收</h2><p>先回顾一下，你还记得应用程序中，都有哪些方法来分配内存吗？用完后，又该怎么释放还给系统呢？</p><p>前面讲进程的内存空间时，我曾经提到过，用户空间内存包括多个不同的内存段，比如只读段、数据段、堆、栈以及文件映射段等。这些内存段正是应用程序使用内存的基本方式。</p><!-- [[[read_end]]] --><p>举个例子，你在程序中定义了一个局部变量，比如一个整数数组 <em>int data[64]</em>  ，就定义了一个可以存储 64 个整数的内存段。由于这是一个局部变量，它会从内存空间的栈中分配内存。</p><p>栈内存由系统自动分配和管理。一旦程序运行超出了这个局部变量的作用域，栈内存就会被系统自动回收，所以不会产生内存泄漏的问题。</p><p>再比如，很多时候，我们事先并不知道数据大小，所以你就要用到标准库函数 <em>malloc()</em> _，_在程序中动态分配内存。这时候，系统就会从内存空间的堆中分配内存。</p><p>堆内存由应用程序自己来分配和管理。除非程序退出，这些堆内存并不会被系统自动释放，而是需要应用程序明确调用库函数 <em>free()</em> 来释放它们。如果应用程序没有正确释放堆内存，就会造成内存泄漏。</p><p>这是两个栈和堆的例子，那么，其他内存段是否也会导致内存泄漏呢？经过我们前面的学习，这个问题并不难回答。</p><ul>\n<li>\n<p>只读段，包括程序的代码和常量，由于是只读的，不会再去分配新的内存，所以也不会产生内存泄漏。</p>\n</li>\n<li>\n<p>数据段，包括全局变量和静态变量，这些变量在定义时就已经确定了大小，所以也不会产生内存泄漏。</p>\n</li>\n<li>\n<p>最后一个内存映射段，包括动态链接库和共享内存，其中共享内存由程序动态分配和管理。所以，如果程序在分配后忘了回收，就会导致跟堆内存类似的泄漏问题。</p>\n</li>\n</ul><p><strong>内存泄漏的危害非常大，这些忘记释放的内存，不仅应用程序自己不能访问，系统也不能把它们再次分配给其他应用</strong>。内存泄漏不断累积，甚至会耗尽系统内存。</p><p>虽然，系统最终可以通过 OOM （Out of Memory）机制杀死进程，但进程在 OOM 前，可能已经引发了一连串的反应，导致严重的性能问题。</p><p>比如，其他需要内存的进程，可能无法分配新的内存；内存不足，又会触发系统的缓存回收以及 SWAP 机制，从而进一步导致 I/O 的性能问题等等。</p><p>内存泄漏的危害这么大，那我们应该怎么检测这种问题呢？特别是，如果你已经发现了内存泄漏，该如何定位和处理呢。</p><p>接下来，我们就用一个计算斐波那契数列的案例，来看看内存泄漏问题的定位和处理方法。</p><p>斐波那契数列是一个这样的数列：0、1、1、2、3、5、8…，也就是除了前两个数是0和1，其他数都由前面两数相加得到，用数学公式来表示就是 F(n)=F(n-1)+F(n-2)，（n&gt;=2），F(0)=0, F(1)=1。</p><h2>案例</h2><p>今天的案例基于 Ubuntu 18.04，当然，同样适用其他的 Linux 系统。</p><ul>\n<li>\n<p>机器配置：2 CPU，8GB 内存</p>\n</li>\n<li>\n<p>预先安装 sysstat、Docker 以及 bcc 软件包，比如：</p>\n</li>\n</ul><pre><code># install sysstat docker\nsudo apt-get install -y sysstat docker.io\n\n# Install bcc\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD\necho &quot;deb https://repo.iovisor.org/apt/bionic bionic main&quot; | sudo tee /etc/apt/sources.list.d/iovisor.list\nsudo apt-get update\nsudo apt-get install -y bcc-tools libbcc-examples linux-headers-$(uname -r)\n</code></pre><p>其中，sysstat 和 Docker 我们已经很熟悉了。sysstat 软件包中的 vmstat ，可以观察内存的变化情况；而 Docker 可以运行案例程序。</p><p><a href=\"https://github.com/iovisor/bcc\">bcc</a> 软件包前面也介绍过，它提供了一系列的 Linux 性能分析工具，常用来动态追踪进程和内核的行为。更多工作原理你先不用深究，后面学习我们会逐步接触。这里你只需要记住，按照上面步骤安装完后，它提供的所有工具都位于 /usr/share/bcc/tools 这个目录中。</p><blockquote>\n<p>注意：bcc-tools需要内核版本为4.1或者更高，如果你使用的是CentOS7，或者其他内核版本比较旧的系统，那么你需要手动<a href=\"https://github.com/iovisor/bcc/issues/462\">升级内核版本后再安装</a>。</p>\n</blockquote><p>打开一个终端，SSH 登录到机器上，安装上述工具。</p><p>同以前的案例一样，下面的所有命令都默认以 root 用户运行，如果你是用普通用户身份登陆系统，请运行 sudo su root 命令切换到 root 用户。</p><p>如果安装过程中有什么问题，同样鼓励你先自己搜索解决，解决不了的，可以在留言区向我提问。如果你以前已经安装过了，就可以忽略这一点了。</p><p>安装完成后，再执行下面的命令来运行案例：</p><pre><code>$ docker run --name=app -itd feisky/app:mem-leak\n</code></pre><p>案例成功运行后，你需要输入下面的命令，确认案例应用已经正常启动。如果一切正常，你应该可以看到下面这个界面：</p><pre><code>$ docker logs app\n2th =&gt; 1\n3th =&gt; 2\n4th =&gt; 3\n5th =&gt; 5\n6th =&gt; 8\n7th =&gt; 13\n</code></pre><p>从输出中，我们可以发现，这个案例会输出斐波那契数列的一系列数值。实际上，这些数值每隔 1 秒输出一次。</p><p>知道了这些，我们应该怎么检查内存情况，判断有没有泄漏发生呢？你首先想到的可能是 top 工具，不过，top 虽然能观察系统和进程的内存占用情况，但今天的案例并不适合。内存泄漏问题，我们更应该关注内存使用的变化趋势。</p><p>所以，开头我也提到了，今天推荐的是另一个老熟人， vmstat 工具。</p><p>运行下面的 vmstat ，等待一段时间，观察内存的变化情况。如果忘了 vmstat 里各指标的含义，记得复习前面内容，或者执行 man vmstat 查询。</p><pre><code># 每隔3秒输出一组数据\n$ vmstat 3\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\nr  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\nr  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n0  0      0 6601824  97620 1098784    0    0     0     0   62  322  0  0 100  0  0\n0  0      0 6601700  97620 1098788    0    0     0     0   57  251  0  0 100  0  0\n0  0      0 6601320  97620 1098788    0    0     0     3   52  306  0  0 100  0  0\n0  0      0 6601452  97628 1098788    0    0     0    27   63  326  0  0 100  0  0\n2  0      0 6601328  97628 1098788    0    0     0    44   52  299  0  0 100  0  0\n0  0      0 6601080  97628 1098792    0    0     0     0   56  285  0  0 100  0  0 \n</code></pre><p>从输出中你可以看到，内存的 free 列在不停的变化，并且是下降趋势；而 buffer 和 cache 基本保持不变。</p><p>未使用内存在逐渐减小，而 buffer 和 cache 基本不变，这说明，系统中使用的内存一直在升高。但这并不能说明有内存泄漏，因为应用程序运行中需要的内存也可能会增大。比如说，程序中如果用了一个动态增长的数组来缓存计算结果，占用内存自然会增长。</p><p>那怎么确定是不是内存泄漏呢？或者换句话说，有没有简单方法找出让内存增长的进程，并定位增长内存用在哪儿呢？</p><p>根据前面内容，你应该想到了用 top 或ps 来观察进程的内存使用情况，然后找出内存使用一直增长的进程，最后再通过 pmap 查看进程的内存分布。</p><p>但这种方法并不太好用，因为要判断内存的变化情况，还需要你写一个脚本，来处理 top 或者 ps 的输出。</p><p>这里，我介绍一个专门用来检测内存泄漏的工具，memleak。memleak 可以跟踪系统或指定进程的内存分配、释放请求，然后定期输出一个未释放内存和相应调用栈的汇总情况（默认5 秒）。</p><p>当然，memleak 是 bcc 软件包中的一个工具，我们一开始就装好了，执行 <em>/usr/share/bcc/tools/memleak</em> 就可以运行它。比如，我们运行下面的命令：</p><pre><code># -a 表示显示每个内存分配请求的大小以及地址\n# -p 指定案例应用的PID号\n$ /usr/share/bcc/tools/memleak -a -p $(pidof app)\nWARNING: Couldn't find .text section in /app\nWARNING: BCC can't handle sym look ups for /app\n    addr = 7f8f704732b0 size = 8192\n    addr = 7f8f704772d0 size = 8192\n    addr = 7f8f704712a0 size = 8192\n    addr = 7f8f704752c0 size = 8192\n    32768 bytes in 4 allocations from stack\n        [unknown] [app]\n        [unknown] [app]\n        start_thread+0xdb [libpthread-2.27.so] \n</code></pre><p>从 memleak 的输出可以看到，案例应用在不停地分配内存，并且这些分配的地址没有被回收。</p><p>这里有一个问题，Couldn’t find .text section in /app，所以调用栈不能正常输出，最后的调用栈部分只能看到 [unknown] 的标志。</p><p>为什么会有这个错误呢？实际上，这是由于案例应用运行在容器中导致的。memleak 工具运行在容器之外，并不能直接访问进程路径 /app。</p><p>比方说，在终端中直接运行 ls 命令，你会发现，这个路径的确不存在：</p><pre><code>$ ls /app\nls: cannot access '/app': No such file or directory\n</code></pre><p>类似的问题，我在 CPU 模块中的 <a href=\"https://time.geekbang.org/column/article/73738\">perf 使用方法</a>中已经提到好几个解决思路。最简单的方法，就是在容器外部构建相同路径的文件以及依赖库。这个案例只有一个二进制文件，所以只要把案例应用的二进制文件放到 /app 路径中，就可以修复这个问题。</p><p>比如，你可以运行下面的命令，把 app 二进制文件从容器中复制出来，然后重新运行 memleak 工具：</p><pre><code>$ docker cp app:/app /app\n$ /usr/share/bcc/tools/memleak -p $(pidof app) -a\nAttaching to pid 12512, Ctrl+C to quit.\n[03:00:41] Top 10 stacks with outstanding allocations:\n    addr = 7f8f70863220 size = 8192\n    addr = 7f8f70861210 size = 8192\n    addr = 7f8f7085b1e0 size = 8192\n    addr = 7f8f7085f200 size = 8192\n    addr = 7f8f7085d1f0 size = 8192\n    40960 bytes in 5 allocations from stack\n        fibonacci+0x1f [app]\n        child+0x4f [app]\n        start_thread+0xdb [libpthread-2.27.so] \n</code></pre><p>这一次，我们终于看到了内存分配的调用栈，原来是 fibonacci() 函数分配的内存没释放。</p><p>定位了内存泄漏的来源，下一步自然就应该查看源码，想办法修复它。我们一起来看案例应用的源代码 <a href=\"https://github.com/feiskyer/linux-perf-examples/blob/master/mem-leak/app.c\">app.c</a>：</p><pre><code>$ docker exec app cat /app.c\n...\nlong long *fibonacci(long long *n0, long long *n1)\n{\n    //分配1024个长整数空间方便观测内存的变化情况\n    long long *v = (long long *) calloc(1024, sizeof(long long));\n    *v = *n0 + *n1;\n    return v;\n}\n\n\nvoid *child(void *arg)\n{\n    long long n0 = 0;\n    long long n1 = 1;\n    long long *v = NULL;\n    for (int n = 2; n &gt; 0; n++) {\n        v = fibonacci(&amp;n0, &amp;n1);\n        n0 = n1;\n        n1 = *v;\n        printf(&quot;%dth =&gt; %lld\\n&quot;, n, *v);\n        sleep(1);\n    }\n}\n... \n</code></pre><p>你会发现， child() 调用了 fibonacci() 函数，但并没有释放 fibonacci() 返回的内存。所以，想要修复泄漏问题，在 child() 中加一个释放函数就可以了，比如：</p><pre><code>void *child(void *arg)\n{\n    ...\n    for (int n = 2; n &gt; 0; n++) {\n        v = fibonacci(&amp;n0, &amp;n1);\n        n0 = n1;\n        n1 = *v;\n        printf(&quot;%dth =&gt; %lld\\n&quot;, n, *v);\n        free(v);    // 释放内存\n        sleep(1);\n    }\n} \n</code></pre><p>我把修复后的代码放到了 <a href=\"https://github.com/feiskyer/linux-perf-examples/blob/master/mem-leak/app-fix.c\">app-fix.c</a>，也打包成了一个 Docker 镜像。你可以运行下面的命令，验证一下内存泄漏是否修复：</p><pre><code># 清理原来的案例应用\n$ docker rm -f app\n\n# 运行修复后的应用\n$ docker run --name=app -itd feisky/app:mem-leak-fix\n\n# 重新执行 memleak工具检查内存泄漏情况\n$ /usr/share/bcc/tools/memleak -a -p $(pidof app)\nAttaching to pid 18808, Ctrl+C to quit.\n[10:23:18] Top 10 stacks with outstanding allocations:\n[10:23:23] Top 10 stacks with outstanding allocations:\n</code></pre><p>现在，我们看到，案例应用已经没有遗留内存，证明我们的修复工作成功完成。</p><h2>小结</h2><p>总结一下今天的内容。</p><p>应用程序可以访问的用户内存空间，由只读段、数据段、堆、栈以及文件映射段等组成。其中，堆内存和文件映射段，需要应用程序来动态管理内存段，所以我们必须小心处理。不仅要会用标准库函数 <em>malloc()</em>  来动态分配内存，还要记得在用完内存后，调用库函数 <em>free()</em> 来释放它们。</p><p>今天的案例比较简单，只用加一个 <em>free()</em> 调用就能修复内存泄漏。不过，实际应用程序就复杂多了。比如说，</p><ul>\n<li>\n<p>malloc() 和 free() 通常并不是成对出现，而是需要你，在每个异常处理路径和成功路径上都释放内存 。</p>\n</li>\n<li>\n<p>在多线程程序中，一个线程中分配的内存，可能会在另一个线程中访问和释放。</p>\n</li>\n<li>\n<p>更复杂的是，在第三方的库函数中，隐式分配的内存可能需要应用程序显式释放。</p>\n</li>\n</ul><p>所以，为了避免内存泄漏，最重要的一点就是养成良好的编程习惯，比如分配内存后，一定要先写好内存释放的代码，再去开发其他逻辑。还是那句话，有借有还，才能高效运转，再借不难。</p><p>当然，如果已经完成了开发任务，你还可以用 memleak 工具，检查应用程序的运行中，内存是否泄漏。如果发现了内存泄漏情况，再根据 memleak 输出的应用程序调用栈，定位内存的分配位置，从而释放不再访问的内存。</p><h2>思考</h2><p>最后，给你留一个思考题。</p><p>今天的案例，我们通过增加 <em>free()</em> 调用，释放函数 <em>fibonacci()</em> 分配的内存，修复了内存泄漏的问题。就这个案例而言，还有没有其他更好的修复方法呢？结合前面学习和你自己的工作经验，相信你一定能有更多更好的方案。</p><p>欢迎留言和我讨论 ，写下你的答案和收获，也欢迎你把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p>","neighbors":{"left":{"article_title":"17 | 案例篇：如何利用系统缓存优化程序的运行效率？","id":75242},"right":{"article_title":"19 | 案例篇：为什么系统的Swap变高了（上）","id":75797}},"comments":[{"had_liked":false,"id":55911,"user_name":"Scott","can_delete":false,"product_type":"c1","uid":1014800,"ip_address":"","ucode":"7E57FDCB5E5D49","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","comment_is_top":false,"comment_ctime":1546345946,"is_pvip":false,"replies":[{"id":"20276","content":"另一个用的比较多的是valgrind","user_name":"作者回复","comment_id":55911,"uid":"1001282","ip_address":"","utype":1,"ctime":1546424629,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"242064514522","product_id":100020901,"comment_content":"我比较关心老版本的Linux怎么做同样的事，毕竟没有办法升级公司服务器的内核。","like_count":56,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434879,"discussion_content":"另一个用的比较多的是valgrind","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1546424629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1602650,"avatar":"","nickname":"Geek_e2b0f9","note":"","ucode":"CAB31078DDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588290,"discussion_content":"java 调用native方法(.so文件) 出现的oom 怎么排查\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663653764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2251657,"avatar":"https://static001.geekbang.org/account/avatar/00/22/5b/89/8e0924c4.jpg","nickname":"init 3","note":"","ucode":"681FA943D99672","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348842,"discussion_content":"https://github.com/iovisor/bcc/issues/462\n老师贴的这个链接底部有针对centos6的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612751136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235877,"user_name":"睡在床板下","can_delete":false,"product_type":"c1","uid":1267832,"ip_address":"","ucode":"69BF52FF9C8A0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/58/78/fe19274b.jpg","comment_is_top":false,"comment_ctime":1595233076,"is_pvip":false,"replies":[{"id":"87253","content":"谢谢分享！的确，完善的监控和日志可以更快排查和定位问题，我们专栏后面也有文章提到监控的一些思路。","user_name":"作者回复","comment_id":235877,"uid":"1001282","ip_address":"","utype":1,"ctime":1595343123,"user_name_real":"倪朋飞"}],"discussion_count":5,"race_medal":0,"score":"104674448180","product_id":100020901,"comment_content":"谈谈自己生产环境运行3个月的内存泄露经验吧：<br>现象：服务程序运行90天，监控系统告警内存达到阈值，内存泄漏800M。现实：生产环境、难复现。<br><br>- 保存core文件。 统计top10 大小块内存分配百分比<br><br>- 发现20字节大小内存申请了 3700w次，大概700M<br><br>- 通过工具搜索已有符号文件中大小为20字节的结构体、类，但是可能包含第三方库、组件没有符号文件，导致分析遇阻，未果<br><br>- 通过随机抽查20字节内存地址内容，希望找到有效信息，但几乎都是 0x00 0x10 0x00 ， 没字符串，猜不出什么内容，未果<br><br>- 通过3700w次数申请，平均每小时17000次左右。 通过完善的日志系统，分析1w~3w量级的消息，大概4个，review代码，问题解决<br><br>- 问题定位总共花费了4个小时左右。分析内存泄漏工具、方法很多，但是我觉的更重要的是完善的监控系统和日志系统。<br><br>","like_count":24,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501859,"discussion_content":"谢谢分享！的确，完善的监控和日志可以更快排查和定位问题，我们专栏后面也有文章提到监控的一些思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595343123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240168,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ert8UYzoypaI9wMPZQV2ibThQ2zKsoge5R25qxHP10eia5pMYOV1mq6G9bft5LoygnyR6bn8RERwQDg/132","nickname":"Geek_2b6807","note":"","ucode":"4C1D0B7F283554","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559824,"discussion_content":"这泄漏800M就内存告警了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648989758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1045025,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f2/21/00600713.jpg","nickname":"小侠","note":"","ucode":"A35A61061E41B2","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355494,"discussion_content":"同问：保存core文件。 统计top10 大小块内存分配百分比”--使用的是什么工具？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615443200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1105816,"avatar":"https://static001.geekbang.org/account/avatar/00/10/df/98/670d96c0.jpg","nickname":"流年似水","note":"","ucode":"048D320AFB576A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1045025,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f2/21/00600713.jpg","nickname":"小侠","note":"","ucode":"A35A61061E41B2","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":584343,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660781925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":355494,"ip_address":"江苏"},"score":584343,"extra":""}]},{"author":{"id":2051085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erGLUqIRJ2gJamFq0SbJksGTNOeHnAQzWZknhRaWFDt5vh1mPpZ9eZdrfvn0bzcRqTZo0yjMW3Ugw/132","nickname":"Jasman","note":"","ucode":"C5221E477219A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334296,"discussion_content":"请问“- 保存core文件。 统计top10 大小块内存分配百分比”这种是用的工具？欢迎给介绍介绍定位的详细过程，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607788127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55847,"user_name":"mj4ever","can_delete":false,"product_type":"c1","uid":1005549,"ip_address":"","ucode":"73028E537099CC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/ed/d50de13c.jpg","comment_is_top":false,"comment_ctime":1546327270,"is_pvip":true,"discussion_count":7,"race_medal":0,"score":"87445673190","product_id":100020901,"comment_content":"老师：<br>遇到了个问题，google也查不出所以然：<br>1、ubuntu 18.04，内核4.15.0-29-generic<br>2、运行 memleak -a -p $(pidof app)，报错：<br>Attaching to pid 14069, Ctrl+C to quit.<br>perf_event_open(&#47;sys&#47;kernel&#47;debug&#47;tracing&#47;events&#47;uprobes&#47;p__lib_x86_64_linux_gnu_libc_2_27_so_0x97070_14069_bcc_14199&#47;id): Input&#47;output error<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 416, in &lt;module&gt;<br>    attach_probes(&quot;malloc&quot;)<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 406, in attach_probes<br>    pid=pid)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 952, in attach_uprobe<br>    raise Exception(&quot;Failed to attach BPF to uprobe&quot;)<br>Exception: Failed to attach BPF to uprobe","like_count":20,"discussions":[{"author":{"id":2291160,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f5/d8/121e4b68.jpg","nickname":"Woa 🤞","note":"","ucode":"6033F496082F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553352,"discussion_content":"自行编译一下bcc试试吧。一般是python安装好了，但是内核什么的不匹配。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645858737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1659261,"avatar":"https://static001.geekbang.org/account/avatar/00/19/51/7d/2772ec9a.jpg","nickname":"风过留痕","note":"","ucode":"F13405AD8511B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339372,"discussion_content":"编辑 /etc/apt/sources.list\n$ vi /etc/apt/sources.list\n注释掉deb cdrom开头的那一行\n# deb cdrom:\n更新deb仓库信息\n$ sudo apt update\n\n亲测有用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609648333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1319529,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","nickname":"Don Wang","note":"","ucode":"1853365FA279F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1659261,"avatar":"https://static001.geekbang.org/account/avatar/00/19/51/7d/2772ec9a.jpg","nickname":"风过留痕","note":"","ucode":"F13405AD8511B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367549,"discussion_content":" 本身就没有cdrom相关的源也会报错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618389846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339372,"ip_address":""},"score":367549,"extra":""}]},{"author":{"id":1145907,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep2gRIticwS6CiatsCiaU4QRjAODKibQevrhSciatrmd90lNIZFxywE9yyZgAxKTmWiaBSH4zZUcRIV46qQ/132","nickname":"englefly","note":"","ucode":"E3FCF19E618718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333327,"discussion_content":"我用 snap 安装的bcc遇到这相同问题，后来改用apt重装的bcc就没这个问题了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607502096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324925,"discussion_content":"自行变一下bcc就可以了，我也遇到相同的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605191118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311784,"discussion_content":"居然不百度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602488804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1304580,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e8/04/eb81e2ff.jpg","nickname":"不落银河之翼","note":"","ucode":"13603DE99E7ACA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111,"discussion_content":"先执行sudo su root就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561109190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56040,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1546389624,"is_pvip":false,"replies":[{"id":"20272","content":"Java 看到的是JVM 的堆栈。其实，jmap这些Java原生的工具更好用","user_name":"作者回复","comment_id":56040,"uid":"1001282","ip_address":"","utype":1,"ctime":1546424262,"user_name_real":"倪朋飞"}],"discussion_count":4,"race_medal":0,"score":"83150768248","product_id":100020901,"comment_content":"如果是java应用程序，也可以用这个方法定位么？","like_count":19,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434920,"discussion_content":"Java 看到的是JVM 的堆栈。其实，jmap这些Java原生的工具更好用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546424262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1602650,"avatar":"","nickname":"Geek_e2b0f9","note":"","ucode":"CAB31078DDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":589052,"discussion_content":"java进程 Res不断增大  猜测jni内存泄漏 怎么定位具体位置 使用valgrind有部分输出信息是“？？？”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664369511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":434920,"ip_address":"北京"},"score":589052,"extra":""}]},{"author":{"id":1261634,"avatar":"https://static001.geekbang.org/account/avatar/00/13/40/42/d5c23178.jpg","nickname":"jackhance","note":"","ucode":"934B0D20CCD06C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305150,"discussion_content":"内存方面，jdk提供的工具更加给力，jmap、jstat、jcmd","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599796187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387376,"discussion_content":"java用jmap -histo:live [pid] |less分析 或者直接导出dump分析gc root","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628142831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55534,"user_name":"萧董","can_delete":false,"product_type":"c1","uid":1341895,"ip_address":"","ucode":"7AD87DE458F5B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqvaPTSYCtlXUc9DZxe6MWHeRJEKEr9fNPXMveWtia4Kic3BOicwCuRK6SVKymvvw9PZ5unxiaSukvSXQ/132","comment_is_top":false,"comment_ctime":1546224956,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"83150603580","product_id":100020901,"comment_content":"memleak输出中一直有addr就是内存没有释放吗","like_count":19,"discussions":[{"author":{"id":1078067,"avatar":"https://static001.geekbang.org/account/avatar/00/10/73/33/97769a70.jpg","nickname":"Niccr","note":"","ucode":"3D0CDE7117F0C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332227,"discussion_content":"outstanding allocations 未释放的分配额","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1607099512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2066801,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/W0VEO7Hxzd61mia6Ls2EpBmaZ0l9q7SFUAErbu4XKIjWLmlALr4ybpicDoI8SoXY8XJNKmk04Ep1ibTCuFvfCF8GQ/132","nickname":"Chen","note":"","ucode":"5D0F3DF807706E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330766,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606705174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297753,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597047721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047114,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fa/4a/23f480f5.jpg","nickname":"海一剑","note":"","ucode":"8F18D06C631EA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164869,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581227445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1604645,"avatar":"https://static001.geekbang.org/account/avatar/00/18/7c/25/70134099.jpg","nickname":"许凯","note":"","ucode":"4F11AD41CB0244","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":107842,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577611409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148574,"user_name":"Dym","can_delete":false,"product_type":"c1","uid":1205036,"ip_address":"","ucode":"7E521F01A4D823","user_header":"","comment_is_top":false,"comment_ctime":1573032561,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"74587476593","product_id":100020901,"comment_content":"1、内存泄露<br><br>发生的内存区域在堆区，因为应用程序创建的对象都在内存堆中，当创建了对象后，使用完了后此对象将失去了作用，按正常逻辑是会被GC回收的，但是由于使用不恰当会导致该对象一直被引用，但是以后都不会再使用该对象，这就出现了内存泄露现象<br><br><br>2、如何排查<br><br>对于其他语言可以使用 bcc中的memleak 查看进程的内存分配情况，如果只看到内存一直都在分配的过程，没有释放表明存在内存泄露<br><br>对java进程可以先通过 jstat -gc pid 1s  每隔1s 查看当前进程gc情况，如果存在内存泄露的话，那么该对象存活时间会很长当然会晋升到老年代，所以通过看老年代变化趋势，如果增大的话，我们再使用jmap -histo:live  pid  查看进程中heap区对象的个数和占用的空间大小，找出数量大的对象然后找到对应的类查看代码，是否会存在内存泄露问题。<br><br>注意：可以将jmap -histo:live pid &gt; data.txt 导入到一个文件中，然后通过sort 根据对象个数或占用空间进行排序<br><br><br>3、ThreadLocal使用不当会导致内存泄露<br><br>当给线程池中的线程设置local值   threadLoacl.set(obj) 后没有通过 threadLoacl.remove()就会导致内存泄露<br><br>根据ThreadLocal实现代码上看，每个线程中都会有个ThreadLocalMap 这个map中的key为ThreadLocal对象，value就是对应set的值，当离开了作用域threadLocal就不会再指向ThreadLocal对象，由于ThreadLocalMap中的key为WeakReference 当该对象只有它自己指向时就会导致key变成了null，如果当前线程是在线程池中是会一直存活的，也就是map中的value值会一直指向堆的对象，从而导致了内存泄露","like_count":17,"discussions":[{"author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377753,"discussion_content":"Java内存泄漏排查我个人经验：主要涉及两个命令：\n① jstat -gcutil pid 2000：每2秒查看gc的情况，如果老年代在持续增长，并且FGC也有规律发生，可能会存在内存泄漏，因为出现内存泄漏的时候，对象不会得到回收，对象如果初始分配在年轻代经过多次GC后晋升到老年代，从而导致老年代内存使用持续增加，从而导致FGC；\n②使用jmap -dump:format=b,file=/tmp/name.hpof pid：这个命令是将执行该命令的这个时间点的内存快照记录到file指定的文件中，下载下来后使用mat工具打开进行分析堆内存中的对象情况，注意：这里只能记录某一时刻的，如果要看是否内存泄漏，需要统计最少两个时间点的快照信息，可以在服务刚重新启动不久进行一次快照，然后过段时间再统计一下，使用mat工具进行对比分析，可以很直观的看出哪些对象一直增长并且没被回收\n如果下载.hpof有问题看下这个： https://blog.csdn.net/xiaolinnulidushu/article/details/113870948， mat工具不太会用可以看下网上的教程，多使用几次就熟悉了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1622807637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202730,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1586058966,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"70305535702","product_id":100020901,"comment_content":"内存泄露是程序开发中很常见的事，如何深入分析和定位内存泄露是可以大放张彩的一篇。这篇文章老师写的有点太简单了。","like_count":16,"discussions":[{"author":{"id":2068424,"avatar":"","nickname":"Geek_9815f1","note":"","ucode":"34EE8566A53F10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291806,"discussion_content":"兄弟，可以试试gpreftools 工具定位一下，不过要重新编译。并且很耗应用程序的性能。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1594958427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284474,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","nickname":"AceslupK","note":"","ucode":"048F84D019CBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390903,"discussion_content":"欢迎各路大咖过来补充分享方法。在此感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630133619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56976,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1546591539,"is_pvip":false,"replies":[{"id":"22283","content":"去掉进程号选项","user_name":"作者回复","comment_id":56976,"uid":"1001282","ip_address":"","utype":1,"ctime":1548246321,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"48791231795","product_id":100020901,"comment_content":"老师，你这个例子是已经知道哪个进程有内存泄露了，请问如何找出哪个进程呢？","like_count":11,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435344,"discussion_content":"去掉进程号选项","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1548246321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2291160,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f5/d8/121e4b68.jpg","nickname":"Woa 🤞","note":"","ucode":"6033F496082F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553353,"discussion_content":"笑死，去掉之后直接爆炸💥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645858801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142316,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6e/2c/e2f3cfc0.jpg","nickname":"注意力$","note":"","ucode":"7FB3399A1EAB72","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279726,"discussion_content":"是指这样吗？memleak -a -p $(pidof app)  去掉-p $(pidof app)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591405602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55496,"user_name":"付盼星","can_delete":false,"product_type":"c1","uid":1055542,"ip_address":"","ucode":"E0E4B74E8B361F","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/36/abe6d066.jpg","comment_is_top":false,"comment_ctime":1546219181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40200924845","product_id":100020901,"comment_content":"老师好，我有个问题想请教下，这里的堆栈和java虚拟机的堆栈是对应起来的么？","like_count":9},{"had_liked":false,"id":55565,"user_name":"郭江伟","can_delete":false,"product_type":"c1","uid":1313994,"ip_address":"","ucode":"613D638619B5A2","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/ca/6173350b.jpg","comment_is_top":false,"comment_ctime":1546232743,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31611003815","product_id":100020901,"comment_content":"本例中将动态分配内存改为使用数组，然后就不需要自己free了；<br>将app.c拷贝为app2.c  做如下修改，因为篇幅有限没法贴完全代码：<br>long long fibonacci(long long *n0, long long *n1)<br>{<br>\t&#47;&#47;分配1024个长整数空间方便观测内存的变化情况<br>&#47;&#47;\tlong long *v = (long long *) calloc(1024, sizeof(long long));<br>         long long v[1024];<br>然后执行memleak<br>gjw@gjw:~$ sudo &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak  -p $(pidof app2c)<br>Attaching to pid 3463, Ctrl+C to quit.<br>[13:02:24] Top 10 stacks with outstanding allocations:<br>[13:02:29] Top 10 stacks with outstanding allocations:<br>^Cgjw@gjw:~$ sudo &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak  -p $(pidof app2c)<br>Attaching to pid 3463, Ctrl+C to quit.<br>[13:02:43] Top 10 stacks with outstanding allocations:<br>[13:02:48] Top 10 stacks with outstanding allocations:<br>[13:02:53] Top 10 stacks with outstanding allocations:<br>[13:02:58] Top 10 stacks with outstanding allocations:<br>","like_count":7,"discussions":[{"author":{"id":1620836,"avatar":"https://static001.geekbang.org/account/avatar/00/18/bb/64/f88a1fa8.jpg","nickname":"machh-186","note":"","ucode":"B0027D2AE85AA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3688,"discussion_content":"返回值正确吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564709684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256329,"user_name":"evan","can_delete":false,"product_type":"c1","uid":1543040,"ip_address":"","ucode":"491B073D5AFEDE","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","comment_is_top":false,"comment_ctime":1603599803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23078436283","product_id":100020901,"comment_content":"提个建议..当然已经后话了..<br>老师下次做课件可以直接把使用的环境打包到docker里,<br>然后直接操作docker=中的os...环境问题真的很头疼...","like_count":5},{"had_liked":false,"id":179808,"user_name":"赵生","can_delete":false,"product_type":"c1","uid":1828283,"ip_address":"","ucode":"DA3CC6E316C500","user_header":"","comment_is_top":false,"comment_ctime":1582102962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23056939442","product_id":100020901,"comment_content":"想问下老师，正常情况下，很多系统都是3.10版本的内核，不能升级到4.1，如何排查内存泄露的问题呢？","like_count":5},{"had_liked":false,"id":55773,"user_name":"code2","can_delete":false,"product_type":"c1","uid":1281792,"ip_address":"","ucode":"BBA5748FB6A01C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8OPzdpDraQMvCNWAicicDt54sDaIYJZicBLfMyibXVs4V0ZibEdkZlbzxxL7aGpRoeyvibag5LaAaaGKSdwYQMY2hUrQ/132","comment_is_top":false,"comment_ctime":1546305687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23021142167","product_id":100020901,"comment_content":"防止内存泄露，在c中最好让malloc和free成对出现，不要在函数中分配，在函数外释放，这样一不留神就忘了，检查时也不容易发现。也可使用一些源代码内存泄露检测工具。在C++中除了成对出现外还要注意new和delete使用的一些要点。曾遇到过一个投资数千万的大项目，java做的，因内存泄露不能查明原因，服务器不得不每月杀掉服务进程，重新启动。","like_count":5},{"had_liked":false,"id":55607,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1546241982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23021078462","product_id":100020901,"comment_content":"[D18打卡]<br>想不到又有神器可以直接分析出是哪个函数导致了内存泄露。<br>以前都是在申请和释放的地方加标记，然后用工具去分析。<br>思考题：<br>一般能预分配的空间都没必要去动态申请。<br>这个案例可以把存放结果的值先定义好，函数参数中用指针过去，这样就没必要申请内存了。<br>","like_count":5},{"had_liked":false,"id":55503,"user_name":"espzest","can_delete":false,"product_type":"c1","uid":1094470,"ip_address":"","ucode":"64B1A7DEA19348","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/46/ec914238.jpg","comment_is_top":false,"comment_ctime":1546220967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18726090151","product_id":100020901,"comment_content":"程序长期运行后，VSZ一直增长，其中很绝大多数是匿名页导致的，有没有没法确定这些匿名页是依然在用？  如果没有再用，能有办法强制释放他们？ ","like_count":4},{"had_liked":false,"id":245367,"user_name":"ming","can_delete":false,"product_type":"c1","uid":2084718,"ip_address":"","ucode":"FF2C74CBA5E7BC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/cf/6e/366a8247.jpg","comment_is_top":false,"comment_ctime":1598925833,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14483827721","product_id":100020901,"comment_content":"1、$(pidof app）是什么意思？难道是进程pid吗？ 那&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a -p $(pidof app)执行，岂不是早就知道是$(pidof app)导致的泄露？<br><br>2、我们怎么才能知道是$(pidof app）这个进程导致的泄露呢？<br><br>","like_count":3},{"had_liked":false,"id":157599,"user_name":"airmy丶","can_delete":false,"product_type":"c1","uid":1299673,"ip_address":"","ucode":"41959C9F5B4B65","user_header":"https://static001.geekbang.org/account/avatar/00/13/d4/d9/c3296187.jpg","comment_is_top":false,"comment_ctime":1575209289,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"14460111177","product_id":100020901,"comment_content":"老师，请问下我去掉-p选项直接运行memleak -a ，下面的结果显示很多没有释放的内存 全部来自 [kernel] 这个是不正常的吗？","like_count":3,"discussions":[{"author":{"id":1049208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","nickname":"james","note":"","ucode":"5701899403917C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333837,"discussion_content":"不加-p 完全不知道是哪个进程 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607647901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55742,"user_name":"黄智寿","can_delete":false,"product_type":"c1","uid":1249951,"ip_address":"","ucode":"43685DE62F720B","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/9f/b6eb3471.jpg","comment_is_top":false,"comment_ctime":1546276579,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"14431178467","product_id":100020901,"comment_content":"请问老师，对于golang或者python之类的进程有没有相应的工具分析内存泄露","like_count":3,"discussions":[{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317799,"discussion_content":"go pprof","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603600218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92212,"user_name":"姜小鱼","can_delete":false,"product_type":"c1","uid":1317762,"ip_address":"","ucode":"3E2076E20289BF","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/82/69581d8a.jpg","comment_is_top":false,"comment_ctime":1557201972,"is_pvip":false,"replies":[{"id":"33112","content":"也支持内核的，看它的源码可以发现，kmalloc&#47;kfree&#47;kmem_cache_alloc等等也都在TRACEPOINT_PROBE里面","user_name":"作者回复","comment_id":92212,"uid":"1001282","ip_address":"","utype":1,"ctime":1557324634,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10147136564","product_id":100020901,"comment_content":"老师，memleak只能检测用户程序的内存泄漏吧？如果检测内核态谋和模块内存泄漏呢，Kmemleak能否讲一下呢？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449179,"discussion_content":"也支持内核的，看它的源码可以发现，kmalloc/kfree/kmem_cache_alloc等等也都在TRACEPOINT_PROBE里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557324634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75377,"user_name":"唯安格","can_delete":false,"product_type":"c1","uid":1334982,"ip_address":"","ucode":"72653918FC434E","user_header":"https://static001.geekbang.org/account/avatar/00/14/5e/c6/78e515ee.jpg","comment_is_top":false,"comment_ctime":1552384995,"is_pvip":false,"replies":[{"id":"28067","content":"去掉进程号选项-p试试？","user_name":"作者回复","comment_id":75377,"uid":"1001282","ip_address":"","utype":1,"ctime":1552751689,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10142319587","product_id":100020901,"comment_content":"老师，我运行：$ &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a -p $(pidof app) 并没有看到内存泄漏的问题。之后还看了app的源码。源码内的确没有调用free()函数。请问这可能是什么情况？<br>root@ubuntu:&#47;# &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -p $(pidof app) -a<br>Attaching to pid 84307, Ctrl+C to quit.<br>[02:42:22] Top 10 stacks with outstanding allocations:<br>[02:42:27] Top 10 stacks with outstanding allocations:<br>[02:42:32] Top 10 stacks with outstanding allocations:<br>[02:42:37] Top 10 stacks with outstanding allocations:<br>[02:42:43] Top 10 stacks with outstanding allocations:<br>[02:42:48] Top 10 stacks with outstanding allocations:<br>[02:42:53] Top 10 stacks with outstanding allocations:<br>[02:42:58] Top 10 stacks with outstanding allocations:<br>[02:43:03] Top 10 stacks with outstanding allocations:<br>^Croot@ubuntu:&#47;# docker exec app cat &#47;app.c<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;pthread.h&gt;<br>#include &lt;unistd.h&gt;<br><br>long long *fibonacci(long long *n0, long long *n1)<br>{<br>\tlong long *v = (long long *) calloc(1024, sizeof(long long));<br>\t*v = *n0 + *n1;<br>\treturn v;<br>}<br><br>void *child(void *arg)<br>{<br>\tlong long n0 = 0;<br>\tlong long n1 = 1;<br>\tlong long *v = NULL;<br>\tfor (int n = 2; n &gt; 0; n++) {<br>\t\tv = fibonacci(&amp;n0, &amp;n1);<br>\t\tn0 = n1;<br>\t\tn1 = *v;<br>\t\tprintf(&quot;%dth =&gt; %lld\\n&quot;, n, *v);<br>\t\tsleep(1);<br>\t}<br>}<br><br><br>int main(void)<br>{<br>\tpthread_t tid;<br>\tpthread_create(&amp;tid, NULL, child, NULL);<br>\tpthread_join(tid, NULL);<br>\tprintf(&quot;main thread exit\\n&quot;);<br>\treturn 0;<br>","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442876,"discussion_content":"去掉进程号选项-p试试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552751689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69905,"user_name":"Vicky🐣🐣🐣","can_delete":false,"product_type":"c1","uid":1266840,"ip_address":"","ucode":"F659F178A2FF34","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/98/52ca7053.jpg","comment_is_top":false,"comment_ctime":1550900945,"is_pvip":false,"replies":[{"id":"25338","content":"看一下内核配置开启CONFIG_UPROBE_EVENTS了吗？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551194221,"ip_address":"","comment_id":69905,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10140835537","product_id":100020901,"comment_content":"1. 如果执行&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a -p [pid] 就会报错Exception: Failed to attach BPF to uprobe<br>但是执行&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a，就不会报错，但是里面并没有和app相关函数<br>2. free观察情况如下，新机器，并没有任何其他高占用内存的进程，很是奇怪<br>procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----<br> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st<br> 1  0      0 218244 112044 463144    0    0    21    31  148  344  1  0 99  0  0<br> 0  0      0 218268 112044 463144    0    0     0     0  168  402  0  1 99  0  0<br> 0  0      0 217928 112044 463144    0    0     0     7  182  427  1  0 99  0  0<br> 0  0      0 217836 112044 463228    0    0    23     0  317  730  1  1 98  0  0<br> 0  0      0 217836 112048 463236    0    0     0    17  186  437  1  0 99  0  0<br> 0  0      0 215804 112052 463232    0    0     0    19  202  476  1  1 98  0  0<br> 0  0      0 215860 112052 463240    0    0     0     5  221  490  1  1 99  0  0<br> 0  0      0 217040 112056 463244    0    0     0    15  207  481  1  0 99  0  0<br> 0  0      0 217040 112056 463244    0    0     0     0  156  363  0  0 100  0  0<br> 0  0      0  76976 112056 463296    0    0    24    12  221  546 11  3 86  0  0<br> 0  0      0  77008 112060 463316    0    0     0    11  178  407  1  1 98  0  0<br> 0  0      0  75140 112060 463324    0    0     0    27  176  812  2  3 95  0  0<br> 0  0      0  74584 112060 463328    0    0     0     7  174  819  1  1 98  0  0<br> 0  0      0  74616 112060 463332    0    0     0     0  183  417  0  0 99  0  0<br> 0  0      0 216884 112060 463332    0    0     0    83  176  403  1  0 98  1  0<br> 0  0      0 216884 112064 463328    0    0     0     9  180  448  0  1 99  0  0<br> 0  0      0 217012 112064 463336    0    0     0     4  193  452  0  1 99  0  0<br>","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440345,"discussion_content":"看一下内核配置开启CONFIG_UPROBE_EVENTS了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551194221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2690189,"avatar":"https://static001.geekbang.org/account/avatar/00/29/0c/8d/90bee755.jpg","nickname":"寄居与蟹","note":"","ucode":"3D254E5E2C9966","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576060,"discussion_content":"这个怎么配置呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655263368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1844881,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoxLCjetepOZibacqBnhoibSlgGxAribic2AJPicVEic7M7DAFfuuJ7QvTXpiawO06tFdSpdnARibSVZ5R7Kg/132","nickname":"Geek_牧马人","note":"","ucode":"F26A43AF9C5164","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575331,"discussion_content":"不知道怎么配置 都没找到这个配置在哪个文件\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654754221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69899,"user_name":"Vicky🐣🐣🐣","can_delete":false,"product_type":"c1","uid":1266840,"ip_address":"","ucode":"F659F178A2FF34","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/98/52ca7053.jpg","comment_is_top":false,"comment_ctime":1550899991,"is_pvip":false,"replies":[{"id":"25337","content":"内核中需要开启 CONFIG_UPROBE_EVENTS=y","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551194190,"ip_address":"","comment_id":69899,"utype":1}],"discussion_count":4,"race_medal":0,"score":"10140834583","product_id":100020901,"comment_content":"老师，很多同学都问这个问题了，麻烦解答一下吧<br>ubuntu 4.15.0-29<br># &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a -p 21642<br>Attaching to pid 21642, Ctrl+C to quit.<br>perf_event_open(&#47;sys&#47;kernel&#47;debug&#47;tracing&#47;events&#47;uprobes&#47;p__lib_x86_64_linux_gnu_libc_2_27_so_0x97070_21642_bcc_21882&#47;id): Input&#47;output error<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 416, in &lt;module&gt;<br>    attach_probes(&quot;malloc&quot;)<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 406, in attach_probes<br>    pid=pid)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 989, in attach_uprobe<br>    raise Exception(&quot;Failed to attach BPF to uprobe&quot;)<br>Exception: Failed to attach BPF to uprobe<br>","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440341,"discussion_content":"内核中需要开启 CONFIG_UPROBE_EVENTS=y","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551194190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1633437,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/jDG4trQm3t6licZym9TayWRk4zzNHibwnUnib606U5dP1DwR9fk1HGUHkl5Bg3Xpic34vqAXpapEMzMvreKJSAeKXA/132","nickname":"Geek_e8bbe6","note":"","ucode":"3A959141236658","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345377,"discussion_content":"请问内核中需怎么才能开启 CONFIG_UPROBE_EVENTS=y呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611715032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1865399,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ8ic8eLTo5rntDE6LxCxOFXnibvzbEarEr5jPBLPOAdgUmfKVmoAMtN3a3xXN6x7DfzjAwuiaMvJW1w/132","nickname":"韩少安","note":"","ucode":"02AA70C63C015F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318882,"discussion_content":"请问内核中需怎么才能开启 CONFIG_UPROBE_EVENTS=y呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603874055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543320,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/98/ddd4513c.jpg","nickname":"茶博士","note":"","ucode":"2E49324AC13DA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296025,"discussion_content":"请问内核中需怎么才能开启 CONFIG_UPROBE_EVENTS=y呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596431189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56249,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1546411728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10136346320","product_id":100020901,"comment_content":"老师，现在大部分企业公司线上工程运行的都是centos系统，centos一般用valgrind来排查，我之前遇到一个因为tcp连接的fd遇到异常情况下没有close导致内存泄露，但是valgrind无法检测出来，请老师指点下遇到这种情况下怎么排查","like_count":2},{"had_liked":false,"id":55596,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1546239728,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10136174320","product_id":100020901,"comment_content":"坚持初衷，死磕就行，不退缩，不放弃！","like_count":2,"discussions":[{"author":{"id":2348507,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d5/db/f59b288b.jpg","nickname":"面对疾风吧","note":"","ucode":"FB87423BB7AEE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343863,"discussion_content":"怎么样了~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611198682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297755,"discussion_content":"看完了吗  你的flag","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597047767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358508,"user_name":"Geek_e2b0f9","can_delete":false,"product_type":"c1","uid":1602650,"ip_address":"北京","ucode":"CAB31078DDB515","user_header":"","comment_is_top":false,"comment_ctime":1664369368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5959336664","product_id":100020901,"comment_content":"java jni本地方法内存泄漏 怎么定位具体位置 使用valgrind 有部分输出是“？？？” 是指向的.so不对吗？","like_count":1},{"had_liked":false,"id":69645,"user_name":"元天夫","can_delete":false,"product_type":"c1","uid":1315599,"ip_address":"","ucode":"A453A2EBA77780","user_header":"","comment_is_top":false,"comment_ctime":1550801340,"is_pvip":false,"replies":[{"id":"24856","content":"4.4.7是Red Hat产品的版本，内核版本是2.6.32","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550851996,"ip_address":"","comment_id":69645,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5845768636","product_id":100020901,"comment_content":"还有一个很low的问题，Linux version 2.6.32-504.23.4.el6.x86_64 (mockbuild@c6b9.bsys.dev.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-11)，这个是我查看的内核信息，这个显示内核版本是4.4.7对吗？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440201,"discussion_content":"4.4.7是Red Hat产品的版本，内核版本是2.6.32","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550851996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009228,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/4c/39a6829c.jpg","nickname":"鹏","note":"","ucode":"243E408E2094E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49094,"discussion_content":"这个4.4.7 应该是GCC的版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573553746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69643,"user_name":"元天夫","can_delete":false,"product_type":"c1","uid":1315599,"ip_address":"","ucode":"A453A2EBA77780","user_header":"","comment_is_top":false,"comment_ctime":1550801076,"is_pvip":false,"replies":[{"id":"25330","content":"看场景，比如一般的I&#47;O密集型的应用，脏页大一些可能是正常的；但有些数据一致性要求比价高的应用，可能希望尽可能快的将数据落盘","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551193396,"ip_address":"","comment_id":69643,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5845768372","product_id":100020901,"comment_content":"老师，请教个问题，pmap -x下，看到有的输出项的脏页数比较大，有104万，这个算大吗","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440199,"discussion_content":"看场景，比如一般的I/O密集型的应用，脏页大一些可能是正常的；但有些数据一致性要求比价高的应用，可能希望尽可能快的将数据落盘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551193396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61481,"user_name":"____的我","can_delete":false,"product_type":"c1","uid":1061683,"ip_address":"","ucode":"8A4F5468136E48","user_header":"https://static001.geekbang.org/account/avatar/00/10/33/33/30fb3ac3.jpg","comment_is_top":false,"comment_ctime":1547706428,"is_pvip":false,"replies":[{"id":"22571","content":"你是说找出在哪里分配的？这个应该没有办法，除非还是继续在不停的分配和释放。这时候可以查看进程的系统调用","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548574113,"ip_address":"","comment_id":61481,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842673724","product_id":100020901,"comment_content":"老师 我有一个进程内存使用超出正常范围 用pmap命令看到有较多8mb 60mb的匿名内存段使用 这个有什么好的方式定位这些内存段是怎么分配来的吗","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436884,"discussion_content":"你是说找出在哪里分配的？这个应该没有办法，除非还是继续在不停的分配和释放。这时候可以查看进程的系统调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548574113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56964,"user_name":"仲鬼","can_delete":false,"product_type":"c1","uid":1314692,"ip_address":"","ucode":"DB1CD7052D5BA6","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/84/d8e63885.jpg","comment_is_top":false,"comment_ctime":1546588053,"is_pvip":false,"replies":[{"id":"22281","content":"没有专门讲它的使用方法，不过很容易查到它的使用手册","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548246149,"ip_address":"","comment_id":56964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841555349","product_id":100020901,"comment_content":"老师好，之前哪节课讲过pmap？并没有找到","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435334,"discussion_content":"没有专门讲它的使用方法，不过很容易查到它的使用手册","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548246149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56717,"user_name":"江湖中人","can_delete":false,"product_type":"c1","uid":1053485,"ip_address":"","ucode":"9E464AE9CC62EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/2d/ad1bfe92.jpg","comment_is_top":false,"comment_ctime":1546527087,"is_pvip":false,"replies":[{"id":"22277","content":"是有问题，已经在代码里面修复了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548245837,"ip_address":"","comment_id":56717,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841494383","product_id":100020901,"comment_content":"有个疑问请教下：<br>for (int n = 2; n &gt; 0; n++) {<br>        v = fibonacci(&amp;n0, &amp;n1);<br>        n0 = n1;<br>        n1 = *v;<br>        free(v);    &#47;&#47; 释放内存<br>        printf(&quot;%dth =&gt; %lld\\n&quot;, n, *v);<br>        sleep(1);<br>    }<br>这段代码中，在free(v)之後，printf中仍用到了v中存储的数据，不会有问题吗","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435191,"discussion_content":"是有问题，已经在代码里面修复了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548245837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56271,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1546414718,"is_pvip":false,"replies":[{"id":"20336","content":"还是需要留着，去掉就不容易区分注释、命令和输出了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546445284,"ip_address":"","comment_id":56271,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841382014","product_id":100020901,"comment_content":"老师，代码段里面可否把  代码前面的 $ 或 # 号，去掉。带着还的手动去掉下才能执行代码","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434969,"discussion_content":"还是需要留着，去掉就不容易区分注释、命令和输出了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546445284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56124,"user_name":"划时代","can_delete":false,"product_type":"c1","uid":1061454,"ip_address":"","ucode":"9554CE2F83B77F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2o1Izf2YyJSnnI0ErZ51pYRlnrmibqUTaia3tCU1PjMxuwyXSKOLUYiac2TQ5pd5gNGvS81fVqKWGvDsZLTM8zhWg/132","comment_is_top":false,"comment_ctime":1546394396,"is_pvip":false,"replies":[{"id":"20268","content":"是的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546423944,"ip_address":"","comment_id":56124,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5841361692","product_id":100020901,"comment_content":"memleak好像要比valgrind进行内存泄漏检测要方便很多。","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434939,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546423944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2039139,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/1d/63/35c38c6c.jpg","nickname":"dyh","note":"","ucode":"4E20FDA64495C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351564,"discussion_content":"memleak你内核哪个版本引进的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614325961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55713,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1546266634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841233930","product_id":100020901,"comment_content":"老师讲的都是进程和操作系统之间的内存问题，我想请教一下老师如果是进程里面有多线程，如果怀疑发生了内存泄漏，有什么办法可以处理或分析","like_count":1},{"had_liked":false,"id":55511,"user_name":"湖湘志","can_delete":false,"product_type":"c1","uid":1285578,"ip_address":"","ucode":"C8B069B3AD4FEA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJR5Kj0Xm6LykFHLaWqHjQiaroVxgdoGI7uHEGz2D3PfibWNkBYP23QLzFmcuicgKLbqUch0ZJ2ZNOA/132","comment_is_top":false,"comment_ctime":1546221622,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841188918","product_id":100020901,"comment_content":"D18","like_count":1},{"had_liked":false,"id":348606,"user_name":"代码丸子","can_delete":false,"product_type":"c1","uid":1161081,"ip_address":"","ucode":"E41351DEA2118D","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/79/a74d1e60.jpg","comment_is_top":false,"comment_ctime":1655253161,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1655253161","product_id":100020901,"comment_content":"内存泄露是个复杂的主题，老师这一章节可以再深入讲解的，一般生产环境不会遇到像文章示例这么简单的情况，工具也是检查不出来的","like_count":0},{"had_liked":false,"id":348275,"user_name":"Geek_f353f5","can_delete":false,"product_type":"c1","uid":3023982,"ip_address":"","ucode":"C25A04D9A2B2D5","user_header":"","comment_is_top":false,"comment_ctime":1654924428,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654924428","product_id":100020901,"comment_content":"文中说是app.c源码中未释放内存导致，但我看fix的docker中app.c中也没有添加free(v)释放内存，到底修复了哪里？<br>root@lhtest01:~# docker ps<br>CONTAINER ID   IMAGE                     COMMAND   CREATED          STATUS          PORTS     NAMES<br>bcd836cb2fc9   feisky&#47;app:mem-leak-fix   &quot;&#47;app&quot;    11 minutes ago   Up 11 minutes             app<br>root@lhtest01:~# docker exec -it app cat app.c<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;pthread.h&gt;<br>#include &lt;unistd.h&gt;<br><br>long long *fibonacci(long long *n0, long long *n1)<br>{<br>\tlong long *v = (long long *) calloc(1024, sizeof(long long));<br>\t*v = *n0 + *n1;<br>\treturn v;<br>}<br><br>void *child(void *arg)<br>{<br>\tlong long n0 = 0;<br>\tlong long n1 = 1;<br>\tlong long *v = NULL;<br>\tfor (int n = 2; n &gt; 0; n++) {<br>\t\tv = fibonacci(&amp;n0, &amp;n1);<br>\t\tn0 = n1;<br>\t\tn1 = *v;<br>\t\tprintf(&quot;%dth =&gt; %lld\\n&quot;, n, *v);<br>\t\tsleep(1);<br>\t}<br>}<br><br><br>int main(void)<br>{<br>\tpthread_t tid;<br>\tpthread_create(&amp;tid, NULL, child, NULL);<br>\tpthread_join(tid, NULL);<br>\tprintf(&quot;main thread exit\\n&quot;);<br>\treturn 0;","like_count":0},{"had_liked":false,"id":345809,"user_name":"风清扬","can_delete":false,"product_type":"c1","uid":2104708,"ip_address":"","ucode":"0505791F8EA497","user_header":"https://static001.geekbang.org/account/avatar/00/20/1d/84/c35e492e.jpg","comment_is_top":false,"comment_ctime":1652607340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652607340","product_id":100020901,"comment_content":"&#47;lib&#47;modules&#47;5.17.7-1.el7.elrepo.x86_64&#47;build&#47;include&#47;linux&#47;compiler-clang.h:43:9: warning: &#39;__HAVE_BUILTIN_BSWAP16__&#39; macro redefined<br>      [-Wmacro-redefined]<br>#define __HAVE_BUILTIN_BSWAP16__<br>        ^<br>&lt;command line&gt;:3:9: note: previous definition is here<br>#define __HAVE_BUILTIN_BSWAP16__ 1<br>        ^<br>In file included from &#47;virtual&#47;main.c:2:<br>In file included from &#47;lib&#47;modules&#47;5.17.7-1.el7.elrepo.x86_64&#47;build&#47;include&#47;uapi&#47;linux&#47;ptrace.h:153:<br>In file included from &#47;lib&#47;modules&#47;5.17.7-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;ptrace.h:5:<br>&#47;lib&#47;modules&#47;5.17.7-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;segment.h:255:2: error: expected &#39;(&#39; after &#39;asm&#39;<br>        alternative_io (&quot;lsl %[seg],%[p]&quot;,<br>        ^<br>&#47;lib&#47;modules&#47;5.17.7-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;alternative.h:247:2: note: expanded from macro &#39;alternative_io&#39;<br>        asm_inline volatile (ALTERNATIVE(oldinstr, newinstr, feature)   \\<br>        ^<br>&#47;lib&#47;modules&#47;5.17.7-1.el7.elrepo.x86_64&#47;build&#47;include&#47;linux&#47;compiler_types.h:281:24: note: expanded from macro &#39;asm_inline&#39;<br>#define asm_inline asm __inline<br><br>Linux 5.17.7-1.el7.elrepo.x86_64 x86_64<br><br>bcc按照一直失败","like_count":0},{"had_liked":false,"id":344789,"user_name":"Nevercome","can_delete":false,"product_type":"c1","uid":1489652,"ip_address":"","ucode":"E9C1EDDC0EC0B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/ba/f4/49389d0c.jpg","comment_is_top":false,"comment_ctime":1651768185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651768185","product_id":100020901,"comment_content":"valgrind bcc 的 memleak 还有 Google 的 leak sannitizer，这些工具的区别在哪里呢..","like_count":0},{"had_liked":false,"id":340117,"user_name":"o9","can_delete":false,"product_type":"c1","uid":1101332,"ip_address":"","ucode":"E373E82A39BBFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","comment_is_top":false,"comment_ctime":1648610564,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1648610564","product_id":100020901,"comment_content":"老师好，我用memleak来检测php 的内存泄漏问题，打印的都是 unknown ,有什么办法解决这个问题吗","like_count":0},{"had_liked":false,"id":334230,"user_name":"不了峰","can_delete":false,"product_type":"c1","uid":1013424,"ip_address":"","ucode":"E23B96D6A3D4EC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/b0/14fec62f.jpg","comment_is_top":false,"comment_ctime":1644822848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644822848","product_id":100020901,"comment_content":"请教一下，不是有swap 吗，内在不足就交换到磁盘。那为什么还会 oom，无法分配内存。<br>土土的问题 ：）","like_count":0},{"had_liked":false,"id":324617,"user_name":"lanru666","can_delete":false,"product_type":"c1","uid":2796588,"ip_address":"","ucode":"83064A6AEDD34F","user_header":"https://static001.geekbang.org/account/avatar/00/2a/ac/2c/d2742c9a.jpg","comment_is_top":false,"comment_ctime":1638519840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638519840","product_id":100020901,"comment_content":"bcc一样报错，github上提示要开启CONFIG_KPROBE_EVENTS_ON_NOTRACE，要重新编译内核<br>Enabling CONFIG_KPROBE_EVENTS_ON_NOTRACE probably the only solutiion, I guess.<br><br>https:&#47;&#47;github.com&#47;iovisor&#47;bcc&#47;issues&#47;2509<br>查看我的机器CONFIG_KPROBE_EVENTS_ON_NOTRACE未开启<br>cat config-5.11.0-41-generic|grep CONFIG_KPROBE_EVENTS_ON_NOTRACE<br># CONFIG_KPROBE_EVENTS_ON_NOTRACE is not set<br><br>调试输出:<br> bcc.memleak  -p  $(pidof perf_examples)<br>Attaching to pid 1510059, Ctrl+C to quit.<br>cannot attach uprobe, Invalid argument<br>Traceback (most recent call last):<br>  File &quot;&#47;snap&#47;bcc&#47;159&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 449, in &lt;module&gt;<br>    attach_probes(&quot;malloc&quot;)<br>  File &quot;&#47;snap&#47;bcc&#47;159&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 439, in attach_probes<br>    pid=pid)<br>  File &quot;&#47;snap&#47;bcc&#47;159&#47;usr&#47;lib&#47;python3&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 1358, in attach_uprobe<br>    raise Exception(&quot;Failed to attach BPF to uprobe&quot;)<br>Exception: Failed to attach BPF to uprobe<br><br>查看系统调试日志<br>tail -f &#47;sys&#47;kernel&#47;debug&#47;tracing&#47;error_log<br><br>[196902.568409] trace_uprobe: error: Event name is too long<br>  Command: p:uprobes&#47;p__proc_1510059_root_usr_lib_x86_64_linux_gnu_libc_2_31_so_0x9d260_1510059_bcc_1511705 &#47;proc&#47;1510059&#47;root&#47;usr&#47;lib&#47;x86_64-linux-gnu&#47;libc-2.31.so:0x9d26","like_count":0},{"had_liked":false,"id":320065,"user_name":"robonix","can_delete":false,"product_type":"c1","uid":1212323,"ip_address":"","ucode":"866EC82EDA455B","user_header":"https://static001.geekbang.org/account/avatar/00/12/7f/a3/23540579.jpg","comment_is_top":false,"comment_ctime":1636074343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636074343","product_id":100020901,"comment_content":"用智能指针呀","like_count":0},{"had_liked":false,"id":310493,"user_name":"shalan","can_delete":false,"product_type":"c1","uid":2698347,"ip_address":"","ucode":"14CB8531207892","user_header":"https://static001.geekbang.org/account/avatar/00/29/2c/6b/1b3e1c97.jpg","comment_is_top":false,"comment_ctime":1630679729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630679729","product_id":100020901,"comment_content":"我想咨询一下老师，如果我内存就是不够，比如2g，系统就是不够用，应用程序开多了系统就会卡死，这种情况我怎么优化系统不卡死？或者说有哪些常用手段规避这种情况？谢谢","like_count":0},{"had_liked":false,"id":309435,"user_name":"AceslupK","can_delete":false,"product_type":"c1","uid":1284474,"ip_address":"","ucode":"048F84D019CBBB","user_header":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","comment_is_top":false,"comment_ctime":1630133489,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630133489","product_id":100020901,"comment_content":"老师，该工具能导出文件，放到有环境的机器上进行查看分析的办法呢？","like_count":0},{"had_liked":false,"id":301513,"user_name":"火锅小王子","can_delete":false,"product_type":"c1","uid":1053262,"ip_address":"","ucode":"7D1BF39C437A99","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/4e/ff0702fc.jpg","comment_is_top":false,"comment_ctime":1625724768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625724768","product_id":100020901,"comment_content":"老师  这是我的环境：<br>Ubuntu 20.04.2 LTS (GNU&#47;Linux 5.4.0-73-generic x86_64)<br>安装完毕后目前用到的命令都不支持，这个可能是什么问题？<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;cachetop&quot;, line 261, in &lt;module&gt;<br>    curses.wrapper(handle_loop, args)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;curses&#47;wrapper.py&quot;, line 43, in wrapper<br>    return func(stdscr, *args, **kwds)<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;cachetop&quot;, line 169, in handle_loop<br>    b = BPF(text=bpf_text)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 325, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text","like_count":0},{"had_liked":false,"id":287193,"user_name":"谨兮谨兮","can_delete":false,"product_type":"c1","uid":1376885,"ip_address":"","ucode":"55712DD3852169","user_header":"https://static001.geekbang.org/account/avatar/00/15/02/75/2839c0bb.jpg","comment_is_top":false,"comment_ctime":1617809994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617809994","product_id":100020901,"comment_content":"你应该想到了用 top 或 ps 来观察进程的内存使用情况，然后找出内存使用一直增长的进程，最后再通过 pmap 查看进程的内存分布。这个具体怎么查  memleak生产环境没有","like_count":0},{"had_liked":false,"id":283019,"user_name":"小五","can_delete":false,"product_type":"c1","uid":1240616,"ip_address":"","ucode":"991063EF42D820","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/28/9a2ce9f4.jpg","comment_is_top":false,"comment_ctime":1615520644,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1615520644","product_id":100020901,"comment_content":"我一直malloc为什么增长的是虚拟内存，rss缺没什么变化","like_count":0,"discussions":[{"author":{"id":2616028,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ea/dc/aa699264.jpg","nickname":"宏典","note":"","ucode":"63953F36596C28","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395344,"discussion_content":"malloc没有实际分配物理内存。malloc的时候赋值一下，缺页异常才会分配物理内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632288562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282914,"user_name":"星辰大海","can_delete":false,"product_type":"c1","uid":2126441,"ip_address":"","ucode":"C11B75F3EF931E","user_header":"https://static001.geekbang.org/account/avatar/00/20/72/69/0a342bfe.jpg","comment_is_top":false,"comment_ctime":1615461429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615461429","product_id":100020901,"comment_content":"[wubozhen01@bm07v ~]$ sh &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -p 21294 -a<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 14: from: command not found<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 15: from: command not found<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 16: from: command not found<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 17: import: command not found<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 18: import: command not found<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 19: import: command not found<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 20: import: command not found<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 21: import: command not found<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 23: syntax error near unexpected token `(&#39;<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak: line 23: `class Allocation(object):&#39;<br><br>安装bcc后执行报错，报错信息如上，请老师看下","like_count":0},{"had_liked":false,"id":281841,"user_name":"geek","can_delete":false,"product_type":"c1","uid":2401422,"ip_address":"","ucode":"FF0845140D72A9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/NyFOEueITjaGLpakMEuWAqVQjo1uDIXlpDdpCxXGfaWiaXzibLQ3WgOFCe8D9FvCmyjsGT7jDsLUbkt8jt2aVs9g/132","comment_is_top":false,"comment_ctime":1614920563,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1614920563","product_id":100020901,"comment_content":"老师，像数组访问越界，但程序没有core文件 这种问题，有相应的工具可以用来排查吗？","like_count":0},{"had_liked":false,"id":259135,"user_name":"Geek_42e1f8","can_delete":false,"product_type":"c1","uid":2292455,"ip_address":"","ucode":"4D8988EC5D1F63","user_header":"","comment_is_top":false,"comment_ctime":1604636386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604636386","product_id":100020901,"comment_content":"老师，你好，我用memleak -p $(pidof test1) -a跟踪显示不到具体的函数名呢。例子很简单：<br>oid mem_leak_fun()<br>{<br>   for(int i=0;i&lt;100;i++)<br>   {<br>       char *p = new char;<br>   }<br><br>}<br><br>int main()<br>{<br>   int a = 0;<br>   sleep(10);<br>   <br>   mem_leak_fun();<br>   sleep(10);<br>   &#47;&#47;while(1);<br>}<br><br>显示如下：<br>\taddr = 12917f0 size = 1<br>\taddr = 1291030 size = 1<br>\t100 bytes in 100 allocations from stack<br>\t\toperator new(unsigned long)+0x1d [libstdc++.so.6.0.19]<br>\t\tmain+0x31 [test1]<br>\t\t__libc_start_main+0xf5 [libc-2.17.so]<br>系统是centos7.8，内核是5.8.5版本，请问是什么原因呢？<br><br>","like_count":0},{"had_liked":false,"id":257959,"user_name":"程序员大天地","can_delete":false,"product_type":"c1","uid":1249001,"ip_address":"","ucode":"7A21F15FEE2D5B","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/e9/98b6ea61.jpg","comment_is_top":false,"comment_ctime":1604223774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604223774","product_id":100020901,"comment_content":"memleak 工具找不出golang代码的内存泄漏吗？进程物理内存一直在上涨，没有下降，但是工具显示没有内存泄漏","like_count":0},{"had_liked":false,"id":257403,"user_name":"Geek_f702be","can_delete":false,"product_type":"c1","uid":1143067,"ip_address":"","ucode":"8E3B5F393C4266","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epumnXjMLYzHkGFhAraIiaAMXpotuUR9PCexBWl25tRLFAvpzs03Hfse4Y1lyeWuryz6z80Fd8AXiaw/132","comment_is_top":false,"comment_ctime":1603959157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603959157","product_id":100020901,"comment_content":"打卡<br>动态内存的分配和回收：<br>1、没正确回收分配后的内存，导致了泄漏。<br>（1）堆内存由应用程序自己来分配和管理，如果应用程序没有正确释放堆内存，就会造成内存泄漏<br>（2）内存映射段，包括动态链接库和共享内存，其中共享内存由程序动态分配和管理。如果程序在分配后忘了回收，就会导致跟堆内存类似的泄漏问题。<br>2、访问的是已分配内存边界外的地址，导致程序异常退出，等等。","like_count":0},{"had_liked":false,"id":255261,"user_name":"14155084066","can_delete":false,"product_type":"c1","uid":2245375,"ip_address":"","ucode":"EF5BFE8773578C","user_header":"https://static001.geekbang.org/account/avatar/00/22/42/ff/2a067d5d.jpg","comment_is_top":false,"comment_ctime":1603291575,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1603291575","product_id":100020901,"comment_content":"我遇到的最奇葩的一个oom问题是c++ stl的内存分配行为。低版本编译的c++程序分配的内存不会被全部释放，反而会越来越大。这也不是内存泄露，是故意不释放，起缓存作用。换高版本g++编译，程序用到的vector就会被立即释放。","like_count":0,"discussions":[{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555887,"discussion_content":"stl 分配的内存不会被释放，这种可以采用swap方式来避免","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647092785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254957,"user_name":"伟啊伟","can_delete":false,"product_type":"c1","uid":1876981,"ip_address":"","ucode":"32F9F89668CF4E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a3/f5/458d277b.jpg","comment_is_top":false,"comment_ctime":1603241568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603241568","product_id":100020901,"comment_content":"看定位有个问题。生产环境很多都受限。有没有原生可用的工具呢？最好是 centos 环境下的。毕竟生产环境不可改变","like_count":0},{"had_liked":false,"id":253490,"user_name":"程序员大天地","can_delete":false,"product_type":"c1","uid":1249001,"ip_address":"","ucode":"7A21F15FEE2D5B","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/e9/98b6ea61.jpg","comment_is_top":false,"comment_ctime":1602752607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602752607","product_id":100020901,"comment_content":"老师你好，最近遇到一个问题，Linux 进程VIRT&#47;RES一直在升高，但是用memleak工具分析是没有泄漏，pmap工具看有很多dirty项，还有下一步的分析方向吗？","like_count":0},{"had_liked":false,"id":246298,"user_name":"west","can_delete":false,"product_type":"c1","uid":2080899,"ip_address":"","ucode":"B42BF349E55900","user_header":"https://static001.geekbang.org/account/avatar/00/1f/c0/83/ca1c44d5.jpg","comment_is_top":false,"comment_ctime":1599270189,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599270189","product_id":100020901,"comment_content":"memleak 理解是不是只能看到内存分配的调用栈，并不能检测内存泄漏了？<br>比如如下：<br><br>  for(int i=0; i &lt; 100; ++i){<br>    ptrarr[i] = (int*)malloc(4);<br>    ++i;<br>    sleep(1);<br>  }<br>  for(int i=0; i &lt; 100; ++i){<br>    if (ptrarr[i] != NULL) {<br>      free(ptrarr[i]);<br>    }<br>  }<br>使用memleak的时，会输出<br>addr = 7fd6f8000980 size = 4<br>        addr = 7fd6f80009a0 size = 4<br>        addr = 7fd6f8000960 size = 4<br>        addr = 7fd6f8000940 size = 4<br>        16 bytes in 4 allocations from stack<br>                child2(void*)+0x1f [app]<br>                start_thread+0xc5 [libpthread-2.17.so]<br><br>但是程序并没有内存泄露了呀","like_count":0,"discussions":[{"author":{"id":2616028,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ea/dc/aa699264.jpg","nickname":"宏典","note":"","ucode":"63953F36596C28","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395348,"discussion_content":"memleak有个参数，-o参数：\nTo avoid false positives, allocations younger than a certain age (500ms by\ndefault) are not printed. To change this threshold, use the -o switch.\n\n默认500ms。分配超过500ms未释放的会打印处理。 你可以调试-o参数试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632289054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242376,"user_name":"per","can_delete":false,"product_type":"c1","uid":2112515,"ip_address":"","ucode":"DC156A3C7AA1BD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLpuXh4ibibw0eAZyW8Yqd51ictib0fLS2rd69ictFVibBBmEDuaYDuoJIT6Glh045BthwJL3S6gDQkQicwA/132","comment_is_top":false,"comment_ctime":1597705281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597705281","product_id":100020901,"comment_content":"老师，memleak工具如何安装","like_count":0},{"had_liked":false,"id":239057,"user_name":"茶博士","can_delete":false,"product_type":"c1","uid":1543320,"ip_address":"","ucode":"2E49324AC13DA9","user_header":"https://static001.geekbang.org/account/avatar/00/17/8c/98/ddd4513c.jpg","comment_is_top":false,"comment_ctime":1596424012,"is_pvip":false,"replies":[{"id":"88793","content":"是不是内核版本比较老导致的？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1596978070,"ip_address":"","comment_id":239057,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596424012","product_id":100020901,"comment_content":"遇到如下问题，请老师帮忙解答<br>[root@localhost ~]# &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a -p $(pidof app)<br>Attaching to pid 25180, Ctrl+C to quit.<br>perf_event_open(&#47;sys&#47;kernel&#47;debug&#47;tracing&#47;events&#47;uprobes&#47;p__lib_x86_64_linux_gnu_libc_2_27_so_0x97070_25180_bcc_32282&#47;id): Invalid argument<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 441, in &lt;module&gt;<br>    attach_probes(&quot;malloc&quot;)<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 431, in attach_probes<br>    pid=pid)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;site-packages&#47;bcc&#47;__init__.py&quot;, line 1015, in attach_uprobe<br>    raise Exception(&quot;Failed to attach BPF to uprobe&quot;)<br>Exception: Failed to attach BPF to uprobe","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502960,"discussion_content":"是不是内核版本比较老导致的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596978070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238280,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1596110158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596110158","product_id":100020901,"comment_content":"使用栈内存","like_count":0},{"had_liked":false,"id":238236,"user_name":"Dayu","can_delete":false,"product_type":"c1","uid":1132370,"ip_address":"","ucode":"6926EDC6FB1A90","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/52/1a3201c9.jpg","comment_is_top":false,"comment_ctime":1596099740,"is_pvip":false,"replies":[{"id":"88784","content":"是不是内核版本太老了？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1596977298,"ip_address":"","comment_id":238236,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1596099740","product_id":100020901,"comment_content":"could not open bpf map: stack_traces, error: Invalid argument<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 411, in &lt;module&gt;<br>    bpf = BPF(text=bpf_source)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 325, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text<br>老师啊，我这个是怎么回事啊，在网上也没找都方法","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502680,"discussion_content":"是不是内核版本太老了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596977298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314902,"avatar":"https://static001.geekbang.org/account/avatar/00/14/10/56/c6487f8e.jpg","nickname":"Rachel","note":"","ucode":"826A0DC0794765","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368711,"discussion_content":"我也遇到了同样的问题，你的问题解决了吗\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618813517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319529,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","nickname":"Don Wang","note":"","ucode":"1853365FA279F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367531,"discussion_content":"请问问题解决了吗?\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618388583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236107,"user_name":"生活不如诗","can_delete":false,"product_type":"c1","uid":1139515,"ip_address":"","ucode":"FD48EABEEC52B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/3b/c5cd68ab.jpg","comment_is_top":false,"comment_ctime":1595318411,"is_pvip":false,"replies":[{"id":"87246","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1595342556,"ip_address":"","comment_id":236107,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595318411","product_id":100020901,"comment_content":"用户空间内存包括多个内存段：<br>\t1. 只读段；只读段，包括程序的代码和常量，由于是只读的，不会再去分配新的内存，所以也不会产生内存泄漏。<br>\t2. 堆：堆内存由应用程序自己来分配和管理。除非程序退出，这些堆内存并不会被系统自动释放，而是需要应用程序明确调用库函数 free() 来释放它们。如果应用程序没有正确释放堆内存，就会造成内存泄漏。<br>\t3. 栈：栈内存由系统自动分配和管理。一旦程序运行超出了这个局部变量的作用域，栈内存就会被系统自动回收，所以不会产生内存泄漏的问题<br>\t4. 文件映射：包括动态链接库和共享内存，其中共享内存由程序动态分配和管理。所以，如果程序在分配后忘了回收，就会导致跟堆内存类似的泄漏问题。<br>\t5. 数据段：数据段，包括全局变量和静态变量，这些变量在定义时就已经确定了大小，所以也不会产生内存泄漏。<br>根据以上内容，能够引起内存溢出的包括堆内存，文件映射区<br><br>分析内存持续增长的思路：<br>1. 通过vmstat观察内存使用情况，如果内存使用率一直增高，甚至导致系统内存不足了；<br>2. 通过top抓取内存使用率最高的应用，分析RES情况；<br>3. 通过memleak -a -p {pid}抓取进程内存使用情况，分析导致内存溢出的函数；<br>4. 分析源代码，找到并修复问题；","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501946,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595342556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235275,"user_name":"Geek_9815f1","can_delete":false,"product_type":"c1","uid":2068424,"ip_address":"","ucode":"34EE8566A53F10","user_header":"","comment_is_top":false,"comment_ctime":1594957276,"is_pvip":false,"replies":[{"id":"87273","content":"可以，不过它也有一些限制：<br>1）要求内核版本比较新。<br>2）功能特性比较少，一般还需要二次开发，增加自己需要的功能。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1595344526,"ip_address":"","comment_id":235275,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594957276","product_id":100020901,"comment_content":"老师， 这memleak 适合在大型互联网的应用程序用吗？ 我们一般都是用gperftools 工具的","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501671,"discussion_content":"可以，不过它也有一些限制：\n1）要求内核版本比较新。\n2）功能特性比较少，一般还需要二次开发，增加自己需要的功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595344526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226493,"user_name":"charmingz","can_delete":false,"product_type":"c1","uid":1032248,"ip_address":"","ucode":"ECE330B93ABCB0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/38/e2139556.jpg","comment_is_top":false,"comment_ctime":1592121715,"is_pvip":false,"replies":[{"id":"86953","content":"可能是内核版本不满足要求，你的内核是什么版本？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1594995553,"ip_address":"","comment_id":226493,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1592121715","product_id":100020901,"comment_content":"尝试了各种方法，memleak还是无法正常跑起来，一直报错：<br>could not open bpf map: events, error: Operation not permitted<br>Traceback (most recent call last):<br>  File &quot;.&#47;opensnoop&quot;, line 180, in &lt;module&gt;<br>    b = BPF(text=bpf_text)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 325, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498262,"discussion_content":"可能是内核版本不满足要求，你的内核是什么版本？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594995553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319529,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","nickname":"Don Wang","note":"","ucode":"1853365FA279F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367794,"discussion_content":"内核是4.4.0-116-generic.还是有这个问题\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618470948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209483,"user_name":"liebzz","can_delete":false,"product_type":"c1","uid":1434970,"ip_address":"","ucode":"0378507E7F50F4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZJjl8bEt5zdqufZ304Ra0QlibJv9cljd3ek9x8nWvOoVOaRJPKiayY9TmUDxa9wGeq7KibX7H9P1iaHjib01pJpNGog/132","comment_is_top":false,"comment_ctime":1587557771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587557771","product_id":100020901,"comment_content":"老师：<br>我有个关于OOM的问题，比如我一台服务器部署了MySQL数据库，内存使用情况如下，buff&#47;cache占用了大量内存，available显示还有102G，有可能发生OOM吗？<br>                   total        used        free      shared  buff&#47;cache   available<br>Mem:           125G         18G        512M        4.2G        106G        102G<br>Swap:          511M        186M        325M","like_count":0},{"had_liked":false,"id":207225,"user_name":"痞子胥","can_delete":false,"product_type":"c1","uid":1617678,"ip_address":"","ucode":"3701A981FFF083","user_header":"","comment_is_top":false,"comment_ctime":1587028931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587028931","product_id":100020901,"comment_content":"老师，你这个例子是已经知道哪个进程有内存泄露了，请问如何找出哪个进程呢？<br><br>作者回复: 去掉进程号选项<br><br>去掉进程号 直接显示连接的都是内核的东西了 还是查不到哪个进程导致内存泄露啊","like_count":0},{"had_liked":false,"id":193830,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1584971384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584971384","product_id":100020901,"comment_content":"我觉得可以指定fibonacci（）第三个参数返回v，这样在child里面分配与free内容不容易忘记，是不是这样呢？","like_count":0},{"had_liked":false,"id":191861,"user_name":"宋胖胖","can_delete":false,"product_type":"c1","uid":1857496,"ip_address":"","ucode":"AA828F49CCEABA","user_header":"https://static001.geekbang.org/account/avatar/00/1c/57/d8/e9c8b923.jpg","comment_is_top":false,"comment_ctime":1584800843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584800843","product_id":100020901,"comment_content":"如何安装bcc软件包","like_count":0},{"had_liked":false,"id":189236,"user_name":"江湖夜雨","can_delete":false,"product_type":"c1","uid":1204399,"ip_address":"","ucode":"CC05C505FE1072","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLG44I6sZyAQWjJEibZhJ94Kdel6ljHialNWtk7p71mLUdNiaTnYCcg3lKy8mIyibALRtf75DgjMf2yQw/132","comment_is_top":false,"comment_ctime":1584492177,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584492177","product_id":100020901,"comment_content":"老师咨询个问题，我们一个测试环境32g内存，free -m查看  cached占了24g，free剩了200m, 如何定位是哪个进程导致的cached如此之大","like_count":0,"discussions":[{"author":{"id":1318941,"avatar":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","nickname":"罗辑思维","note":"","ucode":"D257A06EDE928E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220665,"discussion_content":"专栏提过没办法定位到具体使用buffer/cached的进程。TOP命令再按下大写M按照内存排序，参考下RES指标。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585913993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188321,"user_name":"刘友淙","can_delete":false,"product_type":"c1","uid":1620058,"ip_address":"","ucode":"97F3A69A308313","user_header":"","comment_is_top":false,"comment_ctime":1584339923,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584339923","product_id":100020901,"comment_content":"D8 打卡","like_count":0},{"had_liked":false,"id":183078,"user_name":"飘云","can_delete":false,"product_type":"c1","uid":1446494,"ip_address":"","ucode":"C6FE0310D6853C","user_header":"https://static001.geekbang.org/account/avatar/00/16/12/5e/77b67a85.jpg","comment_is_top":false,"comment_ctime":1582949111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582949111","product_id":100020901,"comment_content":"除了工具，老师有没有其他分析内存泄露的思路呢？","like_count":0},{"had_liked":false,"id":178118,"user_name":"tangerrine","can_delete":false,"product_type":"c1","uid":1218944,"ip_address":"","ucode":"CAAD6274C5570C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VQniaFZTiagBQPZpH6sZY0pfBWoqAdyibCcoRAVAukSHA76MicMJIsXrCjLYL6Orv1sxHIsBw9ViaN4yibE810HUT62A/132","comment_is_top":false,"comment_ctime":1581589978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581589978","product_id":100020901,"comment_content":"我看很多同学碰到这个问题，比较普遍，麻烦老师解答一下：<br>系统是ubuntu 18.04，内核版本5.3.0-28，内核已开启CONFIG_UPROBE_EVENTS。<br>运行feisky&#47;app:mem-leak以后，memleak -a -p $(pidof app)看不到内存泄露的情况<br>但用memleak -a 能看到很多kernel的内存分配","like_count":0},{"had_liked":false,"id":172686,"user_name":"。。。","can_delete":false,"product_type":"c1","uid":1803113,"ip_address":"","ucode":"F97D05D81A5803","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/69/a9201594.jpg","comment_is_top":false,"comment_ctime":1579251765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579251765","product_id":100020901,"comment_content":"老师写的太好了","like_count":0},{"had_liked":false,"id":157177,"user_name":"ouyangsheng","can_delete":false,"product_type":"c1","uid":1000623,"ip_address":"","ucode":"4D16DA1493453B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/af/79cb724c.jpg","comment_is_top":false,"comment_ctime":1575073790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575073790","product_id":100020901,"comment_content":"堆中的内存哪些情况没有free到？1有些执行路径没考虑到，2第三方库函数隐含了malloc，3多线程路径。可以用vmstat，以及bcc中memleak检测。","like_count":0},{"had_liked":false,"id":148468,"user_name":"黄展志","can_delete":false,"product_type":"c1","uid":1356083,"ip_address":"","ucode":"EBA342CD89072D","user_header":"https://static001.geekbang.org/account/avatar/00/14/b1/33/8993eae0.jpg","comment_is_top":false,"comment_ctime":1573012431,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573012431","product_id":100020901,"comment_content":"[root@app180-110 tools]# memleak -a -p `pidof app`<br>Attaching to pid 24550, Ctrl+C to quit.<br>perf_event_open(&#47;sys&#47;kernel&#47;debug&#47;tracing&#47;events&#47;uprobes&#47;p__lib_x86_64_linux_gnu_libc_2_27_so_0x97070_24550_bcc_24813&#47;id): Invalid argument<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 424, in &lt;module&gt;<br>    attach_probes(&quot;malloc&quot;)<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 414, in attach_probes<br>    pid=pid)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;site-packages&#47;bcc&#47;__init__.py&quot;, line 992, in attach_uprobe<br>    raise Exception(&quot;Failed to attach BPF to uprobe&quot;)<br>Exception: Failed to attach BPF to uprobe<br>[root@app180-110 tools]# cat &#47;etc&#47;redhat-release <br>CentOS Linux release 7.6.1810 (Core) <br>[root@app180-110 tools]# uname -a<br>Linux app180-110 3.10.0-957.12.2.el7.x86_64 #1 SMP Tue May 14 21:24:32 UTC 2019 x86_64 x86_64 x86_64 GNU&#47;Linux<br><br><br>倪老师，我的环境是这个，运行memleak出错了，在网上也找不到答案，麻烦帮看看","like_count":0,"discussions":[{"author":{"id":1356083,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/33/8993eae0.jpg","nickname":"黄展志","note":"","ucode":"EBA342CD89072D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45346,"discussion_content":"一定要内核中开启 CONFIG_UPROBE_EVENTS=y ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573026123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133252,"user_name":"scorpiozj","can_delete":false,"product_type":"c1","uid":1031677,"ip_address":"","ucode":"C66EA76809F9BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/fd/3f5d5db5.jpg","comment_is_top":false,"comment_ctime":1568465018,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568465018","product_id":100020901,"comment_content":"咨询下，memleak运行后出错，提示如下：<br><br># &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a<br>Attaching to kernel allocators, Ctrl+C to quit.<br>[20:40:08] Top 10 stacks with outstanding allocations:<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 538, in &lt;module&gt;<br>    print_outstanding()<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 482, in print_outstanding<br>    show_module=True, show_offset=True))<br>  File &quot;&#47;usr&#47;lib&#47;python3.4&#47;site-packages&#47;bcc&#47;__init__.py&quot;, line 1251, in sym<br>    offset = b&quot;+0x%x&quot; % offset if show_offset and name is not None else b&quot;&quot;<br>TypeError: unsupported operand type(s) for %: &#39;bytes&#39; and &#39;int&#39;<br><br>google下没有找到思路，系统信息：<br>cat &#47;proc&#47;version<br>Linux version 5.2.11-1.el7.elrepo.x86_64 (mockbuild@Build64R7) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC)) #1 SMP Thu Aug 29 08:10:52 EDT 2019","like_count":0},{"had_liked":false,"id":126391,"user_name":"南宫轩诺","can_delete":false,"product_type":"c1","uid":1364939,"ip_address":"","ucode":"4A62D2895DA857","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJVwuRvAuze6NsLGr4qwVa7IJcib3YdQVqlicuEicP8FmGR2qo8Wia1BXtnnbVeDxH41EkLmOmNiac5nQQ/132","comment_is_top":false,"comment_ctime":1566379685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566379685","product_id":100020901,"comment_content":"倪老师，有几个问题想请教一下：1）系统内存不足，发生oom-kill的判断标准是什么？是free命令看到的可用内存不足吗？如果一个进程top看到的RES内存很大，但是free看到的可用内存还有很多，该进程应该不会被kill吧     2）挂载网络磁盘的io负载状态应该如何查看呢，iostat看不到   3）挂载网络盘是否也存在缓存呢？","like_count":0},{"had_liked":false,"id":121848,"user_name":"afterdream","can_delete":false,"product_type":"c1","uid":1619795,"ip_address":"","ucode":"701AD039459191","user_header":"https://static001.geekbang.org/account/avatar/00/18/b7/53/823f647c.jpg","comment_is_top":false,"comment_ctime":1565234008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565234008","product_id":100020901,"comment_content":"【课后题】<br>我一直很少使用malloc，我一般都是指针+数组，也就是说定义一个1024大小的数组，然后定义一个指向该数组的指针，如果遇到循环，我就会通过调整指针指向，防止指针非法。","like_count":0},{"had_liked":false,"id":120623,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1564963302,"is_pvip":true,"replies":[{"id":"44392","content":"kernel-devel安装了吗？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1565014654,"ip_address":"","comment_id":120623,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564963302","product_id":100020901,"comment_content":"今天又重新安装bcc试了一次，还是那个问题<br>[root@VM_0_17_centos tools]# .&#47;cachetop<br>Traceback (most recent call last):<br>  File &quot;.&#47;cachetop&quot;, line 263, in &lt;module&gt;<br>    curses.wrapper(handle_loop, args)<br>  File &quot;&#47;usr&#47;lib64&#47;python2.7&#47;curses&#47;wrapper.py&quot;, line 43, in wrapper<br>    return func(stdscr, *args, **kwds)<br>  File &quot;.&#47;cachetop&quot;, line 171, in handle_loop<br>    b = BPF(text=bpf_text)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;site-packages&#47;bcc&#47;__init__.py&quot;, line 318, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text<br>版本内核：<br>5.2.5-1.el7.elrepo.x86_64","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461408,"discussion_content":"kernel-devel安装了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565014654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618206,"avatar":"","nickname":"yayuyo","note":"","ucode":"1A4BE4F0DE675B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4947,"discussion_content":"不知道原po是否已经解决，我个人也遇到这问题，系统使用ubuntu 14.04 LTS，kernel更新到4.8.0就可以使用。可以嘗試以下指令：\n$ sudo apt-get install linux-image-4.8.0-46-generic \n$ sudo update-initramfs -u -k all\n$ sudo reboot","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565856361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120467,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1564908299,"is_pvip":true,"replies":[{"id":"44395","content":"试试安装kernel-devel","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1565014692,"ip_address":"","comment_id":120467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564908299","product_id":100020901,"comment_content":"还是bcc得问题，装上运行就报错<br>[root@VM_0_17_centos tools]# .&#47;cachetop<br>Traceback (most recent call last):<br>  File &quot;.&#47;cachetop&quot;, line 263, in &lt;module&gt;<br>    curses.wrapper(handle_loop, args)<br>  File &quot;&#47;usr&#47;lib64&#47;python2.7&#47;curses&#47;wrapper.py&quot;, line 43, in wrapper<br>    return func(stdscr, *args, **kwds)<br>  File &quot;.&#47;cachetop&quot;, line 171, in handle_loop<br>    b = BPF(text=bpf_text)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;site-packages&#47;bcc&#47;__init__.py&quot;, line 318, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461346,"discussion_content":"试试安装kernel-devel","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565014692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120460,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1564907178,"is_pvip":true,"replies":[{"id":"44409","content":"检查下安装的 kernel-devel 跟运行内核的版本是一致的吗？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1565016382,"ip_address":"","comment_id":120460,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1564907178","product_id":100020901,"comment_content":"每次都要报这个错，无论yum安装还是编译安装都要报这个错<br>root@VM_0_17_centos tools]# .&#47;cachestat<br>In file included from &lt;built-in&gt;:3:<br>In file included from &#47;virtual&#47;include&#47;bcc&#47;helpers.h:23:<br>In file included from &#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;include&#47;linux&#47;log2.h:12:<br>In file included from &#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;include&#47;linux&#47;bitops.h:19:<br>&#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;bitops.h:209:9: error: &#39;asm goto&#39; constructs are not supported yet<br>        return GEN_BINARY_RMWcc(LOCK_PREFIX __ASM_SIZE(bts), *addr, c, &quot;Ir&quot;, nr);<br>               ^<br>&#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;rmwcc.h:60:32: note: expanded from macro &#39;GEN_BINARY_RMWcc&#39;<br>#define GEN_BINARY_RMWcc(X...) RMWcc_CONCAT(GEN_BINARY_RMWcc_, RMWcc_ARGS(X))(X)<br>                               ^<br>&#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;rmwcc.h:10:28: note: expanded from macro &#39;RMWcc_CONCAT&#39;<br>#define RMWcc_CONCAT(a, b) __RMWcc_CONCAT(a, b)<br>                           ^<br>&#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;rmwcc.h:9:30: note: expanded from macro &#39;__RMWcc_CONCAT&#39;<br>#define __RMWcc_CONCAT(a, b) a ## b<br>                             ^<br>note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)<br>&#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;rmwcc.h:54:2: note: expanded from macro &#39;GEN_BINARY_RMWcc_6&#39;<br>        __GEN_RMWcc(op &quot; %[val], &quot; arg0, var, cc,                       \\<br>        ^<br>&#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;arch&#47;x86&#47;include&#47;asm&#47;rmwcc.h:21:2: note: expanded from macro &#39;__GEN_RMWcc&#39;<br>        asm_volatile_goto (fullop &quot;; j&quot; #cc &quot; %l[cc_label]&quot;             \\<br>        ^<br>&#47;lib&#47;modules&#47;5.2.5-1.el7.elrepo.x86_64&#47;build&#47;include&#47;linux&#47;compiler_types.h:187:37: note: expanded from macro &#39;asm_volatile_goto&#39;<br>#define asm_volatile_goto(x...) asm goto(x)<br>                                    ^<br>In file included from &lt;built-in&gt;:3:","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461343,"discussion_content":"检查下安装的 kernel-devel 跟运行内核的版本是一致的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565016382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1611745,"avatar":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","nickname":"乖，摸摸头","note":"","ucode":"BD92741A11D3CD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3991,"discussion_content":"但是我没找到 kernl-devel 5.2.5 这个版本的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565050071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1611745,"avatar":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","nickname":"乖，摸摸头","note":"","ucode":"BD92741A11D3CD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3990,"discussion_content":"不是，现在是 uname -r\n5.2.5-1.el7.elrepo.x86_64","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565050019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119931,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1564733060,"is_pvip":false,"replies":[{"id":"44401","content":"裸机和虚拟机都适用的，也有不少篇幅都提到了容器的处理方法（毕竟我们的很多案例都是基于容器的）","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1565015240,"ip_address":"","comment_id":119931,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564733060","product_id":100020901,"comment_content":"老师,看了您好多片文章,您的对问题的处理方法都是基于裸机的,现在公司好多都是基于容器,基于虚拟环境的,好多命令和工具不是那么起作用,能不能这方面多写一些","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461136,"discussion_content":"裸机和虚拟机都适用的，也有不少篇幅都提到了容器的处理方法（毕竟我们的很多案例都是基于容器的）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565015240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117038,"user_name":"刺猬","can_delete":false,"product_type":"c1","uid":1201479,"ip_address":"","ucode":"79685DAB7020C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/47/c412f973.jpg","comment_is_top":false,"comment_ctime":1563958320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563958320","product_id":100020901,"comment_content":"老师，我尝试了app-fix的镜像，内存泄漏的问题没有了，但是貌似里面的app.c没有变，没有添加free函数。","like_count":0},{"had_liked":false,"id":107859,"user_name":"Romantic","can_delete":false,"product_type":"c1","uid":1349815,"ip_address":"","ucode":"DCA26BBE4B4489","user_header":"https://static001.geekbang.org/account/avatar/00/14/98/b7/c8a179c2.jpg","comment_is_top":false,"comment_ctime":1561624903,"is_pvip":false,"replies":[{"id":"39097","content":"文中简单提了一下，可以使用top或者top找出内存增长的进程，memleak不加进程号也可以","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1561647909,"ip_address":"","comment_id":107859,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1561624903","product_id":100020901,"comment_content":"执行完vmstat，介绍完memleak这个命令，直接就分析了app(&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -p $(pidof app),老师并没有讲解如何分析定位是app导致的内存泄漏，这个地方很蒙","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455710,"discussion_content":"文中简单提了一下，可以使用top或者top找出内存增长的进程，memleak不加进程号也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561647909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2348507,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d5/db/f59b288b.jpg","nickname":"面对疾风吧","note":"","ucode":"FB87423BB7AEE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331785,"discussion_content":"top 然后大写M可以按照内存来排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606976842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107051,"user_name":"Geek_638ba5","can_delete":false,"product_type":"c1","uid":1579914,"ip_address":"","ucode":"B395689CA7CF3C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJlN0AUA3CiaZzorL5Jq1oWPqxOYJwBxnHETFQ7DQFwA7EpQS5tS6mCHribW0rnsyFia88Z0eyqqNYdA/132","comment_is_top":false,"comment_ctime":1561448946,"is_pvip":true,"replies":[{"id":"40453","content":"一般来说，应用程序可以提供一个metrics接口，方便在外部实时查询它的内存分配情况","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1562511844,"ip_address":"","comment_id":107051,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1561448946","product_id":100020901,"comment_content":"老师 有个问题讨论下<br>我们的环境跑了一个http的缓存进程，当大量http请求过来时候，缓存进程的内存一直在涨，即使缓存过期了也没有明显降下去。 对于这种守护进程的情况，如何判断内存增长究竟是由于内存泄漏还是内存碎片还是其他原因？(此案例中valgrind不可用，因为这个进程是fork()之后调用exec()产生的，而valgrind不支持此种情况多进程的追踪)","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455341,"discussion_content":"一般来说，应用程序可以提供一个metrics接口，方便在外部实时查询它的内存分配情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562511844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2055993,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5f/39/8d2c61d3.jpg","nickname":"Kiddy","note":"","ucode":"D07AAEE69BE504","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290045,"discussion_content":"Malloc会导致内存碎片问题，从而引起哪怕软件释放内存，但是操作系统无法回收。这种情况可以通过tcmalloc解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594308982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104000,"user_name":"croco","can_delete":false,"product_type":"c1","uid":1174302,"ip_address":"","ucode":"F6EA7616724881","user_header":"https://static001.geekbang.org/account/avatar/00/11/eb/1e/cbd63297.jpg","comment_is_top":false,"comment_ctime":1560586359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560586359","product_id":100020901,"comment_content":"老师好：memleak 无法运行，无法查看帮助，我是用yum install gcc gcc-tools安装的<br>[root@VM_0_17_centos ~]# memleak <br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 14, in &lt;module&gt;<br>    from bcc import BPF<br>ModuleNotFoundError: No module named &#39;bcc&#39;<br>[root@VM_0_17_centos ~]# <br>[root@VM_0_17_centos ~]# uname -a<br>Linux VM_0_17_centos 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU&#47;Linux<br>","like_count":0},{"had_liked":false,"id":102229,"user_name":"💖李京潼💖","can_delete":false,"product_type":"c1","uid":1284775,"ip_address":"","ucode":"8337BC784D9674","user_header":"https://static001.geekbang.org/account/avatar/00/13/9a/a7/51cf1a9e.jpg","comment_is_top":false,"comment_ctime":1560165046,"is_pvip":false,"replies":[{"id":"37083","content":"一般是缺少调试信息导致的。可以看看是不是应用程序把调试信息优化掉了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1560259163,"ip_address":"","comment_id":102229,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560165046","product_id":100020901,"comment_content":"老师你好，最近用您本节课提到的memleak查了我们项目中的内存泄漏的情况，服务是直接跑在ubuntu18.04中的，没有使用docker，但其中还是有一些【unknown】，想请教一下这些unknown该如何去分析，其他的就很明显是动态库中的malloc导致的。谢谢老师，日志如下：<br>        62976 bytes in 8 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]<br>                [unknown]<br>                [unknown]<br>        62976 bytes in 8 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]<br>                [unknown]<br>                [unknown]<br>        62976 bytes in 8 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]<br>                [unknown]<br>                [unknown]<br>        62976 bytes in 8 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]<br>                [unknown]<br>                [unknown]<br>        62976 bytes in 8 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]<br>                [unknown]<br>                [unknown]<br>        62976 bytes in 8 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]<br>                [unknown]<br>                [unknown]<br>        62976 bytes in 8 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]<br>                [unknown]<br>                [unknown]<br>        62976 bytes in 8 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]<br>                [unknown]<br>                [unknown]<br>        670923 bytes in 24 allocations from stack<br>                av_buffer_realloc+0x160 [libqcap.x64.164.so]<br>        3284580 bytes in 633 allocations from stack<br>                av_malloc+0x60 [libqcap.x64.164.so]","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453300,"discussion_content":"一般是缺少调试信息导致的。可以看看是不是应用程序把调试信息优化掉了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560259163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91513,"user_name":"小贝_No_7","can_delete":false,"product_type":"c1","uid":1063224,"ip_address":"","ucode":"84C39D64EF04C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/38/4c962666.jpg","comment_is_top":false,"comment_ctime":1557046342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557046342","product_id":100020901,"comment_content":"memleak -a -p 4493<br>Attaching to pid 4493, Ctrl+C to quit.<br>[16:38:27] Top 10 stacks with outstanding allocations:<br>[16:38:32] Top 10 stacks with outstanding allocations:<br>[16:38:37] Top 10 stacks with outstanding allocations:<br><br>好像有人问过这个问题了。我这边没有输出。但是如果不指定-p以及进程号, 还是能监控到其他的。问题就在于指定进程就不行。对了我的环境也是ubuntu18.04. ","like_count":0},{"had_liked":false,"id":91034,"user_name":"枫林居士","can_delete":false,"product_type":"c1","uid":1134586,"ip_address":"","ucode":"1BDC77B9F7FC8C","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/fa/921a2a38.jpg","comment_is_top":false,"comment_ctime":1556810975,"is_pvip":false,"replies":[{"id":"33122","content":"什么版本的内核？注意 bcc 需要新版本的内核才可以使用(4.1)","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1557325737,"ip_address":"","comment_id":91034,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1556810975","product_id":100020901,"comment_content":"Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 401, in &lt;module&gt;<br>    bpf = BPF(text=bpf_source)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;site-packages&#47;bcc&#47;__init__.py&quot;, line 318, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text<br>报的是这个错，老师请问下这个是什么原因导致","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448771,"discussion_content":"什么版本的内核？注意 bcc 需要新版本的内核才可以使用(4.1)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557325737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319529,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","nickname":"Don Wang","note":"","ucode":"1853365FA279F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367805,"discussion_content":"https://github.com/iovisor/bcc/blob/master/docs/kernel-versions.md\n\n上面链接里面有如下内容:\nPre-alloc map memory by default \t4.6 \t6c9059817432\n\n应该是说明  4.6内核版本才支持这个工具的使用.\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618471928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90997,"user_name":"zhang","can_delete":false,"product_type":"c1","uid":1517047,"ip_address":"","ucode":"650C292030057B","user_header":"https://static001.geekbang.org/account/avatar/00/17/25/f7/4cc60573.jpg","comment_is_top":false,"comment_ctime":1556778895,"is_pvip":false,"replies":[{"id":"33124","content":"一般是用非 daemon 方式启动来调试","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1557326034,"ip_address":"","comment_id":90997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556778895","product_id":100020901,"comment_content":"打卡第4天。<br><br>老师，请问valgrind如何调试永不退出的进程呢？  就比如nginx的worker进程，valgrind需要进程中指，才回进行统计吧。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448756,"discussion_content":"一般是用非 daemon 方式启动来调试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557326034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88736,"user_name":"不系之舟","can_delete":false,"product_type":"c1","uid":1005689,"ip_address":"","ucode":"EC10937D9C031A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/79/e7bbd28e.jpg","comment_is_top":false,"comment_ctime":1555988027,"is_pvip":true,"replies":[{"id":"31957","content":"升级内核就有了，4.11以后","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1556113713,"ip_address":"","comment_id":88736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555988027","product_id":100020901,"comment_content":"遇到同样的报错：Exception: Failed to attach BPF to uprobe<br>debian9 下只有CONFIG_UPROBE_EVENT，而没有CONFIG_UPROBE_EVENTS<br>cat &#47;boot&#47;config-4.9.0-3-amd64 | grep UPROBE<br>CONFIG_ARCH_SUPPORTS_UPROBES=y<br>CONFIG_UPROBES=y<br>CONFIG_UPROBE_EVENT=y","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447885,"discussion_content":"升级内核就有了，4.11以后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556113713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87721,"user_name":"华子91","can_delete":false,"product_type":"c1","uid":1000884,"ip_address":"","ucode":"68E792FB90CDDA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/b4/afa76165.jpg","comment_is_top":false,"comment_ctime":1555670341,"is_pvip":false,"replies":[{"id":"31672","content":"memleak 是检测内存泄漏的堆栈，fibonacci是栈顶的函数","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1555856014,"ip_address":"","comment_id":87721,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555670341","product_id":100020901,"comment_content":"老师，”这一次，我们终于看到了内存分配的调用栈，原来是 fibona...“这里如何看到是这函数未释放呢？输出可否解释下呢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447577,"discussion_content":"memleak 是检测内存泄漏的堆栈，fibonacci是栈顶的函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555856014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78691,"user_name":"woniu","can_delete":false,"product_type":"c1","uid":1427802,"ip_address":"","ucode":"95FB0A660D759D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIe7XMR0W1B8wWNm18KvfMyLUaMLdsD8bcvfhjpN3tRCuBFTE1Mr3ibdNq54t9QgZe4Hv8WC0Ikpaw/132","comment_is_top":false,"comment_ctime":1553218928,"is_pvip":false,"replies":[{"id":"29064","content":"syscall不一定回导致用户态CPU升高。建议使用perf分析下热点函数","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553527455,"ip_address":"","comment_id":78691,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1553218928","product_id":100020901,"comment_content":"最近在线上遇到用户态cpu很高的问题。apache+php的环境，用strace 追踪发现80%以上的系统syscall都是brk,但是系统的内存占用很低并且很平稳。怀疑是php代码造成的内存泄漏，但是apache回收了内存。请老师指点一下！","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444192,"discussion_content":"syscall不一定回导致用户态CPU升高。建议使用perf分析下热点函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553527455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76158,"user_name":"于競","can_delete":false,"product_type":"c1","uid":1219827,"ip_address":"","ucode":"4A74417B0727A4","user_header":"https://static001.geekbang.org/account/avatar/00/12/9c/f3/e01dfe3a.jpg","comment_is_top":false,"comment_ctime":1552539354,"is_pvip":true,"replies":[{"id":"28056","content":"可以试试 ngx_debug_pool 模块或者 pmap 看看堆栈，当然最好的方法还是在开发环境重现后再进行分析","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552750519,"ip_address":"","comment_id":76158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552539354","product_id":100020901,"comment_content":"目前遇到一个疑似内存泄漏的问题：nginx代理运行后内存会不断的减少；每次reload之后，内存又会释放。由于服务器也不能随便升级内核安装memleak等这些额外工具，目前也还没定位到具体原因在哪。怀疑是不是因为nginx配置中有些变量赋值和if判断的配置导致的。想请教下，看能不能给些思路。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443203,"discussion_content":"可以试试 ngx_debug_pool 模块或者 pmap 看看堆栈，当然最好的方法还是在开发环境重现后再进行分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552750519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69986,"user_name":"missing","can_delete":false,"product_type":"c1","uid":1316598,"ip_address":"","ucode":"3FC438D387779A","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/f6/b864cf41.jpg","comment_is_top":false,"comment_ctime":1550927255,"is_pvip":false,"replies":[{"id":"25342","content":"嗯嗯，有些特性需要新版本的内核才支持。具体的内核版本支持可以参考它的文档 https:&#47;&#47;github.com&#47;iovisor&#47;bcc&#47;blob&#47;master&#47;docs&#47;kernel-versions.md","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551194466,"ip_address":"","comment_id":69986,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1550927255","product_id":100020901,"comment_content":"老师好！我的系统是ubuntu 14.04,内核版本是4.4.0-31-generic，可以跑cachetop,cachestat，但一跑memleak就会报错。报错如下：<br>oot@ubuntu:~# memleak -a -p $(pidof mysqld)<br>&#47;virtual&#47;main.c:18:1: error: could not open bpf map: Invalid argument<br>is maps&#47;stacktrace map type enabled in your kernel?<br>BPF_STACK_TRACE(stack_traces, 10240);<br>^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:220:3: note: expanded from macro &#39;BPF_STACK_TRACE&#39;<br>  BPF_TABLE(&quot;stacktrace&quot;, int, struct bpf_stacktrace, _name, roundup_pow_of_two(_max_entries))<br>  ^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:75:76: note: expanded from macro &#39;BPF_TABLE&#39;<br>#define BPF_TABLE(_table_type, _key_type, _leaf_type, _name, _max_entries) \\<br>                                                                           ^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:71:4: note: expanded from macro &#39;\\<br>BPF_F_TABLE&#39;<br>}; \\<br>   ^<br>&#47;virtual&#47;main.c:83:25: error: bpf_table stack_traces failed to open<br>        info.stack_id = stack_traces.get_stackid(ctx, BPF_F_REUSE_STACKID|BPF_F_USER_STACK);<br>                        ^<br>2 errors generated.<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 394, in &lt;module&gt;<br>    bpf = BPF(text=bpf_source)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 320, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text<br><br>请问是什么原因呢?","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440387,"discussion_content":"嗯嗯，有些特性需要新版本的内核才支持。具体的内核版本支持可以参考它的文档 https://github.com/iovisor/bcc/blob/master/docs/kernel-versions.md","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551194466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319529,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","nickname":"Don Wang","note":"","ucode":"1853365FA279F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367803,"discussion_content":"https://github.com/iovisor/bcc/blob/master/docs/kernel-versions.md\n\n上面链接里面有如下内容:\nPre-alloc map memory by default \t4.6 \t6c9059817432\n\n应该是说明  4.6内核版本才支持这个工具的使用.\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618471870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64582,"user_name":"风一样的男子","can_delete":false,"product_type":"c1","uid":1357985,"ip_address":"","ucode":"F02E87D5630DAB","user_header":"","comment_is_top":false,"comment_ctime":1548828936,"is_pvip":false,"replies":[{"id":"22981","content":"也是有的，但不完全一样，比如 jprofiler 之类的工具","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548943540,"ip_address":"","comment_id":64582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548828936","product_id":100020901,"comment_content":"老师，java web应用有没有类似memleak可以定位代码的好用工具？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438085,"discussion_content":"也是有的，但不完全一样，比如 jprofiler 之类的工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548943540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64283,"user_name":"marvinren","can_delete":false,"product_type":"c1","uid":1325147,"ip_address":"","ucode":"F7F7EEE0ED7588","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/5b/26539a0b.jpg","comment_is_top":false,"comment_ctime":1548734065,"is_pvip":false,"replies":[{"id":"22968","content":"感觉应该还有其他进程在操作内存。这个案例内存泄漏的比较慢，如果有其他大量分配和回收内存的应用，那用 vmstat 就观察不明显了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548942380,"ip_address":"","comment_id":64283,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548734065","product_id":100020901,"comment_content":"我在试用阿里云发现内存并没有减少，这是因为有其他机制保护内存泄露了么？<br>root@iZhp35alkngu5crtmh4wjaZ:~&#47;mylab# vmstat 5<br>procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----<br> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st<br> 1  0      0 6445872 692400 810976    0    0  1351     7   15    4  0  1 98  1  0<br> 0  0      0 6444344 692400 810996    0    0     0     2  579 1071  1  2 97  0  0<br> 0  0      0 6444348 692400 810968    0    0     0     2  644 1177  1  2 96  0  0<br> 0  0      0 6462500 692400 810976    0    0     0     3  610 1048  1  2 97  0  0<br> 0  0      0 6462876 692400 810976    0    0     0     2  663 1131  1  2 97  0  0<br> 0  0      0 6462692 692400 810996    0    0     0     3  644 1088  1  2 97  0  0<br> 0  0      0 6462496 692404 810988    0    0     0     2  662 1186  1  2 97  0  0<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437937,"discussion_content":"感觉应该还有其他进程在操作内存。这个案例内存泄漏的比较慢，如果有其他大量分配和回收内存的应用，那用 vmstat 就观察不明显了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548942380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64253,"user_name":"平少","can_delete":false,"product_type":"c1","uid":1218742,"ip_address":"","ucode":"EC76D35D0C2CBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/b6/0c0ed771.jpg","comment_is_top":false,"comment_ctime":1548727205,"is_pvip":false,"replies":[{"id":"22967","content":"是用的 centos 吗？看起来跟 https:&#47;&#47;github.com&#47;iovisor&#47;bcc&#47;issues&#47;1530#issuecomment-358035538 比较像","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548942083,"ip_address":"","comment_id":64253,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1548727205","product_id":100020901,"comment_content":"老师，帮忙看下我的memleak运行抱着个错误请问是怎么回事呢，内核是4.20的<br>[root@localhost sa]# memleak <br>&#47;virtual&#47;main.c:291:70: error: no member named &#39;page&#39; in &#39;struct tracepoint__kmem__mm_page_alloc&#39;<br>        return gen_alloc_exit2((struct pt_regs *)args, (size_t)args-&gt;page);<br>                                                               ~~~~  ^<br>&#47;virtual&#47;main.c:300:69: error: no member named &#39;page&#39; in &#39;struct tracepoint__kmem__mm_page_free&#39;<br>        return gen_free_enter((struct pt_regs *)args, (void *)args-&gt;page);<br>                                                              ~~~~  ^<br>2 errors generated.<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 401, in &lt;module&gt;<br>    bpf = BPF(text=bpf_source)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;site-packages&#47;bcc&#47;__init__.py&quot;, line 318, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text<br>[root@localhost sa]# <br>[root@localhost sa]# uname -r<br>4.20.5-1.el7.elrepo.x86_64<br>[root@localhost sa]# ","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437924,"discussion_content":"是用的 centos 吗？看起来跟 https://github.com/iovisor/bcc/issues/1530#issuecomment-358035538 比较像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548942083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319529,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","nickname":"Don Wang","note":"","ucode":"1853365FA279F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367804,"discussion_content":"https://github.com/iovisor/bcc/blob/master/docs/kernel-versions.md\n\n上面链接里面有如下内容:\nPre-alloc map memory by default \t4.6 \t6c9059817432\n\n应该是说明  4.6内核版本才支持这个工具的使用.\n\n\n比较好奇的是, 为什么4.20的内核版本 还是有这个问题???","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618471895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330999,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KhQRc8hIxHHyPV3Og2Fc5l8w2y7ibGwGn6odmzl3wTt6fPrNv589uHmia1rgiaZhRiaLVHv9ibhzkxFx1zo42uNIS9A/132","nickname":"道长","note":"","ucode":"15B2E9CEF84634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331096,"discussion_content":"您好！你这问题解决了吗？我也遇到这问题了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606786546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61181,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1547632721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547632721","product_id":100020901,"comment_content":"DAY18，打卡；<br>get到一个新的内存查看工具！！","like_count":0},{"had_liked":false,"id":59422,"user_name":"西红柿牛腩","can_delete":false,"product_type":"c1","uid":1152898,"ip_address":"","ucode":"DEC94B4A647A92","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/82/394c88ad.jpg","comment_is_top":false,"comment_ctime":1547367954,"is_pvip":false,"replies":[{"id":"21519","content":"docker内部直接操作是不行的，一个是需要大量的符号信息，另一个还需要容器运行在特权模式。所以，推荐在容器外部运行这个工具","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547447755,"ip_address":"","comment_id":59422,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1547367954","product_id":100020901,"comment_content":"老师，麻烦请教下在docker中执行会出错的问题：<br>系统版本Ubuntu18.04.1<br>内核：Linux top 4.15.0-43-generic #46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018 x86_64 x86_64 x86_64 GNU&#47;Linux<br>在执行完：<br>docker run --name=app -itd feisky&#47;app:mem-leak<br>docker logs app<br>执行<br>&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a -p $(pidof app)<br>开始报错：<br>root@top:~&#47;app# &#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak -a -p $(pidof app)<br>&#47;virtual&#47;main.c:18:1: error: could not open bpf map: Cannot allocate memory<br>is maps&#47;stacktrace map type enabled in your kernel?<br>BPF_STACK_TRACE(stack_traces, 10240);<br>^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:220:3: note: expanded from macro &#39;BPF_STACK_TRACE&#39;<br>  BPF_TABLE(&quot;stacktrace&quot;, int, struct bpf_stacktrace, _name, roundup_pow_of_two(_max_entries))<br>  ^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:75:76: note: expanded from macro &#39;BPF_TABLE&#39;<br>#define BPF_TABLE(_table_type, _key_type, _leaf_type, _name, _max_entries) \\<br>                                                                           ^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:71:4: note: expanded from macro &#39;\\<br>BPF_F_TABLE&#39;<br>}; \\<br>   ^<br>&#47;virtual&#47;main.c:83:25: error: bpf_table stack_traces failed to open<br>        info.stack_id = stack_traces.get_stackid(ctx, BPF_F_REUSE_STACKID|BPF_F_USER_STACK);<br>                        ^<br>2 errors generated.<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 394, in &lt;module&gt;<br>    bpf = BPF(text=bpf_source)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 320, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text<br><br>但是我把app.c和app-fix.c单独拿出来，自行编译运行时，执行memleak，就工作正常了。对docker操作不熟，搞不懂为什么，还请老师有时间指教一下。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436337,"discussion_content":"docker内部直接操作是不行的，一个是需要大量的符号信息，另一个还需要容器运行在特权模式。所以，推荐在容器外部运行这个工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547447755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319529,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","nickname":"Don Wang","note":"","ucode":"1853365FA279F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367802,"discussion_content":"https://github.com/iovisor/bcc/blob/master/docs/kernel-versions.md\n\n上面链接里面有如下内容:\nPre-alloc map memory by default \t4.6 \t6c9059817432\n\n应该是说明  4.6内核版本才支持这个工具的使用.\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618471792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57387,"user_name":"dexter","can_delete":false,"product_type":"c1","uid":1315252,"ip_address":"","ucode":"DD51207438FBD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEL5xnfuicbtRz4F87AAjZX6oCEjMtYiaIu4iaQichQmy0vEBA6Sumic1RDvUCeuBEqj6iatnt2kENbKYmuw/132","comment_is_top":false,"comment_ctime":1546774246,"is_pvip":false,"replies":[{"id":"20769","content":"嗯，系统级的内存泄漏一个memleak就可以","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546854501,"ip_address":"","comment_id":57387,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546774246","product_id":100020901,"comment_content":"1,如何判断目前系统环境是否已经发生了内存泄露<br>2,如何判断是哪个进程发生了内存泄露","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435554,"discussion_content":"嗯，系统级的内存泄漏一个memleak就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546854501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57349,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1546760627,"is_pvip":false,"replies":[{"id":"20772","content":"没有讲究，只是个案例，用不用线程都没关系","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546854690,"ip_address":"","comment_id":57349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546760627","product_id":100020901,"comment_content":"问一下，memleak这个程序用了一个线程来演示问题，这个有什么讲究吗？是不是故意为之？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435537,"discussion_content":"没有讲究，只是个案例，用不用线程都没关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546854690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57269,"user_name":"noma","can_delete":false,"product_type":"c1","uid":1334774,"ip_address":"","ucode":"ADB9D589B9A798","user_header":"","comment_is_top":false,"comment_ctime":1546702401,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1546702401","product_id":100020901,"comment_content":"ubuntu <br>linux kernel: 4.4.0-21-generic<br>执行memleak也报错：<br>virtual&#47;main.c:18:1: error: could not open bpf map: Invalid argument<br>is maps&#47;stacktrace map type enabled in your kernel?<br>BPF_STACK_TRACE(stack_traces, 10240);<br>^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:199:3: note: expanded from macro &#39;BPF_STACK_TRACE&#39;<br>  BPF_TABLE(&quot;stacktrace&quot;, int, struct bpf_stacktrace, _name, roundup_pow_of_two(_max_entries))<br>  ^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:60:76: note: expanded from macro &#39;BPF_TABLE&#39;<br>#define BPF_TABLE(_table_type, _key_type, _leaf_type, _name, _max_entries) \\<br>                                                                           ^<br>&#47;virtual&#47;include&#47;bcc&#47;helpers.h:56:4: note: expanded from macro &#39;\\<br>BPF_F_TABLE&#39;<br>}; \\<br>   ^<br>&#47;virtual&#47;main.c:83:25: error: bpf_table stack_traces failed to open<br>        info.stack_id = stack_traces.get_stackid(ctx, BPF_F_REUSE_STACKID|BPF_F_USER_STACK);<br>                        ^<br>2 errors generated.<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 394, in &lt;module&gt;<br>    bpf = BPF(text=bpf_source)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 318, in __init__<br>    raise Exception(&quot;Failed to compile BPF text&quot;)<br>Exception: Failed to compile BPF text<br><br>看这个blog作者的回复：<br>http:&#47;&#47;blogs.microsoft.co.il&#47;sasha&#47;2016&#47;02&#47;14&#47;two-new-ebpf-tools-memleak-and-argdist&#47;<br><br>意思应该是现在的memleak版本需要内核支持 BPF stack trace，4.6版本的内核应该可以。然后在4.4版本的内核上，在&#47;usr&#47;share&#47;bcc&#47;tools&#47;old&#47;memleak应该能work, 嗯，我试了还是报同样的错误:(","like_count":0,"discussions":[{"author":{"id":1319529,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","nickname":"Don Wang","note":"","ucode":"1853365FA279F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367801,"discussion_content":"https://github.com/iovisor/bcc/blob/master/docs/kernel-versions.md\n\n上面链接里面有如下内容:\nPre-alloc map memory by default \t4.6 \t6c9059817432\n\n应该是说明  4.6内核版本才支持这个工具的使用.\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618471774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57051,"user_name":"梦舟","can_delete":false,"product_type":"c1","uid":1365662,"ip_address":"","ucode":"0D766D9BDCE13E","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/9e/27c476e1.jpg","comment_is_top":false,"comment_ctime":1546608489,"is_pvip":false,"replies":[{"id":"20574","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546612213,"ip_address":"","comment_id":57051,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546608489","product_id":100020901,"comment_content":"非常不错","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435379,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546612213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56825,"user_name":"JohnT3e","can_delete":false,"product_type":"c1","uid":1063982,"ip_address":"","ucode":"CF4AAAC933529C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdWHFCr66TzHS2CpCkiaRaDIk3tU5sKPry16Q7ic0mZZdy8LOCYc38wOmyv5RZico7icBVeaPX8X2jcw/132","comment_is_top":false,"comment_ctime":1546564956,"is_pvip":false,"replies":[{"id":"21162","content":"嗯，内置类型没必要去分配动态内存","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547125197,"ip_address":"","comment_id":56825,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546564956","product_id":100020901,"comment_content":"思考题：fibonacci函数直接返回值，或者在child函数中分配局部变量v，fibonacci函数增加一个参数，传入局部变量v的地址。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435259,"discussion_content":"嗯，内置类型没必要去分配动态内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547125197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56535,"user_name":"holen","can_delete":false,"product_type":"c1","uid":1104199,"ip_address":"","ucode":"2C7D342AFE4DF0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/47/247fd305.jpg","comment_is_top":false,"comment_ctime":1546483600,"is_pvip":false,"replies":[{"id":"21144","content":"据我所知，bcc这套工具是最好用的，其他的工具都有很多限制（比如不好用，或者收费）","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547123562,"ip_address":"","comment_id":56535,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546483600","product_id":100020901,"comment_content":"老师， 有没有 centos 下不用升级内核就可以检测内存的工具，像 valgrind 工具没办法指定 pid 检测,   有没有更好的工具推荐下呢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435100,"discussion_content":"据我所知，bcc这套工具是最好用的，其他的工具都有很多限制（比如不好用，或者收费）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547123562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56508,"user_name":"nomoshen","can_delete":false,"product_type":"c1","uid":1043083,"ip_address":"","ucode":"7EA7C4FECFA7C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ea/8b/613c162e.jpg","comment_is_top":false,"comment_ctime":1546479491,"is_pvip":false,"replies":[{"id":"21142","content":"valgrind不能指定PID分析，所以一般是通过监控系统发现有内存问题后，到线下用 valgrind 分析。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547123437,"ip_address":"","comment_id":56508,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546479491","product_id":100020901,"comment_content":"目前我司用的内核版本还是2.6的；而且用valgrind会对线上正在执行的程序有很大性能影响吧；对内存泄露这块还是很难把握的；希望老师能x细聊这块","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435080,"discussion_content":"valgrind不能指定PID分析，所以一般是通过监控系统发现有内存问题后，到线下用 valgrind 分析。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547123437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56507,"user_name":"walker","can_delete":false,"product_type":"c1","uid":1324219,"ip_address":"","ucode":"FA5B2400A53730","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/bb/0b971fca.jpg","comment_is_top":false,"comment_ctime":1546479489,"is_pvip":false,"replies":[{"id":"21141","content":"👍谢谢分享","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547123305,"ip_address":"","comment_id":56507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546479489","product_id":100020901,"comment_content":"valgrind不是实时的查看命令，把检查结果存入到一个文本中。<br>valgrind --tool=memcheck --leak-check=full --xtree-leak=yes --show-mismatched-frees=yes test.txt","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435079,"discussion_content":"👍谢谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547123305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56383,"user_name":"二三子也","can_delete":false,"product_type":"c1","uid":1245787,"ip_address":"","ucode":"69C7D86583277D","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/5b/ce326cfc.jpg","comment_is_top":false,"comment_ctime":1546433222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546433222","product_id":100020901,"comment_content":"Flag ","like_count":0},{"had_liked":false,"id":56364,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1546429528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546429528","product_id":100020901,"comment_content":"addr = 7f5d902f66d0 size = 8192<br>有什么工具能知道7f5d902f66d0这个地址上是什么内容吗？","like_count":0},{"had_liked":false,"id":56319,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1546421429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546421429","product_id":100020901,"comment_content":"在通过make run 启动运行docker后，尝试使用memleak出现”Failed to attach BPF to uprobe“，这个错误，自己google了一下，未发现明显的解决方案，请问这个要如何处理？如果自己直接 gcc编译 app.c，不用docker，可以运行memleak<br>root@abbott-VirtualBox:~# memleak -a -p $(pidof app)<br>Attaching to pid 5877, Ctrl+C to quit.<br>perf_event_open(&#47;sys&#47;kernel&#47;debug&#47;tracing&#47;events&#47;uprobes&#47;p__lib_x86_64_linux_gnu_libc_2_27_so_0x97070_5877_bcc_5949&#47;id): Input&#47;output error<br>Traceback (most recent call last):<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 416, in &lt;module&gt;<br>    attach_probes(&quot;malloc&quot;)<br>  File &quot;&#47;usr&#47;share&#47;bcc&#47;tools&#47;memleak&quot;, line 406, in attach_probes<br>    pid=pid)<br>  File &quot;&#47;usr&#47;lib&#47;python2.7&#47;dist-packages&#47;bcc&#47;__init__.py&quot;, line 952, in attach_uprobe<br>    raise Exception(&quot;Failed to attach BPF to uprobe&quot;)<br>Exception: Failed to attach BPF to uprobe<br>","like_count":0},{"had_liked":false,"id":56254,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1546412157,"is_pvip":false,"replies":[{"id":"20337","content":"是的，但要注意释放对象的引用","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546445442,"ip_address":"","comment_id":56254,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546412157","product_id":100020901,"comment_content":"用java就不要用free了吧","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434965,"discussion_content":"是的，但要注意释放对象的引用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546445442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56248,"user_name":"淸曉","can_delete":false,"product_type":"c1","uid":1332899,"ip_address":"","ucode":"6E63DA4E29FE09","user_header":"https://static001.geekbang.org/account/avatar/00/14/56/a3/649d861c.jpg","comment_is_top":false,"comment_ctime":1546411595,"is_pvip":false,"replies":[{"id":"20264","content":"是的 可以到github查看案例源码 https:&#47;&#47;github.com&#47;feiskyer&#47;linux-perf-examples","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546423537,"ip_address":"","comment_id":56248,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546411595","product_id":100020901,"comment_content":"老师您好！您在文中从前面几篇降到函数，这些函数是在你打包的文件中吗？该怎么去查看分析？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434964,"discussion_content":"是的 可以到github查看案例源码 https://github.com/feiskyer/linux-perf-examples","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546423537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56244,"user_name":"淸曉","can_delete":false,"product_type":"c1","uid":1332899,"ip_address":"","ucode":"6E63DA4E29FE09","user_header":"https://static001.geekbang.org/account/avatar/00/14/56/a3/649d861c.jpg","comment_is_top":false,"comment_ctime":1546411281,"is_pvip":false,"replies":[{"id":"20265","content":"嗯 不错的建议。案例和工具里面有很多基础的东西没有展开细说，不过关键的地方的确标注下更有助于初学者理解","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546423702,"ip_address":"","comment_id":56244,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546411281","product_id":100020901,"comment_content":"老师您好！关于memleak或其他工具，输出的内容里，您可以标注一下重要语句、参数、代码的功能吗？比如：这次的memleak，$(pidof app)为什么这么写？输出的内容中，从哪里查看分析内存分配回收。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434962,"discussion_content":"嗯 不错的建议。案例和工具里面有很多基础的东西没有展开细说，不过关键的地方的确标注下更有助于初学者理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546423702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56155,"user_name":"Brown羊羊","can_delete":false,"product_type":"c1","uid":1315332,"ip_address":"","ucode":"354EC478E57DEE","user_header":"https://static001.geekbang.org/account/avatar/00/14/12/04/5837b21c.jpg","comment_is_top":false,"comment_ctime":1546398182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546398182","product_id":100020901,"comment_content":"工具对内核要求还是蛮高的","like_count":0},{"had_liked":false,"id":56131,"user_name":"walker","can_delete":false,"product_type":"c1","uid":1324219,"ip_address":"","ucode":"FA5B2400A53730","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/bb/0b971fca.jpg","comment_is_top":false,"comment_ctime":1546395360,"is_pvip":false,"replies":[{"id":"20267","content":"有的 可以用valgrind","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546423936,"ip_address":"","comment_id":56131,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546395360","product_id":100020901,"comment_content":"有没有低端版本的工具来检测内存泄漏的。现在线上的服务器，包括开发测试的服务器都不可能去升级内核。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434943,"discussion_content":"有的 可以用valgrind","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546423936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56092,"user_name":"淸曉","can_delete":false,"product_type":"c1","uid":1332899,"ip_address":"","ucode":"6E63DA4E29FE09","user_header":"https://static001.geekbang.org/account/avatar/00/14/56/a3/649d861c.jpg","comment_is_top":false,"comment_ctime":1546392531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546392531","product_id":100020901,"comment_content":"老师，能写一个centos7安装bcc 的文本吗？什么都准备好了，就是到下载bcc时就一直无法安装。","like_count":0},{"had_liked":false,"id":56027,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1546388007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546388007","product_id":100020901,"comment_content":"打卡day19<br>上班第一天，啃两篇文章，酸爽","like_count":0},{"had_liked":false,"id":55982,"user_name":"风飘，吾独思","can_delete":false,"product_type":"c1","uid":1131032,"ip_address":"","ucode":"4DF0E7DC22EE53","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/18/edc1b373.jpg","comment_is_top":false,"comment_ctime":1546359465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546359465","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":55848,"user_name":"无名老卒","can_delete":false,"product_type":"c1","uid":1348261,"ip_address":"","ucode":"48874CE670E122","user_header":"","comment_is_top":false,"comment_ctime":1546327588,"is_pvip":false,"replies":[{"id":"20279","content":"这些warning是正常的，原因是依赖库在容器里面的路径跟外面不同","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546424880,"ip_address":"","comment_id":55848,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546327588","product_id":100020901,"comment_content":"老师，对这个不是很明白，我的环境是centos 7&#47;4.20的内核，使用memleak来查看，也是有提示Couldn&#39;t find .text section in &#47;app，但后面还是显示了fibonacci；另外，将docker cp到&#47;app下面之后，后面的几行WARNING还是存在，是缺少了哪些文件吗？<br><br>```<br>[root@linjx ~]# memleak -a -p `pidof app`<br>Attaching to pid 15541, Ctrl+C to quit.<br>[01:59:23] Top 10 stacks with outstanding allocations:<br>WARNING: Couldn&#39;t find .text section in &#47;app<br>WARNING: BCC can&#39;t handle sym look ups for &#47;appWARNING: Couldn&#39;t find .text section in WARNING: BCC can&#39;t handle sym look ups for &#47;lib&#47;x86_64-linux-gnu&#47;libc-2.27.soWARNING: Couldn&#39;t find .text section in &#47;lib&#47;x86_64-linux-gnu&#47;libpthread-2.27.so<br>WARNING: BCC can&#39;t handle sym look ups for &#47;lib&#47;x86_64-linux-gnu&#47;libpthread-2.27.soWARNING: Couldn&#39;t find .text section in &#47;lib&#47;x86_64-linux-gnu&#47;ld-2.27.so<br>WARNING: BCC can&#39;t handle sym look ups for &#47;lib&#47;x86_64-linux-gnu&#47;ld-2.27.so\taddr = 7f901c147960 size = 8192<br>\taddr = 7f901c145950 size = 8192<br>\taddr = 7f901c149970 size = 8192<br>\taddr = 7f901c143940 size = 8192<br>\t32768 bytes in 4 allocations from stack<br>\t\tfibonacci+0x17 [app]<br>\t\tchild+0x47 [app]<br>\t\tstart_thread+0xd3 [libpthread-2.27.so]<br>```","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434859,"discussion_content":"这些warning是正常的，原因是依赖库在容器里面的路径跟外面不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546424880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55837,"user_name":"9527","can_delete":false,"product_type":"c1","uid":1032735,"ip_address":"","ucode":"04B51C09E3C7B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/1f/343f2dec.jpg","comment_is_top":false,"comment_ctime":1546322954,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546322954","product_id":100020901,"comment_content":"老师好，我有一些疑问<br>1.我在centos和Ubuntu直接编译运行这个c程序，然后strace -ff 这个程序，发现程序在不断的调用mprotect()函数，但却没有mmap()，两个系统都是这样的。<br>申请内存最终不是要调用brk()或者mmap()吗，为什么这里strace后却没有调用呢？<br><br>2.通过memlek看到程序不断申请的内存地址，然后cat进程的smap，对应的地址应该是文件映射段，那么heap段和文件映射段到底有什么不同呢，就是因为mmap分配的内存都被分到文件映射段，brk都被分配到heap？直接分配到heap段不行吗<br>我看heap段后面就直接跟了文件映射段了，为什么内存分配不直接分到heap段内<br><br>3.这个程序怎样才算把内存用满呢，是文件映射段，一直增长，涨到已经到stack段了，然后就没法分配内存了，然后报错？<br><br>4.系统分配内存有伙伴系统和slab机制，可以防止内存碎片，为什么java还要自己搞一套内存管理，还有一堆gc算法？","like_count":0},{"had_liked":false,"id":55791,"user_name":"Geek_33409b","can_delete":false,"product_type":"c1","uid":1112756,"ip_address":"","ucode":"9C64C42F799403","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/b4/6892eabe.jpg","comment_is_top":false,"comment_ctime":1546309379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546309379","product_id":100020901,"comment_content":"最近写go，有个程序运行之后，虚存一直在增长，可能是什么问题，请老师指点","like_count":0},{"had_liked":false,"id":55532,"user_name":"Tech","can_delete":false,"product_type":"c1","uid":1018736,"ip_address":"","ucode":"83D3C69B0AA03F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/70/ab68020f.jpg","comment_is_top":false,"comment_ctime":1546224750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546224750","product_id":100020901,"comment_content":"老师，free并不真正释放内存，有没有什么方式强制释放呢？","like_count":0}]}