{"id":668306,"title":"10｜触手可及：万能助手随叫随到","content":"<p>你好，我是键盘，我们继续驯服 GPT。</p><p>不知不觉来到了黄金密钥模块的最后一课，相信你已经基本熟悉了以ChatGPT为C位的人智协作新方式，摸清了GPT的底色和它能够给你带来的可能性。你会更注重思考，使用专业的提问来释放人力；可能会关注熵减，大幅减少各种工具和搜索的使用，让工作和生活变简单。</p><p>这节课，本质还是熵减。</p><p>我们会整合课程中已经掌握的方法和模版，寻找一个合适的移动百宝箱把它们放进去。不仅如此，你手上新增的实用设计也能方便地存进去，所有的设计都能实现秒速级的调用和管理。</p><p>百宝箱？看起来似乎要借助一个第三方工具，通过复杂的人力定义和不断地复制粘贴来实现。其实，只要把系统输入法升级成智能输入法就可以了，免费又好用。</p><h2>诉求：让人智交流变简单</h2><p>开始整活之前，我们拆解一下这个智能输入法需要覆盖的核心功能点。</p><ol>\n<li><strong>内置模版</strong>，<strong>方便套用和设计。</strong></li>\n</ol><p>智能输入法需要融合之前设计的prompt。所谓的内置模版包括两类，基础模版和人设模版。</p><p>基础模板用于基础支撑，把提问5要素收进去即可。</p><center>\n💬 prompt：提问5要素\n</center><pre><code class=\"language-plain\">做&lt;*数量份&gt;主题，细节，方式，格式\n</code></pre><p>收录5要素模板，是因为它可以轻松延伸为任何一个具体任务prompt，比如这个填充的实例，里面包含数量、主题、细节、方式、格式，细致又完善，非常好用。</p><!-- [[[read_end]]] --><pre><code class=\"language-plain\">提取以下会议纪要的要点，用Markdown代码块输出1份思维导图，用简洁的语言，重点加粗。\n</code></pre><p>人设模版是在这个基础上的衍生。可以分为聚焦于通用任务的“通用人设模版”和应对复杂任务的“综合人设模版”。</p><center>\n💬 prompt “通用人设模版”（你要做什么助手）\n</center><pre><code class=\"language-plain\">[做什么]，[达到x目的] 背景信息：\n步骤：\n要求：\n</code></pre><center>\n💬 prompt “综合人设模版”\n</center><pre><code class=\"language-plain\">你是一位 @Master，我会输入相关的请求，你将根据`preferences`、`instruction`和`rules`来协助我 #subject\n初始回复：“\n**Hi I’m #Master，Created by Jer. Ver Date**\n### ⚙️ Preferences：\n- 🌍&nbsp;lang: &lt;&gt; 默认：中文\n- ⏲️&nbsp;lvl: &lt;小白，初级，中级，高级&gt; 默认：小白\n- 🎨&nbsp;style: &lt;&gt; 默认：正式的\n### 🤖 菜单：\n用表格输出支持的`instructions`菜单，不用解释具体含义：\n—\n请指出你的偏好，E.g.：/lvl 初级\n回复1保持默认。\n”\n`preferences`\n/lang:语言偏好\n/lvl:用户基础\n/style:语言风格\n\n`instructions`\n/功能指令：做什么\n/help：输出支持的指令指引\n\n`rules`\n- 正确按输出模版渲染 markdown\n- 提供服务前，确认用户的偏好\n- 请一步一步思考\n</code></pre><ol start=\"2\">\n<li><strong>注入实用人设，应对日常重复工作。</strong></li>\n</ol><p>上面的单一模版可以延伸为各类实用人设。不过，如果你已经写出了常用的人设，不妨也把它们放入百宝箱。这里有几个我常用的人设，非常实用，都放进来。</p><p>首先，新手阶段帮我优化prompt的<a href=\"https://time.geekbang.org/column/article/664762\">新手万能助理</a>，等学有所成之后可以让它退下。</p><p>其次，英语是精进AI的基础，安排一位搞定英语翻译和润色的轻量翻译和润色人设。有时候还想系统学习其他“语言”，就请出<a href=\"https://time.geekbang.org/column/article/666642\">综合语言大师Lang Master</a>。</p><p>还有，针对日常各种自动化和批处理，配备一个专用于设计Python解决方案的Python脚本人设。我合入了上一节课的 <a href=\"https://time.geekbang.org/column/article/667888\">Script Master</a> ，设计成容纳各平台和编程语言的Code Master，不局限于长图切割处理。</p><p>最后，非专业玩家的用图需求，使用MJ提词器就可以躺着输出。</p><p>除了最后一节课才会分享的提词器，其他的人设我都讲过。更多的人设需求根据实际情况量身定制即可。</p><ol start=\"3\">\n<li><strong>收录常用的输入，压缩机械的人力重复输入。</strong></li>\n</ol><p>除了人设，还有一些小细节。如果你不想一遍一遍地打出重复的句子或段落，找各种符号，也可以把它们存进去。</p><p>比如用于激活慢思维的 <code>请一步一步思考。</code> ，用于强调的分割符  <code>&lt;&gt;</code> ， Emoji设置项<code>🎯&nbsp;learn: &lt;&gt; 默认：English</code> ，还有用于突出标题和列表的智能符号 <code>✦</code> 等等。</p><ol start=\"4\">\n<li><strong>打通不同终端，随叫随到。</strong></li>\n</ol><p>输入法是随身的，但我们更需要一个跨终端的、打通个人数据的输入法，彻底告别冗长、重复的输入以及不同终端同步不便的烦恼。即使是近千字的人设，随时随地敲两下就能唤出。请注意，这里的“两下”是精确量化，不是比喻。</p><p>对于苹果用户，苹果的原生输入法依靠iCloud覆盖“全家桶”，加上自带的“自定义短语”功能就可以满足要求。Win用户需要一个有“用户词典”和“账户”的输入法，这样PC端和移动端也能打通。这种输入法市面上不少，用自己习惯的就行。</p><p><img src=\"https://static001.geekbang.org/resource/image/82/e6/820c36443dfe0ca5cdfc5a61ffb5b3e6.png?wh=1793x689\" alt=\"图片\"></p><p>最后，我希望这个百宝箱兼具灵活的管理和备份功能，不需要依赖管理文档就能迭代新的收获。</p><p>下面我会以自己常用的Mac来分享，方法共通。</p><h2>一步一步思考，打造一个“智能”输入法</h2><p>先来实现最核心的功能：把数据存到输入法里面。这些数据就是你和AI的交流和协作信息，包括符号、迭代话术、prompt话术、模版、人设等等。</p><p>Mac系统自带的“自定义短语”就非常好用，大量的冗余都被它的巧妙设计熵减了，可以让你在和AI交流的时候聚焦目标，忘了输入这件事。</p><p>这个“百宝箱”的界面上有添加按钮，但只能一个一个地写入。这是我们想要的吗？不是！为了避免低效的人力录入，我们必须找到捷径。我尝试“全选自定义项+拖拽”，生成了一份“自定义短语.plist”文件。我们打开这个文件看看葫芦里卖的什么药！</p><p><img src=\"https://static001.geekbang.org/resource/image/45/bc/45ffc93f1c6025252b9c6bc9dfa186bc.png?wh=1920x631\" alt=\"图片\"></p><p>OK，是一份很规整的XML，分析它的规律之前，我们还需要了解一些重要概念。</p><h4><strong>了解映射：短语和输入码</strong></h4><p>“自定义短语”通过phrase（短语）和shorcut（输入码）的组合来映射一个信息块，比如在ChatGPT中常用的配图接口，短语<code>![接口配图](https://source.unsplash.com/1600x900/?&lt;关键词&gt;) #不要使用代码块回复</code> 就可以映射为<code>tu</code>这样的快捷输入码。</p><h4>准备工作：设计输入码</h4><p>短语就是要存入的数据，这个我们已经有很多储备了。接下来要解决输入码的设计，我主要使用以下3个方法。</p><ul>\n<li><strong>方法1：贴合自己的习惯来设计，要能够毫不费劲地记住，最佳长度是2-3位。</strong></li>\n</ul><p>我给你举几个例子。</p><ol>\n<li><code>cl</code> = <code>&lt;&gt;错误，我希望&lt;&gt;</code> ，“cl”取自“错了”的拼音。</li>\n<li><code>yby</code> = <code>请一步一步思考</code> ，“yby”取自“一步一”的拼音。</li>\n<li><code>mmd</code> = <code>&lt;&gt;流程用Mermaid代码输出</code> ，“mmd”取自“Mermaid”的音节，也可以使用“流程”的拼音“lc”，但是用“mermaid”或者“asdfg”这种乱码就没必要了。</li>\n</ol><ul>\n<li><strong>方法2：输入码应该规避和常用的文字输入冲突，否则很容易变成干扰。</strong></li>\n</ul><p>假如你经常打<code>mb</code>来输入“模版”，那么人设模版的输入码最好就不要设为<code>mb</code>，它可以是增加1位来减少冲突的“模版”拼音<code>mob</code>、取自“人设”拼音的<code>rs</code>、或者取自“template”的简拼<code>tpl</code> 。</p><ul>\n<li><strong>方法3：不方便的通通写入。</strong></li>\n</ul><p>不方便手打的，你就写进去，比如prompt段落和一些实用符号“✦”“⭐️”，一个图标就找半天，不如存进输入法。</p><p>另外建议你在一个清晰的框架下进行设计，以后数量多起来也不会乱套。下图中我根据成果截图做了聚类的注解，通常都是保存这些类别的内容，你可以参考着整理自己需要的功能。</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/69/a1a899d73210e9dbfd80f79118yy0869.png?wh=2289x1153\" alt=\"\"></p><p>然后你就可以造出一份下面这样的数据文档，也可以通过示范你的习惯让ChatGPT补全细节。</p><pre><code class=\"language-markdown\">数据：\nphrase=``\nshortcut=bl\n\nphrase=&lt;&gt;错误，我希望&lt;&gt;\nshortcut=cl\n......\n</code></pre><h4><strong>分析规律</strong></h4><p>观察这份“自定义短语.plist”文件，我们来提取规律，为下一步实现自动填充和注入输入法做准备。</p><p><img src=\"https://static001.geekbang.org/resource/image/28/ae/2896a8d5833671b19877ea9a65b442ae.png?wh=1028x768\" alt=\"图片\"></p><ul>\n<li>每一组快捷输入映射，由短语 <code>phrase</code> 和输入码 <code>shorcut</code> 两部分组成。</li>\n<li>一对多：同一个输入码可以对应多个短语。</li>\n<li>符号、空行和换行，所见即所得。</li>\n<li>多行文本的两端会被 <code>&lt;string&gt;&lt;/string&gt;</code> 结构包裹。</li>\n<li>输入码按字母表顺序，而且是先排少位的，再排多位的。比如：a ▸ ab ▸ acc。</li>\n<li>半角逗号 <code>,</code> 会被识别为切割，比如“a,b”会被切割成短语“a”和短语“b”两组快捷输入，用全角逗号 <code>，</code> 替换即可。</li>\n</ul><h4>实现自动填充</h4><p>根据以上的设计方法和文档规律，现在我们就可以设计prompt，让GPT帮我们把需要的内容自动写进去了。<strong>这个“分析规律 ▸ 拆解设计 ▸ 实现自动化”的推演方法基本适用于任何拆解。</strong></p><center>\n💬 prompt模版\n</center><pre><code>请按照下方的“代码结构.pllist”，将我提供的“数据”按规律填入，生成一份完整的文档:\n注意：\n1、`phrase`中使用的符号请保持原样，不要转义。\n2、当`phrase`涉及多行的情况，保留里面的空行和换行，用这个形式填入：\n--------\n&lt;string&gt;Line1\nLine2\n…\nLineN&lt;/string&gt;\n--------\n代码结构.plist：\n--------\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;\n&lt;plist version=&quot;1.0&quot;&gt;\n&lt;array&gt;\n\t&lt;dict&gt;\n\t\t&lt;key&gt;phrase&lt;/key&gt;\n\t\t&lt;string&gt;数据中的phrase&lt;/string&gt;\n\t\t&lt;key&gt;shortcut&lt;/key&gt;\n\t\t&lt;string&gt;数据中的shortcut&lt;/string&gt;\n\t&lt;/dict&gt;\n\t&lt;dict&gt;\n\t\t“重复这个结构”\n\t&lt;/dict&gt;\n&lt;/array&gt;\n&lt;/plist&gt;\n--------\n数据：\n--------\nphrase=``\nshortcut=bl\n\nphrase=&lt;&gt;错误，我希望&lt;&gt;\nshortcut=cl\n\n#[注] 以下重复省略\n</code></pre><p>从“请按照”开始，就是具体的任务要求，第一条代表短语的标点符号不要改动，第二条代表还原短语的断行方式，具体的代码填充格式也给出了参考（5-10行代码）。我们只需要填写第29行<code>数据：</code>之后的内容，就可以给GPT派活了。</p><p>数据里面是我整理的短语<code>phrase</code>和对应的快捷输入码<code>shortcut</code>，用参数赋值的形式列给GPT。</p><p>这个案例的核心就是重复录入不同的<code>&lt;dict&gt;自定义短语&lt;/dict&gt;</code>。你在要求ChatGPT输出多组包含多个模块的信息时也可以使用。比如推荐3本重磅好书，每一个输出都要包含封面、概要信息表格、推荐语等等的完整结构。</p><pre><code class=\"language-markdown\"># 示范段行格式\nLine1\nLine2\n…\nLineN\n\n# 重复填充词典\n结构\n\"重复这个结构\"\n</code></pre><center>\n🤖️ ChatGPT\n</center><p><img src=\"https://static001.geekbang.org/resource/image/21/f5/2186cb9626b3f920537055824d2879f5.png?wh=1920x711\" alt=\"图片\"></p><p>可以看到，GPT能够准确地按要求办事。我比较关注的多行段落也没有翻车，因为这种情况会破坏整个prompt的书写结构，一定不能乱套。整体过完一遍，发现中间还是有一段在粘贴文本的时候换行解析出了问题，于是要求GPT帮忙修正，把更新的代码片段覆盖到.plist中。</p><p>你还可以继续问GPT，还有哪些实用的prompt写法，根据上面提到的规律自动扩展更多的短语映射。你再判断一下，合适的就合入。这里可以用前面的“判断”+“/子功能”方法自动实现。比如回“1”就代表采用，最后把它们整合起来。</p><p>接下来，把这份plist拖到系统的“自定义短语”中，如无意外就收工了。但是我拖入的时候居然装死不动了，怎么办呢？</p><p>先说原因，除了“自定义短语.plist”这份XML文档和纯文字的编码差异导致解析出错，还有<code>&lt;&gt;</code>这对符号检查不仔细的问题。它们在XML中被转义为<code>&amp;lt;&amp;gt;</code>的形式，可以看出是用来规避和<code>&lt;标记符&gt;</code>的冲突，所以原prompt的“注意”项1应该修订为：</p><pre><code class=\"language-markdown\">`phrase`中使用的符号，&lt;&gt;请转义为&amp;lt;&amp;gt;，其他的保持原样。\n</code></pre><p>解析的问题，最直接的方式就是让GPT解决，打开终端敲两行代码即可，首先cd到目标路径，选中ChatGPT.txt，自动转化为ChatGPT.plist。</p><center>\n💻 终端命令\n</center><pre><code class=\"language-markdown\">cd /Users/jer/Desktop/\nplutil -convert xml1 ChatGPT.txt -o ChatGPT.plist\n</code></pre><center>\n🤖️ ChatGPT\n</center><p><img src=\"https://static001.geekbang.org/resource/image/e0/12/e0197116fc9ec20b41fbf41443ffce12.png?wh=1434x1066\" alt=\"图片\"></p><p>更取巧的方式是在“自定义短语”中先拖出一份plist，再贴入GPT生成的代码覆盖。</p><p>好了，现在把修正的ChatGPT.plist拖进“自定义短语”，搞定。如果后面你想单独新增，点击左下角 “+” 按钮就可以，这种情况下所见即所得，<code>&lt;&gt;</code> 这种符号不需要额外的转义操作。“-”按钮则对应删减。通过迭代里面的“短语”，把输入法打磨成一把辅助高效交流的利器，而不是一个prompt存储空间。比如“新手助理人设”，完成新手阶段的辅助使命之后，完全可以“下架”。</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/00/2ec97f477ed0b0cc06bd769f10df9300.png?wh=1920x840\" alt=\"图片\"></p><p>Windows上的处理方式，按照<strong>“分析规律 ▸ 拆解设计 ▸ 实现自动化”</strong>这个推演方法来处理写入即可。只要你的输入法有“用户词典”文件或者导入按钮，这个事情就很好办。至于“个人账号”，主要作用是把你在电脑端处理好的数据同步到账号所覆盖的各个终端。</p><h2>应用：唯快不破</h2><p>把模版、常用的prompt和符号都注入输入法之后，我们来看实际应用，怎么让“人智交流”变简单。</p><ul>\n<li><strong>召唤综合人设，搭配分屏功能快速规划prompt设计。</strong></li>\n</ul><p>首先是综合人设，输入定义好的输入码 <code>ttt</code>，回车。以前你需要打一串的文本才能进入节奏，现在直接聚焦思考你想解决的问题，在  <code>/功能：是什么</code> 部分设计细节就可以了。</p><p>下图左边是一个用于规划的轻量网页记事本，系统记事本也可以用。</p><p><img src=\"https://static001.geekbang.org/resource/image/6e/3c/6ef2a37634c145f15a39ae08834a293c.png?wh=1920x989\" alt=\"图片\"></p><p>网页记事本链接（复制可用）：data:text/html;base64,PGh0bWwgY29udGVudGVkaXRhYmxlPmVkaXQgbWU8L2h0bWw+</p><ul>\n<li><strong>高频 prompt，信手拈来，不用再重复打完。</strong></li>\n</ul><p>用你熟悉的“代号”召唤它们，具体的场景我举几个例子。</p><ol>\n<li>著名的Zero-Shot CoT <code>请一步一步思考。</code>肯定是榜上有名的，用输入码 <code>yby</code> 来映射，利用输入码可以“1对多”的能力，再定义一句 <code>请一步一步思考，输出完整的代码。</code> ，用于编码场景。</li>\n<li>日常使用中，ChatGPT的输出相比GPT-4是非常啰嗦的。你可以定义 <code>jjd</code> 对应<code>请用简洁的语言，注意正确渲染markdown</code> 之类的短语，让输出更简洁、更专业。</li>\n<li>如果你还想通过GPT生成代码，在支持Mermaid的工具中转换成各种图表，那么这一行prompt就很炸裂，它还可以变成流程图、树状图、用户旅行图、时序图等等，覆盖分析和研究的方方面面。（图稿中使用的工具是Notion）</li>\n</ol><pre><code class=\"language-markdown\">输入码 = mmd\n短语 = 生成一个&lt;&gt;图，输出mermaid代码，需要&lt;&gt;\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/a3/74/a3e80ebdc723c448d4bd0fb714575474.png?wh=1920x1105\" alt=\"图片\"></p><p>ChatGPT做好的“自定义短语”文件我放在了<a href=\"https://github.com/jerlinn/Prompts_dict/tree/main\">Github</a>，供你参考。</p><h2>扩展：放眼智能领域，思路打开</h2><p>除了已经覆盖的需求，这个输入映射方法可以扩展的用法实在太多了，AI领域里相关的词典都可以纳入，甚至，你的一些常用代码、API token和个人号码，在确保个人数据安全的情况也能放进去。我再举几个例子，帮你打开思路。</p><p>学习交流的时候，常用的名称懒得完全手敲。</p><pre><code class=\"language-markdown\">cha = ChatGPT\nsd = Stable Diffusion\nmjr = Midjourney\n</code></pre><p>本地运行Stable Diffusion（Run SD），两个命令行。</p><pre><code class=\"language-markdown\">rsd = cd stable-diffusion-webui \nrsd = ./webui.sh\n</code></pre><p>常用的智能绘图后缀或组合，比如在MJ中采用2:1宽画幅和高风格化s750。（这套课程的头图就是这么来的）</p><pre><code class=\"language-markdown\">hz = --ar 2:1 --s 750\n</code></pre><p>在MJ风景构图中，干掉碍眼的人和电线。</p><pre><code class=\"language-markdown\">fj = --no human powerlines\n</code></pre><h2>小黑板</h2><p>这节课是对基础速通和黄金密钥两个模块的花式总结。我们都知道，所谓的人智协作，其实就是最大限度发挥人类思考的价值，有效且高效地指挥AI来完成你想做的事情，释放掉低价值的人力劳作。</p><p>驯服ChatGPT，主要靠的就是prompt的交互。所以要让人智交流变得简单，就得想办法来减少输入prompt过程中的冗余、重复和各种输入的不便利。随身的输入法可以依靠“打通终端，随叫随到”来帮我们实现。</p><p>我把已经分享过的prompt方法和模版划分为5层，融合到了智能输入法的核心功能点里面。然后我们展开一步一步的分析和设计，成功让ChatGPT填充了一份“智能词典”。<strong>这是一种典型的通过提取规律来指挥AI做事的方法</strong>。说到规律，不可避免地会遇到一些“重复示例”的问题，我分享了2种可复用的写法，有效应对。</p><p><img src=\"https://static001.geekbang.org/resource/image/c4/a1/c485c8762d09001e2892bcf936bb0aa1.png?wh=1142x364\" alt=\"图片\"></p><p>现在，你的万能助手也就以专业团队的形式正式入驻输入法了，随时随地，触手可及。它还能覆盖日常prompt的方方面面，不止于快速调用和灵活管理，希望思路扩展部分的例子能够给到你灵感。</p><p>本节课我们也学习了一种通用的推演方法。只要能揪出事物中的规律，prompt这把黄金密钥就一定能打开面前那扇激动人心的大门。</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/77/a83cc56ff7513074f3dc1009de7bcd77.png?wh=1142x324\" alt=\"图片\"></p><p><strong>要点：</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/bb/58/bb074447f063e92954952d62bee75058.png?wh=1142x662\" alt=\"图片\"></p><h2>踏浪扬帆</h2><p>咱们就试试还能拓展什么进去，不止于技术层面。比如说，多按两下就能自动将输入的文本传到OpenAI接口进行翻译，再通过让ChatGPT写一个脚本把翻译结果传过来，覆盖原来的输入。</p><p>上完这一节，你还觉得需要多一个所谓的AI输入法或者管理prompt的工具吗？期待在评论区看到你的思考或感受分享，也欢迎你将这节课分享给感兴趣的朋友们，戳此加入<a href=\"http://jinshuju.net/f/oI1KKM\">课程交流群</a>，我们下节课进入综合实战。</p>","neighbors":{"left":{"article_title":"09｜全面调教：让GPT理解“否定”","id":667888},"right":{"article_title":"11 | 综合应用：管理海量密码","id":669505}},"comments":[{"had_liked":false,"id":396033,"user_name":"福禄妹妹","can_delete":false,"product_type":"c1","uid":1237438,"ip_address":"北京","ucode":"8E235B85E2BE50","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/be/e7c7bb94.jpg","comment_is_top":false,"comment_ctime":1732763972,"is_pvip":false,"replies":[{"id":143797,"content":"可以认为是系统提示词（system prompt）的设计，编排通常是要调用 API 来搭建或者依赖 DIFY、Coze 这种封装好的“积木”的平台。 \n简单的方式也有，你可以尝试用 Python 去做智能体，把数据处理、变量、提示词、知识库和后处理等全部串起来。\n\n借助 Cursor &#47; Windsurf 很容易做到，先要求出个能跑的，也就可以快速开始。","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1732907881,"ip_address":"广东","comment_id":396033,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"这种方式是根据用户diy设计的prompt，类似于各开源平台封装好的智能体？\n另外，智能体除了调节prompt，是不是还有类似编排串联关键结点的方式，进行设计？ 这个维度好多大厂也在做智能体平台的开发？","like_count":1,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654558,"discussion_content":"可以认为是系统提示词（system prompt）的设计，编排通常是要调用 API 来搭建或者依赖 DIFY、Coze 这种封装好的“积木”的平台。 \n简单的方式也有，你可以尝试用 Python 去做智能体，把数据处理、变量、提示词、知识库和后处理等全部串起来。\n\n借助 Cursor / Windsurf 很容易做到，先要求出个能跑的，也就可以快速开始。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732907881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376994,"user_name":"re","can_delete":false,"product_type":"c1","uid":2700417,"ip_address":"广东","ucode":"80ED94C683387C","user_header":"https://static001.geekbang.org/account/avatar/00/29/34/81/18a9d3e0.jpg","comment_is_top":false,"comment_ctime":1687821545,"is_pvip":false,"replies":[{"id":137412,"content":"市面上的其实就是训练还之后保存的人设，不用每次都带上最初的人设prompt，直接说问题就好。比如你遇到一个做好的PPT人设，日常提问就可以直接说PPT的主题。\n平时自己训练，就是在一个会话里训练一个专用的人设。不同的人设，在不同的会话里。","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1687873456,"ip_address":"广东","comment_id":376994,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"老师我想问下就市面上各种的角色对话机器人而言，它们是只用定义一次prompt还是每一次我们发送消息都需要带上prompt内容。我们自己平常在使用gpt的过程中是否可以定义不同的prompt 然后每次根据自己想要的进去对话","like_count":1,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622057,"discussion_content":"市面上的其实就是训练还之后保存的人设，不用每次都带上最初的人设prompt，直接说问题就好。比如你遇到一个做好的PPT人设，日常提问就可以直接说PPT的主题。\n平时自己训练，就是在一个会话里训练一个专用的人设。不同的人设，在不同的会话里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687873456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388695,"user_name":"燃烧的飞雪","can_delete":false,"product_type":"c1","uid":3832445,"ip_address":"江苏","ucode":"2CE80067233DD9","user_header":"https://static001.geekbang.org/account/avatar/00/3a/7a/7d/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1710725693,"is_pvip":false,"replies":[{"id":141537,"content":"都是类似的，给经常输入的长文本建立快捷映射关系而已。（短号逻辑）","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1711253078,"ip_address":"中国台湾","comment_id":388695,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"使用搜狗输入法，自定义短语功能和设置类似，但好像PC与手机不能同步\n另外搜狗还有自定义词库，与片有什么不一样？\n","like_count":0,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640173,"discussion_content":"都是类似的，给经常输入的长文本建立快捷映射关系而已。（短号逻辑）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1711253079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国台湾","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386052,"user_name":"吴亮","can_delete":false,"product_type":"c1","uid":2397945,"ip_address":"广东","ucode":"CEB3995975654C","user_header":"https://static001.geekbang.org/account/avatar/00/24/96/f9/e52955e1.jpg","comment_is_top":false,"comment_ctime":1703928314,"is_pvip":false,"replies":[{"id":140704,"content":"相信平台不会让生成来凑数，难读就是我的问题了，不理解的地方可以到交流群反馈。","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1704020185,"ip_address":"中国台湾","comment_id":386052,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"老师，你的课程是不是用chatgpt生成的，文字不通顺，读起来很费劲。","like_count":0,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634819,"discussion_content":"相信平台不会让生成来凑数，难读就是我的问题了，不理解的地方可以到交流群反馈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704020185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国台湾","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376727,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1687272878,"is_pvip":false,"replies":[{"id":137328,"content":"搜狗以前用Win的时候记得是有用户词典的，可行。\n生成plist那个prompt直接复制，加上你想写入的词典组合就行。对应：\n\nphrase=短语 \nshortcut=输入码\n\n试试看，还有困难的话可以在群里交流","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1687280225,"ip_address":"广东","comment_id":376727,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"Q1：我是win10，搜狗输入法，能否可以建立文中所说的模板、提示一类的智能输入法？\nQ2：文中的模板，怎么使用？直接全部拷贝到GPT吗？","like_count":0,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621515,"discussion_content":"搜狗以前用Win的时候记得是有用户词典的，可行。\n生成plist那个prompt直接复制，加上你想写入的词典组合就行。对应：\n\nphrase=短语 \nshortcut=输入码\n\n试试看，还有困难的话可以在群里交流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687280226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2691506,"avatar":"https://static001.geekbang.org/account/avatar/00/29/11/b2/110e47b3.jpg","nickname":"+2🌸Caryi꧂","note":"","ucode":"4F45AFD5A44CC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625621,"discussion_content":"搜狗亲测可行：设置-&gt;高级-&gt;自定义短语-&gt;直接编辑配置文件（格式如：mmd,1=生成一个&lt;&gt;图，输出mermaid代码，需要&lt;&gt;；其中1代表顺序）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691994357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376720,"user_name":"yanger2004","can_delete":false,"product_type":"c1","uid":1009644,"ip_address":"上海","ucode":"0A2CD03EF31052","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erms9qcIFYZ4npgLYPu1QgxQyaXcj64ZBicNVeBRWcYUpCZ9p0BGsrEcX8heibMLCV4Gde4P9pf7PjA/132","comment_is_top":false,"comment_ctime":1687265444,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"大道至简","like_count":1},{"had_liked":false,"id":396179,"user_name":"Geek_8f004a","can_delete":false,"product_type":"c1","uid":3950354,"ip_address":"河南","ucode":"DDC870471C41B2","user_header":"","comment_is_top":false,"comment_ctime":1733450795,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"老师您的chatGPT 截图的拼图和里面的得意黑字体是用什么做的，好好看啊","like_count":0},{"had_liked":false,"id":386053,"user_name":"吴亮","can_delete":false,"product_type":"c1","uid":2397945,"ip_address":"广东","ucode":"CEB3995975654C","user_header":"https://static001.geekbang.org/account/avatar/00/24/96/f9/e52955e1.jpg","comment_is_top":false,"comment_ctime":1703928541,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"将常用prompt嵌入输入法还好。","like_count":0},{"had_liked":false,"id":377226,"user_name":"石云升","can_delete":false,"product_type":"c1","uid":1024195,"ip_address":"广东","ucode":"78F1DD33EFD000","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/c3/c5db35df.jpg","comment_is_top":false,"comment_ctime":1688104417,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":2,"product_id":100550701,"comment_content":"原来一直没想到自己设置输入法的快捷键。结合现在的GPT提示词确实可以极大的提高工作效率。已经运用。","like_count":0}]}