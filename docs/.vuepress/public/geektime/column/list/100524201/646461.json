{"id":646461,"title":"23｜图：如何用图表达错综复杂的数据？","content":"<p>你好，我是王健伟。</p><p>经过了长期努力，我们一起学习了树相关的知识。树是整个课程中占据篇幅最大的话题，也是面试和使用中的热门话题。而这一次，我们来说一说图。</p><p>图这种数据结构比树更加复杂。我们回想一下，树形结构中的节点或者说数据之间有明显的层次关系，一个父节点可以有多个子节点，当然，一个子节点只能有唯一的父节点。但在图形结构中，节点之间可以有任意的关系，即任意两个数据都可能相关。</p><h2>关于图，有哪些必备的基本概念和术语？</h2><p>图涉及的概念和术语比较多，请你投入一定的耐心学习。不过，这些概念和术语不用强记，只需要有印象，后面使用到这些术语的时候再到这节课看看就可以，反复几次，这些概念和术语自然也就记住了。</p><h3>顶点、边、阶</h3><p>先看一些基本概念。在图中，数据元素被称为<strong>顶点</strong>，和在树中将数据元素称为节点是有区别的，用v<span class=\"reference\">（Vertex）</span>表示。不同的顶点之间的连线称为<strong>边</strong>，用e<span class=\"reference\">（Edge）</span>表示。</p><p>图<span class=\"reference\">（Graph）</span>是由顶点的<strong>有穷非空</strong>集合和顶点之间的连线<span class=\"reference\">（边）</span>的集合组成。通常表示为G=(V,E)，其中G表示一个图，V(G)代表图G中的顶点集合，E(G)代表图G中的边集合。</p><p>用<strong>|V|</strong>表示图G中顶点个数，也称为图G的阶。</p><p>用<strong>|E|</strong>表示图G中边的条数。</p><!-- [[[read_end]]] --><p>图1所示就是一个图，其中A、B、C、D、E、F是顶点。</p><p><img src=\"https://static001.geekbang.org/resource/image/71/05/713a83440646e0e1a3aaf2989ff5df05.jpg?wh=1543x776\" alt=\"\" title=\"图1 图\"></p><p>注意了，图不可以为空，换句话说，顶点集合V不可以为空集。而边集合E可以为空，所以，图2也是一个图。</p><p><img src=\"https://static001.geekbang.org/resource/image/78/6b/780fc59813e5b4dbca29bd45796f746b.jpg?wh=1608x782\" alt=\"\" title=\"图2 包含6个顶点但不包含边的图\"></p><h3>无向图、有向图、简单图、多重图、完全图</h3><p>如果你刚才观察得仔细，一定会发现上面介绍的图中的边是没有方向的，这种边就叫做无向边<span class=\"reference\">（简称边）</span>。如果图中任意两个顶点之间的边都是无向边，则称该图为无向图，比如图1就是无向图。</p><p>当然，从一个顶点到另外一个顶点的边也可以是有方向的，这种边称为有向边，也称为弧。如果图中任意两个顶点之间的边都是有向边，则称该图为有向图。图3就是一个有向图：</p><p><img src=\"https://static001.geekbang.org/resource/image/d1/c7/d1cf5696fbfda6b7ed7d06950543a4c7.jpg?wh=1441x741\" alt=\"\" title=\"图3 有向图\"></p><p>对于无向图，只要两个顶点之间有一条边，则这两个顶点之间可以互相到达。图1中，连接顶点A与B之间的边因为不存在方向问题，因此可以表示为无序对(A,B)或者(B,A)，注意这里用的是<strong>圆括号</strong>表示无向边。</p><p>有向图不同。在图3中，顶点A到B之间存在一条有向边<span class=\"reference\">（从A指向B的箭头）</span>，这表示从顶点A可以到达顶点B，但因为顶点B到顶点A之间并不存在有向边，所以从顶点B不可以到达顶点A。</p><p>这里你可以设想一下微博用户之间的关系。你关注喜欢的账号之后，可以看到对方发的消息，但这并不等于人家也关注了你，如果对方没有关注你，那也看不到你发的消息。</p><p>顶点A到顶点B的有向边<span class=\"reference\">（箭头）</span>就是弧。箭头开始的顶点A叫<strong>弧尾</strong>，箭头指向的顶点B叫<strong>弧头</strong>。这条弧可以用&lt;A,B&gt;表示，注意这里用的是<strong>尖括号</strong>表示有向边。另外还需要注意方向，不可以写成&lt;B,A&gt;。</p><p>图中若不存在<strong>顶点到其自身</strong>的边，并且同一条边<strong>不会重复</strong>出现，这种图称为<strong>简单图</strong>。简单图分为简单无向图<span class=\"reference\">（如图1）</span>和简单有向图<span class=\"reference\">（如图3）</span>。</p><p>图中某两个顶点之间的边数多于一条，或者顶点通过一条边和自己关联，这种图称为<strong>多重图</strong>。多重图分为多重无向图和多重有向图，如图4所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/dc/50/dcf2a8afceefb1d28e60898e4a05e150.jpg?wh=1800x853\" alt=\"\" title=\"图4 多重图\"></p><p>数据结构中所讨论的图都是<strong>简单图</strong>，多重图不在讨论之中。基本上，绝大部分问题通过简单图都可以得到解决，比如微信中不需要自己加自己为好友，也不需要加同一个人多次好友。</p><p>在无向图中，如果任意两个顶点之间都存在边，则称该图为无向完全图。如图5所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/12/29/126a6809e3f6ac87dea945ece56fe729.jpg?wh=1521x698\" alt=\"\" title=\"图5 无向完全图\"></p><p>仔细观察后会发现，<strong>含有n个顶点的无向完全图有</strong>$\\frac{n(n-1)}{2}$<strong>条边</strong>。比如图5，一共有5个顶点，每个顶点有4条边，所以一共有20条边，但因为边是两两重复的，比如顶点A与顶点B的边也是顶点B与顶点A的边，所以边数要除以2也就是20/2=10条边。</p><p>在有向图中，如果任意两个顶点之间都存在方向相反的两条弧，则称该图为有向完全图。如图6所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/26/73/26724f7477fc73c6b358cef4e8a7f873.jpg?wh=1348x653\" alt=\"\" title=\"图6 有向完全图\"></p><p>从图6中不难看到，含有5个顶点的有向完全图含有20条边，因此，<strong>含有n个顶点的有向完全图有n(n-1)条边</strong>。</p><p>有很少条边或者弧的图称为<strong>稀疏图</strong>，反之称为<strong>稠密图</strong>。这里稀疏和稠密都是相对而言的，并不是一个精确的数值。</p><h3>顶点的度、入度、出度</h3><p>针对边的讨论结束之后，我们看看和顶点相关的一些概念。</p><p>在无向图中，<strong>顶点v的度</strong><span class=\"reference\">（Degree）</span>是和v相关联的边的数目，记为TD(v)。</p><p>比如图1中，顶点A的度为3。深入思考一下，无向图中，因为一条边可以给与这条边相连接的两个顶点分别提供1度，所以，<strong>无向图中所有顶点的度之和就应该是边数*2，即2|E|</strong>。</p><p>在有向图中，以顶点v为终点<span class=\"reference\">（箭头指向v）</span>的有向边的数目称为顶点v的<strong>入度<span class=\"reference\">（InDegree）</span></strong>，记为ID(v)。以顶点v为起点的有向边的数目称为顶点v的<strong>出度<span class=\"reference\">（OutDegree）</span></strong>，记为OD(v)。所以，有向图中顶点v的度等于其<strong>入度和出度之和</strong>，既TD(v)=ID(v)+OD(v)。</p><p>比如图3中，顶点A的入度为1，出度为3，所以顶点A的度为4。有向图中，因为一条边可以给与这条边相连接的两个顶点分别提供1出度和1入度，所以<strong>有向图所有顶点的入度之和与出度之和相等并且等于弧的数量</strong>。</p><h3>顶点之间的关系、路径、边</h3><p>现在，我们可以把顶点和边联系起来了。</p><p>顶点$v_{m}$和顶点$v_{n}$的<strong>路径</strong>是一个顶点序列$v_{m}$,$v_{1}$,$v_{2}$,$v_{3}$,……$v_{n}$，该序列中的顶点属于图中的顶点集合。两个顶点的路径并不唯一，图7展示了无向图中从顶点B到D四种不同的路径，如粗线条所示<span class=\"reference\">（当然还有更多）</span>。</p><p><img src=\"https://static001.geekbang.org/resource/image/7e/20/7ea9c5fc3a44e330a494f94ee6e61420.jpg?wh=2550x793\" alt=\"\" title=\"图7 无向图从顶点B到顶点D的四种不同路径\"></p><p>这里注意，对于有向图，路径也是有向的，图8展示了有向图中从顶点A到顶点D的两种不同路径。而对于B到A之间就不存在路径。</p><p><img src=\"https://static001.geekbang.org/resource/image/f6/69/f6b4501a357260e8e7327a0274eba269.jpg?wh=1977x792\" alt=\"\" title=\"图8 有向图从顶点A到顶点D的两种不同路径\"></p><p>我们把第一个顶点和最后一个顶点相同的路径称为<strong>回路</strong>或<strong>环</strong>。如图9所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/36/fb/36b4ba95a1d392dec39468d9b5b2a7fb.jpg?wh=1878x683\" alt=\"\" title=\"图9 有向图和无向图中的环\"></p><p>这么多的路径，其实也是涉及了一些专有名词的，我把它列在这里，你可以参考。</p><p><strong>简单路径</strong>：在路径序列中顶点不重复出现的路径称为简单路径。图7中，从顶点A到顶点D可以有多种不同路径，比如A、B、A、D这个路径，因为顶点A重复出现了，所以这就不是一个简单路径。</p><p><strong>简单回路/简单环</strong>：除第一个顶点和最后一个顶点，其余顶点不重复出现的回路叫简单回路或简单环。</p><p><strong>路径长度</strong>：路径上的边或弧的数目。图7中的四幅图路径长度分别为1、2、2、3，图8中的两幅图路径长度分别为3、1。</p><p><strong>点到点的距离</strong>：从顶点$v_{m}$到$v_{n}$的<strong>最短路径</strong>如果存在，则此路径的长度称为从顶点$v_{m}$到$v_{n}$的距离，如果$v_{m}$到$v_{n}$之间不存在路径，则称他们之间的距离为<strong>无穷（∞）</strong>。</p><p>无向图中，若从顶点$v_{m}$到$v_{n}$之间有路径存在，则称$v_{m}$和$v_{n}$是<strong>连通</strong>的。图10中，顶点F与其他顶点之间不连通，而除F外的其他顶点是彼此连通的。</p><p><img src=\"https://static001.geekbang.org/resource/image/e2/cf/e2b41188e8acfb1d73df117094fe1ecf.jpg?wh=1526x646\" alt=\"\" title=\"图10 无向图中顶点连通与不连通展示\"></p><p>有向图中，若从顶点$v_{m}$到$v_{n}$之间和从顶点$v_{n}$到$v_{m}$之间都有路径，则称这两个<strong>顶点是强连通</strong>的。图3中，顶点A和D之间就是强连通的，而顶点A和B之间就不是强连通的，因为从B到A不存在路径。</p><p>有些图的边或弧有与其相关的数字，这种与图的边或者弧相关的数字叫<strong>权</strong><span class=\"reference\">（Weight）</span>或者<strong>权值</strong>。这些权值可以表示从一个顶点到另一个顶点的距离、时间、票价等数据。这种带权的图通常称为<strong>带权图</strong>或<strong>网</strong>。如图11所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/35/77/35146cc062dc80f665e86dfea64b3977.jpg?wh=1321x631\" alt=\"\" title=\"图11 网\"></p><h3>连通图、子图</h3><p>局部的顶点、边了解完之后，我们再将视角放大，着眼于整张图。</p><p>如果<strong>无向</strong>图中任意两个顶点都是连通的，则称图为<strong>连通图</strong>，否则称为<strong>非连通图</strong>。比如前面的图1就是一个连通图。不难想象得出这么几个结论。</p><ul>\n<li>\n<p><strong>对于具有n个顶点的无向图，如果是连通图，则最少要有n-1条边</strong>。简单绘制一个有3个顶点的无向图，你就能得到结论。</p>\n</li>\n<li>\n<p><strong>对于具有n个顶点的无向图，如果是非连通图，则最多只能有</strong>$\\frac{(n-1)(n-2)}{2}$<strong>条边</strong>。</p>\n</li>\n</ul><p>如何推出这个结论呢？试想，含有n个顶点的无向完全图有$\\frac{n(n-1)}{2}$条边，比如含有5个顶点的无向完全图有10条边，那么如果再增加进来一个顶点变成6个顶点，现在只要将这个新增加的顶点和任意其他顶点连线，就构成了连通图，所以6个顶点的非连通图最多只能有10条边。</p><p>而如果<strong>有向图</strong>中任意一对顶点都是强连通的呢？那我们称此图为<strong>强连通图</strong>，如图12所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c8/58/c88ae9531437ef598f55ab3f2b572558.jpg?wh=1286x602\" alt=\"\" title=\"图12 强连通图\"></p><p>不难想象，对于有n个顶点的有向图，若是强连通图，则最少要有n条边以构成回路，如图13所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/16/d037e0f53779bddfdccfe4b1e66b5616.jpg?wh=1254x578\" alt=\"\" title=\"图13 含有5个顶点的有向图最少要有5条边才构成强连通图\"></p><p>我们假设有图一和图二两个图，如果图二的顶点是图一的顶点的子集，并且图二的边是图一边的子集，则称图二是图一的<strong>子图</strong>。如果子图包含原图的所有顶点，则称该子图为原图的一个<strong>生成子图</strong>，图14从第2个图开始的图都是第1个图的子图，而最后一个子图是原图的生成子图。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/29/85b6ded4b55aa61c14d54d67b0188329.jpg?wh=2805x1380\" alt=\"\" title=\"图14 无向图和有向图的子图\"></p><p><strong>连通分量</strong>：无向图中的<strong>极大连通子图</strong>称为连通分量。换句话说，极大连通子图必须连通并且包含尽可能多的顶点和边，如图15所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/5f/ef/5f6548e48efa5e7392a2c0837f7709ef.jpg?wh=2881x1163\" alt=\"\" title=\"图15 无向图和无向图的4个连通分量\"></p><p>举个例子，全国各个城市的地铁网，比如上海地铁网是全国地铁网的连通分量，深圳地铁网是全国地铁网的连通分量，诸如此类。</p><p><strong>强连通分量</strong>：<strong>有向图中的极大强连通子图</strong>称为强连通分量。这里的强连通意味着两两可达。如图16所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/e4/10/e4040caae7b38d10a3ac28f2b7d80010.jpg?wh=2082x833\" alt=\"\" title=\"图16 有向图和有向图的3个强连通分量\"></p><h3>生成树、生成森林</h3><p>一个无向的连通图的生成树是包含图中全部顶点的一个极小的连通子图。这里的极小指边尽可能要少，如图17所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/83/50/837e091f69ee2aa25d75e8b544c66450.jpg?wh=2780x809\" alt=\"\" title=\"图17 无向连通图和无向连通图的3个生成树\"></p><p>从图17可以看到，无向连通图的生成树可以有多个，生成树中如果有n个顶点，则必须有n-1条边。因为我们前面讲解过，n个顶点的无向图，如果是连通图，则最少要有n-1条边。话说回来，<strong>如果一个无向图有n个顶点和小于n-1条边，则肯定是非连通图。如果它多于n-1条边，则一定有回路<span class=\"reference\">（环）</span></strong>。但有n-1条边的图不一定是生成树，因为生成树要求连通。</p><p>你可以想象一下通往各个城市的道路铺设场景，其中就可以用到生成树。<strong>生成树</strong>既可以保证各个城市之间彼此都可以到达，又可以保证铺设的道路尽可能少，而后可以在多个生成树中挑选最优的生成树方案。比如如果想最节省成本，就可以把修每段路<span class=\"reference\">（边）</span>的价格作为权值来计算总成本并最终挑选出总成本最少的修路方案如图18所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/2b/ce/2b03fd680226f936d4b912178a0db6ce.jpg?wh=1677x631\" alt=\"\" title=\"图18 带权值的无向连通图\"></p><p>当图是带权图时，一条路径上所有边的权值之和称为<strong>带权路径长度</strong>。</p><p>在无向非连通图中，连通分量的生成树构成了无向非连通图的<strong>生成森林</strong>。参照图15绘制图19：</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/5c/3d3540e00468db70de00b9273e5bb95c.jpg?wh=2836x1034\" alt=\"\" title=\"图19 无向非连通图的生成森林\"></p><h3>树、有向树</h3><p>最后需要注意的是，在无向图中，<strong>树</strong>是连通且<strong>不存在回路</strong>的，如图20所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/45/a855f9e4a69e94a561c4755b69417b45.jpg?wh=2542x907\" alt=\"\" title=\"图20 被称为树的无向图\"></p><p>从图20可以看到，以E、A为根向下绘制看起来更像一棵树，当然，以任何其他顶点为根都是可以的。请注意，具有n个顶点的树，必然会有n-1条边，否则一定会是有回路的。</p><p>而在有向图中，一个顶点的入度为0，其余顶点的入度均为1，称为<strong>有向树</strong>，如图21所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/94/b7/94810968fe03ee1e5e220698a444ebb7.jpg?wh=1999x689\" alt=\"\" title=\"图21 被称为有向树的有向图\"></p><p>图21就是有向树，其中入度为0的顶点可以当做树的根，所以顶点E作为根。</p><h2>小结</h2><p>这节课我们讲解的关于图的概念不少，不必死记硬背，主要是为了我们后续学习的时候，你有一个随时可回顾的依据。我把今天的内容分成了几个主题，把主题以及主题中一些比较重要的文字列举出来作为线索，供你重点理解和记忆。</p><p><strong>主题一：顶点、边、阶</strong></p><p><strong>主题二：无向图、有向图、简单图、多重图、完全图</strong></p><ul>\n<li>含有n个顶点的无向完全图有$\\frac{n(n-1)}{2}$条边。</li>\n<li>含有n个顶点的有向完全图有n(n-1)条边。</li>\n</ul><p><strong>主题三：顶点的度、入度、出度</strong></p><ul>\n<li>无向图中所有顶点的度之和是边数*2，即2|E|。</li>\n<li>有向图所有顶点的入度之和与出度之和相等并且等于弧的数量。</li>\n</ul><p><strong>主题四：顶点之间的关系、路径、边</strong></p><p><strong>主题五：连通图、子图</strong></p><ul>\n<li>对于具有n个顶点的无向图，如果是连通图，则最少要有n-1条边。</li>\n<li>对于具有n个顶点的无向图，如果是非连通图，则最多只能有$\\frac{(n-1)(n-2)}{2}$条边。</li>\n<li>对于有n个顶点的有向图，若是强连通图，则最少要有n条边以构成回路。</li>\n</ul><p><strong>主题六：生成树、生成森林</strong></p><ul>\n<li>如果一个无向图有n个顶点和小于n-1条边，则肯定是非连通图。如果它多于n-1条边，则一定有回路<span class=\"reference\">（环）</span>。</li>\n</ul><p><strong>主题七：树、有向树</strong></p><p>此外，我把图中涉及的概念整理成图22方便你复习。</p><p><img src=\"https://static001.geekbang.org/resource/image/57/68/576bdfc97b060d589e0d6a1d8b98c568.jpg?wh=2340x1303\" alt=\"\"><img src=\"https://static001.geekbang.org/resource/image/63/7a/63f611fdc755f0f1db391fdeb8b7837a.jpg?wh=2087x883\" alt=\"\" title=\"图22 图的基本概念、术语和需要有印象的内容整理总结\"></p><h2>课后思考</h2><p>你能想到的图的应用有哪些呢？</p><p>欢迎你在留言区分享自己的思考。如果觉得有所收获，也可以把课程分享给更多的朋友一起学习进步。我们下一讲见！</p>","neighbors":{"left":{"article_title":"22｜树、森林、二叉树：相互之间的转换","id":645613},"right":{"article_title":"24｜图的存储（上）：邻接矩阵、邻接表和十字链表有什么不同？","id":646743}},"comments":[{"had_liked":false,"id":380237,"user_name":"Geek_98de44","can_delete":false,"product_type":"c1","uid":3695579,"ip_address":"四川","ucode":"A615851285A7A2","user_header":"","comment_is_top":false,"comment_ctime":1693239248,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100524201,"comment_content":"老师，您好，我想问下你画图用的是啥软件呀，感觉你每篇文章的图片都好生动！图文并茂！","like_count":1,"discussions":[{"author":{"id":1437884,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/bc/65543e09.jpg","nickname":"铁甲依然在","note":"","ucode":"7487E704441849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630087,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698114752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}