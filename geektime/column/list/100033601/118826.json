{"id":118826,"title":"06 | 渲染流程（下）：HTML、CSS和JavaScript，是如何变成页面的？","content":"<p>在<a href=\"https://time.geekbang.org/column/article/118205\">上篇文章</a>中，我们介绍了渲染流水线中的<strong>DOM生成、样式计算</strong>和<strong>布局</strong>三个阶段，那今天我们接着讲解渲染流水线后面的阶段。</p><p>这里还是先简单回顾下上节前三个阶段的主要内容：在HTML页面内容被提交给渲染引擎之后，渲染引擎首先将HTML解析为浏览器可以理解的DOM；然后根据CSS样式表，计算出DOM树所有节点的样式；接着又计算每个元素的几何坐标位置，并将这些信息保存在布局树中。</p><h2>分层</h2><p>现在我们有了布局树，而且每个元素的具体位置信息都计算出来了，那么接下来是不是就要开始着手绘制页面了？</p><p>答案依然是否定的。</p><p>因为页面中有很多复杂的效果，如一些复杂的3D变换、页面滚动，或者使用z-indexing做z轴排序等，为了更加方便地实现这些效果，<strong>渲染引擎还需要为特定的节点生成专用的图层，并生成一棵对应的图层树</strong>（LayerTree）。如果你熟悉PS，相信你会很容易理解图层的概念，正是这些图层叠加在一起构成了最终的页面图像。</p><p>要想直观地理解什么是图层，你可以打开Chrome的“开发者工具”，选择“Layers”标签，就可以可视化页面的分层情况，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/e2/c0/e2c917edf5119cddfbec9481372f8fc0.png?wh=1142*1075\" alt=\"\"></p><center><span class=\"reference\">渲染引擎给页面多图层示意图</span></center><p>从上图可以看出，渲染引擎给页面分了很多图层，这些图层按照一定顺序叠加在一起，就形成了最终的页面，你可以参考下图：</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/cd/78/cd6aac705501d48bda6e8eebca058b78.png?wh=1142*868\" alt=\"\"></p><center><span class=\"reference\">图层叠加的最终展示页面</span></center><p>现在你知道了<strong>浏览器的页面实际上被分成了很多图层，这些图层叠加后合成了最终的页面</strong>。下面我们再来看看这些图层和布局树节点之间的关系，如文中图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/e8/61/e8a7e60a2a08e05239456284d2aa4061.png?wh=1142*674\" alt=\"\"></p><center><span class=\"reference\">布局树和图层树关系示意图</span></center><p>通常情况下，<strong>并不是布局树的每个节点都包含一个图层，如果一个节点没有对应的层，那么这个节点就从属于父节点的图层</strong>。如上图中的span标签没有专属图层，那么它们就从属于它们的父节点图层。但不管怎样，最终每一个节点都会直接或者间接地从属于一个层。</p><p>那么需要满足什么条件，渲染引擎才会为特定的节点创建新的图层呢？通常满足下面两点中任意一点的元素就可以被提升为单独的一个图层。</p><p><strong>第一点，拥有层叠上下文属性的元素会被提升为单独的一层。</strong></p><p>页面是个二维平面，但是层叠上下文能够让HTML元素具有三维概念，这些HTML元素按照自身属性的优先级分布在垂直于这个二维平面的z轴上。你可以结合下图来直观感受下：</p><p><img src=\"https://static001.geekbang.org/resource/image/a0/19/a03eb12053aac1ac496b61a424f20119.png?wh=1142*601\" alt=\"\"></p><center><span class=\"reference\">层叠上下文示意图</span></center><p>从图中可以看出，明确定位属性的元素、定义透明属性的元素、使用CSS滤镜的元素等，都拥有层叠上下文属性。</p><p>若你想要了解更多层叠上下文的知识，你可以<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context\">参考这篇文章</a>。</p><p><strong>第二点，需要剪裁（clip）的地方也会被创建为图层。</strong></p><p>不过首先你需要了解什么是剪裁，结合下面的HTML代码：</p><pre><code>&lt;style&gt;\n      div {\n            width: 200;\n            height: 200;\n            overflow:auto;\n            background: gray;\n        } \n&lt;/style&gt;\n&lt;body&gt;\n    &lt;div &gt;\n        &lt;p&gt;所以元素有了层叠上下文的属性或者需要被剪裁，那么就会被提升成为单独一层，你可以参看下图：&lt;/p&gt;\n        &lt;p&gt;从上图我们可以看到，document层上有A和B层，而B层之上又有两个图层。这些图层组织在一起也是一颗树状结构。&lt;/p&gt;\n        &lt;p&gt;图层树是基于布局树来创建的，为了找出哪些元素需要在哪些层中，渲染引擎会遍历布局树来创建层树（Update LayerTree）。&lt;/p&gt; \n    &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>在这里我们把div的大小限定为200 * 200像素，而div里面的文字内容比较多，文字所显示的区域肯定会超出200 * 200的面积，这时候就产生了剪裁，渲染引擎会把裁剪文字内容的一部分用于显示在div区域，下图是运行时的执行结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/6a/0c/6a583733735edc1e4d7946740eb6fc0c.png?wh=664*466\" alt=\"\"></p><center><span class=\"reference\">剪裁执行结果</span></center><p>出现这种裁剪情况的时候，渲染引擎会为文字部分单独创建一个层，如果出现滚动条，滚动条也会被提升为单独的层。你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/97/7b6ceaab23c6c6d8e5930864ff9d7097.png?wh=1142*403\" alt=\"\"></p><center><span class=\"reference\">被裁剪的内容会出现在单独一层</span></center><p>所以说，元素有了层叠上下文的属性或者需要被剪裁，满足其中任意一点，就会被提升成为单独一层。</p><h2>图层绘制</h2><p>在完成图层树的构建之后，渲染引擎会对图层树中的每个图层进行绘制，那么接下来我们看看渲染引擎是怎么实现图层绘制的？</p><p>试想一下，如果给你一张纸，让你先把纸的背景涂成蓝色，然后在中间位置画一个红色的圆，最后再在圆上画个绿色三角形。你会怎么操作呢？</p><p>通常，你会把你的绘制操作分解为三步：</p><ol>\n<li>绘制蓝色背景；</li>\n<li>在中间绘制一个红色的圆；</li>\n<li>再在圆上绘制绿色三角形。</li>\n</ol><p>渲染引擎实现图层的绘制与之类似，会把一个图层的绘制拆分成很多小的<strong>绘制指令</strong>，然后再把这些指令按照顺序组成一个待绘制列表，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/40/08/40825a55214a7990bba6b9bec6e54108.png?wh=1142*603\" alt=\"\"></p><center><span class=\"reference\">绘制列表</span></center><p>从图中可以看出，绘制列表中的指令其实非常简单，就是让其执行一个简单的绘制操作，比如绘制粉色矩形或者黑色的线等。而绘制一个元素通常需要好几条绘制指令，因为每个元素的背景、前景、边框都需要单独的指令去绘制。所以在图层绘制阶段，输出的内容就是这些待绘制列表。</p><p>你也可以打开“开发者工具”的“Layers”标签，选择“document”层，来实际体验下绘制列表，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/30/70/303515c26fcd4eaa9b9966ad7f190370.png?wh=1142*512\" alt=\"\"></p><center><span class=\"reference\">一个图层的绘制列表</span></center><p>在该图中，区域1就是document的绘制列表，拖动区域2中的进度条可以重现列表的绘制过程。</p><h2>栅格化（raster）操作</h2><p>绘制列表只是用来记录绘制顺序和绘制指令的列表，而实际上绘制操作是由渲染引擎中的合成线程来完成的。你可以结合下图来看下渲染主线程和合成线程之间的关系：</p><p><img src=\"https://static001.geekbang.org/resource/image/46/41/46d33b6e5fca889ecbfab4516c80a441.png?wh=1142*464\" alt=\"\"></p><center><span class=\"reference\">渲染进程中的合成线程和主线程</span></center><p>如上图所示，当图层的绘制列表准备好之后，主线程会把该绘制列表<strong>提交（commit）</strong>给合成线程，那么接下来合成线程是怎么工作的呢？</p><p>那我们得先来看看什么是视口，你可以参看下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/24/72/242225112f2a3ec97e736c960b88d972.png?wh=1142*1091\" alt=\"\"></p><center><span class=\"reference\">视口</span></center><p>通常一个页面可能很大，但是用户只能看到其中的一部分，我们把用户可以看到的这个部分叫做<strong>视口</strong>（viewport）。</p><p>在有些情况下，有的图层可以很大，比如有的页面你使用滚动条要滚动好久才能滚动到底部，但是通过视口，用户只能看到页面的很小一部分，所以在这种情况下，要绘制出所有图层内容的话，就会产生太大的开销，而且也没有必要。</p><p>基于这个原因，<strong>合成线程会将图层划分为图块（tile）</strong>，这些图块的大小通常是256x256或者512x512，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/bc/52/bcc7f6983d5ece8e2dd716f431d0e052.png?wh=1142*995\" alt=\"\"></p><center><span class=\"reference\">图层被划分为图块示意图</span></center><p>然后<strong>合成线程会按照视口附近的图块来优先生成位图，实际生成位图的操作是由栅格化来执行的。所谓栅格化，是指将图块转换为位图</strong>。而图块是栅格化执行的最小单位。渲染进程维护了一个栅格化的线程池，所有的图块栅格化都是在线程池内执行的，运行方式如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/d8/20/d8d77356211e12b47bb9f508e2db8520.png?wh=1142*677\" alt=\"\"></p><center><span class=\"reference\">合成线程提交图块给栅格化线程池</span></center><p>通常，栅格化过程都会使用GPU来加速生成，使用GPU生成位图的过程叫快速栅格化，或者GPU栅格化，生成的位图被保存在GPU内存中。</p><p>相信你还记得，GPU操作是运行在GPU进程中，如果栅格化操作使用了GPU，那么最终生成位图的操作是在GPU中完成的，这就涉及到了跨进程操作。具体形式你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/87/a8d954cd8e4722ee03d14afaa14c3987.png?wh=1142*857\" alt=\"\"></p><center><span class=\"reference\">GPU栅格化</span></center><p>从图中可以看出，渲染进程把生成图块的指令发送给GPU，然后在GPU中执行生成图块的位图，并保存在GPU的内存中。</p><h2>合成和显示</h2><p>一旦所有图块都被光栅化，合成线程就会生成一个绘制图块的命令——“DrawQuad”，然后将该命令提交给浏览器进程。</p><p>浏览器进程里面有一个叫viz的组件，用来接收合成线程发过来的DrawQuad命令，然后根据DrawQuad命令，将其页面内容绘制到内存中，最后再将内存显示在屏幕上。</p><p>到这里，经过这一系列的阶段，编写好的HTML、CSS、JavaScript等文件，经过浏览器就会显示出漂亮的页面了。</p><h2>渲染流水线大总结</h2><p>好了，我们现在已经分析完了整个渲染流程，从HTML到DOM、样式计算、布局、图层、绘制、光栅化、合成和显示。下面我用一张图来总结下这整个渲染流程：</p><p><img src=\"https://static001.geekbang.org/resource/image/97/37/975fcbf7f83cc20d216f3d68a85d0f37.png?wh=1142*745\" alt=\"\"></p><center><span class=\"reference\">完整的渲染流水线示意图</span></center><p>结合上图，一个完整的渲染流程大致可总结为如下：</p><ol>\n<li>渲染进程将HTML内容转换为能够读懂的<strong>DOM树</strong>结构。</li>\n<li>渲染引擎将CSS样式表转化为浏览器可以理解的<strong>styleSheets</strong>，计算出DOM节点的样式。</li>\n<li>创建<strong>布局树</strong>，并计算元素的布局信息。</li>\n<li>对布局树进行分层，并生成<strong>分层树</strong>。</li>\n<li>为每个图层生成<strong>绘制列表</strong>，并将其提交到合成线程。</li>\n<li>合成线程将图层分成<strong>图块</strong>，并在<strong>光栅化线程池</strong>中将图块转换成位图。</li>\n<li>合成线程发送绘制图块命令<strong>DrawQuad</strong>给浏览器进程。</li>\n<li>浏览器进程根据DrawQuad消息<strong>生成页面</strong>，并<strong>显示</strong>到显示器上。</li>\n</ol><h2>相关概念</h2><p>有了上面介绍渲染流水线的基础，我们再来看看三个和渲染流水线相关的概念——<strong>“重排”“重绘”和“合成”</strong>。理解了这三个概念对于你后续Web的性能优化会有很大帮助。</p><h3>1. 更新了元素的几何属性（重排）</h3><p>你可先参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/b3/e5/b3ed565230fe4f5c1886304a8ff754e5.png?wh=1142*318\" alt=\"\"></p><center><span class=\"reference\">更新元素的几何属性</span></center><p>从上图可以看出，如果你通过JavaScript或者CSS修改元素的几何位置属性，例如改变元素的宽度、高度等，那么浏览器会触发重新布局，解析之后的一系列子阶段，这个过程就叫<strong>重排</strong>。无疑，<strong>重排需要更新完整的渲染流水线，所以开销也是最大的</strong>。</p><h3>2. 更新元素的绘制属性（重绘）</h3><p>接下来，我们再来看看重绘，比如通过JavaScript更改某些元素的背景颜色，渲染流水线会怎样调整呢？你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/03/3c1b7310648cccbf6aa4a42ad0202b03.png?wh=1142*286\" alt=\"\"></p><center><span class=\"reference\">更新元素背景</span></center><p>从图中可以看出，如果修改了元素的背景颜色，那么布局阶段将不会被执行，因为并没有引起几何位置的变换，所以就直接进入了绘制阶段，然后执行之后的一系列子阶段，这个过程就叫<strong>重绘</strong>。相较于重排操作，<strong>重绘省去了布局和分层阶段，所以执行效率会比重排操作要高一些</strong>。</p><h3>3. 直接合成阶段</h3><p>那如果你更改一个既不要布局也不要绘制的属性，会发生什么变化呢？渲染引擎将跳过布局和绘制，只执行后续的合成操作，我们把这个过程叫做<strong>合成</strong>。具体流程参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/02/2c/024bf6c83b8146d267f476555d953a2c.png?wh=1142*270\" alt=\"\"></p><center><span class=\"reference\">避开重排和重绘</span></center><p>在上图中，我们使用了CSS的transform来实现动画效果，这可以避开重排和重绘阶段，直接在非主线程上执行合成动画操作。这样的效率是最高的，因为是在非主线程上合成，并没有占用主线程的资源，另外也避开了布局和绘制两个子阶段，所以<strong>相对于重绘和重排，合成能大大提升绘制效率</strong>。</p><p>至于如何用这些概念去优化页面，我们会在后面相关章节做详细讲解的，这里你只需要先结合“渲染流水线”弄明白这三个概念及原理就行。</p><h2>总结</h2><p>通过本文的分析，你应该可以看到，Chrome的渲染流水线还是相当复杂晦涩，且难以理解，不过Chrome团队在不断添加新功能的同时，也在不断地重构一些子阶段，目的就是<strong>让整体渲染架构变得更加简单和高效</strong>，正所谓大道至简。</p><p>通过这么多年的生活和工作经验来看，无论是做架构设计、产品设计，还是具体到代码的实现，甚至处理生活中的一些事情，能够把复杂问题简单化的人都是具有大智慧的。所以，在工作或生活中，你若想要简化遇到的问题，就要刻意地练习，练就抓住问题本质的能力，把那些复杂的问题简单化，从而最终真正解决问题。</p><h2>思考时间</h2><p>在优化Web性能的方法中，减少重绘、重排是一种很好的优化方式，那么结合文中的分析，你能总结出来为什么减少重绘、重排能优化Web性能吗？那又有那些具体的实践方法能减少重绘、重排呢？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":125125,"user_name":"Hurry","can_delete":false,"product_type":"c1","uid":1138560,"ip_address":"","ucode":"12FEE2A50CC667","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/80/51269d88.jpg","comment_is_top":false,"comment_ctime":1566094824,"is_pvip":false,"replies":[{"id":"46014","content":"总结的很好，很有经验👍","user_name":"作者回复","comment_id":125125,"uid":"1141464","ip_address":"","utype":1,"ctime":1566174001,"user_name_real":"李兵"}],"discussion_count":16,"race_medal":0,"score":"809019946472","product_id":100033601,"comment_content":"减少重排重绘, 方法很多：<br>1. 使用 class 操作样式，而不是频繁操作 style<br>2. 避免使用 table 布局<br>3. 批量dom 操作，例如 createDocumentFragment，或者使用框架，例如 React<br>4. Debounce window resize 事件<br>5. 对 dom 属性的读写要分离 <br>6. will-change: transform 做优化","like_count":189,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463446,"discussion_content":"总结的很好，很有经验👍","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566174001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2807902,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/d8/5e/3548334f.jpg","nickname":"Aki","note":"","ucode":"B862D9A2F21480","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588471,"discussion_content":"减少重排重绘, 方法很多：\n1. 使用 class 操作样式，而不是频繁操作 style： 通过使用 class 来集中修改样式，而不是通过 style 一个一个的修改。\n2. 避免使用 table 布局: \n    1) 由于浏览器使用流式布局，对 Render Tree 的计算通常只需要遍历一次就可以完成，但 Table 及内部元素除外，通常需要多次计算且需花费3倍同等元素时间。\n    2) 其次，很小的改动可能会导致整个 table 都重新布局\n3. 批量dom 操作，例如 createDocumentFragment，或者使用框架，例如 React：批量操作 DOM 可以减少重排重绘的次数\n4. Debounce window resize 事件： 防抖可以防止频繁触发重排重绘，例如 window resize 可以设置为 1s 内只可以触发一次\n5. 对 dom 属性的读写要分离 ：\n```\ndiv.style.left = &#39;10px&#39;;// 写\nconsole.log(div.offsetLeft);// 读 会触发立即执行渲染队列的任务\ndiv.style.top = &#39;10px&#39;;\nconsole.log(div.offsetTop);\ndiv.style.width = &#39;20px&#39;;\nconsole.log(div.offsetWidth);\ndiv.style.height = &#39;20px&#39;;\nconsole.log(div.offsetHeight);\n// 以上代码会触发4次重排+重绘\n```\n修改为读写分离操作，触发一次重排\n```\ndiv.style.left = &#39;10px&#39;;\ndiv.style.top = &#39;10px&#39;;\ndiv.style.width = &#39;20px&#39;;\ndiv.style.height = &#39;20px&#39;;\nconsole.log(div.offsetLeft);\nconsole.log(div.offsetTop);\nconsole.log(div.offsetWidth);\nconsole.log(div.offsetHeight);\n\n作者：OBKoro1\n链接：https://juejin.cn/post/6844903745914929165\n来源：稀土掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n```\n\n6. will-change: transform 做优化： 使浏览器提前准备好过渡动画","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663775685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2281198,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ce/ee/caff90d3.jpg","nickname":"曦曦","note":"","ucode":"0CA502659324EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368364,"discussion_content":"我曾经有个根据数据和格式配置动态绘制1000行表格的场景，用dom操作，一行一行画，速度很慢。优化过程我用离线dom操作，或者先把表格隐藏绘制完再显示。速度依然很慢，几乎没有什么提升。最后用文本拼接的方式才有明显效果，一秒左右完成，原来要十几秒。很奇怪，不可见的dom元素操作为什么没有优化效果？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618669844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1374337,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","nickname":"1830","note":"","ucode":"246FEF7C97F39C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2281198,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ce/ee/caff90d3.jpg","nickname":"曦曦","note":"","ucode":"0CA502659324EA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378386,"discussion_content":"可能是创建真实dom的开销比较大，dom本身就是一个复杂属性的对象，没有显示只是避免了渲染开销，但是还应该要创建dom节点，这个和字符串没法比，字符串开销基本上为0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623203102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368364,"ip_address":""},"score":378386,"extra":""},{"author":{"id":1106877,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e3/bd/4f1f432c.jpg","nickname":"向上","note":"","ucode":"C9D3001AD1B045","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2281198,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ce/ee/caff90d3.jpg","nickname":"曦曦","note":"","ucode":"0CA502659324EA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386215,"discussion_content":"文本拼接应该相当于写好了html代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627473420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368364,"ip_address":""},"score":386215,"extra":""}]},{"author":{"id":2151580,"avatar":"https://static001.geekbang.org/account/avatar/00/20/d4/9c/0f3849ed.jpg","nickname":"小乖乖","note":"","ucode":"268EEDDD674FF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361680,"discussion_content":"每一点可以解释一下吗\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616727059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374075,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/7b/bd2d9d0c.jpg","nickname":"(ಡωಡ)hahaha","note":"","ucode":"8EC05C5DF56770","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74886,"discussion_content":"为什么使用 class 操作样式，而不是频繁操作 style，可以减少重排重绘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575702059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1481833,"avatar":"https://static001.geekbang.org/account/avatar/00/16/9c/69/f2d4aac9.jpg","nickname":"奔跑的蜗牛","note":"","ucode":"FD283F2E751AC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1374075,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/7b/bd2d9d0c.jpg","nickname":"(ಡωಡ)hahaha","note":"","ucode":"8EC05C5DF56770","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94927,"discussion_content":"我也没有理解这点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577000583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74886,"ip_address":""},"score":94927,"extra":""},{"author":{"id":1461874,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep9YJn3TCo32eYDJpgoNGSHNs4nqWGKre6K5E2hMaPMHicfz8nibx1f1Re75qAKyPVJGSlBAQ5bibAlw/132","nickname":"william","note":"","ucode":"071ACBACCE917E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1374075,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/7b/bd2d9d0c.jpg","nickname":"(ಡωಡ)hahaha","note":"","ucode":"8EC05C5DF56770","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":117941,"discussion_content":"可以看看这篇文章  https://juejin.im/post/5c15f797f265da61141c7f86","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1578145427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74886,"ip_address":""},"score":117941,"extra":""},{"author":{"id":1274328,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLicryBoLjDicckia0c5bkOoAlYoR2I9NMK8BiaD7HCGxhS1eM9YSfDuUJuZC90uwv9FvHIVSsBoxFgZw/132","nickname":"MwumLi","note":"","ucode":"9A8A72334ADF6E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1481833,"avatar":"https://static001.geekbang.org/account/avatar/00/16/9c/69/f2d4aac9.jpg","nickname":"奔跑的蜗牛","note":"","ucode":"FD283F2E751AC0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143336,"discussion_content":"应该是利用 class 集中改变样式","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1579501631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":94927,"ip_address":""},"score":143336,"extra":""}]},{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":59416,"discussion_content":"第五个是为啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574688397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1046745,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/d9/dc58bb9b.jpg","nickname":"SUNTOPO","note":"","ucode":"0DD7492725962C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132380,"discussion_content":"读的前提是绘制出来，读应该会触发绘制","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578902934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":59416,"ip_address":""},"score":132380,"extra":""},{"author":{"id":1903203,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/0a/63/35ae2c7a.jpg","nickname":"陈文涛","note":"","ucode":"F2F5ACD7794D3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204498,"discussion_content":" 读写分离，div.style.left = &#39;10px&#39;;\ndiv.style.top = &#39;10px&#39;;\ndiv.style.width = &#39;20px&#39;;\ndiv.style.height = &#39;20px&#39;;\nconsole.log(div.offsetLeft); // 会进行一次重排\nconsole.log(div.offsetTop);\nconsole.log(div.offsetWidth);\nconsole.log(div.offsetHeight);\n样式的设置是放入渲染队列中的，获取样式属性值，会直接将渲染队列中的设置全部执行完。像这样读写分离的话，只执行了一次重排。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584182386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":59416,"ip_address":""},"score":204498,"extra":""},{"author":{"id":1944577,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ac/01/7e13be41.jpg","nickname":"Jehan","note":"","ucode":"F59071B670A6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1903203,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/0a/63/35ae2c7a.jpg","nickname":"陈文涛","note":"","ucode":"F2F5ACD7794D3B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306934,"discussion_content":"重排肯定会触发重绘啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600421948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":204498,"ip_address":""},"score":306934,"extra":""}]}]},{"had_liked":false,"id":188393,"user_name":"Zkerhcy","can_delete":false,"product_type":"c1","uid":1231133,"ip_address":"","ucode":"43A883F6FB6070","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","comment_is_top":false,"comment_ctime":1584348354,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"796153298114","product_id":100033601,"comment_content":"浏览器工作流程『从输入 URL 到页面展示』学习笔记<br><br>导航<br><br>用户输入<br><br>1. 用户在地址栏按下回车，检查输入（关键字 or 符合 URL 规则），组装完整 URL；<br>2. 回车前，当前页面执行 onbeforeunload 事件；<br>3. 浏览器进入加载状态。<br><br>URL 请求<br><br>1. 浏览器进程通过 IPC 把 URL 请求发送至网络进程；<br>2. 查找资源缓存（有效期内）；<br>3. DNS 解析（查询 DNS 缓存）；<br>4. 进入 TCP 队列（单个域名 TCP 连接数量限制）；<br>5. 创建 TCP 连接（三次握手）；<br>6. HTTPS 建立 TLS 连接（client hello, server hello, pre-master key 生成『对话密钥』）；<br>7. 发送 HTTP 请求（请求行[方法、URL、协议]、请求头 Cookie 等、请求体 POST）；<br>8. 接受请求（响应行[协议、状态码、状态消息]、响应头、响应体等）；<br>   - 状态码 301 &#47; 302，根据响应头中的 Location 重定向；<br>   - 状态码 200，根据响应头中的 Content-Type 决定如何响应（下载文件、加载资源、渲染 HTML）。<br><br>准备渲染进程<br><br>1. 根据是否同一站点（相同的协议和根域名），决定是否复用渲染进程。<br><br>提交文档<br><br>1. 浏览器进程接受到网路进程的响应头数据，向渲染进程发送『提交文档』消息；<br>2. 渲染进程收到『提交文档』消息后，与网络进程建立传输数据『管道』；<br>3. 传输完成后，渲染进程返回『确认提交』消息给浏览器进程；<br>4. 浏览器接受『确认提交』消息后，移除旧文档、更新界面、地址栏，导航历史状态等；<br>5. 此时标识浏览器加载状态的小圆圈，从此前 URL 网络请求时的逆时针选择，即将变成顺时针旋转（进入渲染阶段）。<br><br>渲染<br><br>渲染流水线<br><br>构建 DOM 树<br><br>1. 输入：HTML 文档；<br>2. 处理：HTML 解析器解析；<br>3. 输出：DOM 数据解构。<br><br>样式计算<br><br>1. 输入：CSS 文本；<br>2. 处理：属性值标准化，每个节点具体样式（继承、层叠）；<br>3. 输出：styleSheets(CSSOM)。<br><br>布局(DOM 树中元素的计划位置)<br><br>1. DOM &amp; CSSOM 合并成渲染树；<br>2. 布局树（DOM 树中的可见元素）；<br>3. 布局计算。<br><br>分层<br><br>1. 特定节点生成专用图层，生成一棵图层树（层叠上下文、Clip，类似 PhotoShop 里的图层）；<br>2. 拥有层叠上下文属性（明确定位属性、透明属性、CSS 滤镜、z-index 等）的元素会创建单独图层；<br>3. 没有图层的 DOM 节点属于父节点图层；<br>4. 需要剪裁的地方也会创建图层。<br><br>绘制指令<br><br>1. 输入：图层树；<br>2. 渲染引擎对图层树中每个图层进行绘制；<br>3. 拆分成绘制指令，生成绘制列表，提交到合成线程；<br>4. 输出：绘制列表。<br><br>分块<br><br>1. 合成线程会将较大、较长的图层（一屏显示不完，大部分不在视口内）划分为图块（tile, 256*256, 512*512）。<br><br>光栅化（栅格化）<br><br>1. 在光栅化线程池中，将视口附近的图块优先生成位图（栅格化执行该操作）；<br>2. 快速栅格化：GPU 加速，生成位图（GPU 进程）。<br><br>合成绘制<br><br>1. 绘制图块命令——DrawQuad，提交给浏览器进程；<br>2. 浏览器进程的 viz 组件，根据DrawQuad命令，绘制在屏幕上。<br><br>相关概念<br><br>重排<br><br>1. 更新了元素的几何属性（如宽、高、边距）；<br>2. 触发重新布局，解析之后的一系列子阶段；<br>3. 更新完成的渲染流水线，开销最大。<br><br>重绘<br><br>1. 更新元素的绘制属性（元素的颜色、背景色、边框等）；<br>2. 布局阶段不会执行（无几何位置变换），直接进入绘制阶段。<br><br>合成<br><br>1. 直接进入合成阶段（例如CSS 的 transform 动画）；<br>2. 直接执行合成阶段，开销最小。<br>","like_count":186,"discussions":[{"author":{"id":1944577,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ac/01/7e13be41.jpg","nickname":"Jehan","note":"","ucode":"F59071B670A6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306537,"discussion_content":"大概看了一下。在“布局(DOM 树中元素的计划位置”的第一条，老师在第五节的评论里写过了，没有合并渲染树这一说法。计算完DOM树中每个元素的节点后，直接就生成了可见的layout tree。还有既然老师说源码中没有cssom这个词，那就尽量别用了，会误导很多人。  以上纯是交流看法，还望指正。 ","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1600313309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1944577,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ac/01/7e13be41.jpg","nickname":"Jehan","note":"","ucode":"F59071B670A6E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384985,"discussion_content":"老师后面的章节自己也用了cssom的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626842078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306537,"ip_address":""},"score":384985,"extra":""}]}]},{"had_liked":false,"id":136843,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1003156,"ip_address":"","ucode":"4060B4E2EF1D13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/94/0b22b6a2.jpg","comment_is_top":false,"comment_ctime":1569542938,"is_pvip":false,"replies":[{"id":"52510","content":"主要几个途径：<br>1:chromium源码<br>2:chromium源码里面的一些注释和文档<br>3:还有油管上blinkon上有一些深入讲解内核的视频<br><br><br>目前基本没有系统介绍浏览器知识的文档，而且网上很多文档还是比较早期的，很多内容都不太适合新版的浏览器了。<br><br>这里将浏览器知识和前端系统下结合起来是一件工作量非常大的事。<br>","user_name":"作者回复","comment_id":136843,"uid":"1141464","ip_address":"","utype":1,"ctime":1569553489,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"456836076314","product_id":100033601,"comment_content":"关于浏览器渲染的知识点讲的很细致，我想问下，关于浏览器的渲染细节的知识老师是从哪里学到的？，是通过研究源码学习的吗？有没有一些好的学习资料或者学习方法推荐？能否专门出一篇“授人以渔”的文章，谢谢！","like_count":107,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468823,"discussion_content":"主要几个途径：\n1:chromium源码\n2:chromium源码里面的一些注释和文档\n3:还有油管上blinkon上有一些深入讲解内核的视频\n\n\n目前基本没有系统介绍浏览器知识的文档，而且网上很多文档还是比较早期的，很多内容都不太适合新版的浏览器了。\n\n这里将浏览器知识和前端系统下结合起来是一件工作量非常大的事。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569553489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":124826,"user_name":"朙","can_delete":false,"product_type":"c1","uid":1623308,"ip_address":"","ucode":"55FE217C4CEDCC","user_header":"https://static001.geekbang.org/account/avatar/00/18/c5/0c/03bd4b4e.jpg","comment_is_top":false,"comment_ctime":1566003845,"is_pvip":false,"replies":[{"id":"46016","content":"可以拿放电影电影来解释，通常，电影的帧速是24，也就是说每秒切换24幅画面，其中的每幅画面就是一帧。<br><br>理解什么是帧后，我们在回过头看看我们的页面。由于目前大多数设备的屏幕刷新率为 60 次&#47;秒。因此，如果页面中有一个动画、或一个渐变效果、或者用户正在滚动页面，那么浏览器渲染动画的频率至少要和刷新频率保持一致，也就是每秒需要更新60次，这样我们就能计算出来生成每帧的预算只有（1&#47;60）毫秒，也就是16毫秒多一点(1 秒&#47; 60 = 16.66 毫秒)。如果超过16毫秒，帧率将下降，并且会出现画面抖动现象，此现象通常被称为卡顿，会对用户体验产生负面影响。\r<br>\r<br>所以，如果想要保证画面的流畅，就需要尽量降低每帧的渲染时间，所以局部更新流水线显得非常重要了，能大大减少处理每帧所消耗的时间。","user_name":"作者回复","comment_id":124826,"uid":"1141464","ip_address":"","utype":1,"ctime":1566175139,"user_name_real":"李兵"}],"discussion_count":6,"race_medal":0,"score":"242084172421","product_id":100033601,"comment_content":"渲染进程里的帧的概念是什么样子的呢？一个page是一帧吗","like_count":56,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463337,"discussion_content":"可以拿放电影电影来解释，通常，电影的帧速是24，也就是说每秒切换24幅画面，其中的每幅画面就是一帧。\n\n理解什么是帧后，我们在回过头看看我们的页面。由于目前大多数设备的屏幕刷新率为 60 次/秒。因此，如果页面中有一个动画、或一个渐变效果、或者用户正在滚动页面，那么浏览器渲染动画的频率至少要和刷新频率保持一致，也就是每秒需要更新60次，这样我们就能计算出来生成每帧的预算只有（1/60）毫秒，也就是16毫秒多一点(1 秒/ 60 = 16.66 毫秒)。如果超过16毫秒，帧率将下降，并且会出现画面抖动现象，此现象通常被称为卡顿，会对用户体验产生负面影响。\r\n\r\n所以，如果想要保证画面的流畅，就需要尽量降低每帧的渲染时间，所以局部更新流水线显得非常重要了，能大大减少处理每帧所消耗的时间。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566175139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2064266,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/vkqibkINia6dxVOv5zia2zbkmQbrJUsQw8vDfiauib2DfyvJQ4PDUC7M8p4vqFiaQj70yYwIO8JlHFA450KPmgpsXlsw/132","nickname":"Geek_bing","note":"","ucode":"4000A30EDAF71C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387504,"discussion_content":"这个让我想起英雄联盟，许多游戏职业玩家像faker对fps都有要求的，是一个道理吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628220080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1566826,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e8/6a/6438c61b.jpg","nickname":"小、sen","note":"","ucode":"0FEB3465198330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2064266,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/vkqibkINia6dxVOv5zia2zbkmQbrJUsQw8vDfiauib2DfyvJQ4PDUC7M8p4vqFiaQj70yYwIO8JlHFA450KPmgpsXlsw/132","nickname":"Geek_bing","note":"","ucode":"4000A30EDAF71C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548212,"discussion_content":"是的 不过是游戏的页面刷新。fps","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643086989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387504,"ip_address":""},"score":548212,"extra":""}]},{"author":{"id":1311458,"avatar":"https://static001.geekbang.org/account/avatar/00/14/02/e2/f646601b.jpg","nickname":"爱烤火的鱼","note":"","ucode":"A12B4551D3B086","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287649,"discussion_content":"这里不太明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593503669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1640667,"avatar":"https://static001.geekbang.org/account/avatar/00/19/08/db/66cb568d.jpg","nickname":"余亚勇","note":"","ucode":"A45C8732E72B18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1311458,"avatar":"https://static001.geekbang.org/account/avatar/00/14/02/e2/f646601b.jpg","nickname":"爱烤火的鱼","note":"","ucode":"A12B4551D3B086","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296630,"discussion_content":"可以理解为播放视频正常速度播放，加速播放，减速播放","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596609270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287649,"ip_address":""},"score":296630,"extra":""},{"author":{"id":2100706,"avatar":"https://static001.geekbang.org/account/avatar/00/20/0d/e2/6278daac.jpg","nickname":"藍。","note":"","ucode":"167DC48317D575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1311458,"avatar":"https://static001.geekbang.org/account/avatar/00/14/02/e2/f646601b.jpg","nickname":"爱烤火的鱼","note":"","ucode":"A12B4551D3B086","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338544,"discussion_content":"每帧的时间超过16毫秒，那么帧率(1s内的帧数)就会降低，也就是一个画面停留的时间更长了，给人卡顿的感觉，所以要保证画面流畅，就要尽量降低每帧的渲染时间，即1秒内的帧数多了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1609309125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287649,"ip_address":""},"score":338544,"extra":""}]}]},{"had_liked":false,"id":124808,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1565995745,"is_pvip":false,"replies":[{"id":"45817","content":"很赞","user_name":"作者回复","comment_id":124808,"uid":"1141464","ip_address":"","utype":1,"ctime":1566008538,"user_name_real":"李兵"}],"discussion_count":3,"race_medal":0,"score":"169069720289","product_id":100033601,"comment_content":"减少重排重绘，相当于少了渲染进程的主线程和非主线程的很多计算和操作，能够加快web的展示。<br>1 触发repaint reflow的操作尽量放在一起，比如改变dom高度和设置margin分开写，可能会出发两次重排<br>2 通过虚拟dom层计算出操作总得差异，一起提交给浏览器。之前还用过createdocumentfragment来汇总append的dom,来减少触发重排重绘次数。<br>","like_count":39,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463329,"discussion_content":"很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566008538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1377832,"avatar":"https://static001.geekbang.org/account/avatar/00/15/06/28/7fba7edd.jpg","nickname":"段.","note":"","ucode":"F9EC46F3558FE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7832,"discussion_content":"通过 performance 可以知道，createdocumentfragment这样的整体的 渲染速度 是没有直接去创建快的！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567687127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1373624,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","nickname":"mfist","note":"","ucode":"4F99F422C23FB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1377832,"avatar":"https://static001.geekbang.org/account/avatar/00/15/06/28/7fba7edd.jpg","nickname":"段.","note":"","ucode":"F9EC46F3558FE7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7857,"discussion_content":"这是chrome现代浏览器了，如果放在ie时代呢。Ie8的时候，通过这种方式批量增加dom是种高效的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567691791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7832,"ip_address":""},"score":7857,"extra":""}]}]},{"had_liked":false,"id":124960,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1566028369,"is_pvip":true,"replies":[{"id":"45882","content":"说的好，如果感觉到复杂和无序，那一定是哪里错了","user_name":"作者回复","comment_id":124960,"uid":"1141464","ip_address":"","utype":1,"ctime":1566101437,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"104645243473","product_id":100033601,"comment_content":"最后的一段话非常经典，赞！大道至简，这真是做软件该秉持的原则，如果实现功能时感受到复杂和无序，那一定是那里错了","like_count":25,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463379,"discussion_content":"说的好，如果感觉到复杂和无序，那一定是哪里错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566101437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156588,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1574918344,"is_pvip":true,"replies":[{"id":"60126","content":"这块我没深入将了，因为结构比较复杂，chromium团队还在重构大的架构，既然你问到了，我就简要介绍下：<br><br>1:首先渲染进程里执行图层合成(Layer Compositor)，也就是生成图层的操作，具体地讲，渲染进程的合成线程接收到图层的绘制消息时，会通过光栅化线程池将其提交给GPU进程，在GPU进程中执行光栅化操作，执行完成，再将结果返回给渲染进程的合成线程，执行合成图层操作！<br><br>2:合成的图层会被提交给浏览器进程，浏览器进程里会执行显示合成(Display Compositor)，也就是将所有的图层合成为可以显示的页面图片。 最终显示器显示的就是浏览器进程中合成的页面图片","user_name":"作者回复","comment_id":156588,"uid":"1141464","ip_address":"","utype":1,"ctime":1574927626,"user_name_real":"李兵"}],"discussion_count":4,"race_medal":0,"score":"100359166152","product_id":100033601,"comment_content":"渲染流程的最后，应该是浏览器进程将Compositor Frame发送到GPU, GPU进行显示吧？","like_count":24,"discussions":[{"author":{"id":1759808,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRPuYmxCsTaEroajHBWnBALgPW1PFYXviarfeCpvIGap5xZ3uo6XOyW6QA4ibvuyX0w3YsW0aYRf8w/132","nickname":"Geek_2753cc","note":"","ucode":"9A108A3E1FFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353151,"discussion_content":"合成线程的合成操作和浏览器进程的合成操作的区别：合成线程处理的是将图块合成为图层，浏览器进程执行的显示合成是将所有图层合成为一个图层","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1615036997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476161,"discussion_content":"这块我没深入将了，因为结构比较复杂，chromium团队还在重构大的架构，既然你问到了，我就简要介绍下：\n\n1:首先渲染进程里执行图层合成(Layer Compositor)，也就是生成图层的操作，具体地讲，渲染进程的合成线程接收到图层的绘制消息时，会通过光栅化线程池将其提交给GPU进程，在GPU进程中执行光栅化操作，执行完成，再将结果返回给渲染进程的合成线程，执行合成图层操作！\n\n2:合成的图层会被提交给浏览器进程，浏览器进程里会执行显示合成(Display Compositor)，也就是将所有的图层合成为可以显示的页面图片。 最终显示器显示的就是浏览器进程中合成的页面图片","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574927626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1444719,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0b/6f/ca92d8d0.jpg","nickname":"A.C.","note":"","ucode":"86FC8E72457BC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403888,"discussion_content":"好奇问一下，所以在无gpu的机子上开一个puppeteer然后流程是咋样的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634178250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1232710,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eokcpAyNicN9WS20hxaOEhDoqIl0Hdo9SuMrzhYDRsr6hkGcrQyMOQYfKRBFFSwZpXwW7Fc2wnHOdA/132","nickname":"Sklei","note":"","ucode":"DC92F2EF4EFC3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1444719,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0b/6f/ca92d8d0.jpg","nickname":"A.C.","note":"","ucode":"86FC8E72457BC2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555451,"discussion_content":"集显，不然你电脑无法显示东西了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646908358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":403888,"ip_address":""},"score":555451,"extra":""}]}]},{"had_liked":false,"id":124892,"user_name":"ytd","can_delete":false,"product_type":"c1","uid":1038790,"ip_address":"","ucode":"C6AEA2D19E447A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","comment_is_top":false,"comment_ctime":1566010360,"is_pvip":false,"replies":[{"id":"46015","content":"canvas绘制流程很简单，就是调用api直接在画布上绘制，没有DOM，也没有太多套路！<br><br>所有的绘制都是自己程序控制的","user_name":"作者回复","comment_id":124892,"uid":"1141464","ip_address":"","utype":1,"ctime":1566174768,"user_name_real":"李兵"}],"discussion_count":6,"race_medal":0,"score":"74580454392","product_id":100033601,"comment_content":"请教下老师，canvas的渲染流程是什么样的呢？它不涉及dom，也就不涉及dom树、样式计算、布局、分层，canvas的绘制过程也是在渲染进程中进行的吗？","like_count":17,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463350,"discussion_content":"canvas绘制流程很简单，就是调用api直接在画布上绘制，没有DOM，也没有太多套路！\n\n所有的绘制都是自己程序控制的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566174768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1566826,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e8/6a/6438c61b.jpg","nickname":"小、sen","note":"","ucode":"0FEB3465198330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252276,"discussion_content":"这个问题 问的好","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588147160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374421,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/d5/fd04fcbc.jpg","nickname":"Kite","note":"","ucode":"9DACE8E0EC84A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233311,"discussion_content":"问老师: 这里的‘自己程序’是什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586917206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406040,"avatar":"https://static001.geekbang.org/account/avatar/00/15/74/58/bb2ceefe.jpg","nickname":"Valmai17","note":"","ucode":"677F15EDD0FB3E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217056,"discussion_content":"如果用canvas展示一个复杂的流程图，页面会很卡，请问可以从哪方面优化呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585496674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1038790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","nickname":"ytd","note":"","ucode":"C6AEA2D19E447A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5386,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566217316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624506,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/ba/f50e9ea4.jpg","nickname":"潘启宝","note":"","ucode":"8E697C7164F2E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5242,"discussion_content":"同问svg","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566112007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124782,"user_name":"tokey","can_delete":false,"product_type":"c1","uid":1337746,"ip_address":"","ucode":"5278487F37D4EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","comment_is_top":false,"comment_ctime":1565973170,"is_pvip":false,"replies":[{"id":"45818","content":"现代浏览器做了优化，把滚动操作交给了合成线程来处理，也就是说滚动的内容会被当成一个单独的图层，发生滚动的事件的时候，图层直接由合成线程来生成，也就是说这种情况下没有占用主线程，所以通常情况下不会产生重排和重回操作，只是简单合成就可以了，这样效率是最高的！<br><br>为什么说“通常”呢？ 这是因为目前渲染流程还是很复杂的，在滚动页面时，有些情况下，如果合成线程搞不定的，那么还要交给主线程去处理，这时候就涉及到重拍了，不过技术是往前发展的，渲染流程会变得越来约简单高效！","user_name":"作者回复","comment_id":124782,"uid":"1141464","ip_address":"","utype":1,"ctime":1566008867,"user_name_real":"李兵"}],"discussion_count":4,"race_medal":0,"score":"48810613426","product_id":100033601,"comment_content":"老师您好！<br>我想问以下两个问题：<br>问题1：手机端开发，body 被内容撑开了，超过一屏，在滑动的过程中会不会触发重排，为什么？<br>问题2：如果 body 高度设置了100%","like_count":11,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463321,"discussion_content":"现代浏览器做了优化，把滚动操作交给了合成线程来处理，也就是说滚动的内容会被当成一个单独的图层，发生滚动的事件的时候，图层直接由合成线程来生成，也就是说这种情况下没有占用主线程，所以通常情况下不会产生重排和重回操作，只是简单合成就可以了，这样效率是最高的！\n\n为什么说“通常”呢？ 这是因为目前渲染流程还是很复杂的，在滚动页面时，有些情况下，如果合成线程搞不定的，那么还要交给主线程去处理，这时候就涉及到重拍了，不过技术是往前发展的，渲染流程会变得越来约简单高效！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566008867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5200,"discussion_content":"如果监听了滚动事件相关操作，估计还是要主线程介入。防止执行了 preventDefault","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566042915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1337746,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","nickname":"tokey","note":"","ucode":"5278487F37D4EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5203,"discussion_content":"可以细说一下嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566045607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5200,"ip_address":""},"score":5203,"extra":""}]},{"author":{"id":1337746,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","nickname":"tokey","note":"","ucode":"5278487F37D4EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5161,"discussion_content":"那您说的“通常”，可以举个例子么老师。\n\n还有您的课程会讲浏览器渲染帧么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566015819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140806,"user_name":"番茄","can_delete":false,"product_type":"c1","uid":1389069,"ip_address":"","ucode":"44935D8E8FFED3","user_header":"https://static001.geekbang.org/account/avatar/00/15/32/0d/9ffc70dd.jpg","comment_is_top":false,"comment_ctime":1571051070,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40225756734","product_id":100033601,"comment_content":"最后一部分，合成和显示讲的太模糊的，不是很理解。","like_count":10,"discussions":[{"author":{"id":1903552,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/0b/c0/22db3589.jpg","nickname":"培歌行","note":"","ucode":"EC84319D3F9DBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288751,"discussion_content":"是啊，哎，蒙蔽啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593860460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142875,"user_name":"不存在的","can_delete":false,"product_type":"c1","uid":1387196,"ip_address":"","ucode":"C4A093F8D9A1A6","user_header":"https://static001.geekbang.org/account/avatar/00/15/2a/bc/03c2c8cf.jpg","comment_is_top":false,"comment_ctime":1571572346,"is_pvip":false,"replies":[{"id":"55196","content":"比如CSS3的实现的一些动画效果","user_name":"作者回复","comment_id":142875,"uid":"1141464","ip_address":"","utype":1,"ctime":1571581267,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"35931310714","product_id":100033601,"comment_content":"什么叫既不要布局也不要绘制的属性呢?","like_count":8,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471305,"discussion_content":"比如CSS3的实现的一些动画效果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571581267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140264,"user_name":"splm","can_delete":false,"product_type":"c1","uid":1338601,"ip_address":"","ucode":"2216332252CEA7","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/e9/072b33b9.jpg","comment_is_top":false,"comment_ctime":1570867248,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"35930605616","product_id":100033601,"comment_content":"在GPU进程完成栅格化，并把结果保存在GPU内存中，此时的结果仍然保存在独立进程中。那么从渲染进程的合成线程发送Drawquad命令到浏览器主线程调用Viz组件，主进程是在什么时候拿到之前存在GPU内存中的位图结果的？是Viz主动去GPU内存获取这部分结果进行合成的吗？这里没太看懂。","like_count":8,"discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384995,"discussion_content":"首先渲染进程里执行图层合成(Layer Compositor)，也就是生成图层的操作，具体地讲，渲染进程的合成线程接收到图层的绘制消息时，会通过光栅化线程池将其提交给GPU进程，在GPU进程中执行光栅化操作，执行完成，再将结果返回给渲染进程的合成线程，执行合成图层操作！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626846360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1780539,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2b/3b/10825655.jpg","nickname":"Neil","note":"","ucode":"24D788649501B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380750,"discussion_content":"这部分他写错了。所谓的&#34;Viz组件&#34;不是浏览器进程的，是GPU进程的。渲染进程生成compositor frame发给浏览器进程。浏览器进程和其他渲染进程都可能把自己生成的compositor frame发给GPU进程。GPU进程的viz线程里跑着一个display合成器，负责合成从不同进程发过来的compositor frame。最后是GPU进程中的viz线程调用OpenGL的API把compositor frame绘制到屏幕上的。\n参考：\nhttps://www.youtube.com/watch?v=m-J-tbAlFic\nhttps://developers.google.com/web/updates/2018/09/inside-browser-part3#raster_and_composite_off_of_the_main_thread\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624684710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1780539,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2b/3b/10825655.jpg","nickname":"Neil","note":"","ucode":"24D788649501B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385014,"discussion_content":"Viz 运行在 Viz 进程，也就是以前的 GPU 进程，当然，在单进程架构下，Browser 进程可以兼做 Viz 进程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626850301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":380750,"ip_address":""},"score":385014,"extra":""}]}]},{"had_liked":false,"id":132325,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1003156,"ip_address":"","ucode":"4060B4E2EF1D13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/94/0b22b6a2.jpg","comment_is_top":false,"comment_ctime":1568084794,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35927823162","product_id":100033601,"comment_content":"老师，你好，我有几个问题一直都很很困惑，也没找到答案，希望老师能解惑一下，感谢！<br>1、图层、图块与BFC有什么区别联系吗？为什么BFC内元素的变动不会对BFC外的元素产生任何影响？是因为BFC会产生一个独立的图层或图块，渲染的时候只用重新渲染这一个图层或图块吗？BFC的原理是什么？<br>2、在划分图层的时候，每个图层都会生成一系列的绘制指令，而在划分图块的时候，一个图块可能包含多个图层，一个图层也可能分成多个图块，那么在将图块绘制成位图的时候，是如何执行绘制指令的？需要将绘制指令再划分到不同的图块中吗？","like_count":9,"discussions":[{"author":{"id":3070797,"avatar":"","nickname":"Geek_ddd9a6","note":"","ucode":"3DC81DA8B5AF97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581677,"discussion_content":"完全不同的概念，分开理解就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658914298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2005467,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo8szvJib6nEGDPGndeV5xv9YHDJv0AG8eV6EJ7r456icx06wvtLZ6XU0CEtc1oyhichu4cTmhXZ0yEg/132","nickname":"Geek_aab0f7","note":"","ucode":"6531B35644DF94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267465,"discussion_content":"在产生BFC是元素的z-index已经设置为大于0了，也就是说已经生成的一个图层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589641282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228423,"user_name":"Fred 鱼","can_delete":false,"product_type":"c1","uid":1323378,"ip_address":"","ucode":"63796A9C4F9551","user_header":"https://static001.geekbang.org/account/avatar/00/14/31/72/817e88b4.jpg","comment_is_top":false,"comment_ctime":1592665638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23067502118","product_id":100033601,"comment_content":"对于使用transform的元素，要事先定义好will-change:transform; ，才能避免layout 和paint。","like_count":5},{"had_liked":false,"id":134993,"user_name":"Warrior","can_delete":false,"product_type":"c1","uid":1626606,"ip_address":"","ucode":"4B858BF230B7A5","user_header":"https://static001.geekbang.org/account/avatar/00/18/d1/ee/96fcadbc.jpg","comment_is_top":false,"comment_ctime":1568970714,"is_pvip":false,"replies":[{"id":"51818","content":"目前会的，不过未来应该会解决这个问题","user_name":"作者回复","comment_id":134993,"uid":"1141464","ip_address":"","utype":1,"ctime":1568983013,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"23043807194","product_id":100033601,"comment_content":"重排是否只在当前分层中，会不会影响其他分层的重排？","like_count":5,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467992,"discussion_content":"目前会的，不过未来应该会解决这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568983013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127918,"user_name":"悬炫","can_delete":false,"product_type":"c1","uid":1159974,"ip_address":"","ucode":"28BA6B2169256B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/26/cc28a05a.jpg","comment_is_top":false,"comment_ctime":1566809335,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"23041645815","product_id":100033601,"comment_content":"老师文中说需要剪裁（clip）的地方也会被创建为图层，但是我复制了老师的代码后，发现需要剪裁的地方并没有单独的被创建为图层，难道是最新版本的谷歌浏览器改了渲染规则？<br>我的浏览器版本是 76.0.3809.100（正式版本） （64 位）<br>","like_count":5,"discussions":[{"author":{"id":1486864,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b0/10/7b90c480.jpg","nickname":"森蚺","note":"","ucode":"1F26C4668D187A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329833,"discussion_content":"代码里css中div的宽度和高度少了单位，所以并没有被剪裁，加上单位就可以看到了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606466450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1944577,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ac/01/7e13be41.jpg","nickname":"Jehan","note":"","ucode":"F59071B670A6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306627,"discussion_content":"我的也是，定位只有是fixed的时候才会创建图层，relative和absoulte都不会创建图层。版本是85，最新的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600335027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1532550,"avatar":"https://static001.geekbang.org/account/avatar/00/17/62/86/7be34836.jpg","nickname":"小菜菜菜菜菜菜菜","note":"","ucode":"810D7DFDAA4ACB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302293,"discussion_content":"用移动端试试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598871987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1375355,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fc/7b/bf02ecd6.jpg","nickname":"Hayley","note":"","ucode":"36857EC967AFC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204050,"discussion_content":"80版本的是正确的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584111464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200161,"discussion_content":"我也是，不过我在chrome 中 把其中一个图层的高度设置到占满屏幕后 就能看见单独创建的图层了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583662369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1358174,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b9/5e/a8f6f7db.jpg","nickname":"Ming","note":"","ucode":"A94E8D8433E54F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9037,"discussion_content":"me too","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568124999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025948,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a7/9c/be5dffb6.jpg","nickname":"AbyssKR","note":"","ucode":"6ADAC021039110","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6486,"discussion_content":"我也尝试了下，scroll 和 hidden 被裁减的和滚动条都没有单独创建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566919299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":125342,"user_name":"帅气小熊猫","can_delete":false,"product_type":"c1","uid":1022199,"ip_address":"","ucode":"88FE6B57F55063","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/f7/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1566171084,"is_pvip":false,"replies":[{"id":"46032","content":"合成线程属于渲染进程，你可以看文中示意图！<br><br>浏览器进程是主进程，负责提供一些基础服务和调度其它进程，你可以回顾下第一节和第四节内容。","user_name":"作者回复","comment_id":125342,"uid":"1141464","ip_address":"","utype":1,"ctime":1566178803,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"18746040268","product_id":100033601,"comment_content":"这里的合成线程属于哪个进程？浏览器进程是指主进程吗？前面进程线程那块没有啊","like_count":4,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463535,"discussion_content":"合成线程属于渲染进程，你可以看文中示意图！\n\n浏览器进程是主进程，负责提供一些基础服务和调度其它进程，你可以回顾下第一节和第四节内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566178803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218608,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1589844540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14474746428","product_id":100033601,"comment_content":"“栅格化过程都会使用 GPU 来加速生成”，请问下老师，如果用户的电脑没有GPU，栅格化就使用CPU吗","like_count":3},{"had_liked":false,"id":144486,"user_name":"凭实力写bug","can_delete":false,"product_type":"c1","uid":1235611,"ip_address":"","ucode":"6F772551F18935","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/9b/e0ef47df.jpg","comment_is_top":false,"comment_ctime":1571937406,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14456839294","product_id":100033601,"comment_content":"我比较不明白的是为什么transform 会越过 layout 和 layer . 按照我的理解 transform 位置改变了不越过触发layout吗","like_count":3,"discussions":[{"author":{"id":1011450,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6e/fa/e217af92.jpg","nickname":"mgcnrx11","note":"","ucode":"C4EAA3DA82424B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":118964,"discussion_content":"对啊，这块也不是很明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578204927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134219,"user_name":"板栗","can_delete":false,"product_type":"c1","uid":1145918,"ip_address":"","ucode":"9774FA44227B22","user_header":"https://static001.geekbang.org/account/avatar/00/11/7c/3e/a9eeb2df.jpg","comment_is_top":false,"comment_ctime":1568777060,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"14453678948","product_id":100033601,"comment_content":"老师，是将所有图块都栅格化，还是刚开始栅格化只可视区的图块，滚动的时候再去动态的栅格化。","like_count":3,"discussions":[{"author":{"id":1359476,"avatar":"https://static001.geekbang.org/account/avatar/00/14/be/74/0d900ed9.jpg","nickname":"Tristan","note":"","ucode":"DC454E16AAA66A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554139,"discussion_content":"前前后后想了下，他说的全部光栅话完成，意思是视口内和周边的，并不是全部页面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646227842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1568263,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ee/07/465058c7.jpg","nickname":"Even.Yu","note":"","ucode":"D55F190AC6E4FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391511,"discussion_content":"应该类似预加载。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630490176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1311458,"avatar":"https://static001.geekbang.org/account/avatar/00/14/02/e2/f646601b.jpg","nickname":"爱烤火的鱼","note":"","ucode":"A12B4551D3B086","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287664,"discussion_content":"没错，我觉得应该跟懒加载差不多的原理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593505534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219906,"discussion_content":"对 这块我也在纠结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585823068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1389069,"avatar":"https://static001.geekbang.org/account/avatar/00/15/32/0d/9ffc70dd.jpg","nickname":"番茄","note":"","ucode":"44935D8E8FFED3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52364,"discussion_content":"这点也确实没讲清楚呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574044598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1740548,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8f/04/508f860b.jpg","nickname":"学习使人进步","note":"","ucode":"D959566A25D759","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1389069,"avatar":"https://static001.geekbang.org/account/avatar/00/15/32/0d/9ffc70dd.jpg","nickname":"番茄","note":"","ucode":"44935D8E8FFED3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":116103,"discussion_content":"猜测：既然可视区的图块是“优先”光栅化，那么其他位图应该是“延后”了，也就是说还是会光栅化的。滚动的时候可以直接用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578053721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":52364,"ip_address":""},"score":116103,"extra":""}]}]},{"had_liked":false,"id":128482,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1566886926,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14451788814","product_id":100033601,"comment_content":"为何我的Layers标签中，选择了document，只有Details tab，没有Profile Tab？","like_count":3,"discussions":[{"author":{"id":1580803,"avatar":"https://static001.geekbang.org/account/avatar/00/18/1f/03/e4e15f95.jpg","nickname":"DustyBun","note":"","ucode":"546D2E89B2E96E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6634,"discussion_content":"双击图层就出来了","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1567003728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044036,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ee/44/26ac883e.jpg","nickname":"桃翁","note":"","ucode":"CB438AF450DC00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6566,"discussion_content":"我的也是这样，请问知道怎么回事儿了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566977189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126304,"user_name":"frankh","can_delete":false,"product_type":"c1","uid":1260737,"ip_address":"","ucode":"314BAFD24966D6","user_header":"https://static001.geekbang.org/account/avatar/00/13/3c/c1/30a7efa3.jpg","comment_is_top":false,"comment_ctime":1566359119,"is_pvip":true,"replies":[{"id":"46792","content":"因为直接在合成线程上执行就行了","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566426926,"ip_address":"","comment_id":126304,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14451261007","product_id":100033601,"comment_content":"transform为什么可以避免重排和重绘啊","like_count":3,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463933,"discussion_content":"因为直接在合成线程上执行就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566426926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384997,"discussion_content":"为什么transform这个是可以直接在合成线程的呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626847246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165092,"user_name":"yulingogo","can_delete":false,"product_type":"c1","uid":1379882,"ip_address":"","ucode":"23BC47AE89C986","user_header":"https://static001.geekbang.org/account/avatar/00/15/0e/2a/2156518c.jpg","comment_is_top":false,"comment_ctime":1577159096,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10167093688","product_id":100033601,"comment_content":"老师，有个疑问。前面说合成线程优先将视口附近的图块栅格化，后面又说等到所有的图块栅格化，合成线程发出一个绘制图块的命令，然后继续其他操作。那么这个视口附近优先的目的有什么意义呢？究竟是栅格化视口附近的图块，先让浏览器显示，还是栅格化所有图块然后让浏览器显示？","like_count":2,"discussions":[{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223512,"discussion_content":"这里也是搞不明白","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586231362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384996,"discussion_content":"大兄弟，搞明白啦这个问题吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626847194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1944577,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ac/01/7e13be41.jpg","nickname":"Jehan","note":"","ucode":"F59071B670A6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306939,"discussion_content":"这里老师说的“等到所有的图块栅格化”的前提应该是“优先将视口附近的图块栅格化”，我是这么理解的：在优先将视口图块栅格化的时候，视口附近有很多小的图块，等到视口附近的所有图块合成之后，合成线程才发出一个绘制图块的命令。应该结合上下文去分析，不能把某一部分单独拿出来去理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600422697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161881,"user_name":"Rahim","can_delete":false,"product_type":"c1","uid":1782301,"ip_address":"","ucode":"BA3FE7805B15D3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/32/1d/d4e03718.jpg","comment_is_top":false,"comment_ctime":1576389214,"is_pvip":false,"replies":[{"id":"61757","content":"你看的深了，RenderLayer是老的代码了，你可以理解就是目前的LayerTree中的一层。<br><br>比如LayerTree中可能有五层，但是并不是每层都会单独的绘制出来，Chrome为了效率考虑，将一些不需要单独绘制的层合并在一起绘制，这就是GraphicsLayer，GraphicsLayer会分配一块空间用来保持绘制的图像。<br><br><br>关于，层压缩（Layer Squashing）这个概念你可以了解下。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1576509405,"ip_address":"","comment_id":161881,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10166323806","product_id":100033601,"comment_content":"http:&#47;&#47;www.chromium.org&#47;developers&#47;design-documents&#47;gpu-accelerated-compositing-in-chrome?spm=taofed.bloginfo.blog.1.19585ac8aQLUrh<br>你好，源码中到RenderLayer跟教程中到图层树是同一个意思吗？那后续GraphicsLayer是什么意思","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477891,"discussion_content":"你看的深了，RenderLayer是老的代码了，你可以理解就是目前的LayerTree中的一层。\n\n比如LayerTree中可能有五层，但是并不是每层都会单独的绘制出来，Chrome为了效率考虑，将一些不需要单独绘制的层合并在一起绘制，这就是GraphicsLayer，GraphicsLayer会分配一块空间用来保持绘制的图像。\n\n\n关于，层压缩（Layer Squashing）这个概念你可以了解下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576509405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1385126,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/qUia0UiahxYDkyxGW2ayKZNCRcfeU0kf2ARdRjNEhic5fgUpe3Vib0Ohuhg0sxyic6TdjsYw62S7ZJvOzKfOI71xp1w/132","nickname":"renlindong","note":"","ucode":"E474C0D2B2353F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335160,"discussion_content":"合并不需要单独绘制的层这一步发生在哪个阶段呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608108139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154441,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1574431228,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10164365820","product_id":100033601,"comment_content":"老师，我在实现裁剪的例子中，在chrome浏览器下，并没有出现超出裁剪部分文字的专有图层，请问是什么原因呢？另外那段html代码div的width\\height少了单位。","like_count":2,"discussions":[{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556333,"discussion_content":"加上单位，应该就出来啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647317812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124942,"user_name":"淡","can_delete":false,"product_type":"c1","uid":1456392,"ip_address":"","ucode":"6856CA319DE2F0","user_header":"https://static001.geekbang.org/account/avatar/00/16/39/08/09055b47.jpg","comment_is_top":false,"comment_ctime":1566024468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10155959060","product_id":100033601,"comment_content":"老师，你好。<br>关于把图层分块这块有些疑问，比如手机或者屏幕设备的尺寸并不总是256 * 256 或者 512 * 512 的整数倍。这样就会导致绘制的高度并不总是和内容刚好相等，表现为手机端有时候执行js拿到的html内容高度不对，不知道您遇到过没有？如果有，有没有一些好的实践获取内容高度呢，谢谢。","like_count":2},{"had_liked":false,"id":349553,"user_name":"ladidili","can_delete":false,"product_type":"c1","uid":1217498,"ip_address":"","ucode":"38886C1908DE6B","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/da/0e47c76e.jpg","comment_is_top":false,"comment_ctime":1656059920,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5951027216","product_id":100033601,"comment_content":"图块具体是一个什么东西，具体表现形式是什么？<br>分块是在生成位图之前的操作，这时候得到的东西只有层树和绘制命令，这种东西是如何进行分块的？<br>难度是依据元素的位置，如果元素和某个范围重叠，就需要绘制这些元素？才去执行这些元素的绘制命令？","like_count":1},{"had_liked":false,"id":343885,"user_name":"糖醋草莓皮","can_delete":false,"product_type":"c1","uid":1753960,"ip_address":"","ucode":"C16330334C2C2A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/c3/68/69404846.jpg","comment_is_top":false,"comment_ctime":1651112051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5946079347","product_id":100033601,"comment_content":"老师这里讲得有点问题，在开发者工具中看到的layer是合成层，但后面讲的是渲染层。直观来说就是，绝对定位并且有z-index的元素是一个渲染层，但是在layer中不会看到单独的一层","like_count":1},{"had_liked":false,"id":342680,"user_name":"Geek_a4a510","can_delete":false,"product_type":"c1","uid":2911551,"ip_address":"","ucode":"04FC47A0EE8569","user_header":"","comment_is_top":false,"comment_ctime":1650417356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5945384652","product_id":100033601,"comment_content":"Chrome原版文档里说合成compositing是分割成layer的过程，而不是图块。这个更能解释transform只调用合成线程，因为一个layer挪来挪去就行了<br><br>Compositing is a technique to separate parts of a page into layers, rasterize them separately, and composite as a page in a separate thread called compositor thread.<br><br>https:&#47;&#47;developer.chrome.com&#47;blog&#47;inside-browser-part3&#47;","like_count":1},{"had_liked":false,"id":294379,"user_name":"袭","can_delete":false,"product_type":"c1","uid":1077573,"ip_address":"","ucode":"D5B8609CDFB145","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/45/126cd913.jpg","comment_is_top":false,"comment_ctime":1621920214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5916887510","product_id":100033601,"comment_content":"关键词：<br><br>主线程<br>DOM:渲染进程， DOM树<br>Style: 样式表<br>Layout: 布局树<br>Layer: 分层树<br>Paint: 每个图层绘制列表，移至合成线程<br><br>合成线程：<br>Tiles:图块，<br>raster:栅格化线程池，图块转位图<br>draw quad: 显示<br>","like_count":1},{"had_liked":false,"id":285293,"user_name":"Margin","can_delete":false,"product_type":"c1","uid":2044091,"ip_address":"","ucode":"2AC4BE40B4222D","user_header":"https://static001.geekbang.org/account/avatar/00/1f/30/bb/5988ecdb.jpg","comment_is_top":false,"comment_ctime":1616726351,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5911693647","product_id":100033601,"comment_content":"栅格化的那一步，合成线程收到的是待绘制列表的一系列绘制指令，为什么后续处理又变成了图层？","like_count":1,"discussions":[{"author":{"id":3020655,"avatar":"","nickname":"Geek_28745a","note":"","ucode":"242F2D4477D006","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575025,"discussion_content":"应该是位图图层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654531756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2100706,"avatar":"https://static001.geekbang.org/account/avatar/00/20/0d/e2/6278daac.jpg","nickname":"藍。","note":"","ucode":"167DC48317D575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372021,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620132493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282096,"user_name":"穿秋裤的男孩","can_delete":false,"product_type":"c1","uid":1748640,"ip_address":"","ucode":"D0F48C66377893","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ae/a0/707350ef.jpg","comment_is_top":false,"comment_ctime":1615085967,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5910053263","product_id":100033601,"comment_content":"解析html和css的过程都讲了，唯独没讲js<br>而且一会儿渲染进程一会儿渲染引擎的，有点懵。html和css是在渲染主线程完成的，那js呢，也是吗？","like_count":1,"discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384998,"discussion_content":"js在后面讲的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626847322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150596,"user_name":"晓东","can_delete":false,"product_type":"c1","uid":1156331,"ip_address":"","ucode":"E86A18B72C6810","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/eb/c092f833.jpg","comment_is_top":false,"comment_ctime":1573565791,"is_pvip":true,"replies":[{"id":"58458","content":"是优先合成视图附近的图块啊，你可以先看24讲","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1573874556,"ip_address":"","comment_id":150596,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868533087","product_id":100033601,"comment_content":"老师，关于视口附近的图块会优先生成位图这块有点疑惑。因为当所有图块都栅格化后，才会通知浏览器进程去合成图层并显示，那么视口图块优先栅格化的意义体现在哪里？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474212,"discussion_content":"是优先合成视图附近的图块啊，你可以先看24讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573874556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149099,"user_name":"(ಡωಡ)hahaha","can_delete":false,"product_type":"c1","uid":1374075,"ip_address":"","ucode":"8EC05C5DF56770","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/7b/bd2d9d0c.jpg","comment_is_top":false,"comment_ctime":1573140967,"is_pvip":false,"replies":[{"id":"58459","content":"主要就是个主线程和合成线程，当然还有很多辅助线程，诸如预解析html的线程，预编译javascript线程，垃圾回收线程，合成线程，webworker线程等等。  我会在加餐二结合任务来做分析","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1573875213,"ip_address":"","comment_id":149099,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868108263","product_id":100033601,"comment_content":"老师，你好，我想请教一下，渲染进程中，有哪些线程，以及各线程的作用，可以讲解一下吗","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473734,"discussion_content":"主要就是个主线程和合成线程，当然还有很多辅助线程，诸如预解析html的线程，预编译javascript线程，垃圾回收线程，合成线程，webworker线程等等。  我会在加餐二结合任务来做分析","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573875213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125253,"user_name":"man-moonth","can_delete":false,"product_type":"c1","uid":1383156,"ip_address":"","ucode":"145EED9CFA19E4","user_header":"https://static001.geekbang.org/account/avatar/00/15/1a/f4/a40453e7.jpg","comment_is_top":false,"comment_ctime":1566132022,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5861099318","product_id":100033601,"comment_content":"请问老师，切换标签页也是发出某个命令给浏览器进程的viz组件，然后直接取出内存中的已经绘制的图像来显示吗？","like_count":1},{"had_liked":false,"id":124984,"user_name":"tokey","can_delete":false,"product_type":"c1","uid":1337746,"ip_address":"","ucode":"5278487F37D4EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","comment_is_top":false,"comment_ctime":1566033410,"is_pvip":false,"replies":[{"id":"45844","content":"循环系统是页面核心，当然要讲，而且还要大讲特讲。<br>详细内容我放到了第三个模块中，你可以看下本专栏的目录结构。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566040716,"ip_address":"","comment_id":124984,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861000706","product_id":100033601,"comment_content":"老师的课程可以加个浏览器中的事件循环和js的事件机智么？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463390,"discussion_content":"循环系统是页面核心，当然要讲，而且还要大讲特讲。\n详细内容我放到了第三个模块中，你可以看下本专栏的目录结构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566040716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124823,"user_name":"ytd","can_delete":false,"product_type":"c1","uid":1038790,"ip_address":"","ucode":"C6AEA2D19E447A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","comment_is_top":false,"comment_ctime":1566002827,"is_pvip":false,"replies":[{"id":"46019","content":"开发者工具我们后续还要做详细分析","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566175250,"ip_address":"","comment_id":124823,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5860970123","product_id":100033601,"comment_content":"重排和重绘都是渲染进程的主线程中进行的，减少这类操作可以减少主线程的资源占用，提高主线程绘制效率。在编写js时尽量减少dom操作或合并dom操作，dom操作需要重新生成dom树，如果影响布局就需要重新生成布局树，再重新生成分层树，再进行绘制。ps：感觉生成个页面好复杂呀，另外，以前从没注意过chrome开发者工具还有个Layers标签，chrome开发者工具真是一堆宝呀。","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463335,"discussion_content":"开发者工具我们后续还要做详细分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566175250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385001,"discussion_content":"开发者工具我们后续还要做详细分析，这个是在第几课呢，没看到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626848156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354813,"user_name":"咔唧啾唧","can_delete":false,"product_type":"c1","uid":1951652,"ip_address":"上海","ucode":"5188ED2DC3A70A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/c7/a4/c066b2f8.jpg","comment_is_top":false,"comment_ctime":1660802082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660802082","product_id":100033601,"comment_content":"1.paint阶段只是为每个图层生成绘制列表吗？<br>2.为什么transform会避开绘制阶段？难道transform不会新建图层吗？","like_count":0},{"had_liked":false,"id":354349,"user_name":"小C","can_delete":false,"product_type":"c1","uid":1338334,"ip_address":"江苏","ucode":"27C2D021A9E21E","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/de/686585ee.jpg","comment_is_top":false,"comment_ctime":1660294951,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660294951","product_id":100033601,"comment_content":"有个疑问，绘制阶段结束后将生成的绘制指令提交给合成线程，这个绘制指令是什么时候执行的，文章里没有提到这个地方，直接就是图块划分，然后图块转成位图，感觉整个流程断了，作者能回答一下这个吗？感谢","like_count":0},{"had_liked":false,"id":351553,"user_name":"不叫豌豆","can_delete":false,"product_type":"c1","uid":2134881,"ip_address":"","ucode":"74810CC1269469","user_header":"https://static001.geekbang.org/account/avatar/00/20/93/61/d9d2ebfd.jpg","comment_is_top":false,"comment_ctime":1657885813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657885813","product_id":100033601,"comment_content":"想问一下浏览器渲染进程中的线程有哪些哇？版本1：主线程、工作线程、合成线程、光栅线程。版本2：GUI渲染线程、JS引擎线程、定时器触发线程、事件触发线程、异步HTTP请求线程。这俩版本给整迷糊了....","like_count":0},{"had_liked":false,"id":350169,"user_name":"Bean","can_delete":false,"product_type":"c1","uid":1557853,"ip_address":"","ucode":"DC1A0C8B6BF083","user_header":"https://static001.geekbang.org/account/avatar/00/17/c5/5d/9e75eb36.jpg","comment_is_top":false,"comment_ctime":1656638132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656638132","product_id":100033601,"comment_content":"老师怎么验证重绘，重排的过程。<br>","like_count":0},{"had_liked":false,"id":350146,"user_name":"Bean","can_delete":false,"product_type":"c1","uid":1557853,"ip_address":"","ucode":"DC1A0C8B6BF083","user_header":"https://static001.geekbang.org/account/avatar/00/17/c5/5d/9e75eb36.jpg","comment_is_top":false,"comment_ctime":1656597439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656597439","product_id":100033601,"comment_content":"老师：通过 position：absolute; left: 0; top: 0;   通过改变绝对定位的 left 和 top 值的动画，改变布局了吗","like_count":0},{"had_liked":false,"id":348130,"user_name":"Geek_55eab8","can_delete":false,"product_type":"c1","uid":2810585,"ip_address":"","ucode":"792634641C7460","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epXyNd99WVsDfntqiayDhuMROs5jWNGKCXJUN3DRJSw45sykM3AKFsibicO2thD68V8xricOrd63VOPrw/132","comment_is_top":false,"comment_ctime":1654763314,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654763314","product_id":100033601,"comment_content":"如果是浏览器滚动，会经过重排的过程吗？我理解是，滚动会改变元素在页面的位置，布局也会发生改变，所以会重排重绘。<br>如果不会重排，那么大数据渲染的列表滚动的时候，为什么会卡顿？仅仅是因为需要绘制大量数据的缘故吗？","like_count":0},{"had_liked":false,"id":341263,"user_name":"偏爱小香软","can_delete":false,"product_type":"c1","uid":1512148,"ip_address":"","ucode":"DA4ACE0330EBDA","user_header":"https://static001.geekbang.org/account/avatar/00/17/12/d4/2378e66a.jpg","comment_is_top":false,"comment_ctime":1649488851,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1649488851","product_id":100033601,"comment_content":"请问老师，我查看mdn上关于层叠上下文的内容，并在操作了其中的demo，但是在layer标签中并没有出现多个图层，只有一个document图层。这是什么原因？？","like_count":0,"discussions":[{"author":{"id":1677738,"avatar":"https://static001.geekbang.org/account/avatar/00/19/99/aa/bb6dca30.jpg","nickname":"浮丘","note":"","ucode":"3B6161D282F870","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585164,"discussion_content":"你应该是没有生成层叠上下文，都在一个图层里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661356736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338532,"user_name":"金尚","can_delete":false,"product_type":"c1","uid":1661060,"ip_address":"","ucode":"70C19FE3C984B0","user_header":"https://static001.geekbang.org/account/avatar/00/19/58/84/a8aac073.jpg","comment_is_top":false,"comment_ctime":1647561541,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647561541","product_id":100033601,"comment_content":"老师请教下现在的vue和react需要考虑重排，重绘的问题吗。","like_count":0},{"had_liked":false,"id":331783,"user_name":"Hhpon","can_delete":false,"product_type":"c1","uid":1020726,"ip_address":"","ucode":"12FE37D4B67631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/36/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1642758073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642758073","product_id":100033601,"comment_content":"有个地方不知道可不可以这样理解；合成线程把绘制图块的命令提交给浏览器进程才能看到页面，如果是这样的话我们要等到所有的图块都被光栅化才能发送命令，那我们为什么还要优先光栅视口周围的图块呢？","like_count":0},{"had_liked":false,"id":331547,"user_name":"Hhpon","can_delete":false,"product_type":"c1","uid":1020726,"ip_address":"","ucode":"12FE37D4B67631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/36/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1642647770,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642647770","product_id":100033601,"comment_content":"有个地方我觉得不太通，分块儿的时候是主线程把绘制的列表提交给合成线程；所以我理解这个时候合成线程的输入内容是绘制命令的列表，合成线程会按照视口附近的图块生成位图，如果这个时候没有绘制的话合成线程怎么知道哪个图块在视口附近呢？","like_count":0},{"had_liked":false,"id":326621,"user_name":"砌下落花起，犹罔顾春寒。","can_delete":false,"product_type":"c1","uid":2527788,"ip_address":"","ucode":"B43A986E957220","user_header":"https://static001.geekbang.org/account/avatar/00/26/92/2c/7975bdd9.jpg","comment_is_top":false,"comment_ctime":1639596400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639596400","product_id":100033601,"comment_content":"dom树和stylesheet是同时生成的吗？还是说有先后顺序","like_count":0},{"had_liked":false,"id":321125,"user_name":"yueyue","can_delete":false,"product_type":"c1","uid":1725195,"ip_address":"","ucode":"6B9C910CA2DBE5","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq8CztVpsjDae06pKQRUoDT0mN00hJuSuvfb2zpk7oiaDc7pPEWQhsK6Ex6d5mj1Y3ticcC2RxBjIJQ/132","comment_is_top":false,"comment_ctime":1636684044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636684044","product_id":100033601,"comment_content":"搜索多个文章发现，现在对渲染进程中的线程有以下两个形式的区分：1. GUI线程、JS引擎线程、事件触发线程、定时器线程等；2. 渲染主线程、合成线程。 能否解释下这两个是怎样的关系吗？谢谢~","like_count":0},{"had_liked":false,"id":312657,"user_name":"Geek_646662","can_delete":false,"product_type":"c1","uid":1967119,"ip_address":"","ucode":"523DC1D27411D1","user_header":"","comment_is_top":false,"comment_ctime":1631931470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631931470","product_id":100033601,"comment_content":"一个图层的绘制会被拆分成很多小的绘制指令，那么在为图层分块时怎么做的呢？ 一个小的绘制指令可能也会涉及到多个图块吧， 比如绘制一个很大的圆。","like_count":0},{"had_liked":false,"id":307866,"user_name":"Atoe","can_delete":false,"product_type":"c1","uid":1043716,"ip_address":"","ucode":"5FB8C5C6A67067","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/04/7941d031.jpg","comment_is_top":false,"comment_ctime":1629287145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629287145","product_id":100033601,"comment_content":"opacity ：.5  或者通过c3属性的z轴 我看好多教程都是说可以开启GPU加速，老师这里默认就对图块生成位图直接使用GPU加速，那c3加速不就没有意义了吗？ <br><br>同学们有了解的么，求指教.","like_count":0},{"had_liked":false,"id":304375,"user_name":"hb","can_delete":false,"product_type":"c1","uid":1406834,"ip_address":"","ucode":"DCFA6CECF64E37","user_header":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","comment_is_top":false,"comment_ctime":1627376027,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1627376027","product_id":100033601,"comment_content":"我发现层叠上下文并没有提升为单独的layer，比如position absolute+z-index不为auto组合就没有生成，甚至transform中tranlate2d也不会，除非我tranlate3d才有","like_count":0,"discussions":[{"author":{"id":3070797,"avatar":"","nickname":"Geek_ddd9a6","note":"","ucode":"3DC81DA8B5AF97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581670,"discussion_content":"作者这块写错了，层叠上下文并不就等于图层，只有开启一个新的层叠上下文的属性才会提升为单独的layer，比如will-change等，裁剪的例子中css代码都写错了，费解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658912954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298115,"user_name":"杨涛","can_delete":false,"product_type":"c1","uid":1082978,"ip_address":"","ucode":"2B6B6AEFFB54A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/62/22e9aeb0.jpg","comment_is_top":false,"comment_ctime":1623916793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623916793","product_id":100033601,"comment_content":"老师，能重点介绍下布局视口，可视视口，理想视口吗？","like_count":0},{"had_liked":false,"id":297503,"user_name":"soon","can_delete":false,"product_type":"c1","uid":2361679,"ip_address":"","ucode":"148122663905F2","user_header":"https://static001.geekbang.org/account/avatar/00/24/09/4f/c07bc26f.jpg","comment_is_top":false,"comment_ctime":1623583718,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1623583718","product_id":100033601,"comment_content":"老师，有个问题想问下，在“完整的渲染流水线示意图”里面，老师标识的浏览器进程指向GPU进程的箭头是不是反了，应该是GPU进程中的箭头指向浏览器进程（将保存在GPU内存中的位图通过浏览器进程来显示）吧？","like_count":0,"discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385002,"discussion_content":"在GPU进程中执行光栅化操作，执行完成，再将结果返回给渲染进程的合成线程，执行合成图层操作！  感觉应该是这样子的，要还回去一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626848291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296153,"user_name":"Geek_5042f7","can_delete":false,"product_type":"c1","uid":2008707,"ip_address":"","ucode":"4A6FFB2631715D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUpmVjZjv9icMLIEicTrFdQXrLg6Oc8ia29krKdCko7icmE9OPhZe9IWS1tjuZZT3tGebPUpwA5M7YJw/132","comment_is_top":false,"comment_ctime":1622778838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622778838","product_id":100033601,"comment_content":"栅格化过程都会使用 GPU 来加速生成，那么我们定义css属性开启硬件加速，只是担心回流会影响整个的页面绘制与布局吗","like_count":0},{"had_liked":false,"id":294380,"user_name":"袭","can_delete":false,"product_type":"c1","uid":1077573,"ip_address":"","ucode":"D5B8609CDFB145","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/45/126cd913.jpg","comment_is_top":false,"comment_ctime":1621920587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621920587","product_id":100033601,"comment_content":"有办法可视化修改dom属性后，主线程是从哪个环节开始重新调用的嘛？ 比如我想看看修改class以后，是style还是layout子阶段重新开始","like_count":0},{"had_liked":false,"id":292978,"user_name":"五十度灰黑","can_delete":false,"product_type":"c1","uid":2132275,"ip_address":"","ucode":"A5AB673CA37856","user_header":"https://static001.geekbang.org/account/avatar/00/20/89/33/6c66ed4a.jpg","comment_is_top":false,"comment_ctime":1621137684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621137684","product_id":100033601,"comment_content":"老师, 你好. 我想请教一个问题.<br>当我请求一个资源时, 比如图片, 我在Performance查看这个资源分析, 想问下`80.51 ms resource loading`是什么时间? 具体详情如下<br>Network request<br>URL a.jpg<br>Duration 82.64 ms (2.13 ms network transfer + 80.51 ms resource loading)<br>Request Method GET<br>Priority Low<br>Mime Type image&#47;jpeg<br>Encoded Data 9.3 kB (from service worker)<br>Initiator index.js:1<br>Preview 图片<br>","like_count":0},{"had_liked":false,"id":292481,"user_name":"噶水库","can_delete":false,"product_type":"c1","uid":1377138,"ip_address":"","ucode":"9DEA93A8B9FE8C","user_header":"https://static001.geekbang.org/account/avatar/00/15/03/72/5dcfd80a.jpg","comment_is_top":false,"comment_ctime":1620836409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620836409","product_id":100033601,"comment_content":"为什么position:fixed&#47;absolute的dom重排消耗小？是应该更改其几何属性只会对该图册进行计算吗？","like_count":0},{"had_liked":false,"id":290848,"user_name":"yutangmeng","can_delete":false,"product_type":"c1","uid":1956987,"ip_address":"","ucode":"805653D9F127C1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/dc/7b/67f960a3.jpg","comment_is_top":false,"comment_ctime":1619778746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619778746","product_id":100033601,"comment_content":"老师请问下，主进程接收到DrawQuad指令后，将页面内容绘制在内存中，这时候是绘制什么呢？不是已经在栅格化阶段生成了位图吗？","like_count":0},{"had_liked":false,"id":290847,"user_name":"yutangmeng","can_delete":false,"product_type":"c1","uid":1956987,"ip_address":"","ucode":"805653D9F127C1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/dc/7b/67f960a3.jpg","comment_is_top":false,"comment_ctime":1619778399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619778399","product_id":100033601,"comment_content":"老师，想请问下，合成线程是再视口附近的图块栅格化完成后，还是所有图块栅格化完成后，发送DrawQuad指令呢？","like_count":0},{"had_liked":false,"id":286181,"user_name":"Geek_005778","can_delete":false,"product_type":"c1","uid":1483630,"ip_address":"","ucode":"B4E2DE7B9D0387","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJp0JzSialEHSLNFUnSLgpEDicTWkrDYyKbvh0GI6G2kHFyeEtwe3mibPMFMXKkR6uSfkoMb5Yib7r9Kg/132","comment_is_top":false,"comment_ctime":1617180055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617180055","product_id":100033601,"comment_content":"老哥靠谱","like_count":0},{"had_liked":false,"id":274538,"user_name":"学聪","can_delete":false,"product_type":"c1","uid":1024573,"ip_address":"","ucode":"C1F3950FAFE827","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/3d/c6b68ce8.jpg","comment_is_top":false,"comment_ctime":1611052599,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1611052599","product_id":100033601,"comment_content":"老师，请问从绘制列表到划分图块这一步是怎么实现的呢？","like_count":0,"discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385004,"discussion_content":"合成线程将图层分成图块，并在栅格化的线程池中将图块转成位图**","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626848579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385003,"discussion_content":"合成线程里面实现，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626848560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272187,"user_name":"杨斌","can_delete":false,"product_type":"c1","uid":2054262,"ip_address":"","ucode":"4F192D8648C9FE","user_header":"https://static001.geekbang.org/account/avatar/00/1f/58/76/c7a0deb1.jpg","comment_is_top":false,"comment_ctime":1609984635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609984635","product_id":100033601,"comment_content":"想请问一下，一个纯webgl(只有canvas标签）应用，也是这样的渲染流程吗？","like_count":0},{"had_liked":false,"id":263123,"user_name":"Zack","can_delete":false,"product_type":"c1","uid":1758012,"ip_address":"","ucode":"758511DF7D6D17","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eokhlnrZO1G1SnxWka7hSeqwHnIcuQKugQDBDKUDXc2ZDXKsibHTNviaG6CiaqBiaK5Bwcu37xakaFthw/132","comment_is_top":false,"comment_ctime":1606014707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606014707","product_id":100033601,"comment_content":"关于重绘: 布局树的每个节点是包含样式的，那么当修改color属性时，理论上布局树也更新了，为什么不会进入[layout]和[layer]?","like_count":0},{"had_liked":false,"id":253048,"user_name":"Geek_fd81b3","can_delete":false,"product_type":"c1","uid":1899429,"ip_address":"","ucode":"5BF9C3C68B8178","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIE3Vw0icEQic96rOykFD2bUo6KotVx53gvtG0CDe8tUKC3pNXxIQYMuyPyrgL06Zn32UWtEXTIVWMw/132","comment_is_top":false,"comment_ctime":1602578096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602578096","product_id":100033601,"comment_content":"老师，上面说“绘制操作是由渲染引擎中的合成线程来完成的”，但是下面讲的光栅化时，光栅化又有自己的光栅线程池，并且用到GPU的话，会在GPU进程中生成位图，那么绘制操作是不是就不是在合成线程上完成的，可以说是在光栅化线程或者GPU进程中完成呢？","like_count":0},{"had_liked":false,"id":253039,"user_name":"Geek_fd81b3","can_delete":false,"product_type":"c1","uid":1899429,"ip_address":"","ucode":"5BF9C3C68B8178","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIE3Vw0icEQic96rOykFD2bUo6KotVx53gvtG0CDe8tUKC3pNXxIQYMuyPyrgL06Zn32UWtEXTIVWMw/132","comment_is_top":false,"comment_ctime":1602575316,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602575316","product_id":100033601,"comment_content":"老师，栅格化说是在栅格化的线程池中把图块转换为位图，GPU也是生成位图，并且栅格化通常会使用GPU，那是不是说把图块转换位图的过程就是在GPU中完成的，栅格化的线程池是不是没用了？","like_count":0,"discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385005,"discussion_content":"老哥，你这个问题搞明白啦吗？我也有这个疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626848709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252419,"user_name":"林浩","can_delete":false,"product_type":"c1","uid":1375777,"ip_address":"","ucode":"266C06165AFA47","user_header":"https://static001.geekbang.org/account/avatar/00/14/fe/21/df75ca94.jpg","comment_is_top":false,"comment_ctime":1602296400,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1602296400","product_id":100033601,"comment_content":"老师我有几个疑问<br>文字提到的一旦“所有图块都被光栅化”是否是指当前视口里面的的图块呢？<br>假设是这样的话，那页面显示“狗头”的整个过程是这样<br>合成线程（渲染进程）将当前视口的图层“切分”成一个个图块，然后“放入”光栅化线程中，光栅化线程会使用GPU进程会依次对需要光栅化的图块进行“加速生成位图”的操作，最后保存在GPU内存中。<br>这里还有几个疑问：<br>1。合成线程发送“DrawQuod”指令给浏览器进程然后浏览器进程的“viz”组件根据指令将内容绘制到最终的屏幕显示器，它是通跨进程到GPU拿到已生成的位图放到浏览器内存中吗<br>2.光栅化过程是把图层切分成图块，它是切好一块就交给GPU进程去生成位图吗？就像生成车间的传送带一样吗？假设真是这样的话那就符合感官认识，网速慢的时候可以看到是页面是一帧帧渲染出来的我的直观感受是符合这个过程","like_count":0,"discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385007,"discussion_content":"第二个疑惑，图块应该也有优先级","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626849097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385006,"discussion_content":"第一个疑惑，之前老师说过，首先渲染进程里执行图层合成(Layer Compositor)，也就是生成图层的操作，具体地讲，渲染进程的合成线程接收到图层的绘制消息时，会通过光栅化线程池将其提交给GPU进程，在GPU进程中执行光栅化操作，执行完成，再将结果返回给渲染进程的合成线程，执行合成图层操作！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626849057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249165,"user_name":"the sword the god","can_delete":false,"product_type":"c1","uid":1471307,"ip_address":"","ucode":"07DA7A167FA32A","user_header":"https://static001.geekbang.org/account/avatar/00/16/73/4b/0b74915a.jpg","comment_is_top":false,"comment_ctime":1600489499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600489499","product_id":100033601,"comment_content":"老师，我有个问题，文章里讲到光栅化是一个把许多图块像素化生成位图的过程。但是我有点好奇，合成线程会等所有图块都光栅化，才向浏览器进程发送DrawQuad命令吗？<br>我记得以前好像，页面也是可以从上往下，一段段生成的，现在速度很快倒是没见了。","like_count":0},{"had_liked":false,"id":249005,"user_name":"Jehan","can_delete":false,"product_type":"c1","uid":1944577,"ip_address":"","ucode":"F59071B670A6E2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ac/01/7e13be41.jpg","comment_is_top":false,"comment_ctime":1600400657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600400657","product_id":100033601,"comment_content":"文中提到，拥有层叠上下文属性的元素会被提升为单独的一层，为什么我给元素设置了 position:absolute; z-index:2; 通过layers查看，发现并没有单独创建一个层级呢？如果是fixed，就可以","like_count":0},{"had_liked":false,"id":245121,"user_name":"Everlaa","can_delete":false,"product_type":"c1","uid":1708271,"ip_address":"","ucode":"9B4FFFABD62B07","user_header":"https://static001.geekbang.org/account/avatar/00/1a/10/ef/4c9b2383.jpg","comment_is_top":false,"comment_ctime":1598840361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598840361","product_id":100033601,"comment_content":"老师，救急。<br>我有个小网页，里面的一个模块都是使用 absolute + z-index 嵌套布局，正常情况下每个 absolute 元素确实创建了新的图层，此时显示正常；但是我一全屏，就出现 absolute 图层自动与父级合并，导致我的布局层叠出现问题（现在可以使用will-change强制让其单独占一个图层，但其他的创建层叠上下文的属性都没用）。麻烦老师帮忙解答一下。","like_count":0},{"had_liked":false,"id":244973,"user_name":"meet  you","can_delete":false,"product_type":"c1","uid":1374232,"ip_address":"","ucode":"13FA6867EED1DB","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/18/c9cbb2f0.jpg","comment_is_top":false,"comment_ctime":1598770244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598770244","product_id":100033601,"comment_content":"transform可以避免重排和重绘；是因为它在主线程跳过了layout，layer，而在合成线程执行的这两步计算，所以只是因为没有阻塞主线程，而不是计算量变少了或是其他优化 ？","like_count":0},{"had_liked":false,"id":244301,"user_name":"Demo_12","can_delete":false,"product_type":"c1","uid":2125587,"ip_address":"","ucode":"D99A09198B0710","user_header":"https://static001.geekbang.org/account/avatar/00/20/6f/13/19bec416.jpg","comment_is_top":false,"comment_ctime":1598453813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598453813","product_id":100033601,"comment_content":"给老师点赞，现在很多中文的渲染流程解析主要都是放在主线程的几个步骤上，对compositor和接下来的过程没有深入的分析，老师直接把整个过程串联起来了。<br>不过我对老师说的合成和栅格化的过程理解起来有些晦涩，有没有更多的资料可以参考呢？","like_count":0},{"had_liked":false,"id":242999,"user_name":"blue","can_delete":false,"product_type":"c1","uid":2078154,"ip_address":"","ucode":"07E4383E7E91B6","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b5/ca/d8783f69.jpg","comment_is_top":false,"comment_ctime":1597914892,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1597914892","product_id":100033601,"comment_content":"按照现在所讲的渲染流水线来看，怎么感觉要等到所有DOM解析完成才会进行绘制。<br>但实际上是dom是在一点点被渲染出来的，假设一个页面里面，在HTML中间插入一个script，在其中加入一个断点，就可以看到script之上DOM被渲染出来了，而下面的没有。<br>怎么解释这个过程？","like_count":0,"discussions":[{"author":{"id":2989668,"avatar":"","nickname":"Geek_4c5172","note":"","ucode":"D28A068DF8F926","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569635,"discussion_content":"script只会阻塞剩余未渲染的html。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651501858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385008,"discussion_content":"js会直接阻塞dom的解析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626849432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239044,"user_name":"太白北路","can_delete":false,"product_type":"c1","uid":1516144,"ip_address":"","ucode":"3C7E54D38408A3","user_header":"https://static001.geekbang.org/account/avatar/00/17/22/70/ab911260.jpg","comment_is_top":false,"comment_ctime":1596421929,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1596421929","product_id":100033601,"comment_content":"老师，transform属性变化为什么会直接触发合成？","like_count":0,"discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385009,"discussion_content":"这个知道啦吗，老铁？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626849446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235331,"user_name":"..·","can_delete":false,"product_type":"c1","uid":1393522,"ip_address":"","ucode":"6D266D45493357","user_header":"https://static001.geekbang.org/account/avatar/00/15/43/72/fbe7aed3.jpg","comment_is_top":false,"comment_ctime":1594976450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594976450","product_id":100033601,"comment_content":"老师，是不是如果一个页面放在那里我们不做任何操作，那么浏览器就会不停的重复上面总结的8步中的最后三部。<br>6.合成线程将图层分成图块，并在光栅化线程池中将图块转换成位图。<br>7.合成线程发送绘制图块命令 DrawQuad 给浏览器进程。<br>8.浏览器进程根据 DrawQuad 消息生成页面，并显示到显示器上。<br>这三个过程就是浏览器一帧之内默认所做的事情？","like_count":0},{"had_liked":false,"id":234817,"user_name":"熊永将","can_delete":false,"product_type":"c1","uid":1997739,"ip_address":"","ucode":"34F35667A483F8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/KeR5dnuAd2ia0qbvgjOnBPJp2fI60yxjI4QorSB57DmqWtGsnu2ET6sKSIDq5cZkKHLtlVTXY90TV8K0ibteaBMQ/132","comment_is_top":false,"comment_ctime":1594803876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594803876","product_id":100033601,"comment_content":"定位的元素 改变宽高会引起重排或重绘吗？","like_count":0},{"had_liked":false,"id":232258,"user_name":"昵称","can_delete":false,"product_type":"c1","uid":1486529,"ip_address":"","ucode":"38C14BF83EAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/16/ae/c1/76a9237f.jpg","comment_is_top":false,"comment_ctime":1593936665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593936665","product_id":100033601,"comment_content":"pating和合成是一个意思？看不到哪里有painting过程","like_count":0},{"had_liked":false,"id":225330,"user_name":"卡尔","can_delete":false,"product_type":"c1","uid":1445936,"ip_address":"","ucode":"BD6F76BC18FF8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","comment_is_top":false,"comment_ctime":1591716031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591716031","product_id":100033601,"comment_content":"合成线程会按照视口附近的图块来优先生成位图，实际生成位图的操作是由栅格化来执行的。所谓栅格化，是指将图块转换为位图<br>老师，这句话里的栅格化是一个过程是吗？那说由栅格化来执行，这双怎么理解呢？我是第一次接触这些概念，有点迷。我现在是二刷复习。","like_count":0},{"had_liked":false,"id":225327,"user_name":"卡尔","can_delete":false,"product_type":"c1","uid":1445936,"ip_address":"","ucode":"BD6F76BC18FF8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","comment_is_top":false,"comment_ctime":1591715279,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591715279","product_id":100033601,"comment_content":"老师，渲染引擎是V8里的一个模块吗？与JS引擎是什么关系？","like_count":0,"discussions":[{"author":{"id":1503447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f0/d7/82a2ffd4.jpg","nickname":"bingmo","note":"","ucode":"F92171460C0EA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282751,"discussion_content":"渲染引擎和v8是两个不同的功能模块。v8是js执行引擎，他只负责执行js代码。渲染引擎是根据html、css生成的网页，具体生成过程就是老师上述提到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592063230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222233,"user_name":"被爱是奢侈的幸福","can_delete":false,"product_type":"c1","uid":1038941,"ip_address":"","ucode":"277904394040E1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/da/5d/8dc4f86e.jpg","comment_is_top":false,"comment_ctime":1590722552,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590722552","product_id":100033601,"comment_content":"老师文中说使用transform属性实现动画效果不会引起重排重绘, 这里不引起重绘不是很理解,   使用transform属性会触发层叠上下文, 渲染引擎会为其绘制图层指令, 合成线程拿到指令去做后面的事, 如果没有重绘阶段, 合成现成拿啥子去做后面的事呢?(我理解的重绘就是绘制指令阶段)","like_count":0},{"had_liked":false,"id":221397,"user_name":"卡尔","can_delete":false,"product_type":"c1","uid":1445936,"ip_address":"","ucode":"BD6F76BC18FF8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","comment_is_top":false,"comment_ctime":1590491297,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1590491297","product_id":100033601,"comment_content":"老师，文章里有说到&#39;合成线程会按照视口附近的图块来优先生成位图，实际生成位图的操作是由栅格化来执行的。所谓栅格化，是指将图块转换为位图&#39;，后面又说到&#39;一旦所有图块都被光栅化，合成线程就会生成一个绘制图块的命令——“DrawQuad”，然后将该命令提交给浏览器进程&#39;，那么这里优先生成位图的意义是什么呢？反正都是全部位图完成才显示？","like_count":0,"discussions":[{"author":{"id":1038941,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/da/5d/8dc4f86e.jpg","nickname":"被爱是奢侈的幸福","note":"","ucode":"277904394040E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275521,"discussion_content":"老师的意思是不是 优先生成的那部分图块 全部光栅化  并不是整个页面的图块  全部光栅化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590723665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1038941,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/da/5d/8dc4f86e.jpg","nickname":"被爱是奢侈的幸福","note":"","ucode":"277904394040E1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275655,"discussion_content":"是这个意思吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590747498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":275521,"ip_address":""},"score":275655,"extra":""}]}]},{"had_liked":false,"id":216959,"user_name":"minjie","can_delete":false,"product_type":"c1","uid":1396308,"ip_address":"","ucode":"ED8648F7C2CBC3","user_header":"https://static001.geekbang.org/account/avatar/00/15/4e/54/72742fce.jpg","comment_is_top":false,"comment_ctime":1589377110,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589377110","product_id":100033601,"comment_content":"如果改变了页面分成了A、B、C三个图层，在图层B上的一个元素改变了几何属性，那么所有图层都将被重新计算吗？","like_count":0},{"had_liked":false,"id":215018,"user_name":"laoergege","can_delete":false,"product_type":"c1","uid":1288733,"ip_address":"","ucode":"559CCF36805A04","user_header":"https://static001.geekbang.org/account/avatar/00/13/aa/1d/b8fdd622.jpg","comment_is_top":false,"comment_ctime":1588870045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588870045","product_id":100033601,"comment_content":"图层是被合在一起后再切成图块还是，分别切成，到显示时再对应合成页面","like_count":0},{"had_liked":false,"id":213733,"user_name":"昵称","can_delete":false,"product_type":"c1","uid":1486529,"ip_address":"","ucode":"38C14BF83EAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/16/ae/c1/76a9237f.jpg","comment_is_top":false,"comment_ctime":1588525533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588525533","product_id":100033601,"comment_content":"如果将一个元素设置了能够提升层的css属性，那么这个元素是不是也是进行了我们常说的GPU加速呢？","like_count":0},{"had_liked":false,"id":212835,"user_name":"天然呆","can_delete":false,"product_type":"c1","uid":1377834,"ip_address":"","ucode":"EA738C87964EA5","user_header":"https://static001.geekbang.org/account/avatar/00/15/06/2a/3964c2a2.jpg","comment_is_top":false,"comment_ctime":1588219870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588219870","product_id":100033601,"comment_content":"老师，GPU进程将图块转成位图的过程结束，是不是有一个通知到合成线程的过程，比如GPU-&gt;渲染进程-&gt;合成线程-&gt;浏览器进程","like_count":0},{"had_liked":false,"id":212795,"user_name":"好好好","can_delete":false,"product_type":"c1","uid":1546855,"ip_address":"","ucode":"EE1878ADC840B6","user_header":"https://static001.geekbang.org/account/avatar/00/17/9a/67/73f384f9.jpg","comment_is_top":false,"comment_ctime":1588211996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588211996","product_id":100033601,"comment_content":"老师，请问preload和prefetch，从线程的角度是怎么解释的，和其他的请求有什么区别？这个问题困扰我很久了，希望老师能解答，感谢！","like_count":0},{"had_liked":false,"id":212455,"user_name":"李","can_delete":false,"product_type":"c1","uid":1484932,"ip_address":"","ucode":"3835972DE043C7","user_header":"https://static001.geekbang.org/account/avatar/00/16/a8/84/106691f9.jpg","comment_is_top":false,"comment_ctime":1588126811,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588126811","product_id":100033601,"comment_content":"请问一下，我这里理解对不对：重排为改变宽高&#47;位置导致相关dom都会重新计算之后重排，重绘再是发生再元素本身上的，本身的圆角&#47;阴影&#47;背景，文字大小发生变化，仅影响自身，所以自身进行重新计算之后重绘","like_count":0},{"had_liked":false,"id":206759,"user_name":"Kite","can_delete":false,"product_type":"c1","uid":1374421,"ip_address":"","ucode":"9DACE8E0EC84A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/d5/fd04fcbc.jpg","comment_is_top":false,"comment_ctime":1586930743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586930743","product_id":100033601,"comment_content":"transform 为什么能开启 GPU 加速呢","like_count":0},{"had_liked":false,"id":204667,"user_name":"dellyoung","can_delete":false,"product_type":"c1","uid":1133028,"ip_address":"","ucode":"3672FF1D1F8EFD","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/e4/fb47bfcd.jpg","comment_is_top":false,"comment_ctime":1586439641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586439641","product_id":100033601,"comment_content":"9. 渲染进程渲染页面<br>    9.1 构建 DOM 树<br>        9.1.1 输入：HTML 文档 -&gt; 处理：HTML 解析器解析 -&gt; 输出：DOM 数据解构<br>        9.1.2 具体：接收到Bytes字节流-&gt;（转换）HTML字符串-&gt;（解析）Token-&gt;（构建）Node-&gt;（合并）Dom 树<br>    9.2 样式计算（构建CSSOM树）<br>        输入：CSS 文本（Link外部引入、style标签、元素style属性）<br>        处理：属性值标准化，每个节点具体样式（继承、层叠）<br>        输出：styleSheets(CSSOM 树)<br>    9.3 页面布局（构建布局树）<br>        9.3.1 作用是：计算出 DOM 树中可见元素的几何位置<br>        9.3.2 具体：先将DOM树和CSSOM树合并为布局树(只包含可见节点)，然后进行布局计算，计算布局树节点的坐标位置。<br>    9.4 分层<br>        9.4.1 特定节点生成专用图层，生成一棵图层树（层叠上下文、Clip，类似 PhotoShop 里的图层）；<br>        9.4.2 拥有层叠上下文属性（明确定位属性、透明属性、CSS 滤镜、z-index 等）的元素会创建单独图层；<br>        9.4.3 没有图层的 DOM 节点属于父节点图层；<br>        9.4.4 需要剪裁的地方也会创建图层。<br>    9.5 图层绘制<br>        9.5.1 输入：图层树；<br>        9.5.2 渲染引擎对图层树中每个图层进行绘制；<br>        9.5.3 拆分成绘制指令，生成绘制列表，提交到合成线程；<br>        9.5.4 输出：绘制列表。<br>    9.6 分块(将图层划分为图块)<br>        合成线程会将较大、较长的图层（一屏显示不完，大部分不在视口内）划分为图块（tile, 256*256, 512*512）。<br>    9.7 栅格化(栅格化，是指将图块转换为位图)<br>        9.7.1 在栅格化线程池中，将视口附近的图块优先生成位图（栅格化执行该操作）；<br>        9.7.2 快速栅格化：GPU 加速，生成位图（GPU 进程）。<br>    9.8 合成和显示<br>        9.8.1 绘制图块命令——DrawQuad，提交给浏览器进程；<br>        9.8.2 浏览器进程的 viz 组件，接收合成线程发过来的 DrawQuad 命令，根据DrawQuad命令，绘制在屏幕上。","like_count":0},{"had_liked":false,"id":204666,"user_name":"dellyoung","can_delete":false,"product_type":"c1","uid":1133028,"ip_address":"","ucode":"3672FF1D1F8EFD","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/e4/fb47bfcd.jpg","comment_is_top":false,"comment_ctime":1586439634,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586439634","product_id":100033601,"comment_content":"总结：<br>1，用户输入url并回车，浏览器进程检查url，组装协议，构成完整的url<br>2，浏览器导航栏显示loading状态，但是页面还是呈现前一个页面，这是因为新页面的响应数据还没有获得<br>3，浏览器进程通过进程间通信（IPC）把url请求发送给网络进程<br>4，网络进程接收到url请求后检查本地缓存是否缓存了该请求资源，如果有则将该资源返回给浏览器进程（状态码200）<br>5，如果没有，网络进程向web服务器发起http请求（网络请求），请求流程如下：<br>    5.1 进行DNS解析，获取服务器ip地址：如果缓存过当前域名信息，就会直接返回缓存信息；<br>    5.2 根据ip地址和服务器建立tcp连接，tcp三次握手。<br>        5.2.1 传输层生成TCP数据包（包含源端口号、目的端口号），继续向下传输到网络层<br>        5.2.1 给数据包加上IP头部——包括源IP、目的IP，继续向下传输到物理层<br>        5.2.1 物理层通过物理网络（如光纤）传输给目的服务器主机<br>        5.2.1 目的服务器网络层接收到数据包，解析出IP头部，识别出数据部分，将解开的数据包向上传输到传输层<br>        5.2.1 目的服务器传输层获取到数据包，解析出TCP头部，识别端口<br>    5.3 如果是https请求则还需要建立TLS连接。<br>    5.4 构建请求头信息<br>    5.5 发送请求头信息<br>    5.6 服务器响应后，网络进程接收响应头和响应信息，并解析响应内容<br>    5.7 数据传输完成，TCP四次挥手断开连接。如果在HTTP头部加上Connection:Keep-Alive，TCP就一直保持连接。保持TCP连接可以省下下次需要建立连接的时间，提示资源加载速度<br>6，网络进程解析响应流程；<br>    6.1 检查状态码，如果是301&#47;302，则需要重定向，从Location自动中读取地址，重新进行第4步，<br>    6.2 如果不是重定向，首先服务器会根据 请求头中的If-None-Match 的值来判断请求的资源是否被更新，<br>        如果没有更新，就返回304状态码，相当于告诉浏览器之前的缓存还可以使用，就不返回新数据了<br>    6.3 200响应处理：<br>        检查响应类型Content-Type。<br>        如果是 字节流 类型，则将该请求提交给下载管理器，该导航流程结束，不再进行后续的渲染。<br>        如果是 text&#47;html 则通知浏览器进程，准备渲染进程进行渲染。<br>7，准备渲染进程<br>    7.1 浏览器进程获取到通知，根据当前页面B是否是从页面A打开的并且和页面A是否是同一个站点（根域名和协议一样就被认为是同一个站点）。<br>        如果相同，则复用原来的进程。<br>        如果不同，新创建一个新的渲染进程<br>8. 传输数据、更新状态<br>    8.1 渲染进程准备好后，浏览器进程向渲染进程发起“提交文档”的消息，渲染进程接收到消息后，和网络进程建立传输数据的“管道”<br>    8.2 渲染进程接收完数据后，向浏览器发送“确认提交”<br>    8.3 浏览器进程接收到“确认提交”的消息后，更新浏览器界面状态：包括安全状态、地址栏的 URL、前进后退的历史状态，并更新web页面，此时的web页面是空白页。","like_count":0,"discussions":[{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556336,"discussion_content":"牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647318261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201382,"user_name":"abson","can_delete":false,"product_type":"c1","uid":1517591,"ip_address":"","ucode":"ED6E65CB4221AE","user_header":"https://static001.geekbang.org/account/avatar/00/17/28/17/2ee45db9.jpg","comment_is_top":false,"comment_ctime":1585758379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585758379","product_id":100033601,"comment_content":"在图层那里老师您说到除了层叠上下文之外还有就是可以通过剪裁的方式，但是我实际上运行您给的代码发现并没有分层，网上看的好像都只有说层叠上下文才行，不知老师您有没有更多的资料让我佐证一下。","like_count":0},{"had_liked":false,"id":194766,"user_name":"......","can_delete":false,"product_type":"c1","uid":1639494,"ip_address":"","ucode":"43DAE89109746D","user_header":"https://static001.geekbang.org/account/avatar/00/19/04/46/9629f93e.jpg","comment_is_top":false,"comment_ctime":1585104085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585104085","product_id":100033601,"comment_content":"老师为什么给div设置了opacity:.5之后还是只看见一个图层，按文中所说不是拥有层叠上下文属性的元素会被提升为单独的一层吗？","like_count":0},{"had_liked":false,"id":189797,"user_name":"blueBean","can_delete":false,"product_type":"c1","uid":1816697,"ip_address":"","ucode":"6A68D2414BD904","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","comment_is_top":false,"comment_ctime":1584552144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584552144","product_id":100033601,"comment_content":"请问改变块级上下文的width，left属性，会导致重排吗？","like_count":0},{"had_liked":false,"id":188939,"user_name":"大蓝","can_delete":false,"product_type":"c1","uid":1355288,"ip_address":"","ucode":"855648168C77ED","user_header":"https://static001.geekbang.org/account/avatar/00/14/ae/18/ee4ded86.jpg","comment_is_top":false,"comment_ctime":1584436457,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584436457","product_id":100033601,"comment_content":"一旦所有图块都被光栅化，合成线程就会生成一个绘制图块的命令——“DrawQuad”，然后将该命令提交给浏览器进程。<br><br>所以不是渐进式的渲染，而是等所有图块光栅化，这个我理解的对吗？","like_count":0,"discussions":[{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556337,"discussion_content":"优先的那些图块全部光栅化吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647318303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178189,"user_name":"RJHJZTNL","can_delete":false,"product_type":"c1","uid":1022187,"ip_address":"","ucode":"B9A2866ADE8635","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/eb/57a6713c.jpg","comment_is_top":false,"comment_ctime":1581604276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581604276","product_id":100033601,"comment_content":"wywsyoy，dsjscmywsy，zsddlzq，mdba，ryyy","like_count":0},{"had_liked":false,"id":175957,"user_name":"Accumulate","can_delete":false,"product_type":"c1","uid":1080386,"ip_address":"","ucode":"E4A739D48EA663","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/42/bc0fdde1.jpg","comment_is_top":false,"comment_ctime":1580892241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580892241","product_id":100033601,"comment_content":"想不到久久无法彻底理解的HTTP协议、TCP协议等的关系作用，在这个专栏里得到了解答，非常清晰易懂。这是我第二次学习本专栏了~","like_count":0},{"had_liked":false,"id":175087,"user_name":"🐻🔫🐸","can_delete":false,"product_type":"c1","uid":1308880,"ip_address":"","ucode":"40BABFD9D358BF","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/d0/ecc68a4f.jpg","comment_is_top":false,"comment_ctime":1580549786,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1580549786","product_id":100033601,"comment_content":"图层的合并到底在什么过程中执行，搜了很久没看到相关解释","like_count":0,"discussions":[{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556338,"discussion_content":"应该是宣传进程里面的合成线程中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647318368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172435,"user_name":"时光逆行","can_delete":false,"product_type":"c1","uid":1395627,"ip_address":"","ucode":"D2D49FA034A558","user_header":"https://static001.geekbang.org/account/avatar/00/15/4b/ab/220aa56c.jpg","comment_is_top":false,"comment_ctime":1579176069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579176069","product_id":100033601,"comment_content":"1. ‘合成线程会按照视口附近的图块来优先生成位图’  <br>2. ‘一旦所有图块都被光栅化，合成线程就会生成一个绘制图块的命令——“DrawQuad”，然后将该命令提交给浏览器进程。’<br>我有个疑问 优先生成的部分位图 绘制不出来吗？ ","like_count":0},{"had_liked":false,"id":169153,"user_name":"学习使人进步","can_delete":false,"product_type":"c1","uid":1740548,"ip_address":"","ucode":"D959566A25D759","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8f/04/508f860b.jpg","comment_is_top":false,"comment_ctime":1578281019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578281019","product_id":100033601,"comment_content":"无非是开源节流：<br>一、减少次数（节流）<br>使用class类名；<br>一次性操作cssText；<br>样式读写分离（防止强制刷新队列）；<br>使用虚拟节点；<br>使节点暂时脱离文档流（仅两次重排）。<br>二、减小范围（节流）<br>使节点暂时脱离文档流（文档流内元素不受其影响）；<br>所在容器“固定（不一定是定死多少px）”宽高，不影响容器外部元素布局（这需要写html时注重结构的设计）。<br>三、GPU加速（开源）<br>将2d动画改成3d。","like_count":0},{"had_liked":false,"id":164451,"user_name":"Grow","can_delete":false,"product_type":"c1","uid":1401790,"ip_address":"","ucode":"F821BACDB9BA5D","user_header":"https://static001.geekbang.org/account/avatar/00/15/63/be/960537a5.jpg","comment_is_top":false,"comment_ctime":1576996482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576996482","product_id":100033601,"comment_content":"如果视口中，几个图层有重叠，浏览器是绘制所有图层，还是只绘制每个图层中用户能看到的那些图块?","like_count":0},{"had_liked":false,"id":161882,"user_name":"Rahim","can_delete":false,"product_type":"c1","uid":1782301,"ip_address":"","ucode":"BA3FE7805B15D3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/32/1d/d4e03718.jpg","comment_is_top":false,"comment_ctime":1576389528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576389528","product_id":100033601,"comment_content":"合成层到概念里面没有提到吗<br>","like_count":0},{"had_liked":false,"id":161471,"user_name":"神三元","can_delete":false,"product_type":"c1","uid":1202089,"ip_address":"","ucode":"0FB2E7C0683599","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/a9/9abbe7a4.jpg","comment_is_top":false,"comment_ctime":1576213262,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576213262","product_id":100033601,"comment_content":"老师我的Chrome面板里面怎么没有Layers这一项，是需要安装扩展吗？","like_count":0,"discussions":[{"author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81123,"discussion_content":"devtools 3点展开里有个more tools 选择layers ","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1576224480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159878,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1059952,"ip_address":"","ucode":"F70511D614B9F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/70/02b627a6.jpg","comment_is_top":false,"comment_ctime":1575816129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575816129","product_id":100033601,"comment_content":"重排和回流有什么区别？","like_count":0},{"had_liked":false,"id":156572,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1574915683,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574915683","product_id":100033601,"comment_content":"有一个问题是：栅格化所有的图块，这里所有的是指页面全部的图块吗，还是只是viewport附近的图块；这个跟lazy-loading有什么关系吗？","like_count":0},{"had_liked":false,"id":154445,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1574431507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574431507","product_id":100033601,"comment_content":"知道原因了，很有趣，在OS X系统中，Chrome和其他App的分屏模式下，图层不显示，单独使用Chrome的情况下正常","like_count":0},{"had_liked":false,"id":154261,"user_name":"非洲大地我最凶","can_delete":false,"product_type":"c1","uid":1485254,"ip_address":"","ucode":"30CDE0B486AE26","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoaxy8ibvXITdMcXFfd5O5E7Epq8MG5z1OBhO7MQXTfbcpA0fpcsIxkCHyUZ5ZSrj3spZpAQxEC9GA/132","comment_is_top":false,"comment_ctime":1574399281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574399281","product_id":100033601,"comment_content":"老师，请问<br>1.生成位图的作用是什么呢，生成位图后保存在GPU的内存里面之后，合成线程就会生成一个绘制图块的命令——“DrawQuad”给渲染主线程，咋感觉后面没位图啥事了<br>2.我看在渲染里面由好几个线程，渲染主线程，合成进程。跟JS是单线程的有什么区别和联系吗","like_count":0},{"had_liked":false,"id":146853,"user_name":"余文郁","can_delete":false,"product_type":"c1","uid":1388319,"ip_address":"","ucode":"A51117A929EBD8","user_header":"https://static001.geekbang.org/account/avatar/00/15/2f/1f/f95bd8c9.jpg","comment_is_top":false,"comment_ctime":1572676599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572676599","product_id":100033601,"comment_content":"重排叫回流是不是好一点老师，我看一些文章都是叫回流的","like_count":0},{"had_liked":false,"id":146551,"user_name":"忘忧草的约定","can_delete":false,"product_type":"c1","uid":1114753,"ip_address":"","ucode":"F99D2F5D179B2A","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/81/489e1cd4.jpg","comment_is_top":false,"comment_ctime":1572571515,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572571515","product_id":100033601,"comment_content":"老师请教一下，合成线程拿到的仅仅是绘制列表，合成线程如何根据绘制列表判断出视口然后生成位图呀？还是说分层树也会提交给合成线程呀？","like_count":0,"discussions":[{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556339,"discussion_content":"GPU来把图块绘制成位图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647318548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146339,"user_name":"Lx","can_delete":false,"product_type":"c1","uid":1632217,"ip_address":"","ucode":"90F4EEE985A9B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/d9/83d1346c.jpg","comment_is_top":false,"comment_ctime":1572502729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572502729","product_id":100033601,"comment_content":"老师，实际测试发现并不是有剪裁或者元素有层叠上下文就会产生单独的层！！！是不是要产生重叠效果才会有啊？！","like_count":0},{"had_liked":false,"id":145734,"user_name":"Lx","can_delete":false,"product_type":"c1","uid":1632217,"ip_address":"","ucode":"90F4EEE985A9B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/d9/83d1346c.jpg","comment_is_top":false,"comment_ctime":1572356300,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572356300","product_id":100033601,"comment_content":"老师，为什么我最欣版本chrome在layers标签内，只看到details，没有看到profiles呢？","like_count":0,"discussions":[{"author":{"id":1485254,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoaxy8ibvXITdMcXFfd5O5E7Epq8MG5z1OBhO7MQXTfbcpA0fpcsIxkCHyUZ5ZSrj3spZpAQxEC9GA/132","nickname":"非洲大地我最凶","note":"","ucode":"30CDE0B486AE26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54506,"discussion_content":"在paint展示层级的元素上点两次就会出现profiles","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574301262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143945,"user_name":"π_π蔚","can_delete":false,"product_type":"c1","uid":1502796,"ip_address":"","ucode":"DED817B325A9E9","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/4c/dc3da8f1.jpg","comment_is_top":false,"comment_ctime":1571811424,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571811424","product_id":100033601,"comment_content":"看到DocumentFragment的插入不会触发 DOM 树的重新渲染，可以优化性能<br>我理解DOM树没有改变，所以主DOM树没有渲染流水线的12345步骤<br>DocumentFragment里面的元素是不是会完整走一次12345<br>然后合成线程合成他们的绘制列表，渲染到页面上？","like_count":0},{"had_liked":false,"id":142258,"user_name":"knight","can_delete":false,"product_type":"c1","uid":1386843,"ip_address":"","ucode":"17FAC2EBE87434","user_header":"https://static001.geekbang.org/account/avatar/00/15/29/5b/88c2d1bd.jpg","comment_is_top":false,"comment_ctime":1571321571,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1571321571","product_id":100033601,"comment_content":"想请教老师一个问题：<br>问题表现为：当调用某个接口，接口一直处以pending状态，此时页面就被卡死，交互无效，同域下的其他页面也被卡死，且控制台无报错。<br>不知道问题的原因可能是由什么导致的...","like_count":0,"discussions":[{"author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81132,"discussion_content":"你这接口是同步的吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576225624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1038773,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/b5/abb113a3.jpg","nickname":"panda","note":"","ucode":"BDF29BBD7F3232","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42077,"discussion_content":"你是不是用的虚拟Dom来渲染页面的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572581053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140381,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":1167046,"ip_address":"","ucode":"454538FF253B5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","comment_is_top":false,"comment_ctime":1570899782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570899782","product_id":100033601,"comment_content":"想请教下 这节课提到的几个环节 layout、draw quad和display等 在chromium项目的源码中具体什么位置呢？很感兴趣display调用显示器最底层时的c++实现，我在自己本地编译时曾关注到似乎依赖了gtk等等第三方库？","like_count":0},{"had_liked":false,"id":139974,"user_name":"allenmind","can_delete":false,"product_type":"c1","uid":1269938,"ip_address":"","ucode":"4664B583CFB76C","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/b2/38662509.jpg","comment_is_top":false,"comment_ctime":1570778265,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1570778265","product_id":100033601,"comment_content":"请问「渲染进程」和「渲染引擎」指的是同一样东西吗？文中多次出现这两个名字，感觉有点混乱","like_count":0,"discussions":[{"author":{"id":1501140,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/d4/115cef63.jpg","nickname":" 小云子","note":"","ucode":"C2E5E7D236CDCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374601,"discussion_content":"不是一个东西，一个是进程，一个是引擎，可以理解为渲染引擎是运行在渲染进程中的程序，渲染引擎负责绘制页面。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1621261715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1531784,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5f/88/ed9acee8.jpg","nickname":"大掌柜〈海棠依旧〉","note":"","ucode":"023DF965D55B7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556340,"discussion_content":"渲染引擎指的应该是浏览器引擎吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647318601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134402,"user_name":"wubinsheng","can_delete":false,"product_type":"c1","uid":1661637,"ip_address":"","ucode":"6ECCABF4C4D7D1","user_header":"https://static001.geekbang.org/account/avatar/00/19/5a/c5/221ab4d9.jpg","comment_is_top":false,"comment_ctime":1568819492,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568819492","product_id":100033601,"comment_content":"有两个疑问：<br>1、合成线程会按照视口附近的图块来优先生成位图...<br>→这个是不是漏了啥？不然，走的是一条渲染流水线，那这个优先生成位图，似乎也没什么意义啊，反正所有的位图都是一起显示到画面上。<br><br>2、如果你通过 JavaScript 或者 CSS 修改元素的几何位置属性，例如改变元素的宽度、高度等，那么浏览器会触发重新布局<br>→ 样式计算时，已经包含了link、&lt;style&gt;、style=&quot;&quot;这三种方式定义的所有样式，那哪还会有通过CSS修改元素的几何位置属性？难道是指在js中通过dom.style来修改css样式？","like_count":0,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212840,"discussion_content":"第一个不清楚，第二个，难道你不知道有动画效果这么一说吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585022369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130981,"user_name":"Geek_8476da","can_delete":false,"product_type":"c1","uid":1623282,"ip_address":"","ucode":"9AE358E5F160AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erMrXia5kb1AXUJoiccmIQxSQ7ib5SkibsQqd9FZInQcwYeNbZXp7CCtMibtg0RLHoza1NVo8A5M3uIluA/132","comment_is_top":false,"comment_ctime":1567588748,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567588748","product_id":100033601,"comment_content":"因为重绘几乎所有流程都要走一遍，重排也只是跳过了layout和layers这两个子过程，尽量减少布局宽高的改变以及颜色的渲染能有效减少重绘和重排","like_count":0,"discussions":[{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219908,"discussion_content":"颠倒了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585823212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130172,"user_name":"Lx","can_delete":false,"product_type":"c1","uid":1632217,"ip_address":"","ucode":"90F4EEE985A9B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/d9/83d1346c.jpg","comment_is_top":false,"comment_ctime":1567396670,"is_pvip":false,"replies":[{"id":"48585","content":"一个div一般不会，在有必要的时候才会分层！<br><br>光栅化主要就是在GPU上执行的，当然也可以在cpu上执行。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567413675,"ip_address":"","comment_id":130172,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567396670","product_id":100033601,"comment_content":"老师，简单页面，只有一个div。我想问下是会产生一个分层吗？光栅化的过程会利用gpu吗？因为我记得gpu处理3d","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465842,"discussion_content":"一个div一般不会，在有必要的时候才会分层！\n\n光栅化主要就是在GPU上执行的，当然也可以在cpu上执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567413675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1632217,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e7/d9/83d1346c.jpg","nickname":"Lx","note":"","ucode":"90F4EEE985A9B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7170,"discussion_content":"Gpu和gui的区别就是3d放在gpu吗？还是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567413908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130159,"user_name":"我爱吃包子","can_delete":false,"product_type":"c1","uid":1624517,"ip_address":"","ucode":"8B7ECA89A23B64","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VU7cO4auuTLJ4mlk9SUs2Gia9mYYvTS8hfhFL7w4cYP3uwKw3X4aPIic3aYic83vY3HKzjQac3JcdnamuvBfRTibibQ/132","comment_is_top":false,"comment_ctime":1567394293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567394293","product_id":100033601,"comment_content":"老师，我想咨询一个问题，我有一个50条数据的表格，表格中一列限制了最大的宽高。里面内容撑起了滑动条。浏览器窗口在我原显示屏上 我看 gpu 进程占用了 11G的内存。但是我把窗口拉到外接显示屏，gpu 内存消耗就正常了。mac pro 15款，显卡是 Intel Iris Graphics 6100","like_count":0},{"had_liked":false,"id":129945,"user_name":"闲闲","can_delete":false,"product_type":"c1","uid":1637571,"ip_address":"","ucode":"B2099BDCFF6191","user_header":"https://static001.geekbang.org/account/avatar/00/18/fc/c3/0991edfc.jpg","comment_is_top":false,"comment_ctime":1567332397,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1567332397","product_id":100033601,"comment_content":"为什么css  transfrom  不会触发重排呢  不是可以改变位置吗","like_count":0,"discussions":[{"author":{"id":1311758,"avatar":"https://static001.geekbang.org/account/avatar/00/14/04/0e/87adea1d.jpg","nickname":"DENG永青","note":"","ucode":"FBBAF46E858596","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38543,"discussion_content":"那么使用CSS3的transform来实现动画是否可以避免重排问题？或者说浏览器针对这一部分做了其他优化？\n\n经过一番查找，答案如下：\n\nCSS的最终表现分为以下四步：Recalculate Style -> Layout -> Paint Setup and Paint -> Composite Layers\n\n按照中文的意思大致是 查找并计算样式 -> 排布 -> 绘制 -> 组合层\n\n这上面的几个步骤有点类似于上文说到的重排必定导致重绘，而查询属性会强制发生重排。所以上文提到的重排重绘内容可以结合这里进行理解。\n\n由于transform是位于Composite Layers层，而width、left、margin等则是位于Layout层，在Layout层发生的改变必定导致Paint Setup and Paint -> Composite Layers，所以相对而言使用transform实现的动画效果肯定比left这些更加流畅。\n\n而且就算抛开这一角度，在另一方面浏览器也会针对transform等开启GPU加速。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571800973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7585,"discussion_content":"css transfrom在合成线程中， 也就是在gpu内，不在 主线程中的。自然没有重排。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567579609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1040176,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/30/95743ba5.jpg","nickname":"黄榆","note":"","ucode":"AA979FCDD4A33A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7225,"discussion_content":"https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567424597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129178,"user_name":"依然爱你","can_delete":false,"product_type":"c1","uid":1336712,"ip_address":"","ucode":"9A386C68112716","user_header":"https://static001.geekbang.org/account/avatar/00/14/65/88/2aba7bb0.jpg","comment_is_top":false,"comment_ctime":1567057638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567057638","product_id":100033601,"comment_content":"一直听人说transform移动比操控定位性能更高，原来原因在这里啊！","like_count":0},{"had_liked":false,"id":128210,"user_name":"王玄","can_delete":false,"product_type":"c1","uid":1394410,"ip_address":"","ucode":"E54ABB340D1E49","user_header":"https://static001.geekbang.org/account/avatar/00/15/46/ea/b86667b8.jpg","comment_is_top":false,"comment_ctime":1566863332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566863332","product_id":100033601,"comment_content":"老师，有没有一些相近的文章细讲重绘和重拍，网上虽然有但都是杂乱无章","like_count":0},{"had_liked":false,"id":128025,"user_name":"Geek_Jamorx","can_delete":false,"product_type":"c1","uid":1608908,"ip_address":"","ucode":"5B5669D0C75FBD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0F94uoYZQicRd7YEFjEJWm0EaUJXzkhiaqa5GQQ8a1FkicQIoHC4sp2ZG9m1JAFABuGsj34ucztjibA/132","comment_is_top":false,"comment_ctime":1566822334,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566822334","product_id":100033601,"comment_content":"请问这里的分层和composite layer的分层好像不是同一个概念是么？<br>will-change：top会提升分层的分层是怎么理解呢<br>","like_count":0,"discussions":[{"author":{"id":1040176,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/30/95743ba5.jpg","nickname":"黄榆","note":"","ucode":"AA979FCDD4A33A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7224,"discussion_content":"写一个页面用Chrome devtool  的 layers就可以看到will-change的效果。例如body下有个#test div,给这个div设置 will-change: transform; layers中就能看到这个div从document中独立出一层","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567424543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127742,"user_name":"Snow同學","can_delete":false,"product_type":"c1","uid":1390875,"ip_address":"","ucode":"231E98C721E4D2","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/1b/bcabd223.jpg","comment_is_top":false,"comment_ctime":1566786967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566786967","product_id":100033601,"comment_content":"请问老师,在开发时，<br>1.空页面加载一个URL，如何知道页面已经显示在了屏幕上（从用户真实的视觉上看到页面），在代码层面可以通过检测什么状态知道嘛？<br>2.在页面已经显示到屏幕后完成，通过点击一个按钮，执行向document添加一些元素（可以是div，div里也可以有更过标签和内容），如何知道这些元素什么时候真正显示在屏幕上，在代码层面可以通过检测什么状态知道嘛？","like_count":0},{"had_liked":false,"id":127008,"user_name":"漠","can_delete":false,"product_type":"c1","uid":1042317,"ip_address":"","ucode":"86CFDCAD927950","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/8d/d381883a.jpg","comment_is_top":false,"comment_ctime":1566534510,"is_pvip":false,"replies":[{"id":"46994","content":"右边那个下拉菜单看看","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566538005,"ip_address":"","comment_id":127008,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1566534510","product_id":100033601,"comment_content":"老师，为什么我的devtool里面没有layer这个面板","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464280,"discussion_content":"右边那个下拉菜单看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566538005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1566826,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e8/6a/6438c61b.jpg","nickname":"小、sen","note":"","ucode":"0FEB3465198330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252273,"discussion_content":"more tools  里面 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588146872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1663106,"avatar":"https://static001.geekbang.org/account/avatar/00/19/60/82/1d8c8c27.jpg","nickname":"钓人的鱼","note":"","ucode":"FB437B918E5868","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15056,"discussion_content":"ctrl + p   >  show layer ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568800429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042317,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e7/8d/d381883a.jpg","nickname":"漠","note":"","ucode":"86CFDCAD927950","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6172,"discussion_content":"找到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566741341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126726,"user_name":"18670722118","can_delete":false,"product_type":"c1","uid":1517036,"ip_address":"","ucode":"99B6034003FB32","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eog0rbC7JqCOmEv3oSNsFtfbNrovTCR4mD74nHCu0gicsiav7Usu02ickDHmLFgIk57NJdnibJeEn1WLw/132","comment_is_top":false,"comment_ctime":1566459070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566459070","product_id":100033601,"comment_content":"这章解了我多年的迷惑，大赞👍👍👍<br>遇到一个问题还望老师指教，优化一个功能，就是很简单的弹出一个列表，但是问题是在列表弹出后，占用内存一下子涨了100m+，把这个列表收缩回去，内存就正常了。在layers中可以看到有很多层，而列表这一层在其他层下面(即使在该层弹出来之后也如此)，我的疑问是为什么它的层是在其他下面，却不会被其他层遮挡住，而是显示在上面？","like_count":0},{"had_liked":false,"id":126403,"user_name":"🐻🔫🐸","can_delete":false,"product_type":"c1","uid":1308880,"ip_address":"","ucode":"40BABFD9D358BF","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/d0/ecc68a4f.jpg","comment_is_top":false,"comment_ctime":1566381961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566381961","product_id":100033601,"comment_content":"另外图层的合并到底发生在 切分图块前 还是切分好图块并完成删格化之后生成位图 在进行合并呢。 感觉好像在切分图块前 先进行图层的合并会更快一点","like_count":0},{"had_liked":false,"id":126397,"user_name":"🐻🔫🐸","can_delete":false,"product_type":"c1","uid":1308880,"ip_address":"","ucode":"40BABFD9D358BF","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/d0/ecc68a4f.jpg","comment_is_top":false,"comment_ctime":1566381184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566381184","product_id":100033601,"comment_content":"那合成线程是不是会同时获取到 图层列表 和 绘制序列 先对图层分成一个个图块 然后从绘制序列中取出对应图块需要的绘制序列 进行绘制。 如果光有绘制序列提交给合成线程的话，无法完成分块这个过程啊","like_count":0},{"had_liked":false,"id":125905,"user_name":"哎姆哦剋","can_delete":false,"product_type":"c1","uid":1553505,"ip_address":"","ucode":"D2532A348F07E5","user_header":"https://static001.geekbang.org/account/avatar/00/17/b4/61/1db459e5.jpg","comment_is_top":false,"comment_ctime":1566270721,"is_pvip":false,"replies":[{"id":"46794","content":"目前看是整个页面都需要重排，不过不排除Google以后会优化这块操作","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566427233,"ip_address":"","comment_id":125905,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566270721","product_id":100033601,"comment_content":"请问老师，我改变了宽高，是不是只对同一图层有影响，其他图层不会重排？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463743,"discussion_content":"目前看是整个页面都需要重排，不过不排除Google以后会优化这块操作","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566427233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1040176,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/30/95743ba5.jpg","nickname":"黄榆","note":"","ucode":"AA979FCDD4A33A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7221,"discussion_content":"我在最新版Chrome里面看到，整个document会重排，只有实际发生了变化的图层会重绘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125598,"user_name":"李懂","can_delete":false,"product_type":"c1","uid":1330436,"ip_address":"","ucode":"539E6639042C88","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/04/5e0d3713.jpg","comment_is_top":false,"comment_ctime":1566208959,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566208959","product_id":100033601,"comment_content":"我改变了宽高，是不是只对同一图层有影响，其他图层不会重排？","like_count":0},{"had_liked":false,"id":125566,"user_name":"羽蝶曲","can_delete":false,"product_type":"c1","uid":1337216,"ip_address":"","ucode":"FEA9FB7F321874","user_header":"https://static001.geekbang.org/account/avatar/00/14/67/80/dae518d2.jpg","comment_is_top":false,"comment_ctime":1566204662,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1566204662","product_id":100033601,"comment_content":"老师，我有个问题想问下，我试了https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;Guide&#47;CSS&#47;Understanding_z_index&#47;The_stacking_context 这里面z-index的例子，为啥Layers里看到的图层还是只有一个，不是说拥有层叠上下文属性的元素会被提升为单独的一层吗？<br>麻烦帮忙解惑，谢谢！","like_count":0,"discussions":[{"author":{"id":1575104,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/cEiadV2uaZmhwu19Xcft9Qg0MsjmFlwzYbqbBJSwgKrmwOSaUZ6OibQZAEolxvbUH4M6NXAkC9NprpBXl4MO1iavQ/132","nickname":"shezhenbiao","note":"","ucode":"479362E230F31C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5995,"discussion_content":"z-index是否生效了呢？它只能用在相对或绝对定位的节点上","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566571130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2989668,"avatar":"","nickname":"Geek_4c5172","note":"","ucode":"D28A068DF8F926","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569634,"discussion_content":"虽然设置了z-index，但chrome默认情况下应该认为该dom元素不会移动。所以从渲染优化角度考虑，没有单独生成一个layer。你可以试试看will-change这个属性，为该dom向chrome浏览器暗示。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651501465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1639494,"avatar":"https://static001.geekbang.org/account/avatar/00/19/04/46/9629f93e.jpg","nickname":"......","note":"","ucode":"43DAE89109746D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213552,"discussion_content":"+1 我也只看见一个...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585103998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125542,"user_name":"Chao","can_delete":false,"product_type":"c1","uid":1108745,"ip_address":"","ucode":"DD7742F5537521","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/09/ba5f0135.jpg","comment_is_top":false,"comment_ctime":1566201180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566201180","product_id":100033601,"comment_content":"获取下高宽都将触发重排， 所以本身很难避免。 ","like_count":0},{"had_liked":false,"id":125366,"user_name":"ヾ(◍°∇°◍)ﾉﾞ","can_delete":false,"product_type":"c1","uid":1044175,"ip_address":"","ucode":"89545632BDA56E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","comment_is_top":false,"comment_ctime":1566174585,"is_pvip":false,"replies":[{"id":"46031","content":"重绘，重排和GPU可没什么关系哦，你看文中介绍的，他们是cpu运算的，且占用页面主线程！<br><br>所以如果没有这两个阶段的操作，那么每生成效率会高很多。<br><br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566178417,"ip_address":"","comment_id":125366,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566174585","product_id":100033601,"comment_content":"减少重排重绘可以减少gpu等的调用频次，gpu调用本身开销不小","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463545,"discussion_content":"重绘，重排和GPU可没什么关系哦，你看文中介绍的，他们是cpu运算的，且占用页面主线程！\n\n所以如果没有这两个阶段的操作，那么每生成效率会高很多。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566178417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125270,"user_name":"man-moonth","can_delete":false,"product_type":"c1","uid":1383156,"ip_address":"","ucode":"145EED9CFA19E4","user_header":"https://static001.geekbang.org/account/avatar/00/15/1a/f4/a40453e7.jpg","comment_is_top":false,"comment_ctime":1566135035,"is_pvip":true,"replies":[{"id":"46013","content":"不是处理非常快，而是直接跳过这些阶段，没处理。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566173976,"ip_address":"","comment_id":125270,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566135035","product_id":100033601,"comment_content":"请教老师，因为重绘(paint)的输入是图层树，“重绘省去了布局和分层阶段”是否可以理解为：因为修改绘制属性并不改变元素的布局计算，所以重绘渲染的布局(layout)、分层(layer)两个阶段处理得非常快以至于可以忽略不计。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463504,"discussion_content":"不是处理非常快，而是直接跳过这些阶段，没处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566173976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1040176,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/30/95743ba5.jpg","nickname":"黄榆","note":"","ucode":"AA979FCDD4A33A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7222,"discussion_content":"在chrome 中看到，只修改绘制属性会跳过layout阶段，但还是会调用update layer tree ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567424200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124922,"user_name":"tokey","can_delete":false,"product_type":"c1","uid":1337746,"ip_address":"","ucode":"5278487F37D4EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","comment_is_top":false,"comment_ctime":1566015869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566015869","product_id":100033601,"comment_content":"那您说的“通常”，可以举个例子么老师。<br><br>还有您的课程会讲浏览器渲染帧么","like_count":0},{"had_liked":false,"id":124900,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566011526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566011526","product_id":100033601,"comment_content":"为什么减少重绘、重排能优化 Web 性能吗？<br>宏观上来看，减少重绘、重排因为跳过了一些渲染流水线的步骤，使总体工作量减少了，所以性能得到了提升。<br><br><br>那又有那些具体的实践方法能减少重绘、重排呢？<br>尽量少用JS直接操作DOM改变宽高等信息，使用transform类的属性在单独的合成层上操作，有多个操作先在内存中合并，最后再一次性提交。","like_count":0}]}