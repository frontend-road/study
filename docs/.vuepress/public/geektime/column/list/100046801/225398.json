{"id":225398,"title":"23 | MySQL经常遇到的高可用、分片问题，NewSQL是如何解决的？","content":"<p>你好，我是李玥。</p><p>在这个系列课程中，我们讲的都是如何解决生产系统中面临的一些存储系统相关的问题。在最后两节课里面，我们来说点儿新东西，看一下存储这个技术领域，可能会有哪些值得关注的新技术。当然，技术圈每天都有很多新的技术出现，也会经常发很多论文，出现很多的开源项目，这些大多数都不太靠谱儿。</p><p>今天我给你要说的这个New SQL，它是我个人认为非常靠谱，甚至在未来可能会取代MySQL这样的关系型数据库的一个技术。MySQL是几乎每一个后端开发人员必须要精通的数据库，既然New SQL非常有可能在将来替代MySQL，那我们就非常有必要提前去了解一下了。</p><h2>什么是New SQL？</h2><p>什么是New SQL？这个说来话长了，还要从存储技术发展的历史来解读。我们知道，早期只有像MySQL这样的关系数据库，这种关系型数据库因为支持SQL语言，后来被叫做SQL或者Old SQL。</p><p>然后，出现了Redis和很多KV存储系统，性能上各种吊打MySQL，而且因为存储结构简单，所以比较容易组成分布式集群，并且能够做到水平扩展、高可靠、高可用。因为这些KV存储不支持SQL，为了以示区分，被统称为No SQL。</p><p>No SQL本来希望能凭借高性能和集群的优势，替代掉Old SQL。但用户是用脚投票的，这么多年实践证明，你牺牲了SQL这种强大的查询能力和ACID事务支持，用户根本不买账，直到今天，Old SQL还是生产系统中最主流的数据库。</p><!-- [[[read_end]]] --><p>这个时候，大家都开始明白了，无论你其他方面做的比Old SQL好再多，SQL和ACID是刚需，这个命你革不掉的。你不支持SQL，就不会有多少人用。所以你看，近几年很多之前不支持SQL的数据库，都开始支持SQL了，甚至于像Spark、Flink这样的流计算平台，也都开始支持SQL。当然，虽然说支持SQL，但这里面各个产品的支持程度是参差不齐的，多多少少都有一些缩水。对于ACID的支持，基本上等同于就没有。</p><p>这个时候，New SQL它来了！简单地说，New SQL就是兼顾了Old SQL和No SQL的优点：</p><ul>\n<li>完整地支持SQL和ACID，提供和Old SQL隔离级别相当的事务能力；</li>\n<li>高性能、高可靠、高可用，支持水平扩容。</li>\n</ul><p>像Google的Cloud Spanner、国产的OceanBase以及开源的<a href=\"https://github.com/cockroachdb/cockroach\">CockroachDB</a>都属于New SQL数据库。Cockroach这个英文单词是蟑螂的意思，所以一般我们都把CockroachDB俗称为小强数据库。</p><p>这些New SQL凭什么就能做到Old SQL和No SQL做不到的这些特性呢？那我们就以开源的CockroachDB为例子，来看一下New SQL是不是真的这么厉害。</p><h2>CockroachDB是如何实现数据分片和弹性扩容的？</h2><p>首先，我们一起先来简单看一下CockroachDB的架构，从架构层面分析一下，它是不是真的像宣传的那么厉害。我们先来看一下它的架构图(图片来自于<a href=\"https://github.com/cockroachdb/cockroach/blob/master/docs/design.md\">官方文档</a>)：</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/82/8c78db973e66bb62b23c8e85afe78082.jpg?wh=1004*676\" alt=\"\"></p><p>这是一个非常典型的分层架构，我们从上往下看。最上层是SQL层，SQL层支持和关系型数据库类似的逻辑数据结构，比如说库、表、行和列这些逻辑概念。SQL层向下调用的是一个抽象的接口层Structured Data API，实际实现这个API的是下面一层：Distributed, Monolithic KV Store，这就是一个分布式的KV存储系统。</p><p>我们先不深入进去看细节，从宏观层面上分析一下这个架构。你可以看到，这个架构仍然是我们之间讲过的，大部分数据库都采用的二层架构：执行器和存储引擎。它的SQL层就是执行器，下面的分布式KV存储集群就是它的存储引擎。</p><p>那我们知道，MySQL的存储引擎InnoDB，实际上是基于文件系统的B+树，像Hive和HBase，它们的存储引擎都是基于HDFS构建的。那CockroachDB这种，使用分布式KV存储来作为存储引擎的设计，理论上也是可行的，并没有什么特别难以逾越的技术壁垒。</p><p>而且，使用分布式KV存储作为存储引擎，实现高性能、高可靠、高可用，以及支持水平扩容这些特性，就不是什么难事儿了，其中很多分布式KV存储系统已经做到了，这里面使用的一些技术和方法，大多我们在之前的课程中也都讲到过。CockroachDB在实现它的存储引擎这一层，就是大量地借鉴，甚至是直接使用了已有的一些成熟技术。</p><p>它的分片算法采用的是范围分片，我们之前也讲到过，范围分片对查询是最友好的，可以很好地支持范围扫描这一类的操作，这样有利于它支撑上层的SQL查询。</p><p>它采用<a href=\"https://raft.github.io/\">Raft</a>一致性协议来实现每个分片的高可靠、高可用和强一致。这个Raft协议，它的一个理论基础，就是我们之前讲的复制状态机，并且在复制状态机的基础上，Raft实现了集群自我监控和自我选举来解决高可用的问题。Raft也是一个被广泛采用的、非常成熟的一致性协议，比如etcd也是基于Raft来实现的。</p><p>CockroachDB的元数据直接分布在所有的存储节点上，依靠流言协议来传播，这个流言协议，我们在《<a href=\"https://time.geekbang.org/column/article/217590\">16 | 用Redis构建缓存集群的最佳实践有哪些？</a>》这节课中也讲到过，在Redis Cluster中也是用流言协议来传播元数据变化的。</p><p>CockroachDB用上面这些成熟的技术解决了集群问题，在单机的存储引擎上，更是直接使用了RocksDB作为它的KV存储引擎。RocksDB也是值得大家关注的一个新的存储系统，下节课我们会专门讲RocksDB。</p><p>你可以看到，CockroachDB的存储引擎，也就是它的分布式KV存储集群，基本上没有什么大的创新，就是重用了已有的一些成熟的技术，这些技术在我们之前讲过的其他存储系统中，全部都见到过。我讲这些并没有贬低CockroachDB的意思，相反，站在巨人的肩膀上，才能看得更远，飞得更高，这是一种非常务实的做法。</p><h2>CockroachDB能提供金融级的事务隔离性么？</h2><p>接下来我们说一下CockroachDB是怎么实现ACID的，它的ACID是不是类似于分布式事务的残血版？这是一个非常关键的问题，直接影响到它有没有可能在未来取代MySQL。</p><p>在说ACID之前，我们还是要简单说一下CockroachDB是怎么解析和执行SQL的。我们在《<a href=\"https://time.geekbang.org/column/article/213176\">10 | 走进黑盒：SQL是如何在数据库中执行的？</a>》这节课中讲过SQL是如何在MySQL中执行的，在CockroachDB中，这个执行的流程也是差不多的。同样是先解析SQL生成语法树，转换成逻辑执行计划，再转换为物理执行计划，优化后，执行物理执行计划返回查询结果，这样一个流程。</p><p>只是在CockroachDB中，物理执行计划就更加复杂了，因为它的物理执行计划面对的是一个分布式KV存储系统，在涉及到查找、聚合这类操作的时候，有可能需要涉及到多个分片（Range）。大致过程就是类似于Map-Reduce的逻辑，先查找元数据确定可能涉及到的分片，然后把物理执行计划转换成每个分片上的物理执行计划，在每个分片上去并行执行，最后，再对这些执行结果做汇总。</p><p>然后我们再来说CockroachDB的ACID。我们在《<a href=\"https://time.geekbang.org/column/article/206544\">04 | 事务：账户余额总是对不上账，怎么办？</a>》这节课中讲到过四种事务隔离级别，分别是RU、RC、RR和SERIALIZABLE，那CockroachDB能提供哪种隔离级别呢？答案是，以上四种都不是。</p><p>CockroachDB提供了另外两种隔离级别，分别是：<strong>Snapshot Isolation (SI)</strong> 和 <strong>Serializable Snapshot Isolation (SSI)</strong>，其中SSI是CockroachDB默认的隔离级别。</p><p>这两种隔离级别和之前提到的四种隔离级别是什么关系呢？我们通过下面这张表，和MySQL默认的隔离级别RR做一个对比。</p><p><img src=\"https://static001.geekbang.org/resource/image/20/67/20e20d983ad7519e6eae11821a3f1567.jpg?wh=2284*1313\" alt=\"\"></p><p>首先我们看SI这一行。我们之前讲到过，RR这种隔离级别，可以很好地解决脏读和不可重复读的问题，虽然可能会产生幻读，但实际上对绝大多数事务影响不大。SI不会发生脏读、不可重复读，也不会发生幻读的情况，这个隔离级别似乎比RR还要好。</p><p>但你要注意一下，我们这个表格比之前那个表格多了一列：写倾斜。可以看到，RR是不会出现写倾斜问题的，但是SI会有写倾斜问题。</p><p>什么是写倾斜？我们还是拿账户余额的例子来说明。比如说，我们的账户需要支持主副卡，主卡和副卡都分别有自己的余额，并且这个余额是可以透支的，只要满足主副卡的余额之和大于0就行了。如果我们需要给主卡支出100元，那SQL只要这样写就可以了：</p><pre><code>update account\nset balance = balance - 100 -- 在主卡中扣减100元\nwhere id = ? and\n  (select balance from account where id = ?) -- 主卡余额\n  +\n  (select balance from account where id = ?) -- 附卡余额\n  &gt;= 100; -- 主副卡余额之和必须大于100元\n</code></pre><p>在传统的RR隔离级别下，由于更新数据时会对记录加锁，即使更新主副卡的两个SQL分别在两个事务中并发执行，也不会出现把主副卡的余额之和扣减成负数的情况。</p><p>但是在SI级别下，由于它没有加锁，而是采用快照的方式来实现事务的隔离，这个时候，如果并发地去更新主副卡余额，是有可能出现把主副卡余额之和扣减为负数的情况的。这种情况称为<strong>写倾斜</strong>。这里顺便提一句，写倾斜是普遍的译法，我个人觉得“倾斜”这个词翻译得并不准确，实际上它表达的，就是因为没有检测读写冲突，也没有加锁，导致数据写错了。</p><p>SSI隔离级别在SI的基础上，加入了冲突检测的机制，通过检测读写冲突，然后回滚事务的方式来解决写倾斜的问题，当然这种方式付出的代价是降低性能，并且冲突严重的情况下，会频繁地出现事务回滚。</p><p>从理论上来说，CockroachDB支持的SI和SSI这两种事务隔离级别，能提供的事务隔离性，已经与传统的RC和RR隔离级别不相上下了，可以满足大多数在线交易类系统对ACID的要求。</p><h2>小结</h2><p>New SQL是新一代的分布式数据库，它具备原生分布式存储系统高性能、高可靠、高可用和弹性扩容的能力，同时还兼顾了传统关系型数据库的SQL支持。更厉害的是，它还提供了和传统关系型数据库不相上下的、真正的事务支持，具备了支撑在线交易类业务的能力。</p><p>CockroachDB是开源的New SQL数据库。它的存储引擎是一个分布式KV存储集群，执行器则大量借鉴了PostgreSQL的一些设计和实现，是一个集很多现有数据库和分布式存储系统技术于一身，这样的一个数据库产品。</p><p>从设计上来看，CockroachDB这类New SQL数据库，有非常大的潜质可以真正地取代MySQL这类传统的关系型数据库。但是我们也应该看到，目前这些New SQL数据库都还处于高速发展阶段，并没有被大规模地应用到生产系统中去。我也不建议你做小白鼠，在重要的系统上去使用它。</p><h2>思考题</h2><p>课后请你去看一下<a href=\"https://raft.github.io/\">Raft</a>一致性协议，然后简单总结一下，CockroachDB是如何利用Raft协议实现Range高可用、高可靠和强一致的。欢迎你在留言区与我讨论。</p><p>感谢你的阅读，如果你觉得今天的内容对你有帮助，也欢迎把它分享给你的朋友。</p>","neighbors":{"left":{"article_title":"22 | 面对海量数据，如何才能查得更快?","id":224344},"right":{"article_title":"24 | RocksDB：不丢数据的高性能KV存储","id":225400}},"comments":[{"had_liked":false,"id":207883,"user_name":"李玥","can_delete":false,"product_type":"c1","uid":1501046,"ip_address":"","ucode":"B19E91EE248591","user_header":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","comment_is_top":true,"comment_ctime":1587205192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.223372154406101e+18","product_id":100046801,"comment_content":"<br>Hi，我是李玥。<br><br>这里回顾一下上节课的思考题：<br><br>我们要做一个日志系统，收集全公司所有系统的全量程序日志，给开发和运维人员提供日志的查询和分析服务，你会选择用什么存储系统来存储这些日志？原因是什么？<br><br>对于这个问题，仍然需要根据业务对数据的查询方式，反推数据应该使用什么存储系统。对于日志的查询，最常用的二种方式就是按照关键字去查询或者指定一个时间和IP去浏览。<br><br>如果说，日志的量级不超过TB级别，直接放到ES里面最省事，对于二种查询方式都可以获得还不错的查询性能。如果规模太大了，ES也扛不住的情况下，可以考虑把日志放到HDFS中，对于浏览的查询需求，直接定位的具体的日志文件返回是比较快的。对于关键字查询的需求，也可以通过实现Map-Reduce任务，并行查询然后聚合的方式来实现。","like_count":28},{"had_liked":false,"id":207714,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1587151351,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40241857015","product_id":100046801,"comment_content":"不知道老师是否有发现一点，现在大量的Analyze DB在对之前的MYSQL或PG SQL做补充；首当其冲的应当是阿里最近推出的此类DB；tidb做为国产数据库-目前几乎聚集了国内大多所有的RMDB方面的神人，应当是继OceanBase之后又一个国内真正汇聚顶级DB相关人才打造的数据库。老师如何去看待tidb?<br>谢谢老师的分享，期待后续的继续分享。","like_count":9,"discussions":[{"author":{"id":1011437,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6e/ed/22ea0e68.jpg","nickname":"Gordon","note":"","ucode":"BC22D73AF990ED","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279248,"discussion_content":"听说你实现梦想我8","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591316571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109041,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ec/31/644fc4cd.jpg","nickname":"有课学","note":"","ucode":"9A8D5E9B9FDA62","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264006,"discussion_content":"我也想问来着，看这篇文章，是不是要提前去了解下 TiDB?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589279403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207868,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1587200797,"is_pvip":true,"replies":[{"id":"77834","content":"是的，底层的分布式存储引擎也是差不多的，大部分都是KV。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1587351433,"ip_address":"","comment_id":207868,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31651971869","product_id":100046801,"comment_content":"New SQL 数据库是不是都是这样设计的？ 执行器支持 SQL，然后底层的存储系统是分布式存储系统？ 区别在与底层的分布式存储系统实现的原理不一样？","like_count":8,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492264,"discussion_content":"是的，底层的分布式存储引擎也是差不多的，大部分都是KV。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587351433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217285,"user_name":"苗","can_delete":false,"product_type":"c1","uid":1088710,"ip_address":"","ucode":"5ECCC6C855E541","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/c6/05a6798f.jpg","comment_is_top":false,"comment_ctime":1589454679,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27359258455","product_id":100046801,"comment_content":"mongodb 4.2.6也支持rc和rr级别的事务了；老师似乎很少提到mongodb。","like_count":7},{"had_liked":false,"id":211344,"user_name":"真名不叫黄金","can_delete":false,"product_type":"c1","uid":1174066,"ip_address":"","ucode":"FB611FC98F5BA7","user_header":"https://static001.geekbang.org/account/avatar/00/11/ea/32/1fd102ec.jpg","comment_is_top":false,"comment_ctime":1587950607,"is_pvip":false,"replies":[{"id":"78788","content":"我们倒不用纠结这个概念，按你设定的场景，确实会出现不满足业务约束的情况，所以一定要把约束写到更新语句中。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1588049823,"ip_address":"","comment_id":211344,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18767819791","product_id":100046801,"comment_content":"老师讲得非常好~<br>不过我有一个小问题想请教一下老师，文中说到MySQL的RR级别是没有Write Skew的，但是RR使用的是MVCC读，也是快照读，理论上也会有Write Skew问题，我刚刚测试了一下，RR的事务中进行读取，是快照读不加锁，如果将老师文中的子查询拆分出来，向上提，先进行子查询的余额检查，再进行更新，开启2个事务分别更新父子账户，父账户先读取检查余额，人为没问题，然后子账户读取检查余额，也认为没问题，然后子账户更新余额并提交，父账户更新余额再提交，两个事务都可以成功，但余额不满足业务约束了，也就是Write Skew了，所以说我的理解是，RR是可能会出现Write Skew的，不知道理解有没有问题","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493255,"discussion_content":"我们倒不用纠结这个概念，按你设定的场景，确实会出现不满足业务约束的情况，所以一定要把约束写到更新语句中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588049823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1461075,"avatar":"https://static001.geekbang.org/account/avatar/00/16/4b/53/f797f031.jpg","nickname":"无道win","note":"","ucode":"0C026BB03A53EA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304841,"discussion_content":"那两个查询写到更新语句中就是当前读了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599696202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207716,"user_name":"icyricky","can_delete":false,"product_type":"c1","uid":1302556,"ip_address":"","ucode":"D63C285165309D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/1c/aa50dc27.jpg","comment_is_top":false,"comment_ctime":1587161123,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"18767030307","product_id":100046801,"comment_content":"公司有用TiDB…感觉架构很像…还是leader任期之后的续租还是选举，多数票同意选出leader，follower从leader复制数据…检测心跳…在leader宕机之后发起新一轮选举；leader对外提供读写服务，避免数据不一致","like_count":5,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366586,"discussion_content":"公司用TiDB是CTO决定的嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618126265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239197,"discussion_content":"有坑吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587283721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1302556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e0/1c/aa50dc27.jpg","nickname":"icyricky","note":"","ucode":"D63C285165309D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240141,"discussion_content":"新产品，肯定有坑呀…不过问题修复的也比较快…社区也在努力建设中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587343420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":239197,"ip_address":""},"score":240141,"extra":""},{"author":{"id":1109041,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ec/31/644fc4cd.jpg","nickname":"有课学","note":"","ucode":"9A8D5E9B9FDA62","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1302556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e0/1c/aa50dc27.jpg","nickname":"icyricky","note":"","ucode":"D63C285165309D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264007,"discussion_content":"能说说都有哪些坑么，严重不？想入坑，哈哈~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589279459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":240141,"ip_address":""},"score":264007,"extra":""},{"author":{"id":1302556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e0/1c/aa50dc27.jpg","nickname":"icyricky","note":"","ucode":"D63C285165309D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1109041,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ec/31/644fc4cd.jpg","nickname":"有课学","note":"","ucode":"9A8D5E9B9FDA62","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":281959,"discussion_content":"现在好很多了…每个版本发布的bug fix很多都是我的血泪史…有问题提交社区修复比较快…前面主要是功能的一些bug还有组件panic问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591847818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":264007,"ip_address":""},"score":281959,"extra":""}]}]},{"had_liked":false,"id":217253,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1589449348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10179383940","product_id":100046801,"comment_content":"我项目用的就是小强db，的确是有写性能比不上mysql，也出现了相关的锁竞争导致事务回滚的问题，解决了事务问题往往带来了其他新的问题，所以说newSQL并不是什么技术银弹:-D","like_count":3},{"had_liked":false,"id":207764,"user_name":"Lukia","can_delete":false,"product_type":"c1","uid":1028698,"ip_address":"","ucode":"C19472337BCCC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/5a/574f5bb0.jpg","comment_is_top":false,"comment_ctime":1587176297,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5882143593","product_id":100046801,"comment_content":"不知道cockroach的两种隔离级别是不是借鉴了postgres的做法","like_count":2,"discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237961,"discussion_content":"应该是的，借鉴了好多\n而且支持 PostgreSQL 的协议，客户端可以直接使用\nCockroachDB supports the PostgreSQL wire protocol, so you can use any available PostgreSQL client drivers to connect from various languages.","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587201115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339120,"user_name":"anthony","can_delete":false,"product_type":"c1","uid":1032896,"ip_address":"","ucode":"BA716F89900570","user_header":"","comment_is_top":false,"comment_ctime":1647932451,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647932451","product_id":100046801,"comment_content":"老师 mysql 的分区表技术现在在企业里面用的多吗 oracle 的分区技术在业务系统中使用的非常多","like_count":0},{"had_liked":false,"id":287725,"user_name":"夜辉","can_delete":false,"product_type":"c1","uid":1886331,"ip_address":"","ucode":"9421385F51FF9E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","comment_is_top":false,"comment_ctime":1618126390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618126390","product_id":100046801,"comment_content":"冲突检测机制是新技术吧","like_count":0},{"had_liked":false,"id":249673,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1600753658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600753658","product_id":100046801,"comment_content":"raft协议，要求全系统的节点全连接。按照投票数最多的原则选举主节点。主节点去主动同步从节点的数据，保持数据的一致性。如果主节点fail（超时或stop）则重新选举主节点。选举时，候选节点会广播RequestVote请求。","like_count":0},{"had_liked":false,"id":211554,"user_name":"一剑","can_delete":false,"product_type":"c1","uid":1022127,"ip_address":"","ucode":"93ADD5B5215D4C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","comment_is_top":false,"comment_ctime":1587982239,"is_pvip":false,"replies":[{"id":"78787","content":"这里面不会发生死锁，主卡和副卡分别是二个账户，而且不需要同时持有这2个账户的锁。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1588049628,"ip_address":"","comment_id":211554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587982239","product_id":100046801,"comment_content":"例子中，主卡更新和副卡更新同时在两个事务里执行，容易导致死锁吧？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493296,"discussion_content":"这里面不会发生死锁，主卡和副卡分别是二个账户，而且不需要同时持有这2个账户的锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588049628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}