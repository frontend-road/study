{"id":780315,"title":"19｜keyof的特殊性（取Key）","content":"","comments":[{"had_liked":false,"id":391139,"user_name":"Jack Q","can_delete":false,"product_type":"c3","uid":1160078,"ip_address":"广东","ucode":"A7DBC311884FFA","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/8e/1c564eb2.jpg","comment_is_top":false,"comment_ctime":1717409125,"is_pvip":false,"replies":[{"id":142241,"content":"：）\n\n这个问题其实从“keyof U会导致交叉运算”，以及交叉运算在基础类型中的语义这两个角度上来看，会更清晰。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1717486072,"ip_address":"江苏","comment_id":391139,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"论述：试说明keyof U (U 是一个 联合类型) 的计算方式 与 接口的联合相当于求它们的公共父类之间的 关系\n它们的目的都是求联合类型的共有部分:\n接口的联合 的求值类型等同于一个结构对象，该对象只包含联合类型所有成员共有的属性\nkeyof U 得到的是联合类型成员之间共有属性键的集合\n解释:\n```typescript\n&#47;&#47; keyof U\ntype A = { a: string; b: number; };\ntype B = { a: string; c: boolean; };\n\ntype C = A | B;\ntype CK = keyof C;&#47;&#47; keyof (A | B) -&gt; keyof A &amp; keyof B -&gt; (&#39;a&#39; | &#39;b&#39;) &amp; (&#39;a&#39; | &#39;c&#39;) -&gt; &quot;a&quot;\n&#47;&#47; interface Unions\ninterface D {\n  d: string;\n  e: number;\n}\ninterface E {\n  d: string;\n  f: boolean;\n}\ntype F = D | E;&#47;&#47; type F 其类型等效于 { d: string; }\n```","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646163,"discussion_content":"：）\n\n这个问题其实从“keyof U会导致交叉运算”，以及交叉运算在基础类型中的语义这两个角度上来看，会更清晰。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717486073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391292,"user_name":"fatme","can_delete":false,"product_type":"c3","uid":1034451,"ip_address":"广东","ucode":"75A805D2BB2AD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","comment_is_top":false,"comment_ctime":1717845405,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"&quot;接口的联合相当于求它们的公共父类&quot; 意味着 U 只包括所有 U1, U2, ..., Un 的共同拥有的成员，即 U 的 key 应该包含且仅包含 &quot;U1, U2, ..., Un 的共有的 key&quot;。U 的 key 即 keyof U, U1 的 key 即 keyof U1, ..., Un 的 key 即 keyof Un。而 &quot;U1, U2, ..., Un 的共有的 key&quot; 即 U1, U2, ..., Un 各自的 key 的交集，即 keyof U1 &amp; keyof U2 &amp; ... &amp; keyof Un。所以，keyof U = keyof U1 &amp; keyof U2 &amp; ... &amp; keyof Un","like_count":1}]}