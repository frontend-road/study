{"id":10312,"title":"31 | 如何应对接口级的故障？","content":"<p>你好，我是华仔。</p><p>前几讲我介绍了异地多活方案。它主要用来应对系统级的故障，例如机器宕机、机房故障和网络故障等问题。这些系统级的故障虽然影响很大，但发生概率较小。在实际业务运行过程中，还有另外一种故障影响可能没有那么大，但发生的概率较高，这就是今天我要跟你聊的接口级的故障。</p><p>接口级故障的典型表现就是，系统并没有宕机、网络也没有中断，但业务却出现问题了，例如业务响应缓慢、大量访问超时和大量访问出现异常（给用户弹出提示“无法连接数据库”）。</p><p>这类问题的主要原因在于系统压力太大、负载太高，导致无法快速处理业务请求，由此引发更多的后续问题。最常见的情况就是，数据库慢查询将数据库的服务器资源耗尽，导致读写超时，业务读写数据库时要么无法连接数据库、要么超时，最终用户看到的现象就是访问很慢，一会儿访问抛出异常，一会儿访问又是正常结果。</p><p>如果进一步探究，导致接口级故障的原因可以分为两大类：</p><ol>\n<li><strong>内部原因</strong>：包括程序bug导致死循环，某个接口导致数据库慢查询，程序逻辑不完善导致耗尽内存等。</li>\n<li><strong>外部原因</strong>：包括黑客攻击，促销或者抢购引入了超出平时几倍甚至几十倍的用户，第三方系统大量请求，第三方系统响应缓慢等。</li>\n</ol><p>解决接口级故障的核心思想和异地多活基本类似，都是<strong>优先保证核心业务</strong>和<strong>优先保证绝大部分用户</strong>。常见的应对方法有四种，降级、熔断、限流和排队，下面我会一一讲解。</p><!-- [[[read_end]]] --><h2>1. 降级</h2><p>降级指系统将某些业务或者接口的功能降低，可以是只提供部分功能，也可以是完全停掉所有功能。</p><p>例如，论坛可以降级为只能看帖子，不能发帖子；也可以降级为只能看帖子和评论，不能发评论；而App的日志上传接口，可以完全停掉一段时间，这段时间内App都不能上传日志。</p><p>降级的核心思想就是丢车保帅，优先保证核心业务。</p><p>例如，对于论坛来说，90%的流量是看帖子，那我们就优先保证看帖的功能；对于一个App来说，日志上传接口只是一个辅助的功能，故障时完全可以停掉。</p><p>常见的实现降级的方式有两种：</p><h3>1.1 系统后门降级</h3><p>简单来说，就是系统预留了后门用于降级操作。例如，系统提供一个降级URL，当访问这个URL时，就相当于执行降级指令，具体的降级指令通过URL的参数传入即可。这种方案有一定的安全隐患，所以也会在URL中加入密码这类安全措施。</p><p>系统后门降级的方式实现成本低，但主要缺点是如果服务器数量多，需要一台一台去操作，效率比较低，这在故障处理争分夺秒的场景下是比较浪费时间的。</p><h3>1.2 独立降级系统</h3><p>为了解决系统后门降级方式的缺点，我们可以将降级操作独立到一个单独的系统中，实现复杂的权限管理、批量操作等功能。</p><p>其基本架构如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/4d/69/4d162df260470248a4fe8250ae44f469.jpg?wh=1920x940\" alt=\"图片\"></p><h2>2. 熔断</h2><p>熔断是指按照规则停掉外部接口的访问，防止某些外部接口故障导致自己的系统处理能力急剧下降或者出故障。</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/fe/8d054a6ac71178dff49e2c7c052861fe.jpg?wh=1920x948\" alt=\"图片\"></p><p>熔断和降级是两个比较容易混淆的概念，因为单纯从名字上看，好像都有禁止某个功能的意思。但它们的内涵是不同的，因为降级的目的是应对系统自身的故障，而熔断的目的是应对依赖的外部系统故障的情况。</p><p>假设一个这样的场景：A服务的X功能依赖B服务的某个接口，当B服务的接口响应很慢的时候，A服务的X功能响应肯定也会被拖慢，进一步导致A服务的线程都被卡在X功能处理上，于是A服务的其他功能都会被卡住或者响应非常慢。</p><p>这时就需要熔断机制了：A服务不再请求B服务的这个接口，A服务内部只要发现是请求B服务的这个接口就立即返回错误，从而避免A服务整个被拖慢甚至拖死。</p><p>实现熔断机制有两个关键点：</p><p>一是需要有一个<strong>统一的API调用层</strong>，由API调用层来进行采样或者统计。如果接口调用散落在代码各处，就没法进行统一处理了。</p><p>二是<strong>阈值的设计</strong>，例如1分钟内30%的请求响应时间超过1秒就熔断，这个策略中的“1分钟”“30%”“1秒”都对最终的熔断效果有影响。实践中，一般都是先根据分析确定阈值，然后上线观察效果，再进行调优。</p><h2>3. 限流</h2><p>降级是从系统功能优先级的角度考虑如何应对故障，而限流则是从用户访问压力的角度来考虑如何应对故障。限流指只允许系统能够承受的访问量进来，超出系统访问能力的请求将被丢弃。</p><p>虽然“丢弃”这个词听起来让人不太舒服，但保证一部分请求能够正常响应，总比全部请求都不能响应要好得多。</p><p>限流一般都是系统内实现的，常见的限流方式可以分为两类：基于请求限流和基于资源限流。</p><h3>3.1 基于请求限流</h3><p>基于请求限流指从外部访问的请求角度考虑限流，常见的方式有两种。</p><p>第一种是限制总量，也就是限制<strong>某个指标的累积上限</strong>，常见的是限制当前系统服务的用户总量，例如：某个直播间限制总用户数上限为100万，超过100万后新的用户无法进入；某个抢购活动商品数量只有100个，限制参与抢购的用户上限为1万个，1万以后的用户直接拒绝。</p><p>第二种是限制时间量，也就是限制<strong>一段时间内某个指标的上限</strong>，例如1分钟内只允许10000个用户访问；每秒请求峰值最高为10万。</p><p>无论是限制总量还是限制时间量，共同的特点都是实现简单，但在实践中面临的主要问题是比较难以找到合适的阈值。例如系统设定了1分钟10000个用户，但实际上6000个用户的时候系统就扛不住了；或者达到1分钟10000用户后，其实系统压力还不大，但此时已经开始丢弃用户访问了。</p><p>即使找到了合适的阈值，基于请求限流还面临硬件相关的问题。例如一台32核的机器和64核的机器处理能力差别很大，阈值是不同的，可能有的技术人员以为简单根据硬件指标进行数学运算就可以得出来，实际上这样是不可行的，64核的机器比32核的机器，业务处理性能并不是2倍的关系，可能是1.5倍，甚至可能是1.1倍。</p><p>为了找到合理的阈值，通常情况下可以采用性能压测来确定阈值，但性能压测也存在覆盖场景有限的问题，可能出现某个性能压测没有覆盖的功能导致系统压力很大；另外一种方式是逐步优化：先设定一个阈值然后上线观察运行情况，发现不合理就调整阈值。</p><p>基于上述的分析，根据阈值来限制访问量的方式更多的适应于业务功能比较简单的系统，例如负载均衡系统、网关系统、抢购系统等。</p><h3>3.2 基于资源限流</h3><p>基于请求限流是从系统外部考虑的，而基于资源限流是从系统内部考虑的，也就是找到系统内部影响性能的关键资源，对其使用上限进行限制。常见的内部资源包括连接数、文件句柄、线程数和请求队列等。</p><p>例如，采用Netty来实现服务器，每个进来的请求都先放入一个队列，业务线程再从队列读取请求进行处理，队列长度最大值为10000，队列满了就拒绝后面的请求；也可以根据CPU的负载或者占用率进行限流，当CPU的占用率超过80%的时候就开始拒绝新的请求。</p><p>基于资源限流相比基于请求限流能够更加有效地反映当前系统的压力，但实际设计时也面临两个主要的难点：如何确定关键资源，以及如何确定关键资源的阈值。</p><p>通常情况下，这也是一个逐步调优的过程：设计的时候先根据推断选择某个关键资源和阈值，然后测试验证，再上线观察，如果发现不合理，再进行优化。</p><h3>限流算法</h3><p>为了更好地实现前面描述的各种限流方式，通常情况下我们会基于限流算法来设计方案。常见的限流算法有两大类四小类，它们的实现原理和优缺点各不相同，在实际设计的时候需要根据业务场景来选择。</p><h4>（1）时间窗</h4><p>第一大类是时间窗算法，它会限制一定时间窗口内的请求量或者资源消耗量，根据实现方式又可以细分为“固定时间窗”和“滑动时间窗”。</p><ul>\n<li>固定时间窗</li>\n</ul><p>固定时间窗算法的实现原理是，统计固定时间周期内的请求量或者资源消耗量，超过限额就会启动限流，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/55/13/55df7cc26d23c462131b7c7b7cfd9813.png?wh=1386x510\" alt=\"图片\"></p><p>它的优点是实现简单，缺点是存在<strong>临界点</strong>问题。例如上图中的红蓝两点只间隔了短短10秒，期间的请求数却已经达到200，超过了算法规定的限额（1分钟内处理100）。但是因为这些请求分别来自两个统计窗口，从单个窗口来看还没有超出限额，所以并不会启动限流，结果可能导致系统因为压力过大而挂掉。</p><ul>\n<li>滑动时间窗</li>\n</ul><p>为了解决临界点问题，滑动时间窗算法应运而生，它的实现原理是，两个统计周期部分重叠，从而避免短时间内的两个统计点分属不同的时间窗的情况，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c9/a6/c95c31d64ae5c691c77a8ce7c5fa60a6.png?wh=1394x482\" alt=\"图片\"></p><p>总体上来看，滑动时间窗的限流效果要比固定时间窗更好，但是实现也会稍微复杂一些。</p><h4>（2）桶算法</h4><p>第二大类是桶算法，用一个虚拟的“桶”来临时存储一些东西。根据桶里面放的东西，又可以细分为“漏桶”和“令牌桶”。</p><ul>\n<li>漏桶</li>\n</ul><p>漏桶算法的实现原理是，将请求放入“桶”（消息队列等），业务处理单元（线程、进程和应用等）从桶里拿请求处理，桶满则丢弃新的请求，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/05/67/056aa8b560f02926911c91803f5cda67.jpg?wh=1920x1080\" alt=\"图片\"></p><p>我们可以看到漏桶算法的三个关键实现点：</p><ol>\n<li>流入速率不固定：可能瞬间流入非常多的请求，例如0点签到、整点秒杀。</li>\n<li>匀速(极速)流出：这是理解漏桶算法的关键，也就是说即使大量请求进入了漏桶，但是从漏桶流出的速度是匀速的，速度的最大值就是系统的极限处理速度（对应图中的“极速”）。这样就保证了系统在收到海量请求的时候不被压垮，这是第一层的保护措施。需要注意的是：如果漏桶没有堆积，那么流出速度就等于流入速度，这个时候流出速度就不是匀速的。</li>\n<li>桶满则丢弃请求：这是第二层保护措施，也就是说漏桶不是无限容量，而是有限容量，例如漏桶最多存储100万个请求，桶满了则直接丢弃后面的请求。</li>\n</ol><p>漏桶算法的技术本质是<strong>总量控制</strong>，桶大小是设计关键，具体的优缺点如下：</p><ol>\n<li>突发大量流量时丢弃的请求较少，因为漏桶本身有缓存请求的作用。</li>\n<li>桶大小动态调整比较困难（例如 Java BlockingQueue），需要不断的尝试才能找到符合业务需求的最佳桶大小。</li>\n<li>无法精确控制流出速度，也就是业务的处理速度。</li>\n</ol><p>漏桶算法主要适用于瞬时高并发流量的场景（例如刚才提到的0点签到、整点秒杀等）。在短短几分钟内涌入大量请求时，为了更好的业务效果和用户体验，即使处理慢一些，也要做到尽量不丢弃用户请求。</p><ul>\n<li>令牌桶算法</li>\n</ul><p>令牌桶算法和漏桶算法的不同之处在于，桶中放入的不是请求，而是“令牌”，这个令牌就是业务处理前需要拿到的“许可证”。也就是说，当系统收到一个请求时，先要到令牌桶里面拿“令牌”，拿到令牌才能进一步处理，拿不到就要丢弃请求。</p><p>它的实现原理是如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/78/b2/7862d045e4e332e8d6f3fd1250b429b2.jpg?wh=1920x1080\" alt=\"图片\"></p><p>我们可以看到令牌桶算法的三个关键设计点：</p><ol>\n<li>有一个处理单元往桶里面放令牌，放的速率是可以控制的。</li>\n<li>桶里面可以累积一定数量的令牌，当突发流量过来的时候，因为桶里面有累积的令牌，此时的业务处理速度会超过令牌放入的速度。</li>\n<li>如果令牌不足，即使系统有能力处理，也会丢弃请求。</li>\n</ol><p>令牌桶算法的技术本质是<strong>速率控制</strong>，令牌产生的速率是设计关键，具体的优缺点如下：</p><ol>\n<li>可以动态调整处理速率，实现更加灵活。</li>\n<li>突发大量流量的时候可能丢弃很多请求，因为令牌桶不能累积太多令牌。</li>\n<li>实现相对复杂。</li>\n</ol><p>令牌桶算法主要适用于两种典型的场景，一种是需要控制访问第三方服务的速度，防止把下游压垮，例如支付宝需要控制访问银行接口的速率；另一种是需要控制自己的处理速度，防止过载，例如压测结果显示系统最大处理TPS是100，那么就可以用令牌桶来限制最大的处理速度。</p><p>刚才介绍漏桶算法的时候我提到漏桶算法可以应对<strong>瞬时高并发</strong>流量，现在介绍令牌桶算法的时候，我又说令牌桶允许<strong>突发</strong>流量。</p><p>你可能会问，这两种说法好像差不多啊，它们到底有什么区别，到底谁更适合做秒杀呢？</p><p>其实，令牌桶的“允许突发”实际上只是“允许一定程度的突发”，比如系统处理能力是每秒100 TPS，突发到120 TPS是可以的，但如果突发到1000 TPS的话，系统大概率就被压垮了。所以处理秒杀时高并发流量，还是得用漏桶算法。</p><p>令牌桶的算法原本是用于网络设备控制传输速度的，而且它控制的目的是保证一段时间内的平均传输速度。之所以说令牌桶适合突发流量，是指在网络传输的时候，可以允许某段时间内（一般就几秒）超过平均传输速率，这在网络环境下常见的情况就是“网络抖动”。</p><p>但这个短时间的突发流量并不会导致雪崩效应，网络设备也能够处理得过来。对应到令牌桶应用到业务处理的场景，就要求即使有突发流量来了，系统自己或者下游系统要真的能够处理的过来，否则令牌桶允许突发流量进来，结果系统或者下游处理不了，那还是会被压垮。</p><p>因此，令牌桶在实际设计的时候，桶大小不能像漏桶那样设计很大，需要根据系统的处理能力来进行仔细的估算。例如，漏桶算法的桶容量可以设计为100万，但是一个每秒30 TPS的令牌桶，桶的容量可能只能设计成40左右。海外有的银行给移动钱包提供的接口TPS上限是30，压测到了40就真的挂了。</p><h2>4. 排队</h2><p>排队实际上是限流的一个变种，限流是直接拒绝用户，排队是让用户等待一段时间，全世界最有名的排队当属12306网站排队了。</p><p>排队虽然没有直接拒绝用户，但用户等了很长时间后进入系统，体验并不一定比限流好。</p><p>由于排队需要临时缓存大量的业务请求，单个系统内部无法缓存这么多数据，一般情况下，排队需要用独立的系统去实现，例如使用Kafka这类消息队列来缓存用户请求。</p><p>下图是1号店的“双11”秒杀排队系统架构：</p><p><img src=\"https://static001.geekbang.org/resource/image/7f/da/7f37f686a7e7bcd11d6202aba17effda.jpg?wh=1920x807\" alt=\"图片\">（备注：图片参考刘霄晖《<a href=\"https://www.infoq.cn/article/yhd-11-11-queuing-system-design\">1 号店 11.11：秒杀排队系统设计理念</a>》）</p><p>它的基本实现摘录如下：</p><blockquote>\n<p>【排队模块】<br>\n负责接收用户的抢购请求，将请求以先入先出的方式保存下来。每一个参加秒杀活动的商品保存一个队列，队列的大小可以根据参与秒杀的商品数量（或加点余量）自行定义。</p>\n</blockquote><blockquote>\n<p>【调度模块】<br>\n负责排队模块到服务模块的动态调度，不断检查服务模块，一旦处理能力有空闲，就从排队队列头上把用户访问请求调入服务模块，并负责向服务模块分发请求。这里调度模块扮演一个中介的角色，但不只是传递请求而已，它还担负着调节系统处理能力的重任。我们可以根据服务模块的实际处理能力，动态调节向排队系统拉取请求的速度。</p>\n</blockquote><blockquote>\n<p>【服务模块】<br>\n负责调用真正业务来处理服务，并返回处理结果，调用排队模块的接口回写业务处理结果。</p>\n</blockquote><h2>小结</h2><p>今天我为你讲了接口级故障的四种应对方法，分别是降级、熔断、限流和排队，希望对你有所帮助。</p><p><img src=\"https://static001.geekbang.org/resource/image/24/c6/2480b6166c3e01048ded3c24be6259c6.jpg?wh=1920x1001\" alt=\"图片\"></p><p>这就是今天的全部内容，留一道思考题给你吧，如果你来设计一个整点限量秒杀系统，包括登录、抢购、支付（依赖支付宝）等功能，你会如何设计接口级的故障应对手段？</p><p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>","neighbors":{"left":{"article_title":"30 | 异地多活设计4步走","id":10204},"right":{"article_title":"32 | 可扩展架构的基本思想和模式","id":10688}},"comments":[{"had_liked":false,"id":15268,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1531061121,"is_pvip":false,"replies":[{"id":"5183","content":"分析全面👍👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531120793,"ip_address":"","comment_id":15268,"utype":1}],"discussion_count":2,"race_medal":0,"score":"581351646081","product_id":100006601,"comment_content":"1.对于用户服务，在抢购期间可以准备降级策略，压力过大时保证用户登录的可用，注册和修改信息可以做降级处理<br>2.抢购下单涉及到订单，库存，和商品查询。可通过请求排队来限流，超出库存的请求直接返回。<br>为了应对库存和商品服务可能发生的故障，可以提前对商品数据和库存数据做缓存，如果对端服务故障，本地也可以提供服务<br>3.支付依赖第三方系统，合理设置熔断策略，如支付平均时长超过限制可提示用户稍晚做支付","like_count":136,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420313,"discussion_content":"分析全面👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531120793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008809,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/64/a9/27d63f2e.jpg","nickname":"佳楠","note":"","ucode":"A1698AE91992AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371838,"discussion_content":"针对登录故障，运营还可以做活动预热，让粉丝用户提前处于登录状态。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620013419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15257,"user_name":"climber","can_delete":false,"product_type":"c1","uid":1099299,"ip_address":"","ucode":"B0FDD5BE87193A","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/23/c4265a46.jpg","comment_is_top":false,"comment_ctime":1531045729,"is_pvip":false,"replies":[{"id":"5187","content":"分析的很好，支付如果依赖第三方的话，需要考虑熔断，然后做补偿或者容错措施，例如提示用户10分钟后再来支付","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531121083,"ip_address":"","comment_id":15257,"utype":1}],"discussion_count":3,"race_medal":0,"score":"194804574049","product_id":100006601,"comment_content":"1.抢购页面最大程度静态化，一般用户开始前会尝试刷新页面，查询压力要比下单压力大很多<br>2.抢购页面要求登陆后访问，一般人不会抢购开始那一刻才进来，错开登陆压力<br>3.活动未开始，不允许点击抢购按钮。对请求做轻量分析，对于请求过频繁或者可疑ua等做拉黑，为防误杀要求输验证码<br>4.抢购下单接口采用排队+限流，降低压力的同时保证公平性，如抢购1000件，只放2000人进来，其他返回排队人数过多。进来的请求全部入列，固定数量的队列消费者控制订单生成速率以及走到支付流程的速率。支付是下单流程核心功能，降级不应该降级掉。队列做削峰，保证支付系统不会压力过大。<br>请指正～","like_count":46,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420306,"discussion_content":"分析的很好，支付如果依赖第三方的话，需要考虑熔断，然后做补偿或者容错措施，例如提示用户10分钟后再来支付","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531121083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1522800,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdiaoSDXm3KibVMaYM2MiaAaleb3BW4Tgdw10qRtIhbOvMPib5Y0SJA3sBVOdYIjWq8bzf0hSA8XCf2w/132","nickname":"小熊","note":"","ucode":"D83E64BDD34F86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411812,"discussion_content":"2000的队列既然是固定速度消费，后一千人必然抢不到，固定速度还影响性能。前置做令牌好分发，到一千后停止进人。将这1000人固定速度异步的走下单逻辑即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636010184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095012,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b5/64/248749df.jpg","nickname":"速水御舟","note":"","ucode":"6803881344A16E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375804,"discussion_content":"排队了就不能实时返回抢购成功状态了吧？后续再通知吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621854482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24311,"user_name":"张浩","can_delete":false,"product_type":"c1","uid":1095427,"ip_address":"","ucode":"DF8900EA753804","user_header":"https://static001.geekbang.org/account/avatar/00/10/b7/03/a6c86c93.jpg","comment_is_top":false,"comment_ctime":1536896017,"is_pvip":false,"replies":[{"id":"8905","content":"😄😄被你发现了，一定要坚持","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1536904146,"ip_address":"","comment_id":24311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"108911078417","product_id":100006601,"comment_content":"我发现了,系列文章越到后面,人越少.还好我坚持看到了这里...","like_count":26,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423931,"discussion_content":"😄😄被你发现了，一定要坚持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536904146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15263,"user_name":"凡凡","can_delete":false,"product_type":"c1","uid":1056142,"ip_address":"","ucode":"134C1E1E6B22BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/8e/0a546871.jpg","comment_is_top":false,"comment_ctime":1531052754,"is_pvip":false,"replies":[{"id":"5185","content":"分析更好，支付接口依赖第三方应该是熔断，然后做好容错措施，例如提示用户10分钟后来支付","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531120904,"ip_address":"","comment_id":15263,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78840464082","product_id":100006601,"comment_content":"1.登录接口在流量特别大的时候，可以适当降级，较少参与人数，另外一点是登录一般有有效期（尤其对于web客户端），可以适当延长登录有效期。2.抢购接口采用队列方式，无法支撑时，也可以适当限流。另外一点，秒杀一般还会有一个秒杀结果查询的接口，也可以降级或者减小请求频次。3.支付接口，一般第三方支付对接入方有流量限制，可以提前申请扩大限制，同时做好降级准备。","like_count":19,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420310,"discussion_content":"分析更好，支付接口依赖第三方应该是熔断，然后做好容错措施，例如提示用户10分钟后来支付","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531120904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15146,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1530931144,"is_pvip":false,"replies":[{"id":"5207","content":"一般不建议对支付做降级，用户体验很不好，还不如登录和抢购阶段限流，这是有心理学理论支撑的，用户没抢到前，如果抢不到他会认为自己运气不好，但如果用户抢到了没法支付，他会觉得自己损失了，会触发“损失厌恶”心理😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531123079,"ip_address":"","comment_id":15146,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57365505992","product_id":100006601,"comment_content":"整点限量抢购核心业务应该是登录和抢购，抢购完了放入购物车不一定马上支付，所以在系统负载较高的时候可以让支付接口做降级处理，过了整点再恢复。抢购接口一般采取商品对应一个抢购队列，队列到上限之后拒绝流量进来，系统根据自身负载情况去消息队列进行流量的拉取，大致思路如上所述，还有什么遗漏还请老师指教","like_count":13,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420254,"discussion_content":"一般不建议对支付做降级，用户体验很不好，还不如登录和抢购阶段限流，这是有心理学理论支撑的，用户没抢到前，如果抢不到他会认为自己运气不好，但如果用户抢到了没法支付，他会觉得自己损失了，会触发“损失厌恶”心理😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531123079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19508,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1533864247,"is_pvip":false,"replies":[{"id":"6729","content":"常见的有：1. 轮询，2. Long polling，3. HTTP&#47;2推送","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1533867302,"ip_address":"","comment_id":19508,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44483537207","product_id":100006601,"comment_content":"老师你好，关于排队方式请教个问题：<br>比如用户从pc发一个请求过来，我们将这个请求放到队列，这个时候就直接返回客户端，客户端定时轮训排队状况，还是说是其它处理方案呢？","like_count":10,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421873,"discussion_content":"常见的有：1. 轮询，2. Long polling，3. HTTP/2推送","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533867302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301516,"discussion_content":"熔断和限流可以有机器学习方面的创新吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598542851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15320,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1531109172,"is_pvip":false,"replies":[{"id":"5179","content":"假如降级时优先保证登录，但是用户登录进来后发现抢购不了，其实体验也不好，而且已经抢购了的用户可能无法支付，这样体验更不好，甚至会引起投诉，因此抢购类降级是优先降登录会好些，保留抢购和支付，保证进来的用户能够完成业务流程。<br><br>支付失败真没什么好办法了，因为这是核心链路的核心功能。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531119814,"ip_address":"","comment_id":15320,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31595880244","product_id":100006601,"comment_content":"功能：登录、抢购、支付。\r<br>接口故障应对方法：降级、熔断、限流和排队。\r<br>三个功能是有依赖关系的，登录了才能抢购，抢购了才能支付。因此如果从依赖关系考虑，总体访问量过大无法满足时，降级时优先保留登录，其次是抢购，再其次是支付。但是支付是成交关键，并且访问数量比登录抢购少很多，可以说不是一个数量级，因此我觉得支付优先级是最高的。\r<br>其中只有支付涉及外部调用，因此只需为支付提供熔断方案。\r<br>抢购功能提供排队和限流方案，对于每个参与抢购活动的商品根据商品数量设定队列长度，限流也根据商品数量进行限流。\r<br>支付失败要怎么处理？","like_count":7,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420338,"discussion_content":"假如降级时优先保证登录，但是用户登录进来后发现抢购不了，其实体验也不好，而且已经抢购了的用户可能无法支付，这样体验更不好，甚至会引起投诉，因此抢购类降级是优先降登录会好些，保留抢购和支付，保证进来的用户能够完成业务流程。\n\n支付失败真没什么好办法了，因为这是核心链路的核心功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531119814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28309,"user_name":"奋斗心","can_delete":false,"product_type":"c1","uid":1247286,"ip_address":"","ucode":"06A195AB0B6570","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/36/98be3d69.jpg","comment_is_top":false,"comment_ctime":1538047762,"is_pvip":false,"replies":[{"id":"10263","content":"正确👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1538103976,"ip_address":"","comment_id":28309,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18717916946","product_id":100006601,"comment_content":"访问的流量在每个环节可能逐步递减（登陆例外）<br>1、引导部分用户提前登陆；<br>2、秒杀价系统独立部署（感觉和其他系统部署在一起才需要降级）；<br>3、抢购使用排队方式。有界队列，队列大小可以预估较大长度，队列外的拒绝；<br>4、（如果要求以支付成功为准）通过队列和熔断。<br>（如果以下单成功为准）使用熔断。提醒稍后再付<br>","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425223,"discussion_content":"正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538103976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17295,"user_name":"食指可爱多","can_delete":false,"product_type":"c1","uid":1045721,"ip_address":"","ucode":"B918E07F55AB9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/d9/e572ae4d.jpg","comment_is_top":false,"comment_ctime":1532562485,"is_pvip":true,"replies":[{"id":"6008","content":"用kafka，用商品id做队列名称就可以了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1532577525,"ip_address":"","comment_id":17295,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18712431669","product_id":100006601,"comment_content":"“每一个参加秒杀活动的商品保存一个队列，队列的大小可以根据参与秒杀的商品数量（或加点余量）自行定义。”我之前也思考过类似于淘宝秒杀或12306这种高并发系统，应该不会所以资源在一个队列里排队，这样整个系统并发度无法水平伸缩，那么请问老师一个技术细节问题，每个商品一个队列这个有啥推荐的实现方案吗？","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421105,"discussion_content":"用kafka，用商品id做队列名称就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532577525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15156,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1530936974,"is_pvip":false,"replies":[{"id":"5206","content":"基本思路就是这样的，另外，登录也可以降级","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531122922,"ip_address":"","comment_id":15156,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18710806158","product_id":100006601,"comment_content":"1、在抢购开始前，可以通过降级来保证登陆服务。例如提前半小时限制注册、修改用户信息的服务。<br>2、整个流量的洪峰应该在于下单。下单可以同时基于限流和排队两种方案，这个需要大概估计到。譬如说100W人抢购100件商品，可以在整点时对下单操作做99%的限流，把1000K的访问问题改写为10k，10k里面再进行排队。<br>3、支付属于第三方调用，使用熔断机制（譬如说下单后保留30分钟的支付的时间，等待支付宝服务恢复）<br><br>未实际开发过实际抢购系统，期望老师和其他同学提供好的方案借鉴学习","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420260,"discussion_content":"基本思路就是这样的，另外，登录也可以降级","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531122922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40858,"user_name":"小狮子辛巴","can_delete":false,"product_type":"c1","uid":1088420,"ip_address":"","ucode":"B9676851AF3370","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/a4/ddb31c5b.jpg","comment_is_top":false,"comment_ctime":1542683607,"is_pvip":false,"replies":[{"id":"14752","content":"认真思考，点赞👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1542725491,"ip_address":"","comment_id":40858,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14427585495","product_id":100006601,"comment_content":"<br>第一版（不看评论的思考回答）<br>\t\t<br>\t假如有100种商品，每个商品1k件。首先设计100个队列。<br>\t对于已经登录的用户<br>\t\t限定每个队列只能有1w个排队的人，如果超过1w人，就提示人数太大，只能等下次了。<br><br>\t已经未登录的用户<br>\t\t如果抢购时间段同时登录人数太多，超过100w, 逐步降级和熔断<br>\t\ta.可以登录，但不能参与抢购了<br>\t\tb.暂停登录，拒绝服务 （防止把系统拖垮，影响正常的不抢购的用户）<br><br>第二版（看过评论之后的思考回答）<br>\t1、 忘记了熔断是对外的。老师特意提示了依赖了第三方支付。<br>\t所以上面 逐步降级和熔断  感觉应该是   逐步降级和限流<br><br>假如有100种商品，每个商品1k件。首先设计100个队列。<br>对于已经登录的用户<br>\t1、抢购 限定每个队列只能有1w个排队的人，如果超过1w人，就提示人数太大，只能等下次了。<br>\t2、熔断处理， 提示抢购成功的同学，“歇歇再支付，不着急。” 分散支付请求 。<br>已经未登录的用户<br>\t如果抢购时间段同时登录人数太多，超过100w, 逐步降级<br>\ta.可以登录，但不能参与抢购了<br>\tb.暂停登录，拒绝服务 （防止把其他系统拖垮，影响正常的不抢购的用户）","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429635,"discussion_content":"认真思考，点赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542725491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23528,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1536468257,"is_pvip":false,"replies":[{"id":"8556","content":"正确","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1536536011,"ip_address":"","comment_id":23528,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14421370145","product_id":100006601,"comment_content":"登录大体可分为免密登录和非免密登陆（包含登陆密码、人脸登陆、短信登录等），95%左右的都是免密登录，内部的实现相对也比较简单，采用限流方式就可以了；对于非免密登录，内部实现相对会复杂些，并且会有风控策略，因而面对大流量需要同时采取限流和内部降级两种策略了。<br>对于抢购，优先采用排队策略，可以避免限流策略下前面的用户因限流导致抢购失败而后面的用户限流通过情况下用户体验不好的情况。<br>支付采用熔断策略即可，同时要将对应的错误码进行适当的优化，并提供用户再次进行支付的入口。熔断策略的实现可能会稍微有点复杂，并且需要系统报警+人工确认双重保证，避免网络、机器、电源等情况引起的误触发。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423602,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536536011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15255,"user_name":"100kg","can_delete":false,"product_type":"c1","uid":1101294,"ip_address":"","ucode":"98589A8F7ED8BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/ee/f204ba32.jpg","comment_is_top":false,"comment_ctime":1531042390,"is_pvip":false,"replies":[{"id":"5188","content":"会的，库存不能用双主","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531121140,"ip_address":"","comment_id":15255,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14415944278","product_id":100006601,"comment_content":"老师，我有个双机那节的问题，如果采用了mysql 双主架构，对于库存这样的字段，在并发较高时，如果两个mysql同时 update 了库存（采用乐观锁，库存本身作为版本号)，这样会不会导致货物被两个人购买但库存却只减了1呢？该怎么解决呢？求赐教","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420305,"discussion_content":"会的，库存不能用双主","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531121140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20272,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1102652,"ip_address":"","ucode":"E04A474CAF6D26","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/3c/ab6425f7.jpg","comment_is_top":false,"comment_ctime":1534343935,"is_pvip":false,"replies":[{"id":"7128","content":"分析正确👍👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534388156,"ip_address":"","comment_id":20272,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10124278527","product_id":100006601,"comment_content":"我认为核心需要保证的业务的是抢购，抢购业务可能并发用户较多，对于抢购可以采取排队策略，对参与抢购的用户进行排队。对于登录服务，当发生接口故障的时候，为了保证抢购业务顺利，可以采取降级策略，可以让部分用户登录失败，可以停掉注册等接口，当大量调用支付系统，而支付系统反应慢而影响整个系统的时候，可以对支付系统进行容错处理，可以让用户过段时间再支付。对于熔断的阈值可以根据具体的业务来判断。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422181,"discussion_content":"分析正确👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534388156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243486,"user_name":"InfoQ_6792a017d8d3","can_delete":false,"product_type":"c1","uid":1604463,"ip_address":"","ucode":"3F172927239F99","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqjZHY70Lke3YzZFibuibLTmt0NfXqj3zVBIGrauOzZj19B3RMo4iaY9ibXq3ar9lSGPdgcqzw2UrgMjQ/132","comment_is_top":false,"comment_ctime":1598152078,"is_pvip":false,"replies":[{"id":"90077","content":"加油������","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1598686723,"ip_address":"","comment_id":243486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5893119374","product_id":100006601,"comment_content":"真是非常棒。<br>这节不仅讲了降级、限流、排队、熔点。<br>还让个人了解了上述知识在整个可用性架构中的位置。<br><br>对引导构建已有知识的架构体系尤为有用。<br><br>这课买的赚飞了，顺便还买了书，还是更喜欢翻书的感觉","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504302,"discussion_content":"加油������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598686723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227269,"user_name":"黄堃健","can_delete":false,"product_type":"c1","uid":2037522,"ip_address":"","ucode":"B4AD5250A41B3A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/YbUxEV3741vKZAiasOXggWucQbmicJwIjg3HDE58oyibYXbSop9QQFqZ7X6OhynDoo6rDHwzK8njSeJjN9hx3pJXg/132","comment_is_top":false,"comment_ctime":1592349298,"is_pvip":false,"replies":[{"id":"83986","content":"每个读者都有自己不同的应用场景，而且文中已经有案例了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1592523495,"ip_address":"","comment_id":227269,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887316594","product_id":100006601,"comment_content":"结合应用场景就更好了，觉得有点空洞","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498564,"discussion_content":"每个读者都有自己不同的应用场景，而且文中已经有案例了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592523495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215732,"user_name":"H","can_delete":false,"product_type":"c1","uid":1793962,"ip_address":"","ucode":"04D7D030245E27","user_header":"https://static001.geekbang.org/account/avatar/00/1b/5f/aa/63e641c1.jpg","comment_is_top":false,"comment_ctime":1589089683,"is_pvip":false,"replies":[{"id":"80040","content":"将一天的总请求数量折算成TPS，另外，TPS是测试出来然后不断进行优化达到成本目标！例如，你们想用5台机器就能支撑，那推算出来每台每天就是500W访问量。<br><br>理论上来说，DAU和TPS是同步增长的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1589245167,"ip_address":"","comment_id":215732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884056979","product_id":100006601,"comment_content":"想问一个问题。关于设计一个接口，一台机器能抗多少量。应该根据一天的总请求量，响应时间，cpu,内存等参数，根据哪个参数来设计？<br>比如我现在一个接口的一天访问量是2500W，20WDAU。如果推量到100WDAU，访问量是不是直接涨5倍，12500W访问量？往指教","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494537,"discussion_content":"将一天的总请求数量折算成TPS，另外，TPS是测试出来然后不断进行优化达到成本目标！例如，你们想用5台机器就能支撑，那推算出来每台每天就是500W访问量。\n\n理论上来说，DAU和TPS是同步增长的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589245167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195943,"user_name":"那迦树","can_delete":false,"product_type":"c1","uid":1055625,"ip_address":"","ucode":"34519C1DEA41A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/89/b7fae170.jpg","comment_is_top":false,"comment_ctime":1585225136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880192432","product_id":100006601,"comment_content":"还是要有容灾能力，用集群或者服务降级的方式应对","like_count":1},{"had_liked":false,"id":185939,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1583727641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878694937","product_id":100006601,"comment_content":"降级（从系统功能优先级角度应对故障，将某业务或者接口功能降低，不提供或者全部停止某部分业务功能）<br>主要的方式有：<br>1）后门降级，加个后门，url带参数，通过tcp或者http的方式去下达指令。<br>2）独立系统降级，将降级的系统或者功能单独部署起来，给予访问。<br>限流（从用户访问角度来应对故障，超出访问量部分的数据将被丢弃，主要包括两种方式：基于请求限流，基于资源限流）<br>熔断（应对依赖的外部故障的情况，通常是访问第三方系统，或者是业务系统内部跨模块调用）<br>排队（借助中间件）<br><br>思考题，登录，抢购，支付。这是典型的漏斗模型，首先大量的访问量将在登录产生，因而登录可以采用降级和限流，抢购会产生大量并发，可以采用队列，按照顺序处理，最后支付，一般会调用第三方接口，在没有及时返回结果的话，就需要熔断。<br><br>结合公司业务，在服务器重启的时候，会有数以十万计的登录业务请求产生，基于这样的原因，我们在nginx那边做了基于请求量限流：每秒控制2000的访问的请求。<br><br>而在业务系统访问云平台的地方增加了熔断，业务系统访问一个gettoken接口，如果30秒没有返回的话，就产生熔断警告信息。","like_count":1},{"had_liked":false,"id":92894,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1515145,"ip_address":"","ucode":"0EF2D58B46D7C3","user_header":"https://static001.geekbang.org/account/avatar/00/17/1e/89/25b12054.jpg","comment_is_top":false,"comment_ctime":1557362720,"is_pvip":false,"replies":[{"id":"33293","content":"解决方案架构师偏业务，系统架构师偏技术，例如来了一个地铁项目，先由解决方案架构师分析需求，业务，然后再交给系统架构师设计方案架构","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1557457759,"ip_address":"","comment_id":92894,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852330016","product_id":100006601,"comment_content":"请教老师一个技术之外的问题，解决方案架构师和系统架构师的区别是什么？各有什么侧重点吗","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449415,"discussion_content":"解决方案架构师偏业务，系统架构师偏技术，例如来了一个地铁项目，先由解决方案架构师分析需求，业务，然后再交给系统架构师设计方案架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557457759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30383,"user_name":"今天","can_delete":false,"product_type":"c1","uid":1252217,"ip_address":"","ucode":"FF10C45BDE8757","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/79/07e442ad.jpg","comment_is_top":false,"comment_ctime":1538817638,"is_pvip":false,"replies":[{"id":"10980","content":"没有其它专栏的计划，写个专栏要几年😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1538869365,"ip_address":"","comment_id":30383,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833784934","product_id":100006601,"comment_content":"感谢老师的专栏，写的很专业，学到了很多，物超所值，尤其是一些方法类的东西，受益终生，以前学习过程中的疑问，也从老师这找到了答案。也期待老师的其他专栏。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425972,"discussion_content":"没有其它专栏的计划，写个专栏要几年😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538869365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15232,"user_name":"衣申人","can_delete":false,"product_type":"c1","uid":1115777,"ip_address":"","ucode":"887FE9109B97DE","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/81/28418795.jpg","comment_is_top":false,"comment_ctime":1531020192,"is_pvip":false,"replies":[{"id":"5195","content":"没问题就降级，有点过分了呀，产品经理要打你😂<br>另外，支付最好也不要限流，支付限流的话，用户体验很不好，还不如前面限流","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531121800,"ip_address":"","comment_id":15232,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5825987488","product_id":100006601,"comment_content":"整点前降级其他非核心功能，登录采用限流，抢购采用排队加限流，支付对支付宝要有熔断，可加限流。完毕！","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420296,"discussion_content":"没问题就降级，有点过分了呀，产品经理要打你😂\n另外，支付最好也不要限流，支付限流的话，用户体验很不好，还不如前面限流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531121800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352769,"user_name":"😶😶😶😶","can_delete":false,"product_type":"c1","uid":1209557,"ip_address":"北京","ucode":"3DC0660A024B5F","user_header":"https://static001.geekbang.org/account/avatar/00/12/74/d5/bd75fe69.jpg","comment_is_top":false,"comment_ctime":1658920013,"is_pvip":false,"replies":[{"id":"128336","content":"没法互相转换，但可以在一个系统里面组合来用","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1659066165,"ip_address":"北京","comment_id":352769,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1658920013","product_id":100006601,"comment_content":"请问 令牌桶 和漏桶    是不是可以相互转换   漏桶关注总量 换算成系统 的tps 是否就可以使用令牌桶了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581910,"discussion_content":"没法互相转换，但可以在一个系统里面组合来用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659066165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338376,"user_name":"简单猫","can_delete":false,"product_type":"c1","uid":1866485,"ip_address":"","ucode":"EA027D4C344E25","user_header":"https://static001.geekbang.org/account/avatar/00/1c/7a/f5/54a5084b.jpg","comment_is_top":false,"comment_ctime":1647448371,"is_pvip":false,"replies":[{"id":"123767","content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1647589353,"ip_address":"","comment_id":338376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647448371","product_id":100006601,"comment_content":"一，登入，大并发降级，去掉不必要的信息读取<br>二，一定量抢，令牌桶，也好，队列也好，看情况吧<br>如果并发吃住，漏桶也可以，超过阈值直接拒绝<br>三，支付，要保证唯一性，使用队列比较合适<br><br>如果是服务器集群，可以把业务量分散到不同服务器处理，提高并发处理速度<br>通过hash，用户id ，IP等来分散到不同服务器，并保证最终唯一性","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556968,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647589353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336840,"user_name":"Join","can_delete":false,"product_type":"c1","uid":1014873,"ip_address":"","ucode":"20F51EFFD8FEDE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/59/dc9bbb21.jpg","comment_is_top":false,"comment_ctime":1646393286,"is_pvip":false,"replies":[{"id":"123183","content":"加油 ：）","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1646642038,"ip_address":"","comment_id":336840,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646393286","product_id":100006601,"comment_content":"我要看到最后, 华仔的K8s深入剖析已经学完啦","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554846,"discussion_content":"加油 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646642038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333210,"user_name":"沐雪","can_delete":false,"product_type":"c1","uid":1028301,"ip_address":"","ucode":"0C42BF0D75FD9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","comment_is_top":false,"comment_ctime":1644214329,"is_pvip":true,"replies":[{"id":"121854","content":"分析很细致，点赞","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1644373204,"ip_address":"","comment_id":333210,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644214329","product_id":100006601,"comment_content":"文章正文和评论一起看，学习更深入。书也买了，但是没有评论内容感觉少了很多东西。评论里的内容是大家共同思考的东西，很值得我们学习和反思。<br><br>今天的思考题，我是这么设计的：<br>首先预估参与人数，评估现有资源（服务器）能否支撑住。若支撑不了，则要考虑应对手段，方案如下：<br>1、将抢购活动的相关服务器资源（应用服务器，数据库，消息队列，缓存等）独立部署，与其他正常业务隔离，若有数据需要融合，等活动结束后，再同步数据。<br>2、抢购活动之前，将商品sku等信息写入缓存，不让直接操作数据库。<br>3、登录是核心功能，保证其能正常使用，若压力过大，则也要降级。<br>4、抢购活动期间，停止一些非核心功能的写操作（降级）。<br>5、抢购使用限流（漏桶算法），或者是排队，若商品有100个，则总容量控制在1万，超过1万后，直接返回“未抢到”。<br>6、程序处理，选100个人抢购成功，其他人返回“未抢到”。<br>6、抢和支付分2个步骤，抢成功后的反馈页，一般为静态页面，提示30分钟内支付。<br>7、付款一般不做限制，或者是做一些常规的限流（令牌桶算法）。<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550062,"discussion_content":"分析很细致，点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644373205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317636,"user_name":"小蓝罐","can_delete":false,"product_type":"c1","uid":1064437,"ip_address":"","ucode":"633287C8CA9AC3","user_header":"https://static001.geekbang.org/account/avatar/00/10/3d/f5/5c7d550f.jpg","comment_is_top":false,"comment_ctime":1634873866,"is_pvip":false,"replies":[{"id":"115146","content":"合适不是按部就班，而是要根据你的团队人员数量、技术水平、业务发展规模、老板准备投入的资源来决定什么才是合适的架构。<br><br>如果团队人也够，钱也有了，业务发展也基本明确了，就应该从单体直接演进到微服务。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1634892584,"ip_address":"","comment_id":317636,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634873866","product_id":100006601,"comment_content":"老师看到请回答一下：就目前的架构演进来说，这个架构演进的大概顺序是否这样<br>单机架构（巨石架构）---》 集群架构 ---》 分布式集群架构 ---》 微服务架构（目前）<br><br>如果某家公司它现在处于一个单机架构向集群架构过渡的期间，而且它恰恰也满足了能够过渡到微服务架构的基础和技术储备。那么它是否可以存在直接跳到微服务架构呢？我学了你前面的课程 知道架构设计的三大原则：其中的演进原则  如果直接跳到分布式集群或者微服务架构那岂不是违反了演进原则了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528909,"discussion_content":"合适不是按部就班，而是要根据你的团队人员数量、技术水平、业务发展规模、老板准备投入的资源来决定什么才是合适的架构。\n\n如果团队人也够，钱也有了，业务发展也基本明确了，就应该从单体直接演进到微服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634892584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312969,"user_name":"Drake敏","can_delete":false,"product_type":"c1","uid":2734734,"ip_address":"","ucode":"38366767EFDC90","user_header":"https://static001.geekbang.org/account/avatar/00/29/ba/8e/4645afae.jpg","comment_is_top":false,"comment_ctime":1632153213,"is_pvip":false,"replies":[{"id":"113437","content":"抢购的时候注册完全可以不理","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1632303766,"ip_address":"","comment_id":312969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632153213","product_id":100006601,"comment_content":"登陆肯定需要降级，注册可以设置为队列的方式来实现支持，支付可等待","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527185,"discussion_content":"抢购的时候注册完全可以不理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632303766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304929,"user_name":"11月的萧邦","can_delete":false,"product_type":"c1","uid":2663324,"ip_address":"","ucode":"E7A2236BFD9ABE","user_header":"https://static001.geekbang.org/account/avatar/00/28/a3/9c/836d7bb3.jpg","comment_is_top":false,"comment_ctime":1627704739,"is_pvip":false,"replies":[{"id":"110353","content":"有点浪费哦，0.8， 0.9都可以","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1627812171,"ip_address":"","comment_id":304929,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1627704739","product_id":100006601,"comment_content":"接口限流的阈值设定 我们公司通常是接口最大性能QPS值×0.7 作为接口限流阈值","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524215,"discussion_content":"有点浪费哦，0.8， 0.9都可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627812171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302646,"user_name":"Geek_626167","can_delete":false,"product_type":"c1","uid":2223686,"ip_address":"","ucode":"FA604C718E67BF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0lTiaKqiba7pqubScfQVtkuphwxD529icZMOgRjO5icxhF79mvs2JMp0XIOMGy24bkh79icCNPDDOeicKWuqMmMz0vfQ/132","comment_is_top":false,"comment_ctime":1626313361,"is_pvip":false,"replies":[{"id":"109540","content":"分析到位，点赞 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1626351508,"ip_address":"","comment_id":302646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626313361","product_id":100006601,"comment_content":"登录：属于核心功能，可以使用降级策略，当负载过大，可以舍弃其他功能保护登录功能的正常使用。<br>抢购：由于是限时限量的，可以按请求量进行限流，超出数量的请求返回抢购失败，针对开始时间之前的请求也可以直接返回失败。<br>支付：进入支付环节表示已下单成功，可以使用排队支付来分解压力。如果支付宝那头压力过来也可以提示用户稍后再试，毕竟订单一般有30分钟支付时间。<br>当然，针对这种秒杀抢购场景，整套服务最好是与普通买卖场景服务进行隔离，避免影响其他商品的正常交易。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523370,"discussion_content":"分析到位，点赞 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626351508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288830,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1618720540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618720540","product_id":100006601,"comment_content":"解决接口级故障的核心思想和异地多活基本类似：优先保证核心业务和优先保证绝大部分用户。<br>降级 降级指系统将某些业务或者接口的功能降低，可以是只提供部分功能，也可以是完全停掉所有功能。<br>常见的实现降级的方式有：系统后门降级 独立降级系统<br><br>熔断  熔断和降级是两个比较容易混淆的概念，因为单纯从名字上看好像都有禁止某个功能的意思，但其实内在含义是不同的，原因在于降级的目的是应对系统自身的故障，而熔断的目的是应对依赖的外部系统故障的情况。<br>        熔断机制实现的关键是需要有一个统一的 API 调用层，由 API 调用层来进行采样或者统计，如果接口调用散落在代码各处就没法进行统一处理了。<br>限流  限流指只允许系统能够承受的访问量进来，超出系统访问能力的请求将被丢弃。<br>      基于请求限流   基于资源限流<br>排队","like_count":0},{"had_liked":false,"id":288285,"user_name":"秦爷","can_delete":false,"product_type":"c1","uid":1319046,"ip_address":"","ucode":"8795B66D29743F","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/86/dc20f028.jpg","comment_is_top":false,"comment_ctime":1618392607,"is_pvip":false,"replies":[{"id":"104661","content":"客户端了解架构，对于方案设计和拓宽自己技术领域视野也很有帮助","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1618440799,"ip_address":"","comment_id":288285,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618392607","product_id":100006601,"comment_content":"我一个做客户端的，也坚持看到了这里。后面继续！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518573,"discussion_content":"客户端了解架构，对于方案设计和拓宽自己技术领域视野也很有帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618440799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287682,"user_name":"Twein","can_delete":false,"product_type":"c1","uid":1309882,"ip_address":"","ucode":"83498605A39292","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1G2rlRgNalXbcUnHibRNMibAeHQhWoKNl4e4EgkiawDynZZiaO4W3vSSMtlYEKrt6e7GW4mcu1sjcs7bGKjl0vRhWQ/132","comment_is_top":false,"comment_ctime":1618108004,"is_pvip":false,"replies":[{"id":"104506","content":"redis每秒处理性能量级是5~10万，你算算看会不会压力很大 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1618148710,"ip_address":"","comment_id":287682,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618108004","product_id":100006601,"comment_content":"坚持到现在，差不多每篇都看评论，问下老师，比如商品数量是100个，我只允许1000个用户进来抢购，期间我肯定是把1000个用户放到队列里面排队，我的问题是我怎么实时计算这1000个用户的数量，是通过redis的incr计算，那这样redis压力会不会大，或者老师有啥的好方案","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518387,"discussion_content":"redis每秒处理性能量级是5~10万，你算算看会不会压力很大 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618148710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135045,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1568987523,"is_pvip":false,"replies":[{"id":"51997","content":"可以看看其它评论","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1569235030,"ip_address":"","comment_id":135045,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568987523","product_id":100006601,"comment_content":"        如果你来设计一个整点限量秒杀系统，包括登录、抢购、支付（依赖支付宝）等功能，你会如何设计接口级的故障应对手段？<br>        登录是首先要保证的，所以最好不要做限流或排队，因为登录功能非常影响用户的体验。万一出了状况那也只能限流了。<br>        在用户登录成功发出抢购请求后如果出现后端故障或响应慢则应该考虑针对实际情况做降级或熔断。<br>        一旦用户抢购成功发起了支付请求则应通过排队来确保支付成功。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468018,"discussion_content":"可以看看其它评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569235030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129960,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1567340579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567340579","product_id":100006601,"comment_content":"课后思考及问题<br>1：降级——冗余代码或开关控制逻辑，当依赖的基础服务无法提供时，选择提供次一级的服务。<br>2：熔断——冗余代码开关逻辑，当依赖的某个外部服务提供的变量值达到某个特定值的时候，走别的分治逻辑<br>3：限流——流量超过预期的量，对超过的量进行限制，抛弃或先缓存一下随后处理<br>4：排队——也是流量过多，或者需要保留请求的处理次序，使用队列的方式缓存处理信息随后再处理。<br><br>如果我来设计一个整点限量秒杀系统，包括登录、抢购、支付（依赖支付宝）等功能，我会如何设计接口级的故障应对手段？<br>登录——我认为需要在前端加上验证码校验就行，防止同一个用户或用一个IP疯狂的登录，至于后端不应该做过多的限制，一个系统连登录都不行，估计会影响比较大。<br>抢购——这个是秒杀的关键，这里需要对接口进行限流、排队的控制，防止流量洪峰瞬间将系统拖垮。<br>支付——抢购成功后需要支付成功才算秒杀成功，这里又依赖支付宝这个外部服务，经抢购的过滤流量应该会下降不少，不过也要防止支付宝服务不稳定的情况发生，需要做好降级和熔断的业务处理。降级服务，需要安慰一下抢购成功支付失败的客户。","like_count":0},{"had_liked":false,"id":110512,"user_name":"GeekCoder","can_delete":false,"product_type":"c1","uid":1523315,"ip_address":"","ucode":"14BB73CBE28545","user_header":"","comment_is_top":false,"comment_ctime":1562288782,"is_pvip":false,"replies":[{"id":"40576","content":"如果是APP，可以用HTTP-DNS，如果是网页，基本没办法","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1562555872,"ip_address":"","comment_id":110512,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562288782","product_id":100006601,"comment_content":"如何应对域名故障？如域名被hold。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456917,"discussion_content":"如果是APP，可以用HTTP-DNS，如果是网页，基本没办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562555872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93313,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1557451784,"is_pvip":true,"replies":[{"id":"33292","content":"不同语言不同行业都不同，JAVA推荐spring全家桶","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1557457684,"ip_address":"","comment_id":93313,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1557451784","product_id":100006601,"comment_content":"为啥没提供一些工具组建供参考","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449578,"discussion_content":"不同语言不同行业都不同，JAVA推荐spring全家桶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557457684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85915,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1555292268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555292268","product_id":100006601,"comment_content":"降级熔断限流排队等方式，来应对接口级故障","like_count":0},{"had_liked":false,"id":73461,"user_name":"Geek_b8f728","can_delete":false,"product_type":"c1","uid":1262889,"ip_address":"","ucode":"A2CEA11A496492","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIwfpclhibqJnGJaKFSAnmy5PGhZWKsNJaIUfwNrqoAibNuFXfInEslrXQ4GibCgpagXLwc4WFmlicoQQ/132","comment_is_top":false,"comment_ctime":1551888557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551888557","product_id":100006601,"comment_content":"     降级：优先保证登录与购买<br>     熔断：图片js脚本等通过静态资源服下载，与功能业务接口分离<br>     限流：用性能测试工具确定系统可承受访问量，超过后拒绝任务执行<br>     排队：业务接收请求用消息队列工具存储","like_count":0},{"had_liked":false,"id":47179,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1544068372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544068372","product_id":100006601,"comment_content":"降级、限流、熔断、排队这些功能是可以一起使用的，设计大流量的秒杀系统时，因实时tps高，占用很多系统资源导致其他业务一起受牵连，所以在设计时，将功能进行拆分（SOA），先对秒杀请求进行限流，请求量要略微大于秒杀库存量，然后使用排队的方式降低系统实时处理请求数，当排队数量大于库存数量时，直接返回拒绝请求，当秒杀服务出问题时，采取秒杀服务降级的方式，确保其他的业务模块正常运行.<br>","like_count":0},{"had_liked":false,"id":41501,"user_name":"刘鹏","can_delete":false,"product_type":"c1","uid":1230417,"ip_address":"","ucode":"44F3D4DB3F5678","user_header":"https://static001.geekbang.org/account/avatar/00/12/c6/51/e39b5828.jpg","comment_is_top":false,"comment_ctime":1542795150,"is_pvip":false,"replies":[{"id":"15006","content":"你没有说具体是如何影响的，是服务器性能扛不住的话，直接加服务器，将AB分开部署就可以了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1542861326,"ip_address":"","comment_id":41501,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542795150","product_id":100006601,"comment_content":"老师，有这样一个场景，有一个微服务A在凌晨会执行大量的定时任务，会影响正常服务的使用，所以想把定时任务拿到一个单独的服务B，然后A通过mq去异步调定时任务B，但是B还是和A在一个服务器的。我觉得这样拆没什么用吧，瓶颈在于服务器而不在于服务，老师您觉得呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429822,"discussion_content":"你没有说具体是如何影响的，是服务器性能扛不住的话，直接加服务器，将AB分开部署就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542861326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25136,"user_name":"shi.yunlai","can_delete":false,"product_type":"c1","uid":1210248,"ip_address":"","ucode":"9E7124F22F182A","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/88/965e9951.jpg","comment_is_top":false,"comment_ctime":1537251898,"is_pvip":false,"replies":[{"id":"9260","content":"自古评论出人才😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1537342251,"ip_address":"","comment_id":25136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537251898","product_id":100006601,"comment_content":"精彩的都在评论留言啊…赞","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424200,"discussion_content":"自古评论出人才😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537342251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21524,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1535154261,"is_pvip":false,"replies":[{"id":"7725","content":"基本正确👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1535289900,"ip_address":"","comment_id":21524,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535154261","product_id":100006601,"comment_content":"对于整点限量秒杀系统来说，登录，抢购，支付都为核心功能，优先级依次为登录-&gt;抢购-&gt;支付，无需进行降级。<br><br>支付功能调用支付宝服务，可以使用熔断和限流。<br>由于有多种抢购产品，每个产品的抢购规则可能不太一样，可以定制开发一个通用抢购服务，此服务具有类似限流功能。或者可以使用文中消息队列方式，达到类似限流功能。<br><br><br><br><br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422722,"discussion_content":"基本正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535289900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20891,"user_name":"无聊夫斯基","can_delete":false,"product_type":"c1","uid":1194071,"ip_address":"","ucode":"F7BC3346FFF5EC","user_header":"https://static001.geekbang.org/account/avatar/00/12/38/57/a9f9705a.jpg","comment_is_top":false,"comment_ctime":1534811017,"is_pvip":false,"replies":[{"id":"7356","content":"加个付款时限就可以，例如12306好像是30分钟内要完成付款，没完成的就当放弃订单，系统会取消订单","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534823208,"ip_address":"","comment_id":20891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534811017","product_id":100006601,"comment_content":"还是比较在意抢购了，但未付款的物品怎么处理？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422441,"discussion_content":"加个付款时限就可以，例如12306好像是30分钟内要完成付款，没完成的就当放弃订单，系统会取消订单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534823208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18424,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1533299226,"is_pvip":false,"replies":[{"id":"6436","content":"有一定侵入，但可以做到框架中，并不会有太多影响；也可以做到网关中，直接停掉URL<br>","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1533305430,"ip_address":"","comment_id":18424,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533299226","product_id":100006601,"comment_content":"降级是整个服务都停掉么？如果只停掉部分接口功能，是不是要对接口都要设置一个开关，这样做是不是对业务入侵很大？还有服务停掉依赖这个服务的消费方调用就会不错了，难道消费方也要做相应处理？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421518,"discussion_content":"有一定侵入，但可以做到框架中，并不会有太多影响；也可以做到网关中，直接停掉URL\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533305430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15432,"user_name":"zbest","can_delete":false,"product_type":"c1","uid":1069253,"ip_address":"","ucode":"3B891BEEB8429A","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/c5/f79b742f.jpg","comment_is_top":false,"comment_ctime":1531187069,"is_pvip":false,"replies":[{"id":"5253","content":"卧虎藏龙啊😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531276246,"ip_address":"","comment_id":15432,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531187069","product_id":100006601,"comment_content":"每期都看看评论，看别人怎么分析“课后作业”，收货也挺大🤔🤔🤔","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420384,"discussion_content":"卧虎藏龙啊😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531276246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15383,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1105431,"ip_address":"","ucode":"B1F8AE3AD82C51","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","comment_is_top":false,"comment_ctime":1531150261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531150261","product_id":100006601,"comment_content":"首先是通过压测的手段得倒到系统的最大的在线用户数，然后设置阈值，限流在80%<br>抢购分为多步进行，首先有验证吗！可以减小并发的秒杀数；抢购还有队列，比如商品最大1000，队列限制在1200，最大可接受1200请求，其他直接提示秒杀结束<br>秒杀到的商品，需要支付，可使用排队进行支付","like_count":0},{"had_liked":false,"id":15340,"user_name":"王维","can_delete":false,"product_type":"c1","uid":1091684,"ip_address":"","ucode":"836E6CDB1A56BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/64/965e0d9b.jpg","comment_is_top":false,"comment_ctime":1531131182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531131182","product_id":100006601,"comment_content":"首先保证系统的核心功能可用，在这里登录和抢购是系统的核心功能，所以要提高这两块的优先级别。<br>其次对于登录，可以采用排队机制，合理限制参加抢购的人数。<br>最后，如果调用支付接口拖慢了系统，可以采用熔断机制，从而保证系统的可用性。","like_count":0},{"had_liked":false,"id":15318,"user_name":"筱龍","can_delete":false,"product_type":"c1","uid":1114710,"ip_address":"","ucode":"460166853D95B8","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/56/dffa6797.jpg","comment_is_top":false,"comment_ctime":1531108359,"is_pvip":false,"replies":[{"id":"5180","content":"spring cloud文档都有说明的哦，专栏的目的在于教会大家架构设计的方法论，然后你在具体实践过程中可以按照方法论去操作，也许是用spring cloud，也许是dubbo，也许是自研，但方法论是不变的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531120033,"ip_address":"","comment_id":15318,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531108359","product_id":100006601,"comment_content":"老师，请问能否基于springcloud或者dubbo来给我们讲讲这些架构，算是最佳实践，多谢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420337,"discussion_content":"spring cloud文档都有说明的哦，专栏的目的在于教会大家架构设计的方法论，然后你在具体实践过程中可以按照方法论去操作，也许是用spring cloud，也许是dubbo，也许是自研，但方法论是不变的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531120033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15259,"user_name":"7","can_delete":false,"product_type":"c1","uid":1114093,"ip_address":"","ucode":"10A6E57A027D42","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/ed/b2fc0e7c.jpg","comment_is_top":false,"comment_ctime":1531045823,"is_pvip":false,"replies":[{"id":"5186","content":"支付一般不建议排队和限流，用户体验很不好，还不如前面登录和抢购就限制。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531120993,"ip_address":"","comment_id":15259,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531045823","product_id":100006601,"comment_content":"我认为可以这样设计：<br>登录可以使用降级或者排队策略（但我可能觉得不一定会使用，因为实际场景一般是用户都提前登录好了）；<br><br>抢购可以使用排队策略，再加上资源限流方式，主要基于cpu和内存；<br><br>支付可以使用排队策略，加上限流策略，如果支付宝响应慢，可以降低通过的个数；如果中途有人支付失败，需重新发起支付；如果有人放弃支付，可调用刚才排队队列中的相应请求再去支付，直到商品被抢购完成；<br><br>当然还有高性能➡️高可用方面的问题<br>以上是我的拙见……","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420307,"discussion_content":"支付一般不建议排队和限流，用户体验很不好，还不如前面登录和抢购就限制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531120993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15235,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1531020818,"is_pvip":false,"replies":[{"id":"5194","content":"分析的太简单了，需要根据业务场景逐一分析，例如登录，抢购，支付分别应该如何做","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531121664,"ip_address":"","comment_id":15235,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531020818","product_id":100006601,"comment_content":"我觉得秒杀系统最应该做的就是限流，比如1元卖iphone，100台，有1000万人参与秒杀，通过边缘计算只放200人过去秒杀系统，其他用户全部返回秒杀结束，我想200的并发怎么样也扛得住！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420298,"discussion_content":"分析的太简单了，需要根据业务场景逐一分析，例如登录，抢购，支付分别应该如何做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531121664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15187,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1530971982,"is_pvip":false,"replies":[{"id":"5201","content":"关键时刻登录也要限流","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531122647,"ip_address":"","comment_id":15187,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530971982","product_id":100006601,"comment_content":"如果时间充裕，就单独把这个整点系统与固有系统隔离出来搞，<br><br>如果不允许，切涉及一些固有系统逻辑，就得用到本篇讲到的方法了，登录，抢购，支付都属核心，<br>1.  这里能降级的额是其他外围功能，<br><br>2.  抢购阶段，队列蓄洪客户请求，限流变种<br><br>3. 支付，防止由于第三方依赖系统拖垮，做好熔断处理<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420277,"discussion_content":"关键时刻登录也要限流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531122647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}