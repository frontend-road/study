{"id":656997,"title":"09｜ElementU & CSS：如何设计页面逻辑与功能点？","content":"<p>你好，我是Barry。</p><p>我们都知道网站的美观性非常重要，不同的网站也会有不同的设计风格。比如工具类网站一般比较简洁，娱乐类的网站一般比较丰富多彩，办公类网站比较商务，学习类的网站比较学院风。</p><p>我们的视频平台是娱乐性质的网站，应该丰富多彩，比较有活力。而平台众多页面中，首页是用户进入一个平台的入口，也是流量最大的地方。</p><p>这节课，我们就从首页入手，一起来应用前面讲过的CSS + Element-UI ，学习一下如何设计和实现页面的开发。</p><h2>首页该如何设计？</h2><p>我们先来思考一下，网站首页应该如何设计。</p><p>首页最直接的作用就是把平台的主要功能展示给用户。不过首页要展示的东西通常比较多，所以需要设计分区，每个分区负责展示一类事物。</p><p>为了方便你理解，我们一起观察一些常见的网站都是怎么做的。首先来看看百度，可以看到百度首页核心的搜索功能放在了Header的下面，再往下放的是一些次要的功能——推荐和热搜。</p><p>核心功能、推荐和热搜这三块就形成了首页的三个分区。</p><p><img src=\"https://static001.geekbang.org/resource/image/77/30/77b0ea3dc9ce48571590aca01yyf8a30.jpg?wh=2874x1546\" alt=\"\"></p><p>我们再来看一下京东的页面。<br>\n<img src=\"https://static001.geekbang.org/resource/image/fb/e5/fbb8956c9402c058c37fc58781yy27e5.jpg?wh=2878x1328\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/3e/f8/3e0df79309819393e6bdee38c9ba25f8.jpg?wh=2870x1488\" alt=\"\"></p><p>可以看到，Header下面是核心商品搜索功能和各项菜单栏，中间是广告轮播区。再往下是相对重要的秒杀商品，接下来是各种频道和商品。</p><p>例子看完了，我们再来归纳总结一下。<strong>首页的定位是要展示一个网站具有的功能，同时也像分发器一样是跳转到其他页面的开始。</strong>首页需要按功能做分区，核心位置要突出展示核心功能，按重要程度依次往下。</p><!-- [[[read_end]]] --><p>在实现页面的布局和样式的过程中，CSS相当于核心的“粉刷匠”，我们通过CSS相关属性和功能才能实现页面的多样式开发。</p><h2>CSS回顾</h2><p>之前我们有简单介绍过装饰文本、装饰链接、装饰区块的相关属性。不过只靠这些还不足以实现一个优雅美观的HTML页面，接下来我们就扩展学习一些页面中常用的属性。</p><h3>1.背景色</h3><p>在网页中经常需要给元素添加背景色。比如前面我京东的首页，背景就是淡灰色的。背景色的CSS属性是background-color，值是颜色值。</p><pre><code class=\"language-css\">background-color: #99a9bf;\n</code></pre><h3>2.透明度</h3><p>有时候我们为了让元素看起来更美观，还需要用到透明度设置。透明度的属性是opacity，值是0-1之间的小数。</p><pre><code class=\"language-css\">opacity: 0.75;\n</code></pre><h3>3.字行高和字加粗</h3><p>有关字体的两个设置我们放在一起学习。给元素里的字加行高需要用到line-height，单位是px。</p><pre><code class=\"language-css\">line-height: 20px;\n</code></pre><p>有时需要给标题文字加粗，就要用到font-weight属性。</p><pre><code class=\"language-css\">font-weight: bold;\n</code></pre><h3>4.鼠标变成小手</h3><p>鼠标指针放在一个元素边界范围内时所呈现的光标形状有很多形式，它包括问号，小手等形状。</p><p>它的CSS属性是cursor，你可以通过后面的表格了解常用的属性值。</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/81/2ec99d14ac28b10757e4c96a91e97481.jpg?wh=3733x6169\" alt=\"\"></p><p>这里我们重点记住pointer 鼠标悬浮在元素上变成小手，表示当前区域可以点击。</p><pre><code class=\"language-css\">cursor: pointer;\n</code></pre><h3>5.边框</h3><p>当元素需要边框时，我们要用到border属性。</p><p>它由3个值组成。前两个值是边框宽度和边框样式。后面的示意图我画出了常见样式。</p><p><img src=\"https://static001.geekbang.org/resource/image/2b/61/2bf202653f22190e01560d5f4dbd6161.jpg?wh=2900x852\" alt=\"\"></p><p>第三个值是边框颜色。我们以上图1px大小、黑色的边框为例，对应的4种样式属性值是后面这样。</p><pre><code class=\"language-css\">border: 1px dotted #000;\nborder: 1px dashed #000;\nborder: 1px solid #000;\nborder: 1px double #000;\n</code></pre><p>前面的边框都是直角边框，那如果想要圆角边框怎么办呢？我们可以再加一个border-radius属性用来给边框加圆角，值是数字，单位仍然是px。border-radius属性的值是边框的圆角半径。</p><p><img src=\"https://static001.geekbang.org/resource/image/20/5e/20db611cb15a1yy78c3b16561e1e095e.jpg?wh=2000x1223\" alt=\"\"></p><pre><code class=\"language-css\">border: 1px solid #000;\n//边框加上直径是5px的圆角\nborder-radius：5px;\n</code></pre><h3>6.布局</h3><p>当多个元素要放在一行形成布局的时候，我们就需要修改元素的布局，主要是调整display属性。</p><p>display在HTML中的作用是控制元素的显示方式，HTML元素分成块级元素和行内元素，后面的表格梳理了常用元素。</p><p><img src=\"https://static001.geekbang.org/resource/image/b4/8c/b41b68b5yyd1c242e255670c4763ef8c.jpg?wh=2919x1276\" alt=\"\"></p><p>接下来我们就通过几个案例来学习一下，如何使用display。</p><p>当我们需要把元素变成块级元素，就要设置display的属性值为block。</p><pre><code class=\"language-css\">display:block;\n</code></pre><p>如果我们想把多个块级元素放在一行展示（注意，这个比较常用），就可以将display的属性值设置为inline-block。</p><pre><code class=\"language-css\">display:inline-block;\n</code></pre><p>想把元素变成行内元素，就可以这样操作。</p><pre><code class=\"language-css\">display:inline;\n</code></pre><p>还有一个比较常用的设置，就是元素隐藏，代码是后面这样。</p><pre><code class=\"language-css\">display:none;\n</code></pre><p>我们经常通过这一设置控制一些在某种条件下才出现的元素。比如网页弹出的广告，一开始是隐藏的，当页面滚动到了一个特定位置就会显示出来。</p><h3>7.定位</h3><p><img src=\"https://static001.geekbang.org/resource/image/4d/1e/4deb5ba71804fd90a56422864e53b51e.jpg?wh=1950x1223\" alt=\"\"></p><p>当父元素内的子元素要固定显示在父元素的附近某个距离的位置时，就需要用到定位。</p><p>这时父元素要设置为position: relative，表示相对定位，这样就能进一步定位具备相对定位属性的子元素。</p><pre><code class=\"language-css\">position: relative;\nwidth: 400px;\nheight: 200px;\nborder: 3px solid #73AD21;\n</code></pre><p>接下来是子元素的设置，我们结合后面的例子来看下格式。第一行是position: absolute，用来把子元素设置为绝对定位。然后通过top、bottom、left、right这些参数设置，来确定显示在父元素的什么位置。</p><p>比如后面这个例子，子元素定位在距离父元素上面80px，右边距离0px的位置，以此类推。</p><pre><code class=\"language-css\">position: absolute;\ntop: 80px;\nright: 0;\nwidth: 200px;\nheight: 100px;\nborder: 3px solid #73AD21;\n</code></pre><h3>8.悬浮</h3><p>有时我们鼠标经过一个元素，它的样式会发生变化，其实就用到了 :hover选择器。举个例子，我们希望鼠标悬停时，一个div从原先白色的背景色变成黑色，我们就可以按后面的样式代码来设置。</p><pre><code class=\"language-css\">div{\n  width:200px;\n  height:200px;\n  background-color:#fff;\n}\ndiv:hover{\n  background-color:#000;\n}\n</code></pre><h2>Element-UI的应用</h2><p>单单有了CSS还不够，有一些常用组件还需要用到Vue配套的组件库Element-UI。</p><h3>初识Element-UI</h3><p>Element 是一套基于Vue 2.0的桌面端组件库。它由饿了么前端团队开发，并且已经在日常大量的业务中使用和验证过了，具有良好的稳定性和可用性。Element 致力于提供漂亮、可靠的桌面端组件，它实现了完整的设计规范，为用户提供了优质的使用体验。</p><p>Element 采用了模块化的设计理念，非常灵活，可以轻松地集成在项目中。Element 和以vue-cli 为基础的 Webpack 模板深度融合，让 Element 变得更加易于集成和部署，并支持开箱即用的主题定制。这意味着我们可以定制组件库的样式，仅需调整几个变量即可。</p><p>接下来，我们就来学习Element-UI的一些常见组件，为项目首页设计做好准备。</p><h3>1.轮播图组件</h3><p>通常首页的广告展示就需要用到轮播图组件。Element-UI把这个组件叫做<a href=\"https://element.eleme.cn/#/zh-CN/component/carousel\">走马灯</a>。我们打开文档，复制后面的代码就可以直接在你的项目中实现对应的效果。</p><pre><code class=\"language-javascript\">&lt;template&gt;\n  &lt;el-carousel :interval=\"4000\" type=\"card\" height=\"200px\"&gt;\n    &lt;el-carousel-item v-for=\"item in 6\" :key=\"item\"&gt;\n      &lt;h3 class=\"medium\"&gt;{{ item }}&lt;/h3&gt;\n    &lt;/el-carousel-item&gt;\n  &lt;/el-carousel&gt;\n&lt;/template&gt;\n&lt;style&gt;\n  .el-carousel__item h3 {\n    color: #475669;\n    font-size: 14px;\n    opacity: 0.75;\n    line-height: 200px;\n    margin: 0;\n  }\n  \n  .el-carousel__item:nth-child(2n) {\n    background-color: #99a9bf;\n  }\n  \n  .el-carousel__item:nth-child(2n+1) {\n    background-color: #d3dce6;\n  }\n&lt;/style&gt;\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/ba/d2/bab9eaaf2dcef857db89a49cbfafb9d2.jpg?wh=1914x929\" alt=\"\"></p><p>效果就是图里显示的这样，在实际应用中，我们也可以用图片替换文字。</p><h3>2.按钮</h3><p><a href=\"https://element.eleme.cn/#/zh-CN/component/button\">按钮</a>也是网页中非常常见的组件。Element-UI的按钮组件也非常丰富。</p><p><img src=\"https://static001.geekbang.org/resource/image/0c/2a/0c19cb6323ae4dab20b96335c2a9262a.jpg?wh=1776x684\" alt=\"\"></p><p>对于按钮的应用，我们重点需要关注type值，通过type值实现不同样式的按钮，具体代码实现是后面这样。</p><pre><code class=\"language-css\">&lt;el-row&gt;\n  &lt;el-button&gt;默认按钮&lt;/el-button&gt;\n  &lt;el-button type=\"primary\"&gt;主要按钮&lt;/el-button&gt;\n  &lt;el-button type=\"success\"&gt;成功按钮&lt;/el-button&gt;\n  &lt;el-button type=\"info\"&gt;信息按钮&lt;/el-button&gt;\n  &lt;el-button type=\"warning\"&gt;警告按钮&lt;/el-button&gt;\n  &lt;el-button type=\"danger\"&gt;危险按钮&lt;/el-button&gt;\n&lt;/el-row&gt;\n&lt;el-row&gt;\n  &lt;el-button plain&gt;朴素按钮&lt;/el-button&gt;\n  &lt;el-button type=\"primary\" plain&gt;主要按钮&lt;/el-button&gt;\n  &lt;el-button type=\"success\" plain&gt;成功按钮&lt;/el-button&gt;\n  &lt;el-button type=\"info\" plain&gt;信息按钮&lt;/el-button&gt;\n  &lt;el-button type=\"warning\" plain&gt;警告按钮&lt;/el-button&gt;\n  &lt;el-button type=\"danger\" plain&gt;危险按钮&lt;/el-button&gt;\n&lt;/el-row&gt;\n&lt;el-row&gt;\n  &lt;el-button round&gt;圆角按钮&lt;/el-button&gt;\n  &lt;el-button type=\"primary\" round&gt;主要按钮&lt;/el-button&gt;\n  &lt;el-button type=\"success\" round&gt;成功按钮&lt;/el-button&gt;\n  &lt;el-button type=\"info\" round&gt;信息按钮&lt;/el-button&gt;\n  &lt;el-button type=\"warning\" round&gt;警告按钮&lt;/el-button&gt;\n  &lt;el-button type=\"danger\" round&gt;危险按钮&lt;/el-button&gt;\n&lt;/el-row&gt;\n&lt;el-row&gt;\n  &lt;el-button icon=\"el-icon-search\" circle&gt;&lt;/el-button&gt;\n  &lt;el-button type=\"primary\" icon=\"el-icon-edit\" circle&gt;&lt;/el-button&gt;\n  &lt;el-button type=\"success\" icon=\"el-icon-check\" circle&gt;&lt;/el-button&gt;\n  &lt;el-button type=\"info\" icon=\"el-icon-message\" circle&gt;&lt;/el-button&gt;\n  &lt;el-button type=\"warning\" icon=\"el-icon-star-off\" circle&gt;&lt;/el-button&gt;\n  &lt;el-button type=\"danger\" icon=\"el-icon-delete\" circle&gt;&lt;/el-button&gt;\n&lt;/el-row&gt;\n</code></pre><h3>3.弹窗</h3><p>如果我们希望给用户提供一些可选择的提示信息，就要用到<a href=\"https://element.eleme.cn/#/zh-CN/component/message-box\">弹窗</a>。比如要关闭页面时经常会弹出“确定要离开吗？”的弹窗。</p><p><img src=\"https://static001.geekbang.org/resource/image/ca/86/ca12dd51f3d4b84d4b0ce6a461737186.jpg?wh=1704x929\" alt=\"\"></p><pre><code class=\"language-javascript\">&lt;template&gt;\n  &lt;el-button type=\"text\" @click=\"open\"&gt;点击打开 Message Box&lt;/el-button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    methods: {\n      open() {\n        this.$alert('这是一段内容', '标题名称', {\n          confirmButtonText: '确定',\n          callback: action =&gt; {\n            this.$message({\n              type: 'info',\n              message: `action: ${ action }`\n            });\n          }\n        });\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre><p>还有很多其他组件，都是一样的道理，你可以打开Element-UI<a href=\"https://element.eleme.cn/#/zh-CN\">官网</a>来查看这些组件，复制官网上的组件案例即可使用。</p><h2>首页的实现</h2><p>接下来终于到了实战演练的环节——使用CSS和Element-UI来实现我们视频平台的首页。</p><p>先来整体看一下在线视频社区平台的首页，看看怎么拆分任务。</p><p><img src=\"https://static001.geekbang.org/resource/image/11/98/1165e4b4615417a3bb24939d6f22ac98.jpg?wh=2962x1127\" alt=\"\"><br>\n<img src=\"https://static001.geekbang.org/resource/image/aa/05/aa30bcd624e56b2b763ed844bf9f5a05.jpg?wh=2900x850\" alt=\"\"><br>\n<img src=\"https://static001.geekbang.org/resource/image/1b/0b/1b1754b98995fc7018a2c7e776840d0b.jpg?wh=2865x1113\" alt=\"\"><img src=\"https://static001.geekbang.org/resource/image/d5/fc/d5c8d2149ba981d2f624ab09c4e425fc.jpg?wh=2900x1361\" alt=\"\"></p><p>可以看到，在首页里，除了每个页面都有的Header和Footer外，还有轮播图、特别推荐、热点、排行榜、广告、游戏、热门推荐等模块。</p><p>我们从上往下，把它们分成4个分区。</p><ul>\n<li>一层是轮播图，负责展示要推荐给用户的广告。</li>\n<li>二层是特别推荐，用来展示要给用户推送的视频。</li>\n<li>三层是热点和排行榜，用来展示实时热点视频和热门新闻。</li>\n<li>四层是游戏和热门推荐，用来推广一些游戏。</li>\n</ul><p>接下来我们按照从上到下的顺序，一层一层来实现它们。</p><p>首页的第一层是轮播图，负责滚动展示广告。我们结合代码，一起看一下轮播图是怎么实现的。</p><pre><code class=\"language-javascript\">&lt;!-- 轮播图 --&gt;\n &lt;div class=\"banner\"&gt;\n    &lt;el-carousel :interval=\"4000\" type=\"card\" height=\"200px\"&gt;\n       &lt;el-carousel-item v-for=\"(item, index) in bannerList\" :key=\"index\"&gt;\n          &lt;img :src=\"item\" alt /&gt;\n       &lt;/el-carousel-item&gt;\n    &lt;/el-carousel&gt;\n &lt;/div&gt;\n</code></pre><p>是不是熟悉的味道？刚刚讲过Element-UI的轮播图，在这里就派上了用场。只不过中间替换成了图片。我们事先用数组bannerList在data里定义好图片的地址，就会呈现前面截图的效果了。</p><pre><code class=\"language-css\"> bannerList: [\n        \"./static/banner1.png\",\n        \"./static/banner2.png\",\n        \"./static/banner3.png\",\n        \"./static/banner4.png\",\n      ],\n</code></pre><p>接着再来看第二层——特别推荐。</p><p>我们看一下这个模块核心代码，它是左右结构的，左边是一个主要推荐的视频，右边有6个小一些的推荐视频，所以左边是一个div，右边是一个ul无序列表，每个列表项作为一个小的推荐视频。</p><pre><code class=\"language-css\">&lt;div class=\"video-cover lf\" @click=\"goDetail(main_recommend)\"&gt;\n    &lt;img :src=\"main_recommend.img\" alt /&gt;\n    &lt;p class=\"video-name\"&gt;{{ main_recommend.name }}&lt;/p&gt;\n    &lt;div class=\"video-icon\"&gt;\n        &lt;i class=\"icon-play\"&gt;&lt;/i&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;ul class=\"rt\"&gt;\n    &lt;li v-for=\"(item, index) in main_recommend.list\" :key=\"index\"&gt;\n         &lt;img :src=\"item.img\" alt @click=\"goDetail(item)\" /&gt;\n         &lt;div class=\"video-name\" @click=\"goDetail(item)\"&gt;\n             &lt;p&gt;{{ item.name }}&lt;/p&gt;\n              &lt;p&gt;\n                 &lt;i class=\"el-icon-upload\"&gt;&lt;/i&gt;\n                 &lt;span class=\"video-author\"&gt;{{ item.author.name }}&lt;/span&gt;\n                 &lt;i class=\"icon-play rt\"&gt;&lt;/i&gt;\n              &lt;/p&gt;\n              &lt;p&gt;{{ item.play_times }}次播放&lt;/p&gt;\n          &lt;/div&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>数据定义是后面这样，整体的数据命名为main_recommend，左边的大图直接定义在main_recommend上，右边的6个小图用一个数组，定义在list里。</p><pre><code class=\"language-css\">main_recommend: {\n   img: \"./static/main.jpeg\",\n   name: \"三号种子资格赛：SN vs LGD！\",\n   list: [\n          {\n            img: \"./static/5.jpg\",\n            name: \"《明日方舟》EP - ALIVE\",\n            author: {\n              id: \"111\",\n              name: \"明日方舟\",\n            },\n            play_times: 1000,\n          },\n        //....同样的结构一共6个\n        ]\n }\n</code></pre><p>再看CSS代码。div和ul都是块级元素，想要让它们在一行内，就要用到刚才我们学到的display:inline-block，把它们变成行内块元素。</p><p>为了让视频的名字显示在每个视频图片的最下方，就要用到定位，整个区块设置成相对定位，CSS类video-cover 是 position:relative，视频的名字使用绝对定位，类video-name是position:absolute。</p><pre><code class=\"language-css\">    .video-cover {\n      width: 520px;\n      height: 248px;\n      display: inline-block;\n      margin-right: 10px;\n      position: relative;\n      overflow: hidden;\n      border-radius: 2px;\n      cursor: pointer;\n    }\n    .video-name {\n      width: 100%;\n      font-size: 14px;\n      position: absolute;\n      bottom: 0;\n    }\n    ul {\n      width: 650px;\n      display: inline-block;\n    } \n    li {\n      display: inline-block;\n      width: 210px;\n      height: 120px;\n      margin-right: 10px;\n      margin-bottom: 5px;\n      border-radius: 2px;\n      cursor: pointer;\n    }\n</code></pre><p>接下来我们看一下第三层——热点和排行榜。它们分别是一个ul，放在一排。左边是热点的ul，右边是排行榜的ul。这时，它们的位置关系我们该用什么方法来实现呢？</p><p>聪明的你是不是想到了display:inline-block，其实具体的实现逻辑和前面是相同的，你可以课后自己尝试去做一下布局。</p><p>下面是视频相关的信息的代码实现。</p><pre><code class=\"language-xml\">&lt;ul class=\"hot-video\"&gt;\n    &lt;li v-for=\"(item, index) in f3_list\" :key=\"index\"&gt;\n       &lt;div&gt;\n           &lt;div class=\"video-cover\"&gt;\n              &lt;img :src=\"item.img\" alt @click=\"goDetail(item)\" /&gt;\n               &lt;div class=\"video-icon\"&gt;\n                  &lt;i class=\"icon-play\"&gt;&lt;/i&gt;\n               &lt;/div&gt;\n               &lt;div class=\"video-info\"&gt;\n                  &lt;i class=\"icon-play2\"&gt;&lt;/i&gt;\n                   &lt;span&gt;{{ item.play_times }}&lt;/span&gt;\n                   &lt;i class=\"icon-good\"&gt;&lt;/i&gt;\n                   &lt;span&gt;{{ item.good }}&lt;/span&gt;\n                   &lt;span&gt;{{ item.duration | format_duration }}&lt;/span&gt;\n                &lt;/div&gt;\n             &lt;/div&gt;\n             &lt;p class=\"video-name\" @click=\"goDetail(item)\"&gt;\n                  {{ item.name }}\n             &lt;/p&gt;\n             &lt;p class=\"video-author\" @click=\"goHome(item.author.id)\"&gt;\n                  &lt;i class=\"el-icon-upload\"&gt;&lt;/i&gt;\n                  {{ item.author.name }}\n              &lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=\"ranking-list\"&gt;\n   &lt;li v-for=\"(item, index) in f3_ranking\" :key=\"index\" @click=\"goDetail(item)\"&gt;\n        &lt;p&gt;\n            &lt;span :class=\"'rank-index ' + (index &lt;= 2 ? 'active' : '')\"&gt;{{\n                  index + 1\n             }}&lt;/span&gt;\n            &lt;span&gt;{{ item.title }}&lt;/span&gt;\n         &lt;/p&gt;\n   &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>接下来我们需要模拟一组数据，实现视频列表页面内容的展示，代码是后面这样。</p><pre><code class=\"language-xml\">f3_list：[\n    {\n        img: \"./static/5.jpg\",\n        name: \"乌克兰体操公主的拳击训练，吃我这一小拳拳！\",\n        author: { id: 111, name: \"Barry\" },\n        play_times: 1000,\n        good: 200,\n        duration: 1000\n    }\n    //......一样的结构*8个\n],\nf3_ranking：[\n   {title:\"凡人修仙传骗投资？糊弄观众？导演抵押房子卑微解释！难道一定要毁了它吗？\"}，\n   //......一样的结构*8个\n]\n</code></pre><p>我们关注一下这一层CSS样式的关键点，和上一层类似，因为是左右列表布局的展示方式，所以这里我们依然要用到display:inline-block。</p><pre><code class=\"language-xml\">display:inline-block\n</code></pre><p>通过上面的代码，就能让它们在同一行内展示。每个视频整个区块是相对定位 position:relative，视频的名字设置成绝对定位 position:absolute。</p><p>这里我们希望用户鼠标悬停的时候，鼠标变成小手，并出现播放的图标。</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/39/3d7370146095635ce970aed415868639.jpg?wh=2900x795\" alt=\"\"></p><p>那么播放的图标就需要先设置为display:none，在鼠标悬浮在封面上时改成display:block，代码如下。</p><pre><code class=\"language-css\">.video-cover {\n   position: relative;\n   color: #fff;\n   //鼠标变成小手\n   cursor: pointer;\n}\n.video-icon {\n     position: absolute;\n     right: 20px;\n     bottom: 30px;\n     background: rgba(0, 0, 0, 0.7);\n     padding: 10px;\n     //先隐藏播放的图标\n     display: none;\n     border-radius: 2px;\n}\n//悬浮在视频封面时，显示播放的图标\n.video-cover:hover {\n    .video-icon {\n       display: block;\n     }\n}\n</code></pre><p>第四层和第三层结构比较类似，你可以课后尝试参照第三层的思路，自己尝试实现第四层。</p><h2>总结</h2><p>不知不觉又到了课程的尾声，我们来总结一下这节课学习的内容。</p><p>首页是一个平台的“门面”，需要彰显这个平台的特色。我们结合百度和京东的首页案例，确定了首页设计的核心原则——<strong>首页需要按功能分区，核心位置的要突出展示核心功能，按重要程度依次往下排布。</strong></p><p>想要搭建首页，就离不开CSS，我们在原来学习的基础上，又学习了一些常见的新属性。课后你可以练习一下，把CSS属性结合HTML起来，重点练习<strong>元素布局和定位的实现</strong>。首页设计还会用到Element-UI里的几个常见组件，如果你对这部分还不熟练，课后建议你去看看官方文档。</p><p>这节课我们把CSS和Element-UI应用在了项目中，一起实现了视频平台的首页。掌握了这节课的内容，你就具备了开发网页的能力，课后你也可以仿照着其他网站，尝试自己用Vue+element-UI+CSS去实现一个网页。</p><h2>课后思考题</h2><p>尝试用Element-UI来实现一个tab可以切换的标签页，效果是点击不同的标签能够显示不同的内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/f5/acc493183d34f96a7f6742e2aa4738f5.jpg?wh=2900x648\" alt=\"\"></p><p>期待你在留言区和我交流互动，也推荐你把这节课分享给身边更多朋友，和他一起学习进步。</p>","comments":[{"had_liked":false,"id":377363,"user_name":"radeon","can_delete":false,"product_type":"c1","uid":2662674,"ip_address":"中国香港","ucode":"46EFE3D5ABB8E8","user_header":"https://static001.geekbang.org/account/avatar/00/28/a1/12/24024e2b.jpg","comment_is_top":false,"comment_ctime":1688383164,"is_pvip":false,"replies":[{"id":137551,"content":"为你点赞，太棒了，大家可以参考学习，在学习的过程中我们重点关注使用不同语言实现具体的功能需求。鼓励大家在掌握基础应用方法之后，能够不断衍生，我们一起加油！！！","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1688549118,"ip_address":"北京","comment_id":377363,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"根据老师的vue2代码主体逻辑，我使用vue3+ts搭建了项目，对于项目文件结构不清晰或者想用vue3的朋友们可以看过来，现在已完成首页静态页面部分，代码已发布在github以及gitee，并使用MIT协议开源，欢迎大家前来指点或者在此基础上继续开发或改进！\ngithub: https:&#47;&#47;github.com&#47;0x3147&#47;just-see-it \ngitee: https:&#47;&#47;gitee.com&#47;kang-jiaxing&#47;just-see-it","like_count":2,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622688,"discussion_content":"为你点赞，太棒了，大家可以参考学习，在学习的过程中我们重点关注使用不同语言实现具体的功能需求。鼓励大家在掌握基础应用方法之后，能够不断衍生，我们一起加油！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688549118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376584,"user_name":"浩仔是程序员","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"广东","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1687006967,"is_pvip":false,"replies":[{"id":137324,"content":"这一部分可以先注释掉，它在v-else指令当中，主要用于在请求没获取数据的情况下占位展示的，不影响整体的页面的实现。非必需应用。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687242619,"ip_address":"北京","comment_id":376584,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"sudo npm install --save vue-content-loader\nPassword:\nnpm ERR! code ERESOLVE\nnpm ERR! ERESOLVE unable to resolve dependency tree\nnpm ERR! \nnpm ERR! While resolving: vue-test-1@1.0.0\nnpm ERR! Found: vue@2.7.14\nnpm ERR! node_modules&#47;vue\nnpm ERR!   vue@&quot;^2.5.2&quot; from the root project\nnpm ERR! \nnpm ERR! Could not resolve dependency:\nnpm ERR! peer vue@&quot;^3&quot; from vue-content-loader@2.0.1\nnpm ERR! node_modules&#47;vue-content-loader\nnpm ERR!   vue-content-loader@&quot;*&quot; from the root project\nnpm ERR! \nnpm ERR! Fix the upstream dependency conflict, or retry\nnpm ERR! this command with --force, or --legacy-peer-deps\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\nnpm ERR! \nnpm ERR! See &#47;Users&#47;kindyli&#47;.npm&#47;eresolve-report.txt for a full report.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     &#47;Users&#47;kindyli&#47;.npm&#47;_logs&#47;2023-06-17T12_56_24_738Z-debug-0.log","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621454,"discussion_content":"这一部分可以先注释掉，它在v-else指令当中，主要用于在请求没获取数据的情况下占位展示的，不影响整体的页面的实现。非必需应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687242619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376578,"user_name":"浩仔是程序员","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"广东","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1686996309,"is_pvip":false,"replies":[{"id":137322,"content":"这个不需要在哪里定义，你看看你对应的文件目录下是否有这个图标啊？就是这个路径下的文件是否存在src&#47;assets&#47;image&#47;Index&#47;icon_fire.png。文件存在就没问题。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687241056,"ip_address":"北京","comment_id":376578,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师，求助\nModule build failed: \n\n    .icon-fire {\n        .icon(&quot;&#47;Users&#47;kindyli&#47;zz&#47;vue-test-1&#47;src&#47;assets&#47;image&#47;Index&#47;icon_fire.png&quot;);\n      ^\n.icon is undefined\n\n这个.icon是需要在哪里定义的","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621452,"discussion_content":"这个不需要在哪里定义，你看看你对应的文件目录下是否有这个图标啊？就是这个路径下的文件是否存在src/assets/image/Index/icon_fire.png。文件存在就没问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687241056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1104601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","nickname":"浩仔是程序员","note":"","ucode":"A7E5CF9E1571A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":621606,"discussion_content":"我试过绝对路径和相对路径都不行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687340323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":621452,"ip_address":"广东","group_id":0},"score":621606,"extra":""}]},{"author":{"id":3231352,"avatar":"https://static001.geekbang.org/account/avatar/00/31/4e/78/ee4e12cc.jpg","nickname":"Lum","note":"","ucode":"7EF828425E685A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632954,"discussion_content":"我也遇到这个问题了,起不起来啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1701676203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3736856,"avatar":"https://static001.geekbang.org/account/avatar/00/39/05/18/df6fdcbc.jpg","nickname":"小草牧","note":"","ucode":"1CE45E1012988C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630254,"discussion_content":"求助浩哥最后怎么解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698219031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376574,"user_name":"浩仔是程序员","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"广东","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1686988867,"is_pvip":false,"replies":[{"id":137321,"content":"这个是这样的，这个是一个用于展位组件，它不是单独我们开发出来的页面，你可以看下面的导入import { BulletListLoader } from &quot;vue-content-loader&quot;;所以你可以直接把它删除掉这个没有关系的，不需要单独开发，我把具体的实现代码都会提交。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687240867,"ip_address":"北京","comment_id":376574,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师上传的代码好像只有对应的文件，没有完整的项目结构，会缺少部分文件依赖，比如这节这个组件BulletListLoader","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621450,"discussion_content":"这个是这样的，这个是一个用于展位组件，它不是单独我们开发出来的页面，你可以看下面的导入import { BulletListLoader } from &#34;vue-content-loader&#34;;所以你可以直接把它删除掉这个没有关系的，不需要单独开发，我把具体的实现代码都会提交。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687240868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","nickname":"浩仔是程序员","note":"","ucode":"A7E5CF9E1571A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621263,"discussion_content":"这个可以安装npm install --save vue-content-loader@0.2 \n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687008544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376573,"user_name":"浩仔是程序员","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"广东","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1686988483,"is_pvip":false,"replies":[{"id":137320,"content":"是这样的，参数传递你可以直接在函数中传递就可以，参数命名方法和传递参数个数你根据方法的需求设置就好。点击函数一样的道理，你可以从git上看09这节课的全部代码，在methods中有godetail方法，它接受一个参数item，这个item就是main_recommend，你可以自己尝试的用console.log(item)在方法里面打印一下，你就明白了。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687240695,"ip_address":"北京","comment_id":376573,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师，你好，点击事件 goDetail(main_recommend) 这个main_recommend这个参数是如何传递的，或者说，一个点击事件，处理点击函数可以传递哪些参数","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621449,"discussion_content":"是这样的，参数传递你可以直接在函数中传递就可以，参数命名方法和传递参数个数你根据方法的需求设置就好。点击函数一样的道理，你可以从git上看09这节课的全部代码，在methods中有godetail方法，它接受一个参数item，这个item就是main_recommend，你可以自己尝试的用console.log(item)在方法里面打印一下，你就明白了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687240695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376442,"user_name":"Geek_d671c1","can_delete":false,"product_type":"c1","uid":3648654,"ip_address":"浙江","ucode":"71F3993E34893F","user_header":"","comment_is_top":false,"comment_ctime":1686817700,"is_pvip":false,"replies":[{"id":137310,"content":"这是一个组件，它可动态加载内容列表。解决办法呢就是你需要安装&#39;vue-content-loader&#39;模块。如果没有安装，可以通过以下命令进行安装：npm install vue-content-loader。当然，这个是非必须的，你会发现源码中写的是V-else,正常情况我们不会执行这一步，你可以先注释掉，也就是import { BulletListLoader } from &quot;vue-content-loader&quot;;这一行，以及与BulletListLoader相关的注销掉，你先把项目运行起来。如果还有问题可以追评。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687168530,"ip_address":"北京","comment_id":376442,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"index文件报错：Cannot find module &#39;vue-content-loader&#39; or its corresponding type declarations.ts(2307)\n\n你好，请问这个问题如何解决？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621384,"discussion_content":"这是一个组件，它可动态加载内容列表。解决办法呢就是你需要安装&#39;vue-content-loader&#39;模块。如果没有安装，可以通过以下命令进行安装：npm install vue-content-loader。当然，这个是非必须的，你会发现源码中写的是V-else,正常情况我们不会执行这一步，你可以先注释掉，也就是import { BulletListLoader } from &#34;vue-content-loader&#34;;这一行，以及与BulletListLoader相关的注销掉，你先把项目运行起来。如果还有问题可以追评。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687168530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","nickname":"浩仔是程序员","note":"","ucode":"A7E5CF9E1571A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621264,"discussion_content":"npm install --save vue-content-loader@0.2 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687008553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376361,"user_name":"ZENG","can_delete":false,"product_type":"c1","uid":1136797,"ip_address":"广东","ucode":"4F9A006DA78074","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/9d/91d795cf.jpg","comment_is_top":false,"comment_ctime":1686734393,"is_pvip":false,"replies":[{"id":137301,"content":"是这样，当你没有使用 @click.native 时，Vue.js 会将事件绑定到组件实例上的一个方法上，然后当事件触发时，会调用这个方法。这种方式允许你在组件中定义一些自定义逻辑，例如在点击事件触发时执行一些特定的操作。\n当你使用 @click.native 时，Vue.js 会将事件直接绑定到组件所在的 DOM 元素上，当该元素被点击时，会直接触发原生 DOM 事件，而不会调用组件实例上的方法。这种方式通常用于在组件中需要绑定一些原生的 DOM 事件。\n\n这个和$emit方法不同的，不是用于子父组件中的，$emit是子父组件之间调用方法使用的。这是正解，如果有不理解的可以追问。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687166304,"ip_address":"北京","comment_id":376361,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师，请问一下在 MyHeader 组件中使用 ElementUI 下拉菜单，其中每个 item 都有加上 @click.native，这个和原来不加上 native 有什么区别呢？我搜索了一下我的理解是父组件引入的子组件，如果直接使用@click事件是不会有作用的，使用@click.native就可以触发事件，是不是相当代替$emit的作用呢","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621364,"discussion_content":"是这样，当你没有使用 @click.native 时，Vue.js 会将事件绑定到组件实例上的一个方法上，然后当事件触发时，会调用这个方法。这种方式允许你在组件中定义一些自定义逻辑，例如在点击事件触发时执行一些特定的操作。\n当你使用 @click.native 时，Vue.js 会将事件直接绑定到组件所在的 DOM 元素上，当该元素被点击时，会直接触发原生 DOM 事件，而不会调用组件实例上的方法。这种方式通常用于在组件中需要绑定一些原生的 DOM 事件。\n\n这个和$emit方法不同的，不是用于子父组件中的，$emit是子父组件之间调用方法使用的。这是正解，如果有不理解的可以追问。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1687166304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1136797,"avatar":"https://static001.geekbang.org/account/avatar/00/11/58/9d/91d795cf.jpg","nickname":"ZENG","note":"","ucode":"4F9A006DA78074","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621430,"discussion_content":"明白意思了，谢谢老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687226143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376348,"user_name":"Geek_d671c1","can_delete":false,"product_type":"c1","uid":3648654,"ip_address":"浙江","ucode":"71F3993E34893F","user_header":"","comment_is_top":false,"comment_ctime":1686727306,"is_pvip":false,"replies":[{"id":137300,"content":"会按照课时区分，只是有一些单个案例实操的，直接在我们课程中就有了，并且最终会把前后端源码全部上传。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687164465,"ip_address":"北京","comment_id":376348,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"你好，有整个项目的源码吗，不按照课时区分？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621359,"discussion_content":"会按照课时区分，只是有一些单个案例实操的，直接在我们课程中就有了，并且最终会把前后端源码全部上传。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687164465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375148,"user_name":"Geek_840593","can_delete":false,"product_type":"c1","uid":3605821,"ip_address":"重庆","ucode":"F92256CD230166","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","comment_is_top":false,"comment_ctime":1684982063,"is_pvip":false,"replies":[{"id":136902,"content":"这个是直接有的，已经上传git，你可以查看这个地址，这个就是我们项目的结构，你可以查看，如果有疑惑的地方可以持续给我留言，https:&#47;&#47;gitee.com&#47;Barry_Python_web&#47;python_web_code.git","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1684993288,"ip_address":"北京","comment_id":375148,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师能放一下前端部分的项目结构吗？初学者有点懵","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619331,"discussion_content":"这个是直接有的，已经上传git，你可以查看这个地址，这个就是我们项目的结构，你可以查看，如果有疑惑的地方可以持续给我留言，https://gitee.com/Barry_Python_web/python_web_code.git","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684993288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374833,"user_name":"Geek_840593","can_delete":false,"product_type":"c1","uid":3605821,"ip_address":"重庆","ucode":"F92256CD230166","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","comment_is_top":false,"comment_ctime":1684474111,"is_pvip":false,"replies":[{"id":136768,"content":"你的这个问题有点模糊，我先给解释一下原因，如果你还有疑问再和我互动。在 JSX 中，表达式必须具有一个父元素，这是 React 的规则。如果你想在 JSX 中使用表达式，并且内部渲染 HTML 元素，这时候必须确保这个元素有一个父元素，否则它就是一个普通的 JSX 元素，而不是一个表达式。想要实现 JSX 表达式具有一个父元素，你可以在 JSX 表达式中使用 ParentElement 函数来包装它，下面我给你写一个代码案例你可以参考：const test = ParentElement(&#39;&lt;div&gt;Hello, test!&lt;&#47;div&gt;&#39;);\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1684510462,"ip_address":"北京","comment_id":374833,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"JSX 表达式必须具有一个父元素?请问这个怎么处理？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618760,"discussion_content":"你的这个问题有点模糊，我先给解释一下原因，如果你还有疑问再和我互动。在 JSX 中，表达式必须具有一个父元素，这是 React 的规则。如果你想在 JSX 中使用表达式，并且内部渲染 HTML 元素，这时候必须确保这个元素有一个父元素，否则它就是一个普通的 JSX 元素，而不是一个表达式。想要实现 JSX 表达式具有一个父元素，你可以在 JSX 表达式中使用 ParentElement 函数来包装它，下面我给你写一个代码案例你可以参考：const test = ParentElement(&#39;&lt;div&gt;Hello, test!&lt;/div&gt;&#39;);\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684510462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376585,"user_name":"浩仔是程序员","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"广东","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1687007794,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100546501,"comment_content":" For Vue 2 &amp; Nuxt 2, use vue-content-loader@^0.2 instead.","like_count":0}]}