{"id":199651,"title":"02 | 协议：怎么设计可扩展且向后兼容的协议？","content":"<p>你好，我是何小锋。上一讲我分享了RPC原理，其核心是让我们像调用本地一样调用远程，帮助我们的应用层屏蔽远程调用的复杂性，使得我们可以更加方便地构建分布式系统。总结起来，其实就一个关键字：透明化。</p><p>接着上一讲的内容，我们再来聊聊RPC协议。</p><p>一提到协议，你最先想到的可能是  TCP协议、UDP协议等等，这些网络传输协议的实现在我看来有点晦涩难懂。虽然在RPC中我们也会用到这些协议，但这些协议更多的是对我们上层应用是透明的，我们RPC在使用过程中并不太需要关注他们的细节。那我今天要讲的RPC协议到底是什么呢？</p><p>可能我举个例子，你立马就明白了。HTTP协议是不是很熟悉（本讲里面所说的HTTP默认都是1.X）？ 这应该是我们日常工作中用得最频繁的协议了，每天打开浏览器浏览的网页就是使用的HTTP协议。那HTTP协议跟RPC协议又有什么关系呢？看起来他俩好像不搭边，但他们有一个共性就是都属于应用层协议。</p><p>所以<strong>我们今天要讲的RPC协议就是围绕应用层协议展开的。</strong>我们可以先了解下HTTP协议，我们先看看它的协议格式是什么样子的。回想一下我们在浏览器里面输入一个URL会发生什么？抛开DNS解析暂且不谈，浏览器收到命令后会封装一个请求，并把请求发送到DNS解析出来的IP上，通过抓包工具我们可以抓到请求的数据包，如下图所示：</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/5c/99/5ca698cbdc61b8e8b090773406b3ab99.jpg?wh=3358*944\" alt=\"\"></p><h2>协议的作用</h2><p>看完HTTP协议之后，你可能会有一个疑问，我们为什么需要协议这个东西呢？没有协议就不能通信吗？</p><p>我们知道只有二进制才能在网络中传输，所以RPC请求在发送到网络中之前，他需要把方法调用的请求参数转成二进制；转成二进制后，写入本地Socket中，然后被网卡发送到网络设备中。</p><p>但在传输过程中，RPC并不会把请求参数的所有二进制数据整体一下子发送到对端机器上，中间可能会拆分成好几个数据包，也可能会合并其他请求的数据包（合并的前提是同一个TCP连接上的数据），至于怎么拆分合并，这其中的细节会涉及到系统参数配置和TCP窗口大小。对于服务提供方应用来说，他会从TCP通道里面收到很多的二进制数据，那这时候怎么识别出哪些二进制是第一个请求的呢？</p><p>这就好比让你读一篇没有标点符号的文章，你要怎么识别出每一句话到哪里结束呢？很简单啊，我们加上标点，完成断句就好了。</p><p>同理在RPC传输数据的时候，为了能准确地“断句”，我们也必须在应用发送请求的数据包里面加入“句号”，这样才能帮我们的接收方应用从数据流里面分割出正确的数据。这个数据包里面的句号就是消息的边界，用于标示请求数据的结束位置。举个具体例子，调用方发送  AB、CD、EF 3 个消息，如果没有边界的话，接收端就可能收到ABCDEF或者ABC、DEF 这样的消息，这就会导致接收的语义跟发送的时候不一致了。</p><p>所以呢，为了避免语义不一致的事情发生，我们就需要在发送请求的时候设定一个边界，然后在收到请求的时候按照这个设定的边界进行数据分割。这个边界语义的表达，就是我们所说的协议。</p><h2>如何设计协议？</h2><p>理解了协议的作用，我们再来看看在RPC里面是怎么设计协议的。可能你会问：“前面你不是说了HTTP协议跟RPC都属于应用层协议，那有了现成的HTTP协议，为啥不直接用，还要为RPC设计私有协议呢？”</p><p>这还要从RPC的作用说起，相对于HTTP的用处，RPC更多的是负责应用间的通信，所以性能要求相对更高。但HTTP协议的数据包大小相对请求数据本身要大很多，又需要加入很多无用的内容，比如换行符号、回车符等；还有一个更重要的原因是，HTTP协议属于无状态协议，客户端无法对请求和响应进行关联，每次请求都需要重新建立连接，响应完成后再关闭连接。因此，对于要求高性能的RPC来说，HTTP协议基本很难满足需求，所以RPC会选择设计更紧凑的私有协议。</p><p><strong>那怎么设计一个私有RPC协议呢？ </strong></p><p>在设计协议前，我们先梳理下要完成RPC通信的时候，在协议里面需要放哪些内容。</p><p>首先要想到的就是我们前面说的消息边界了，但RPC每次发请求发的大小都是不固定的，所以我们的协议必须能让接收方正确地读出不定长的内容。我们可以先固定一个长度（比如4个字节）用来保存整个请求数据大小，这样收到数据的时候，我们先读取固定长度的位置里面的值，值的大小就代表协议体的长度，接着再根据值的大小来读取协议体的数据，整个协议可以设计成这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/de/67/debcb69ad381d9d86d13dcc7c72b0967.jpg?wh=4556*489\" alt=\"\" title=\"不定长协议\"></p><p>但上面这种协议，只实现了正确的断句效果，在RPC里面还行不通。因为对于服务提供方来说，他是不知道这个协议体里面的二进制数据是通过哪种序列化方式生成的。如果不能知道调用方用的序列化方式，即使服务提供方还原出了正确的语义，也并不能把二进制还原成对象，那服务提供方收到这个数据后也就不能完成调用了。因此我们需要把序列化方式单独拿出来，类似协议长度一样用固定的长度存放，这些需要固定长度存放的参数我们可以统称为“协议头”，这样整个协议就会拆分成两部分：协议头和协议体。</p><p>在协议头里面，我们除了会放协议长度、序列化方式，还会放一些像协议标示、消息ID、消息类型这样的参数，而协议体一般只放请求接口方法、请求的业务参数值和一些扩展属性。这样一个完整的RPC协议大概就出来了，协议头是由一堆固定的长度参数组成，而协议体是根据请求接口和参数构造的，长度属于可变的，具体协议如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/2b/ac5f5236d972608fdb24c6eefce7e82b.jpg?wh=4566*1054\" alt=\"\" title=\"定长协议\"></p><h2>可扩展的协议</h2><p>刚才讲的协议属于定长协议头，那也就是说往后就不能再往协议头里加新参数了，如果加参数就会导致线上兼容问题。举个具体例子，假设你设计了一个88Bit的协议头，其中协议长度占用32bit，然后你为了加入新功能，在协议头里面加了2bit，并且放到协议头的最后。升级后的应用，会用新的协议发出请求，然而没有升级的应用收到的请求后，还是按照88bit读取协议头，新加的2个bit会当作协议体前2个bit数据读出来，但原本的协议体最后2个bit会被丢弃了，这样就会导致协议体的数据是错的。</p><p>可能你会想：“那我把参数加在不定长的协议体里面行不行？而且刚才你也说了，协议体里面会放一些扩展属性。”</p><p>没错，协议体里面是可以加新的参数，但这里有一个关键点，就是协议体里面的内容都是经过序列化出来的，也就是说你要获取到你参数的值，就必须把整个协议体里面的数据经过反序列化出来。但在某些场景下，这样做的代价有点高啊！</p><p>比如说，服务提供方收到一个过期请求，这个过期是说服务提供方收到的这个请求的时间大于调用方发送的时间和配置的超时时间，既然已经过期，就没有必要接着处理，直接返回一个超时就好了。那要实现这个功能，就要在协议里面传递这个配置的超时时间，那如果之前协议里面没有加超时时间参数的话，我们现在把这个超时时间加到协议体里面是不是就有点重了呢？显然，会加重CPU的消耗。</p><p>所以为了保证能平滑地升级改造前后的协议，我们有必要设计一种支持可扩展的协议。其关键在于让协议头支持可扩展，扩展后协议头的长度就不能定长了。那要实现读取不定长的协议头里面的内容，在这之前肯定需要一个固定的地方读取长度，所以我们需要一个固定的写入协议头的长度。整体协议就变成了三部分内容：固定部分、协议头内容、协议体内容，前两部分我们还是可以统称为“协议头”，具体协议如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/72/2a202f980458baca9fc50c53275c6772.jpg?wh=4623*1569\" alt=\"\" title=\"可扩展协议\"></p><p>最后，我想说，<strong>设计一个简单的RPC协议并不难，难的就是怎么去设计一个可“升级”的协议。</strong>不仅要让我们在扩展新特性的时候能做到向下兼容，而且要尽可能地减少资源损耗，所以我们协议的结构不仅要支持协议体的扩展，还要做到协议头也能扩展。上述这种设计方法来源于我多年的线上经验，可以说做好扩展性是至关重要的，期待这个协议模版能帮你避掉一些坑。</p><h2>总结</h2><p>我们人类区别于其他动物的一个很大原因，就是我们能够通过语言去沟通，用文字去沉淀文明，从而让我们能站在巨人的肩膀上成长，但为了保证我们记录的文字能够被其他人理解，我们必须通过符号去实现断句，否则就可能导致文字的意义被曲解，甚至闹出笑话。</p><p>在RPC里面，协议的作用就类似于文字中的符号，作为应用拆解请求消息的边界，保证二进制数据经过网络传输后，还能被正确地还原语义，避免调用方跟被调用方之间的“鸡同鸭讲”。</p><p>但我们在设计协议的时候，也不能只单纯考虑满足目前功能，还应该从更高的层次出发。就好比我们设计系统架构一样，我们需要保证设计出来的系统能够能很好地扩展，支持新增功能。</p><h2>课后思考</h2><p>好了，今天的内容就到这里，最后留一道思考题。今天我们讨论过RPC不直接用HTTP协议的一个原因是无法实现请求跟响应关联，每次请求都需要重新建立连接，响应完成后再关闭连接，所以我们要设计私有协议。那么在RPC里面，我们是怎么实现请求跟响应关联的呢？</p><p>欢迎留言和我分享你的思考，也欢迎你把文章分享给你的朋友，邀请他加入学习。我们下节课再见！</p>","neighbors":{"left":{"article_title":"01 | 核心原理：能否画张图解释下RPC的通信流程？","id":199650},"right":{"article_title":"03 | 序列化：对象怎么在网络中传输？","id":202779}},"comments":[{"had_liked":false,"id":179362,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1581990765,"is_pvip":false,"replies":[{"id":"69640","content":"你好，非常正确。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581993268,"ip_address":"","comment_id":179362,"utype":1}],"discussion_count":12,"race_medal":0,"score":"534157935469","product_id":100046201,"comment_content":"以 Dubbo 为例，消费者发送请求时，使用 AtomicLong 自增，产生一个 消息 ID。由于 Dubbo 底层 IO 操作是异步的，Dubbo 发送请求之后，需要阻塞等待消费者返回信息。消费者会将消息 ID 保存到 Map 结构中,。为了保证请求响应可以一一对应，这就需要提供者返回的响应信息带上请求者消息 ID。 通过响应的消息 ID，通过 上面提到 Map 存储数据，就能找到对应的请求。<br>感兴趣的同学可以看下 Dubbo 2.6 DefaultFuture 源码。","like_count":125,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484224,"discussion_content":"你好，非常正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581993268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196234,"avatar":"https://static001.geekbang.org/account/avatar/00/12/40/ca/1313a90b.jpg","nickname":"退役的球童","note":"","ucode":"CD5157830D9606","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379974,"discussion_content":"真的厉害啊，学习这个课程真的是让我站在巨人的肩膀上","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1624267512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1180860,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTInibWRI8oh1Gib8q7G7Vz97I4zooUjChNydBtgibxaZDYyYlY56ibibmMZib55OjI9uvlicFmGg4sgKCFYw/132","nickname":"小时候很黑","note":"","ucode":"28D4B7B3F6F985","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294868,"discussion_content":"老师能给一个开源框架协议设计的例子吗 看了您设计的协议也不知道怎么去用😀","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596019761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1712274,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/20/92/cd1e1f79.jpg","nickname":"眸。光","note":"","ucode":"13ECF6391745DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179997,"discussion_content":"太强了老哥","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582268629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2826205,"avatar":"","nickname":"hillwater","note":"","ucode":"FB16D5FCE8C7E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589709,"discussion_content":"消息id需要全局唯一吗？还是不需要唯一性要求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665278813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1727799,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/5d/37/b3c7d6a0.jpg","nickname":"装睡的小5郎","note":"","ucode":"F4CD1B8E65B6E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543029,"discussion_content":"requestId","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640935308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1309614,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fb/ae/2879bd60.jpg","nickname":"旧梦发癫","note":"","ucode":"F51210AD94705D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375948,"discussion_content":"跟我设计TCP的时候好像。但是我也不知道对不对，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621903007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216847,"discussion_content":"专业，和大佬学习了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585489017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233926,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d4/06/6b103521.jpg","nickname":"Geraint","note":"","ucode":"ED183FCE273A7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":208559,"discussion_content":"一语见地。太棒了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584547815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205607,"discussion_content":"这个id一直递增，啥时候重置？如果不重置，最后要溢出吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584326036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1014680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","nickname":"楼下小黑哥","note":"","ucode":"453B099B0EE52E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206433,"discussion_content":"每次重启，就重新计数了，另外 long 溢出要好久好久，哈哈哈哈😂","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1584405522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":205607,"ip_address":""},"score":206433,"extra":""},{"author":{"id":1237588,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/54/f836054a.jpg","nickname":"耿斌","note":"","ucode":"6535D0B012D78E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260777,"discussion_content":"这个应该可以参考下TCP消息ID，一个 32 位的计数器，每 4ms 加1计算一下如果到重复，需要 4 个多小时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588900853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":205607,"ip_address":""},"score":260777,"extra":""}]}]},{"had_liked":false,"id":179746,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1582089579,"is_pvip":false,"replies":[{"id":"69843","content":"rpc为了吞吐量，会异步并发发送请求，等待应答，所以需要知道哪个应答对应那个请求","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582118391,"ip_address":"","comment_id":179746,"utype":1}],"discussion_count":10,"race_medal":0,"score":"212035487083","product_id":100046201,"comment_content":"老师好，您课后问题我有点不能理解。<br>我们http 请求一个资源不就对应一个返回。是一一对应的关系，为什么会有如何关联响应和请求的问题呢","like_count":50,"discussions":[{"author":{"id":1928682,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/6d/ea/2c5fcdb1.jpg","nickname":"睡觉也在笑","note":"","ucode":"62381E78061843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365213,"discussion_content":"其实就是同步短连接和异步长连接的区别，http是同步的短连接，因此返回的一致性是由这个连接来保障的。试想一下，如果长连接情况下，一个连接发送了两个http的请求，返回后能确保你能识别出来这两个应答是哪个请求的吗？异步长连接模式一般会在每个消息中增加一个msgID这样的东西来保证应答一致性，就是说我请求的时候带了一个msgID，应答也要将原请求msgID应答给我。这样一条连接的写入和写出就可以在应用端使用map的机制找到想要的应答了。不知道是否说明白了。","likes_number":32,"is_delete":false,"is_hidden":false,"ctime":1617750261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1928682,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/6d/ea/2c5fcdb1.jpg","nickname":"睡觉也在笑","note":"","ucode":"62381E78061843","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574590,"discussion_content":"FYI\n文中和这里的http都是指的是http 1.x版本 不论是短连接还是长连接，他们请求的方式，都是同步请求的方式【后一个请求。必须等待前一个请求return，才能发起下一个请求】，存在队头阻塞的问题【这样就导致吞吐上不去】。http 2.x也可以RPC的通信协议，比如gRPC，http 2.x的多路复用就是通过增加每个请求都有一个对应的ID，来对应请求与响应的关系，来解决http存在的队头阻塞问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654164116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":365213,"ip_address":""},"score":574590,"extra":""}]},{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484376,"discussion_content":"rpc为了吞吐量，会异步并发发送请求，等待应答，所以需要知道哪个应答对应那个请求","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1582118391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1305369,"avatar":"https://static001.geekbang.org/account/avatar/00/13/eb/19/0d990b03.jpg","nickname":"ZeroIce","note":"","ucode":"30133BA83CE349","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177480,"discussion_content":"因为HTTP是无状态的，每次请求都需新建连接，导致前后两次请求和响应无法关联起来。你说的请求与响应一一对应，是在单个请求的时候说的，但是前后两次请求和响应依然是无法相关联起来的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1582110766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1305369,"avatar":"https://static001.geekbang.org/account/avatar/00/13/eb/19/0d990b03.jpg","nickname":"ZeroIce","note":"","ucode":"30133BA83CE349","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177491,"discussion_content":"补充：HTTP协议是无状态的，指的是协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。也就是说，打开一个服务器上的网页和你之前打开这个服务器上的网页之间没有任何联系。例如：一个聊天室，重开一个网页，依然还是保持连接状态。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582111422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501018,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/5a/9578215e.jpg","nickname":"蔡晓亮","note":"","ucode":"48C043DE389595","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341717,"discussion_content":"举个例子，网站需要登陆系统，需要cookie，也是因为http无状态，需要通过客户端cookie和服务端session保存状态，这样才知道是哪一个人的操作","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610504243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1501018,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/5a/9578215e.jpg","nickname":"蔡晓亮","note":"","ucode":"48C043DE389595","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343097,"discussion_content":"感觉你说的这个不是作者想表达的意思，如果是这样那rcp协议也要对应的手段在每次请求里加点东西才能做到标识哪个用户","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610942920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341717,"ip_address":""},"score":343097,"extra":""}]},{"author":{"id":1218353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/97/31/76485177.jpg","nickname":"贺钧威","note":"","ucode":"3E1FC908C28E29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237868,"discussion_content":"http 协议在并发情况下，请求和响应也是一一对应的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587193603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546761,"discussion_content":"需要调研和实践","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642417208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609126,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8d/a6/d4ac9fa8.jpg","nickname":"骑着蜗牛追火箭","note":"","ucode":"0B266868ABF3A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177432,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582106382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180313,"user_name":"jfwwlong","can_delete":false,"product_type":"c1","uid":1351597,"ip_address":"","ucode":"215753DB23A02A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJM2Y17W5mKU1icTg4OTKd3xYMhANenFDsYewjBlzWMujIh3vA2Yj9yG8ibr6WQMqUjjTgeNicXTp9kw/132","comment_is_top":false,"comment_ctime":1582255202,"is_pvip":true,"replies":[{"id":"70051","content":"grpc基于http2，更容易跨语言支持。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582288978,"ip_address":"","comment_id":180313,"utype":1}],"discussion_count":7,"race_medal":0,"score":"130431274082","product_id":100046201,"comment_content":"你好，既然基于TCP优于HTTP，gRPC为什么选择基于HTTP2","like_count":31,"discussions":[{"author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309944,"discussion_content":"http2不是采用字符串的协议，总体大小会小很多","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1601537651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1928682,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/6d/ea/2c5fcdb1.jpg","nickname":"睡觉也在笑","note":"","ucode":"62381E78061843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365214,"discussion_content":"http2使用了二进制协议，两边都维护了头字段的对应表，所以头已经很小了。同时http2也会保证长连接，不用每次都建立新的连接。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1617750429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484606,"discussion_content":"grpc基于http2，更容易跨语言支持。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582288978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1282648,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/58/b4f6365d.jpg","nickname":"小北","note":"","ucode":"3A23079E4AA92E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373087,"discussion_content":"还有一点HTTP/2各大语言和服务器都兼容，更适合gRPC语言无关平台无关的特性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620610651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008517,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/85/1dc41622.jpg","nickname":"姑射仙人","note":"","ucode":"3EFC1F3E592165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379706,"discussion_content":"其实仔细想来，除了长连接外。Http协议也是基于TCP协议，你基于TCP自行实现的私有协议真的有Http协议优秀吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624087742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008517,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/85/1dc41622.jpg","nickname":"姑射仙人","note":"","ucode":"3EFC1F3E592165","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385872,"discussion_content":"个人觉得不用http协议的原因是http里有太多为了分割的内容，如空格，换行等","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627308446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379706,"ip_address":""},"score":385872,"extra":""}]},{"author":{"id":1266967,"avatar":"https://static001.geekbang.org/account/avatar/00/13/55/17/4d95edf6.jpg","nickname":"胡军","note":"","ucode":"A97E2F694F0C65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375260,"discussion_content":"RPC协议不支持跨语言调用吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621556990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179382,"user_name":"旭杰","can_delete":false,"product_type":"c1","uid":1242099,"ip_address":"","ucode":"964603ACF81B28","user_header":"https://static001.geekbang.org/account/avatar/00/12/f3/f3/3fbb4c38.jpg","comment_is_top":false,"comment_ctime":1581994026,"is_pvip":false,"replies":[{"id":"69681","content":"是的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582009196,"ip_address":"","comment_id":179382,"utype":1}],"discussion_count":2,"race_medal":0,"score":"74596438058","product_id":100046201,"comment_content":"调用方需要维护消息ID列表，然后和返回结果中的消息ID做匹配","like_count":17,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484236,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582009196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244320,"discussion_content":"消息ID也可以由提供方生成。这样不但可以实现请求与响应关联，还可以实现幂等。缺点是调用方在发送真正的业务请求前，先去提供方获取一个唯一ID","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587597660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179346,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1581988083,"is_pvip":false,"replies":[{"id":"69639","content":"很赞。异步场景用于区分应答消息。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581993103,"ip_address":"","comment_id":179346,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61711530227","product_id":100046201,"comment_content":"老师，你好。请求时带上消息id，响应时，响应体里面带上请求消息的id，这样可以进行关联，对吗？","like_count":14,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484217,"discussion_content":"很赞。异步场景用于区分应答消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581993103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":176067,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582019555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180015,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1582165484,"is_pvip":false,"replies":[{"id":"69879","content":"看的仔细😁","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582169161,"ip_address":"","comment_id":180015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53121773036","product_id":100046201,"comment_content":"答案就在题面上，老师的消息协议图里已经设计了消息ID了😃","like_count":12,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484492,"discussion_content":"看的仔细😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582169161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179958,"user_name":"(Kelen)","can_delete":false,"product_type":"c1","uid":1241185,"ip_address":"","ucode":"C8578DB62E3B2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/61/fedca2e9.jpg","comment_is_top":false,"comment_ctime":1582127127,"is_pvip":false,"replies":[{"id":"69885","content":"可以，例如http2。目前性能不如tcp好。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582169608,"ip_address":"","comment_id":179958,"utype":1}],"discussion_count":6,"race_medal":0,"score":"53121734679","product_id":100046201,"comment_content":"hhtp现在已经支持长链接了啊","like_count":12,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484461,"discussion_content":"可以，例如http2。目前性能不如tcp好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582169608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172429,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e3/cd/82829bf9.jpg","nickname":"Gerry","note":"","ucode":"C3A8BC33F2A25A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333547,"discussion_content":"应该是说Http1.x不支持异步通信，长链接是支持的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1607561834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1978490,"avatar":"","nickname":"程志东","note":"","ucode":"EC55D66D657B49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308565,"discussion_content":"作者回复: 可以，例如http2。目前性能不如tcp好  这个回答说的有点牵强吧 你自己都说http是应用层协议与TCP是传输层 这两者怎么比","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600997489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2718510,"avatar":"","nickname":"jack123","note":"","ucode":"873D0046EF39D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1978490,"avatar":"","nickname":"程志东","note":"","ucode":"EC55D66D657B49","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401352,"discussion_content":"TCP只负责建立连接，http负责在tcp连接基础上传输数据，这两者效率没有可比性吧，\n评论区比原文精彩-系列","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1633655060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308565,"ip_address":""},"score":401352,"extra":""}]},{"author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309945,"discussion_content":"http1.1就是长连接了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601537675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241185,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f0/61/fedca2e9.jpg","nickname":"(Kelen)","note":"","ucode":"C8578DB62E3B2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180595,"discussion_content":"springCloud好像就是通过http协议吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582297535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184505,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1583330259,"is_pvip":false,"replies":[{"id":"71594","content":"你可以理解成每个协议的名字","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583575135,"ip_address":"","comment_id":184505,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48827970515","product_id":100046201,"comment_content":"老师，请问一下魔术位是指的什么啊？","like_count":11,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486040,"discussion_content":"你可以理解成每个协议的名字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583575135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1644104,"avatar":"https://static001.geekbang.org/account/avatar/00/19/16/48/09493874.jpg","nickname":"茶没喝完","note":"","ucode":"D72D88C42A1258","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379549,"discussion_content":"字节码文件中也有魔术，用于标识这个文件是class文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623969622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215953,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589158841,"is_pvip":false,"replies":[{"id":"80447","content":"👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589500836,"ip_address":"","comment_id":215953,"utype":1}],"discussion_count":8,"race_medal":0,"score":"44538831801","product_id":100046201,"comment_content":"网络通信在传输层就是一堆堆的0&#47;1码，如果没有协议，那谁知道这一堆堆的0&#47;1是啥意思呢？没人能知道，协议的作用就是通信双方约定好，多少个0&#47;1表示什么意思。<br>1：Bit Offset——标识协议的其实位置<br>2：魔术位——标识是什么协议<br>3：整体长度——标识整个协议有多长，减去协议头长度就是协议体长度<br>4：头长度——标识协议头的长度，因为头是可扩展的，所以具体长度不固定，需要标识一下<br>5：协议版本——标识当前协议的版本，用于协议兼容性控制<br>6：消息类型——标识消息的类型，对于文本的需要，这里也需要嘛？协议类型可能是对象？可能是XML文件？可能是JSON码？正常来讲应该都是对象才对，让用于反序列化，猜测是为了扩展预留的<br>7：序列化方式——用于消息的序列化和反序列化<br>8：消息ID——用于表示请求和响应的关系<br>9：协议头扩展字段——用于扩展协议头，是协议具有扩展性，更加的灵活可控<br>10协议体——协议的内容，一堆堆的二进制数据，双方沟通的东西<br><br>协议头——规定信息转换的规则<br>协议体——信息真正的内容，由于在传输层对人不友好对应用程序也不友好需要转换一下","like_count":11,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494620,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589500836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1169523,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvxTO5l5tNHarf6pV6heagAdGnoJJibo0n2kCRxwS54noQzuH6x7kbjVpNf8QP7YVT3FmicCqeNxkQ/132","nickname":"西红柿炒番茄","note":"","ucode":"BE2521F1B2C29D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":550621,"discussion_content":"何老师，消息类型字段作用不是很理解？望解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644640166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":494620,"ip_address":""},"score":550621,"extra":""}]},{"author":{"id":2826205,"avatar":"","nickname":"hillwater","note":"","ucode":"FB16D5FCE8C7E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589710,"discussion_content":"协议头一般用什么序列化协议呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665279129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2309573,"avatar":"","nickname":"Geek_09d497","note":"","ucode":"DF68A83396972E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327238,"discussion_content":"希望作者可以优化可扩展协议的具体每个字段的作用，说明一般是用来干什么的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605772376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2309573,"avatar":"","nickname":"Geek_09d497","note":"","ucode":"DF68A83396972E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327236,"discussion_content":"关于6消息类型，我觉得不一定是像http那样，json还是xml或者是文本，在具体的业务场景应该可以用来标记是属于哪种业务，如果接收方收到不匹配的消息类型，可以不做处理，放在协议头可以不用反序列化就可以屏蔽掉一部分不属于本服务处理的请求，提高效率，不知道我的想法是否正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605772313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266096,"discussion_content":"序列化和反序列化也有好多种框架？具体使用那种呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589468980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1041680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e5/10/0a94311f.jpg","nickname":"joker","note":"","ucode":"DA1FD164B64083","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265964,"discussion_content":"关于第七个点的解释感觉有点牵强。不是很理解这个位置的作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589461122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2309573,"avatar":"","nickname":"Geek_09d497","note":"","ucode":"DF68A83396972E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1041680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e5/10/0a94311f.jpg","nickname":"joker","note":"","ucode":"DA1FD164B64083","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327230,"discussion_content":"意思就是标示是协议体部分到底采用何种序列化，是json，protobuf还是其他","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605771988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":265964,"ip_address":""},"score":327230,"extra":""}]}]},{"had_liked":false,"id":207424,"user_name":"看山","can_delete":false,"product_type":"c1","uid":1014260,"ip_address":"","ucode":"F030DD58D0BDC3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/f4/d85e7e58.jpg","comment_is_top":false,"comment_ctime":1587085162,"is_pvip":false,"replies":[{"id":"77657","content":"👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1587269296,"ip_address":"","comment_id":207424,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27356888938","product_id":100046201,"comment_content":"你好，一般RPC为了性能，会采用异步通信的方式，请求响应对应关联，就需要一个类似身份证号的ID，我在自己的项目中实现了类似的场景，https:&#47;&#47;github.com&#47;howardliu-cn&#47;cynomys&#47;tree&#47;master&#47;cynomys-net","like_count":6,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492119,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587269296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179928,"user_name":"雨霖铃声声慢","can_delete":false,"product_type":"c1","uid":1052607,"ip_address":"","ucode":"656D98310C6DA3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/bf/ee93c4cf.jpg","comment_is_top":false,"comment_ctime":1582122786,"is_pvip":false,"replies":[{"id":"69891","content":"在设计rpc的时候，是为了高性能和大吞吐量场景，基于tcp性能更快。压力不大场景，http可以满足。grpc做的也很好。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582170200,"ip_address":"","comment_id":179928,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27351926562","product_id":100046201,"comment_content":"对于课后思考里提到的“ RPC 不直接用 HTTP 协议的一个原因是无法实现请求跟响应关联”，我认为是有问题的，如果是同步请求，那么使用HTTP协议也是可以实现请求和相应关联的，只有异步请求才需要做关联，另外还需要说明这里的HTTP协议是指HTTP1.1。因为gRPC使用的是HTTP2.0协议，http2.0协议已经优化编码效率问题，而且HTTP2.0支持多路复用，不需要每次请求都需要重新建立连接，提高了连接的利用率。所以其实没必须要设置私有协议。","like_count":6,"discussions":[{"author":{"id":1178101,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f9/f5/5aecc3cb.jpg","nickname":"给我一秒毁坏世界","note":"","ucode":"310B851553363D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228142,"discussion_content":"我要纠正一下HTTP1.1协议是无状态的，无法关联请求和响应，即使同步也不行，你要考虑并发情况，多个线程同步请求就不一样了。除非是同步串行请求，这样效率更加低","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1586526436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484453,"discussion_content":"在设计rpc的时候，是为了高性能和大吞吐量场景，基于tcp性能更快。压力不大场景，http可以满足。grpc做的也很好。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582170200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204154,"user_name":"James","can_delete":false,"product_type":"c1","uid":1500474,"ip_address":"","ucode":"27DBA39932FD26","user_header":"https://static001.geekbang.org/account/avatar/00/16/e5/3a/77cb17b9.jpg","comment_is_top":false,"comment_ctime":1586343157,"is_pvip":false,"replies":[{"id":"76817","content":"很难出现这种情况，应用不可能长时间不重启，我们经常把id关联到一个连接上","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586691252,"ip_address":"","comment_id":204154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14471245045","product_id":100046201,"comment_content":"老师，问个极端的问题。<br>消息ID是不断增加的，如果消息ID达到预留位置的最大值了。或者超过了程序里存储这个ID的类型的最大值的话，怎么办呢？或者说会有这种情况么？","like_count":4,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491090,"discussion_content":"很难出现这种情况，应用不可能长时间不重启，我们经常把id关联到一个连接上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586691252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179283,"user_name":"听雨","can_delete":false,"product_type":"c1","uid":1254493,"ip_address":"","ucode":"252754F9FCFF0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","comment_is_top":false,"comment_ctime":1581951600,"is_pvip":false,"replies":[{"id":"69633","content":"你好，可以支持，应用http调用场景大部分都是短连接方式。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581992517,"ip_address":"","comment_id":179283,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14466853488","product_id":100046201,"comment_content":"老师，关于http每次请求都要重新建立连接这一块不太理解，它不是支持长连接吗","like_count":3,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484180,"discussion_content":"你好，可以支持，应用http调用场景大部分都是短连接方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581992517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175633,"discussion_content":"一次http请求就会发生一次tcp链接，当然，也有tcp层面的优化复用等，此外，如果使用http2的方案可能效果会更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581987805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179249,"user_name":"艾斯曼","can_delete":false,"product_type":"c1","uid":1001772,"ip_address":"","ucode":"B73FA6A2530138","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/2c/a2a948b6.jpg","comment_is_top":false,"comment_ctime":1581944542,"is_pvip":false,"replies":[{"id":"69553","content":"你好，艾斯曼。传统的rpc里面，请求的消息id用连接上的自增整数就行。用于标识请求消息，同时区分应答消息。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581946095,"ip_address":"","comment_id":179249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14466846430","product_id":100046201,"comment_content":"消息Id<br>","like_count":3,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484167,"discussion_content":"你好，艾斯曼。传统的rpc里面，请求的消息id用连接上的自增整数就行。用于标识请求消息，同时区分应答消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581946095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278776,"user_name":"黄文杰","can_delete":false,"product_type":"c1","uid":1957198,"ip_address":"","ucode":"704D0ED9AE54A4","user_header":"https://static001.geekbang.org/account/avatar/00/1d/dd/4e/4d18d414.jpg","comment_is_top":false,"comment_ctime":1613314251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10203248843","product_id":100046201,"comment_content":"thrift也是rpc协议，我看协议格式很简单，通信单位是一个message,只有name,type,seqid三个结构，上面说的私有协议结构并非适合用于各种rpc框架","like_count":3},{"had_liked":false,"id":276973,"user_name":"慕然","can_delete":false,"product_type":"c1","uid":1667714,"ip_address":"","ucode":"8622102560A80F","user_header":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","comment_is_top":false,"comment_ctime":1612200973,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10202135565","product_id":100046201,"comment_content":"有个疑问。比方调用方，快速重启了。重启前调用的消息id，重启后调用的消息id，应该无法区别吧。那这种情况下还能将请求和响应联系起来吗？怎么解决呢？","like_count":2,"discussions":[{"author":{"id":1184868,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKM5opSMdO81Et9ib3ibJ38KEywA9pecR3L83OqPuC4bwL9gr0wPzUKpiaFokKZ7GiaIib9aCFVR0E5gPA/132","nickname":"淡忘7788","note":"","ucode":"FE25781681F90D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591122,"discussion_content":"这个再网络层就会提示错误了，不是同一个连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666314427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183650,"user_name":"李毅科","can_delete":false,"product_type":"c1","uid":1514723,"ip_address":"","ucode":"47C34DD829649F","user_header":"https://static001.geekbang.org/account/avatar/00/17/1c/e3/c399ab50.jpg","comment_is_top":false,"comment_ctime":1583107121,"is_pvip":false,"replies":[{"id":"71627","content":"跟具体场景出入参数都有关系","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583622517,"ip_address":"","comment_id":183650,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173041713","product_id":100046201,"comment_content":"http2和rpc在高并发下效率差多少，老师能不能公布下数据，我心里好有个底，要不然觉得用rpc很虚啊。还有在高并发场景下spring cloud是不是可以直接被淘汰了，因为它用的是http2。高并发是不是就直接选用Dubbo了，因为它用rpc。","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485740,"discussion_content":"跟具体场景出入参数都有关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583622517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179885,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1582117555,"is_pvip":false,"replies":[{"id":"69846","content":"服务提供者会往注册中心注册，消费者从注册中心拿到提供者地址","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582118945,"ip_address":"","comment_id":179885,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10172052147","product_id":100046201,"comment_content":"一般服务端会给每个客户端socket（或channel）绑定一个标识id，在注册中心可以通过id找到该socket（或channel），然后将数据发送出去。","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484438,"discussion_content":"服务提供者会往注册中心注册，消费者从注册中心拿到提供者地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582118945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271620,"user_name":"3W1H","can_delete":false,"product_type":"c1","uid":1066430,"ip_address":"","ucode":"F6B4864128103C","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/be/c04a40ce.jpg","comment_is_top":false,"comment_ctime":1609735452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5904702748","product_id":100046201,"comment_content":"扩展的协议头 是不是还得有个位置标志和长度呢？ 要不然没有办法去读区扩展的协议头的内容","like_count":2},{"had_liked":false,"id":257000,"user_name":"Awake  Dreaming","can_delete":false,"product_type":"c1","uid":1658734,"ip_address":"","ucode":"D1A19933863FD6","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/6e/bff1e33e.jpg","comment_is_top":false,"comment_ctime":1603808872,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5898776168","product_id":100046201,"comment_content":"这里有一个问题，那就是TCP不是已经把数据切片传输，接收方合并的逻辑给封装了让上层协议不可见了吗？既然RPC协议属于应用层协议，为什么还要在设计RPC协议的考虑数据切片和接手后的合并的逻辑？","like_count":1,"discussions":[{"author":{"id":2718510,"avatar":"","nickname":"jack123","note":"","ucode":"873D0046EF39D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401359,"discussion_content":"rpc是可以在应用层异步并发，需要有一个id值来保证先后性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1633655399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235963,"user_name":"不能扮演天使","can_delete":false,"product_type":"c1","uid":1046172,"ip_address":"","ucode":"9922330BFF7FFB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/9c/b457a937.jpg","comment_is_top":false,"comment_ctime":1595256999,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5890224295","product_id":100046201,"comment_content":"还是没有深刻理解RPC和HTTP的区别，老师评论中有说RPC是异步并行发送请求，但是对于服务调用方使用http也可以多次调用啊，况且RPC的话服务调用方不也是得同步等待提供方的结果么？这和http有啥区别呢","like_count":1,"discussions":[{"author":{"id":2029859,"avatar":"","nickname":"Geek_8e8cd5","note":"","ucode":"73E0424E5F69FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300122,"discussion_content":"我们看到的同步等待，也可以用异步的方式来实现，比如我们公司的RPC框架就在发起调用的时候，使用CountDownLatch进行阻塞， 等待数据的到来，根据消息ID进行唤醒。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597938520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1234998,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d8/36/badf4003.jpg","nickname":"卡洛梅特","note":"","ucode":"A9997083BF684A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2029859,"avatar":"","nickname":"Geek_8e8cd5","note":"","ucode":"73E0424E5F69FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374606,"discussion_content":"现在都用nio,netty实现异步非阻塞了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621263532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300122,"ip_address":""},"score":374606,"extra":""}]}]},{"had_liked":false,"id":183139,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1199192,"ip_address":"","ucode":"918EFC033B1630","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/58/25152fa9.jpg","comment_is_top":false,"comment_ctime":1582959617,"is_pvip":false,"replies":[{"id":"71642","content":"是的，不同类型请求处理逻辑不一样，比如区分心跳请求","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583628065,"ip_address":"","comment_id":183139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877926913","product_id":100046201,"comment_content":"协议设计与文字断句做类比很形象。<br>关于请求和响应对应上的话需要请求发送方带上自己的请求标识，服务端在返回的结果中也要带上这个请求的标识，这样请求发送方就可以通过请求标识来使用不同的请求","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485570,"discussion_content":"是的，不同类型请求处理逻辑不一样，比如区分心跳请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583628065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182116,"user_name":"旺旺","can_delete":false,"product_type":"c1","uid":1159196,"ip_address":"","ucode":"FE2CF90F446BFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/1c/2e30eeb8.jpg","comment_is_top":false,"comment_ctime":1582711540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877678836","product_id":100046201,"comment_content":"解释的很好，简单易懂，赞","like_count":1},{"had_liked":false,"id":179230,"user_name":"shen","can_delete":false,"product_type":"c1","uid":1215066,"ip_address":"","ucode":"AE5737B0C7DC4F","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/5a/b67a82e3.jpg","comment_is_top":false,"comment_ctime":1581940762,"is_pvip":false,"replies":[{"id":"69554","content":"你好，shen。请求id是用于标识请求，区分应答。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581946251,"ip_address":"","comment_id":179230,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5876908058","product_id":100046201,"comment_content":"我的理解是在请求里面带一个请求id，然后响应对应的请求id，这样就建立了连接","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484156,"discussion_content":"你好，shen。请求id是用于标识请求，区分应答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581946251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347844,"user_name":"宙斯","can_delete":false,"product_type":"c1","uid":2041396,"ip_address":"","ucode":"80DF36BAD298AD","user_header":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","comment_is_top":false,"comment_ctime":1654509824,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654509824","product_id":100046201,"comment_content":"思考题：RPC 里面，我们是怎么实现请求跟响应关联的呢？<br>RPC是通过消息ID和消息类型可唯一识别一个请求。并且可以基于头信息维护长链接实现并发处理批量返回功能。","like_count":0},{"had_liked":false,"id":332912,"user_name":"健康的小牛犊","can_delete":false,"product_type":"c1","uid":2263754,"ip_address":"","ucode":"A63C30B602F0A5","user_header":"https://static001.geekbang.org/account/avatar/00/22/8a/ca/1afcc75b.jpg","comment_is_top":false,"comment_ctime":1643804864,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1643804864","product_id":100046201,"comment_content":"思考题：应该就是通过协议设计的消息相关字段来实现的。","like_count":0},{"had_liked":false,"id":328229,"user_name":"terryking","can_delete":false,"product_type":"c1","uid":1012371,"ip_address":"","ucode":"39433F06D6BEF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/93/46895883.jpg","comment_is_top":false,"comment_ctime":1640614990,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640614990","product_id":100046201,"comment_content":"确实这个课后问题不太好理解，rpc的通信基本上都是一个tcp连接所以需要能够识别那个报文对应的是哪个消息，才能够做到区分响应体应该返回给上层的哪个调用方，而http本身一个连接一个tcp端口，所以天然就是一一对应的(http1.0). 当http1.1有了keepalive之后，又是另外的景象了，比如nginx开启了keepalive之后，那也是要区分哪个响应体对应与哪个请求的，才好分发给对应的socket，要不然nginx在响应多个客户端请求的时候照样会出现错乱，只是还不清楚具体的实现细节，不知道理解的对不对？","like_count":0},{"had_liked":false,"id":321657,"user_name":"郑昌宏","can_delete":false,"product_type":"c1","uid":1863570,"ip_address":"","ucode":"238E22471A1F70","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KQpJHrQFQnezpyMlffXh9qLwjqdlcQmZKNbFnicncocY0WN8MStUKPapuQjcWAVNHakvGJKE28Cy1TmkG413GtQ/132","comment_is_top":false,"comment_ctime":1636980087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636980087","product_id":100046201,"comment_content":"何老师，http是无状态的，那rpc是有状态的吗","like_count":0},{"had_liked":false,"id":318286,"user_name":"zhanyd","can_delete":false,"product_type":"c1","uid":1073845,"ip_address":"","ucode":"4C994EE512A3C4","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/b5/4159fa05.jpg","comment_is_top":false,"comment_ctime":1635230731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635230731","product_id":100046201,"comment_content":"在RPC协议中加上一个头长度参数，就能实现协议头的扩展了，以后在协议头里加什么参数都可以，这样就可以适应未来的变化，真是妙啊。","like_count":0},{"had_liked":false,"id":306609,"user_name":"fromk7","can_delete":false,"product_type":"c1","uid":1618629,"ip_address":"","ucode":"0EE21A43A6701D","user_header":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCibibkl1x62jWtAIjQ0E7KWnS2dwnvRFAzbGkic2PUqGshmag6XWn3Uxf5OJmulYeDXdBpiaxG0G0bhHLCxDJWld56/132","comment_is_top":false,"comment_ctime":1628644129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628644129","product_id":100046201,"comment_content":"看第一遍似懂非懂，看第二遍有种豁然开朗的感觉","like_count":0},{"had_liked":false,"id":299977,"user_name":"Faddei","can_delete":false,"product_type":"c1","uid":1990585,"ip_address":"","ucode":"0D31C24E4878B2","user_header":"https://static001.geekbang.org/account/avatar/00/1e/5f/b9/6dbac933.jpg","comment_is_top":false,"comment_ctime":1624944741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624944741","product_id":100046201,"comment_content":"老师你好，这里的消息类型主要是指什么","like_count":0},{"had_liked":false,"id":296561,"user_name":"FF","can_delete":false,"product_type":"c1","uid":1133758,"ip_address":"","ucode":"89DB3329AAEAB2","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/be/25919d4b.jpg","comment_is_top":false,"comment_ctime":1623048452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623048452","product_id":100046201,"comment_content":"请求与响应关联算不算是 会话层 需要做的东西？","like_count":0},{"had_liked":false,"id":291689,"user_name":"罗峰","can_delete":false,"product_type":"c1","uid":1218501,"ip_address":"","ucode":"5F3D6AF8F28322","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/c5/84491beb.jpg","comment_is_top":false,"comment_ctime":1620434407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620434407","product_id":100046201,"comment_content":"定长协议那张图 看着有点歧义，比如第二行其实是协议头，可开头标识一个0","like_count":1},{"had_liked":false,"id":289565,"user_name":"chai","can_delete":false,"product_type":"c1","uid":1202222,"ip_address":"","ucode":"C686EB1B1EBAB6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep66fdwo3ebSicKjf0iacAx4C2tZOthDDD4bSJqib1iauFBK6EoMSWUBp4UbbN2BQlib7mFR3hQD6MUwew/132","comment_is_top":false,"comment_ctime":1619083324,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619083324","product_id":100046201,"comment_content":"唯一消息id","like_count":0},{"had_liked":false,"id":283343,"user_name":"赵学习","can_delete":false,"product_type":"c1","uid":1829065,"ip_address":"","ucode":"2B660A158C4C3E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/x3cpRvAjkpyCiaibTJlvhlaE6g5XUgDYH24ZISWzZUO5mDkfW0fPJJDWnwa8V6c3FYxnVasFMTGc4xqaoWkuXXsA/132","comment_is_top":false,"comment_ctime":1615716526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615716526","product_id":100046201,"comment_content":"老师文章中已经暗示了答案了，就是那个消息ID吧？","like_count":0},{"had_liked":false,"id":281615,"user_name":"stargoood","can_delete":false,"product_type":"c1","uid":1235371,"ip_address":"","ucode":"18417CEBB04A36","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/ab/828080eb.jpg","comment_is_top":false,"comment_ctime":1614828734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614828734","product_id":100046201,"comment_content":"整理两个问题：<br>1. 为什么http协议不适合作为rpc协议？<br>2. 如何设计可扩展且向后兼容的rpc协议？","like_count":0},{"had_liked":false,"id":280708,"user_name":"群书","can_delete":false,"product_type":"c1","uid":1437036,"ip_address":"","ucode":"BA9EE71D2D818A","user_header":"https://static001.geekbang.org/account/avatar/00/15/ed/6c/6fb35017.jpg","comment_is_top":false,"comment_ctime":1614324001,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1614324001","product_id":100046201,"comment_content":"老师好，按照这个协议设计,如果palyload需要压缩和加密时，压缩和加密的标记放在哪里合适呢","like_count":0},{"had_liked":false,"id":273377,"user_name":"汉斯·冯·拉特","can_delete":false,"product_type":"c1","uid":1102385,"ip_address":"","ucode":"29F14B0D938A02","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/31/f1bec7fc.jpg","comment_is_top":false,"comment_ctime":1610566415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610566415","product_id":100046201,"comment_content":"consumer将id放去到map或者其它里面，等待服务提供者处理完请求后，带上消息id返回，然后匹配","like_count":0},{"had_liked":false,"id":235231,"user_name":"江世民","can_delete":false,"product_type":"c1","uid":1966624,"ip_address":"","ucode":"B328FA859E1007","user_header":"","comment_is_top":false,"comment_ctime":1594948325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594948325","product_id":100046201,"comment_content":"老师您好，请问数据包的拆分与合并是在tcp层面进行还是rpc层面，如果是前者，会不会存在第一个包只包含了协议头，第二个包只包含了协议体的情况，那这样如何正确断句呢？","like_count":0},{"had_liked":false,"id":222735,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1590901815,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1590901815","product_id":100046201,"comment_content":"不太同意这个原因，http也是可以设置为长连接的，这样每次服务间的调用无需再考虑连接频繁创建的成本了。<br><br>还有一个更重要的原因是，HTTP 协议属于无状态协议，客户端无法对请求和响应进行关联，每次请求都需要重新建立连接，响应完成后再关闭连接。因此，对于要求高性能的 RPC 来说，HTTP 协议基本很难满足需求，所以 RPC 会选择设计更紧凑的私有协议。","like_count":0,"discussions":[{"author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387625,"discussion_content":"你上一句话 还说http能够无需频繁建立连接呢 ,下一句就又说每次重新连接,那到底是连接不连接啊?!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628307791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304342,"discussion_content":"嗯，感觉这个才是rpc定义私有协议的主要原因。通过消息ID实现异步并发请求，提高吞吐量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599549866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219041,"user_name":"Adccz","can_delete":false,"product_type":"c1","uid":1992132,"ip_address":"","ucode":"92B277F2A0546E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/65/c4/e4caa60c.jpg","comment_is_top":false,"comment_ctime":1589937068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589937068","product_id":100046201,"comment_content":"假如服务器时间不一致，如何去判断超时时间呢?","like_count":0},{"had_liked":false,"id":217352,"user_name":"joker","can_delete":false,"product_type":"c1","uid":1041680,"ip_address":"","ucode":"DA1FD164B64083","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/10/0a94311f.jpg","comment_is_top":false,"comment_ctime":1589468420,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589468420","product_id":100046201,"comment_content":"老师，能否详细讲一下粘包拆包的原理","like_count":0,"discussions":[{"author":{"id":2669142,"avatar":"https://static001.geekbang.org/account/avatar/00/28/ba/56/5a4b9162.jpg","nickname":"0~zero","note":"","ucode":"984D1228B8484A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382314,"discussion_content":"就是里面说的，句号呀，形象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625530341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216980,"user_name":"sami","can_delete":false,"product_type":"c1","uid":1033240,"ip_address":"","ucode":"9A66FCA00D8A37","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","comment_is_top":false,"comment_ctime":1589380457,"is_pvip":true,"replies":[{"id":"80424","content":"不太准确，序列化是把对象转成可传输的二进制","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589499386,"ip_address":"","comment_id":216980,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1589380457","product_id":100046201,"comment_content":"我的理解是，协议是主要是为了解决粘包和半包问题，序列化是为了解决传输过程数据包过大的问题","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494999,"discussion_content":"不太准确，序列化是把对象转成可传输的二进制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1041680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e5/10/0a94311f.jpg","nickname":"joker","note":"","ucode":"DA1FD164B64083","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265962,"discussion_content":"我理解的是：协议是序列化的依据。关于解决数据包过大，应该是tcp协议解决的，拆包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589460837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216903,"user_name":"蔡佳伟","can_delete":false,"product_type":"c1","uid":1997605,"ip_address":"","ucode":"D7528B73994578","user_header":"","comment_is_top":false,"comment_ctime":1589365633,"is_pvip":false,"replies":[{"id":"80442","content":"从场景出发，适合自己业务的就最好","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589500527,"ip_address":"","comment_id":216903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589365633","product_id":100046201,"comment_content":"老师好，我目前在做网络库，对于你这节课的协议，我看别人做的都有提供多种方式去实现这种协议的“断句”，比如真的用&#47;n什么的去区分逻辑包，但是我觉得您说的这种方式是最好最合理的，所以有必要去提供其他方式吗？个人认为还能减少代码量嘿嘿","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494983,"discussion_content":"从场景出发，适合自己业务的就最好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589500527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214899,"user_name":"凉人。","can_delete":false,"product_type":"c1","uid":1659177,"ip_address":"","ucode":"4DB16004A62015","user_header":"https://static001.geekbang.org/account/avatar/00/19/51/29/24739c58.jpg","comment_is_top":false,"comment_ctime":1588844743,"is_pvip":false,"replies":[{"id":"80433","content":"很形象👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589499847,"ip_address":"","comment_id":214899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588844743","product_id":100046201,"comment_content":"感觉协议头模式，也是TCP&#47;IP 的套娃操作","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494237,"discussion_content":"很形象👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211546,"user_name":"凉人。","can_delete":false,"product_type":"c1","uid":1659177,"ip_address":"","ucode":"4DB16004A62015","user_header":"https://static001.geekbang.org/account/avatar/00/19/51/29/24739c58.jpg","comment_is_top":false,"comment_ctime":1587981155,"is_pvip":false,"replies":[{"id":"79068","content":"从扩张性来说http确实不错","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1588256092,"ip_address":"","comment_id":211546,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1587981155","product_id":100046201,"comment_content":"感觉大部分内容http已经做了呀。长连接、多路复用","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493292,"discussion_content":"从扩张性来说http确实不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588256092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1879262,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ac/de/68f35320.jpg","nickname":"小来子","note":"","ucode":"4EDAF31E43B211","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311127,"discussion_content":"那为啥不同http呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602231649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204329,"user_name":"Geek_ae2b66","can_delete":false,"product_type":"c1","uid":1949542,"ip_address":"","ucode":"7829F09FFB6FF7","user_header":"","comment_is_top":false,"comment_ctime":1586366678,"is_pvip":false,"replies":[{"id":"76816","content":"可能需要结合场景才能理解，协议版本主要为了升级用","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586691135,"ip_address":"","comment_id":204329,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586366678","product_id":100046201,"comment_content":"何老师好。能对文章设计的RPC协议头中各项内容的使用应用场景做一下解释吗？例如，协议版本。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491144,"discussion_content":"可能需要结合场景才能理解，协议版本主要为了升级用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586691135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203766,"user_name":"追风少年","can_delete":false,"product_type":"c1","uid":1305639,"ip_address":"","ucode":"0467648A908B18","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/27/827015c0.jpg","comment_is_top":false,"comment_ctime":1586264728,"is_pvip":false,"replies":[{"id":"76876","content":"都是一个目标，灵活性","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586734426,"ip_address":"","comment_id":203766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586264728","product_id":100046201,"comment_content":"感觉这个协议设计的跟TCP和UDP协议内容很类似，都含有定长的协议头，不定长的协议头和协议体，字段也有很多类似的。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490956,"discussion_content":"都是一个目标，灵活性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586734426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186005,"user_name":"姑射仙人","can_delete":false,"product_type":"c1","uid":1008517,"ip_address":"","ucode":"3EFC1F3E592165","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/85/1dc41622.jpg","comment_is_top":false,"comment_ctime":1583741035,"is_pvip":false,"replies":[{"id":"71878","content":"是的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583751088,"ip_address":"","comment_id":186005,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583741035","product_id":100046201,"comment_content":"老师，用来匹配请求与响应，实现完整的双工通信，异步调用，而不必阻塞式的将RPC异步变为同步。不知道理解是否正确。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486580,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583751088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184700,"user_name":"刘岚乔月","can_delete":false,"product_type":"c1","uid":1095289,"ip_address":"","ucode":"99A9AB4E4E1111","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/79/22e582a5.jpg","comment_is_top":false,"comment_ctime":1583384985,"is_pvip":false,"replies":[{"id":"71593","content":"没错","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583575055,"ip_address":"","comment_id":184700,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583384985","product_id":100046201,"comment_content":"通过请求&#47;响应ID映射的方式。消费者在调用时带上唯一的请求ID，生产者在处理完业务后带上响应ID。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486100,"discussion_content":"没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583575055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183700,"user_name":"二星球","can_delete":false,"product_type":"c1","uid":1111552,"ip_address":"","ucode":"89EC5FEB98E7CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/00/2a248fd8.jpg","comment_is_top":false,"comment_ctime":1583117921,"is_pvip":false,"replies":[{"id":"71626","content":"设计协议的时候，里面需要带上请求ID，用于关联哪次请求","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583622205,"ip_address":"","comment_id":183700,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583117921","product_id":100046201,"comment_content":"老师请教个问题：服务器A 向 服务器B 连续发送2个请求，但是第二次的请求结果先到，第一次的请求结果后到，TCP 协议本身能够区分 请求与相应的对应关系吗？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485750,"discussion_content":"设计协议的时候，里面需要带上请求ID，用于关联哪次请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583622205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181951,"user_name":"Reason","can_delete":false,"product_type":"c1","uid":1878898,"ip_address":"","ucode":"C2A8D67BC6F94D","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ab/72/c3a5eff3.jpg","comment_is_top":false,"comment_ctime":1582684279,"is_pvip":false,"replies":[{"id":"70512","content":"对的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582720096,"ip_address":"","comment_id":181951,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582684279","product_id":100046201,"comment_content":"如何实现请求和响应关联？<br>在老师的协议设计部分已经有一个消息ID，可以根据消息ID关联。具体做时，则需要存储消息ID和请求响应的映射关系，比如存储为Map","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485176,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582720096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181525,"user_name":"Harry","can_delete":false,"product_type":"c1","uid":1023204,"ip_address":"","ucode":"384BA2E5DD7933","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/e4/2d320540.jpg","comment_is_top":false,"comment_ctime":1582554908,"is_pvip":false,"replies":[{"id":"71877","content":"thrift里面有seqid的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583750070,"ip_address":"","comment_id":181525,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582554908","product_id":100046201,"comment_content":"老师，thrift 的协议中，好像就没有消息id ，thrift 不能做到请求和响应一一对应。<br>比如，多线程公用一个thrift 的client ，并发请求server 端，client 会报相关的异常。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485020,"discussion_content":"thrift里面有seqid的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583750070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180488,"user_name":"the day","can_delete":false,"product_type":"c1","uid":1877602,"ip_address":"","ucode":"5A699E6ABCD075","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a6/62/26d84c8b.jpg","comment_is_top":false,"comment_ctime":1582294440,"is_pvip":false,"replies":[{"id":"70310","content":"可以这么理解","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582543205,"ip_address":"","comment_id":180488,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582294440","product_id":100046201,"comment_content":"那么在 RPC 里面，我们是怎么实现请求跟响应关联的呢？<br>上下文匹配，简单明了！","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484678,"discussion_content":"可以这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582543205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180229,"user_name":"Leon","can_delete":false,"product_type":"c1","uid":1133145,"ip_address":"","ucode":"AE4E9534B24C10","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/59/899e3b06.jpg","comment_is_top":false,"comment_ctime":1582213989,"is_pvip":false,"replies":[{"id":"70050","content":"加上是为了灵活性。固定也可以，例如grpc就是protobuf。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582288904,"ip_address":"","comment_id":180229,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582213989","product_id":100046201,"comment_content":"老师你好，对协议头加上序列化方式不太理解。如果某个rpc框架就支持protobuf，那么调用方和服务方都是基于protobuf，是不是就不需要加协议头里的序列化","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484573,"discussion_content":"加上是为了灵活性。固定也可以，例如grpc就是protobuf。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582288904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180108,"user_name":"vivi","can_delete":false,"product_type":"c1","uid":1357983,"ip_address":"","ucode":"360A81D2003C99","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/9f/c64f0896.jpg","comment_is_top":false,"comment_ctime":1582189116,"is_pvip":false,"replies":[{"id":"70026","content":"我们设计rpc的场景就是要大吞吐量，需要异步","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582269885,"ip_address":"","comment_id":180108,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582189116","product_id":100046201,"comment_content":"老师，“ HTTP 协议属于无状态协议，客户端无法对请求和响应进行关联。”这应该是异步请求的情况下才会出现的吧。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484529,"discussion_content":"我们设计rpc的场景就是要大吞吐量，需要异步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582269885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179852,"user_name":"ZeroIce","can_delete":false,"product_type":"c1","uid":1305369,"ip_address":"","ucode":"30133BA83CE349","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/19/0d990b03.jpg","comment_is_top":false,"comment_ctime":1582111139,"is_pvip":false,"replies":[{"id":"69840","content":"http协议构建在tcp上，性能慢。grpc构建在http2上的。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582118048,"ip_address":"","comment_id":179852,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1582111139","product_id":100046201,"comment_content":"HTTP虽然是短连接，但是它不是支持长连接的？为什么不直接扩展HTTP请求支持长连接或者无状态-&gt;有状态，HTTP协议不可以扩展？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484429,"discussion_content":"http协议构建在tcp上，性能慢。grpc构建在http2上的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582118048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387626,"discussion_content":"请问 慢在何处??? 还是本质原因:携带的信息内容太多了 是吗??? 还望详细指导一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628307981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179578,"user_name":"Tim Zhang","can_delete":false,"product_type":"c1","uid":1214499,"ip_address":"","ucode":"4956AC5FE45EE1","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/23/a0966b4d.jpg","comment_is_top":false,"comment_ctime":1582034072,"is_pvip":false,"replies":[{"id":"69837","content":"服务提供方收到的请求二进制数据","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582117759,"ip_address":"","comment_id":179578,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582034072","product_id":100046201,"comment_content":"对于服务提供方应用来说，他会从 TCP 通道里面收到很多的二进制数据   这里应该是服务消费方吧","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484314,"discussion_content":"服务提供方收到的请求二进制数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582117759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179554,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582030723,"is_pvip":false,"replies":[{"id":"69751","content":"是的，用于区分同一连接上的请求和响应","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582070253,"ip_address":"","comment_id":179554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582030723","product_id":100046201,"comment_content":"以我现在公司出来为例，会有个sequence id这个是唯一的，用于绑定请求与响应","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484302,"discussion_content":"是的，用于区分同一连接上的请求和响应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582070253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179537,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1582026943,"is_pvip":false,"replies":[{"id":"69920","content":"具体的应用场景，例如在分布式跟踪的场景，需要把taceid传递下去，就可以利用可扩展头，写入traceid","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582184686,"ip_address":"","comment_id":179537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582026943","product_id":100046201,"comment_content":"老师像今天讲的可扩展协议头这块，你可以简单举例子，或者demo，这样对于学习本次课程是个由简单到复杂过程，便于后期学习者积累，思考，突出实战，还有我们也是自定义协议包头包体socket交互，与rpc对比上那块还是不足效率和性能上","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484299,"discussion_content":"具体的应用场景，例如在分布式跟踪的场景，需要把taceid传递下去，就可以利用可扩展头，写入traceid","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582184686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179508,"user_name":"noname","can_delete":false,"product_type":"c1","uid":1125056,"ip_address":"","ucode":"82216A6618A353","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/c0/aa0dfe16.jpg","comment_is_top":false,"comment_ctime":1582017548,"is_pvip":false,"replies":[{"id":"69747","content":"协议里面支持扩展字段，可以放在扩展字段路面。如果没有，则看看服务端逻辑是否适合默认超时。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582069463,"ip_address":"","comment_id":179508,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582017548","product_id":100046201,"comment_content":"何大你好，当升级协议时对于新扩展的处理逻辑，例如新增超时处理逻辑。在新版本中考虑向下兼容，对低版本没有这个协议头字段的请求，是默认不做处理还是增加一个默认超时时间？请问你是怎么思考这类问题，谢谢","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484287,"discussion_content":"协议里面支持扩展字段，可以放在扩展字段路面。如果没有，则看看服务端逻辑是否适合默认超时。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582069463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179473,"user_name":"circle","can_delete":false,"product_type":"c1","uid":1698138,"ip_address":"","ucode":"4D1791889B6507","user_header":"https://static001.geekbang.org/account/avatar/00/19/e9/5a/80f47838.jpg","comment_is_top":false,"comment_ctime":1582011629,"is_pvip":false,"replies":[{"id":"69715","content":"这些很重要","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582025741,"ip_address":"","comment_id":179473,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582011629","product_id":100046201,"comment_content":"RPC 1. 维护消息ID与方法(函数)的映射关系 2. 序列化和反序列化 3. 网络通信","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484273,"discussion_content":"这些很重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582025741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179279,"user_name":"夜幕","can_delete":false,"product_type":"c1","uid":1532101,"ip_address":"","ucode":"E7542BF8CCC3B7","user_header":"https://static001.geekbang.org/account/avatar/00/17/60/c5/d5040f44.jpg","comment_is_top":false,"comment_ctime":1581950827,"is_pvip":false,"replies":[{"id":"69713","content":"期望收获满满","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582025654,"ip_address":"","comment_id":179279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581950827","product_id":100046201,"comment_content":"有所感想，现在的我只知道用，希望之后在老师带领下继续学习更多重要的东西","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484179,"discussion_content":"期望收获满满","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582025654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179264,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1581947520,"is_pvip":false,"replies":[{"id":"69644","content":"你好，gogo。需要请求id和请求Future的映射，后续可以根据应答拿到请求Future，把结果给它并触发结束。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581996423,"ip_address":"","comment_id":179264,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1581947520","product_id":100046201,"comment_content":"老师：<br><br>1. 如果真的是用请求消息id来区分 应答消息id的话，调用方 要维护一个类似&lt;请求消息id，应答消息id&gt; 列表吧? <br>否则，怎么判断 哪个应答是对哪一次请求的响应呢? ","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484172,"discussion_content":"你好，gogo。需要请求id和请求Future的映射，后续可以根据应答拿到请求Future，把结果给它并触发结束。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581996423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","nickname":"楼下小黑哥","note":"","ucode":"453B099B0EE52E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175686,"discussion_content":"应答的时候带上请求时消息id 呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581989954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179256,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1581945888,"is_pvip":false,"replies":[{"id":"69685","content":"确实用来关联请求和响应","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582009476,"ip_address":"","comment_id":179256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581945888","product_id":100046201,"comment_content":"猜测是根据具有唯一性的消息id来关联请求和响应","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484168,"discussion_content":"确实用来关联请求和响应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582009476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179241,"user_name":"凹凸","can_delete":false,"product_type":"c1","uid":1198112,"ip_address":"","ucode":"D6F0EBDC8F2588","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/20/f1898740.jpg","comment_is_top":false,"comment_ctime":1581942179,"is_pvip":false,"replies":[{"id":"69552","content":"你好，凹凸。传统的rpc里面，请求的消息id用连接上的自增整数就行。用于区分应答消息。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581946018,"ip_address":"","comment_id":179241,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581942179","product_id":100046201,"comment_content":"客户端生成一个唯一标示：例如ip+端口+自增的请求id","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484163,"discussion_content":"你好，凹凸。传统的rpc里面，请求的消息id用连接上的自增整数就行。用于区分应答消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581946018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179216,"user_name":"chun1123","can_delete":false,"product_type":"c1","uid":1063307,"ip_address":"","ucode":"413C3A8722699F","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/8b/af74591f.jpg","comment_is_top":false,"comment_ctime":1581938293,"is_pvip":true,"replies":[{"id":"69551","content":"你好，chun1123。在rpc里面，一次请求的消息id可以用自增整数，主要是用于区分应答。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581945863,"ip_address":"","comment_id":179216,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581938293","product_id":100046201,"comment_content":"消息ID？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484150,"discussion_content":"你好，chun1123。在rpc里面，一次请求的消息id可以用自增整数，主要是用于区分应答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581945863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179214,"user_name":"岁月神偷","can_delete":false,"product_type":"c1","uid":1484111,"ip_address":"","ucode":"BA851259EA1F71","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/4f/592d00f2.jpg","comment_is_top":false,"comment_ctime":1581937846,"is_pvip":false,"replies":[{"id":"69550","content":"你好，吴帆。在一些场景下，期望头部动态携带一些扩展信息，这样方便读取。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581945649,"ip_address":"","comment_id":179214,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1581937846","product_id":100046201,"comment_content":"当老师说出通过增加一个协议头长度来解决协议头拓展性时确实感到很惊艳，虽然说出来后可能觉得这样的方案只是脑筋转了一个小弯，但却体现出老师在协议方面充实的经验","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484149,"discussion_content":"你好，吴帆。在一些场景下，期望头部动态携带一些扩展信息，这样方便读取。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581945649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175642,"discussion_content":"感觉这个通过长度来确定是很常见的呀，现在好多的tcp协议里面是都含有这个信息的，也是用来支持扩展的。也是通过借鉴更加底层的协议而来吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581987955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179212,"user_name":"Geek_9c3134","can_delete":false,"product_type":"c1","uid":1141689,"ip_address":"","ucode":"479BC6B4CF22FA","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/b9/9b0630b1.jpg","comment_is_top":false,"comment_ctime":1581937528,"is_pvip":false,"replies":[{"id":"69562","content":"你好，Geek_9c3134。请求id可以用唯一序列号。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581946917,"ip_address":"","comment_id":179212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581937528","product_id":100046201,"comment_content":"生成一个唯一的序列号","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484147,"discussion_content":"你好，Geek_9c3134。请求id可以用唯一序列号。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581946917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}