{"id":111673,"title":"15 | 组合与自绘，我该选用何种方式自定义Widget？","content":"<p>你好，我是陈航。</p><p>在上一次分享中，我们认识了Flutter中最常用也最经典的布局Widget，即单子容器Container、多子容器Row/Column，以及层叠容器Stack与Positioned，也学习了这些不同容器之间的摆放子Widget的布局规则，我们可以通过它们，来实现子控件的对齐、嵌套、层叠等，它们也是构建一个界面精美的App所必须的布局概念。</p><p>在实际开发中，我们会经常遇到一些复杂的UI需求，往往无法通过使用Flutter的基本Widget，通过设置其属性参数来满足。这个时候，我们就需要针对特定的场景自定义Widget了。</p><p>在Flutter中，自定义Widget与其他平台类似：可以使用基本Widget组装成一个高级别的Widget，也可以自己在画板上根据特殊需求来画界面。</p><p>接下来，我会分别与你介绍组合和自绘这两种自定义Widget的方式。</p><h2>组装</h2><p>使用组合的方式自定义Widget，即通过我们之前介绍的布局方式，摆放项目所需要的基础Widget，并在控件内部设置这些基础Widget的样式，从而组合成一个更高级的控件。</p><p>这种方式，对外暴露的接口比较少，减少了上层使用成本，但也因此增强了控件的复用性。在Flutter中，<strong>组合的思想始终贯穿在框架设计之中</strong>，这也是Flutter提供了如此丰富的控件库的原因之一。</p><!-- [[[read_end]]] --><p>比如，在新闻类应用中，我们经常需要将新闻Icon、标题、简介与日期组合成一个单独的控件，作为一个整体去响应用户的点击事件。面对这类需求，我们可以把现有的Image、Text及各类布局，组合成一个更高级的新闻Item控件，对外暴露设置model和点击回调的属性即可。</p><p>接下来，我通过一个例子为你说明如何通过组装去自定义控件。</p><p>下图是App Store的升级项UI示意图，图里的每一项，都有应用Icon、名称、更新日期、更新简介、应用版本、应用大小以及更新/打开按钮。可以看到，这里面的UI元素还是相对较多的，现在我们希望将升级项UI封装成一个单独的控件，节省使用成本，以及后续的维护成本。</p><p><img src=\"https://static001.geekbang.org/resource/image/01/cc/0157ffe54a9cd933795af6c8d7141ecc.png?wh=1125*2436\" alt=\"\"></p><center><span class=\"reference\">图1 App Store 升级项UI</span></center><p>在分析这个升级项UI的整体结构之前，我们先定义一个数据结构UpdateItemModel来存储升级信息。在这里为了方便讨论，我把所有的属性都定义为了字符串类型，你在实际使用中可以根据需要将属性定义得更规范（比如，将appDate定义为DateTime类型）。</p><pre><code>class UpdateItemModel {\n  String appIcon;//App图标\n  String appName;//App名称\n  String appSize;//App大小\n  String appDate;//App更新日期\n  String appDescription;//App更新文案\n  String appVersion;//App版本\n  //构造函数语法糖，为属性赋值\n  UpdateItemModel({this.appIcon, this.appName, this.appSize, this.appDate, this.appDescription, this.appVersion});\n}\n</code></pre><p>接下来，我以Google Map为例，和你一起分析下这个升级项UI的整体结构。</p><p>按照子Widget的摆放方向，布局方式只有水平和垂直两种，因此我们也按照这两个维度对UI结构进行拆解。</p><p>按垂直方向，我们用绿色的框把这个UI拆解为上半部分与下半部分，如图2所示。下半部分比较简单，是两个文本控件的组合；上半部分稍微复杂一点，我们先将其包装为一个水平布局的Row控件。</p><p>接下来，我们再一起看看水平方向应该如何布局。</p><p><img src=\"https://static001.geekbang.org/resource/image/dd/21/dd6241906557f49e184a5dc16d33e521.png?wh=1318*736\" alt=\"\"></p><center><span class=\"reference\">图2 升级项UI整体结构示意图</span></center><p>我们先把升级项的上半部分拆解成对应的UI元素：</p><ul>\n<li>左边的应用图标拆解为Image；</li>\n<li>右边的按钮拆解为FlatButton；</li>\n<li>中间部分是两个文本在垂直方向上的组合，因此拆解为Column，Column内部则是两个Text。</li>\n</ul><p>拆解示意图，如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/29/0d/29c1762d9c6271049c9149b5ab06bb0d.png?wh=976*598\" alt=\"\"></p><center><span class=\"reference\">图3 上半部分UI结构示意图</span></center><p>通过与拆解前的UI对比，你就会发现还有3个问题待解决：即控件间的边距如何设置、中间部分的伸缩（截断）规则又是怎样、图片圆角怎么实现。接下来，我们分别来看看。</p><p>Image、FlatButton，以及Column这三个控件，与父容器Row之间存在一定的间距，因此我们还需要在最左边的Image与最右边的FlatButton上包装一层Padding，用以留白填充。</p><p>另一方面，考虑到需要适配不同尺寸的屏幕，中间部分的两个文本应该是变长可伸缩的，但也不能无限制地伸缩，太长了还是需要截断的，否则就会挤压到右边按钮的固定空间了。</p><p>因此，我们需要在Column的外层用Expanded控件再包装一层，让Image与FlatButton之间的空间全留给Column。不过，通常情况下这两个文本并不能完全填满中间的空间，因此我们还需要设置对齐格式，按照垂直方向上居中，水平方向上居左的方式排列。</p><p>最后一项需要注意的是，升级项UI的App Icon是圆角的，但普通的Image并不支持圆角。这时，我们可以使用ClipRRect控件来解决这个问题。ClipRRect可以将其子Widget按照圆角矩形的规则进行裁剪，所以用ClipRRect将Image包装起来，就可以实现图片圆角的功能了。</p><p>下面的代码，就是控件上半部分的关键代码：</p><pre><code>Widget buildTopRow(BuildContext context) {\n  return Row(//Row控件，用来水平摆放子Widget\n    children: &lt;Widget&gt;[\n      Padding(//Paddng控件，用来设置Image控件边距\n        padding: EdgeInsets.all(10),//上下左右边距均为10\n        child: ClipRRect(//圆角矩形裁剪控件\n          borderRadius: BorderRadius.circular(8.0),//圆角半径为8\n          child: Image.asset(model.appIcon, width: 80,height:80)图片控件//\n        )\n      ),\n      Expanded(//Expanded控件，用来拉伸中间区域\n        child: Column(//Column控件，用来垂直摆放子Widget\n          mainAxisAlignment: MainAxisAlignment.center,//垂直方向居中对齐\n          crossAxisAlignment: CrossAxisAlignment.start,//水平方向居左对齐\n          children: &lt;Widget&gt;[\n            Text(model.appName,maxLines: 1),//App名字\n            Text(model.appDate,maxLines: 1),//App更新日期\n          ],\n        ),\n      ),\n      Padding(//Paddng控件，用来设置Widget间边距\n        padding: EdgeInsets.fromLTRB(0,0,10,0),//右边距为10，其余均为0\n        child: FlatButton(//按钮控件\n          child: Text(&quot;OPEN&quot;),\n          onPressed: onPressed,//点击回调\n        )\n      )\n  ]);\n}\n</code></pre><p>升级项UI的下半部分比较简单，是两个文本控件的组合。与上半部分的拆解类似，我们用一个Column控件将它俩装起来，如图4所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/7d/3d/7da3ec3d2068550fc20481ae3457173d.png?wh=960*326\" alt=\"\"></p><center><span class=\"reference\">图4 下半部分UI结构示意图</span></center><p>与上半部分类似，这两个文本与父容器之间存在些间距，因此在Column的最外层还需要用Padding控件给包装起来，设置父容器间距。</p><p>另一方面，Column的两个文本控件间也存在间距，因此我们仍然使用Padding控件将下面的文本包装起来，单独设置这两个文本之间的间距。</p><p>同样地，通常情况下这两个文本并不能完全填满下部空间，因此我们还需要设置对齐格式，即按照水平方向上居左的方式对齐。</p><p>控件下半部分的关键代码如下所示：</p><pre><code>Widget buildBottomRow(BuildContext context) {\n  return Padding(//Padding控件用来设置整体边距\n    padding: EdgeInsets.fromLTRB(15,0,15,0),//左边距和右边距为15\n    child: Column(//Column控件用来垂直摆放子Widget\n      crossAxisAlignment: CrossAxisAlignment.start,//水平方向距左对齐\n      children: &lt;Widget&gt;[\n        Text(model.appDescription),//更新文案\n        Padding(//Padding控件用来设置边距\n          padding: EdgeInsets.fromLTRB(0,10,0,0),//上边距为10\n          child: Text(&quot;${model.appVersion} • ${model.appSize} MB&quot;)\n        )\n      ]\n  ));\n}\n</code></pre><p>最后，我们将上下两部分控件通过Column包装起来，这次升级项UI定制就完成了：</p><pre><code>class UpdatedItem extends StatelessWidget {\n  final UpdatedItemModel model;//数据模型\n  //构造函数语法糖，用来给model赋值\n  UpdatedItem({Key key,this.model, this.onPressed}) : super(key: key);\n  final VoidCallback onPressed;\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(//用Column将上下两部分合体\n        children: &lt;Widget&gt;[\n          buildTopRow(context),//上半部分\n          buildBottomRow(context)//下半部分\n        ]);\n  }\n  Widget buildBottomRow(BuildContext context) {...}\n  Widget buildTopRow(BuildContext context) {...}\n}\n</code></pre><p>试着运行一下，效果如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/87/66/8737980f8b42caf33b77197a7a165f66.png?wh=828*1792\" alt=\"\"></p><center><span class=\"reference\">图5 升级项UI运行示例</span></center><p>搞定！</p><p><strong>按照从上到下、从左到右去拆解UI的布局结构，把复杂的UI分解成各个小UI元素，在以组装的方式去自定义UI中非常有用，请一定记住这样的拆解方法。</strong></p><h2>自绘</h2><p>Flutter提供了非常丰富的控件和布局方式，使得我们可以通过组合去构建一个新的视图。但对于一些不规则的视图，用SDK提供的现有Widget组合可能无法实现，比如饼图，k线图等，这个时候我们就需要自己用画笔去绘制了。</p><p>在原生iOS和Android开发中，我们可以继承UIView/View，在drawRect/onDraw方法里进行绘制操作。其实，在Flutter中也有类似的方案，那就是CustomPaint。</p><p><strong>CustomPaint是用以承接自绘控件的容器，并不负责真正的绘制</strong>。既然是绘制，那就需要用到画布与画笔。</p><p>在Flutter中，画布是Canvas，画笔则是Paint，而画成什么样子，则由定义了绘制逻辑的CustomPainter来控制。将CustomPainter设置给容器CustomPaint的painter属性，我们就完成了一个自绘控件的封装。</p><p>对于画笔Paint，我们可以配置它的各种属性，比如颜色、样式、粗细等；而画布Canvas，则提供了各种常见的绘制方法，比如画线drawLine、画矩形drawRect、画点DrawPoint、画路径drawPath、画圆drawCircle、画圆弧drawArc等。</p><p>这样，我们就可以在CustomPainter的paint方法里，通过Canvas与Paint的配合，实现定制化的绘制逻辑。</p><p>接下来，我们看一个例子。</p><p>在下面的代码中，我们继承了CustomPainter，在定义了绘制逻辑的paint方法中，通过Canvas的drawArc方法，用6种不同颜色的画笔依次画了6个1/6圆弧，拼成了一张饼图。最后，我们使用CustomPaint容器，将painter进行封装，就完成了饼图控件Cake的定义。</p><pre><code>class WheelPainter extends CustomPainter {\n // 设置画笔颜色 \n  Paint getColoredPaint(Color color) {//根据颜色返回不同的画笔\n    Paint paint = Paint();//生成画笔\n    paint.color = color;//设置画笔颜色\n    return paint;\n  }\n\n  @override\n  void paint(Canvas canvas, Size size) {//绘制逻辑\n    double wheelSize = min(size.width,size.height)/2;//饼图的尺寸\n    double nbElem = 6;//分成6份\n    double radius = (2 * pi) / nbElem;//1/6圆\n    //包裹饼图这个圆形的矩形框\n    Rect boundingRect = Rect.fromCircle(center: Offset(wheelSize, wheelSize), radius: wheelSize);\n    // 每次画1/6个圆弧\n    canvas.drawArc(boundingRect, 0, radius, true, getColoredPaint(Colors.orange));\n    canvas.drawArc(boundingRect, radius, radius, true, getColoredPaint(Colors.black38));\n    canvas.drawArc(boundingRect, radius * 2, radius, true, getColoredPaint(Colors.green));\n    canvas.drawArc(boundingRect, radius * 3, radius, true, getColoredPaint(Colors.red));\n    canvas.drawArc(boundingRect, radius * 4, radius, true, getColoredPaint(Colors.blue));\n    canvas.drawArc(boundingRect, radius * 5, radius, true, getColoredPaint(Colors.pink));\n  }\n  // 判断是否需要重绘，这里我们简单的做下比较即可\n  @override\n  bool shouldRepaint(CustomPainter oldDelegate) =&gt; oldDelegate != this;\n}\n//将饼图包装成一个新的控件\nclass Cake extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return CustomPaint(\n        size: Size(200, 200),\n        painter: WheelPainter(),\n      );\n  }\n}\n</code></pre><p>试着运行一下，效果如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/84/fb03c4222e150a29a41d53a773b94984.png?wh=828*1792\" alt=\"\"></p><center><span class=\"reference\">图6 自绘控件示例</span></center><p>可以看到，使用CustomPainter进行自绘控件并不算复杂。这里，我建议你试着用画笔和画布，去实现更丰富的功能。</p><p><strong>在实现视觉需求上，自绘需要自己亲自处理绘制逻辑，而组合则是通过子Widget的拼接来实现绘制意图。</strong>因此从渲染逻辑处理上，自绘方案可以进行深度的渲染定制，从而实现少数通过组合很难实现的需求（比如饼图、k线图）。不过，当视觉效果需要调整时，采用自绘的方案可能需要大量修改绘制代码，而组合方案则相对简单：只要布局拆分设计合理，可以通过更换子Widget类型来轻松搞定。</p><h2>总结</h2><p>在面对一些复杂的UI视图时，Flutter提供的单一功能类控件往往不能直接满足我们的需求。于是，我们需要自定义Widget。Flutter提供了组装与自绘两种自定义Widget的方式，来满足我们对视图的自定义需求。</p><p>以组装的方式构建UI，我们需要将目标视图分解成各个UI小元素。通常，我们可以按照从上到下、从左到右的布局顺序去对控件层次结构进行拆解，将基本视觉元素封装到Column、Row中。对于有着固定间距的视觉元素，我们可以通过Padding对其进行包装，而对于大小伸缩可变的视觉元素，我们可以通过Expanded控件让其填充父容器的空白区域。</p><p>而以自绘的方式定义控件，则需要借助于CustomPaint容器，以及最终承接真实绘制逻辑的CustomPainter。CustomPainter是绘制逻辑的封装，在其paint方法中，我们可以使用不同类型的画笔Paint，利用画布Canvas提供的不同类型的绘制图形能力，实现控件自定义绘制。</p><p>无论是组合还是自绘，在自定义UI时，有了目标视图整体印象后，我们首先需要考虑的事情应该是如何将它化繁为简，把视觉元素拆解细分，变成自己立即可以着手去实现的一个小控件，然后再思考如何将这些小控件串联起来。把大问题拆成小问题后，实现目标也逐渐清晰，落地方案就自然浮出水面了。</p><p>这其实就和我们学习新知识的过程是一样的，在对整体知识概念有了初步认知之后，也需要具备将复杂的知识化繁为简的能力：先理清楚其逻辑脉络，然后再把不懂的知识拆成小点，最后逐个攻破。</p><p>我把今天分享讲的两个例子放到了<a href=\"https://github.com/cyndibaby905/15_custom_ui_demo\">GitHub</a>上，你可以下载后在工程中实际运行，并对照着今天的知识点进行学习，体会在不同场景下，组合和自绘这两种自定义Widget的具体使用方法。</p><h2>思考题</h2><p>最后，我给你留下两道作业题吧。</p><ul>\n<li>请扩展UpdatedItem控件，使其能自动折叠过长的更新文案，并能支持点击后展开的功能。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/bf/bf/bf6c18f1f391a7f9999e21fdcaeff9bf.png?wh=1125*1068\" alt=\"\"></p><ul>\n<li>请扩展Cake控件，使其能够根据传入的double数组（最多10个元素）中数值的大小，定义饼图的圆弧大小。</li>\n</ul><p>欢迎你在评论区给我留言分享你的观点，我会在下一篇文章中等待你！感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":119542,"user_name":"吴小安","can_delete":false,"product_type":"c1","uid":1371398,"ip_address":"","ucode":"EDF8E04F867069","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqr5ibqxYwcSgqPA7s49MZb1vEKKXT4mPTojwiclXkJf3ug26NuzTa6A5gbicR2rAUHdEkUAn13Rr2KQ/132","comment_is_top":false,"comment_ctime":1564624081,"is_pvip":false,"replies":[{"id":"43934","content":"1.大部分都是非可视的容器，并不参与绘制；对于非透明的视图叠加，Flutter在绘制完毕后会做图层合并的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564677895,"ip_address":"","comment_id":119542,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57399198929","product_id":100031001,"comment_content":"大前端的界面不是提倡尽量减少图层的数量？这样一直嵌套下去图层似乎太多，这些布局的控件是不是不算图层？不参与渲染？","like_count":14,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460945,"discussion_content":"1.大部分都是非可视的容器，并不参与绘制；对于非透明的视图叠加，Flutter在绘制完毕后会做图层合并的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564677895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131193,"user_name":"和小胖","can_delete":false,"product_type":"c1","uid":1180727,"ip_address":"","ucode":"406BD7AB987EBF","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/37/aa04f997.jpg","comment_is_top":false,"comment_ctime":1567667865,"is_pvip":false,"replies":[{"id":"52407","content":"很厉害👍！","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1569496600,"ip_address":"","comment_id":131193,"utype":1}],"discussion_count":4,"race_medal":0,"score":"40222373529","product_id":100031001,"comment_content":"关于第二道思考题目的解决方法，请老师看一下：<br><br>&#47;&#47;绘制自定义view，其中画笔 paint ，画布 canvas，而 CustomPainter 负责具体的绘制逻辑处理<br>class WheelPainter extends CustomPainter {<br>  List&lt;double&gt; _list;<br>  List&lt;Color&gt; _listColor;<br>  double _total; &#47;&#47;总份数<br><br>  WheelPainter(this._list, this._listColor);<br><br>  @override<br>  void paint(Canvas canvas, Size size) {<br>    double wheelSize = min(size.width, size.height) &#47; 2; &#47;&#47;饼图的尺寸<br>    &#47;&#47;用一个矩形框来包裹饼图<br>    Rect boundingRect = Rect.fromCircle(<br>        center: Offset(wheelSize, wheelSize), radius: wheelSize);<br>    &#47;&#47;求出数组中所有数值的和<br>    _total = _list.reduce((value, element) =&gt; value + element);<br>    print(&quot;总份额是：$_total&quot;);<br>    &#47;&#47;求出每一份所占的角度<br>    double radius = (2 * pi) &#47; _total; &#47;&#47;求出每一份的弧度<br>    print(&quot;总角度是${2 * pi},每份额角度是:$radius&quot;);<br>    &#47;&#47;循环绘制每一份扇形<br>    for (int i = 0; i &lt; _list.length; i++) {<br>      &#47;&#47; 求出初始角度<br>      double startRadius;<br>      if (i == 0) {<br>        startRadius = 0;<br>      } else {<br>        startRadius =<br>            _list.sublist(0, i).reduce((value, element) =&gt; value + element) *<br>                radius;<br>      }<br>      &#47;&#47;求出滑过角度，即当前份额乘以每份所占角度<br>      double sweepRadius = radius * _list[i];<br>      print(&quot;起始角度：$startRadius,划过角度：$sweepRadius&quot;);<br><br>      &#47;&#47;&#47; 绘制扇形，第一个参数是绘制矩形所在的矩形，第二个参数是起始角度，第三个参数是矩形划过的角度<br>      &#47;&#47;&#47; 第三个参数代表扇形是否是实心，否则就只是绘制边框是空心的，最后一个参数是画笔<br>      canvas.drawArc(boundingRect, startRadius, sweepRadius, true,<br>          getPaintByColor(_listColor[i]));<br>    }<br>  }<br><br>  &#47;&#47;根据不同的 color 来获取对应的画笔<br>  Paint getPaintByColor(Color color) {<br>    Paint paint = Paint();<br>    paint.color = color;<br>    return paint;<br>  }<br><br>  &#47;&#47;判断是否需要重绘<br>  @override<br>  bool shouldRepaint(CustomPainter oldDelegate) =&gt; oldDelegate != this;<br>}<br><br>Padding getCustomPaint() {<br>  return Padding(<br>      padding: EdgeInsets.all(10),<br>      child: CustomPaint(<br>        size: Size(200, 200), <br>        painter: WheelPainter(<br>            List.of([1.0, 2.0, 3.0, 4.0, 20]),<br>            List.of([<br>              Colors.red,<br>              Colors.blue,<br>              Colors.green,<br>              Colors.amber,<br>              Colors.black54<br>            ])),<br>      ));<br>}","like_count":10,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466329,"discussion_content":"很厉害👍！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569496600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/a9/9abbe7a4.jpg","nickname":"神三元","note":"","ucode":"0FB2E7C0683599","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160675,"discussion_content":"          _list.sublist(0,  i).reduce((value, element) => value + element) *\n                radius;这里完全没必要再次遍历，循环的时间复杂度变成了O(n^2)。用一个标志位累加记录已经绘制的大小就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580823016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1728818,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/61/32/e9046955.jpg","nickname":"入夜、渐微凉","note":"","ucode":"5DF20DE7EC67B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70458,"discussion_content":"建议判断一下_list和_listcolor的数组大小，防止for循环里面通过_listColor[i]拿不到画笔的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575359152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1384326,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1f/86/3a7eeac4.jpg","nickname":"leslee","note":"","ucode":"DB1CBF9F8D16BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37577,"discussion_content":"推荐 _listcolor 改为 _colorList...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571640011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126754,"user_name":"wanggw","can_delete":false,"product_type":"c1","uid":1075472,"ip_address":"","ucode":"82FF3F87827D9B","user_header":"https://static001.geekbang.org/account/avatar/00/10/69/10/0c6f68d7.jpg","comment_is_top":false,"comment_ctime":1566464675,"is_pvip":false,"replies":[{"id":"47637","content":"如果想简单点，可以预估一个文本长度（比如100），超过这个文本长度的两行文字，统一都展示“More”按钮；如果想精确点，算文本高度可以用TextPainter。具体用法可以参考auto_size_text控件：https:&#47;&#47;github.com&#47;leisim&#47;auto_size_text","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566890847,"ip_address":"","comment_id":126754,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18746333859","product_id":100031001,"comment_content":"功能算是差不多实现了，但是还存在一个核心的问题不知道应该解决，就是我怎么获取Text展示文本的行数，我需要行数才能控制 more 按钮的显示和隐藏，否则我默认超过2行显示 more 按钮，当文本只有1行的时候，more 按钮也显示了😂。暂时还没找到解决方案。这是我写的例子：https:&#47;&#47;github.com&#47;wanggw911&#47;flutter_hello&#47;blob&#47;master&#47;lib&#47;widget&#47;Listview02.dart","like_count":5,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464150,"discussion_content":"如果想简单点，可以预估一个文本长度（比如100），超过这个文本长度的两行文字，统一都展示“More”按钮；如果想精确点，算文本高度可以用TextPainter。具体用法可以参考auto_size_text控件：https://github.com/leisim/auto_size_text","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566890847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1458151,"avatar":"https://static001.geekbang.org/account/avatar/00/16/3f/e7/a3587c38.jpg","nickname":"领琾","note":"","ucode":"D7F73049FCAC2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5925,"discussion_content":"看看这个：https://www.codercto.com/a/65156.html\ndemo: https://github.com/lingjye/Flutter-Learning/blob/master/flutter_sample/lib/sample_app/user/update_page.dart","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566539918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1075472,"avatar":"https://static001.geekbang.org/account/avatar/00/10/69/10/0c6f68d7.jpg","nickname":"wanggw","note":"","ucode":"82FF3F87827D9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1458151,"avatar":"https://static001.geekbang.org/account/avatar/00/16/3f/e7/a3587c38.jpg","nickname":"领琾","note":"","ucode":"D7F73049FCAC2C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35450,"discussion_content":"谢谢指导，我看看去！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571281491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5925,"ip_address":""},"score":35450,"extra":""}]}]},{"had_liked":false,"id":190742,"user_name":"朱文博","can_delete":false,"product_type":"c1","uid":1911849,"ip_address":"","ucode":"EE76811A9513BC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gYGeUZCuibranJRR5aL5ib5w48hXibEMb8MZDZjF5icOK7n48WkfIjT9lF5iaiaptIfTPvUp7Qp9ibn1m3f7icmFroYz8g/132","comment_is_top":false,"comment_ctime":1584689013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14469590901","product_id":100031001,"comment_content":"class UpdateItemInfoRender extends StatefulWidget {<br>  final String info;<br><br>  UpdateItemInfoRender({Key key, this.info}) : super(key: key);<br><br>  @override<br>  State&lt;StatefulWidget&gt; createState() {<br>    &#47;&#47; TODO: implement createState<br>    return _UpdateItemInfoRender();<br>  }<br>}<br><br>class _UpdateItemInfoRender extends State&lt;UpdateItemInfoRender&gt;<br>    with WidgetsBindingObserver {<br>  bool flag = false;<br><br>  void initState() {<br>    super.initState();<br>    WidgetsBinding.instance.addPostFrameCallback((_) {<br>      setState(() {<br>        flag = context.size.height &gt; 40.0;<br>      });<br>    });<br>  }<br><br>  @override<br>  Widget build(BuildContext context) {<br>    &#47;&#47; TODO: implement build<br>    return Stack(<br>      children: &lt;Widget&gt;[<br>        Text(<br>          &#39;${widget.info}&#39;,<br>          style: TextStyle(fontSize: 14),<br>          maxLines: flag ? 2 : null,<br>        ),<br>        flag ? Positioned(<br>                right: -5,<br>                bottom: 0,<br>                child: FlatButton(<br>                  onPressed: () =&gt; setState(() {<br>                    flag = !flag;<br>                  }),<br>                  child: Container(<br>                    width: 60,<br>                    padding: EdgeInsets.only(left: 20),<br>                    decoration: BoxDecoration(<br>                        gradient: LinearGradient(colors: [<br>                      Colors.white.withOpacity(.7),<br>                      Colors.white.withOpacity(1),<br>                      Colors.white.withOpacity(1),<br>                      Colors.white.withOpacity(1),<br>                    ])),<br>                    alignment: Alignment.center,<br>                    child: Text(<br>                      &#39;more&#39;,<br>                      style: TextStyle(color: Colors.blueAccent, fontSize: 14),<br>                    ),<br>                  ),<br>                ),<br>              )<br>            : Container()<br>      ],<br>    );<br>  }<br>}","like_count":4},{"had_liked":false,"id":119923,"user_name":"獸丶","can_delete":false,"product_type":"c1","uid":1126854,"ip_address":"","ucode":"CFC6A1F51D988C","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/c6/238570f9.jpg","comment_is_top":false,"comment_ctime":1564731616,"is_pvip":false,"replies":[{"id":"44424","content":"后面会捎带讲一点点","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565017428,"ip_address":"","comment_id":119923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14449633504","product_id":100031001,"comment_content":"老师，Flutter代码规范方面会讲吗，如果代码全写在一个Dart文件里，有点太冗杂了，还是说遵循SRP，一个类一个Dart文件？","like_count":3,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461132,"discussion_content":"后面会捎带讲一点点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565017428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119569,"user_name":"大土豆","can_delete":false,"product_type":"c1","uid":1121636,"ip_address":"","ucode":"67445DC3EC9DB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","comment_is_top":false,"comment_ctime":1564627619,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"14449529507","product_id":100031001,"comment_content":"一看到Canvas，就知道又把rn和weex给秒杀了，这两家伙没有画布。。。没法绘制","like_count":4,"discussions":[{"author":{"id":1141647,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6b/8f/a10f7714.jpg","nickname":"cc","note":"","ucode":"0F632601DFB101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3626,"discussion_content":"RN 里有 ART 类似画布","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564646625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121149,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLE984L1W91iaob2WNWXrBvaS6Iribfy4TyOSEHbicoFicd5755qQXrFmZzjCkB8XxBYY7FUYu1hN0lQ/132","nickname":"ErChen","note":"","ucode":"C162AD9B652E1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197096,"discussion_content":"最近有个需求 weex绘制图片保存相册 ，只能用原生moudle去实现 头大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583406360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190801,"user_name":"朱文博","can_delete":false,"product_type":"c1","uid":1911849,"ip_address":"","ucode":"EE76811A9513BC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gYGeUZCuibranJRR5aL5ib5w48hXibEMb8MZDZjF5icOK7n48WkfIjT9lF5iaiaptIfTPvUp7Qp9ibn1m3f7icmFroYz8g/132","comment_is_top":false,"comment_ctime":1584693262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10174627854","product_id":100031001,"comment_content":"第二题<br>class WheelPainter extends CustomPainter {<br>  List&lt;double&gt; list;<br><br>  WheelPainter(this.list);<br><br>  &#47;&#47;设置不同颜色的画笔<br>  Paint getColorPint(Color color) {<br>    return Paint()..color = color;<br>  }<br><br>  @override<br>  void paint(Canvas canvas, Size size) {<br>    &#47;&#47;计算饼图半径<br>    double wheelSize = min(size.width, size.height) &#47; 2;<br>    int num = list.length;<br>    double sum = list.reduce((current, next) =&gt; current + next);<br>    Rect rect = Rect.fromCircle(center: Offset(wheelSize, wheelSize), radius: wheelSize);<br>    double start = 0;<br>    double step = 0;<br>    for (var i = 0; i &lt; num; i++) {<br>      step = (2 * pi) * (list[i] &#47; sum);<br>      canvas.drawArc(rect, start, step, true,<br>          getColorPint(i % 2 == 0 ? Colors.red : Colors.green));<br>      start += step;<br>    }<br>  }<br><br>  @override<br>  bool shouldRepaint(CustomPainter oldDelegate) {<br>    &#47;&#47; TODO: implement shouldRepaint<br>    return oldDelegate != this;<br>  }<br>}<br><br>class Cake extends StatelessWidget {<br>  @override<br>  Widget build(BuildContext context) {<br>    &#47;&#47; TODO: implement build<br>    return CustomPaint(<br>      size: Size(200, 200),<br>      painter: WheelPainter([1, 2, 3, 4, 4, 2]),<br>    );<br>  }<br>}","like_count":2},{"had_liked":false,"id":139026,"user_name":"zzz","can_delete":false,"product_type":"c1","uid":1041455,"ip_address":"","ucode":"352964E5D793DA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/2f/fb01f76d.jpg","comment_is_top":false,"comment_ctime":1570528440,"is_pvip":false,"replies":[{"id":"54813","content":"MaterialApp和CupertinoApp封装了一些基本的App功能，比如导航栈管理、屏幕管理，国际化，以及对应的脚手架等，自己实现没有必要也基本不可能。样式就是一个配置而已，你可以自己定义不同平台的配置规则（具体参考夜间模式这一节）。另外他俩对Android&#47;iOS的关键设计差异（如导航栏样式、状态栏样式、弹窗样式等），在框架内就进行了区分实现，所以如果你不定制样式，也无需过多担心在iOS上长得太像Android。<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1571284413,"ip_address":"","comment_id":139026,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10160463032","product_id":100031001,"comment_content":"请问下，再混合开发的场景下,module类型的对于root Widget，我们必须使用MaterialApp或者CupertinoApp二选一么？如果不使用这两个基础的widgetApp，除了不能享受封装好的Theme、封装好的Widget组件这些便利外，是否有无法实现的基础功能（比如在iOS中的右滑返回等等）？ 同时想问下目前国内很多App在安卓上的表现都不是Material风格的，同时也不完全是Cupertino风格，所以在实际应用中，主流的做法是使用 MaterialApp&#47;CupertinoApp&#47;完全自定义 这三种的哪一种呢？以及在开发过程中的是否有什么弊端呢？","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469754,"discussion_content":"MaterialApp和CupertinoApp封装了一些基本的App功能，比如导航栈管理、屏幕管理，国际化，以及对应的脚手架等，自己实现没有必要也基本不可能。样式就是一个配置而已，你可以自己定义不同平台的配置规则（具体参考夜间模式这一节）。另外他俩对Android/iOS的关键设计差异（如导航栏样式、状态栏样式、弹窗样式等），在框架内就进行了区分实现，所以如果你不定制样式，也无需过多担心在iOS上长得太像Android。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571284413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","nickname":"三件事","note":"","ucode":"BCC867C8961A24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306629,"discussion_content":"也帮我解决了我的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600335277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083534,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/8e/9562b0a7.jpg","nickname":"川子","note":"","ucode":"5EFEC192D06A16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238008,"discussion_content":"好\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587204929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119715,"user_name":"davidzhou","can_delete":false,"product_type":"c1","uid":1018904,"ip_address":"","ucode":"F4B2929F4111DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/18/7cbc34eb.jpg","comment_is_top":false,"comment_ctime":1564662737,"is_pvip":false,"replies":[{"id":"43939","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564678139,"ip_address":"","comment_id":119715,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10154597329","product_id":100031001,"comment_content":"我的思路这样，先自定义一个statefulwidget，里面用过一个变量控制两个text，因为text是statelesswidget，无法动态去刷新，一个widget设置Maxlines=2，另一个不设置，more是一个floatbutton，点击事件里面实现setstate改变先前定义的变量就行了","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461034,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564678139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1478054,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8d/a6/a511c0d3.jpg","nickname":"徐宏伟","note":"","ucode":"BD819465C6BCDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370246,"discussion_content":"这种方式如果文本小于2行的时候是不是也会显示more按钮，点击more按钮时交互上表现是无任何变化吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619344203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160829,"user_name":"Neil 陈荣","can_delete":false,"product_type":"c1","uid":1018719,"ip_address":"","ucode":"CE66700BE7E225","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/5f/ecf0e687.jpg","comment_is_top":false,"comment_ctime":1576041875,"is_pvip":false,"replies":[{"id":"63382","content":"没啥问题，组件比较多的情况下，唯一需要关注的是限制界面的刷新范围，可以参考37节分享，用重绘边界去提前做一些缓存。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1577436454,"ip_address":"","comment_id":160829,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5871009171","product_id":100031001,"comment_content":"老师，我想绘制一个围棋游戏的棋盘，并在上面实现落子、提子等各种操作。大致估计了一下，如果用组合的方案，算上棋子，棋盘，各种线，至少会有接近400个 widget. 这种情况下性能会有问题吗？我想知道 widget 数量一般在多少以内采用组合不会出现性能问题，这个有没有一个指导性的最佳实践？如果一上来就用自绘的方案的话，担心各种操作的交互功能不容易实现。谢谢！","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477493,"discussion_content":"没啥问题，组件比较多的情况下，唯一需要关注的是限制界面的刷新范围，可以参考37节分享，用重绘边界去提前做一些缓存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577436454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018719,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8b/5f/ecf0e687.jpg","nickname":"Neil 陈荣","note":"","ucode":"CE66700BE7E225","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104478,"discussion_content":"多谢老师！我回头试一下看。之前还没注意到这个优化点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577437326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130627,"user_name":"浣熊特工队","can_delete":false,"product_type":"c1","uid":1600719,"ip_address":"","ucode":"0EF7CB66397647","user_header":"https://static001.geekbang.org/account/avatar/00/18/6c/cf/baa4ee4d.jpg","comment_is_top":false,"comment_ctime":1567496674,"is_pvip":false,"replies":[{"id":"50745","content":"可以看下这个issue：https:&#47;&#47;github.com&#47;flutter&#47;flutter&#47;issues&#47;13631<br>另外这种效果可以考虑用Button遮挡来实现","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1568182990,"ip_address":"","comment_id":130627,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5862463970","product_id":100031001,"comment_content":"请问老师，more按钮那里的左右渐隐是怎么实现的啊，我用TextOverflow.fade是向下渐隐的啊","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466038,"discussion_content":"可以看下这个issue：https://github.com/flutter/flutter/issues/13631\n另外这种效果可以考虑用Button遮挡来实现","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568182990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111830,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/16/20562cdf.jpg","nickname":"离尘不离人คิดถึง","note":"","ucode":"89F0FBDB0DB6CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37485,"discussion_content":"使用 Container 组件的 decoration 属性，绘制一个从右到左的线性渐变白色底","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571623153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127113,"user_name":"🌙","can_delete":false,"product_type":"c1","uid":1606578,"ip_address":"","ucode":"D70F6C3AF8AA1B","user_header":"https://static001.geekbang.org/account/avatar/00/18/83/b2/e83dd93c.jpg","comment_is_top":false,"comment_ctime":1566557357,"is_pvip":false,"replies":[{"id":"47346","content":"把组件拆小","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566792784,"ip_address":"","comment_id":127113,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861524653","product_id":100031001,"comment_content":"如果说尽量使用stateless，但是只要需要交互都必须是stateful吧？怎么尽量来使用成stateless呢？","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464325,"discussion_content":"把组件拆小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566792784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122470,"user_name":"楼外楼","can_delete":false,"product_type":"c1","uid":1243180,"ip_address":"","ucode":"791F2CA15B8F1F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/sgEfkeMSIIibeH4l0HS8uwM6PGY3DSHoW5tV9l1hDQ06tr3OnI7F545Wdxsh59rqOKnzjLUpCcEqic3P9zZbKzPQ/132","comment_is_top":false,"comment_ctime":1565400460,"is_pvip":false,"replies":[{"id":"45248","content":"不参与绘制，仅参与布局，或是仅提供数据的组件","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565628334,"ip_address":"","comment_id":122470,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860367756","product_id":100031001,"comment_content":"哪些算是非可视容器呢？","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462266,"discussion_content":"不参与绘制，仅参与布局，或是仅提供数据的组件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565628334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119490,"user_name":"张细敏","can_delete":false,"product_type":"c1","uid":1198505,"ip_address":"","ucode":"764F7CF54E44D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/49/a9/eede1288.jpg","comment_is_top":false,"comment_ctime":1564619026,"is_pvip":false,"replies":[{"id":"43935","content":"对，通过Canvas","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564677909,"ip_address":"","comment_id":119490,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5859586322","product_id":100031001,"comment_content":"老师，Flutter其中一个游戏引擎flame，也是通过自绘的方式实现的吗？","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460926,"discussion_content":"对，通过Canvas","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564677909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182218,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0a/0a/5043ff2d.jpg","nickname":"哥有故事...","note":"","ucode":"B6180423454225","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3736,"discussion_content":"老师好，提前问个问题，因为iOS内存泄露比较严重，每新建一个FlutterView都会造成新的内存泄露，请问美团那边是怎么解决这个问题的呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564738686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280416,"user_name":"夏目🐳","can_delete":false,"product_type":"c1","uid":1101227,"ip_address":"","ucode":"4ED932E1F66F76","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/ab/1c3dc64b.jpg","comment_is_top":false,"comment_ctime":1614187685,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1614187685","product_id":100031001,"comment_content":"为什么我的谷歌图片那行高度很小，怎么自定义高度呢？","like_count":0,"discussions":[{"author":{"id":1089200,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9e/b0/9334802d.jpg","nickname":"snow_wolf","note":"","ucode":"E2D25A23991C1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592301,"discussion_content":"使用Container 再包一下呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667292661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280397,"user_name":"夏目🐳","can_delete":false,"product_type":"c1","uid":1101227,"ip_address":"","ucode":"4ED932E1F66F76","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/ab/1c3dc64b.jpg","comment_is_top":false,"comment_ctime":1614177773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614177773","product_id":100031001,"comment_content":"怎么画k线图呢","like_count":0},{"had_liked":false,"id":280356,"user_name":"夏目🐳","can_delete":false,"product_type":"c1","uid":1101227,"ip_address":"","ucode":"4ED932E1F66F76","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/ab/1c3dc64b.jpg","comment_is_top":false,"comment_ctime":1614166764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614166764","product_id":100031001,"comment_content":"赞👍","like_count":0},{"had_liked":false,"id":237237,"user_name":"伊利丹怒风","can_delete":false,"product_type":"c1","uid":1042222,"ip_address":"","ucode":"D4C3DC84E7020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/2e/f317f6ad.jpg","comment_is_top":false,"comment_ctime":1595753231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595753231","product_id":100031001,"comment_content":"有了CustomPainter可以开发游戏了…","like_count":0},{"had_liked":false,"id":236928,"user_name":"VI jolie","can_delete":false,"product_type":"c1","uid":1742621,"ip_address":"","ucode":"1CBC214FFEB546","user_header":"https://static001.geekbang.org/account/avatar/00/1a/97/1d/4bac8dbf.jpg","comment_is_top":false,"comment_ctime":1595589510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595589510","product_id":100031001,"comment_content":"老师关于思考题有没有您的解决方法啊","like_count":0},{"had_liked":false,"id":221690,"user_name":"smilingmiao","can_delete":false,"product_type":"c1","uid":1157910,"ip_address":"","ucode":"B48F429563EF74","user_header":"https://static001.geekbang.org/account/avatar/00/11/ab/16/0f83cab6.jpg","comment_is_top":false,"comment_ctime":1590566669,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590566669","product_id":100031001,"comment_content":"交个作业<br><br>class WheelPainter extends CustomPainter {<br>  final List&lt;double&gt; arcs; &#47;&#47; 存放各个圆弧所占整体的比例值<br>  WheelPainter(this.arcs);<br><br>  &#47;&#47; 设置画笔颜色<br>  Paint getColoredPaint(Color color) { &#47;&#47; 根据颜色返回不同的画笔<br>    Paint paint = Paint();<br>    paint.color = color;<br>    return paint;<br>  }<br><br>  int random(int maxBound) {<br>    return Random().nextInt(maxBound);<br>  }<br>  <br>  Color randomColor() {<br>    return Color.fromARGB(255, random(255), random(255), random(255));<br>  }<br><br>  double min(a, b) {<br>    if (a &gt;= b) {<br>      return b;<br>    } else {<br>      return a;<br>    }<br>  }<br><br>  @override<br>  void paint(Canvas canvas, Size size) { &#47;&#47; 绘制逻辑<br>    double wheelSize = min(size.width, size.height) &#47; 2;<br>    Rect boundingRect = Rect.fromCircle(center: Offset(wheelSize, wheelSize), radius: wheelSize);<br><br>    double startAngle = 0;<br>    arcs.forEach((arc) {<br>      print(arc);<br>      double sweepAngle = (2 * pi) * arc;<br>      canvas.drawArc(boundingRect, startAngle, sweepAngle, true, getColoredPaint(randomColor()));<br>      startAngle = startAngle + (2 * pi) * arc;<br>    });<br>  }<br><br>  &#47;&#47; 判断是否需要重绘，这里我们简单的做下比较即可<br>  @override<br>  bool shouldRepaint(CustomPainter oldDelegate) =&gt; oldDelegate != this;<br>}","like_count":0},{"had_liked":false,"id":200701,"user_name":"大同","can_delete":false,"product_type":"c1","uid":1941597,"ip_address":"","ucode":"361C515D0B8951","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQhKjycaNrpV1dEaM9rOBztA6fVGHIRiaribkwuLoJLb3AdnyyreJthWb2PZpDTM3YrSI4HUl6ATcQ/132","comment_is_top":false,"comment_ctime":1585640335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585640335","product_id":100031001,"comment_content":"第一题的文本大家怎么判断是否能显示下，是否显示more按钮？","like_count":0},{"had_liked":false,"id":180526,"user_name":"雪ノ下雪乃が好き","can_delete":false,"product_type":"c1","uid":1595420,"ip_address":"","ucode":"DDDFBD43A103FB","user_header":"https://static001.geekbang.org/account/avatar/00/18/58/1c/be74727a.jpg","comment_is_top":false,"comment_ctime":1582305070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582305070","product_id":100031001,"comment_content":"请老师看下 现在我是这样写的第二题<br> @override<br>  void paint(Canvas canvas, Size size) {<br>    &#47;&#47; TODO: implement paint<br><br>    double minSize = min(size.width, size.height);<br>    double raidusTotal = 0;<br>    for(int i = 0; i&lt;_paintList.length; i++){<br>      raidusTotal += _paintList[i];<br>    }<br><br>    Rect rect = Rect.fromCircle(center: Offset(minSize &#47; 2, minSize &#47; 2),radius: minSize);<br><br>    double startPoint = 0;<br>    for(int i = 0; i&lt;_paintList.length; i++){<br>      double endRaidus = (2 * pi) *  _paintList[i] &#47; raidusTotal;<br>      canvas.drawArc(rect, startPoint, endRaidus, true, getPaintColor(getRandomColor()));<br>      startPoint = endRaidus;<br>    }<br>  }<br><br>现在又两个问题<br>1 我这里面缺少了1&#47;4圆 是start和end的弧度设置有问题吗？<br>2 我发现现在flutter把这个圆渲染了两次，这是什么问题导致的？","like_count":0},{"had_liked":false,"id":152704,"user_name":"Captain","can_delete":false,"product_type":"c1","uid":1595885,"ip_address":"","ucode":"57B4E60ABA60AF","user_header":"https://static001.geekbang.org/account/avatar/00/18/59/ed/15465917.jpg","comment_is_top":false,"comment_ctime":1574066652,"is_pvip":false,"replies":[{"id":"58773","content":"math.dart","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574132916,"ip_address":"","comment_id":152704,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574066652","product_id":100031001,"comment_content":"老师，pi是在哪里定义的？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474905,"discussion_content":"math.dart","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574132916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144349,"user_name":"毛哥来了","can_delete":false,"product_type":"c1","uid":1404451,"ip_address":"","ucode":"5A3D61FD29EE69","user_header":"https://static001.geekbang.org/account/avatar/00/15/6e/23/9fce5f72.jpg","comment_is_top":false,"comment_ctime":1571901547,"is_pvip":false,"replies":[{"id":"56188","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1572321062,"ip_address":"","comment_id":144349,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1571901547","product_id":100031001,"comment_content":"我是用Builder(builder: (Buildcontext context){})来创建description那个Text组件，然后就可以通过context.size.height获取Text的高度，然后就能判断按钮何时展示了","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471897,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572321062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1504782,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f6/0e/e6904ef1.jpg","nickname":"SoaringHeart","note":"","ucode":"F83263C9805688","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371424,"discussion_content":"同求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619765865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1742621,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/97/1d/4bac8dbf.jpg","nickname":"VI jolie","note":"","ucode":"1CBC214FFEB546","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293363,"discussion_content":"有代码可以参考下么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595510794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143294,"user_name":"leslee","can_delete":false,"product_type":"c1","uid":1384326,"ip_address":"","ucode":"DB1CBF9F8D16BF","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/86/3a7eeac4.jpg","comment_is_top":false,"comment_ctime":1571663215,"is_pvip":false,"replies":[{"id":"58624","content":"看一下是不是头文件没引","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574051191,"ip_address":"","comment_id":143294,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571663215","product_id":100031001,"comment_content":"老师我把你的案例跑起来了, 但是我把 我把计数器那个案列的代码里面的 MaterialApp 的 themeData 的 primaryColor 的颜色改成你的 ligjtblue[800] 后他报错, 报 type color is not a subtype of type materialcolor 我看了文档确实颜色是分好几个类型,   可是为什么你的可以运行我的不可以运行........","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471470,"discussion_content":"看一下是不是头文件没引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574051191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1384326,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1f/86/3a7eeac4.jpg","nickname":"leslee","note":"","ucode":"DB1CBF9F8D16BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37986,"discussion_content":"在 stackoverflow 找到了 原来是 primaryColor 跟 primarySwatch 的不一样， primaryColor 类似一个颜色的集合 所以 Colors.lightBlut[200] 这样的取单个色的写法是类型不符的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571709833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142920,"user_name":"离尘不离人คิดถึง","can_delete":false,"product_type":"c1","uid":1111830,"ip_address":"","ucode":"89F0FBDB0DB6CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/16/20562cdf.jpg","comment_is_top":false,"comment_ctime":1571586804,"is_pvip":false,"replies":[{"id":"59787","content":"你参考36节的布局调试分享，直接在Flutter Inspector里改布局参数","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574754162,"ip_address":"","comment_id":142920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571586804","product_id":100031001,"comment_content":"功能都实现了，抽象了一个有状态的组件：https:&#47;&#47;github.com&#47;lichenbuliren&#47;flutter_study&#47;blob&#47;master&#47;lib&#47;components&#47;appUpdateItemCard.dart；<br>基本思路：<br>1、用 Contaner  的 decoration 绘制一个圆角白色渐变的白底；<br>2、抽取 UI 组件，内部维护一个 『showMore』 状态<br>3、描述文本组件根据 『showMore』 来动态设置 『maxLines』属性值，并且设置 『overflow』为省略号<br>唯一存在的小瑕疵就是我的 FlatButton  控件中的文本一直存在 padding；手动设置了 0 也不生效；因为我看该章节里面的 『more』文本应该是靠右对齐的，这里麻烦老师帮忙看下，我尝试了各种方案都没法实现","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471327,"discussion_content":"你参考36节的布局调试分享，直接在Flutter Inspector里改布局参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574754162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134878,"user_name":"🌝","can_delete":false,"product_type":"c1","uid":1449696,"ip_address":"","ucode":"7A92D6136DBF21","user_header":"https://static001.geekbang.org/account/avatar/00/16/1e/e0/238fda97.jpg","comment_is_top":false,"comment_ctime":1568945617,"is_pvip":false,"replies":[{"id":"53507","content":"可以试试shape、width、height这几个属性","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1570514740,"ip_address":"","comment_id":134878,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568945617","product_id":100031001,"comment_content":"我把描述信息这块提成了一个有状态的widget，这样性能应该会更好些<br><br>class DescriptionModel extends StatefulWidget {<br>  String desc;<br><br>  DescriptionModel({Key key, this.desc}) : super(key: key);<br><br>  _DescriptionModelState createState() =&gt; _DescriptionModelState();<br>}<br><br>class _DescriptionModelState extends State&lt;DescriptionModel&gt; {<br><br>  bool flag = false;<br><br>  void changeFlag (){<br>    print(flag);<br>    setState(() {<br>      flag = !flag;<br>    });<br>  }<br><br>  @override<br>  Widget build(BuildContext context) {<br>    return Stack(<br>      children: &lt;Widget&gt;[<br>        Text(widget.desc, maxLines: flag ? null : 2,),<br>        Positioned(<br>          bottom: 0,<br>          right: -5,<br>          child: FlatButton(<br>            &#47;&#47; color: Colors.white,<br>            highlightColor: Colors.transparent,<br>            splashColor: Colors.transparent,<br>            onPressed: changeFlag,<br>            child: Container(child: Text(&#39;More&#39;, style: TextStyle(color: Colors.blue),), padding: EdgeInsets.fromLTRB(5,0,5,0), color: Colors.white,)<br>          ),<br>        )<br>      ],<br>    );<br>  }<br>}<br><br>功能是实现了，但是这个按钮摆放的位置让我很头疼，而且 按钮的样式也不知道该怎么去改变，我想去改变按钮的宽高以便让按钮显示的更正常些。","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467939,"discussion_content":"可以试试shape、width、height这几个属性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570514740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134876,"user_name":"🌝","can_delete":false,"product_type":"c1","uid":1449696,"ip_address":"","ucode":"7A92D6136DBF21","user_header":"https://static001.geekbang.org/account/avatar/00/16/1e/e0/238fda97.jpg","comment_is_top":false,"comment_ctime":1568945427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568945427","product_id":100031001,"comment_content":"我把描述信息这一块提成了一个有状态的widget","like_count":0},{"had_liked":false,"id":130952,"user_name":"和小胖","can_delete":false,"product_type":"c1","uid":1180727,"ip_address":"","ucode":"406BD7AB987EBF","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/37/aa04f997.jpg","comment_is_top":false,"comment_ctime":1567582721,"is_pvip":false,"replies":[{"id":"49187","content":"传入的数组是数值类型，数组有几个元素饼图就画几块，而饼图每一块的面积占比对应着该元素的数值大小","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1567599808,"ip_address":"","comment_id":130952,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567582721","product_id":100031001,"comment_content":"老师，没太明白第二道题的意思，传入的数组的值是弧度吗？那这样的话，传入的数组的所有元素加起来得够 2π 是吗？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466210,"discussion_content":"传入的数组是数值类型，数组有几个元素饼图就画几块，而饼图每一块的面积占比对应着该元素的数值大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567599808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120922,"user_name":"灰灰","can_delete":false,"product_type":"c1","uid":1217408,"ip_address":"","ucode":"E33546A64B2CC3","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/80/ccf2f428.jpg","comment_is_top":false,"comment_ctime":1565013800,"is_pvip":false,"replies":[{"id":"44445","content":"功能没问题，不过你的按钮位置把Text位置挤压了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565019576,"ip_address":"","comment_id":120922,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565013800","product_id":100031001,"comment_content":"class UpdateItemWidget extends StatefulWidget {<br>  final model;<br>  final onPressed;<br><br>  UpdateItemWidget({Key key, this.model, this.onPressed}) : super(key: key);<br>  @override<br>  State&lt;StatefulWidget&gt; createState() {<br>    return _UpdateItemState();<br>  }<br>}<br>class _UpdateItemState extends State&lt;UpdateItemWidget&gt; {<br>  bool collapse = true;<br>  @override<br>  void initState() {<br>    super.initState();<br>  }<br>  @override<br>  Widget build(BuildContext context) {<br>    return Column(<br>      children: &lt;Widget&gt;[<br>        buildTopRow(context),<br>        buildBottomRow(context),<br>      ],<br>    );<br>  }<br> ....<br>  Widget buildBottomRow(BuildContext context) {<br>    return Padding(<br>      padding: EdgeInsets.fromLTRB(15, 0, 15, 0),<br>      child: Column(<br>        crossAxisAlignment: CrossAxisAlignment.start,<br>        children: &lt;Widget&gt;[<br>          Row(<br>            children: &lt;Widget&gt;[<br>              Expanded(<br>                child: Text(<br>                  widget.model.appDescription,<br>                  maxLines: collapse ? 2 : null,<br>                  overflow: collapse ? TextOverflow.ellipsis : null),<br>              ),<br>              Container(<br>                width: !collapse ? 0 : null,<br>                child: FlatButton(<br>                  onPressed: () {<br>                    setState(() {collapse = false;});<br>                    },<br>                  child: Text(&#39;More&#39;, style: TextStyle(color: Colors.blue),),<br>                )<br>              ),<br>            ],<br>          ),<br>          Padding(<br>            padding: EdgeInsets.fromLTRB(0, 10, 0, 0),<br>            child: Text(&quot;${widget.model.appVersion} • ${widget.model.appSize} MB&quot;),<br>          )<br>        ],<br>      ),<br>    );<br>  }<br>}<br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461534,"discussion_content":"功能没问题，不过你的按钮位置把Text位置挤压了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565019576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1217408,"avatar":"https://static001.geekbang.org/account/avatar/00/12/93/80/ccf2f428.jpg","nickname":"灰灰","note":"","ucode":"E33546A64B2CC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4075,"discussion_content":"对 我想了想觉得 即使是只显示两行的时候 也应该让文本都显示清楚 所以没有用stack","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565095084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119639,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564643520,"is_pvip":false,"replies":[{"id":"44438","content":"你把FlatButton换成RaisedButton就明白了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565018846,"ip_address":"","comment_id":119639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564643520","product_id":100031001,"comment_content":"老师，用Positioned组件设置<br>right: 0,<br>bottom: 0,<br>FlatButton组件总对齐不了最下边。","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460991,"discussion_content":"你把FlatButton换成RaisedButton就明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565018846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119638,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564643237,"is_pvip":false,"replies":[{"id":"44437","content":"你把FlatButton换成RaisedButton就明白了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565018823,"ip_address":"","comment_id":119638,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564643237","product_id":100031001,"comment_content":"class BottomRow extends StatefulWidget {<br>  const BottomRow({<br>    Key key,<br>    this.model,<br>  }): super(key: key);<br><br>  final UpdatedItemModel model;<br><br>  @override<br>  State&lt;StatefulWidget&gt; createState() {<br>    return _BottomRow();<br>  }<br>}<br><br>class _BottomRow extends State&lt;BottomRow&gt; {<br><br>  UpdatedItemModel model;<br>  bool open = false;<br><br>  @override<br>  Widget build(BuildContext context) {<br>    return Padding(<br>      padding: EdgeInsets.fromLTRB(15, 0, 15, 0),<br>      child: Column(<br>        crossAxisAlignment: CrossAxisAlignment.start,<br>        children: &lt;Widget&gt;[<br>          Stack(<br>            children: &lt;Widget&gt;[<br>              Container(<br>                child: Text(widget.model.appDescription, maxLines: open ? 100 : 2,),<br>              ),<br>              Positioned(<br>                right: 0,<br>                bottom: 0,<br>                child: FlatButton(<br>                  onPressed: () {<br>                    setState(() {<br>                      open = !open;<br>                    });<br>                  },<br>                  child: Container(<br>                    decoration: const BoxDecoration(<br>                      gradient: LinearGradient(<br>                        colors: &lt;Color&gt;[<br>                          Colors.white,<br>                          Colors.grey,<br>                        ]<br>                      )<br>                    ),<br>                    child: Text(&#39;OPEN&#39;, style: TextStyle(color: Color(0xFF007AFE), fontSize: 14),),<br>                    padding: EdgeInsets.all(2),<br>                  ),<br><br>                )<br>              )<br>            ],<br>          ),<br>          Padding(<br>            padding: EdgeInsets.fromLTRB(0, 10, 0, 0),<br>            child: Text(&#39;${widget.model.appDate} • ${widget.model.appSize} MB&#39;),<br>          ),<br>        ],<br>      ),<br>    );<br>  }<br><br>}","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460990,"discussion_content":"你把FlatButton换成RaisedButton就明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565018823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595187,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/fy6KTCIk6JPGdOYbvsXJ4q02RMM1bibjwFkDFpjPp7GtibRAqBEvEEtL4EuT9vtkker02OkHE0ia783AopyHd4REQ/132","nickname":"yuejinljx","note":"","ucode":"8F991138D27C0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3638,"discussion_content":"这控件需要在stack里用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564651709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119553,"user_name":"muse","can_delete":false,"product_type":"c1","uid":1021878,"ip_address":"","ucode":"8A1ED2ED04D8FA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/b6/d7bc4ae6.jpg","comment_is_top":false,"comment_ctime":1564624975,"is_pvip":true,"replies":[{"id":"43933","content":"去issue里面找找看有没有类似的反馈：https:&#47;&#47;github.com&#47;flutter&#47;flutter&#47;issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+textfield","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564677784,"ip_address":"","comment_id":119553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564624975","product_id":100031001,"comment_content":"老师，flutter的textfield长按复制，把输入框的内容删除后长按就不弹出复制了，有什么解决方案吗","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460952,"discussion_content":"去issue里面找找看有没有类似的反馈：https://github.com/flutter/flutter/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+textfield","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564677784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}