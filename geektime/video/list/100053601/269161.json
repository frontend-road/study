{"id":269161,"title":"41 | 如何设计一个分布式TopK系统实现实时防爬虫？","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-distributed\">https://gitee.com/geektime-geekbang/geektime-distributed</a></p>","comments":[{"had_liked":false,"id":287818,"user_name":"hello zero","can_delete":false,"product_type":"c3","uid":1028052,"ip_address":"","ucode":"D1F4B2A7D4635B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/d4/59e2bfd4.jpg","comment_is_top":false,"comment_ctime":1618177820,"is_pvip":false,"replies":[{"id":104799,"content":"日志采集的Poller&#47;Agent有很多，如Elastic Filebeat，Fluentd等等，也可以按需自己定制开发。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1618669171,"ip_address":"","comment_id":287818,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，分布式架构里的Poller和Agent，有没有现成的组件，还是需要定制开发？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518428,"discussion_content":"日志采集的Poller/Agent有很多，如Elastic Filebeat，Fluentd等等，也可以按需自己定制开发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618669171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240584,"user_name":"那只羊","can_delete":false,"product_type":"c3","uid":1104184,"ip_address":"","ucode":"9F2C0E12E7A463","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/38/853be0c3.jpg","comment_is_top":false,"comment_ctime":1596985252,"is_pvip":false,"replies":[{"id":88950,"content":"大规模通知系统可以考虑基于MQ + Workers模式搭建，MQ可以基于分布式的Kafka，Workers(相当于消费者)可以按需扩容。\n\n另外参考（可能需要翻墙）\nhttps:&#47;&#47;blog.gojekengineering.com&#47;how-we-manage-a-million-push-notifications-an-hour-549a1e3ca2c2\nhttps:&#47;&#47;speakerdeck.com&#47;cubicdaiya&#47;building-high-performance-push-notification-server-in-go\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1597074088,"ip_address":"","comment_id":240584,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师可以分享一下，基于长连接（TCP或者UDP）场景下的应用，比如IM社交，客服系统，大规划消息推送服务；这些应用在进行分布式实践中的一些思路吗？\n我自己设计了一套基于UDP协议的推送服务（Netty），暂且叫push_server吧！通讯双方，push_server做了：登录（验证）、用户在线列表（查找用户是否在线）、消息透传（核心能力）；\n目前已经将服务优化到吞吐可每秒大约4万左右，但是还是处于单机模式，最多就是加了台热备机，因为将后来不可能一直使用这种模式，想现在着手改造成分布式服务的架构，但是在项目实践过程中，感觉没有web应用的好做，苦恼于此，希望老师能指点下，非常感谢！！","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503494,"discussion_content":"大规模通知系统可以考虑基于MQ + Workers模式搭建，MQ可以基于分布式的Kafka，Workers(相当于消费者)可以按需扩容。\n\n另外参考（可能需要翻墙）\nhttps://blog.gojekengineering.com/how-we-manage-a-million-push-notifications-an-hour-549a1e3ca2c2\nhttps://speakerdeck.com/cubicdaiya/building-high-performance-push-notification-server-in-go\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597074088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355124,"user_name":"满心","can_delete":false,"product_type":"c3","uid":2078544,"ip_address":"湖南","ucode":"CDBC39F0344C8B","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b7/50/0628cac8.jpg","comment_is_top":false,"comment_ctime":1661095896,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，有个疑问，爬虫计算任务在归并计算的时候，怎么保证所有聚合服务已经提交结果到DB当中？如果某一个聚合服务由于网络等原因，没有及时将聚合结果更新到db，那最后归并计算出来的结果就会不准确","like_count":0},{"had_liked":false,"id":315246,"user_name":"Geek_1njxto","can_delete":false,"product_type":"c3","uid":1007207,"ip_address":"","ucode":"35EE42207936DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/67/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1633766817,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"这里面有一个疑问，就是日志的消费者只看到一个。\n如果是扩展到多个，那就需要用分布式的堆了吧？还是各自找，最后再聚合？不过这里就有准确性的问题；\n这里特别提到了分区，也就是可能根据ip进行一定程度消息分区，好像也能解决，最后将ip的访问量聚合的时候再对比一下，找出最高的；","like_count":0,"discussions":[{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415182,"discussion_content":"感觉可以根据ip规则分区。有点像消息队列把相同的ip打到同一个messagequeue上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637023707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}