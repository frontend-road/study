{"id":325538,"title":"开篇词 | 这一次，我们从“丑”代码出发","content":"<p>你好，我是郑晔！我又回来了！</p><p>我在“极客时间”里已经写了两个专栏，分别是《<a href=\"https://time.geekbang.org/column/intro/100022301\">10x 程序员工作法</a>》和《<a href=\"https://time.geekbang.org/column/intro/100052601\">软件设计之美</a>》，从工作原则和设计原则两个方面对软件开发的各种知识进行了探讨，帮助你搭建了一个开启程序员精进之路的框架。</p><p>不过，无论懂得多少道理，程序员依然要回归到写代码的本职工作上。所以，这次我准备和你从代码的坏味道出发，一起探讨如何写代码。</p><h2>千里之堤毁于蚁穴</h2><p>为什么要讲这个话题，就让我们先从一次代码评审讲起。在一次代码评审中，我注意到了这样一段代码：</p><pre><code>public void approve(final long bookId) {\n  ...\n  book.setReviewStatus(ReviewStatus.APPROVED);\n  ...\n}\n</code></pre><p>这是在一个服务类里面写的，它的主要逻辑就是从仓库中找出一个作品，然后，将它的状态设置为审核通过，再将它存回去。前后的代码都属于常规的代码，但是，设置作品评审状态的代码引起了我的注意，于是有了下面这段对话。</p><blockquote>\n<p>我：这个地方为什么要这么写？<br>\n同事：我要将作品的审核状态设置为审核通过。<br>\n我：这个我知道，但为什么要在这里写 setter 呢？<br>\n同事：你的意思是？<br>\n我：这个审核的状态是作品的一个内部状态，为什么服务需要知道它呢？也就是说，这里通过 setter，将一个类的内部行为暴露了出来，这是一种破坏封装的做法。</p>\n</blockquote><p>同事被我说动了，于是这段代码变成了下面这个样子：</p><!-- [[[read_end]]] --><pre><code>public void approve(final long bookId) {\n  ...\n  book.approve();\n  ...\n}\n</code></pre><p>之所以我注意到这段代码，完全是因为这里用到了 setter。在我看来，setter 就是一个坏味道，每次一看到 setter，我就会警觉起来。</p><p>setter 的出现，是对于封装的破坏，它把一个类内部的实现细节暴露了出来。我在《软件设计之美》中讲过，面向对象的封装，关键点是行为，而使用 setter 多半只是做了数据的聚合，缺少了行为的设计，这段代码改写后的 approve 函数，就是这里缺少的行为。</p><p>再扩展一步，setter 通常还意味着变化，而我在《软件设计之美》中讲函数式编程时也说过，一个好的设计应该尽可能追求不变性。所以，setter 也是一个提示符，告诉我们，这个地方的设计可能有问题。</p><p>你看，一个小小的 setter，背后却隐藏着这么多的问题。而所有这些问题，都会让代码在未来的日子变得更加不可维护，这就是软件团队陷入泥潭的开始。</p><p>我也一直和我团队的同学说，“写代码”有两个维度：正确性和可维护性，不要只关注正确性。能把代码写对，是每个程序员的必备技能，<strong>但能够把代码写得更具可维护性，这是一个程序员从业余迈向职业的第一步</strong>。</p><h2>将坏味道重构为整洁代码</h2><p>或许你也认同代码要有可维护性，也看了很多书，比如《<a href=\"https://book.douban.com/subject/1173548/\">程序设计实践</a>》《<a href=\"https://book.douban.com/subject/4199741/\">代码整洁之道</a>》等等，这些无一不是经典中的经典，甚至连怎么改代码，都有《<a href=\"https://book.douban.com/subject/30468597/\">重构</a>》等着我们。没错，这些书我都读过，也觉得从中受益匪浅。</p><p>不过，回到真实的工作中，我发现了一个无情的事实：<strong>程序员们大多会认同这些书上的观点，但每个人对于这些观点的理解却是千差万别的。</strong></p><p>比如书上说：“命名是要有意义的”，但什么样的命名才算是有意义的呢？有的人只理解到不用 xyz 命名，虽然他起出了自认为“有意义”的名字，但这些名字依然是难以理解的。事实上，大部分程序员在真实世界中面对的代码，就是这样难懂的代码。</p><p>这是因为，<strong>很多人虽然知道正面的代码是什么样子，却不知道反面的代码是什么样子</strong>。这些反面代码，Martin Fowler在《重构》这本书中给起了一个好名字，代码的坏味道（Bad Smell）。</p><p>在我写代码的这20多年里，一直对代码的坏味道非常看重，因为它是写出好代码的起点。有对代码坏味道的嗅觉，能够识别出坏味道，接下来，你才有机会去“重构（Refactoring）”，把代码一点点打磨成一个整洁的代码（Clean Code）。Linux内核开发者Linus Torvalds在行业里有个爱骂人的坏名声，原因之一就是他对于坏味道的不容忍。</p><p>所以，我也推荐那些想要提高自己编程水平的人读《重构》，如果时间比较少，就去读第三章“代码的坏味道”。</p><p>不过，《重构》中的“代码的坏味道”意图虽好，但却需要一个人对于整洁代码有着深厚的理解，才能识别出这些坏味道。否则，即使你知道有哪些坏味道，但真正有坏味道的代码出现在你面前时，你仍然无法认得它。</p><p>比如，你可以看看 Info、Data、Manager 是不是代码库经常使用的词汇，而它们往往是命名没有经过仔细思考的地方。在很多人眼中，这些代码是没有问题的。正因如此，才有很多坏味道的代码才堂而皇之地留在你的眼皮底下。</p><p>所以，我才想做一个讲坏味道的专栏，把最常见的坏味道直接用代码形式展现出来。在这个专栏里，我给你的都是即学即用的“坏味道”，我不仅会告诉你典型的坏味道是什么，而且也能让你在实际的编程过程中发现它们。比如前面那个例子里面的 setter，只要它一出现，你就需要立即警觉起来。</p><p>这里我也整理了一份“坏味道自查表”，把一些明显的“坏味道”信号列了出来，你可以和自己的代码做对比。</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/f1/2e543283f04aa3706d60a7b1e0f257f1.jpg?wh=2284*3705\" alt=\"\"></p><p>除了为你列出来哪些代码有坏味道之外，我还会给你讲支撑这些“坏味道”之所以为“坏味道”的原因，比如说：长方法和大类之所以为坏味道，因为它们都违背了单一职责的原则。</p><p>有坏味道的代码需要经过重构才能长成新的样子，在这个专栏里，我也会提到一些重构的手法，比如，改名（Rename）、提取方法（Extract Method）等等。在今天，拜许多能力强大的 IDE 所赐，重构已经变得越来越自动化，《重构》里的很多手法已经成为了 IDE 中的一个选项。</p><p>我还想给你一个安全提示，即便 IDE 功能再强大，也不要忘了重构的重要根基：测试。即便像 Java 这样，IDE 功能已经非常强大了，依然会有一些像反射之类的场景可能会从自动化重构的鼻子底下溜走。所以，重构一段代码之前，最好能够给它写下测试，确保改动前后的代码，功能上是一致的。</p><p>如果你订阅过我的《<a href=\"https://time.geekbang.org/column/intro/100022301\">10x 程序员工作法</a>》和《<a href=\"https://time.geekbang.org/column/intro/100052601\">软件设计之美</a>》，你就会发现，三个专栏一脉相承，这些背后的道理恰恰就是我在那两个专栏中已经提到过的内容。所以，三个专栏一并服用，效果会更佳。</p><h2>写在最后</h2><p>最后，还是要做一个自我介绍。我叫郑晔，一个写代码超过二十年的程序员，做过与软件开发的各种工作：编代码、带团队、做咨询、写开源。正如前面所说，我已经在极客时间平台上写了两个专栏，分享我在软件开发中的各种思考。这次，我会带你进入到我的基本功里，帮你一起写好代码。</p><p>十年前，我在 InfoQ 写过一个专栏《<a href=\"https://www.infoq.cn/article/2010/11/ugly-code-0\">代码之丑</a>》，把一些真实世界的代码展示了出来，让大家看到丑陋代码是什么样子的。</p><p>不少读者都表示，那个专栏让他们受益匪浅。不过，那个系列只是我日常工作的随手之作，没有更好地整理。这个专栏就是脱胎于InfoQ上的《代码之丑》，我对相关内容进行了更系统地整理，保证即便看过那个《代码之丑》专栏，你依然能够在这里有所收获。</p><p>这是一条通往代码精进之路，我愿意与你一起前行，成为你在这条路上的向导。如果你想摆脱平庸的小白程序员状态，成为一个更优秀的程序员，那么，请加入我的专栏，让我们一起修炼，日益精进写代码的手艺！</p>","comments":[{"had_liked":false,"id":270607,"user_name":"Changing","can_delete":false,"product_type":"c1","uid":1946408,"ip_address":"","ucode":"41E58DE281C75F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b3/28/e398d406.jpg","comment_is_top":false,"comment_ctime":1609169610,"is_pvip":false,"replies":[{"id":"98132","content":"后面会有一讲专门讨论这个问题，简言之，就是缺了行为，暴露了细节，解决办法就是，引入行为，封装细节。","user_name":"作者回复","comment_id":270607,"uid":"1258861","ip_address":"","utype":1,"ctime":1609197558,"user_name_real":"郑晔"}],"discussion_count":3,"race_medal":0,"score":"70328646346","product_id":100068401,"comment_content":"看到这个Setter，有个疑惑。在现在的项目中，service层经常出现各种setter，基本是把所有逻辑都放到service层了。之前网上查询了一些资料，把这种称之为“失血模型”。代码这样写有哪些坏处？在既有的项目中，如果要改变的话，需要从哪里做起呢？","like_count":17,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512687,"discussion_content":"后面会有一讲专门讨论这个问题，简言之，就是缺了行为，暴露了细节，解决办法就是，引入行为，封装细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609197558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1360256,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c1/80/36245147.jpg","nickname":"LeaveStyle","note":"","ucode":"110B02D7969974","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354248,"discussion_content":"可以用lombok的@with来修改对象的单个参数，@Builder(toBuilder = true) 来修改对象的多个参数，这两个方法不会破坏原有对象，而是创建一个新对象，这样保证了对象的不可变性，更加函数式的操作。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615261470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2613059,"avatar":"https://static001.geekbang.org/account/avatar/00/27/df/43/0773c064.jpg","nickname":"不会MATLAB","note":"","ucode":"725795EDB38F5A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402583,"discussion_content":"贫血模式应对简单的业务比较方便，应对复杂的业务容易出问题，《设计模式之美》专栏有提到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633919122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271846,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1609839016,"is_pvip":true,"replies":[{"id":"98588","content":"多谢你对于我老专栏的总结，欢迎回来！","user_name":"作者回复","comment_id":271846,"uid":"1258861","ip_address":"","utype":1,"ctime":1609851813,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":1,"score":"27379642792","product_id":100068401,"comment_content":"前两个专栏都还没有学完的老读者又来了。<br><br>两个专栏其实已经听了不止一遍，一直想再认真学习一遍，却没能做到。<br><br>结果现在已经脱离了编程一线，转型项目经理了，不过还是希望终有一天可以继续写代码。<br><br>写 setter 的原因很有可能是因为那些教程或者代码生成工具，set、get 不亦乐乎。<br><br>info、Data、Manager 我之前也常用。<br><br>去 InfoQ 看了一下十年前的专栏，摘抄一下要点：<br><br>1. 让判断条件做真正的选择<br>2. 判断条件里面不允许多个条件的组合<br>3. switch 陷阱<br>4. 重复，是最为常见的坏味道<br>5. 大心脏是不受喜欢的（函数应该只做一件事）<br>6. 代码的声明和使用应尽量接近<br>7. 工欲善其事，必先利其器（Effective 你的语言）<br>8. 有时候，没有选择是幸福的（两个字符串类）<br>9. 不允许出现多层缩进<br>10. 条件编译里面不允许包含多条执行语句<br>11. 封装全局变量（封装出个行为来）<br>12. 尽量编写无状态方法<br>13. 当容器开始嵌套容器，请考虑封装<br>14. 使用工厂方法处理多个构造函数","like_count":7,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513064,"discussion_content":"多谢你对于我老专栏的总结，欢迎回来！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609851813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270542,"user_name":"邵俊达","can_delete":false,"product_type":"c1","uid":1281460,"ip_address":"","ucode":"4B7DACE6DBCF95","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/b4/ff82483d.jpg","comment_is_top":false,"comment_ctime":1609153403,"is_pvip":false,"replies":[{"id":"98117","content":"我们一起加油！","user_name":"作者回复","comment_id":270542,"uid":"1258861","ip_address":"","utype":1,"ctime":1609162274,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"27378957179","product_id":100068401,"comment_content":"期待已久，老师前两个专栏都学完了并且都学了不只一遍，收获良多。继续跟老师学习，打磨写代码的手艺。","like_count":6,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512663,"discussion_content":"我们一起加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609162274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270592,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1609167209,"is_pvip":false,"replies":[{"id":"98135","content":"看运气了，哈哈。","user_name":"作者回复","comment_id":270592,"uid":"1258861","ip_address":"","utype":1,"ctime":1609198195,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"18789036393","product_id":100068401,"comment_content":"看看我的代码写的多丑","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512681,"discussion_content":"看运气了，哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609198195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277209,"user_name":"李威","can_delete":false,"product_type":"c1","uid":1460961,"ip_address":"","ucode":"3409A9390BD1FD","user_header":"https://static001.geekbang.org/account/avatar/00/16/4a/e1/2a498473.jpg","comment_is_top":false,"comment_ctime":1612316746,"is_pvip":false,"replies":[{"id":"100599","content":"先确认你们自己的策略是什么，如果是短时间用用，就抛弃，然后自己重写，还是就打算以这个系统为核心一直维护下去，不同的策略方案是不同的。<br><br>如果要抛弃，就是另起炉灶，按照好的标准要求新代码；如果是维护，每做一块，就重构一块，并且向负责人说明情况，做好投入技术债的准备。","user_name":"作者回复","comment_id":277209,"uid":"1258861","ip_address":"","utype":1,"ctime":1612340585,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"14497218634","product_id":100068401,"comment_content":"老师，接手一个买回来的商业产品，做二次开发，里面有大量重复代码，此时需要新增一些功能，给的工期短，简单粗暴的办法是继续复制粘贴，再修改修改就可以上线使用，实际上，我们现在就是这么干的。我想请问的是，针对这种烂代码，要去修改它，是应该坚持边加功能边重构，还是一顿复制粘贴用起来先，后续再重构，还是怎么处理比较好。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514962,"discussion_content":"先确认你们自己的策略是什么，如果是短时间用用，就抛弃，然后自己重写，还是就打算以这个系统为核心一直维护下去，不同的策略方案是不同的。\n\n如果要抛弃，就是另起炉灶，按照好的标准要求新代码；如果是维护，每做一块，就重构一块，并且向负责人说明情况，做好投入技术债的准备。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612340585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270520,"user_name":"G小调","can_delete":false,"product_type":"c1","uid":1145529,"ip_address":"","ucode":"8F3D50E2C1A559","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/b9/c3d3a92f.jpg","comment_is_top":false,"comment_ctime":1609149590,"is_pvip":true,"replies":[{"id":"98107","content":"严格地说，是把对数据的操作封装了。","user_name":"作者回复","comment_id":270520,"uid":"1258861","ip_address":"","utype":1,"ctime":1609162033,"user_name_real":"郑晔"}],"discussion_count":3,"race_medal":0,"score":"14494051478","product_id":100068401,"comment_content":"public void approve(final long bookId) {  ...  book.approve();  ...}<br><br>book.approve() 是对setter做了封装吗","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512657,"discussion_content":"严格地说，是把对数据的操作封装了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609162033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2425556,"avatar":"https://static001.geekbang.org/account/avatar/00/25/02/d4/1e0bb504.jpg","nickname":"Peter","note":"","ucode":"5E57A0FE948966","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":540791,"discussion_content":"您好，但是我还是有个疑问，当有其他状态的时候不是又要封装一个book.xxx xxx函数吗？那么有一个状态就会有一个xxx函数，这样会不会造成需要写很多感受的情况，而原来只需要用setter传入这些状态进去就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640170483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":512657,"ip_address":""},"score":540791,"extra":""}]},{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566268,"discussion_content":"重点在于从业务角度出发，产生了行为，而不仅仅只是数据封装。另外，还隔离了业务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650637945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270628,"user_name":"Seed2009","can_delete":false,"product_type":"c1","uid":1362235,"ip_address":"","ucode":"E21E429D3D1F8F","user_header":"https://static001.geekbang.org/account/avatar/00/14/c9/3b/ead87c38.jpg","comment_is_top":false,"comment_ctime":1609199587,"is_pvip":false,"replies":[{"id":"98148","content":"都不记得我在哪个公司留下过足迹了。😁","user_name":"作者回复","comment_id":270628,"uid":"1258861","ip_address":"","utype":1,"ctime":1609206449,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"10199134179","product_id":100068401,"comment_content":"我前同事说老师才给他们做过一周的技术指导，对您的技术很膜拜。","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512694,"discussion_content":"都不记得我在哪个公司留下过足迹了。😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609206449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271020,"user_name":"Hobo","can_delete":false,"product_type":"c1","uid":1041960,"ip_address":"","ucode":"BE991F04E66ECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/28/1d3aace3.jpg","comment_is_top":false,"comment_ctime":1609372221,"is_pvip":false,"replies":[{"id":"98323","content":"为什么是一个方法而不是多个方法呢？用一个方法的结果就是一个setter的变体。","user_name":"作者回复","comment_id":271020,"uid":"1258861","ip_address":"","utype":1,"ctime":1609469986,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"5904339517","product_id":100068401,"comment_content":"老师，如果我需要封装一个方法能够对类的一个字段进行多种状态的更改应该怎么封装比较好？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512819,"discussion_content":"为什么是一个方法而不是多个方法呢？用一个方法的结果就是一个setter的变体。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609469986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1041960,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e6/28/1d3aace3.jpg","nickname":"Hobo","note":"","ucode":"BE991F04E66ECD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341001,"discussion_content":"明白了，多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610257037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270803,"user_name":"Ankhetsin","can_delete":false,"product_type":"c1","uid":1028469,"ip_address":"","ucode":"3CA233D08D4A72","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b1/75/60a71bbd.jpg","comment_is_top":false,"comment_ctime":1609286866,"is_pvip":false,"replies":[{"id":"98523","content":"写出几百行的 SQL，一般都是些存储过程，而存储过程早在很多年前就已经被列到不推荐的做法里了。如果是普通的语句，除非是做某些特殊的统计，一般不建议这么做。<br><br>一个 Bean 为什么要有上百个字段呢？以我的经验看，这通常是没有想清楚就把所有的东西都塞进来了。所以，应该做的是，做职责分解，把不同的内容放到不同的接口去。","user_name":"作者回复","comment_id":270803,"uid":"1258861","ip_address":"","utype":1,"ctime":1609761958,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"5904254162","product_id":100068401,"comment_content":"一个几百行的长SQL算不算方法过长呢？一个bean有上百个字段光设置属性的值并转json不电网络库的代码肯定不止40行了。这个怎么解决？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512757,"discussion_content":"写出几百行的 SQL，一般都是些存储过程，而存储过程早在很多年前就已经被列到不推荐的做法里了。如果是普通的语句，除非是做某些特殊的统计，一般不建议这么做。\n\n一个 Bean 为什么要有上百个字段呢？以我的经验看，这通常是没有想清楚就把所有的东西都塞进来了。所以，应该做的是，做职责分解，把不同的内容放到不同的接口去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609761958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270544,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1609153742,"is_pvip":false,"replies":[{"id":"98115","content":"我也努力啊！","user_name":"作者回复","comment_id":270544,"uid":"1258861","ip_address":"","utype":1,"ctime":1609162239,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"5904121038","product_id":100068401,"comment_content":"老粉前来打卡。以上书籍都拜读过。就看郑老师如何讲出花来了～","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512665,"discussion_content":"我也努力啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609162239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270511,"user_name":"wang_acmilan","can_delete":false,"product_type":"c1","uid":1025858,"ip_address":"","ucode":"AE0E3A5005A108","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/42/f510bb91.jpg","comment_is_top":false,"comment_ctime":1609148329,"is_pvip":false,"replies":[{"id":"98106","content":"有才，你好！","user_name":"作者回复","comment_id":270511,"uid":"1258861","ip_address":"","utype":1,"ctime":1609162002,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"5904115625","product_id":100068401,"comment_content":"来了来了，那个男人，他lei了。<br>这次的主题是:那味不对啊～","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512653,"discussion_content":"有才，你好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609162002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270493,"user_name":"明","can_delete":false,"product_type":"c1","uid":1607502,"ip_address":"","ucode":"34FF545704EA8A","user_header":"https://static001.geekbang.org/account/avatar/00/18/87/4e/98173974.jpg","comment_is_top":false,"comment_ctime":1609145596,"is_pvip":false,"replies":[{"id":"98116","content":"背诵还是要求太高了，哈哈。","user_name":"作者回复","comment_id":270493,"uid":"1258861","ip_address":"","utype":1,"ctime":1609162263,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"5904112892","product_id":100068401,"comment_content":"耶！ 又多了一门“朗读并背诵全文”的课程😃😃","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512648,"discussion_content":"背诵还是要求太高了，哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609162263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355663,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"北京","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1661607929,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661607929","product_id":100068401,"comment_content":"代码质量，规范，功能，性能，可扩展性，可维护性，缺一不可。","like_count":0},{"had_liked":false,"id":349999,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1656499042,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656499042","product_id":100068401,"comment_content":"行业习惯，mvc框架中习惯性的将model里面的变量都生成getter setter，也知道这样是不符合面向对象编程规范的，因为setter破坏了四大特性的封装。但是大家都这么写，反而严格去把数据与逻辑绑定成本会高很多。当然这是个坏习惯。","like_count":0},{"had_liked":false,"id":346815,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1653455121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653455121","product_id":100068401,"comment_content":"加油","like_count":0},{"had_liked":false,"id":344794,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1054958,"ip_address":"","ucode":"7501AD9C0C4A70","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","comment_is_top":false,"comment_ctime":1651795521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651795521","product_id":100068401,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":342244,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1650124126,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650124126","product_id":100068401,"comment_content":"学起来～","like_count":0},{"had_liked":false,"id":326070,"user_name":"Q","can_delete":false,"product_type":"c1","uid":1608415,"ip_address":"","ucode":"001AA40EAE31E4","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/df/b1577245.jpg","comment_is_top":false,"comment_ctime":1639361660,"is_pvip":false,"replies":[{"id":"118420","content":"还有其他三个专栏😄","user_name":"作者回复","comment_id":326070,"uid":"1258861","ip_address":"","utype":1,"ctime":1639406221,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"1639361660","product_id":100068401,"comment_content":"从极客早报过来的，新鲜啊！代码之丑，代码坏味道（Bad Smell），也是第一次订阅郑晔老师的课，学完赶紧订阅其他两个专栏去。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538447,"discussion_content":"还有其他三个专栏😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639406221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1608415,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8a/df/b1577245.jpg","nickname":"Q","note":"","ucode":"001AA40EAE31E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":538641,"discussion_content":"好的，一起订阅😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639467386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":538447,"ip_address":""},"score":538641,"extra":""}]}]},{"had_liked":false,"id":275053,"user_name":"favorlm","can_delete":false,"product_type":"c1","uid":1120997,"ip_address":"","ucode":"CFD52127AA6E1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/e5/6899701e.jpg","comment_is_top":false,"comment_ctime":1611286919,"is_pvip":false,"replies":[{"id":"99791","content":"如果 mapper 是一个接口的话，就还好。因为它把具体的实现隔离开了。","user_name":"作者回复","comment_id":275053,"uid":"1258861","ip_address":"","utype":1,"ctime":1611301585,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"1611286919","product_id":100068401,"comment_content":"我们现在的service层就是saveUser,serviceImpl里调用一个mybatis的mapper.save(user)，请问这样的设计形式是否是混淆了业务和技术，请问有什么建议可以优化?","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514196,"discussion_content":"如果 mapper 是一个接口的话，就还好。因为它把具体的实现隔离开了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611301585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272622,"user_name":"CityAnimal","can_delete":false,"product_type":"c1","uid":1139902,"ip_address":"","ucode":"206491F70572AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/64/be/12c37d15.jpg","comment_is_top":false,"comment_ctime":1610179015,"is_pvip":true,"replies":[{"id":"98822","content":"加油，希望这个专栏能够帮助到你。","user_name":"作者回复","comment_id":272622,"uid":"1258861","ip_address":"","utype":1,"ctime":1610195991,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"1610179015","product_id":100068401,"comment_content":"在最近的项目中逐渐意识到测试和重构的重要性，但如何落地还在摸索中；共同努力，消除臭味","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513328,"discussion_content":"加油，希望这个专栏能够帮助到你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610195991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271349,"user_name":"咱是吓大的","can_delete":false,"product_type":"c1","uid":1292324,"ip_address":"","ucode":"A47C6DA5C00C6F","user_header":"https://static001.geekbang.org/account/avatar/00/13/b8/24/039f84a2.jpg","comment_is_top":false,"comment_ctime":1609573241,"is_pvip":true,"replies":[{"id":"98529","content":"我不了解，不妄加评论。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609762156,"ip_address":"","comment_id":271349,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1609573241","product_id":100068401,"comment_content":"以前听说过一个段子，说某家银行训练验钞员时只用真钞而从不用假钞，这样训练出的验钞员一碰到假钞马上就能识别出真伪，而真假交叉训练反而会弄糊涂。不知道老师怎么看这个问题？","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512906,"discussion_content":"我不了解，不妄加评论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609762156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042793,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e9/69/779b48c2.jpg","nickname":"苏忆","note":"","ucode":"B8BE78280CCB99","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406683,"discussion_content":"我是理解 银行的做法其实和老师的做法是一致的 都是用的对比 真钞真在哪儿自然接触多了 就知道验证哪几个点了 而少于这几个点 比这些东西不一样或者多出来一些点 那假钞无疑  但是 写代码难在于没有统一的标准 我这么写就是好的 谁也不敢说 就算是23种设计模式 也是根据场景使用哪个好来推荐使用 也不是唯一确定的 但是坏代码坏的原因肯定那么几种是固定的 所以反过来看 意思差不多  真就那么几样来验证 那么就真着来看 坏既然就那么几种公认是坏的 那么去掉坏的那几样 基本就都是好的了 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634820656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270694,"user_name":"DK","can_delete":false,"product_type":"c1","uid":1111300,"ip_address":"","ucode":"CB621C9A0D7FF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/04/2468935f.jpg","comment_is_top":false,"comment_ctime":1609220145,"is_pvip":false,"replies":[{"id":"98520","content":"如果是顺着你的思路思考这个问题，那答案应该是把状态作为一个参数传递进去。<br><br>但这样思考问题，还是按照暴露细节的方式在思考，我在《软件设计之美》里讲过，封装应该是考虑行为的，究竟是什么行为导致状态的变化，这是我们应该思考的问题。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609761437,"ip_address":"","comment_id":270694,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609220145","product_id":100068401,"comment_content":"有个疑问想向老师请教，那个setter例子，如果一个状态可以改成多种，是应该为了保持可读性重复写多次差不多的代码，还是将要修改的目标状态当成参数也传进去呢","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512717,"discussion_content":"如果是顺着你的思路思考这个问题，那答案应该是把状态作为一个参数传递进去。\n\n但这样思考问题，还是按照暴露细节的方式在思考，我在《软件设计之美》里讲过，封装应该是考虑行为的，究竟是什么行为导致状态的变化，这是我们应该思考的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609761437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270629,"user_name":"AFlymamba","can_delete":false,"product_type":"c1","uid":1359224,"ip_address":"","ucode":"FAEAF3BD3E5146","user_header":"https://static001.geekbang.org/account/avatar/00/14/bd/78/be976ab3.jpg","comment_is_top":false,"comment_ctime":1609199796,"is_pvip":true,"replies":[{"id":"98153","content":"意识到自己以前写的代码不好，就是一个巨大的进步。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609206616,"ip_address":"","comment_id":270629,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609199796","product_id":100068401,"comment_content":"培养这方面的意思，形成一套清单供自查，前期避免，还是得从不同角度思考它为啥丑，再结合清单学习，修正，补充清单，前段时间写的一个大事务模块，边改边骂自己","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512695,"discussion_content":"意识到自己以前写的代码不好，就是一个巨大的进步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609206616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270620,"user_name":"Geek_3b1096","can_delete":false,"product_type":"c1","uid":1549364,"ip_address":"","ucode":"A6BD92B79B3632","user_header":"","comment_is_top":false,"comment_ctime":1609185375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609185375","product_id":100068401,"comment_content":"提升手艺~","like_count":0},{"had_liked":false,"id":270504,"user_name":"新语","can_delete":false,"product_type":"c1","uid":1359937,"ip_address":"","ucode":"A03984F76AEA40","user_header":"https://static001.geekbang.org/account/avatar/00/14/c0/41/460b5762.jpg","comment_is_top":false,"comment_ctime":1609147400,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1609147400","product_id":100068401,"comment_content":"太棒了","like_count":0,"discussions":[{"author":{"id":2399931,"avatar":"https://static001.geekbang.org/account/avatar/00/24/9e/bb/ecea643d.jpg","nickname":"Jensen","note":"","ucode":"D60CC63F59758B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341151,"discussion_content":"zan","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610331267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}