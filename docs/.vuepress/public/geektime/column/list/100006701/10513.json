{"id":10513,"title":"第27讲 | Java常见的垃圾收集器有哪些？","content":"<p>垃圾收集机制是Java的招牌能力，极大地提高了开发效率。如今，垃圾收集几乎成为现代语言的标配，即使经过如此长时间的发展， Java的垃圾收集机制仍然在不断的演进中，不同大小的设备、不同特征的应用场景，对垃圾收集提出了新的挑战，这当然也是面试的热点。</p><p>今天我要问你的问题是，<span class=\"orange\">Java常见的垃圾收集器有哪些？</span></p><h2>典型回答</h2><p>实际上，垃圾收集器（GC，Garbage Collector）是和具体JVM实现紧密相关的，不同厂商（IBM、Oracle），不同版本的JVM，提供的选择也不同。接下来，我来谈谈最主流的Oracle JDK。</p><ul>\n<li>Serial GC，它是最古老的垃圾收集器，“Serial”体现在其收集工作是单线程的，并且在进行垃圾收集过程中，会进入臭名昭著的“Stop-The-World”状态。当然，其单线程设计也意味着精简的GC实现，无需维护复杂的数据结构，初始化也简单，所以一直是Client模式下JVM的默认选项。<br>\n从年代的角度，通常将其老年代实现单独称作Serial Old，它采用了标记-整理（Mark-Compact）算法，区别于新生代的复制算法。<br>\nSerial GC的对应JVM参数是：</li>\n</ul><pre><code>-XX:+UseSerialGC\n</code></pre><!-- [[[read_end]]] --><ul>\n<li>ParNew GC，很明显是个新生代GC实现，它实际是Serial GC的多线程版本，最常见的应用场景是配合老年代的CMS GC工作，下面是对应参数</li>\n</ul><pre><code>-XX:+UseConcMarkSweepGC -XX:+UseParNewGC\n</code></pre><ul>\n<li>\n<p>CMS（Concurrent Mark Sweep） GC，基于标记-清除（Mark-Sweep）算法，设计目标是尽量减少停顿时间，这一点对于Web等反应时间敏感的应用非常重要，一直到今天，仍然有很多系统使用CMS GC。但是，CMS采用的标记-清除算法，存在着内存碎片化问题，所以难以避免在长时间运行等情况下发生full GC，导致恶劣的停顿。另外，既然强调了并发（Concurrent），CMS会占用更多CPU资源，并和用户线程争抢。</p>\n</li>\n<li>\n<p>Parallel GC，在早期JDK 8等版本中，它是server模式JVM的默认GC选择，也被称作是吞吐量优先的GC。它的算法和Serial GC比较相似，尽管实现要复杂的多，其特点是新生代和老年代GC都是并行进行的，在常见的服务器环境中更加高效。<br>\n开启选项是：</p>\n</li>\n</ul><pre><code>-XX:+UseParallelGC\n</code></pre><p>另外，Parallel GC引入了开发者友好的配置项，我们可以直接设置暂停时间或吞吐量等目标，JVM会自动进行适应性调整，例如下面参数：</p><pre><code>-XX:MaxGCPauseMillis=value\n-XX:GCTimeRatio=N // GC时间和用户时间比例 = 1 / (N+1)\n</code></pre><ul>\n<li>G1 GC这是一种兼顾吞吐量和停顿时间的GC实现，是Oracle JDK 9以后的默认GC选项。G1可以直观的设定停顿时间的目标，相比于CMS GC，G1未必能做到CMS在最好情况下的延时停顿，但是最差情况要好很多。<br>\nG1 GC仍然存在着年代的概念，但是其内存结构并不是简单的条带式划分，而是类似棋盘的一个个region。Region之间是复制算法，但整体上实际可看作是标记-整理（Mark-Compact）算法，可以有效地避免内存碎片，尤其是当Java堆非常大的时候，G1的优势更加明显。<br>\nG1吞吐量和停顿表现都非常不错，并且仍然在不断地完善，与此同时CMS已经在JDK 9中被标记为废弃（deprecated），所以G1 GC值得你深入掌握。</li>\n</ul><h2>考点分析</h2><p>今天的问题是考察你对GC的了解，GC是Java程序员的面试常见题目，但是并不是每个人都有机会或者必要对JVM、GC进行深入了解，我前面的总结是为不熟悉这部分内容的同学提供一个整体的印象。</p><p>对于垃圾收集，面试官可以循序渐进从理论、实践各种角度深入，也未必是要求面试者什么都懂。但如果你懂得原理，一定会成为面试中的加分项。在今天的讲解中，我侧重介绍比较通用、基础性的部分：</p><ul>\n<li>\n<p>垃圾收集的算法有哪些？如何判断一个对象是否可以回收？</p>\n</li>\n<li>\n<p>垃圾收集器工作的基本流程。</p>\n</li>\n</ul><p>另外，Java一直处于非常迅速的发展之中，在最新的JDK实现中，还有多种新的GC，我会在最后补充，除了前面提到的垃圾收集器，看看还有哪些值得关注的选择。</p><h2>知识扩展</h2><p><strong>垃圾收集的原理和基础概念</strong></p><p>第一，自动垃圾收集的前提是清楚哪些内存可以被释放。这一点可以结合我前面对Java类加载和内存结构的分析，来思考一下。</p><p>主要就是两个方面，最主要部分就是对象实例，都是存储在堆上的；还有就是方法区中的元数据等信息，例如类型不再使用，卸载该Java类似乎是很合理的。</p><p>对于对象实例收集，主要是两种基本算法，<a href=\"https://zh.wikipedia.org/wiki/%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0\">引用计数</a>和可达性分析。</p><ul>\n<li>\n<p>引用计数算法，顾名思义，就是为对象添加一个引用计数，用于记录对象被引用的情况，如果计数为0，即表示对象可回收。这是很多语言的资源回收选择，例如因人工智能而更加火热的Python，它更是同时支持引用计数和垃圾收集机制。具体哪种最优是要看场景的，业界有大规模实践中仅保留引用计数机制，以提高吞吐量的尝试。<br>\nJava并没有选择引用计数，是因为其存在一个基本的难题，也就是很难处理循环引用关系。</p>\n</li>\n<li>\n<p>另外就是Java选择的可达性分析，Java的各种引用关系，在某种程度上，将可达性问题还进一步复杂化，具体请参考<a href=\"http://time.geekbang.org/column/article/6970\">专栏第4讲</a>，这种类型的垃圾收集通常叫作追踪性垃圾收集（<a href=\"https://en.wikipedia.org/wiki/Tracing_garbage_collection\">Tracing Garbage Collection</a>）。其原理简单来说，就是将对象及其引用关系看作一个图，选定活动的对象作为 GC Roots，然后跟踪引用链条，如果一个对象和GC Roots之间不可达，也就是不存在引用链条，那么即可认为是可回收对象。JVM会把虚拟机栈和本地方法栈中正在引用的对象、静态属性引用的对象和常量，作为GC Roots。</p>\n</li>\n</ul><p>方法区无用元数据的回收比较复杂，我简单梳理一下。还记得我对类加载器的分类吧，一般来说初始化类加载器加载的类型是不会进行类卸载（unload）的；而普通的类型的卸载，往往是要求相应自定义类加载器本身被回收，所以大量使用动态类型的场合，需要防止元数据区（或者早期的永久代）不会OOM。在8u40以后的JDK中，下面参数已经是默认的：</p><pre><code>-XX:+ClassUnloadingWithConcurrentMark\n</code></pre><p>第二，常见的垃圾收集算法，我认为总体上有个了解，理解相应的原理和优缺点，就已经足够了，其主要分为三类：</p><ul>\n<li>\n<p>复制（Copying）算法，我前面讲到的新生代GC，基本都是基于复制算法，过程就如<a href=\"http://time.geekbang.org/column/article/10325\">专栏上一讲</a>所介绍的，将活着的对象复制到to区域，拷贝过程中将对象顺序放置，就可以避免内存碎片化。<br>\n这么做的代价是，既然要进行复制，既要提前预留内存空间，有一定的浪费；另外，对于G1这种分拆成为大量region的GC，复制而不是移动，意味着GC需要维护region之间对象引用关系，这个开销也不小，不管是内存占用或者时间开销。</p>\n</li>\n<li>\n<p>标记-清除（Mark-Sweep）算法，首先进行标记工作，标识出所有要回收的对象，然后进行清除。这么做除了标记、清除过程效率有限，另外就是不可避免的出现碎片化问题，这就导致其不适合特别大的堆；否则，一旦出现Full GC，暂停时间可能根本无法接受。</p>\n</li>\n<li>\n<p>标记-整理（Mark-Compact），类似于标记-清除，但为避免内存碎片化，它会在清理过程中将对象移动，以确保移动后的对象占用连续的内存空间。</p>\n</li>\n</ul><p>注意，这些只是基本的算法思路，实际GC实现过程要复杂的多，目前还在发展中的前沿GC都是复合算法，并且并行和并发兼备。</p><p>如果对这方面的算法有兴趣，可以参考一本比较有意思的书《垃圾回收的算法与实现》，虽然其内容并不是围绕Java垃圾收集，但是对通用算法讲解比较形象。</p><p><strong>垃圾收集过程的理解</strong></p><p>我在<a href=\"http://time.geekbang.org/column/article/10325\">专栏上一讲</a>对堆结构进行了比较详细的划分，在垃圾收集的过程，对应到Eden、Survivor、Tenured等区域会发生什么变化呢？</p><p>这实际上取决于具体的GC方式，先来熟悉一下通常的垃圾收集流程，我画了一系列示意图，希望能有助于你理解清楚这个过程。</p><p>第一，Java应用不断创建对象，通常都是分配在Eden区域，当其空间占用达到一定阈值时，触发minor GC。仍然被引用的对象（绿色方块）存活下来，被复制到JVM选择的Survivor区域，而没有被引用的对象（黄色方块）则被回收。注意，我给存活对象标记了“数字1”，这是为了表明对象的存活时间。<br>\n<img src=\"https://static001.geekbang.org/resource/image/44/6d/44d4a92e8e20f46e6646eae53442256d.png?wh=611*304\" alt=\"\"></p><p>第二， 经过一次Minor GC，Eden就会空闲下来，直到再次达到Minor GC触发条件，这时候，另外一个Survivor区域则会成为to区域，Eden区域的存活对象和From区域对象，都会被复制到to区域，并且存活的年龄计数会被加1。<br>\n<img src=\"https://static001.geekbang.org/resource/image/3b/48/3be4ac4834e2790a8211252f2bebfd48.png?wh=553*288\" alt=\"\"></p><p>第三， 类似第二步的过程会发生很多次，直到有对象年龄计数达到阈值，这时候就会发生所谓的晋升（Promotion）过程，如下图所示，超过阈值的对象会被晋升到老年代。这个阈值是可以通过参数指定：</p><pre><code>-XX:MaxTenuringThreshold=&lt;N&gt;\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/db/8d/dbcb15c99b368773145b358734e10e8d.png?wh=832*348\" alt=\"\"></p><p>后面就是老年代GC，具体取决于选择的GC选项，对应不同的算法。下面是一个简单标记-整理算法过程示意图，老年代中的无用对象被清除后， GC会将对象进行整理，以防止内存碎片化。</p><p><img src=\"https://static001.geekbang.org/resource/image/39/25/399a0c23d1d57e08a2603fb76f328e25.png?wh=723*582\" alt=\"\"></p><p></p><p>通常我们把老年代GC叫作Major GC，将对整个堆进行的清理叫作Full GC，但是这个也没有那么绝对，因为不同的老年代GC算法其实表现差异很大，例如CMS，“concurrent”就体现在清理工作是与工作线程一起并发运行的。</p><p><strong>GC的新发展</strong></p><p>GC仍然处于飞速发展之中，目前的默认选项G1 GC在不断的进行改进，很多我们原来认为的缺点，例如串行的Full GC、Card Table扫描的低效等，都已经被大幅改进，例如， JDK 10以后，Full GC已经是并行运行，在很多场景下，其表现还略优于Parallel GC的并行Full GC实现。</p><p>即使是Serial GC，虽然比较古老，但是简单的设计和实现未必就是过时的，它本身的开销，不管是GC相关数据结构的开销，还是线程的开销，都是非常小的，所以随着云计算的兴起，在Serverless等新的应用场景下，Serial GC找到了新的舞台。</p><p>比较不幸的是CMS GC，因为其算法的理论缺陷等原因，虽然现在还有非常大的用户群体，但是已经被标记为废弃，如果没有组织主动承担CMS的维护，很有可能会在未来版本移除。</p><p>如果你有关注目前尚处于开发中的JDK 11，你会发现，JDK又增加了两种全新的GC方式，分别是：</p><ul>\n<li>\n<p><a href=\"http://openjdk.java.net/jeps/318\">Epsilon GC</a>，简单说就是个不做垃圾收集的GC，似乎有点奇怪，有的情况下，例如在进行性能测试的时候，可能需要明确判断GC本身产生了多大的开销，这就是其典型应用场景。</p>\n</li>\n<li>\n<p><a href=\"http://openjdk.java.net/jeps/333\"></a><a href=\"http://openjdk.java.net/jeps/333\">ZGC</a>，这是Oracle开源出来的一个超级GC实现，具备令人惊讶的扩展能力，比如支持T bytes级别的堆大小，并且保证绝大部分情况下，延迟都不会超过10 ms。虽然目前还处于实验阶段，仅支持Linux 64位的平台，但其已经表现出的能力和潜力都非常令人期待。</p>\n</li>\n</ul><p>当然，其他厂商也提供了各种独具一格的GC实现，例如比较有名的低延迟GC，<a href=\"https://www.infoq.com/articles/azul_gc_in_detail\">Zing</a>和<a href=\"https://wiki.openjdk.java.net/display/shenandoah/Main\">Shenandoah</a>等，有兴趣请参考我提供的链接。</p><p>今天，作为GC系列的第一讲，我从整体上梳理了目前的主流GC实现，包括基本原理和算法，并结合我前面介绍过的内存结构，对简要的垃圾收集过程进行了介绍，希望能够对你的相关实践有所帮助。</p><h2>一课一练</h2><p>关于今天我们讨论的题目你做到心中有数了吗？今天谈了一堆的理论，思考一个实践中的问题，你通常使用什么参数去打开GC日志呢？还会额外添加哪些选项？</p><p>请你在留言区写写你对这个问题的思考，我会选出经过认真思考的留言，送给你一份学习奖励礼券，欢迎你与我一起讨论。</p><p>你的朋友是不是也在准备面试呢？你可以“请朋友读”，把今天的题目分享给好友，或许你能帮到他。</p><p></p>","neighbors":{"left":{"article_title":"第26讲 | 如何监控和诊断JVM堆内和堆外内存使用？","id":10325},"right":{"article_title":"第28讲 | 谈谈你的GC调优思路?","id":10651}},"comments":[{"had_liked":false,"id":15198,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1530980300,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"577056597964","product_id":100006701,"comment_content":"JVM提供的收集器较多，特征不一，适用于不同的业务场景：<br><br>Serial收集器：串行运行；作用于新生代；复制算法；响应速度优先；适用于单CPU环境下的client模式。<br>ParNew收集器：并行运行；作用于新生代；复制算法；响应速度优先；多CPU环境Server模式下与CMS配合使用。<br>Parallel Scavenge收集器：并行运行；作用于新生代；复制算法；吞吐量优先；适用于后台运算而不需要太多交互的场景。<br><br>Serial Old收集器：串行运行；作用于老年代；标记-整理算法；响应速度优先；单CPU环境下的Client模式。<br>Parallel Old收集器：并行运行；作用于老年代；标记-整理算法；吞吐量优先；适用于后台运算而不需要太多交互的场景。<br>CMS收集器：并发运行；作用于老年代；标记-清除算法；响应速度优先；适用于互联网或B&#47;S业务。<br><br>G1收集器：并发运行；可作用于新生代或老年代；标记-整理算法+复制算法；响应速度优先；面向服务端应用。","like_count":135,"discussions":[{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157276,"discussion_content":"不知这个总结是怎么得到的？我看着作者也没讲到你讲的一些方面。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580462919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148422,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","nickname":"美美","note":"","ucode":"44CC95C45AF345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102397,"discussion_content":"讲的很乱,真的.这哥们不会总结","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577343720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1144504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/b8/e4cd7997.jpg","nickname":"KAGEMUSHA","note":"","ucode":"DFC05BE62A9C10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148422,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","nickname":"美美","note":"","ucode":"44CC95C45AF345","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306170,"discussion_content":"公众号营销罢了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600188637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":102397,"ip_address":""},"score":306170,"extra":""}]},{"author":{"id":1002205,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/dd/ab6193b0.jpg","nickname":"yangnk","note":"","ucode":"A4D16BBA6AF66C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586634,"discussion_content":"总结的挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662385717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16539,"user_name":"一孑","can_delete":false,"product_type":"c1","uid":1117164,"ip_address":"","ucode":"DB32F33397FE48","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqxPHQ0mFEJ8lhIANMFa2YMb6lPYzmfNl1rUbarrG45ROM9MAk0wHJRk5vo4bnzvTWmWGWDgaVaxg/132","comment_is_top":false,"comment_ctime":1532013601,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"91726326817","product_id":100006701,"comment_content":"老师有个问题不太明白，full gc、major gc、minor gc都会stop_the_word吗？还是说是跟具体的垃圾收集算法有关系？<br>","like_count":22,"discussions":[{"author":{"id":1397351,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/67/fcba0967.jpg","nickname":"zapup","note":"","ucode":"388D6BB5D7B137","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318533,"discussion_content":"不同的垃圾收集器在gc的过程有不同阶段，有的阶段会stw，有的阶段不会。目前还没有完全不用stw的垃圾收集器。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1603774950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2355521,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f1/41/76c0758f.jpg","nickname":"君战","note":"","ucode":"A8619A79A5CED9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374558,"discussion_content":"目前的可达性分析算法实现都需要STW。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1621244492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205062,"avatar":"https://static001.geekbang.org/account/avatar/00/12/63/46/52a6edac.jpg","nickname":"funny","note":"","ucode":"684E3A61425524","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543987,"discussion_content":"full-gc触发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641374333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1756181,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cc/15/35622b02.jpg","nickname":"Jason","note":"","ucode":"B2765DD1D90B0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263482,"discussion_content":"同问！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589208804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2117326,"avatar":"","nickname":"Geek_luc","note":"","ucode":"4EAF648C0458DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1756181,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cc/15/35622b02.jpg","nickname":"Jason","note":"","ucode":"B2765DD1D90B0C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300229,"discussion_content":"full-gc触发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597994528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":263482,"ip_address":""},"score":300229,"extra":""}]}]},{"had_liked":false,"id":15547,"user_name":"张南南","can_delete":false,"product_type":"c1","uid":1100675,"ip_address":"","ucode":"BC32177C8518EA","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/83/bf876c13.jpg","comment_is_top":false,"comment_ctime":1531279710,"is_pvip":false,"replies":[{"id":"5308","content":"没有绝对，我建议综合考虑：<br>G1理论上比cms更容易调，但你更熟悉哪个？实际用cms的挺多，也许更多经验；<br>如果都不熟，先看看g1能否达到你的延迟、吞吐目标；<br>还有基础配置，如堆大小，比较大，比如16g以上，建议优先g1","user_name":"作者回复","comment_id":15547,"uid":"1009360","ip_address":"","utype":1,"ctime":1531319803,"user_name_real":"杨晓峰"}],"discussion_count":2,"race_medal":0,"score":"91725592926","product_id":100006701,"comment_content":"JDK8的话，互联网B&#47;S项目，追求高响应和底停顿，请问是用CMS好还是G1好呢，或者有其他更好的选择","like_count":22,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420435,"discussion_content":"没有绝对，我建议综合考虑：\nG1理论上比cms更容易调，但你更熟悉哪个？实际用cms的挺多，也许更多经验；\n如果都不熟，先看看g1能否达到你的延迟、吞吐目标；\n还有基础配置，如堆大小，比较大，比如16g以上，建议优先g1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531319803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315403,"discussion_content":"依据配置以代码逻辑 压测选择","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603270105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71654,"user_name":"黄黄的叶子","can_delete":false,"product_type":"c1","uid":1100280,"ip_address":"","ucode":"9E17C6BBE3B37D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLzSRrK59sydiaCJ5PrDv2jeuNTwXuXlN6JnYvCMkUHVmPEQ9fTG46mQV1ptkPMBdBL4gV56zickeqQ/132","comment_is_top":false,"comment_ctime":1551407745,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"65975917185","product_id":100006701,"comment_content":"jdk 9 用 -Xlog:gc* <br>以前用 -XX:+PringGCStamps  -XX:+PringGCDetails","like_count":16,"discussions":[{"author":{"id":1022432,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/e0/f8747857.jpg","nickname":"Allo","note":"","ucode":"C1CA5BBDD9EDED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36929,"discussion_content":"-XX:+PrintGCDetails","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571462812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20569,"user_name":"家庆","can_delete":false,"product_type":"c1","uid":1184982,"ip_address":"","ucode":"D77A489C78EF0D","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/d6/e79204be.jpg","comment_is_top":false,"comment_ctime":1534555043,"is_pvip":false,"replies":[{"id":"7499","content":"client vm mode（win 32）一直是Seiral GC，servermode下，9以后改为了G1，以前是Parrallel Gc","user_name":"作者回复","comment_id":20569,"uid":"1009360","ip_address":"","utype":1,"ctime":1534991388,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"57369129891","product_id":100006701,"comment_content":"老师，能整理一份每个jdk 版本对应默认的GC是什么吗？为什么会变更，优势在哪里，谢谢！","like_count":14,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422305,"discussion_content":"client vm mode（win 32）一直是Seiral GC，servermode下，9以后改为了G1，以前是Parrallel Gc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534991388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63519,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1548388679,"is_pvip":false,"replies":[{"id":"23341","content":"了解相关原理有利于我们写出更好的程序，或者做更深入的工作或者特定优化；<br>当然，我也不认为什么工作都有必要过度深入jvm，尽管一些公司喜欢这么考察，职业发展和市场需求也不是只有一条路","user_name":"作者回复","comment_id":63519,"uid":"1009360","ip_address":"","utype":1,"ctime":1549817560,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"35908127047","product_id":100006701,"comment_content":"老师：做Android应用层开发的同学该如何学习虚拟机？Android系统中的虚拟机，估计也只有系统厂商能修改和优化。有时候感觉学了很多虚拟机的理论，但是用在工作中的场景不多，也只有在“内存优化”和开发中编写代码时会用到一些jvm内存区域相关知识","like_count":9,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437618,"discussion_content":"了解相关原理有利于我们写出更好的程序，或者做更深入的工作或者特定优化；\n当然，我也不认为什么工作都有必要过度深入jvm，尽管一些公司喜欢这么考察，职业发展和市场需求也不是只有一条路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549817560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41345,"user_name":"achenbj","can_delete":false,"product_type":"c1","uid":1178990,"ip_address":"","ucode":"E5A4F7EB173C2F","user_header":"","comment_is_top":false,"comment_ctime":1542767112,"is_pvip":false,"replies":[{"id":"15387","content":"不是，8是parallel gc","user_name":"作者回复","comment_id":41345,"uid":"1009360","ip_address":"","utype":1,"ctime":1543156593,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"35902505480","product_id":100006701,"comment_content":"g1不是8的默认回收器？","like_count":9,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429769,"discussion_content":"不是，8是parallel gc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543156593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15139,"user_name":"Chris","can_delete":false,"product_type":"c1","uid":1024640,"ip_address":"","ucode":"FBCB01BEDF11CE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/80/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1530926799,"is_pvip":false,"replies":[{"id":"5109","content":"有道理，意思是一样，只是一些搞python的同学，喜欢把引用计数以外的才称做gc；大小没有那么绝对，调优永远是针对特定场景、特定需求，不存在一劳永逸的指标，一般建议30G以上慎用cms，但你看Cassandra的官方指南，建议用在16g以下","user_name":"作者回复","comment_id":15139,"uid":"1009360","ip_address":"","utype":1,"ctime":1530972936,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"27300730575","product_id":100006701,"comment_content":"老师，python支持那里好像有笔误，应该是同时支持引用计数和可达性等垃圾收集机制。其二，标记清楚算法不适合大堆，请问这里的大堆有什么可以量化的标准吗？比如多大的堆才是大堆😂，希望老师能解答下，谢谢~","like_count":6,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420250,"discussion_content":"有道理，意思是一样，只是一些搞python的同学，喜欢把引用计数以外的才称做gc；大小没有那么绝对，调优永远是针对特定场景、特定需求，不存在一劳永逸的指标，一般建议30G以上慎用cms，但你看Cassandra的官方指南，建议用在16g以下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530972936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16309,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1115063,"ip_address":"","ucode":"A40398C7F813DE","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/b7/5afe5b1d.jpg","comment_is_top":false,"comment_ctime":1531877448,"is_pvip":false,"replies":[{"id":"5635","content":"不会","user_name":"作者回复","comment_id":16309,"uid":"1009360","ip_address":"","utype":1,"ctime":1531880302,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"14416779336","product_id":100006701,"comment_content":"直接分配到老年代的对象在年轻代有空间了会移动回来吗？","like_count":4,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420750,"discussion_content":"不会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531880302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15324,"user_name":"雪粮","can_delete":false,"product_type":"c1","uid":1158275,"ip_address":"","ucode":"363A83AC7CE8B6","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/83/2f143a22.jpg","comment_is_top":false,"comment_ctime":1531111174,"is_pvip":false,"replies":[{"id":"5313","content":"现在有一些手段影响gc，或者用直接内存再显式释放，更近一步我不知道了","user_name":"作者回复","comment_id":15324,"uid":"1009360","ip_address":"","utype":1,"ctime":1531322146,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"14416013062","product_id":100006701,"comment_content":"ZGC如此强大，非常期待！<br><br>咨询大师，Java未来有没有计划让手动内存回收辅助自动内存回收以提高回收效率？既默认情况下自动内存回收完全没问题，但在极致情况下允极客开发者介入甚至完全接管内存回收过程（类似与C和C++）以提高程序执行效率？","like_count":4,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420341,"discussion_content":"现在有一些手段影响gc，或者用直接内存再显式释放，更近一步我不知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531322146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239595,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1596593261,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5891560557","product_id":100006701,"comment_content":"老师，这里的服务端和client端，具体指的是啥？是不是可以理解为，client端就需要依赖jdk的一些C&#47;S客户端的软件。而服务端就比如是咱们现在的一些web应用服务器。","like_count":2,"discussions":[{"author":{"id":2391701,"avatar":"","nickname":"Geek_a3890b","note":"","ucode":"BF67D080DAF96D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403952,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634197907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140538,"user_name":"日光倾城","can_delete":false,"product_type":"c1","uid":1120345,"ip_address":"","ucode":"E4329963F660DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/59/daeb0b6c.jpg","comment_is_top":false,"comment_ctime":1570978477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5865945773","product_id":100006701,"comment_content":"垃圾收集过程中，新生代的From区和To区应该是只有存活的对象才会被移动吧","like_count":1},{"had_liked":false,"id":15314,"user_name":"null","can_delete":false,"product_type":"c1","uid":1125963,"ip_address":"","ucode":"037CE0B26F205E","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/4b/de04a33b.jpg","comment_is_top":false,"comment_ctime":1531105984,"is_pvip":false,"replies":[{"id":"5316","content":"发生promotion，放到老年代；<br>maxtenuringthreshold是个上限值","user_name":"作者回复","comment_id":15314,"uid":"1009360","ip_address":"","utype":1,"ctime":1531323215,"user_name_real":"杨晓峰"}],"discussion_count":2,"race_medal":0,"score":"5826073280","product_id":100006701,"comment_content":"老师，请问一下，当Survivor满了而且Survivor中的对象还没有达到进去老年代的年龄后怎么处理，是会增加Survivor的大小吗还是直接将Survivor中的对象放到老年代呢","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420335,"discussion_content":"发生promotion，放到老年代；\nmaxtenuringthreshold是个上限值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531323215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204671,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/bf/273a0656.jpg","nickname":"ljming","note":"","ucode":"861BBC19193A55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":59,"discussion_content":"当Survivor空间不够时，需要老年代进行分配担保（Handle Promotion），进入老年代","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561036443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15154,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1530935691,"is_pvip":true,"replies":[{"id":"5110","content":"这个jdk9已经deprecated了哦","user_name":"作者回复","comment_id":15154,"uid":"1009360","ip_address":"","utype":1,"ctime":1530973702,"user_name_real":"杨晓峰"}],"discussion_count":1,"race_medal":0,"score":"5825902987","product_id":100006701,"comment_content":"用过-XX:+PrintGCDetails，打印比较详细","like_count":2,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420259,"discussion_content":"这个jdk9已经deprecated了哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530973702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304614,"user_name":"不归橙","can_delete":false,"product_type":"c1","uid":1319969,"ip_address":"","ucode":"4F3D84E9395F61","user_header":"https://static001.geekbang.org/account/avatar/00/14/24/21/90b748a2.jpg","comment_is_top":false,"comment_ctime":1627523491,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627523491","product_id":100006701,"comment_content":"Python使用引用计数法，循环依赖的问题是怎么解决的？网上看了一圈也没看到说怎么解决的","like_count":0},{"had_liked":false,"id":266732,"user_name":"fancyyou","can_delete":false,"product_type":"c1","uid":1235095,"ip_address":"","ucode":"87B2257C888692","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/97/a8c7ed6c.jpg","comment_is_top":false,"comment_ctime":1607475346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607475346","product_id":100006701,"comment_content":"标记-清除算法，标记的应该是不可回收的对象吧。","like_count":0},{"had_liked":false,"id":218790,"user_name":"潭州太守","can_delete":false,"product_type":"c1","uid":1178824,"ip_address":"","ucode":"1DA953B8DCA3C0","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/c8/15c85ee4.jpg","comment_is_top":false,"comment_ctime":1589875719,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589875719","product_id":100006701,"comment_content":"老师，Serial GC和serverless Runtime有什么关联，愿听深度讲解","like_count":1,"discussions":[{"author":{"id":1004092,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","nickname":"张三","note":"","ucode":"1155528FAE1546","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284245,"discussion_content":"应该是serverless的硬件配置低，适合用Serial GC 做垃圾回收","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592484645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213568,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1008071,"ip_address":"","ucode":"9FE5F43055D3AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/c7/b64ac05e.jpg","comment_is_top":false,"comment_ctime":1588476773,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1588476773","product_id":100006701,"comment_content":"老师有2个问题请教一下<br>1:Parallel GC 与CMS  都是多线程版本, 区别就是Parallel GC带整理,CMS不带整理所以有内存碎片触发Full GC 的时候STW时间长么?<br>2:G1之后   S0    S1  两个区域发生YGC 的时候空间不会发生变化,是不再使用Survivor 了么","like_count":0,"discussions":[{"author":{"id":2753914,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/05/7a/29ee6300.jpg","nickname":"不吃辣","note":"","ucode":"1E1B7C86355AF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400513,"discussion_content":"两个都带整理，一个是吞吐量优先，这个是响应时间优先","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633301165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1786819,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/43/c3/2c53acd7.jpg","nickname":"雄鹰","note":"","ucode":"67E0C4BDE7F6F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335295,"discussion_content":"问题2 同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608158916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195291,"user_name":"Geek_55e386","can_delete":false,"product_type":"c1","uid":1795793,"ip_address":"","ucode":"5A727F1323C2D0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","comment_is_top":false,"comment_ctime":1585154228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585154228","product_id":100006701,"comment_content":"强大","like_count":0},{"had_liked":false,"id":188472,"user_name":"时光","can_delete":false,"product_type":"c1","uid":1347240,"ip_address":"","ucode":"1087509C209C54","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/a8/c9819e37.jpg","comment_is_top":false,"comment_ctime":1584358222,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1584358222","product_id":100006701,"comment_content":"老师，我一直很关心一个问题，方法区的垃圾回收是哪个收集器？","like_count":1,"discussions":[{"author":{"id":2055194,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLbuXiafdYFyFsytMspswIM4EbnhtkGicCxZpo4iaQHiaibVVMz0SwtA8xyXbpAPWDsmrKcdz2jQRKxImQ/132","nickname":"chenqi","note":"","ucode":"99B1968262003D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376705,"discussion_content":"方法区存放的是类加载信息 不会有垃圾 会存在内存不足现象 所以java8移除了方法区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622284929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1575571,"avatar":"https://static001.geekbang.org/account/avatar/00/18/0a/93/a189ec16.jpg","nickname":"Eric","note":"","ucode":"7EB511C384BD7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2055194,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLbuXiafdYFyFsytMspswIM4EbnhtkGicCxZpo4iaQHiaibVVMz0SwtA8xyXbpAPWDsmrKcdz2jQRKxImQ/132","nickname":"chenqi","note":"","ucode":"99B1968262003D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539403,"discussion_content":"删了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639708772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":376705,"ip_address":""},"score":539403,"extra":""}]}]},{"had_liked":false,"id":181829,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1582640866,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1582640866","product_id":100006701,"comment_content":"jdk 9以前gc是Parallel GC，之后是G1 GC，看着很多文章，CMS GC作用于老年代，ParNew GC作用于新生代，那Parallel GC是包含CMS GC和ParNew GC，还是什么关系？同理，Serial GC，G1 GC？","like_count":1,"discussions":[{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218912,"discussion_content":"讲的很不清楚，粗略理解是：\n\n虽然 parnew+cms 也是 server模式下的一种选择；parallel 则是9之前的server 默认选择；\n虽然都是 新老年代并行，但是前者 是 复制+标记-清除；后者是 复制+标记-压缩算法\n\n至于9出来的默认server模式选择的 G1，虽然也是 复制+标记-压缩，但是 实现上 比 parallel可能更高效吧。。。\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585713026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175045,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1580537182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580537182","product_id":100006701,"comment_content":"第二次垃圾收集流程示意图中s1区域有1吗？","like_count":0},{"had_liked":false,"id":162727,"user_name":"codolio","can_delete":false,"product_type":"c1","uid":1523193,"ip_address":"","ucode":"B0514D1DC3B718","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXjLm1ZXhj5RE2eQXribnkVURaianGEbdKDWGLug8L4TjEktl8aP4LyeiaeyeibD6j3lG85Vdib4HGoOA/132","comment_is_top":false,"comment_ctime":1576581648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576581648","product_id":100006701,"comment_content":"老师，您好！我在学习G1，查看了一下Oracle JDK 8和9关于GC的文档，有一些疑惑，想请教您一下。在JDK 8的文档（https:&#47;&#47;docs.oracle.com&#47;javase&#47;8&#47;docs&#47;technotes&#47;guides&#47;vm&#47;gctuning&#47;g1_gc_tuning.html）中讲到标记循环的几个阶段（Phases of the Marking Cycle）与JDK 9文档（https:&#47;&#47;docs.oracle.com&#47;javase&#47;9&#47;gctuning&#47;garbage-first-garbage-collector.htm#JSGCT-GUID-1CDEB6B6-9463-4998-815D-05E095BFBD0F）Garbage Collection Cycle中讲到阶段有些不同，JDK 8中说到有5个阶段，JDK 9中说到有2个阶段（Young-only phase和Space-reclamation phase），麻烦问一下，JDK 9中是有一些调整吗？还是在JDK 9的Young-only phase Initial Mark中包含了JDK 8中说到的多个阶段？","like_count":0},{"had_liked":false,"id":157064,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1575022934,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1575022934","product_id":100006701,"comment_content":"老师,有个疑问.<br><br>请问“第二， 经过一次 Minor GC，Eden 就会空闲下来，直到再次达到 Minor GC 触发条件，这时候，另外一个 Survivor 区域则会成为 to 区域，Eden 区域的存活对象和 From 区域对象，都会被复制到 to 区域，并且存活的年龄计数会被加 1。”<br><br>如果此时:  Eden 区域的存活对象和 From 区域对象 的需要内存大小 &gt; to 区域的内存, 怎么处理的? 只是直接存储到永久代了么?","like_count":0,"discussions":[{"author":{"id":1344289,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEYbNElGIxY6Le1rfiakWJecz8JIOp06Y9JQFR2YBn3T3gx3icI5CKxZNgxgqiaKbfVOicXquO3QBw9w/132","nickname":"july","note":"","ucode":"E081987929063A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180085,"discussion_content":"老年代担保，大于等于某一年龄的对象全都发生晋升至老年代，具体哪些对象晋升，可以参考深入理解JVM虚拟机这本书；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582275825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139822,"user_name":"日光倾城","can_delete":false,"product_type":"c1","uid":1120345,"ip_address":"","ucode":"E4329963F660DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/59/daeb0b6c.jpg","comment_is_top":false,"comment_ctime":1570752613,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1570752613","product_id":100006701,"comment_content":"对于对象实例收集，主要是两种基本算法<br>，这个算法和常用的垃圾收集算法里面的算法是什么关系？","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385226,"discussion_content":"一个是找出那些对象需要回收的算法，一个是对可回收对象执行的算法","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626946808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1596047,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIlZ9AObDSXrfSEibY94uyQvMQ4tOvbb7iaQH9H7QQ6ibNaqFKUGq1TboaFpBSLuP0MCcSXvmqHNg0IA/132","nickname":"Geek_8c5f9c","note":"","ucode":"70CD441EAF490F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163809,"discussion_content":"一个是确定哪些对象要被收集，另一个是实施垃圾收集","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581097775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157266,"discussion_content":"我也有这个疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580461167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130066,"user_name":"Xs.Ten","can_delete":false,"product_type":"c1","uid":1128376,"ip_address":"","ucode":"2368B9BDDDEE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/37/b8/c887a5ea.jpg","comment_is_top":false,"comment_ctime":1567382548,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567382548","product_id":100006701,"comment_content":"老师好，minor GC 发生第三次及以上的时候，from和to区域的角色会发生互换吗？不然的话，to中不是会存在标记为1的引用吗？还是存在会讲to的内容复制到from？","like_count":0},{"had_liked":false,"id":118306,"user_name":"Lh","can_delete":false,"product_type":"c1","uid":1102951,"ip_address":"","ucode":"19CA4286A49DB7","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/67/0eaa81a4.jpg","comment_is_top":false,"comment_ctime":1564318283,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564318283","product_id":100006701,"comment_content":"JVM提供的收集器较多，特征不一，适用于不同的业务场景：<br><br>Serial收集器：串行运行；作用于新生代；复制算法；响应速度优先；适用于单CPU环境下的client模式。<br>ParNew收集器：并行运行；作用于新生代；复制算法；响应速度优先；多CPU环境Server模式下与CMS配合使用。<br>Parallel Scavenge收集器：并行运行；作用于新生代；复制算法；吞吐量优先；适用于后台运算而不需要太多交互的场景。<br><br>Serial Old收集器：串行运行；作用于老年代；标记-整理算法；响应速度优先；单CPU环境下的Client模式。<br>Parallel Old收集器：并行运行；作用于老年代；标记-整理算法；吞吐量优先；适用于后台运算而不需要太多交互的场景。<br>CMS收集器：并发运行；作用于老年代；标记-清除算法；响应速度优先；适用于互联网或B&#47;S业务。<br><br>G1收集器：并发运行；可作用于新生代或老年代；标记-整理算法+复制算法；响应速度优先；面向服务端应用。","like_count":0,"discussions":[{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157265,"discussion_content":"建议不要复制他人的留言","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1580460970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85830,"user_name":"张旭","can_delete":false,"product_type":"c1","uid":1256155,"ip_address":"","ucode":"8029AFFC0AF9D4","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/db/86437192.jpg","comment_is_top":false,"comment_ctime":1555250489,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1555250489","product_id":100006701,"comment_content":"老师，根据你画的minor gc图，minor gc发生时不会回收from区中的垃圾吗？","like_count":1,"discussions":[{"author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":231515,"discussion_content":"肯定会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586822144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71010,"user_name":"进阶的码农","can_delete":false,"product_type":"c1","uid":1017821,"ip_address":"","ucode":"D8991282640334","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/dd/4f53f95d.jpg","comment_is_top":false,"comment_ctime":1551244312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551244312","product_id":100006701,"comment_content":"UseCMSCompactAtFullCollection：在jvm1.8起已弃用,此标识已deprecated<br>CMSFullGCsBeforeCompaction：：在jvm1.8起已弃用,此标识已deprecated<br>java8弃用这两个参数，那cms回收如何进行空间压缩？","like_count":0},{"had_liked":false,"id":38747,"user_name":"HaoBin-Leo","can_delete":false,"product_type":"c1","uid":1049727,"ip_address":"","ucode":"42BCFA25AB6F98","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/7f/39707f39.jpg","comment_is_top":false,"comment_ctime":1542119483,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542119483","product_id":100006701,"comment_content":"为什么有些文章会在serial old后面加上msc备注，serial old 不是采用的mark-compact么","like_count":1},{"had_liked":false,"id":16198,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1531826446,"is_pvip":true,"replies":[{"id":"5607","content":"我理解是目前实现不能完全避免，cms又不再发展了","user_name":"作者回复","user_name_real":"杨晓峰","uid":"1009360","ctime":1531848903,"ip_address":"","comment_id":16198,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1531826446","product_id":100006701,"comment_content":"老师，Oracle的jvm的CMSGC，本身能够解决内存碎片化的问题吗？","like_count":1,"discussions":[{"author":{"id":1009360,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg","nickname":"杨晓峰","note":"","ucode":"2BF255467A978F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420711,"discussion_content":"我理解是目前实现不能完全避免，cms又不再发展了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531848903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178101,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f9/f5/5aecc3cb.jpg","nickname":"给我一秒毁坏世界","note":"","ucode":"310B851553363D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102700,"discussion_content":"不会存在，UseCMSCompactAtFullCollection 和CMSFullGCsBeforeCompaction 可以整理对象，避免内存碎片","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577361471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}