{"id":104259,"title":"29 | CISC和RISC：为什么手机芯片都是ARM？","content":"<p>我在<a href=\"https://time.geekbang.org/column/article/93359\">第5讲</a>讲计算机指令的时候，给你看过MIPS体系结构计算机的机器指令格式。MIPS的指令都是固定的32位长度，如果要用一个打孔卡来表示，并不复杂。</p><p><img src=\"https://static001.geekbang.org/resource/image/b1/bf/b1ade5f8de67b172bf7b4ec9f63589bf.jpeg?wh=2212*595\" alt=\"\"></p><center><span class=\"reference\">MIPS机器码的长度都是固定的32位</span></center><p><a href=\"https://time.geekbang.org/column/article/94075\">第6讲</a>的时候，我带你编译了一些简单的C语言程序，看了x86体系结构下的汇编代码。眼尖的话，你应该能发现，每一条机器码的长度是不一样的。</p><p><img src=\"https://static001.geekbang.org/resource/image/ad/8a/ad91b005e97959d571bbd2a0fa30b48a.jpeg?wh=2237*1103\" alt=\"\"></p><center><span class=\"reference\">Intel x86的机器码的长度是可变的</span></center><p>而CPU的指令集里的机器码是固定长度还是可变长度，也就是<strong>复杂指令集</strong>（Complex Instruction Set Computing，简称CISC）和<strong>精简指令集</strong>（Reduced Instruction Set Computing，简称RISC）这两种风格的指令集一个最重要的差别。那今天我们就来看复杂指令集和精简指令集之间的对比、差异以及历史纠葛。</p><h2>CISC VS RISC：历史的车轮不总是向前的</h2><p>在计算机历史的早期，其实没有什么CISC和RISC之分。或者说，所有的CPU其实都是CISC。</p><p>虽然冯·诺依曼高屋建瓴地提出了存储程序型计算机的基础架构，但是实际的计算机设计和制造还是严格受硬件层面的限制。当时的计算机很慢，存储空间也很小。《人月神话》这本软件工程界的名著，讲的是花了好几年设计IBM 360这台计算机的经验。IBM 360的最低配置，每秒只能运行34500条指令，只有8K的内存。为了让计算机能够做尽量多的工作，每一个字节乃至每一个比特都特别重要。</p><!-- [[[read_end]]] --><p>所以，CPU指令集的设计，需要仔细考虑硬件限制。为了性能考虑，很多功能都直接通过硬件电路来完成。为了少用内存，指令的长度也是可变的。就像算法和数据结构里的<a href=\"https://en.wikipedia.org/wiki/Huffman_coding\">赫夫曼编码（Huffman coding）</a>一样，常用的指令要短一些，不常用的指令可以长一些。那个时候的计算机，想要用尽可能少的内存空间，存储尽量多的指令。</p><p>不过，历史的车轮滚滚向前，计算机的性能越来越好，存储的空间也越来越大了。到了70年代末，RISC开始登上了历史的舞台。当时，<a href=\"https://en.wikipedia.org/wiki/University_of_California,_Berkeley\">UC Berkeley</a>的大卫·帕特森（David Patterson）教授发现，实际在CPU运行的程序里，80%的时间都是在使用20%的简单指令。于是，他就提出了RISC的理念。自此之后，RISC类型的CPU开始快速蓬勃发展。</p><p>我经常推荐的课后阅读材料，有不少是来自《计算机组成与设计：硬件/软件接口》和《计算机体系结构：量化研究方法》这两本教科书。大卫·帕特森教授正是这两本书的作者。此外，他还在2017年获得了图灵奖。</p><p><img src=\"https://static001.geekbang.org/resource/image/d6/77/d69a1e753fa1523df054573f13516277.jpeg?wh=1846*1006\" alt=\"\"></p><p>RISC架构的CPU究竟是什么样的呢？为什么它能在这么短的时间内受到如此大的追捧？</p><p>RISC架构的CPU的想法其实非常直观。既然我们80%的时间都在用20%的简单指令，那我们能不能只要那20%的简单指令就好了呢？答案当然是可以的。因为指令数量多，计算机科学家们在软硬件两方面都受到了很多挑战。</p><p>在硬件层面，我们要想支持更多的复杂指令，CPU里面的电路就要更复杂，设计起来也就更困难。更复杂的电路，在散热和功耗层面，也会带来更大的挑战。在软件层面，支持更多的复杂指令，编译器的优化就变得更困难。毕竟，面向2000个指令来优化编译器和面向500个指令来优化编译器的困难是完全不同的。</p><p>于是，在RISC架构里面，CPU选择把指令“精简”到20%的简单指令。而原先的复杂指令，则通过用简单指令组合起来来实现，让软件来实现硬件的功能。这样，CPU的整个硬件设计就会变得更简单了，在硬件层面提升性能也会变得更容易了。</p><p>RISC的CPU里完成指令的电路变得简单了，于是也就腾出了更多的空间。这个空间，常常被拿来放通用寄存器。因为RISC完成同样的功能，执行的指令数量要比CISC多，所以，如果需要反复从内存里面读取指令或者数据到寄存器里来，那么很多时间就会花在访问内存上。于是，RISC架构的CPU往往就有更多的通用寄存器。</p><p>除了寄存器这样的存储空间，RISC的CPU也可以把更多的晶体管，用来实现更好的分支预测等相关功能，进一步去提升CPU实际的执行效率。</p><p>总的来说，对于CISC和RISC的对比，我们可以一起回到第4讲讲的程序运行时间的公式：</p><center>程序的CPU执行时间=指令数  ×  CPI  ×  Clock Cycle Time</center><p>CISC的架构，其实就是通过优化<strong>指令数</strong>，来减少CPU的执行时间。而RISC的架构，其实是在优化CPI。因为指令比较简单，需要的时钟周期就比较少。</p><p>因为RISC降低了CPU硬件的设计和开发难度，所以从80年代开始，大部分新的CPU都开始采用RISC架构。从IBM的PowerPC，到SUN的SPARC，都是RISC架构。所有人看到仍然采用CISC架构的Intel CPU，都可以批评一句“Complex and messy”。但是，为什么无论是在PC上，还是服务器上，仍然是Intel成为最后的赢家呢？</p><h2>Intel的进化：微指令架构的出现</h2><p>面对这么多负面评价的Intel，自然也不能无动于衷。更何况，x86架构的问题并不能说明Intel的工程师不够厉害。事实上，在整个CPU设计的领域，Intel集中了大量优秀的人才。无论是成功的Pentium时代引入的超标量设计，还是失败的Pentium 4时代引入的超线程技术，都是异常精巧的工程实现。</p><p>而x86架构所面临的种种问题，其实都来自于一个最重要的考量，那就是指令集的向前兼容性。因为x86在商业上太成功了，所以市场上有大量的Intel CPU。而围绕着这些CPU，又有大量的操作系统、编译器。这些系统软件只支持x86的指令集，就比如著名的Windows 95。而在这些系统软件上，又有各种各样的应用软件。</p><p>如果Intel要放弃x86的架构和指令集，开发一个RISC架构的CPU，面临的第一个问题就是所有这些软件都是不兼容的。事实上，Intel并非没有尝试过在x86之外另起炉灶，这其实就是我在<a href=\"https://time.geekbang.org/column/article/102888\">第</a><a href=\"https://time.geekbang.org/column/article/102888\">26讲</a>介绍的安腾处理器。当时，Intel想要在CPU进入64位的时代的时候，丢掉x86的历史包袱，所以推出了全新的IA-64的架构。但是，却因为不兼容x86的指令集，遭遇了重大的失败。</p><p>反而是AMD，趁着Intel研发安腾的时候，推出了兼容32位x86指令集的64位架构，也就是AMD64。如果你现在在Linux下安装各种软件包，一定经常会看到像下面这样带有AMD64字样的内容。这是因为x86下的64位的指令集x86-64，并不是Intel发明的，而是AMD发明的。</p><pre><code>Get:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 fontconfig amd64 2.12.6-0ubuntu2 [169 kB]\n</code></pre><center><span class=\"reference\">在Ubuntu下通过APT安装程序的时候，随处可见AMD64的关键字</span></center><p>花开两朵，各表一枝。Intel在开发安腾处理器的同时，也在不断借鉴其他RISC处理器的设计思想。既然核心问题是要始终向前兼容x86的指令集，那么我们能不能不修改指令集，但是让CISC风格的指令集，用RISC的形式在CPU里面运行呢？</p><p>于是，从Pentium Pro时代开始，Intel就开始在处理器里引入了<strong>微指令</strong>（Micro-Instructions/Micro-Ops）<strong>架构</strong>。而微指令架构的引入，也让CISC和RISC的分界变得模糊了。</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/76/3c4ceec254e765462b09f393153f4476.jpeg?wh=2716*1546\" alt=\"\"></p><p>在微指令架构的CPU里面，编译器编译出来的机器码和汇编代码并没有发生什么变化。但在指令译码的阶段，指令译码器“翻译”出来的，不再是某一条CPU指令。译码器会把一条机器码，“<strong>翻译</strong>”成好几条“微指令”。这里的一条条微指令，就不再是CISC风格的了，而是变成了固定长度的RISC风格的了。</p><p>这些RISC风格的微指令，会被放到一个微指令缓冲区里面，然后再从缓冲区里面，分发给到后面的超标量，并且是乱序执行的流水线架构里面。不过这个流水线架构里面接受的，就不是复杂的指令，而是精简的指令了。在这个架构里，我们的指令译码器相当于变成了设计模式里的一个“适配器”（Adaptor）。这个适配器，填平了CISC和RISC之间的指令差异。</p><p>不过，凡事有好处就有坏处。这样一个能够把CISC的指令译码成RISC指令的指令译码器，比原来的指令译码器要复杂。这也就意味着更复杂的电路和更长的译码时间：本来以为可以通过RISC提升的性能，结果又有一部分浪费在了指令译码上。针对这个问题，我们有没有更好的办法呢？</p><p>我在前面说过，之所以大家认为RISC优于CISC，来自于一个数字统计，那就是在实际的程序运行过程中，有80%运行的代码用着20%的常用指令。这意味着，CPU里执行的代码有很强的局部性。而对于有着很强局部性的问题，常见的一个解决方案就是使用缓存。</p><p>所以，Intel就在CPU里面加了一层L0 Cache。这个Cache保存的就是指令译码器把CISC的指令“翻译”成RISC的微指令的结果。于是，在大部分情况下，CPU都可以从Cache里面拿到译码结果，而不需要让译码器去进行实际的译码操作。这样不仅优化了性能，因为译码器的晶体管开关动作变少了，还减少了功耗。</p><p>因为“微指令”架构的存在，从Pentium Pro开始，Intel处理器已经不是一个纯粹的CISC处理器了。它同样融合了大量RISC类型的处理器设计。不过，由于Intel本身在CPU层面做的大量优化，比如乱序执行、分支预测等相关工作，x86的CPU始终在功耗上还是要远远超过RISC架构的ARM，所以最终在智能手机崛起替代PC的时代，落在了ARM后面。</p><h2>ARM和RISC-V：CPU的现在与未来</h2><p>2017年，ARM公司的CEO Simon Segards宣布，ARM累积销售的芯片数量超过了1000亿。作为一个从12个人起步，在80年代想要获取Intel的80286架构授权来制造CPU的公司，ARM是如何在移动端把自己的芯片塑造成了最终的霸主呢？</p><p>ARM这个名字现在的含义，是“Advanced RISC Machines”。你从名字就能够看出来，ARM的芯片是基于RISC架构的。不过，ARM能够在移动端战胜Intel，并不是因为RISC架构。</p><p>到了21世纪的今天，CISC和RISC架构的分界已经没有那么明显了。Intel和AMD的CPU也都是采用译码成RISC风格的微指令来运行。而ARM的芯片，一条指令同样需要多个时钟周期，有乱序执行和多发射。我甚至看到过这样的评价，“ARM和RISC的关系，只有在名字上”。</p><p>ARM真正能够战胜Intel，我觉得主要是因为下面这两点原因。</p><p>第一点是功耗优先的设计。一个4核的Intel i7的CPU，设计的时候功率就是130W。而一块ARM A8的单个核心的CPU，设计功率只有2W。两者之间差出了100倍。在移动设备上，功耗是一个远比性能更重要的指标，毕竟我们不能随时在身上带个发电机。ARM的CPU，主频更低，晶体管更少，高速缓存更小，乱序执行的能力更弱。所有这些，都是为了功耗所做的妥协。</p><p>第二点则是低价。ARM并没有自己垄断CPU的生产和制造，只是进行CPU设计，然后把对应的知识产权授权出去，让其他的厂商来生产ARM架构的CPU。它甚至还允许这些厂商可以基于ARM的架构和指令集，设计属于自己的CPU。像苹果、三星、华为，它们都是拿到了基于ARM体系架构设计和制造CPU的授权。ARM自己只是收取对应的专利授权费用。多个厂商之间的竞争，使得ARM的芯片在市场上价格很便宜。所以，尽管ARM的芯片的出货量远大于Intel，但是收入和利润却比不上Intel。</p><p>不过，ARM并不是开源的。所以，在ARM架构逐渐垄断移动端芯片市场的时候，“开源硬件”也慢慢发展起来了。一方面，MIPS在2019年宣布开源；另一方面，从UC Berkeley发起的<a href=\"https://riscv.org/\">RISC-V</a>项目也越来越受到大家的关注。而RISC概念的发明人，图灵奖的得主大卫·帕特森教授从伯克利退休之后，成了RISC-V国际开源实验室的负责人，开始推动RISC-V这个“CPU届的Linux”的开发。可以想见，未来的开源CPU，也多半会像Linux一样，逐渐成为一个业界的主流选择。如果想要“打造一个属于自己CPU”，不可不关注这个项目。</p><h2>总结延伸</h2><p>这一讲，我从RISC和CISC架构之前的差异说起，讲到RISC的指令是固定长度的，CISC的指令是可变长度的。RISC的指令集里的指令数少，而且单个指令只完成简单的功能，所以被称为“精简”。CISC里的指令数多，为了节约内存，直接在硬件层面能够完成复杂的功能，所以被称为“复杂”。RISC的通过减少CPI来提升性能，而CISC通过减少需要的指令数来提升性能。</p><p>然后，我们进一步介绍了Intel的x86 CPU的“微指令”的设计思路。“微指令”使得我们在机器码层面保留了CISC风格的x86架构的指令集。但是，通过指令译码器和L0缓存的组合，使得这些指令可以快速翻译成RISC风格的微指令，使得实际执行指令的流水线可以用RISC的架构来搭建。使用“微指令”设计思路的CPU，不能再称之为CISC了，而更像一个RISC和CISC融合的产物。</p><p>过去十年里，Intel仍然把持着PC和服务器市场，但是更多的市场上的CPU芯片来自基于ARM架构的智能手机了。而在ARM似乎已经垄断了移动CPU市场的时候，开源的RISC-V出现了，也给了计算机工程师们新的设计属于自己的CPU的机会。</p><h2>推荐阅读</h2><p>又到了推荐阅读的时间了，这次我们又要一起来读论文了。</p><p>想要了解x86和ARM之间的功耗和性能的差异，以及这个差异到底从哪里来，你可以读一读<a href=\"https://research.cs.wisc.edu/vertical/papers/2013/hpca13-isa-power-struggles.pdf\">《Power Struggles: Revisiting the RISC vs. CISC Debate on Contemporary ARM and x86 Architectures》</a>这篇论文。</p><p>这个12页的论文仔细研究了Intel和ARM的差异，并且得出了一个结论。那就是ARM和x86之间的功耗差异，并不是来自于CISC和RISC的指令集差异，而是因为两类芯片的设计，本就是针对不同的性能目标而进行的，和指令集是CISC还是RISC并没有什么关系。</p><h2>课后思考</h2><p>Intel除了x86和安腾之外，还推出过Atom这个面向移动设备的低功耗CPU。那Atom究竟是RISC还是CISC架构的CPU呢？</p><p>你可以搜索一下相关资料，在留言区写下你搜索到的内容。你也可以把今天的内容，分享给你的朋友，和他一起学习和进步。</p><p></p>","comments":[{"had_liked":false,"id":120979,"user_name":"Geek_guo","can_delete":false,"product_type":"c1","uid":1517196,"ip_address":"","ucode":"E70AB1A1E65F67","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/239h30GxsIAralcfSmrp8QvFzyNA7icEDIbhBQ6K0tr6GwtG3ia0aUCcNo2SfoTlNWtGFVgcFwFjicaGdK6Uau3cQ/132","comment_is_top":false,"comment_ctime":1565021479,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"113234171175","product_id":100026001,"comment_content":"老师预测的很准，阿里的玄铁就是基于RSIC-v的","like_count":26,"discussions":[{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282295,"discussion_content":"老师在哪预测的？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591936635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2440338,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","nickname":"张Dave","note":"","ucode":"0E8B6FDEB7505B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571621,"discussion_content":"rsic-v开源，哪里可以看到呢？有网址吗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652316063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2413071,"avatar":"https://static001.geekbang.org/account/avatar/00/24/d2/0f/8f14c85b.jpg","nickname":"红薯板栗","note":"","ucode":"236BE91291A575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350885,"discussion_content":"拼写错误，RISC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614063948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163818,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1576807230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87476153150","product_id":100026001,"comment_content":"这节就好像了解历史一样，开了眼界","like_count":20},{"had_liked":false,"id":109076,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1561956540,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"40216662204","product_id":100026001,"comment_content":"开阔了视野。另外想插句题外话: 设计思想都是通用的，灵活应用，能选择最适合的才是关键","like_count":9},{"had_liked":false,"id":226053,"user_name":"Adam Lau","can_delete":false,"product_type":"c1","uid":1266698,"ip_address":"","ucode":"7E542D6E789500","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","comment_is_top":false,"comment_ctime":1591937019,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"18771806203","product_id":100026001,"comment_content":"我不太懂请见谅。复杂指令可以用简单指令组合替代，这个理念我是明白了，但是我没学过不清楚，老师可否举一些例子，什么样的复杂指令可以用什么样的简单指令替代。","like_count":4,"discussions":[{"author":{"id":2734372,"avatar":"https://static001.geekbang.org/account/avatar/00/29/b9/24/0351fe33.jpg","nickname":"oxygen_酱","note":"","ucode":"F042A44E05051D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539267,"discussion_content":"你可以用在线的compiler explorer，选择arm平台和x86平台看看汇编的区别","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639652352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330829,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4e/8d/a2911984.jpg","nickname":"仓助","note":"","ucode":"F21F909E9BDEF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568026,"discussion_content":"我的理解是把：与或门拆成与+或","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651046996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2254917,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/45/ddf89612.jpg","nickname":"bestgopher","note":"","ucode":"D89735C8CA9C6E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564834,"discussion_content":"比如mips只能操作寄存器，所以要实现8086的 add [1], ax 需要先load 内存到寄存器中，然后再add","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650337556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1567533,"avatar":"https://static001.geekbang.org/account/avatar/00/17/eb/2d/00edd41f.jpg","nickname":"az","note":"","ucode":"AB1C737F8BF2C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375722,"discussion_content":"打个比方，对厨师你说来个宫保鸡丁就完事了，对不会烧菜的人你得把宫保鸡丁拆解成原料备菜炒菜详细步骤，告诉他你就按这个步骤烧个菜给我","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621831997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1567533,"avatar":"https://static001.geekbang.org/account/avatar/00/17/eb/2d/00edd41f.jpg","nickname":"az","note":"","ucode":"AB1C737F8BF2C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376081,"discussion_content":"哈哈，谢谢回复，你这还是举的生活中的例子。我是希望直接举比如intel或者其他CPU的常用指令集的例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621951782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":375722,"ip_address":""},"score":376081,"extra":""}]}]},{"had_liked":false,"id":220576,"user_name":"天使也有爱","can_delete":false,"product_type":"c1","uid":1368010,"ip_address":"","ucode":"3CCB7C47A0919E","user_header":"https://static001.geekbang.org/account/avatar/00/14/df/ca/7c223fce.jpg","comment_is_top":false,"comment_ctime":1590289517,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14475191405","product_id":100026001,"comment_content":"我觉得最主要是arm生态比intel 要好，只授权不生产cpu, 只收授权费，也让其他厂家扩展自己的功能，像百花齐放那种，还有就是价格便宜，功耗低","like_count":3},{"had_liked":false,"id":117803,"user_name":"墨渊战神01","can_delete":false,"product_type":"c1","uid":1046665,"ip_address":"","ucode":"79668ADBB2A4DA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/89/7431e82e.jpg","comment_is_top":false,"comment_ctime":1564133289,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14449035177","product_id":100026001,"comment_content":"pc时代有intel, 移动互联网时代有arm，物联网时代是不是会有更低功耗更高效的架构出现？","like_count":3,"discussions":[{"author":{"id":1476675,"avatar":"https://static001.geekbang.org/account/avatar/00/16/88/43/31641bf0.jpg","nickname":"布朗老熊","note":"","ucode":"A8AF82550AFF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203845,"discussion_content":"物联网有riscv，万物互联。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584092022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108960,"user_name":"xindoo","can_delete":false,"product_type":"c1","uid":1101718,"ip_address":"","ucode":"AEAF3208E644BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/96/251c0cee.jpg","comment_is_top":false,"comment_ctime":1561942324,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"14446844212","product_id":100026001,"comment_content":"atom是面向移动市场的，所以肯定会以低功耗为设计导向，我觉得肯定会大量参考rsic的设计，但atom貌似是可以运行windows的，应该还是x86的指令集。","like_count":3,"discussions":[{"author":{"id":1250807,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","nickname":"DriveMan_邱佳源","note":"","ucode":"A4C83BF07DEE7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18233,"discussion_content":"atom功耗做到跟arm低，但是性能比不上arm ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569034441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412653,"discussion_content":"是否能运行windows不是判断标准","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636247080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282296,"discussion_content":"atom是全新的指令集吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591936705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209960,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1587640993,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10177575585","product_id":100026001,"comment_content":"CISC和RISC:<br>CISC复杂指令集，指令多，复杂。SISC精简指令集，指令少，常用指令短，复杂指令可以用简单指令组合，指令中有80%都是常用指令。早期都是C，后来出现了R，但是因为兼容问题，因特尔还是采用C，不过他们引入了微指令，其实就是类似的R。但是功耗大，对硬件要求高，后来在手机芯片中就采用了R。现在手机芯片都是ARM架构","like_count":2},{"had_liked":false,"id":167039,"user_name":"大王叫我来巡山","can_delete":false,"product_type":"c1","uid":1099513,"ip_address":"","ucode":"1B8D0C701BC95E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/f9/caf27bd3.jpg","comment_is_top":false,"comment_ctime":1577676186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167610778","product_id":100026001,"comment_content":"我第一次看懂RSIC和CSIC，感觉上学时候老师讲了很多都没明白，应该是不成体系","like_count":2},{"had_liked":false,"id":126420,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1566385273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10156319865","product_id":100026001,"comment_content":"我工作的这10多年里用的都是Intel 的 x86 CPU、对于ARM只知道是嵌入式、应用才交换机、路由器、智能手机领域，至于到底和Intel 的 x86 CPU底层的实现原理有什么区别我一直都不是很明白，一直有这样的疑问，但是不知道应该去哪里问？正好看到这篇文章我才明白了<br>day29 笔记：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;11330406.html","like_count":2},{"had_liked":false,"id":232756,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1594110150,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5889077446","product_id":100026001,"comment_content":"ARM的策略是做减法，减少指令数，减少cpu性能，减少公司业务。微指令由指令译码器将复杂指令转成多条简单指令，虽然指令处理效率高了，但译码所要花的时间也更长了。","like_count":1},{"had_liked":false,"id":356697,"user_name":"Martin","can_delete":false,"product_type":"c1","uid":1717965,"ip_address":"广东","ucode":"A20A548B3AA0E7","user_header":"https://static001.geekbang.org/account/avatar/00/1a/36/cd/fddf8069.jpg","comment_is_top":false,"comment_ctime":1662516896,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662516896","product_id":100026001,"comment_content":"《计算机体系结构：量化研究方法》，查了好像只有第五版是中文，第六版英文肯定不好消化。第五版可以跟上我们现在的软硬件发展嘛？ ","like_count":0},{"had_liked":false,"id":356695,"user_name":"Martin","can_delete":false,"product_type":"c1","uid":1717965,"ip_address":"广东","ucode":"A20A548B3AA0E7","user_header":"https://static001.geekbang.org/account/avatar/00/1a/36/cd/fddf8069.jpg","comment_is_top":false,"comment_ctime":1662516792,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662516792","product_id":100026001,"comment_content":"老师请问《计算机组成与设计：硬件 &#47; 软件接口》看有第六版、第五版的RISC-V版、第五版的ARM版；普通零基础小白，买哪个版本好？","like_count":0},{"had_liked":false,"id":321106,"user_name":"活着即是修行","can_delete":false,"product_type":"c1","uid":2258416,"ip_address":"","ucode":"C420AA71FB7F9F","user_header":"https://static001.geekbang.org/account/avatar/00/22/75/f0/2c65887d.jpg","comment_is_top":false,"comment_ctime":1636681939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636681939","product_id":100026001,"comment_content":"终于明白了为什么arm适用于手机端","like_count":0},{"had_liked":false,"id":320315,"user_name":"HollyWong","can_delete":false,"product_type":"c1","uid":2837328,"ip_address":"","ucode":"03A66A2BCC0A58","user_header":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","comment_is_top":false,"comment_ctime":1636245717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636245717","product_id":100026001,"comment_content":"PowerPC是Motorola的吧？","like_count":0},{"had_liked":false,"id":300150,"user_name":"Geek_75b2e6","can_delete":false,"product_type":"c1","uid":2637276,"ip_address":"","ucode":"E6F60D646D1565","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqH9rugpZngCB0OVNhKdXjInPIIFQhnicG5fEKnQKHo7p2kIJuXSmQ7756Jsy7cwN6XaYtdvbtsOCQ/132","comment_is_top":false,"comment_ctime":1625022015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625022015","product_id":100026001,"comment_content":"之前都在想，为什么X86_64的，经常看到AMD64，曾经都不敢安装，AMD64的包。这下才明白","like_count":0},{"had_liked":false,"id":299781,"user_name":"Yongtao","can_delete":false,"product_type":"c1","uid":2324603,"ip_address":"","ucode":"248BE5661D6532","user_header":"https://static001.geekbang.org/account/avatar/00/23/78/7b/09defb8d.jpg","comment_is_top":false,"comment_ctime":1624858944,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1624858944","product_id":100026001,"comment_content":"凌动（Atom）是CISC，面向嵌入式设备。<br>安腾 （Itanium）是RISC，面向服务器。","like_count":0,"discussions":[{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412656,"discussion_content":"反了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636247315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284071,"user_name":"大利","can_delete":false,"product_type":"c1","uid":1608364,"ip_address":"","ucode":"271BE88C4124FE","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/ac/82699bc8.jpg","comment_is_top":false,"comment_ctime":1616056623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616056623","product_id":100026001,"comment_content":"读完酣畅淋漓","like_count":0},{"had_liked":false,"id":252024,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1602064509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602064509","product_id":100026001,"comment_content":"猜测肯定是RISC的","like_count":0},{"had_liked":false,"id":185506,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1583595175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583595175","product_id":100026001,"comment_content":"atom兼容x86，所以也应该是混合指令设计的","like_count":0},{"had_liked":false,"id":156596,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1574919761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574919761","product_id":100026001,"comment_content":"微指令：由于cpu指令的局部性原理，所以，Intel 就在 CPU 里面加了一层 L0 Cache。这个 Cache 保存的就是指令译码器把 CISC 的指令“翻译”成 RISC 的微指令的结果","like_count":0},{"had_liked":false,"id":136114,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1569370035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569370035","product_id":100026001,"comment_content":"1  手机用ram  是因为，ram的功耗更低","like_count":0},{"had_liked":false,"id":126422,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1566385442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566385442","product_id":100026001,"comment_content":"看到标题就迫不及待的来看个究竟<br>我工作中有用到的虚拟化管理软件有KVM openstack私有云、看了老师内容觉得收获很大给老师一个大大赞<br> day34 笔记：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;11390256.html","like_count":0},{"had_liked":false,"id":113836,"user_name":"zhuanglog","can_delete":false,"product_type":"c1","uid":1236700,"ip_address":"","ucode":"CC7EC5791D4C9C","user_header":"https://static001.geekbang.org/account/avatar/00/12/de/dc/ee9be37a.jpg","comment_is_top":false,"comment_ctime":1563167504,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563167504","product_id":100026001,"comment_content":"老师那你觉得ARM芯片最后在性能上会比过Intel的X86嘛？","like_count":0,"discussions":[{"author":{"id":1250807,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","nickname":"DriveMan_邱佳源","note":"","ucode":"A4C83BF07DEE7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18229,"discussion_content":"感觉ARM是在功耗上比X86低，并且ARM架构支持兼容问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569034219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111630,"user_name":"开心","can_delete":false,"product_type":"c1","uid":1517457,"ip_address":"","ucode":"C8E08E8724C7CE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKkzrezV2dOBAgickt9DLzabz3dNFYyDEVXENMQ5ibrWhFbFqXIOia3ZaR21pozvB7UfoxJx4Ar688sA/132","comment_is_top":false,"comment_ctime":1562575681,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1562575681","product_id":100026001,"comment_content":"讲的很精彩","like_count":0},{"had_liked":false,"id":109126,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1561967505,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1561967505","product_id":100026001,"comment_content":"这个intel之前的移动端芯片功耗过大而不能像PC端一样处于垄断地位。那问题来了，既然ARM构架在功耗上有优势，本身PC端功耗也是一个大问题（比如什么N卡电表倒转，农厂大火炉这样的梗），那为什么近些年PC端ARM构架没什么作为，是传说中的生态问题导致的吗？感觉以后不同种类终端都会统一起来，执行一个标准，处处运行会是一个趋势吗？","like_count":0,"discussions":[{"author":{"id":2023574,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/FXUzj6S2tq6iabBMGM6Z1DJTrGaroYECkD8Cictv4Xya0PvyqLicoNsk2KUEpaxoAC3iaPCxsUjgG9JslJk15iaK8icQ/132","nickname":"孙立","note":"","ucode":"7AB3E34DEA6D6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374830,"discussion_content":"苹果arm","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621385062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250807,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","nickname":"DriveMan_邱佳源","note":"","ucode":"A4C83BF07DEE7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18230,"discussion_content":"应该是window生态系统被intel垄断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569034288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108989,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1561944388,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561944388","product_id":100026001,"comment_content":"Atom仍然是X86 CPU，所以它应该还是“带有微指令架构的CISC CPU”。不过Atom基本已经失败了。说明intel在低功耗CPU的设计上积累还是一般","like_count":0},{"had_liked":false,"id":108928,"user_name":"ezra.xu","can_delete":false,"product_type":"c1","uid":1014005,"ip_address":"","ucode":"6C3E11889BC6AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/f5/ae200a94.jpg","comment_is_top":false,"comment_ctime":1561939198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561939198","product_id":100026001,"comment_content":"按老师结尾部分的内容推测，应该是CISC了−−","like_count":0}]}