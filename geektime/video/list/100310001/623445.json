{"id":623445,"title":"93｜再回首：“数据分析”单元小结","content":"<p>你好，我是尹会生。</p><p>这一章，我为你展示了如何使用Python，实现数据分析工作中的数据采集、清洗、存储、分析，以及展示各个环节的工作。从视频中我们知道，Python能够实现数据分析工作中的绝大多数功能，所以Python也成为很多数据分析师手中的利器，甚至Python还可以通过第三方库支持很多现成的数据分析算法，让你开箱即用。</p><p>在数据分析过程中，我们除了使用Python的基本功能外，很多时候还要使用Python的第三方库来实现更加强大的功能，那么这一讲，我来为你盘点一下功能强大又使用便利的第三方库，让你在数据分析工作中能够事半功倍。</p><p>首先，我们将数据分析中常用的库按照数据采集、数据清洗、数据分析分成3个部分，下面我们依次介绍一下这3个部分。我们先来看数据采集常用的Python库。</p><h3><strong>数据采集</strong></h3><p>利用Python做数据采集工作时，我们用得最多的是Requests、Selenium、Charles三个库。其中前两个库用来采集PC端HTTP接口的数据，最后一个用来采集手机端App数据。我们一个一个来详细了解它们。</p><p><a href=\"https://requests.readthedocs.io/en/latest/\">Requests</a> 库号称是“对人类友好的HTTP库”，这也是即使Python标准库中已经有了功能非常强大的HTTP库，我还会再推荐它的原因。那么Requests库的友好体现在哪里呢？</p>","comments":[{"had_liked":false,"id":366883,"user_name":"刘永超","can_delete":false,"product_type":"c3","uid":2066121,"ip_address":"河南","ucode":"94CCA30F9E1567","user_header":"https://static001.geekbang.org/account/avatar/00/1f/86/c9/456f803d.jpg","comment_is_top":false,"comment_ctime":1674529364,"is_pvip":false,"replies":[{"id":133721,"content":"谢谢，一起加油","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1674793050,"ip_address":"广东","comment_id":366883,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"尹老师的课提纲挈领，精简通透，娓娓道来，实战代码丰富，从中感受专家的技术魅力，感谢尹老师！感谢极客时间，让专家就在身边。","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600727,"discussion_content":"谢谢，一起加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674793051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367021,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1674816333,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"如果要抓取的数据是图片、声音等非文字类数据，可以将这些非文字类数据下载到本机，通过文件形式进行存储。同时，将文件的绝对存储路径作为一个索引信息，存储在数据库中。","like_count":1},{"had_liked":false,"id":385230,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702297414,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"在 Python 中，你可以使用各种库来抓取和保存非文字类数据。以下是一些基本的步骤和代码示例：\n\n1. **获取数据的地址**：通常，非文字类数据（如图片或声音文件）在网页上以链接的形式存在。你可以使用 `requests` 库来获取网页的内容，然后使用 `BeautifulSoup` 库来解析网页并提取出数据的链接。以下是一个简单的代码示例：\n\n```python\nfrom bs4 import BeautifulSoup\nimport requests\n\n# 获取网页内容\nurl = &#39;https:&#47;&#47;example.com&#39;\nresponse = requests.get(url)\n\n# 解析网页\nsoup = BeautifulSoup(response.text, &#39;html.parser&#39;)\n\n# 提取图片链接\nimg_urls = [img[&#39;src&#39;] for img in soup.find_all(&#39;img&#39;)]\n\n# 提取声音文件链接\naudio_urls = [audio[&#39;src&#39;] for audio in soup.find_all(&#39;audio&#39;)]\n```\n\n2. **保存数据到本地**：一旦你获取到了数据的链接，你就可以使用 `requests` 库来下载数据，并将其保存到本地。以下是一个简单的代码示例：\n\n```python\nimport os\n\n# 下载并保存图片\nfor img_url in img_urls:\n    img_data = requests.get(img_url).content\n    with open(os.path.join(&#39;path_to_save_images&#39;, &#39;image.jpg&#39;), &#39;wb&#39;) as handler:\n        handler.write(img_data)\n\n# 下载并保存声音文件\nfor audio_url in audio_urls:\n    audio_data = requests.get(audio_url).content\n    with open(os.path.join(&#39;path_to_save_audios&#39;, &#39;audio.mp3&#39;), &#39;wb&#39;) as handler:\n        handler.write(audio_data)\n```\n\n以上就是使用 Python 抓取和保存非文字类数据的基本方法。希望这个答案对你有所帮助！","like_count":0},{"had_liked":false,"id":385029,"user_name":"760418","can_delete":false,"product_type":"c3","uid":3768167,"ip_address":"上海","ucode":"C160176FE97575","user_header":"","comment_is_top":false,"comment_ctime":1701951429,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# 中文乱码\n plt.rcParams[&#39;font.sans-serif&#39;]=[&#39;SimHei&#39;]\n plt.rcParams[&#39;axes.unicode_minus&#39;]=False\n # 绘制折线图\n plt.plot(x, y1, label=&quot; 北京 &quot;)\n plt.plot(x, y2, label=&quot; 上海 &quot;)\n plt.legend(loc=&quot;upper left&quot;) \n \n plt.title(&quot; 北京与上海近 7 天温度情况 &quot;)\n plt.ylabel(&quot; 温度 &quot;)\n plt.xlabel(&quot; 日期 &quot;)\n plt.show()","like_count":0},{"had_liked":false,"id":384980,"user_name":"760418","can_delete":false,"product_type":"c3","uid":3768167,"ip_address":"上海","ucode":"C160176FE97575","user_header":"","comment_is_top":false,"comment_ctime":1701868957,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# 中文乱码\n plt.rcParams[&#39;font.sans-serif&#39;]=[&#39;SimHei&#39;]\n plt.rcParams[&#39;axes.unicode_minus&#39;]=False\n # 绘制折线图\n plt.plot(x, y1, label=&quot; 北京 &quot;)\n plt.plot(x, y2, label=&quot; 上海 &quot;)\n plt.legend(loc=&quot;upper left&quot;) \n \n plt.title(&quot; 北京与上海近 7 天温度情况 &quot;)\n plt.ylabel(&quot; 温度 &quot;)\n plt.xlabel(&quot; 日期 &quot;)\n plt.show()","like_count":0},{"had_liked":false,"id":384979,"user_name":"760418","can_delete":false,"product_type":"c3","uid":3768167,"ip_address":"上海","ucode":"C160176FE97575","user_header":"","comment_is_top":false,"comment_ctime":1701868916,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"谢谢","like_count":0},{"had_liked":false,"id":383317,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1698842554,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"获取到图片和声音的地址后，通过requests库读取网络文件，确保大文件逐块下载，然后以二进制写入文件","like_count":0}]}