{"id":699436,"title":"02｜用LangChain快速构建基于“易速鲜花”本地知识库的智能问答系统","content":"<p>你好，我是黄佳，欢迎来到LangChain实战课！</p><p>在深入讲解LangChain的每一个具体组件之前，我想带着你从头完成一个很实用、很有意义的实战项目。目的就是让你直观感受一下LangChain作为一个基于大语言模型的应用开发框架，功能到底有多么强大。好的，现在就开始！</p><h2>项目及实现框架</h2><p>我们先来整体了解一下这个项目。</p><p><strong>项目名称</strong>：“易速鲜花”内部员工知识库问答系统。</p><p><strong>项目介绍</strong>：“易速鲜花”作为一个大型在线鲜花销售平台，有自己的业务流程和规范，也拥有针对员工的SOP手册。新员工入职培训时，会分享相关的信息。但是，这些信息分散于内部网和HR部门目录各处，有时不便查询；有时因为文档过于冗长，员工无法第一时间找到想要的内容；有时公司政策已更新，但是员工手头的文档还是旧版内容。</p><p>基于上述需求，我们将开发一套基于各种内部知识手册的 “Doc-QA” 系统。这个系统将充分利用LangChain框架，处理从员工手册中产生的各种问题。这个问答系统能够理解员工的问题，并基于最新的员工手册，给出精准的答案。</p><p><strong>开发框架</strong>：下面这张图片描述了通过LangChain框架实现一个知识库文档系统的整体框架。</p><p><img src=\"https://static001.geekbang.org/resource/image/c6/bf/c66995f1bf8575fb8fyye6293200eabf.jpg?wh=1393x697\" alt=\"\" title=\"基于数据源的文档问答系统开发框架\"></p><p>整个框架分为这样三个部分。</p><ul>\n<li>数据源（Data Sources）：数据可以有很多种，包括PDF在内的非结构化的数据（Unstructured Data）、SQL在内的结构化的数据（Structured Data），以及Python、Java之类的代码（Code）。在这个示例中，我们聚焦于对非结构化数据的处理。</li>\n<li>大模型应用（Application，即LLM App）：以大模型为逻辑引擎，生成我们所需要的回答。</li>\n<li>用例（Use-Cases）：大模型生成的回答可以构建出QA/聊天机器人等系统。</li>\n</ul><!-- [[[read_end]]] --><p><strong>核心实现机制：</strong>这个项目的核心实现机制是下图所示的数据处理管道（Pipeline）。</p><p><img src=\"https://static001.geekbang.org/resource/image/73/87/73a46eecd42038961db9067e75de3387.jpg?wh=2509x799\" alt=\"\" title=\"文档问答系统的数据处理管道\"></p><p>在这个管道的每一步中，LangChain都为我们提供了相关工具，让你轻松实现基于文档的问答功能。</p><p>具体流程分为下面5步。</p><ol>\n<li>Loading：文档加载器把Documents <strong>加载</strong>为以LangChain能够读取的形式。</li>\n<li>Splitting：文本分割器把Documents <strong>切分</strong>为指定大小的分割，我把它们称为“文档块”或者“文档片”。</li>\n<li>Storage：将上一步中分割好的“文档块”以“嵌入”（Embedding）的形式<strong>存储</strong>到向量数据库（Vector DB）中，形成一个个的“嵌入片”。</li>\n<li>Retrieval：应用程序从存储中<strong>检索</strong>分割后的文档（例如通过比较余弦相似度，找到与输入问题类似的嵌入片）。</li>\n<li>Output：把问题和相似的嵌入片传递给语言模型（LLM），使用包含问题和检索到的分割的提示<strong>生成答案</strong>。</li>\n</ol><p>上面5个环节的介绍都非常简单，有些概念（如嵌入、向量存储）是第一次出现，理解起来需要一些背景知识，别着急，我们接下来具体讲解这5步。</p><h2>数据的准备和载入</h2><p>“易速鲜花”的内部资料包括 pdf、word 和 txt 格式的各种文件，我已经放在<a href=\"https://github.com/huangjia2019/langchain/tree/main/02_%E6%96%87%E6%A1%A3QA%E7%B3%BB%E7%BB%9F\">这里</a>供你下载。</p><p><img src=\"https://static001.geekbang.org/resource/image/b6/ff/b69956a706112266df404eee953459ff.jpg?wh=402x224\" alt=\"\"></p><p>其中一个文档的示例如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/93/24/931a55af4f0a3842a640d95c2c4bf224.jpg?wh=1630x1073\" alt=\"\"></p><p>我们首先用LangChain中的document_loaders来加载各种格式的文本文件。（这些文件我把它放在OneFlower这个目录中了，如果你创建自己的文件夹，就要调整一下代码中的目录。）</p><p>在这一步中，我们从 pdf、word 和 txt 文件中加载文本，然后将这些文本存储在一个列表中。（注意：可能需要安装PyPDF、Docx2txt等库）</p><p>代码如下：</p><pre><code class=\"language-plain\">import os\nos.environ[\"OPENAI_API_KEY\"] = '你的Open AI API Key'\n\n# 1.Load 导入Document Loaders\nfrom langchain.document_loaders import PyPDFLoader\nfrom langchain.document_loaders import Docx2txtLoader\nfrom langchain.document_loaders import TextLoader\n\n# 加载Documents\nbase_dir = '.\\OneFlower' # 文档的存放目录\ndocuments = []\nfor file in os.listdir(base_dir): \n&nbsp; &nbsp; # 构建完整的文件路径\n&nbsp; &nbsp; file_path = os.path.join(base_dir, file)\n&nbsp; &nbsp; if file.endswith('.pdf'):\n&nbsp; &nbsp; &nbsp; &nbsp; loader = PyPDFLoader(file_path)\n&nbsp; &nbsp; &nbsp; &nbsp; documents.extend(loader.load())\n&nbsp; &nbsp; elif file.endswith('.docx'): \n&nbsp; &nbsp; &nbsp; &nbsp; loader = Docx2txtLoader(file_path)\n&nbsp; &nbsp; &nbsp; &nbsp; documents.extend(loader.load())\n&nbsp; &nbsp; elif file.endswith('.txt'):\n&nbsp; &nbsp; &nbsp; &nbsp; loader = TextLoader(file_path)\n&nbsp; &nbsp; &nbsp; &nbsp; documents.extend(loader.load())\n</code></pre><p>这里我们首先导入了OpenAI的API Key。因为后面我们需要利用Open AI的两种不同模型做以下两件事：</p><ul>\n<li>用OpenAI的Embedding模型为文档做嵌入。</li>\n<li>调用OpenAI的GPT模型来生成问答系统中的回答。</li>\n</ul><p>当然了，LangChain所支持的大模型绝不仅仅是Open AI而已，你完全可以遵循这个框架，把Embedding模型和负责生成回答的语言模型都替换为其他的开源模型。</p><p>在运行上面的程序时，除了要导入正确的Open AI Key之外，还要注意的是工具包的安装。使用LangChain时，根据具体的任务，往往需要各种不同的工具包（比如上面的代码需要PyPDF和Docx2txt工具）。它们安装起来都非常简单，如果程序报错缺少某个包，只要通过 <code>pip install</code> 安装相关包即可。</p><h2>文本的分割</h2><p>接下来需要将加载的文本分割成更小的块，以便进行嵌入和向量存储。这个步骤中，我们使用 LangChain中的RecursiveCharacterTextSplitter 来分割文本。</p><pre><code class=\"language-plain\"># 2.Split 将Documents切分成块以便后续进行嵌入和向量存储\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=200, chunk_overlap=10)\nchunked_documents = text_splitter.split_documents(documents)\n</code></pre><p>现在，我们的文档被切成了一个个200字符左右的文档块。这一步，是为把它们存储进下面的向量数据库做准备。</p><h2>向量数据库存储</h2><p>紧接着，我们将这些分割后的文本转换成嵌入的形式，并将其存储在一个向量数据库中。在这个例子中，我们使用了 OpenAIEmbeddings 来生成嵌入，然后使用 Qdrant 这个向量数据库来存储嵌入（这里需要pip install qdrant-client）。</p><p>如果文本的“嵌入”这个概念对你来说有些陌生的话，你可以看一下下面的说明。</p><blockquote>\n<p><span class=\"reference\">词嵌入（Word Embedding）是自然语言处理和机器学习中的一个概念，它将文字或词语转换为一系列数字，通常是一个向量。简单地说，词嵌入就是一个为每个词分配的数字列表。这些数字不是随机的，而是捕获了这个词的含义和它在文本中的上下文。因此，语义上相似或相关的词在这个数字空间中会比较接近。</span><br>\n&nbsp;<br>\n<span class=\"reference\">举个例子，通过某种词嵌入技术，我们可能会得到：</span><br>\n<span class=\"reference\">“国王” -&gt; [1.2, 0.5, 3.1, …]</span><br>\n<span class=\"reference\">“皇帝” -&gt; [1.3, 0.6, 2.9, …]</span><br>\n<span class=\"reference\">“苹果” -&gt; [0.9, -1.2, 0.3, …]</span><br>\n&nbsp;<br>\n<span class=\"reference\">从这些向量中，我们可以看到“国王”和“皇帝”这两个词的向量在某种程度上是相似的，而与“苹果”这个词相比，它们的向量则相差很大，因为这两个概念在语义上是不同的。</span><br>\n&nbsp;<br>\n<span class=\"reference\">词嵌入的优点是，它提供了一种将文本数据转化为计算机可以理解和处理的形式，同时保留了词语之间的语义关系。这在许多自然语言处理任务中都是非常有用的，比如文本分类、机器翻译和情感分析等。</span></p>\n</blockquote><p>你也可以对照下面的讲解学习一下向量数据库这个概念，它最近因为大语言模型的流行变得非常火爆。</p><blockquote>\n<p><span class=\"reference\">向量数据库，也称为矢量数据库或者向量搜索引擎，是一种专门用于存储和搜索向量形式的数据的数据库。在众多的机器学习和人工智能应用中，尤其是自然语言处理和图像识别这类涉及大量非结构化数据的领域，将数据转化为高维度的向量是常见的处理方式。这些向量可能拥有数百甚至数千个维度，是对复杂的非结构化数据如文本、图像的一种数学表述，从而使这些数据能被机器理解和处理。然而，传统的关系型数据库在存储和查询如此高维度和复杂性的向量数据时，往往面临着效率和性能的问题。因此，向量数据库被设计出来以解决这一问题，它具备高效存储和处理高维向量数据的能力，从而更好地支持涉及非结构化数据处理的人工智能应用。</span></p>\n</blockquote><p><img src=\"https://static001.geekbang.org/resource/image/e3/16/e3c7e244b15f9527a4eb811e550a8f16.png?wh=2989x1805\" alt=\"\" title=\"图片来源网络，向量数据库可以存储各种非结构化的数据\"></p><p>向量数据库有很多种，比如Pinecone、Chroma和Qdrant，有些是收费的，有些则是开源的。</p><p>LangChain中支持很多向量数据库，这里我们选择的是开源向量数据库Qdrant。（注意，需要安装qdrant-client）</p><p>具体实现代码如下：</p><pre><code class=\"language-plain\"># 3.Store 将分割嵌入并存储在矢量数据库Qdrant中\nfrom langchain.vectorstores import Qdrant\nfrom langchain.embeddings import OpenAIEmbeddings\nvectorstore = Qdrant.from_documents(\n&nbsp; &nbsp; documents=chunked_documents, # 以分块的文档\n&nbsp; &nbsp; embedding=OpenAIEmbeddings(), # 用OpenAI的Embedding Model做嵌入\n&nbsp; &nbsp; location=\":memory:\", &nbsp;# in-memory 存储\n&nbsp; &nbsp; collection_name=\"my_documents\",) # 指定collection_name\n</code></pre><p>目前，易速鲜花的所有内部文档，都以“文档块嵌入片”的格式被存储在向量数据库里面了。那么，我们只需要查询这个向量数据库，就可以找到大体上相关的信息了。</p><h2>相关信息的获取</h2><p>当内部文档存储到向量数据库之后，我们需要根据问题和任务来提取最相关的信息。此时，信息提取的基本方式就是把问题也转换为向量，然后去和向量数据库中的各个向量进行比较，提取最接近的信息。</p><p>向量之间的比较通常基于向量的距离或者相似度。在高维空间中，常用的向量距离或相似度计算方法有欧氏距离和余弦相似度。</p><ul>\n<li><strong>欧氏距离</strong>：这是最直接的距离度量方式，就像在二维平面上测量两点之间的直线距离那样。在高维空间中，两个向量的欧氏距离就是各个对应维度差的平方和的平方根。</li>\n<li><strong>余弦相似度</strong>：在很多情况下，我们更关心向量的方向而不是它的大小。例如在文本处理中，一个词的向量可能会因为文本长度的不同，而在大小上有很大的差距，但方向更能反映其语义。余弦相似度就是度量向量之间方向的相似性，它的值范围在-1到1之间，值越接近1，表示两个向量的方向越相似。</li>\n</ul><p>这两种方法都被广泛应用于各种机器学习和人工智能任务中，选择哪一种方法取决于具体的应用场景。</p><p><img src=\"https://static001.geekbang.org/resource/image/32/7a/32db77431433da86d9f818037752bd7a.png?wh=1600x1320\" alt=\"\" title=\"图片来源网络，语义相似的向量之间的距离近或者方向相似\"></p><p>当然这里你肯定会问了，那么到底什么时候选择欧式距离，什么时候选择余弦相似度呢？</p><p>简单来说，关心数量等大小差异时用欧氏距离，关心文本等语义差异时用余弦相似度。</p><p>具体来说，欧氏距离度量的是绝对距离，它能很好地反映出向量的绝对差异。当我们关心数据的绝对大小，例如在物品推荐系统中，用户的购买量可能反映他们的偏好强度，此时可以考虑使用欧氏距离。同样，在数据集中各个向量的大小相似，且数据分布大致均匀时，使用欧氏距离也比较适合。</p><p>余弦相似度度量的是方向的相似性，它更关心的是两个向量的角度差异，而不是它们的大小差异。在处理文本数据或者其他高维稀疏数据的时候，余弦相似度特别有用。比如在信息检索和文本分类等任务中，文本数据往往被表示为高维的词向量，词向量的方向更能反映其语义相似性，此时可以使用余弦相似度。</p><p>在这里，我们正在处理的是文本数据，目标是建立一个问答系统，需要从语义上理解和比较问题可能的答案。因此，我建议使用余弦相似度作为度量标准。通过比较问题和答案向量在语义空间中的方向，可以找到与提出的问题最匹配的答案。</p><p>在这一步的代码部分，我们会创建一个聊天模型。然后需要创建一个 RetrievalQA 链，它是一个检索式问答模型，用于生成问题的答案。</p><p>在RetrievalQA 链中有下面两大重要组成部分。</p><ul>\n<li>LLM是大模型，负责回答问题。</li>\n<li>retriever（vectorstore.as_retriever()）负责根据问题检索相关的文档，找到具体的“嵌入片”。这些“嵌入片”对应的“文档块”就会作为知识信息，和问题一起传递进入大模型。本地文档中检索而得的知识很重要，因为<strong>从互联网信息中训练而来的大模型不可能拥有“易速鲜花”作为一个私营企业的内部知识</strong>。</li>\n</ul><p>具体代码如下：</p><pre><code class=\"language-plain\"># 4. Retrieval 准备模型和Retrieval链\nimport logging # 导入Logging工具\nfrom langchain.chat_models import ChatOpenAI # ChatOpenAI模型\nfrom langchain.retrievers.multi_query import MultiQueryRetriever # MultiQueryRetriever工具\nfrom langchain.chains import RetrievalQA # RetrievalQA链\n\n# 设置Logging\nlogging.basicConfig()\nlogging.getLogger('langchain.retrievers.multi_query').setLevel(logging.INFO)\n\n# 实例化一个大模型工具 - OpenAI的GPT-3.5\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo\", temperature=0)\n\n# 实例化一个MultiQueryRetriever\nretriever_from_llm = MultiQueryRetriever.from_llm(retriever=vectorstore.as_retriever(), llm=llm)\n\n# 实例化一个RetrievalQA链\nqa_chain = RetrievalQA.from_chain_type(llm,retriever=retriever_from_llm)\n</code></pre><p>现在我们已经为后续的步骤做好了准备，下一步就是接收来自系统用户的具体问题，并根据问题检索信息，生成回答。</p><h2>生成回答并展示</h2><p>这一步是问答系统应用的主要UI交互部分，这里会创建一个 Flask 应用（需要安装Flask包）来接收用户的问题，并生成相应的答案，最后通过 index.html 对答案进行渲染和呈现。</p><p>在这个步骤中，我们使用了之前创建的 RetrievalQA 链来获取相关的文档和生成答案。然后，将这些信息返回给用户，显示在网页上。</p><pre><code class=\"language-plain\"># 5. Output 问答系统的UI实现\nfrom flask import Flask, request, render_template\napp = Flask(__name__) # Flask APP\n\n@app.route('/', methods=['GET', 'POST'])\ndef home():\n&nbsp; &nbsp; if request.method == 'POST':\n\n&nbsp; &nbsp; &nbsp; &nbsp; # 接收用户输入作为问题\n&nbsp; &nbsp; &nbsp; &nbsp; question = request.form.get('question') &nbsp; &nbsp; &nbsp; &nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; \n&nbsp; &nbsp; &nbsp; &nbsp; # RetrievalQA链 - 读入问题，生成答案\n&nbsp; &nbsp; &nbsp; &nbsp; result = qa_chain({\"query\": question})\n&nbsp; &nbsp; &nbsp; &nbsp; \n&nbsp; &nbsp; &nbsp; &nbsp; # 把大模型的回答结果返回网页进行渲染\n&nbsp; &nbsp; &nbsp; &nbsp; return render_template('index.html', result=result)\n&nbsp; &nbsp; \n&nbsp; &nbsp; return render_template('index.html')\n\nif __name__ == \"__main__\":\n&nbsp; &nbsp; app.run(host='0.0.0.0',debug=True,port=5000)\n</code></pre><p>相关HTML网页的关键代码如下：</p><pre><code class=\"language-plain\">&lt;body&gt;\n&nbsp; &nbsp; &lt;div class=\"container\"&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"header\"&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h1&gt;易速鲜花内部问答系统&lt;/h1&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;img src=\"{{ url_for('static', filename='flower.png') }}\" alt=\"flower logo\" width=\"200\"&gt; \n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;form method=\"POST\"&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;label for=\"question\"&gt;Enter your question:&lt;/label&gt;&lt;br&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"question\" name=\"question\"&gt;&lt;br&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"submit\" value=\"Submit\"&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/form&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; {% if result is defined %}\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;Answer&lt;/h2&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;{{ result.result }}&lt;/p&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; {% endif %}\n&nbsp; &nbsp; &lt;/div&gt;\n&lt;/body&gt;\n\n</code></pre><p>这个项目的目录结构如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/21/3e/2110cd73ddb8677f9b188d41c589c73e.png?wh=710x465\" alt=\"\"></p><p>运行程序之后，我们跑起一个网页 <a href=\"http://127.0.0.1:5000/\">http://127.0.0.1:5000/</a>。与网页进行互动时，可以发现，问答系统完美生成了专属于异速鲜花内部资料的回答。</p><p><img src=\"https://static001.geekbang.org/resource/image/46/17/46b5b08c5f022f2c4c5975436b3e2d17.png?wh=567x338\" alt=\"\" title=\"问答系统成功检索到内部资料并作出回答\"></p><h2>总结时刻</h2><p>来回顾一下上面的流程。正如下图所示，我们先把本地知识切片后做Embedding，存储到向量数据库中，然后把用户的输入和从向量数据库中检索到的本地知识传递给大模型，最终生成所想要的回答。</p><p><img src=\"https://static001.geekbang.org/resource/image/24/af/249c631211275e40f3e72d05dda976af.jpg?wh=2523x1058\" alt=\"\"></p><p>怎么样，你是不是觉得整个流程特别简单易懂？</p><p>对了，LangChain+LLM的配置就是使原本复杂的东西变得特别简单，特别易于操作。而这个任务，在大模型和LangChain出现之前，要实现起来可不是这么简单的。</p><p>如果这个示例让你了解到了LangChain的威力，那么这节课的目标也就完成了。除了流程图的回顾，我也为你准备了一个详细版的脑图，你可以对照着复习。</p><p><img src=\"https://static001.geekbang.org/resource/image/78/c2/78a4b0435639b4db8c4e024d830a2ac2.jpg?wh=2482x1434\" alt=\"\"></p><p>在后面几节课中，我们即将对LangChain的模型、链、内存、代理等组件进行详细拆解，我会带着你实现更多任务，开发出更奇妙的应用。</p><h2>思考题</h2><ol>\n<li>请你用自己的话简述一下这个基于文档的QA（问答）系统的实现流程？</li>\n<li>LangChain支持很多种向量数据库，你能否用另一种常用的向量数据库Chroma来实现这个任务？</li>\n<li>LangChain支持很多种大语言模型，你能否用HuggingFace网站提供的开源模型 <a href=\"https://huggingface.co/google/flan-t5-xl\">google/flan-t5-x1</a> 代替GPT-3.5完成这个任务？</li>\n</ol><p>题目较多，可以选择性尝试，期待在留言区看到你的分享。如果你觉得内容对你有帮助，也欢迎分享给有需要的朋友！最后如果你学有余力，可以进一步学习下面的延伸阅读。</p><h2>延伸阅读</h2><ol>\n<li>LangChain官方文档对 <a href=\"https://docs.langchain.com/docs/use-cases/qa-docs\">Document QA 系统</a>设计及实现的详细说明</li>\n<li>HuggingFace官网上的<a href=\"https://huggingface.co/tasks/document-question-answering\">文档问答</a>资源</li>\n<li>论文<a href=\"https://arxiv.org/abs/2010.10439\">开放式表格与文本问题回答</a>，Chen, W., Chang, M.-W., Schlinger, E., Wang, W., &amp; Cohen, W. W. (2021). Open Question Answering over Tables and Text. ICLR 2021.</li>\n</ol>","comments":[{"had_liked":false,"id":391324,"user_name":"黄佳","can_delete":false,"product_type":"c1","uid":1809833,"ip_address":"新加坡","ucode":"8EC41D2EAB0E3C","user_header":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","comment_is_top":true,"comment_ctime":1717994378,"is_pvip":false,"replies":[{"id":142322,"content":"https:&#47;&#47;github.com&#47;huangjia2019&#47;langchain-in-action - 我给Repo改了个名","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1718028713,"ip_address":"新加坡","comment_id":391324,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"各位同学，好消息，本课代码我已经根据LangChain 0.2版本进行了更新，减少了warning！请大家Clone新的Github Repo参考DocQA_v0.2.py。https:&#47;&#47;github.com&#47;huangjia2019&#47;langchain\n","like_count":16,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646463,"discussion_content":"https://github.com/huangjia2019/langchain-in-action - 我给Repo改了个名","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718028713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1687571,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c0/13/52cd5ea8.jpg","nickname":"Ryan","note":"","ucode":"A316CBB3CAB97B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653761,"discussion_content":"老师你好，请教一下，学完这个课程，我能不能基于前端组件库文档搭建一个知识库，生成代码给我？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731422226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381430,"user_name":"shatu","can_delete":false,"product_type":"c1","uid":2760732,"ip_address":"北京","ucode":"27077AA35B8C22","user_header":"https://static001.geekbang.org/account/avatar/00/2a/20/1c/de379ed1.jpg","comment_is_top":false,"comment_ctime":1695199346,"is_pvip":false,"replies":[{"id":138944,"content":"shatu兄弟来啦。一年多前，你在《零基础实战机器学习》专栏中给我留言，解决了matplotlib绘图无法显示中文和负号的问题。我把那个方案写进了《数据分析咖哥十话》书里面了，序言中我同时也感谢了你。\n-------------------------------------------\nhttps:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;414504 \n2.matplotlib作图标签产生乱码的解决方案\nplt.rcParams[&#39;font.sans-serif&#39;]=[&#39;SimHei&#39;] #用来正常显示中文标签\nplt.rcParams[&#39;axes.unicode_minus&#39;]=False #用来正常显示负号\n-------------------------------------------\n这里，谢谢你的再次分享。\n\n对于几个问题：\n1.MultiQueryRetriever在代码中的意义是什么？\nMultiQueryRetriever - 这是LangChain中的检索器之一。它的特点使用语言模型从不同的视角为给定的用户输入查询生成多个查询。然后使用这些查询来检索一组相关文档。—— 这是一种常见策略。\n2.Langchain中不同Retrievers应该如何选择？——  Langchain中Retriever很多，MultiQueryRetriever、VectorRetriever和KeywordRetriever等等。详见第15课。\n不同的Retrievers在Langchain中有不同的选择方式。选择Retriever的方法取决于您的需求和数据类型。\n如果数据是基于向量的，可以选择使用VectorRetriever。VectorRetriever使用向量数据库进行检索，并根据查询向量找到最相似的文档。可以使用不同的嵌入模型（如OpenAIEmbeddings）来构建向量数据库，并使用VectorRetriever进行检索。\n如果数据是基于关键词的，可以选择使用KeywordRetriever。KeywordRetriever使用关键词匹配的方法进行检索。可以将关键词与文档进行关联，并使用KeywordRetriever根据关键词进行检索。\n如果希望自动生成多个查询并获取更丰富的结果，可以选择使用MultiQueryRetriever。MultiQueryRetriever使用语言模型生成多个查询，并根据这些查询检索相关文档。MultiQueryRetriever生成多个查询的不同视角，以获取更多潜在相关的文档。\n3.对于中文而言，如何判断不同文本分割方法的效果差异？\n--- 似乎没有一定之规，你可以试试记住方法，打印出来分割结果看一看。可能按照句子或者段落分吧。或者一个语义块分成一片（类似与段落）。","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1695226066,"ip_address":"新加坡","comment_id":381430,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"学习小结：\n排坑点：\n1.文本分割默认采用“utf-8”，中文字符会出错，改为“gbk”后解决\n问题点：\n1.MultiQueryRetriever在代码中的意义是什么？\n2.Langchain中不同Retrievers应该如何选择？\n3.对于中文而言，如何判断不同文本分割方法的效果差异？","like_count":20,"discussions":[{"author":{"id":2843816,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJTe4eLLCMb20O9AoXMCRdD8o4yCK8u3iaDk207z3cJicicInaBgJuNPJWicYrAWdwXS20LeC6adlQXsA/132","nickname":"Geek_62bb7d","note":"","ucode":"341C244F668C5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632560,"discussion_content":"大佬 字符编码问题怎么解决的哈？\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1700980468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2811365,"avatar":"","nickname":"Geek9671","note":"","ucode":"259F4143DFD2E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632559,"discussion_content":"1.文本分割默认采用“utf-8”，中文字符会出错，改为“gbk”后解决\n----\n这个问题怎么解决的哈？求解答","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1700980361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628361,"discussion_content":"shatu兄弟来啦。一年多前，你在《零基础实战机器学习》专栏中给我留言，解决了matplotlib绘图无法显示中文和负号的问题。我把那个方案写进了《数据分析咖哥十话》书里面了，序言中我同时也感谢了你。\n-------------------------------------------\nhttps://time.geekbang.org/column/article/414504 \n2.matplotlib作图标签产生乱码的解决方案\nplt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签\nplt.rcParams['axes.unicode_minus']=False #用来正常显示负号\n-------------------------------------------\n这里，谢谢你的再次分享。\n\n对于几个问题：\n1.MultiQueryRetriever在代码中的意义是什么？\nMultiQueryRetriever - 这是LangChain中的检索器之一。它的特点使用语言模型从不同的视角为给定的用户输入查询生成多个查询。然后使用这些查询来检索一组相关文档。—— 这是一种常见策略。\n2.Langchain中不同Retrievers应该如何选择？——  Langchain中Retriever很多，MultiQueryRetriever、VectorRetriever和KeywordRetriever等等。详见第15课。\n不同的Retrievers在Langchain中有不同的选择方式。选择Retriever的方法取决于您的需求和数据类型。\n如果数据是基于向量的，可以选择使用VectorRetriever。VectorRetriever使用向量数据库进行检索，并根据查询向量找到最相似的文档。可以使用不同的嵌入模型（如OpenAIEmbeddings）来构建向量数据库，并使用VectorRetriever进行检索。\n如果数据是基于关键词的，可以选择使用KeywordRetriever。KeywordRetriever使用关键词匹配的方法进行检索。可以将关键词与文档进行关联，并使用KeywordRetriever根据关键词进行检索。\n如果希望自动生成多个查询并获取更丰富的结果，可以选择使用MultiQueryRetriever。MultiQueryRetriever使用语言模型生成多个查询，并根据这些查询检索相关文档。MultiQueryRetriever生成多个查询的不同视角，以获取更多潜在相关的文档。\n3.对于中文而言，如何判断不同文本分割方法的效果差异？\n--- 似乎没有一定之规，你可以试试记住方法，打印出来分割结果看一看。可能按照句子或者段落分吧。或者一个语义块分成一片（类似与段落）。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1695226066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381234,"user_name":"Geek_ebb87d","can_delete":false,"product_type":"c1","uid":3622117,"ip_address":"四川","ucode":"4558A3B2862A4C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/h5jfedUT5Sv7ibzM8WNCxoO9c136UUXDroaib2BUVILcZVp0FFBiaDPEbzPVv1J94LhR4oianox3wgyWpUBbtNJs0A/132","comment_is_top":false,"comment_ctime":1694872198,"is_pvip":false,"replies":[{"id":138873,"content":"补充内容：随着LangChain文档的发展，有了一些读表策略，包括使用Unstrutured 库 摘出表格 等等 包括多模态的一些处理。\n\nhttps:&#47;&#47;github.com&#47;langchain-ai&#47;langchain&#47;blob&#47;master&#47;cookbook&#47;Semi_Structured_RAG.ipynb\n\n这些新内容，值得总结成一个新专栏！！！我要发奋学习了。\n\n的确，这是一个挑战。难度在于表格通常包含结构化信息，与传统的连续文本表示方式不同。\n\n那么，我们可以这么的做一些尝试哈：\n第一个是表格数据的预处理：将表格数据转换为连续文本描述。例如，一个表格中的条目&quot;姓名: 张三, 年龄: 25&quot;可以被转化为&quot;张三的年龄是25岁&quot;。这样就将表格内容转换为模型更容易理解的格式。\n\n第二个思路是融合一些专门基于表格数据而训练的大模型框架，比如说PyTorch Tabular或者TabNet，参考：\nhttps:&#47;&#47;paperswithcode.com&#47;paper&#47;pytorch-tabular-a-framework-for-deep-learning\nhttps:&#47;&#47;paperswithcode.com&#47;method&#47;tabnet\n\n第三个思路，是否可以结合知识图谱。知识图谱是表示知识的图形结构。通过将表格数据转换为知识图谱中的实体和关系，是否可以使用图神经网络或其他技术来查询和处理数据。---- 视你的具体表格是什么表格而定。\n\n第4个思路：在RAG系统中，增强检索组件的能力以更好地检索表格数据。这可能涉及开发针对表格结构的特定检索策略。——比如说生成索引时，加入一些Meta data。\n\n总而言之，我感觉如果你的表格直接嵌入后效果不好的话，考虑需要对表格数据做一些特征工程，再嵌入或者存储。","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1694963749,"ip_address":"新加坡","comment_id":381234,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"其实不仅图片，文档中如果有表格，处理问答的效果也不好，表格方面老师是否有思路？\n","like_count":15,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628116,"discussion_content":"补充内容：随着LangChain文档的发展，有了一些读表策略，包括使用Unstrutured 库 摘出表格 等等 包括多模态的一些处理。\n\nhttps://github.com/langchain-ai/langchain/blob/master/cookbook/Semi_Structured_RAG.ipynb\n\n这些新内容，值得总结成一个新专栏！！！我要发奋学习了。\n\n的确，这是一个挑战。难度在于表格通常包含结构化信息，与传统的连续文本表示方式不同。\n\n那么，我们可以这么的做一些尝试哈：\n第一个是表格数据的预处理：将表格数据转换为连续文本描述。例如，一个表格中的条目\"姓名: 张三, 年龄: 25\"可以被转化为\"张三的年龄是25岁\"。这样就将表格内容转换为模型更容易理解的格式。\n\n第二个思路是融合一些专门基于表格数据而训练的大模型框架，比如说PyTorch Tabular或者TabNet，参考：\nhttps://paperswithcode.com/paper/pytorch-tabular-a-framework-for-deep-learning\nhttps://paperswithcode.com/method/tabnet\n\n第三个思路，是否可以结合知识图谱。知识图谱是表示知识的图形结构。通过将表格数据转换为知识图谱中的实体和关系，是否可以使用图神经网络或其他技术来查询和处理数据。---- 视你的具体表格是什么表格而定。\n\n第4个思路：在RAG系统中，增强检索组件的能力以更好地检索表格数据。这可能涉及开发针对表格结构的特定检索策略。——比如说生成索引时，加入一些Meta data。\n\n总而言之，我感觉如果你的表格直接嵌入后效果不好的话，考虑需要对表格数据做一些特征工程，再嵌入或者存储。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1694963749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152412,"avatar":"https://static001.geekbang.org/account/avatar/00/11/95/9c/35f7bdbf.jpg","nickname":"孙鹏宇","note":"","ucode":"DF4A813EA4DDA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631193,"discussion_content":"我觉得结构化的表格反而不是问题 可以用markdown的表格表示或者json来表示 有的时候pdf文档的表格提取出来是乱的 他是被当作一个个文本块的顺序读出来的 这样表格本身的结构信息就完全丢失了 这才是最可怕的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699380183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1312694,"avatar":"https://static001.geekbang.org/account/avatar/00/14/07/b6/e213fc11.jpg","nickname":"她の他","note":"","ucode":"A61CEC365D782F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1152412,"avatar":"https://static001.geekbang.org/account/avatar/00/11/95/9c/35f7bdbf.jpg","nickname":"孙鹏宇","note":"","ucode":"DF4A813EA4DDA9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631888,"discussion_content":"如果是Mango中的数据，数据量比较大的情况下，如何快速检索呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700102558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":631193,"ip_address":"江苏","group_id":0},"score":631888,"extra":""}]}]},{"had_liked":false,"id":380988,"user_name":"Geek_439927","can_delete":false,"product_type":"c1","uid":2935783,"ip_address":"上海","ucode":"F7A1B76BD33CFA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDZx5XkVZFrlIxDEhWiatEmLLDtD7M5B35rJacp6qMUpdXDZpvpw3o7bCPqcUCWUWXM8q7PRelOZg/132","comment_is_top":false,"comment_ctime":1694532150,"is_pvip":false,"replies":[{"id":138791,"content":"同学，谢谢你提出的好问题。\nLangChain中是有文件检索这个模块的。你的系统操作手册中的文本部分可以被LangChain载入，进行Chunk，然后用大模型Embedding后存入向量数据库。后面你可以检索它们。\n但是，LangChain或者说文本类大模型目前还不支持多模态的功能，还不能读图，此处，你需要在你的应用中引入多模态的大模型，比如类似与CLIP这种图文模型（https:&#47;&#47;github.com&#47;openai&#47;CLIP - 图文对比学习方法），想办法把图文的索引链接起来。然后，在能够利用LangChain，在查询到文档时，把相关的图也同时显示出来。\n要完成你的需求，不是一件很轻松的工作，希望你能够把它弄出来，然后跟大家分享更具体地细节。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694626541,"ip_address":"新加坡","comment_id":380988,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师，我想通过Langchain +开源大模型搭建一个私有化的知识库GPT，文件内容是文字+图片，图片的内容没有文字，你可以想象成这个文件是一个系统操作手册，手册里面有一些文字描述，以及一步一步地操作截图，这种格式的文档可行吗，在LLM给出的回答中，希望能够显示这些图片","like_count":10,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627874,"discussion_content":"同学，谢谢你提出的好问题。\nLangChain中是有文件检索这个模块的。你的系统操作手册中的文本部分可以被LangChain载入，进行Chunk，然后用大模型Embedding后存入向量数据库。后面你可以检索它们。\n但是，LangChain或者说文本类大模型目前还不支持多模态的功能，还不能读图，此处，你需要在你的应用中引入多模态的大模型，比如类似与CLIP这种图文模型（https://github.com/openai/CLIP - 图文对比学习方法），想办法把图文的索引链接起来。然后，在能够利用LangChain，在查询到文档时，把相关的图也同时显示出来。\n要完成你的需求，不是一件很轻松的工作，希望你能够把它弄出来，然后跟大家分享更具体地细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694626541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1124105,"avatar":"https://static001.geekbang.org/account/avatar/00/11/27/09/5c873257.jpg","nickname":"小山羊","note":"","ucode":"FC1F6E8C162FD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630367,"discussion_content":"我买这个课，就是来学这个图片的，结果，有些失望啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698371976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380917,"user_name":"iLeGeND","can_delete":false,"product_type":"c1","uid":1055475,"ip_address":"北京","ucode":"4055A628A6E97C","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","comment_is_top":false,"comment_ctime":1694440919,"is_pvip":false,"replies":[{"id":138738,"content":"有！同学去我的github, https:&#47;&#47;github.com&#47;huangjia2019 , 找LangChain，我会把代码逐步都上传。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694485448,"ip_address":"新加坡","comment_id":380917,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师能不能提供一下文章中代码完整源码","like_count":9,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627732,"discussion_content":"有！同学去我的github, https://github.com/huangjia2019 , 找LangChain，我会把代码逐步都上传。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694485448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380915,"user_name":"iLeGeND","can_delete":false,"product_type":"c1","uid":1055475,"ip_address":"北京","ucode":"4055A628A6E97C","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","comment_is_top":false,"comment_ctime":1694440469,"is_pvip":false,"replies":[{"id":138740,"content":"谢谢同学鼓励，也希望大家多多分享自己使用时发现的用例。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694485592,"ip_address":"新加坡","comment_id":380915,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"深入浅出，相当清晰","like_count":5,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627734,"discussion_content":"谢谢同学鼓励，也希望大家多多分享自己使用时发现的用例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694485592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381128,"user_name":"阿斯蒂芬","can_delete":false,"product_type":"c1","uid":1024164,"ip_address":"广东","ucode":"61D5E3BDA4EBC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","comment_is_top":false,"comment_ctime":1694703196,"is_pvip":false,"replies":[{"id":138822,"content":"哈哈，这肿么能是小有成就感呢！这是大有成就感。\n本课代码，每个小朋友都应该亲手跑一遍。\n😁 😆 😅 😂 🤣","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694705813,"ip_address":"新加坡","comment_id":381128,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"跟着老师代码敲一遍，解决过程中遇到的问题，成功run起来之后，还是小有成就感的😎","like_count":4,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627956,"discussion_content":"哈哈，这肿么能是小有成就感呢！这是大有成就感。\n本课代码，每个小朋友都应该亲手跑一遍。\n😁 😆 😅 😂 🤣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694705813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","nickname":"阿斯蒂芬","note":"","ucode":"61D5E3BDA4EBC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628049,"discussion_content":"大成就！感觉手写了一个ChatPDF！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694788625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381046,"user_name":"Realm","can_delete":false,"product_type":"c1","uid":1081299,"ip_address":"浙江","ucode":"30CBEBE619D1A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/d3/b5896293.jpg","comment_is_top":false,"comment_ctime":1694607504,"is_pvip":true,"replies":[{"id":138792,"content":"具体情况具体分析，目前我们是把它保存在内存中的，因为这样检索起来比较快。当然你也完全可以将向量数据存储在磁盘上，比如使用Qdrant，Faiss等系统，都为向量数据创建高效的索引，从而实现快速的近似查询。这样你就不用每次都Embedding了。\n\n混合方案: 在某些情况下，你可能希望结合内存和磁盘存储。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694627096,"ip_address":"新加坡","comment_id":381046,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"这里切割文本，生成的向量数据库，保存在内存中吗？","like_count":4,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627875,"discussion_content":"具体情况具体分析，目前我们是把它保存在内存中的，因为这样检索起来比较快。当然你也完全可以将向量数据存储在磁盘上，比如使用Qdrant，Faiss等系统，都为向量数据创建高效的索引，从而实现快速的近似查询。这样你就不用每次都Embedding了。\n\n混合方案: 在某些情况下，你可能希望结合内存和磁盘存储。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694627096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2189310,"avatar":"https://static001.geekbang.org/account/avatar/00/21/67/fe/5d17661a.jpg","nickname":"悟尘","note":"","ucode":"4E7E854340D3A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631135,"discussion_content":"生成的向量数据，如果保存在内存中，占用的内存会不会很大？拿易速鲜花这个为例，大概占用多少内存？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699326728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1081299,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7f/d3/b5896293.jpg","nickname":"Realm","note":"","ucode":"30CBEBE619D1A2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2189310,"avatar":"https://static001.geekbang.org/account/avatar/00/21/67/fe/5d17661a.jpg","nickname":"悟尘","note":"","ucode":"4E7E854340D3A4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631452,"discussion_content":"也可以使用矢量数据库，通过网络访问数据库.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1699572303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":631135,"ip_address":"浙江","group_id":0},"score":631452,"extra":""}]}]},{"had_liked":false,"id":385820,"user_name":"清风明月","can_delete":false,"product_type":"c1","uid":1086309,"ip_address":"上海","ucode":"37E01E81F9A353","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/65/6016b046.jpg","comment_is_top":false,"comment_ctime":1703467376,"is_pvip":false,"replies":[{"id":140675,"content":"使用LangChain的索引API - https:&#47;&#47;python.langchain.com&#47;docs&#47;modules&#47;data_connection&#47;indexing","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1703842022,"ip_address":"瑞士","comment_id":385820,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"如果文档有更新怎么更新索引","like_count":3,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634727,"discussion_content":"使用LangChain的索引API - https://python.langchain.com/docs/modules/data_connection/indexing","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1703842023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382733,"user_name":"敬","can_delete":false,"product_type":"c1","uid":1344618,"ip_address":"上海","ucode":"56537F4C78E604","user_header":"https://static001.geekbang.org/account/avatar/00/14/84/6a/8599e17f.jpg","comment_is_top":false,"comment_ctime":1697904612,"is_pvip":false,"replies":[{"id":139458,"content":"好！谢谢同学的这个Input。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698143136,"ip_address":"瑞士","comment_id":382733,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"我用OpenAIEmbeddings查询出来的结果不对，后来该用text2vec-base-chinese才正常。 ","like_count":3,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630164,"discussion_content":"好！谢谢同学的这个Input。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698143137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213258,"avatar":"https://static001.geekbang.org/account/avatar/00/12/83/4a/3e08427e.jpg","nickname":"药师","note":"","ucode":"14BB054A38A2F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648986,"discussion_content":"请问是https://huggingface.co/shibing624/text2vec-base-chinese么？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1722507376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381290,"user_name":"南风北巷","can_delete":false,"product_type":"c1","uid":2795450,"ip_address":"北京","ucode":"F5A7A45537D249","user_header":"https://static001.geekbang.org/account/avatar/00/2a/a7/ba/66b4aebe.jpg","comment_is_top":false,"comment_ctime":1694999834,"is_pvip":false,"replies":[{"id":138888,"content":"文本切割粒度也是RAG里面的一个关键点。太细和太粗都不好。\n但是这里也有一个天然限制，就是，再粗，都不能超过4K，对吧。因为大模型可能都吃不进去那么大的Token数，目前的大模型一次能够Pass进去的Token数量是有这个限制的。\n那么，最小是多少？我认为也不能少过50到100个Token吧。如果你太少了，根本就没有多少上下文信息，检索出来的信息都是不完整的。\n\n那么，在100-4K这个范围，你应该如何具体确定你的切割粒度？那肯定又是和你的具体问题相关的了。\n\n如果你期待你的查询，结果都是200字以内的反馈，那么200-300的Token数量是合适的。\n如果你是做Summarization类型的任务，那么切片要大一点比较好，500，1000，可能才能总结出来些东西，对吧。\n\n还有一些考量\n考虑上下文：确保即使在细粒度的文本中，也要保存足够的上下文信息。例如，如果你选择句子为单位，那么可能考虑将前后的句子也加入，形成一个段落，以便为大模型提供上下文。\n\n采用动态窗口：在检索时，可以采用动态的窗口大小，即根据检索到的关键信息动态调整文本切割的范围。这样可以确保即使在细粒度中也能提供足够的上下文。\n结合多粒度策略：在检索或其他任务中，可以考虑同时使用多个文本粒度。例如，首先使用粗粒度获取大致的范围，然后在该范围内使用细粒度进一步检索。\n\n总之，不断调试吧，找到你的哪一款。你找到了，发现了一些经验，不要忘了和咱们分享。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695008113,"ip_address":"新加坡","comment_id":381290,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师，想问一下文本切割粒度怎样是合适的呢？粗粒度的文本被检索出来之后给大模型参考，大模型总会被文本中的无关信息干扰; 而细粒度的文本，我又怕检索出来的信息不全，缺少上下文信息，导致大模型没法给出正确答案。请问老师是怎么在工程中平衡切割文本的长短的呢？","like_count":3,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628142,"discussion_content":"文本切割粒度也是RAG里面的一个关键点。太细和太粗都不好。\n但是这里也有一个天然限制，就是，再粗，都不能超过4K，对吧。因为大模型可能都吃不进去那么大的Token数，目前的大模型一次能够Pass进去的Token数量是有这个限制的。\n那么，最小是多少？我认为也不能少过50到100个Token吧。如果你太少了，根本就没有多少上下文信息，检索出来的信息都是不完整的。\n\n那么，在100-4K这个范围，你应该如何具体确定你的切割粒度？那肯定又是和你的具体问题相关的了。\n\n如果你期待你的查询，结果都是200字以内的反馈，那么200-300的Token数量是合适的。\n如果你是做Summarization类型的任务，那么切片要大一点比较好，500，1000，可能才能总结出来些东西，对吧。\n\n还有一些考量\n考虑上下文：确保即使在细粒度的文本中，也要保存足够的上下文信息。例如，如果你选择句子为单位，那么可能考虑将前后的句子也加入，形成一个段落，以便为大模型提供上下文。\n\n采用动态窗口：在检索时，可以采用动态的窗口大小，即根据检索到的关键信息动态调整文本切割的范围。这样可以确保即使在细粒度中也能提供足够的上下文。\n结合多粒度策略：在检索或其他任务中，可以考虑同时使用多个文本粒度。例如，首先使用粗粒度获取大致的范围，然后在该范围内使用细粒度进一步检索。\n\n总之，不断调试吧，找到你的哪一款。你找到了，发现了一些经验，不要忘了和咱们分享。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695008113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2795450,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/a7/ba/66b4aebe.jpg","nickname":"南风北巷","note":"","ucode":"F5A7A45537D249","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":628263,"discussion_content":"老师，我想的就是先粗粒度的检索，再细粒度的检索，耗时主要在嵌入阶段，本地部署的嵌入模型嵌入速度好像很快，我想先这样做试一试，如果再有具体的问题，还想再向老师求教，感谢老师的耐心解答！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1695125886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":628142,"ip_address":"北京","group_id":0},"score":628263,"extra":""}]}]},{"had_liked":false,"id":386191,"user_name":"徐冰","can_delete":false,"product_type":"c1","uid":1208569,"ip_address":"上海","ucode":"BAC1B611CF58ED","user_header":"https://static001.geekbang.org/account/avatar/00/12/70/f9/352365e3.jpg","comment_is_top":false,"comment_ctime":1704288233,"is_pvip":false,"replies":[{"id":140823,"content":"您好！谢谢你分享这些尝试。我在想，如果RecursiveCharacterTextSplitter的确有这些限制，能否考虑把RecursiveCharacterTextSplitter Copy出来，自己做一个没有限制的版本。看看是否可行。看看其它同学有没有其它建议。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1704774450,"ip_address":"瑞士","comment_id":386191,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"黄老师你好，想请教下，我把大模型改成了使用阿里云的灵积大模型平台的通义千问API，同时使用灵积的&quot;text-embedding-v2&quot;的模型做文档的向量化处理。但是 做向量化的时候，发现这个灵积的&quot;text-embedding-v2&quot;这个api单次请求文本最大行数限制为最大25行。\ndemo中的pdf文档数据， documents.extend(loader.load())这一步是，我看documents列表大小就是35，\n后面调整分片大小，text_splitter = RecursiveCharacterTextSplitter(chunk_size=500,chunk_overlap=10)，chunk_size再大，分片数最小也是35，导致调用api超过最大行数限制。这块有什么办法处理下吗？","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635372,"discussion_content":"您好！谢谢你分享这些尝试。我在想，如果RecursiveCharacterTextSplitter的确有这些限制，能否考虑把RecursiveCharacterTextSplitter Copy出来，自己做一个没有限制的版本。看看是否可行。看看其它同学有没有其它建议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704774450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383595,"user_name":"悟尘","can_delete":false,"product_type":"c1","uid":2189310,"ip_address":"北京","ucode":"4E7E854340D3A4","user_header":"https://static001.geekbang.org/account/avatar/00/21/67/fe/5d17661a.jpg","comment_is_top":false,"comment_ctime":1699327255,"is_pvip":false,"replies":[{"id":140202,"content":"可以。你就有了一个医学+法律的聊天器。哪个更高？取决于你哪步的数据更好，取决于你训练的好，还是RAG的好。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700584213,"ip_address":"瑞士","comment_id":383595,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"如果一个大模型 使用的医学的知识库训练完成的，那我针对这个大模型再对法律经过 数据准备和载入、文本分割、向量数据库存储、相关信息的获取 等本文中的步骤，那这个大模型能提供法律的相关回答吗？该大模型提供的医学的及对法律提供的回答准确度 哪个更高一些？","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632252,"discussion_content":"可以。你就有了一个医学+法律的聊天器。哪个更高？取决于你哪步的数据更好，取决于你训练的好，还是RAG的好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700584213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383407,"user_name":"一路前行","can_delete":false,"product_type":"c1","uid":1288985,"ip_address":"北京","ucode":"32D3C715690783","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcFhGY0NV4kFzOSXWDHR2lrI2UbUP4Y016GOnpTH7dqSbicqJarX0pHxMsfLopRiacKEPXLx7IHHqg/132","comment_is_top":false,"comment_ctime":1698992356,"is_pvip":false,"replies":[{"id":139674,"content":"https:&#47;&#47;docs.google.com&#47;spreadsheets&#47;d&#47;1oAeF4Q7ILxxfInGJ8vTsBck3-2U9VV8idDf3hJOozNw&#47;edit#gid=0\n这里有人做了个比较表耶，同学看一看。目前我用起来，简单的需求大概都差不多。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1699002784,"ip_address":"瑞士","comment_id":383407,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"qdrant，chromadb,fiass老师在这些向量库的选择上有什么建议么","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630881,"discussion_content":"https://docs.google.com/spreadsheets/d/1oAeF4Q7ILxxfInGJ8vTsBck3-2U9VV8idDf3hJOozNw/edit#gid=0\n这里有人做了个比较表耶，同学看一看。目前我用起来，简单的需求大概都差不多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699002784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1524351,"avatar":"https://static001.geekbang.org/account/avatar/00/17/42/7f/db8fa45f.jpg","nickname":"晓涛","note":"","ucode":"41CB1620A9B82C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632462,"discussion_content":"商用的维度用哪个比较好呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700795154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382160,"user_name":"Lominnave","can_delete":false,"product_type":"c1","uid":1066748,"ip_address":"浙江","ucode":"0674B630718AD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/fc/147e38d9.jpg","comment_is_top":false,"comment_ctime":1696812198,"is_pvip":false,"replies":[{"id":139201,"content":"对结构化的数据库做Embedding，这个问题我没有想过。通常我们是对非结构化的数据做Embedding。如果数据库表的结构非常清晰了，那么我们还是用SQL来查询会更准确吧，我想。\nLLM可以做SQL查询，我后面课程里会有一节讲到。\n关于你的问题，我搜到两篇论文，你看看是否有帮助：\nhttps:&#47;&#47;dl.acm.org&#47;doi&#47;abs&#47;10.1145&#47;3076246.3076251\nhttps:&#47;&#47;www.cidrdb.org&#47;cidr2019&#47;papers&#47;p27-bordawekar-cidr19.pdf\n其它同学有遇到类似需求吗？","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696847028,"ip_address":"瑞士","comment_id":382160,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"请问老师，对于DB的结构化数据进行知识库建设，如何进行Embedding设计呢？","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629231,"discussion_content":"对结构化的数据库做Embedding，这个问题我没有想过。通常我们是对非结构化的数据做Embedding。如果数据库表的结构非常清晰了，那么我们还是用SQL来查询会更准确吧，我想。\nLLM可以做SQL查询，我后面课程里会有一节讲到。\n关于你的问题，我搜到两篇论文，你看看是否有帮助：\nhttps://dl.acm.org/doi/abs/10.1145/3076246.3076251\nhttps://www.cidrdb.org/cidr2019/papers/p27-bordawekar-cidr19.pdf\n其它同学有遇到类似需求吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696847028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1222726,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a8/46/42c2e559.jpg","nickname":"煜寶","note":"","ucode":"F5A5BB5DAD4912","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629435,"discussion_content":"我有同样的疑问，但我理解我这边是要对SQL的操作语句做Embeding，而非直接对db data做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697070876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391101,"user_name":"进击的矮人","can_delete":false,"product_type":"c1","uid":1711917,"ip_address":"四川","ucode":"3E2838168F62E9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1f/2d/90648df8.jpg","comment_is_top":false,"comment_ctime":1717327729,"is_pvip":false,"replies":[{"id":142249,"content":"最近实在是太忙太忙了，还没来得及整体梳理LangChain的代码，希望尽快弄。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1717498768,"ip_address":"新加坡","comment_id":391101,"utype":1}],"discussion_count":1,"race_medal":2,"score":3,"product_id":100617601,"comment_content":"老师, 代码还没更新呀","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646177,"discussion_content":"最近实在是太忙太忙了，还没来得及整体梳理LangChain的代码，希望尽快弄。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717498768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390917,"user_name":"风格若干","can_delete":false,"product_type":"c1","uid":1241291,"ip_address":"河北","ucode":"F6C676B4823033","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/cb/27b88c1c.jpg","comment_is_top":false,"comment_ctime":1716736070,"is_pvip":true,"replies":[{"id":142263,"content":"在这里呀https:&#47;&#47;python.langchain.com&#47;v0.2&#47;docs&#47;tutorials&#47;local_rag&#47;","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1717647674,"ip_address":"新加坡","comment_id":390917,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"LangChain 官方文档对 Document QA 系统设计及实现的详细说明，v0.1的链接失效了，老师方便帮忙找一下0.2版本的吗？","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646250,"discussion_content":"在这里呀https://python.langchain.com/v0.2/docs/tutorials/local_rag/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717647674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388988,"user_name":"Geek_094518","can_delete":false,"product_type":"c1","uid":3866037,"ip_address":"广东","ucode":"1AFD9AC9F4F27E","user_header":"","comment_is_top":false,"comment_ctime":1711343534,"is_pvip":false,"replies":[{"id":141709,"content":"是的，谢谢同学补充。我回头逐渐统一更新代码。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1712809290,"ip_address":"新加坡","comment_id":388988,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"排坑点2 \n\n要安装 pip install tiktoken\n\n从 langchain 导入向量存储和嵌入式模块的做法已被弃用,将在未来版本中被移除。您需要从 langchain-community 包中导入它们。例如:\n\nfrom langchain_community.vectorstores import Qdrant\nfrom langchain_community.embeddings import OpenAIEmbeddings\n","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641599,"discussion_content":"是的，谢谢同学补充。我回头逐渐统一更新代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712809290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384236,"user_name":"dydcm","can_delete":false,"product_type":"c1","uid":1105690,"ip_address":"广东","ucode":"7A3F4F292F3DB5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/hllDt1dmuR6iciaahutPe9NjOic5OPMc7fbTysLTn8wgCSPW3zjYvd5rYDWBwQkSmqfsFntK12fLmam63FWpMklfg/132","comment_is_top":false,"comment_ctime":1700567564,"is_pvip":false,"replies":[{"id":140170,"content":"可以把知识图谱中的Subgraph，以及关联Node，Triplets等等 Embedding后加入RAG的Pipeline中的某些环节，具体问题具体分析。\n现在有一种思潮认为ChatGPT出现之后，知识图谱没什么用了。你可以试试加入知识图谱元素效率是否会提高。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700578212,"ip_address":"瑞士","comment_id":384236,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"目前想用langchain知识图谱的图数据库与大模型结合，请问老师有什么建议方案吗？","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632213,"discussion_content":"可以把知识图谱中的Subgraph，以及关联Node，Triplets等等 Embedding后加入RAG的Pipeline中的某些环节，具体问题具体分析。\n现在有一种思潮认为ChatGPT出现之后，知识图谱没什么用了。你可以试试加入知识图谱元素效率是否会提高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700578212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383592,"user_name":"悟尘","can_delete":false,"product_type":"c1","uid":2189310,"ip_address":"北京","ucode":"4E7E854340D3A4","user_header":"https://static001.geekbang.org/account/avatar/00/21/67/fe/5d17661a.jpg","comment_is_top":false,"comment_ctime":1699326779,"is_pvip":false,"replies":[{"id":140201,"content":"是的，如同卓丁同学所说。好像可以，有相关文档。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700584111,"ip_address":"瑞士","comment_id":383592,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师，ES是向量数据库吗？分割后的文本，能否存储于ES里？","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632251,"discussion_content":"是的，如同卓丁同学所说。好像可以，有相关文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700584111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030687,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ba/1f/7551f182.jpg","nickname":"卓丁","note":"","ucode":"71B68238D304FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631439,"discussion_content":"ES 也具有向量存储的功能，也可以算作vdb，关于Langchain 和 ES 数据库的结合，可以参考官方文档：\nhttps://python.langchain.com/docs/integrations/text_embedding/elasticsearch\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1699536060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382615,"user_name":"一面湖水","can_delete":false,"product_type":"c1","uid":1193473,"ip_address":"四川","ucode":"6339F033312FB2","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/01/eb3ba274.jpg","comment_is_top":false,"comment_ctime":1697681422,"is_pvip":false,"replies":[{"id":139453,"content":"可参考文档https:&#47;&#47;python.langchain.com&#47;docs&#47;integrations&#47;document_loaders&#47;\n列出了所有！","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698142034,"ip_address":"瑞士","comment_id":382615,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"langchain的document_loaders目前都支持哪些文档类型呢？","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630159,"discussion_content":"可参考文档https://python.langchain.com/docs/integrations/document_loaders/\n列出了所有！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698142034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381885,"user_name":"张汝成","can_delete":false,"product_type":"c1","uid":2709072,"ip_address":"安徽","ucode":"87560F280AC793","user_header":"https://static001.geekbang.org/account/avatar/00/29/56/50/3fdfdceb.jpg","comment_is_top":false,"comment_ctime":1696087024,"is_pvip":false,"replies":[{"id":139103,"content":"同学好，如果想调用的模型已经开源，你的这个问题在第5课应该有答案。如果没有开源，那么智能等待它的API被LangChain所支持。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696241443,"ip_address":"新加坡","comment_id":381885,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师请问一下，我想在langchain里调用国产大模型，比如讯飞星火大模型，但我看langchain官网上它还没有被集成进去，那应该如何使用呢？","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628920,"discussion_content":"同学好，如果想调用的模型已经开源，你的这个问题在第5课应该有答案。如果没有开源，那么智能等待它的API被LangChain所支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696241444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1690447,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cb/4f/7466a488.jpg","nickname":"Pengyuan Li","note":"","ucode":"2759D2BB51D981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646944,"discussion_content":"大模型真的有“国产”的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719069805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381859,"user_name":"言十年","can_delete":false,"product_type":"c1","uid":1110039,"ip_address":"北京","ucode":"67B8B49C3A3B17","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","comment_is_top":false,"comment_ctime":1696043344,"is_pvip":false,"replies":[{"id":139100,"content":"https:&#47;&#47;github.com&#47;langchain-ai&#47;langchain&#47;issues&#47;8259 - 似乎有人汇报了同样的问题，多跑一次就好了，但是目前没有很好的稳定解决方案。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696240017,"ip_address":"新加坡","comment_id":381859,"utype":1}],"discussion_count":6,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"embeddings被限流了。大家怎么跑的呢？\n\n&#47;embeddings\nRetrying langchain.embeddings.openai.embed_with_retry.&lt;locals&gt;._embed_with_retry in 4.0 seconds as it raised RateLimitError: Rate limit reached for default-text-embedding-ada-002 in organization org-ZK1ptPebNCVCArIQG8s81jxx on requests per min. Limit: 3 &#47; min. Please try again in 20s. Contact us through our help center at help.openai.com if you continue to have issues. Please add a payment method to your account to increase your rate limit. Visit https:&#47;&#47;platform.openai.com&#47;account&#47;billing to add a payment method..","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628917,"discussion_content":"https://github.com/langchain-ai/langchain/issues/8259 - 似乎有人汇报了同样的问题，多跑一次就好了，但是目前没有很好的稳定解决方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696240017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111434,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/8a/e0fa8730.jpg","nickname":"学渣要每日进步","note":"","ucode":"0EB5CB54F2E890","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633922,"discussion_content":"retriever_from_llm = MultiQueryRetriever.from_llm(retriever=vectorstore.as_retriever(), llm=llm)\nqa_chain = RetrievalQA.from_chain_type(llm,retriever=retriever_from_llm) \n直接改成 \n qa_chain = RetrievalQA.from_chain_type(llm, retriever=vectorstore.as_retriever())","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702800469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3812327,"avatar":"","nickname":"Geek_92acd6","note":"","ucode":"ED648B38DA4688","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111434,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/8a/e0fa8730.jpg","nickname":"学渣要每日进步","note":"","ucode":"0EB5CB54F2E890","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635547,"discussion_content":"你这不是直接把MultiQueryRetriever给去掉了，削足适履","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704941752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":633922,"ip_address":"北京","group_id":0},"score":635547,"extra":""}]},{"author":{"id":1387305,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2b/29/e532303b.jpg","nickname":"铭威","note":"","ucode":"AADD5F95899F45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631753,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699934089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193473,"avatar":"https://static001.geekbang.org/account/avatar/00/12/36/01/eb3ba274.jpg","nickname":"一面湖水","note":"","ucode":"6339F033312FB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629270,"discussion_content":"我也是限流了，不晓得有什么办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696917993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1262168,"avatar":"https://static001.geekbang.org/account/avatar/00/13/42/58/2286eca6.jpg","nickname":"HdUIprince","note":"","ucode":"2510EBFACDBDB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628877,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696081494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390785,"user_name":"Geek_144417","can_delete":false,"product_type":"c1","uid":3579803,"ip_address":"","ucode":"6C6910108E1D56","user_header":"","comment_is_top":false,"comment_ctime":1716278364,"is_pvip":false,"replies":[{"id":142264,"content":"我觉得只是文本。同学可以深入看一下代码。目前也有能够把每一页PDF作为图的工具来读的解决方案，我的新课《大模型应用开发实战》中有可以读图的RAG示例。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1717647957,"ip_address":"新加坡","comment_id":390785,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"请问loader = PyPDFLoader(file_path)   documents.extend(loader.load()) 经过这一步，documents存的是什么，或者loader.load()是什么，是pdf的图片还是pdf编码成一段编码还是pdf解析后提取的文字和图片？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646251,"discussion_content":"我觉得只是文本。同学可以深入看一下代码。目前也有能够把每一页PDF作为图的工具来读的解决方案，我的新课《大模型应用开发实战》中有可以读图的RAG示例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717647957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390649,"user_name":"Amir","can_delete":false,"product_type":"c1","uid":1284452,"ip_address":"广东","ucode":"901D8E94E306CF","user_header":"https://static001.geekbang.org/account/avatar/00/13/99/64/7912c306.jpg","comment_is_top":false,"comment_ctime":1715853104,"is_pvip":false,"replies":[{"id":142266,"content":"ChatGLM新版对话功能也越来越强。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1717648057,"ip_address":"新加坡","comment_id":390649,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"智谱清言的embedding2 生成embedding效果还行，需要自己根据langchain 的 Embeddings自己实现一下","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646253,"discussion_content":"ChatGLM新版对话功能也越来越强。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717648058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241291,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f0/cb/27b88c1c.jpg","nickname":"风格若干","note":"","ucode":"F6C676B4823033","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645773,"discussion_content":"正纠结搞不定openai该怎么办，感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716736321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390417,"user_name":"曹胖子","can_delete":false,"product_type":"c1","uid":1374648,"ip_address":"湖南","ucode":"8911E5DA412E59","user_header":"https://static001.geekbang.org/account/avatar/00/14/f9/b8/0f3bd8ec.jpg","comment_is_top":false,"comment_ctime":1715311025,"is_pvip":false,"replies":[{"id":142269,"content":"谢谢！","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1717648344,"ip_address":"新加坡","comment_id":390417,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"新的：\nfrom langchain_community.document_loaders import PyPDFLoader\nfrom langchain_community.document_loaders import Docx2txtLoader\nfrom langchain_community.document_loaders import TextLoader\n\nfrom langchain_community.vectorstores import Qdrant\nfrom langchain_openai import OpenAIEmbeddings","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646256,"discussion_content":"谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717648344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390352,"user_name":"Geek_6df977","can_delete":false,"product_type":"c1","uid":1695261,"ip_address":"广东","ucode":"4F26A42C9BD901","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/9doFL0ZzcWf5gkQ10cHsOziamhHicjq1k2KHvJibkicBjHsKyvf9jMepvdgLFiadiaI8PScf73Pl7QK3ibp6MYicWn9BuQ/132","comment_is_top":false,"comment_ctime":1715181831,"is_pvip":false,"replies":[{"id":142272,"content":"目前我跑起来还好，没有遇到错误。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1717648512,"ip_address":"新加坡","comment_id":390352,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"有人遇到这个报错吗\nvectorstore = Qdrant.from_documents(\n    documents=chunked_documents,  # 以分块的文档\n    embedding=OpenAIEmbeddings(),  # 用OpenAI的Embedding Model做嵌入\n    location=&quot;:memory:&quot;,  # in-memory 存储\n    collection_name=&quot;my_documents&quot;, ) \n\n    vector_size = len(partial_embeddings[0])\n                      ~~~~~~~~~~~~~~~~~~^^^\nIndexError: list index out of range  ","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646259,"discussion_content":"目前我跑起来还好，没有遇到错误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717648512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388987,"user_name":"Geek_094518","can_delete":false,"product_type":"c1","uid":3866037,"ip_address":"广东","ucode":"1AFD9AC9F4F27E","user_header":"","comment_is_top":false,"comment_ctime":1711343358,"is_pvip":false,"replies":[{"id":141618,"content":"好嘞，感谢您的建议，我会安排调整一下课程和Github上面的代码。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1711987867,"ip_address":"新加坡","comment_id":388987,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"排坑建议:\n\n在您的Python代码中,将从langchain导入文档加载器的语句替换为从langchain-community导入。例如,如果您有以下导入语句:\n\n\nfrom langchain import Docx2txtLoader\nfrom langchain import TextLoader\n请将它们替换为:\n\nfrom langchain_community.document_loaders import Docx2txtLoader\nfrom langchain_community.document_loaders import TextLoader","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640929,"discussion_content":"好嘞，感谢您的建议，我会安排调整一下课程和Github上面的代码。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1711987867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386376,"user_name":"！","can_delete":false,"product_type":"c1","uid":2049513,"ip_address":"安徽","ucode":"C84A98C613A95A","user_header":"https://static001.geekbang.org/account/avatar/00/1f/45/e9/4947093c.jpg","comment_is_top":false,"comment_ctime":1704712901,"is_pvip":false,"replies":[{"id":140914,"content":"很难说。你换个向量数据库，或者重跑一下试试？","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1705069002,"ip_address":"瑞士","comment_id":386376,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"Traceback (most recent call last):\n  File &quot;&#47;Users&#47;wangrui&#47;Documents&#47;dev&#47;project&#47;python&#47;langchain-learning&#47;answer_QA.py&quot;, line 34, in &lt;module&gt;\n    vectorstore = Qdrant.from_documents(\n  File &quot;&#47;Users&#47;wangrui&#47;anaconda3&#47;envs&#47;py3.9&#47;lib&#47;python3.9&#47;site-packages&#47;langchain_core&#47;vectorstores.py&quot;, line 508, in from_documents\n    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)\n\n    return self._request(\n  File &quot;&#47;Users&#47;wangrui&#47;anaconda3&#47;envs&#47;py3.9&#47;lib&#47;python3.9&#47;site-packages&#47;openai&#47;_base_client.py&quot;, line 930, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Internal Server Error 请问这是啥原因","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635719,"discussion_content":"很难说。你换个向量数据库，或者重跑一下试试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705069002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385854,"user_name":"森。","can_delete":false,"product_type":"c1","uid":1780469,"ip_address":"广东","ucode":"2E5F5BA32AD433","user_header":"https://static001.geekbang.org/account/avatar/00/1b/2a/f5/30d1f7b9.jpg","comment_is_top":false,"comment_ctime":1703515444,"is_pvip":false,"replies":[{"id":140827,"content":"提示工程要做好。用ChatGPT的网页版来尝试各种各样的提示。\n这里是两个大原则：\n明确和精细化指令：确保您提供给模型的指令尽可能明确和详细。包括期望的 JSON 结构、每个字段应该包含的信息类型等。\n提供示例：在指令中包括一两个转换好的例子，这可以帮助模型更好地理解预期的输出格式。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1704777042,"ip_address":"瑞士","comment_id":385854,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师您好，我在实践中，通过大模型把一个句子转成我想要的结构化json，效果不是很理想，已经输给了几个例子了，但出来的结果不稳定，有哪些优化思路","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635380,"discussion_content":"提示工程要做好。用ChatGPT的网页版来尝试各种各样的提示。\n这里是两个大原则：\n明确和精细化指令：确保您提供给模型的指令尽可能明确和详细。包括期望的 JSON 结构、每个字段应该包含的信息类型等。\n提供示例：在指令中包括一两个转换好的例子，这可以帮助模型更好地理解预期的输出格式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704777042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385429,"user_name":"Charlie","can_delete":false,"product_type":"c1","uid":3717083,"ip_address":"上海","ucode":"B0E8E54F5DC893","user_header":"https://static001.geekbang.org/account/avatar/00/38/b7/db/dd23d4c3.jpg","comment_is_top":false,"comment_ctime":1702620704,"is_pvip":false,"replies":[{"id":140831,"content":"或许是库版本之间冲突，我没有遇到过，看看同学们有没有解决方案","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1704805391,"ip_address":"新加坡","comment_id":385429,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"除了用OpenAIEmbeddings 做 embedding，在尝试用 LlamaCppEmbeddings 做embedding时 我遇到 一个报错，不知道是否跟 llama-cpp-python 版本有关。 有遇到的吗，怎么解决的呢？ \nllama_cpp&#47;llama.py&quot;, line 1309, in create_embedding\n    data.append(\nSystemError: &lt;method &#39;append&#39; of &#39;list&#39; objects&gt; returned a result with an error set\n","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635404,"discussion_content":"或许是库版本之间冲突，我没有遇到过，看看同学们有没有解决方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704805391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384538,"user_name":"风隼[咖啡]","can_delete":false,"product_type":"c1","uid":1044188,"ip_address":"美国","ucode":"075116DF9B0D88","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/dc/39fa0a55.jpg","comment_is_top":false,"comment_ctime":1701115823,"is_pvip":false,"replies":[{"id":140928,"content":"这个我不大清楚因为我没有碰到过，可以加群讨论看看其它同学如何解决的。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1705071300,"ip_address":"瑞士","comment_id":384538,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"如果非plus用户，如何限制请求速率---在langchain\nopenai.RateLimitError: Error code: 429 - {&#39;error&#39;: {&#39;message&#39;: &#39;Rate limit reached for text-embedding-ada-002 in organization org-SLqKGSSKZL9bqoi2qUubGRuT on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https:&#47;&#47;platform.openai.com&#47;account&#47;rate-limits to learn more.","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635734,"discussion_content":"这个我不大清楚因为我没有碰到过，可以加群讨论看看其它同学如何解决的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705071300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2858725,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/9e/e5/9e732ec1.jpg","nickname":"泽","note":"","ucode":"44A1D076F59D60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634166,"discussion_content":"我也卡在速率这块，这课门槛真高， 自己的到期了，就在网上买的 key，还被速率限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1703061021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384028,"user_name":"风向北吹","can_delete":false,"product_type":"c1","uid":1623409,"ip_address":"广东","ucode":"2FD0BC5159E1C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","comment_is_top":false,"comment_ctime":1700122335,"is_pvip":false,"replies":[{"id":140175,"content":"只能请国内访问了HuggingFace的小朋友们来介绍一些方法，我想必然有方法","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700579438,"ip_address":"瑞士","comment_id":384028,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"HuggingFace如何访问啊","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632219,"discussion_content":"只能请国内访问了HuggingFace的小朋友们来介绍一些方法，我想必然有方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700579438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2011138,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/b0/02/98f8b0ee.jpg","nickname":"方华Elton","note":"","ucode":"180D03AADB5D2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648738,"discussion_content":"镜像站：https://hf-mirror.com/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1722076790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383998,"user_name":"远游","can_delete":false,"product_type":"c1","uid":2103322,"ip_address":"北京","ucode":"73792ED128D57C","user_header":"https://static001.geekbang.org/account/avatar/00/20/18/1a/5f36bb6e.jpg","comment_is_top":false,"comment_ctime":1700059762,"is_pvip":false,"replies":[{"id":140174,"content":"啊！如果我的PDF可以命中，同学你另外的PDF不可以，那么我怀疑同学的PDF格式有问题！！！","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700578946,"ip_address":"瑞士","comment_id":383998,"utype":1}],"discussion_count":3,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"老师，我将另外一个PDF文档放入到OneFlower目录中，询问此PDF相关的内容，得到的答案总是“对不起，我不知道xxx”，好像向量没有命中一样，所以大模型无从分析，作为一个python新手，该怎么解决这个问题呢","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632218,"discussion_content":"啊！如果我的PDF可以命中，同学你另外的PDF不可以，那么我怀疑同学的PDF格式有问题！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700578946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2103322,"avatar":"https://static001.geekbang.org/account/avatar/00/20/18/1a/5f36bb6e.jpg","nickname":"远游","note":"","ucode":"73792ED128D57C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631892,"discussion_content":"调试了，以下两句prompt，一字之差，下面的能出结果，上面的不行。\n我要去重庆出差，请问住宿标准是多少\n我要去重庆出差，请问住宿费标准是多少","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1700105540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2103322,"avatar":"https://static001.geekbang.org/account/avatar/00/20/18/1a/5f36bb6e.jpg","nickname":"远游","note":"","ucode":"73792ED128D57C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631893,"discussion_content":"还有个现象，是向量数据库命中的信息太少，导致大模型推断时缺少信息。老师，是否有办法增大向量命中的范围","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700106036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383738,"user_name":"卓丁","can_delete":false,"product_type":"c1","uid":1030687,"ip_address":"北京","ucode":"71B68238D304FE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/1f/7551f182.jpg","comment_is_top":false,"comment_ctime":1699531693,"is_pvip":false,"replies":[{"id":140190,"content":"谢谢同学贡献排错过程，这对于其它学习者很有好处。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700582520,"ip_address":"瑞士","comment_id":383738,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"在我的环境中，在load环节，运行时直接报以下错误：\n\nTraceback (most recent call last):\n  File &quot;&#47;Users&#47;xxx&#47;miniconda&#47;lib&#47;python3.11&#47;site-packages&#47;openai&#47;openai_object.py&quot;, line 59, in __getattr__\n    return self[k]\n           ~~~~^^^\nKeyError: &#39;data&#39;\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n......\n......\n    raise AttributeError(*err.args)\nAttributeError: data\n\n然后我试着把下面2行注释掉以后，就可以了：\nfor file in os.listdir(base_dir):\n    # 构建完整的文件路径\n    file_path = os.path.join(base_dir, file)\n    if file.endswith(&#39;.pdf&#39;):\n        loader = PyPDFLoader(file_path)\n        ##documents.extend(loader.load())\n    elif file.endswith(&#39;.docx&#39;):\n        loader = Docx2txtLoader(file_path)\n        ##documents.extend(loader.load())\n    elif file.endswith(&#39;.txt&#39;):\n        loader = TextLoader(file_path)\n        documents.extend(loader.load())\n","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632239,"discussion_content":"谢谢同学贡献排错过程，这对于其它学习者很有好处。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700582520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383618,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":2184057,"ip_address":"江苏","ucode":"491906283FC13B","user_header":"https://static001.geekbang.org/account/avatar/00/21/53/79/327ef30e.jpg","comment_is_top":false,"comment_ctime":1699358120,"is_pvip":false,"replies":[{"id":140200,"content":"我们教学主要用openapi，LangChain也支持其它开源模型。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700583908,"ip_address":"瑞士","comment_id":383618,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"这个langchain 是必需用 openapi 的key么\n","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632249,"discussion_content":"我们教学主要用openapi，LangChain也支持其它开源模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700583908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383406,"user_name":"一路前行","can_delete":false,"product_type":"c1","uid":1288985,"ip_address":"北京","ucode":"32D3C715690783","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcFhGY0NV4kFzOSXWDHR2lrI2UbUP4Y016GOnpTH7dqSbicqJarX0pHxMsfLopRiacKEPXLx7IHHqg/132","comment_is_top":false,"comment_ctime":1698991846,"is_pvip":false,"replies":[{"id":139682,"content":"嗯嗯，谢谢同学的提醒。Docx2txtLoader 无法处理.doc文件，我已经更改了github上的代码，把or file.endswith(&#39;.doc&#39;)去掉更好。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1699026800,"ip_address":"瑞士","comment_id":383406,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"elif file.endswith(&#39;.docx&#39;) or file.endswith(&#39;.doc&#39;): \nloader = Docx2txtLoader(file_path) \ndocuments.extend(loader.load())\n老师，Docx2txtLoader 无法处理.doc文件吧？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630903,"discussion_content":"嗯嗯，谢谢同学的提醒。Docx2txtLoader 无法处理.doc文件，我已经更改了github上的代码，把or file.endswith(&#39;.doc&#39;)去掉更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699026800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382731,"user_name":"敬","can_delete":false,"product_type":"c1","uid":1344618,"ip_address":"上海","ucode":"56537F4C78E604","user_header":"https://static001.geekbang.org/account/avatar/00/14/84/6a/8599e17f.jpg","comment_is_top":false,"comment_ctime":1697901928,"is_pvip":false,"replies":[{"id":139460,"content":"Milvus.from_documents 是一个一次性的批量加载文档的方法,用于初次构建 Milvus 数据库。那么，如果你想保存Embedding，可以存储在文件系统，或者向量数据库的云存贮中，下次可以直接加载Embedding。\n详细的API文档：https:&#47;&#47;api.python.langchain.com&#47;en&#47;latest&#47;vectorstores&#47;langchain.vectorstores.milvus.Milvus.html","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698148334,"ip_address":"瑞士","comment_id":382731,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"老师请问 我理解Milvus.from_documents 是用来加载文档到向量数据库，那这是一次性操作？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630172,"discussion_content":"Milvus.from_documents 是一个一次性的批量加载文档的方法,用于初次构建 Milvus 数据库。那么，如果你想保存Embedding，可以存储在文件系统，或者向量数据库的云存贮中，下次可以直接加载Embedding。\n详细的API文档：https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.milvus.Milvus.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698148334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382616,"user_name":"一面湖水","can_delete":false,"product_type":"c1","uid":1193473,"ip_address":"四川","ucode":"6339F033312FB2","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/01/eb3ba274.jpg","comment_is_top":false,"comment_ctime":1697682572,"is_pvip":false,"replies":[{"id":139439,"content":"有一点点不明白同学的问题。内存的意思不就是已经加载到程序中了么，可以直接pass给LLM处理了。比如说程序中创建一个变量，就是在内存中了，你可以直接传给模型。document_loaders是在各种文件系统，数据库中加载文件。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698138753,"ip_address":"瑞士","comment_id":382616,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"老师好，langchain.document_loaders如何加载在内存中的文件呢？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630142,"discussion_content":"有一点点不明白同学的问题。内存的意思不就是已经加载到程序中了么，可以直接pass给LLM处理了。比如说程序中创建一个变量，就是在内存中了，你可以直接传给模型。document_loaders是在各种文件系统，数据库中加载文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698138753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382340,"user_name":"王冠凯","can_delete":false,"product_type":"c1","uid":1075779,"ip_address":"山东","ucode":"65879571114481","user_header":"https://static001.geekbang.org/account/avatar/00/10/6a/43/30f1b445.jpg","comment_is_top":false,"comment_ctime":1697094334,"is_pvip":false,"replies":[{"id":139283,"content":"这个问题似乎有点棘手。\nopenai_object.py这个库表示传进去的格式不对。\n这也有可能是Qdrant的版本，以及LangChain的版本问题。\n|qdrant-client             1.5.0\nlangchain                 0.0.305\n这是我目前的版本，你看看你的版本先。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1697424968,"ip_address":"瑞士","comment_id":382340,"utype":1}],"discussion_count":4,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"老师您好，初学python 和langchain，在联系这个章节的时候出现了点问题。因为openai充值渠道没打通，找了个第三方平替接口，在讲文档分块嵌入向量数据库这步报错，报错内容是接口调用参数错误。和第三方平替联调后，那边反馈是openai得接口得传字符串，我们这个代码里传了向量数组，所以报错。想请老师看看怎么解决。\n\n# 3.Store 将分割嵌入并存储在矢量数据库Qdrant中\nfrom langchain.vectorstores import Qdrant\nfrom langchain.embeddings import OpenAIEmbeddings\n# from langchain.embeddings import HuggingFaceInstructEmbeddings\n# emmodel=HuggingFaceInstructEmbeddings(model_name=&#39;hkunlp&#47;instructor-xl&#39;);\nembedding= OpenAIEmbeddings()\nprint(embedding)\nprint(chunked_documents)\nvectorstore = Qdrant.from_documents(\n    documents=chunked_documents,  # 以分块的文档\n    embedding=embedding,  # 用OpenAI的Embedding Model做嵌入\n    location=&quot;:memory:&quot;,  # in-memory 存储\n    collection_name=&quot;my_documents&quot;)  # 指定collection_name\nprint(vectorstore)\n\n这段代码报错。\n错误栈是：\nTraceback (most recent call last):\n  File &quot;C:\\Users\\guank\\AppData\\Roaming\\Python\\Python310\\site-packages\\openai\\openai_object.py&quot;, line 59, in __getattr__\n    return self[k]\nKeyError: &#39;data&#39;","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629596,"discussion_content":"这个问题似乎有点棘手。\nopenai_object.py这个库表示传进去的格式不对。\n这也有可能是Qdrant的版本，以及LangChain的版本问题。\n|qdrant-client             1.5.0\nlangchain                 0.0.305\n这是我目前的版本，你看看你的版本先。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697424968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2049513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/45/e9/4947093c.jpg","nickname":"！","note":"","ucode":"C84A98C613A95A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":635317,"discussion_content":"请问openai 应该用什么版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704713272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":629596,"ip_address":"安徽","group_id":0},"score":635317,"extra":""}]},{"author":{"id":1008312,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/b8/0e1b655e.jpg","nickname":"fireshort","note":"","ucode":"10550CA9C6C730","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629949,"discussion_content":"建议开通Azure的大模型，用起来和ChatGPT的差不多，可以用国内的信用卡按量付费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697875525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075779,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6a/43/30f1b445.jpg","nickname":"王冠凯","note":"","ucode":"65879571114481","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629614,"discussion_content":"(base) C:\\Users\\guank&gt;pip list|findstr langchain\nlangchain                     0.0.305\n\n(base) C:\\Users\\guank&gt;pip list|findstr qdrant-client\nqdrant-client                 1.5.0\n\n已经改成和老师一样的版本了，还是报同样的错误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697437922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382099,"user_name":"邱文庆","can_delete":false,"product_type":"c1","uid":1237079,"ip_address":"北京","ucode":"2B96FDE64FB59A","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/57/060b5c21.jpg","comment_is_top":false,"comment_ctime":1696690631,"is_pvip":false,"replies":[{"id":139192,"content":"根据你提供的错误信息，这似乎和代理服务器有关。os.environ[&quot;OPENAI_API_BASE&quot;]为提供API Key的第三方地址 -- 不知道是不是和这个有关。也许需要通过另外的方法拿到自己的API Key。\n看看其它同学是否曾遇到过类似的事情。\n","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696783527,"ip_address":"瑞士","comment_id":382099,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"老师，我从github下载了完整的源代码，修改了os.environ[&quot;OPENAI_API_KEY&quot;]为我自己的sk-开头的API Key，同时增加了os.environ[&quot;OPENAI_API_BASE&quot;]为提供API Key的第三方地址，执行DocQA.py，出现了如下的错误信息，请帮忙分析一下是什么原因，感谢。\n  File &quot;C:\\Users\\qiuwenqing\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\connectionpool.py&quot;, line 667, in urlopen\n    self._prepare_proxy(conn)\n。。。。。\nConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File &quot;C:\\Users\\qiuwenqing\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\adapters.py&quot;, line 486, in send\n    resp = conn.urlopen(\n           ^^^^^^^^^^^^^\n。。。。。。\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host=&#39;openaipublic.blob.core.windows.net&#39;, port=443): Max retries exceeded with url: &#47;encodings&#47;cl100k_base.tiktoken (Caused by ProxyError(&#39;Cannot connect to proxy.&#39;, ConnectionResetError(10054, &#39;远程主机强迫关闭了一个现有的连接。&#39;, None, 10054, None)))\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File &quot;C:\\Work\\Code\\chatGPT_sample\\langchain-main\\02_文档QA系统\\DocQA.py&quot;, line 39, in &lt;module&gt;\n    vectorstore = Qdrant.from_documents(\n                  ^^^^^^^^^^^^^^^^^^^^^^\n。。。。。。\n  File &quot;C:\\Users\\qiuwenqing\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\adapters.py&quot;, line 513, in send\n    raise ProxyError(e, request=request)\nrequests.exceptions.ProxyError: HTTPSConnectionPool(host=&#39;openaipublic.blob.core.windows.net&#39;, port=443): Max retries exceeded with url: &#47;encodings&#47;cl100k_base.tiktoken (Caused by ProxyError(&#39;Cannot connect to proxy.&#39;, ConnectionResetError(10054, &#39;远程主机强迫关闭了一个现有的连接。&#39;, None, 10054, None)))\n","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629185,"discussion_content":"根据你提供的错误信息，这似乎和代理服务器有关。os.environ[&#34;OPENAI_API_BASE&#34;]为提供API Key的第三方地址 -- 不知道是不是和这个有关。也许需要通过另外的方法拿到自己的API Key。\n看看其它同学是否曾遇到过类似的事情。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696783527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237079,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/57/060b5c21.jpg","nickname":"邱文庆","note":"","ucode":"2B96FDE64FB59A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629220,"discussion_content":"感谢老师，我设置了第三方的api base之后就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696843330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381835,"user_name":"LuckyZag","can_delete":false,"product_type":"c1","uid":3579399,"ip_address":"浙江","ucode":"6EAF416E366A9E","user_header":"https://static001.geekbang.org/account/avatar/00/36/9e/07/4ddcd9b8.jpg","comment_is_top":false,"comment_ctime":1695953997,"is_pvip":false,"replies":[{"id":139082,"content":"我觉得你遇到的问题是因为 Google Colab 运行在云端，而不是在你的本地计算机上。当你在 Colab 中运行 Flask 并尝试访问 127.0.0.1 时，你实际上是在尝试访问 Google 云服务器上的本地地址，而不是你的计算机上的地址。这就是为什么你无法正常打开网页的原因。\n建议是你不要用flask了，直接简化成本地对话吧。\n\ndef main():\n    print(&quot;欢迎使用问答系统！输入&#39;退出&#39;来结束对话。&quot;)\n    \n    while True:\n        # 接收用户输入作为问题\n        question = input(&quot;请输入你的问题: &quot;)\n        \n        # 如果用户输入“退出”，则结束对话\n        if question.lower() == &#39;退出&#39;:\n            print(&quot;感谢使用，再见！&quot;)\n            break\n        \n        # RetrievalQA链 - 读入问题，生成答案\n        result = qa_chain({&quot;query&quot;: question})\n        \n        # 打印大模型的回答结果\n        print(&quot;答案:&quot;, result)\n\nif __name__ == &quot;__main__&quot;:\n    main()","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695981066,"ip_address":"新加坡","comment_id":381835,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"老师我在colab中把qa的代码以ipynb形式执行，到flask那一步的时候跳转到127.0.0.1无法正常打开网页，感觉是我挂了vpn的问题，但是不挂vpn又打不开colab，怎么解决呀？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628852,"discussion_content":"我觉得你遇到的问题是因为 Google Colab 运行在云端，而不是在你的本地计算机上。当你在 Colab 中运行 Flask 并尝试访问 127.0.0.1 时，你实际上是在尝试访问 Google 云服务器上的本地地址，而不是你的计算机上的地址。这就是为什么你无法正常打开网页的原因。\n建议是你不要用flask了，直接简化成本地对话吧。\n\ndef main():\n    print(&#34;欢迎使用问答系统！输入&#39;退出&#39;来结束对话。&#34;)\n    \n    while True:\n        # 接收用户输入作为问题\n        question = input(&#34;请输入你的问题: &#34;)\n        \n        # 如果用户输入“退出”，则结束对话\n        if question.lower() == &#39;退出&#39;:\n            print(&#34;感谢使用，再见！&#34;)\n            break\n        \n        # RetrievalQA链 - 读入问题，生成答案\n        result = qa_chain({&#34;query&#34;: question})\n        \n        # 打印大模型的回答结果\n        print(&#34;答案:&#34;, result)\n\nif __name__ == &#34;__main__&#34;:\n    main()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695981066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1262168,"avatar":"https://static001.geekbang.org/account/avatar/00/13/42/58/2286eca6.jpg","nickname":"HdUIprince","note":"","ucode":"2510EBFACDBDB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628878,"discussion_content":"本地用Jupyter可以这样修改：\n\n# app.run(host=&#39;0.0.0.0&#39;,debug=True,port=5000)\nfrom werkzeug.serving import run_simple\nrun_simple(&#39;localhost&#39;, 5000, app)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696081555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381826,"user_name":"坤仔","can_delete":false,"product_type":"c1","uid":1115178,"ip_address":"北京","ucode":"79483980F52780","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/2a/232f5f5f.jpg","comment_is_top":false,"comment_ctime":1695903179,"is_pvip":false,"replies":[{"id":139094,"content":"换成能容纳更多Token的model:\ngpt-4 - 8192\ngpt-3.5-turbo-16k - 16K\nhttps:&#47;&#47;platform.openai.com&#47;docs&#47;models\n目前我没有找到在LangChain中限定提示语Token数量的方法，如果有同学知道更好的方法可以分享。\n","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696176048,"ip_address":"新加坡","comment_id":381826,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"老师您好，参考代码，进行提问，报错了，这个最大的token，在哪里设置呢？openai.error.InvalidRequestError: This model&#39;s maximum context length is 4097 tokens. However, your messages resulted in 4693 tokens. Please reduce the length of the messages.","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628893,"discussion_content":"换成能容纳更多Token的model:\ngpt-4 - 8192\ngpt-3.5-turbo-16k - 16K\nhttps://platform.openai.com/docs/models\n目前我没有找到在LangChain中限定提示语Token数量的方法，如果有同学知道更好的方法可以分享。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696176048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381366,"user_name":"小排","can_delete":false,"product_type":"c1","uid":1117292,"ip_address":"浙江","ucode":"A7B4709A7A61AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/6c/91017c02.jpg","comment_is_top":false,"comment_ctime":1695108596,"is_pvip":false,"replies":[{"id":138931,"content":"同学，可否debug一下，研究研究提示的格式？我相信你会收获很多。\n另外：后续课程中会有大量的关于传递给LLM的提示的详细讲解，包括Debug的步骤。请期待。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695138563,"ip_address":"新加坡","comment_id":381366,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"核心实现机制里的第五步：把问题和相似的嵌入片传递给语言模型（LLM），使用包含问题和检索到的分割的提示生成答案。\n老师，我想知道LLM收到的提示大概长啥样？如果换成其他的LLM，那么Langchain组织出来的提示是否也不一样？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628283,"discussion_content":"同学，可否debug一下，研究研究提示的格式？我相信你会收获很多。\n另外：后续课程中会有大量的关于传递给LLM的提示的详细讲解，包括Debug的步骤。请期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695138563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117292,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0c/6c/91017c02.jpg","nickname":"小排","note":"","ucode":"A7B4709A7A61AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628762,"discussion_content":"我替换成了文心一言（https://github.com/ninehills/langchain-wenxin）\n以下是debug出来的内容，分享给大家：\n\nUse the following pieces of context to answer the question at the end. If you don&#39;t know the answer, just say that you don&#39;t know, don&#39;t try to make up an answer.\n\n易速鲜花 这个大家庭需要您、我、他每一位员工积极发扬“ 团\\n结向上，完美无缺 ”的企业精神，以高度的主人翁责任感、使命感，\\n与易速鲜花 同呼吸、共命 运，在各自的岗位上，勤奋敬业，尽职尽\\n责，奋力拼搏。作为大家庭的一员，同仁之间应默契配合......\n\nQuestion: 董事长致辞中提到的企业精神是什么？\nHelpful Answer:","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695807818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381288,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1264510,"ip_address":"上海","ucode":"A4373FF2845251","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/7e/b469c383.jpg","comment_is_top":false,"comment_ctime":1694999284,"is_pvip":false,"replies":[{"id":138890,"content":"可以啊，就选择响应的Model进行嵌入呗，有相关的Model和方法。看一下下面链接的“Code search using embeddings”这一段吧。\nhttps:&#47;&#47;platform.openai.com&#47;docs&#47;guides&#47;embeddings&#47;embeddings\nhttps:&#47;&#47;python.langchain.com&#47;docs&#47;modules&#47;data_connection&#47;document_transformers&#47;text_splitters&#47;code_splitter","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695008883,"ip_address":"新加坡","comment_id":381288,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"这种方式是不是只能对文字进行embedding？对于代码之类非文字类型的怎么做embedding？同样的方式也适用么？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628144,"discussion_content":"可以啊，就选择响应的Model进行嵌入呗，有相关的Model和方法。看一下下面链接的“Code search using embeddings”这一段吧。\nhttps://platform.openai.com/docs/guides/embeddings/embeddings\nhttps://python.langchain.com/docs/modules/data_connection/document_transformers/text_splitters/code_splitter","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695008883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381268,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1402511,"ip_address":"广东","ucode":"6E31908EFE1107","user_header":"https://static001.geekbang.org/account/avatar/00/15/66/8f/02be926d.jpg","comment_is_top":false,"comment_ctime":1694958952,"is_pvip":false,"replies":[{"id":138912,"content":"好棒，T5能力有限，让我们一同寻找能用的平替。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695086427,"ip_address":"新加坡","comment_id":381268,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"\n1.请你用自己的话简述一下这个基于文档的 QA系统的实现流程\n1.加载文档；2.将文档切割成片段；3.将片段编码成片段向量；4.将片段向量存入数据库；5.将问题编码成问题向量；6.用问题向量匹配相似的片段向量列表；7.将问题和相关的片段传给大语言模型，由大语言模型回答问题。\n2.使用向量数据库Chroma和模型google&#47;flan-t5-xl实现QA系统\n从测试结果看，t5模型无法回答问题，很可能是我的调用方式有问题。匹配到的相关片段需要作为context传给模型，不同模型的传递方式可能有不同方式。\n\nimport os\nos.environ[&quot;http_proxy&quot;] = &quot;http:&#47;&#47;127.0.0.1:7890&quot;\nos.environ[&quot;https_proxy&quot;] = &quot;http:&#47;&#47;127.0.0.1:7890&quot;\n\nfrom dotenv import load_dotenv\nload_dotenv()\n\n...\nfrom langchain.vectorstores import Chroma\nfrom langchain.embeddings import OpenAIEmbeddings\n\nvectorstore = Chroma.from_documents(\n    documents=chunked_documents, # 以分块的文档\n    embedding=OpenAIEmbeddings(request_timeout=60000), # 用OpenAI的Embedding Model做嵌入\n    persist_directory=&quot;.&#47;vectorstore&#47;chroma&quot;,  # 存储\n    collection_name=&quot;my_documents&quot;,) # 指定collection_name\n\nprint(&quot;vectorstore:&quot;, vectorstore)\nimport logging \nfrom langchain.chains import RetrievalQA \n\n# 设置Logging\nlogging.basicConfig(level=logging.DEBUG)\n\nfrom langchain import HuggingFaceHub\nllm = HuggingFaceHub(repo_id=&quot;google&#47;flan-t5-base&quot;)\nqa_chain = RetrievalQA.from_chain_type(llm,retriever=vectorstore.as_retriever())\n\nquestion=&quot;董事长致辞中提到的企业精神是什么？&quot;\nresult = qa_chain.run(query=question)\nprint(result)","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628206,"discussion_content":"好棒，T5能力有限，让我们一同寻找能用的平替。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695086427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380964,"user_name":"nick","can_delete":false,"product_type":"c1","uid":1061843,"ip_address":"北京","ucode":"91263882076AC0","user_header":"https://static001.geekbang.org/account/avatar/00/10/33/d3/30a89b21.jpg","comment_is_top":false,"comment_ctime":1694514821,"is_pvip":false,"replies":[{"id":138749,"content":"文档放在多级目录下面肯定是可以的呀，修改读入的方式递归目录读入就行啦。WPS&#47;石墨文档类似的在线协同工具，现在肯定不行，要等接口喽。要是Google Doc，Office 365的文档，那么API应该是可以做到了。因为有接口了。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694533284,"ip_address":"新加坡","comment_id":380964,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"文档文件只能放在一级目录里吗？能不能做到多级目录下文档的问达？另外像使用WPS这一类在线协同工具上面的文档能否实现？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627783,"discussion_content":"文档放在多级目录下面肯定是可以的呀，修改读入的方式递归目录读入就行啦。WPS/石墨文档类似的在线协同工具，现在肯定不行，要等接口喽。要是Google Doc，Office 365的文档，那么API应该是可以做到了。因为有接口了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694533285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380961,"user_name":"Geek_cbcfc8","can_delete":false,"product_type":"c1","uid":2532655,"ip_address":"北京","ucode":"A2141FDF6C7663","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/lJR3Ba9EuTLRSry9sajEeRcvfwuiaPDr41KicHYGxcsXnRcTxaTp3OHq24AebUR9MS016zSEmqAyws5iaQiaj5TDdQ/132","comment_is_top":false,"comment_ctime":1694510705,"is_pvip":false,"replies":[{"id":138750,"content":"我还没有尝试过很多模型，你可以试试Llama 2吗？中文的话，可以试试百川，千问吗？我怀疑这些模型聊天可以，遵循指令能力目前不会很强。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694533375,"ip_address":"新加坡","comment_id":380961,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"老师你好。你们LLM部分用的是什么模型呢，目前发现开源的除了chatglm，中文表现都不怎么好，尤其是模板的指令理解方面","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627784,"discussion_content":"我还没有尝试过很多模型，你可以试试Llama 2吗？中文的话，可以试试百川，千问吗？我怀疑这些模型聊天可以，遵循指令能力目前不会很强。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694533376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110039,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","nickname":"言十年","note":"","ucode":"67B8B49C3A3B17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628583,"discussion_content":"因为这个评论，发现了新大陆 智谱清言也就是 chatglm ，我刚试了下，还挺好用的呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1695552072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380959,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":2422166,"ip_address":"澳大利亚","ucode":"3BF17EEEA6DBF7","user_header":"https://static001.geekbang.org/account/avatar/00/24/f5/96/4e3dd4e1.jpg","comment_is_top":false,"comment_ctime":1694508664,"is_pvip":false,"replies":[{"id":138751,"content":"哦，对对。同学你说的对。代码已经整理。Retriver作为实例化qa_chain的一个参数pass到Chain里面去。","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1694533449,"ip_address":"新加坡","comment_id":380959,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"老师这个MutiQueryRetriever似乎没有用，网页应用直接qa_chain了。如果用的话，也是作为实例化qa_chain的一个参数pass进去么？retriever_from_llm = MultiQueryRetriever.from_llm(retriever=vectorstore.as_retriever(), llm=llm)","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627785,"discussion_content":"哦，对对。同学你说的对。代码已经整理。Retriver作为实例化qa_chain的一个参数pass到Chain里面去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694533449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380937,"user_name":"无心插柳","can_delete":false,"product_type":"c1","uid":2433253,"ip_address":"美国","ucode":"26BBA6C1234454","user_header":"https://static001.geekbang.org/account/avatar/00/25/20/e5/8f7e835f.jpg","comment_is_top":false,"comment_ctime":1694485975,"is_pvip":false,"replies":[{"id":138743,"content":"这个看起来就是版本问题。你调用的方法Qdrant.from_documents中，找不到location=&quot;:memory:&quot;这个参数。这或许是LangChain版本问题，或许是Qdrant版本问题，需要pip upgrade升级到最新版本试一试。\n\nhttps:&#47;&#47;api.python.langchain.com&#47;en&#47;latest&#47;vectorstores&#47;langchain.vectorstores.qdrant.Qdrant.html#langchain.vectorstores.qdrant.Qdrant.from_documents\n\n那么同学，你看我上面发的这个LangChain最新版的API说明，是有&#39;location&#39;参数的。\n\nParameters\ntexts – A list of texts to be indexed in Qdrant.\nembedding – A subclass of Embeddings, responsible for text vectorization.\nmetadatas – An optional list of metadata. If provided it has to be of the same length as a list of texts.\nids – Optional list of ids to associate with the texts. Ids have to be uuid-like strings.\nlocation – If :memory: - use in-memory Qdrant instance. If str - use it as a url parameter. If None - fallback to relying on host and port parameters.","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694486878,"ip_address":"新加坡","comment_id":380937,"utype":1}],"discussion_count":9,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"老师你好，我尝试运行这段代码：\nvectorstore = Qdrant.from_documents(\n    documents=chunked_documents, \n    embedding=OpenAIEmbeddings(), \n    location=&quot;:memory:&quot;,\n    collection_name=&quot;my_documents&quot;,) ，但是出现了下面的错误：TypeError: Client.__init__() got an unexpected keyword argument &#39;location&#39;。 我查看了有关Qrant 的文档 （https:&#47;&#47;qdrant.tech&#47;documentation&#47;integrations&#47;langchain&#47;），也没解决问题。麻烦老师指点下。","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627739,"discussion_content":"这个看起来就是版本问题。你调用的方法Qdrant.from_documents中，找不到location=&#34;:memory:&#34;这个参数。这或许是LangChain版本问题，或许是Qdrant版本问题，需要pip upgrade升级到最新版本试一试。\n\nhttps://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.qdrant.Qdrant.html#langchain.vectorstores.qdrant.Qdrant.from_documents\n\n那么同学，你看我上面发的这个LangChain最新版的API说明，是有&#39;location&#39;参数的。\n\nParameters\ntexts – A list of texts to be indexed in Qdrant.\nembedding – A subclass of Embeddings, responsible for text vectorization.\nmetadatas – An optional list of metadata. If provided it has to be of the same length as a list of texts.\nids – Optional list of ids to associate with the texts. Ids have to be uuid-like strings.\nlocation – If :memory: - use in-memory Qdrant instance. If str - use it as a url parameter. If None - fallback to relying on host and port parameters.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694486878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2848334,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/76/4e/344fc0a0.jpg","nickname":"Volcano@侯明扬","note":"","ucode":"4E4D97B93F6545","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628581,"discussion_content":"老师，如果嵌入词是一个新的组合词，我怎么才能加到LangChain，以减少语义上的歧义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695550503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":2848334,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/76/4e/344fc0a0.jpg","nickname":"Volcano@侯明扬","note":"","ucode":"4E4D97B93F6545","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628839,"discussion_content":"这个需要微调相应的提供嵌入的LLM吧，应该不是LangChain本身能做到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695903450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":628581,"ip_address":"新加坡","group_id":0},"score":628839,"extra":""}]},{"author":{"id":2748121,"avatar":"https://static001.geekbang.org/account/avatar/00/29/ee/d9/10005a4a.jpg","nickname":"柯提","note":"","ucode":"1B2A063DDE9C90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627887,"discussion_content":"我也遇到了这个问题，\npip install --upgrade qdrant-client\n后解决了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694658451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2433253,"avatar":"https://static001.geekbang.org/account/avatar/00/25/20/e5/8f7e835f.jpg","nickname":"无心插柳","note":"","ucode":"26BBA6C1234454","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627791,"discussion_content":"老师你好，已经尝试将langchain和Qdrant 都更新到了最新版本，仍然是同样的错误，可以提供下你对应的langchain和Qdrant 版本给我吗？谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694550290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1024164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","nickname":"阿斯蒂芬","note":"","ucode":"61D5E3BDA4EBC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2433253,"avatar":"https://static001.geekbang.org/account/avatar/00/25/20/e5/8f7e835f.jpg","nickname":"无心插柳","note":"","ucode":"26BBA6C1234454","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627884,"discussion_content":"请问解决了吗，你现在的 langchain和qdrant-client最新版本分别是什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694655277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":627791,"ip_address":"广东","group_id":0},"score":627884,"extra":""},{"author":{"id":1024164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","nickname":"阿斯蒂芬","note":"","ucode":"61D5E3BDA4EBC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2433253,"avatar":"https://static001.geekbang.org/account/avatar/00/25/20/e5/8f7e835f.jpg","nickname":"无心插柳","note":"","ucode":"26BBA6C1234454","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627885,"discussion_content":"遇到了跟你类似的问题，我的错误堆栈最后指向了 qdrant_client.py\n查看本机qdrant-client 版本是 0.11.10\n看了下源码，确实有 _grpc_channel 属性，但是最新的 1.5.0 版本源码没有\n升级 qdrant-client 到 1.5.0 后解决了，具体原因暂时没有仔细研究\n如果你的错误堆栈跟我的一致，也可以试试看\n\nTypeError: Client.__init__() got an unexpected keyword argument &#39;location&#39;\nException ignored in: &lt;function QdrantClient.__del__ at 0x0000022E3AD071C0&gt;\nTraceback (most recent call last):\n  File &#34;~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\qdrant_client\\qdrant_client.py&#34;, line 132, in __del__\n    if self._grpc_channel is not None:\nAttributeError: &#39;QdrantClient&#39; object has no attribute &#39;_grpc_channel&#39;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694657648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":627791,"ip_address":"广东","group_id":0},"score":627885,"extra":""},{"author":{"id":2433253,"avatar":"https://static001.geekbang.org/account/avatar/00/25/20/e5/8f7e835f.jpg","nickname":"无心插柳","note":"","ucode":"26BBA6C1234454","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1024164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","nickname":"阿斯蒂芬","note":"","ucode":"61D5E3BDA4EBC5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627948,"discussion_content":"谢谢你提供的建议。我把langchain 和qdrant-client都升级到了最新版本，没有解决问题。后来把版本都降级了，问题解决了。降级后的版本是：langchain==0.0.279； qdrant-client==1.3.2","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1694699726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":627885,"ip_address":"美国","group_id":0},"score":627948,"extra":""}]}]},{"had_liked":false,"id":392363,"user_name":"yanyu-xin","can_delete":false,"product_type":"c1","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1720703759,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100617601,"comment_content":"用阿里云的通义千问改写老师的问答系统：--- (代码3、4、5模块）\n------\n\n# 3. 创建向量存储和检索器\nembeddings = DashScopeEmbeddings(model=&quot;text-embedding-v1&quot;, dashscope_api_key= DASHSCOPE_API_KEY)\nvectorstore = FAISS.from_documents(texts, embeddings)\nretriever = vectorstore.as_retriever(search_kwargs={&quot;k&quot;: 5})\n\n# 使用LLMChainExtractor创建文档压缩器   \nfrom langchain.retrievers.document_compressors import LLMChainExtractor     \ncompressor = LLMChainExtractor.from_llm(llm)        \n\n\n# 创建上下文压缩检索器\ncompression_retriever = ContextualCompressionRetriever(\n    base_retriever=retriever,\n    base_compressor=compressor\n)\n\n# 4. 创建RetrievalQA链\nqa_chain = RetrievalQA.from_chain_type(llm=llm, chain_type=&quot;stuff&quot;, retriever=compression_retriever)\n\n# 5. Output 问答系统的UI实现\nfrom flask import Flask, request, render_template\napp = Flask(__name__) # Flask APP\n\n@app.route(&#39;&#47;&#39;, methods=[&#39;GET&#39;, &#39;POST&#39;])\ndef home():\n    if request.method == &#39;POST&#39;:\n\n        # 接收用户输入作为问题\n        question = request.form.get(&#39;question&#39;)        \n        \n        # RetrievalQA链 - 读入问题，生成答案\n        result = qa_chain({&quot;query&quot;: question})\n        \n        # 把大模型的回答结果返回网页进行渲染\n        return render_template(&#39;index.html&#39;, result=result)\n    \n    return render_template(&#39;index.html&#39;)\n\nif __name__ == &quot;__main__&quot;:\n    app.run(host=&#39;0.0.0.0&#39;,debug=True,port=5000)","like_count":2},{"had_liked":false,"id":392362,"user_name":"yanyu-xin","can_delete":false,"product_type":"c1","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1720703728,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100617601,"comment_content":"用阿里云的通义千问改写老师的问答系统：--- (代码1、2模块）\n------\nimport logging\nfrom langchain.chat_models import ChatTongyi\nfrom langchain.retrievers import ContextualCompressionRetriever\nfrom langchain.chains import RetrievalQA\nfrom langchain_community.embeddings import DashScopeEmbeddings\nfrom langchain.vectorstores import FAISS\nfrom langchain.document_loaders import TextLoader\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\nimport os\n\n# 1. Load 导入Document Loaders\nfrom langchain.document_loaders import PyPDFLoader\nfrom langchain.document_loaders import Docx2txtLoader\nfrom langchain_community.llms import Tongyi\n\nDASHSCOPE_API_KEY = &quot;API_KEY&quot;   #&#39;你的阿里云DashScope API Key&#39;\n\n# 设置日志级别\nlogging.basicConfig(level=logging.INFO)\n\n# 实例化通义千问模型，使用qwen-turbo\nllm = ChatTongyi(model_name=&quot;qwen-turbo&quot;, api_key= DASHSCOPE_API_KEY)\n\n# 加载文档 Documents\nbase_dir =  &#39;.&#47;OneFlower&#39;  # 你的文档的存放目录\ndocuments = []\nfor file in os.listdir(base_dir):\n    #print(file)\n    # 构建完整的文件路径\n    file_path = os.path.join(base_dir, file)\n    if file.endswith(&#39;.pdf&#39;):\n        loader = PyPDFLoader(file_path)\n        documents.extend(loader.load())\n    elif file.endswith(&#39;.docx&#39;):\n        loader = Docx2txtLoader(file_path)\n        documents.extend(loader.load())\n    elif file.endswith(&#39;.txt&#39;):\n        loader = TextLoader(file_path)\n        documents.extend(loader.load())\n\n # 2. 将Documents 文档进行文本切分 \ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=500, chunk_overlap=100)\ntexts = text_splitter.split_documents(documents)\n","like_count":2},{"had_liked":false,"id":392332,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1720616514,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":2,"score":7,"product_id":100617601,"comment_content":"第2讲打卡~\n课程内容非常棒，一个小例子就把整个LLM应用的核心流程串起来了~","like_count":1},{"had_liked":false,"id":388744,"user_name":"孙志惠","can_delete":false,"product_type":"c1","uid":1103449,"ip_address":"澳大利亚","ucode":"04F0AAF12EA847","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/59/6b7ce4f0.jpg","comment_is_top":false,"comment_ctime":1710812497,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100617601,"comment_content":"老师，脑图用什么软件画的，xmind没有看到类似模板？","like_count":1},{"had_liked":false,"id":386657,"user_name":"程序员在修行","can_delete":false,"product_type":"c1","uid":1763638,"ip_address":"日本","ucode":"384F2D1FDB7345","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e9/36/96294f1d.jpg","comment_is_top":false,"comment_ctime":1705299462,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":7,"product_id":100617601,"comment_content":"老师, 我导入了我的csv文件, 里面有100条记录(包含header row), \n现象: 看起来并没有成功去基于100条记录回答问题.  \ndebug: 我确实print了导入的数据(有100条)\n疑问: 求check\n\nimport ...\nfrom langchain.document_loaders.csv_loader import CSVLoader\n\nfile_path=&#39;static&#47;nps.csv&#39;\n\nos.environ[&quot;OPENAI_API_KEY&quot;] = &quot;marked&quot;\n\n\nllm = ChatOpenAI(temperature=0, model_name=&quot;gpt-3.5&quot;)\n\nwith open(file_path, &#39;rb&#39;) as f:\n    result = chardet.detect(f.read())\n\nprint(f&quot;Detected Encoding: {result[&#39;encoding&#39;]}&quot;)\n\n# Use the detected encoding in the CSVLoader\nloader = CSVLoader(file_path=file_path, encoding=result[&#39;encoding&#39;])\ndata = loader.load()\n# print(data)\n\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=100)\ndocuments = text_splitter.split_documents(data)\n\nprint(f&quot;Number of Documents: {len(documents)}&quot;)\n\n\nembeddings = OpenAIEmbeddings()\nvectorstore = Chroma.from_documents(documents, embeddings)\nqa = ConversationalRetrievalChain.from_llm(ChatOpenAI(temperature=0), vectorstore.as_retriever())\n\nwith gr.Blocks() as demo:\n    chatbot = gr.Chatbot()\n    msg = gr.Textbox()\n    clear = gr.Button(&quot;Clear&quot;)\n    chat_history = []\n\n    def user(user_message, history):\n        langchain_history = [(msg[1], history[i+1][1] if i+1 &lt; len(history) else &quot;&quot;) for i, msg in enumerate(history) if i % 2 == 0]\n        response = qa({&quot;question&quot;: user_message, &quot;chat_history&quot;: langchain_history})\n        history.append((user_message, response[&quot;answer&quot;]))\n        return gr.update(value=&quot;&quot;), history\n\n    msg.submit(user, [msg, chatbot], [msg, chatbot], queue=False)\n    clear.click(lambda: None, None, chatbot, queue=False)\n\nif __name__ == &quot;__main__&quot;:\n    demo.launch(debug=True)\n\n\nhow many siteurl we have, pls list them\nWe have four siteurls. They are:\nvillage.a.com\nhere.a.com\nsutherland.a.com\nsutherland.a.com\n\nhow many records you have\nI don&#39;t have access to the total number of records.\n\n\npls list top 5 siteurl\nThe top 5 siteurls based on the given context are:\nvillage.a.com\ncisco.a.com\ntechmglobal.a.com","like_count":1,"discussions":[{"author":{"id":3899156,"avatar":"","nickname":"Geek_610366","note":"","ucode":"8238241E3B25A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645914,"discussion_content":"我也是这个问题，有解决吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716977702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":396449,"user_name":"午夜修铃","can_delete":false,"product_type":"c1","uid":2413066,"ip_address":"北京","ucode":"EF8DB6CD219CC1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/iaK3hr7TO6WRFgmFkia0Q75ThkpyIOQtnXSttpI1ib8ianXxbb6LlPgPLZNOj5niaZnBt6Htps2Jia11v9l2VeL7EPibw/132","comment_is_top":false,"comment_ctime":1734507576,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":7,"product_id":100617601,"comment_content":"老师你好，没有看到问题是在哪里 embedding的，我理解去向量数据库中查询数据页需要先把问题向量化。 不知道我理解对么。","like_count":0},{"had_liked":false,"id":393444,"user_name":"飞翔的傻瓜","can_delete":false,"product_type":"c1","uid":1039425,"ip_address":"北京","ucode":"F0F6479802C9D3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/41/65fb3b80.jpg","comment_is_top":false,"comment_ctime":1723811239,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100617601,"comment_content":"老师，我的本地运行报这个","like_count":1},{"had_liked":false,"id":393335,"user_name":"勤小码","can_delete":false,"product_type":"c1","uid":1071860,"ip_address":"北京","ucode":"E9813F165F5EA5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKr3ZPRg8ECLpOkfpN1ny8HGV8DIkQ0fo4blKFSQgK0x76C5WiaxFXQpoIqTHWEV3bia603bBmtwZcg/132","comment_is_top":false,"comment_ctime":1723538362,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100617601,"comment_content":"网络原因可能大家访问OpenAI的API各种不方便。学习过程中各位可以尝试使用 Ollama 本地部署模型来编写和调试代码。 在佳哥给的示例代码基础上修改后代码如下，希望能给各位提供一点参考。\n\n#!&#47;usr&#47;bin&#47;env python\n\nimport os\n\nfrom langchain.document_loaders import PyPDFLoader\nfrom langchain.document_loaders import Docx2txtLoader # pip install docx2txt\nfrom langchain.document_loaders import TextLoader\n\nbase_dir = &#39;.&#47;docs&#39;\ndocuments = []\n\nfor file in os.listdir(base_dir): \n    file_path = os.path.join(base_dir, file)\n    if file.endswith(&#39;.pdf&#39;):\n        loader = PyPDFLoader(file_path)\n        documents.extend(loader.load())\n    elif file.endswith(&#39;.docx&#39;): \n        loader = Docx2txtLoader(file_path)\n        documents.extend(loader.load())\n    elif file.endswith(&#39;.txt&#39;):\n        loader = TextLoader(file_path)\n        documents.extend(loader.load())\n\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=200, chunk_overlap=10)\nchunked_documents = text_splitter.split_documents(documents)\n\nfrom langchain_chroma import Chroma # 使用 Chroma\nfrom langchain_ollama import OllamaEmbeddings\n\nollama_embed = OllamaEmbeddings(model=&quot;nomic-embed-text&quot;) # 使用nomic-embed-text做embed\nvectorstore = Chroma.from_documents(\n    documents=chunked_documents,\n    embedding=ollama_embed,\n    collection_name=&#39;my_document&#39;,\n)\n\nimport logging\n\nfrom langchain_ollama import ChatOllama\nfrom langchain.retrievers.multi_query import MultiQueryRetriever\nfrom langchain.chains import RetrievalQA\n\nlogging.basicConfig()\nlogging.getLogger(&#39;langchain.retrievers.multi_query&#39;).setLevel(logging.INFO)\n\nllm = ChatOllama(model=&#39;llama3.1:8b&#39;) # 使用 llama3.1:8b 模型\n\nretriever_from_llm = MultiQueryRetriever.from_llm(retriever=vectorstore.as_retriever(), llm=llm)\n\nqa_chain = RetrievalQA.from_chain_type(llm,retriever=retriever_from_llm)\n\n# 直接通过qa_chain进行调用\nresult = qa_chain({&quot;query&quot;: &quot;董事长致辞中提到的企业精神指的是啥？&quot;})\n\nresult[&#39;result&#39;]","like_count":0},{"had_liked":false,"id":393075,"user_name":"迷途小羔羊","can_delete":false,"product_type":"c1","uid":3119793,"ip_address":"中国香港","ucode":"E20A8CC53F5ED8","user_header":"","comment_is_top":false,"comment_ctime":1722740396,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100617601,"comment_content":"老师，想请教下，要过去api key ，除了外国信用卡，我们还有什么好办法吗","like_count":1},{"had_liked":false,"id":393022,"user_name":"药师","can_delete":false,"product_type":"c1","uid":1213258,"ip_address":"四川","ucode":"14BB054A38A2F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/4a/3e08427e.jpg","comment_is_top":false,"comment_ctime":1722507149,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100617601,"comment_content":"老师我用向量数据库qdrant进行语义检索效果非常差（余弦COSINE查询），比如本例我直接搜“企业精神”，企业精神那行都搜不出来，我尝试用各种embedding效果都不行，比如用了通义千问(1536纬)，huggingface上的chinese-macbert-large(1024纬)，豆包（2560纬）。您知道是怎么回事么，向量数据库qdrant的问题么？","like_count":0},{"had_liked":false,"id":392240,"user_name":"香格里拉飞龙","can_delete":false,"product_type":"c1","uid":1339856,"ip_address":"北京","ucode":"C1263416EE85E3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKS70PShNZaxpibFc1gWuvibbg3hXR4YKm3MkNgX0n56hWUicN0JfB2GQ6I9UicBfKABH6dkfVDPohA6Q/132","comment_is_top":false,"comment_ctime":1720356358,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"还有个问题，我大致搜了下没有大模型之前的智能问答系统架构，发现有些结构提到了用户问题分词、抽取关键词，再生成embedding进行向量检索。是否在大模型加持下，分词和抽取关键词等步骤不在需要了？还是说如果在更复杂的系统需要更好的效果时，还是需要这些步骤的？","like_count":0},{"had_liked":false,"id":392239,"user_name":"香格里拉飞龙","can_delete":false,"product_type":"c1","uid":1339856,"ip_address":"北京","ucode":"C1263416EE85E3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKS70PShNZaxpibFc1gWuvibbg3hXR4YKm3MkNgX0n56hWUicN0JfB2GQ6I9UicBfKABH6dkfVDPohA6Q/132","comment_is_top":false,"comment_ctime":1720355774,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"老师好，我有一点不明，您在描述欧式距离和点击距离的差异时，说欧式距离 能很好地反映出向量的绝对差异， 适合关心数据的绝对大小时使用。这个“大小”具体指什么？可不可以理解为向量的模长？","like_count":0},{"had_liked":false,"id":392156,"user_name":"小风","can_delete":false,"product_type":"c1","uid":1180256,"ip_address":"浙江","ucode":"A5D04FF18880C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/60/8b9572ac.jpg","comment_is_top":false,"comment_ctime":1720095660,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"搞定嘞，有点意思！！！","like_count":0},{"had_liked":false,"id":392153,"user_name":"小风","can_delete":false,"product_type":"c1","uid":1180256,"ip_address":"浙江","ucode":"A5D04FF18880C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/60/8b9572ac.jpg","comment_is_top":false,"comment_ctime":1720093607,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"Traceback (most recent call last):\n  File &quot;&#47;Applications&#47;PyCharm.app&#47;Contents&#47;plugins&#47;python&#47;helpers&#47;pydev&#47;pydevd.py&quot;, line 1535, in _exec\n    pydev_imports.execfile(file, globals, locals)  # execute the script\n  File &quot;&#47;Applications&#47;PyCharm.app&#47;Contents&#47;plugins&#47;python&#47;helpers&#47;pydev&#47;_pydev_imps&#47;_pydev_execfile.py&quot;, line 18, in execfile\n    exec(compile(contents+&quot;\\n&quot;, file, &#39;exec&#39;), glob, loc)\n  File &quot;&#47;Users&#47;zhuyunfeng&#47;develop&#47;workspace&#47;python&#47;zyf51-geek&#47;02yisuxianhua&#47;DocQA_v0.2.py&quot;, line 31, in &lt;module&gt;\n    chunk_documents = text_splitter.split_documents(documents)\n  File &quot;&#47;opt&#47;anaconda3&#47;envs&#47;langchain&#47;lib&#47;python3.10&#47;site-packages&#47;langchain_text_splitters&#47;base.py&quot;, line 94, in split_documents\n    texts.append(doc.page_content)\nAttributeError: &#39;Docx2txtLoader&#39; object has no attribute &#39;page_content&#39;\npython-BaseException\n\n2.Split 将Documents切分成块以便后续进行嵌入和向量存储\n报这个错误信息","like_count":0},{"had_liked":false,"id":391715,"user_name":"Kyen","can_delete":false,"product_type":"c1","uid":2850722,"ip_address":"广东","ucode":"57EA9E1700298B","user_header":"https://static001.geekbang.org/account/avatar/00/2b/7f/a2/83dbba75.jpg","comment_is_top":false,"comment_ctime":1718880647,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"老师，有js版本的吗？python没有接触过","like_count":0},{"had_liked":false,"id":391696,"user_name":"Geek_18dfaf","can_delete":false,"product_type":"c1","uid":1543018,"ip_address":"浙江","ucode":"CFC27E78220E2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqw0R25Bt0iahFhEHfnxmzr9iaZf0eLsDQtFUJzgGkYwHTqicU9TydMngrJ4yL7D50awD2VibHBAdqplQ/132","comment_is_top":false,"comment_ctime":1718856546,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"vectorstore = Qdrant.from_documents(\n                  ^^^^^^^^^^^^^^^^^^^^^^\n  File &quot;&#47;opt&#47;anaconda3&#47;lib&#47;python3.11&#47;site-packages&#47;langchain_core&#47;vectorstores.py&quot;, line 635, in from_documents\n    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &quot;&#47;opt&#47;anaconda3&#47;lib&#47;python3.11&#47;site-packages&#47;langchain_community&#47;vectorstores&#47;qdrant.py&quot;, line 1339, in from_texts\n    qdrant = cls.construct_instance(\n             ^^^^^^^^^^^^^^^^^^^^^^^\n  File &quot;&#47;opt&#47;anaconda3&#47;lib&#47;python3.11&#47;site-packages&#47;langchain_community&#47;vectorstores&#47;qdrant.py&quot;, line 1641, in construct_instance\n    partial_embeddings = embedding.embed_documents(texts[:1])\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &quot;&#47;opt&#47;anaconda3&#47;lib&#47;python3.11&#47;site-packages&#47;langchain_openai&#47;embeddings&#47;base.py&quot;, line 535, in embed_documents\n    return self._get_len_safe_embeddings(texts, engine=engine)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &quot;&#47;opt&#47;anaconda3&#47;lib&#47;python3.11&#47;site-packages&#47;langchain_openai&#47;embeddings&#47;base.py&quot;, line 430, in _get_len_safe_embeddings\n    response = self.client.create(\n               ^^^^^^^^^^^^^^^^^^^\n  File &quot;&#47;opt&#47;anaconda3&#47;lib&#47;python3.11&#47;site-packages&#47;openai&#47;resources&#47;embeddings.py&quot;, line 114, in create\n    return self._post(\n           ^^^^^^^^^^^\n  File &quot;&#47;opt&#47;anaconda3&#47;lib&#47;python3.11&#47;site-packages&#47;openai&#47;_base_client.py&quot;, line 1240, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 7-8: ordinal not in range(128)","like_count":0},{"had_liked":false,"id":389642,"user_name":"Ludwig","can_delete":false,"product_type":"c1","uid":1584043,"ip_address":"北京","ucode":"530E3B10A433AE","user_header":"https://static001.geekbang.org/account/avatar/00/18/2b/ab/90db8a2d.jpg","comment_is_top":false,"comment_ctime":1713150684,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"老师您好, 我想请教您一下有关“数据隐私”的问题\n在这一篇文章的例子中, 我们的文本内容来源是自己本地的文件, 通过加载和嵌入的步骤, 放在了向量数据库中, 对于这个过程我是理解的\n但是我想知道, 要让大模型去理解其中的文本内容, 其实还是相当于把这些文本发送出去了是吗? 是否可以认为这些文本的数据隐私已经不存在了?\n之所以问这个问题, 是因为现在在一些企业内部, 虽然有类似&quot;内部文档智能问答系统&quot;的需求, 但是受限于一些非技术原因, 他们对数据隐私的要求非常高, 所以导致类似的项目落地困难","like_count":0,"discussions":[{"author":{"id":1339856,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKS70PShNZaxpibFc1gWuvibbg3hXR4YKm3MkNgX0n56hWUicN0JfB2GQ6I9UicBfKABH6dkfVDPohA6Q/132","nickname":"香格里拉飞龙","note":"","ucode":"C1263416EE85E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647635,"discussion_content":"数据隐私要求高的公司，可以自己搭建本地化的大模型服务。对于这种问答系统，我感觉规模小些的模型也可以用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720356551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388570,"user_name":"Ethan","can_delete":false,"product_type":"c1","uid":1276373,"ip_address":"日本","ucode":"016F1DEBA895B8","user_header":"https://static001.geekbang.org/account/avatar/00/13/79/d5/4a7971fc.jpg","comment_is_top":false,"comment_ctime":1710407337,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"使用 disk 将 Embedding 的数据保存到了磁盘上。后面再次使用 vetorstore 是不是就不会重新 Embedding 了。\ndef embed_documents(chunked_documents: list):\n    # 3.Store 将分割嵌入并存储在矢量数据库Qdrant中\n    from langchain_community.vectorstores import Qdrant\n    from langchain_openai import OpenAIEmbeddings\n    vectorstore = Qdrant.from_documents(\n        documents=chunked_documents,  # 以分块的文档\n        embedding=OpenAIEmbeddings(),  # 用OpenAI的Embedding Model做嵌入\n        # location=&quot;:memory:&quot;,  # in-memory 存储\n        path=&quot;db&quot;,  # 指定存储位置\n        collection_name=&quot;my_documents&quot;, )  # 指定collection_name\n    return vectorstore\n\n另外想要初始化 vectorstroe  使用 from_documents 方法，里面接受 documents 作为参数，后续岂不是每次都需要做一次 split documents 的操作？有没有什么办法，类似于 MySQL 数据库，直接查询就可以了。","like_count":0},{"had_liked":false,"id":388328,"user_name":"D：","can_delete":false,"product_type":"c1","uid":3720573,"ip_address":"上海","ucode":"2174D4FC96A50C","user_header":"https://static001.geekbang.org/account/avatar/00/38/c5/7d/55bb670f.jpg","comment_is_top":false,"comment_ctime":1709896007,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\nCell In[4], line 1\n----&gt; 1 from langchain.document_loaders import PyPDFLoader\n      2 from langchain.document_loaders import Docx2txtLoader\n      3 from langchain.document_loaders import TextLoader\n\nImportError: cannot import name &#39;PyPDFLoader&#39; from &#39;langchain.document_loaders&#39; (&#47;Users&#47;zxwu&#47;Pro&#47;anaconda3&#47;lib&#47;python3.11&#47;site-packages&#47;langchain&#47;document_loaders&#47;__init__.py)一直报错，google和stack搜到的方案也试过了都不行","like_count":0,"discussions":[{"author":{"id":1276373,"avatar":"https://static001.geekbang.org/account/avatar/00/13/79/d5/4a7971fc.jpg","nickname":"Ethan","note":"","ucode":"016F1DEBA895B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639237,"discussion_content":"更新了，使用这个。    from langchain_community.document_loaders import PyPDFLoader\n    from langchain_community.document_loaders import Docx2txtLoader\n    from langchain_community.document_loaders import TextLoader","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710407385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388131,"user_name":"高亮","can_delete":false,"product_type":"c1","uid":1194104,"ip_address":"辽宁","ucode":"2DDBB3607BA80F","user_header":"https://static001.geekbang.org/account/avatar/00/12/38/78/286d0842.jpg","comment_is_top":false,"comment_ctime":1709465518,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100617601,"comment_content":"老师，如果把历史的需求文档和代码做embedding，再提新需求，生成代码，LangChain方案可行吗？","like_count":0},{"had_liked":false,"id":387999,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":2385747,"ip_address":"广东","ucode":"F3687FEFD0E30D","user_header":"","comment_is_top":false,"comment_ctime":1709120635,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100617601,"comment_content":"location=&quot;:memory:&quot;  python 没有这种语法吧？ 楼主是不是写错了啊","like_count":0},{"had_liked":false,"id":387815,"user_name":"Longerian","can_delete":false,"product_type":"c1","uid":1032464,"ip_address":"浙江","ucode":"0B74EE70D09A2A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/10/28d5a686.jpg","comment_is_top":false,"comment_ctime":1708616288,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100617601,"comment_content":"延伸阅读，LangChain 官方文档对 Document QA 系统设计及实现的详细说明——这个文档链接找不到了","like_count":0},{"had_liked":false,"id":387586,"user_name":"Geek_771dd0","can_delete":false,"product_type":"c1","uid":1207372,"ip_address":"广东","ucode":"FC8F77F7D75EE9","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/4c/d87bb144.jpg","comment_is_top":false,"comment_ctime":1708216334,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100617601,"comment_content":"老师，文本分割那里有个chunk_size变量，我试过如果设置过大或者过小，都对最终的智能回复产生影响，那这个chunk_size是怎么确定才好呢，有什么方法论吗","like_count":0},{"had_liked":false,"id":384354,"user_name":"晓涛","can_delete":false,"product_type":"c1","uid":1524351,"ip_address":"英国","ucode":"41CB1620A9B82C","user_header":"https://static001.geekbang.org/account/avatar/00/17/42/7f/db8fa45f.jpg","comment_is_top":false,"comment_ctime":1700726926,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100617601,"comment_content":"text_splitter = RecursiveCharacterTextSplitter(chunk_size=200, chunk_overlap=10)\n请教老师，分本分割的时候这里设置的200和10是基于什么逻辑设置的，会和之后的向量数据库的大小有关系吗","like_count":0},{"had_liked":false,"id":383632,"user_name":"风间幻想","can_delete":false,"product_type":"c1","uid":2874017,"ip_address":"土耳其","ucode":"CCD178781CD0CE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTILhR0NtpB4fNoE1rYIQib6h1zTOpiaiadibbT1IxOiaWr2nvPCCds0vPL6by8JicEXB4ZbNxzQ9MWic8A1w/132","comment_is_top":false,"comment_ctime":1699376031,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":9,"product_id":100617601,"comment_content":"请问 result = qa_chain({&quot;query&quot;: question}) 这一步如何做到streaming输出呢？页面等待一次性完整输出result再显示感觉太慢了，谢谢！","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632250,"discussion_content":"这个我需要研究一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700584025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}