{"id":111483,"title":"40 | 用户认证代码剖析","content":"<ul>\n<li>\n<p>代码：<a href=\"https://gitee.com/geektime-geekbang/staffjoy\">https://gitee.com/geektime-geekbang/staffjoy</a></p>\n</li>\n<li>\n<p>课件：<a href=\"https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ\">https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ</a> 提取码: 1aeh</p>\n</li>\n</ul>","comments":[{"had_liked":false,"id":119043,"user_name":"许凯","can_delete":false,"product_type":"c3","uid":1604645,"ip_address":"","ucode":"4F11AD41CB0244","user_header":"https://static001.geekbang.org/account/avatar/00/18/7c/25/70134099.jpg","comment_is_top":false,"comment_ctime":1564492907,"is_pvip":false,"replies":[{"id":43809,"content":"目前开源的资源权限设计方案很多，可以在github&#47;gitee上搜一大把。不过我觉得大都不是很通用，所以我自己正在设计开发一个，类似auth0的用户管理和身份认证&#47;鉴权服务，开发完成会开源出来。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564580856,"ip_address":"","comment_id":119043,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"又听完了，很有收获，想请问老师，有比较通用的资源权限设计和控制方式吗？","like_count":14,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460722,"discussion_content":"目前开源的资源权限设计方案很多，可以在github/gitee上搜一大把。不过我觉得大都不是很通用，所以我自己正在设计开发一个，类似auth0的用户管理和身份认证/鉴权服务，开发完成会开源出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564580856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1149567,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/7f/788a33b1.jpg","nickname":"Hey BroHTer","note":"","ucode":"E8581B00E71DCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345722,"discussion_content":"老师，您自研的身份认证和鉴权服务是否已开源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611765862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120688,"user_name":"Alex","can_delete":false,"product_type":"c3","uid":1024763,"ip_address":"","ucode":"F6B5C64BC99FB7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/fb/94af9cf1.jpg","comment_is_top":false,"comment_ctime":1564974852,"is_pvip":false,"replies":[{"id":44350,"content":"外网token&#47;内网jwt，这个是一种令牌实现方式，稍微有点复杂，中间涉及到令牌的存储和转化。本课程案例staffjoy，采用简单的jwt令牌，全程无状态，业务上安全性也足够。如果需要，在理解本课程案例代码的基础上，你不难扩展出外网token&#47;内网jwt的方式，只不过需要存储token&#47;jwt的映射关系，可存在DB或Cache中。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565004094,"ip_address":"","comment_id":120688,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"外网token内网jwt 的方式还会讲吗？","like_count":7,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461436,"discussion_content":"外网token/内网jwt，这个是一种令牌实现方式，稍微有点复杂，中间涉及到令牌的存储和转化。本课程案例staffjoy，采用简单的jwt令牌，全程无状态，业务上安全性也足够。如果需要，在理解本课程案例代码的基础上，你不难扩展出外网token/内网jwt的方式，只不过需要存储token/jwt的映射关系，可存在DB或Cache中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565004094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135075,"user_name":"Geek_booslink","can_delete":false,"product_type":"c3","uid":1602968,"ip_address":"","ucode":"263FF11E1BDD5E","user_header":"","comment_is_top":false,"comment_ctime":1568997345,"is_pvip":false,"replies":[{"id":52028,"content":"具体做法还是要看上下文，如果不同用户群在业务上是有关联的，可以通过角色区分，尽量建模成一个用户&#47;授权中心，这时用户数据可以存ldap。如果不同用户群在业务上是不关联的，可以采用2个以上用户&#47;授权中心(但也不能太多)分开管理，或者考虑采用支持多租户的用户&#47;授权产品(比如fusionauth.io)，这类产品支持一个用户&#47;授权中心，但是可以多租户支持不同用户群分开管理。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1569241839,"ip_address":"","comment_id":135075,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师，请教一个问题，会员，管理员，分销商分别有对应的后台系统，在微服务架构中是否需要三个授权中心？如果是三个授权中心每个微服务通常会有公共字段 creat_by那这样的话就不统一了，是否需要加一个ladp模块呢？ 谢谢","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468033,"discussion_content":"具体做法还是要看上下文，如果不同用户群在业务上是有关联的，可以通过角色区分，尽量建模成一个用户/授权中心，这时用户数据可以存ldap。如果不同用户群在业务上是不关联的，可以采用2个以上用户/授权中心(但也不能太多)分开管理，或者考虑采用支持多租户的用户/授权产品(比如fusionauth.io)，这类产品支持一个用户/授权中心，但是可以多租户支持不同用户群分开管理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569241839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119711,"user_name":"虎哥","can_delete":false,"product_type":"c3","uid":1185061,"ip_address":"","ucode":"29D604EC85D3BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/25/1d3d616f.jpg","comment_is_top":false,"comment_ctime":1564660964,"is_pvip":false,"replies":[{"id":43926,"content":"上面讲Staffjoy安全认证架构设计中讲到SSO了，用户通过www服务登录，浏览器中就会种cookie，这个cookie种在根域上，例如，生产就是staffjoy.com，后面通过浏览器访问www.staffjoy.cpm或app.staffjoy.com或myaccount.staffjoy.com，只要是xxx.staffjoy.com都不需要再登录(除非jwt过期或者主动等出)，会自动登录，因为cookie会自动带上，网关截获cookie，校验里头的jwt，通过就可以访问。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564674752,"ip_address":"","comment_id":119711,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"没有说SSO啊？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461031,"discussion_content":"上面讲Staffjoy安全认证架构设计中讲到SSO了，用户通过www服务登录，浏览器中就会种cookie，这个cookie种在根域上，例如，生产就是staffjoy.com，后面通过浏览器访问www.staffjoy.cpm或app.staffjoy.com或myaccount.staffjoy.com，只要是xxx.staffjoy.com都不需要再登录(除非jwt过期或者主动等出)，会自动登录，因为cookie会自动带上，网关截获cookie，校验里头的jwt，通过就可以访问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564674752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119329,"user_name":"永旭","can_delete":false,"product_type":"c3","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1564562565,"is_pvip":false,"replies":[{"id":43810,"content":"spring(boot)提供支持集中式session的接口，可以对接redis等缓存，种cookie的动作spring(boot)框架内部已经实现。自己种cookie是为了灵活性，spring(boot)的security&#47;session机制主要针对单块web应用，微服务+spa应用的场景比较复杂，自己处理安全和种cookie会更加灵活，实现也不复杂。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564581064,"ip_address":"","comment_id":119329,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师你好,\n之前做的项目 给予redis的session实现的, 没有种cookie的步骤, 也会存在cookie, 是springboot集成的容器给做的吗?\n能说明下这里为什么要自己实现种cookie呢 ?","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460852,"discussion_content":"spring(boot)提供支持集中式session的接口，可以对接redis等缓存，种cookie的动作spring(boot)框架内部已经实现。自己种cookie是为了灵活性，spring(boot)的security/session机制主要针对单块web应用，微服务+spa应用的场景比较复杂，自己处理安全和种cookie会更加灵活，实现也不复杂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564581064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303032,"user_name":"Geek_song","can_delete":false,"product_type":"c3","uid":2383249,"ip_address":"","ucode":"0599215CB0638D","user_header":"","comment_is_top":false,"comment_ctime":1626529981,"is_pvip":false,"replies":[{"id":110327,"content":"对，这种是无状态客户端存储令牌方式，比较简单。如果要严格保证一个用户只能有一个登录session，建议采用集中式令牌存储方式。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1627743825,"ip_address":"","comment_id":303032,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"这种架构下，如果用户在另外一台机器登陆，生成了新的jwt，老jwt还是可以调用接口的","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523523,"discussion_content":"对，这种是无状态客户端存储令牌方式，比较简单。如果要严格保证一个用户只能有一个登录session，建议采用集中式令牌存储方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627743825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133221,"user_name":"庄建斌","can_delete":false,"product_type":"c3","uid":1658940,"ip_address":"","ucode":"123711F25EE828","user_header":"https://static001.geekbang.org/account/avatar/00/19/50/3c/46bb2fe4.jpg","comment_is_top":false,"comment_ctime":1568449749,"is_pvip":false,"replies":[{"id":51321,"content":"jwt如果放在localstorage中有被xss攻击可能，恶意js可以操作localstorage里头令牌。staffjoy的jwt是放在cookie中，而且是http only，js脚本无法操作。但是cookie有csrf(跨站点请求伪造)风险，对于雇员排班这类应用可以接受，如果是其它安全严格网站，需要增加csrf防护，一般web框架都有支持(例如spring security)。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1568640682,"ip_address":"","comment_id":133221,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"jwt给的权限太高了，并且没法控制失效。。。一但被XSS攻击成功，后果就很严重了。","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467302,"discussion_content":"jwt如果放在localstorage中有被xss攻击可能，恶意js可以操作localstorage里头令牌。staffjoy的jwt是放在cookie中，而且是http only，js脚本无法操作。但是cookie有csrf(跨站点请求伪造)风险，对于雇员排班这类应用可以接受，如果是其它安全严格网站，需要增加csrf防护，一般web框架都有支持(例如spring security)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568640682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119330,"user_name":"grey927","can_delete":false,"product_type":"c3","uid":1202782,"ip_address":"","ucode":"833E02ED835B4A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","comment_is_top":false,"comment_ctime":1564562871,"is_pvip":false,"replies":[{"id":43811,"content":"resttemplate支持Interceptor机制动态添加http header的，可以参考：https:&#47;&#47;www.baeldung.com&#47;spring-rest-template-interceptor","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564581208,"ip_address":"","comment_id":119330,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"如果没用feign作为客户端，而是用的原生resttemplate，要如何带着userid传到每个微服务呢？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460853,"discussion_content":"resttemplate支持Interceptor机制动态添加http header的，可以参考：https://www.baeldung.com/spring-rest-template-interceptor","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564581208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207888,"user_name":"A","can_delete":false,"product_type":"c3","uid":1580869,"ip_address":"","ucode":"DDF0B08188F628","user_header":"https://static001.geekbang.org/account/avatar/00/18/1f/45/92343cb6.jpg","comment_is_top":false,"comment_ctime":1587207745,"is_pvip":false,"replies":[{"id":77939,"content":"基于spring cloud oauth2也可以实现，它也支持生成jwt令牌，只要把它和用户DB数据对接起来，具体参考spring cloud oauth2的文档或者样例。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1587393694,"ip_address":"","comment_id":207888,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"springcloud-oauth2  适合吗","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492269,"discussion_content":"基于spring cloud oauth2也可以实现，它也支持生成jwt令牌，只要把它和用户DB数据对接起来，具体参考spring cloud oauth2的文档或者样例。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587393694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120564,"user_name":"澜柯","can_delete":false,"product_type":"c3","uid":1004701,"ip_address":"","ucode":"F0F33B1E104002","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9d/876a05c1.jpg","comment_is_top":false,"comment_ctime":1564929699,"is_pvip":false,"replies":[{"id":44349,"content":"你好，app如果是hybrid的，也可以考虑放cookie或者local storage；如果是纯native app，那么android&#47;ios都有自己专门的本地存储机制，然后可以通过http header传递令牌。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565003825,"ip_address":"","comment_id":120564,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师好，网页端是可以使用cookie，app端如何设置cookie呢？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461387,"discussion_content":"你好，app如果是hybrid的，也可以考虑放cookie或者local storage；如果是纯native app，那么android/ios都有自己专门的本地存储机制，然后可以通过http header传递令牌。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565003825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120133,"user_name":"John","can_delete":false,"product_type":"c3","uid":1020861,"ip_address":"","ucode":"E4ADF8488953FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","comment_is_top":false,"comment_ctime":1564797355,"is_pvip":false,"replies":[{"id":44141,"content":"网关是无状态集群部署的，可以按需添加更多网关实例扩容应对更大流量。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564841261,"ip_address":"","comment_id":120133,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"我們知道 微服務壓力大的時候 我們可以多創建幾個來做load balance 但如果網關的壓力太大了 腫麼辦","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461211,"discussion_content":"网关是无状态集群部署的，可以按需添加更多网关实例扩容应对更大流量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564841261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297140,"user_name":"李饶","can_delete":false,"product_type":"c3","uid":1066572,"ip_address":"","ucode":"EC655E62050DE5","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/4c/7aa0ded5.jpg","comment_is_top":false,"comment_ctime":1623324524,"is_pvip":false,"replies":[{"id":108044,"content":"做在common-lib中也可以，但是对开发者端会引入一定的复杂性，尤其是升级的时候，不如网关集中来得方便。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1623685833,"ip_address":"","comment_id":297140,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师，请问鉴权解析jwt为什么要放在网关中，而不放在common-lib里面的AuthorizeInterceptor里面去解析鉴权","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521732,"discussion_content":"做在common-lib中也可以，但是对开发者端会引入一定的复杂性，尤其是升级的时候，不如网关集中来得方便。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623685833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256787,"user_name":"悟","can_delete":false,"product_type":"c3","uid":1179071,"ip_address":"","ucode":"4D82646444FDA9","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/bf/17012e71.jpg","comment_is_top":false,"comment_ctime":1603729884,"is_pvip":false,"replies":[{"id":93907,"content":"可以在网关层做统一鉴权，也可以在应用层(通过过滤器或者拦截器等机制)单独做鉴权，各有利弊，具体要根据应用上下文综合考虑。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1604242097,"ip_address":"","comment_id":256787,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师请教一个问题，我们系统是前后分离，APP是一套接口，cms是一套接口，这块鉴权怎么做呢？也是在网管统一授权吗","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508121,"discussion_content":"可以在网关层做统一鉴权，也可以在应用层(通过过滤器或者拦截器等机制)单独做鉴权，各有利弊，具体要根据应用上下文综合考虑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604242097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127237,"user_name":"赌神很低调","can_delete":false,"product_type":"c3","uid":1168545,"ip_address":"","ucode":"1066778E1EDF26","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/a1/8bc8e7e1.jpg","comment_is_top":false,"comment_ctime":1566617859,"is_pvip":false,"replies":[{"id":47220,"content":"jwt token可以不放cookie，可以放在header中传递，这个时候需要自己管理token在客户端的存储，然后程序要负责管理和传递token。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1566745233,"ip_address":"","comment_id":127237,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"Bobo老师好，请问可以不把 jwt放到cookie中吗，前端调用认证服务后直接把token放到header中，前端调用后端接口每次都在header中带上token，网关从 header中获取。前端用vue做的单页应用，感觉不需要cookie了。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464394,"discussion_content":"jwt token可以不放cookie，可以放在header中传递，这个时候需要自己管理token在客户端的存储，然后程序要负责管理和传递token。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566745233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121014,"user_name":"miki","can_delete":false,"product_type":"c3","uid":1083312,"ip_address":"","ucode":"88FF747656A271","user_header":"https://static001.geekbang.org/account/avatar/00/10/87/b0/5a1c782a.jpg","comment_is_top":false,"comment_ctime":1565050443,"is_pvip":false,"replies":[{"id":44705,"content":"课程更新由极客时间统一安排，学习不用一次学太多太快，保持适当节奏即可。预计8月底前会全部更新完，谢谢支持！","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565187448,"ip_address":"","comment_id":121014,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"等更新等的好心焦","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461575,"discussion_content":"课程更新由极客时间统一安排，学习不用一次学太多太快，保持适当节奏即可。预计8月底前会全部更新完，谢谢支持！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565187448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}