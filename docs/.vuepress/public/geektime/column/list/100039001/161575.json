{"id":161575,"title":"04 | 理论一：当谈论面向对象的时候，我们到底在谈论什么？","content":"<p>考虑到各个水平层次的同学，并且保证专栏内容的系统性、全面性，我会循序渐进地讲解跟设计模式相关的所有内容。所以，专栏正文的第一个模块，我会讲一些设计原则、设计思想，比如，面向对象设计思想、经典设计原则以及重构相关的知识，为之后学习设计模式做铺垫。</p><p>在第一个模块中，我们又首先会讲到面向对象相关的理论知识。提到面向对象，我相信很多人都不陌生，随口都可以说出面向对象的四大特性：封装、抽象、继承、多态。实际上，面向对象这个概念包含的内容还不止这些。所以，今天我打算花一节课的时间，先大概跟你聊一下，当我们谈论面向对象的时候，经常会谈到的一些概念和知识点，为学习后面的几节更加细化的内容做一个铺垫。</p><p>特别说明一下，对于今天讲到的概念和知识点，大部分我都是点到为止，并没有展开详细讲解。如果你看了之后，对某个概念和知识点还不是很清楚，那也没有关系。在后面的几节课中，我会花更多的篇幅，对今天讲到的每个概念和知识点，结合具体的例子，一一做详细的讲解。</p><h2>什么是面向对象编程和面向对象编程语言？</h2><p>面向对象编程的英文缩写是OOP，全称是Object Oriented Programming。对应地，面向对象编程语言的英文缩写是OOPL，全称是Object Oriented Programming Language。</p><!-- [[[read_end]]] --><p>面向对象编程中有两个非常重要、非常基础的概念，那就是类（class）和对象（object）。这两个概念最早出现在1960年，在Simula这种编程语言中第一次使用。而面向对象编程这个概念第一次被使用是在Smalltalk这种编程语言中。Smalltalk被认为是第一个真正意义上的面向对象编程语言。</p><p>1980年左右，C++的出现，带动了面向对象编程的流行，也使得面向对象编程被越来越多的人认可。直到今天，如果不按照严格的定义来说，大部分编程语言都是面向对象编程语言，比如Java、C++、Go、Python、C#、Ruby、JavaScript、Objective-C、Scala、PHP、Perl等等。除此之外，大部分程序员在开发项目的时候，都是基于面向对象编程语言进行的面向对象编程。</p><p>以上是面向对象编程的大概发展历史。在刚刚的描述中，我着重提到了两个概念，面向对象编程和面向对象编程语言。那究竟什么是面向对象编程？什么语言才算是面向对象编程语言呢？如果非得给出一个定义的话，我觉得可以用下面两句话来概括。</p><ul>\n<li>面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性，作为代码设计和实现的基石 。</li>\n<li>面向对象编程语言是支持类或对象的语法机制，并有现成的语法机制，能方便地实现面向对象编程四大特性（封装、抽象、继承、多态）的编程语言。</li>\n</ul><p>一般来讲， 面向对象编程都是通过使用面向对象编程语言来进行的，但是，不用面向对象编程语言，我们照样可以进行面向对象编程。反过来讲，即便我们使用面向对象编程语言，写出来的代码也不一定是面向对象编程风格的，也有可能是面向过程编程风格的。这里听起来是不是有点绕？不过没关系，我们在后面的第7节课中，会详细讲解这个问题。</p><p>除此之外，从定义中，我们还可以发现，理解面向对象编程及面向对象编程语言两个概念，其中最关键的一点就是理解面向对象编程的四大特性。这四大特性分别是：封装、抽象、继承、多态。不过，关于面向对象编程的特性，也有另外一种说法，那就是只包含三大特性：封装、继承、多态，不包含抽象。为什么会有这种分歧呢？抽象为什么可以排除在面向对象编程特性之外呢？关于这个问题，在下一节课详细讲解这四大特性的时候，我还会再拿出来说一下。不过，话说回来，实际上，我们没必要纠结到底是四大特性还是三大特性，关键还是理解每种特性讲的是什么内容、存在的意义以及能解决什么问题。</p><p>而且，在技术圈里，封装、抽象、继承、多态也并不是固定地被叫作“四大特性”（features），也有人称它们为面向对象编程的四大概念（concepts）、四大基石（cornerstones）、四大基础（fundamentals）、四大支柱（pillars）等等。你也发现了吧，叫法挺混乱的。不过，叫什么并不重要。我们只需要知道，这是前人进行面向对象编程过程中总结出来的、能让我们更容易地实现各种设计思路的几个编程套路，这就够了。在之后的课程讲解中，我统一把它们叫作“四大特性”。</p><h2>如何判定某编程语言是否是面向对象编程语言？</h2><p>如果你足够细心，你可能已经留意到，在我刚刚的讲解中，我提到，“如果不按照严格的定义来说，大部分编程语言都是面向对象编程语言”。为什么要加上“如果不按照严格的定义”这个前提呢？那是因为，如果按照刚刚我们给出的严格的面向对象编程语言的定义，前面提到的有些编程语言，并不是严格意义上的面向对象编程语言，比如JavaScript，它不支持封装和继承特性，按照严格的定义，它不算是面向对象编程语言，但在某种意义上，它又可以算得上是一种面向对象编程语言。我为什么这么说呢？到底该如何判断一个编程语言是否是面向对象编程语言呢？</p><p>还记得我们前面给出的面向对象编程及面向对象编程语言的定义吗？如果忘记了，你可以先翻到上面回顾一下。不过，我必须坦诚告诉你，那个定义是我自己给出的。实际上，对于什么是面向对象编程、什么是面向对象编程语言，并没有一个官方的、统一的定义。而且，从1960年，也就是60年前面向对象编程诞生开始，这两个概念就在不停地演化，所以，也无法给出一个明确的定义，也没有必要给出一个明确定义。</p><p>实际上，面向对象编程从字面上，按照最简单、最原始的方式来理解，就是将对象或类作为代码组织的基本单元，来进行编程的一种编程范式或者编程风格，并不一定需要封装、抽象、继承、多态这四大特性的支持。但是，在进行面向对象编程的过程中，人们不停地总结发现，有了这四大特性，我们就能更容易地实现各种面向对象的代码设计思路。</p><p>比如，我们在面向对象编程的过程中，经常会遇到is-a这种类关系（比如狗是一种动物），而继承这个特性就能很好地支持这种is-a的代码设计思路，并且解决代码复用的问题，所以，继承就成了面向对象编程的四大特性之一。但是随着编程语言的不断迭代、演化，人们发现继承这种特性容易造成层次不清、代码混乱，所以，很多编程语言在设计的时候就开始摒弃继承特性，比如Go语言。但是，我们并不能因为它摒弃了继承特性，就一刀切地认为它不是面向对象编程语言了。</p><p>实际上，我个人觉得，只要某种编程语言支持类或对象的语法概念，并且以此作为组织代码的基本单元，那就可以被粗略地认为它就是面向对象编程语言了。至于是否有现成的语法机制，完全地支持了面向对象编程的四大特性、是否对四大特性有所取舍和优化，可以不作为判定的标准。基于此，我们才有了前面的说法，<strong>按照严格的定义，很多语言都不能算得上面向对象编程语言，但按照不严格的定义来讲，现在流行的大部分编程语言都是面向对象编程语言。</strong></p><p>所以，多说一句，关于这个问题，我们一定不要过于学院派，非要给面向对象编程、面向对象编程语言下个死定义，非得对某种语言是否是面向对象编程语言争个一清二白，这样做意义不大。</p><h2>什么是面向对象分析和面向对象设计？</h2><p>前面我们讲了面向对象编程（OOP），实际上，跟面向对象编程经常放到一块儿来讲的还有另外两个概念，那就是面向对象分析（OOA）和面向对象设计（OOD）。面向对象分析英文缩写是OOA，全称是Object Oriented Analysis；面向对象设计的英文缩写是OOD，全称是Object Oriented Design。OOA、OOD、OOP三个连在一起就是面向对象分析、设计、编程（实现），正好是面向对象软件开发要经历的三个阶段。</p><p>关于什么是面向对象编程，我们前面已经讲过了。我们现在再来讲一下，什么是面向对象分析和设计。这两个概念相对来说要简单一些。面向对象分析与设计中的“分析”和“设计”这两个词，我们完全可以从字面上去理解，不需要过度解读，简单类比软件开发中的需求分析、系统设计即可。不过，你可能会说，那为啥前面还加了个修饰词“面向对象”呢？有什么特殊的意义吗？</p><p>之所以在前面加“面向对象”这几个字，是因为我们是围绕着对象或类来做需求分析和设计的。分析和设计两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法，类与类之间如何交互等等。它们比其他的分析和设计更加具体、更加落地、更加贴近编码，更能够顺利地过渡到面向对象编程环节。这也是面向对象分析和设计，与其他分析和设计最大的不同点。</p><p>看到这里，你可能会问，那面向对象分析、设计、编程到底都负责做哪些工作呢？简单点讲，面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做，面向对象编程就是将分析和设计的的结果翻译成代码的过程。今天，我们只是简单介绍一下概念，不展开详细讲解。在后面的面向对象实战环节中，我会用两节课的时间，通过一个实际例子，详细讲解如何进行面向对象分析、设计和编程。</p><h2>什么是UML？我们是否需要UML？</h2><p>讲到面向对象分析、设计、编程，我们就不得不提到另外一个概念，那就是UML（Unified Model Language），统一建模语言。很多讲解面向对象或设计模式的书籍，常用它来画图表达面向对象或设计模式的设计思路。</p><p>实际上，UML是一种非常复杂的东西。它不仅仅包含我们常提到类图，还有用例图、顺序图、活动图、状态图、组件图等。在我看来，即便仅仅使用类图，学习成本也是很高的。就单说类之间的关系，UML就定义了很多种，比如泛化、实现、关联、聚合、组合、依赖等。</p><p>要想完全掌握，并且熟练运用这些类之间的关系，来画UML类图，肯定要花很多的学习精力。而且，UML作为一种沟通工具，即便你能完全按照UML规范来画类图，可对于不熟悉的人来说，看懂的成本也还是很高的。</p><p>所以，从我的开发经验来说，UML在互联网公司的项目开发中，用处可能并不大。为了文档化软件设计或者方便讨论软件设计，大部分情况下，我们随手画个不那么规范的草图，能够达意，方便沟通就够了，而完全按照UML规范来将草图标准化，所付出的代价是不值得的。</p><p>所以，我这里特别说明一下，专栏中的很多类图我并没有完全遵守UML的规范标准。为了兼顾图的表达能力和你的学习成本，我对UML类图规范做了简化，并配上了详细的文字解释，力图让你一眼就能看懂，而非适得其反，让图加重你的学习成本。毕竟，我们的专栏并不是一个讲方法论的教程，专栏中的所有类图，本质是让你更清晰地理解设计。</p><h2>重点回顾</h2><p>今天的内容讲完了，我们来一起总结回顾一下，你需要重点掌握的几个概念和知识点。</p><p><strong>1.什么是面向对象编程？</strong></p><p>面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性，作为代码设计和实现的基石 。</p><p><strong>2.什么是面向对象编程语言？</strong></p><p>面向对象编程语言是支持类或对象的语法机制，并有现成的语法机制，能方便地实现面向对象编程四大特性（封装、抽象、继承、多态）的编程语言。</p><p><strong>3.如何判定一个编程语言是否是面向对象编程语言？</strong></p><p>如果按照严格的的定义，需要有现成的语法支持类、对象、四大特性才能叫作面向对象编程语言。如果放宽要求的话，只要某种编程语言支持类、对象语法机制，那基本上就可以说这种编程语言是面向对象编程语言了，不一定非得要求具有所有的四大特性。</p><p><strong>4.面向对象编程和面向对象编程语言之间有何关系？</strong></p><p>面向对象编程一般使用面向对象编程语言来进行，但是，不用面向对象编程语言，我们照样可以进行面向对象编程。反过来讲，即便我们使用面向对象编程语言，写出来的代码也不一定是面向对象编程风格的，也有可能是面向过程编程风格的。</p><p><strong>5.什么是面向对象分析和面向对象设计？</strong></p><p>简单点讲，面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做。两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法、类与类之间如何交互等等。</p><h2>课堂讨论</h2><p>今天我们要讨论的话题有两个：</p><ol>\n<li>在文章中，我讲到UML的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？</li>\n<li>有关面向对象的概念和知识点，除了我们今天讲到的，你还能想到其他哪些吗？</li>\n</ol><p>欢迎在留言区发表你的观点，积极参与讨论。你也可以把这篇文章分享给你的朋友，邀请他一起学习。</p>","neighbors":{"left":{"article_title":"03 | 面向对象、设计原则、设计模式、编程规范、重构，这五者有何关系？","id":160991},"right":{"article_title":"05 | 理论二：封装、抽象、继承、多态分别可以解决哪些编程问题？","id":161114}},"comments":[{"had_liked":false,"id":149871,"user_name":"王争","can_delete":false,"product_type":"c1","uid":1190123,"ip_address":"","ucode":"2B611BE0E0EDD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","comment_is_top":true,"comment_ctime":1573424039,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"9.2233729489613005e+18","product_id":100039001,"comment_content":"在这篇文章中，“面向对象编程”一词多义，不同的场景、语境下，解释不同。文章中没有点到这一点，我这里稍微补充说明一下：<br>1. 文章前半部分，面向对象编程指的是一种编程风格或者范式。<br>2. 文章后半部分，在讲到面向对象分析、设计、编程的时候，面向对象编程是一种行为。","like_count":212,"discussions":[{"author":{"id":1122533,"avatar":"https://static001.geekbang.org/account/avatar/00/11/20/e5/f66d6144.jpg","nickname":"九先生","note":"","ucode":"A63A333299D485","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386119,"discussion_content":"前半部分是名词，后半部分是动词","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1627432964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2088626,"avatar":"","nickname":"志江","note":"","ucode":"8A07D53769B3C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376555,"discussion_content":"懂的都懂, 不懂的讲了也不懂, 真是功夫到家了, 飞花摘叶皆可伤人,草木竹石均可为剑.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622189798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1475423,"avatar":"https://static001.geekbang.org/account/avatar/00/16/83/5f/50f2fdf2.jpg","nickname":"『至爱闫』","note":"","ucode":"2A4F0E0DE6C196","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278717,"discussion_content":"听着有些啰嗦，容易忽略重点。😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591230508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500550,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e5/86/932a65e6.jpg","nickname":"兰传富","note":"","ucode":"E15E4B467FDE9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130664,"discussion_content":"老师，得课程会按时更新么，想听听设计模式那块内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578764699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1735673,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7b/f9/fdaa8532.jpg","nickname":"渔人码头คิดถึง","note":"","ucode":"036CBA34FED4BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48711,"discussion_content":"这个怎么学，没有视频案例，代码讲解吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573520935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1735673,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7b/f9/fdaa8532.jpg","nickname":"渔人码头คิดถึง","note":"","ucode":"036CBA34FED4BD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48958,"discussion_content":"有代码的 没视频的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573540005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48711,"ip_address":""},"score":48958,"extra":""}]},{"author":{"id":1078589,"avatar":"https://static001.geekbang.org/account/avatar/00/10/75/3d/0d6cf519.jpg","nickname":"Holmes","note":"","ucode":"28DD6247AC3908","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47880,"discussion_content":"建议可以补充到文章中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573434461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149961,"user_name":"王争","can_delete":false,"product_type":"c1","uid":1190123,"ip_address":"","ucode":"2B611BE0E0EDD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","comment_is_top":true,"comment_ctime":1573436607,"is_pvip":false,"discussion_count":34,"race_medal":0,"score":"9.2233726139538002e+18","product_id":100039001,"comment_content":"UML中定义了类之间的关系：泛化、实现、关联、聚合、组合、依赖，试问下小伙伴们，你们都能搞清楚这几个的区别吗？能否准确的用不同的箭头、图线来画出来吗？即便你能画出来，团队里的小伙伴都能看懂吗？  不过，关于类之间的关系，我后面会在实战篇中讲到的，但是，我会简化成四种关系，更好理解。","like_count":135,"discussions":[{"author":{"id":1205294,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/2e/e70a317a.jpg","nickname":"学好习，做好人","note":"","ucode":"C991643DB458E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48135,"discussion_content":"用Java语言来举例，泛化属于类的继承关系，即关键字extends,实现是实现接口  ，即关键字implements ，依赖，关联，聚合，组合可以认为是一样的东西，只不过对象之间的关系程度不一样。依赖的关系最弱，比如某个对象作为另一个对象方法的一个参数存在。关联是一种强依赖关系，比如一个对象作为另一个对象的全局变量，聚合是比关联关系更强的一种依赖，强调的是部分与整体的关系，组合是最强的依赖关系，强调的也是部分与整体，但是整体的生命周期结束了，部分也不存在了，举个工作的例子：我中午去吃了一碗面，那我我与面馆服务员可以理解为一个简单的依赖关系；我与一个部分的同事算是关联关系；部门与员工之间是聚合关系，部门不在了，员工作为一个实体依然存在。我的脑子与我本人是组合关系。不知道这样理解对不对？","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1573452015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49127,"discussion_content":"下班后发现争哥让我出代码示例和说明区别，赶紧做。\n写点简单粗暴的个人理解。\n一 show me the code ..\n泛化（Generalization）class BaseComponent { ... } class Dingdding extend BaseComponent { .. }\n实现(Realization) 类实现接口 虚线加三角interface crud { func create(); func update();func get(); func() del{ } }\nclass DingdingModel implements crud {\nfunc create(){ ...}\nfunc update(){ ...}\nfunc get(){ ...}\nfunc del(){ ...}\n}\n关键是后面四个 （关联，聚合，组合，依赖）先说关联关系。 （A has B）\nclass DingdingUser {\nprivte $account; //有一个账号对象，\n}\n再说聚合，是一种特殊的关联。\n聚合，组合， 一对多的关联\n聚合关系是“has-a”关系，组合关系是“contains-a”关系，少一个宿主对象死掉没。\numl2.x 已合并这种无聊的区分\n聚合示例class birdsGroup(){\nprivate $birds;\n//聚合往往可以干增减相关的操作\npublic func addBird( $bird) { ... }\npublic func removeBird( $bird) { ... }\n}\n组合示例。class bird (){public $wing; //鸟由翅膀 组成.\n}\n最后说关联合依赖。\n泛化 = 实现 > 组合 > 聚合 > 关联 > 依赖\n2 然后说些个人理解：我回顾了一下，oop 的过程。\n在框架的辅助下，数据库建模一作，其实文件放哪，啥关系就出来了，画uml 图反而了一个体力活。\n往往是去实现一个需求，将一个业务流走通，写了一段代码后，发现这里写死了，于是做点配置管理（中心控制原则） ，一个类权责过多，于是将其支解。（类的单一职责原则），重复的代码出现了不符dry 了，赶紧抽离出来，先简单粗爆的用一个类的静态方法抽（很多大神不建议这样做，我不明其理，慢慢研究）， 某个操作，有几种不同的类可以去做实施。例如日志。（redis 写日志，文本日志，数据库日志，控制台输出） 于是搞个工厂模式，遵守下dip原则，让Log::log($log_msg, $type,$tags) 成为一种面向抽象开始，而不是面向具体实现。老板看到gmail 的undo 很酷闲着蛋疼的让你对所有操作 ，都要求在半分钟类允许undo ，上个command 应付下，不出意外 没多久，老板的redo 需求来了，就顺着扩展 ，进一步的有时候，一个主体业务完成后，要做一堆关联的杂七杂八的事，于是搞个观察者模式，这样将主体业务和后序操作业务解耦了。 既然扯到解藕(decouple)了, 我粗浅的来看，折腾设计模式，本质是解藕，找到合适的方法，在合适的场景下做对应的解藕操作。\n这么一折腾下来，类和类啥关系，好像压根没太在意到。。。。 但类之前又确实有关系 。 挺想想知道其它伙伴们是如何做oop 的。\n自我总结，套路包确实掌握了几个，但总感觉是在很浅的层面上折腾，上述错的乱七八糟的，烦请指正，个人平时就这么想的，这八个月就跟着争哥好好学习了。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1573558535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2084201,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/cd/69/f2c9cdbe.jpg","nickname":"null","note":"","ucode":"78879DEE2B92DE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294040,"discussion_content":"评论很精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595768234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49127,"ip_address":""},"score":294040,"extra":""},{"author":{"id":2479257,"avatar":"https://static001.geekbang.org/account/avatar/00/25/d4/99/2f842710.jpg","nickname":"dr4Utopia","note":"","ucode":"F6FC0FCD85A142","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355423,"discussion_content":"解藕可还行，不服dry我是真不懂啥意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615430096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49127,"ip_address":""},"score":355423,"extra":""}]},{"author":{"id":2766883,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/38/23/4556004f.jpg","nickname":"包包","note":"","ucode":"C840BB4E46C6FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394112,"discussion_content":"很赞同作者对UML的观点，任何东西都是有成本的，当成本大于效益的时候，你就得作取舍，这也是我很欣赏作者的地方，只有融汇消化过知识的人才敢作取舍，试想一个只会照本搬书的人，你让他说一句UML不那么必须，他敢吗？肯定不敢，因为他都没有真正明白UML是什么，可以用来解决什么，怎么用，无非是学了UML几个专有名词罢了。\nUML只是一个拿来沟通的工具，目的是用它来承载面向对象、设计模式等思想的表达沟通，以此达到互相交流的目的。打个比方，有一些事情，你可以通过打手势就可以互相沟通，但是你说你得创造一门语言，然后学会这门语言，并且把这个语言用在任务中，同时还要让身处这个任务中的其他同伴也学会这门语言，好不好？当然好！优点无穷多，但代价是什么，成本！如果我用打手势就能沟通交流完成任务，即使它没有语言的保存、继承性等众多优点，但核心点它完成了任务，且成本几乎为0。\n一句话，时间多，精力足，掌握UML是锦上添花，但它不是必要，什么是必要，就是没它你就不行！","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1631737698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2088250,"avatar":"","nickname":"Geek_190be9","note":"","ucode":"41F416C8CFAB5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294846,"discussion_content":"泛化：中文意思就是由具体的到一般的，也就是实现类指向抽象类或类，比如我是一个人，我到人就是具体到一般的一个过程。\n实现：这个很好理解啊，我经过锻炼实现了空翻的技能，也就是空翻就是一个接口，我锻炼后就实现了空翻技能，同样我也可以有舞蹈的技能等等。\n组合：这个更好理解，我是由心肝脾胃肾组合在一起形成的。\n聚合：关键在聚这个字上，就是聚在一起呗，一群人去参加party，个人与party就是聚合关系对吧，现在疫情期间尽量不要聚集。\n关联和依赖我想放在一起说，他俩才是真正难区分的，依赖就是你和你老婆好的时候你可以依赖她，分了就不依赖了呗，关联就是你和你的选课表的关系","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1596014958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2088250,"avatar":"","nickname":"Geek_190be9","note":"","ucode":"41F416C8CFAB5F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391280,"discussion_content":"我自己的体会是，说起来简单，设计类、画图的时候挺痛苦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630387251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":294846,"ip_address":""},"score":391280,"extra":""}]},{"author":{"id":1600615,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6c/67/07bcc58f.jpg","nickname":"虹炎","note":"","ucode":"9E28ACEBFB26D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235744,"discussion_content":"现在搞得清，继承，接口，关联关系，依赖关系，继承关系，聚合关系，组合关系。《大话设计模式》讲得很好。如果搞不清楚，自己画一遍就好了。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1587048028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1454570,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/w5NYxo0AINI1oDHswCXfUmXpwENbiaKibFiaF8x1CMf0QH5HNqAQj9icIkCkzkoN3xWS1ibAg6ILTFGrPSsCicicmWD9A/132","nickname":"薛锦辉","note":"","ucode":"5535B75604813F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292657,"discussion_content":"现在公司都要求文档化，程序员的离职率是很高的，有一个统一标准的UML对于软件开发的持久性是很有好处的，防止因人员流失而导致后人看不懂前人的代码和设计。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1595297670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1737845,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/84/75/e3e5072d.jpg","nickname":"JM","note":"","ucode":"5CCCD7D0811A54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48161,"discussion_content":"非常赞同，真的没有必要，我之前有想把那些箭头关系背下来，几天之后又忘了，还不如直接写 implement extend  has a is a之类的表示关系。\n","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573455135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1428828,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/QFE00aXGzaS6ibbfJSJsDrpIkqs0OrIYjzZv6L9vZmMhOlut2j24iaeZb0MCQazToE6FRXN960nNiaTrsmw09YjGw/132","nickname":"岁月如歌","note":"","ucode":"1AEBD6F79941B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48016,"discussion_content":"UML图虽非重点 但学习还是有必要  希望争哥能在文末给出一些学习参考资料 或者 做一篇加餐😊","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573441779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330781,"discussion_content":"原来学过UML，工作几年全忘了，重来没用用到过。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606707047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081310,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7f/de/7d17e15b.jpg","nickname":"冰封无名","note":"","ucode":"EB212C047FD415","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131994,"discussion_content":"这几个关系搞懂还是很容易，只是要花点时间，虽然不是经常用，但开发核心功能肯定会用，这个图都画不出来或者理解不了，别人怎么确定你的理解没问题，双方理解是一致的？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578877598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":84668,"discussion_content":"搞不定，看到实线、虚线、空心箭头、实心箭头，一个头八个大！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1576504017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1270666,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLibEOeFibyr9xHD7yicAxw8OH5PKB1VUkc54xJB7iczHT0hv82X7E9pCBylxRIT733YyHUXLicr0Yvdgw/132","nickname":"xaresx","note":"","ucode":"7A16B87D42CB27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47990,"discussion_content":"我为了记住这些 花了好些时间！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573440439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315934,"avatar":"https://static001.geekbang.org/account/avatar/00/14/14/5e/25f5f8a8.jpg","nickname":"啸风","note":"","ucode":"6DBCA0EC5D4085","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48995,"discussion_content":"https://mp.weixin.qq.com/s/7ZlZKWr-98fIXfPEZOGaMA   来自潘加宇老师的不同观点 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573545414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1315934,"avatar":"https://static001.geekbang.org/account/avatar/00/14/14/5e/25f5f8a8.jpg","nickname":"啸风","note":"","ucode":"6DBCA0EC5D4085","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49093,"discussion_content":"我都懒的看他写的 ","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1573553739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48995,"ip_address":""},"score":49093,"extra":""},{"author":{"id":1201998,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/4e/302bfe22.jpg","nickname":"啊波次的额佛哥～","note":"","ucode":"6F31255207CB17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1315934,"avatar":"https://static001.geekbang.org/account/avatar/00/14/14/5e/25f5f8a8.jpg","nickname":"啸风","note":"","ucode":"6DBCA0EC5D4085","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49782,"discussion_content":"我觉得这篇文章有点断章取义，我觉得老师表达的意思是UML对于专栏不需要，学员不一定会懂，毕竟专栏侧重点不是建模，而且这个不是讲给CTO的。而文章说的是业务建模在工作中是否重要。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1573635992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48995,"ip_address":""},"score":49782,"extra":""},{"author":{"id":1069206,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/96/18612c89.jpg","nickname":"克","note":"","ucode":"6DDFBB05E0F4E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":74874,"discussion_content":"是为什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575699882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49093,"ip_address":""},"score":74874,"extra":""}]},{"author":{"id":1019848,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/c8/57ab59e3.jpg","nickname":"Min","note":"","ucode":"3047A2287F1466","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401319,"discussion_content":"实际上在大部分场景下你理解泛化、关联、依赖就可以了，其他几种如果能搞定最好，实在搞不定用以上三种大部分场景也不会对实际的问题产生很大影响。但有了这个工具就有了沟通的基础，很多情况你说半天不如一个简单的图来的快，但图要说清楚必须要有标准，与其费大力气发明一个逻辑自洽的系统，不如用现成的。\n泛化表示的是细分，在很多领域都有相关的说法，细分则意味着职责变明确了，继承、实现都是泛化的泛化。\n关联表达两个实体之间的关系，应该无需赘述了吧。\n依赖、聚合、组合实际是关联的一种泛化，职责更明确了，而依赖所表达的意图在实际应用场景中更多且有比较大的价值。\n希望能对你有帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633622765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2756459,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/6b/18b7d714.jpg","nickname":"Yearn","note":"","ucode":"40CEF1BEE35DDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392006,"discussion_content":"上课的时候老师需要考UML的知识，东西确实挺多。同学们之间大家都懂UML，用UML讨论起来感觉也不错。看了这个简化的UML，对以前UML的认知更加加深，挺好的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630762944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069206,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/96/18612c89.jpg","nickname":"克","note":"","ucode":"6DDFBB05E0F4E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74686,"discussion_content":"不然用什么表现关系？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575660041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1069206,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/96/18612c89.jpg","nickname":"克","note":"","ucode":"6DDFBB05E0F4E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391281,"discussion_content":"作者说了，“不按标准来”“简化”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630387294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74686,"ip_address":""},"score":391281,"extra":""}]},{"author":{"id":1342184,"avatar":"https://static001.geekbang.org/account/avatar/00/14/7a/e8/0930b207.jpg","nickname":"文文小杰","note":"","ucode":"1D38ED443007AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72654,"discussion_content":"我们大学里专门开了这门课(⊙o⊙)…但是现在工作了，确实按里面的画的少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575511950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625618,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/12/1488e361.jpg","nickname":"小明","note":"","ucode":"5A0357E9849226","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50585,"discussion_content":"我司组织上过潘老师的UML的课程，个人感觉确实不好掌握，学习成本较高，但觉着在分析阶段合理的使用uml的时序图、类图等还是有助于来理解需求 做出最好的设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573736910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48943,"discussion_content":"主要是觉得类之间的聚合，组合，依赖，关联这几种关系的概念太微妙了，感觉是一个意思，太难区分了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573539005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":48955,"discussion_content":"说的没错哦 即便区分得清也没啥实践意义 对编程开发帮助不大 后面会讲到的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573539957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48943,"ip_address":""},"score":48955,"extra":""}]},{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48663,"discussion_content":"用啥箭头我不清楚，但这几个关系，写代码时必须搞的明明白白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573519184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48689,"discussion_content":"讲一讲他们的区别和在代码上如何体现的呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573520360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48663,"ip_address":""},"score":48689,"extra":""}]},{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48217,"discussion_content":"争哥，如果有时间的话，能否写一篇你在工作中是如何使用的，相当于是一种经验的交流吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573465112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":48309,"discussion_content":"专栏实战篇会讲到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573472589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48217,"ip_address":""},"score":48309,"extra":""}]}]},{"had_liked":false,"id":150014,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1573445057,"is_pvip":true,"discussion_count":6,"race_medal":0,"score":"774667558337","product_id":100039001,"comment_content":"关于uml类图引起了大家的广泛讨论。我同意老师的观点，uml类图还是太复杂了。我给大家一个链接。Uml类图是不用记的。用的时候看一下cheat sheet就行。https:&#47;&#47;github.com&#47;gdhucoder&#47;Algorithms4&#47;blob&#47;master&#47;designpattern&#47;pic&#47;umlcheatsheet.jpg","like_count":181,"discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51482,"discussion_content":"可能有些同学觉得上面给的cheatsheet太简单了，希望更深入的学习一下，我又添加了3篇关于UML的介绍，一口气学个够！Enjoy!\nhttps://github.com/gdhucoder/Algorithms4/tree/master/designpattern/pic\n下面是短链接，和上面的一样，可能需要翻墙才能访问。\nhttps://tinyurl.com/rae8t9l","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1573882055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1488601,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b6/d9/4d8a4d4c.jpg","nickname":"红豆成香","note":"","ucode":"FB8FBB639B4BA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352027,"discussion_content":"可惜英文看不懂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614579118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330784,"discussion_content":"cheatsheet图挂了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606707179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1281834,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yjPribEvEjfucxIXMz37icztGulgcuBAEQllOWKypiamntLLxkRIb20L7CQ2MVJxSt2KpyXW4dLpgL9YjbkDe9pAQ/132","nickname":"sanyu.h","note":"","ucode":"E4851BF6E2FB17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537861,"discussion_content":"🐎🐎🐴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639229345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334512,"discussion_content":"enjoy ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607869788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/18/293cd24d.jpg","nickname":"o0oi1i","note":"","ucode":"D1F6AD4AAEAFBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215657,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585367536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150259,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/ae476935.jpg","comment_is_top":false,"comment_ctime":1573485677,"is_pvip":true,"discussion_count":10,"race_medal":2,"score":"499789692013","product_id":100039001,"comment_content":"Day007 04<br>关于 UML 推荐一本书《Java Modeling In Color With UML》和一个神器：https:&#47;&#47;app.zenuml.com","like_count":117,"discussions":[{"author":{"id":1359618,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/02/0965cf33.jpg","nickname":"Xiao Peng","note":"","ucode":"9F90B694559374","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71344,"discussion_content":"感谢推荐欢迎交流和意见建议。ZenUML作者（我怎么记得回复过了🙃）","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1575413555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2416157,"avatar":"https://static001.geekbang.org/account/avatar/00/24/de/1d/c1bd26dc.jpg","nickname":"我不是黄蓉我不会武功","note":"","ucode":"E4BE01B01AF1BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343861,"discussion_content":"这个工具不错哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611198521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1728278,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/5f/16/e0946ab5.jpg","nickname":"我爱吃桃子","note":"","ucode":"897172BD6987CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307708,"discussion_content":"这个工具怎么用啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600740458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1516167,"avatar":"https://static001.geekbang.org/account/avatar/00/17/22/87/e7bd2acf.jpg","nickname":"DZZ","note":"","ucode":"C8E4C4B089BCE2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298339,"discussion_content":"Mark ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597251572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612372,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9a/54/5d51fda4.jpg","nickname":"婷","note":"","ucode":"1264B8F777B7CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209765,"discussion_content":"好东西 谢谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584670650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147385,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/f9/3508b638.jpg","nickname":"Andy_Ron","note":"","ucode":"A6963B60B326AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":168350,"discussion_content":"书好老啊，工具不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581574652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1263932,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","nickname":"静静聆听","note":"","ucode":"0A8600CB928EFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":150163,"discussion_content":"只能画序列图么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579789810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319513,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/59/781b6fa5.jpg","nickname":"JOsuny","note":"","ucode":"5F36D3D1AF83EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126986,"discussion_content":"为什么我看不到那个图呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578556952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347792,"avatar":"https://static001.geekbang.org/account/avatar/00/14/90/d0/48037ba6.jpg","nickname":"李跃爱学习","note":"","ucode":"F25C038C86324A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70249,"discussion_content":"神器不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575338152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595158,"avatar":"https://static001.geekbang.org/account/avatar/00/18/57/16/b7b4fe79.jpg","nickname":"long","note":"","ucode":"8424683A801718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52405,"discussion_content":"这个工具不错哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574047835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150092,"user_name":"卢爱飞","can_delete":false,"product_type":"c1","uid":1347184,"ip_address":"","ucode":"35B036B4E34401","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/70/d72656e0.jpg","comment_is_top":false,"comment_ctime":1573461029,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"349465812005","product_id":100039001,"comment_content":"我理解的是要因场景而异，但是最终的目的都是降低沟通的成本。<br>场景1：在大多数人对UML不是很熟练的情况下，如果采用UML来进行沟通，大家在理解上一定会存在Gap，无形之中会提高学习和沟通的成本，在这种情况下，建议不使用UML。举个例子，《实现领域驱动》的作者一开始是使用UML和领域专家沟通，作者认为UML很简单，但是许多领域专家或开发人员并不能很好地理解，最后又出现了ES（事件风暴）的形式来替代。<br>场景2：如果需要准确传达设计意图，还是需要UML这样的通用设计工具的，目的也是降低沟通的成本。例如，架构师的设计理念想准确传达给工程师，如果使用UML工具，可以避免模糊意图，带来额外的沟通成本。<br>敏捷宣言的第一条就是“个体和沟通”高于“流程和工具”。所以要因人而异，因场景而异，在专栏里“很多类图我并没有完全遵守 UML 的规范标准”的策略，我想是一个不错的折中。","like_count":81,"discussions":[{"author":{"id":1543326,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/9e/e4da36d2.jpg","nickname":"Cheng","note":"","ucode":"264C35C2DE20AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73855,"discussion_content":"我觉得还是要上UML，本身不难，用几次就熟了。不能因为这次不熟弃用，以后一直弃用。“个体和沟通”高于“流程和工具”是不错，但是这话也不是这么机械的理解，UML是为了更好的沟通，不是一种流程和工具，本身也不违背这个原则。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1575602324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347792,"avatar":"https://static001.geekbang.org/account/avatar/00/14/90/d0/48037ba6.jpg","nickname":"李跃爱学习","note":"","ucode":"F25C038C86324A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70253,"discussion_content":"因场景而异，我也赞同， 我认为临时的讨论可以用简图，用完就丢了；如果文档需要跨越时间传承，以后也可能修改，最好还是按照标准。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575338345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149901,"user_name":"确认过眼神","can_delete":false,"product_type":"c1","uid":1245530,"ip_address":"","ucode":"E6D73A9D27A279","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/5a/f7c989e4.jpg","comment_is_top":false,"comment_ctime":1573431160,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"177667090296","product_id":100039001,"comment_content":"对于uml来说，简单点是可以的，但是对于规范还是要有的。如果不规范，会的人看不习惯，不会的人容易被带入误区。想学的人，画得再难也会去看，不想学的人，画得再简单易懂，也不会去学。","like_count":41,"discussions":[{"author":{"id":1473069,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7a/2d/e3a5c52e.jpg","nickname":"陈拾柒","note":"","ucode":"22213E2FA5143A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50851,"discussion_content":"能懂就行了 不要过于形式化  捡了芝麻丢了西瓜","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573780036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","nickname":"Edward Lee","note":"","ucode":"156223F1D7E94A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50371,"discussion_content":"感觉能描述清楚类关系就行，毕竟这里不算是 UML 教程哈","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573712120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1270862,"avatar":"https://static001.geekbang.org/account/avatar/00/13/64/4e/0b9afa5e.jpg","nickname":"If_","note":"","ucode":"EBE721D0A120A4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48186,"discussion_content":"看和学是两码事","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573459173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624355,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","nickname":"洛奇","note":"","ucode":"662B4005721119","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49608,"discussion_content":"说了等于没说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573616067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48219,"discussion_content":"我赞同，就是一种规范化的沟通的途径！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573465197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149856,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1573403459,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"164782160707","product_id":100039001,"comment_content":"打卡~<br>我觉得在工作中，如果完成一个功能需要30分钟，其实25分钟都在思考，25分钟在设计，实际编码时间只需要5分钟，而前面25分钟就是编码设计","like_count":38,"discussions":[{"author":{"id":1108132,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e8/a4/0be8a8ca.jpg","nickname":"CAFEBABE","note":"","ucode":"01F6BC01A4EFE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160344,"discussion_content":"我认为一个任务的完成也大概符合二八定律，如果设计思考花80%的时间，那写代码也只需要20%的时间和代码量；否则思路不到位，写出一大堆低质量的代码，而且后续要花更多无法预估的时间去修改。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1580791378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128953,"avatar":"https://static001.geekbang.org/account/avatar/00/11/39/f9/acfb9a48.jpg","nickname":"无言的约定","note":"","ucode":"5E8046EB6B7956","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48675,"discussion_content":"你的设计应该做的很完美，要不然编码时候的突发情况你不一定在设计时能考虑到","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573519820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330786,"discussion_content":"确实在分析设计时应该花时间，不过有时候编码时还是会遇到意外情况","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606707249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284377,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/19/9d813020.jpg","nickname":"xwb","note":"","ucode":"181CB78DFA8802","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51690,"discussion_content":"很赞同，看上去越复杂的逻辑越需要好好想想怎么设计，曾经有过想了一下午的方案，最后几十行写出来了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573915397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2715102,"avatar":"","nickname":"Geek_19aca2","note":"","ucode":"E4EC919596F850","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386131,"discussion_content":"。。。。有这么多时间么\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627436922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150624,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1573569828,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"108947752228","product_id":100039001,"comment_content":"下班后发现争哥让我出代码示例和说明区别，赶紧做。<br>写点简单粗暴的个人理解。<br>一 show me the code ..<br>泛化（Generalization）class BaseComponent { ... } class Dingdding extend BaseComponent { .. }<br>实现(Realization) 类实现接口 虚线加三角interface crud { func create(); func update();func get(); func() del{ } }<br>class DingdingModel implements crud {<br>func create(){ ...}<br>func update(){ ...}<br>func get(){ ...}<br>func del(){ ...}<br>}<br>关键是后面四个 （关联，聚合，组合，依赖）先说关联关系。 （A has B）<br>class DingdingUser {<br>privte $account; &#47;&#47;有一个账号对象，<br>}<br>再说聚合，是一种特殊的关联。<br>聚合，组合， 一对多的关联<br>聚合关系是“has-a”关系，组合关系是“contains-a”关系，少一个宿主对象死掉没。<br>uml2.x 已合并这种无聊的区分<br>聚合示例class birdsGroup(){<br>private $birds;<br>&#47;&#47;聚合往往可以干增减相关的操作<br>public func addBird( $bird) { ... }<br>public func removeBird( $bird) { ... }<br>}<br>组合示例。class bird (){public $wing; &#47;&#47;鸟由翅膀 组成.<br>}<br>最后说关联合依赖。<br>泛化 = 实现 &gt; 组合 &gt; 聚合 &gt; 关联 &gt; 依赖<br>2 然后说些个人理解：我回顾了一下，oop 的过程。<br>在框架的辅助下，数据库建模一作，其实文件放哪，啥关系就出来了，画uml 图反正了一个体力活。<br>往往是去实现一个需求，将一个业务流走通，写了一段代码后，发现这里写死了，于是做点配置管理（中心控制原则） ，一个类权责过多，于是将其支解。（类的单一职责原则），重复的代码出现了，赶紧抽离出来，先简单粗爆的用一个类的静态方法抽（很多大神不建议这样做，我不明其理，慢慢研究）， 某个操作，有几种不同的类可以去做实施。例如日志。（redis 写日志，文本日志，数据库日志，控制台输出） 于是搞个工厂模式，遵守下dip原则，让Log::log($log_msg, $type,$tags) 成为一种面向抽象开始，而不是面向具体实现。老板看到gmail 的undo 很酷闲着蛋疼的让你对所有操作 ，都要求在半分钟类允许undo ，上个command 应付下，不出意外 没多久，老板的redo 需求来了，就顺着扩展 ，进一步的有时候，一个主体业务完成后，要做一堆关联的杂七杂八的事，于是搞个观察者模式，这样将主体业务和后序操作业务解耦了。 继续扯到解藕(decouple)了, 我粗浅的来看，折腾设计模式，本质是解藕，找到合适的方法，在合适的场景下做对应的解藕操作。<br>这么一折腾下来，类和类啥关系，好像压根没太在意到。。。。 但类之前又确实有关系 。 挺想想知道其它伙伴们是如何做oop 的。<br>自我总结，套路包确实掌握了几个，但总感觉是在很浅的层面上折腾，上述错的乱七八糟的，烦请指正，个人平时就这么想的，这八个月就跟着争哥好好学习了。","like_count":25,"discussions":[{"author":{"id":1276613,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gmP4Yh00MZPwNvr4UQdLeXaX3TVyZEEp195S3vD3Sfl1xz5jBr1474Mt6w5OPr0KsrnQObfLRy5PkKNFjSBiasA/132","nickname":"大头爸爸","note":"","ucode":"131E25DB04D222","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309043,"discussion_content":"has a 和 contains a到底是什么区别?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601180162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56256,"discussion_content":"你最初的目的很多时候不是因为他们在一起你觉得不舒服所以要分开他们，而是你预见到有一部分可能会有复杂的变化，为了让变化不影响或少影响不变的部分，所以你把他隔离掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574464290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56273,"discussion_content":"这个封装建立在假设你可以确定变化的前提下，而做这样的封装很容易陷入另一个陷阱，过度设计。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574467405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":56256,"ip_address":""},"score":56273,"extra":""}]},{"author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55818,"discussion_content":"我认为解藕只是最后的表象或者效果，隔离变化点才是目的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574402691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56098,"discussion_content":"这个观点可以讨论一下。什么是你说的隔离变化呢？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574431893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55818,"ip_address":""},"score":56098,"extra":""},{"author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56254,"discussion_content":"当比如你用工厂模式时，你其实是为了向客户端隔离这个对象的创建这样一个变化点。这样就可以在变化到来时让客户端不做功或少做工。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574464069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":56098,"ip_address":""},"score":56254,"extra":""},{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56270,"discussion_content":"封装变化，在变化时好维护的方向肯定是对的， 这个是指引的方向。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574466759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":56254,"ip_address":""},"score":56270,"extra":""}]},{"author":{"id":1113737,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","nickname":"xuanyuan","note":"","ucode":"1EC79B9372868F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49930,"discussion_content":"都是干货，懂的自然懂。话说那个抽静态的我也不理解为什么不可以，不过好像也要看场景，哪种场景下不行？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573650880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149882,"user_name":"daniel李","can_delete":false,"product_type":"c1","uid":1248280,"ip_address":"","ucode":"573840F0C6573E","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/18/bacf4b7a.jpg","comment_is_top":false,"comment_ctime":1573428774,"is_pvip":false,"replies":[{"id":"57680","content":"实际上，大厂也未必都在用。比如类图中几种类关系，同学们有几个能准确的用不同的图线画出来呢？","user_name":"作者回复","comment_id":149882,"uid":"1190123","ip_address":"","utype":1,"ctime":1573435907,"user_name_real":"王争"}],"discussion_count":7,"race_medal":0,"score":"70292905510","product_id":100039001,"comment_content":"当看到老师说uml意义不大的时候我就懵了，还好原来是指不需要按严格标准死磕uml。<br><br>我平时在功能开发初期和后期都是用uml把我的想法可视化然后让师兄审核，减少pr被reject机率。而且也容易让别的工程师接手做功能拓展。<br><br>不过确实互联网公司如果不是大厂，确实很少人能看懂uml。","like_count":17,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474001,"discussion_content":"实际上，大厂也未必都在用。比如类图中几种类关系，同学们有几个能准确的用不同的图线画出来呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573435907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048356,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/24/29d5c610.jpg","nickname":"tina","note":"","ucode":"9F110914D7EB00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48766,"discussion_content":"同意老师。。我在T厂，没见过有人画UML图","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1573524840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063308,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","nickname":"小乙哥","note":"","ucode":"C77E79BEA0C325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53031,"discussion_content":"我过去一直以为只有我迷乱在一堆关系当中。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574125443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587381,"discussion_content":"大厂，基本都不用uml ，呆过BATM，都没有用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663029403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226753,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/01/247ae4a7.jpg","nickname":"Devin","note":"","ucode":"760F8937686FC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53652,"discussion_content":"想请教在大厂，对于比较大的项目，不用UML的话，怎么让新加入的小伙伴了解整个项目，直接看代码吗？会不会有&#34;只缘身在此山中&#34;的感觉？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574203280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2217343,"avatar":"","nickname":"Geek_5db424","note":"","ucode":"1835134BEA58AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1226753,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/01/247ae4a7.jpg","nickname":"Devin","note":"","ucode":"760F8937686FC0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309896,"discussion_content":"告诉你吧，我呆过字节呆过滴滴 ，几乎都不用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601483779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":53652,"ip_address":""},"score":309896,"extra":""}]},{"author":{"id":1735673,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7b/f9/fdaa8532.jpg","nickname":"渔人码头คิดถึง","note":"","ucode":"036CBA34FED4BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48708,"discussion_content":"怎么没有视频的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573520889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150054,"user_name":"NeverMore","can_delete":false,"product_type":"c1","uid":1608843,"ip_address":"","ucode":"835B9884DFA102","user_header":"https://static001.geekbang.org/account/avatar/00/18/8c/8b/bc18b962.jpg","comment_is_top":false,"comment_ctime":1573454761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53113062313","product_id":100039001,"comment_content":"对于UML，我觉得同样不要过于“学院派”，过度求其严谨，而忘记使用它的目的是什么，此谓舍本逐末。毕竟它终究只是一个工具，最终能够服务于我们的表达，方便我们的交流即可。是否要简化，当然也要看场景，至少对于学习这门课程而言，并不需要让其过于复杂而提高我们的学习成本。<br>另外，我特别欣赏老师这种删繁就简、力求简约和高效的风格，或许这也是一种极客精神吧。","like_count":12},{"had_liked":false,"id":149926,"user_name":"方向","can_delete":false,"product_type":"c1","uid":1261031,"ip_address":"","ucode":"CBB283D30C8C09","user_header":"https://static001.geekbang.org/account/avatar/00/13/3d/e7/e4b4afcc.jpg","comment_is_top":false,"comment_ctime":1573433556,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53113041108","product_id":100039001,"comment_content":"UML在毕设时候是必须的，什么用例图，时序图，活动图，非得写上去才显得高大上，但一直不得要领，当时也是网上搜相关的模仿着填充进去。始终认为这种图的目的也是为了传达明确的设计意图，遵循最基本的规范能够达到看懂、意图明确的效果就行了。","like_count":12,"discussions":[{"author":{"id":1099513,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/f9/caf27bd3.jpg","nickname":"大王叫我来巡山","note":"","ucode":"1B8D0C701BC95E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200155,"discussion_content":"你要知道不是所有人都能看懂你的论文的，但是总要提点儿意见是不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583662074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149974,"user_name":"BerryMew","can_delete":false,"product_type":"c1","uid":1013075,"ip_address":"","ucode":"E6CDD211617FF9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/53/76281fc3.jpg","comment_is_top":false,"comment_ctime":1573439453,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44523112413","product_id":100039001,"comment_content":"专栏重点是设计模式，只要便于理解，什么样的图都没关系的，凡事都要抓住重点，我觉得软件开发最大的忌讳就是追求完美，死扣细节。 ","like_count":10,"discussions":[{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280688,"discussion_content":"我咋感觉和你所言恰恰相反呢","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1591593800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156327,"user_name":"Qfxl","can_delete":false,"product_type":"c1","uid":1042753,"ip_address":"","ucode":"4554F28BB10F21","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/p6kkT7nsViayxazIrxx7p0pklPRvet933nEGBupj1phL2zArLStC3MnHFFyBYZ9fDGbPWJxS6WOICkxCCLia7nhw/132","comment_is_top":false,"comment_ctime":1574857149,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35934595517","product_id":100039001,"comment_content":"看过很多本厂的设计文档 很少会画类的设计图 基本是系统整体架构和流程图 而且代码变化快 文档容易脱钩 首席架构甚至说过不想看类是怎么设计的 最重要还是大方向功能性正确 所以uml大概知道就好了 学有余力了解下亦可","like_count":8,"discussions":[{"author":{"id":2849207,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/p7WrTfywicxkRZTdlSEvzTsrWssRF0YnmGY2ffFYGKjIoNC8fnbMiaI9Kic0gOD3icLiapY5vmYh89yLUH7qgZZicn3g/132","nickname":"Geek_8b8904","note":"","ucode":"3A7967582FFE8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561460,"discussion_content":"UML不是只有类图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649642537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153079,"user_name":"阿健","can_delete":false,"product_type":"c1","uid":1024066,"ip_address":"","ucode":"7475C02BABF3B2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/42/88e70d61.jpg","comment_is_top":false,"comment_ctime":1574154579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31638925651","product_id":100039001,"comment_content":"关于uml类图，我要发表一下个人观点。目前我也是在一个互联网公司，我们有比较严格的设计方案模板，其中类图，流程图，用例图，状态图是必备的，时序图暂时还没有那么要求严格，目前团队内统一用platuml来画图，基本进入团队先学这个，如果忘记语法，就去官网查一下。磨刀不误砍柴工，互联网公司开发项目，还是需要uml类图的。","like_count":7},{"had_liked":false,"id":150353,"user_name":"BK🎩","can_delete":false,"product_type":"c1","uid":1248016,"ip_address":"","ucode":"A5743A15241C0E","user_header":"https://static001.geekbang.org/account/avatar/00/13/0b/10/057e2037.jpg","comment_is_top":false,"comment_ctime":1573522389,"is_pvip":false,"replies":[{"id":"58369","content":"好像没有多少人画uml，文档主要还是聚焦于业务和更上层的架构设计、技术难点说明，实现直接看代码。","user_name":"作者回复","comment_id":150353,"uid":"1190123","ip_address":"","utype":1,"ctime":1573789942,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"31638293461","product_id":100039001,"comment_content":"确实很多公司使用 UML 的频率比较低，大厂也是这样。另外我自己对 Google 的了解是对代码要求很高，那么代码交付还有文档的要求想必也很高，不知道 Google 公司在文档上面会不会大量使用 UML，如果不用的话，有没有更好的方式或语言来维护高质量的文档","like_count":8,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474132,"discussion_content":"好像没有多少人画uml，文档主要还是聚焦于业务和更上层的架构设计、技术难点说明，实现直接看代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573789942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149873,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1573425381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31638196453","product_id":100039001,"comment_content":"UML设计的合理，新开发者也能去快速开发。关键还是看自己开发还是别人开发。作为学习来说，简单的UML能表达意思即可。","like_count":7},{"had_liked":false,"id":149869,"user_name":"香蕉派2号","can_delete":false,"product_type":"c1","uid":1587685,"ip_address":"","ucode":"1BB5A449B6EA5E","user_header":"https://static001.geekbang.org/account/avatar/00/18/39/e5/53b1f697.jpg","comment_is_top":false,"comment_ctime":1573421635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31638192707","product_id":100039001,"comment_content":"1.同意老师观点，UML是提供一种规范和准则，如果严格的按照规范来做可能过犹不及，在时间成本和规范之间必尽量要做到平衡。<br>2.除了以上的概念，还想到了低耦合高内聚，模块化，可维护性，可扩展性，可复用性，对象的唯一性，对象的分类（是is-a还是has的关系）等。","like_count":7},{"had_liked":false,"id":150397,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1573527222,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27343330998","product_id":100039001,"comment_content":"对于UML（统一建模语言），我个人觉得它的作用还是很大的，因为它可以帮助开发人员更好的去分析一个软件的设计过程，通过它的哪些表示的方法吗，会让人的思路更加的清晰，如果是一个软件的负责人，那么使用UML来分析问题，我觉得再好不过。<br>软件开发是一个工程问题，就好比盖房子，只有每一步都规划好，分析好，设计好，盖出来的房子才好，总之，我个人觉得值得花时间去学UML！<br>","like_count":6,"discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391283,"discussion_content":"房子是一次性的，软件是迭代的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1630387666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1220273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9e/b1/758f2fe7.jpg","nickname":"香","note":"","ucode":"121D6CECECEEC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336019,"discussion_content":"代码迭代开发快，画过一遍UML类图，后面重构之后其实都不太想去画这个东西，当然，我是觉得能把事情说清楚就可以。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608456224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149857,"user_name":"唐龙","can_delete":false,"product_type":"c1","uid":1471657,"ip_address":"","ucode":"87A10AE04F2037","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/a9/5eb3ebc6.jpg","comment_is_top":false,"comment_ctime":1573403819,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27343207595","product_id":100039001,"comment_content":"即便我们使用面向对象编程语言，写出来的代码也不一定是面向对象编程风格的，也有可能是面向过程编程风格的。嗯~刚学C++的时候干过这事。","like_count":6,"discussions":[{"author":{"id":1519521,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2f/a1/5f32ada6.jpg","nickname":"大姨夫斯基","note":"","ucode":"79989AC4DD36FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47935,"discussion_content":"现在移动端开发得大部分程序员 还是在写面条代码 面向对象是面试时才会拿出来的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573436488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197455,"avatar":"https://static001.geekbang.org/account/avatar/00/12/45/8f/a56b2214.jpg","nickname":"innocent","note":"","ucode":"368659A0DDE7E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55107,"discussion_content":"C with class","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574340422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149944,"user_name":"帆大肚子","can_delete":false,"product_type":"c1","uid":1529040,"ip_address":"","ucode":"3DB11DB2FA1802","user_header":"https://static001.geekbang.org/account/avatar/00/17/54/d0/4e1fc664.jpg","comment_is_top":false,"comment_ctime":1573435056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23048271536","product_id":100039001,"comment_content":"我第一次看《设计模式》的时候，里面的uml很是让人头疼，确实学习成本很大，而且我的学习重心不在uml，被迫学习uml真的很痛苦。<br>    ","like_count":5},{"had_liked":false,"id":149905,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1573431318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23048267798","product_id":100039001,"comment_content":"就像开会不需要非得要PPT，简单的txt文档能够说清楚问题即可。用不用UML也是类似的吧","like_count":5},{"had_liked":false,"id":216892,"user_name":"方舟勇士","can_delete":false,"product_type":"c1","uid":1218162,"ip_address":"","ucode":"53D3D844B08B92","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/72/a517bf25.jpg","comment_is_top":false,"comment_ctime":1589363632,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18769232816","product_id":100039001,"comment_content":"不是来挑刺的，发现有更好的论述与大家分享。下面内容总结自邵维忠和杨芙清院士的著作《面向对象的系统设计（第2版）》，主要看第20页，解答了我当年的疑惑：<br>面向对象分析不能简单说是要搞清楚做什么，系统分析!=需求分析。面向对象分析是指系统分析，它既是对“做什么”问题的进一步明确，也是相当程度上涉及到“怎么做”的问题。重点来了，OOA产生的系统模型与实现条件无关，OOD产生的系统模型针对具体的实现平台。","like_count":4},{"had_liked":false,"id":149997,"user_name":"shniu","can_delete":false,"product_type":"c1","uid":1019555,"ip_address":"","ucode":"E64CD8BED96D8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/a3/d7e5fe8a.jpg","comment_is_top":false,"comment_ctime":1573442961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18753312145","product_id":100039001,"comment_content":"1.对uml，真正掌握确实有难度，很容易忘记，原因可能是自己并没有真正的理解设计这件事，比如说uml中是用泛化还是实现不是问题的本质，本质是对于一个特定问题，要如何设计才是尽可能最好的；这中间有两层：将自己的想法转成可表达的设计和将可表达的设计让别人也能理解你的意图，而uml就是一种可表达的方式，至于是不是uml并不重要；但是uml有一套规范，而且知名度高，大家多少都有一些了解，所以就成了一种大家相互沟通的通用语言，所以学uml是需要的。我现在是傻傻分不清泛化、实现、关联、聚合、组合、依赖和他们的表达形式。<br>2. 想到了编程范式，虽然不是它不是面向对象独有的东西，OO只是众多范式中的一种。<br>","like_count":4},{"had_liked":false,"id":149959,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1573436342,"is_pvip":false,"replies":[{"id":"58373","content":"组合跟封装应该没啥关系呢。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573790231,"ip_address":"","comment_id":149959,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18753305526","product_id":100039001,"comment_content":"1.我觉得首先uml这东西很牛逼，很有必要去画，但是也需要分场景，比如crud还强行画一个出来那就是浪费时间，比如超级复杂的东西要画，那我觉得就可以简化，多配上文字注释。比如需求一般，不是很复杂也不是很简单的那种也可以好好画一下，必要的地方配上文案描述。uml能帮助我们瞬间理解这个东西到底要做什么，流程是怎样的，画出来不光是现在看还是以后复习看，他都很香！<br>2.我觉得缺少了一个“组合”，首先要以类和对象作为代码的基石，还要能灵活的支持组合特性才算不严谨的面向对象语言。组合算封装特性的一部分吗？还是说只要以类和对象为基石的开发语言都支持组合？","like_count":4,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474023,"discussion_content":"组合跟封装应该没啥关系呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149911,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1573432004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18753301188","product_id":100039001,"comment_content":"1. 基本认同，除非某个公司内部统一要求如此，才能真正降低沟通成本并摊低学习成本。没有必须使用的场景，就不值得花时间深入<br>2. 除了老师今天讲的知识点之外，还有消息传递。对象之间需要相互沟通，沟通的途径就是对象之间收发消息。消息内容包括接收消息的对象标识、需要调用的函数的标识以及必要的信息","like_count":4},{"had_liked":false,"id":149885,"user_name":"水银","can_delete":false,"product_type":"c1","uid":1045948,"ip_address":"","ucode":"0FD9C79590E484","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/bc/63be02b6.jpg","comment_is_top":false,"comment_ctime":1573429236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18753298420","product_id":100039001,"comment_content":"完全按照uml画，画的成本高、沟通成本高，更麻烦的是经常做设计变更，导致uml图也要同步更新，保持和代码同步，然后再同步沟通设计变化，成本更高。","like_count":4},{"had_liked":false,"id":150752,"user_name":"村口叶师傅","can_delete":false,"product_type":"c1","uid":1249466,"ip_address":"","ucode":"D8C057CB62CE22","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/ba/dccc6e34.jpg","comment_is_top":false,"comment_ctime":1573606968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14458508856","product_id":100039001,"comment_content":"UML类图在功能开发完成后的交付文档中一般都会提供，方便其他同事了解代码。我不能保证看的人都懂UML类图，但是自己要尽量保证其正确性，最起码让懂的人能看明白","like_count":3},{"had_liked":false,"id":150045,"user_name":"青青子衿","can_delete":false,"product_type":"c1","uid":1438102,"ip_address":"","ucode":"4A388A3BA70C29","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","comment_is_top":false,"comment_ctime":1573452418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14458354306","product_id":100039001,"comment_content":"我们是围绕着对象或类来做需求分析和设计的。分析和设计两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法，类与类之间如何交互等等。它们比其他的分析和设计更加具体、更加落地、更加贴近编码，更能够顺利地过渡到面向对象编程环节。这也是面向对象分析和设计，与其他分析和设计最大的不同点<br>曾经面试的时候被问到，领域驱动设计和数据表驱动设计有什么区别，我觉得王老师的这句话总结的很到位","like_count":3},{"had_liked":false,"id":149983,"user_name":"潇潇雨歇","can_delete":false,"product_type":"c1","uid":1251429,"ip_address":"","ucode":"4BD52BF0F0A084","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","comment_is_top":false,"comment_ctime":1573440909,"is_pvip":false,"replies":[{"id":"58374","content":"周末会上一篇加餐，你可以简单看下专栏中用到的所有的java语法。至于书籍推荐，你可以随便找本比较薄的java书籍看看就可以，先入个门。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573790295,"ip_address":"","comment_id":149983,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14458342797","product_id":100039001,"comment_content":"1，关于UML，大学的时候学过，但是没有好好学，大概能看得懂，非常复杂的话不必弄的太规范；可以在自己画的时候做个讲解，关于规范UML的讲解，以免学生误解。简化不等于乱画，大体思想核心是在的。我觉得这样挺好的。可以使用类UML的形式，《Head FIrst 设计模式》也是用的这种，大家更能看懂。因为学习UML是有成本的，老师可以在课程中讲解一些UML的基本用法，不需要详细介绍。<br>2，面向对象的话还有接口，组合等概念。我学的是JavaScript，其实js严格来说并不是面向对象编程语言，像类本身都是没有的，可以说是基于对象编程语言。Java这种就是严格上的面向对象编程语言。其实我也想学学Java，老师有什么好的学习资料推荐吗？比如书籍，文档，博客什么。感谢🙏","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474030,"discussion_content":"周末会上一篇加餐，你可以简单看下专栏中用到的所有的java语法。至于书籍推荐，你可以随便找本比较薄的java书籍看看就可以，先入个门。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251429,"avatar":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","nickname":"潇潇雨歇","note":"","ucode":"4BD52BF0F0A084","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51160,"discussion_content":"好的，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573818313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149865,"user_name":"君君","can_delete":false,"product_type":"c1","uid":1054285,"ip_address":"","ucode":"E2FA7EEB2C936B","user_header":"https://static001.geekbang.org/account/avatar/00/10/16/4d/55e2eb36.jpg","comment_is_top":false,"comment_ctime":1573411539,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14458313427","product_id":100039001,"comment_content":"UML 不懂的看不懂 懂得懒得写。。。","like_count":3},{"had_liked":false,"id":165714,"user_name":"八歌","can_delete":false,"product_type":"c1","uid":1025218,"ip_address":"","ucode":"B54B99716358DE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/c2/e8ab13d7.jpg","comment_is_top":false,"comment_ctime":1577287297,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10167221889","product_id":100039001,"comment_content":"我个人认为 ,uml 最大的毛病就是还没有一个操作方便颜值在线的工具软件，不像脑图、markdown，有一大堆的优秀客户端。uml 之前的各种插件扩展鸡肋的不行。<br><br>UML 主要作用也就是表达内部的一些关系，不要为了画图而画图，能体现重要的关系就行了。","like_count":2,"discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391289,"discussion_content":"哈哈哈，问题是UML的重点是U，要是方便操作了它就不unified了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630390076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316766,"user_name":"小马哥","can_delete":false,"product_type":"c1","uid":1358045,"ip_address":"","ucode":"B2C0FF38F8C9BC","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","comment_is_top":false,"comment_ctime":1634545068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5929512364","product_id":100039001,"comment_content":"第一个问题: &quot;在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？&quot;<br><br>简单的比喻: 杀鸡用牛刀 vs 磨刀不误砍柴工 .<br>如果团队不大, 项目也不复杂, &quot;杀鸡用牛刀&quot;似乎也没有必要;如果团队足够大, UML就是统一的沟通标准, 我还是赞同使用UML, 都熟悉一下标准就统一了. ","like_count":1},{"had_liked":false,"id":297155,"user_name":"动刀不动情","can_delete":false,"product_type":"c1","uid":2649773,"ip_address":"","ucode":"8F2A6B294EB69D","user_header":"https://static001.geekbang.org/account/avatar/00/28/6e/ad/b5e93fcb.jpg","comment_is_top":false,"comment_ctime":1623332253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5918299549","product_id":100039001,"comment_content":"面向对象编程：看人。<br>面型对象编程语言：看编程语言。<br>","like_count":1},{"had_liked":false,"id":244214,"user_name":"Geek_35cfdd","can_delete":false,"product_type":"c1","uid":1792214,"ip_address":"","ucode":"AD9615ABB4CA25","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiaP1gptuBzj3AXMpY8yLTIkpuarouOVzLde4636UJ7zAgnOEZibiaAIRVAicFaO64ftH45YOn1pD3VA/132","comment_is_top":false,"comment_ctime":1598430802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893398098","product_id":100039001,"comment_content":"UML本质上来说是一种可视化表达的工具，本质还是为了让在一个团队工作的人都各自能看懂彼此的设计。如果大家可以随心所欲用一些工具，这样在讨论阶段就会出现问题。是不是一定使用UML不重要，重要的是整个团队得有一个统一的工具来表达自己的设计并且别人可以看懂。","like_count":1},{"had_liked":false,"id":219375,"user_name":"奔跑的蜗牛","can_delete":false,"product_type":"c1","uid":2001039,"ip_address":"","ucode":"62ACD849652E80","user_header":"https://static001.geekbang.org/account/avatar/00/1e/88/8f/166dfe47.jpg","comment_is_top":false,"comment_ctime":1590020396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5884987692","product_id":100039001,"comment_content":"争哥，请教下：<br>我们是围绕着对象或类来做需求分析和设计的。分析和设计两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法，类与类之间如何交互等等；<br>对于分析和设计的最终产出，如果不借助uml，您建议有什么更好的方式梳理这些产出呢？通过画草图吗，还是直接存放于大脑CPU中？","like_count":1},{"had_liked":false,"id":159264,"user_name":"瑞泉","can_delete":false,"product_type":"c1","uid":1111565,"ip_address":"","ucode":"D38E24A98FDAE3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/0d/e16dff4e.jpg","comment_is_top":false,"comment_ctime":1575593180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870560476","product_id":100039001,"comment_content":"UML每次都去记，过不了多久又忘了，还是不是很好用","like_count":1},{"had_liked":false,"id":153062,"user_name":"[耶]友超","can_delete":false,"product_type":"c1","uid":1400962,"ip_address":"","ucode":"890572F77C3670","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/82/9a43504b.jpg","comment_is_top":false,"comment_ctime":1574150932,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5869118228","product_id":100039001,"comment_content":"没学过UML,能不学就不学","like_count":1},{"had_liked":false,"id":150764,"user_name":"Bug? Feature!","can_delete":false,"product_type":"c1","uid":1164531,"ip_address":"","ucode":"F8FA8A0094FBA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","comment_is_top":false,"comment_ctime":1573608220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868575516","product_id":100039001,"comment_content":"我觉得没有必要去把UML各种搞的很透彻，草图也行呀，只要能够理清楚类与类之间的关系啥的就行了，这样学习起来才快，才更容易通俗易懂！","like_count":1},{"had_liked":false,"id":150517,"user_name":"Kang","can_delete":false,"product_type":"c1","uid":1237655,"ip_address":"","ucode":"088A8DA0A16BDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","comment_is_top":false,"comment_ctime":1573548793,"is_pvip":false,"replies":[{"id":"58380","content":"我没读过mysql源码呢，不大清楚你说的那个问题。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573790537,"ip_address":"","comment_id":150517,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868516089","product_id":100039001,"comment_content":"请教下   mysql源码里面是否实现面向对象的思想呢，怎么理顺一部分，比如源码里的优化器<br>","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474188,"discussion_content":"我没读过mysql源码呢，不大清楚你说的那个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150330,"user_name":"return","can_delete":false,"product_type":"c1","uid":1135528,"ip_address":"","ucode":"42B8A3380DF04B","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","comment_is_top":false,"comment_ctime":1573519680,"is_pvip":false,"replies":[{"id":"58371","content":"看下一篇文章，看能否解决你的疑惑呢","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573790078,"ip_address":"","comment_id":150330,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868486976","product_id":100039001,"comment_content":"老师， 面向对象主要用来解决扩展复杂性，<br>写出来的代码确实要比面向过程更舒服 更易扩展。<br>但是 我思考其 为什么会有这种效果时， 又说不上具体原因，<br>有人说是 面向对象 把 实体和行为节藕，实体是稳定的， 而面向过程只有行为 ，行为是不稳定的。 好想有点道理 但是又有点抽象。<br>老师能否指点指点🙂","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474127,"discussion_content":"看下一篇文章，看能否解决你的疑惑呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150328,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1573519415,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5868486711","product_id":100039001,"comment_content":"大一的时候学习C语言，学到结构体的时候，老师说现在我们也能用C语言写出面向对象风格的代码了。。。<br>我们：啥？啥面向对象？还有风格？。。。","like_count":1,"discussions":[{"author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48942,"discussion_content":"我觉得面向对象的风格就是指运用面向对象的思维来编码，C语言的的结构体就是运用了面向对象的封装的特性，将相关变量封装在一起。结构体有数据变量和成员方法，就像C++的类一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573538759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150319,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1573519061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868486357","product_id":100039001,"comment_content":"依稀记得rose 画uml 时可以直接选设计模式。<br>后来发现画uml  两个问题，<br>一 ood  类图时一，设计时，往往一起步就是几层结构了，非常的不适合mvp .而且图经常抓不住重点，乱封装。<br>二 跟不上迭代节奏。变更引发uml  要同步到开发团队，本来简单的事搞复杂。<br><br>可能我们能力不足，但先放弃uml很有必要。<br><br>一度对uml  还有种，talk is cheap  show me the code...的感觉。","like_count":1},{"had_liked":false,"id":150239,"user_name":"修缘","can_delete":false,"product_type":"c1","uid":1035476,"ip_address":"","ucode":"72AB60C1DC88C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/d4/f1f84a96.jpg","comment_is_top":false,"comment_ctime":1573482916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868450212","product_id":100039001,"comment_content":"其实泛化和实现、关联和依赖，聚合和组合是一种强和弱的关系","like_count":1},{"had_liked":false,"id":150236,"user_name":"修缘","can_delete":false,"product_type":"c1","uid":1035476,"ip_address":"","ucode":"72AB60C1DC88C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/d4/f1f84a96.jpg","comment_is_top":false,"comment_ctime":1573482477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868449773","product_id":100039001,"comment_content":"面向对象设计：领域对象-&gt;数据对象-&gt;对象交互与通信。","like_count":1},{"had_liked":false,"id":150233,"user_name":"修缘","can_delete":false,"product_type":"c1","uid":1035476,"ip_address":"","ucode":"72AB60C1DC88C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/d4/f1f84a96.jpg","comment_is_top":false,"comment_ctime":1573482390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868449686","product_id":100039001,"comment_content":"1.对于UML个人觉得概念太多，其实对于专业性要求还是很高的，有时候容易搞混，比如说：泛化和实现，聚合和组合，关联和依赖。搞清楚这些概念本身的学习成本就很高了。<br>2.面向对象分析-&gt;领域对象抽象－&gt;类，侧重于静态分析。<br>","like_count":1},{"had_liked":false,"id":150200,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1573477712,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5868445008","product_id":100039001,"comment_content":"今天把面向对象编程和面向对象编程语言写两个概念又重新理解一下，核心就是类或者对象<br><br>对于UML图，曾经学习过几次但是在实际工作中没有那么多时间去画图，所以后来也就忘了<br>补充一下，UML图是个好东西，有时间和精力还是要好好去学习一下的，一方面是有了规范方便以后去理解，另一方面可以清晰的表达出各种组件之间的关系","like_count":1},{"had_liked":false,"id":150093,"user_name":"mark","can_delete":false,"product_type":"c1","uid":1015720,"ip_address":"","ucode":"39EDFEA8010F9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/a8/d103904b.jpg","comment_is_top":false,"comment_ctime":1573461057,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5868428353","product_id":100039001,"comment_content":"对java 中毒比较深的人，uml 还是比较重要的。但是，对非java程序员，这东西其实用的并不多。","like_count":1},{"had_liked":false,"id":150050,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1573453804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868421100","product_id":100039001,"comment_content":"uml确实很复杂，之前看过2本书学习，还是大部分没记住！支持老师简化！看到老师说UML难学，我就放心了。","like_count":1},{"had_liked":false,"id":149963,"user_name":"Running","can_delete":false,"product_type":"c1","uid":1006392,"ip_address":"","ucode":"6377B6BD1F01FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/38/42ff18f1.jpg","comment_is_top":false,"comment_ctime":1573436834,"is_pvip":false,"replies":[{"id":"57693","content":"c是面向过程的编程语言 后面会讲到 别急","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573442310,"ip_address":"","comment_id":149963,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5868404130","product_id":100039001,"comment_content":"古老的C语言是不是可以认为面向对象的编程语言呢？结构体可以认为是类吗？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474024,"discussion_content":"c是面向过程的编程语言 后面会讲到 别急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573442310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002255,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4b/0f/d747ed96.jpg","nickname":"Steve","note":"","ucode":"243D10F2DC065A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47999,"discussion_content":"不可以，所以有 C++ 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573440887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149954,"user_name":"初心","can_delete":false,"product_type":"c1","uid":1104576,"ip_address":"","ucode":"C090A1723E3474","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/c0/9fc31f2d.jpg","comment_is_top":false,"comment_ctime":1573435935,"is_pvip":false,"replies":[{"id":"57692","content":"有的 看专栏目录就知道了","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573442285,"ip_address":"","comment_id":149954,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868403231","product_id":100039001,"comment_content":"有一点很有体会:使用面向对象编程语言开发出来的功能未必符合面向对象的思想，很可能是面向过程的。如何避免这种问题呢？后续有类似案例吗？争老师","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474021,"discussion_content":"有的 看专栏目录就知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573442285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149916,"user_name":"阿玛铭","can_delete":false,"product_type":"c1","uid":1100703,"ip_address":"","ucode":"DBF948D82ACBE3","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/9f/ee68858c.jpg","comment_is_top":false,"comment_ctime":1573432346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868399642","product_id":100039001,"comment_content":"软件工程专业有专门的面向对象技术和UML相关的教材。学艺不精，只记得里边大量使用草图，老师强调的软件开发过程中不过分纠结UML标准确实有所体会。UML有自己的发展历程，而且到现在还在演进。面向对象分析和设计是精髓，UML是可以用来讲清楚精髓的工具，如果因为团队基础不足达不到效果，不如使用相对简单的草图，配合自己的理解说明白涉及思路。如果有易用的UML工具可以拿来用，比如做代码反向工程或者直接生成代码。","like_count":1},{"had_liked":false,"id":149915,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1573432321,"is_pvip":false,"replies":[{"id":"57679","content":"接口也算","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573435741,"ip_address":"","comment_id":149915,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868399617","product_id":100039001,"comment_content":"1. 个人觉得UML只是一种辅助你学习的工具，有一定的学习成本。如果自己精力允许，可以多了解一些。至于一些重要的东西，是需要深入理解的（如面向对象分析、设计等），在这过程中使用简单的辅助手段帮助理解也就好了，毕竟重心不在工具上，不必拘泥于是否符合UML的严格要求。<br>2. 除了今天讲到的，在平时开发中用到接口，也不算面向对象的概念范畴吗？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474010,"discussion_content":"接口也算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573435741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149850,"user_name":"连边","can_delete":false,"product_type":"c1","uid":1391748,"ip_address":"","ucode":"54B5DA38449728","user_header":"https://static001.geekbang.org/account/avatar/00/15/3c/84/608f679b.jpg","comment_is_top":false,"comment_ctime":1573401877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868369173","product_id":100039001,"comment_content":"先来抢沙发。","like_count":1},{"had_liked":false,"id":359562,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"日本","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1665646738,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665646738","product_id":100039001,"comment_content":"uml 的学习成本高，每种类之间的关系记忆太难 另一个就是 uml 的图画出来不美观","like_count":0},{"had_liked":false,"id":356529,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"浙江","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1662382044,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662382044","product_id":100039001,"comment_content":"面向对象设计，一切皆对象，万物可对象","like_count":0},{"had_liked":false,"id":355885,"user_name":"Stay_Gold","can_delete":false,"product_type":"c1","uid":1119904,"ip_address":"北京","ucode":"ACB8DCD2EF8F95","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRCtuJkpyy2NTTABPFibg2k9tZscOOKx9wu80a85d5HspCorO9Nibj7Z7q9v1icPTVm5ia52r0RCzEaA/132","comment_is_top":false,"comment_ctime":1661828943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661828943","product_id":100039001,"comment_content":"先总结一下今天所学的：<br>今天主要是介绍面向对象相关的知识。面向对象后面接不通的名词都有不同的定义：<br>面向对象编程：以类或者对象为基本单位来进行程序编写工作。<br>面向对象语言：基本含义，有类或者对象的概念，并以此作为基本单元的语言。严格定义，能实现封装，继承，多态，抽象的特性。<br>面向对象分析：以类或者对象为基本单位来进行系统分析。<br>面向对象设计：以类或者对象为基本单位来进行系统设计。<br><br>面向对象编程和面向对象语言之前的区别：非面向对象语言一样可以进行面向对象编程。用面向对象的语言，一样可以写出不是面向对象的代码。<br><br><br>问题回答<br>一.在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>个人认为UML或者其他的一些建模语言，其实都是一种规范，就像交通规则或者行业术语一样的，目的其实是有一个共同语言，更好的和其他人进行交流。对于本课程来说，其目的其实一样的让学习的人更好的理解老师要表达的这个的意思，只要实现了这个目的，其他的不过都是一种达成目的的工具而已。<br>二。有关面向对象的概念和知识点，除了我们今天讲到的，你还能想到其他哪些吗？<br>觉得老师已经讲解得很全面了。<br>","like_count":0},{"had_liked":false,"id":355803,"user_name":"高帅","can_delete":false,"product_type":"c1","uid":3077992,"ip_address":"北京","ucode":"50AC1404D20D23","user_header":"","comment_is_top":false,"comment_ctime":1661761243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661761243","product_id":100039001,"comment_content":"UML确实没必要学，了解是什么就行，开发中几乎不用； ","like_count":0},{"had_liked":false,"id":355657,"user_name":"batiwant","can_delete":false,"product_type":"c1","uid":1311236,"ip_address":"广东","ucode":"F873D815CBC801","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/04/a678be45.jpg","comment_is_top":false,"comment_ctime":1661601065,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661601065","product_id":100039001,"comment_content":"个人感觉：uml主要就是统一，方便跨团队沟通合作。 通过画用例图、序列图、类图，也可以提升我们的建模和设计能力。","like_count":0},{"had_liked":false,"id":355502,"user_name":"王成","can_delete":false,"product_type":"c1","uid":1953067,"ip_address":"上海","ucode":"48522AD73BFAC0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/cd/2b/f6a1af53.jpg","comment_is_top":false,"comment_ctime":1661431944,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661431944","product_id":100039001,"comment_content":"刚开始接触uml的时候，也发现uml很多概念，很复杂，后来就放弃了。<br>现在看来，uml的目的就是帮助设计人员理清类与对象之间的关系，结果uml过于复杂，过于细化，掌握这个工具比分析类的关系还麻烦，就算少数人掌握了，但大部分人没掌握，也起不到沟通交流的目的。<br>所以uml设计得过于复杂，对于用uml来建模来说，有些没有必要。","like_count":0},{"had_liked":false,"id":355215,"user_name":"后其身而身先","can_delete":false,"product_type":"c1","uid":3159196,"ip_address":"山东","ucode":"E7F36107A5A925","user_header":"https://static001.geekbang.org/account/avatar/00/30/34/9c/05708466.jpg","comment_is_top":false,"comment_ctime":1661176810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661176810","product_id":100039001,"comment_content":"在我看来，不会用接口的程序员，根本不能说懂什么是面向对象","like_count":0},{"had_liked":false,"id":355212,"user_name":"后其身而身先","can_delete":false,"product_type":"c1","uid":3159196,"ip_address":"山东","ucode":"E7F36107A5A925","user_header":"https://static001.geekbang.org/account/avatar/00/30/34/9c/05708466.jpg","comment_is_top":false,"comment_ctime":1661176268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661176268","product_id":100039001,"comment_content":"就我个人经历来讲，我对面向对象认识的深入，在于我对接口的学习和理解<br>在懂得如何使用接口之前，写出来的代码，基本就是学院派的猪羊狗猫，要么就是面向过程的流水账<br>我认为，以接口为代表的组合式编程，才是真正的面向对象编程","like_count":0},{"had_liked":false,"id":353575,"user_name":"陈斌","can_delete":false,"product_type":"c1","uid":1149402,"ip_address":"广东","ucode":"AD6933D125C930","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/da/136cdca6.jpg","comment_is_top":false,"comment_ctime":1659578192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659578192","product_id":100039001,"comment_content":"对象 vs 过程。对象是过程，数据特性的抽象产物。每一个具体对象都包含一系列数据的集合，与其相关联的逻辑，而这些数据的抽象定义就是类。抽象的目的是为了封装，封装特性，封装过程，封装类型。抽象的过程和结构化关系引出了继承和多态的逻辑。而为了更好表述这种结构化关系，总结出设计模式的思想。","like_count":0},{"had_liked":false,"id":350935,"user_name":"SICUN","can_delete":false,"product_type":"c1","uid":1254261,"ip_address":"","ucode":"22A384904EB9E9","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/75/2b599841.jpg","comment_is_top":false,"comment_ctime":1657362030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657362030","product_id":100039001,"comment_content":"1. 之前学过画uml，但是实际工作又用不到就没有然后了<br>2.面向对象出现的背景：当时的程序设计领域正面临着一种危机：在软硬件环境逐渐复杂的情况下，软件如何得到良好的维护？面向对象程序设计在某种程度上通过强调可重复性解决了这一问题。<br>来源：https:&#47;&#47;zh.wikipedia.org&#47;wiki&#47;%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1#%E5%8E%86%E5%8F%B2","like_count":0},{"had_liked":false,"id":348716,"user_name":"Ins","can_delete":false,"product_type":"c1","uid":1328500,"ip_address":"","ucode":"A2509BAD9CB72C","user_header":"https://static001.geekbang.org/account/avatar/00/14/45/74/7a82eebb.jpg","comment_is_top":false,"comment_ctime":1655346208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655346208","product_id":100039001,"comment_content":"iOS开发，不赞成纠结规范的UML。首先，UML跟实际开发语言关系不是充要的，UML不一定能完全以及准确表达特定语言的所有实现；其次，高级语言本身的表达能力不比UML差，写UML的额外成本太高，在类中追加几个成员（边界情况很难考虑到的，实际就需要一些变量来规避），难道还要维护UML多几个关系与实体，太累了。大厂一般都是高强度快节奏的需求开发，代码设计变化家常便饭，设计不稳定，UML就没啥意义，因为没时间维护。","like_count":0},{"had_liked":false,"id":345567,"user_name":"姚钫","can_delete":false,"product_type":"c1","uid":1498146,"ip_address":"","ucode":"ECB8B0627A4F9B","user_header":"https://static001.geekbang.org/account/avatar/00/16/dc/22/41a390ae.jpg","comment_is_top":false,"comment_ctime":1652407808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652407808","product_id":100039001,"comment_content":"220512 day03 面向对象<br>1. 主要是类和对象的机制，通过他们的抽象,封装，继承，多态实现为设计模式提供基础<br>2. UML感觉还是要学的，这个阶段可以不用学，面向对象感觉自己掌握的不够好，做需求，自己老是往实现层面想，不能很好的抽象，得学会面向对象分析和面向对象设计，产出出来类以及各个类属性和类如何交互","like_count":0},{"had_liked":false,"id":344547,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1651640858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651640858","product_id":100039001,"comment_content":"在火车上，来打一次卡","like_count":0},{"had_liked":false,"id":336139,"user_name":"葫芦娃","can_delete":false,"product_type":"c1","uid":1969599,"ip_address":"","ucode":"3B33204BC77D04","user_header":"https://static001.geekbang.org/account/avatar/00/1e/0d/bf/aa2d6ba8.jpg","comment_is_top":false,"comment_ctime":1645952142,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645952142","product_id":100039001,"comment_content":"做决策都是在自己所在的场景进行权衡利弊，并没有谁优谁劣<br>对应到是否使用UML？<br>我觉得关键点有两个：<br>（1）要对应到自己的团队现状<br>（2）权衡考虑沟通效率和是否能精准传达<br><br>如果团队更加偏向于学院派，对规范的要求高，而且大家能用UML来表达形成了统一的团队做事文化，则使用UML更好，既能高效沟通，又能精准传达，还能形成规范文档。<br>但一般很难形成这样的团队，像老师讲的，要形成这样的团队，势必有很大学习成本上、管理成本上的投入，在现在的互联网环境中，都是要求快速产出成果，根本不太可能花精力形成这样的统一输出，性价比太低。<br>所以让我选择，我会选择不使用UML，虽然不使用UML，但是设计人在设计文档中一定需要一直考虑一个问题：我这样书写的文档，别人是否能看懂，并不会出现歧义，是否需要增加注释来表明。<br><br>所以我认为，设计文档可以简化，但是一定要加更多的注释来精确传达设计者的意图。<br>","like_count":0},{"had_liked":false,"id":324247,"user_name":"王智","can_delete":false,"product_type":"c1","uid":1337016,"ip_address":"","ucode":"37D2AD591C1AEC","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/b8/ece79234.jpg","comment_is_top":false,"comment_ctime":1638347806,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638347806","product_id":100039001,"comment_content":"第一题：<br>我觉得没有关系。大家都掌握了，就不存沟通成本很高。另外，我感觉不存在很高的学习成本，看懂图例，结合实际训练几次就好了。<br>第二题：<br>没有。","like_count":0},{"had_liked":false,"id":323616,"user_name":"看看","can_delete":false,"product_type":"c1","uid":1161261,"ip_address":"","ucode":"5885A3AC0B7F4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/2d/b683a4a8.jpg","comment_is_top":false,"comment_ctime":1638022546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638022546","product_id":100039001,"comment_content":"1、要搞清楚做什么；2、要搞清楚怎么做。3、产出类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法、类与类之间如何交互","like_count":0},{"had_liked":false,"id":322185,"user_name":"hj_zack","can_delete":false,"product_type":"c1","uid":1181113,"ip_address":"","ucode":"53A11BAE0CEA2B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/NAcDfnQjZMSXE1ib2sAviaQFQHMsf7IJjTH73CaOic37R9QibdXNCNvzUGdqkIJYI05u3LnKmQRomqRRmMAhg9B1HQ/132","comment_is_top":false,"comment_ctime":1637226005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637226005","product_id":100039001,"comment_content":"1.首先我认为画图还是很有必要的，能让自己的设计更加清晰的展示出来。UML的本质也是为了让自己的设计更加清晰的展示出来，并让大家看懂。过于复杂的确是个比较大的问题，我认为UML大部分还是比较有用的，复杂的问题，可以通过简化来实现，不一定要完全按照他们的规范来。","like_count":0},{"had_liked":false,"id":321670,"user_name":"Z宇锤锤","can_delete":false,"product_type":"c1","uid":2188142,"ip_address":"","ucode":"7DB36E986A7A51","user_header":"https://static001.geekbang.org/account/avatar/00/21/63/6e/6b971571.jpg","comment_is_top":false,"comment_ctime":1636986886,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636986886","product_id":100039001,"comment_content":"对象三部曲：分析、设计、编码","like_count":0},{"had_liked":false,"id":315704,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1633946955,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633946955","product_id":100039001,"comment_content":"UML这玩意儿工作中基本上没有过，功能复杂一点效率太低了。方案审核一般都是先把功能细化，有页面的画原型图，没页面的出个ppt，领导才不管你怎么去实现呢。","like_count":0},{"had_liked":false,"id":315699,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1633946258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633946258","product_id":100039001,"comment_content":"“面向对象编程语言是支持类或对象的语法机制，并有现成的语法机制，能方便地实现面向对象编程四大特性（封装、抽象、继承、多态）的编程语言”，中”并有现成的语法机制“怎么理解？","like_count":0},{"had_liked":false,"id":315067,"user_name":"Geek_1","can_delete":false,"product_type":"c1","uid":2704407,"ip_address":"","ucode":"59300A73996D20","user_header":"https://static001.geekbang.org/account/avatar/00/29/44/17/e4fdcaad.jpg","comment_is_top":false,"comment_ctime":1633678735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633678735","product_id":100039001,"comment_content":"UMl的学习成本确实不低，我觉得从提高编程水平的角度出发，没有必要循规蹈矩。面向对象分析、面向对象设计、面向对象编程，不要使用面向对象的编程语言写出非面向对象的代码","like_count":0},{"had_liked":false,"id":313070,"user_name":"黑豹","can_delete":false,"product_type":"c1","uid":1100751,"ip_address":"","ucode":"B9F94D0AFA89DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/cf/417a5ec2.jpg","comment_is_top":false,"comment_ctime":1632270279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632270279","product_id":100039001,"comment_content":"Uml有没有用，要看使用的具体环境。在复杂工业软件领域，是绝对必要的。至于看不看得懂，首先要反思的，是自己是不是合格的软件从业者。","like_count":0},{"had_liked":false,"id":312946,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1632134594,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1632134594","product_id":100039001,"comment_content":"UML图可以画得不那么标准，还是建议在设计方案中使用，在定义上更加清晰","like_count":0},{"had_liked":false,"id":309897,"user_name":"兔嘟嘟","can_delete":false,"product_type":"c1","uid":2028811,"ip_address":"","ucode":"5A9042B4C7670C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","comment_is_top":false,"comment_ctime":1630387556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630387556","product_id":100039001,"comment_content":"个人在学校的经验：课程设计这一类应付式的，都要从头到脚武装一套文档，uml肯定少不了，然后瀑布开发。自己搞比赛、项目时，用敏捷开发，反而UML没咋用，主要是写清楚概要设计和代码文档","like_count":0},{"had_liked":false,"id":308125,"user_name":"刘泽民","can_delete":false,"product_type":"c1","uid":2731016,"ip_address":"","ucode":"E4F55018D01ABD","user_header":"","comment_is_top":false,"comment_ctime":1629422953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629422953","product_id":100039001,"comment_content":"uml成本很高，学习成本很大而且在真正开发中起到的作用。如果进一步学习成长，这部分也是绕不开的一部分。所以我觉得这个需要根据实际情况去学习掌握","like_count":0},{"had_liked":false,"id":306543,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1628602773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628602773","product_id":100039001,"comment_content":"1. UML用的不多，接触过一些，要掌握还是要花一周左右的时间，不过即使没有UML，使用更加简单的图来说明类之间的关系还是很重要的<br>2. 对于面向对象还有就是各种具体的特性了，比如访问权限等","like_count":0},{"had_liked":false,"id":303656,"user_name":"连星科技","can_delete":false,"product_type":"c1","uid":2642229,"ip_address":"","ucode":"C84FF7FF4AAE56","user_header":"https://static001.geekbang.org/account/avatar/00/28/51/35/d3a1144b.jpg","comment_is_top":false,"comment_ctime":1626918527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626918527","product_id":100039001,"comment_content":"UML图现在有的线有点理解不了，希望后面的学习可以搞清楚","like_count":0},{"had_liked":false,"id":303071,"user_name":"孙静","can_delete":false,"product_type":"c1","uid":1424967,"ip_address":"","ucode":"1EDC6DCAA99490","user_header":"https://static001.geekbang.org/account/avatar/00/15/be/47/13f28bce.jpg","comment_is_top":false,"comment_ctime":1626578468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626578468","product_id":100039001,"comment_content":"第一个问题我很赞同，工作了这么多年 身边使用uml画图的很少，大家都是使用流程图阿 关系图 脑图<br>第二个问题，从上学到毕业一直都是面向对象，到底怎样才算面向对象 我还是有一些疑惑的","like_count":0},{"had_liked":false,"id":302089,"user_name":"拓山","can_delete":false,"product_type":"c1","uid":1545647,"ip_address":"","ucode":"11FE9CF3821898","user_header":"https://static001.geekbang.org/account/avatar/00/17/95/af/b7f8dc43.jpg","comment_is_top":false,"comment_ctime":1626074982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626074982","product_id":100039001,"comment_content":"UML类图推荐看《大象-Thinking in UML》 看完之后，保证百病不侵","like_count":0},{"had_liked":false,"id":301484,"user_name":"常清","can_delete":false,"product_type":"c1","uid":1106090,"ip_address":"","ucode":"EA6975FDFD4D11","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/aa/68a7921b.jpg","comment_is_top":false,"comment_ctime":1625712860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625712860","product_id":100039001,"comment_content":"面向对象或者面向过程跟编程语言应该是两个概念。对于编程语言来说，面向对象还是面向过程只是编程语言的一部分功能，应该说编程语言添加了支持面向对象编程的语法，或者支持面向过程编程的语法。","like_count":0},{"had_liked":false,"id":300141,"user_name":"eHackyd","can_delete":false,"product_type":"c1","uid":2277251,"ip_address":"","ucode":"E6E7994FBDF0A5","user_header":"https://static001.geekbang.org/account/avatar/00/22/bf/83/c83be5a3.jpg","comment_is_top":false,"comment_ctime":1625020148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625020148","product_id":100039001,"comment_content":"我想请教下 王争哥，什么是上层、下层，如何定义","like_count":0},{"had_liked":false,"id":299485,"user_name":"易飞","can_delete":false,"product_type":"c1","uid":2630424,"ip_address":"","ucode":"32AC28754237F7","user_header":"https://static001.geekbang.org/account/avatar/00/28/23/18/4284361f.jpg","comment_is_top":false,"comment_ctime":1624675644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624675644","product_id":100039001,"comment_content":"没用过uml,,","like_count":0},{"had_liked":false,"id":295422,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1622426628,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1622426628","product_id":100039001,"comment_content":"uml不会😂","like_count":0},{"had_liked":false,"id":290019,"user_name":"十年","can_delete":false,"product_type":"c1","uid":2579233,"ip_address":"","ucode":"A3CE0646B96B9B","user_header":"https://static001.geekbang.org/account/avatar/00/27/5b/21/528cf2d1.jpg","comment_is_top":false,"comment_ctime":1619324294,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619324294","product_id":100039001,"comment_content":"对于临时和同事沟通或是发表看法的确不需要遵守uml 的规范，如果形成文档的话还是需要规范的Uml 供后人参考","like_count":0},{"had_liked":false,"id":288369,"user_name":"吞天","can_delete":false,"product_type":"c1","uid":1269292,"ip_address":"","ucode":"5148947709A54F","user_header":"https://static001.geekbang.org/account/avatar/00/13/5e/2c/25a0f40f.jpg","comment_is_top":false,"comment_ctime":1618447819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618447819","product_id":100039001,"comment_content":"面向对象编程是方法，面向对象编程语言是工具。","like_count":0},{"had_liked":false,"id":287904,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1618213063,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1618213063","product_id":100039001,"comment_content":"uml 只是沟通的工具，如果在和多数不熟悉uml沟通时，可以换一种方法来沟通","like_count":0},{"had_liked":false,"id":287096,"user_name":"糖小宝","can_delete":false,"product_type":"c1","uid":1386966,"ip_address":"","ucode":"15A8B649F668B1","user_header":"https://static001.geekbang.org/account/avatar/00/15/29/d6/6dafc576.jpg","comment_is_top":false,"comment_ctime":1617775313,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1617775313","product_id":100039001,"comment_content":"我UML图是代码画的，推荐插件PlantUML，根据简单代码，生成UML图，很方便，也很快","like_count":0},{"had_liked":false,"id":285384,"user_name":"Alicia1150","can_delete":false,"product_type":"c1","uid":1435760,"ip_address":"","ucode":"94FF9E2F04AD9E","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/70/34a83798.jpg","comment_is_top":false,"comment_ctime":1616766379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616766379","product_id":100039001,"comment_content":"在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>个人认为，面向对象分析和设计使用UML建模是有必要的，特别是对于在读大学生来说，这个学习成本还是必须花费的。从对功能性需求的用例图和用例描述到分析阶段的时序图和分析类图，再到概要设计阶段的体系结构选择和详细设计阶段的用例实现方案（包括时序图和设计类图），这些是了解系统分析和设计过程的有力工具，但是确实并不用过分追求细节。","like_count":0},{"had_liked":false,"id":284541,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1616326242,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616326242","product_id":100039001,"comment_content":"(1)UML学习的成本确实很高，但UML也确实是一种很好的设计工具，实际应用时，可以折衷一下，学习一下常用的设计图，不一定要很精通，能在开发过程中灵活运用这些设计图来达到设计的效果即可。<br>(2)其他的面向对象的概念：类方法、类属性、类模板，这些不知道算不算。","like_count":0},{"had_liked":false,"id":281499,"user_name":"xilie","can_delete":false,"product_type":"c1","uid":1013805,"ip_address":"","ucode":"AFCC4E157F7830","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJVegfjqa0gM4hcRrBhZkIf7Uc5oeTMYsg6o5pd76IQlUoIIh2ic6P22xVEFtRnAzjyLtiaPVstkKug/132","comment_is_top":false,"comment_ctime":1614765605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614765605","product_id":100039001,"comment_content":"iOS经常被面试问到的runtime里面的isa指针，那么isa是什么意思，哈哈，原来是is-a","like_count":0},{"had_liked":false,"id":281214,"user_name":"九天雪海","can_delete":false,"product_type":"c1","uid":1170813,"ip_address":"","ucode":"90B42186557717","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyPPFIyvytj54U9gCrUyKctpMeQDGqs1ez8SyIQy4OPHkib0Al2Qe3PMmUY8oZsr4zTMVTyaeicTWA/132","comment_is_top":false,"comment_ctime":1614648042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614648042","product_id":100039001,"comment_content":"uml虽然有时候比较难画难懂，但对于数据结构和设计模式来讲，就是小巫见大巫了，而且用的频率甚至会比设计模式更多，不是每个项目都会用到很多设计模式，但一定都需要模型设计和流程设计。所以我认为掌握一到两种建模语言（uml比较通用）也是程序员的必修课！","like_count":0},{"had_liked":false,"id":280374,"user_name":"Geek_ea3267","can_delete":false,"product_type":"c1","uid":1962384,"ip_address":"","ucode":"71C1EBF50F457A","user_header":"","comment_is_top":false,"comment_ctime":1614171690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614171690","product_id":100039001,"comment_content":"1.如果团队每个人都熟悉UML的话是很好的, 这是一个共享词汇的过程,沟通成本很低, 不然每个人都有自己的表达方式, 加大了沟通成本.<br>2.面向对象编程风格是将现实世界关系建模到程序中的一种方式","like_count":0},{"had_liked":false,"id":280022,"user_name":"爱学习的Kirk","can_delete":false,"product_type":"c1","uid":2392633,"ip_address":"","ucode":"CB6607E26037EC","user_header":"https://static001.geekbang.org/account/avatar/00/24/82/39/c3227567.jpg","comment_is_top":false,"comment_ctime":1614056678,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614056678","product_id":100039001,"comment_content":"1.对于UML类图，虽然更具场景的不同，表达的方式不同，对于一个优秀的开发者来说耗费一定的时间去学习个人觉得很有必要，正所谓，知其然，知其所以然。<br>2.面相对象设计过程还需要考虑一个对象的复用性，唯一性等特性","like_count":0},{"had_liked":false,"id":279887,"user_name":"夜空中的咸鱼","can_delete":false,"product_type":"c1","uid":2143489,"ip_address":"","ucode":"D6F1EAF082D000","user_header":"https://static001.geekbang.org/account/avatar/00/20/b5/01/9938349b.jpg","comment_is_top":false,"comment_ctime":1613993037,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1613993037","product_id":100039001,"comment_content":"1.关于uml这个我是头一次听说！没有使用过！我回去后在了解了解<br>2.关于面向对象！我都是简单的使用一下单利模式！关于原理我还不是很懂","like_count":0},{"had_liked":false,"id":279834,"user_name":"刘剑","can_delete":false,"product_type":"c1","uid":1140328,"ip_address":"","ucode":"B530AE58C05788","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/68/fe556f2f.jpg","comment_is_top":false,"comment_ctime":1613978682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613978682","product_id":100039001,"comment_content":"其实uml可以不拘泥于形式，每次的计划任务，可以用任意软件或者简单的纸笔，把自己对功能的理解，或是类图，或是时序图简单表示出来，一些关键流程可以单独抽离出来，把流程图丰富一下，像非象，不要拘泥于形式，只要能够足够表述清楚，简单的线条描述也可以。","like_count":0},{"had_liked":false,"id":272435,"user_name":"锐锐爱南球","can_delete":false,"product_type":"c1","uid":1158621,"ip_address":"","ucode":"7AA4CA355B9D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/dd/970e7b4a.jpg","comment_is_top":false,"comment_ctime":1610089490,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1610089490","product_id":100039001,"comment_content":"其实在中国的互联网大厂也很少用UML图或者标准规范的UML图，大部分也是白板草图。我觉得可能在需要出很详细的说明，架构文档的时候才会有，比如外企啥的。","like_count":0},{"had_liked":false,"id":267365,"user_name":"焱","can_delete":false,"product_type":"c1","uid":1113301,"ip_address":"","ucode":"677BF1BE4B94D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/d5/1cf5fd56.jpg","comment_is_top":false,"comment_ctime":1607695603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607695603","product_id":100039001,"comment_content":"UML表达出大致意思即可吧，没必要细化吧，出了这个没有说抽象类和接口呢设计","like_count":0},{"had_liked":false,"id":264443,"user_name":"Daisy","can_delete":false,"product_type":"c1","uid":1800029,"ip_address":"","ucode":"5B4A9DF62BB583","user_header":"https://static001.geekbang.org/account/avatar/00/1b/77/5d/b3b4bc02.jpg","comment_is_top":false,"comment_ctime":1606468425,"is_pvip":false,"replies":[{"id":"96073","content":"看后面的文章","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606700603,"ip_address":"","comment_id":264443,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606468425","product_id":100039001,"comment_content":"面向对象设计有时候容易过度设计，该如何避免呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510567,"discussion_content":"看后面的文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263387,"user_name":"初学者","can_delete":false,"product_type":"c1","uid":2331845,"ip_address":"","ucode":"A6B5DDB0FCD5EC","user_header":"https://static001.geekbang.org/account/avatar/00/23/94/c5/67fa8668.jpg","comment_is_top":false,"comment_ctime":1606122269,"is_pvip":false,"replies":[{"id":"96098","content":"������","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606700772,"ip_address":"","comment_id":263387,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606122269","product_id":100039001,"comment_content":"面向对象大法好","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510168,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263318,"user_name":"大豆子","can_delete":false,"product_type":"c1","uid":1324285,"ip_address":"","ucode":"728215F11D66B7","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/fd/3dc37768.jpg","comment_is_top":false,"comment_ctime":1606100179,"is_pvip":false,"replies":[{"id":"96102","content":"是的","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606700794,"ip_address":"","comment_id":263318,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606100179","product_id":100039001,"comment_content":"关于UML的使用，工作这些年也从来没有做过很严格的UML。大家能看懂明白就行了。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510147,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260417,"user_name":"Geek_63aa00","can_delete":false,"product_type":"c1","uid":2058510,"ip_address":"","ucode":"4AF5D3318F4468","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","comment_is_top":false,"comment_ctime":1605001245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605001245","product_id":100039001,"comment_content":"面向对象是一种思想，我们用思想在编程，而面向对象编程语言是一种工具，提高面向对象编程的效率，而非面向对象语言也可以用思想编程。所以本节主要是设计内功的铺垫，因为设计的侧重点不同，作品也会不同，反映在细节上也会不同。所以很关键，潜移默化掌握这种思想","like_count":0},{"had_liked":false,"id":259969,"user_name":"木头衣服","can_delete":false,"product_type":"c1","uid":1244414,"ip_address":"","ucode":"E049FC32B68D23","user_header":"","comment_is_top":false,"comment_ctime":1604901091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604901091","product_id":100039001,"comment_content":"UML图复杂吗？基本概念很少啊。主要是必须使用它才能解决问题的场景不多，所以容易遗忘吧。但对于熟悉的人而言，使用统一的规范自然是降低沟通成本的事情。","like_count":0},{"had_liked":false,"id":256991,"user_name":"浮世间","can_delete":false,"product_type":"c1","uid":1579931,"ip_address":"","ucode":"90230230D2618D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/xXfbHEUK56zFLSQqhSnNj8BicYiardWZbmM3G2zWdvChH4NWEJSIXuAJpZ92FhQxLTslQgxRAWD4NnftNxLyMO2w/132","comment_is_top":false,"comment_ctime":1603806520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603806520","product_id":100039001,"comment_content":"UML只是一种工具，如果可以使用更简洁有效的方式来实现，那自然是更好的。就如代码的实质：关注于功能的实现结果，而不是功能的实现过程。","like_count":0},{"had_liked":false,"id":256292,"user_name":"一万小时","can_delete":false,"product_type":"c1","uid":1297927,"ip_address":"","ucode":"D2D443595BB1ED","user_header":"","comment_is_top":false,"comment_ctime":1603595218,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603595218","product_id":100039001,"comment_content":"我认为UML虽然学习成本高，不可作为短期学习计划，但是可以作为长期的学习计划，一点点学习，不需要系统化学习，遇到了就看看，零散化的学习即可","like_count":0},{"had_liked":false,"id":255441,"user_name":"紫日","can_delete":false,"product_type":"c1","uid":1207410,"ip_address":"","ucode":"73A8DEE323AC19","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","comment_is_top":false,"comment_ctime":1603345940,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1603345940","product_id":100039001,"comment_content":"面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做。两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法、类与类之间如何交互等等","like_count":0},{"had_liked":false,"id":252881,"user_name":"无名小贝","can_delete":false,"product_type":"c1","uid":1401397,"ip_address":"","ucode":"5209647C491520","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JtPOAEuYCWRnoCyD6kUiciarhGFmiaUOQw6gZj2GRr2NhzBK54eFO8EbxUczP6VWmmQaAmzT4u3y8WArctqNk7ENQ/132","comment_is_top":false,"comment_ctime":1602506031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602506031","product_id":100039001,"comment_content":"面向对象分析、面向对象设计，是我一直没有重视的概念","like_count":0},{"had_liked":false,"id":249549,"user_name":"REAL_MADIRD","can_delete":false,"product_type":"c1","uid":1012889,"ip_address":"","ucode":"9E327B5456739D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/99/dbdee494.jpg","comment_is_top":false,"comment_ctime":1600689063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600689063","product_id":100039001,"comment_content":"确实，工具就是工具，沟通也是有成本的，如果一种工具的沟通成本过高，那不如换沟通成本低的工具","like_count":0},{"had_liked":false,"id":246391,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1599306217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599306217","product_id":100039001,"comment_content":"UML规范最终还是要掌握的，并且也很容易掌握，只是平时用的不多所以很容易遗忘。刚好老师的课程中需要用到，那么最好还是严格按照规范来画，这样我们从老师的课程中还能多学到UML的知识呢","like_count":0},{"had_liked":false,"id":246227,"user_name":"WilliamVector","can_delete":false,"product_type":"c1","uid":1898112,"ip_address":"","ucode":"E0D3C3D4FCB7C9","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/80/85ec2c2a.jpg","comment_is_top":false,"comment_ctime":1599214427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599214427","product_id":100039001,"comment_content":"【要点】<br>1、面向对象编程：面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性，作为代码设计和实现的基石。<br>2、面向对象编程语言：面向对象编程语言是支持类或对象的语法机制，并有现成的语法机制，能方便的实现面向对象编程四大特性(封装、抽象、继承、多态)的编程语言。<br>3、判定一个编程语言是否是面向对象编程语言：如果按照严格定义，需要有现成的语法支持类、对象、四大特性才能叫做面向对象编程语言。如果放宽要求的话，只要某种编程语言支持类、对象语法机制，那基本就可以说这种语言是面向对象编程语言了，不一定非得要求具有所有的四大特性。<br>4、面向对象编程和面向对象编程语言之间的关系：面向对象编程一般使用面向对象编程语言来进行，但是，不用面向对象编程语言，照样可以进行面向对象编程。反过来讲，即便使用面向对象编程语言，写出来的代码也不一定是面向对象编程风格的，也有可能是面向过程编程风格的。<br>5、面向对象分析和面向对象设计：简单点讲，面向对象分析是要搞清楚做什么，面向对象设计是要搞清楚怎么做。两个阶段最终产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法、类与类之间如何交互等等。<br>【思考】<br>1、因人而异吧，如果能高效的使用UML工具建模，就要有效利用这个工具，反之，则可利用其它方法代替。工具是为了更高效的达到目的，如果对你或者团队来说是累赘，那就需要换个工具了。<br>2、类的交互方面，想到了Java的反射机制。","like_count":0},{"had_liked":false,"id":245700,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599030642,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599030642","product_id":100039001,"comment_content":"问题1：<br>1、个人习惯使用UML图，虽然画类图的时候，确实存在学习成本高和使用成本高，而且刻意去化也不一定能别人或者自己看清楚。如果学习和用笔画的话，确实更高效能","like_count":0},{"had_liked":false,"id":242789,"user_name":"Tokiomi","can_delete":false,"product_type":"c1","uid":1632052,"ip_address":"","ucode":"E2C0A59D1B1D4F","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/34/66289bd6.jpg","comment_is_top":false,"comment_ctime":1597841775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597841775","product_id":100039001,"comment_content":"JS有继承呀，es5就可以通过很多方式实现继承，es6开始也提供了原生的class语法糖","like_count":0},{"had_liked":false,"id":241373,"user_name":"磐星","can_delete":false,"product_type":"c1","uid":1003640,"ip_address":"","ucode":"19436A86714C3D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/78/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1597281974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597281974","product_id":100039001,"comment_content":"简单总结下 什么是面向对象的语言，和分析，设计，编程   <br>UML图的说法比较认同，需要画了别人看不懂 久而久之，自己看也要翻参考文档了","like_count":0},{"had_liked":false,"id":239811,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1596667907,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596667907","product_id":100039001,"comment_content":"UML比较复杂，在实际工作中，只要画出的图能表达意思就行。<br>","like_count":0},{"had_liked":false,"id":239584,"user_name":"大力","can_delete":false,"product_type":"c1","uid":1364353,"ip_address":"","ucode":"1B2125C519443D","user_header":"https://static001.geekbang.org/account/avatar/00/14/d1/81/89ba9d81.jpg","comment_is_top":false,"comment_ctime":1596591842,"is_pvip":false,"replies":[{"id":"89268","content":"prototype对吧，有点继承的意思","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1597453921,"ip_address":"","comment_id":239584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596591842","product_id":100039001,"comment_content":"老师，JavaScript 其实是不是也算是支持继承呢，不过不是像 Java 那样是基于类的继承，它是基于原型的继承？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503146,"discussion_content":"prototype对吧，有点继承的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597453921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238682,"user_name":"你真丑","can_delete":false,"product_type":"c1","uid":2094521,"ip_address":"","ucode":"BC4D2AFBC7A8B9","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f5/b9/de8eaa76.jpg","comment_is_top":false,"comment_ctime":1596260657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596260657","product_id":100039001,"comment_content":"个人认为uml的确方便表达一些东西，但前提必须要牢牢掌握uml中的一些知识点。","like_count":0},{"had_liked":false,"id":238605,"user_name":"Elvis Lee","can_delete":false,"product_type":"c1","uid":2098270,"ip_address":"","ucode":"A4B26AFFE817FA","user_header":"https://static001.geekbang.org/account/avatar/00/20/04/5e/5d2e6254.jpg","comment_is_top":false,"comment_ctime":1596211208,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596211208","product_id":100039001,"comment_content":"对于学有余力的同学来说，可以学习如何看UML,我打算二刷的时候补一次UML","like_count":0},{"had_liked":false,"id":235645,"user_name":"Apologize","can_delete":false,"product_type":"c1","uid":1503320,"ip_address":"","ucode":"F2F179241EDA4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/f0/58/87104eab.jpg","comment_is_top":false,"comment_ctime":1595135519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595135519","product_id":100039001,"comment_content":"UML的学习成本很高，但是我们可以使用工具生成现有类的ULM图，来检查类的设计是否合理，感觉还是挺有用的。","like_count":0},{"had_liked":false,"id":235188,"user_name":"朱月俊","can_delete":false,"product_type":"c1","uid":1017707,"ip_address":"","ucode":"4DA0728B862FBD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","comment_is_top":false,"comment_ctime":1594921663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594921663","product_id":100039001,"comment_content":"在编写正规的系统设计文档时，uml还是必要的，除了能够梳理自己的逻辑外，还可以镇场子。","like_count":0},{"had_liked":false,"id":233070,"user_name":"幽林萌逐","can_delete":false,"product_type":"c1","uid":1520451,"ip_address":"","ucode":"E6D95EC891800F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqrAA1j4Oyy6ibicNOicn8K0olrEjtLLanic8V0y9icia6cvCVRCiabOm5llC0WhzcSWvaI2fia75hYbvjrQ/132","comment_is_top":false,"comment_ctime":1594209610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594209610","product_id":100039001,"comment_content":"打卡<br>我觉得面向对象是一种处理编程逻辑的思维，而语言只是个辅助，面向对象语言可以让你更好的写出面向对象风格的代码。","like_count":0},{"had_liked":false,"id":228222,"user_name":"杨锋","can_delete":false,"product_type":"c1","uid":1283461,"ip_address":"","ucode":"85A7828A538FB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/95/85/15cd21c2.jpg","comment_is_top":false,"comment_ctime":1592618012,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592618012","product_id":100039001,"comment_content":"我的理解，UML还是生态问题，没有那么普及，有的人会有的人不会，画出来的东西很多人都看不懂，还不如草图来的直接。<br>今天了解了OOA、OOD、OOP，面向对象分析，面向对象设计和面向对象编程。以及三者的对应的关系，依次为：分析出需要做什么(OOA)，怎么做(OOD)，以及如何翻译成代码。三者是有序的。","like_count":0},{"had_liked":false,"id":226552,"user_name":"小树苗","can_delete":false,"product_type":"c1","uid":1644500,"ip_address":"","ucode":"71288176D058E2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqtnoXPFibFwKdrUibJQWYSCmAlc7FeEH5MbjiawszNgwEXAkuWKGYQMTQbnQbjlR8n9lpDgN4GQHoXQ/132","comment_is_top":false,"comment_ctime":1592139842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592139842","product_id":100039001,"comment_content":"关于UML，感觉也应该考虑下投入产出比，很多时候做与不做，不是好与不好，而是取舍不一样。","like_count":0},{"had_liked":false,"id":225651,"user_name":"maybe","can_delete":false,"product_type":"c1","uid":1475528,"ip_address":"","ucode":"93D160F617E750","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/c8/5ce842f6.jpg","comment_is_top":false,"comment_ctime":1591805317,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1591805317","product_id":100039001,"comment_content":"uml的目的是要标准表达，但是要根据实际情况使用了。按照快节奏的开发，特别特别花时间搞出完美的图，团队又不一定都能高效吸收的话那就已经脱离实际了","like_count":0},{"had_liked":false,"id":221416,"user_name":"lee","can_delete":false,"product_type":"c1","uid":1213651,"ip_address":"","ucode":"68633E69154801","user_header":"https://static001.geekbang.org/account/avatar/00/12/84/d3/34820f8f.jpg","comment_is_top":false,"comment_ctime":1590496421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590496421","product_id":100039001,"comment_content":"有些时候还是很有用的，看源码的时候，有些复杂的库，把类之间的关系用UML画出来，有助于理解和分析。否则光是靠脑子看和记，很难看懂","like_count":0},{"had_liked":false,"id":220020,"user_name":"朝小树","can_delete":false,"product_type":"c1","uid":1323875,"ip_address":"","ucode":"18DC282DEF16C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/63/2d48822a.jpg","comment_is_top":false,"comment_ctime":1590136576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590136576","product_id":100039001,"comment_content":"面向对象编程是一种编程范式；用面向对象的编程语言可以更好的面向对象编程；<br>面向对象编程语言也可以用于面向过程编程；比如大部分人用springboot 的mvc其实是面向过程编程。","like_count":0},{"had_liked":false,"id":216559,"user_name":"scmath","can_delete":false,"product_type":"c1","uid":1149022,"ip_address":"","ucode":"641023BB246C29","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/5e/7c76f422.jpg","comment_is_top":false,"comment_ctime":1589283662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589283662","product_id":100039001,"comment_content":"面向对象编程是一种编程范式，通过接口、类、函数、对象来组织代码。<br>UML类之间的关系：泛化对应继承(is-a)、实现对于接口(has-a)和接口实现、关联(构造函数初始化类B)、聚合(函数内初始化类B)、组合(构造函数传入类B的实例)、依赖(函数传入类B实例)。<br>面向对象编程过程：OOA：：需求分析，知道做什么。OOD：：面向对象分析，根据需求抽取出类、类的属性和方法，分析类之间关系(泛化、实现、关联、聚合、组合、依赖)。OOP：：编码实现。<br>","like_count":0},{"had_liked":false,"id":216466,"user_name":"师哥","can_delete":false,"product_type":"c1","uid":1333376,"ip_address":"","ucode":"A86CD1661D370F","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/80/c9e232b6.jpg","comment_is_top":false,"comment_ctime":1589265812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589265812","product_id":100039001,"comment_content":"本章了解了什么是面向对象编程和面向对象编程语言。并且了解了面向对象分析，面向对象设计，面向对象编程。我发现工作这么多年好像一直都是在做面向过程编程。以后要多向DDD 设计靠拢。","like_count":0},{"had_liked":false,"id":215460,"user_name":"zlxag","can_delete":false,"product_type":"c1","uid":1163321,"ip_address":"","ucode":"136FB0201B64A3","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/39/16340f72.jpg","comment_is_top":false,"comment_ctime":1588995386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588995386","product_id":100039001,"comment_content":"赞同老师对面向对象编程的说法，真正还是要知道面向对象设计思想，不用面向对象编程语言，但是知道怎么抽象，人咬狗 明白这个是一个业务 抽象成面向对象设计 就能向面向对象编程靠齐 面向对象具备就是还有行为 状态 唯一性。人受伤是人的状态，狗情绪发怒也是狗的状态，抽象出来了 才能很好的面向对象完成人咬狗这个业务，咬这个并不是人对象的，也不是狗的。要是封装 多态 继承都用好了就是个很好的面向对象编程的编程风格。","like_count":0},{"had_liked":false,"id":214852,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1588833029,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1588833029","product_id":100039001,"comment_content":"uml 图只是工具，如果能用其他的方式进行良好的沟通，不用学uml也无所谓。","like_count":0},{"had_liked":false,"id":214159,"user_name":"Ifdevil","can_delete":false,"product_type":"c1","uid":1212912,"ip_address":"","ucode":"79DB0ADE9AD082","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/f0/695ca05f.jpg","comment_is_top":false,"comment_ctime":1588668871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588668871","product_id":100039001,"comment_content":"UML对我的意义就是学习源码的一种方式，尤其比较复杂的源码spring等，自己手动画画uml类图，时序图，可以画出主线，不至于陷入到细节中，乱了头绪","like_count":0},{"had_liked":false,"id":213634,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1588496775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588496775","product_id":100039001,"comment_content":"1. UML没有怎么用过，在开始接触的时候只是觉得比较麻烦。。。。<br><br>2. 面向对象的思想诞生的背景：在20世纪60年代，当时的程序设计领域正面临着一种危机：在软硬件环境逐渐复杂的情况下，软件如何得到良好的维护？面向对象程序设计在某种程度上通过强调可重复性解决了这一问题。","like_count":0},{"had_liked":false,"id":203750,"user_name":"makermade","can_delete":false,"product_type":"c1","uid":1133194,"ip_address":"","ucode":"03386B90CB8F20","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","comment_is_top":false,"comment_ctime":1586262518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586262518","product_id":100039001,"comment_content":"UML太难记了，环境不允许啊，你学会了，人家看不懂，也没用。再好的语言，也是用来沟通的","like_count":0},{"had_liked":false,"id":203539,"user_name":"晏书","can_delete":false,"product_type":"c1","uid":1749722,"ip_address":"","ucode":"26506509DA1BCA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b2/da/75b3d9f6.jpg","comment_is_top":false,"comment_ctime":1586230022,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586230022","product_id":100039001,"comment_content":"对于工具类的使用，我觉得怎么方便怎么来，只是服务于我们更好的掌握某些知识点，而不应该把工具当成负担。","like_count":0},{"had_liked":false,"id":203289,"user_name":"guan0078","can_delete":false,"product_type":"c1","uid":1090467,"ip_address":"","ucode":"53B15FF3752A40","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/a3/804fb3e9.jpg","comment_is_top":false,"comment_ctime":1586166173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586166173","product_id":100039001,"comment_content":"完全不了解UML是不行的，全都掌握也没必要。从需求到模型，到代码实现全都可以通过好的UML工具实现。在实际工作中数据模型图，流程图，时序图，用例图是必须要掌握的。逻辑架构图也会要求有。其他一般了解下，用的时候在看也可以。","like_count":0},{"had_liked":false,"id":202328,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1585968916,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1585968916","product_id":100039001,"comment_content":"关于UML的使用，个人在工作中也是和作者一样的感觉。学习成本的确挺高，规范多而且杂。在工作中很难去按照这样的规范去践行。图就是思路、想法的一种抽象，只要能够清晰、准确的传达思想就是好的“UML”图。前人的经验，不一定适合于当今的时代。我们需要有选择性的选取和创新。","like_count":0},{"had_liked":false,"id":200872,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1585664950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585664950","product_id":100039001,"comment_content":"老师我有一个问题，接到一个需求的时候是应该先做面向对象的分析与设计，还是先做数据库的设计。我一般做完数据库设计，没有做面向对象的分析与设计，就开始开发了。","like_count":0},{"had_liked":false,"id":200867,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1585664190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585664190","product_id":100039001,"comment_content":"1.我认为基本的泛化、实现、关联、聚合、组合、依赖 还是需要掌握的，这个对需求分析很有帮助，程序员之间的沟通效率会高一些。<br><br>2.我想知道如何才算是知道把面向对象分析给分析好了。有什么标准吗？还是按照经验。","like_count":0},{"had_liked":false,"id":200384,"user_name":"赵毅","can_delete":false,"product_type":"c1","uid":1905585,"ip_address":"","ucode":"28F6820F1987F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgDicRj9LAvWVyuibTbRnZDFeC6uWI8zfWU1gLM6yPoNklUaiar4TKxEyRHFibjIth3iahRNLcNvewjug/132","comment_is_top":false,"comment_ctime":1585579281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585579281","product_id":100039001,"comment_content":"UML只需要知道一些简单的就可以了吧","like_count":0},{"had_liked":false,"id":198568,"user_name":"乐朦","can_delete":false,"product_type":"c1","uid":1938739,"ip_address":"","ucode":"C5A666DB0521E0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/95/33/7d4b08ec.jpg","comment_is_top":false,"comment_ctime":1585457132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585457132","product_id":100039001,"comment_content":"对我来说，能把知识点讲明白，让别人看懂。其他的都不重要。","like_count":0},{"had_liked":false,"id":198050,"user_name":"郭强","can_delete":false,"product_type":"c1","uid":1192928,"ip_address":"","ucode":"38F36F0F4CC775","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/e0/387ab6fd.jpg","comment_is_top":false,"comment_ctime":1585407860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585407860","product_id":100039001,"comment_content":"uml我觉得不用拘泥于格式细节，重在表意，很多关系一目了然，如果还是标注细节很繁琐，又浪费时间。","like_count":0},{"had_liked":false,"id":197704,"user_name":"面向百度编程","can_delete":false,"product_type":"c1","uid":1732780,"ip_address":"","ucode":"8FE04A019D71D1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/ac/83bc14c0.jpg","comment_is_top":false,"comment_ctime":1585393056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585393056","product_id":100039001,"comment_content":"哈哈哈，没啥看法，软件工程专业的表示能看懂，而且非常清楚泛化，继承，聚合，组合，关联，依赖是什么意思","like_count":0},{"had_liked":false,"id":197575,"user_name":"这得从我捡到一个鼠标垫开始说起","can_delete":false,"product_type":"c1","uid":1272321,"ip_address":"","ucode":"2FF4347B4E7A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","comment_is_top":false,"comment_ctime":1585386033,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585386033","product_id":100039001,"comment_content":"大学的时候学了点UML，到现在完全不记得了，特别容易混淆那些箭头","like_count":0},{"had_liked":false,"id":195700,"user_name":"马球先生","can_delete":false,"product_type":"c1","uid":1119609,"ip_address":"","ucode":"858C2CE0E494C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/79/efde2a69.jpg","comment_is_top":false,"comment_ctime":1585213371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585213371","product_id":100039001,"comment_content":"感觉head first的 design pattern书中的UML还挺好理解的","like_count":0},{"had_liked":false,"id":190990,"user_name":"墨鱼","can_delete":false,"product_type":"c1","uid":1022720,"ip_address":"","ucode":"8FB5E4DCB8A024","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/00/654be3f7.jpg","comment_is_top":false,"comment_ctime":1584716311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584716311","product_id":100039001,"comment_content":"UML 只是一种工具而已，如果完全按照规范画时间成本太高，看懂也需要很大精力。所以我觉得能画一个草图，能沟通就行。没必要舍近求远。<br>","like_count":0},{"had_liked":false,"id":190239,"user_name":"Geek_032104","can_delete":false,"product_type":"c1","uid":1298282,"ip_address":"","ucode":"25542A2348F99F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/G61OS6hibNG7iakUmXeKmcY5VtFWnPpywzjOcUCm3t0HsibCibm3jzLNbdvjKQ8G8WSIkicBiaqoCsvHibn3M7wV4YbrA/132","comment_is_top":false,"comment_ctime":1584620880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584620880","product_id":100039001,"comment_content":"当初学UML的时候，就觉得很晦涩，实际工作中用的人也少","like_count":0},{"had_liked":false,"id":189837,"user_name":"索旭东","can_delete":false,"product_type":"c1","uid":1139039,"ip_address":"","ucode":"BFD07BCD8C8CAE","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/5f/b279daaf.jpg","comment_is_top":false,"comment_ctime":1584575223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584575223","product_id":100039001,"comment_content":"书里面经常不写抽象，可能因为抽象是任何编程语言的基本原则","like_count":0},{"had_liked":false,"id":189658,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1584539219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584539219","product_id":100039001,"comment_content":"讲的观点跟自己以前自己琢磨的观点，好多相似的，uml感觉还是能够理解就行，不用画特别正规的图","like_count":0},{"had_liked":false,"id":184524,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1091781,"ip_address":"","ucode":"67802124F5181D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epjdWhOia2BKpvYDUIria0klBOvxU4v8CfsobsGYicUia6Hybb4n658LfJymFbuPk0koxldr6QIOpQsMA/132","comment_is_top":false,"comment_ctime":1583333252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583333252","product_id":100039001,"comment_content":"使用简单的UML即可，只要能说明问题帮助分析和设计","like_count":0},{"had_liked":false,"id":181903,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1582677609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582677609","product_id":100039001,"comment_content":"UML 确实很复杂，我认为使用 UML 表达出设计的意思即可，没有必要完全遵从 UML 的规范。比如我目前的工作中，用到的 UML 好像只有类图、时序图、用例图三种。对于类图，也只用到过继承、实现、依赖三种关系。时序图刚刚使用时恨不得将每个类的每个方法的调用关系都画出来，结果不仅使得时序图看上去很复杂，连自己过段时间再看也觉得太复杂了，结果是辛苦半天却事倍功半，后来时序图也是越画越简单，只要能表达出调用关系即可。","like_count":0},{"had_liked":false,"id":181600,"user_name":"Geek_dba6ea","can_delete":false,"product_type":"c1","uid":1265744,"ip_address":"","ucode":"D6C27BC681001B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLU70sUuWXN8aUViaIDMcuFT1uPvlKFk4dsceFNLNdNnUjQbNmHUZwFxDAnpm6dJHyOR0Q47Q2hpmw/132","comment_is_top":false,"comment_ctime":1582589645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582589645","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":180547,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1582334812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582334812","product_id":100039001,"comment_content":"摒弃学院派的完美主义，抓主干，抓重点；本身开拓者们是从实践到理论，后来者却要理论到实践；能从开拓者的视角来教，小脑容量也能学！","like_count":0},{"had_liked":false,"id":179669,"user_name":"Geek_neo","can_delete":false,"product_type":"c1","uid":1568248,"ip_address":"","ucode":"147211A6624E01","user_header":"https://static001.geekbang.org/account/avatar/00/17/ed/f8/3a7499f9.jpg","comment_is_top":false,"comment_ctime":1582075450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582075450","product_id":100039001,"comment_content":"uml有学习成本，还是脑图或者随手的草图能达意就行","like_count":0},{"had_liked":false,"id":179292,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1581953212,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581953212","product_id":100039001,"comment_content":"对于问题1,我记得有一次开会,需要去讲解这个项目的流程,花费了一天去画一个精致的UML图,但是后来没有用上,浪费了一天时间,于是也就渐渐的不去严格画图了,而是直接用win自带的画图工具去画画草图,能让其他开发人员理解即可<br>对于问题2,可以谈谈我对面向对象的思考,其实就是讲一些所需的属性封装为一个对象,并且实现并使用对象的过程中去用上封装 继承 多态 抽象这四种属性","like_count":0},{"had_liked":false,"id":179205,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1581935902,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1581935902","product_id":100039001,"comment_content":"先概要说下文章的要点：1）区分面向对象编程和面向对象编程语言；2）面向对象编程四大特性：封装、继承、多态、抽象；3）怎么区分面向对象编程语言（个人觉得意义不大）4）面向对象编程的开发流程：面向对象分析（OOA）、面向对象设计（OOD）、面向对象编程（OOP）<br><br>觉得面向对象编程这点还可以补充面向对象适合解决的问题类型，怎么才是面向对象编程的思维。<br><br>关于uml说点看法，简单明了能说明问题就行，形式不限。大学的时候学过一门课《软件建模之道》当时学的云里雾里主要是概念太多了理解不方面，现在讲领域建模强调一个“说人话”，不要为了建模而建模，开发者最常打交道就是程序员、产品和测试，那么你要清楚的表达意思就一定要简单明了，不要说一大堆术语，能把复杂问题简单化的才是高手，简单问题复杂化却是低能。结果导向问题为王，杀鸡焉用牛刀！","like_count":0},{"had_liked":false,"id":178914,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1043401,"ip_address":"","ucode":"B631E56A112BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/c9/b1b233cf.jpg","comment_is_top":false,"comment_ctime":1581854304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581854304","product_id":100039001,"comment_content":"1、在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>答：我觉得取决于项目性质吧，只要刚刚够就好；<br>在互联网行业，讲究地是“敏捷”，就用的很少；而在传统的ToB&#47;ToG，可能就会在乎了；<br><br><br>2、有关面向对象的概念和知识点，除了我们今天讲到的，你还能想到其他哪些吗？<br>答：封装、继承、多态、抽象；<br>确实有点抽象，一直没有很好的理解。","like_count":0},{"had_liked":false,"id":178093,"user_name":"秀丽","can_delete":false,"product_type":"c1","uid":1402332,"ip_address":"","ucode":"9872272B8056F5","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/dc/0737102d.jpg","comment_is_top":false,"comment_ctime":1581585603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581585603","product_id":100039001,"comment_content":"面向对象编程几大概念：直接问，还知道，不过换成以下字母，我就有点蒙。这次一定把他记住：<br><br>OOP：面向对象编程<br>OOPL：面向对象编程语言<br>OOA：面向对象分析<br>OOD：面向对象设计","like_count":0},{"had_liked":false,"id":176476,"user_name":"Geek_bb89c3","can_delete":false,"product_type":"c1","uid":1331828,"ip_address":"","ucode":"0F97B5B0F2DDD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IZKGetBZDuMEa2VwwtesTELvLORIyV749ItgfAqNPv30n4zEv71wuGNr1aNVIVltG0icvH53DHDuqPuzNpiauWAg/132","comment_is_top":false,"comment_ctime":1581066541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581066541","product_id":100039001,"comment_content":"面向对象：1960年出现的概念，C++语言让oo流行。<br>oo主要是通过类和对象的方式来组织系统。tongs遵守抽象，封装<br>，继承，多态四个特性。<br>面向对象语言：主要是语言的机制能够支持类和对象。同时支持抽象，封装，继承，多态。的特性。<br>对于语言并没有实现硬要求，只要支持类和对象就好，不一定需要实现四个特性。<br>ooa主要是搞清楚到底是做什么，ood主要是搞清楚如何做。oop是将想法落地的过程。<br><br><br>","like_count":0},{"had_liked":false,"id":175932,"user_name":"张理查","can_delete":false,"product_type":"c1","uid":1003152,"ip_address":"","ucode":"1F93E631CD4B35","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/90/a8d19e7b.jpg","comment_is_top":false,"comment_ctime":1580887453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580887453","product_id":100039001,"comment_content":"今天开始打卡面向对象。首先我们不应当也没有必要纠结于到底属不属于OOP，到底属不属于OOPL，只要你是在以类或对象的问题在思考与实践，就是在OOP，而你用JAVA线性地堆积业务代码那就是在面向过程。同样OOA和OOD也是，只要是在面向类和对象，产出的focus也在class 和 object 上，那就是OOA和OOD。<br>最后UML是大学里的一大本书，一个学期来讲的知识。如果能对UML规范做一些简化，快速落实到代码，这才是UML的价值和意义，看懂才是第一要务。","like_count":0},{"had_liked":false,"id":174442,"user_name":"空空","can_delete":false,"product_type":"c1","uid":1444122,"ip_address":"","ucode":"8F6EFE5A6F6F64","user_header":"https://static001.geekbang.org/account/avatar/00/16/09/1a/e0f95684.jpg","comment_is_top":false,"comment_ctime":1580210097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580210097","product_id":100039001,"comment_content":"能加上函数式编程的讲解就好了，毕竟不止go, java 1.8开始对函数式编程的支持已经很好了，现在大有流行起来的势头","like_count":0},{"had_liked":false,"id":173506,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1579582351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579582351","product_id":100039001,"comment_content":"1.uml本身是个好东西，但被用坏了，或者说还可以做的更易用一些，很多工具都支持逆向生成类图，但有时觉得用uml画用例图、组件图、活动图表达语义更清晰，类图表达的容易让人迷惑或者不懂uml的人困惑，还没有找到一种面相对象设计合适产出物的标准或规范，虽然说代码即可文档，但是有了类图设计再写代码肯定会更流畅一些。2.面向对象还有切面，协变逆变这些特性算不算？","like_count":0},{"had_liked":false,"id":172951,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1579386242,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579386242","product_id":100039001,"comment_content":"1:我觉得作为架构师还是要学习一下uml的，编码人员能看懂就行了。<br>2:还有泛型，接口等","like_count":0},{"had_liked":false,"id":172352,"user_name":"铁血柔情","can_delete":false,"product_type":"c1","uid":1124220,"ip_address":"","ucode":"F09CACF06B8D05","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/7c/463d4342.jpg","comment_is_top":false,"comment_ctime":1579159508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579159508","product_id":100039001,"comment_content":"uml的学习成本确实有点大，并且很花时间，我觉得会使用就可以了，不需要太多深入的研究，讨论的时候只要模型图通俗易懂就可以了，不需要太标准化。面向对象还有对象的定义和设计。","like_count":0},{"had_liked":false,"id":171570,"user_name":"Fisher","can_delete":false,"product_type":"c1","uid":1089543,"ip_address":"","ucode":"49C0EB546971ED","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/07/8d91021c.jpg","comment_is_top":false,"comment_ctime":1578967206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578967206","product_id":100039001,"comment_content":"1.UML的一些图例基本规范还是要懂。大家都按照基本规范来画，会事半功倍。必要的说明还是需要的。","like_count":0},{"had_liked":false,"id":170753,"user_name":"晓杉","can_delete":false,"product_type":"c1","uid":1209336,"ip_address":"","ucode":"19E634BB61A165","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/f8/dbd2fa50.jpg","comment_is_top":false,"comment_ctime":1578706016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578706016","product_id":100039001,"comment_content":"1. 同意老师的观点，如果不是专业绘图，只是方便设计使用，不必纠结具体的细节实现。<br>2. 面向接口编程，是现在越来越多提及的概念。更加具体的指明了分层分模块重要性，也是多态的具体应用。","like_count":0},{"had_liked":false,"id":166272,"user_name":"北风一叶","can_delete":false,"product_type":"c1","uid":1087302,"ip_address":"","ucode":"30310E66341D2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/46/fe1f21d8.jpg","comment_is_top":false,"comment_ctime":1577429649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577429649","product_id":100039001,"comment_content":"本篇重点讲述了什么是面向对象，由以下的四个方面组成：<br>1. 面对对象的编程主语言：按严格定义来讲指的是支持类、对象及四大特性的语言<br>2. 面向对象的分析：基于类和对象，对业务进行分析，也即搞清楚做什么<br>3. 面向对象的设计：基于类和对象，对业务进行设计，也即搞清楚怎么做<br>4. 面向对象的编程：基于类和对象的编程，将分析和设计进行实现","like_count":0},{"had_liked":false,"id":165401,"user_name":"喵喵喵","can_delete":false,"product_type":"c1","uid":1211713,"ip_address":"","ucode":"E3AD8BF42E19DF","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/41/3c5b770b.jpg","comment_is_top":false,"comment_ctime":1577234152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577234152","product_id":100039001,"comment_content":"打卡～","like_count":0},{"had_liked":false,"id":164663,"user_name":"黄政","can_delete":false,"product_type":"c1","uid":1345630,"ip_address":"","ucode":"9076A1BF7BB051","user_header":"https://static001.geekbang.org/account/avatar/00/14/88/5e/cc916a2b.jpg","comment_is_top":false,"comment_ctime":1577068173,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577068173","product_id":100039001,"comment_content":"1.uml的话，也是体现设计思路的一种方法","like_count":0},{"had_liked":false,"id":164520,"user_name":"请叫我和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1577019588,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577019588","product_id":100039001,"comment_content":"如果说面向过程是关注数据的流向，面向对象是关注对象之间交互，不知道这样理解正不正确，","like_count":0},{"had_liked":false,"id":163842,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1576810527,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1576810527","product_id":100039001,"comment_content":"我是表示赞同的，其实，很多时候草图就可以让人一眼就能看懂，看清晰，看明白。我们是偏向于工程的工程师，而不是偏向研究的科学家。在我们工作的时候时间也是需要考虑的一大因素，能够快速的把自己的想法表达清晰清楚，就已经是很不错的了。","like_count":0},{"had_liked":false,"id":163557,"user_name":"Next","can_delete":false,"product_type":"c1","uid":1748213,"ip_address":"","ucode":"D5ADDF248A9504","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ac/f5/2f97e279.jpg","comment_is_top":false,"comment_ctime":1576743668,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576743668","product_id":100039001,"comment_content":"是否需要UML?<br>需要。<br>图形化分析和表达，让自己和他人可以快速理解。彼此要被理解，依赖于某种语言约定，UML就是这个图形化语言。<br>怎么使用？<br>按项目的不同阶段（需求分析阶段、概要设计阶段、详细设计阶段）使用UML，满足阶段性分析和表达即可。后续也可按需查看不同阶段的UML设计图。<br>ps： 按需使用类图（简化）、用例图、顺序图、活动图、状态图、组件图<br>pps：UML只是工具，最重要的是要清楚需要表达什么！！！<br>ppps：希望老师也可以讲讲【领域驱动开发】！！！","like_count":0},{"had_liked":false,"id":162585,"user_name":"一笔一画","can_delete":false,"product_type":"c1","uid":1495254,"ip_address":"","ucode":"2B9BC8ADF97106","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/d6/f335954b.jpg","comment_is_top":false,"comment_ctime":1576560630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576560630","product_id":100039001,"comment_content":"设计就是沟通，能够把你的思想转化成可交流的语言表达出来，大家能明白就好","like_count":0},{"had_liked":false,"id":162161,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1576468576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576468576","product_id":100039001,"comment_content":"uml经常在绘制流程和时序 以及系统间复杂交互中用到，最底层类图由于后期变更较大基本不用，说uml没用是没看到使用的场景吧，一图胜千言啊","like_count":0},{"had_liked":false,"id":161345,"user_name":"我叫郭小黑","can_delete":false,"product_type":"c1","uid":1463441,"ip_address":"","ucode":"C238592EB5EDBC","user_header":"https://static001.geekbang.org/account/avatar/00/16/54/91/0d4647d9.jpg","comment_is_top":false,"comment_ctime":1576196302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576196302","product_id":100039001,"comment_content":"UML类图应该依场景而异，能够帮我我们在处理复杂问题时，能够更好的建模，不过如果是比较简单的东西，而基于需要也不是所有的图都要处理，只处理能够达到我们的需要就可以，也为了后续开发人员能够读懂我们的设计思想。仅仅自己的一些简单想法，欢迎指正，谢谢","like_count":0},{"had_liked":false,"id":160128,"user_name":"蜗牛","can_delete":false,"product_type":"c1","uid":1086220,"ip_address":"","ucode":"01CC18F12E556D","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/0c/0a6a0d5e.jpg","comment_is_top":false,"comment_ctime":1575876054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575876054","product_id":100039001,"comment_content":"挺好的，抓重点即可~","like_count":0},{"had_liked":false,"id":158118,"user_name":"肖玉哲","can_delete":false,"product_type":"c1","uid":1350969,"ip_address":"","ucode":"E211AFA01EC2C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/39/20525541.jpg","comment_is_top":false,"comment_ctime":1575334912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575334912","product_id":100039001,"comment_content":"UML可以使用plantUML的语言方式画图，会简单些","like_count":0},{"had_liked":false,"id":157209,"user_name":"王盛武","can_delete":false,"product_type":"c1","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1575082880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575082880","product_id":100039001,"comment_content":"有uml书推荐不","like_count":0},{"had_liked":false,"id":157083,"user_name":"蓝思绪","can_delete":false,"product_type":"c1","uid":1361693,"ip_address":"","ucode":"2D8CE718DEAD96","user_header":"https://static001.geekbang.org/account/avatar/00/14/c7/1d/048dc01a.jpg","comment_is_top":false,"comment_ctime":1575027464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575027464","product_id":100039001,"comment_content":"面向对象分析就是搞清楚做什么，面向对象设计就是搞清楚怎么做。<br>抄下做笔记","like_count":0},{"had_liked":false,"id":156560,"user_name":"奇小易","can_delete":false,"product_type":"c1","uid":1171151,"ip_address":"","ucode":"E06B4DFB5352BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/cf/ef2e0501.jpg","comment_is_top":false,"comment_ctime":1574911861,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574911861","product_id":100039001,"comment_content":"Q: 在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>A:<br>我觉得很合理，这两个过程的核心是解决做什么和怎么做的问题，而不是解决标准化、规范化的问题。","like_count":0},{"had_liked":false,"id":155692,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1574737249,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1574737249","product_id":100039001,"comment_content":"1.UML相关功能可以裁剪，但是尽量贴切原先的uml规范，不然对于真的有心学习UML的人来说，可能会产生混淆<br>","like_count":0},{"had_liked":false,"id":155638,"user_name":"古道西风瘦码","can_delete":false,"product_type":"c1","uid":1288691,"ip_address":"","ucode":"55629E259C4CDD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iarmERAEvlY7U5oNTialvwC28vPxicNYNn5ZhWw8tDXicZHic6KoA3HXa3ZuPmqQNZKEVqsnPkcVPD2wOBibibujFacwQ/132","comment_is_top":false,"comment_ctime":1574731323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574731323","product_id":100039001,"comment_content":"uml就是个工具 严重同意老师看法","like_count":0},{"had_liked":false,"id":155418,"user_name":"　　　　　　　　","can_delete":false,"product_type":"c1","uid":1396774,"ip_address":"","ucode":"BBFE5F456BD18C","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/26/8744448e.jpg","comment_is_top":false,"comment_ctime":1574687061,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1574687061","product_id":100039001,"comment_content":"泛化表示继承的关系  用带三角箭头的实线表示 箭头指向父类<br>实现表示类与接口的关系  用带三角箭头的虚线表示   <br>箭头指向接口<br>组合表示整体与部分的关系，部分不能离开整体   用带实心菱形的实线   菱形指向整体<br>聚合表示整体与部分的关系，部分可以离开整体   用带空心菱形的实线   菱形指向整体<br>关联表示拥有的关系，一个类知道另一个类的属性  <br>用带箭头的实线  箭头指向被拥有者<br>依赖表示一种使用关系  用带箭头的虚线  指向被使用者","like_count":0},{"had_liked":false,"id":155313,"user_name":"ub8","can_delete":false,"product_type":"c1","uid":1481811,"ip_address":"","ucode":"0D937C3EAEB781","user_header":"https://static001.geekbang.org/account/avatar/00/16/9c/53/ade0afb0.jpg","comment_is_top":false,"comment_ctime":1574677509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574677509","product_id":100039001,"comment_content":"看完这篇文章最大的收货是，不必为自己不回话uml图自卑","like_count":0},{"had_liked":false,"id":154988,"user_name":"王先生","can_delete":false,"product_type":"c1","uid":1082275,"ip_address":"","ucode":"027C061F660605","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/a3/432bbbd9.jpg","comment_is_top":false,"comment_ctime":1574610639,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574610639","product_id":100039001,"comment_content":"今天学习了“当谈论面向对象的时候，我们到底在谈论什么”，收获什么是面向对象，面向对象狭义上是指包含四个特性，封装、抽象、继承、多态的代码语言；广义上是指面向支持类，有对象语法机制就能认为是面向对象语言。","like_count":0},{"had_liked":false,"id":154466,"user_name":"被讨厌的勇气","can_delete":false,"product_type":"c1","uid":1547913,"ip_address":"","ucode":"AE3B3CA27D91A2","user_header":"https://static001.geekbang.org/account/avatar/00/17/9e/89/6e9c05d6.jpg","comment_is_top":false,"comment_ctime":1574436534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574436534","product_id":100039001,"comment_content":"UML作为表达设计思路的工具，可以类比与汉语语言，汉语一共十万多个，但常用的只有几千个，UML太复杂使得都不太常用了。<br><br>经常看到书上提到桌面图像框架适合用面向对象实现，现在有点明白这句话的含义了。<br><br>","like_count":0},{"had_liked":false,"id":154375,"user_name":"zeta","can_delete":false,"product_type":"c1","uid":1255260,"ip_address":"","ucode":"AF84A72375827C","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/5c/ee2a876f.jpg","comment_is_top":false,"comment_ctime":1574416898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574416898","product_id":100039001,"comment_content":"规范的UML图从静态（如类图）和动态（如时序图）两方面描述最终代码交互过程，让设计者在设计时充分思考组件内部机制，理论上是能够指导最终开发的。但现实往往很残酷，设计者一般没有那么充分的时间深入思考这些，并且就算想好了，真正实施过程中又可能有很多变数。Martin Fowler有篇文章中提到过（好像是Is Design Dead），图纸其实就是沟通用的，图纸的真正用法就是有用时贴在墙上，用完了就撕，而不是整一摞图纸就一开始用用，结果就扔墙角落灰了。","like_count":0},{"had_liked":false,"id":154035,"user_name":"遗忘的童话","can_delete":false,"product_type":"c1","uid":1252850,"ip_address":"","ucode":"E11D9E8A11A82C","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/f2/81918ad5.jpg","comment_is_top":false,"comment_ctime":1574351340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574351340","product_id":100039001,"comment_content":"关于uml，我个人理解：更偏向于code review的时候，因为大家在不懂你业务逻辑的时候，你可以更加直观的去表达这个类干嘛的，那个接口干嘛的。但在实际组内开发的时候，只能说性价比不高。","like_count":0},{"had_liked":false,"id":153631,"user_name":"半湖思絮","can_delete":false,"product_type":"c1","uid":1236746,"ip_address":"","ucode":"ECE58303541E59","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/0a/4084d5fa.jpg","comment_is_top":false,"comment_ctime":1574291675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574291675","product_id":100039001,"comment_content":"每次看设计模式的书籍和博客，都折在uml类图上了","like_count":0},{"had_liked":false,"id":153589,"user_name":"东流","can_delete":false,"product_type":"c1","uid":1738147,"ip_address":"","ucode":"2715BC6E87BD83","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/a3/7e078442.jpg","comment_is_top":false,"comment_ctime":1574263623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574263623","product_id":100039001,"comment_content":"uml作为一种标准，如果太随意就失去了严谨性<br>其他知识点，就是面向对象中多继承的菱形问题，单继承又不够用的毛病","like_count":0},{"had_liked":false,"id":153268,"user_name":"蟹肥","can_delete":false,"product_type":"c1","uid":1737493,"ip_address":"","ucode":"382B86651ED909","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rNMTN9E43LZ0dpb4s3ElcRnBYpic5zzrCXGvKdib7rDwSEEWto83gXgFFQWMWXQmUxodcKyNnhDK1yIjeiaR7Mz3A/132","comment_is_top":false,"comment_ctime":1574209765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574209765","product_id":100039001,"comment_content":"1.阅读《Agile principles, patterns, and practices in C#》时<br>书中也有提到UML尽量简单的论点<br>给我的启发是画图是为了沟通<br>如果画图与的成本太高,也会使沟通的成本提高<br>役物而不役于物<br>2.等我想到了再回来补","like_count":0},{"had_liked":false,"id":153005,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1025030,"ip_address":"","ucode":"62A89FD460827A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/06/cf6b6d0f.jpg","comment_is_top":false,"comment_ctime":1574139411,"is_pvip":false,"replies":[{"id":"59173","content":"后面会详细讲解 本文说了只是点到为止","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1574385829,"ip_address":"","comment_id":153005,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574139411","product_id":100039001,"comment_content":"面向对象设计和分析这里不是很明白。因为我包括周围的人，设计类就是设计好数据库里的表，然后把表里的字段映射一下就是类了。<br>所以不是很明白老师说的面向对象分析和设计是要做什么。隐隐觉得自己的做法不对。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475018,"discussion_content":"后面会详细讲解 本文说了只是点到为止","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574385829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152937,"user_name":"🌲树根🌲","can_delete":false,"product_type":"c1","uid":1159060,"ip_address":"","ucode":"1CB2271FB7872D","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/94/6949a55c.jpg","comment_is_top":false,"comment_ctime":1574126500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574126500","product_id":100039001,"comment_content":"uml基本的类图、时序、流程图这些基本的是要学习的，图形交流比语言交流效率更高，也利于后续文档化和传承。特别是复杂的程序设计，更需要图形化帮助梳理思路。在多人协作下，如果能先设计类图，梳理流程，有助于实现并行开发。","like_count":0},{"had_liked":false,"id":152931,"user_name":"小乙哥","can_delete":false,"product_type":"c1","uid":1063308,"ip_address":"","ucode":"C77E79BEA0C325","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","comment_is_top":false,"comment_ctime":1574125278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574125278","product_id":100039001,"comment_content":"在复杂的交互场景下，用例图能够帮助我梳理出核心业务功能点case。在复杂业务流程情况下，时序图能够明晰整个业务流程，也方便大家达成一致。对于复杂的老业务系统，类图还是能够帮助梳理出设计思路的。<br>感觉老师对于UML的取舍还是蛮有想法的，日后实践可以适当取舍看一下效果","like_count":0},{"had_liked":false,"id":152681,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1574062025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574062025","product_id":100039001,"comment_content":"1.UML的使用肯定前提是公司整体的使用习惯是存在的，才能够起到应有的作用，作为敏捷开发团队而言，个体的沟通大于文档等工具的习惯就不是很适用，中间的学习成本，使用成本都比较复杂。<br>2.其实一直以来对于面向对象大部分就是类和对象，三大特性，也比较局限于java的领域里面，对于javascript也是觉得没有类，没有封装对象等方式，也不能确定为什么编程语言。所以也是希望接下来的学习中，能够更加明确的了解说面向对象更细节，更多的内容。","like_count":0},{"had_liked":false,"id":152626,"user_name":"陈迎春","can_delete":false,"product_type":"c1","uid":1443663,"ip_address":"","ucode":"2870BA6D6E5B1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","comment_is_top":false,"comment_ctime":1574052918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574052918","product_id":100039001,"comment_content":"虽然我还是觉得UML的规范性挺重要，但是更认同敏捷宣言，&quot;个体和互动高于流程和规范&quot;","like_count":0},{"had_liked":false,"id":152290,"user_name":"大胃王","can_delete":false,"product_type":"c1","uid":1120238,"ip_address":"","ucode":"17072DCDB4C7FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/ee/b123e7bc.jpg","comment_is_top":false,"comment_ctime":1573962190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573962190","product_id":100039001,"comment_content":"这个问题要辩证的去看，互联网公司讲的是快去迭代，但是大部分企业是各种 * MS。对于各种管理系统，本质上是帮助业务成功的，可现实的情况是（至少我在的整个行业链）：大部分MS系统无法满足业务发展或者几近失控，造成这个问题的一个重要原因是：项目开发还停留在小作坊的时代，没有统一的方法论指导。<br><br>所以个人觉得UML还是要大力推广和使用的，尤其是非互联网企业。","like_count":0},{"had_liked":false,"id":152271,"user_name":"Shanks-王冲","can_delete":false,"product_type":"c1","uid":1042983,"ip_address":"","ucode":"C4B90A17850E20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ea/27/a3737d61.jpg","comment_is_top":false,"comment_ctime":1573957246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573957246","product_id":100039001,"comment_content":"基于团队(入乡随俗)，我们团队没有使用，有时候简单草图，对付一下就过去了，便于沟通；有的团队，可能就用了，一直有这个习惯，新人进去，肯定要培训这一块，不然跟不上团队其他人。大型复杂的软件，or随着软件的变得越复杂，普通的草图不能再对付现在的情况，是否需有人去试探、试用后，如果有助于屡清楚复杂系统，可以在团队推广下；以上，是我的猜想。","like_count":0},{"had_liked":false,"id":152213,"user_name":"攀登者","can_delete":false,"product_type":"c1","uid":1074549,"ip_address":"","ucode":"FC26A8AC504C5E","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/75/9c0b9b5b.jpg","comment_is_top":false,"comment_ctime":1573916725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573916725","product_id":100039001,"comment_content":"好久没画UML了，能表达清楚类之间的关系即可，不一定非要用UML","like_count":0},{"had_liked":false,"id":152204,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1573914201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573914201","product_id":100039001,"comment_content":"面向对象编程不是绝对化的，在功能实现，即使使用面向对象编程，就一定会存在逻辑顺序性，就一定存在面向过程编程。","like_count":0},{"had_liked":false,"id":152194,"user_name":"This","can_delete":false,"product_type":"c1","uid":1338696,"ip_address":"","ucode":"7FD1969C9C38D0","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/48/e04411d5.jpg","comment_is_top":false,"comment_ctime":1573909420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573909420","product_id":100039001,"comment_content":"想问一下为什么说JavaScript不支持继承呢，在es6之前支持继承的方式有很多种，可能相比较java，并不是有关键字来实现继承那么清晰，但是es6可以很清晰的实现继承","like_count":0},{"had_liked":false,"id":152147,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1573892077,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573892077","product_id":100039001,"comment_content":"1. 针对第一个问题，在学习软件工程课程的时候，老师就说，知道概念就好，能画出一个大概，让双方沟通即可。我最常用的应该就是类图、时序图和用例图，但是有时真的没搞清楚一些具体的用法，就比如老师说的类图里的一些小细节，所以就会加以文字来描述，让大家能看懂即可。<br><br>这样对软件工程掌握可能是欠缺了点，但是在实战中通过讲解和演示，能达到效果。熟练的同学可以画的更好，不熟练的同学就尽量往边上靠，对效率来说都是没问题的。<br><br>2. 第二个问题，暂时不需要补充，静静地向老师学习","like_count":0},{"had_liked":false,"id":151915,"user_name":"Geek_1f0d72","can_delete":false,"product_type":"c1","uid":1734614,"ip_address":"","ucode":"FA8D576755B76E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLneMESMlYsVWs3dEp07YCuic0ibvO08qBgbOEhAcl9dUicjmZicDichWxx09tnhpHZII8TlmKic3XD0R3w/132","comment_is_top":false,"comment_ctime":1573812120,"is_pvip":true,"replies":[{"id":"58605","content":"嗯嗯 好的","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1574040337,"ip_address":"","comment_id":151915,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573812120","product_id":100039001,"comment_content":"希望语言可以精炼一些。比如：前面我们提到XXX，也说明了XXX是什么，那么为什么要用到XXX呢，下面我来说一下原因。。。。。。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474651,"discussion_content":"嗯嗯 好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574040337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151871,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1573803134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573803134","product_id":100039001,"comment_content":"详细的uml在开发时用处是不太大, 但目前写需求文档时需要弄几个时序图 或组件图等显得专业些 . . .","like_count":0},{"had_liked":false,"id":151748,"user_name":"CHS","can_delete":false,"product_type":"c1","uid":1240227,"ip_address":"","ucode":"3D8B2DABC0A1D6","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/a3/28763399.jpg","comment_is_top":false,"comment_ctime":1573784742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573784742","product_id":100039001,"comment_content":"面向对象是一种思想，他有几种特性 继承 封装 多态，在面向对象设计或者编程的过程中，不一定用到全部的特性，根据实际情况使用特定的特性。","like_count":0},{"had_liked":false,"id":151585,"user_name":"小建","can_delete":false,"product_type":"c1","uid":1647247,"ip_address":"","ucode":"C9781DF8F79112","user_header":"https://static001.geekbang.org/account/avatar/00/19/22/8f/22e9c74b.jpg","comment_is_top":false,"comment_ctime":1573744494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573744494","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":151555,"user_name":"斜杠ing...","can_delete":false,"product_type":"c1","uid":1676247,"ip_address":"","ucode":"C4AE866AC8B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d7/93c8f92a.jpg","comment_is_top":false,"comment_ctime":1573739736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573739736","product_id":100039001,"comment_content":"uml让我很头疼呃，不想学...每次沟通都是画明白就成，可能是因为项目小吧","like_count":0},{"had_liked":false,"id":151443,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1053853,"ip_address":"","ucode":"2E98377E48399E","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/9d/19dcdd42.jpg","comment_is_top":false,"comment_ctime":1573721404,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573721404","product_id":100039001,"comment_content":" 我感觉，我们现在的大部分编程都是面向数据的编程。里面向对象还很远，虽然我们用的是JAVA语言","like_count":0},{"had_liked":false,"id":151438,"user_name":"leslee","can_delete":false,"product_type":"c1","uid":1384326,"ip_address":"","ucode":"DB1CBF9F8D16BF","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/86/3a7eeac4.jpg","comment_is_top":false,"comment_ctime":1573719623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573719623","product_id":100039001,"comment_content":"完全同意, 简化UML!","like_count":0},{"had_liked":false,"id":151388,"user_name":"Edward Lee","can_delete":false,"product_type":"c1","uid":1228518,"ip_address":"","ucode":"156223F1D7E94A","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","comment_is_top":false,"comment_ctime":1573712011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573712011","product_id":100039001,"comment_content":"之前有使用过 uml  对类进行描述，但要掌握这类空心箭头，虚线等表达方式，真的十分困难。虽然当时是记住了，但后来又忘记了。以至于以后每次看到这种 uml 写的类图，都很难分辨，明明可以通过描述线的作用方便阅读，却偏偏使用箭头，虚实心，菱形，虚实线等符号，这类符号的记忆难度甚比 ip 和数字，令人窒息。","like_count":0},{"had_liked":false,"id":151383,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1573710745,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573710745","product_id":100039001,"comment_content":"很多情况下，标准可以简化沟通成本，但UML是一个特例吧，因为没系统学习过软件工程的人学习UML起来也是很痛苦的，即使我作为一个软件工程的硕士，也只有几种UML图经常使用，活动图、ER图和流程图吧，所以我很赞同老师的说法，沟通也不是书写论文和正式的开发文档，没必要纠结那么多。","like_count":0},{"had_liked":false,"id":151343,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1573703019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573703019","product_id":100039001,"comment_content":"有关面向对象的概念和知识点，除了我们今天讲到的，你还能想到其他哪些吗？<br>个人对于面向对象的理解，直接来说的话就是“类”。围绕类来扩展的话。<br>类用于描述对象，成员变量描述对象的属性，成员方法描述对象的行为。<br>所谓“继承”带来的结果，无非是类的细致化和派生。生物，派生出动物，植物；动物又派生各个科目等。<br>所谓“抽象”用于描述一些共同的行为。类似于，狼，和捕蝇草。它们都有 “捕猎”这个行为，但是这个行为明显不属于它们自己的“类”。所以可以把“捕猎”这个行为抽象出来，成为一个接口——“捕猎者”。<br>","like_count":0},{"had_liked":false,"id":151342,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1573703016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573703016","product_id":100039001,"comment_content":"在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>UML图，各种框，各种箭线，确实相对繁琐。但是，对于一个大型项目的理解还是有一定作用的。个人认为，可以折中。使用简化版UML。简化UML的限制，同时兼备提现类之间的继承关系等。因为，UML其实编写的成本其实还好，复杂的是维护成本，往往一个关系的变动，时常是牵一发而动全身的，所以，我认为UML可以适当简化。没必要，一定要那么专业，细致的UML。但是简化版UML就已经可以大幅度降低项目的理解成本了。<br>","like_count":0},{"had_liked":false,"id":151231,"user_name":"华仔","can_delete":false,"product_type":"c1","uid":1456384,"ip_address":"","ucode":"25ACA96ADA7EE9","user_header":"https://static001.geekbang.org/account/avatar/00/16/39/00/30664850.jpg","comment_is_top":false,"comment_ctime":1573689748,"is_pvip":false,"replies":[{"id":"58187","content":"下一节课讲到了","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573690475,"ip_address":"","comment_id":151231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573689748","product_id":100039001,"comment_content":"面向对象是三个特征还是四个？为什么两种说法","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474410,"discussion_content":"下一节课讲到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573690475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151219,"user_name":"雷咏","can_delete":false,"product_type":"c1","uid":1671448,"ip_address":"","ucode":"890DF9E928C99F","user_header":"https://static001.geekbang.org/account/avatar/00/19/81/18/f3642be3.jpg","comment_is_top":false,"comment_ctime":1573685492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573685492","product_id":100039001,"comment_content":"以我的理解面向对象最核心的概念是封装。将数据结构和算法封装成对象。","like_count":0},{"had_liked":false,"id":151182,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1573661757,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573661757","product_id":100039001,"comment_content":"第一题：是否用UML并不是关键，关键在于是否可以达到有效沟通和深度思考的目的。就像并不是所有的开发工作都需要严格进行PRD评审、系分评审、测分评审、发布评审一样，UML图也不是随时都需要画，而且画的跟官方定义一样。不过，如果知识觉得UML图复杂，我倒建议进行一些简化，例如重点画流程图、时序图和模块图，也可以使用PlantUML之类的工具。<br><br>第二题：记得在《Java编程思想》一书中提到，面向对象最根本的不同就在于改变了开发者思考问题的方式，将开发者面对的问题空间转移视线了真实的世界。这里就涉及到编程范式的思考，面向对象最核心的地方就是对现实世界的模拟和抽象。","like_count":0},{"had_liked":false,"id":151162,"user_name":"💢 星星💢","can_delete":false,"product_type":"c1","uid":1254392,"ip_address":"","ucode":"A402B765222C35","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","comment_is_top":false,"comment_ctime":1573659628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573659628","product_id":100039001,"comment_content":"关于uml使用的理解，我赞同争哥说的学习成本太高，不利于团队的沟通交流。但是我也想不明白。团队之间应该用什么交流面对对象的设计。一直在传统的小公司呆着。有点进底之蛙。期望看到争哥是怎么解决这个问题答案的。","like_count":0},{"had_liked":false,"id":151150,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1573658593,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573658593","product_id":100039001,"comment_content":"个人支持争哥","like_count":0},{"had_liked":false,"id":151047,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1573647406,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573647406","product_id":100039001,"comment_content":"实践经验很重要，对于很多初学者来说，会少走很多弯路。期望能穿插更多实践经验，比如uml类图事实上掌握基本的概念就够了，但是时序图呢？架构图呢？有没有一些工具可以推荐。EA比较老了。plantuml感觉画架构图不是那么方便，用ppt的画图功能感觉比较原始。","like_count":0},{"had_liked":false,"id":150980,"user_name":"Geek4it","can_delete":false,"product_type":"c1","uid":1738688,"ip_address":"","ucode":"C6247BFE5C8824","user_header":"","comment_is_top":false,"comment_ctime":1573638074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573638074","product_id":100039001,"comment_content":"在自己的观念里，ooa就是需求弄的 ood是设计师弄的 自己只负责oop。以后需要多多了解，全面发展，了解产品的来龙去脉","like_count":0},{"had_liked":false,"id":150904,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1573624993,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573624993","product_id":100039001,"comment_content":"既然UML存在这么大的学习成本，而这篇的专栏是为了学习设计模式，所以画出的图能表达出意思即可，不必遵循UML的规范","like_count":0},{"had_liked":false,"id":150838,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1573615168,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573615168","product_id":100039001,"comment_content":"uml的最大问题是太复杂了，学习成本太高，但收效甚微。<br>简单的才是实用的。","like_count":0},{"had_liked":false,"id":150758,"user_name":"Geek_Spring","can_delete":false,"product_type":"c1","uid":1292572,"ip_address":"","ucode":"3F44EE152CB357","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erRavHNiaicxIIq5Pal1iadE4axG6ibbib6llpHBslhiahWDQ6tdE1IcWicFogfvuyfGoiayC51knA09UtQvQ/132","comment_is_top":false,"comment_ctime":1573607365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573607365","product_id":100039001,"comment_content":"之前学习设计模式的时候，都是讲完例子上来就来一个uml，其实有的根据讲解看的还是挺清晰的，但是在现实的编程中，画这个UML真是的是费事费力，所以我们也是如王老师所说用简图代替，并且一段时间如果你不看之前化的图就会发现有时候看起来之前画的好乱，然后各种符号还看不明白了，所以，我觉着应该言简意赅，图要清晰明了","like_count":0},{"had_liked":false,"id":150743,"user_name":"follow_ice","can_delete":false,"product_type":"c1","uid":1105028,"ip_address":"","ucode":"8B8F59AD343180","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/84/a35ce74d.jpg","comment_is_top":false,"comment_ctime":1573606518,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573606518","product_id":100039001,"comment_content":"UML用来表达类图的设计 在团队中是否用UML 取决于团队成员 如果大家都是很熟悉UML的可以用 用来还会使沟通更加顺畅 如果很多人不熟悉的话 还是不要用的好 浪费精力。团队里需要有一种沟通的工具 不一定非要局限于uml 只要能让大家都可以无障碍的使用就可以","like_count":0},{"had_liked":false,"id":150719,"user_name":"古古惑惑","can_delete":false,"product_type":"c1","uid":1039710,"ip_address":"","ucode":"37724A018564FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/5e/2354204d.jpg","comment_is_top":false,"comment_ctime":1573604659,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573604659","product_id":100039001,"comment_content":"UML只是一个工具，如果它太多复杂而提高了我们的设计和沟通成本，那就违背本意了。有时候白板上进行草图演示比严谨的UML更高效。","like_count":0},{"had_liked":false,"id":150669,"user_name":"Fun","can_delete":false,"product_type":"c1","uid":1145502,"ip_address":"","ucode":"5D89BA4C678785","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJdUGdEj3R25CrYqibPibYibibRicqUfyL4aTTPbMagyywjKMhXGZE37RTe7lEdvC4DibvtYpzg8zXvt9HQ/132","comment_is_top":false,"comment_ctime":1573579488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573579488","product_id":100039001,"comment_content":"# day 8<br>重温一些面相对象的概念，OOA &#47; OOD &#47; OOP &#47; OOPL，以及UML。<br>概念部分就不多回顾了。对于纯粹的嵌入式程序员，目前也见过很多面相对象范式的C码实现，所以OOP概念是懂的，用OOPL工作的机会是偏少的，在工作之余用OOPL尝尝是可以的。<br>客观来说说UML。工作这么几年，时序图就不说了，主要还是吐槽下UML类图。类图的关系确实很容易混淆，如果不是经常混UML的，只是看看文档，鬼才会在意实心的三角，空心的三角，虚线，实线…等等各自的含义，我想这是最最直白的感受了。UML归根结底是一门用来交流，讨论的工具。既然是工具，本身就应该简单易用。我应该是有特意看过UML的书籍的，印象里不薄，而且做过笔记心里默记过……不过现在已是过眼云烟。所以，UML无论是对于学习成本还是制作成本都是极费事的。<br>最后，什么事都回归本质的话，好的工具一定是简单易用的。毕竟，大道至简。","like_count":0},{"had_liked":false,"id":150620,"user_name":"Cy23","can_delete":false,"product_type":"c1","uid":1591293,"ip_address":"","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1573569464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573569464","product_id":100039001,"comment_content":"打卡，万事万物接对象，有时候应该封装，但是多数时候偷懒，不美观，重复性多","like_count":0},{"had_liked":false,"id":150613,"user_name":"摸爬滚打三十年","can_delete":false,"product_type":"c1","uid":1240241,"ip_address":"","ucode":"764A7F920EC304","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/b1/d790b927.jpg","comment_is_top":false,"comment_ctime":1573568411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573568411","product_id":100039001,"comment_content":"想到对象就能想到一大堆：比如接口，对象，抽象类，成员属性和成员方法。supper,this , static 等等这些基本的关键字和概念，最难的是如何组织这些单元，并且如何应用。希望跟着老师有个质的提高。","like_count":0},{"had_liked":false,"id":150581,"user_name":"W","can_delete":false,"product_type":"c1","uid":1724021,"ip_address":"","ucode":"2F9FA347E982F9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/4e/75/4c040060.jpg","comment_is_top":false,"comment_ctime":1573561925,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573561925","product_id":100039001,"comment_content":"uml 统领代码结构还是可以的 比较清晰。慢慢熟悉，更好理解吧 。","like_count":0},{"had_liked":false,"id":150575,"user_name":"尚寂清","can_delete":false,"product_type":"c1","uid":1735856,"ip_address":"","ucode":"FA1D9D6844BC2E","user_header":"","comment_is_top":false,"comment_ctime":1573561183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573561183","product_id":100039001,"comment_content":"在看第三方源码的时候可以通过画UML图来加深对类设计的理解","like_count":0},{"had_liked":false,"id":150560,"user_name":"坎迪汪","can_delete":false,"product_type":"c1","uid":1017033,"ip_address":"","ucode":"5B1ADFA2AF2934","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/c9/cfed3a2f.jpg","comment_is_top":false,"comment_ctime":1573557131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573557131","product_id":100039001,"comment_content":"UML并不是一个很好的设计，不好用","like_count":0},{"had_liked":false,"id":150533,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1573550968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573550968","product_id":100039001,"comment_content":"UML图我现在也就是实线和虚线的层级，但是我觉得画画图，对你自己知识梳理，大体结构的了解还是很有用处的，在IDE里面看生成的UML图还是很不错的。<br>工作中其实流程图的存在感要比UML图更高，可惜水平也不高，还没有什么好的材料去学习。","like_count":0},{"had_liked":false,"id":150503,"user_name":"光光","can_delete":false,"product_type":"c1","uid":1242876,"ip_address":"","ucode":"A0F1D0134C935F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f6/fc/171c4976.jpg","comment_is_top":false,"comment_ctime":1573546738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573546738","product_id":100039001,"comment_content":"UML的学习成本确实很高，记得读书的时候都是用一些假想的场景来对应到UML里的功能，为了用而用。至于面向对象的分析和面向对象的设计就更别提了。但是UML的出发点就是想通过统一的形式来反应系统的设计和功能场景，抛开了具体使用什么语言来实现（换句话，就是只要是面向对象语言，都可以完成这些功能）。而在实际的工作场景中，整个产品链条上的参与的人不是都懂UML，再加上本身学习成本比较高，应用的就更少了，所以，大部分就是吸其精华，转而使用易懂好表达的个性化形式。","like_count":0},{"had_liked":false,"id":150500,"user_name":"饭太司替可","can_delete":false,"product_type":"c1","uid":1171829,"ip_address":"","ucode":"9A47FCA16199B0","user_header":"https://static001.geekbang.org/account/avatar/00/11/e1/75/bbdf9052.jpg","comment_is_top":false,"comment_ctime":1573546380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573546380","product_id":100039001,"comment_content":"1、虽然学习成本很高，但是对于初学者来说去了解一下还是有必要的，因为可以知道到类之间会有哪些关系，能够加强面向对象设计的概念。 实际过程中如果发现类之间的关系比较复杂的时候，可以去画下图，其它情况看情况。<br>","like_count":0},{"had_liked":false,"id":150499,"user_name":"微凉","can_delete":false,"product_type":"c1","uid":1178156,"ip_address":"","ucode":"F6BD0AE11AE224","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/2c/9a0c45e6.jpg","comment_is_top":false,"comment_ctime":1573546314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573546314","product_id":100039001,"comment_content":"uml的学习成本相对于日常工作使用来说，确实算不上高性价比，很多时候画个草图能表达准确意思就可以了，过度追求uml规范，反而增加团队学习成本，浪费时间。","like_count":0},{"had_liked":false,"id":150497,"user_name":"Z-ll","can_delete":false,"product_type":"c1","uid":1266233,"ip_address":"","ucode":"68A75A53D1455E","user_header":"https://static001.geekbang.org/account/avatar/00/13/52/39/2211b1a2.jpg","comment_is_top":false,"comment_ctime":1573546286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573546286","product_id":100039001,"comment_content":"如果要看书自学设计模式的话，UML图还是躲不过，逃不开。不过，我相信争哥这次能带我们拿下设计模式！ ","like_count":0},{"had_liked":false,"id":150491,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1573544866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573544866","product_id":100039001,"comment_content":"其实UML只需要理解关系种的，组合和聚合的关系就行。实际开发项目中，组合的使用频率比较多","like_count":0},{"had_liked":false,"id":150484,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1573543841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573543841","product_id":100039001,"comment_content":"<br>关于UML学习成本<br>优点是可以串联的很清楚，类似于图形数据库有个手拉手的图形界面，方便理解。相对来说算是很灵活的<br>缺点就是不能动态改变，比如我订单状态变了，前面关联的不能跟着变，除非在后面写的新的，这样又加大了工作量(虽然我一个打工仔一般情况下不用写UML这些)<br>其实这个就像docker是开源一样，既是优点又是缺点<br><br>个人认为面向对象从宽松角度讲，顾名思义，只要把东西当成对象来处理，就能认为它是面向对象。说句不负责任的话，我不是专业的术语规范定义的人，而且就算这种东西规范化了，还是要我去死机硬背对我来说没有一点帮助，我还不如简简单单的记住它就好了。","like_count":0},{"had_liked":false,"id":150479,"user_name":"努力努力再努力m","can_delete":false,"product_type":"c1","uid":1644369,"ip_address":"","ucode":"9DD9E9C2988FFC","user_header":"https://static001.geekbang.org/account/avatar/00/19/17/51/3e13dc0c.jpg","comment_is_top":false,"comment_ctime":1573543415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573543415","product_id":100039001,"comment_content":"UML 的学习成本过高，即使自己懂，别人也未必能看的懂你画的图，所以简单了解即可。","like_count":0},{"had_liked":false,"id":150450,"user_name":"😚 46","can_delete":false,"product_type":"c1","uid":1433535,"ip_address":"","ucode":"EED0EBBBF80A43","user_header":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","comment_is_top":false,"comment_ctime":1573537752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573537752","product_id":100039001,"comment_content":"黑猫、白猫，能抓老鼠的就是好猫。个人觉得没必要花很大的时间和精力投入到这些细节上，首先投入那么多的时间和精力，成本很高，且对于初学者不一定能很好或清晰的表达自己设计的意图，甚至有可能出现滥用的问题。那么，个人认为，可以让他人快速理解自己的设计意图达到目的即可，尽量保持简单。<br>当然，并不是说学习UML就没有用处，在与高手过招时，说不定UML可以让你们像“普通话”一样相见恨晚~<br>总而言之，初学者不建议直接上手UML，而是专注于能够简单、清晰的表达自己的设计即可，随着设计的逐渐熟练，再往UML上靠，可能还会触类旁通，学习UML可能会更加轻松一些。","like_count":0},{"had_liked":false,"id":150415,"user_name":"千里之行","can_delete":false,"product_type":"c1","uid":1543635,"ip_address":"","ucode":"ACE8A9350D2BC0","user_header":"https://static001.geekbang.org/account/avatar/00/17/8d/d3/a56ff736.jpg","comment_is_top":false,"comment_ctime":1573530777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573530777","product_id":100039001,"comment_content":"比较同意老师观点，UML只是表达设计，传递设计的工具，本质上不能优化设计（当然使用UML过程，作者可以自省优化）。本质上我们精力应该更多放在业务和结构上，类的设计以及继承使用，有时是为了实现业务功能（业务类），有时为了代码复用扩展（架构类），过度强调理论过度设计造成的逻辑混乱苦涩难懂，完全抵挡了面向对象的优势和理念。比如很多C项目如nginx目录以及功能模块结构清晰，结构体封装得当，我们丝毫没有受到语言本身不支持四点特性的影响。","like_count":0},{"had_liked":false,"id":150406,"user_name":"尾巴大不掉","can_delete":false,"product_type":"c1","uid":1252823,"ip_address":"","ucode":"60E883118FA5A1","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/d7/78b616fd.jpg","comment_is_top":false,"comment_ctime":1573529179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573529179","product_id":100039001,"comment_content":"Uml其实没必要过度追求，因为在团队中平白无故的增加了学习成本，当时可以学习下，我觉得在学习设计模式时用代码的形式加上简单的图形描述就可以了，非要追求UML的话有点过度设计的感觉，反而浪费时间","like_count":0},{"had_liked":false,"id":150393,"user_name":"Varus","can_delete":false,"product_type":"c1","uid":1715988,"ip_address":"","ucode":"B9CB88C248BD93","user_header":"https://static001.geekbang.org/account/avatar/00/1a/2f/14/840d0925.jpg","comment_is_top":false,"comment_ctime":1573526463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573526463","product_id":100039001,"comment_content":"刚学设计模式，我自己现在写代码的时候感觉无从下手，没有整体的框架结构，不知道学完设计模式之后是不是就可以解决我现有的疑惑呢","like_count":0},{"had_liked":false,"id":150382,"user_name":"飞扬","can_delete":false,"product_type":"c1","uid":1378180,"ip_address":"","ucode":"3F77352FC25DB9","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/84/18d30516.jpg","comment_is_top":false,"comment_ctime":1573525086,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573525086","product_id":100039001,"comment_content":"任何一种工具，当使用它的学习成本大于它能带来的收益的时候，它就会变成一种很可疑的东西。UML就是一个典型。","like_count":0},{"had_liked":false,"id":150372,"user_name":"右耳朵猫咪","can_delete":false,"product_type":"c1","uid":1014984,"ip_address":"","ucode":"3AB186CC780FBB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/c8/8627f5c1.jpg","comment_is_top":false,"comment_ctime":1573523864,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573523864","product_id":100039001,"comment_content":"可以使用powerDesigner或者PDMan画各种图。","like_count":0},{"had_liked":false,"id":150371,"user_name":"2102","can_delete":false,"product_type":"c1","uid":1070298,"ip_address":"","ucode":"A67068F2A3157E","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/da/e2e5ddf7.jpg","comment_is_top":false,"comment_ctime":1573523843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573523843","product_id":100039001,"comment_content":"一些常用的UML表示方法还是要规范的，这是一种有效沟通的手段。这节课并没有UML出现，以后的课再看。","like_count":0},{"had_liked":false,"id":150350,"user_name":"one pencil","can_delete":false,"product_type":"c1","uid":1235938,"ip_address":"","ucode":"E831E77AAA30C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/e2/392bedb9.jpg","comment_is_top":false,"comment_ctime":1573522025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573522025","product_id":100039001,"comment_content":"同意最后关于uml的描述，实际上，日常工作中，我也是类似如此，我觉得画图最主要的目的就是简单直观传达你的意思，最好让非专业同学也看得懂，也不需要太酷炫浮夸，而忽略了本质","like_count":0},{"had_liked":false,"id":150347,"user_name":"roaming","can_delete":false,"product_type":"c1","uid":1039232,"ip_address":"","ucode":"2736679690AB81","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/80/6b7629d7.jpg","comment_is_top":false,"comment_ctime":1573521366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573521366","product_id":100039001,"comment_content":"UML的问题其实还是成本问题，时间成本，沟通成本，在企业里第一位永远是收益，不是标准和规范","like_count":0},{"had_liked":false,"id":150329,"user_name":"安静","can_delete":false,"product_type":"c1","uid":1212758,"ip_address":"","ucode":"ABF1824D24BA2F","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/56/311be282.jpg","comment_is_top":false,"comment_ctime":1573519557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573519557","product_id":100039001,"comment_content":"uml建立模型在开发过程中是一个重要的环节，能够快速理解一个项目。","like_count":0},{"had_liked":false,"id":150322,"user_name":"黄剑","can_delete":false,"product_type":"c1","uid":1204424,"ip_address":"","ucode":"D7F68DE19F41CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/c8/044dd4a2.jpg","comment_is_top":false,"comment_ctime":1573519187,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1573519187","product_id":100039001,"comment_content":"UML几乎就没有画，平时也没有见到有人画。觉得这主要还是看项目需求吧。如果一个项目要做好几年，同时涉及到很多人的画，那UML还是有必要的。","like_count":0},{"had_liked":false,"id":150314,"user_name":"黄剑","can_delete":false,"product_type":"c1","uid":1204424,"ip_address":"","ucode":"D7F68DE19F41CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/c8/044dd4a2.jpg","comment_is_top":false,"comment_ctime":1573518539,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1573518539","product_id":100039001,"comment_content":"JavaScript已经支持封装和继承了","like_count":0},{"had_liked":false,"id":150312,"user_name":"奔跑的小孩","can_delete":false,"product_type":"c1","uid":1304259,"ip_address":"","ucode":"0053193F7A9870","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/21uTMWr7bx5qMibp2hwmGvLbYuj5Aic2dqD3futlNo25eDGDt4t7zzN9cdnj7cVGwTot1U4AyADfWUpqjq1SicgWQ/132","comment_is_top":false,"comment_ctime":1573518421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573518421","product_id":100039001,"comment_content":"基本的概念介绍也挺有用，打卡一下","like_count":0},{"had_liked":false,"id":150310,"user_name":"gray","can_delete":false,"product_type":"c1","uid":1234604,"ip_address":"","ucode":"F4959C9D55A832","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/ac/dafb3a92.jpg","comment_is_top":false,"comment_ctime":1573518173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573518173","product_id":100039001,"comment_content":"我支持简化……","like_count":0},{"had_liked":false,"id":150270,"user_name":"キッド","can_delete":false,"product_type":"c1","uid":1491871,"ip_address":"","ucode":"0773BDAD4ACCEF","user_header":"https://static001.geekbang.org/account/avatar/00/16/c3/9f/2dd26fee.jpg","comment_is_top":false,"comment_ctime":1573487822,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573487822","product_id":100039001,"comment_content":"大三的时候有一门课叫做软件工程，这门课很大一部分就是在讲解如何画好UML图，甚至期末的大作业也是画UML图。毕业两年后已经很久没有画过UML图了，各个箭头的含义啥的都不是很清楚了。。。我觉得在日常的项目开发和沟通中，UML图不是很有必要，如果我可以用一些很简单的图例或者箭头把关系给别人表达清楚，耗时还短我就不会用UML图","like_count":0},{"had_liked":false,"id":150263,"user_name":"佳楠","can_delete":false,"product_type":"c1","uid":1008809,"ip_address":"","ucode":"A1698AE91992AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/a9/27d63f2e.jpg","comment_is_top":false,"comment_ctime":1573486557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573486557","product_id":100039001,"comment_content":"从 UML 学习曲线联想到了最近很火的领域驱动概念，DDD 有很关键的一点，是需要寻求一种在专家 &amp; 用户 &amp; 编码人员之间可以互相沟通的语言，用来对齐领域模型。如果此时选用了一种很复杂的沟通工具，那么势必会影响沟通效率。<br>所以我对 UML 简化的观点是：可以简化，但力求表意明确，前后一致，这样也是不失严谨的。","like_count":0},{"had_liked":false,"id":150260,"user_name":"疯狂的石头","can_delete":false,"product_type":"c1","uid":1179676,"ip_address":"","ucode":"E14331FAA436EE","user_header":"https://static001.geekbang.org/account/avatar/00/12/00/1c/d39cdabd.jpg","comment_is_top":false,"comment_ctime":1573485969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573485969","product_id":100039001,"comment_content":"面向对象编程（OOP），把类和对象作为代码组织的基本单元，然后使用抽象，封装，多态，继承作为基石，根据面向编程的这些特性，使用面向编程语言来实现代码。第一，首先要掌握一门面向编程语言，第二，根据代码的功能进行面向对象分析（OOA），分析我们的代码要具体做什么what，第三分析完以后按照面向对象编程的四大特性来设计，类，类的属性，以及类之间的交互，最终体现在代码里。<br>至于UML画图，个人认为，不论用什么工具画图，只要可以把关系画明白，让大多数的人能够清晰的理解就是好工具。白猫黑猫，能抓住老鼠的就是好猫。","like_count":0},{"had_liked":false,"id":150250,"user_name":"Rain","can_delete":false,"product_type":"c1","uid":1238221,"ip_address":"","ucode":"6A270D922A3B9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","comment_is_top":false,"comment_ctime":1573484562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573484562","product_id":100039001,"comment_content":"对设计模式的学习来说，UML 是个可选项。就是说你不懂UML也能学会设计模式。对设计模式的使用来说，UML是另外一个可选项，当你对设计模式有所掌握之后，自然而然你就想用一种方式去表达出来你的设计，不过你可能觉得UML太复杂了，然后你想啊想，尝试用一个最简单的方式来描述你的设计，最后就发现自己就算不学习那么多的UML理论知识，也能设计出跟UML极其相似的结构图来。然后呢，当你把他讲述给感兴趣的人，发现他们都能听懂。嗯，大概就是这样。读别人的UML感觉复杂，自己写的时候还是忍不住用他。","like_count":0},{"had_liked":false,"id":150242,"user_name":"Tom.G","can_delete":false,"product_type":"c1","uid":1206034,"ip_address":"","ucode":"7929B45C1A51F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/12/5c6eb568.jpg","comment_is_top":false,"comment_ctime":1573483162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573483162","product_id":100039001,"comment_content":"UML是规范，可以更精准的表达，所以我认为还是很有必要的。短期来看成本高，长期来看收益多。所以需要根据场景做取舍。<br>","like_count":0},{"had_liked":false,"id":150240,"user_name":"风行者","can_delete":false,"product_type":"c1","uid":1541934,"ip_address":"","ucode":"F058640CF77A35","user_header":"https://static001.geekbang.org/account/avatar/00/17/87/2e/ea54c240.jpg","comment_is_top":false,"comment_ctime":1573483019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573483019","product_id":100039001,"comment_content":"打卡，以类和对象来作为代码组织的基本单元","like_count":0},{"had_liked":false,"id":150238,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1573482866,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573482866","product_id":100039001,"comment_content":"打卡第二天，什么是面向对象？<br><br><br>学到了<br><br>1、面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元.<br><br><br>2、特性：封装、抽象、继承、多态四个特性，作为代码设计和实现的基石 。<br>       通常说的也有： 封装 继承 多态三个特性. <br><br>3、面向对象重要的两个词： 类 对象.<br><br><br>第二个话题uml<br> 平时基本不画，主要是画流程图.  这个跟随老师一起进行吧.<br><br><br><br><br><br><br>","like_count":0},{"had_liked":false,"id":150232,"user_name":"　扬帆丶启航　","can_delete":false,"product_type":"c1","uid":1235282,"ip_address":"","ucode":"4079D0889CD86C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/52/73351eab.jpg","comment_is_top":false,"comment_ctime":1573482367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573482367","product_id":100039001,"comment_content":"赞同老师简化uml图，毕竟重心不在这里，简化可能更有助我们理解。如果因此额外再去学习uml图，还会加大学习难度。<br><br>","like_count":0},{"had_liked":false,"id":150225,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1573481024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573481024","product_id":100039001,"comment_content":"老师说的没错，uml的问题是需要一定的学习成本，不过在画图人和看图人都懂uml的情况下，uml是能很直接准确的表达类之间的关系的，个人认为反而能节省一定的沟通成本。","like_count":0},{"had_liked":false,"id":150222,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1573480648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573480648","product_id":100039001,"comment_content":"除了老师讲到的is-a，还想到了之前学过的has-a以及like-a。has-a表示一种从属关系（字段属性），like-a表示一种组合关系（接口）。<br>至于uml，我同意老师的观点，不必拘泥于严格的规范，能够达意就好。","like_count":0},{"had_liked":false,"id":150221,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1573480407,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1573480407","product_id":100039001,"comment_content":"虽然UML学习成本高，但是想成为优秀的工程师以致于架构师，UML还是必要的，尤其对于标准的软件设计文档，UML的设计图可以让后来人也能快速理解软件设计思想！这种设计在传统的工业软件行业非常有用，但是在当猛糙快的互联网软件倒是用的比较少，个人理解应该是因为互联网更强调快的原因吧。","like_count":0},{"had_liked":false,"id":150212,"user_name":"cw","can_delete":false,"product_type":"c1","uid":1264296,"ip_address":"","ucode":"82A6B50462F9F9","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/a8/b7e36dd2.jpg","comment_is_top":false,"comment_ctime":1573479360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573479360","product_id":100039001,"comment_content":"本质上，设计模式是为了提高代码的可读性，扩展性 可维护性，而uml本质上是一个 梳理代码功能的工具，如果工具过度复杂且互相不理解 就没必要深究，只需要能把意思表述明确即可，当然 线条不能用错","like_count":0},{"had_liked":false,"id":150208,"user_name":"白衣少年","can_delete":false,"product_type":"c1","uid":1189208,"ip_address":"","ucode":"816060857C9BCD","user_header":"https://static001.geekbang.org/account/avatar/00/12/25/58/dcec342f.jpg","comment_is_top":false,"comment_ctime":1573478707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573478707","product_id":100039001,"comment_content":"赞，不用学习 UML ","like_count":0},{"had_liked":false,"id":150186,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1573475714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573475714","product_id":100039001,"comment_content":"不用UML怎么知道类之间的关系呢？怎么知道采用了哪种设计模式呢？个人觉得面向对象难在抽象","like_count":0},{"had_liked":false,"id":150184,"user_name":"Wisdomore","can_delete":false,"product_type":"c1","uid":1496344,"ip_address":"","ucode":"AAA5BC813C898E","user_header":"https://static001.geekbang.org/account/avatar/00/16/d5/18/921e8c21.jpg","comment_is_top":false,"comment_ctime":1573475465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573475465","product_id":100039001,"comment_content":"其实，人类的“懒”，才是“第一生产力”","like_count":0},{"had_liked":false,"id":150181,"user_name":"tuyu","can_delete":false,"product_type":"c1","uid":1448863,"ip_address":"","ucode":"B235325B541408","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BIRpwViaN51yynIeFonD7QRlwDCVtKibrG956NTxzEqibOZZVjhMMgibOPmd3VicfYxpknZsic1oJq8KicZvXkmmiajuQg/132","comment_is_top":false,"comment_ctime":1573474909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573474909","product_id":100039001,"comment_content":"以前那个画图的小编不画图了吗, 算法加上图让我更爽","like_count":0},{"had_liked":false,"id":150180,"user_name":"Warn","can_delete":false,"product_type":"c1","uid":1465310,"ip_address":"","ucode":"F2F7FCDB0940D0","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/de/152f1c2c.jpg","comment_is_top":false,"comment_ctime":1573474325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573474325","product_id":100039001,"comment_content":"UML作为一种传达沟通的方式或者说工具，确实是因人、因地而异。简单明了的沟通最实用，当然如果形式感更重要，就当我这句话没说。","like_count":0},{"had_liked":false,"id":150178,"user_name":"Smirk","can_delete":false,"product_type":"c1","uid":1230263,"ip_address":"","ucode":"F677072767F0A4","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/b7/87e7e865.jpg","comment_is_top":false,"comment_ctime":1573474082,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573474082","product_id":100039001,"comment_content":"uml这个有意思了，我觉得真的是大实话啊。学习成本高，但是还是挺想学会的....","like_count":0},{"had_liked":false,"id":150162,"user_name":"Lugyedo","can_delete":false,"product_type":"c1","uid":1011793,"ip_address":"","ucode":"EB5E456B638E70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/51/f1825adb.jpg","comment_is_top":false,"comment_ctime":1573471389,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573471389","product_id":100039001,"comment_content":"敏捷开发的初期复杂的UML图不适合，迭代几个版本稳定后是可以画一些图总结一下系统结构和设计","like_count":0},{"had_liked":false,"id":150153,"user_name":"肥而不腻","can_delete":false,"product_type":"c1","uid":1435246,"ip_address":"","ucode":"3E6786A82A6DD6","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/6e/062da5e4.jpg","comment_is_top":false,"comment_ctime":1573469855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573469855","product_id":100039001,"comment_content":"个人理解，需求分析文档和图必备，但是严格按照uml，如文章所说，沟通成本和学习成本太高，一般的公司都不会有这种费力不讨好的要求。。。","like_count":0},{"had_liked":false,"id":150145,"user_name":"Joanfen","can_delete":false,"product_type":"c1","uid":1004260,"ip_address":"","ucode":"4CF1B92337B625","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/e4/50600574.jpg","comment_is_top":false,"comment_ctime":1573468175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573468175","product_id":100039001,"comment_content":"UML 在沟通时成本时比较高，简单的草图或者模型图就可以沟通，但是如果业务复杂，在方案定稿后可以考虑用UML来作为文档的补充说明，是一种比较标准化的方式，能表达的内容和关系也比较多，如果业务相对简单实用模型图和简单的流程图就可以了","like_count":0},{"had_liked":false,"id":150142,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1573468062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573468062","product_id":100039001,"comment_content":"我觉得UML真的是科班出身，搞理论研究的才会清楚。","like_count":0},{"had_liked":false,"id":150139,"user_name":"一颗菜","can_delete":false,"product_type":"c1","uid":1242396,"ip_address":"","ucode":"5458554E264FB6","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/1c/20090248.jpg","comment_is_top":false,"comment_ctime":1573467742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573467742","product_id":100039001,"comment_content":"泛型和委托","like_count":0},{"had_liked":false,"id":150132,"user_name":"wl","can_delete":false,"product_type":"c1","uid":1392730,"ip_address":"","ucode":"45062AA2460F1F","user_header":"https://static001.geekbang.org/account/avatar/00/15/40/5a/e65e8c40.jpg","comment_is_top":false,"comment_ctime":1573466587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573466587","product_id":100039001,"comment_content":"今天学习了面向对象编程与面向对象编程语言的概念。<br>面向对象编程（oop）可以是一种编程范式，也可以是一种编程行为。<br>作为编程范式，会将类或对象作为组织代码的基本单位。<br>作为编程行为，需要面向对象分析（做什么）、面向对象设计（怎么做）、面向对象编程（将想法编程代码）。<br>面向对象编程语言，是支持类或对象的语法机制的。即使不属于面向对象编程语言，也可以使用面向对象来编程；属于面向对象编程语言的语言，在编程时也可以不面向对象编程，可以面向过程编程。<br>不严格来说，支持类或对象的概念，且以它们作为编码基础的语言都就可以认为是面向对象的编程语言。<br>UML 类图，根据自身情况学习。","like_count":0},{"had_liked":false,"id":150126,"user_name":"sdjdd","can_delete":false,"product_type":"c1","uid":1211987,"ip_address":"","ucode":"512F2338DFF793","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/53/c29c2fc9.jpg","comment_is_top":false,"comment_ctime":1573465241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573465241","product_id":100039001,"comment_content":"这篇文章里一个UML图也没有啊，怎么这么多同学挑图过于简单的毛病呢","like_count":0},{"had_liked":false,"id":150124,"user_name":"授人以🐟，不如授人以渔","can_delete":false,"product_type":"c1","uid":1193874,"ip_address":"","ucode":"BD53829E924B66","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","comment_is_top":false,"comment_ctime":1573465005,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573465005","product_id":100039001,"comment_content":"我个人觉得，这门课不需要用 `UML` 来描述了，成本高。能以最低成本让我们这些读者理解核心思想，才是最佳方式。<br><br>`UML` 统一建模语言，就像是其他语言一样，都是用来让别人理解自己的方式和途径。当然我们也可以使用其他的方式，比如草图配上详细的讲解。怎么方便怎么来，这门课的核心和重点在于让我们理解其中的设计原理、思路。","like_count":0},{"had_liked":false,"id":150113,"user_name":"时光流逝x","can_delete":false,"product_type":"c1","uid":1695455,"ip_address":"","ucode":"D7334E717D9ED0","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqUMEsVYklTc7akT2e6pfytu4jTQ88EVe1H6L2eHdXC6G8sbKCvfrnSDUIRq229M2Wt419LX2q8SQ/132","comment_is_top":false,"comment_ctime":1573463653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573463653","product_id":100039001,"comment_content":"在大部分情况下我认为只要能让人快速理解意思的图就是好图,完全没有必要纠结是不是那么的标准，关于面向对象的概念我还能想到的好像只有AOP了。","like_count":0},{"had_liked":false,"id":150105,"user_name":"zYoung","can_delete":false,"product_type":"c1","uid":1183261,"ip_address":"","ucode":"667F136DEE54FF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/IVPDicrgEUa8z0gWIw9DDXXcgFIZViaWf2KTJgW9Y3sAVea8crCDvRRxboOIZbPjEHDiaTTX0Tyr4Qxqk1GocibSAA/132","comment_is_top":false,"comment_ctime":1573462393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573462393","product_id":100039001,"comment_content":"UML 企图用不看代码的方式解释系统设计和实现,其实只是一种工具帮助理解而已,没必要太过依赖和深究,个人简单易懂的 UML 价值更高.","like_count":0},{"had_liked":false,"id":150104,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1573462359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573462359","product_id":100039001,"comment_content":"<br>1. UML只是一套工具,如果工具能够提升工作效率,我们考虑使用它;如果工具未必提升开发效率,我们就倾向于不使用它.重要的是工作效率,而不是为了使用工具而使用工具.所以我赞同作者的观点。<br><br><br>2. 面向对象编程关注对象的状态（status）与行为（behavior）。在Java中，使用成员变量（field）表示对象的状态，使用方法（method）表示对象的行为。","like_count":0},{"had_liked":false,"id":150103,"user_name":"tong467","can_delete":false,"product_type":"c1","uid":1560667,"ip_address":"","ucode":"544F6FB2C5A936","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJjw7KXibCGnibOm3O73xCGyCzdmgKuc017X8IQZCdNvAWxoWxHSgMTLgd7rGs1LCBPaU5oHbO16F0A/132","comment_is_top":false,"comment_ctime":1573462339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573462339","product_id":100039001,"comment_content":"我觉得不是简化UML，而是我们日常可能使用的是他的子集，只使用期部分功能，以达到方便沟通，和自己快速回想功能的作用。<br>面向对象，说起简单，万事万物，都是对象， 每个交互都是对象与对象间的沟通，但是写代码的时候更多时候是以面向过程来书写的。也不知道怎么调整。","like_count":0},{"had_liked":false,"id":150100,"user_name":"KaitoShy","can_delete":false,"product_type":"c1","uid":1038415,"ip_address":"","ucode":"E2E2E9BD3F5048","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/4f/65abc6f0.jpg","comment_is_top":false,"comment_ctime":1573462016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573462016","product_id":100039001,"comment_content":"1. 如果把软件设计当成一个工程来看的话，在时间允许的情况以更清楚的图表达不免是一个好的选择，毕竟标准化的事物容易继承； 而本身项目复杂程序不大，时间紧凑的话，只要能清楚的表达想要做什么就好了，即使是白板上的草图都可以。<br>2. 面向对象分析与设计 与 DDD 设计理念的区别？是不是就是 DDD 的一个子集？","like_count":0},{"had_liked":false,"id":150096,"user_name":"谭棋钊","can_delete":false,"product_type":"c1","uid":1237976,"ip_address":"","ucode":"F7F982BE5978BA","user_header":"https://static001.geekbang.org/account/avatar/00/12/e3/d8/bc70f34a.jpg","comment_is_top":false,"comment_ctime":1573461657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573461657","product_id":100039001,"comment_content":"感觉这节课的精髓就是面向对象是一种思维模式，与编程语言无关，任何编程语言都可以面向对象编程，而面向对象编程语言是方便面向对象编程","like_count":0},{"had_liked":false,"id":150094,"user_name":"真是艹0","can_delete":false,"product_type":"c1","uid":1234043,"ip_address":"","ucode":"0A082CE0D79C6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/7b/74e59208.jpg","comment_is_top":false,"comment_ctime":1573461100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573461100","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":150091,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1573460991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573460991","product_id":100039001,"comment_content":"如果面向对象的四大特性只选择一个的话，我会选择封装。封装划定了函数的边界，类的边界，以及类集合的边界。即使没有抽象，多态和继承，从一个组件开始搭建，也可以完成复杂的功能。<br><br>面向对象的分析和设计是围绕着系统的名词展开的，所有的动词作为名词的附属部分，比较易于理解。","like_count":0},{"had_liked":false,"id":150087,"user_name":"啸风","can_delete":false,"product_type":"c1","uid":1315934,"ip_address":"","ucode":"6DBCA0EC5D4085","user_header":"https://static001.geekbang.org/account/avatar/00/14/14/5e/25f5f8a8.jpg","comment_is_top":false,"comment_ctime":1573460558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573460558","product_id":100039001,"comment_content":"业务建模<br>需求<br>分析<br>设计<br><br>怎样让产品更好卖，怎样减少设计成本","like_count":0},{"had_liked":false,"id":150072,"user_name":"阳光很轻","can_delete":false,"product_type":"c1","uid":1619031,"ip_address":"","ucode":"73408E2DA4F10D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKE7VtDBFkSht6VgE4UZL82SlUrDXKVaGVibJSNXsVhfrPTNQ2OfrrOGu7ugMxwa0osyZibRqZjh5KQ/132","comment_is_top":false,"comment_ctime":1573458603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573458603","product_id":100039001,"comment_content":"UML实际上就是代码组织形式的一种表现形式，个人认为虽然学习成本稍高，但是确实是一种通用的规范化的表达，所以我觉得如果是在我们的课程中，还是需要严谨地表达，避免产生理解上的偏差。","like_count":0},{"had_liked":false,"id":150069,"user_name":"白色月光","can_delete":false,"product_type":"c1","uid":1676686,"ip_address":"","ucode":"4BD7973C2D738E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2QhWmbHaiauPUDNCdk756uLdK9oVwHaaGUEzichnGbgictRFApHicKJoAY9ic3A4vhIxnvwd2uRcuiavNDUFicwaVUq0w/132","comment_is_top":false,"comment_ctime":1573457695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573457695","product_id":100039001,"comment_content":"uml图是为了传达明确的设计意图，遵循最基本的规范能够达到意图明确的效果就行了。","like_count":0},{"had_liked":false,"id":150056,"user_name":"发光如星","can_delete":false,"product_type":"c1","uid":1087348,"ip_address":"","ucode":"1176C2EB6CC401","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/74/49d150d7.jpg","comment_is_top":false,"comment_ctime":1573455277,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573455277","product_id":100039001,"comment_content":"不懂uml类图，不过对于自己理清思路应该是很有帮助的，我们大部分程序员是用面向对象语言写面向过程代码","like_count":0},{"had_liked":false,"id":150049,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1573453619,"is_pvip":false,"replies":[{"id":"57807","content":"会考虑一部分关系，有些关系确实没有实际的意义，后面会讲到","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573514907,"ip_address":"","comment_id":150049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573453619","product_id":100039001,"comment_content":"想问下实际生产生发中，有哪些同学在设计类时，会考虑类与类之间是泛化、实现、关联、聚合、组合还是依赖的？<br>另外想问下，之后的专栏会讲解这些关系在生产中有什么指导意义吗？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474049,"discussion_content":"会考虑一部分关系，有些关系确实没有实际的意义，后面会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573514907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150036,"user_name":"学好习，做好人","can_delete":false,"product_type":"c1","uid":1205294,"ip_address":"","ucode":"C991643DB458E2","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/2e/e70a317a.jpg","comment_is_top":false,"comment_ctime":1573451329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573451329","product_id":100039001,"comment_content":"UML类图可以不作为团队设计沟通的桥梁，但是对于每个人来说是有意义的，如果你的设计是杂乱无序的，那么画一下UML类图，可以显而易见的看到代码设计中杂乱的类，杂乱的对象，对于以后更好的重构其实是有积极的意义的<br>对于面向对象编程有一句话：万物皆对象，接口也可以认为是对象，即提倡要面向接口编程，但是在工作中发现这么一个问题，就是接口无处不在，项目中到处都是接口，接口最大的作用就是解耦，即实现与调用解耦，这似乎也是唯一体现的一个设计原则了，但是我感觉写代码的人为什么要设计为接口是没有一个明确的思考的，在Spring Cloud中，不设计成接口是不是我们没法复用了，显然对于那些设计成单一接口，单一功能的代码是不对的，脱离接口本身，这还是一个面向过程的逻辑。是不是更应该思考功能本身，业务本身，产品本身来设计接口而不是就面向接口编程而就设计接口呢。<br>最后一个问题：经常将面向接口与面向对象的概念弄混了，今天按照自己的理解总结下自己的理解：接口也可以任何是对象，面向接口从属于面向对象，但是面向接口不等于面向对象，面向对象是一个大的概念，面向接口编程是提倡的比较好的编程习惯，就像设计原则中的依赖倒置原则，要依赖于抽象而不是依赖于具体。将接口，抽象，多态用好真的是个很难的工作，请老师指正","like_count":0},{"had_liked":false,"id":150031,"user_name":"中世纪的knight","can_delete":false,"product_type":"c1","uid":1121710,"ip_address":"","ucode":"783D49A83D2441","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/ae/f78ce0d7.jpg","comment_is_top":false,"comment_ctime":1573450611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573450611","product_id":100039001,"comment_content":"UML确实复杂，《Head First 设计模式》一书中用的就不是标准的UML，简单的类图关系，再配上一些文字说明，很容易就看懂了。如果是标准的UML，那估计要先去学学UML，才能看懂在这些图","like_count":0},{"had_liked":false,"id":150022,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1573448175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573448175","product_id":100039001,"comment_content":"面向对象是一种思想","like_count":0},{"had_liked":false,"id":150021,"user_name":"NicholasKong","can_delete":false,"product_type":"c1","uid":1263678,"ip_address":"","ucode":"AD35217CA0C76D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er96OxUXwmONhgCAk2hpSkPqdQNuYpPC05JPeqZwL3pO0Aexom4CKj9vauXqMkZibPCIEbRNj6S6Cw/132","comment_is_top":false,"comment_ctime":1573447256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573447256","product_id":100039001,"comment_content":"UML没有必要一定严格的追寻标准，只需要大家在一定的程度打成共识，并且都可以读懂就好，只是一种可视化思想的工具。","like_count":0},{"had_liked":false,"id":150017,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1573445680,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573445680","product_id":100039001,"comment_content":"UML现在常画，理解各种关系用什么图形本身就是一个思考的过程。团队中确实不是每个人都熟悉，但还是会向小伙伴通过这个来表达自己的设计和观点~","like_count":0},{"had_liked":false,"id":150015,"user_name":"kkk","can_delete":false,"product_type":"c1","uid":1453027,"ip_address":"","ucode":"FB4BFD00618699","user_header":"","comment_is_top":false,"comment_ctime":1573445361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573445361","product_id":100039001,"comment_content":"同意老师的看法，uml没有必要花太多时间，重要的是理解设计模式的思想，更好的去表达自己的看法，和理解别人的想法","like_count":0},{"had_liked":false,"id":150012,"user_name":"筱乐乐哦","can_delete":false,"product_type":"c1","uid":1307611,"ip_address":"","ucode":"AE92539F0419C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/db/5b7a8fd8.jpg","comment_is_top":false,"comment_ctime":1573445007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573445007","product_id":100039001,"comment_content":"期待争哥的快速更新，没看过瘾","like_count":0},{"had_liked":false,"id":150007,"user_name":"葛学强","can_delete":false,"product_type":"c1","uid":1619767,"ip_address":"","ucode":"76A0CC9E1B54DC","user_header":"https://static001.geekbang.org/account/avatar/00/18/b7/37/171c307e.jpg","comment_is_top":false,"comment_ctime":1573444224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573444224","product_id":100039001,"comment_content":"您平时工作中做设计使用的啥，专栏中就怎么表达","like_count":0},{"had_liked":false,"id":150004,"user_name":"Cheng","can_delete":false,"product_type":"c1","uid":1543326,"ip_address":"","ucode":"264C35C2DE20AF","user_header":"https://static001.geekbang.org/account/avatar/00/17/8c/9e/e4da36d2.jpg","comment_is_top":false,"comment_ctime":1573443773,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573443773","product_id":100039001,"comment_content":"我是在工作中的设计文档中接触UML。先是知道了箭头和对应的代码，通过代码知道了对应的关系，反反复复几次下来就熟了，感觉学起来还挺快。","like_count":0},{"had_liked":false,"id":149999,"user_name":"Heiky","can_delete":false,"product_type":"c1","uid":1623626,"ip_address":"","ucode":"03AA79E1BC4AE4","user_header":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","comment_is_top":false,"comment_ctime":1573442995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573442995","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":149998,"user_name":"HF","can_delete":false,"product_type":"c1","uid":1112811,"ip_address":"","ucode":"0839195346C3CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/eb/84d4de33.jpg","comment_is_top":false,"comment_ctime":1573442972,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573442972","product_id":100039001,"comment_content":"UML来描述设计模式一般只绘制类图，如果只是类图，那几种关系，对于学这门课的或者从事这门行业的人来说，都会有自觉性，所以如果标准化UML大家建立一套共用的语言是没有问题的，不能增加灵活性而改变了制定一套大家共有规约的机制。","like_count":0},{"had_liked":false,"id":149995,"user_name":"moqifei","can_delete":false,"product_type":"c1","uid":1358410,"ip_address":"","ucode":"E0A6C858B78A3A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGovXf8jNP5ZqHsDKLwajjicbFwpX9on1xiaJDR4CgWaWP2KcfOdneasBfKFo3dO3dwQyGG6WjK40w/132","comment_is_top":false,"comment_ctime":1573442859,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573442859","product_id":100039001,"comment_content":"UML是否推荐使用——看公司对文档的重视程度，大厂不重视，某些国企很重视。","like_count":0},{"had_liked":false,"id":149991,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1573442243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573442243","product_id":100039001,"comment_content":"面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做?<br>问题：任何需求分析和设计好像都一样呀，搞清楚做什么，搞清楚怎么做，不太理解和面向对象有什么关系？","like_count":0},{"had_liked":false,"id":149987,"user_name":"岁月如歌","can_delete":false,"product_type":"c1","uid":1428828,"ip_address":"","ucode":"1AEBD6F79941B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QFE00aXGzaS6ibbfJSJsDrpIkqs0OrIYjzZv6L9vZmMhOlut2j24iaeZb0MCQazToE6FRXN960nNiaTrsmw09YjGw/132","comment_is_top":false,"comment_ctime":1573441509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573441509","product_id":100039001,"comment_content":"1、UML复杂度太高，课程更多侧重学习代码设计，图形简单达意，如简单的类图表单依赖关系即可。<br>2、在学校刚接触学习C++示例：将Bank银行账户封装私有化，只暴露部分接口提升账号安全性，另一个作用提升安全性。","like_count":0},{"had_liked":false,"id":149984,"user_name":"2018","can_delete":false,"product_type":"c1","uid":1107371,"ip_address":"","ucode":"4C2CD47AD70177","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/ab/6fab2492.jpg","comment_is_top":false,"comment_ctime":1573440962,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573440962","product_id":100039001,"comment_content":"打卡打卡","like_count":0},{"had_liked":false,"id":149977,"user_name":"Wiggins","can_delete":false,"product_type":"c1","uid":1078222,"ip_address":"","ucode":"021EE98CF0E4EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/73/ce/23bd3997.jpg","comment_is_top":false,"comment_ctime":1573439791,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1573439791","product_id":100039001,"comment_content":"的确在面向对象编程中 主要还是处理的逻辑 那在不使用UML图就能理清楚的情况下 的确也不需要 这样其他人也能更方便看懂 uml图等其他工具都是为了让事情变清晰变简单 而不是炫技","like_count":0},{"had_liked":false,"id":149976,"user_name":"董泽","can_delete":false,"product_type":"c1","uid":1640304,"ip_address":"","ucode":"3A9C52A40C05E7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epqhr6k2GrXDicNBGeYjzwrDfuwMaa21HRSdcKBvib1cK4E6CibvrdO1iawdzh330nRMoyobhfe3PxqVQ/132","comment_is_top":false,"comment_ctime":1573439727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573439727","product_id":100039001,"comment_content":"UML学习重在理解和表达，千万不能咬文嚼字，舍本逐末","like_count":0},{"had_liked":false,"id":149972,"user_name":"zyl","can_delete":false,"product_type":"c1","uid":1497036,"ip_address":"","ucode":"AF81C8BC1650AA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZVmxwJ6nvwpTibsDUntexFy76LnlEqtnVnnia5bycOyk5kIGuwYn6QYhDIicsLtBIb81EJbibcMSdKh3UShA1q2sicQ/132","comment_is_top":false,"comment_ctime":1573439315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573439315","product_id":100039001,"comment_content":"看懂UML还是需要一些基础的，对比文字或语音，UML结构图可以更好更透彻更深刻的理解设计模式建立的结构，支持+1","like_count":0},{"had_liked":false,"id":149970,"user_name":"aiwen","can_delete":false,"product_type":"c1","uid":1104346,"ip_address":"","ucode":"504F06CCC7B4FB","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/da/23a4a0c4.jpg","comment_is_top":false,"comment_ctime":1573438980,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573438980","product_id":100039001,"comment_content":"面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做，这……","like_count":0},{"had_liked":false,"id":149969,"user_name":"dingdongfm","can_delete":false,"product_type":"c1","uid":1564213,"ip_address":"","ucode":"7D17D2BC392A66","user_header":"","comment_is_top":false,"comment_ctime":1573438817,"is_pvip":false,"replies":[{"id":"58372","content":"所以，我个人觉得有的时候，UML本身增加了沟通成本。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573790167,"ip_address":"","comment_id":149969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573438817","product_id":100039001,"comment_content":"对于UML类图，之前看资料一直有一个非常大的困惑：同样的代码，在书\\网课\\IDE中生成的类图都不一致；甚至同一款IDE的不同版本生成的类图也不一致。困惑至今，真不知道应该怎么解决这个问题，能否分享下您的经验？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474025,"discussion_content":"所以，我个人觉得有的时候，UML本身增加了沟通成本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149968,"user_name":"L🚲🐱","can_delete":false,"product_type":"c1","uid":1577856,"ip_address":"","ucode":"08A012739614DE","user_header":"https://static001.geekbang.org/account/avatar/00/18/13/80/2c9da1b1.jpg","comment_is_top":false,"comment_ctime":1573438768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573438768","product_id":100039001,"comment_content":"uml 类图自己使用, 只要能达意就可以了, 接口 抽象类也属于面向对象","like_count":0},{"had_liked":false,"id":149966,"user_name":"胖子","can_delete":false,"product_type":"c1","uid":1151825,"ip_address":"","ucode":"DCFFE561092017","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLsuPxIWODMCRszB2nvTExr3oXh6V6MBDefgB6DmEJZjDLKL4DyAvlWWJUibFfRMWGOUiasfciaUs43w/132","comment_is_top":false,"comment_ctime":1573438359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573438359","product_id":100039001,"comment_content":"我觉得还是有掌握UML类图的必要的,比如大家在一起review代码的时候,讲解一些自定义Class类的关系的时候,能够比较直观,更加方便其它的同事理解,和记忆.","like_count":0},{"had_liked":false,"id":149965,"user_name":"塔兹米","can_delete":false,"product_type":"c1","uid":1425252,"ip_address":"","ucode":"1A58C81EF9B0A4","user_header":"https://static001.geekbang.org/account/avatar/00/15/bf/64/c9a0e913.jpg","comment_is_top":false,"comment_ctime":1573437494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573437494","product_id":100039001,"comment_content":"打卡！认同老师观点，适当简化UML图。能表达意思即可","like_count":0},{"had_liked":false,"id":149964,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1573437175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573437175","product_id":100039001,"comment_content":"UML虽然难记，但对应的概念确实面向对象设计的精髓","like_count":0},{"had_liked":false,"id":149955,"user_name":"Kevinlvlc","can_delete":false,"product_type":"c1","uid":1176980,"ip_address":"","ucode":"90DFD58CED138C","user_header":"https://static001.geekbang.org/account/avatar/00/11/f5/94/67fabf8e.jpg","comment_is_top":false,"comment_ctime":1573435961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573435961","product_id":100039001,"comment_content":"关于抽象为什么不算是面向对象的特征:<br>我认为抽象其实是任何软件设计所必须的特点，因为一段代码要完成哪些功能，这个设计过程本身就是抽象的过程，不管是面相对象还是面相过程，都具备抽象的特征，所以这并不是面相对象独有的","like_count":0},{"had_liked":false,"id":149953,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1399673,"ip_address":"","ucode":"929E3FFD14EFC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/79/d55044ac.jpg","comment_is_top":false,"comment_ctime":1573435560,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573435560","product_id":100039001,"comment_content":"UML学习成本高，也从侧面反映了面向对象编程没那么简单，把UML学通了，面向对象也差不多通了","like_count":0,"discussions":[{"author":{"id":1022247,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","nickname":"阿卡牛","note":"","ucode":"0BC43A904C3199","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48151,"discussion_content":"只能算有理论，离实际写代码还差完了 ：)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573453688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149952,"user_name":"一粟","can_delete":false,"product_type":"c1","uid":1058773,"ip_address":"","ucode":"2EE966F3C36B5F","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/d5/0fd21753.jpg","comment_is_top":false,"comment_ctime":1573435542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573435542","product_id":100039001,"comment_content":"开始学习","like_count":0},{"had_liked":false,"id":149951,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1573435484,"is_pvip":false,"replies":[{"id":"57681","content":"我觉得没有太大帮助","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573435926,"ip_address":"","comment_id":149951,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1573435484","product_id":100039001,"comment_content":"Uml类图的学习是否对源码阅读有帮助呢","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474020,"discussion_content":"我觉得没有太大帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573435926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239557,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","nickname":"一道阳光","note":"","ucode":"F35207CCCEC6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47942,"discussion_content":"我觉得有帮助吧，看源码时分析到细节里，各种类相互依赖，复杂的调用会直接看蒙，可能我技术层次太低了，只好借助uml来分析。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573436981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149950,"user_name":"废材姑娘","can_delete":false,"product_type":"c1","uid":1047537,"ip_address":"","ucode":"6AFB48B2A4939A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/f1/a2cde35e.jpg","comment_is_top":false,"comment_ctime":1573435462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573435462","product_id":100039001,"comment_content":"觉得UML自己用的时候随便想怎么画都行，但是如果生成文档给别人看，还是规范点吧，不然很容易误导","like_count":0},{"had_liked":false,"id":149946,"user_name":"梁军","can_delete":false,"product_type":"c1","uid":1521145,"ip_address":"","ucode":"81E22EFAFD77B4","user_header":"https://static001.geekbang.org/account/avatar/00/17/35/f9/7a682fc1.jpg","comment_is_top":false,"comment_ctime":1573435152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573435152","product_id":100039001,"comment_content":"对于uml我觉得还是尽量符合规范要好吧，毕竟学知识还是严谨点好，来看这个专栏的应该基础什么的都还行吧，如果画图是必须的，可以简单讲解一下，这样后续的课程应该也会问题不大，当然，可能需要自己下去补补课了","like_count":0},{"had_liked":false,"id":149943,"user_name":"FelixFly","can_delete":false,"product_type":"c1","uid":1160461,"ip_address":"","ucode":"1D39A7C3D0E31F","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/0d/0e65dee6.jpg","comment_is_top":false,"comment_ctime":1573434940,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573434940","product_id":100039001,"comment_content":"UML的规范还是要有的，不然每个人的表达表述都不一样，难以形成通用语言。规范不是约束，而是让事情进展的更顺序，沟通更方便，就比如现实世界的红绿灯，没有红路灯的时候会出现杂乱无章，有了红绿灯就能井然有序，就是让人们怎么遵守红绿灯。这样就回到了怎么准守UML的规范，一定的学习还是要有，不一定要全部把UML规范学习一遍，可以采用边用边学的方式循序渐进","like_count":0},{"had_liked":false,"id":149942,"user_name":"不与三季人说","can_delete":false,"product_type":"c1","uid":1693164,"ip_address":"","ucode":"A3F03832309FDD","user_header":"https://static001.geekbang.org/account/avatar/00/19/d5/ec/3d6e7ea7.jpg","comment_is_top":false,"comment_ctime":1573434816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573434816","product_id":100039001,"comment_content":"UML图确实很重要，但是学起来比较费时，如果严格高标准的要求自己，还是要学习掌握的，公司用到标准uml图的可能不大，但是一些优秀框架优秀项目的文档中，是一定用标准的uml图的，如果掌握了uml对于后续的学习帮助应该是很大的，只能慢慢一步一步的学，uml很复杂，也是一个很基础的东西。<br>今天主要说了oop  ood  ooa，我基础还行感觉都能理解，并且感同身受，大学里刚接触面向对象和面向过程的时候真的是只知道概念不知道啥意思，只能说用的多了自然就感觉到两者的区别了。今天的课对我来说比较轻松，期待下一期！","like_count":0},{"had_liked":false,"id":149929,"user_name":"醉比","can_delete":false,"product_type":"c1","uid":1248399,"ip_address":"","ucode":"79E65F62BE7809","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/8f/4ebd303a.jpg","comment_is_top":false,"comment_ctime":1573433764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573433764","product_id":100039001,"comment_content":"我想正是因为UML图的设计成本高，所以这么久以来接触到的机会很少，但是我感觉这又是一个程序员必备的技能，应该值得我们花时间去学习一下。","like_count":0},{"had_liked":false,"id":149927,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1573433583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573433583","product_id":100039001,"comment_content":"复杂系统的uml确实不好理解，但不管是uml，还是手写草图，主要目的表达清楚就OK，但是也要确保不能有太大歧义，否则得不偿失。","like_count":0},{"had_liked":false,"id":149923,"user_name":"bearlu","can_delete":false,"product_type":"c1","uid":1030862,"ip_address":"","ucode":"14F260C8B24E27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/ce/fd45714f.jpg","comment_is_top":false,"comment_ctime":1573433322,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573433322","product_id":100039001,"comment_content":"面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性，作为代码设计和实现的基石 。现在继承可以通过组合替换。","like_count":0},{"had_liked":false,"id":149921,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1573432834,"is_pvip":true,"replies":[{"id":"57678","content":"马上就会讲到的，别急","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573435677,"ip_address":"","comment_id":149921,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573432834","product_id":100039001,"comment_content":"<br>老师应该讲讲“类”和“接口”实现多态有什么区别。因为接口也能实现多态，例如在golang中放弃了继承，而是使用了接口。<br>Interfaces make the code more flexible, scalable and it’s a way to achieve polymorphism in Golang.<br><br>另外UML类图可以简化，但还要符合规范，尤其是箭头等特殊符号，用到什么到时注视一下即可。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474013,"discussion_content":"马上就会讲到的，别急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573435677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149912,"user_name":"geeklyc","can_delete":false,"product_type":"c1","uid":1264061,"ip_address":"","ucode":"F25441AB6433B3","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/bd/ae37990b.jpg","comment_is_top":false,"comment_ctime":1573432132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573432132","product_id":100039001,"comment_content":"UML还是规范点好，不规范可能对UML的误解。","like_count":0},{"had_liked":false,"id":149910,"user_name":"指尖流逝","can_delete":false,"product_type":"c1","uid":1005381,"ip_address":"","ucode":"417009F674FAF1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/45/c418ea5c.jpg","comment_is_top":false,"comment_ctime":1573431868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573431868","product_id":100039001,"comment_content":"UML作为一种交流的媒介，只是在建立交流双方彼此之间的“概念共识”。如果存在另一种简单的“共识工具”能促进交流的顺畅和无差异表达，那么UML也不是一定要在设计中使用了","like_count":0},{"had_liked":false,"id":149906,"user_name":"DigDeeply","can_delete":false,"product_type":"c1","uid":1239008,"ip_address":"","ucode":"113F4D755A1FEC","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/e0/33521e13.jpg","comment_is_top":false,"comment_ctime":1573431377,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573431377","product_id":100039001,"comment_content":"我觉得uml很重要，其实它完全可以是文档的一部分，让一个参与项目的新人，能够快速的读懂代码结构设计的思路，甚至有可能描述出产品需求文档中都没有描述清楚的地方，当然它的更新成本确实很高，这也是所有文档类管理的一个通病。","like_count":0,"discussions":[{"author":{"id":1206787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/03/cb597311.jpg","nickname":"远心","note":"","ucode":"1157202C315655","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48197,"discussion_content":"新人未必都懂 UML","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573461290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149904,"user_name":"koo","can_delete":false,"product_type":"c1","uid":1149276,"ip_address":"","ucode":"D612E52B5D90BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/5c/89f7bc6b.jpg","comment_is_top":false,"comment_ctime":1573431314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573431314","product_id":100039001,"comment_content":"UML在编程设计中实用性还是很高的，目前正在努力学习中，建议有时间和精力的可以提前学习积累起来。","like_count":0},{"had_liked":false,"id":149903,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1573431312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573431312","product_id":100039001,"comment_content":"Uml确实相对来说比较难懂。只要能理解对象之间的关系，肯定是怎么方便怎么来吧。","like_count":0},{"had_liked":false,"id":149902,"user_name":"艾斯","can_delete":false,"product_type":"c1","uid":1001543,"ip_address":"","ucode":"4F9643096CF57E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/47/6f239b14.jpg","comment_is_top":false,"comment_ctime":1573431187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573431187","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":149898,"user_name":"泰伦卢","can_delete":false,"product_type":"c1","uid":1141994,"ip_address":"","ucode":"FEA6B43C8D4FF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/ea/e03fec22.jpg","comment_is_top":false,"comment_ctime":1573431001,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573431001","product_id":100039001,"comment_content":"对于UML，用什么工具感觉不重要，能解决问题就好，华丽的辞藻不一定比通俗易懂更好。","like_count":0},{"had_liked":false,"id":149891,"user_name":"allean","can_delete":false,"product_type":"c1","uid":1051470,"ip_address":"","ucode":"A0D2DB4F219EAA","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/4e/fd946cb2.jpg","comment_is_top":false,"comment_ctime":1573430387,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573430387","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":149884,"user_name":"力主道","can_delete":false,"product_type":"c1","uid":1178870,"ip_address":"","ucode":"8C2BE1B9B10A28","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/f6/d50bfaf4.jpg","comment_is_top":false,"comment_ctime":1573429096,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573429096","product_id":100039001,"comment_content":"还是有用吧，毕竟画出来，比较容易理解流程，比较形象，没有直接说，想那么抽象。同时，易于保存，在后面再来看的时候，可以方便理解架构。","like_count":0},{"had_liked":false,"id":149878,"user_name":"aya","can_delete":false,"product_type":"c1","uid":1325690,"ip_address":"","ucode":"F50E350DCF72D6","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/7a/a68f0ff8.jpg","comment_is_top":false,"comment_ctime":1573428351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573428351","product_id":100039001,"comment_content":"面向对象更类似潜意识，我也看过几本相关的书，也能说出一些想法，但始终不全面，不像面向过程，简单直接，希望能和王争老师一道学好这种思维方式。","like_count":0},{"had_liked":false,"id":149877,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1573427911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573427911","product_id":100039001,"comment_content":"其他编程范式也有抽象的特性，它不是面向对象特有的，所以有人认为不应作为面向对象的一个特性","like_count":0},{"had_liked":false,"id":149864,"user_name":"一木成林","can_delete":false,"product_type":"c1","uid":1462499,"ip_address":"","ucode":"F853BDB8D4BFAB","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/e3/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1573409979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573409979","product_id":100039001,"comment_content":"面向对象主要是因为符合人类的思维习惯，这样写程序更加容易理解。","like_count":0},{"had_liked":false,"id":149860,"user_name":"yonyoupht","can_delete":false,"product_type":"c1","uid":1120025,"ip_address":"","ucode":"9B3AC96150B8AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/19/46fcde38.jpg","comment_is_top":false,"comment_ctime":1573405132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573405132","product_id":100039001,"comment_content":"迫不及待的读完了正式更新的第一节，对于面向对象，从概念上有了更清晰的认识。关于UML，作为一种设计工具，它遵循一套标准与规范，如果从设计的角度来说，UML确实很专业，但是就像王争老师说的那样，它的学习成本是有的，而且程序员之间的沟通有时候几张草图就完全搞定。本身是个好工具，就要看我们怎么使用吧。","like_count":0},{"had_liked":false,"id":149858,"user_name":"WIZ","can_delete":false,"product_type":"c1","uid":1260348,"ip_address":"","ucode":"313AF84674475C","user_header":"https://static001.geekbang.org/account/avatar/00/13/3b/3c/2947127c.jpg","comment_is_top":false,"comment_ctime":1573403933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573403933","product_id":100039001,"comment_content":"打卡！1.我认为UML作为一种语言，单独一本书都讲解不完，如果是需要非常正规专业化即对UML需求很高的情况下，那么就有必要花时间以及精力拿下。若是像现在一样，学习其他内容，那么完全没有必要，在面向对象的分析和设计过程中，我们主要是想通过画图的方式来表达清楚各个类之间的关联，明确易懂我觉得是首要，就像vs中的类图一样，很好用。2.目前接触的和了解的，只涉及到分析设计和编程，再就只有四大特性的具体分析了。","like_count":0},{"had_liked":false,"id":149847,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1573401648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573401648","product_id":100039001,"comment_content":"第一个","like_count":0},{"had_liked":false,"id":149871,"user_name":"王争","can_delete":false,"product_type":"c1","uid":1190123,"ip_address":"","ucode":"2B611BE0E0EDD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","comment_is_top":true,"comment_ctime":1573424039,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"9.2233729489613005e+18","product_id":100039001,"comment_content":"在这篇文章中，“面向对象编程”一词多义，不同的场景、语境下，解释不同。文章中没有点到这一点，我这里稍微补充说明一下：<br>1. 文章前半部分，面向对象编程指的是一种编程风格或者范式。<br>2. 文章后半部分，在讲到面向对象分析、设计、编程的时候，面向对象编程是一种行为。","like_count":212,"discussions":[{"author":{"id":1440349,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fa/5d/735fdc76.jpg","nickname":"╭(╯ε╰)╮","note":"","ucode":"4CB5FAEEE8CC5D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157147,"discussion_content":"&#34;根据函数跟异常是否有业务相关性&#34;\n\n这一点让我感觉到了底层函数隐式依赖了上层业务逻辑，这样不好吧？\n\n我的项目中是把id生成气的代码copy一份 ，不同的模块进行自己的魔改。\n\n如果把id生成器的代码以jar包的方式提供给别人使用，那么怎么抛异常是我说了算，不好用我再改个版本号重新给到你，你来选择用那个版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580447334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149961,"user_name":"王争","can_delete":false,"product_type":"c1","uid":1190123,"ip_address":"","ucode":"2B611BE0E0EDD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","comment_is_top":true,"comment_ctime":1573436607,"is_pvip":false,"discussion_count":34,"race_medal":0,"score":"9.2233726139538002e+18","product_id":100039001,"comment_content":"UML中定义了类之间的关系：泛化、实现、关联、聚合、组合、依赖，试问下小伙伴们，你们都能搞清楚这几个的区别吗？能否准确的用不同的箭头、图线来画出来吗？即便你能画出来，团队里的小伙伴都能看懂吗？  不过，关于类之间的关系，我后面会在实战篇中讲到的，但是，我会简化成四种关系，更好理解。","like_count":135},{"had_liked":false,"id":150014,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1573445057,"is_pvip":true,"discussion_count":6,"race_medal":0,"score":"774667558337","product_id":100039001,"comment_content":"关于uml类图引起了大家的广泛讨论。我同意老师的观点，uml类图还是太复杂了。我给大家一个链接。Uml类图是不用记的。用的时候看一下cheat sheet就行。https:&#47;&#47;github.com&#47;gdhucoder&#47;Algorithms4&#47;blob&#47;master&#47;designpattern&#47;pic&#47;umlcheatsheet.jpg","like_count":181,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499079,"discussion_content":"会，但为了清晰、易于理解，多几个异常也未尝不可啊\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592831657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150259,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/ae476935.jpg","comment_is_top":false,"comment_ctime":1573485677,"is_pvip":true,"discussion_count":10,"race_medal":2,"score":"499789692013","product_id":100039001,"comment_content":"Day007 04<br>关于 UML 推荐一本书《Java Modeling In Color With UML》和一个神器：https:&#47;&#47;app.zenuml.com","like_count":117,"discussions":[{"author":{"id":1359618,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/02/0965cf33.jpg","nickname":"Xiao Peng","note":"","ucode":"9F90B694559374","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71344,"discussion_content":"感谢推荐欢迎交流和意见建议。ZenUML作者（我怎么记得回复过了🙃）","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1575413555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2416157,"avatar":"https://static001.geekbang.org/account/avatar/00/24/de/1d/c1bd26dc.jpg","nickname":"我不是黄蓉我不会武功","note":"","ucode":"E4BE01B01AF1BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343861,"discussion_content":"这个工具不错哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611198521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1728278,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/5f/16/e0946ab5.jpg","nickname":"我爱吃桃子","note":"","ucode":"897172BD6987CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307708,"discussion_content":"这个工具怎么用啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600740458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1516167,"avatar":"https://static001.geekbang.org/account/avatar/00/17/22/87/e7bd2acf.jpg","nickname":"DZZ","note":"","ucode":"C8E4C4B089BCE2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298339,"discussion_content":"Mark ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597251572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612372,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9a/54/5d51fda4.jpg","nickname":"婷","note":"","ucode":"1264B8F777B7CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209765,"discussion_content":"好东西 谢谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584670650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147385,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/f9/3508b638.jpg","nickname":"Andy_Ron","note":"","ucode":"A6963B60B326AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":168350,"discussion_content":"书好老啊，工具不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581574652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1263932,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","nickname":"静静聆听","note":"","ucode":"0A8600CB928EFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":150163,"discussion_content":"只能画序列图么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579789810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319513,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/59/781b6fa5.jpg","nickname":"JOsuny","note":"","ucode":"5F36D3D1AF83EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126986,"discussion_content":"为什么我看不到那个图呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578556952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347792,"avatar":"https://static001.geekbang.org/account/avatar/00/14/90/d0/48037ba6.jpg","nickname":"李跃爱学习","note":"","ucode":"F25C038C86324A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70249,"discussion_content":"神器不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575338152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595158,"avatar":"https://static001.geekbang.org/account/avatar/00/18/57/16/b7b4fe79.jpg","nickname":"long","note":"","ucode":"8424683A801718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52405,"discussion_content":"这个工具不错哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574047835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150092,"user_name":"卢爱飞","can_delete":false,"product_type":"c1","uid":1347184,"ip_address":"","ucode":"35B036B4E34401","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/70/d72656e0.jpg","comment_is_top":false,"comment_ctime":1573461029,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"349465812005","product_id":100039001,"comment_content":"我理解的是要因场景而异，但是最终的目的都是降低沟通的成本。<br>场景1：在大多数人对UML不是很熟练的情况下，如果采用UML来进行沟通，大家在理解上一定会存在Gap，无形之中会提高学习和沟通的成本，在这种情况下，建议不使用UML。举个例子，《实现领域驱动》的作者一开始是使用UML和领域专家沟通，作者认为UML很简单，但是许多领域专家或开发人员并不能很好地理解，最后又出现了ES（事件风暴）的形式来替代。<br>场景2：如果需要准确传达设计意图，还是需要UML这样的通用设计工具的，目的也是降低沟通的成本。例如，架构师的设计理念想准确传达给工程师，如果使用UML工具，可以避免模糊意图，带来额外的沟通成本。<br>敏捷宣言的第一条就是“个体和沟通”高于“流程和工具”。所以要因人而异，因场景而异，在专栏里“很多类图我并没有完全遵守 UML 的规范标准”的策略，我想是一个不错的折中。","like_count":81,"discussions":[{"author":{"id":1543326,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/9e/e4da36d2.jpg","nickname":"Cheng","note":"","ucode":"264C35C2DE20AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73855,"discussion_content":"我觉得还是要上UML，本身不难，用几次就熟了。不能因为这次不熟弃用，以后一直弃用。“个体和沟通”高于“流程和工具”是不错，但是这话也不是这么机械的理解，UML是为了更好的沟通，不是一种流程和工具，本身也不违背这个原则。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1575602324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347792,"avatar":"https://static001.geekbang.org/account/avatar/00/14/90/d0/48037ba6.jpg","nickname":"李跃爱学习","note":"","ucode":"F25C038C86324A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70253,"discussion_content":"因场景而异，我也赞同， 我认为临时的讨论可以用简图，用完就丢了；如果文档需要跨越时间传承，以后也可能修改，最好还是按照标准。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575338345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149901,"user_name":"确认过眼神","can_delete":false,"product_type":"c1","uid":1245530,"ip_address":"","ucode":"E6D73A9D27A279","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/5a/f7c989e4.jpg","comment_is_top":false,"comment_ctime":1573431160,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"177667090296","product_id":100039001,"comment_content":"对于uml来说，简单点是可以的，但是对于规范还是要有的。如果不规范，会的人看不习惯，不会的人容易被带入误区。想学的人，画得再难也会去看，不想学的人，画得再简单易懂，也不会去学。","like_count":41,"discussions":[{"author":{"id":1473069,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7a/2d/e3a5c52e.jpg","nickname":"陈拾柒","note":"","ucode":"22213E2FA5143A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50851,"discussion_content":"能懂就行了 不要过于形式化  捡了芝麻丢了西瓜","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573780036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","nickname":"Edward Lee","note":"","ucode":"156223F1D7E94A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50371,"discussion_content":"感觉能描述清楚类关系就行，毕竟这里不算是 UML 教程哈","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573712120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1270862,"avatar":"https://static001.geekbang.org/account/avatar/00/13/64/4e/0b9afa5e.jpg","nickname":"If_","note":"","ucode":"EBE721D0A120A4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48186,"discussion_content":"看和学是两码事","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573459173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624355,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","nickname":"洛奇","note":"","ucode":"662B4005721119","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49608,"discussion_content":"说了等于没说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573616067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48219,"discussion_content":"我赞同，就是一种规范化的沟通的途径！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573465197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149856,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1573403459,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"164782160707","product_id":100039001,"comment_content":"打卡~<br>我觉得在工作中，如果完成一个功能需要30分钟，其实25分钟都在思考，25分钟在设计，实际编码时间只需要5分钟，而前面25分钟就是编码设计","like_count":38},{"had_liked":false,"id":150624,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1573569828,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"108947752228","product_id":100039001,"comment_content":"下班后发现争哥让我出代码示例和说明区别，赶紧做。<br>写点简单粗暴的个人理解。<br>一 show me the code ..<br>泛化（Generalization）class BaseComponent { ... } class Dingdding extend BaseComponent { .. }<br>实现(Realization) 类实现接口 虚线加三角interface crud { func create(); func update();func get(); func() del{ } }<br>class DingdingModel implements crud {<br>func create(){ ...}<br>func update(){ ...}<br>func get(){ ...}<br>func del(){ ...}<br>}<br>关键是后面四个 （关联，聚合，组合，依赖）先说关联关系。 （A has B）<br>class DingdingUser {<br>privte $account; &#47;&#47;有一个账号对象，<br>}<br>再说聚合，是一种特殊的关联。<br>聚合，组合， 一对多的关联<br>聚合关系是“has-a”关系，组合关系是“contains-a”关系，少一个宿主对象死掉没。<br>uml2.x 已合并这种无聊的区分<br>聚合示例class birdsGroup(){<br>private $birds;<br>&#47;&#47;聚合往往可以干增减相关的操作<br>public func addBird( $bird) { ... }<br>public func removeBird( $bird) { ... }<br>}<br>组合示例。class bird (){public $wing; &#47;&#47;鸟由翅膀 组成.<br>}<br>最后说关联合依赖。<br>泛化 = 实现 &gt; 组合 &gt; 聚合 &gt; 关联 &gt; 依赖<br>2 然后说些个人理解：我回顾了一下，oop 的过程。<br>在框架的辅助下，数据库建模一作，其实文件放哪，啥关系就出来了，画uml 图反正了一个体力活。<br>往往是去实现一个需求，将一个业务流走通，写了一段代码后，发现这里写死了，于是做点配置管理（中心控制原则） ，一个类权责过多，于是将其支解。（类的单一职责原则），重复的代码出现了，赶紧抽离出来，先简单粗爆的用一个类的静态方法抽（很多大神不建议这样做，我不明其理，慢慢研究）， 某个操作，有几种不同的类可以去做实施。例如日志。（redis 写日志，文本日志，数据库日志，控制台输出） 于是搞个工厂模式，遵守下dip原则，让Log::log($log_msg, $type,$tags) 成为一种面向抽象开始，而不是面向具体实现。老板看到gmail 的undo 很酷闲着蛋疼的让你对所有操作 ，都要求在半分钟类允许undo ，上个command 应付下，不出意外 没多久，老板的redo 需求来了，就顺着扩展 ，进一步的有时候，一个主体业务完成后，要做一堆关联的杂七杂八的事，于是搞个观察者模式，这样将主体业务和后序操作业务解耦了。 继续扯到解藕(decouple)了, 我粗浅的来看，折腾设计模式，本质是解藕，找到合适的方法，在合适的场景下做对应的解藕操作。<br>这么一折腾下来，类和类啥关系，好像压根没太在意到。。。。 但类之前又确实有关系 。 挺想想知道其它伙伴们是如何做oop 的。<br>自我总结，套路包确实掌握了几个，但总感觉是在很浅的层面上折腾，上述错的乱七八糟的，烦请指正，个人平时就这么想的，这八个月就跟着争哥好好学习了。","like_count":25,"discussions":[{"author":{"id":1257410,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/c2/09c939ad.jpg","nickname":"Origin","note":"","ucode":"9B204EF360DD32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162866,"discussion_content":"你说的这个朋友到底是不是你自己？哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581025599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1067388,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/7c/9fa4f466.jpg","nickname":"Epimoni","note":"","ucode":"F0107A267A6605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257410,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/c2/09c939ad.jpg","nickname":"Origin","note":"","ucode":"9B204EF360DD32","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163254,"discussion_content":"🤔🤔🤔","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581064912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":162866,"ip_address":""},"score":163254,"extra":""}]}]},{"had_liked":false,"id":149882,"user_name":"daniel李","can_delete":false,"product_type":"c1","uid":1248280,"ip_address":"","ucode":"573840F0C6573E","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/18/bacf4b7a.jpg","comment_is_top":false,"comment_ctime":1573428774,"is_pvip":false,"replies":[{"id":"57680","content":"实际上，大厂也未必都在用。比如类图中几种类关系，同学们有几个能准确的用不同的图线画出来呢？","user_name":"作者回复","comment_id":149882,"uid":"1190123","ip_address":"","utype":1,"ctime":1573435907,"user_name_real":"王争"}],"discussion_count":7,"race_medal":0,"score":"70292905510","product_id":100039001,"comment_content":"当看到老师说uml意义不大的时候我就懵了，还好原来是指不需要按严格标准死磕uml。<br><br>我平时在功能开发初期和后期都是用uml把我的想法可视化然后让师兄审核，减少pr被reject机率。而且也容易让别的工程师接手做功能拓展。<br><br>不过确实互联网公司如果不是大厂，确实很少人能看懂uml。","like_count":17,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474001,"discussion_content":"实际上，大厂也未必都在用。比如类图中几种类关系，同学们有几个能准确的用不同的图线画出来呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573435907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048356,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/24/29d5c610.jpg","nickname":"tina","note":"","ucode":"9F110914D7EB00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48766,"discussion_content":"同意老师。。我在T厂，没见过有人画UML图","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1573524840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063308,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","nickname":"小乙哥","note":"","ucode":"C77E79BEA0C325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53031,"discussion_content":"我过去一直以为只有我迷乱在一堆关系当中。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574125443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587381,"discussion_content":"大厂，基本都不用uml ，呆过BATM，都没有用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663029403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226753,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/01/247ae4a7.jpg","nickname":"Devin","note":"","ucode":"760F8937686FC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53652,"discussion_content":"想请教在大厂，对于比较大的项目，不用UML的话，怎么让新加入的小伙伴了解整个项目，直接看代码吗？会不会有&#34;只缘身在此山中&#34;的感觉？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574203280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2217343,"avatar":"","nickname":"Geek_5db424","note":"","ucode":"1835134BEA58AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1226753,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/01/247ae4a7.jpg","nickname":"Devin","note":"","ucode":"760F8937686FC0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309896,"discussion_content":"告诉你吧，我呆过字节呆过滴滴 ，几乎都不用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601483779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":53652,"ip_address":""},"score":309896,"extra":""}]},{"author":{"id":1735673,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7b/f9/fdaa8532.jpg","nickname":"渔人码头คิดถึง","note":"","ucode":"036CBA34FED4BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48708,"discussion_content":"怎么没有视频的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573520889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150054,"user_name":"NeverMore","can_delete":false,"product_type":"c1","uid":1608843,"ip_address":"","ucode":"835B9884DFA102","user_header":"https://static001.geekbang.org/account/avatar/00/18/8c/8b/bc18b962.jpg","comment_is_top":false,"comment_ctime":1573454761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53113062313","product_id":100039001,"comment_content":"对于UML，我觉得同样不要过于“学院派”，过度求其严谨，而忘记使用它的目的是什么，此谓舍本逐末。毕竟它终究只是一个工具，最终能够服务于我们的表达，方便我们的交流即可。是否要简化，当然也要看场景，至少对于学习这门课程而言，并不需要让其过于复杂而提高我们的学习成本。<br>另外，我特别欣赏老师这种删繁就简、力求简约和高效的风格，或许这也是一种极客精神吧。","like_count":12},{"had_liked":false,"id":149926,"user_name":"方向","can_delete":false,"product_type":"c1","uid":1261031,"ip_address":"","ucode":"CBB283D30C8C09","user_header":"https://static001.geekbang.org/account/avatar/00/13/3d/e7/e4b4afcc.jpg","comment_is_top":false,"comment_ctime":1573433556,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53113041108","product_id":100039001,"comment_content":"UML在毕设时候是必须的，什么用例图，时序图，活动图，非得写上去才显得高大上，但一直不得要领，当时也是网上搜相关的模仿着填充进去。始终认为这种图的目的也是为了传达明确的设计意图，遵循最基本的规范能够达到看懂、意图明确的效果就行了。","like_count":12,"discussions":[{"author":{"id":1099513,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/f9/caf27bd3.jpg","nickname":"大王叫我来巡山","note":"","ucode":"1B8D0C701BC95E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200155,"discussion_content":"你要知道不是所有人都能看懂你的论文的，但是总要提点儿意见是不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583662074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149974,"user_name":"BerryMew","can_delete":false,"product_type":"c1","uid":1013075,"ip_address":"","ucode":"E6CDD211617FF9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/53/76281fc3.jpg","comment_is_top":false,"comment_ctime":1573439453,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44523112413","product_id":100039001,"comment_content":"专栏重点是设计模式，只要便于理解，什么样的图都没关系的，凡事都要抓住重点，我觉得软件开发最大的忌讳就是追求完美，死扣细节。 ","like_count":10,"discussions":[{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280688,"discussion_content":"我咋感觉和你所言恰恰相反呢","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1591593800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156327,"user_name":"Qfxl","can_delete":false,"product_type":"c1","uid":1042753,"ip_address":"","ucode":"4554F28BB10F21","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/p6kkT7nsViayxazIrxx7p0pklPRvet933nEGBupj1phL2zArLStC3MnHFFyBYZ9fDGbPWJxS6WOICkxCCLia7nhw/132","comment_is_top":false,"comment_ctime":1574857149,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35934595517","product_id":100039001,"comment_content":"看过很多本厂的设计文档 很少会画类的设计图 基本是系统整体架构和流程图 而且代码变化快 文档容易脱钩 首席架构甚至说过不想看类是怎么设计的 最重要还是大方向功能性正确 所以uml大概知道就好了 学有余力了解下亦可","like_count":8,"discussions":[{"author":{"id":2849207,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/p7WrTfywicxkRZTdlSEvzTsrWssRF0YnmGY2ffFYGKjIoNC8fnbMiaI9Kic0gOD3icLiapY5vmYh89yLUH7qgZZicn3g/132","nickname":"Geek_8b8904","note":"","ucode":"3A7967582FFE8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561460,"discussion_content":"UML不是只有类图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649642537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153079,"user_name":"阿健","can_delete":false,"product_type":"c1","uid":1024066,"ip_address":"","ucode":"7475C02BABF3B2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/42/88e70d61.jpg","comment_is_top":false,"comment_ctime":1574154579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31638925651","product_id":100039001,"comment_content":"关于uml类图，我要发表一下个人观点。目前我也是在一个互联网公司，我们有比较严格的设计方案模板，其中类图，流程图，用例图，状态图是必备的，时序图暂时还没有那么要求严格，目前团队内统一用platuml来画图，基本进入团队先学这个，如果忘记语法，就去官网查一下。磨刀不误砍柴工，互联网公司开发项目，还是需要uml类图的。","like_count":7},{"had_liked":false,"id":150353,"user_name":"BK🎩","can_delete":false,"product_type":"c1","uid":1248016,"ip_address":"","ucode":"A5743A15241C0E","user_header":"https://static001.geekbang.org/account/avatar/00/13/0b/10/057e2037.jpg","comment_is_top":false,"comment_ctime":1573522389,"is_pvip":false,"replies":[{"id":"58369","content":"好像没有多少人画uml，文档主要还是聚焦于业务和更上层的架构设计、技术难点说明，实现直接看代码。","user_name":"作者回复","comment_id":150353,"uid":"1190123","ip_address":"","utype":1,"ctime":1573789942,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"31638293461","product_id":100039001,"comment_content":"确实很多公司使用 UML 的频率比较低，大厂也是这样。另外我自己对 Google 的了解是对代码要求很高，那么代码交付还有文档的要求想必也很高，不知道 Google 公司在文档上面会不会大量使用 UML，如果不用的话，有没有更好的方式或语言来维护高质量的文档","like_count":8},{"had_liked":false,"id":149873,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1573425381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31638196453","product_id":100039001,"comment_content":"UML设计的合理，新开发者也能去快速开发。关键还是看自己开发还是别人开发。作为学习来说，简单的UML能表达意思即可。","like_count":7},{"had_liked":false,"id":149869,"user_name":"香蕉派2号","can_delete":false,"product_type":"c1","uid":1587685,"ip_address":"","ucode":"1BB5A449B6EA5E","user_header":"https://static001.geekbang.org/account/avatar/00/18/39/e5/53b1f697.jpg","comment_is_top":false,"comment_ctime":1573421635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31638192707","product_id":100039001,"comment_content":"1.同意老师观点，UML是提供一种规范和准则，如果严格的按照规范来做可能过犹不及，在时间成本和规范之间必尽量要做到平衡。<br>2.除了以上的概念，还想到了低耦合高内聚，模块化，可维护性，可扩展性，可复用性，对象的唯一性，对象的分类（是is-a还是has的关系）等。","like_count":7},{"had_liked":false,"id":150397,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1573527222,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27343330998","product_id":100039001,"comment_content":"对于UML（统一建模语言），我个人觉得它的作用还是很大的，因为它可以帮助开发人员更好的去分析一个软件的设计过程，通过它的哪些表示的方法吗，会让人的思路更加的清晰，如果是一个软件的负责人，那么使用UML来分析问题，我觉得再好不过。<br>软件开发是一个工程问题，就好比盖房子，只有每一步都规划好，分析好，设计好，盖出来的房子才好，总之，我个人觉得值得花时间去学UML！<br>","like_count":6,"discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391283,"discussion_content":"房子是一次性的，软件是迭代的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1630387666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1220273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9e/b1/758f2fe7.jpg","nickname":"香","note":"","ucode":"121D6CECECEEC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336019,"discussion_content":"代码迭代开发快，画过一遍UML类图，后面重构之后其实都不太想去画这个东西，当然，我是觉得能把事情说清楚就可以。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608456224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149857,"user_name":"唐龙","can_delete":false,"product_type":"c1","uid":1471657,"ip_address":"","ucode":"87A10AE04F2037","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/a9/5eb3ebc6.jpg","comment_is_top":false,"comment_ctime":1573403819,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27343207595","product_id":100039001,"comment_content":"即便我们使用面向对象编程语言，写出来的代码也不一定是面向对象编程风格的，也有可能是面向过程编程风格的。嗯~刚学C++的时候干过这事。","like_count":6,"discussions":[{"author":{"id":1519521,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2f/a1/5f32ada6.jpg","nickname":"大姨夫斯基","note":"","ucode":"79989AC4DD36FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47935,"discussion_content":"现在移动端开发得大部分程序员 还是在写面条代码 面向对象是面试时才会拿出来的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573436488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197455,"avatar":"https://static001.geekbang.org/account/avatar/00/12/45/8f/a56b2214.jpg","nickname":"innocent","note":"","ucode":"368659A0DDE7E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55107,"discussion_content":"C with class","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574340422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149944,"user_name":"帆大肚子","can_delete":false,"product_type":"c1","uid":1529040,"ip_address":"","ucode":"3DB11DB2FA1802","user_header":"https://static001.geekbang.org/account/avatar/00/17/54/d0/4e1fc664.jpg","comment_is_top":false,"comment_ctime":1573435056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23048271536","product_id":100039001,"comment_content":"我第一次看《设计模式》的时候，里面的uml很是让人头疼，确实学习成本很大，而且我的学习重心不在uml，被迫学习uml真的很痛苦。<br>    ","like_count":5},{"had_liked":false,"id":149905,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1573431318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23048267798","product_id":100039001,"comment_content":"就像开会不需要非得要PPT，简单的txt文档能够说清楚问题即可。用不用UML也是类似的吧","like_count":5},{"had_liked":false,"id":216892,"user_name":"方舟勇士","can_delete":false,"product_type":"c1","uid":1218162,"ip_address":"","ucode":"53D3D844B08B92","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/72/a517bf25.jpg","comment_is_top":false,"comment_ctime":1589363632,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18769232816","product_id":100039001,"comment_content":"不是来挑刺的，发现有更好的论述与大家分享。下面内容总结自邵维忠和杨芙清院士的著作《面向对象的系统设计（第2版）》，主要看第20页，解答了我当年的疑惑：<br>面向对象分析不能简单说是要搞清楚做什么，系统分析!=需求分析。面向对象分析是指系统分析，它既是对“做什么”问题的进一步明确，也是相当程度上涉及到“怎么做”的问题。重点来了，OOA产生的系统模型与实现条件无关，OOD产生的系统模型针对具体的实现平台。","like_count":4},{"had_liked":false,"id":149997,"user_name":"shniu","can_delete":false,"product_type":"c1","uid":1019555,"ip_address":"","ucode":"E64CD8BED96D8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/a3/d7e5fe8a.jpg","comment_is_top":false,"comment_ctime":1573442961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18753312145","product_id":100039001,"comment_content":"1.对uml，真正掌握确实有难度，很容易忘记，原因可能是自己并没有真正的理解设计这件事，比如说uml中是用泛化还是实现不是问题的本质，本质是对于一个特定问题，要如何设计才是尽可能最好的；这中间有两层：将自己的想法转成可表达的设计和将可表达的设计让别人也能理解你的意图，而uml就是一种可表达的方式，至于是不是uml并不重要；但是uml有一套规范，而且知名度高，大家多少都有一些了解，所以就成了一种大家相互沟通的通用语言，所以学uml是需要的。我现在是傻傻分不清泛化、实现、关联、聚合、组合、依赖和他们的表达形式。<br>2. 想到了编程范式，虽然不是它不是面向对象独有的东西，OO只是众多范式中的一种。<br>","like_count":4},{"had_liked":false,"id":149959,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1573436342,"is_pvip":false,"replies":[{"id":"58373","content":"组合跟封装应该没啥关系呢。","user_name":"作者回复","comment_id":149959,"uid":"1190123","ip_address":"","utype":1,"ctime":1573790231,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"18753305526","product_id":100039001,"comment_content":"1.我觉得首先uml这东西很牛逼，很有必要去画，但是也需要分场景，比如crud还强行画一个出来那就是浪费时间，比如超级复杂的东西要画，那我觉得就可以简化，多配上文字注释。比如需求一般，不是很复杂也不是很简单的那种也可以好好画一下，必要的地方配上文案描述。uml能帮助我们瞬间理解这个东西到底要做什么，流程是怎样的，画出来不光是现在看还是以后复习看，他都很香！<br>2.我觉得缺少了一个“组合”，首先要以类和对象作为代码的基石，还要能灵活的支持组合特性才算不严谨的面向对象语言。组合算封装特性的一部分吗？还是说只要以类和对象为基石的开发语言都支持组合？","like_count":4,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474023,"discussion_content":"组合跟封装应该没啥关系呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149911,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1573432004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18753301188","product_id":100039001,"comment_content":"1. 基本认同，除非某个公司内部统一要求如此，才能真正降低沟通成本并摊低学习成本。没有必须使用的场景，就不值得花时间深入<br>2. 除了老师今天讲的知识点之外，还有消息传递。对象之间需要相互沟通，沟通的途径就是对象之间收发消息。消息内容包括接收消息的对象标识、需要调用的函数的标识以及必要的信息","like_count":4},{"had_liked":false,"id":149885,"user_name":"水银","can_delete":false,"product_type":"c1","uid":1045948,"ip_address":"","ucode":"0FD9C79590E484","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/bc/63be02b6.jpg","comment_is_top":false,"comment_ctime":1573429236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18753298420","product_id":100039001,"comment_content":"完全按照uml画，画的成本高、沟通成本高，更麻烦的是经常做设计变更，导致uml图也要同步更新，保持和代码同步，然后再同步沟通设计变化，成本更高。","like_count":4},{"had_liked":false,"id":150752,"user_name":"村口叶师傅","can_delete":false,"product_type":"c1","uid":1249466,"ip_address":"","ucode":"D8C057CB62CE22","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/ba/dccc6e34.jpg","comment_is_top":false,"comment_ctime":1573606968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14458508856","product_id":100039001,"comment_content":"UML类图在功能开发完成后的交付文档中一般都会提供，方便其他同事了解代码。我不能保证看的人都懂UML类图，但是自己要尽量保证其正确性，最起码让懂的人能看明白","like_count":3},{"had_liked":false,"id":150045,"user_name":"青青子衿","can_delete":false,"product_type":"c1","uid":1438102,"ip_address":"","ucode":"4A388A3BA70C29","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","comment_is_top":false,"comment_ctime":1573452418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14458354306","product_id":100039001,"comment_content":"我们是围绕着对象或类来做需求分析和设计的。分析和设计两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法，类与类之间如何交互等等。它们比其他的分析和设计更加具体、更加落地、更加贴近编码，更能够顺利地过渡到面向对象编程环节。这也是面向对象分析和设计，与其他分析和设计最大的不同点<br>曾经面试的时候被问到，领域驱动设计和数据表驱动设计有什么区别，我觉得王老师的这句话总结的很到位","like_count":3},{"had_liked":false,"id":149983,"user_name":"潇潇雨歇","can_delete":false,"product_type":"c1","uid":1251429,"ip_address":"","ucode":"4BD52BF0F0A084","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","comment_is_top":false,"comment_ctime":1573440909,"is_pvip":false,"replies":[{"id":"58374","content":"周末会上一篇加餐，你可以简单看下专栏中用到的所有的java语法。至于书籍推荐，你可以随便找本比较薄的java书籍看看就可以，先入个门。","user_name":"作者回复","comment_id":149983,"uid":"1190123","ip_address":"","utype":1,"ctime":1573790295,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"14458342797","product_id":100039001,"comment_content":"1，关于UML，大学的时候学过，但是没有好好学，大概能看得懂，非常复杂的话不必弄的太规范；可以在自己画的时候做个讲解，关于规范UML的讲解，以免学生误解。简化不等于乱画，大体思想核心是在的。我觉得这样挺好的。可以使用类UML的形式，《Head FIrst 设计模式》也是用的这种，大家更能看懂。因为学习UML是有成本的，老师可以在课程中讲解一些UML的基本用法，不需要详细介绍。<br>2，面向对象的话还有接口，组合等概念。我学的是JavaScript，其实js严格来说并不是面向对象编程语言，像类本身都是没有的，可以说是基于对象编程语言。Java这种就是严格上的面向对象编程语言。其实我也想学学Java，老师有什么好的学习资料推荐吗？比如书籍，文档，博客什么。感谢🙏","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474030,"discussion_content":"周末会上一篇加餐，你可以简单看下专栏中用到的所有的java语法。至于书籍推荐，你可以随便找本比较薄的java书籍看看就可以，先入个门。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251429,"avatar":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","nickname":"潇潇雨歇","note":"","ucode":"4BD52BF0F0A084","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51160,"discussion_content":"好的，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573818313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149865,"user_name":"君君","can_delete":false,"product_type":"c1","uid":1054285,"ip_address":"","ucode":"E2FA7EEB2C936B","user_header":"https://static001.geekbang.org/account/avatar/00/10/16/4d/55e2eb36.jpg","comment_is_top":false,"comment_ctime":1573411539,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14458313427","product_id":100039001,"comment_content":"UML 不懂的看不懂 懂得懒得写。。。","like_count":3},{"had_liked":false,"id":165714,"user_name":"八歌","can_delete":false,"product_type":"c1","uid":1025218,"ip_address":"","ucode":"B54B99716358DE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/c2/e8ab13d7.jpg","comment_is_top":false,"comment_ctime":1577287297,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10167221889","product_id":100039001,"comment_content":"我个人认为 ,uml 最大的毛病就是还没有一个操作方便颜值在线的工具软件，不像脑图、markdown，有一大堆的优秀客户端。uml 之前的各种插件扩展鸡肋的不行。<br><br>UML 主要作用也就是表达内部的一些关系，不要为了画图而画图，能体现重要的关系就行了。","like_count":2,"discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391289,"discussion_content":"哈哈哈，问题是UML的重点是U，要是方便操作了它就不unified了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630390076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316766,"user_name":"小马哥","can_delete":false,"product_type":"c1","uid":1358045,"ip_address":"","ucode":"B2C0FF38F8C9BC","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","comment_is_top":false,"comment_ctime":1634545068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5929512364","product_id":100039001,"comment_content":"第一个问题: &quot;在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？&quot;<br><br>简单的比喻: 杀鸡用牛刀 vs 磨刀不误砍柴工 .<br>如果团队不大, 项目也不复杂, &quot;杀鸡用牛刀&quot;似乎也没有必要;如果团队足够大, UML就是统一的沟通标准, 我还是赞同使用UML, 都熟悉一下标准就统一了. ","like_count":1},{"had_liked":false,"id":297155,"user_name":"动刀不动情","can_delete":false,"product_type":"c1","uid":2649773,"ip_address":"","ucode":"8F2A6B294EB69D","user_header":"https://static001.geekbang.org/account/avatar/00/28/6e/ad/b5e93fcb.jpg","comment_is_top":false,"comment_ctime":1623332253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5918299549","product_id":100039001,"comment_content":"面向对象编程：看人。<br>面型对象编程语言：看编程语言。<br>","like_count":1},{"had_liked":false,"id":244214,"user_name":"Geek_35cfdd","can_delete":false,"product_type":"c1","uid":1792214,"ip_address":"","ucode":"AD9615ABB4CA25","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiaP1gptuBzj3AXMpY8yLTIkpuarouOVzLde4636UJ7zAgnOEZibiaAIRVAicFaO64ftH45YOn1pD3VA/132","comment_is_top":false,"comment_ctime":1598430802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893398098","product_id":100039001,"comment_content":"UML本质上来说是一种可视化表达的工具，本质还是为了让在一个团队工作的人都各自能看懂彼此的设计。如果大家可以随心所欲用一些工具，这样在讨论阶段就会出现问题。是不是一定使用UML不重要，重要的是整个团队得有一个统一的工具来表达自己的设计并且别人可以看懂。","like_count":1},{"had_liked":false,"id":219375,"user_name":"奔跑的蜗牛","can_delete":false,"product_type":"c1","uid":2001039,"ip_address":"","ucode":"62ACD849652E80","user_header":"https://static001.geekbang.org/account/avatar/00/1e/88/8f/166dfe47.jpg","comment_is_top":false,"comment_ctime":1590020396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5884987692","product_id":100039001,"comment_content":"争哥，请教下：<br>我们是围绕着对象或类来做需求分析和设计的。分析和设计两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法，类与类之间如何交互等等；<br>对于分析和设计的最终产出，如果不借助uml，您建议有什么更好的方式梳理这些产出呢？通过画草图吗，还是直接存放于大脑CPU中？","like_count":1},{"had_liked":false,"id":159264,"user_name":"瑞泉","can_delete":false,"product_type":"c1","uid":1111565,"ip_address":"","ucode":"D38E24A98FDAE3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/0d/e16dff4e.jpg","comment_is_top":false,"comment_ctime":1575593180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870560476","product_id":100039001,"comment_content":"UML每次都去记，过不了多久又忘了，还是不是很好用","like_count":1},{"had_liked":false,"id":153062,"user_name":"[耶]友超","can_delete":false,"product_type":"c1","uid":1400962,"ip_address":"","ucode":"890572F77C3670","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/82/9a43504b.jpg","comment_is_top":false,"comment_ctime":1574150932,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5869118228","product_id":100039001,"comment_content":"没学过UML,能不学就不学","like_count":1},{"had_liked":false,"id":150764,"user_name":"Bug? Feature!","can_delete":false,"product_type":"c1","uid":1164531,"ip_address":"","ucode":"F8FA8A0094FBA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","comment_is_top":false,"comment_ctime":1573608220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868575516","product_id":100039001,"comment_content":"我觉得没有必要去把UML各种搞的很透彻，草图也行呀，只要能够理清楚类与类之间的关系啥的就行了，这样学习起来才快，才更容易通俗易懂！","like_count":1},{"had_liked":false,"id":150517,"user_name":"Kang","can_delete":false,"product_type":"c1","uid":1237655,"ip_address":"","ucode":"088A8DA0A16BDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","comment_is_top":false,"comment_ctime":1573548793,"is_pvip":false,"replies":[{"id":"58380","content":"我没读过mysql源码呢，不大清楚你说的那个问题。","user_name":"作者回复","comment_id":150517,"uid":"1190123","ip_address":"","utype":1,"ctime":1573790537,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5868516089","product_id":100039001,"comment_content":"请教下   mysql源码里面是否实现面向对象的思想呢，怎么理顺一部分，比如源码里的优化器<br>","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474188,"discussion_content":"我没读过mysql源码呢，不大清楚你说的那个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150330,"user_name":"return","can_delete":false,"product_type":"c1","uid":1135528,"ip_address":"","ucode":"42B8A3380DF04B","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","comment_is_top":false,"comment_ctime":1573519680,"is_pvip":false,"replies":[{"id":"58371","content":"看下一篇文章，看能否解决你的疑惑呢","user_name":"作者回复","comment_id":150330,"uid":"1190123","ip_address":"","utype":1,"ctime":1573790078,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5868486976","product_id":100039001,"comment_content":"老师， 面向对象主要用来解决扩展复杂性，<br>写出来的代码确实要比面向过程更舒服 更易扩展。<br>但是 我思考其 为什么会有这种效果时， 又说不上具体原因，<br>有人说是 面向对象 把 实体和行为节藕，实体是稳定的， 而面向过程只有行为 ，行为是不稳定的。 好想有点道理 但是又有点抽象。<br>老师能否指点指点🙂","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474127,"discussion_content":"看下一篇文章，看能否解决你的疑惑呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150328,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1573519415,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5868486711","product_id":100039001,"comment_content":"大一的时候学习C语言，学到结构体的时候，老师说现在我们也能用C语言写出面向对象风格的代码了。。。<br>我们：啥？啥面向对象？还有风格？。。。","like_count":1,"discussions":[{"author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48942,"discussion_content":"我觉得面向对象的风格就是指运用面向对象的思维来编码，C语言的的结构体就是运用了面向对象的封装的特性，将相关变量封装在一起。结构体有数据变量和成员方法，就像C++的类一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573538759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150319,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1573519061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868486357","product_id":100039001,"comment_content":"依稀记得rose 画uml 时可以直接选设计模式。<br>后来发现画uml  两个问题，<br>一 ood  类图时一，设计时，往往一起步就是几层结构了，非常的不适合mvp .而且图经常抓不住重点，乱封装。<br>二 跟不上迭代节奏。变更引发uml  要同步到开发团队，本来简单的事搞复杂。<br><br>可能我们能力不足，但先放弃uml很有必要。<br><br>一度对uml  还有种，talk is cheap  show me the code...的感觉。","like_count":1},{"had_liked":false,"id":150239,"user_name":"修缘","can_delete":false,"product_type":"c1","uid":1035476,"ip_address":"","ucode":"72AB60C1DC88C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/d4/f1f84a96.jpg","comment_is_top":false,"comment_ctime":1573482916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868450212","product_id":100039001,"comment_content":"其实泛化和实现、关联和依赖，聚合和组合是一种强和弱的关系","like_count":1},{"had_liked":false,"id":150236,"user_name":"修缘","can_delete":false,"product_type":"c1","uid":1035476,"ip_address":"","ucode":"72AB60C1DC88C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/d4/f1f84a96.jpg","comment_is_top":false,"comment_ctime":1573482477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868449773","product_id":100039001,"comment_content":"面向对象设计：领域对象-&gt;数据对象-&gt;对象交互与通信。","like_count":1},{"had_liked":false,"id":150233,"user_name":"修缘","can_delete":false,"product_type":"c1","uid":1035476,"ip_address":"","ucode":"72AB60C1DC88C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/d4/f1f84a96.jpg","comment_is_top":false,"comment_ctime":1573482390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868449686","product_id":100039001,"comment_content":"1.对于UML个人觉得概念太多，其实对于专业性要求还是很高的，有时候容易搞混，比如说：泛化和实现，聚合和组合，关联和依赖。搞清楚这些概念本身的学习成本就很高了。<br>2.面向对象分析-&gt;领域对象抽象－&gt;类，侧重于静态分析。<br>","like_count":1},{"had_liked":false,"id":150200,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1573477712,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5868445008","product_id":100039001,"comment_content":"今天把面向对象编程和面向对象编程语言写两个概念又重新理解一下，核心就是类或者对象<br><br>对于UML图，曾经学习过几次但是在实际工作中没有那么多时间去画图，所以后来也就忘了<br>补充一下，UML图是个好东西，有时间和精力还是要好好去学习一下的，一方面是有了规范方便以后去理解，另一方面可以清晰的表达出各种组件之间的关系","like_count":1},{"had_liked":false,"id":150093,"user_name":"mark","can_delete":false,"product_type":"c1","uid":1015720,"ip_address":"","ucode":"39EDFEA8010F9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/a8/d103904b.jpg","comment_is_top":false,"comment_ctime":1573461057,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5868428353","product_id":100039001,"comment_content":"对java 中毒比较深的人，uml 还是比较重要的。但是，对非java程序员，这东西其实用的并不多。","like_count":1},{"had_liked":false,"id":150050,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1573453804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868421100","product_id":100039001,"comment_content":"uml确实很复杂，之前看过2本书学习，还是大部分没记住！支持老师简化！看到老师说UML难学，我就放心了。","like_count":1},{"had_liked":false,"id":149963,"user_name":"Running","can_delete":false,"product_type":"c1","uid":1006392,"ip_address":"","ucode":"6377B6BD1F01FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/38/42ff18f1.jpg","comment_is_top":false,"comment_ctime":1573436834,"is_pvip":false,"replies":[{"id":"57693","content":"c是面向过程的编程语言 后面会讲到 别急","user_name":"作者回复","comment_id":149963,"uid":"1190123","ip_address":"","utype":1,"ctime":1573442310,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"5868404130","product_id":100039001,"comment_content":"古老的C语言是不是可以认为面向对象的编程语言呢？结构体可以认为是类吗？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474024,"discussion_content":"c是面向过程的编程语言 后面会讲到 别急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573442310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002255,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4b/0f/d747ed96.jpg","nickname":"Steve","note":"","ucode":"243D10F2DC065A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47999,"discussion_content":"不可以，所以有 C++ 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573440887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149954,"user_name":"初心","can_delete":false,"product_type":"c1","uid":1104576,"ip_address":"","ucode":"C090A1723E3474","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/c0/9fc31f2d.jpg","comment_is_top":false,"comment_ctime":1573435935,"is_pvip":false,"replies":[{"id":"57692","content":"有的 看专栏目录就知道了","user_name":"作者回复","comment_id":149954,"uid":"1190123","ip_address":"","utype":1,"ctime":1573442285,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5868403231","product_id":100039001,"comment_content":"有一点很有体会:使用面向对象编程语言开发出来的功能未必符合面向对象的思想，很可能是面向过程的。如何避免这种问题呢？后续有类似案例吗？争老师","like_count":1},{"had_liked":false,"id":149916,"user_name":"阿玛铭","can_delete":false,"product_type":"c1","uid":1100703,"ip_address":"","ucode":"DBF948D82ACBE3","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/9f/ee68858c.jpg","comment_is_top":false,"comment_ctime":1573432346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868399642","product_id":100039001,"comment_content":"软件工程专业有专门的面向对象技术和UML相关的教材。学艺不精，只记得里边大量使用草图，老师强调的软件开发过程中不过分纠结UML标准确实有所体会。UML有自己的发展历程，而且到现在还在演进。面向对象分析和设计是精髓，UML是可以用来讲清楚精髓的工具，如果因为团队基础不足达不到效果，不如使用相对简单的草图，配合自己的理解说明白涉及思路。如果有易用的UML工具可以拿来用，比如做代码反向工程或者直接生成代码。","like_count":1},{"had_liked":false,"id":149915,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1573432321,"is_pvip":false,"replies":[{"id":"57679","content":"接口也算","user_name":"作者回复","comment_id":149915,"uid":"1190123","ip_address":"","utype":1,"ctime":1573435741,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5868399617","product_id":100039001,"comment_content":"1. 个人觉得UML只是一种辅助你学习的工具，有一定的学习成本。如果自己精力允许，可以多了解一些。至于一些重要的东西，是需要深入理解的（如面向对象分析、设计等），在这过程中使用简单的辅助手段帮助理解也就好了，毕竟重心不在工具上，不必拘泥于是否符合UML的严格要求。<br>2. 除了今天讲到的，在平时开发中用到接口，也不算面向对象的概念范畴吗？","like_count":1,"discussions":[{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382865,"discussion_content":"我只用TXT","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625748324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1598564,"avatar":"https://static001.geekbang.org/account/avatar/00/18/64/64/865c1eb4.jpg","nickname":"劳码识途","note":"","ucode":"7AEF4D9407F097","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309605,"discussion_content":"做笔记使用Typora不是更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601364839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1119593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","nickname":"南山","note":"","ucode":"94656FE4A6C378","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1598564,"avatar":"https://static001.geekbang.org/account/avatar/00/18/64/64/865c1eb4.jpg","nickname":"劳码识途","note":"","ucode":"7AEF4D9407F097","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309879,"discussion_content":"各有侧重，都在用😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601476213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309605,"ip_address":""},"score":309879,"extra":""},{"author":{"id":1626651,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d2/1b/b07d5c9a.jpg","nickname":"caizqcode","note":"","ucode":"F1ECBC98E7AE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1598564,"avatar":"https://static001.geekbang.org/account/avatar/00/18/64/64/865c1eb4.jpg","nickname":"劳码识途","note":"","ucode":"7AEF4D9407F097","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370016,"discussion_content":"可以使用vscode","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619253084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309605,"ip_address":""},"score":370016,"extra":""}]},{"author":{"id":1740368,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhr1LrBZQTnn5PgyuHUtia6j6tiahZyk44BWeB5LQIqMgTDBdibGKVVopbJWbz83ZWvyVPz9fBl69rw/132","nickname":"Geek_b6e449","note":"","ucode":"8296078ED23637","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288940,"discussion_content":"你们总这样 让我这种情何以堪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593936677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149850,"user_name":"连边","can_delete":false,"product_type":"c1","uid":1391748,"ip_address":"","ucode":"54B5DA38449728","user_header":"https://static001.geekbang.org/account/avatar/00/15/3c/84/608f679b.jpg","comment_is_top":false,"comment_ctime":1573401877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868369173","product_id":100039001,"comment_content":"先来抢沙发。","like_count":1},{"had_liked":false,"id":359562,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"日本","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1665646738,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665646738","product_id":100039001,"comment_content":"uml 的学习成本高，每种类之间的关系记忆太难 另一个就是 uml 的图画出来不美观","like_count":0},{"had_liked":false,"id":356529,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"浙江","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1662382044,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662382044","product_id":100039001,"comment_content":"面向对象设计，一切皆对象，万物可对象","like_count":0},{"had_liked":false,"id":355885,"user_name":"Stay_Gold","can_delete":false,"product_type":"c1","uid":1119904,"ip_address":"北京","ucode":"ACB8DCD2EF8F95","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRCtuJkpyy2NTTABPFibg2k9tZscOOKx9wu80a85d5HspCorO9Nibj7Z7q9v1icPTVm5ia52r0RCzEaA/132","comment_is_top":false,"comment_ctime":1661828943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661828943","product_id":100039001,"comment_content":"先总结一下今天所学的：<br>今天主要是介绍面向对象相关的知识。面向对象后面接不通的名词都有不同的定义：<br>面向对象编程：以类或者对象为基本单位来进行程序编写工作。<br>面向对象语言：基本含义，有类或者对象的概念，并以此作为基本单元的语言。严格定义，能实现封装，继承，多态，抽象的特性。<br>面向对象分析：以类或者对象为基本单位来进行系统分析。<br>面向对象设计：以类或者对象为基本单位来进行系统设计。<br><br>面向对象编程和面向对象语言之前的区别：非面向对象语言一样可以进行面向对象编程。用面向对象的语言，一样可以写出不是面向对象的代码。<br><br><br>问题回答<br>一.在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>个人认为UML或者其他的一些建模语言，其实都是一种规范，就像交通规则或者行业术语一样的，目的其实是有一个共同语言，更好的和其他人进行交流。对于本课程来说，其目的其实一样的让学习的人更好的理解老师要表达的这个的意思，只要实现了这个目的，其他的不过都是一种达成目的的工具而已。<br>二。有关面向对象的概念和知识点，除了我们今天讲到的，你还能想到其他哪些吗？<br>觉得老师已经讲解得很全面了。<br>","like_count":0},{"had_liked":false,"id":355803,"user_name":"高帅","can_delete":false,"product_type":"c1","uid":3077992,"ip_address":"北京","ucode":"50AC1404D20D23","user_header":"","comment_is_top":false,"comment_ctime":1661761243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661761243","product_id":100039001,"comment_content":"UML确实没必要学，了解是什么就行，开发中几乎不用； ","like_count":0},{"had_liked":false,"id":355657,"user_name":"batiwant","can_delete":false,"product_type":"c1","uid":1311236,"ip_address":"广东","ucode":"F873D815CBC801","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/04/a678be45.jpg","comment_is_top":false,"comment_ctime":1661601065,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661601065","product_id":100039001,"comment_content":"个人感觉：uml主要就是统一，方便跨团队沟通合作。 通过画用例图、序列图、类图，也可以提升我们的建模和设计能力。","like_count":0},{"had_liked":false,"id":355502,"user_name":"王成","can_delete":false,"product_type":"c1","uid":1953067,"ip_address":"上海","ucode":"48522AD73BFAC0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/cd/2b/f6a1af53.jpg","comment_is_top":false,"comment_ctime":1661431944,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661431944","product_id":100039001,"comment_content":"刚开始接触uml的时候，也发现uml很多概念，很复杂，后来就放弃了。<br>现在看来，uml的目的就是帮助设计人员理清类与对象之间的关系，结果uml过于复杂，过于细化，掌握这个工具比分析类的关系还麻烦，就算少数人掌握了，但大部分人没掌握，也起不到沟通交流的目的。<br>所以uml设计得过于复杂，对于用uml来建模来说，有些没有必要。","like_count":0},{"had_liked":false,"id":355215,"user_name":"后其身而身先","can_delete":false,"product_type":"c1","uid":3159196,"ip_address":"山东","ucode":"E7F36107A5A925","user_header":"https://static001.geekbang.org/account/avatar/00/30/34/9c/05708466.jpg","comment_is_top":false,"comment_ctime":1661176810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661176810","product_id":100039001,"comment_content":"在我看来，不会用接口的程序员，根本不能说懂什么是面向对象","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502603,"discussion_content":"我扶你起来吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596108857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2739750,"avatar":"https://static001.geekbang.org/account/avatar/00/29/ce/26/f493253d.jpg","nickname":"源不息","note":"","ucode":"2B9FF0B611BC9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":546769,"discussion_content":"别扶他","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642419566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":502603,"ip_address":""},"score":546769,"extra":""}]},{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542811,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640851977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1455958,"avatar":"https://static001.geekbang.org/account/avatar/00/16/37/56/11068390.jpg","nickname":"倡印","note":"","ucode":"4F53AA5D017D89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351604,"discussion_content":"你为何总是跪着\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614340489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1220273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9e/b1/758f2fe7.jpg","nickname":"香","note":"","ucode":"121D6CECECEEC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340873,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610186410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355212,"user_name":"后其身而身先","can_delete":false,"product_type":"c1","uid":3159196,"ip_address":"山东","ucode":"E7F36107A5A925","user_header":"https://static001.geekbang.org/account/avatar/00/30/34/9c/05708466.jpg","comment_is_top":false,"comment_ctime":1661176268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661176268","product_id":100039001,"comment_content":"就我个人经历来讲，我对面向对象认识的深入，在于我对接口的学习和理解<br>在懂得如何使用接口之前，写出来的代码，基本就是学院派的猪羊狗猫，要么就是面向过程的流水账<br>我认为，以接口为代表的组合式编程，才是真正的面向对象编程","like_count":0},{"had_liked":false,"id":353575,"user_name":"陈斌","can_delete":false,"product_type":"c1","uid":1149402,"ip_address":"广东","ucode":"AD6933D125C930","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/da/136cdca6.jpg","comment_is_top":false,"comment_ctime":1659578192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659578192","product_id":100039001,"comment_content":"对象 vs 过程。对象是过程，数据特性的抽象产物。每一个具体对象都包含一系列数据的集合，与其相关联的逻辑，而这些数据的抽象定义就是类。抽象的目的是为了封装，封装特性，封装过程，封装类型。抽象的过程和结构化关系引出了继承和多态的逻辑。而为了更好表述这种结构化关系，总结出设计模式的思想。","like_count":0},{"had_liked":false,"id":350935,"user_name":"SICUN","can_delete":false,"product_type":"c1","uid":1254261,"ip_address":"","ucode":"22A384904EB9E9","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/75/2b599841.jpg","comment_is_top":false,"comment_ctime":1657362030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657362030","product_id":100039001,"comment_content":"1. 之前学过画uml，但是实际工作又用不到就没有然后了<br>2.面向对象出现的背景：当时的程序设计领域正面临着一种危机：在软硬件环境逐渐复杂的情况下，软件如何得到良好的维护？面向对象程序设计在某种程度上通过强调可重复性解决了这一问题。<br>来源：https:&#47;&#47;zh.wikipedia.org&#47;wiki&#47;%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1#%E5%8E%86%E5%8F%B2","like_count":0},{"had_liked":false,"id":348716,"user_name":"Ins","can_delete":false,"product_type":"c1","uid":1328500,"ip_address":"","ucode":"A2509BAD9CB72C","user_header":"https://static001.geekbang.org/account/avatar/00/14/45/74/7a82eebb.jpg","comment_is_top":false,"comment_ctime":1655346208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655346208","product_id":100039001,"comment_content":"iOS开发，不赞成纠结规范的UML。首先，UML跟实际开发语言关系不是充要的，UML不一定能完全以及准确表达特定语言的所有实现；其次，高级语言本身的表达能力不比UML差，写UML的额外成本太高，在类中追加几个成员（边界情况很难考虑到的，实际就需要一些变量来规避），难道还要维护UML多几个关系与实体，太累了。大厂一般都是高强度快节奏的需求开发，代码设计变化家常便饭，设计不稳定，UML就没啥意义，因为没时间维护。","like_count":0},{"had_liked":false,"id":345567,"user_name":"姚钫","can_delete":false,"product_type":"c1","uid":1498146,"ip_address":"","ucode":"ECB8B0627A4F9B","user_header":"https://static001.geekbang.org/account/avatar/00/16/dc/22/41a390ae.jpg","comment_is_top":false,"comment_ctime":1652407808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652407808","product_id":100039001,"comment_content":"220512 day03 面向对象<br>1. 主要是类和对象的机制，通过他们的抽象,封装，继承，多态实现为设计模式提供基础<br>2. UML感觉还是要学的，这个阶段可以不用学，面向对象感觉自己掌握的不够好，做需求，自己老是往实现层面想，不能很好的抽象，得学会面向对象分析和面向对象设计，产出出来类以及各个类属性和类如何交互","like_count":0},{"had_liked":false,"id":344547,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1651640858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651640858","product_id":100039001,"comment_content":"在火车上，来打一次卡","like_count":0},{"had_liked":false,"id":336139,"user_name":"葫芦娃","can_delete":false,"product_type":"c1","uid":1969599,"ip_address":"","ucode":"3B33204BC77D04","user_header":"https://static001.geekbang.org/account/avatar/00/1e/0d/bf/aa2d6ba8.jpg","comment_is_top":false,"comment_ctime":1645952142,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645952142","product_id":100039001,"comment_content":"做决策都是在自己所在的场景进行权衡利弊，并没有谁优谁劣<br>对应到是否使用UML？<br>我觉得关键点有两个：<br>（1）要对应到自己的团队现状<br>（2）权衡考虑沟通效率和是否能精准传达<br><br>如果团队更加偏向于学院派，对规范的要求高，而且大家能用UML来表达形成了统一的团队做事文化，则使用UML更好，既能高效沟通，又能精准传达，还能形成规范文档。<br>但一般很难形成这样的团队，像老师讲的，要形成这样的团队，势必有很大学习成本上、管理成本上的投入，在现在的互联网环境中，都是要求快速产出成果，根本不太可能花精力形成这样的统一输出，性价比太低。<br>所以让我选择，我会选择不使用UML，虽然不使用UML，但是设计人在设计文档中一定需要一直考虑一个问题：我这样书写的文档，别人是否能看懂，并不会出现歧义，是否需要增加注释来表明。<br><br>所以我认为，设计文档可以简化，但是一定要加更多的注释来精确传达设计者的意图。<br>","like_count":0},{"had_liked":false,"id":324247,"user_name":"王智","can_delete":false,"product_type":"c1","uid":1337016,"ip_address":"","ucode":"37D2AD591C1AEC","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/b8/ece79234.jpg","comment_is_top":false,"comment_ctime":1638347806,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638347806","product_id":100039001,"comment_content":"第一题：<br>我觉得没有关系。大家都掌握了，就不存沟通成本很高。另外，我感觉不存在很高的学习成本，看懂图例，结合实际训练几次就好了。<br>第二题：<br>没有。","like_count":0},{"had_liked":false,"id":323616,"user_name":"看看","can_delete":false,"product_type":"c1","uid":1161261,"ip_address":"","ucode":"5885A3AC0B7F4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/2d/b683a4a8.jpg","comment_is_top":false,"comment_ctime":1638022546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638022546","product_id":100039001,"comment_content":"1、要搞清楚做什么；2、要搞清楚怎么做。3、产出类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法、类与类之间如何交互","like_count":0},{"had_liked":false,"id":322185,"user_name":"hj_zack","can_delete":false,"product_type":"c1","uid":1181113,"ip_address":"","ucode":"53A11BAE0CEA2B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/NAcDfnQjZMSXE1ib2sAviaQFQHMsf7IJjTH73CaOic37R9QibdXNCNvzUGdqkIJYI05u3LnKmQRomqRRmMAhg9B1HQ/132","comment_is_top":false,"comment_ctime":1637226005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637226005","product_id":100039001,"comment_content":"1.首先我认为画图还是很有必要的，能让自己的设计更加清晰的展示出来。UML的本质也是为了让自己的设计更加清晰的展示出来，并让大家看懂。过于复杂的确是个比较大的问题，我认为UML大部分还是比较有用的，复杂的问题，可以通过简化来实现，不一定要完全按照他们的规范来。","like_count":0},{"had_liked":false,"id":321670,"user_name":"Z宇锤锤","can_delete":false,"product_type":"c1","uid":2188142,"ip_address":"","ucode":"7DB36E986A7A51","user_header":"https://static001.geekbang.org/account/avatar/00/21/63/6e/6b971571.jpg","comment_is_top":false,"comment_ctime":1636986886,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636986886","product_id":100039001,"comment_content":"对象三部曲：分析、设计、编码","like_count":0},{"had_liked":false,"id":315704,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1633946955,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633946955","product_id":100039001,"comment_content":"UML这玩意儿工作中基本上没有过，功能复杂一点效率太低了。方案审核一般都是先把功能细化，有页面的画原型图，没页面的出个ppt，领导才不管你怎么去实现呢。","like_count":0},{"had_liked":false,"id":315699,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1633946258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633946258","product_id":100039001,"comment_content":"“面向对象编程语言是支持类或对象的语法机制，并有现成的语法机制，能方便地实现面向对象编程四大特性（封装、抽象、继承、多态）的编程语言”，中”并有现成的语法机制“怎么理解？","like_count":0},{"had_liked":false,"id":315067,"user_name":"Geek_1","can_delete":false,"product_type":"c1","uid":2704407,"ip_address":"","ucode":"59300A73996D20","user_header":"https://static001.geekbang.org/account/avatar/00/29/44/17/e4fdcaad.jpg","comment_is_top":false,"comment_ctime":1633678735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633678735","product_id":100039001,"comment_content":"UMl的学习成本确实不低，我觉得从提高编程水平的角度出发，没有必要循规蹈矩。面向对象分析、面向对象设计、面向对象编程，不要使用面向对象的编程语言写出非面向对象的代码","like_count":0},{"had_liked":false,"id":313070,"user_name":"黑豹","can_delete":false,"product_type":"c1","uid":1100751,"ip_address":"","ucode":"B9F94D0AFA89DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/cf/417a5ec2.jpg","comment_is_top":false,"comment_ctime":1632270279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632270279","product_id":100039001,"comment_content":"Uml有没有用，要看使用的具体环境。在复杂工业软件领域，是绝对必要的。至于看不看得懂，首先要反思的，是自己是不是合格的软件从业者。","like_count":0},{"had_liked":false,"id":312946,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1632134594,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1632134594","product_id":100039001,"comment_content":"UML图可以画得不那么标准，还是建议在设计方案中使用，在定义上更加清晰","like_count":0},{"had_liked":false,"id":309897,"user_name":"兔嘟嘟","can_delete":false,"product_type":"c1","uid":2028811,"ip_address":"","ucode":"5A9042B4C7670C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","comment_is_top":false,"comment_ctime":1630387556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630387556","product_id":100039001,"comment_content":"个人在学校的经验：课程设计这一类应付式的，都要从头到脚武装一套文档，uml肯定少不了，然后瀑布开发。自己搞比赛、项目时，用敏捷开发，反而UML没咋用，主要是写清楚概要设计和代码文档","like_count":0},{"had_liked":false,"id":308125,"user_name":"刘泽民","can_delete":false,"product_type":"c1","uid":2731016,"ip_address":"","ucode":"E4F55018D01ABD","user_header":"","comment_is_top":false,"comment_ctime":1629422953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629422953","product_id":100039001,"comment_content":"uml成本很高，学习成本很大而且在真正开发中起到的作用。如果进一步学习成长，这部分也是绕不开的一部分。所以我觉得这个需要根据实际情况去学习掌握","like_count":0},{"had_liked":false,"id":306543,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1628602773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628602773","product_id":100039001,"comment_content":"1. UML用的不多，接触过一些，要掌握还是要花一周左右的时间，不过即使没有UML，使用更加简单的图来说明类之间的关系还是很重要的<br>2. 对于面向对象还有就是各种具体的特性了，比如访问权限等","like_count":0},{"had_liked":false,"id":303656,"user_name":"连星科技","can_delete":false,"product_type":"c1","uid":2642229,"ip_address":"","ucode":"C84FF7FF4AAE56","user_header":"https://static001.geekbang.org/account/avatar/00/28/51/35/d3a1144b.jpg","comment_is_top":false,"comment_ctime":1626918527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626918527","product_id":100039001,"comment_content":"UML图现在有的线有点理解不了，希望后面的学习可以搞清楚","like_count":0,"discussions":[{"author":{"id":1446492,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/5c/27b8c611.jpg","nickname":"黎明","note":"","ucode":"809EC045A34966","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318851,"discussion_content":"想太多了，一样的堆砌代码","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1603866867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2853072,"avatar":"","nickname":"小杰同学","note":"","ucode":"C6FC59D58F772C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574701,"discussion_content":"因为老板觉得代码已经腐烂没关系 能赚钱就行了  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654267423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312855,"discussion_content":"一样一样,认为随便招几个开发就OK,实际上代码已经腐烂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602835522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303071,"user_name":"孙静","can_delete":false,"product_type":"c1","uid":1424967,"ip_address":"","ucode":"1EDC6DCAA99490","user_header":"https://static001.geekbang.org/account/avatar/00/15/be/47/13f28bce.jpg","comment_is_top":false,"comment_ctime":1626578468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626578468","product_id":100039001,"comment_content":"第一个问题我很赞同，工作了这么多年 身边使用uml画图的很少，大家都是使用流程图阿 关系图 脑图<br>第二个问题，从上学到毕业一直都是面向对象，到底怎样才算面向对象 我还是有一些疑惑的","like_count":0},{"had_liked":false,"id":302089,"user_name":"拓山","can_delete":false,"product_type":"c1","uid":1545647,"ip_address":"","ucode":"11FE9CF3821898","user_header":"https://static001.geekbang.org/account/avatar/00/17/95/af/b7f8dc43.jpg","comment_is_top":false,"comment_ctime":1626074982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626074982","product_id":100039001,"comment_content":"UML类图推荐看《大象-Thinking in UML》 看完之后，保证百病不侵","like_count":0},{"had_liked":false,"id":301484,"user_name":"常清","can_delete":false,"product_type":"c1","uid":1106090,"ip_address":"","ucode":"EA6975FDFD4D11","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/aa/68a7921b.jpg","comment_is_top":false,"comment_ctime":1625712860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625712860","product_id":100039001,"comment_content":"面向对象或者面向过程跟编程语言应该是两个概念。对于编程语言来说，面向对象还是面向过程只是编程语言的一部分功能，应该说编程语言添加了支持面向对象编程的语法，或者支持面向过程编程的语法。","like_count":0},{"had_liked":false,"id":300141,"user_name":"eHackyd","can_delete":false,"product_type":"c1","uid":2277251,"ip_address":"","ucode":"E6E7994FBDF0A5","user_header":"https://static001.geekbang.org/account/avatar/00/22/bf/83/c83be5a3.jpg","comment_is_top":false,"comment_ctime":1625020148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625020148","product_id":100039001,"comment_content":"我想请教下 王争哥，什么是上层、下层，如何定义","like_count":0},{"had_liked":false,"id":299485,"user_name":"易飞","can_delete":false,"product_type":"c1","uid":2630424,"ip_address":"","ucode":"32AC28754237F7","user_header":"https://static001.geekbang.org/account/avatar/00/28/23/18/4284361f.jpg","comment_is_top":false,"comment_ctime":1624675644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624675644","product_id":100039001,"comment_content":"没用过uml,,","like_count":0},{"had_liked":false,"id":295422,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1622426628,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1622426628","product_id":100039001,"comment_content":"uml不会😂","like_count":0},{"had_liked":false,"id":290019,"user_name":"十年","can_delete":false,"product_type":"c1","uid":2579233,"ip_address":"","ucode":"A3CE0646B96B9B","user_header":"https://static001.geekbang.org/account/avatar/00/27/5b/21/528cf2d1.jpg","comment_is_top":false,"comment_ctime":1619324294,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619324294","product_id":100039001,"comment_content":"对于临时和同事沟通或是发表看法的确不需要遵守uml 的规范，如果形成文档的话还是需要规范的Uml 供后人参考","like_count":0},{"had_liked":false,"id":288369,"user_name":"吞天","can_delete":false,"product_type":"c1","uid":1269292,"ip_address":"","ucode":"5148947709A54F","user_header":"https://static001.geekbang.org/account/avatar/00/13/5e/2c/25a0f40f.jpg","comment_is_top":false,"comment_ctime":1618447819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618447819","product_id":100039001,"comment_content":"面向对象编程是方法，面向对象编程语言是工具。","like_count":0},{"had_liked":false,"id":287904,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1618213063,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1618213063","product_id":100039001,"comment_content":"uml 只是沟通的工具，如果在和多数不熟悉uml沟通时，可以换一种方法来沟通","like_count":0},{"had_liked":false,"id":287096,"user_name":"糖小宝","can_delete":false,"product_type":"c1","uid":1386966,"ip_address":"","ucode":"15A8B649F668B1","user_header":"https://static001.geekbang.org/account/avatar/00/15/29/d6/6dafc576.jpg","comment_is_top":false,"comment_ctime":1617775313,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1617775313","product_id":100039001,"comment_content":"我UML图是代码画的，推荐插件PlantUML，根据简单代码，生成UML图，很方便，也很快","like_count":0},{"had_liked":false,"id":285384,"user_name":"Alicia1150","can_delete":false,"product_type":"c1","uid":1435760,"ip_address":"","ucode":"94FF9E2F04AD9E","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/70/34a83798.jpg","comment_is_top":false,"comment_ctime":1616766379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616766379","product_id":100039001,"comment_content":"在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>个人认为，面向对象分析和设计使用UML建模是有必要的，特别是对于在读大学生来说，这个学习成本还是必须花费的。从对功能性需求的用例图和用例描述到分析阶段的时序图和分析类图，再到概要设计阶段的体系结构选择和详细设计阶段的用例实现方案（包括时序图和设计类图），这些是了解系统分析和设计过程的有力工具，但是确实并不用过分追求细节。","like_count":0},{"had_liked":false,"id":284541,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1616326242,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616326242","product_id":100039001,"comment_content":"(1)UML学习的成本确实很高，但UML也确实是一种很好的设计工具，实际应用时，可以折衷一下，学习一下常用的设计图，不一定要很精通，能在开发过程中灵活运用这些设计图来达到设计的效果即可。<br>(2)其他的面向对象的概念：类方法、类属性、类模板，这些不知道算不算。","like_count":0},{"had_liked":false,"id":281499,"user_name":"xilie","can_delete":false,"product_type":"c1","uid":1013805,"ip_address":"","ucode":"AFCC4E157F7830","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJVegfjqa0gM4hcRrBhZkIf7Uc5oeTMYsg6o5pd76IQlUoIIh2ic6P22xVEFtRnAzjyLtiaPVstkKug/132","comment_is_top":false,"comment_ctime":1614765605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614765605","product_id":100039001,"comment_content":"iOS经常被面试问到的runtime里面的isa指针，那么isa是什么意思，哈哈，原来是is-a","like_count":0},{"had_liked":false,"id":281214,"user_name":"九天雪海","can_delete":false,"product_type":"c1","uid":1170813,"ip_address":"","ucode":"90B42186557717","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyPPFIyvytj54U9gCrUyKctpMeQDGqs1ez8SyIQy4OPHkib0Al2Qe3PMmUY8oZsr4zTMVTyaeicTWA/132","comment_is_top":false,"comment_ctime":1614648042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614648042","product_id":100039001,"comment_content":"uml虽然有时候比较难画难懂，但对于数据结构和设计模式来讲，就是小巫见大巫了，而且用的频率甚至会比设计模式更多，不是每个项目都会用到很多设计模式，但一定都需要模型设计和流程设计。所以我认为掌握一到两种建模语言（uml比较通用）也是程序员的必修课！","like_count":0},{"had_liked":false,"id":280374,"user_name":"Geek_ea3267","can_delete":false,"product_type":"c1","uid":1962384,"ip_address":"","ucode":"71C1EBF50F457A","user_header":"","comment_is_top":false,"comment_ctime":1614171690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614171690","product_id":100039001,"comment_content":"1.如果团队每个人都熟悉UML的话是很好的, 这是一个共享词汇的过程,沟通成本很低, 不然每个人都有自己的表达方式, 加大了沟通成本.<br>2.面向对象编程风格是将现实世界关系建模到程序中的一种方式","like_count":0},{"had_liked":false,"id":280022,"user_name":"爱学习的Kirk","can_delete":false,"product_type":"c1","uid":2392633,"ip_address":"","ucode":"CB6607E26037EC","user_header":"https://static001.geekbang.org/account/avatar/00/24/82/39/c3227567.jpg","comment_is_top":false,"comment_ctime":1614056678,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614056678","product_id":100039001,"comment_content":"1.对于UML类图，虽然更具场景的不同，表达的方式不同，对于一个优秀的开发者来说耗费一定的时间去学习个人觉得很有必要，正所谓，知其然，知其所以然。<br>2.面相对象设计过程还需要考虑一个对象的复用性，唯一性等特性","like_count":0},{"had_liked":false,"id":279887,"user_name":"夜空中的咸鱼","can_delete":false,"product_type":"c1","uid":2143489,"ip_address":"","ucode":"D6F1EAF082D000","user_header":"https://static001.geekbang.org/account/avatar/00/20/b5/01/9938349b.jpg","comment_is_top":false,"comment_ctime":1613993037,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1613993037","product_id":100039001,"comment_content":"1.关于uml这个我是头一次听说！没有使用过！我回去后在了解了解<br>2.关于面向对象！我都是简单的使用一下单利模式！关于原理我还不是很懂","like_count":0},{"had_liked":false,"id":279834,"user_name":"刘剑","can_delete":false,"product_type":"c1","uid":1140328,"ip_address":"","ucode":"B530AE58C05788","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/68/fe556f2f.jpg","comment_is_top":false,"comment_ctime":1613978682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613978682","product_id":100039001,"comment_content":"其实uml可以不拘泥于形式，每次的计划任务，可以用任意软件或者简单的纸笔，把自己对功能的理解，或是类图，或是时序图简单表示出来，一些关键流程可以单独抽离出来，把流程图丰富一下，像非象，不要拘泥于形式，只要能够足够表述清楚，简单的线条描述也可以。","like_count":0},{"had_liked":false,"id":272435,"user_name":"锐锐爱南球","can_delete":false,"product_type":"c1","uid":1158621,"ip_address":"","ucode":"7AA4CA355B9D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/dd/970e7b4a.jpg","comment_is_top":false,"comment_ctime":1610089490,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1610089490","product_id":100039001,"comment_content":"其实在中国的互联网大厂也很少用UML图或者标准规范的UML图，大部分也是白板草图。我觉得可能在需要出很详细的说明，架构文档的时候才会有，比如外企啥的。","like_count":0},{"had_liked":false,"id":267365,"user_name":"焱","can_delete":false,"product_type":"c1","uid":1113301,"ip_address":"","ucode":"677BF1BE4B94D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/d5/1cf5fd56.jpg","comment_is_top":false,"comment_ctime":1607695603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607695603","product_id":100039001,"comment_content":"UML表达出大致意思即可吧，没必要细化吧，出了这个没有说抽象类和接口呢设计","like_count":0},{"had_liked":false,"id":264443,"user_name":"Daisy","can_delete":false,"product_type":"c1","uid":1800029,"ip_address":"","ucode":"5B4A9DF62BB583","user_header":"https://static001.geekbang.org/account/avatar/00/1b/77/5d/b3b4bc02.jpg","comment_is_top":false,"comment_ctime":1606468425,"is_pvip":false,"replies":[{"id":"96073","content":"看后面的文章","user_name":"作者回复","comment_id":264443,"uid":"1190123","ip_address":"","utype":1,"ctime":1606700603,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1606468425","product_id":100039001,"comment_content":"面向对象设计有时候容易过度设计，该如何避免呢？","like_count":0,"discussions":[{"author":{"id":2536820,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","nickname":"友","note":"","ucode":"972A4333A8B101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535854,"discussion_content":"第二个接口也算一个规范，而且你替换实现的时候可以把依赖注入的地方替换就行了 非常方便","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638579928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2536820,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","nickname":"友","note":"","ucode":"972A4333A8B101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535852,"discussion_content":"基于接口，可以让上层系统依赖稳定的接口。你可以很方便的替换实现。如果你上层系统依赖的是kafka 有一天你想换 你得更改你所有依赖kafka的类 毕竟你用了其他队列 你名字不能不改吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638579786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263387,"user_name":"初学者","can_delete":false,"product_type":"c1","uid":2331845,"ip_address":"","ucode":"A6B5DDB0FCD5EC","user_header":"https://static001.geekbang.org/account/avatar/00/23/94/c5/67fa8668.jpg","comment_is_top":false,"comment_ctime":1606122269,"is_pvip":false,"replies":[{"id":"96098","content":"������","user_name":"作者回复","comment_id":263387,"uid":"1190123","ip_address":"","utype":1,"ctime":1606700772,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1606122269","product_id":100039001,"comment_content":"面向对象大法好","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510168,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263318,"user_name":"大豆子","can_delete":false,"product_type":"c1","uid":1324285,"ip_address":"","ucode":"728215F11D66B7","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/fd/3dc37768.jpg","comment_is_top":false,"comment_ctime":1606100179,"is_pvip":false,"replies":[{"id":"96102","content":"是的","user_name":"作者回复","comment_id":263318,"uid":"1190123","ip_address":"","utype":1,"ctime":1606700794,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1606100179","product_id":100039001,"comment_content":"关于UML的使用，工作这些年也从来没有做过很严格的UML。大家能看懂明白就行了。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510147,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260417,"user_name":"Geek_63aa00","can_delete":false,"product_type":"c1","uid":2058510,"ip_address":"","ucode":"4AF5D3318F4468","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","comment_is_top":false,"comment_ctime":1605001245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605001245","product_id":100039001,"comment_content":"面向对象是一种思想，我们用思想在编程，而面向对象编程语言是一种工具，提高面向对象编程的效率，而非面向对象语言也可以用思想编程。所以本节主要是设计内功的铺垫，因为设计的侧重点不同，作品也会不同，反映在细节上也会不同。所以很关键，潜移默化掌握这种思想","like_count":0},{"had_liked":false,"id":259969,"user_name":"木头衣服","can_delete":false,"product_type":"c1","uid":1244414,"ip_address":"","ucode":"E049FC32B68D23","user_header":"","comment_is_top":false,"comment_ctime":1604901091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604901091","product_id":100039001,"comment_content":"UML图复杂吗？基本概念很少啊。主要是必须使用它才能解决问题的场景不多，所以容易遗忘吧。但对于熟悉的人而言，使用统一的规范自然是降低沟通成本的事情。","like_count":0},{"had_liked":false,"id":256991,"user_name":"浮世间","can_delete":false,"product_type":"c1","uid":1579931,"ip_address":"","ucode":"90230230D2618D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/xXfbHEUK56zFLSQqhSnNj8BicYiardWZbmM3G2zWdvChH4NWEJSIXuAJpZ92FhQxLTslQgxRAWD4NnftNxLyMO2w/132","comment_is_top":false,"comment_ctime":1603806520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603806520","product_id":100039001,"comment_content":"UML只是一种工具，如果可以使用更简洁有效的方式来实现，那自然是更好的。就如代码的实质：关注于功能的实现结果，而不是功能的实现过程。","like_count":0},{"had_liked":false,"id":256292,"user_name":"一万小时","can_delete":false,"product_type":"c1","uid":1297927,"ip_address":"","ucode":"D2D443595BB1ED","user_header":"","comment_is_top":false,"comment_ctime":1603595218,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603595218","product_id":100039001,"comment_content":"我认为UML虽然学习成本高，不可作为短期学习计划，但是可以作为长期的学习计划，一点点学习，不需要系统化学习，遇到了就看看，零散化的学习即可","like_count":0},{"had_liked":false,"id":255441,"user_name":"紫日","can_delete":false,"product_type":"c1","uid":1207410,"ip_address":"","ucode":"73A8DEE323AC19","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","comment_is_top":false,"comment_ctime":1603345940,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1603345940","product_id":100039001,"comment_content":"面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做。两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法、类与类之间如何交互等等","like_count":0},{"had_liked":false,"id":252881,"user_name":"无名小贝","can_delete":false,"product_type":"c1","uid":1401397,"ip_address":"","ucode":"5209647C491520","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JtPOAEuYCWRnoCyD6kUiciarhGFmiaUOQw6gZj2GRr2NhzBK54eFO8EbxUczP6VWmmQaAmzT4u3y8WArctqNk7ENQ/132","comment_is_top":false,"comment_ctime":1602506031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602506031","product_id":100039001,"comment_content":"面向对象分析、面向对象设计，是我一直没有重视的概念","like_count":0},{"had_liked":false,"id":249549,"user_name":"REAL_MADIRD","can_delete":false,"product_type":"c1","uid":1012889,"ip_address":"","ucode":"9E327B5456739D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/99/dbdee494.jpg","comment_is_top":false,"comment_ctime":1600689063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600689063","product_id":100039001,"comment_content":"确实，工具就是工具，沟通也是有成本的，如果一种工具的沟通成本过高，那不如换沟通成本低的工具","like_count":0},{"had_liked":false,"id":246391,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1599306217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599306217","product_id":100039001,"comment_content":"UML规范最终还是要掌握的，并且也很容易掌握，只是平时用的不多所以很容易遗忘。刚好老师的课程中需要用到，那么最好还是严格按照规范来画，这样我们从老师的课程中还能多学到UML的知识呢","like_count":0},{"had_liked":false,"id":246227,"user_name":"WilliamVector","can_delete":false,"product_type":"c1","uid":1898112,"ip_address":"","ucode":"E0D3C3D4FCB7C9","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/80/85ec2c2a.jpg","comment_is_top":false,"comment_ctime":1599214427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599214427","product_id":100039001,"comment_content":"【要点】<br>1、面向对象编程：面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性，作为代码设计和实现的基石。<br>2、面向对象编程语言：面向对象编程语言是支持类或对象的语法机制，并有现成的语法机制，能方便的实现面向对象编程四大特性(封装、抽象、继承、多态)的编程语言。<br>3、判定一个编程语言是否是面向对象编程语言：如果按照严格定义，需要有现成的语法支持类、对象、四大特性才能叫做面向对象编程语言。如果放宽要求的话，只要某种编程语言支持类、对象语法机制，那基本就可以说这种语言是面向对象编程语言了，不一定非得要求具有所有的四大特性。<br>4、面向对象编程和面向对象编程语言之间的关系：面向对象编程一般使用面向对象编程语言来进行，但是，不用面向对象编程语言，照样可以进行面向对象编程。反过来讲，即便使用面向对象编程语言，写出来的代码也不一定是面向对象编程风格的，也有可能是面向过程编程风格的。<br>5、面向对象分析和面向对象设计：简单点讲，面向对象分析是要搞清楚做什么，面向对象设计是要搞清楚怎么做。两个阶段最终产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法、类与类之间如何交互等等。<br>【思考】<br>1、因人而异吧，如果能高效的使用UML工具建模，就要有效利用这个工具，反之，则可利用其它方法代替。工具是为了更高效的达到目的，如果对你或者团队来说是累赘，那就需要换个工具了。<br>2、类的交互方面，想到了Java的反射机制。","like_count":0},{"had_liked":false,"id":245700,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599030642,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599030642","product_id":100039001,"comment_content":"问题1：<br>1、个人习惯使用UML图，虽然画类图的时候，确实存在学习成本高和使用成本高，而且刻意去化也不一定能别人或者自己看清楚。如果学习和用笔画的话，确实更高效能","like_count":0},{"had_liked":false,"id":242789,"user_name":"Tokiomi","can_delete":false,"product_type":"c1","uid":1632052,"ip_address":"","ucode":"E2C0A59D1B1D4F","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/34/66289bd6.jpg","comment_is_top":false,"comment_ctime":1597841775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597841775","product_id":100039001,"comment_content":"JS有继承呀，es5就可以通过很多方式实现继承，es6开始也提供了原生的class语法糖","like_count":0},{"had_liked":false,"id":241373,"user_name":"磐星","can_delete":false,"product_type":"c1","uid":1003640,"ip_address":"","ucode":"19436A86714C3D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/78/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1597281974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597281974","product_id":100039001,"comment_content":"简单总结下 什么是面向对象的语言，和分析，设计，编程   <br>UML图的说法比较认同，需要画了别人看不懂 久而久之，自己看也要翻参考文档了","like_count":0},{"had_liked":false,"id":239811,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1596667907,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596667907","product_id":100039001,"comment_content":"UML比较复杂，在实际工作中，只要画出的图能表达意思就行。<br>","like_count":0},{"had_liked":false,"id":239584,"user_name":"大力","can_delete":false,"product_type":"c1","uid":1364353,"ip_address":"","ucode":"1B2125C519443D","user_header":"https://static001.geekbang.org/account/avatar/00/14/d1/81/89ba9d81.jpg","comment_is_top":false,"comment_ctime":1596591842,"is_pvip":false,"replies":[{"id":"89268","content":"prototype对吧，有点继承的意思","user_name":"作者回复","comment_id":239584,"uid":"1190123","ip_address":"","utype":1,"ctime":1597453921,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1596591842","product_id":100039001,"comment_content":"老师，JavaScript 其实是不是也算是支持继承呢，不过不是像 Java 那样是基于类的继承，它是基于原型的继承？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503146,"discussion_content":"prototype对吧，有点继承的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597453921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238682,"user_name":"你真丑","can_delete":false,"product_type":"c1","uid":2094521,"ip_address":"","ucode":"BC4D2AFBC7A8B9","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f5/b9/de8eaa76.jpg","comment_is_top":false,"comment_ctime":1596260657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596260657","product_id":100039001,"comment_content":"个人认为uml的确方便表达一些东西，但前提必须要牢牢掌握uml中的一些知识点。","like_count":0},{"had_liked":false,"id":238605,"user_name":"Elvis Lee","can_delete":false,"product_type":"c1","uid":2098270,"ip_address":"","ucode":"A4B26AFFE817FA","user_header":"https://static001.geekbang.org/account/avatar/00/20/04/5e/5d2e6254.jpg","comment_is_top":false,"comment_ctime":1596211208,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596211208","product_id":100039001,"comment_content":"对于学有余力的同学来说，可以学习如何看UML,我打算二刷的时候补一次UML","like_count":0},{"had_liked":false,"id":235645,"user_name":"Apologize","can_delete":false,"product_type":"c1","uid":1503320,"ip_address":"","ucode":"F2F179241EDA4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/f0/58/87104eab.jpg","comment_is_top":false,"comment_ctime":1595135519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595135519","product_id":100039001,"comment_content":"UML的学习成本很高，但是我们可以使用工具生成现有类的ULM图，来检查类的设计是否合理，感觉还是挺有用的。","like_count":0},{"had_liked":false,"id":235188,"user_name":"朱月俊","can_delete":false,"product_type":"c1","uid":1017707,"ip_address":"","ucode":"4DA0728B862FBD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","comment_is_top":false,"comment_ctime":1594921663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594921663","product_id":100039001,"comment_content":"在编写正规的系统设计文档时，uml还是必要的，除了能够梳理自己的逻辑外，还可以镇场子。","like_count":0},{"had_liked":false,"id":233070,"user_name":"幽林萌逐","can_delete":false,"product_type":"c1","uid":1520451,"ip_address":"","ucode":"E6D95EC891800F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqrAA1j4Oyy6ibicNOicn8K0olrEjtLLanic8V0y9icia6cvCVRCiabOm5llC0WhzcSWvaI2fia75hYbvjrQ/132","comment_is_top":false,"comment_ctime":1594209610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594209610","product_id":100039001,"comment_content":"打卡<br>我觉得面向对象是一种处理编程逻辑的思维，而语言只是个辅助，面向对象语言可以让你更好的写出面向对象风格的代码。","like_count":0},{"had_liked":false,"id":228222,"user_name":"杨锋","can_delete":false,"product_type":"c1","uid":1283461,"ip_address":"","ucode":"85A7828A538FB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/95/85/15cd21c2.jpg","comment_is_top":false,"comment_ctime":1592618012,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592618012","product_id":100039001,"comment_content":"我的理解，UML还是生态问题，没有那么普及，有的人会有的人不会，画出来的东西很多人都看不懂，还不如草图来的直接。<br>今天了解了OOA、OOD、OOP，面向对象分析，面向对象设计和面向对象编程。以及三者的对应的关系，依次为：分析出需要做什么(OOA)，怎么做(OOD)，以及如何翻译成代码。三者是有序的。","like_count":0},{"had_liked":false,"id":226552,"user_name":"小树苗","can_delete":false,"product_type":"c1","uid":1644500,"ip_address":"","ucode":"71288176D058E2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqtnoXPFibFwKdrUibJQWYSCmAlc7FeEH5MbjiawszNgwEXAkuWKGYQMTQbnQbjlR8n9lpDgN4GQHoXQ/132","comment_is_top":false,"comment_ctime":1592139842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592139842","product_id":100039001,"comment_content":"关于UML，感觉也应该考虑下投入产出比，很多时候做与不做，不是好与不好，而是取舍不一样。","like_count":0},{"had_liked":false,"id":225651,"user_name":"maybe","can_delete":false,"product_type":"c1","uid":1475528,"ip_address":"","ucode":"93D160F617E750","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/c8/5ce842f6.jpg","comment_is_top":false,"comment_ctime":1591805317,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1591805317","product_id":100039001,"comment_content":"uml的目的是要标准表达，但是要根据实际情况使用了。按照快节奏的开发，特别特别花时间搞出完美的图，团队又不一定都能高效吸收的话那就已经脱离实际了","like_count":0},{"had_liked":false,"id":221416,"user_name":"lee","can_delete":false,"product_type":"c1","uid":1213651,"ip_address":"","ucode":"68633E69154801","user_header":"https://static001.geekbang.org/account/avatar/00/12/84/d3/34820f8f.jpg","comment_is_top":false,"comment_ctime":1590496421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590496421","product_id":100039001,"comment_content":"有些时候还是很有用的，看源码的时候，有些复杂的库，把类之间的关系用UML画出来，有助于理解和分析。否则光是靠脑子看和记，很难看懂","like_count":0},{"had_liked":false,"id":220020,"user_name":"朝小树","can_delete":false,"product_type":"c1","uid":1323875,"ip_address":"","ucode":"18DC282DEF16C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/63/2d48822a.jpg","comment_is_top":false,"comment_ctime":1590136576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590136576","product_id":100039001,"comment_content":"面向对象编程是一种编程范式；用面向对象的编程语言可以更好的面向对象编程；<br>面向对象编程语言也可以用于面向过程编程；比如大部分人用springboot 的mvc其实是面向过程编程。","like_count":0},{"had_liked":false,"id":216559,"user_name":"scmath","can_delete":false,"product_type":"c1","uid":1149022,"ip_address":"","ucode":"641023BB246C29","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/5e/7c76f422.jpg","comment_is_top":false,"comment_ctime":1589283662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589283662","product_id":100039001,"comment_content":"面向对象编程是一种编程范式，通过接口、类、函数、对象来组织代码。<br>UML类之间的关系：泛化对应继承(is-a)、实现对于接口(has-a)和接口实现、关联(构造函数初始化类B)、聚合(函数内初始化类B)、组合(构造函数传入类B的实例)、依赖(函数传入类B实例)。<br>面向对象编程过程：OOA：：需求分析，知道做什么。OOD：：面向对象分析，根据需求抽取出类、类的属性和方法，分析类之间关系(泛化、实现、关联、聚合、组合、依赖)。OOP：：编码实现。<br>","like_count":0},{"had_liked":false,"id":216466,"user_name":"师哥","can_delete":false,"product_type":"c1","uid":1333376,"ip_address":"","ucode":"A86CD1661D370F","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/80/c9e232b6.jpg","comment_is_top":false,"comment_ctime":1589265812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589265812","product_id":100039001,"comment_content":"本章了解了什么是面向对象编程和面向对象编程语言。并且了解了面向对象分析，面向对象设计，面向对象编程。我发现工作这么多年好像一直都是在做面向过程编程。以后要多向DDD 设计靠拢。","like_count":0},{"had_liked":false,"id":215460,"user_name":"zlxag","can_delete":false,"product_type":"c1","uid":1163321,"ip_address":"","ucode":"136FB0201B64A3","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/39/16340f72.jpg","comment_is_top":false,"comment_ctime":1588995386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588995386","product_id":100039001,"comment_content":"赞同老师对面向对象编程的说法，真正还是要知道面向对象设计思想，不用面向对象编程语言，但是知道怎么抽象，人咬狗 明白这个是一个业务 抽象成面向对象设计 就能向面向对象编程靠齐 面向对象具备就是还有行为 状态 唯一性。人受伤是人的状态，狗情绪发怒也是狗的状态，抽象出来了 才能很好的面向对象完成人咬狗这个业务，咬这个并不是人对象的，也不是狗的。要是封装 多态 继承都用好了就是个很好的面向对象编程的编程风格。","like_count":0},{"had_liked":false,"id":214852,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1588833029,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1588833029","product_id":100039001,"comment_content":"uml 图只是工具，如果能用其他的方式进行良好的沟通，不用学uml也无所谓。","like_count":0},{"had_liked":false,"id":214159,"user_name":"Ifdevil","can_delete":false,"product_type":"c1","uid":1212912,"ip_address":"","ucode":"79DB0ADE9AD082","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/f0/695ca05f.jpg","comment_is_top":false,"comment_ctime":1588668871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588668871","product_id":100039001,"comment_content":"UML对我的意义就是学习源码的一种方式，尤其比较复杂的源码spring等，自己手动画画uml类图，时序图，可以画出主线，不至于陷入到细节中，乱了头绪","like_count":0},{"had_liked":false,"id":213634,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1588496775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588496775","product_id":100039001,"comment_content":"1. UML没有怎么用过，在开始接触的时候只是觉得比较麻烦。。。。<br><br>2. 面向对象的思想诞生的背景：在20世纪60年代，当时的程序设计领域正面临着一种危机：在软硬件环境逐渐复杂的情况下，软件如何得到良好的维护？面向对象程序设计在某种程度上通过强调可重复性解决了这一问题。","like_count":0},{"had_liked":false,"id":203750,"user_name":"makermade","can_delete":false,"product_type":"c1","uid":1133194,"ip_address":"","ucode":"03386B90CB8F20","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","comment_is_top":false,"comment_ctime":1586262518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586262518","product_id":100039001,"comment_content":"UML太难记了，环境不允许啊，你学会了，人家看不懂，也没用。再好的语言，也是用来沟通的","like_count":0},{"had_liked":false,"id":203539,"user_name":"晏书","can_delete":false,"product_type":"c1","uid":1749722,"ip_address":"","ucode":"26506509DA1BCA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b2/da/75b3d9f6.jpg","comment_is_top":false,"comment_ctime":1586230022,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586230022","product_id":100039001,"comment_content":"对于工具类的使用，我觉得怎么方便怎么来，只是服务于我们更好的掌握某些知识点，而不应该把工具当成负担。","like_count":0},{"had_liked":false,"id":203289,"user_name":"guan0078","can_delete":false,"product_type":"c1","uid":1090467,"ip_address":"","ucode":"53B15FF3752A40","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/a3/804fb3e9.jpg","comment_is_top":false,"comment_ctime":1586166173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586166173","product_id":100039001,"comment_content":"完全不了解UML是不行的，全都掌握也没必要。从需求到模型，到代码实现全都可以通过好的UML工具实现。在实际工作中数据模型图，流程图，时序图，用例图是必须要掌握的。逻辑架构图也会要求有。其他一般了解下，用的时候在看也可以。","like_count":0},{"had_liked":false,"id":202328,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1585968916,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1585968916","product_id":100039001,"comment_content":"关于UML的使用，个人在工作中也是和作者一样的感觉。学习成本的确挺高，规范多而且杂。在工作中很难去按照这样的规范去践行。图就是思路、想法的一种抽象，只要能够清晰、准确的传达思想就是好的“UML”图。前人的经验，不一定适合于当今的时代。我们需要有选择性的选取和创新。","like_count":0},{"had_liked":false,"id":200872,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1585664950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585664950","product_id":100039001,"comment_content":"老师我有一个问题，接到一个需求的时候是应该先做面向对象的分析与设计，还是先做数据库的设计。我一般做完数据库设计，没有做面向对象的分析与设计，就开始开发了。","like_count":0},{"had_liked":false,"id":200867,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1585664190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585664190","product_id":100039001,"comment_content":"1.我认为基本的泛化、实现、关联、聚合、组合、依赖 还是需要掌握的，这个对需求分析很有帮助，程序员之间的沟通效率会高一些。<br><br>2.我想知道如何才算是知道把面向对象分析给分析好了。有什么标准吗？还是按照经验。","like_count":0},{"had_liked":false,"id":200384,"user_name":"赵毅","can_delete":false,"product_type":"c1","uid":1905585,"ip_address":"","ucode":"28F6820F1987F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgDicRj9LAvWVyuibTbRnZDFeC6uWI8zfWU1gLM6yPoNklUaiar4TKxEyRHFibjIth3iahRNLcNvewjug/132","comment_is_top":false,"comment_ctime":1585579281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585579281","product_id":100039001,"comment_content":"UML只需要知道一些简单的就可以了吧","like_count":0},{"had_liked":false,"id":198568,"user_name":"乐朦","can_delete":false,"product_type":"c1","uid":1938739,"ip_address":"","ucode":"C5A666DB0521E0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/95/33/7d4b08ec.jpg","comment_is_top":false,"comment_ctime":1585457132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585457132","product_id":100039001,"comment_content":"对我来说，能把知识点讲明白，让别人看懂。其他的都不重要。","like_count":0},{"had_liked":false,"id":198050,"user_name":"郭强","can_delete":false,"product_type":"c1","uid":1192928,"ip_address":"","ucode":"38F36F0F4CC775","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/e0/387ab6fd.jpg","comment_is_top":false,"comment_ctime":1585407860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585407860","product_id":100039001,"comment_content":"uml我觉得不用拘泥于格式细节，重在表意，很多关系一目了然，如果还是标注细节很繁琐，又浪费时间。","like_count":0},{"had_liked":false,"id":197704,"user_name":"面向百度编程","can_delete":false,"product_type":"c1","uid":1732780,"ip_address":"","ucode":"8FE04A019D71D1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/ac/83bc14c0.jpg","comment_is_top":false,"comment_ctime":1585393056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585393056","product_id":100039001,"comment_content":"哈哈哈，没啥看法，软件工程专业的表示能看懂，而且非常清楚泛化，继承，聚合，组合，关联，依赖是什么意思","like_count":0},{"had_liked":false,"id":197575,"user_name":"这得从我捡到一个鼠标垫开始说起","can_delete":false,"product_type":"c1","uid":1272321,"ip_address":"","ucode":"2FF4347B4E7A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","comment_is_top":false,"comment_ctime":1585386033,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585386033","product_id":100039001,"comment_content":"大学的时候学了点UML，到现在完全不记得了，特别容易混淆那些箭头","like_count":0},{"had_liked":false,"id":195700,"user_name":"马球先生","can_delete":false,"product_type":"c1","uid":1119609,"ip_address":"","ucode":"858C2CE0E494C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/79/efde2a69.jpg","comment_is_top":false,"comment_ctime":1585213371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585213371","product_id":100039001,"comment_content":"感觉head first的 design pattern书中的UML还挺好理解的","like_count":0},{"had_liked":false,"id":190990,"user_name":"墨鱼","can_delete":false,"product_type":"c1","uid":1022720,"ip_address":"","ucode":"8FB5E4DCB8A024","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/00/654be3f7.jpg","comment_is_top":false,"comment_ctime":1584716311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584716311","product_id":100039001,"comment_content":"UML 只是一种工具而已，如果完全按照规范画时间成本太高，看懂也需要很大精力。所以我觉得能画一个草图，能沟通就行。没必要舍近求远。<br>","like_count":0},{"had_liked":false,"id":190239,"user_name":"Geek_032104","can_delete":false,"product_type":"c1","uid":1298282,"ip_address":"","ucode":"25542A2348F99F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/G61OS6hibNG7iakUmXeKmcY5VtFWnPpywzjOcUCm3t0HsibCibm3jzLNbdvjKQ8G8WSIkicBiaqoCsvHibn3M7wV4YbrA/132","comment_is_top":false,"comment_ctime":1584620880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584620880","product_id":100039001,"comment_content":"当初学UML的时候，就觉得很晦涩，实际工作中用的人也少","like_count":0},{"had_liked":false,"id":189837,"user_name":"索旭东","can_delete":false,"product_type":"c1","uid":1139039,"ip_address":"","ucode":"BFD07BCD8C8CAE","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/5f/b279daaf.jpg","comment_is_top":false,"comment_ctime":1584575223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584575223","product_id":100039001,"comment_content":"书里面经常不写抽象，可能因为抽象是任何编程语言的基本原则","like_count":0},{"had_liked":false,"id":189658,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1584539219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584539219","product_id":100039001,"comment_content":"讲的观点跟自己以前自己琢磨的观点，好多相似的，uml感觉还是能够理解就行，不用画特别正规的图","like_count":0},{"had_liked":false,"id":184524,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1091781,"ip_address":"","ucode":"67802124F5181D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epjdWhOia2BKpvYDUIria0klBOvxU4v8CfsobsGYicUia6Hybb4n658LfJymFbuPk0koxldr6QIOpQsMA/132","comment_is_top":false,"comment_ctime":1583333252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583333252","product_id":100039001,"comment_content":"使用简单的UML即可，只要能说明问题帮助分析和设计","like_count":0},{"had_liked":false,"id":181903,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1582677609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582677609","product_id":100039001,"comment_content":"UML 确实很复杂，我认为使用 UML 表达出设计的意思即可，没有必要完全遵从 UML 的规范。比如我目前的工作中，用到的 UML 好像只有类图、时序图、用例图三种。对于类图，也只用到过继承、实现、依赖三种关系。时序图刚刚使用时恨不得将每个类的每个方法的调用关系都画出来，结果不仅使得时序图看上去很复杂，连自己过段时间再看也觉得太复杂了，结果是辛苦半天却事倍功半，后来时序图也是越画越简单，只要能表达出调用关系即可。","like_count":0},{"had_liked":false,"id":181600,"user_name":"Geek_dba6ea","can_delete":false,"product_type":"c1","uid":1265744,"ip_address":"","ucode":"D6C27BC681001B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLU70sUuWXN8aUViaIDMcuFT1uPvlKFk4dsceFNLNdNnUjQbNmHUZwFxDAnpm6dJHyOR0Q47Q2hpmw/132","comment_is_top":false,"comment_ctime":1582589645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582589645","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":180547,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1582334812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582334812","product_id":100039001,"comment_content":"摒弃学院派的完美主义，抓主干，抓重点；本身开拓者们是从实践到理论，后来者却要理论到实践；能从开拓者的视角来教，小脑容量也能学！","like_count":0},{"had_liked":false,"id":179669,"user_name":"Geek_neo","can_delete":false,"product_type":"c1","uid":1568248,"ip_address":"","ucode":"147211A6624E01","user_header":"https://static001.geekbang.org/account/avatar/00/17/ed/f8/3a7499f9.jpg","comment_is_top":false,"comment_ctime":1582075450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582075450","product_id":100039001,"comment_content":"uml有学习成本，还是脑图或者随手的草图能达意就行","like_count":0},{"had_liked":false,"id":179292,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1581953212,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581953212","product_id":100039001,"comment_content":"对于问题1,我记得有一次开会,需要去讲解这个项目的流程,花费了一天去画一个精致的UML图,但是后来没有用上,浪费了一天时间,于是也就渐渐的不去严格画图了,而是直接用win自带的画图工具去画画草图,能让其他开发人员理解即可<br>对于问题2,可以谈谈我对面向对象的思考,其实就是讲一些所需的属性封装为一个对象,并且实现并使用对象的过程中去用上封装 继承 多态 抽象这四种属性","like_count":0},{"had_liked":false,"id":179205,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1581935902,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1581935902","product_id":100039001,"comment_content":"先概要说下文章的要点：1）区分面向对象编程和面向对象编程语言；2）面向对象编程四大特性：封装、继承、多态、抽象；3）怎么区分面向对象编程语言（个人觉得意义不大）4）面向对象编程的开发流程：面向对象分析（OOA）、面向对象设计（OOD）、面向对象编程（OOP）<br><br>觉得面向对象编程这点还可以补充面向对象适合解决的问题类型，怎么才是面向对象编程的思维。<br><br>关于uml说点看法，简单明了能说明问题就行，形式不限。大学的时候学过一门课《软件建模之道》当时学的云里雾里主要是概念太多了理解不方面，现在讲领域建模强调一个“说人话”，不要为了建模而建模，开发者最常打交道就是程序员、产品和测试，那么你要清楚的表达意思就一定要简单明了，不要说一大堆术语，能把复杂问题简单化的才是高手，简单问题复杂化却是低能。结果导向问题为王，杀鸡焉用牛刀！","like_count":0},{"had_liked":false,"id":178914,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1043401,"ip_address":"","ucode":"B631E56A112BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/c9/b1b233cf.jpg","comment_is_top":false,"comment_ctime":1581854304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581854304","product_id":100039001,"comment_content":"1、在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>答：我觉得取决于项目性质吧，只要刚刚够就好；<br>在互联网行业，讲究地是“敏捷”，就用的很少；而在传统的ToB&#47;ToG，可能就会在乎了；<br><br><br>2、有关面向对象的概念和知识点，除了我们今天讲到的，你还能想到其他哪些吗？<br>答：封装、继承、多态、抽象；<br>确实有点抽象，一直没有很好的理解。","like_count":0},{"had_liked":false,"id":178093,"user_name":"秀丽","can_delete":false,"product_type":"c1","uid":1402332,"ip_address":"","ucode":"9872272B8056F5","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/dc/0737102d.jpg","comment_is_top":false,"comment_ctime":1581585603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581585603","product_id":100039001,"comment_content":"面向对象编程几大概念：直接问，还知道，不过换成以下字母，我就有点蒙。这次一定把他记住：<br><br>OOP：面向对象编程<br>OOPL：面向对象编程语言<br>OOA：面向对象分析<br>OOD：面向对象设计","like_count":0},{"had_liked":false,"id":176476,"user_name":"Geek_bb89c3","can_delete":false,"product_type":"c1","uid":1331828,"ip_address":"","ucode":"0F97B5B0F2DDD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IZKGetBZDuMEa2VwwtesTELvLORIyV749ItgfAqNPv30n4zEv71wuGNr1aNVIVltG0icvH53DHDuqPuzNpiauWAg/132","comment_is_top":false,"comment_ctime":1581066541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581066541","product_id":100039001,"comment_content":"面向对象：1960年出现的概念，C++语言让oo流行。<br>oo主要是通过类和对象的方式来组织系统。tongs遵守抽象，封装<br>，继承，多态四个特性。<br>面向对象语言：主要是语言的机制能够支持类和对象。同时支持抽象，封装，继承，多态。的特性。<br>对于语言并没有实现硬要求，只要支持类和对象就好，不一定需要实现四个特性。<br>ooa主要是搞清楚到底是做什么，ood主要是搞清楚如何做。oop是将想法落地的过程。<br><br><br>","like_count":0},{"had_liked":false,"id":175932,"user_name":"张理查","can_delete":false,"product_type":"c1","uid":1003152,"ip_address":"","ucode":"1F93E631CD4B35","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/90/a8d19e7b.jpg","comment_is_top":false,"comment_ctime":1580887453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580887453","product_id":100039001,"comment_content":"今天开始打卡面向对象。首先我们不应当也没有必要纠结于到底属不属于OOP，到底属不属于OOPL，只要你是在以类或对象的问题在思考与实践，就是在OOP，而你用JAVA线性地堆积业务代码那就是在面向过程。同样OOA和OOD也是，只要是在面向类和对象，产出的focus也在class 和 object 上，那就是OOA和OOD。<br>最后UML是大学里的一大本书，一个学期来讲的知识。如果能对UML规范做一些简化，快速落实到代码，这才是UML的价值和意义，看懂才是第一要务。","like_count":0},{"had_liked":false,"id":174442,"user_name":"空空","can_delete":false,"product_type":"c1","uid":1444122,"ip_address":"","ucode":"8F6EFE5A6F6F64","user_header":"https://static001.geekbang.org/account/avatar/00/16/09/1a/e0f95684.jpg","comment_is_top":false,"comment_ctime":1580210097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580210097","product_id":100039001,"comment_content":"能加上函数式编程的讲解就好了，毕竟不止go, java 1.8开始对函数式编程的支持已经很好了，现在大有流行起来的势头","like_count":0},{"had_liked":false,"id":173506,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1579582351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579582351","product_id":100039001,"comment_content":"1.uml本身是个好东西，但被用坏了，或者说还可以做的更易用一些，很多工具都支持逆向生成类图，但有时觉得用uml画用例图、组件图、活动图表达语义更清晰，类图表达的容易让人迷惑或者不懂uml的人困惑，还没有找到一种面相对象设计合适产出物的标准或规范，虽然说代码即可文档，但是有了类图设计再写代码肯定会更流畅一些。2.面向对象还有切面，协变逆变这些特性算不算？","like_count":0},{"had_liked":false,"id":172951,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1579386242,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579386242","product_id":100039001,"comment_content":"1:我觉得作为架构师还是要学习一下uml的，编码人员能看懂就行了。<br>2:还有泛型，接口等","like_count":0},{"had_liked":false,"id":172352,"user_name":"铁血柔情","can_delete":false,"product_type":"c1","uid":1124220,"ip_address":"","ucode":"F09CACF06B8D05","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/7c/463d4342.jpg","comment_is_top":false,"comment_ctime":1579159508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579159508","product_id":100039001,"comment_content":"uml的学习成本确实有点大，并且很花时间，我觉得会使用就可以了，不需要太多深入的研究，讨论的时候只要模型图通俗易懂就可以了，不需要太标准化。面向对象还有对象的定义和设计。","like_count":0},{"had_liked":false,"id":171570,"user_name":"Fisher","can_delete":false,"product_type":"c1","uid":1089543,"ip_address":"","ucode":"49C0EB546971ED","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/07/8d91021c.jpg","comment_is_top":false,"comment_ctime":1578967206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578967206","product_id":100039001,"comment_content":"1.UML的一些图例基本规范还是要懂。大家都按照基本规范来画，会事半功倍。必要的说明还是需要的。","like_count":0},{"had_liked":false,"id":170753,"user_name":"晓杉","can_delete":false,"product_type":"c1","uid":1209336,"ip_address":"","ucode":"19E634BB61A165","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/f8/dbd2fa50.jpg","comment_is_top":false,"comment_ctime":1578706016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578706016","product_id":100039001,"comment_content":"1. 同意老师的观点，如果不是专业绘图，只是方便设计使用，不必纠结具体的细节实现。<br>2. 面向接口编程，是现在越来越多提及的概念。更加具体的指明了分层分模块重要性，也是多态的具体应用。","like_count":0},{"had_liked":false,"id":166272,"user_name":"北风一叶","can_delete":false,"product_type":"c1","uid":1087302,"ip_address":"","ucode":"30310E66341D2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/46/fe1f21d8.jpg","comment_is_top":false,"comment_ctime":1577429649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577429649","product_id":100039001,"comment_content":"本篇重点讲述了什么是面向对象，由以下的四个方面组成：<br>1. 面对对象的编程主语言：按严格定义来讲指的是支持类、对象及四大特性的语言<br>2. 面向对象的分析：基于类和对象，对业务进行分析，也即搞清楚做什么<br>3. 面向对象的设计：基于类和对象，对业务进行设计，也即搞清楚怎么做<br>4. 面向对象的编程：基于类和对象的编程，将分析和设计进行实现","like_count":0},{"had_liked":false,"id":165401,"user_name":"喵喵喵","can_delete":false,"product_type":"c1","uid":1211713,"ip_address":"","ucode":"E3AD8BF42E19DF","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/41/3c5b770b.jpg","comment_is_top":false,"comment_ctime":1577234152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577234152","product_id":100039001,"comment_content":"打卡～","like_count":0},{"had_liked":false,"id":164663,"user_name":"黄政","can_delete":false,"product_type":"c1","uid":1345630,"ip_address":"","ucode":"9076A1BF7BB051","user_header":"https://static001.geekbang.org/account/avatar/00/14/88/5e/cc916a2b.jpg","comment_is_top":false,"comment_ctime":1577068173,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577068173","product_id":100039001,"comment_content":"1.uml的话，也是体现设计思路的一种方法","like_count":0},{"had_liked":false,"id":164520,"user_name":"请叫我和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1577019588,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577019588","product_id":100039001,"comment_content":"如果说面向过程是关注数据的流向，面向对象是关注对象之间交互，不知道这样理解正不正确，","like_count":0},{"had_liked":false,"id":163842,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1576810527,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1576810527","product_id":100039001,"comment_content":"我是表示赞同的，其实，很多时候草图就可以让人一眼就能看懂，看清晰，看明白。我们是偏向于工程的工程师，而不是偏向研究的科学家。在我们工作的时候时间也是需要考虑的一大因素，能够快速的把自己的想法表达清晰清楚，就已经是很不错的了。","like_count":0},{"had_liked":false,"id":163557,"user_name":"Next","can_delete":false,"product_type":"c1","uid":1748213,"ip_address":"","ucode":"D5ADDF248A9504","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ac/f5/2f97e279.jpg","comment_is_top":false,"comment_ctime":1576743668,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576743668","product_id":100039001,"comment_content":"是否需要UML?<br>需要。<br>图形化分析和表达，让自己和他人可以快速理解。彼此要被理解，依赖于某种语言约定，UML就是这个图形化语言。<br>怎么使用？<br>按项目的不同阶段（需求分析阶段、概要设计阶段、详细设计阶段）使用UML，满足阶段性分析和表达即可。后续也可按需查看不同阶段的UML设计图。<br>ps： 按需使用类图（简化）、用例图、顺序图、活动图、状态图、组件图<br>pps：UML只是工具，最重要的是要清楚需要表达什么！！！<br>ppps：希望老师也可以讲讲【领域驱动开发】！！！","like_count":0},{"had_liked":false,"id":162585,"user_name":"一笔一画","can_delete":false,"product_type":"c1","uid":1495254,"ip_address":"","ucode":"2B9BC8ADF97106","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/d6/f335954b.jpg","comment_is_top":false,"comment_ctime":1576560630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576560630","product_id":100039001,"comment_content":"设计就是沟通，能够把你的思想转化成可交流的语言表达出来，大家能明白就好","like_count":0},{"had_liked":false,"id":162161,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1576468576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576468576","product_id":100039001,"comment_content":"uml经常在绘制流程和时序 以及系统间复杂交互中用到，最底层类图由于后期变更较大基本不用，说uml没用是没看到使用的场景吧，一图胜千言啊","like_count":0},{"had_liked":false,"id":161345,"user_name":"我叫郭小黑","can_delete":false,"product_type":"c1","uid":1463441,"ip_address":"","ucode":"C238592EB5EDBC","user_header":"https://static001.geekbang.org/account/avatar/00/16/54/91/0d4647d9.jpg","comment_is_top":false,"comment_ctime":1576196302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576196302","product_id":100039001,"comment_content":"UML类图应该依场景而异，能够帮我我们在处理复杂问题时，能够更好的建模，不过如果是比较简单的东西，而基于需要也不是所有的图都要处理，只处理能够达到我们的需要就可以，也为了后续开发人员能够读懂我们的设计思想。仅仅自己的一些简单想法，欢迎指正，谢谢","like_count":0},{"had_liked":false,"id":160128,"user_name":"蜗牛","can_delete":false,"product_type":"c1","uid":1086220,"ip_address":"","ucode":"01CC18F12E556D","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/0c/0a6a0d5e.jpg","comment_is_top":false,"comment_ctime":1575876054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575876054","product_id":100039001,"comment_content":"挺好的，抓重点即可~","like_count":0},{"had_liked":false,"id":158118,"user_name":"肖玉哲","can_delete":false,"product_type":"c1","uid":1350969,"ip_address":"","ucode":"E211AFA01EC2C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/39/20525541.jpg","comment_is_top":false,"comment_ctime":1575334912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575334912","product_id":100039001,"comment_content":"UML可以使用plantUML的语言方式画图，会简单些","like_count":0},{"had_liked":false,"id":157209,"user_name":"王盛武","can_delete":false,"product_type":"c1","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1575082880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575082880","product_id":100039001,"comment_content":"有uml书推荐不","like_count":0},{"had_liked":false,"id":157083,"user_name":"蓝思绪","can_delete":false,"product_type":"c1","uid":1361693,"ip_address":"","ucode":"2D8CE718DEAD96","user_header":"https://static001.geekbang.org/account/avatar/00/14/c7/1d/048dc01a.jpg","comment_is_top":false,"comment_ctime":1575027464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575027464","product_id":100039001,"comment_content":"面向对象分析就是搞清楚做什么，面向对象设计就是搞清楚怎么做。<br>抄下做笔记","like_count":0},{"had_liked":false,"id":156560,"user_name":"奇小易","can_delete":false,"product_type":"c1","uid":1171151,"ip_address":"","ucode":"E06B4DFB5352BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/cf/ef2e0501.jpg","comment_is_top":false,"comment_ctime":1574911861,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574911861","product_id":100039001,"comment_content":"Q: 在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>A:<br>我觉得很合理，这两个过程的核心是解决做什么和怎么做的问题，而不是解决标准化、规范化的问题。","like_count":0},{"had_liked":false,"id":155692,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1574737249,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1574737249","product_id":100039001,"comment_content":"1.UML相关功能可以裁剪，但是尽量贴切原先的uml规范，不然对于真的有心学习UML的人来说，可能会产生混淆<br>","like_count":0},{"had_liked":false,"id":155638,"user_name":"古道西风瘦码","can_delete":false,"product_type":"c1","uid":1288691,"ip_address":"","ucode":"55629E259C4CDD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iarmERAEvlY7U5oNTialvwC28vPxicNYNn5ZhWw8tDXicZHic6KoA3HXa3ZuPmqQNZKEVqsnPkcVPD2wOBibibujFacwQ/132","comment_is_top":false,"comment_ctime":1574731323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574731323","product_id":100039001,"comment_content":"uml就是个工具 严重同意老师看法","like_count":0},{"had_liked":false,"id":155418,"user_name":"　　　　　　　　","can_delete":false,"product_type":"c1","uid":1396774,"ip_address":"","ucode":"BBFE5F456BD18C","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/26/8744448e.jpg","comment_is_top":false,"comment_ctime":1574687061,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1574687061","product_id":100039001,"comment_content":"泛化表示继承的关系  用带三角箭头的实线表示 箭头指向父类<br>实现表示类与接口的关系  用带三角箭头的虚线表示   <br>箭头指向接口<br>组合表示整体与部分的关系，部分不能离开整体   用带实心菱形的实线   菱形指向整体<br>聚合表示整体与部分的关系，部分可以离开整体   用带空心菱形的实线   菱形指向整体<br>关联表示拥有的关系，一个类知道另一个类的属性  <br>用带箭头的实线  箭头指向被拥有者<br>依赖表示一种使用关系  用带箭头的虚线  指向被使用者","like_count":0},{"had_liked":false,"id":155313,"user_name":"ub8","can_delete":false,"product_type":"c1","uid":1481811,"ip_address":"","ucode":"0D937C3EAEB781","user_header":"https://static001.geekbang.org/account/avatar/00/16/9c/53/ade0afb0.jpg","comment_is_top":false,"comment_ctime":1574677509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574677509","product_id":100039001,"comment_content":"看完这篇文章最大的收货是，不必为自己不回话uml图自卑","like_count":0},{"had_liked":false,"id":154988,"user_name":"王先生","can_delete":false,"product_type":"c1","uid":1082275,"ip_address":"","ucode":"027C061F660605","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/a3/432bbbd9.jpg","comment_is_top":false,"comment_ctime":1574610639,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574610639","product_id":100039001,"comment_content":"今天学习了“当谈论面向对象的时候，我们到底在谈论什么”，收获什么是面向对象，面向对象狭义上是指包含四个特性，封装、抽象、继承、多态的代码语言；广义上是指面向支持类，有对象语法机制就能认为是面向对象语言。","like_count":0},{"had_liked":false,"id":154466,"user_name":"被讨厌的勇气","can_delete":false,"product_type":"c1","uid":1547913,"ip_address":"","ucode":"AE3B3CA27D91A2","user_header":"https://static001.geekbang.org/account/avatar/00/17/9e/89/6e9c05d6.jpg","comment_is_top":false,"comment_ctime":1574436534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574436534","product_id":100039001,"comment_content":"UML作为表达设计思路的工具，可以类比与汉语语言，汉语一共十万多个，但常用的只有几千个，UML太复杂使得都不太常用了。<br><br>经常看到书上提到桌面图像框架适合用面向对象实现，现在有点明白这句话的含义了。<br><br>","like_count":0},{"had_liked":false,"id":154375,"user_name":"zeta","can_delete":false,"product_type":"c1","uid":1255260,"ip_address":"","ucode":"AF84A72375827C","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/5c/ee2a876f.jpg","comment_is_top":false,"comment_ctime":1574416898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574416898","product_id":100039001,"comment_content":"规范的UML图从静态（如类图）和动态（如时序图）两方面描述最终代码交互过程，让设计者在设计时充分思考组件内部机制，理论上是能够指导最终开发的。但现实往往很残酷，设计者一般没有那么充分的时间深入思考这些，并且就算想好了，真正实施过程中又可能有很多变数。Martin Fowler有篇文章中提到过（好像是Is Design Dead），图纸其实就是沟通用的，图纸的真正用法就是有用时贴在墙上，用完了就撕，而不是整一摞图纸就一开始用用，结果就扔墙角落灰了。","like_count":0},{"had_liked":false,"id":154035,"user_name":"遗忘的童话","can_delete":false,"product_type":"c1","uid":1252850,"ip_address":"","ucode":"E11D9E8A11A82C","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/f2/81918ad5.jpg","comment_is_top":false,"comment_ctime":1574351340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574351340","product_id":100039001,"comment_content":"关于uml，我个人理解：更偏向于code review的时候，因为大家在不懂你业务逻辑的时候，你可以更加直观的去表达这个类干嘛的，那个接口干嘛的。但在实际组内开发的时候，只能说性价比不高。","like_count":0},{"had_liked":false,"id":153631,"user_name":"半湖思絮","can_delete":false,"product_type":"c1","uid":1236746,"ip_address":"","ucode":"ECE58303541E59","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/0a/4084d5fa.jpg","comment_is_top":false,"comment_ctime":1574291675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574291675","product_id":100039001,"comment_content":"每次看设计模式的书籍和博客，都折在uml类图上了","like_count":0},{"had_liked":false,"id":153589,"user_name":"东流","can_delete":false,"product_type":"c1","uid":1738147,"ip_address":"","ucode":"2715BC6E87BD83","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/a3/7e078442.jpg","comment_is_top":false,"comment_ctime":1574263623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574263623","product_id":100039001,"comment_content":"uml作为一种标准，如果太随意就失去了严谨性<br>其他知识点，就是面向对象中多继承的菱形问题，单继承又不够用的毛病","like_count":0},{"had_liked":false,"id":153268,"user_name":"蟹肥","can_delete":false,"product_type":"c1","uid":1737493,"ip_address":"","ucode":"382B86651ED909","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rNMTN9E43LZ0dpb4s3ElcRnBYpic5zzrCXGvKdib7rDwSEEWto83gXgFFQWMWXQmUxodcKyNnhDK1yIjeiaR7Mz3A/132","comment_is_top":false,"comment_ctime":1574209765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574209765","product_id":100039001,"comment_content":"1.阅读《Agile principles, patterns, and practices in C#》时<br>书中也有提到UML尽量简单的论点<br>给我的启发是画图是为了沟通<br>如果画图与的成本太高,也会使沟通的成本提高<br>役物而不役于物<br>2.等我想到了再回来补","like_count":0},{"had_liked":false,"id":153005,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1025030,"ip_address":"","ucode":"62A89FD460827A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/06/cf6b6d0f.jpg","comment_is_top":false,"comment_ctime":1574139411,"is_pvip":false,"replies":[{"id":"59173","content":"后面会详细讲解 本文说了只是点到为止","user_name":"作者回复","comment_id":153005,"uid":"1190123","ip_address":"","utype":1,"ctime":1574385829,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1574139411","product_id":100039001,"comment_content":"面向对象设计和分析这里不是很明白。因为我包括周围的人，设计类就是设计好数据库里的表，然后把表里的字段映射一下就是类了。<br>所以不是很明白老师说的面向对象分析和设计是要做什么。隐隐觉得自己的做法不对。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475018,"discussion_content":"后面会详细讲解 本文说了只是点到为止","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574385829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152937,"user_name":"🌲树根🌲","can_delete":false,"product_type":"c1","uid":1159060,"ip_address":"","ucode":"1CB2271FB7872D","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/94/6949a55c.jpg","comment_is_top":false,"comment_ctime":1574126500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574126500","product_id":100039001,"comment_content":"uml基本的类图、时序、流程图这些基本的是要学习的，图形交流比语言交流效率更高，也利于后续文档化和传承。特别是复杂的程序设计，更需要图形化帮助梳理思路。在多人协作下，如果能先设计类图，梳理流程，有助于实现并行开发。","like_count":0},{"had_liked":false,"id":152931,"user_name":"小乙哥","can_delete":false,"product_type":"c1","uid":1063308,"ip_address":"","ucode":"C77E79BEA0C325","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","comment_is_top":false,"comment_ctime":1574125278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574125278","product_id":100039001,"comment_content":"在复杂的交互场景下，用例图能够帮助我梳理出核心业务功能点case。在复杂业务流程情况下，时序图能够明晰整个业务流程，也方便大家达成一致。对于复杂的老业务系统，类图还是能够帮助梳理出设计思路的。<br>感觉老师对于UML的取舍还是蛮有想法的，日后实践可以适当取舍看一下效果","like_count":0},{"had_liked":false,"id":152681,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1574062025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574062025","product_id":100039001,"comment_content":"1.UML的使用肯定前提是公司整体的使用习惯是存在的，才能够起到应有的作用，作为敏捷开发团队而言，个体的沟通大于文档等工具的习惯就不是很适用，中间的学习成本，使用成本都比较复杂。<br>2.其实一直以来对于面向对象大部分就是类和对象，三大特性，也比较局限于java的领域里面，对于javascript也是觉得没有类，没有封装对象等方式，也不能确定为什么编程语言。所以也是希望接下来的学习中，能够更加明确的了解说面向对象更细节，更多的内容。","like_count":0},{"had_liked":false,"id":152626,"user_name":"陈迎春","can_delete":false,"product_type":"c1","uid":1443663,"ip_address":"","ucode":"2870BA6D6E5B1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","comment_is_top":false,"comment_ctime":1574052918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574052918","product_id":100039001,"comment_content":"虽然我还是觉得UML的规范性挺重要，但是更认同敏捷宣言，&quot;个体和互动高于流程和规范&quot;","like_count":0},{"had_liked":false,"id":152290,"user_name":"大胃王","can_delete":false,"product_type":"c1","uid":1120238,"ip_address":"","ucode":"17072DCDB4C7FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/ee/b123e7bc.jpg","comment_is_top":false,"comment_ctime":1573962190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573962190","product_id":100039001,"comment_content":"这个问题要辩证的去看，互联网公司讲的是快去迭代，但是大部分企业是各种 * MS。对于各种管理系统，本质上是帮助业务成功的，可现实的情况是（至少我在的整个行业链）：大部分MS系统无法满足业务发展或者几近失控，造成这个问题的一个重要原因是：项目开发还停留在小作坊的时代，没有统一的方法论指导。<br><br>所以个人觉得UML还是要大力推广和使用的，尤其是非互联网企业。","like_count":0},{"had_liked":false,"id":152271,"user_name":"Shanks-王冲","can_delete":false,"product_type":"c1","uid":1042983,"ip_address":"","ucode":"C4B90A17850E20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ea/27/a3737d61.jpg","comment_is_top":false,"comment_ctime":1573957246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573957246","product_id":100039001,"comment_content":"基于团队(入乡随俗)，我们团队没有使用，有时候简单草图，对付一下就过去了，便于沟通；有的团队，可能就用了，一直有这个习惯，新人进去，肯定要培训这一块，不然跟不上团队其他人。大型复杂的软件，or随着软件的变得越复杂，普通的草图不能再对付现在的情况，是否需有人去试探、试用后，如果有助于屡清楚复杂系统，可以在团队推广下；以上，是我的猜想。","like_count":0},{"had_liked":false,"id":152213,"user_name":"攀登者","can_delete":false,"product_type":"c1","uid":1074549,"ip_address":"","ucode":"FC26A8AC504C5E","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/75/9c0b9b5b.jpg","comment_is_top":false,"comment_ctime":1573916725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573916725","product_id":100039001,"comment_content":"好久没画UML了，能表达清楚类之间的关系即可，不一定非要用UML","like_count":0},{"had_liked":false,"id":152204,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1573914201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573914201","product_id":100039001,"comment_content":"面向对象编程不是绝对化的，在功能实现，即使使用面向对象编程，就一定会存在逻辑顺序性，就一定存在面向过程编程。","like_count":0},{"had_liked":false,"id":152194,"user_name":"This","can_delete":false,"product_type":"c1","uid":1338696,"ip_address":"","ucode":"7FD1969C9C38D0","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/48/e04411d5.jpg","comment_is_top":false,"comment_ctime":1573909420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573909420","product_id":100039001,"comment_content":"想问一下为什么说JavaScript不支持继承呢，在es6之前支持继承的方式有很多种，可能相比较java，并不是有关键字来实现继承那么清晰，但是es6可以很清晰的实现继承","like_count":0},{"had_liked":false,"id":152147,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1573892077,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573892077","product_id":100039001,"comment_content":"1. 针对第一个问题，在学习软件工程课程的时候，老师就说，知道概念就好，能画出一个大概，让双方沟通即可。我最常用的应该就是类图、时序图和用例图，但是有时真的没搞清楚一些具体的用法，就比如老师说的类图里的一些小细节，所以就会加以文字来描述，让大家能看懂即可。<br><br>这样对软件工程掌握可能是欠缺了点，但是在实战中通过讲解和演示，能达到效果。熟练的同学可以画的更好，不熟练的同学就尽量往边上靠，对效率来说都是没问题的。<br><br>2. 第二个问题，暂时不需要补充，静静地向老师学习","like_count":0},{"had_liked":false,"id":151915,"user_name":"Geek_1f0d72","can_delete":false,"product_type":"c1","uid":1734614,"ip_address":"","ucode":"FA8D576755B76E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLneMESMlYsVWs3dEp07YCuic0ibvO08qBgbOEhAcl9dUicjmZicDichWxx09tnhpHZII8TlmKic3XD0R3w/132","comment_is_top":false,"comment_ctime":1573812120,"is_pvip":true,"replies":[{"id":"58605","content":"嗯嗯 好的","user_name":"作者回复","comment_id":151915,"uid":"1190123","ip_address":"","utype":1,"ctime":1574040337,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573812120","product_id":100039001,"comment_content":"希望语言可以精炼一些。比如：前面我们提到XXX，也说明了XXX是什么，那么为什么要用到XXX呢，下面我来说一下原因。。。。。。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474651,"discussion_content":"嗯嗯 好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574040337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151871,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1573803134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573803134","product_id":100039001,"comment_content":"详细的uml在开发时用处是不太大, 但目前写需求文档时需要弄几个时序图 或组件图等显得专业些 . . .","like_count":0},{"had_liked":false,"id":151748,"user_name":"CHS","can_delete":false,"product_type":"c1","uid":1240227,"ip_address":"","ucode":"3D8B2DABC0A1D6","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/a3/28763399.jpg","comment_is_top":false,"comment_ctime":1573784742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573784742","product_id":100039001,"comment_content":"面向对象是一种思想，他有几种特性 继承 封装 多态，在面向对象设计或者编程的过程中，不一定用到全部的特性，根据实际情况使用特定的特性。","like_count":0},{"had_liked":false,"id":151585,"user_name":"小建","can_delete":false,"product_type":"c1","uid":1647247,"ip_address":"","ucode":"C9781DF8F79112","user_header":"https://static001.geekbang.org/account/avatar/00/19/22/8f/22e9c74b.jpg","comment_is_top":false,"comment_ctime":1573744494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573744494","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":151555,"user_name":"斜杠ing...","can_delete":false,"product_type":"c1","uid":1676247,"ip_address":"","ucode":"C4AE866AC8B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d7/93c8f92a.jpg","comment_is_top":false,"comment_ctime":1573739736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573739736","product_id":100039001,"comment_content":"uml让我很头疼呃，不想学...每次沟通都是画明白就成，可能是因为项目小吧","like_count":0},{"had_liked":false,"id":151443,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1053853,"ip_address":"","ucode":"2E98377E48399E","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/9d/19dcdd42.jpg","comment_is_top":false,"comment_ctime":1573721404,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573721404","product_id":100039001,"comment_content":" 我感觉，我们现在的大部分编程都是面向数据的编程。里面向对象还很远，虽然我们用的是JAVA语言","like_count":0},{"had_liked":false,"id":151438,"user_name":"leslee","can_delete":false,"product_type":"c1","uid":1384326,"ip_address":"","ucode":"DB1CBF9F8D16BF","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/86/3a7eeac4.jpg","comment_is_top":false,"comment_ctime":1573719623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573719623","product_id":100039001,"comment_content":"完全同意, 简化UML!","like_count":0},{"had_liked":false,"id":151388,"user_name":"Edward Lee","can_delete":false,"product_type":"c1","uid":1228518,"ip_address":"","ucode":"156223F1D7E94A","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","comment_is_top":false,"comment_ctime":1573712011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573712011","product_id":100039001,"comment_content":"之前有使用过 uml  对类进行描述，但要掌握这类空心箭头，虚线等表达方式，真的十分困难。虽然当时是记住了，但后来又忘记了。以至于以后每次看到这种 uml 写的类图，都很难分辨，明明可以通过描述线的作用方便阅读，却偏偏使用箭头，虚实心，菱形，虚实线等符号，这类符号的记忆难度甚比 ip 和数字，令人窒息。","like_count":0},{"had_liked":false,"id":151383,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1573710745,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573710745","product_id":100039001,"comment_content":"很多情况下，标准可以简化沟通成本，但UML是一个特例吧，因为没系统学习过软件工程的人学习UML起来也是很痛苦的，即使我作为一个软件工程的硕士，也只有几种UML图经常使用，活动图、ER图和流程图吧，所以我很赞同老师的说法，沟通也不是书写论文和正式的开发文档，没必要纠结那么多。","like_count":0},{"had_liked":false,"id":151343,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1573703019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573703019","product_id":100039001,"comment_content":"有关面向对象的概念和知识点，除了我们今天讲到的，你还能想到其他哪些吗？<br>个人对于面向对象的理解，直接来说的话就是“类”。围绕类来扩展的话。<br>类用于描述对象，成员变量描述对象的属性，成员方法描述对象的行为。<br>所谓“继承”带来的结果，无非是类的细致化和派生。生物，派生出动物，植物；动物又派生各个科目等。<br>所谓“抽象”用于描述一些共同的行为。类似于，狼，和捕蝇草。它们都有 “捕猎”这个行为，但是这个行为明显不属于它们自己的“类”。所以可以把“捕猎”这个行为抽象出来，成为一个接口——“捕猎者”。<br>","like_count":0},{"had_liked":false,"id":151342,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1573703016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573703016","product_id":100039001,"comment_content":"在文章中，我讲到 UML 的学习成本很高，沟通成本也不低，不推荐在面向对象分析、设计的过程中使用，对此你有何看法？<br>UML图，各种框，各种箭线，确实相对繁琐。但是，对于一个大型项目的理解还是有一定作用的。个人认为，可以折中。使用简化版UML。简化UML的限制，同时兼备提现类之间的继承关系等。因为，UML其实编写的成本其实还好，复杂的是维护成本，往往一个关系的变动，时常是牵一发而动全身的，所以，我认为UML可以适当简化。没必要，一定要那么专业，细致的UML。但是简化版UML就已经可以大幅度降低项目的理解成本了。<br>","like_count":0},{"had_liked":false,"id":151231,"user_name":"华仔","can_delete":false,"product_type":"c1","uid":1456384,"ip_address":"","ucode":"25ACA96ADA7EE9","user_header":"https://static001.geekbang.org/account/avatar/00/16/39/00/30664850.jpg","comment_is_top":false,"comment_ctime":1573689748,"is_pvip":false,"replies":[{"id":"58187","content":"下一节课讲到了","user_name":"作者回复","comment_id":151231,"uid":"1190123","ip_address":"","utype":1,"ctime":1573690475,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573689748","product_id":100039001,"comment_content":"面向对象是三个特征还是四个？为什么两种说法","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474410,"discussion_content":"下一节课讲到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573690475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151219,"user_name":"雷咏","can_delete":false,"product_type":"c1","uid":1671448,"ip_address":"","ucode":"890DF9E928C99F","user_header":"https://static001.geekbang.org/account/avatar/00/19/81/18/f3642be3.jpg","comment_is_top":false,"comment_ctime":1573685492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573685492","product_id":100039001,"comment_content":"以我的理解面向对象最核心的概念是封装。将数据结构和算法封装成对象。","like_count":0},{"had_liked":false,"id":151182,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1573661757,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573661757","product_id":100039001,"comment_content":"第一题：是否用UML并不是关键，关键在于是否可以达到有效沟通和深度思考的目的。就像并不是所有的开发工作都需要严格进行PRD评审、系分评审、测分评审、发布评审一样，UML图也不是随时都需要画，而且画的跟官方定义一样。不过，如果知识觉得UML图复杂，我倒建议进行一些简化，例如重点画流程图、时序图和模块图，也可以使用PlantUML之类的工具。<br><br>第二题：记得在《Java编程思想》一书中提到，面向对象最根本的不同就在于改变了开发者思考问题的方式，将开发者面对的问题空间转移视线了真实的世界。这里就涉及到编程范式的思考，面向对象最核心的地方就是对现实世界的模拟和抽象。","like_count":0},{"had_liked":false,"id":151162,"user_name":"💢 星星💢","can_delete":false,"product_type":"c1","uid":1254392,"ip_address":"","ucode":"A402B765222C35","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","comment_is_top":false,"comment_ctime":1573659628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573659628","product_id":100039001,"comment_content":"关于uml使用的理解，我赞同争哥说的学习成本太高，不利于团队的沟通交流。但是我也想不明白。团队之间应该用什么交流面对对象的设计。一直在传统的小公司呆着。有点进底之蛙。期望看到争哥是怎么解决这个问题答案的。","like_count":0},{"had_liked":false,"id":151150,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1573658593,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573658593","product_id":100039001,"comment_content":"个人支持争哥","like_count":0},{"had_liked":false,"id":151047,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1573647406,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573647406","product_id":100039001,"comment_content":"实践经验很重要，对于很多初学者来说，会少走很多弯路。期望能穿插更多实践经验，比如uml类图事实上掌握基本的概念就够了，但是时序图呢？架构图呢？有没有一些工具可以推荐。EA比较老了。plantuml感觉画架构图不是那么方便，用ppt的画图功能感觉比较原始。","like_count":0},{"had_liked":false,"id":150980,"user_name":"Geek4it","can_delete":false,"product_type":"c1","uid":1738688,"ip_address":"","ucode":"C6247BFE5C8824","user_header":"","comment_is_top":false,"comment_ctime":1573638074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573638074","product_id":100039001,"comment_content":"在自己的观念里，ooa就是需求弄的 ood是设计师弄的 自己只负责oop。以后需要多多了解，全面发展，了解产品的来龙去脉","like_count":0},{"had_liked":false,"id":150904,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1573624993,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573624993","product_id":100039001,"comment_content":"既然UML存在这么大的学习成本，而这篇的专栏是为了学习设计模式，所以画出的图能表达出意思即可，不必遵循UML的规范","like_count":0},{"had_liked":false,"id":150838,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1573615168,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573615168","product_id":100039001,"comment_content":"uml的最大问题是太复杂了，学习成本太高，但收效甚微。<br>简单的才是实用的。","like_count":0},{"had_liked":false,"id":150758,"user_name":"Geek_Spring","can_delete":false,"product_type":"c1","uid":1292572,"ip_address":"","ucode":"3F44EE152CB357","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erRavHNiaicxIIq5Pal1iadE4axG6ibbib6llpHBslhiahWDQ6tdE1IcWicFogfvuyfGoiayC51knA09UtQvQ/132","comment_is_top":false,"comment_ctime":1573607365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573607365","product_id":100039001,"comment_content":"之前学习设计模式的时候，都是讲完例子上来就来一个uml，其实有的根据讲解看的还是挺清晰的，但是在现实的编程中，画这个UML真是的是费事费力，所以我们也是如王老师所说用简图代替，并且一段时间如果你不看之前化的图就会发现有时候看起来之前画的好乱，然后各种符号还看不明白了，所以，我觉着应该言简意赅，图要清晰明了","like_count":0},{"had_liked":false,"id":150743,"user_name":"follow_ice","can_delete":false,"product_type":"c1","uid":1105028,"ip_address":"","ucode":"8B8F59AD343180","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/84/a35ce74d.jpg","comment_is_top":false,"comment_ctime":1573606518,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573606518","product_id":100039001,"comment_content":"UML用来表达类图的设计 在团队中是否用UML 取决于团队成员 如果大家都是很熟悉UML的可以用 用来还会使沟通更加顺畅 如果很多人不熟悉的话 还是不要用的好 浪费精力。团队里需要有一种沟通的工具 不一定非要局限于uml 只要能让大家都可以无障碍的使用就可以","like_count":0},{"had_liked":false,"id":150719,"user_name":"古古惑惑","can_delete":false,"product_type":"c1","uid":1039710,"ip_address":"","ucode":"37724A018564FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/5e/2354204d.jpg","comment_is_top":false,"comment_ctime":1573604659,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573604659","product_id":100039001,"comment_content":"UML只是一个工具，如果它太多复杂而提高了我们的设计和沟通成本，那就违背本意了。有时候白板上进行草图演示比严谨的UML更高效。","like_count":0},{"had_liked":false,"id":150669,"user_name":"Fun","can_delete":false,"product_type":"c1","uid":1145502,"ip_address":"","ucode":"5D89BA4C678785","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJdUGdEj3R25CrYqibPibYibibRicqUfyL4aTTPbMagyywjKMhXGZE37RTe7lEdvC4DibvtYpzg8zXvt9HQ/132","comment_is_top":false,"comment_ctime":1573579488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573579488","product_id":100039001,"comment_content":"# day 8<br>重温一些面相对象的概念，OOA &#47; OOD &#47; OOP &#47; OOPL，以及UML。<br>概念部分就不多回顾了。对于纯粹的嵌入式程序员，目前也见过很多面相对象范式的C码实现，所以OOP概念是懂的，用OOPL工作的机会是偏少的，在工作之余用OOPL尝尝是可以的。<br>客观来说说UML。工作这么几年，时序图就不说了，主要还是吐槽下UML类图。类图的关系确实很容易混淆，如果不是经常混UML的，只是看看文档，鬼才会在意实心的三角，空心的三角，虚线，实线…等等各自的含义，我想这是最最直白的感受了。UML归根结底是一门用来交流，讨论的工具。既然是工具，本身就应该简单易用。我应该是有特意看过UML的书籍的，印象里不薄，而且做过笔记心里默记过……不过现在已是过眼云烟。所以，UML无论是对于学习成本还是制作成本都是极费事的。<br>最后，什么事都回归本质的话，好的工具一定是简单易用的。毕竟，大道至简。","like_count":0},{"had_liked":false,"id":150620,"user_name":"Cy23","can_delete":false,"product_type":"c1","uid":1591293,"ip_address":"","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1573569464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573569464","product_id":100039001,"comment_content":"打卡，万事万物接对象，有时候应该封装，但是多数时候偷懒，不美观，重复性多","like_count":0},{"had_liked":false,"id":150613,"user_name":"摸爬滚打三十年","can_delete":false,"product_type":"c1","uid":1240241,"ip_address":"","ucode":"764A7F920EC304","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/b1/d790b927.jpg","comment_is_top":false,"comment_ctime":1573568411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573568411","product_id":100039001,"comment_content":"想到对象就能想到一大堆：比如接口，对象，抽象类，成员属性和成员方法。supper,this , static 等等这些基本的关键字和概念，最难的是如何组织这些单元，并且如何应用。希望跟着老师有个质的提高。","like_count":0},{"had_liked":false,"id":150581,"user_name":"W","can_delete":false,"product_type":"c1","uid":1724021,"ip_address":"","ucode":"2F9FA347E982F9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/4e/75/4c040060.jpg","comment_is_top":false,"comment_ctime":1573561925,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573561925","product_id":100039001,"comment_content":"uml 统领代码结构还是可以的 比较清晰。慢慢熟悉，更好理解吧 。","like_count":0},{"had_liked":false,"id":150575,"user_name":"尚寂清","can_delete":false,"product_type":"c1","uid":1735856,"ip_address":"","ucode":"FA1D9D6844BC2E","user_header":"","comment_is_top":false,"comment_ctime":1573561183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573561183","product_id":100039001,"comment_content":"在看第三方源码的时候可以通过画UML图来加深对类设计的理解","like_count":0},{"had_liked":false,"id":150560,"user_name":"坎迪汪","can_delete":false,"product_type":"c1","uid":1017033,"ip_address":"","ucode":"5B1ADFA2AF2934","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/c9/cfed3a2f.jpg","comment_is_top":false,"comment_ctime":1573557131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573557131","product_id":100039001,"comment_content":"UML并不是一个很好的设计，不好用","like_count":0},{"had_liked":false,"id":150533,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1573550968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573550968","product_id":100039001,"comment_content":"UML图我现在也就是实线和虚线的层级，但是我觉得画画图，对你自己知识梳理，大体结构的了解还是很有用处的，在IDE里面看生成的UML图还是很不错的。<br>工作中其实流程图的存在感要比UML图更高，可惜水平也不高，还没有什么好的材料去学习。","like_count":0},{"had_liked":false,"id":150503,"user_name":"光光","can_delete":false,"product_type":"c1","uid":1242876,"ip_address":"","ucode":"A0F1D0134C935F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f6/fc/171c4976.jpg","comment_is_top":false,"comment_ctime":1573546738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573546738","product_id":100039001,"comment_content":"UML的学习成本确实很高，记得读书的时候都是用一些假想的场景来对应到UML里的功能，为了用而用。至于面向对象的分析和面向对象的设计就更别提了。但是UML的出发点就是想通过统一的形式来反应系统的设计和功能场景，抛开了具体使用什么语言来实现（换句话，就是只要是面向对象语言，都可以完成这些功能）。而在实际的工作场景中，整个产品链条上的参与的人不是都懂UML，再加上本身学习成本比较高，应用的就更少了，所以，大部分就是吸其精华，转而使用易懂好表达的个性化形式。","like_count":0},{"had_liked":false,"id":150500,"user_name":"饭太司替可","can_delete":false,"product_type":"c1","uid":1171829,"ip_address":"","ucode":"9A47FCA16199B0","user_header":"https://static001.geekbang.org/account/avatar/00/11/e1/75/bbdf9052.jpg","comment_is_top":false,"comment_ctime":1573546380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573546380","product_id":100039001,"comment_content":"1、虽然学习成本很高，但是对于初学者来说去了解一下还是有必要的，因为可以知道到类之间会有哪些关系，能够加强面向对象设计的概念。 实际过程中如果发现类之间的关系比较复杂的时候，可以去画下图，其它情况看情况。<br>","like_count":0},{"had_liked":false,"id":150499,"user_name":"微凉","can_delete":false,"product_type":"c1","uid":1178156,"ip_address":"","ucode":"F6BD0AE11AE224","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/2c/9a0c45e6.jpg","comment_is_top":false,"comment_ctime":1573546314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573546314","product_id":100039001,"comment_content":"uml的学习成本相对于日常工作使用来说，确实算不上高性价比，很多时候画个草图能表达准确意思就可以了，过度追求uml规范，反而增加团队学习成本，浪费时间。","like_count":0},{"had_liked":false,"id":150497,"user_name":"Z-ll","can_delete":false,"product_type":"c1","uid":1266233,"ip_address":"","ucode":"68A75A53D1455E","user_header":"https://static001.geekbang.org/account/avatar/00/13/52/39/2211b1a2.jpg","comment_is_top":false,"comment_ctime":1573546286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573546286","product_id":100039001,"comment_content":"如果要看书自学设计模式的话，UML图还是躲不过，逃不开。不过，我相信争哥这次能带我们拿下设计模式！ ","like_count":0},{"had_liked":false,"id":150491,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1573544866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573544866","product_id":100039001,"comment_content":"其实UML只需要理解关系种的，组合和聚合的关系就行。实际开发项目中，组合的使用频率比较多","like_count":0},{"had_liked":false,"id":150484,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1573543841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573543841","product_id":100039001,"comment_content":"<br>关于UML学习成本<br>优点是可以串联的很清楚，类似于图形数据库有个手拉手的图形界面，方便理解。相对来说算是很灵活的<br>缺点就是不能动态改变，比如我订单状态变了，前面关联的不能跟着变，除非在后面写的新的，这样又加大了工作量(虽然我一个打工仔一般情况下不用写UML这些)<br>其实这个就像docker是开源一样，既是优点又是缺点<br><br>个人认为面向对象从宽松角度讲，顾名思义，只要把东西当成对象来处理，就能认为它是面向对象。说句不负责任的话，我不是专业的术语规范定义的人，而且就算这种东西规范化了，还是要我去死机硬背对我来说没有一点帮助，我还不如简简单单的记住它就好了。","like_count":0},{"had_liked":false,"id":150479,"user_name":"努力努力再努力m","can_delete":false,"product_type":"c1","uid":1644369,"ip_address":"","ucode":"9DD9E9C2988FFC","user_header":"https://static001.geekbang.org/account/avatar/00/19/17/51/3e13dc0c.jpg","comment_is_top":false,"comment_ctime":1573543415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573543415","product_id":100039001,"comment_content":"UML 的学习成本过高，即使自己懂，别人也未必能看的懂你画的图，所以简单了解即可。","like_count":0},{"had_liked":false,"id":150450,"user_name":"😚 46","can_delete":false,"product_type":"c1","uid":1433535,"ip_address":"","ucode":"EED0EBBBF80A43","user_header":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","comment_is_top":false,"comment_ctime":1573537752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573537752","product_id":100039001,"comment_content":"黑猫、白猫，能抓老鼠的就是好猫。个人觉得没必要花很大的时间和精力投入到这些细节上，首先投入那么多的时间和精力，成本很高，且对于初学者不一定能很好或清晰的表达自己设计的意图，甚至有可能出现滥用的问题。那么，个人认为，可以让他人快速理解自己的设计意图达到目的即可，尽量保持简单。<br>当然，并不是说学习UML就没有用处，在与高手过招时，说不定UML可以让你们像“普通话”一样相见恨晚~<br>总而言之，初学者不建议直接上手UML，而是专注于能够简单、清晰的表达自己的设计即可，随着设计的逐渐熟练，再往UML上靠，可能还会触类旁通，学习UML可能会更加轻松一些。","like_count":0},{"had_liked":false,"id":150415,"user_name":"千里之行","can_delete":false,"product_type":"c1","uid":1543635,"ip_address":"","ucode":"ACE8A9350D2BC0","user_header":"https://static001.geekbang.org/account/avatar/00/17/8d/d3/a56ff736.jpg","comment_is_top":false,"comment_ctime":1573530777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573530777","product_id":100039001,"comment_content":"比较同意老师观点，UML只是表达设计，传递设计的工具，本质上不能优化设计（当然使用UML过程，作者可以自省优化）。本质上我们精力应该更多放在业务和结构上，类的设计以及继承使用，有时是为了实现业务功能（业务类），有时为了代码复用扩展（架构类），过度强调理论过度设计造成的逻辑混乱苦涩难懂，完全抵挡了面向对象的优势和理念。比如很多C项目如nginx目录以及功能模块结构清晰，结构体封装得当，我们丝毫没有受到语言本身不支持四点特性的影响。","like_count":0},{"had_liked":false,"id":150406,"user_name":"尾巴大不掉","can_delete":false,"product_type":"c1","uid":1252823,"ip_address":"","ucode":"60E883118FA5A1","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/d7/78b616fd.jpg","comment_is_top":false,"comment_ctime":1573529179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573529179","product_id":100039001,"comment_content":"Uml其实没必要过度追求，因为在团队中平白无故的增加了学习成本，当时可以学习下，我觉得在学习设计模式时用代码的形式加上简单的图形描述就可以了，非要追求UML的话有点过度设计的感觉，反而浪费时间","like_count":0},{"had_liked":false,"id":150393,"user_name":"Varus","can_delete":false,"product_type":"c1","uid":1715988,"ip_address":"","ucode":"B9CB88C248BD93","user_header":"https://static001.geekbang.org/account/avatar/00/1a/2f/14/840d0925.jpg","comment_is_top":false,"comment_ctime":1573526463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573526463","product_id":100039001,"comment_content":"刚学设计模式，我自己现在写代码的时候感觉无从下手，没有整体的框架结构，不知道学完设计模式之后是不是就可以解决我现有的疑惑呢","like_count":0},{"had_liked":false,"id":150382,"user_name":"飞扬","can_delete":false,"product_type":"c1","uid":1378180,"ip_address":"","ucode":"3F77352FC25DB9","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/84/18d30516.jpg","comment_is_top":false,"comment_ctime":1573525086,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573525086","product_id":100039001,"comment_content":"任何一种工具，当使用它的学习成本大于它能带来的收益的时候，它就会变成一种很可疑的东西。UML就是一个典型。","like_count":0},{"had_liked":false,"id":150372,"user_name":"右耳朵猫咪","can_delete":false,"product_type":"c1","uid":1014984,"ip_address":"","ucode":"3AB186CC780FBB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/c8/8627f5c1.jpg","comment_is_top":false,"comment_ctime":1573523864,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573523864","product_id":100039001,"comment_content":"可以使用powerDesigner或者PDMan画各种图。","like_count":0},{"had_liked":false,"id":150371,"user_name":"2102","can_delete":false,"product_type":"c1","uid":1070298,"ip_address":"","ucode":"A67068F2A3157E","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/da/e2e5ddf7.jpg","comment_is_top":false,"comment_ctime":1573523843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573523843","product_id":100039001,"comment_content":"一些常用的UML表示方法还是要规范的，这是一种有效沟通的手段。这节课并没有UML出现，以后的课再看。","like_count":0},{"had_liked":false,"id":150350,"user_name":"one pencil","can_delete":false,"product_type":"c1","uid":1235938,"ip_address":"","ucode":"E831E77AAA30C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/e2/392bedb9.jpg","comment_is_top":false,"comment_ctime":1573522025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573522025","product_id":100039001,"comment_content":"同意最后关于uml的描述，实际上，日常工作中，我也是类似如此，我觉得画图最主要的目的就是简单直观传达你的意思，最好让非专业同学也看得懂，也不需要太酷炫浮夸，而忽略了本质","like_count":0},{"had_liked":false,"id":150347,"user_name":"roaming","can_delete":false,"product_type":"c1","uid":1039232,"ip_address":"","ucode":"2736679690AB81","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/80/6b7629d7.jpg","comment_is_top":false,"comment_ctime":1573521366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573521366","product_id":100039001,"comment_content":"UML的问题其实还是成本问题，时间成本，沟通成本，在企业里第一位永远是收益，不是标准和规范","like_count":0},{"had_liked":false,"id":150329,"user_name":"安静","can_delete":false,"product_type":"c1","uid":1212758,"ip_address":"","ucode":"ABF1824D24BA2F","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/56/311be282.jpg","comment_is_top":false,"comment_ctime":1573519557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573519557","product_id":100039001,"comment_content":"uml建立模型在开发过程中是一个重要的环节，能够快速理解一个项目。","like_count":0},{"had_liked":false,"id":150322,"user_name":"黄剑","can_delete":false,"product_type":"c1","uid":1204424,"ip_address":"","ucode":"D7F68DE19F41CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/c8/044dd4a2.jpg","comment_is_top":false,"comment_ctime":1573519187,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1573519187","product_id":100039001,"comment_content":"UML几乎就没有画，平时也没有见到有人画。觉得这主要还是看项目需求吧。如果一个项目要做好几年，同时涉及到很多人的画，那UML还是有必要的。","like_count":0},{"had_liked":false,"id":150314,"user_name":"黄剑","can_delete":false,"product_type":"c1","uid":1204424,"ip_address":"","ucode":"D7F68DE19F41CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/c8/044dd4a2.jpg","comment_is_top":false,"comment_ctime":1573518539,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1573518539","product_id":100039001,"comment_content":"JavaScript已经支持封装和继承了","like_count":0},{"had_liked":false,"id":150312,"user_name":"奔跑的小孩","can_delete":false,"product_type":"c1","uid":1304259,"ip_address":"","ucode":"0053193F7A9870","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/21uTMWr7bx5qMibp2hwmGvLbYuj5Aic2dqD3futlNo25eDGDt4t7zzN9cdnj7cVGwTot1U4AyADfWUpqjq1SicgWQ/132","comment_is_top":false,"comment_ctime":1573518421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573518421","product_id":100039001,"comment_content":"基本的概念介绍也挺有用，打卡一下","like_count":0},{"had_liked":false,"id":150310,"user_name":"gray","can_delete":false,"product_type":"c1","uid":1234604,"ip_address":"","ucode":"F4959C9D55A832","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/ac/dafb3a92.jpg","comment_is_top":false,"comment_ctime":1573518173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573518173","product_id":100039001,"comment_content":"我支持简化……","like_count":0},{"had_liked":false,"id":150270,"user_name":"キッド","can_delete":false,"product_type":"c1","uid":1491871,"ip_address":"","ucode":"0773BDAD4ACCEF","user_header":"https://static001.geekbang.org/account/avatar/00/16/c3/9f/2dd26fee.jpg","comment_is_top":false,"comment_ctime":1573487822,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573487822","product_id":100039001,"comment_content":"大三的时候有一门课叫做软件工程，这门课很大一部分就是在讲解如何画好UML图，甚至期末的大作业也是画UML图。毕业两年后已经很久没有画过UML图了，各个箭头的含义啥的都不是很清楚了。。。我觉得在日常的项目开发和沟通中，UML图不是很有必要，如果我可以用一些很简单的图例或者箭头把关系给别人表达清楚，耗时还短我就不会用UML图","like_count":0},{"had_liked":false,"id":150263,"user_name":"佳楠","can_delete":false,"product_type":"c1","uid":1008809,"ip_address":"","ucode":"A1698AE91992AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/a9/27d63f2e.jpg","comment_is_top":false,"comment_ctime":1573486557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573486557","product_id":100039001,"comment_content":"从 UML 学习曲线联想到了最近很火的领域驱动概念，DDD 有很关键的一点，是需要寻求一种在专家 &amp; 用户 &amp; 编码人员之间可以互相沟通的语言，用来对齐领域模型。如果此时选用了一种很复杂的沟通工具，那么势必会影响沟通效率。<br>所以我对 UML 简化的观点是：可以简化，但力求表意明确，前后一致，这样也是不失严谨的。","like_count":0},{"had_liked":false,"id":150260,"user_name":"疯狂的石头","can_delete":false,"product_type":"c1","uid":1179676,"ip_address":"","ucode":"E14331FAA436EE","user_header":"https://static001.geekbang.org/account/avatar/00/12/00/1c/d39cdabd.jpg","comment_is_top":false,"comment_ctime":1573485969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573485969","product_id":100039001,"comment_content":"面向对象编程（OOP），把类和对象作为代码组织的基本单元，然后使用抽象，封装，多态，继承作为基石，根据面向编程的这些特性，使用面向编程语言来实现代码。第一，首先要掌握一门面向编程语言，第二，根据代码的功能进行面向对象分析（OOA），分析我们的代码要具体做什么what，第三分析完以后按照面向对象编程的四大特性来设计，类，类的属性，以及类之间的交互，最终体现在代码里。<br>至于UML画图，个人认为，不论用什么工具画图，只要可以把关系画明白，让大多数的人能够清晰的理解就是好工具。白猫黑猫，能抓住老鼠的就是好猫。","like_count":0},{"had_liked":false,"id":150250,"user_name":"Rain","can_delete":false,"product_type":"c1","uid":1238221,"ip_address":"","ucode":"6A270D922A3B9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","comment_is_top":false,"comment_ctime":1573484562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573484562","product_id":100039001,"comment_content":"对设计模式的学习来说，UML 是个可选项。就是说你不懂UML也能学会设计模式。对设计模式的使用来说，UML是另外一个可选项，当你对设计模式有所掌握之后，自然而然你就想用一种方式去表达出来你的设计，不过你可能觉得UML太复杂了，然后你想啊想，尝试用一个最简单的方式来描述你的设计，最后就发现自己就算不学习那么多的UML理论知识，也能设计出跟UML极其相似的结构图来。然后呢，当你把他讲述给感兴趣的人，发现他们都能听懂。嗯，大概就是这样。读别人的UML感觉复杂，自己写的时候还是忍不住用他。","like_count":0},{"had_liked":false,"id":150242,"user_name":"Tom.G","can_delete":false,"product_type":"c1","uid":1206034,"ip_address":"","ucode":"7929B45C1A51F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/12/5c6eb568.jpg","comment_is_top":false,"comment_ctime":1573483162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573483162","product_id":100039001,"comment_content":"UML是规范，可以更精准的表达，所以我认为还是很有必要的。短期来看成本高，长期来看收益多。所以需要根据场景做取舍。<br>","like_count":0},{"had_liked":false,"id":150240,"user_name":"风行者","can_delete":false,"product_type":"c1","uid":1541934,"ip_address":"","ucode":"F058640CF77A35","user_header":"https://static001.geekbang.org/account/avatar/00/17/87/2e/ea54c240.jpg","comment_is_top":false,"comment_ctime":1573483019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573483019","product_id":100039001,"comment_content":"打卡，以类和对象来作为代码组织的基本单元","like_count":0},{"had_liked":false,"id":150238,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1573482866,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573482866","product_id":100039001,"comment_content":"打卡第二天，什么是面向对象？<br><br><br>学到了<br><br>1、面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元.<br><br><br>2、特性：封装、抽象、继承、多态四个特性，作为代码设计和实现的基石 。<br>       通常说的也有： 封装 继承 多态三个特性. <br><br>3、面向对象重要的两个词： 类 对象.<br><br><br>第二个话题uml<br> 平时基本不画，主要是画流程图.  这个跟随老师一起进行吧.<br><br><br><br><br><br><br>","like_count":0},{"had_liked":false,"id":150232,"user_name":"　扬帆丶启航　","can_delete":false,"product_type":"c1","uid":1235282,"ip_address":"","ucode":"4079D0889CD86C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/52/73351eab.jpg","comment_is_top":false,"comment_ctime":1573482367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573482367","product_id":100039001,"comment_content":"赞同老师简化uml图，毕竟重心不在这里，简化可能更有助我们理解。如果因此额外再去学习uml图，还会加大学习难度。<br><br>","like_count":0},{"had_liked":false,"id":150225,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1573481024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573481024","product_id":100039001,"comment_content":"老师说的没错，uml的问题是需要一定的学习成本，不过在画图人和看图人都懂uml的情况下，uml是能很直接准确的表达类之间的关系的，个人认为反而能节省一定的沟通成本。","like_count":0},{"had_liked":false,"id":150222,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1573480648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573480648","product_id":100039001,"comment_content":"除了老师讲到的is-a，还想到了之前学过的has-a以及like-a。has-a表示一种从属关系（字段属性），like-a表示一种组合关系（接口）。<br>至于uml，我同意老师的观点，不必拘泥于严格的规范，能够达意就好。","like_count":0},{"had_liked":false,"id":150221,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1573480407,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1573480407","product_id":100039001,"comment_content":"虽然UML学习成本高，但是想成为优秀的工程师以致于架构师，UML还是必要的，尤其对于标准的软件设计文档，UML的设计图可以让后来人也能快速理解软件设计思想！这种设计在传统的工业软件行业非常有用，但是在当猛糙快的互联网软件倒是用的比较少，个人理解应该是因为互联网更强调快的原因吧。","like_count":0},{"had_liked":false,"id":150212,"user_name":"cw","can_delete":false,"product_type":"c1","uid":1264296,"ip_address":"","ucode":"82A6B50462F9F9","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/a8/b7e36dd2.jpg","comment_is_top":false,"comment_ctime":1573479360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573479360","product_id":100039001,"comment_content":"本质上，设计模式是为了提高代码的可读性，扩展性 可维护性，而uml本质上是一个 梳理代码功能的工具，如果工具过度复杂且互相不理解 就没必要深究，只需要能把意思表述明确即可，当然 线条不能用错","like_count":0},{"had_liked":false,"id":150208,"user_name":"白衣少年","can_delete":false,"product_type":"c1","uid":1189208,"ip_address":"","ucode":"816060857C9BCD","user_header":"https://static001.geekbang.org/account/avatar/00/12/25/58/dcec342f.jpg","comment_is_top":false,"comment_ctime":1573478707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573478707","product_id":100039001,"comment_content":"赞，不用学习 UML ","like_count":0},{"had_liked":false,"id":150186,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1573475714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573475714","product_id":100039001,"comment_content":"不用UML怎么知道类之间的关系呢？怎么知道采用了哪种设计模式呢？个人觉得面向对象难在抽象","like_count":0},{"had_liked":false,"id":150184,"user_name":"Wisdomore","can_delete":false,"product_type":"c1","uid":1496344,"ip_address":"","ucode":"AAA5BC813C898E","user_header":"https://static001.geekbang.org/account/avatar/00/16/d5/18/921e8c21.jpg","comment_is_top":false,"comment_ctime":1573475465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573475465","product_id":100039001,"comment_content":"其实，人类的“懒”，才是“第一生产力”","like_count":0},{"had_liked":false,"id":150181,"user_name":"tuyu","can_delete":false,"product_type":"c1","uid":1448863,"ip_address":"","ucode":"B235325B541408","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BIRpwViaN51yynIeFonD7QRlwDCVtKibrG956NTxzEqibOZZVjhMMgibOPmd3VicfYxpknZsic1oJq8KicZvXkmmiajuQg/132","comment_is_top":false,"comment_ctime":1573474909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573474909","product_id":100039001,"comment_content":"以前那个画图的小编不画图了吗, 算法加上图让我更爽","like_count":0},{"had_liked":false,"id":150180,"user_name":"Warn","can_delete":false,"product_type":"c1","uid":1465310,"ip_address":"","ucode":"F2F7FCDB0940D0","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/de/152f1c2c.jpg","comment_is_top":false,"comment_ctime":1573474325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573474325","product_id":100039001,"comment_content":"UML作为一种传达沟通的方式或者说工具，确实是因人、因地而异。简单明了的沟通最实用，当然如果形式感更重要，就当我这句话没说。","like_count":0},{"had_liked":false,"id":150178,"user_name":"Smirk","can_delete":false,"product_type":"c1","uid":1230263,"ip_address":"","ucode":"F677072767F0A4","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/b7/87e7e865.jpg","comment_is_top":false,"comment_ctime":1573474082,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573474082","product_id":100039001,"comment_content":"uml这个有意思了，我觉得真的是大实话啊。学习成本高，但是还是挺想学会的....","like_count":0},{"had_liked":false,"id":150162,"user_name":"Lugyedo","can_delete":false,"product_type":"c1","uid":1011793,"ip_address":"","ucode":"EB5E456B638E70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/51/f1825adb.jpg","comment_is_top":false,"comment_ctime":1573471389,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573471389","product_id":100039001,"comment_content":"敏捷开发的初期复杂的UML图不适合，迭代几个版本稳定后是可以画一些图总结一下系统结构和设计","like_count":0},{"had_liked":false,"id":150153,"user_name":"肥而不腻","can_delete":false,"product_type":"c1","uid":1435246,"ip_address":"","ucode":"3E6786A82A6DD6","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/6e/062da5e4.jpg","comment_is_top":false,"comment_ctime":1573469855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573469855","product_id":100039001,"comment_content":"个人理解，需求分析文档和图必备，但是严格按照uml，如文章所说，沟通成本和学习成本太高，一般的公司都不会有这种费力不讨好的要求。。。","like_count":0},{"had_liked":false,"id":150145,"user_name":"Joanfen","can_delete":false,"product_type":"c1","uid":1004260,"ip_address":"","ucode":"4CF1B92337B625","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/e4/50600574.jpg","comment_is_top":false,"comment_ctime":1573468175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573468175","product_id":100039001,"comment_content":"UML 在沟通时成本时比较高，简单的草图或者模型图就可以沟通，但是如果业务复杂，在方案定稿后可以考虑用UML来作为文档的补充说明，是一种比较标准化的方式，能表达的内容和关系也比较多，如果业务相对简单实用模型图和简单的流程图就可以了","like_count":0},{"had_liked":false,"id":150142,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1573468062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573468062","product_id":100039001,"comment_content":"我觉得UML真的是科班出身，搞理论研究的才会清楚。","like_count":0},{"had_liked":false,"id":150139,"user_name":"一颗菜","can_delete":false,"product_type":"c1","uid":1242396,"ip_address":"","ucode":"5458554E264FB6","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/1c/20090248.jpg","comment_is_top":false,"comment_ctime":1573467742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573467742","product_id":100039001,"comment_content":"泛型和委托","like_count":0},{"had_liked":false,"id":150132,"user_name":"wl","can_delete":false,"product_type":"c1","uid":1392730,"ip_address":"","ucode":"45062AA2460F1F","user_header":"https://static001.geekbang.org/account/avatar/00/15/40/5a/e65e8c40.jpg","comment_is_top":false,"comment_ctime":1573466587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573466587","product_id":100039001,"comment_content":"今天学习了面向对象编程与面向对象编程语言的概念。<br>面向对象编程（oop）可以是一种编程范式，也可以是一种编程行为。<br>作为编程范式，会将类或对象作为组织代码的基本单位。<br>作为编程行为，需要面向对象分析（做什么）、面向对象设计（怎么做）、面向对象编程（将想法编程代码）。<br>面向对象编程语言，是支持类或对象的语法机制的。即使不属于面向对象编程语言，也可以使用面向对象来编程；属于面向对象编程语言的语言，在编程时也可以不面向对象编程，可以面向过程编程。<br>不严格来说，支持类或对象的概念，且以它们作为编码基础的语言都就可以认为是面向对象的编程语言。<br>UML 类图，根据自身情况学习。","like_count":0},{"had_liked":false,"id":150126,"user_name":"sdjdd","can_delete":false,"product_type":"c1","uid":1211987,"ip_address":"","ucode":"512F2338DFF793","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/53/c29c2fc9.jpg","comment_is_top":false,"comment_ctime":1573465241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573465241","product_id":100039001,"comment_content":"这篇文章里一个UML图也没有啊，怎么这么多同学挑图过于简单的毛病呢","like_count":0},{"had_liked":false,"id":150124,"user_name":"授人以🐟，不如授人以渔","can_delete":false,"product_type":"c1","uid":1193874,"ip_address":"","ucode":"BD53829E924B66","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","comment_is_top":false,"comment_ctime":1573465005,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573465005","product_id":100039001,"comment_content":"我个人觉得，这门课不需要用 `UML` 来描述了，成本高。能以最低成本让我们这些读者理解核心思想，才是最佳方式。<br><br>`UML` 统一建模语言，就像是其他语言一样，都是用来让别人理解自己的方式和途径。当然我们也可以使用其他的方式，比如草图配上详细的讲解。怎么方便怎么来，这门课的核心和重点在于让我们理解其中的设计原理、思路。","like_count":0},{"had_liked":false,"id":150113,"user_name":"时光流逝x","can_delete":false,"product_type":"c1","uid":1695455,"ip_address":"","ucode":"D7334E717D9ED0","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqUMEsVYklTc7akT2e6pfytu4jTQ88EVe1H6L2eHdXC6G8sbKCvfrnSDUIRq229M2Wt419LX2q8SQ/132","comment_is_top":false,"comment_ctime":1573463653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573463653","product_id":100039001,"comment_content":"在大部分情况下我认为只要能让人快速理解意思的图就是好图,完全没有必要纠结是不是那么的标准，关于面向对象的概念我还能想到的好像只有AOP了。","like_count":0},{"had_liked":false,"id":150105,"user_name":"zYoung","can_delete":false,"product_type":"c1","uid":1183261,"ip_address":"","ucode":"667F136DEE54FF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/IVPDicrgEUa8z0gWIw9DDXXcgFIZViaWf2KTJgW9Y3sAVea8crCDvRRxboOIZbPjEHDiaTTX0Tyr4Qxqk1GocibSAA/132","comment_is_top":false,"comment_ctime":1573462393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573462393","product_id":100039001,"comment_content":"UML 企图用不看代码的方式解释系统设计和实现,其实只是一种工具帮助理解而已,没必要太过依赖和深究,个人简单易懂的 UML 价值更高.","like_count":0},{"had_liked":false,"id":150104,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1573462359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573462359","product_id":100039001,"comment_content":"<br>1. UML只是一套工具,如果工具能够提升工作效率,我们考虑使用它;如果工具未必提升开发效率,我们就倾向于不使用它.重要的是工作效率,而不是为了使用工具而使用工具.所以我赞同作者的观点。<br><br><br>2. 面向对象编程关注对象的状态（status）与行为（behavior）。在Java中，使用成员变量（field）表示对象的状态，使用方法（method）表示对象的行为。","like_count":0},{"had_liked":false,"id":150103,"user_name":"tong467","can_delete":false,"product_type":"c1","uid":1560667,"ip_address":"","ucode":"544F6FB2C5A936","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJjw7KXibCGnibOm3O73xCGyCzdmgKuc017X8IQZCdNvAWxoWxHSgMTLgd7rGs1LCBPaU5oHbO16F0A/132","comment_is_top":false,"comment_ctime":1573462339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573462339","product_id":100039001,"comment_content":"我觉得不是简化UML，而是我们日常可能使用的是他的子集，只使用期部分功能，以达到方便沟通，和自己快速回想功能的作用。<br>面向对象，说起简单，万事万物，都是对象， 每个交互都是对象与对象间的沟通，但是写代码的时候更多时候是以面向过程来书写的。也不知道怎么调整。","like_count":0},{"had_liked":false,"id":150100,"user_name":"KaitoShy","can_delete":false,"product_type":"c1","uid":1038415,"ip_address":"","ucode":"E2E2E9BD3F5048","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/4f/65abc6f0.jpg","comment_is_top":false,"comment_ctime":1573462016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573462016","product_id":100039001,"comment_content":"1. 如果把软件设计当成一个工程来看的话，在时间允许的情况以更清楚的图表达不免是一个好的选择，毕竟标准化的事物容易继承； 而本身项目复杂程序不大，时间紧凑的话，只要能清楚的表达想要做什么就好了，即使是白板上的草图都可以。<br>2. 面向对象分析与设计 与 DDD 设计理念的区别？是不是就是 DDD 的一个子集？","like_count":0},{"had_liked":false,"id":150096,"user_name":"谭棋钊","can_delete":false,"product_type":"c1","uid":1237976,"ip_address":"","ucode":"F7F982BE5978BA","user_header":"https://static001.geekbang.org/account/avatar/00/12/e3/d8/bc70f34a.jpg","comment_is_top":false,"comment_ctime":1573461657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573461657","product_id":100039001,"comment_content":"感觉这节课的精髓就是面向对象是一种思维模式，与编程语言无关，任何编程语言都可以面向对象编程，而面向对象编程语言是方便面向对象编程","like_count":0},{"had_liked":false,"id":150094,"user_name":"真是艹0","can_delete":false,"product_type":"c1","uid":1234043,"ip_address":"","ucode":"0A082CE0D79C6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/7b/74e59208.jpg","comment_is_top":false,"comment_ctime":1573461100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573461100","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":150091,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1573460991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573460991","product_id":100039001,"comment_content":"如果面向对象的四大特性只选择一个的话，我会选择封装。封装划定了函数的边界，类的边界，以及类集合的边界。即使没有抽象，多态和继承，从一个组件开始搭建，也可以完成复杂的功能。<br><br>面向对象的分析和设计是围绕着系统的名词展开的，所有的动词作为名词的附属部分，比较易于理解。","like_count":0},{"had_liked":false,"id":150087,"user_name":"啸风","can_delete":false,"product_type":"c1","uid":1315934,"ip_address":"","ucode":"6DBCA0EC5D4085","user_header":"https://static001.geekbang.org/account/avatar/00/14/14/5e/25f5f8a8.jpg","comment_is_top":false,"comment_ctime":1573460558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573460558","product_id":100039001,"comment_content":"业务建模<br>需求<br>分析<br>设计<br><br>怎样让产品更好卖，怎样减少设计成本","like_count":0},{"had_liked":false,"id":150072,"user_name":"阳光很轻","can_delete":false,"product_type":"c1","uid":1619031,"ip_address":"","ucode":"73408E2DA4F10D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKE7VtDBFkSht6VgE4UZL82SlUrDXKVaGVibJSNXsVhfrPTNQ2OfrrOGu7ugMxwa0osyZibRqZjh5KQ/132","comment_is_top":false,"comment_ctime":1573458603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573458603","product_id":100039001,"comment_content":"UML实际上就是代码组织形式的一种表现形式，个人认为虽然学习成本稍高，但是确实是一种通用的规范化的表达，所以我觉得如果是在我们的课程中，还是需要严谨地表达，避免产生理解上的偏差。","like_count":0},{"had_liked":false,"id":150069,"user_name":"白色月光","can_delete":false,"product_type":"c1","uid":1676686,"ip_address":"","ucode":"4BD7973C2D738E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2QhWmbHaiauPUDNCdk756uLdK9oVwHaaGUEzichnGbgictRFApHicKJoAY9ic3A4vhIxnvwd2uRcuiavNDUFicwaVUq0w/132","comment_is_top":false,"comment_ctime":1573457695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573457695","product_id":100039001,"comment_content":"uml图是为了传达明确的设计意图，遵循最基本的规范能够达到意图明确的效果就行了。","like_count":0},{"had_liked":false,"id":150056,"user_name":"发光如星","can_delete":false,"product_type":"c1","uid":1087348,"ip_address":"","ucode":"1176C2EB6CC401","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/74/49d150d7.jpg","comment_is_top":false,"comment_ctime":1573455277,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573455277","product_id":100039001,"comment_content":"不懂uml类图，不过对于自己理清思路应该是很有帮助的，我们大部分程序员是用面向对象语言写面向过程代码","like_count":0},{"had_liked":false,"id":150049,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1573453619,"is_pvip":false,"replies":[{"id":"57807","content":"会考虑一部分关系，有些关系确实没有实际的意义，后面会讲到","user_name":"作者回复","comment_id":150049,"uid":"1190123","ip_address":"","utype":1,"ctime":1573514907,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573453619","product_id":100039001,"comment_content":"想问下实际生产生发中，有哪些同学在设计类时，会考虑类与类之间是泛化、实现、关联、聚合、组合还是依赖的？<br>另外想问下，之后的专栏会讲解这些关系在生产中有什么指导意义吗？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474049,"discussion_content":"会考虑一部分关系，有些关系确实没有实际的意义，后面会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573514907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150036,"user_name":"学好习，做好人","can_delete":false,"product_type":"c1","uid":1205294,"ip_address":"","ucode":"C991643DB458E2","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/2e/e70a317a.jpg","comment_is_top":false,"comment_ctime":1573451329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573451329","product_id":100039001,"comment_content":"UML类图可以不作为团队设计沟通的桥梁，但是对于每个人来说是有意义的，如果你的设计是杂乱无序的，那么画一下UML类图，可以显而易见的看到代码设计中杂乱的类，杂乱的对象，对于以后更好的重构其实是有积极的意义的<br>对于面向对象编程有一句话：万物皆对象，接口也可以认为是对象，即提倡要面向接口编程，但是在工作中发现这么一个问题，就是接口无处不在，项目中到处都是接口，接口最大的作用就是解耦，即实现与调用解耦，这似乎也是唯一体现的一个设计原则了，但是我感觉写代码的人为什么要设计为接口是没有一个明确的思考的，在Spring Cloud中，不设计成接口是不是我们没法复用了，显然对于那些设计成单一接口，单一功能的代码是不对的，脱离接口本身，这还是一个面向过程的逻辑。是不是更应该思考功能本身，业务本身，产品本身来设计接口而不是就面向接口编程而就设计接口呢。<br>最后一个问题：经常将面向接口与面向对象的概念弄混了，今天按照自己的理解总结下自己的理解：接口也可以任何是对象，面向接口从属于面向对象，但是面向接口不等于面向对象，面向对象是一个大的概念，面向接口编程是提倡的比较好的编程习惯，就像设计原则中的依赖倒置原则，要依赖于抽象而不是依赖于具体。将接口，抽象，多态用好真的是个很难的工作，请老师指正","like_count":0},{"had_liked":false,"id":150031,"user_name":"中世纪的knight","can_delete":false,"product_type":"c1","uid":1121710,"ip_address":"","ucode":"783D49A83D2441","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/ae/f78ce0d7.jpg","comment_is_top":false,"comment_ctime":1573450611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573450611","product_id":100039001,"comment_content":"UML确实复杂，《Head First 设计模式》一书中用的就不是标准的UML，简单的类图关系，再配上一些文字说明，很容易就看懂了。如果是标准的UML，那估计要先去学学UML，才能看懂在这些图","like_count":0},{"had_liked":false,"id":150022,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1573448175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573448175","product_id":100039001,"comment_content":"面向对象是一种思想","like_count":0},{"had_liked":false,"id":150021,"user_name":"NicholasKong","can_delete":false,"product_type":"c1","uid":1263678,"ip_address":"","ucode":"AD35217CA0C76D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er96OxUXwmONhgCAk2hpSkPqdQNuYpPC05JPeqZwL3pO0Aexom4CKj9vauXqMkZibPCIEbRNj6S6Cw/132","comment_is_top":false,"comment_ctime":1573447256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573447256","product_id":100039001,"comment_content":"UML没有必要一定严格的追寻标准，只需要大家在一定的程度打成共识，并且都可以读懂就好，只是一种可视化思想的工具。","like_count":0},{"had_liked":false,"id":150017,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1573445680,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573445680","product_id":100039001,"comment_content":"UML现在常画，理解各种关系用什么图形本身就是一个思考的过程。团队中确实不是每个人都熟悉，但还是会向小伙伴通过这个来表达自己的设计和观点~","like_count":0},{"had_liked":false,"id":150015,"user_name":"kkk","can_delete":false,"product_type":"c1","uid":1453027,"ip_address":"","ucode":"FB4BFD00618699","user_header":"","comment_is_top":false,"comment_ctime":1573445361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573445361","product_id":100039001,"comment_content":"同意老师的看法，uml没有必要花太多时间，重要的是理解设计模式的思想，更好的去表达自己的看法，和理解别人的想法","like_count":0},{"had_liked":false,"id":150012,"user_name":"筱乐乐哦","can_delete":false,"product_type":"c1","uid":1307611,"ip_address":"","ucode":"AE92539F0419C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/db/5b7a8fd8.jpg","comment_is_top":false,"comment_ctime":1573445007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573445007","product_id":100039001,"comment_content":"期待争哥的快速更新，没看过瘾","like_count":0},{"had_liked":false,"id":150007,"user_name":"葛学强","can_delete":false,"product_type":"c1","uid":1619767,"ip_address":"","ucode":"76A0CC9E1B54DC","user_header":"https://static001.geekbang.org/account/avatar/00/18/b7/37/171c307e.jpg","comment_is_top":false,"comment_ctime":1573444224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573444224","product_id":100039001,"comment_content":"您平时工作中做设计使用的啥，专栏中就怎么表达","like_count":0,"discussions":[{"author":{"id":1047733,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fc/b5/ac717737.jpg","nickname":"肖臧","note":"","ucode":"4FAC9FF54DD6A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230536,"discussion_content":"对于这种非业务系统，也非关键的支撑系统，这么写问题不大。Martin Flower的《重构》里也是这么推荐的，当然如果实际发现真的有非常大的性能问题，还可以继续优化。但是优先考虑的是单一职责","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586750905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150004,"user_name":"Cheng","can_delete":false,"product_type":"c1","uid":1543326,"ip_address":"","ucode":"264C35C2DE20AF","user_header":"https://static001.geekbang.org/account/avatar/00/17/8c/9e/e4da36d2.jpg","comment_is_top":false,"comment_ctime":1573443773,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573443773","product_id":100039001,"comment_content":"我是在工作中的设计文档中接触UML。先是知道了箭头和对应的代码，通过代码知道了对应的关系，反反复复几次下来就熟了，感觉学起来还挺快。","like_count":0},{"had_liked":false,"id":149999,"user_name":"Heiky","can_delete":false,"product_type":"c1","uid":1623626,"ip_address":"","ucode":"03AA79E1BC4AE4","user_header":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","comment_is_top":false,"comment_ctime":1573442995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573442995","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":149998,"user_name":"HF","can_delete":false,"product_type":"c1","uid":1112811,"ip_address":"","ucode":"0839195346C3CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/eb/84d4de33.jpg","comment_is_top":false,"comment_ctime":1573442972,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573442972","product_id":100039001,"comment_content":"UML来描述设计模式一般只绘制类图，如果只是类图，那几种关系，对于学这门课的或者从事这门行业的人来说，都会有自觉性，所以如果标准化UML大家建立一套共用的语言是没有问题的，不能增加灵活性而改变了制定一套大家共有规约的机制。","like_count":0},{"had_liked":false,"id":149995,"user_name":"moqifei","can_delete":false,"product_type":"c1","uid":1358410,"ip_address":"","ucode":"E0A6C858B78A3A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGovXf8jNP5ZqHsDKLwajjicbFwpX9on1xiaJDR4CgWaWP2KcfOdneasBfKFo3dO3dwQyGG6WjK40w/132","comment_is_top":false,"comment_ctime":1573442859,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573442859","product_id":100039001,"comment_content":"UML是否推荐使用——看公司对文档的重视程度，大厂不重视，某些国企很重视。","like_count":0},{"had_liked":false,"id":149991,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1573442243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573442243","product_id":100039001,"comment_content":"面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做?<br>问题：任何需求分析和设计好像都一样呀，搞清楚做什么，搞清楚怎么做，不太理解和面向对象有什么关系？","like_count":0},{"had_liked":false,"id":149987,"user_name":"岁月如歌","can_delete":false,"product_type":"c1","uid":1428828,"ip_address":"","ucode":"1AEBD6F79941B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QFE00aXGzaS6ibbfJSJsDrpIkqs0OrIYjzZv6L9vZmMhOlut2j24iaeZb0MCQazToE6FRXN960nNiaTrsmw09YjGw/132","comment_is_top":false,"comment_ctime":1573441509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573441509","product_id":100039001,"comment_content":"1、UML复杂度太高，课程更多侧重学习代码设计，图形简单达意，如简单的类图表单依赖关系即可。<br>2、在学校刚接触学习C++示例：将Bank银行账户封装私有化，只暴露部分接口提升账号安全性，另一个作用提升安全性。","like_count":0},{"had_liked":false,"id":149984,"user_name":"2018","can_delete":false,"product_type":"c1","uid":1107371,"ip_address":"","ucode":"4C2CD47AD70177","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/ab/6fab2492.jpg","comment_is_top":false,"comment_ctime":1573440962,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573440962","product_id":100039001,"comment_content":"打卡打卡","like_count":0},{"had_liked":false,"id":149977,"user_name":"Wiggins","can_delete":false,"product_type":"c1","uid":1078222,"ip_address":"","ucode":"021EE98CF0E4EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/73/ce/23bd3997.jpg","comment_is_top":false,"comment_ctime":1573439791,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1573439791","product_id":100039001,"comment_content":"的确在面向对象编程中 主要还是处理的逻辑 那在不使用UML图就能理清楚的情况下 的确也不需要 这样其他人也能更方便看懂 uml图等其他工具都是为了让事情变清晰变简单 而不是炫技","like_count":0},{"had_liked":false,"id":149976,"user_name":"董泽","can_delete":false,"product_type":"c1","uid":1640304,"ip_address":"","ucode":"3A9C52A40C05E7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epqhr6k2GrXDicNBGeYjzwrDfuwMaa21HRSdcKBvib1cK4E6CibvrdO1iawdzh330nRMoyobhfe3PxqVQ/132","comment_is_top":false,"comment_ctime":1573439727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573439727","product_id":100039001,"comment_content":"UML学习重在理解和表达，千万不能咬文嚼字，舍本逐末","like_count":0},{"had_liked":false,"id":149972,"user_name":"zyl","can_delete":false,"product_type":"c1","uid":1497036,"ip_address":"","ucode":"AF81C8BC1650AA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZVmxwJ6nvwpTibsDUntexFy76LnlEqtnVnnia5bycOyk5kIGuwYn6QYhDIicsLtBIb81EJbibcMSdKh3UShA1q2sicQ/132","comment_is_top":false,"comment_ctime":1573439315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573439315","product_id":100039001,"comment_content":"看懂UML还是需要一些基础的，对比文字或语音，UML结构图可以更好更透彻更深刻的理解设计模式建立的结构，支持+1","like_count":0},{"had_liked":false,"id":149970,"user_name":"aiwen","can_delete":false,"product_type":"c1","uid":1104346,"ip_address":"","ucode":"504F06CCC7B4FB","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/da/23a4a0c4.jpg","comment_is_top":false,"comment_ctime":1573438980,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573438980","product_id":100039001,"comment_content":"面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做，这……","like_count":0},{"had_liked":false,"id":149969,"user_name":"dingdongfm","can_delete":false,"product_type":"c1","uid":1564213,"ip_address":"","ucode":"7D17D2BC392A66","user_header":"","comment_is_top":false,"comment_ctime":1573438817,"is_pvip":false,"replies":[{"id":"58372","content":"所以，我个人觉得有的时候，UML本身增加了沟通成本。","user_name":"作者回复","comment_id":149969,"uid":"1190123","ip_address":"","utype":1,"ctime":1573790167,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573438817","product_id":100039001,"comment_content":"对于UML类图，之前看资料一直有一个非常大的困惑：同样的代码，在书\\网课\\IDE中生成的类图都不一致；甚至同一款IDE的不同版本生成的类图也不一致。困惑至今，真不知道应该怎么解决这个问题，能否分享下您的经验？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474025,"discussion_content":"所以，我个人觉得有的时候，UML本身增加了沟通成本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149968,"user_name":"L🚲🐱","can_delete":false,"product_type":"c1","uid":1577856,"ip_address":"","ucode":"08A012739614DE","user_header":"https://static001.geekbang.org/account/avatar/00/18/13/80/2c9da1b1.jpg","comment_is_top":false,"comment_ctime":1573438768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573438768","product_id":100039001,"comment_content":"uml 类图自己使用, 只要能达意就可以了, 接口 抽象类也属于面向对象","like_count":0},{"had_liked":false,"id":149966,"user_name":"胖子","can_delete":false,"product_type":"c1","uid":1151825,"ip_address":"","ucode":"DCFFE561092017","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLsuPxIWODMCRszB2nvTExr3oXh6V6MBDefgB6DmEJZjDLKL4DyAvlWWJUibFfRMWGOUiasfciaUs43w/132","comment_is_top":false,"comment_ctime":1573438359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573438359","product_id":100039001,"comment_content":"我觉得还是有掌握UML类图的必要的,比如大家在一起review代码的时候,讲解一些自定义Class类的关系的时候,能够比较直观,更加方便其它的同事理解,和记忆.","like_count":0},{"had_liked":false,"id":149965,"user_name":"塔兹米","can_delete":false,"product_type":"c1","uid":1425252,"ip_address":"","ucode":"1A58C81EF9B0A4","user_header":"https://static001.geekbang.org/account/avatar/00/15/bf/64/c9a0e913.jpg","comment_is_top":false,"comment_ctime":1573437494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573437494","product_id":100039001,"comment_content":"打卡！认同老师观点，适当简化UML图。能表达意思即可","like_count":0},{"had_liked":false,"id":149964,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1573437175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573437175","product_id":100039001,"comment_content":"UML虽然难记，但对应的概念确实面向对象设计的精髓","like_count":0},{"had_liked":false,"id":149955,"user_name":"Kevinlvlc","can_delete":false,"product_type":"c1","uid":1176980,"ip_address":"","ucode":"90DFD58CED138C","user_header":"https://static001.geekbang.org/account/avatar/00/11/f5/94/67fabf8e.jpg","comment_is_top":false,"comment_ctime":1573435961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573435961","product_id":100039001,"comment_content":"关于抽象为什么不算是面向对象的特征:<br>我认为抽象其实是任何软件设计所必须的特点，因为一段代码要完成哪些功能，这个设计过程本身就是抽象的过程，不管是面相对象还是面相过程，都具备抽象的特征，所以这并不是面相对象独有的","like_count":0},{"had_liked":false,"id":149953,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1399673,"ip_address":"","ucode":"929E3FFD14EFC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/79/d55044ac.jpg","comment_is_top":false,"comment_ctime":1573435560,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573435560","product_id":100039001,"comment_content":"UML学习成本高，也从侧面反映了面向对象编程没那么简单，把UML学通了，面向对象也差不多通了","like_count":0,"discussions":[{"author":{"id":1022247,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","nickname":"阿卡牛","note":"","ucode":"0BC43A904C3199","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48151,"discussion_content":"只能算有理论，离实际写代码还差完了 ：)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573453688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149952,"user_name":"一粟","can_delete":false,"product_type":"c1","uid":1058773,"ip_address":"","ucode":"2EE966F3C36B5F","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/d5/0fd21753.jpg","comment_is_top":false,"comment_ctime":1573435542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573435542","product_id":100039001,"comment_content":"开始学习","like_count":0},{"had_liked":false,"id":149951,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1573435484,"is_pvip":false,"replies":[{"id":"57681","content":"我觉得没有太大帮助","user_name":"作者回复","comment_id":149951,"uid":"1190123","ip_address":"","utype":1,"ctime":1573435926,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1573435484","product_id":100039001,"comment_content":"Uml类图的学习是否对源码阅读有帮助呢","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474020,"discussion_content":"我觉得没有太大帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573435926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239557,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","nickname":"一道阳光","note":"","ucode":"F35207CCCEC6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47942,"discussion_content":"我觉得有帮助吧，看源码时分析到细节里，各种类相互依赖，复杂的调用会直接看蒙，可能我技术层次太低了，只好借助uml来分析。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573436981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149950,"user_name":"废材姑娘","can_delete":false,"product_type":"c1","uid":1047537,"ip_address":"","ucode":"6AFB48B2A4939A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/f1/a2cde35e.jpg","comment_is_top":false,"comment_ctime":1573435462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573435462","product_id":100039001,"comment_content":"觉得UML自己用的时候随便想怎么画都行，但是如果生成文档给别人看，还是规范点吧，不然很容易误导","like_count":0},{"had_liked":false,"id":149946,"user_name":"梁军","can_delete":false,"product_type":"c1","uid":1521145,"ip_address":"","ucode":"81E22EFAFD77B4","user_header":"https://static001.geekbang.org/account/avatar/00/17/35/f9/7a682fc1.jpg","comment_is_top":false,"comment_ctime":1573435152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573435152","product_id":100039001,"comment_content":"对于uml我觉得还是尽量符合规范要好吧，毕竟学知识还是严谨点好，来看这个专栏的应该基础什么的都还行吧，如果画图是必须的，可以简单讲解一下，这样后续的课程应该也会问题不大，当然，可能需要自己下去补补课了","like_count":0},{"had_liked":false,"id":149943,"user_name":"FelixFly","can_delete":false,"product_type":"c1","uid":1160461,"ip_address":"","ucode":"1D39A7C3D0E31F","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/0d/0e65dee6.jpg","comment_is_top":false,"comment_ctime":1573434940,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573434940","product_id":100039001,"comment_content":"UML的规范还是要有的，不然每个人的表达表述都不一样，难以形成通用语言。规范不是约束，而是让事情进展的更顺序，沟通更方便，就比如现实世界的红绿灯，没有红路灯的时候会出现杂乱无章，有了红绿灯就能井然有序，就是让人们怎么遵守红绿灯。这样就回到了怎么准守UML的规范，一定的学习还是要有，不一定要全部把UML规范学习一遍，可以采用边用边学的方式循序渐进","like_count":0},{"had_liked":false,"id":149942,"user_name":"不与三季人说","can_delete":false,"product_type":"c1","uid":1693164,"ip_address":"","ucode":"A3F03832309FDD","user_header":"https://static001.geekbang.org/account/avatar/00/19/d5/ec/3d6e7ea7.jpg","comment_is_top":false,"comment_ctime":1573434816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573434816","product_id":100039001,"comment_content":"UML图确实很重要，但是学起来比较费时，如果严格高标准的要求自己，还是要学习掌握的，公司用到标准uml图的可能不大，但是一些优秀框架优秀项目的文档中，是一定用标准的uml图的，如果掌握了uml对于后续的学习帮助应该是很大的，只能慢慢一步一步的学，uml很复杂，也是一个很基础的东西。<br>今天主要说了oop  ood  ooa，我基础还行感觉都能理解，并且感同身受，大学里刚接触面向对象和面向过程的时候真的是只知道概念不知道啥意思，只能说用的多了自然就感觉到两者的区别了。今天的课对我来说比较轻松，期待下一期！","like_count":0},{"had_liked":false,"id":149929,"user_name":"醉比","can_delete":false,"product_type":"c1","uid":1248399,"ip_address":"","ucode":"79E65F62BE7809","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/8f/4ebd303a.jpg","comment_is_top":false,"comment_ctime":1573433764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573433764","product_id":100039001,"comment_content":"我想正是因为UML图的设计成本高，所以这么久以来接触到的机会很少，但是我感觉这又是一个程序员必备的技能，应该值得我们花时间去学习一下。","like_count":0},{"had_liked":false,"id":149927,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1573433583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573433583","product_id":100039001,"comment_content":"复杂系统的uml确实不好理解，但不管是uml，还是手写草图，主要目的表达清楚就OK，但是也要确保不能有太大歧义，否则得不偿失。","like_count":0},{"had_liked":false,"id":149923,"user_name":"bearlu","can_delete":false,"product_type":"c1","uid":1030862,"ip_address":"","ucode":"14F260C8B24E27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/ce/fd45714f.jpg","comment_is_top":false,"comment_ctime":1573433322,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573433322","product_id":100039001,"comment_content":"面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性，作为代码设计和实现的基石 。现在继承可以通过组合替换。","like_count":0},{"had_liked":false,"id":149921,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1573432834,"is_pvip":true,"replies":[{"id":"57678","content":"马上就会讲到的，别急","user_name":"作者回复","comment_id":149921,"uid":"1190123","ip_address":"","utype":1,"ctime":1573435677,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573432834","product_id":100039001,"comment_content":"<br>老师应该讲讲“类”和“接口”实现多态有什么区别。因为接口也能实现多态，例如在golang中放弃了继承，而是使用了接口。<br>Interfaces make the code more flexible, scalable and it’s a way to achieve polymorphism in Golang.<br><br>另外UML类图可以简化，但还要符合规范，尤其是箭头等特殊符号，用到什么到时注视一下即可。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474013,"discussion_content":"马上就会讲到的，别急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573435677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149912,"user_name":"geeklyc","can_delete":false,"product_type":"c1","uid":1264061,"ip_address":"","ucode":"F25441AB6433B3","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/bd/ae37990b.jpg","comment_is_top":false,"comment_ctime":1573432132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573432132","product_id":100039001,"comment_content":"UML还是规范点好，不规范可能对UML的误解。","like_count":0},{"had_liked":false,"id":149910,"user_name":"指尖流逝","can_delete":false,"product_type":"c1","uid":1005381,"ip_address":"","ucode":"417009F674FAF1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/45/c418ea5c.jpg","comment_is_top":false,"comment_ctime":1573431868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573431868","product_id":100039001,"comment_content":"UML作为一种交流的媒介，只是在建立交流双方彼此之间的“概念共识”。如果存在另一种简单的“共识工具”能促进交流的顺畅和无差异表达，那么UML也不是一定要在设计中使用了","like_count":0},{"had_liked":false,"id":149906,"user_name":"DigDeeply","can_delete":false,"product_type":"c1","uid":1239008,"ip_address":"","ucode":"113F4D755A1FEC","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/e0/33521e13.jpg","comment_is_top":false,"comment_ctime":1573431377,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573431377","product_id":100039001,"comment_content":"我觉得uml很重要，其实它完全可以是文档的一部分，让一个参与项目的新人，能够快速的读懂代码结构设计的思路，甚至有可能描述出产品需求文档中都没有描述清楚的地方，当然它的更新成本确实很高，这也是所有文档类管理的一个通病。","like_count":0,"discussions":[{"author":{"id":1206787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/03/cb597311.jpg","nickname":"远心","note":"","ucode":"1157202C315655","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48197,"discussion_content":"新人未必都懂 UML","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573461290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149904,"user_name":"koo","can_delete":false,"product_type":"c1","uid":1149276,"ip_address":"","ucode":"D612E52B5D90BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/5c/89f7bc6b.jpg","comment_is_top":false,"comment_ctime":1573431314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573431314","product_id":100039001,"comment_content":"UML在编程设计中实用性还是很高的，目前正在努力学习中，建议有时间和精力的可以提前学习积累起来。","like_count":0},{"had_liked":false,"id":149903,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1573431312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573431312","product_id":100039001,"comment_content":"Uml确实相对来说比较难懂。只要能理解对象之间的关系，肯定是怎么方便怎么来吧。","like_count":0},{"had_liked":false,"id":149902,"user_name":"艾斯","can_delete":false,"product_type":"c1","uid":1001543,"ip_address":"","ucode":"4F9643096CF57E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/47/6f239b14.jpg","comment_is_top":false,"comment_ctime":1573431187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573431187","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":149898,"user_name":"泰伦卢","can_delete":false,"product_type":"c1","uid":1141994,"ip_address":"","ucode":"FEA6B43C8D4FF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/ea/e03fec22.jpg","comment_is_top":false,"comment_ctime":1573431001,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573431001","product_id":100039001,"comment_content":"对于UML，用什么工具感觉不重要，能解决问题就好，华丽的辞藻不一定比通俗易懂更好。","like_count":0},{"had_liked":false,"id":149891,"user_name":"allean","can_delete":false,"product_type":"c1","uid":1051470,"ip_address":"","ucode":"A0D2DB4F219EAA","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/4e/fd946cb2.jpg","comment_is_top":false,"comment_ctime":1573430387,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573430387","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":149884,"user_name":"力主道","can_delete":false,"product_type":"c1","uid":1178870,"ip_address":"","ucode":"8C2BE1B9B10A28","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/f6/d50bfaf4.jpg","comment_is_top":false,"comment_ctime":1573429096,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573429096","product_id":100039001,"comment_content":"还是有用吧，毕竟画出来，比较容易理解流程，比较形象，没有直接说，想那么抽象。同时，易于保存，在后面再来看的时候，可以方便理解架构。","like_count":0},{"had_liked":false,"id":149878,"user_name":"aya","can_delete":false,"product_type":"c1","uid":1325690,"ip_address":"","ucode":"F50E350DCF72D6","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/7a/a68f0ff8.jpg","comment_is_top":false,"comment_ctime":1573428351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573428351","product_id":100039001,"comment_content":"面向对象更类似潜意识，我也看过几本相关的书，也能说出一些想法，但始终不全面，不像面向过程，简单直接，希望能和王争老师一道学好这种思维方式。","like_count":0},{"had_liked":false,"id":149877,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1573427911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573427911","product_id":100039001,"comment_content":"其他编程范式也有抽象的特性，它不是面向对象特有的，所以有人认为不应作为面向对象的一个特性","like_count":0},{"had_liked":false,"id":149864,"user_name":"一木成林","can_delete":false,"product_type":"c1","uid":1462499,"ip_address":"","ucode":"F853BDB8D4BFAB","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/e3/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1573409979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573409979","product_id":100039001,"comment_content":"面向对象主要是因为符合人类的思维习惯，这样写程序更加容易理解。","like_count":0},{"had_liked":false,"id":149860,"user_name":"yonyoupht","can_delete":false,"product_type":"c1","uid":1120025,"ip_address":"","ucode":"9B3AC96150B8AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/19/46fcde38.jpg","comment_is_top":false,"comment_ctime":1573405132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573405132","product_id":100039001,"comment_content":"迫不及待的读完了正式更新的第一节，对于面向对象，从概念上有了更清晰的认识。关于UML，作为一种设计工具，它遵循一套标准与规范，如果从设计的角度来说，UML确实很专业，但是就像王争老师说的那样，它的学习成本是有的，而且程序员之间的沟通有时候几张草图就完全搞定。本身是个好工具，就要看我们怎么使用吧。","like_count":0},{"had_liked":false,"id":149858,"user_name":"WIZ","can_delete":false,"product_type":"c1","uid":1260348,"ip_address":"","ucode":"313AF84674475C","user_header":"https://static001.geekbang.org/account/avatar/00/13/3b/3c/2947127c.jpg","comment_is_top":false,"comment_ctime":1573403933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573403933","product_id":100039001,"comment_content":"打卡！1.我认为UML作为一种语言，单独一本书都讲解不完，如果是需要非常正规专业化即对UML需求很高的情况下，那么就有必要花时间以及精力拿下。若是像现在一样，学习其他内容，那么完全没有必要，在面向对象的分析和设计过程中，我们主要是想通过画图的方式来表达清楚各个类之间的关联，明确易懂我觉得是首要，就像vs中的类图一样，很好用。2.目前接触的和了解的，只涉及到分析设计和编程，再就只有四大特性的具体分析了。","like_count":0},{"had_liked":false,"id":149847,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1573401648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573401648","product_id":100039001,"comment_content":"第一个","like_count":0}]}