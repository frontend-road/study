{"id":93359,"title":"05 | 计算机指令：让我们试试用纸带编程","content":"<p>你在学写程序的时候，有没有想过，古老年代的计算机程序是怎么写出来的？</p><p>上大学的时候，我们系里教C语言程序设计的老师说，他们当年学写程序的时候，不像现在这样，都是用一种古老的物理设备，叫作“打孔卡（Punched Card）”。用这种设备写程序，可没法像今天这样，掏出键盘就能打字，而是要先在脑海里或者在纸上写出程序，然后在纸带或者卡片上打洞。这样，要写的程序、要处理的数据，就变成一条条纸带或者一张张卡片，之后再交给当时的计算机去处理。</p><p><img src=\"https://static001.geekbang.org/resource/image/5d/d7/5d407c051e261902ad9a216c66de3fd7.jpg\" alt=\"\" title=\"上世纪60年代晚期或70年代初期，Arnold Reinold拍摄的FORTRAN计算程序的穿孔卡照片\"></p><p>你看这个穿孔纸带是不是有点儿像我们现在考试用的答题卡？那个时候，人们在特定的位置上打洞或者不打洞，来代表“0”或者“1”。</p><p>为什么早期的计算机程序要使用打孔卡，而不能像我们现在一样，用C或者Python这样的高级语言来写呢？原因很简单，因为计算机或者说CPU本身，并没有能力理解这些高级语言。即使在2019年的今天，我们使用的现代个人计算机，仍然只能处理所谓的“机器码”，也就是一连串的“0”和“1”这样的数字。</p><p>那么，我们每天用高级语言的程序，最终是怎么变成一串串“0”和“1”的？这一串串“0”和“1”又是怎么在CPU中处理的？今天，我们就来仔细介绍一下，“机器码”和“计算机指令”到底是怎么回事。</p><!-- [[[read_end]]] --><h2>在软硬件接口中，CPU帮我们做了什么事？</h2><p>我们常说，CPU就是计算机的大脑。CPU的全称是Central Processing Unit，中文是中央处理器。</p><p>我们上一节说了，从<strong>硬件</strong>的角度来看，CPU就是一个超大规模集成电路，通过电路实现了加法、乘法乃至各种各样的处理逻辑。</p><p>如果我们从<strong>软件</strong>工程师的角度来讲，CPU就是一个执行各种<strong>计算机指令</strong>（Instruction Code）的逻辑机器。这里的计算机指令，就好比一门CPU能够听得懂的语言，我们也可以把它叫作<strong>机器语言</strong>（Machine Language）。</p><p>不同的CPU能够听懂的语言不太一样。比如，我们的个人电脑用的是Intel的CPU，苹果手机用的是ARM的CPU。这两者能听懂的语言就不太一样。类似这样两种CPU各自支持的语言，就是两组不同的<strong>计算机指令集</strong>，英文叫Instruction Set。这里面的“Set”，其实就是数学上的集合，代表不同的单词、语法。</p><p>所以，如果我们在自己电脑上写一个程序，然后把这个程序复制一下，装到自己的手机上，肯定是没办法正常运行的，因为这两者语言不通。而一台电脑上的程序，简单复制一下到另外一台电脑上，通常就能正常运行，因为这两台CPU有着相同的指令集，也就是说，它们的语言相通的。</p><p>一个计算机程序，不可能只有一条指令，而是由成千上万条指令组成的。但是CPU里不能一直放着所有指令，所以计算机程序平时是存储在存储器中的。这种程序指令存储在存储器里面的计算机，我们就叫作<strong>存储程序型计算机</strong>（Stored-program Computer）。</p><p>说到这里，你可能要问了，难道还有不是存储程序型的计算机么？其实，在没有现代计算机之前，有着聪明才智的工程师们，早就发明了一种叫Plugboard Computer的计算设备。我把它直译成“插线板计算机”。在一个布满了各种插口和插座的板子上，工程师们用不同的电线来连接不同的插口和插座，从而来完成各种计算任务。下面这个图就是一台IBM的Plugboard，看起来是不是有一股满满的蒸汽朋克范儿？</p><p><img src=\"https://static001.geekbang.org/resource/image/99/51/99eb1ab1cdbdfa2d35fce456940ca651.jpg\" alt=\"\" title=\"一台IBM的Plugboard\"></p><h2>从编译到汇编，代码怎么变成机器码？</h2><p>了解了计算机指令和计算机指令集，接下来我们来看看，平时编写的代码，到底是怎么变成一条条计算机指令，最后被CPU执行的呢？我们拿一小段真实的C语言程序来看看。</p><pre><code>// test.c\nint main()\n{\n  int a = 1; \n  int b = 2;\n  a = a + b;\n}\n</code></pre><p>这是一段再简单不过的C语言程序，即便你不了解C语言，应该也可以看懂。我们给两个变量 a、b分别赋值1、2，然后再将a、b两个变量中的值加在一起，重新赋值给了a这个变量。</p><p>要让这段程序在一个Linux操作系统上跑起来，我们需要把整个程序翻译成一个<strong>汇编语言</strong>（ASM，Assembly Language）的程序，这个过程我们一般叫编译（Compile）成汇编代码。</p><p>针对汇编代码，我们可以再用汇编器（Assembler）翻译成机器码（Machine Code）。这些机器码由“0”和“1”组成的机器语言表示。这一条条机器码，就是一条条的<strong>计算机指令</strong>。这样一串串的16进制数字，就是我们CPU能够真正认识的计算机指令。</p><p>在一个Linux操作系统上，我们可以简单地使用gcc和objdump这样两条命令，把对应的汇编代码和机器码都打印出来。</p><pre><code>$ gcc -g -c test.c\n$ objdump -d -M intel -S test.o\n</code></pre><p>可以看到，左侧有一堆数字，这些就是一条条机器码；右边有一系列的push、mov、add、pop等，这些就是对应的汇编代码。一行C语言代码，有时候只对应一条机器码和汇编代码，有时候则是对应两条机器码和汇编代码。汇编代码和机器码之间是一一对应的。</p><pre><code>test.o:     file format elf64-x86-64\nDisassembly of section .text:\n0000000000000000 &lt;main&gt;:\nint main()\n{\n   0:   55                      push   rbp\n   1:   48 89 e5                mov    rbp,rsp\n  int a = 1; \n   4:   c7 45 fc 01 00 00 00    mov    DWORD PTR [rbp-0x4],0x1\n  int b = 2;\n   b:   c7 45 f8 02 00 00 00    mov    DWORD PTR [rbp-0x8],0x2\n  a = a + b;\n  12:   8b 45 f8                mov    eax,DWORD PTR [rbp-0x8]\n  15:   01 45 fc                add    DWORD PTR [rbp-0x4],eax\n}\n  18:   5d                      pop    rbp\n  19:   c3                      ret    \n</code></pre><p>这个时候你可能又要问了，我们实际在用GCC（GUC编译器套装，GNU Compiler Collectipon）编译器的时候，可以直接把代码编译成机器码呀，为什么还需要汇编代码呢？原因很简单，你看着那一串数字表示的机器码，是不是摸不着头脑？但是即使你没有学过汇编代码，看的时候多少也能“猜”出一些这些代码的含义。</p><p>因为汇编代码其实就是“给程序员看的机器码”，也正因为这样，机器码和汇编代码是一一对应的。我们人类很容易记住add、mov这些用英文表示的指令，而8b 45 f8这样的指令，由于很难一下子看明白是在干什么，所以会非常难以记忆。尽管早年互联网上到处流传，大神程序员着拿小刀在光盘上刻出操作系统的梗，但是要让你用打孔卡来写个程序，估计浪费的卡片比用上的卡片要多得多。</p><p><img src=\"https://static001.geekbang.org/resource/image/67/5b/67cf3c90ac9bde229352e1be0db24b5b.png\" alt=\"\"></p><p>从高级语言到汇编代码，再到机器码，就是一个日常开发程序，最终变成了CPU可以执行的计算机指令的过程。</p><h2>解析指令和机器码</h2><p>了解了这个过程，下面我们放大局部，来看看这一行行的汇编代码和机器指令，到底是什么意思。</p><p>我们就从平时用的电脑、手机这些设备来说起。这些设备的CPU到底有哪些指令呢？这个还真有不少，我们日常用的Intel CPU，有2000条左右的CPU指令，实在是太多了，所以我没法一一来给你讲解。不过一般来说，常见的指令可以分成五大类。</p><p>第一类是<strong>算术类指令</strong>。我们的加减乘除，在CPU层面，都会变成一条条算术类指令。</p><p>第二类是<strong>数据传输类指令</strong>。给变量赋值、在内存里读写数据，用的都是数据传输类指令。</p><p>第三类是<strong>逻辑类指令</strong>。逻辑上的与或非，都是这一类指令。</p><p>第四类是<strong>条件分支类指令</strong>。日常我们写的“if/else”，其实都是条件分支类指令。</p><p>最后一类是<strong>无条件跳转指令</strong>。写一些大一点的程序，我们常常需要写一些函数或者方法。在调用函数的时候，其实就是发起了一个无条件跳转指令。</p><p>你可能一下子记不住，或者对这些指令的含义还不能一下子掌握，这里我画了一个表格，给你举例子说明一下，帮你理解、记忆。</p><p><img src=\"https://static001.geekbang.org/resource/image/eb/97/ebfd3bfe5dba764cdcf871e23b29f197.jpeg\" alt=\"\"></p><p>下面我们来看看，汇编器是怎么把对应的汇编代码，翻译成为机器码的。</p><p>我们说过，不同的CPU有不同的指令集，也就对应着不同的汇编语言和不同的机器码。为了方便你快速理解这个机器码的计算方式，我们选用最简单的MIPS指令集，来看看机器码是如何生成的。</p><p>MIPS是一组由MIPS技术公司在80年代中期设计出来的CPU指令集。就在最近，MIPS公司把整个指令集和芯片架构都完全开源了。想要深入研究CPU和指令集的同学，我这里推荐<a href=\"https://www.mips.com/mipsopen/\">一些资料</a>，你可以自己了解下。</p><p><img src=\"https://static001.geekbang.org/resource/image/b1/bf/b1ade5f8de67b172bf7b4ec9f63589bf.jpeg\" alt=\"\"></p><p>MIPS的指令是一个32位的整数，高6位叫<strong>操作码</strong>（Opcode），也就是代表这条指令具体是一条什么样的指令，剩下的26位有三种格式，分别是R、I和J。</p><p><strong>R指令</strong>是一般用来做算术和逻辑操作，里面有读取和写入数据的寄存器的地址。如果是逻辑位移操作，后面还有位移操作的位移量，而最后的功能码，则是在前面的操作码不够的时候，扩展操作码表示对应的具体指令的。</p><p><strong>I指令</strong>，则通常是用在数据传输、条件分支，以及在运算的时候使用的并非变量还是常数的时候。这个时候，没有了位移量和操作码，也没有了第三个寄存器，而是把这三部分直接合并成了一个地址值或者一个常数。</p><p><strong>J指令</strong>就是一个跳转指令，高6位之外的26位都是一个跳转后的地址。</p><pre><code>add $t0,$s2,$s1\n</code></pre><p>我以一个简单的加法算术指令add $t0, $s1, $s2,为例，给你解释。为了方便，我们下面都用十进制来表示对应的代码。</p><p>对应的MIPS指令里opcode是0，rs代表第一个寄存器s1的地址是17，rt代表第二个寄存器s2的地址是18，rd代表目标的临时寄存器t0的地址，是8。因为不是位移操作，所以位移量是0。把这些数字拼在一起，就变成了一个MIPS的加法指令。</p><p>为了读起来方便，我们一般把对应的二进制数，用16进制表示出来。在这里，也就是0X02324020。这个数字也就是这条指令对应的机器码。</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/1d/8fced6ff11d3405cdf941f6742b5081d.jpeg\" alt=\"\"></p><p>回到开头我们说的打孔带。如果我们用打孔代表1，没有打孔代表0，用4行8列代表一条指令来打一个穿孔纸带，那么这条命令大概就长这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/7c/1e5ecb8c92b01defee1c2af8c864887c.png?wh=781x511\" alt=\"\"></p><p>好了，恭喜你，读到这里，你应该学会了怎么作为人肉编译和汇编器，给纸带打孔编程了，不用再对那些用过打孔卡的前辈们顶礼膜拜了。</p><h2>总结延伸</h2><p>到这里，想必你也应该明白了，我们在这一讲的开头介绍的打孔卡，其实就是一种存储程序型计算机。</p><p>只是这整个程序的机器码，不是通过计算机编译出来的，而是由程序员，用人脑“编译”成一张张卡片的。对应的程序，也不是存储在设备里，而是存储成一张打好孔的卡片。但是整个程序运行的逻辑和其他CPU的机器语言没有什么分别，也是处理一串“0”和“1”组成的机器码而已。</p><p>这一讲里，我们看到了一个C语言程序，是怎么被编译成为汇编语言，乃至通过汇编器再翻译成机器码的。</p><p>除了C这样的编译型的语言之外，不管是Python这样的解释型语言，还是Java这样使用虚拟机的语言，其实最终都是由不同形式的程序，把我们写好的代码，转换成CPU能够理解的机器码来执行的。</p><p>只是解释型语言，是通过解释器在程序运行的时候逐句翻译，而Java这样使用虚拟机的语言，则是由虚拟机对编译出来的中间代码进行解释，或者即时编译成为机器码来最终执行。</p><p>然而，单单理解一条指令是怎么变成机器码的肯定是不够的。接下来的几节，我会深入讲解，包含条件、循环、函数、递归这些语句的完整程序，是怎么在CPU里面执行的。</p><h2>推荐阅读</h2><p>这一讲里，我们用的是相对最简单的MIPS指令集作示例。想要对我们日常使用的Intel CPU的指令集有所了解，可以参看《计算机组成与设计：软/硬件接口》第5版的2.17小节。</p><h2>课后思考</h2><p>我们把一个数字在命令行里面打印出来，背后对应的机器码是什么？你可以试试通过GCC把这个的汇编代码和机器码打出来。</p><p>欢迎你在留言区写下你的思考和疑问，你也可以把今天的文章分享给你朋友，和他一起学习和进步。</p>","comments":[{"had_liked":false,"id":99046,"user_name":"ack","can_delete":false,"product_type":"c1","uid":1440912,"ip_address":"","ucode":"69CA1233EEA8E2","user_header":"https://static001.geekbang.org/account/avatar/00/15/fc/90/c9df0459.jpg","comment_is_top":false,"comment_ctime":1559135322,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"650099197018","product_id":100026001,"comment_content":" opcode(6位)   <br>\t000000  10001 10010 01000 00000 100000<br>\t=0000 0010 0011 0010 0100 0000 0010 0000（对应纵向打孔带）<br>\t=0X02324020","like_count":152,"discussions":[{"author":{"id":1471279,"avatar":"https://static001.geekbang.org/account/avatar/00/16/73/2f/2b822de2.jpg","nickname":"美梦与热望","note":"","ucode":"03D569C47B1DA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5622,"discussion_content":"多谢，不然我就看不懂那个打孔纸片了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1566390585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226515,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b7/13/86c41697.jpg","nickname":"ConnersHua","note":"","ucode":"B02250FE0EBF54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7817,"discussion_content":"感谢大佬","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567681360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130726,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/e6/2cd0f52b.jpg","nickname":"Mr.x","note":"","ucode":"FDA144380DB9AE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581626,"discussion_content":"妙啊，看懂了那个卡带","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658892747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2518863,"avatar":"https://static001.geekbang.org/account/avatar/00/26/6f/4f/3cf1e9c4.jpg","nickname":"钱鹏 Allen","note":"","ucode":"7E95E82C0717DA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380010,"discussion_content":"多谢，查找资料后，发现评论区有正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624280982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330999,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KhQRc8hIxHHyPV3Og2Fc5l8w2y7ibGwGn6odmzl3wTt6fPrNv589uHmia1rgiaZhRiaLVHv9ibhzkxFx1zo42uNIS9A/132","nickname":"道长","note":"","ucode":"15B2E9CEF84634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361441,"discussion_content":"你好，请教一下，最前面得0x是哪来的，代表啥意思呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616673005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2584432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/6f/70/01f50897.jpg","nickname":"大年","note":"","ucode":"395F60C98E808B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2330999,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KhQRc8hIxHHyPV3Og2Fc5l8w2y7ibGwGn6odmzl3wTt6fPrNv589uHmia1rgiaZhRiaLVHv9ibhzkxFx1zo42uNIS9A/132","nickname":"道长","note":"","ucode":"15B2E9CEF84634","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373127,"discussion_content":"16进制","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1620626209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361441,"ip_address":""},"score":373127,"extra":""},{"author":{"id":2204439,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DD1fMrD3TSuPGsVyUiaI6iaicPY2bRb0VgcFERAiaJ6pMPk3LkmAibgdX17z8oP3Pk6bOqY3mIsmuaY79RWFvOen6Jw/132","nickname":"Geek_36fda6","note":"","ucode":"B467E4A3BC4D1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2584432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/6f/70/01f50897.jpg","nickname":"大年","note":"","ucode":"395F60C98E808B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400771,"discussion_content":"0000对应0X0，因为16进制以0X开头，所以0000其实就是0相当于0X0是吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1633419422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373127,"ip_address":""},"score":400771,"extra":""}]},{"author":{"id":1898150,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f6/a6/2b197e7f.jpg","nickname":"爱学习的周小斌","note":"","ucode":"AFA9B6AEB98562","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218339,"discussion_content":"楼主您好！我想问一下opcode(6位)怎么理解呢？是默认的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585649512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1440912,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fc/90/c9df0459.jpg","nickname":"ack","note":"","ucode":"69CA1233EEA8E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1898150,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f6/a6/2b197e7f.jpg","nickname":"爱学习的周小斌","note":"","ucode":"AFA9B6AEB98562","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243184,"discussion_content":"MIPS 格式，文章有写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587527481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218339,"ip_address":""},"score":243184,"extra":""}]},{"author":{"id":1199843,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4e/e3/1a2e379f.jpg","nickname":"蔡鹏飞","note":"","ucode":"64B86B24D3A2CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6075,"discussion_content":"多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566657643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91048,"user_name":"lzhao","can_delete":false,"product_type":"c1","uid":1509217,"ip_address":"","ucode":"9E71888215D3E1","user_header":"","comment_is_top":false,"comment_ctime":1556835192,"is_pvip":false,"replies":[{"id":"32646","content":"l&#39;hao同学你好，是二进制，16进制只是为了显示方便，毕竟一串0和1在显示上太没有效率了","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1556841640,"ip_address":"","comment_id":91048,"utype":1}],"discussion_count":10,"race_medal":0,"score":"315089447800","product_id":100026001,"comment_content":"机器码不是二进制吗？为什么gcc把汇编编译成16进制？","like_count":74,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448781,"discussion_content":"l&amp;#39;hao同学你好，是二进制，16进制只是为了显示方便，毕竟一串0和1在显示上太没有效率了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556841640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1992059,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/65/7b/058d17f3.jpg","nickname":"耶low","note":"","ucode":"4CCEB741583544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348720,"discussion_content":"二进制太长，十进制与二进制转换又太麻烦，十六进制正好。每四位二进制都可以转换为两位十六进制，从显示和转换来说，十六进制都是非常合适的。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1612688901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1130275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3f/23/8ff389d2.jpg","nickname":"郁方林","note":"","ucode":"8ABEAFDA815DDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1992059,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/65/7b/058d17f3.jpg","nickname":"耶low","note":"","ucode":"4CCEB741583544","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371131,"discussion_content":"不应该是4位二进制转换1位十六进制吗","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1619660109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348720,"ip_address":""},"score":371131,"extra":""}]},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412265,"discussion_content":"十六进制是二进制的助记，就像汇编指令是机器码助记一个道理","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1636121170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1660988,"avatar":"https://static001.geekbang.org/account/avatar/00/19/58/3c/b9cb7263.jpg","nickname":"滨","note":"","ucode":"25E2590ED49245","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365237,"discussion_content":"晕，这都是什么问题，作者应该崩溃五分钟","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617755736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2188865,"avatar":"","nickname":"Geek_2bd636","note":"","ucode":"7A0A2A1F801A8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307646,"discussion_content":"可以理解成把线状的机器码折叠下节约阅读空间？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600702921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1834181,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","nickname":"BugBean","note":"","ucode":"B51232281AD9BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305186,"discussion_content":"为什么选择了16进制,而不是32进制、64进制","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599811147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1803215,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/83/cf/1f3b5b17.jpg","nickname":"Jaden~お張嘉楽","note":"","ucode":"FA2737D6A1D2C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1834181,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","nickname":"BugBean","note":"","ucode":"B51232281AD9BC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373708,"discussion_content":"可能是从可读性角度吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620830885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305186,"ip_address":""},"score":373708,"extra":""},{"author":{"id":2419502,"avatar":"https://static001.geekbang.org/account/avatar/00/24/eb/2e/90fea784.jpg","nickname":"柒","note":"","ucode":"D41241629321A1","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1803215,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/83/cf/1f3b5b17.jpg","nickname":"Jaden~お張嘉楽","note":"","ucode":"FA2737D6A1D2C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546632,"discussion_content":"所以如果用32进制，64进制，\n一个字节怎么表示？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642381487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373708,"ip_address":""},"score":546632,"extra":""}]},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412267,"discussion_content":"32是2的5次方，从数学上是完全可以的。但实际中，内存是按位（1）、半字节（4）、字节（8）、半字（16）、字（32）来使用的，5位不方便。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636121516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96726,"user_name":"郭江伟","can_delete":false,"product_type":"c1","uid":1313994,"ip_address":"","ucode":"613D638619B5A2","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/ca/6173350b.jpg","comment_is_top":false,"comment_ctime":1558493493,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"293616269621","product_id":100026001,"comment_content":"gjw@gjw:~&#47;csapp&#47;000$ cat simplest.c<br>int main(){<br>int a=1,b=20;<br>int c=a+b;<br>}<br>生成的汇编及其具体解释：<br>push   %rbp  压栈 ，基址指针<br>mov    %rsp,%rbp 将堆栈寄存器内容移动到基址寄存器<br>movl   $0x1,-0xc(%rbp) 将栈基地址偏移12字节设为1，对应变量a=1<br>movl   $0x14,-0x8(%rbp) 将栈基地址偏移8个字节设为20（16进制14=10进制20），变量b=20<br>mov    -0xc(%rbp),%edx 将栈基地址偏移12字节的数据移动到edx寄存器<br>mov    -0x8(%rbp),%eax 将栈基地址偏移8个字节的数据移动到eax寄存器<br>add    %edx,%eax       edx 数据和eax数据相加，结果保存到eax寄存器<br>mov    $0x0,%eax       重置eax寄存器<br>pop    %rbp            弹出栈数据<br>retq                   main函数返回并退出","like_count":69,"discussions":[{"author":{"id":2099073,"avatar":"https://static001.geekbang.org/account/avatar/00/20/07/81/eec288f4.jpg","nickname":"tyt","note":"","ucode":"A1B4C026F54B00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295739,"discussion_content":"首先进入一个函数前将rbp入栈，将父级函数的rbp值存储起来，然后将当前栈顶指针赋值给rbp，通过rbp来对该函数里面的参数，局部变量来进行索引，最后函数结束弹出rbp。然后继续执行父函数未完成代码。通过这种方式函数可以实现嵌套调用。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1596324888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2099073,"avatar":"https://static001.geekbang.org/account/avatar/00/20/07/81/eec288f4.jpg","nickname":"tyt","note":"","ucode":"A1B4C026F54B00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295737,"discussion_content":"有错误，别牛逼了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596324380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130729,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/e9/29dfa621.jpg","nickname":"小灰","note":"","ucode":"1AB4E3AEDEE7FC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583765,"discussion_content":"我这边生成指令有点不一样\nroot@MiHome:/home/ubuntu/workspace/demo# cat test.s\n        .file   &#34;test.c&#34;\n        .text\n        .globl  main\n        .type   main, @function\nmain:\n.LFB0:\n        .cfi_startproc\n        endbr64\n        pushq   %rbp \n        .cfi_def_cfa_offset 16\n        .cfi_offset 6, -16\n        movq    %rsp, %rbp \n        .cfi_def_cfa_register 6\n        movl    $1, -12(%rbp)\n        movl    $20, -8(%rbp)\n        movl    -12(%rbp), %edx\n        movl    -8(%rbp), %eax\n        addl    %edx, %eax\n        movl    %eax, -4(%rbp)\n        movl    $0, %eax\n        popq    %rbp\n        .cfi_def_cfa 7, 8\n        ret\n        .cfi_endproc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660361618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2289470,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PjTnyNMIWswlxQrNerxZUMiaAcoV0Yzg6oCoz0UtXTa1wicFoarKmdG8g0csibjoZyHGPVtd6ZQKBicxHsAXAWIjibQ/132","nickname":"Geek_dca2b2","note":"","ucode":"7D6B9DFAFE7AA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561598,"discussion_content":"你好 我没有看过汇编  想问一下汇编的偏移是按照字节来的吗\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649682520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2651290,"avatar":"https://static001.geekbang.org/account/avatar/00/28/74/9a/580d35a5.jpg","nickname":"用户7437721993","note":"","ucode":"0E16E6CFA4D225","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380639,"discussion_content":"都是大佬，请受小弟一拜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624612957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1455385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/35/19/4f9dc4b5.jpg","nickname":"吹啊吹吹","note":"","ucode":"FFB7D85C26145B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188956,"discussion_content":"牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582826855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226515,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b7/13/86c41697.jpg","nickname":"ConnersHua","note":"","ucode":"B02250FE0EBF54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7818,"discussion_content":"赞一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567681553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91595,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1399673,"ip_address":"","ucode":"929E3FFD14EFC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/79/d55044ac.jpg","comment_is_top":false,"comment_ctime":1557058127,"is_pvip":false,"replies":[{"id":"32779","content":"json同学你好，第一台计算机ENIAC，如果你去计算机历史博物馆看一下真机就会明白，他的各种输入都是一些旋钮，可以认为是类似用机器码在编程，后来才有了汇编、C这样越来越高级的语言。<br><br>编程语言是自举的，并不需要第一个编译器就是用自己这个语言来写的。通常是先有了别的语言写好的编译器，然后再用自己来写自己语言的编译器。<br><br>更详细的关于鸡蛋问题，可以直接看Wikipedia上，讲了多种这个问题的解决方案<br>https:&#47;&#47;en.wikipedia.org&#47;wiki&#47;Bootstrapping_(compilers)","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557121191,"ip_address":"","comment_id":91595,"utype":1}],"discussion_count":5,"race_medal":0,"score":"203420521039","product_id":100026001,"comment_content":"老师您好，说到指令，让我想起来困惑我本科时期很久的一个问题:<br><br>用C或者其他的高级语言可以实现更多的语言，那么这么一直追问下去，就有个类似蛋生鸡的问题，第一个编程语言是怎么来的？<br><br>编程语言一般会有&quot;自举&quot;的功能，那么自举是怎么实现的？比如说Go语言就是自己实现自己，那么在没有Go编译器的基础上，怎么做到自己编译自己的？","like_count":48,"discussions":[{"author":{"id":1660988,"avatar":"https://static001.geekbang.org/account/avatar/00/19/58/3c/b9cb7263.jpg","nickname":"滨","note":"","ucode":"25E2590ED49245","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365239,"discussion_content":"编译本身就是个翻译过程，能做二进制字符串操作和文件读写的语言理论上都能写出编译器来吧，真正的挑战是解释语言，任何语言的第一版都是其他之前的语言实现的，一直追溯到用开关、插头和按钮","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1617756093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1620113,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b8/91/8a5c3ec6.jpg","nickname":"王一之","note":"","ucode":"7E13332BAEC2F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297101,"discussion_content":"go最开始也是由c编写编译的，到1.4版本才能自举","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1596775099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448956,"discussion_content":"json同学你好，第一台计算机ENIAC，如果你去计算机历史博物馆看一下真机就会明白，他的各种输入都是一些旋钮，可以认为是类似用机器码在编程，后来才有了汇编、C这样越来越高级的语言。\n\n编程语言是自举的，并不需要第一个编译器就是用自己这个语言来写的。通常是先有了别的语言写好的编译器，然后再用自己来写自己语言的编译器。\n\n更详细的关于鸡蛋问题，可以直接看Wikipedia上，讲了多种这个问题的解决方案\nhttps://en.wikipedia.org/wiki/Bootstrapping_(compilers)","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1557121191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228313,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/vQiadbkZYR239J80hjekw7jzY9vy6otLKPNDSuz2lruDiaXlKGkcsX5wwiaFevicgqV8odlRG4UITiadDF3fgicrHPcw/132","nickname":"疯码","note":"","ucode":"7FF11EC80439EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353003,"discussion_content":"硬件层面的强行规定就是第一个语言。后续在此基础上逐渐衍生出后续的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614943017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253128,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/08/14642f9e.jpg","nickname":"相望于江湖","note":"","ucode":"9CCB6F89F92C89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546484,"discussion_content":"第一个编译器不能是用010101写成的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642315503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92829,"user_name":"周曙光爱学习","can_delete":false,"product_type":"c1","uid":1022920,"ip_address":"","ucode":"98EAB6EBAB34B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/c8/665100a3.jpg","comment_is_top":false,"comment_ctime":1557331849,"is_pvip":false,"replies":[{"id":"33390","content":"👍，周曙光爱学习同学你好，这个理解和比喻很形象","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557473788,"ip_address":"","comment_id":92829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"190535892873","product_id":100026001,"comment_content":"指令和机器码的关系是？可以理解为cpu指令类似数学公式，我们写的程序在套用这些公式，然后公式+参数生成机器码？","like_count":45,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449394,"discussion_content":"👍，周曙光爱学习同学你好，这个理解和比喻很形象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557473788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91255,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1556954888,"is_pvip":true,"replies":[{"id":"32787","content":"一步同学你好，<br><br>不同指令集里，对应的汇编代码会对应这个指令集的机器码呀。<br><br>大家不要把“汇编语言”当成是像C一样的一门统一编程语言。<br><br>“汇编语言”其实可以理解成“机器码”的一种别名或者书写方式，不同的指令集和体系结构的机器会有不同的“机器码”<br><br>高级语言在转换成为机器码的时候，是通过编译器进行的，需要编译器指定编译成哪种汇编&#47;机器码。<br><br>物理机自己执行的时候只有机器码，并不认识汇编代码。<br><br>编译器如果支持编译成不同的体系结构的汇编&#47;机器码，就要维护很多不同的对应关系表，但是这个表并不会太大。以最复杂的Intel X86的指令集为例，也只有2000条不同的指令而已。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557122265,"ip_address":"","comment_id":91255,"utype":1}],"discussion_count":5,"race_medal":1,"score":"126111006472","product_id":100026001,"comment_content":"我们说过，不同的 CPU 有不同的指令集，也就对应着不同的汇编语言和机器码  这句话中，在不同的指令集中 汇编语言和机器码 的关系是怎么对应的呢？ 还有一个问题就是在高级语言转换为机器码的时候 是不是要读取CPU的具体的型号呢？ 然后在转换为 对应CPU型号的机器码。 如果是，那么物理机器是不是要维护一个很大的对应关系表？？？<br><br>","like_count":30,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448862,"discussion_content":"一步同学你好，\n\n不同指令集里，对应的汇编代码会对应这个指令集的机器码呀。\n\n大家不要把“汇编语言”当成是像C一样的一门统一编程语言。\n\n“汇编语言”其实可以理解成“机器码”的一种别名或者书写方式，不同的指令集和体系结构的机器会有不同的“机器码”\n\n高级语言在转换成为机器码的时候，是通过编译器进行的，需要编译器指定编译成哪种汇编/机器码。\n\n物理机自己执行的时候只有机器码，并不认识汇编代码。\n\n编译器如果支持编译成不同的体系结构的汇编/机器码，就要维护很多不同的对应关系表，但是这个表并不会太大。以最复杂的Intel X86的指令集为例，也只有2000条不同的指令而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557122265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1660988,"avatar":"https://static001.geekbang.org/account/avatar/00/19/58/3c/b9cb7263.jpg","nickname":"滨","note":"","ucode":"25E2590ED49245","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365244,"discussion_content":"当然不同的平台有不同的虚拟机，这些虚拟机认识和接受同样的字节码，然后转换成对应平台的cpu指令，也就是加了个中间层，使得字节码与cpu对于对方都是透明的，java程序员的一次编译到处运行依赖于C/C++以及更底层语言的程序员为他们预先写好了对应平台的虚拟机，如果新出了个OS，没有人先写出虚拟机，你的java字节码也是无法运行的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1617756560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1220771,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/a3/7a85e2d8.jpg","nickname":"duu","note":"","ucode":"67570AFEB84D89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214418,"discussion_content":"老师 那比如我的代码是在mac上面开发和编译的，比如java的jar包，那么放到linux服务器，是不是说服务器上面那个对应的jvm在运行的时候把mac上面的jar java代码在编译成对应机器cpu适合的指令？这样也就不存在问题了？\n那java本身就是通过不同平台（mac/linux或者说还是不同的CPU架构有不同的虚拟机呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585190928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1108225,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e9/01/6e6d80d1.jpg","nickname":"Loy","note":"","ucode":"CD437EDA754EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1220771,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/a3/7a85e2d8.jpg","nickname":"duu","note":"","ucode":"67570AFEB84D89","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341180,"discussion_content":"Run any where就是中间有一个抽象,这个抽象对应不同的CPU架构都有一个实现,就是由Sun or 甲骨文写好的JVM.这样应用程序的java代码不需要做任何改变就可以在不同的架构的机器运行了.任何问题都可以通过加一个中间层来搞定,哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610342362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":214418,"ip_address":""},"score":341180,"extra":""},{"author":{"id":2337326,"avatar":"https://static001.geekbang.org/account/avatar/00/23/aa/2e/b4162c55.jpg","nickname":"Jimmy","note":"","ucode":"16ECFBA5826284","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1108225,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e9/01/6e6d80d1.jpg","nickname":"Loy","note":"","ucode":"CD437EDA754EE0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547593,"discussion_content":"一层不够，还可以再套一层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642758245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341180,"ip_address":""},"score":547593,"extra":""}]}]},{"had_liked":false,"id":93800,"user_name":"码农桃花源","can_delete":false,"product_type":"c1","uid":1070008,"ip_address":"","ucode":"55455290871D54","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/b8/63ffa8f4.jpg","comment_is_top":false,"comment_ctime":1557620518,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"117521737510","product_id":100026001,"comment_content":"老师请教个问题，<br><br>像python这种解释型的语言，需要一行行地编译，那它就不能综合所有的源文件来考虑了，像什么重定向这些怎么实现？或者跳转到某个地址，怎么实现，我担心的是一行一行的解释，看不到程序的全貌，怎么知道我要跳到哪个地址？<br><br>谢谢！","like_count":27,"discussions":[{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253412,"discussion_content":"python不是先编译成字节码，用虚拟机解释么","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588232735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028277,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","nickname":"Unknown element","note":"","ucode":"34A129800D0238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540360,"discussion_content":"笑死我了 那是Java好吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640047767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253412,"ip_address":""},"score":540360,"extra":""}]},{"author":{"id":1589246,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3f/fe/35d1afbd.jpg","nickname":"阿鸡","note":"","ucode":"F181422D4EB444","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307844,"discussion_content":"python你定义在脚本后面的函数是找不到的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600772513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93375,"user_name":"Ant","can_delete":false,"product_type":"c1","uid":1079563,"ip_address":"","ucode":"07E6374F91F61E","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/0b/4346a253.jpg","comment_is_top":false,"comment_ctime":1557459247,"is_pvip":false,"replies":[{"id":"33360","content":"顺序是根据用什么样的机器读取来的，我们这里假设就是从左往右一列一列读取的。<br><br>一列卡片代表一个数，白色代表没有打孔，黑色代表打孔。3换算成二进制就是 0011，也就是上面两个不打孔，下面两个打孔，4就换算成 0100，也就是第二个打孔，其他的不打孔","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557469965,"ip_address":"","comment_id":93375,"utype":1}],"discussion_count":2,"race_medal":0,"score":"117521576239","product_id":100026001,"comment_content":"最后的卡片 02324020 ，为啥不是从最底下或最上面开始， 为啥3 打了俩孔， 为啥4 又 往上了一行","like_count":27,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449605,"discussion_content":"顺序是根据用什么样的机器读取来的，我们这里假设就是从左往右一列一列读取的。\n\n一列卡片代表一个数，白色代表没有打孔，黑色代表打孔。3换算成二进制就是 0011，也就是上面两个不打孔，下面两个打孔，4就换算成 0100，也就是第二个打孔，其他的不打孔","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1557469965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65089,"discussion_content":"我也有这个疑惑，原来是把基础忘记了：二进制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574981933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91203,"user_name":"二星球","can_delete":false,"product_type":"c1","uid":1111552,"ip_address":"","ucode":"89EC5FEB98E7CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/00/2a248fd8.jpg","comment_is_top":false,"comment_ctime":1556922834,"is_pvip":false,"replies":[{"id":"32792","content":"杨怀同学你好，其实有一步到位的，就是两个步骤都通过一个命令先后执行，顺序完成，gcc现在就可以一个命令直接变成可执行的binary。<br><br>只是为了方便debug，你可以认为通过机器语言我们也可以反推出汇编语言长什么样子。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557123214,"ip_address":"","comment_id":91203,"utype":1}],"discussion_count":1,"race_medal":0,"score":"113226072530","product_id":100026001,"comment_content":"老师您好，我想问一个问题，C语言&gt;汇编语言&gt;机器语言  一般是这样的编译顺序，为什么不是  C语言&gt;机器语言  一步到位这样编译呢？","like_count":26,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448843,"discussion_content":"杨怀同学你好，其实有一步到位的，就是两个步骤都通过一个命令先后执行，顺序完成，gcc现在就可以一个命令直接变成可执行的binary。\n\n只是为了方便debug，你可以认为通过机器语言我们也可以反推出汇编语言长什么样子。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557123214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91042,"user_name":"梨子🍐","can_delete":false,"product_type":"c1","uid":1134190,"ip_address":"","ucode":"769902AEB83DC4","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/6e/c86b4052.jpg","comment_is_top":false,"comment_ctime":1556819453,"is_pvip":false,"replies":[{"id":"32641","content":"梨子同学你好，你把把上一行的二进制，四位四位一读，每四位当成是一个16进制数，就会得到这个结果","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1556828120,"ip_address":"","comment_id":91042,"utype":1}],"discussion_count":7,"race_medal":0,"score":"78866230781","product_id":100026001,"comment_content":"没有理解 `0X02324020` 是如何计算出来的？","like_count":19,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448775,"discussion_content":"梨子同学你好，你把把上一行的二进制，四位四位一读，每四位当成是一个16进制数，就会得到这个结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556828120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1388479,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2f/bf/85b957fc.jpg","nickname":"咕咕咕","note":"","ucode":"5D35932F7118EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221977,"discussion_content":"这里02324020每个都一个16进制 所以前面0232其实是0000 0010 0011 0010\n然后opcode占6位 为0000 00 \nrs占5位十进制值为17就是1 0001 \nrt值18为1 0010 \n拼起来就是0000 0010 0011 0010 转化为十六进制为0232","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1586090759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","nickname":"三件事","note":"","ucode":"BCC867C8961A24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57404,"discussion_content":"为啥要四位四位一读？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574604283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1201914,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/fa/8ba604a6.jpg","nickname":"木瓜","note":"","ucode":"B24A54DEC7DB15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1055819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","nickname":"三件事","note":"","ucode":"BCC867C8961A24","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303962,"discussion_content":"二进制转成十六进制啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599436729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":57404,"ip_address":""},"score":303962,"extra":""}]},{"author":{"id":2488913,"avatar":"https://static001.geekbang.org/account/avatar/00/25/fa/51/5da91010.jpg","nickname":"Miroticwillbeforever","note":"","ucode":"1DDD8AECD93EA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400133,"discussion_content":"我觉得没理解的是如何从 add 汇编指令直接转到 机器指令。并不是进制转换的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633178626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2641303,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4d/97/1d99a0a3.jpg","nickname":"柒城","note":"","ucode":"CAC7861175232A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2488913,"avatar":"https://static001.geekbang.org/account/avatar/00/25/fa/51/5da91010.jpg","nickname":"Miroticwillbeforever","note":"","ucode":"1DDD8AECD93EA8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535848,"discussion_content":"这个是对应关系，就是它规定的。比如某个寄存器他的值就是那么多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638579378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":400133,"ip_address":""},"score":535848,"extra":""}]},{"author":{"id":1785208,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/3ibaWJTaDUfwRZib0TmxQYKJh7gEQicGzeh63t3llicqfJpYUZgofaib743G0JBdpIsppA3zCHvelVqGEfO0tBYW2pA/132","nickname":"jql","note":"","ucode":"254E05C3608B30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163077,"discussion_content":"还是没有理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581046764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97355,"user_name":"ginger","can_delete":false,"product_type":"c1","uid":1321670,"ip_address":"","ucode":"73892EB5DDCE66","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/c6/8646048e.jpg","comment_is_top":false,"comment_ctime":1558659929,"is_pvip":false,"replies":[{"id":"35493","content":"可以的，这个就是历史上的CISC和RISC的争论。<br><br>其实指令集都在不断更新微调。而体系结构最近RISC-V又火起来了。<br><br>因为纯粹靠提升频率硬件的方法已经没有什么空间了，所以其实又进入了优化指令集乃至整个体系结构的阶段了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559126113,"ip_address":"","comment_id":97355,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65983169369","product_id":100026001,"comment_content":"看到指令,联想到上一讲的cpu性能和指令数的关系,这里想提问下:<br>是否可以通过将指令更加细分(功能上的细分,比如指令ab完成a+b,指令abc完成a+b+c)<br>来实现一个高级语言本身需要对应到10条指令时候,变成了只需要对应7条指令的效果,<br><br>我想这个一定是可行的,但应该没什么意义,因为cpu的指令集,发展了这么多年了,应该也是没有优化的空间了吧.","like_count":15,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451247,"discussion_content":"可以的，这个就是历史上的CISC和RISC的争论。\n\n其实指令集都在不断更新微调。而体系结构最近RISC-V又火起来了。\n\n因为纯粹靠提升频率硬件的方法已经没有什么空间了，所以其实又进入了优化指令集乃至整个体系结构的阶段了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1559126113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96208,"user_name":"寇云","can_delete":false,"product_type":"c1","uid":1001332,"ip_address":"","ucode":"87181F16F83543","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/74/5e292ded.jpg","comment_is_top":false,"comment_ctime":1558357617,"is_pvip":false,"replies":[{"id":"35490","content":"👍，我也去了，那个地方超棒，我决定明年再去呆一天。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559125463,"ip_address":"","comment_id":96208,"utype":1}],"discussion_count":2,"race_medal":0,"score":"53097965169","product_id":100026001,"comment_content":"有幸去了山景城的计算机历史博物馆，对老师讲的课程非常有感觉 ","like_count":12,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450770,"discussion_content":"👍，我也去了，那个地方超棒，我决定明年再去呆一天。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559125463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2927517,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLV0GybMULcV7WG3KrAicWJbbqia3C2l77kyycSWbofEXCx7aAQzWzvZeE5qhCwbMDdIHQRiahw583ag/132","nickname":"Geek_30e107","note":"","ucode":"F7449B8A7A7729","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554300,"discussion_content":"cy,以后有机会也要去看一看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646306316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93817,"user_name":"冰激凌的眼泪","can_delete":false,"product_type":"c1","uid":1087945,"ip_address":"","ucode":"5DCB974667E93A","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/c9/a7c77746.jpg","comment_is_top":false,"comment_ctime":1557629004,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"53097236556","product_id":100026001,"comment_content":"打孔卡要纵向读，建议Opcode补足6个0，这样好和打孔卡对照<br>汇编是不是可以看做机器码的助记符？","like_count":12,"discussions":[{"author":{"id":1455385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/35/19/4f9dc4b5.jpg","nickname":"吹啊吹吹","note":"","ucode":"FFB7D85C26145B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188957,"discussion_content":"这个要看CPU架构吧，一般都是低地址开读，不够就补0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582827054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1561842,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d4/f2/98201045.jpg","nickname":"Jason","note":"","ucode":"63A89D36BE72E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2063,"discussion_content":"看不懂的图片，在这里找到方法看了，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563238766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93798,"user_name":"Nevermore","can_delete":false,"product_type":"c1","uid":1528246,"ip_address":"","ucode":"512429830DB0C0","user_header":"","comment_is_top":false,"comment_ctime":1557619042,"is_pvip":false,"replies":[{"id":"33639","content":"如果在这个映射关系里面，可以认为shell脚本是被bash解释器来运行的，调用对应的编译好的二进制可执行文件相当于bash解释器在做对应的“翻译”动作","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557747520,"ip_address":"","comment_id":93798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53097226594","product_id":100026001,"comment_content":"老师shell脚本是一步编译成机器码的吗？还是转换成汇编再编译成机器码","like_count":12,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449776,"discussion_content":"如果在这个映射关系里面，可以认为shell脚本是被bash解释器来运行的，调用对应的编译好的二进制可执行文件相当于bash解释器在做对应的“翻译”动作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557747520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96096,"user_name":"Sharongo","can_delete":false,"product_type":"c1","uid":1511038,"ip_address":"","ucode":"8CD87FAA8E9798","user_header":"https://static001.geekbang.org/account/avatar/00/17/0e/7e/8dd2a00c.jpg","comment_is_top":false,"comment_ctime":1558328317,"is_pvip":false,"replies":[{"id":"35507","content":"Sharongo同学你好，<br><br>因为放不下啊，也放不起啊，而且这样怎么做到前面讲的“可编程”和“可存储”呢？","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559128475,"ip_address":"","comment_id":96096,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35918066685","product_id":100026001,"comment_content":"计算机小白想问一个很蠢的问题：为什么CPU不能放着所有指令，为什么要区分cpu和内存以及其它硬件不可以把功能都放在一个器件上吗？","like_count":8,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450718,"discussion_content":"Sharongo同学你好，\n\n因为放不下啊，也放不起啊，而且这样怎么做到前面讲的“可编程”和“可存储”呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559128475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120856,"discussion_content":"”为什么要区分cpu和内存以及其它硬件不可以把功能都放在一个器件上吗？“\n还有一个原因就是这样扩展性好。。。哪个部位坏了更换对应部位，不用全部更换","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578300832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2653751,"avatar":"https://static001.geekbang.org/account/avatar/00/28/7e/37/e38497f7.jpg","nickname":"我亦无他，惟手熟尔","note":"","ucode":"A4921752C5FEB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381577,"discussion_content":"Soc就是把所有的东西都放在了一块芯片上","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625131271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91313,"user_name":"Kelly.W","can_delete":false,"product_type":"c1","uid":1518308,"ip_address":"","ucode":"6EFB58A24355C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/2a/e4/714ffd01.jpg","comment_is_top":false,"comment_ctime":1556976944,"is_pvip":false,"replies":[{"id":"32784","content":"机器码的差异不在于操作系统（也就是不在于Linux&#47;Windows）。而是在于体系结构（Intel X86&#47;ARM&#47;MIPS）。<br>不同平台的汇编语言也是不同的，所以同样的高级语言编译器在不同的平台上编译出来的代码也是不一样的。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557121841,"ip_address":"","comment_id":91313,"utype":1}],"discussion_count":5,"race_medal":1,"score":"35916715312","product_id":100026001,"comment_content":"老师您好，课程里说汇编代码和机器码是一一对应的，我现在知道在不同平台的机器码是不一样的（linux&#47;windows），那么不同平台也有不同的高级语言-&gt;汇编代码的对应规则吗？","like_count":8,"discussions":[{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6862,"discussion_content":"机器码是CPU 指令的二进制形式，它的特别之处是它是 CPU 唯一可以直接执行的指令形式，也是指令的原始形式。不同的 cpu 有不同的指令，也就有不同的机器码。这只与 cpu 有\n关，而与运行在 cpu 上的操作系统平台无关。\n    你所说的情况是，同一个源程序，它最终要转变成机器码去执行。但这个程序的机器码版本会有多种，多种因素都会令生成的机器码程序不同。首先，不同的 cpu 有不同的指令集，它们的机器码是不同的。所以，同一个源程序，在不同 cpu 上运行的机器码程序版本是不同的。其次，即使 cpu 相同，但操作系统不同，那么源程序转换为机器码时，受操作系统影响的部分（比如二进制程序文件要遵循的格式，与操作系统调用有关的部分等），生成的机器码程序或者程序文件也会不同。这就会造成，同一个源程序，在同一个 cpu，如果操作系统平台不同，生成的程序机器码版本也会不同。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1567147101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1518308,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2a/e4/714ffd01.jpg","nickname":"Kelly.W","note":"","ucode":"6EFB58A24355C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315815,"discussion_content":"谢谢解答，明白了😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603329167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6862,"ip_address":""},"score":315815,"extra":""}]},{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448882,"discussion_content":"机器码的差异不在于操作系统（也就是不在于Linux/Windows）。而是在于体系结构（Intel X86/ARM/MIPS）。\n不同平台的汇编语言也是不同的，所以同样的高级语言编译器在不同的平台上编译出来的代码也是不一样的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1557121841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120861,"discussion_content":"机器码就是CPU指令，CPU指令就是CPU的”语言“，所以机器码的区别不在于操作系统，在于CPU。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578301182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1518308,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2a/e4/714ffd01.jpg","nickname":"Kelly.W","note":"","ucode":"6EFB58A24355C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315816,"discussion_content":"原来是这样，谢谢同学的热心解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603329229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":120861,"ip_address":""},"score":315816,"extra":""}]}]},{"had_liked":false,"id":104041,"user_name":"连边","can_delete":false,"product_type":"c1","uid":1391748,"ip_address":"","ucode":"54B5DA38449728","user_header":"https://static001.geekbang.org/account/avatar/00/15/3c/84/608f679b.jpg","comment_is_top":false,"comment_ctime":1560598428,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"31625369500","product_id":100026001,"comment_content":"老师你好，通篇看下来，有一个地方没有怎么懂得。<br>“对应的 MIPS 指令里 opcode 是 0，rs 代表第一个寄存器s1的地址是17，rt代表第二个寄存器s2的地址是18，rd代表目标的临时寄存器t0的地址，是8.”","like_count":7,"discussions":[{"author":{"id":1273813,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6f/d5/3e284a71.jpg","nickname":"tlseek","note":"","ucode":"39956BA395AADF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42533,"discussion_content":"因为cpu里有很多寄存器，每个寄存器都有地址，通过地址cpu才知道用哪个寄存器","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1572691054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1195545,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3e/19/873abe8a.jpg","nickname":"董尚斌","note":"","ucode":"9582217F65C1C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39023,"discussion_content":"举个例子而已","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571878975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2641303,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4d/97/1d99a0a3.jpg","nickname":"柒城","note":"","ucode":"CAC7861175232A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535849,"discussion_content":"指令集规定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638579506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1528521,"avatar":"https://static001.geekbang.org/account/avatar/00/17/52/c9/7dec4508.jpg","nickname":"知多知少难知足","note":"","ucode":"C5029C18B798BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3268,"discussion_content":"也没有理解，有同学指点一下吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564366141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98120,"user_name":"imicode","can_delete":false,"product_type":"c1","uid":1049857,"ip_address":"","ucode":"4BB6214F89ADA3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erWv8WHAwWNgQgvdfRaibickVtpxZtg5N90bicQ2ohWuBQqWpJez1sylZgOqMxJzP2SRDoWKZtK49NhQ/132","comment_is_top":false,"comment_ctime":1558917876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31623688948","product_id":100026001,"comment_content":"学习打卡：<br>1. CPU就是一个执行各种计算机指令的逻辑机器。这里的计算机指令就是CPU能懂的机器语言。不同体系结构的CPU支持不同的计算机指令集。<br>2. 汇编语言是一种易读和易写的机器代码，可以理解成“机器码”的一种别名或者书写方式。<br>3. 常见的五大类指令：算术类指令、数据传输类指令、逻辑类指令、条件分支类指令、无条件跳转类指令。","like_count":7},{"had_liked":false,"id":95780,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1558174737,"is_pvip":false,"replies":[{"id":"35545","content":"是啊，我们在讲解CPU的时候，你可以从电路的角度来理解指令是怎么在硬件层面执行的。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559132887,"ip_address":"","comment_id":95780,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27327978513","product_id":100026001,"comment_content":"徐老师，每一条计算机指令由 CPU 执行的时候，实际上是不是都是电路的连通或关闭？","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450595,"discussion_content":"是啊，我们在讲解CPU的时候，你可以从电路的角度来理解指令是怎么在硬件层面执行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559132887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1660988,"avatar":"https://static001.geekbang.org/account/avatar/00/19/58/3c/b9cb7263.jpg","nickname":"滨","note":"","ucode":"25E2590ED49245","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365246,"discussion_content":"理论上你都可以认为cpu是一大堆继电器开关，本质上CPU就是一堆能实现逻辑电路的器件构成的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617756871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91250,"user_name":"Geek_guo","can_delete":false,"product_type":"c1","uid":1517196,"ip_address":"","ucode":"E70AB1A1E65F67","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/239h30GxsIAralcfSmrp8QvFzyNA7icEDIbhBQ6K0tr6GwtG3ia0aUCcNo2SfoTlNWtGFVgcFwFjicaGdK6Uau3cQ/132","comment_is_top":false,"comment_ctime":1556952224,"is_pvip":false,"replies":[{"id":"32788","content":"Geek_guo同学你好，加法在电路层面怎么执行，我们会在加法器里面讲解。<br><br>我们的指令运行，怎么和ALU这样的算术逻辑单元串联起来，我们会在CPU里面讲解，尽请期待啊。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557122347,"ip_address":"","comment_id":91250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27326756000","product_id":100026001,"comment_content":"希望老师可以把指令执行后的整个过程在分析下，不然现在还是不理解这个指令对于一条加法有什么作用","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448861,"discussion_content":"Geek_guo同学你好，加法在电路层面怎么执行，我们会在加法器里面讲解。\n\n我们的指令运行，怎么和ALU这样的算术逻辑单元串联起来，我们会在CPU里面讲解，尽请期待啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557122347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91214,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1556932862,"is_pvip":false,"replies":[{"id":"32791","content":"发条橙子同学你好，也希望你过了一个愉快的五一啊。<br><br>CPU的“指令集”是一个抽象的概念，你可以认为实际是被变成了CPU的电路。<br><br>我们具体的一个个程序的指令，是存在内存里的，或者说，是程序用一个文件格式存在磁盘上，然后通过装载器加载到内存里面，再一条条加载到指令寄存器里面，然后执行的。<br><br>关于汇编语言，你可以这样认为，不过厂商一般会直接提供对应的汇编语言和汇编器，但是也的确有支持多种指令集的第三方汇编语言和汇编器。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557123083,"ip_address":"","comment_id":91214,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27326736638","product_id":100026001,"comment_content":"刷了两遍大致清晰了 ，又学到不少知识 ， 看完感觉从高级语言-到汇编-机器码的转换实际上不是很复杂 ，重要的是刻纸袋是个体力活 。<br><br>老师， 这边还有两个细节点想请教一下： <br>1. 前面的文章讲冯诺依曼体系结构的时候说到 。 运算器、控制器、存储器、输入输出设备 ， 这里将Cpu指令集存储在存储器 ， 这里的存储器指的是硬盘么 ？<br>2. 汇编语言和Cpu指令集先后的问题 ， 老师上面 add 的例子是从 汇编 推导出 MIPS 对应的二进制 Cpu指令 。 按照历史发展 ，是MIPS公司先推出了一款自己的CPU指令集， 然后对应的汇编语言厂商在按照这个指令集开发相应的汇编语言么 ？<br><br>希望老师能指点一二 ，另外老师五一节快乐 （虽然快过完了）<br>","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448847,"discussion_content":"发条橙子同学你好，也希望你过了一个愉快的五一啊。\n\nCPU的“指令集”是一个抽象的概念，你可以认为实际是被变成了CPU的电路。\n\n我们具体的一个个程序的指令，是存在内存里的，或者说，是程序用一个文件格式存在磁盘上，然后通过装载器加载到内存里面，再一条条加载到指令寄存器里面，然后执行的。\n\n关于汇编语言，你可以这样认为，不过厂商一般会直接提供对应的汇编语言和汇编器，但是也的确有支持多种指令集的第三方汇编语言和汇编器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557123083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217434,"user_name":"黄马","can_delete":false,"product_type":"c1","uid":1019506,"ip_address":"","ucode":"93E391B4678EC2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/72/63c94eee.jpg","comment_is_top":false,"comment_ctime":1589505319,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"23064341799","product_id":100026001,"comment_content":"讲汇编指令翻译成机器码实例：add t0,s1, $s2<br>有些同学没有看懂？可能是数字表示的问题，首先老师讲述整个汇编指令的转化的过程，展示了转化的结果的二进制表示和16进制的表示，在二进制中，整个位数只有27位，需要在左边添加0不起32位，这样讲整个32位，每四位分成一组，利用8421码将二进制转化成16进制；这是时候我们对照老师的打孔卡片和下面的数字的顺序，从右往左看，第一列，都是白色，也就是都是0，第一组确实都是零；第二列从下往上，第二个是1，其他的都是0，正好对应接下来的一组，0010；一次类推<br><br>0000 0010 0011 0010 0100 0000 0010 0000<br>0        2      3      2      4       0     2       0<br>-----<br>","like_count":5},{"had_liked":false,"id":164178,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1576901738,"is_pvip":false,"replies":[{"id":"68656","content":"gogo同学，<br><br>你好，你的理解是正确的。谢谢，一起加油。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581234797,"ip_address":"","comment_id":164178,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23051738218","product_id":100026001,"comment_content":"1. CPU上的电路组合实现了指令，所有的实现就是指令集<br>2. 同一段源码不同CPU上的实现方式不同，也就对应的机器码或者汇编码不同<br>3. 被编译之后的机器码也就是指令，会保存在磁盘，运行的时候加载在内存和寄存器中去<br><br>老师，我的理解对吗？<br><br>您讲的真的非常好，一开始介绍了入门书籍，每讲之后还给出了对应教材的章节，真的非常贴心～！<br>我非常愿意推荐给想学习计算机组成的朋友或者小孩～！","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478671,"discussion_content":"gogo同学，\n\n你好，你的理解是正确的。谢谢，一起加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581234797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92508,"user_name":"给你力量","can_delete":false,"product_type":"c1","uid":1522383,"ip_address":"","ucode":"B4756302DD08B7","user_header":"https://static001.geekbang.org/account/avatar/00/17/3a/cf/9bd15235.jpg","comment_is_top":false,"comment_ctime":1557287409,"is_pvip":false,"replies":[{"id":"33369","content":"给你力量同学你好，<br><br>1. 你的理解是对的。不过其实历史上汇编不只是为了让程序员可以更容易读代码，也是为了让程序员更容易写代码。毕竟无论是打孔带，旋钮还是其他的更“古老”的方式来编程都太没有效率了。<br><br>2. 是的，应该说是三大类opcode，每一类里面有很多不同的具体的opcode。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557471362,"ip_address":"","comment_id":92508,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23032123889","product_id":100026001,"comment_content":"1. 老师我对汇编语言的意义还是不太理解，是不是可以将汇编语言的意义理解为对机器码的封装，提高对于程序员的可阅读性呢？<br>    就是所有的代码，都可以归纳为一组特定组合的机器码操作，可以直接将高级语言代码编译为机器码执行，但是这样子的话，程序员就无法看出这行代码到底进行了什么操作。<br>    如果把特定作用的机器码封装为汇编代码，高级语言先编译成可读性高的汇编代码，这样就能理解代码实际执行了什么机器码操作。<br>     所以汇编语言是基于机器语言的基础上生成的。<br><br>     不知道我这个理解对不对，希望老师能指点一下。<br><br>2. 如何区分R、I、J指令，是通过opcode吗？如果是的话，是不是就三种opcode？<br><br>谢谢老师的分享！","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449291,"discussion_content":"给你力量同学你好，\n\n1. 你的理解是对的。不过其实历史上汇编不只是为了让程序员可以更容易读代码，也是为了让程序员更容易写代码。毕竟无论是打孔带，旋钮还是其他的更“古老”的方式来编程都太没有效率了。\n\n2. 是的，应该说是三大类opcode，每一类里面有很多不同的具体的opcode。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557471362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334600,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5d/48/03abbbd1.jpg","nickname":"瑞","note":"","ucode":"1C5945FD2D05C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289976,"discussion_content":"老师好，我想问下汇编指令与机器指令对应的关系从哪里可以查？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594287945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1334600,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5d/48/03abbbd1.jpg","nickname":"瑞","note":"","ucode":"1C5945FD2D05C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346238,"discussion_content":"这个一般是从硬件厂商那里获取吧 比如intel","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611891468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289976,"ip_address":""},"score":346238,"extra":""}]}]},{"had_liked":false,"id":91125,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c1","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1556873300,"is_pvip":false,"replies":[{"id":"32802","content":"虚拟机在不同的指令集的机器上其实本质是一个不同的“应用程序”。<br><br>以Java为例，javac编译出来的是给虚拟机的中间代码，不同机器，比如Solaries上的虚拟机就和X86 Linux上的虚拟机就会把同样的中间代码，解释成当前机器上的指令啊。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557124436,"ip_address":"","comment_id":91125,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23031709780","product_id":100026001,"comment_content":"vm那种虚拟机又是回事呢？ 难道存储了很多指令集？还是在解释器上做了什么？","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448816,"discussion_content":"虚拟机在不同的指令集的机器上其实本质是一个不同的“应用程序”。\n\n以Java为例，javac编译出来的是给虚拟机的中间代码，不同机器，比如Solaries上的虚拟机就和X86 Linux上的虚拟机就会把同样的中间代码，解释成当前机器上的指令啊。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1557124436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91099,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1556856353,"is_pvip":false,"replies":[{"id":"32798","content":"Linuxer，谢谢反馈，我稍后看看是否在图里面再多加一点说明帮助大家理解。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557123856,"ip_address":"","comment_id":91099,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23031692833","product_id":100026001,"comment_content":"最后那个打孔卡最好说明一下!看半天才明白原来黑代表孔，还得从下往上才能理解","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448804,"discussion_content":"Linuxer，谢谢反馈，我稍后看看是否在图里面再多加一点说明帮助大家理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557123856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1479082,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/aa/374cc963.jpg","nickname":"流水人家","note":"","ucode":"9BB4367CAAF781","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301136,"discussion_content":"标识从左到右按列读就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598416582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164180,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1576902168,"is_pvip":false,"replies":[{"id":"68655","content":"gogo同学，<br><br>看到你已经自己解决了👍<br>把-M intel去掉就好了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581234614,"ip_address":"","comment_id":164180,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18756771352","product_id":100026001,"comment_content":"<br>$ gcc -g -c test.c<br>$ objdump -d -M intel -S test.o<br><br>老师 第二行代码 如何在mac上写啊？","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478672,"discussion_content":"gogo同学，\n\n看到你已经自己解决了👍\n把-M intel去掉就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581234614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91104,"user_name":"Scott","can_delete":false,"product_type":"c1","uid":1014800,"ip_address":"","ucode":"7E57FDCB5E5D49","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","comment_is_top":false,"comment_ctime":1556859582,"is_pvip":false,"replies":[{"id":"32826","content":"👍看来是高手啊","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557126678,"ip_address":"","comment_id":91104,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18736728766","product_id":100026001,"comment_content":"MIPS好像是有delay slot的，这可是个著名的脑残设计。","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448805,"discussion_content":"👍看来是高手啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557126678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","nickname":"三件事","note":"","ucode":"BCC867C8961A24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":173061,"discussion_content":"delay slot 是不是后面讲的流水线冒泡？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581825922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1244561,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fd/91/65ff3154.jpg","nickname":"_stuView","note":"","ucode":"C2D4AAB08515F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42336,"discussion_content":"什么是delay slot？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572651917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131374,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1567733132,"is_pvip":false,"replies":[{"id":"51051","content":"最终都是要CPU来执行的。只是Python的代码，先要通过Python解释器来实时翻译，Java是先编译成中间代码，然后再由Java虚拟机实时翻译中间代码。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568449623,"ip_address":"","comment_id":131374,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14452635020","product_id":100026001,"comment_content":"只是解释型语言，是通过解释器在程序运行的时候逐句翻译，而 Java 这样使用虚拟机的语言，则是由虚拟机对编译出来的中间代码进行解释，或者即时编译成为机器码来最终执行。<br><br><br>看样子是 python 不是 cpu 执行吧……<br><br>Java 是虚拟机执行，也不是 cpu 吧……<br><br>我理解错了吧","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466420,"discussion_content":"最终都是要CPU来执行的。只是Python的代码，先要通过Python解释器来实时翻译，Java是先编译成中间代码，然后再由Java虚拟机实时翻译中间代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568449623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97383,"user_name":"开水","can_delete":false,"product_type":"c1","uid":1528555,"ip_address":"","ucode":"651491C38B925B","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/eb/eec719f3.jpg","comment_is_top":false,"comment_ctime":1558662783,"is_pvip":false,"replies":[{"id":"35492","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559126021,"ip_address":"","comment_id":97383,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14443564671","product_id":100026001,"comment_content":"先是将二进制机器指令用16进制数显示出来，但后面打孔卡展示的时候又变回了四位一组的二进制了","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451260,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559126021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97086,"user_name":"Clover","can_delete":false,"product_type":"c1","uid":1089950,"ip_address":"","ucode":"DFDE91A5D735DE","user_header":"https://static001.geekbang.org/account/avatar/00/10/a1/9e/f50a2cef.jpg","comment_is_top":false,"comment_ctime":1558583708,"is_pvip":false,"replies":[{"id":"35483","content":"Clover Wang，<br><br>这个问题还比较基础<br>java 就是 编译成字节码 + 虚拟机<br>python 就是 解释器<br>C 就是编译成 机器码<br><br>如果想要深入了解，可以去看看 编译原理 方面的教材。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559124285,"ip_address":"","comment_id":97086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14443485596","product_id":100026001,"comment_content":"想问下文中所提到的java,python,C三种语言类型的区别有没有推荐阅读材料","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451134,"discussion_content":"Clover Wang，\n\n这个问题还比较基础\njava 就是 编译成字节码 + 虚拟机\npython 就是 解释器\nC 就是编译成 机器码\n\n如果想要深入了解，可以去看看 编译原理 方面的教材。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559124285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91108,"user_name":"梨子🍐","can_delete":false,"product_type":"c1","uid":1134190,"ip_address":"","ucode":"769902AEB83DC4","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/6e/c86b4052.jpg","comment_is_top":false,"comment_ctime":1556864747,"is_pvip":false,"replies":[{"id":"32797","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557123760,"ip_address":"","comment_id":91108,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14441766635","product_id":100026001,"comment_content":"感谢老师，理解了，之前想复杂了，以为需要把上面的2进制加和，把16进制转换为2进制就明白了。<br>```<br>let a = 0X02324020;<br>a.toString(2); &#47;&#47; &quot;10001100100100000000100000&quot;<br>```","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448807,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557123760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91080,"user_name":"ezra.xu","can_delete":false,"product_type":"c1","uid":1014005,"ip_address":"","ucode":"6C3E11889BC6AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/f5/ae200a94.jpg","comment_is_top":false,"comment_ctime":1556849903,"is_pvip":false,"replies":[{"id":"32806","content":"Sentry同学你好，指令集可以认为只和CPU有关，更准确的说法是，和“体系结构”有关。<br><br>我们可以在开源的MIPS指令集上设计自己的CPU，不过现在更流量的是RISC-V指令集。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557124764,"ip_address":"","comment_id":91080,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14441751791","product_id":100026001,"comment_content":"感谢老师对这些底层知识的讲解，请问老师计算机的指令集只和cpu有关，还是和整个五大部件相关，理论上是不是有了指令集，就可以设计出相应的cpu，另外，在开源的MIPS指令集基础上设计cpu，这个可以作为自主研发cpu的一种有效，便捷的方式吗？","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448791,"discussion_content":"Sentry同学你好，指令集可以认为只和CPU有关，更准确的说法是，和“体系结构”有关。\n\n我们可以在开源的MIPS指令集上设计自己的CPU，不过现在更流量的是RISC-V指令集。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557124764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221918,"user_name":"kyra","can_delete":false,"product_type":"c1","uid":1241673,"ip_address":"","ucode":"26918E763F1D9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/49/43f222e4.jpg","comment_is_top":false,"comment_ctime":1590633778,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10180568370","product_id":100026001,"comment_content":"课后题的答案 <br>print(&quot;d%&quot;, a);<br>  1c:   8b 45 fc                mov    eax,DWORD PTR [rbp-0x4]<br>  1f:   89 c6                   mov    esi,eax<br>  21:   bf 00 00 00 00          mov    edi,0x0<br>  26:   b8 00 00 00 00          mov    eax,0x0<br>  2b:   e8 00 00 00 00          call   30 &lt;main+0x30&gt;","like_count":2,"discussions":[{"author":{"id":1363634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","nickname":"海盗船长","note":"","ucode":"ECB28BA21A4113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338171,"discussion_content":"总算有人注意到课后问题了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609207470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178637,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1581766918,"is_pvip":false,"replies":[{"id":"69405","content":"Monday同学，<br><br>你好，这里的格式，指的是上面图标中的“指令类型”，方便大家对照用那种指令类型的格式来解析数据。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581837681,"ip_address":"","comment_id":178637,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10171701510","product_id":100026001,"comment_content":"看第二遍，看懂0X02324020是怎么来的？但是MIPS指令的解析图表比说明图表中多了一列“格式”，怎么突然就多了一列？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483907,"discussion_content":"Monday同学，\n\n你好，这里的格式，指的是上面图标中的“指令类型”，方便大家对照用那种指令类型的格式来解析数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581837681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91751,"user_name":"@我","can_delete":false,"product_type":"c1","uid":1239383,"ip_address":"","ucode":"91B91000195513","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/57/68e414ba.jpg","comment_is_top":false,"comment_ctime":1557104167,"is_pvip":false,"replies":[{"id":"32774","content":"不是，这个是MIPS的对应加法的固定的功能码，对应的功能码表，可以搜索一下就能看到，比如下面这个连接<br>https:&#47;&#47;www.d.umn.edu&#47;~gshute&#47;mips&#47;rtype.xhtml","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557120781,"ip_address":"","comment_id":91751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147038759","product_id":100026001,"comment_content":"老师，最后那个功能码为什么事32？因为是32位的指令集？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449015,"discussion_content":"不是，这个是MIPS的对应加法的固定的功能码，对应的功能码表，可以搜索一下就能看到，比如下面这个连接\nhttps://www.d.umn.edu/~gshute/mips/rtype.xhtml","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557120781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91199,"user_name":"Colin","can_delete":false,"product_type":"c1","uid":1185711,"ip_address":"","ucode":"9F32BB5412DB35","user_header":"https://static001.geekbang.org/account/avatar/00/12/17/af/6ee721d6.jpg","comment_is_top":false,"comment_ctime":1556905248,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10146839840","product_id":100026001,"comment_content":"感觉这总写法是写给会的人的。但是会的人，需要买这个么？","like_count":2,"discussions":[{"author":{"id":2641303,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4d/97/1d99a0a3.jpg","nickname":"柒城","note":"","ucode":"CAC7861175232A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535853,"discussion_content":"。。。你一点基础没有肯定不行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638579925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353381,"user_name":"X","can_delete":false,"product_type":"c1","uid":1581509,"ip_address":"上海","ucode":"BE05C1D25CE313","user_header":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","comment_is_top":false,"comment_ctime":1659409589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5954376885","product_id":100026001,"comment_content":"感谢老师，收货很大。<br>（1）高级程序语言 通过 编译器 翻译成 汇编语言，汇编语言 通过 汇编器 翻译成 机器码，机器码才是cpu认识的东西，也就是一连串的0和1。<br>（2）前辈们用的打孔纸编程，看起来很晦涩难懂，其实就是做了一个人工翻译的过程。将你要写的程序之后翻译成机器码（0、1）到打孔纸上，未打孔的地方表示0，打孔的地方表示1，可以理解成：人工主观语言 翻译成 机器码的过程。<br>（3）不同电脑可识别的指令集不一样，所以对于计算机而言，cpu的不同大概率也意味着指令集不同。intel cpu，翻译不了 amd 的指令集。<br>受教，感谢老师。","like_count":1},{"had_liked":false,"id":260676,"user_name":"baby","can_delete":false,"product_type":"c1","uid":2302450,"ip_address":"","ucode":"C571CF1E1EAE45","user_header":"","comment_is_top":false,"comment_ctime":1605081574,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5900048870","product_id":100026001,"comment_content":"我以一个简单的加法算术指令 add t0, s1, $s2, 为例，给你解释。为了方便，我们下面都用十进制来表示对应的代码。<br>对应的 MIPS 指令里 opcode 是 0，rs 代表第一个寄存器 s1 的地址是 17，rt 代表第二个寄存器 s2 的地址是 18，rd 代表目标的临时寄存器 t0 的地址，是 8。因为不是位移操作，所以位移量是 0。把这些数字拼在一起，就变成了一个 MIPS 的加法指令。<br>徐老师，您好，由于我是零基础小白，看了文档后，没看懂以上的十进制代码是怎么来的，还望能够解答一下，谢谢🙏。","like_count":1},{"had_liked":false,"id":200848,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1585660755,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880628051","product_id":100026001,"comment_content":"从指令开始重学，弄了台阿里云服务器，跟着教材敲C语言的操作，并编译嘎嘎。<br><br>test.o:     file format elf64-x86-64<br><br><br>Disassembly of section .text:<br><br>0000000000000000 &lt;main&gt;:<br>int main()<br>{<br>   0:   55                      push   rbp<br>   1:   48 89 e5                mov    rbp,rsp<br>  int a = 1;<br>   4:   c7 45 fc 01 00 00 00    mov    DWORD PTR [rbp-0x4],0x1<br>  int b = 2;<br>   b:   c7 45 f8 02 00 00 00    mov    DWORD PTR [rbp-0x8],0x2<br>  a = a + b;<br>  12:   8b 45 f8                mov    eax,DWORD PTR [rbp-0x8]<br>  15:   01 45 fc                add    DWORD PTR [rbp-0x4],eax<br> <br>}<br>  18:   5d                      pop    rbp<br>  19:   c3                      ret    ","like_count":1},{"had_liked":false,"id":179419,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1582000112,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5876967408","product_id":100026001,"comment_content":"MIPS 的指令是一个 32 位的整数，高 6 位叫操作码（Opcode），也就是代表这条指令具体是一条什么样的指令，剩下的 26 位有三种格式，分别是 R、I 和 J。<br><br>   请问后26位是怎么区分是什么格式的？","like_count":1,"discussions":[{"author":{"id":1061803,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/ab/d8ba4242.jpg","nickname":"哒哒哒","note":"","ucode":"9378AD329F8AE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387592,"discussion_content":"从操作码就能区分出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628266837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178470,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1581695100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5876662396","product_id":100026001,"comment_content":"第一遍打卡，没看懂机器码的表示法，明天多看几次","like_count":1},{"had_liked":false,"id":102962,"user_name":"丁小斯","can_delete":false,"product_type":"c1","uid":1360412,"ip_address":"","ucode":"DBBCA868257936","user_header":"https://static001.geekbang.org/account/avatar/00/14/c2/1c/408c4ae3.jpg","comment_is_top":false,"comment_ctime":1560336557,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5855303853","product_id":100026001,"comment_content":"觉着非科班出生完全听不懂","like_count":1,"discussions":[{"author":{"id":1589894,"avatar":"https://static001.geekbang.org/account/avatar/00/18/42/86/6b2e81ba.jpg","nickname":"Vicent🍀","note":"","ucode":"70AEA72A0B6F0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292118,"discussion_content":"多去想象就可以的，转换到生活中的问题解决办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595084990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97846,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1558793701,"is_pvip":false,"replies":[{"id":"35502","content":"好的，有什么具体哪些名词你也可以提出来，我可以在稿件里面更新。<br><br>也怕名词太多对大家来说有点啰嗦。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559128031,"ip_address":"","comment_id":97846,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853760997","product_id":100026001,"comment_content":"老师好!有个建议，就是一些指令名词缩写，能写下英文全称做个简单的解释么?好多都得临时百度","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451449,"discussion_content":"好的，有什么具体哪些名词你也可以提出来，我可以在稿件里面更新。\n\n也怕名词太多对大家来说有点啰嗦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559128031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93852,"user_name":"Nevermore","can_delete":false,"product_type":"c1","uid":1528246,"ip_address":"","ucode":"512429830DB0C0","user_header":"","comment_is_top":false,"comment_ctime":1557637693,"is_pvip":false,"replies":[{"id":"33637","content":"不是啊，“汇编”是一类语言的统称，mips和arm有各自自己的汇编","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557747416,"ip_address":"","comment_id":93852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852604989","product_id":100026001,"comment_content":"老师，是不是汇编只能用于x86架构和cisc指令集","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449795,"discussion_content":"不是啊，“汇编”是一类语言的统称，mips和arm有各自自己的汇编","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557747416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93084,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1557394380,"is_pvip":false,"replies":[{"id":"33396","content":"曾经瘦过同学你好，和加密还是不太一样的，因为对应的内容没有“密”这个特性，所有人都能看。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557474966,"ip_address":"","comment_id":93084,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852361676","product_id":100026001,"comment_content":"感觉 可以同 加密 解密 对应起来  不同的cpu 有不同的加密解密方式    公钥 私钥 的对应 如果 公钥和私钥不对应  cpu就无法正常运行  因此 相同的程序 简单地移植之后 不一定可以运行","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449484,"discussion_content":"曾经瘦过同学你好，和加密还是不太一样的，因为对应的内容没有“密”这个特性，所有人都能看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557474966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92826,"user_name":"周曙光爱学习","can_delete":false,"product_type":"c1","uid":1022920,"ip_address":"","ucode":"98EAB6EBAB34B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/c8/665100a3.jpg","comment_is_top":false,"comment_ctime":1557331649,"is_pvip":false,"replies":[{"id":"33359","content":"周曙光爱学习同学你好，可以这样说， 2000多个相当于是不同的opcode + functcode，但是可以跟着的操作数，寄存器，地址等等都是可变的。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557469785,"ip_address":"","comment_id":92826,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852298945","product_id":100026001,"comment_content":"老师关于cpu指令和机器码有点疑惑，文章中说intel的cpu指令有两千多个，这些指令指的是不是就是运算规则，而机器码就是把我们写的程序中的一些变量结合这些规则(也就是cpu指令)最终生成的，不知道我理解的对不对？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449393,"discussion_content":"周曙光爱学习同学你好，可以这样说， 2000多个相当于是不同的opcode + functcode，但是可以跟着的操作数，寄存器，地址等等都是可变的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557469785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91426,"user_name":"Only now","can_delete":false,"product_type":"c1","uid":1038574,"ip_address":"","ucode":"C617473A03AE27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/ee/6e7c2264.jpg","comment_is_top":false,"comment_ctime":1557035668,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852002964","product_id":100026001,"comment_content":"看完这章忽然好怀念,仿佛又回到本科刚上计算机组成原理课的时候了","like_count":1},{"had_liked":false,"id":91256,"user_name":"supermouse","can_delete":false,"product_type":"c1","uid":1321860,"ip_address":"","ucode":"88072D5F881827","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/84/07f0c0d6.jpg","comment_is_top":false,"comment_ctime":1556955550,"is_pvip":false,"replies":[{"id":"32786","content":"有对应的功能码表，MIPS的可以直接搜索一下，比如这个<br>https:&#47;&#47;www.d.umn.edu&#47;~gshute&#47;mips&#47;rtype.xhtml","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557121902,"ip_address":"","comment_id":91256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851922846","product_id":100026001,"comment_content":"老师您好！想问一下在您举的那个 MIPS 指令的例子中，为什么最后 6 位的功能码是 100000？看了好几遍，您在文中好像没有给出解释。我自己脑补了一下，是不是因为功能码的默认值就是 100000？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448863,"discussion_content":"有对应的功能码表，MIPS的可以直接搜索一下，比如这个\nhttps://www.d.umn.edu/~gshute/mips/rtype.xhtml","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557121902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91181,"user_name":"大熊","can_delete":false,"product_type":"c1","uid":1008951,"ip_address":"","ucode":"D7858E9DA87B5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/37/56c492d3.jpg","comment_is_top":false,"comment_ctime":1556890865,"is_pvip":false,"replies":[{"id":"32800","content":"大熊同学你好，显示数值还是显示内存地址，取决于对应的是一个变量，还是一个立即数。如果有什么疑问，可以把你用来测试的代码，命令和汇编代码一起贴出来让大家一起帮你参详。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557124107,"ip_address":"","comment_id":91181,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851858161","product_id":100026001,"comment_content":"使用汇编的命令之后，显示出来的并不是数值本身，而是数值所在的位置。<br>可能是我操作不对吧。","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448837,"discussion_content":"大熊同学你好，显示数值还是显示内存地址，取决于对应的是一个变量，还是一个立即数。如果有什么疑问，可以把你用来测试的代码，命令和汇编代码一起贴出来让大家一起帮你参详。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557124107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91090,"user_name":"monkay","can_delete":false,"product_type":"c1","uid":1066182,"ip_address":"","ucode":"07C0BB8A47799A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pc41FOKAiabVaaKiawibEm7zglvnsYBnYeRiaSAElf9ciczovXmXmI0hOeR6U9RULFtMoqX5kobNttvwXCLsUM9Hbcg/132","comment_is_top":false,"comment_ctime":1556852347,"is_pvip":false,"replies":[{"id":"32807","content":"monkay同学你好，这个的确没法一一对应起来。<br><br>上面那段是Intel X86指令集下的汇编代码和机器码，不过Intel的指令比较多，有2000多条，指令的格式也比较复杂，是变长的，所以不太适合用来做指令的介绍和演示。<br><br>所以下面的例子我用了更加简单容易理解的MIPS指令来举例子。<br><br>","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557124883,"ip_address":"","comment_id":91090,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851819643","product_id":100026001,"comment_content":"MIPS指令举的例子，怎么跟上面那段c代码编译出来的汇编代码对应起来？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448798,"discussion_content":"monkay同学你好，这个的确没法一一对应起来。\n\n上面那段是Intel X86指令集下的汇编代码和机器码，不过Intel的指令比较多，有2000多条，指令的格式也比较复杂，是变长的，所以不太适合用来做指令的介绍和演示。\n\n所以下面的例子我用了更加简单容易理解的MIPS指令来举例子。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557124883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91077,"user_name":"马成","can_delete":false,"product_type":"c1","uid":1486895,"ip_address":"","ucode":"664F2BAA2E0F0B","user_header":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","comment_is_top":false,"comment_ctime":1556848382,"is_pvip":true,"replies":[{"id":"32799","content":"👍能对大家有所帮助是最好不过啦","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557124029,"ip_address":"","comment_id":91077,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851815678","product_id":100026001,"comment_content":"写的太棒了，感觉一下子通了！尤其是汇编指令到机器码的映射其实就是一个编码问题，在计算机网络中很多协议的数据传输格式的设计也都是类似的编码问题","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448790,"discussion_content":"👍能对大家有所帮助是最好不过啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557124029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91044,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1556823205,"is_pvip":false,"replies":[{"id":"32821","content":"pyhhou同学你好，<br><br>汇编代码可能会因为各种原因有差异，大到CPU不同，编译器版本不同，操作系统版本不同都有可能有微小的差异，但是应该不影响你阅读理解。<br><br>不过这边的编译出来的代码，似乎没有真正调用到print方法啊，是不是没有include需要的函数库？","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557126220,"ip_address":"","comment_id":91044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851790501","product_id":100026001,"comment_content":"思考题：<br>print_number.o:     file format elf64-x86-64<br>Disassembly of section .text:<br>0000000000000000 &lt;main&gt;:<br>   0:\t55                   \tpush   rbp<br>   1:\t48 89 e5             \tmov    rbp,rsp<br>   4:\t48 83 ec 10          \tsub    rsp,0x10<br>   8:\tc7 45 fc 02 00 00 00 \tmov    DWORD PTR [rbp-0x4],0x2<br>   f:\t8b 45 fc             \tmov    eax,DWORD PTR [rbp-0x4]<br>  12:\t89 c6                \tmov    esi,eax<br>  14:\tbf 00 00 00 00       \tmov    edi,0x0<br>  19:\tb8 00 00 00 00       \tmov    eax,0x0<br>  1e:\te8 00 00 00 00       \tcall   23 &lt;main+0x23&gt;<br>  23:\tb8 00 00 00 00       \tmov    eax,0x0<br>  28:\tc9                   \tleave<br>  29:\tc3                   \tret<br><br>想请教老师一个问题，是不是最后形成的汇编代码其实是和编译器还有计算机的运行环境有关？因为我照搬你的两数相加的代码，出来的汇编代码和你 post 的略微有些不同，还有就是汇编是不是也是有版本跟种类的，之前了解过的汇编，像是 add，都是带两个参数","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448777,"discussion_content":"pyhhou同学你好，\n\n汇编代码可能会因为各种原因有差异，大到CPU不同，编译器版本不同，操作系统版本不同都有可能有微小的差异，但是应该不影响你阅读理解。\n\n不过这边的编译出来的代码，似乎没有真正调用到print方法啊，是不是没有include需要的函数库？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557126220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357677,"user_name":"woodie","can_delete":false,"product_type":"c1","uid":2004783,"ip_address":"北京","ucode":"1C2925AD8191DA","user_header":"","comment_is_top":false,"comment_ctime":1663556025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663556025","product_id":100026001,"comment_content":"总结：<br>a、CPU：从硬件角度看，是一个超大规模的集成电路；从软件开发角度看，是执行一系列指令的逻辑机器；<br>b、高级语言-&gt;编译-&gt;汇编代码(人类可读懂的机器语言)-&gt;汇编器-&gt;机器语言(二进制)，汇编代码和机器语言一一对应；<br>c、CPU指令通过可以分为：算术类(+ - * &#47;)、数据传输类(赋值类操作)、逻辑类(and or !操作)、条件分支(if else)、无条件跳转(goto continue)；<br>d、32位CPU指令，高6位(opCode)，低26位分成：R、I、J；<br>老师，现在的CPU大部分都是64位的，那64位的CPU指令是怎么存的呢？","like_count":0},{"had_liked":false,"id":349790,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1656328453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656328453","product_id":100026001,"comment_content":"gcc -S xxx.c ，之后vim 查看生成的xxx.s文件","like_count":0},{"had_liked":false,"id":349530,"user_name":"| ~浑蛋~","can_delete":false,"product_type":"c1","uid":3024820,"ip_address":"","ucode":"B6904B44DFA805","user_header":"https://static001.geekbang.org/account/avatar/00/2e/27/b4/df65c0f7.jpg","comment_is_top":false,"comment_ctime":1656045622,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1656045622","product_id":100026001,"comment_content":"使用相同的硬件和指令集，为啥Linux编译出来的机器码不能在Windows上运行","like_count":0},{"had_liked":false,"id":344464,"user_name":"Ab","can_delete":false,"product_type":"c1","uid":1232817,"ip_address":"","ucode":"D69175E59ABC91","user_header":"https://static001.geekbang.org/account/avatar/00/12/cf/b1/4e5e61ce.jpg","comment_is_top":false,"comment_ctime":1651570989,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651570989","product_id":100026001,"comment_content":"用arm的mac跑了下课后作业，看起来似乎比其他intel同学的汇编码要更长一些，请问老师这是arm机器码的特色吗？<br><br>main.o:    file format mach-o arm64<br><br>Disassembly of section __TEXT,__text:<br><br>0000000000000000 &lt;ltmp0&gt;:<br>; int main() {<br>       0: ff 83 00 d1      sub    sp, sp, #32<br>       4: fd 7b 01 a9      stp    x29, x30, [sp, #16]<br>       8: fd 43 00 91      add    x29, sp, #16<br>       c: 28 00 80 52      mov    w8, #1<br>;     int a = 1;<br>      10: a8 c3 1f b8      stur    w8, [x29, #-4]<br>      14: 48 00 80 52      mov    w8, #2<br>;     int b = 2;<br>      18: e8 0b 00 b9      str    w8, [sp, #8]<br>;     a = a + b;<br>      1c: a8 c3 5f b8      ldur    w8, [x29, #-4]<br>      20: e9 0b 40 b9      ldr    w9, [sp, #8]<br>      24: 08 01 09 0b      add    w8, w8, w9<br>      28: a8 c3 1f b8      stur    w8, [x29, #-4]<br>;     printf(&quot;%d\\n&quot;, a);<br>      2c: a9 c3 5f b8      ldur    w9, [x29, #-4]<br>      30: e8 03 09 aa      mov    x8, x9<br>      34: 00 00 00 90      adrp    x0, 0x0 &lt;ltmp0+0x34&gt;<br>      38: 00 00 00 91      add    x0, x0, #0<br>;     printf(&quot;%d\\n&quot;, a);<br>      3c: e9 03 00 91      mov    x9, sp<br>      40: 28 01 00 f9      str    x8, [x9]<br>      44: 00 00 00 94      bl    0x44 &lt;ltmp0+0x44&gt;<br>      48: 00 00 80 52      mov    w0, #0<br>; }<br>      4c: fd 7b 41 a9      ldp    x29, x30, [sp, #16]<br>      50: ff 83 00 91      add    sp, sp, #32<br>      54: c0 03 5f d6      ret","like_count":0},{"had_liked":false,"id":343198,"user_name":"注意力$","can_delete":false,"product_type":"c1","uid":1142316,"ip_address":"","ucode":"7FB3399A1EAB72","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/2c/e2f3cfc0.jpg","comment_is_top":false,"comment_ctime":1650704102,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1650704102","product_id":100026001,"comment_content":"老师，课程里说16 进制是为了表示方便，表示16进制的 值，怎么转换成汉字， 我只是能看到转换成数字","like_count":0},{"had_liked":false,"id":343142,"user_name":"朱子萧","can_delete":false,"product_type":"c1","uid":2983505,"ip_address":"","ucode":"F735FB21EA151D","user_header":"https://static001.geekbang.org/account/avatar/00/2d/86/51/0b657b5c.jpg","comment_is_top":false,"comment_ctime":1650675373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650675373","product_id":100026001,"comment_content":"老师啊，这个是为什么 &quot;所以，如果我们在自己电脑上写一个程序，然后把这个程序复制一下，装到自己的手机上，肯定是没办法正常运行的，因为这两者语言不通。&quot;我想着是，一样的程序，虽然指令集不同，但功能都应该是一样的吧，就比如,程序中if这个语句，在Intel上是一个指令，在AMD是一个指令，但执行的功能不是一样的吗","like_count":0},{"had_liked":false,"id":342256,"user_name":"三株树","can_delete":false,"product_type":"c1","uid":2854832,"ip_address":"","ucode":"C1AF11387E7CD8","user_header":"https://static001.geekbang.org/account/avatar/00/2b/8f/b0/cfeced1d.jpg","comment_is_top":false,"comment_ctime":1650160598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650160598","product_id":100026001,"comment_content":"老师，您好，想请教您以下两个问题：<br>1. 机器码是对应晶体管的打开可关闭吗？从机器码到实现电路的打开和关闭这个过程是如何具体实现的呢？<br>2. CPU在执行每条机器码所用的时间都是一样的吗？ CPU会在执行一条机器码的过程中，即此时该条机器码并没有执行完毕，转而去执行其他程序吗？","like_count":0},{"had_liked":false,"id":341243,"user_name":"张Dave","can_delete":false,"product_type":"c1","uid":2440338,"ip_address":"","ucode":"0E8B6FDEB7505B","user_header":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","comment_is_top":false,"comment_ctime":1649470649,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649470649","product_id":100026001,"comment_content":"  4 int main()<br>  5 {<br>  6         printf(&quot;%d\\n&quot;, 5);<br>  7         return 0;<br>  8 }<br><br><br>汇编如下：<br>int main()<br>{<br>    1149:       f3 0f 1e fa             endbr64<br>    114d:       55                      push   %rbp<br>    114e:       48 89 e5                mov    %rsp,%rbp<br>        printf(&quot;%d\\n&quot;, 5);<br>    1151:       be 05 00 00 00          mov    $0x5,%esi<br>    1156:       48 8d 3d a7 0e 00 00    lea    0xea7(%rip),%rdi        # 2004 &lt;_IO_stdin_used+0x4&gt;<br>    115d:       b8 00 00 00 00          mov    $0x0,%eax<br>    1162:       e8 e9 fe ff ff          callq  1050 &lt;printf@plt&gt;<br>        return 0;<br>    1167:       b8 00 00 00 00          mov    $0x0,%eax<br>}<br>    116c:       5d                      pop    %rbp<br>    116d:       c3                      retq<br>    116e:       66 90                   xchg   %ax,%ax<br>","like_count":0},{"had_liked":false,"id":337359,"user_name":"XLQ","can_delete":false,"product_type":"c1","uid":1802350,"ip_address":"","ucode":"7CEBC4DC1F34C3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/80/6e/94987c2a.jpg","comment_is_top":false,"comment_ctime":1646789756,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646789756","product_id":100026001,"comment_content":"test.o:     file format elf64-x86-64<br><br><br>Disassembly of section .text:<br><br>0000000000000000 &lt;main&gt;:<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>int main(void) {<br>   0:   55                      push   rbp<br>   1:   48 89 e5                mov    rbp,rsp<br>    printf(&quot;Hello world!\\n&quot;);<br>   4:   bf 00 00 00 00          mov    edi,0x0<br>   9:   e8 00 00 00 00          call   e &lt;main+0xe&gt;<br>    return 0;<br>   e:   b8 00 00 00 00          mov    eax,0x0<br>}<br>  13:   5d                      pop    rbp<br>  14:   c3                      ret<br>","like_count":0},{"had_liked":false,"id":332478,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1643271766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643271766","product_id":100026001,"comment_content":"你的课程，可以作为大学课程的补充。很多老师只会对着教科书讲，我当时都不知道这些细节。","like_count":0},{"had_liked":false,"id":298731,"user_name":"钱鹏 Allen","can_delete":false,"product_type":"c1","uid":2518863,"ip_address":"","ucode":"7E95E82C0717DA","user_header":"https://static001.geekbang.org/account/avatar/00/26/6f/4f/3cf1e9c4.jpg","comment_is_top":false,"comment_ctime":1624281132,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1624281132","product_id":100026001,"comment_content":"高级语言翻译成汇编语言后，再去转成机器语言。<br>","like_count":0},{"had_liked":false,"id":297874,"user_name":"月半虫工🍧","can_delete":false,"product_type":"c1","uid":1555819,"ip_address":"","ucode":"641511BEA17877","user_header":"https://static001.geekbang.org/account/avatar/00/17/bd/6b/9bf96783.jpg","comment_is_top":false,"comment_ctime":1623828615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623828615","product_id":100026001,"comment_content":"课后思考<br>以下是在 win10 PowerShell 执行命令后的结果：<br>demo.o:     file format pe-x86-64<br><br>Disassembly of section .text:<br><br>0000000000000000 &lt;main&gt;:<br>#include &lt;stdio.h&gt;<br>&#47;&#47; test.c<br>int main()<br>{<br>   0:   55                                   push   rbp<br>   1:   48 89 e5                         mov    rbp,rsp<br>   4:   48 83 ec 20                    sub    rsp,0x20<br>   8:   e8 00 00 00 00               call   d &lt;main+0xd&gt;<br>  printf(&quot;d%&quot;, 10);<br>   d:   ba 0a 00 00 00               mov    edx,0xa<br>  12:   48 8d 0d 00 00 00 00    lea    rcx,[rip+0x0]        # 19 &lt;main+0x19&gt;<br>  19:   e8 00 00 00 00              call   1e &lt;main+0x1e&gt;<br>  1e:   b8 00 00 00 00              mov    eax,0x0<br>}<br>  23:   48 83 c4 20                  add    rsp,0x20<br>  27:   5d                                pop    rbp<br>  28:   c3                                 ret<br>  29:   90                                nop<br>  2a:   90                                nop<br>  2b:   90                                nop<br>  2c:   90                                nop<br>  2d:   90                                nop<br>  2e:   90                                nop<br>  2f:   90                                 nop","like_count":0},{"had_liked":false,"id":296289,"user_name":"杰良","can_delete":false,"product_type":"c1","uid":2567349,"ip_address":"","ucode":"5DC1D1C58A4731","user_header":"https://static001.geekbang.org/account/avatar/00/27/2c/b5/10141329.jpg","comment_is_top":false,"comment_ctime":1622884329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622884329","product_id":100026001,"comment_content":"处理器只认识由 01 组成的机器码，而且需要从外部存储器读取输入。机器码从开发者的角度来说，就叫做指令。为了便于阅读、编码，每个指令都有其代号。后来发展出更便于编码的高级语言用于指挥处理器工作，其实还是需要经过编译、汇编，转换成为机器码，处理器才“听话”。","like_count":0},{"had_liked":false,"id":292909,"user_name":"菽绣","can_delete":false,"product_type":"c1","uid":1755477,"ip_address":"","ucode":"60955E14C39C6B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/c9/55/0e627a31.jpg","comment_is_top":false,"comment_ctime":1621072842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621072842","product_id":100026001,"comment_content":"对于不同的linux发行版，只要cpu都是x86_64架构，那用gcc编译的程序在不同的发行版上都可以正常运行的吧？","like_count":0},{"had_liked":false,"id":292266,"user_name":"宇智波鼬","can_delete":false,"product_type":"c1","uid":2415037,"ip_address":"","ucode":"893886790C7D86","user_header":"https://static001.geekbang.org/account/avatar/00/24/d9/bd/d65fa667.jpg","comment_is_top":false,"comment_ctime":1620745904,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620745904","product_id":100026001,"comment_content":"计算机如何执行机器码呢","like_count":0},{"had_liked":false,"id":291890,"user_name":"Geek_c6828d","can_delete":false,"product_type":"c1","uid":2587992,"ip_address":"","ucode":"1513D58A9BC721","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ooYDTtTQHL9CZQmonDOQSLqlSV5Vj4arZiavDB3QicyXr8ptNuhIEpwF1ibLteypwhtRHTjztJDb0D8hP3rwfqKiaA/132","comment_is_top":false,"comment_ctime":1620573770,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1620573770","product_id":100026001,"comment_content":"想问问为什么rs和rt的地址是17、是18？","like_count":0,"discussions":[{"author":{"id":1061803,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/ab/d8ba4242.jpg","nickname":"哒哒哒","note":"","ucode":"9378AD329F8AE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387593,"discussion_content":"这就是举个例子而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628267098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291583,"user_name":"邓高峰","can_delete":false,"product_type":"c1","uid":1892347,"ip_address":"","ucode":"5510465BF80FEE","user_header":"","comment_is_top":false,"comment_ctime":1620374667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620374667","product_id":100026001,"comment_content":"CPU 就是一个超大规模集成电路，通过电路实现了加法、乘法乃至各种各样的处理逻辑？<br>老师，这个电路是如何实现加法等各种样式的逻辑处理的呢？","like_count":0},{"had_liked":false,"id":285751,"user_name":"阳光守望者","can_delete":false,"product_type":"c1","uid":1202541,"ip_address":"","ucode":"ADC03AE968D7E8","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/6d/438a3dc0.jpg","comment_is_top":false,"comment_ctime":1617002187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617002187","product_id":100026001,"comment_content":"老师您好,原文中对I指令的介绍为:&quot;I 指令，则通常是用在数据传输、条件分支，以及在运算的时候使用的并非变量还是常数的时候&quot;,其中&quot;在运算的时候使用的并非变量还是常数的时候&quot;是什么意思啊? 这句话我读起来不太懂,想麻烦您解释一下,谢谢您!","like_count":0},{"had_liked":false,"id":281195,"user_name":"Geek_59e7df","can_delete":false,"product_type":"c1","uid":2442567,"ip_address":"","ucode":"E1BF9B634A215F","user_header":"","comment_is_top":false,"comment_ctime":1614615852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614615852","product_id":100026001,"comment_content":"老师你好，64位cpu 对应的指令是多少字节","like_count":0},{"had_liked":false,"id":277427,"user_name":"哈哈","can_delete":false,"product_type":"c1","uid":2035846,"ip_address":"","ucode":"99D859A63DFF27","user_header":"https://static001.geekbang.org/account/avatar/00/1f/10/86/394fc8b2.jpg","comment_is_top":false,"comment_ctime":1612409518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612409518","product_id":100026001,"comment_content":"老师，看了两遍文章和评论区留言，还有一点不太明白，想问一下 funct 功能码 为什么是 32 ，是功能码的地址吗？ 还是有其他的含义？","like_count":0},{"had_liked":false,"id":275408,"user_name":"Geek_489b1a","can_delete":false,"product_type":"c1","uid":2333475,"ip_address":"","ucode":"DCD5B74FD381FB","user_header":"","comment_is_top":false,"comment_ctime":1611508534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611508534","product_id":100026001,"comment_content":"作者您好，<br><br>“这些机器码由“0”和“1”组成的机器语言表示。这一条条机器码，就是一条条的计算机指令。这样一串串的 16 进制数字，就是我们 CPU 能够真正认识的计算机指令。”<br><br>0和1组成的话应该是二进制吧，为什么说是16进制？","like_count":0},{"had_liked":false,"id":268459,"user_name":"schwarzeni","can_delete":false,"product_type":"c1","uid":1112540,"ip_address":"","ucode":"C1969191F334BD","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/dc/0a1eeb4c.jpg","comment_is_top":false,"comment_ctime":1608206200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608206200","product_id":100026001,"comment_content":"最后的 “推荐阅读” 太赞了！！！阅读500多页的大部头可以结合着专栏的内容有的放矢","like_count":0},{"had_liked":false,"id":260022,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1604909669,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1604909669","product_id":100026001,"comment_content":"茶艺师学编程<br><br>老师，二战德国的恩尼格玛机算是插线板计算机吗？","like_count":0},{"had_liked":false,"id":255051,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1603259181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603259181","product_id":100026001,"comment_content":"读了 深入理解计算机系统 的机器码部分，终于有勇气来挑战原理篇的：指令和处理器部分了","like_count":0},{"had_liked":false,"id":254684,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1603167741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603167741","product_id":100026001,"comment_content":"老师讲解的很清晰，其实学习之后也可以自己定义指令集","like_count":0},{"had_liked":false,"id":250612,"user_name":"阿阳","can_delete":false,"product_type":"c1","uid":1165817,"ip_address":"","ucode":"20A35FB86B1C5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","comment_is_top":false,"comment_ctime":1601170945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601170945","product_id":100026001,"comment_content":"老师您好，看了这一节，从计算机起初的打孔纸带，理解到了汇编语言和机器码，让我对纸带编程感觉不那么神秘，受益匪浅。请问老师有没有出视频教程的计划啊？希望老师能够出视频教程，贴近软考和实战的视频教程，肯定同样受欢迎。","like_count":0},{"had_liked":false,"id":242477,"user_name":"Zhmystic_","can_delete":false,"product_type":"c1","uid":1373044,"ip_address":"","ucode":"86BC75792EEB5E","user_header":"https://static001.geekbang.org/account/avatar/00/14/f3/74/7cf45a42.jpg","comment_is_top":false,"comment_ctime":1597738323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597738323","product_id":100026001,"comment_content":"老师您好，这段：<br>要让这段程序在一个 Linux 操作系统上跑起来，我们需要把整个程序翻译成一个汇编语言（ASM，Assembly Language）的程序，这个过程我们一般叫编译（Compile）成汇编代码。针对汇编代码，我们可以再用汇编器（Assembler）翻译成机器码（Machine Code）。这些机器码由“0”和“1”组成的机器语言表示。这一条条机器码，就是一条条的计算机指令。这样一串串的 16 进制数字，就是我们 CPU 能够真正认识的计算机指令。<br>能否用java语言方向解释一下。<br>因为我没理解，.java文件经过编译后成为.class文件，这个字节码文件，属于您上面说的哪部分，是汇编代码吗？肯定不会是机器码。","like_count":0},{"had_liked":false,"id":237229,"user_name":"Vicent🍀","can_delete":false,"product_type":"c1","uid":1589894,"ip_address":"","ucode":"70AEA72A0B6F0E","user_header":"https://static001.geekbang.org/account/avatar/00/18/42/86/6b2e81ba.jpg","comment_is_top":false,"comment_ctime":1595750556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595750556","product_id":100026001,"comment_content":"源码：<br>#include &lt;stdio.h&gt;<br><br>int main()<br>{<br>printf(&quot;Hello world&quot;);<br>}<br>-----<br>#include &lt;stdio.h&gt;<br><br>int main()<br>{<br>   0:   55                      push   rbp<br>   1:   48 89 e5                mov    rbp,rsp<br>printf(&quot;Hello world&quot;);<br>   4:   bf 00 00 00 00          mov    edi,0x0<br>   9:   b8 00 00 00 00          mov    eax,0x0<br>   e:   e8 00 00 00 00          call   13 &lt;main+0x13&gt;<br>}<br>  13:   5d                      pop    rbp<br>  14:   c3                      ret <br><br>关键打印指令为call；过程调用；16位偏移量，返回地址压入栈中。中间两个mov操作没有明白具体作用","like_count":0},{"had_liked":false,"id":235957,"user_name":"Vicent🍀","can_delete":false,"product_type":"c1","uid":1589894,"ip_address":"","ucode":"70AEA72A0B6F0E","user_header":"https://static001.geekbang.org/account/avatar/00/18/42/86/6b2e81ba.jpg","comment_is_top":false,"comment_ctime":1595256091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595256091","product_id":100026001,"comment_content":"关于实例中的MIPS转换的时候，操作码为0 对应的二进制应该为00 00 00 ，是6位，换算出来的16进制整数高位的0和地位的0都给忽略了吗？","like_count":0},{"had_liked":false,"id":234962,"user_name":"Mtc","can_delete":false,"product_type":"c1","uid":1281329,"ip_address":"","ucode":"252104CDC7A346","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/31/f7f46ffd.jpg","comment_is_top":false,"comment_ctime":1594860141,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1594860141","product_id":100026001,"comment_content":"老师，您好， 想请教一下 ，I指令是没有位移量和操作码还是没有位移量和功能码，我对照图看了几篇，图是没有位移量和功能码的？","like_count":0},{"had_liked":false,"id":231273,"user_name":"噶水库","can_delete":false,"product_type":"c1","uid":1377138,"ip_address":"","ucode":"9DEA93A8B9FE8C","user_header":"https://static001.geekbang.org/account/avatar/00/15/03/72/5dcfd80a.jpg","comment_is_top":false,"comment_ctime":1593620309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593620309","product_id":100026001,"comment_content":"这里的操作数先是加载到内存，然后在运算到时候再取到CPU寄存器然后生成这个32位到指令吗？","like_count":0},{"had_liked":false,"id":229882,"user_name":"苍洱潜龙","can_delete":false,"product_type":"c1","uid":2007456,"ip_address":"","ucode":"99F66713B41C00","user_header":"","comment_is_top":false,"comment_ctime":1593175297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593175297","product_id":100026001,"comment_content":"老师，s1的地址是17  s2的地址是18，t0的地址是8，这些是怎么得到的<br>","like_count":0},{"had_liked":false,"id":229453,"user_name":"Edward Lee","can_delete":false,"product_type":"c1","uid":1228518,"ip_address":"","ucode":"156223F1D7E94A","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","comment_is_top":false,"comment_ctime":1592999931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592999931","product_id":100026001,"comment_content":"精彩！想不到学习 CPU 也能这么有趣","like_count":0},{"had_liked":false,"id":228505,"user_name":"lupguo","can_delete":false,"product_type":"c1","uid":1009098,"ip_address":"","ucode":"1B55A01DF78647","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/ca/38dcd55a.jpg","comment_is_top":false,"comment_ctime":1592716708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592716708","product_id":100026001,"comment_content":"编译器将高级语言成汇编代码，汇编代码通过汇编器汇编成机器码，机器码与cpu指令集是映射关系。<br>MIPS指令集包含算术（加减乘除）、赋值、逻辑（与或非等）、条件分支、goto语言几大类。","like_count":0},{"had_liked":false,"id":227488,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1592390762,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592390762","product_id":100026001,"comment_content":"原来以前用打孔计算机跑一边程序，需要靠人脑来生成汇编指令对应的机器码，这必须得膜拜啊","like_count":0},{"had_liked":false,"id":210282,"user_name":"破石","can_delete":false,"product_type":"c1","uid":1503509,"ip_address":"","ucode":"2B84D0D92058AF","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/15/3a35a4f6.jpg","comment_is_top":false,"comment_ctime":1587713448,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587713448","product_id":100026001,"comment_content":"```R 指令是一般用来做算术和逻辑操作，里面有读取和写入数据的寄存器的地址。如果是【逻辑位移操作】，后面还有位移操作的位移量，而最后的功能码，则是在前面的操作码不够的时候，扩展操作码表示对应的具体指令的。```        什么叫逻辑位移操作？？？","like_count":0},{"had_liked":false,"id":210023,"user_name":"mark for luck","can_delete":false,"product_type":"c1","uid":1798114,"ip_address":"","ucode":"877AC961687A93","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/P7GtgVmSNibiaZY9ibCiaohicscwb03j1ROjJUqFkCOnkMQv5JQXZia56nmhOtxr2jOBUfMS94zsvXvnw7RbtpO0dJbQ/132","comment_is_top":false,"comment_ctime":1587652864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587652864","product_id":100026001,"comment_content":"机器码对应不同的Instruction Set，那汇编语言各厂家是不是也吧通用呢？老师我这样理解对不？","like_count":0},{"had_liked":false,"id":203025,"user_name":"破石","can_delete":false,"product_type":"c1","uid":1503509,"ip_address":"","ucode":"2B84D0D92058AF","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/15/3a35a4f6.jpg","comment_is_top":false,"comment_ctime":1586103595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586103595","product_id":100026001,"comment_content":"rs&#47;rt&#47;rd&#47;shamt 都有说明，为啥funct的取值没有说明呢。另外rs=17，rt=18，17和18这两个数字只是举例子的吧，都是假定的吧。","like_count":0},{"had_liked":false,"id":201903,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1585875635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585875635","product_id":100026001,"comment_content":"先知道这个东西是什么，有什么用，当通过思考和实践有一定的熟悉度后，进一步思考为什么有它，形成一个闭环，小步迭代。从代码-汇编-机器码，在每一个世界或族群中，有自己的语言去沟通交流。","like_count":0},{"had_liked":false,"id":200297,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1585569968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585569968","product_id":100026001,"comment_content":"重新看了一遍，再整理了一下思路：第5节主要讲解了高级语言是如何翻译成计算机指令，以及计算机指令的格式。之后的第6~7节深入讲解 CPU 如何执行计算机指令（条件、循环、函数、递归这些完整的语句）。第8~10节则分析程序的编译、链接和装载过程。这样来思考一下整个脉络，文章会清晰很多。","like_count":0},{"had_liked":false,"id":198482,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1585453199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585453199","product_id":100026001,"comment_content":"不知道老师还能不能看到？我是这样理解的不知道对不对？CPU就是一大堆的二极管，它只能识别0和1，而机器码就是由0和1组成的一大堆的指令，汇编语言呢，就是些指令的人类版，在这个基础上，再通过一些语法规则形成一些更复杂的指令集合，就是我们平时用的高级需要，是这样吗？","like_count":0},{"had_liked":false,"id":198462,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1585452791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585452791","product_id":100026001,"comment_content":"计算机指令：<br>早期编程：打孔卡，孔表示0或1<br>CPU只能读懂机器语言<br>不同的CPU（手机和电脑）能读懂的语言不同<br>从程序到CPU执行：<br>C ，python编好的语言（高级语言）---编译---汇编语言---汇编器--机器语言（CPU执行）<br>机器语言就是一串串的16进制数字，本质上CPU只能处理0和1<br>CPU指令类型：<br>算术类（加减成除），数据传输类（赋值，读写），逻辑类（与或非），条件分支类（if&#47;else），无条件跳转（函数）","like_count":0},{"had_liked":false,"id":187242,"user_name":"Zeal","can_delete":false,"product_type":"c1","uid":1898857,"ip_address":"","ucode":"327D516A1D0F0E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f9/69/384e33e6.jpg","comment_is_top":false,"comment_ctime":1584068499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584068499","product_id":100026001,"comment_content":"一列四个孔的MIPS，是因为16进制；那么第一张fortran的打孔，一列十个孔，还有上方底部没有数字的打孔，是什么意思？？","like_count":0},{"had_liked":false,"id":178228,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1581626783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581626783","product_id":100026001,"comment_content":"汇编和机器码是一一对应,其存在的价值就是让人看懂，方便记忆，但是看懂汇编还是很不容易，必须充分理解硬件架构，汇编只是在变量名和操作码等几处减少人的记忆。高级语言则是对语言重新设计，一方面迎合人的逻辑认知，一方面能够最终生成汇编或者机器码，这本质上是一个翻译过程。个人以为高级语言发展的方向是最大限度的减少人的认知负担，最高效率的利用硬件资源。编译型还是解释型，相对次要，将来新的语言可能会同时支持。","like_count":0},{"had_liked":false,"id":176971,"user_name":"李雷朋","can_delete":false,"product_type":"c1","uid":1487323,"ip_address":"","ucode":"CDD7251CF8BFE6","user_header":"https://static001.geekbang.org/account/avatar/00/16/b1/db/1747bce2.jpg","comment_is_top":false,"comment_ctime":1581239013,"is_pvip":true,"replies":[{"id":"69406","content":"李雷朋同学，<br><br>你好，没有太理解你的问题？MIPS是一种“体系结构”，也是一种“指令集”。你具体想要知道是什么层面的“不一样”？寄存器只有命名，一般我们不会把这个叫做地址。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581837906,"ip_address":"","comment_id":176971,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581239013","product_id":100026001,"comment_content":"老师，MIPS 同一指令对应不同的cup架构不一样？因为寄存器地址不同cup不同？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483263,"discussion_content":"李雷朋同学，\n\n你好，没有太理解你的问题？MIPS是一种“体系结构”，也是一种“指令集”。你具体想要知道是什么层面的“不一样”？寄存器只有命名，一般我们不会把这个叫做地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581837906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169483,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1578363691,"is_pvip":false,"replies":[{"id":"68103","content":":-)<br><br>这篇文章是在2019年写的啦。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580635539,"ip_address":"","comment_id":169483,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1578363691","product_id":100026001,"comment_content":"“即使在 2019 年的今天”，2020年刚过去几天","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480575,"discussion_content":":-)\n\n这篇文章是在2019年写的啦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580635539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169296,"user_name":"wine99","can_delete":false,"product_type":"c1","uid":1682531,"ip_address":"","ucode":"F22F3E23E6F851","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/h6unp47tSLwwUZgnd3tuSSSEEOvXrC8aTI38ESYzsVZU8zZLMxvLDv8Zw2fmhr9M8CM46HCvQvicoutzwTjwNaA/132","comment_is_top":false,"comment_ctime":1578309563,"is_pvip":false,"replies":[{"id":"68104","content":"wine99同学，<br><br>你好，其实这两个版本内容区别并不大，都可以，MIPS版本市面上比较多，买那个版本就OK了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580635584,"ip_address":"","comment_id":169296,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578309563","product_id":100026001,"comment_content":"《计算机组成与设计：软 &#47; 硬件接口》还有一个ARM版，我应该买MIPS版还是ARM版呢？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480497,"discussion_content":"wine99同学，\n\n你好，其实这两个版本内容区别并不大，都可以，MIPS版本市面上比较多，买那个版本就OK了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580635584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169291,"user_name":"许先森","can_delete":false,"product_type":"c1","uid":1795371,"ip_address":"","ucode":"1F42D4A6B5C6AF","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","comment_is_top":false,"comment_ctime":1578307085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578307085","product_id":100026001,"comment_content":"打卡：<br>1、冯诺伊曼结构：运算器、控制器、存储器、输入输出。<br>和高级编程语言里面一个函数方法类似：输入输出就相当于出入参，运算器就是方法中的各种计算，控制器就相当于ifelse,break,跳转别的方法等，存储器体现不出来。<br>2、设计和使用四大组件要考虑的计算机两个核心指标是：性能和功耗。<br>3、程序的CPU执行时间=指令数（程序需要多少条指令）x CPI（指令需要多少个基本操作）x Clock Cycle Time(执行一个基本操作的耗时，即主频表示的时钟周期时间) 4、提升CPU性能：提升主频，增加更多CPU核心数量、并行、加速大概率事件（缓存）、流水线、预测（预加载）<br>5、高级编程语言-&gt;汇编语言（相当于机器码的包装，使程序易读易写）-&gt;机器码（即CPU指令二级制形式），不同体系结构CPU的机器码也不同","like_count":0},{"had_liked":false,"id":164714,"user_name":"Geek_aa8017","can_delete":false,"product_type":"c1","uid":1748911,"ip_address":"","ucode":"286195887103C2","user_header":"","comment_is_top":false,"comment_ctime":1577080647,"is_pvip":false,"replies":[{"id":"68663","content":"Geek_aa8017同学，<br><br>你好，简单来说，就是通过一个程序，把高级语言实时一条条翻译成要执行的指令。<br><br>如果想要深入理解，可以去读一读《编译原理》的专栏和相关课程。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581238625,"ip_address":"","comment_id":164714,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577080647","product_id":100026001,"comment_content":"老师，解释器是怎么实现的啊","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478873,"discussion_content":"Geek_aa8017同学，\n\n你好，简单来说，就是通过一个程序，把高级语言实时一条条翻译成要执行的指令。\n\n如果想要深入理解，可以去读一读《编译原理》的专栏和相关课程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581238625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164182,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1576903233,"is_pvip":false,"replies":[{"id":"68654","content":"gogo同学，<br><br>你好，像你这样，直接去掉对应的 intel 相关的参数就OK了。这个是只是把对应的ELF文件dump出来我们想要的可读的代码形式。<br><br>你可以认为这个算作反汇编，把二进制的指令代码dump成人类可读的汇编代码。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581234586,"ip_address":"","comment_id":164182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576903233","product_id":100026001,"comment_content":" objdump -version<br>Apple LLVM version 10.0.1 (clang-1001.0.46.4)<br>  Optimized build.<br>  Default target: x86_64-apple-darwin18.7.0<br>  Host CPU: skylake<br><br>  Registered Targets:<br>    aarch64    - AArch64 (little endian)<br>    aarch64_be - AArch64 (big endian)<br>    arm        - ARM<br>    arm64      - ARM64 (little endian)<br>    armeb      - ARM (big endian)<br>    thumb      - Thumb<br>    thumbeb    - Thumb (big endian)<br>    x86        - 32-bit X86: Pentium-Pro and above<br>    x86-64     - 64-bit X86: EM64T and AMD64<br><br>老师 我这里不能写intel应该写什么呀？<br><br>我的源码是：<br>int main() {<br>\tint a = 1, b = 2;<br>\ta = a + b;<br>}<br><br>这个是反汇编还是反编译呢， 执行完之后是：<br>(没有加intel  我不知道加什么)<br>objdump -d -S test.o <br><br>test.o:\tfile format Mach-O 64-bit x86-64<br><br>Disassembly of section __TEXT,__text:<br>_main:<br>; int main() {<br>       0:\t55 \tpushq\t%rbp<br>       1:\t48 89 e5 \tmovq\t%rsp, %rbp<br>       4:\t31 c0 \txorl\t%eax, %eax<br>; int a = 1, b = 2;<br>       6:\tc7 45 fc 01 00 00 00 \tmovl\t$1, -4(%rbp)<br>       d:\tc7 45 f8 02 00 00 00 \tmovl\t$2, -8(%rbp)<br>; a = a + b;<br>      14:\t8b 4d fc \tmovl\t-4(%rbp), %ecx<br>      17:\t03 4d f8 \taddl\t-8(%rbp), %ecx<br>      1a:\t89 4d fc \tmovl\t%ecx, -4(%rbp)<br>; }<br>      1d:\t5d \tpopq\t%rbp<br>      1e:\tc3 \tretq<br>","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478673,"discussion_content":"gogo同学，\n\n你好，像你这样，直接去掉对应的 intel 相关的参数就OK了。这个是只是把对应的ELF文件dump出来我们想要的可读的代码形式。\n\n你可以认为这个算作反汇编，把二进制的指令代码dump成人类可读的汇编代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581234586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163679,"user_name":"放下","can_delete":false,"product_type":"c1","uid":1397434,"ip_address":"","ucode":"1AD911B1E23BDB","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/ba/412b05c1.jpg","comment_is_top":false,"comment_ctime":1576766106,"is_pvip":false,"replies":[{"id":"68134","content":"放下同学，<br><br>你好，如果觉得自己对于底层原理没有那么熟悉，可以先从我在第二讲里面推荐的 程序是怎样跑起来的 这本小册子先看起来。<br>第二讲里面推荐了不少书，不用都读，挑一两本先读完吧。<br><br>","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580650896,"ip_address":"","comment_id":163679,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576766106","product_id":100026001,"comment_content":"老师非科班出身，有没有好点的操作系统和计算机组成原理入门书籍推荐呀","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478503,"discussion_content":"放下同学，\n\n你好，如果觉得自己对于底层原理没有那么熟悉，可以先从我在第二讲里面推荐的 程序是怎样跑起来的 这本小册子先看起来。\n第二讲里面推荐了不少书，不用都读，挑一两本先读完吧。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580650896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156568,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1574914069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574914069","product_id":100026001,"comment_content":"这节主要强调了指令集的概念。其中有一句话印象深刻：只是这整个程序的机器码，不是通过计算机编译出来的，而是由程序员，用人脑“编译”成一张张卡片的。看似不经意的话，却暗示了对整个体系的认识","like_count":0},{"had_liked":false,"id":144787,"user_name":"小广","can_delete":false,"product_type":"c1","uid":1263294,"ip_address":"","ucode":"9738E8DCEF9E3C","user_header":"https://static001.geekbang.org/account/avatar/00/13/46/be/d3040f9e.jpg","comment_is_top":false,"comment_ctime":1572057938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572057938","product_id":100026001,"comment_content":"你好徐老师，指令类型表格第四行“条件分支指令”的第四列中“go to PC+4+10”，是不是笔误？应该是“go to PC+10”？还是+4有什么特别含义么？","like_count":0},{"had_liked":false,"id":142807,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1571540498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571540498","product_id":100026001,"comment_content":"---总结---<br>从计算机组成的角度看，我们在使用高级语言开发时，高级语言及其编译器为我们提供了良好的封装，为我们屏蔽了底层细节。<br>依赖于高级语言和对应的编译器，可以实现到机器码的转化，由于多了中间这一层而非我们直接上手写机器码，编译器往往也能根据一些代码分析进行代码优化，更有甚者，诸如JIT等技术，还能利用运行时信息进行进一步的优化。<br>从CPU层面看，硬件上来说就是一个个的门电路，软件上来说就是能执行一个个计算机指令的单元。经过编译和汇编后所生成的机器码就是CPU可以解释执行的一个个计算机指令。<br>","like_count":0},{"had_liked":false,"id":142583,"user_name":"心浮天空","can_delete":false,"product_type":"c1","uid":1051609,"ip_address":"","ucode":"3B2D0E6CC51EE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/d9/3328dd12.jpg","comment_is_top":false,"comment_ctime":1571404004,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1571404004","product_id":100026001,"comment_content":"有几个疑问:<br>1. 每个指令使用的寄存器是固定的吗？<br>2. 在现在的多核处理器中, 寄存器是共用的？还是每个核心有一套私有的寄存器？<br>3. 通用寄存器即可以存储数据也可以存储地址？如何区分？是由操作系统区分？还是由指令决定如何使用寄存器内的数据?","like_count":0},{"had_liked":false,"id":140239,"user_name":"黄马","can_delete":false,"product_type":"c1","uid":1019506,"ip_address":"","ucode":"93E391B4678EC2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/72/63c94eee.jpg","comment_is_top":false,"comment_ctime":1570860206,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1570860206","product_id":100026001,"comment_content":"指令集 、汇编代码、机器码","like_count":0},{"had_liked":false,"id":139872,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1362659,"ip_address":"","ucode":"76F2CAFA309437","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/e3/447aff89.jpg","comment_is_top":false,"comment_ctime":1570758906,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1570758906","product_id":100026001,"comment_content":"机器码左边 冒号右边的数字是什么意义？地址？","like_count":0},{"had_liked":false,"id":139871,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1362659,"ip_address":"","ucode":"76F2CAFA309437","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/e3/447aff89.jpg","comment_is_top":false,"comment_ctime":1570758814,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1570758814","product_id":100026001,"comment_content":"对应的 MIPS 指令里 opcode 是 0，rs 代表第第一个寄存器s1的地址是17  <br>------- 这个17是怎么来的？谁给解释下？","like_count":0},{"had_liked":false,"id":120679,"user_name":"深度思考","can_delete":false,"product_type":"c1","uid":1608358,"ip_address":"","ucode":"F4A33F4EE9EE71","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/a6/114e8112.jpg","comment_is_top":false,"comment_ctime":1564972276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564972276","product_id":100026001,"comment_content":"请教个问题，常用的5类指令如算术类，数据传输类等对脚本语言程序也同样适用吗？它的指令是不是有其他的分类方法","like_count":0},{"had_liked":false,"id":120340,"user_name":"待时而发","can_delete":false,"product_type":"c1","uid":1158705,"ip_address":"","ucode":"92104F88D537F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/31/2c8a3a66.jpg","comment_is_top":false,"comment_ctime":1564837936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564837936","product_id":100026001,"comment_content":"老师，我还是不懂这里讲的是什么意思？ &quot;对应的 MIPS 指令里 opcode 是 0，rs 代表第一个寄存器 s1 的地址是 17，rt 代表第二个寄存器 s2 的地址是 18，rd 代表目标的临时寄存器 t0 的地址，是 8。因为不是位移操作，所以位移量是 0。把这些数字拼在一起，就变成了一个 MIPS 的加法指令。&quot;rs,rt,rd对应的这是什么值?对应的s1,s2,t0吗？这有点懵....","like_count":0},{"had_liked":false,"id":119421,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1564583340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564583340","product_id":100026001,"comment_content":"这些机器码由“0”和“1”组成的机器语言表示。这一条条机器码，就是一条条的计算机指令。这样一串串的 16 进制数字，就是我们 CPU 能够真正认识的计算机指令。<br>老师，我感觉文中上面这段话有歧义，应该改是  这样一串串的 二 进制数字，就是我们 CPU 能够真正认识的计算机指令。  计算机指令是以二进制，存储的，而不是十六进制，不知道自己理解的是否正确。<br><br>","like_count":0},{"had_liked":false,"id":119003,"user_name":"秋天刮大疯","can_delete":false,"product_type":"c1","uid":1318349,"ip_address":"","ucode":"A917C6EA2EFF72","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/cd/dfc834eb.jpg","comment_is_top":false,"comment_ctime":1564483586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564483586","product_id":100026001,"comment_content":"刚开始跟课，我做了个小实验，分别在ARM和x86的Linux上用gcc编译了一段很简单的C文件，并分别dump出中间的.i&#47;.s&#47;.o以及可执行文件，可以发现肉眼上的区别是在于1. 调用的标准库路径不同，库内的内容我没深查；2.文件格式略有不同；3。指令集不同。 <br>然而为何会造成这些不同，我想是编译器内产生的作用吧？对吗？ 其次是到底在具体哪一步编译器根据不同平台调用了不同的东西，还要请教作者您。","like_count":0},{"had_liked":false,"id":110003,"user_name":"卡卡","can_delete":false,"product_type":"c1","uid":1298798,"ip_address":"","ucode":"E85C439AF7E56F","user_header":"https://static001.geekbang.org/account/avatar/00/13/d1/6e/040a30d1.jpg","comment_is_top":false,"comment_ctime":1562149036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562149036","product_id":100026001,"comment_content":"思考题是用 C 直接打印到控制台一个数字吗？类似这种：printf(&quot;%d&quot;,0)；然后查看这条语句对应的机器码？","like_count":0},{"had_liked":false,"id":109041,"user_name":"默默地付出","can_delete":false,"product_type":"c1","uid":1588122,"ip_address":"","ucode":"85D1FC806A7E84","user_header":"https://static001.geekbang.org/account/avatar/00/18/3b/9a/aab5286a.jpg","comment_is_top":false,"comment_ctime":1561951871,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561951871","product_id":100026001,"comment_content":"老师，Java中的class文件应该也是汇编代码吧，为什么class文件中没有 add,mov等关键字，难道这些关键字是c语言的专属吗","like_count":0,"discussions":[{"author":{"id":1180460,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/2c/33ba4d12.jpg","nickname":"山中无老虎 😪","note":"","ucode":"594247C3A976DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1652,"discussion_content":"java生成的是字节码，由JVM解释执行，部分热点代码由JIT编译成 机器码 执行，老师文中写了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562767840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108813,"user_name":"Samson","can_delete":false,"product_type":"c1","uid":1572899,"ip_address":"","ucode":"2114D3E2E8C5BE","user_header":"https://static001.geekbang.org/account/avatar/00/18/00/23/17868694.jpg","comment_is_top":false,"comment_ctime":1561888018,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561888018","product_id":100026001,"comment_content":"老师你好，我可以mips指令中的操作码理解为是指令所要执行的操作类型吗？<br>比如例题t0=s1+s2,操作码0是不是表示该操作是一个加法操作，而RIJ则表示该指令的大类。<br>这样子理解是否合理呢？","like_count":0},{"had_liked":false,"id":108796,"user_name":"Geek_5cd851","can_delete":false,"product_type":"c1","uid":1593189,"ip_address":"","ucode":"C58AFA5217146B","user_header":"","comment_is_top":false,"comment_ctime":1561884102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561884102","product_id":100026001,"comment_content":"老师我有个问题，示例中的第一个寄存器和第二个寄存器的地址，不应该是运行时才能确认吗，为啥编译时就可以确认了？","like_count":0},{"had_liked":false,"id":108789,"user_name":"AriageCheney","can_delete":false,"product_type":"c1","uid":1590715,"ip_address":"","ucode":"53E21C3791EE32","user_header":"https://static001.geekbang.org/account/avatar/00/18/45/bb/37034190.jpg","comment_is_top":false,"comment_ctime":1561882107,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561882107","product_id":100026001,"comment_content":"“一条条的计算机指令就是机器码“。那么 ”指令为什么又是  add  Or 等汇编语言呢？“","like_count":0,"discussions":[{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6864,"discussion_content":"机器码是指令的二进制形式，汇编语言是指令的助记符形式。它们是同一事物的不同形式而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567148541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107281,"user_name":"前端旺仔","can_delete":false,"product_type":"c1","uid":1509688,"ip_address":"","ucode":"51290DFF070315","user_header":"https://static001.geekbang.org/account/avatar/00/17/09/38/8b7dbdfd.jpg","comment_is_top":false,"comment_ctime":1561511407,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561511407","product_id":100026001,"comment_content":"你好，文中谈到指令时说：“这一条条机器码，就是一条条的计算机指令。这样一串串的 16进制 数字，就是我们 CPU 能够真正认识的计算机指令”，我有一疑问，指令不是二进制的0和1吗，怎么是16进制的呢","like_count":0,"discussions":[{"author":{"id":1266043,"avatar":"https://static001.geekbang.org/account/avatar/00/13/51/7b/191a2112.jpg","nickname":"愤怒的虾干","note":"","ucode":"CEBD1B2BE7BCEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":62646,"discussion_content":"指令是二进制的，之所以转换为16进制，是为了方便计算机展示。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574856587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104565,"user_name":"ginger","can_delete":false,"product_type":"c1","uid":1321670,"ip_address":"","ucode":"73892EB5DDCE66","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/c6/8646048e.jpg","comment_is_top":false,"comment_ctime":1560777166,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560777166","product_id":100026001,"comment_content":"为什么会有16进制,是不是因为4位的:1111正好标识二进制的15,再加上个0,就是16个数字;<br>也就是说,二进制的4位,正好是16进制的一位.<br>所以为了将2进制,简短点,就将2进制的4位合并为1位,组成一个16进制.<br><br>那么二进制6位组成一位,就得到了64进制,8位组成一位,又能得到256进制!!!<br>那简化二进制时候,将更多位数的二进制数组合起来表示为别的进制数,会带来什么不好呢?<br>这里,<br>16进制,0~9得再加6个英文字母;<br>64进制,0~9得在家54个字符;<br>256进制,字符就多的优点数不过来了;<br>这样,增加了进制位数,会带来什么不好呢?<br>","like_count":0},{"had_liked":false,"id":103504,"user_name":"Marshall","can_delete":false,"product_type":"c1","uid":1476507,"ip_address":"","ucode":"0FB004E8163F44","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/9b/8bebc8b6.jpg","comment_is_top":false,"comment_ctime":1560469285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560469285","product_id":100026001,"comment_content":"老师 我这边突然有些糊涂 如果程序都可以编译为机器码 我们还需要操作系统吗？ 还是说操作系统是用来调度指令执行？","like_count":0},{"had_liked":false,"id":103419,"user_name":"Marshall","can_delete":false,"product_type":"c1","uid":1476507,"ip_address":"","ucode":"0FB004E8163F44","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/9b/8bebc8b6.jpg","comment_is_top":false,"comment_ctime":1560431107,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560431107","product_id":100026001,"comment_content":"老师 之前看别人这么说java，jvm把class文件编译成汇编，操作系统根据cpu类型把汇编语言编译成对应的机器码。 这样理解对吗","like_count":0},{"had_liked":false,"id":103337,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1560416429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560416429","product_id":100026001,"comment_content":"printf.o:     file format elf64-x86-64<br><br><br>Disassembly of section .text:<br><br>0000000000000000 &lt;main&gt;:<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br><br>int main(int argc, char *argv[])<br>{<br>   0:   55                      push   rbp<br>   1:   48 89 e5                mov    rbp,rsp<br>   4:   48 83 ec 20             sub    rsp,0x20<br>   8:   89 7d ec                mov    DWORD PTR [rbp-0x14],edi<br>   b:   48 89 75 e0             mov    QWORD PTR [rbp-0x20],rsi<br>  int rc = 1;<br>   f:   c7 45 fc 01 00 00 00    mov    DWORD PTR [rbp-0x4],0x1<br>  printf(&quot;ERROR; return code from pthread_create() is %d\\n&quot;, rc);<br>  16:   8b 45 fc                mov    eax,DWORD PTR [rbp-0x4]<br>  19:   89 c6                   mov    esi,eax   &#47;&#47;pirntf的入参<br>  1b:   bf 00 00 00 00          mov    edi,0x0  &#47;&#47;printf的入参<br>  20:   b8 00 00 00 00          mov    eax,0x0<br>  25:   e8 00 00 00 00          call   2a &lt;main+0x2a&gt;  &#47;&#47;printf函数调用<br>}<br>  2a:   c9                      leave<br>  2b:   c3                      ret","like_count":0},{"had_liked":false,"id":98643,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1559047676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559047676","product_id":100026001,"comment_content":"用纸带编程这例子来引入机器码，这个引子用得好，生动形象！","like_count":0},{"had_liked":false,"id":96489,"user_name":"Geek_a7f8b7","can_delete":false,"product_type":"c1","uid":1529434,"ip_address":"","ucode":"183ABBEE69783A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epPF7QKQmghic53ZjudYzAgchH15ohyHeOMYBpJGxJG9ULDIfeN1j9Ur7HYQxJE0hWu7zwdyvxceMA/132","comment_is_top":false,"comment_ctime":1558433065,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558433065","product_id":100026001,"comment_content":"老师，最后的穿孔纸带看不懂。横着数竖着数好像都不对。😂","like_count":0},{"had_liked":false,"id":95972,"user_name":"Geek_guo","can_delete":false,"product_type":"c1","uid":1517196,"ip_address":"","ucode":"E70AB1A1E65F67","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/239h30GxsIAralcfSmrp8QvFzyNA7icEDIbhBQ6K0tr6GwtG3ia0aUCcNo2SfoTlNWtGFVgcFwFjicaGdK6Uau3cQ/132","comment_is_top":false,"comment_ctime":1558281102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558281102","product_id":100026001,"comment_content":"读第二遍又产生了一个问题，像Java这种语言，他需要把字节码编译成汇编代码，再编译成二进制码吗？如果是的话，那是不是所有的语言都需要编译成汇编代码再编译成二进制码？","like_count":0},{"had_liked":false,"id":93655,"user_name":"萝卜祥子","can_delete":false,"product_type":"c1","uid":1476139,"ip_address":"","ucode":"367F4E644D4656","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/B9z4VJwCSPPI0Zng5OmbC0EX7TYvqiconRv4GolDKxWLK97GLvvoroqTgkHlIlLyZZTVlRRiaZkCeTlthNDYauhA/132","comment_is_top":false,"comment_ctime":1557547083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557547083","product_id":100026001,"comment_content":"两年前看了深入理解计算机系统，把汇编啃了一下，感觉好爽，通过汇编真正的理解了程序底层是怎么实现的，比如函数栈是怎么处理的，函数为什么传指针才能修改参数本身等等，这种知其然的感觉爽，老师有没有什么比较系统的汇编语言的资料可以推荐下，自己看了一个ｇｕｉｄｅ to x86的资料，感觉都是平台相关的","like_count":0},{"had_liked":false,"id":92170,"user_name":"志远","can_delete":false,"product_type":"c1","uid":1222322,"ip_address":"","ucode":"CA1106B4EBCED7","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/b2/89aae33a.jpg","comment_is_top":false,"comment_ctime":1557194587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557194587","product_id":100026001,"comment_content":"老师讲的太好了，条理清晰，补课了补课了","like_count":0}]}