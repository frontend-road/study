{"id":200825,"title":"01 | 架构的本质：如何打造一个有序的系统？","content":"<p>你好，我是王庆友，今天是专栏的第一讲，我想先和你聊聊架构的本质。</p><p>我们知道，现在的软件系统越来越复杂，当然相应地，架构的作用也越来越明显。作为开发人员，我们每天都在和架构打交道，在这个过程中，对于架构也经常会产生各种各样的问题：</p><ul>\n<li>什么是架构？架构都有哪些分类，分别解决什么问题呢？</li>\n<li>怎样才是一个好的架构设计？我怎么才能成长为一名优秀的架构师呢？</li>\n</ul><p>这些问题涉及我们对架构的认识，也是学习和运用架构的开始。所以，今天，我们就来深入地分析架构的实质，让你能够透彻地理解它。</p><p>作为专栏的第一讲，我希望先和你讨论架构中理念性的部分，就是所谓架构的道，这样可以指导你学习后续的实操层面的内容，也就是架构的术。</p><p>接下来，我们就正式开始吧，先说下我对架构本质的理解。</p><h2>架构的本质</h2><p>物理学中有个很著名的“熵增定律”：一个封闭系统，都是从有序到无序，也就是它的熵（即混乱程度）会不断地增加，最终系统会彻底变得无序。</p><p>这个理论放在软件系统的演化上，也是非常适用的。</p><p>一方面，随着业务需求的增加，我们会往系统里不停地添加业务功能；另一方面，随着访问量的不断增加，我们会不断通过技术手段来加强系统非业务性功能。如果事先不做良好的设计，随着时间的推进，整个系统野蛮生长，就会逐渐碎片化，越来越无序，最终被推倒重来。</p><!-- [[[read_end]]] --><p>不过，自然界中的生物可以通过和外界交互，主动进行新陈代谢，制造“负熵”，也就是降低混乱程度，来保证自身的有序性，继续生存。比如，植物通过光合作用，把光能、二氧化碳和水合成有机物，以此滋养自己，延续生命。对于软件系统，我们也可以主动地调整系统各个部分的关系，保证系统整体的有序性，来更好地适应不断增长的业务和技术变化。这种系统内部关系的调整就是通过架构实现的，所以，架构的本质就是：</p><blockquote>\n<p><strong>通过合理的内部编排，保证系统高度有序，能够不断扩展，满足业务和技术的变化。</strong></p>\n</blockquote><p>这里包含两层意思，我们具体展开说下：</p><p><strong>首先，架构的出发点是业务和技术在不断复杂化，引起系统混乱，需要通过架构来保证有序</strong>。我们知道架构这个词来源于建筑行业，那为什么建筑行业需要“架构”呢？</p><p>搭一个草房子很简单，可以直接上手；盖一个2层楼房，稍微复杂一些，但在工匠的经验指导下，问题也不大；而盖一座高楼，复杂性就大不一样了，我们需要考虑内部结构、承重、采光、排水、防雷抗震等，这就需要专业人员事先做好整体的架构设计，并严格地按照设计来施工。</p><p>这里，你可以看到，建筑里的架构不是天然就有的，而是因为建筑越来越复杂，我们需要通过架构来管理这种复杂性，避免建造过程的失控。</p><p>软件系统也是如此，从简单的桌面应用发展到现在的大型互联网平台，这个过程中，系统规模越来越大，业务和技术也越来越复杂。我们同样需要通过架构设计，消化复杂性带来的混乱，使系统始终处于一个有序状态，能够应对现有和将来的需求变化。</p><p><strong>其次，架构实现从无序到有序，是通过合理的内部编排实现的，基本的手段，就是“分”与“合”，先把系统打散，然后将它们重新组合，形成更合理的关系。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/3d/ae/3dd1ae4724e696a488210a75a8bce4ae.jpg?wh=1142*520\" alt=\"\"></p><p>具体地说，<strong>“分”就是把系统拆分为各个子系统、模块、组件</strong>。拆分的时候，首先要解决每个部分的定位问题，然后根据定位，划分彼此的边界，最后实现合理的拆分，我们比较熟悉的微服务架构，就是一种典型的拆分做法。</p><p><strong>“合”就是基于业务流程和技术手段，把各个组件有机整合在一起</strong>。比如说在微服务架构中，拆分为具体微服务后，我们需要对这些服务进行归类和分层，有些属于底层基础服务，有些属于上层聚合服务，还要尽可能地实现服务的平台化，比如我们最近说的中台，这些都是合的思想体现。</p><p>这个分与合的过程将系统的复杂性分解为两个层次：</p><ul>\n<li>首先，各个子系统承担独立的职责，内部包含了自身的复杂性。子系统的复杂性对外部是透明的，外部不用关心。</li>\n<li>其次，子系统通过封装后，简化为职责明确的一个点，因此，我们只需要在合的过程中，解决各个点之间的依赖关系，这样就可以定义出系统整体。</li>\n</ul><p>举个例子，我们都知道GoF的23个设计模式，在Builder模式中，它的主逻辑只需要给出各个部件的组装关系即可，它不关心创建某个具体部件的内部逻辑，这个可以交给工厂模式去实现。这里，Builder模式负责粗粒度的组装逻辑，它承担的是合的部分；工厂模式负责细粒度的构造逻辑，承担的是分的部分，大家各自管理自己的复杂性。</p><p><strong>通过合理的“分”与“合”，系统不是回到了原点，而是把原先铁板一块的系统变成一个富有弹性的结构化系统。这样，系统的复杂性有效地分解了，系统的有序度大幅度地提升了。</strong></p><p>当然，系统的复杂性是多方面的，有技术上和业务上的，架构也是一个体系，会有多种架构一起来应对这些复杂性挑战。那么接下来，我们就来具体看下。</p><h2>架构的分类</h2><p>按照不同的角度，架构可以有很多分类，但一般来说，主要分为<strong>业务架构</strong>、<strong>应用架构</strong>和<strong>技术架构</strong>。那么，这些架构分别为谁服务，解决什么问题，相互之间是什么关系呢？</p><p>回答这些问题前，我们先来看下系统的落地过程。</p><p>系统首先由人来开发，然后由机器来运行，人和机器共同参与一个系统的落地。</p><p><img src=\"https://static001.geekbang.org/resource/image/95/64/95790773cbc59bedbb01a07894e94f64.jpg?wh=1142*698\" alt=\"\"></p><p>对于负责开发的人来说，比较头疼的是，业务太复杂，脑子想不清楚，即使当前勉强把业务逻辑转化为代码，系统后续的维护也是问题。因此，开发人员的要求是系统概念清晰，业务逻辑容易理解，可以直观地进行代码开发。</p><p>对于负责运行的机器来说，比较头疼的是，外部请求并发量太大，导致机器扛不住，有的时候，硬件还会出问题。因此，它的要求是系统能够水平扩展，支持硬件容错，保证系统的高性能和高可用。</p><p>这里，<strong>开发的痛点主要由业务架构和应用架构来解决，机器的痛点主要由技术架构来解决。</strong></p><p>为什么这么说呢？我们看下，这些架构具体都是做什么用的。</p><p>简单来说，业务架构就是讲清楚核心业务的处理过程，定义各个业务模块的相互关系，它从概念层面帮助我们理解系统面临哪些问题以及如何处理；而应用架构就是讲清楚系统内部是怎么组织的，有哪些应用，相互间是怎么调用的，它从逻辑层面帮助我们理解系统内部是如何分工与协作的。</p><p>技术架构就是讲清楚系统由哪些硬件、操作系统和中间件组成，它们是如何和我们开发的应用一起配合，应对各种异常情况，保持系统的稳定可用。所以，技术架构从物理层面帮助我们理解系统是如何构造的，以及如何解决稳定性的问题。</p><p>这里你可以看到，业务架构、应用架构和技术架构，分别从概念、逻辑和物理层面定义一个系统。业务架构给出了业务模块的划分和依赖关系，这也大致决定了应用系统如何分工和协作，当然这不需要严格地一一对应，比如一个商品业务，可能对应3个应用，一个前台商品展示应用、一个后台商品管理应用，以及一个商品基础服务，但这不影响我们从逻辑上理解，一个业务场景，有哪些应用参与，并且它们是如何协作的。</p><p>而技术架构呢，通过保障应用的稳定运行，最终保证业务不出问题。比如在大促的时候，多个应用可能会受大流量冲击，技术架构就要考虑怎么通过技术手段，保障相关的应用能够处理高并发，从而保证大促顺利进行。</p><p>这里，我举个拍电影的例子，来帮助你更直观地理解这三种架构的关系：业务架构定义了这个电影的故事情节和场景安排；应用架构进一步定义有哪些角色，每个角色有哪些职责，并且在每个场景中，这些角色是如何互动的；技术架构最后确定这些角色由谁来表演，物理场景上是怎么布置的，以此保证整个拍摄能够顺利完成。</p><p>最后，我想强调一下：系统是人的系统，架构首先是为人服务的。因此，业务概念清晰、应用分工合理、人好理解是第一位的。然后，我们再考虑技术选型的问题，保证系统非功能性目标的实现。<strong>所以做架构设计时，一般是先考虑业务架构，再应用架构，最后是技术架构。</strong></p><h2>什么是好的架构？</h2><p>从上面的内容，我们不难看出，一个好的架构必须满足两方面挑战：业务复杂性和技术复杂性。</p><h3>1. 业务复杂性</h3><p>系统首先要满足当前的业务需求，在此基础上，还要满足将来的业务需求，因此系统要能不断地扩展变化，包括调整现有功能，以及增加新功能。</p><p>而且，系统的功能变化不能影响现有业务，不要一修改，就牵一发动全身，到处出问题。因此，在架构设计上，要做到系统的柔性可扩展，能够根据业务变化做灵活的调整。</p><p>此外，市场不等人，上新业务要快，之前花了半年上了个业务，这回再上个类似的新业务，需要短时间就能落地。因此，架构设计上，还要做到系统功能的可重用，这样才能通过快速复用，实现业务敏捷和创新。</p><h3>2. 技术复杂性</h3><p>要保证一个业务能正常运行，除了满足业务功能之外，还要保证这个系统稳定可用。</p><p>一个复杂系统是由很多部分组成的，如应用程序、服务器、数据库、网络、中间件等，都可能会出问题。那怎么在出问题时，能够快速恢复系统或者让备用系统顶上去呢？</p><p>还有流量问题，平时流量不大，少量机器就可以处理，但在大促的时候，大量流量进来，系统是不是能够通过简单地加机器方式就能支持呢？</p><p>此外还有低成本的问题，系统能否做到，使用廉价设备而不是高大上的IOE设备，使用免费的开源组件而不是昂贵的商业套件，使用虚拟化技术而不是物理机，并且在流量低谷和高峰的不同时期，让系统能够弹性缩容和扩容呢？</p><p>这些都属于技术性的挑战，解决的是系统的非业务性功能，也都是架构设计要支持的。</p><p><strong>因此，一个好的架构设计既要满足业务的可扩展、可复用；也要满足系统的高可用、高性能和可伸缩，并尽量采用低成本的方式落地。所以，对架构设计来说，技术和业务两手都要抓，两手都要硬。</strong></p><p>那么，一个优秀的架构师需要具备什么样的能力，才能设计一个好的架构呢？</p><h2>什么是好的架构师？</h2><p>一个优秀的架构师，应具备很强的综合能力，要内外兼修，“下得厨房，上得厅堂”，下面我来通过典型的架构方式，来介绍一名优秀架构师应该具备的能力：</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/9c/a177795d73884d912c4a5ae7fcea7e9c.jpg?wh=1142*698\" alt=\"\"></p><p>一个驾校教练，必定开车技术好；一个游泳教练，必定游泳水平好，因为这些都是实践性很强的工作。架构师也是一样，TA必定是一个<strong>出色的程序员</strong>，写的一手好代码。</p><p>在此基础上，<strong>架构师要有技术的广度（多领域知识）和深度（技术前瞻）</strong>。对主流公司的系统设计非常了解，知道优劣长短，碰到实际问题，很快就能提供多种方案供评估。</p><p>此外，架构师还需要有<strong>思维的高度，具备抽象思维能力</strong>。抽象思维是架构师最重要的能力，架构师要善于把实物概念化并归类。比如，面对一个大型的B2C网站，能够迅速抽象为采购-&gt;运营-&gt;前台搜索-&gt;下单-&gt;履单这几大模块，对系统分而治之。</p><p>架构师还需要有<strong>思维的深度，能够透过问题看本质</strong>。透过问题看本质是由事物的表象到实质，往深层次挖掘。比如，看到一段Java代码，知道它在JVM（Java Virtual Machine，Java虚拟机）中如何执行；一个跨网络调用，知道数据是如何通过各种介质（比如网卡端口）到达目标位置。透过问题看本质，可以使架构师能够敏锐地发现底层的真实情况，以端到端闭环的方式去思考问题，能够识别系统的短板并解决它。</p><p>还有很重要的一点，能落地的架构才是好架构，所以架构师还需要具备<strong>良好的沟通能力（感性）</strong>，能确保各方对架构达成共识，愿意采取一致的行动；而<strong>良好的平衡取舍能力（理性）</strong>，可以确保架构在现有资源约束下是最合理的，能让理想最终照进现实。</p><h2>总结</h2><p>我今天和你分享了架构的本质，架构的终极目标是保证系统的有序，通过拆分和整合，使系统具有柔性，能够进化，从而可以满足现有的和将来的各种变化。</p><p>如果你能深入地理解架构的这些本质和手段，就可以不用照搬某某大厂的方案了，而是能够根据实际情况，以最合理的方式来解决系统面临的问题。</p><p>这里呢，我也分享了架构的三种典型分类，包括它们各自的定位和相互关系，相信你现在对架构整体有了一个简明的框架，知道架构设计都要做哪些事情了。</p><p>最后，我还为你提供了高标准的架构师能力模型，这样，你能比较清楚自己的努力方向是什么，这些要求很高，但你也不要有任何的畏难情绪，你可以在架构实践中，逐步地往这个目标上靠近，通过本专栏后续的学习，相信你也可以更快地达到这个目标。</p><p><strong>最后，给你留一道思考题：</strong>除了本文提到的三种架构，你还知道有哪些架构分类，它们分别做什么用？</p><p>我是王庆友，欢迎在留言区和我互动，我会第一时间给你反馈。如果这节课对你有帮助，也欢迎你把它分享给你的朋友。感谢阅读，我们下期再见。</p>","comments":[{"had_liked":false,"id":180778,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":true,"comment_ctime":1582385368,"is_pvip":true,"replies":[{"id":"70173","content":"系统架构是一个比较含糊的概念，实践中，也经常被人提到，如果按照业务架构，应用架构，技术架构的分类，系统架构实际上更偏向于技术架构。<br>专栏里说三种架构分别从概念，逻辑和物理层面定义系统，那我们如何判断一个实际的架构图，它是业务架构，还是应用架构，技术架构呢？<br>业务架构关注系统大的业务流，数据流和资金流，举个例子，假设A要通知B，在业务架构里，我们简单标识A&quot;通知&quot;B，过程中传递了什么信息即可；在应用架构图里，这个具体的通知方式要给出，也就是从逻辑上理解这个过程是怎么回事的，可能是A同步调用B；也可能是B定时轮询A的接口获取信息，还有可能是A先发送消息到MQ，然后有个监听应用负责接收消息，然后调用B的接口实现。<br>而如果是技术架构，还要把具体的MQ技术选型给出来，是RabbitMQ呢，还是Kafaka。<br><br>当然在技术的架构图里，并没有很明确地按照这个来给出，很可能有些地方按照业务架构简化表达，有些部分给出具体的技术选型，这个我们清楚就可以，不必太纠结，不是每个系统都要给出3个架构图，那太麻烦。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582432255,"ip_address":"","comment_id":180778,"utype":1}],"discussion_count":5,"race_medal":0,"score":"9.2233721243365007e+18","product_id":100046301,"comment_content":"系统架构？有时候让别人了解我们现有的系统会让提供这个架构图，这属于应用架构吗？","like_count":21,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484789,"discussion_content":"系统架构是一个比较含糊的概念，实践中，也经常被人提到，如果按照业务架构，应用架构，技术架构的分类，系统架构实际上更偏向于技术架构。\n专栏里说三种架构分别从概念，逻辑和物理层面定义系统，那我们如何判断一个实际的架构图，它是业务架构，还是应用架构，技术架构呢？\n业务架构关注系统大的业务流，数据流和资金流，举个例子，假设A要通知B，在业务架构里，我们简单标识A&amp;quot;通知&amp;quot;B，过程中传递了什么信息即可；在应用架构图里，这个具体的通知方式要给出，也就是从逻辑上理解这个过程是怎么回事的，可能是A同步调用B；也可能是B定时轮询A的接口获取信息，还有可能是A先发送消息到MQ，然后有个监听应用负责接收消息，然后调用B的接口实现。\n而如果是技术架构，还要把具体的MQ技术选型给出来，是RabbitMQ呢，还是Kafaka。\n\n当然在技术的架构图里，并没有很明确地按照这个来给出，很可能有些地方按照业务架构简化表达，有些部分给出具体的技术选型，这个我们清楚就可以，不必太纠结，不是每个系统都要给出3个架构图，那太麻烦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582432255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184916,"discussion_content":"最后一句话，在技术的架构图里，应该是“在实际的架构图里”","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582588874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578432,"discussion_content":"谢谢老师的解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656740009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053532,"avatar":"","nickname":"亮灯","note":"","ucode":"C06505ED58A0E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182744,"discussion_content":"谢谢老师您的解答～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582453577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057056,"avatar":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","nickname":"秋天","note":"","ucode":"A7E1D953EF7E17","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182543,"discussion_content":"感谢您的回答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582433501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180210,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":true,"comment_ctime":1582209147,"is_pvip":false,"replies":[{"id":"70036","content":"架构处理的原则是相同的，类似你会了一门语音，再学新语言就非常快。你可以对照自己熟悉行业的业务系统，去理解它们的系统设计。一般来说，电商行业交易相关的系统设计具有比较好的典型性，其他行业对核心的业务模型了解下就可以。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582278055,"ip_address":"","comment_id":180210,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.223372051321899e+18","product_id":100046301,"comment_content":"我很赞同老师从三个维度来、从上至下来理解架构，但相对技术架构，业务架构和应用架构都比较难积累。比如一个公司的业务线往往不会很多，能都参与的机会就更少。而每个行业或多或少都有一些成熟的业务模型，不了解的话会走很多弯路。有什么好的办法能更快接触、积累吗？","like_count":3,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484567,"discussion_content":"架构处理的原则是相同的，类似你会了一门语音，再学新语言就非常快。你可以对照自己熟悉行业的业务系统，去理解它们的系统设计。一般来说，电商行业交易相关的系统设计具有比较好的典型性，其他行业对核心的业务模型了解下就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582278055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180124,"discussion_content":"谢谢老师，受益良多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582278600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185163,"user_name":"睡不着的史先生","can_delete":false,"product_type":"c1","uid":1192542,"ip_address":"","ucode":"E00E6C43F340D9","user_header":"https://static001.geekbang.org/account/avatar/00/12/32/5e/4827557b.jpg","comment_is_top":true,"comment_ctime":1583501598,"is_pvip":false,"replies":[{"id":"71607","content":"专栏里说三种架构分别从概念，逻辑和物理层面定义系统，那我们如何判断一个实际的架构图，它是业务架构，还是应用架构，技术架构呢？<br>业务架构关注系统大的业务流，数据流和资金流，举个例子，假设A要通知B，在业务架构里，我们简单标识A&quot;通知&quot;B，过程中传递了什么信息即可；<br>在应用架构图里，这个具体的通知方式要给出，也就是从逻辑上理解这个过程是怎么回事的，可能是A同步调用B；也可能是B定时轮询A的接口获取信息，还有可能是A先发送消息到MQ，然后有个监听应用负责接收消息，然后调用B的接口实现。<br>而如果是技术架构，还要把具体的MQ技术选型给出来，是RabbitMQ呢，还是Kafaka。<br><br>当然在实际的架构图里，不会都按照这个分类来描述，很可能有些地方按照业务架构简化表达，有些部分给出具体的技术选型，这个我们清楚就可以，不必太纠结，不是每个系统都要给出3个架构图，那太麻烦。<br>","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1583597293,"ip_address":"","comment_id":185163,"utype":1}],"discussion_count":3,"race_medal":0,"score":"9.2233720427331994e+18","product_id":100046301,"comment_content":"老师，我还是，没太很好的理解，业务架构跟应用架构的区别，从概念定义一个系统，从逻辑定义一个系统，还是有点抽象😭","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486273,"discussion_content":"专栏里说三种架构分别从概念，逻辑和物理层面定义系统，那我们如何判断一个实际的架构图，它是业务架构，还是应用架构，技术架构呢？\n业务架构关注系统大的业务流，数据流和资金流，举个例子，假设A要通知B，在业务架构里，我们简单标识A&amp;quot;通知&amp;quot;B，过程中传递了什么信息即可；\n在应用架构图里，这个具体的通知方式要给出，也就是从逻辑上理解这个过程是怎么回事的，可能是A同步调用B；也可能是B定时轮询A的接口获取信息，还有可能是A先发送消息到MQ，然后有个监听应用负责接收消息，然后调用B的接口实现。\n而如果是技术架构，还要把具体的MQ技术选型给出来，是RabbitMQ呢，还是Kafaka。\n\n当然在实际的架构图里，不会都按照这个分类来描述，很可能有些地方按照业务架构简化表达，有些部分给出具体的技术选型，这个我们清楚就可以，不必太纠结，不是每个系统都要给出3个架构图，那太麻烦。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583597293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1450486,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/f6/16bc9c24.jpg","nickname":"李达龙","note":"","ucode":"F5702E69D90B7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237174,"discussion_content":"关于业主架构，应用架构和技术架构，我的理解就是由高级到低级，由抽象到具体，分别对应“做什么”？“怎么做”？“谁去做”？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587135479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1987136,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/52/40/e3dbca26.jpg","nickname":"旭日东升","note":"","ucode":"81B3AD64703B5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298549,"discussion_content":"业务架构 定义 从某地到某地。 但不说明如何实现 ，应用架构 说明 你是坐车 船 飞机 走 过去。 技术架构 去落实你选择的 工具  坐什么车 拖拉机 摩托车等等 。感觉是 我想做  我如何做  我怎么做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597323435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180731,"user_name":"卫江","can_delete":false,"product_type":"c1","uid":1101226,"ip_address":"","ucode":"DE2F7A6916F1A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","comment_is_top":true,"comment_ctime":1582376202,"is_pvip":false,"replies":[{"id":"70112","content":"分解为不同抽象层次是对的，但组合时，一般我们不说树的结构，而是层次化结构，你看具体的业务架构，都是层次结构，一个层可以把多个定位相同的模块包含在一起，简化整体依赖关系，当然也不会有循环依赖的问题。<br>下一讲就会深入地讲业务架构。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582381111,"ip_address":"","comment_id":180731,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720427320996e+18","product_id":100046301,"comment_content":"老师，我说一下我的感受不知道对不对，在业务架构设计中，核心是分和和，根据不同的抽象层级，最后形成树的结构，父节点不关心太多的细节而是交给子节点，并负责子节点粒度的业务逻辑整合，这样一来在分层的时候可以通过增加层来降低各个节点的复杂度。同时通过树结构避免循环依赖来使得模块之间关系更加清晰和简单，不知道这么描述对不对？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484772,"discussion_content":"分解为不同抽象层次是对的，但组合时，一般我们不说树的结构，而是层次化结构，你看具体的业务架构，都是层次结构，一个层可以把多个定位相同的模块包含在一起，简化整体依赖关系，当然也不会有循环依赖的问题。\n下一讲就会深入地讲业务架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582381111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180752,"user_name":"孙同学","can_delete":false,"product_type":"c1","uid":1676238,"ip_address":"","ucode":"C6C82400D15336","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/ce/092acd6a.jpg","comment_is_top":false,"comment_ctime":1582381016,"is_pvip":false,"replies":[{"id":"70174","content":"强，知识点整理得很好，继续啊，一图在手，别无所求。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582432756,"ip_address":"","comment_id":180752,"utype":1}],"discussion_count":4,"race_medal":0,"score":"61711923160","product_id":100046301,"comment_content":"https:&#47;&#47;www.processon.com&#47;view&#47;link&#47;5e51378ce4b0c037b5f9d1e3 把内容整理了一下 方便快速回顾","like_count":15,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484778,"discussion_content":"强，知识点整理得很好，继续啊，一图在手，别无所求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582432756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1206187,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/ab/fcf0cec4.jpg","nickname":"寒光","note":"","ucode":"061BE413595F21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284361,"discussion_content":"为学习达人点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592521381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1450486,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/f6/16bc9c24.jpg","nickname":"李达龙","note":"","ucode":"F5702E69D90B7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237184,"discussion_content":"赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587135641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048888,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/38/554ece99.jpg","nickname":"厕所看C","note":"","ucode":"344DC9E80F0F9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219081,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585732899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187166,"user_name":"gevin","can_delete":false,"product_type":"c1","uid":1005862,"ip_address":"","ucode":"B5AD68F1884A1F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/26/1015d573.jpg","comment_is_top":false,"comment_ctime":1584030085,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18763899269","product_id":100046301,"comment_content":"软件系统通过“重构”，实现“熵减”😝","like_count":5},{"had_liked":false,"id":282468,"user_name":"night","can_delete":false,"product_type":"c1","uid":1204168,"ip_address":"","ucode":"03B3C955092C03","user_header":"https://static001.geekbang.org/account/avatar/00/12/5f/c8/13aa8aa9.jpg","comment_is_top":false,"comment_ctime":1615266724,"is_pvip":false,"replies":[{"id":"104634","content":"很好的思考，特别是技术人员随着职位的提升，关注点会前移。从业务出发，系统架构设计会有针对性，接地气，避免过度设计。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1618390684,"ip_address":"","comment_id":282468,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14500168612","product_id":100046301,"comment_content":"业务架构，关注的是业务信息流；<br>应用架构，关注的是业务数据流；和上面信息流的不同是，通常能对应到系统中业务实体；<br>技术架构，关注的是支撑应用架构落地的技术方案，典型的就是对应到不同的RPC&#47;存储&#47;缓存&#47;消息队列&#47;等的技术栈；<br><br>还有一个简单的，业务架构&#47;应用架构&#47;技术架构，通常会体现在 业务人员&#47;产品经理&#47;技术人员 的 PPT 中；另外，技术人员随着职位的提升，关注点会前移，并且前移空间比较大；产品经理的关注点同，但不会后移（即不关心技术实现）；","like_count":3,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516752,"discussion_content":"很好的思考，特别是技术人员随着职位的提升，关注点会前移。从业务出发，系统架构设计会有针对性，接地气，避免过度设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618390684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289263,"user_name":"遇黑则明16619751287","can_delete":false,"product_type":"c1","uid":1142931,"ip_address":"","ucode":"4ED98BBC2EC078","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/93/03d8fb2e.jpg","comment_is_top":false,"comment_ctime":1618959980,"is_pvip":true,"replies":[{"id":"105360","content":"哈哈，夸奖了。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1619747626,"ip_address":"","comment_id":289263,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10208894572","product_id":100046301,"comment_content":"这门课干货、方法论满满，是极客里被低估的一门极优秀的课程。","like_count":2,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518866,"discussion_content":"哈哈，夸奖了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619747626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083024,"avatar":"https://static001.geekbang.org/account/avatar/00/10/86/90/03a64d6f.jpg","nickname":"Jayzee","note":"","ucode":"90206C73276391","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377771,"discussion_content":"强烈赞同，极客时间里被严重低估的优秀课程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622822966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182413,"user_name":"elfkingw","can_delete":false,"product_type":"c1","uid":1049763,"ip_address":"","ucode":"898CC27CB25EAC","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/a3/2d26cd1f.jpg","comment_is_top":false,"comment_ctime":1582783083,"is_pvip":false,"replies":[{"id":"70695","content":"业务架构师和技术架构师都是一种角色，或者说职责。没有条件的话，企业没有架构师，开发兼；有条件的话，有架构师同时兼这两个角色；条件很好的话，不同的人担任这个角色","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582866147,"ip_address":"","comment_id":182413,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10172717675","product_id":100046301,"comment_content":"架构师的职责是完成业务架构、应用架构、技术架构，那是否需要业务架构师和技术架构师两个角色呢？在技术上擅长的架构师不一定在业务上精通和理解，在业务不理解的前提下来设计必然会出现问题，如果是两个角色，我很好奇业务架构师是一个职位吗？是在某个行业深耕多年有技术背景的业务分析师？","like_count":2,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485330,"discussion_content":"业务架构师和技术架构师都是一种角色，或者说职责。没有条件的话，企业没有架构师，开发兼；有条件的话，有架构师同时兼这两个角色；条件很好的话，不同的人担任这个角色","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582866147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180187,"user_name":"淘淘","can_delete":false,"product_type":"c1","uid":1005571,"ip_address":"","ucode":"D86F2210FDE01B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/03/677cfe10.jpg","comment_is_top":false,"comment_ctime":1582207089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10172141681","product_id":100046301,"comment_content":"没有思考就直接购买了","like_count":2},{"had_liked":false,"id":179994,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1068867,"ip_address":"","ucode":"955B2859ADD1AE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/43/d6bbab7c.jpg","comment_is_top":false,"comment_ctime":1582161368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10172095960","product_id":100046301,"comment_content":"牛逼，必须支持庆友哥","like_count":2},{"had_liked":false,"id":252765,"user_name":"萧","can_delete":false,"product_type":"c1","uid":1229143,"ip_address":"","ucode":"0C2239867AFF5F","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/57/27de274f.jpg","comment_is_top":false,"comment_ctime":1602481796,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5897449092","product_id":100046301,"comment_content":"架构概览<br>为什么需要架构<br>    在系统的演进过程中，内部变的复杂，不易于理解。架构就是为了解决复杂性，通过组织让系统高度有序，能够不断的扩展，满足业务和技术的变化。<br>架构的基本手段<br>分：将系统拆分为各个子系统、模块、组件<br>合：基于业务流程和技术手段，把各个组件有机整合在一起<br>架构的分类<br>    业务的复杂性可分为人的理解复杂性和机器复杂度<br>人的理解复杂性：能够清楚这个系统的业务流程和模块之间的关联，便于编写代码<br>业务架构：讲清楚核心业务的处理流程，定义各个业务模块的相互关系，从概念层次帮助我们理解系统面临哪些问题以及如何处理<br>应用架构：讲清楚系统内部是如何组织的，有哪些应用，相互之间是怎么调用的，从逻辑层面帮助我们理解系统内部是如何分工和协作的<br>机器的复杂性：系统能够水平扩展，支持硬件容错，保证系统的高性能和高可用<br>技术架构：讲清楚系统由难写硬件、操作系统和中间件组成，他们是如何和我们开发的应用一起配合，应对各种异常情况，保持系统的稳定可用。从物理层面帮助我们理解系统是如何勾走的，如何解决稳定性的问题","like_count":1},{"had_liked":false,"id":229391,"user_name":"锦鲤","can_delete":false,"product_type":"c1","uid":1343717,"ip_address":"","ucode":"B9F1495E39F00A","user_header":"https://static001.geekbang.org/account/avatar/00/14/80/e5/251d89b5.jpg","comment_is_top":false,"comment_ctime":1592983295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5887950591","product_id":100046301,"comment_content":"业务架构、技术架构、部署架构","like_count":1},{"had_liked":false,"id":225334,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1591717316,"is_pvip":true,"replies":[{"id":"83596","content":"是的，这是一种比较典型的分类。数据架构之前主要就是关系数据库，不怎么强调。现在随着大数据的发展，我们关心数据有哪些格式，数据如何分布，如何流转，数据架构也越来越重视。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1592230228,"ip_address":"","comment_id":225334,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5886684612","product_id":100046301,"comment_content":"TOGAF将架构分为4种<br>1. 业务架构<br>2. 应用架构<br>3. 数据架构<br>4. 技术架构","like_count":2,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497808,"discussion_content":"是的，这是一种比较典型的分类。数据架构之前主要就是关系数据库，不怎么强调。现在随着大数据的发展，我们关心数据有哪些格式，数据如何分布，如何流转，数据架构也越来越重视。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592230228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206054,"user_name":"陈政璋","can_delete":false,"product_type":"c1","uid":1220034,"ip_address":"","ucode":"168857D7414E5C","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/c2/d35f89b0.jpg","comment_is_top":false,"comment_ctime":1586780873,"is_pvip":true,"replies":[{"id":"77039","content":"这样理解也可以，但偏简单化。<br><br>业务架构是纯粹站在业务的角度，对业务进行分解和重新组织，不同的分解方式影响我们对业务的理解，以及后续的业务的扩展和重用能力。<br><br>应用架构是站在系统如何分解和组织的角度，它和业务和技术都有关系，有些和技术有关，比如BS还是CS，要不要网关，要不要把短信发送独立包装成服务方便调用等；当然更多地是和业务有关，比如订单服务针对订单业务，商品服务针对商品业务，当然业务模块和应用也不是1对1的关系，通常来说，业务模块的粒度比应用要大一点，但也有时候，一个应用包含多个业务的内容，比如一个管理后台的应用，就包含多个业务的后台。<br><br>架构师通过业务架构和产品经理和业务方沟通，对于开发来说，当然是应用架构更具体一些。<br><br>业务架构和应用架构是从不同角度看系统，虽然应用架构受业务架构的影响很大，但不能简单认为应用架构是业务架构的细化，它也有相对独立的一面。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1586834096,"ip_address":"","comment_id":206054,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5881748169","product_id":100046301,"comment_content":"老师你好对于业务架构和应用架构是否可以这么理解:一个是概要设计一个是详细设计。业务架构只是说明了模块以及模块关系，应用架构还说明了模块间通讯的具体方式，应用架构是业务架构的进一步细化。","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491653,"discussion_content":"这样理解也可以，但偏简单化。\n\n业务架构是纯粹站在业务的角度，对业务进行分解和重新组织，不同的分解方式影响我们对业务的理解，以及后续的业务的扩展和重用能力。\n\n应用架构是站在系统如何分解和组织的角度，它和业务和技术都有关系，有些和技术有关，比如BS还是CS，要不要网关，要不要把短信发送独立包装成服务方便调用等；当然更多地是和业务有关，比如订单服务针对订单业务，商品服务针对商品业务，当然业务模块和应用也不是1对1的关系，通常来说，业务模块的粒度比应用要大一点，但也有时候，一个应用包含多个业务的内容，比如一个管理后台的应用，就包含多个业务的后台。\n\n架构师通过业务架构和产品经理和业务方沟通，对于开发来说，当然是应用架构更具体一些。\n\n业务架构和应用架构是从不同角度看系统，虽然应用架构受业务架构的影响很大，但不能简单认为应用架构是业务架构的细化，它也有相对独立的一面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586834096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2765181,"avatar":"","nickname":"Geek_a07ad3","note":"","ucode":"2B0AC227A8F109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394561,"discussion_content":"这个回答把业务架构和应用架构的关联和区分讲的更透彻和直白，感谢~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631937301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2057892,"avatar":"","nickname":"光通天下","note":"","ucode":"26D911717338CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355001,"discussion_content":"看到这个回答里的业务和服务的说法，才算是明白了业务架构和应用架构的区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615374273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205651,"user_name":"Robin康F","can_delete":false,"product_type":"c1","uid":1962437,"ip_address":"","ucode":"618F8686D1231D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJyLCPnVq4gKMN5jPcd9wVVEXtZMibCNAkLrJf4uZKdV40Nelb3uPtCETfuw5hbbC693sUHQpRUMiaA/132","comment_is_top":false,"comment_ctime":1586695984,"is_pvip":false,"replies":[{"id":"76859","content":"应用架构不能归到业务架构，它承业务架构，启技术架构，对开发来说，他和应用架构关系最密切。有些应用架构和业务没有关系，比如网关，它也是一个应用，用于连接前端和后端，但它处理系统级功能有关，和业务功能无关。<br>如果说对于开发来说，最重要的是逻辑能力，那对于架构师来说最重要的是抽象思维能力，然后是学习能力（技术和业务）和平衡取舍能力。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1586702291,"ip_address":"","comment_id":205651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881663280","product_id":100046301,"comment_content":"王老师，你好，我们一般说架构师都是业务架构和技术架构，是不是应用架构可以归为业务架构中？第二个问题，假如架构师最核心的3点能力，排个序，应该是怎么样的？感谢相遇","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491542,"discussion_content":"应用架构不能归到业务架构，它承业务架构，启技术架构，对开发来说，他和应用架构关系最密切。有些应用架构和业务没有关系，比如网关，它也是一个应用，用于连接前端和后端，但它处理系统级功能有关，和业务功能无关。\n如果说对于开发来说，最重要的是逻辑能力，那对于架构师来说最重要的是抽象思维能力，然后是学习能力（技术和业务）和平衡取舍能力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586702291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184816,"user_name":"睡不着的史先生","can_delete":false,"product_type":"c1","uid":1192542,"ip_address":"","ucode":"E00E6C43F340D9","user_header":"https://static001.geekbang.org/account/avatar/00/12/32/5e/4827557b.jpg","comment_is_top":false,"comment_ctime":1583412687,"is_pvip":false,"replies":[{"id":"71485","content":"平台是指它帮你做了基础的复杂工作，比如平台提供一个下单服务，那对于页面来说，只要收集下单需要哪些信息，调用平台的下单服务就可以，不需要和订单表，库存表，商品表一一打交道。<br>windows操作系统就是一个平台，上层应用不用和底层硬件直接交互。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1583466955,"ip_address":"","comment_id":184816,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878379983","product_id":100046301,"comment_content":"老师，平台化到底是什么意思？是提供前端页面的？就叫平台化吗？恳请老师回答一下","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486133,"discussion_content":"平台是指它帮你做了基础的复杂工作，比如平台提供一个下单服务，那对于页面来说，只要收集下单需要哪些信息，调用平台的下单服务就可以，不需要和订单表，库存表，商品表一一打交道。\nwindows操作系统就是一个平台，上层应用不用和底层硬件直接交互。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583466955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180884,"user_name":"Joy","can_delete":false,"product_type":"c1","uid":1142431,"ip_address":"","ucode":"D5DB8F783C1A7E","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/9f/4a7d4d62.jpg","comment_is_top":false,"comment_ctime":1582435472,"is_pvip":false,"replies":[{"id":"70197","content":"对外部透明的，意思是对外部来说，子系统就是黑盒子，透明是啥都看不到，不是啥都看到","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582442211,"ip_address":"","comment_id":180884,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5877402768","product_id":100046301,"comment_content":"子系统的复杂性对外部是透明的，外部不用关心。老师，这个描述不对吧","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484831,"discussion_content":"对外部透明的，意思是对外部来说，子系统就是黑盒子，透明是啥都看不到，不是啥都看到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582442211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2417306,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e2/9a/9ff4869c.jpg","nickname":"阔别","note":"","ucode":"E37411D178B604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377233,"discussion_content":"这个词我也很疑惑，透明应该是什么都能看到 啊！照这个逻辑无知那应该是无所不知了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622555526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1966324,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/00/f4/e9f3688f.jpg","nickname":"zero","note":"","ucode":"8AE646B373644A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278457,"discussion_content":"找到答案了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591188972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053532,"avatar":"","nickname":"亮灯","note":"","ucode":"C06505ED58A0E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182721,"discussion_content":"记得刚学程序时，就有对透明一词的解释～\n第一种理解：”能看见一个容器里面的详细、具体的内容“\n第二种理解： ”整个容器都是透明的，什么也看不见呢？“\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582451769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180845,"user_name":"Better me","can_delete":false,"product_type":"c1","uid":1261959,"ip_address":"","ucode":"CADF08D357489A","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","comment_is_top":false,"comment_ctime":1582427708,"is_pvip":true,"replies":[{"id":"70172","content":"业务系统开发也有架构在里面，你需要跳出来，关注系统整体的结构是怎么样，而不仅仅是具体的业务功能逻辑。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582431440,"ip_address":"","comment_id":180845,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877395004","product_id":100046301,"comment_content":"老师您好，在平常项目开发过程中架构属于全局性的概念，而现阶段纯粹的业务开发导致并没有什么机会去接触架构实践，这种情况我们应该如何在业务开发中深入架构并学习架构相关的东西","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484812,"discussion_content":"业务系统开发也有架构在里面，你需要跳出来，关注系统整体的结构是怎么样，而不仅仅是具体的业务功能逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582431440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356838,"user_name":"杜秀清","can_delete":false,"product_type":"c1","uid":2952514,"ip_address":"上海","ucode":"4D33DD69E8D238","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGiahPncXAMXlRibCVapHxib4V90Pxa56QQr6iatHmHn77YibSibWhdBe9YKxrD5ria9ZI4JfFjD1SecAmg/132","comment_is_top":false,"comment_ctime":1662627740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662627740","product_id":100046301,"comment_content":"物理架构，或叫部署架构。有的也有运行架构、开发架构","like_count":0},{"had_liked":false,"id":345579,"user_name":"守望者","can_delete":false,"product_type":"c1","uid":2574101,"ip_address":"","ucode":"4CE4DB4CCE1FCA","user_header":"https://static001.geekbang.org/account/avatar/00/27/47/15/e7a9bf5f.jpg","comment_is_top":false,"comment_ctime":1652411731,"is_pvip":false,"replies":[{"id":"126462","content":"赞一个，不写代码的文科生对架构有热情。你可以多从业务角度总体了解一个系统，关注它的产品结构和业务架构，大的结构是怎么划分的，模块的分层和相互支撑关系是怎么样的。","user_name":"作者回复","user_name_real":"编辑","uid":"1268522","ctime":1653390055,"ip_address":"","comment_id":345579,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1652411731","product_id":100046301,"comment_content":"对业务架构、应用架构、技术架构讲得很清晰，我一个文科负责做点项目的都理解了，请问，对于不会写代码的，如果想学点架构，应该怎么学比较好呢？ 我主要是做甲方，代表单位负责项目的，执行有乙方技术公司。谢谢。","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573403,"discussion_content":"赞一个，不写代码的文科生对架构有热情。你可以多从业务角度总体了解一个系统，关注它的产品结构和业务架构，大的结构是怎么划分的，模块的分层和相互支撑关系是怎么样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653390055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318230,"user_name":"oops","can_delete":false,"product_type":"c1","uid":1102831,"ip_address":"","ucode":"1DEC23A503F8A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/ef/9c5e695b.jpg","comment_is_top":false,"comment_ctime":1635211165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635211165","product_id":100046301,"comment_content":"数据架构  数据模型抽象，服务间数据流 ","like_count":0},{"had_liked":false,"id":311257,"user_name":"兔子先生","can_delete":false,"product_type":"c1","uid":2652181,"ip_address":"","ucode":"9303B568DFAF34","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/laZ13g1QHoYX3Q72a8t86zIaOAY1eAkicRu9wNcTO14Bc2ocnaMxJGzsuSN4tRbrbuAXKVfYB6w72XvXl8KhvAw/132","comment_is_top":false,"comment_ctime":1631144780,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1631144780","product_id":100046301,"comment_content":"分类有业务架构，应用架构，技术架构，安全架构，数据架构，运维架构","like_count":0},{"had_liked":false,"id":296313,"user_name":"北极的大企鹅","can_delete":false,"product_type":"c1","uid":1045577,"ip_address":"","ucode":"8935346D08E109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","comment_is_top":false,"comment_ctime":1622895501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622895501","product_id":100046301,"comment_content":"已读","like_count":0},{"had_liked":false,"id":295132,"user_name":"小星","can_delete":false,"product_type":"c1","uid":1704326,"ip_address":"","ucode":"09C3FAF8532EF9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/01/86/122c6550.jpg","comment_is_top":false,"comment_ctime":1622258964,"is_pvip":false,"replies":[{"id":"107443","content":"1. 一开始不建议服务拆细，宁可粒度粗一点<br>2. 随着业务领域变得复杂，对现有服务再拆分，比如一开始积分功能放在用户服务里，后面积分相关的业务变成重点，有各种复杂的积分规则，业务上有积分商城等，这个时候积分本身变成一个独立领域，可以从用户服务里拆分出来。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1622714653,"ip_address":"","comment_id":295132,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622258964","product_id":100046301,"comment_content":"想问个问题，如果一个系统拆分的服务过多或者，一个服务随着业务场景的复杂而变得更加臃肿该如何处理呢","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520960,"discussion_content":"1. 一开始不建议服务拆细，宁可粒度粗一点\n2. 随着业务领域变得复杂，对现有服务再拆分，比如一开始积分功能放在用户服务里，后面积分相关的业务变成重点，有各种复杂的积分规则，业务上有积分商城等，这个时候积分本身变成一个独立领域，可以从用户服务里拆分出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622714653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286541,"user_name":"林铭铭","can_delete":false,"product_type":"c1","uid":1068499,"ip_address":"","ucode":"AB392BEE7CD6A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/d3/67bdcca9.jpg","comment_is_top":false,"comment_ctime":1617364595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617364595","product_id":100046301,"comment_content":"产品架构，信息架构","like_count":0},{"had_liked":false,"id":284923,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1616548577,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616548577","product_id":100046301,"comment_content":"别看只有20几节，看了好久都没有看完。借着极客时间学习计划的推行，我要重新学习一下，每一次看都会被不同的关注点的所吸引。这么说来多看几遍还是有很大好处的。<br><br>========<br>我觉得架构是保证系统持续稳定运行的一种手段。这里的关键字是【稳定】：一、在面对各种不同的变化，不管是功能性需求的变化，还是非功能性需求的变化，架构都需要能够从容的应对；二、在面对各种不环境下的问题时，仍然能够持续可用；<br><br>那为了解构这个【稳定】，从视图的逻辑出发，分别从业务架构层面进行设计、从应用架构层面进行设计、从技术架构层面去进行设计，各个方面通力协作，这些都一系列的手段，目标就把系统打造成一个稳定可用的系统。","like_count":0},{"had_liked":false,"id":251059,"user_name":"Presley","can_delete":false,"product_type":"c1","uid":1215219,"ip_address":"","ucode":"D8F125835F4903","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/f3/7c89d00e.jpg","comment_is_top":false,"comment_ctime":1601347483,"is_pvip":false,"replies":[{"id":"92442","content":"找事物的共性，形成通用方案。可以多看多画架构图。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1602578292,"ip_address":"","comment_id":251059,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1601347483","product_id":100046301,"comment_content":"老师，请问下，抽象能力很重要，如何有意识地去锻炼？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506377,"discussion_content":"找事物的共性，形成通用方案。可以多看多画架构图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602578292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1206187,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/ab/fcf0cec4.jpg","nickname":"寒光","note":"","ucode":"061BE413595F21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337640,"discussion_content":"老师说得很好，实践出真知。拳不离手，曲不离口。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608996179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227887,"user_name":"寒光","can_delete":false,"product_type":"c1","uid":1206187,"ip_address":"","ucode":"061BE413595F21","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/ab/fcf0cec4.jpg","comment_is_top":false,"comment_ctime":1592521590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592521590","product_id":100046301,"comment_content":"设计模式就是为了分别管理各种场景下的复杂性。以前觉得builder模式和factory模式差不多，通过老师的讲解，瞬间顿悟😀","like_count":0},{"had_liked":false,"id":217528,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1589526509,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589526509","product_id":100046301,"comment_content":"平时主要的语言是php ,也写过一段时间go, 数据库比较熟的主要mysql,redis。 mongo elastic 也用过，但只是停留在使用层次，没深入研究过。现在在一家公司做技术负责人，因为来的早，老板比较信任，也能决定产品走向,自己也当半个产品用，目前带着30来人的小团队。现在每天的日活越来越大，希望老师能指点一下在技术上的走向","like_count":0},{"had_liked":false,"id":216067,"user_name":"ascend","can_delete":false,"product_type":"c1","uid":1268755,"ip_address":"","ucode":"4F63892FB42590","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/13/d1a75b2e.jpg","comment_is_top":false,"comment_ctime":1589180318,"is_pvip":false,"replies":[{"id":"79971","content":"正解，做架构，要从业务出发，考虑技术实现，过度设计和设计不足都不可取。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1589188732,"ip_address":"","comment_id":216067,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589180318","product_id":100046301,"comment_content":"曾经听别人说架构是找到业务与技术的平衡点，这样理解不知道是否正确","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494658,"discussion_content":"正解，做架构，要从业务出发，考虑技术实现，过度设计和设计不足都不可取。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589188732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205432,"user_name":"睡不着的史先生","can_delete":false,"product_type":"c1","uid":1192542,"ip_address":"","ucode":"E00E6C43F340D9","user_header":"https://static001.geekbang.org/account/avatar/00/12/32/5e/4827557b.jpg","comment_is_top":false,"comment_ctime":1586616122,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586616122","product_id":100046301,"comment_content":"业务架构是从概念的角度定义系统，就是一个完整的系统由哪几块业务组成；应用架构从逻辑的角度定义系统，就是不同的业务又各有自己的应用，这些应用通过交互一起完成业务场景；技术架构从物理的角度定义系统，即完成这个系统需要哪些组件","like_count":0},{"had_liked":false,"id":205375,"user_name":"墨池","can_delete":false,"product_type":"c1","uid":1929250,"ip_address":"","ucode":"7379C75907549A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/70/22/8f0613f6.jpg","comment_is_top":false,"comment_ctime":1586601705,"is_pvip":false,"replies":[{"id":"76844","content":"很好的问题，数据架构和应用架构并列的，处于同一层次，包括数据都有哪些形式（如文档，数据库等），数据是怎么分布的（如分库分表，主从等），传统的数据架构比较简单，主要指关系型数据库的表结构，现在有NOSQL，大数据参与进来，数据架构的内涵逐渐丰富。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1586697838,"ip_address":"","comment_id":205375,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586601705","product_id":100046301,"comment_content":"老师好，感谢您，让我买到一本好书。请教您两个问题。（1）数据架构又是指什么架构？和业务架构，应用架构，技术架构的关系是什么？（2）架构本身又分层的，有企业级，","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491465,"discussion_content":"很好的问题，数据架构和应用架构并列的，处于同一层次，包括数据都有哪些形式（如文档，数据库等），数据是怎么分布的（如分库分表，主从等），传统的数据架构比较简单，主要指关系型数据库的表结构，现在有NOSQL，大数据参与进来，数据架构的内涵逐渐丰富。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586697838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201202,"user_name":"厕所看C","can_delete":false,"product_type":"c1","uid":1048888,"ip_address":"","ucode":"344DC9E80F0F9D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/38/554ece99.jpg","comment_is_top":false,"comment_ctime":1585732837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585732837","product_id":100046301,"comment_content":"老师高屋建瓴，之前自己脑海中只是有些模糊的概念，老师都给理清楚了，谢谢老师~","like_count":0},{"had_liked":false,"id":200023,"user_name":"Geek_5bf6b2","can_delete":false,"product_type":"c1","uid":1300633,"ip_address":"","ucode":"37AF849C0300A6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqTzWvmWF2h0Nw3xaCHlFaprgYPfBjiaBjXaDN1OmuicHLyCRpIjdI1EuAaA8fXTn3btBCW1BFaMs9Q/132","comment_is_top":false,"comment_ctime":1585533625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585533625","product_id":100046301,"comment_content":"我之前听说过“数据架构”这个词，对应的是数据架构师职位","like_count":0},{"had_liked":false,"id":197446,"user_name":"jun","can_delete":false,"product_type":"c1","uid":1899314,"ip_address":"","ucode":"3A9633CA1FE72E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/LalJD9ruYQI5zVM1GOCe4PjunIbbeeMiacFHC4TAj0DBVeialKt3vRCLs9dxn1vYXvfp8pgcyaeEQkh1nde1JoBQ/132","comment_is_top":false,"comment_ctime":1585378759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585378759","product_id":100046301,"comment_content":"架构的本质就是：稳定、有序、可扩展、可复用； <br>要做到有序，就得先拆后合，将个业务流程属于的业务领域充分拆开；<br>架构的分类包括：业务架构、应用架构、技术架构；","like_count":0},{"had_liked":false,"id":197259,"user_name":"MrCubic","can_delete":false,"product_type":"c1","uid":1143176,"ip_address":"","ucode":"E0B78720596CAB","user_header":"https://static001.geekbang.org/account/avatar/00/11/71/88/933904e6.jpg","comment_is_top":false,"comment_ctime":1585365862,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585365862","product_id":100046301,"comment_content":"感谢老师，对业务架构、应用架构和技术架构有了一定的认识。","like_count":0},{"had_liked":false,"id":193262,"user_name":"睡不着的史先生","can_delete":false,"product_type":"c1","uid":1192542,"ip_address":"","ucode":"E00E6C43F340D9","user_header":"https://static001.geekbang.org/account/avatar/00/12/32/5e/4827557b.jpg","comment_is_top":false,"comment_ctime":1584887602,"is_pvip":false,"replies":[{"id":"73737","content":"逻辑最好的例子就是数学和物理定理证明，包含一步步的推导。业务架构只是划分大的业务块块，我们无法知道系统处理过程，要明确系统有哪些应用，以及应用之间的相互关系，才能更清晰知道系统是如何处理的。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1584934501,"ip_address":"","comment_id":193262,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584887602","product_id":100046301,"comment_content":"老师，问一个根架构无关的东西哈。就是，你怎么理解概念，你怎么理解逻辑，为什么业务架构就是从概念的角度理解？为什么应用架构就是从逻辑的角度理解？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488527,"discussion_content":"逻辑最好的例子就是数学和物理定理证明，包含一步步的推导。业务架构只是划分大的业务块块，我们无法知道系统处理过程，要明确系统有哪些应用，以及应用之间的相互关系，才能更清晰知道系统是如何处理的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584934501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192440,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1584850880,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584850880","product_id":100046301,"comment_content":"按照4+1模型，还有应该有运行时架构，甚至扩展点，还应该有数据架构和代码架构","like_count":0},{"had_liked":false,"id":189235,"user_name":"充满希望的一天","can_delete":false,"product_type":"c1","uid":1907531,"ip_address":"","ucode":"AEBE5B5072F964","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1b/4b/33f5a948.jpg","comment_is_top":false,"comment_ctime":1584491931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584491931","product_id":100046301,"comment_content":"基础架构？","like_count":0},{"had_liked":false,"id":188361,"user_name":"志文","can_delete":false,"product_type":"c1","uid":1056111,"ip_address":"","ucode":"27547A5FC2A90D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/6f/0e552a48.jpg","comment_is_top":false,"comment_ctime":1584344684,"is_pvip":false,"replies":[{"id":"72723","content":"代码里的职权？<br>什么意思呢，这篇文章好像没提到","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1584364886,"ip_address":"","comment_id":188361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584344684","product_id":100046301,"comment_content":"老师，代码里的职权到底是什么意思？很多地方提到就是get不到点","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487389,"discussion_content":"代码里的职权？\n什么意思呢，这篇文章好像没提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584364886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188144,"user_name":"250ZH","can_delete":false,"product_type":"c1","uid":1457901,"ip_address":"","ucode":"F9B4FD1E4E7C5C","user_header":"https://static001.geekbang.org/account/avatar/00/16/3e/ed/e154de2e.jpg","comment_is_top":false,"comment_ctime":1584324338,"is_pvip":true,"replies":[{"id":"72823","content":"架构需要逐渐演变，每次改造时，也要提前多考虑半步。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1584419570,"ip_address":"","comment_id":188144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584324338","product_id":100046301,"comment_content":"一个系统的架构是在该系统实现之前就确定好并在它消亡之前不再变化，还是在这个系统的生命周期里不断变化调整呢？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487348,"discussion_content":"架构需要逐渐演变，每次改造时，也要提前多考虑半步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584419570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187372,"user_name":"gevin","can_delete":false,"product_type":"c1","uid":1005862,"ip_address":"","ucode":"B5AD68F1884A1F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/26/1015d573.jpg","comment_is_top":false,"comment_ctime":1584092991,"is_pvip":true,"replies":[{"id":"72322","content":"对于设计模式，我认为它的粒度比较小，是类之间的关系定义，还不适合称之为架构，当然大家可以把设计模式当做学习架构的很好起点。<br><br>关于业务架构和应用架构的区别，我举个例子，比如订单系统生成订单后，接下来就是交给履单系统，在业务架构里，我们简单说订单系统&quot;同步订单&quot;给履单系统就可以，在应用架构里，具体同步的方式我们就要给出来，可以是订单系统同步调用履单系统，也可以是履单系统主动到订单系统来定时拉取，也可以是在底层数据层面同步，也可以是通过消息系统。<br>业务架构表意就可以，理解业务架构不需要技术背景，应用架构还要表达形式，让我们可以具体理解过程，了解它的逻辑。<br>","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1584098800,"ip_address":"","comment_id":187372,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584092991","product_id":100046301,"comment_content":"看完本文有2个问题。<br><br>1. 文中的设计模式的例子，我通常沟通时称之为“代码架构”，如果按本文的说法，是属于应用架构么？<br><br>2. 如何界定业务架构和应用架构的边界？<br>按我的认识，做需求分析时，会逐渐梳理出业务架构，业务架构随着进一步的梳理和提炼，会从最初贴合用户原始需求的样子，逐渐转化成对开发者越来越友好的样子，这个过程会逐渐考虑基础业务模块、通用业务模块，向中间件、基础设施等涉及开发的内容靠拢，也就是逐渐转型到文中说的“应用架构”了吧？<br>那么，“业务架构”和“应用架构”应该如何界定，它们有没有一个“度”？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487091,"discussion_content":"对于设计模式，我认为它的粒度比较小，是类之间的关系定义，还不适合称之为架构，当然大家可以把设计模式当做学习架构的很好起点。\n\n关于业务架构和应用架构的区别，我举个例子，比如订单系统生成订单后，接下来就是交给履单系统，在业务架构里，我们简单说订单系统&amp;quot;同步订单&amp;quot;给履单系统就可以，在应用架构里，具体同步的方式我们就要给出来，可以是订单系统同步调用履单系统，也可以是履单系统主动到订单系统来定时拉取，也可以是在底层数据层面同步，也可以是通过消息系统。\n业务架构表意就可以，理解业务架构不需要技术背景，应用架构还要表达形式，让我们可以具体理解过程，了解它的逻辑。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584098800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185950,"user_name":"jun","can_delete":false,"product_type":"c1","uid":1899314,"ip_address":"","ucode":"3A9633CA1FE72E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/LalJD9ruYQI5zVM1GOCe4PjunIbbeeMiacFHC4TAj0DBVeialKt3vRCLs9dxn1vYXvfp8pgcyaeEQkh1nde1JoBQ/132","comment_is_top":false,"comment_ctime":1583730281,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583730281","product_id":100046301,"comment_content":"确认放弃笔记？ 放弃后所记笔记将不保留。 架构思维导图https:&#47;&#47;www.processon.com&#47;view&#47;link&#47;5e51378ce4b0c037b5f9d1e3#map","like_count":0,"discussions":[{"author":{"id":2417306,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e2/9a/9ff4869c.jpg","nickname":"阔别","note":"","ucode":"E37411D178B604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377265,"discussion_content":"还卖钱?看个书是来赚钱的吗?你的笔记快比书贵了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622563892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185757,"user_name":"码农的荒岛求生","can_delete":false,"product_type":"c1","uid":1369202,"ip_address":"","ucode":"68969F9B6C04D6","user_header":"https://static001.geekbang.org/account/avatar/00/14/e4/72/c034db7f.jpg","comment_is_top":false,"comment_ctime":1583675604,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583675604","product_id":100046301,"comment_content":"不错","like_count":0},{"had_liked":false,"id":185322,"user_name":"doannado","can_delete":false,"product_type":"c1","uid":1169379,"ip_address":"","ucode":"16CF3E7C2E0827","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/e3/7e07ae99.jpg","comment_is_top":false,"comment_ctime":1583561292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583561292","product_id":100046301,"comment_content":"20200307 人 系统 机器 系统无序到有序 业务架构  应用架构  技术架构","like_count":0},{"had_liked":false,"id":184456,"user_name":"栗芳凯","can_delete":false,"product_type":"c1","uid":1027274,"ip_address":"","ucode":"28D2A084918332","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/ca/fc35a685.jpg","comment_is_top":false,"comment_ctime":1583319834,"is_pvip":false,"replies":[{"id":"71346","content":"谢谢你的建议，这在专栏的后面会有介绍","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1583326738,"ip_address":"","comment_id":184456,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583319834","product_id":100046301,"comment_content":"老师，能把架构师每天要做的具体工作、权利和职责列出来吗？个人感觉这样也能从另一个角度了解什么是架构。","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486020,"discussion_content":"谢谢你的建议，这在专栏的后面会有介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583326738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183052,"user_name":"sakyawang","can_delete":false,"product_type":"c1","uid":1099856,"ip_address":"","ucode":"423947EA9BF38D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/50/ff545864.jpg","comment_is_top":false,"comment_ctime":1582942961,"is_pvip":false,"replies":[{"id":"70823","content":"差不多，最终目标是你说的把大泥团变为结构清晰易扩展的系统，其他的都是手段，符合人的理解是第一位。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582950300,"ip_address":"","comment_id":183052,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582942961","product_id":100046301,"comment_content":"“分”是功能内聚和边界划分，遵循面向对象“单一职责原则”<br>“合”是在业务层面进行横向分层和南北向接口设计<br>经过功能拆分聚合之后，在经过业务分层依赖分解之后系统从大泥团变成具有清晰结构和依赖关系的可扩展可维护的系统。<br>老师 关于“分”与“合”这么理解对么？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485548,"discussion_content":"差不多，最终目标是你说的把大泥团变为结构清晰易扩展的系统，其他的都是手段，符合人的理解是第一位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582950300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182627,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1582817616,"is_pvip":false,"replies":[{"id":"70686","content":"这个理解差不多","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582861313,"ip_address":"","comment_id":182627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582817616","product_id":100046301,"comment_content":"理解了业务架构，对系统就有了宏观的了解<br>理解了应用架构，就可以上手写代码了，<br>理解了技术架构，就可以让系统运作起来<br><br>老师，这样理解对么～","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485391,"discussion_content":"这个理解差不多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582861313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181619,"user_name":"刘杨","can_delete":false,"product_type":"c1","uid":1088931,"ip_address":"","ucode":"9EA64E1BAF3BD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/a3/827e8d49.jpg","comment_is_top":false,"comment_ctime":1582598599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582598599","product_id":100046301,"comment_content":"业务架构师应该多数是都是领域专家，用于衔接产品经理，技术架构师，程序员，并整理出团队沟通中的统一语言。只是多数团队中可能就是项目经理或者技术架构师兼职。","like_count":0},{"had_liked":false,"id":181615,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1216016,"ip_address":"","ucode":"C34D4C44DBCE03","user_header":"https://static001.geekbang.org/account/avatar/00/12/8e/10/10092bb1.jpg","comment_is_top":false,"comment_ctime":1582597816,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1582597816","product_id":100046301,"comment_content":"老师的理解和4+1架构视图模型不谋而合，准备好这几种结构视图，整体的轮廓就清晰了","like_count":0,"discussions":[{"author":{"id":2417306,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e2/9a/9ff4869c.jpg","nickname":"阔别","note":"","ucode":"E37411D178B604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377266,"discussion_content":"4+1是什么啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622563988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1216016,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8e/10/10092bb1.jpg","nickname":"Luke","note":"","ucode":"C34D4C44DBCE03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2417306,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e2/9a/9ff4869c.jpg","nickname":"阔别","note":"","ucode":"E37411D178B604","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380909,"discussion_content":"你百度一下吧，4+1架构视图，就是几种视角下的软件架构设计图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624788461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":377266,"ip_address":""},"score":380909,"extra":""}]}]},{"had_liked":false,"id":181565,"user_name":"杨先森","can_delete":false,"product_type":"c1","uid":1878523,"ip_address":"","ucode":"07BED6D1E31830","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a9/fb/e8f2eff4.jpg","comment_is_top":false,"comment_ctime":1582559770,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582559770","product_id":100046301,"comment_content":"架构分业务架构 应用架构 技术架构这三类，感觉挺有层次感的，各司其职。之前总是想的是技术架构，其实业务决定了技术的走向。老师解释的非常好，谢谢老师","like_count":0},{"had_liked":false,"id":181116,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1582481444,"is_pvip":false,"replies":[{"id":"70232","content":"分布式概念更大，微服务属于分布式的一种。分布式概念太大了，微服务作为一种架构理念和方式，更明确和有针对性。我觉得，这两个更类似是马和白马的关系，谈不上道与术的关系。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582500557,"ip_address":"","comment_id":181116,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582481444","product_id":100046301,"comment_content":"老师您好，我看很多文章说分布式是术，微服务架构是道，但是从我的理解是分布式是道，微服务架构是术，不知道老师是怎么理解的？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484924,"discussion_content":"分布式概念更大，微服务属于分布式的一种。分布式概念太大了，微服务作为一种架构理念和方式，更明确和有针对性。我觉得，这两个更类似是马和白马的关系，谈不上道与术的关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582500557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180947,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1582447860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582447860","product_id":100046301,"comment_content":"熵增这个类比挺有意思","like_count":0},{"had_liked":false,"id":180675,"user_name":"卫江","can_delete":false,"product_type":"c1","uid":1101226,"ip_address":"","ucode":"DE2F7A6916F1A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","comment_is_top":false,"comment_ctime":1582362442,"is_pvip":false,"replies":[{"id":"70103","content":"这就是我在开篇词讲的架构学习比较碎片化，没有形成体系。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582374769,"ip_address":"","comment_id":180675,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582362442","product_id":100046301,"comment_content":"之前看了很多架构相关的知识，但是很少能很完整的描述的，比如有介绍设计原则，设计模式，重构，分布式架构，大部分书都是讲某一方面让我很疑惑，很难形成对于架构的全貌，但是通过老师的讲解，学习到其实它们都是架构的一部分并能把它们整合起来，感谢。","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484754,"discussion_content":"这就是我在开篇词讲的架构学习比较碎片化，没有形成体系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582374769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180337,"user_name":"乐乐","can_delete":false,"product_type":"c1","uid":1343728,"ip_address":"","ucode":"3198CDF5702AEF","user_header":"https://static001.geekbang.org/account/avatar/00/14/80/f0/69ff7990.jpg","comment_is_top":false,"comment_ctime":1582259175,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1582259175","product_id":100046301,"comment_content":"我就是做B端和G端业务的同学，业务复杂度很高，不过确实不太会表达出技术难度","like_count":0,"discussions":[{"author":{"id":2417306,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e2/9a/9ff4869c.jpg","nickname":"阔别","note":"","ucode":"E37411D178B604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377267,"discussion_content":"C端吧, 妹子有对象吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622564120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180328,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1582257195,"is_pvip":true,"replies":[{"id":"70035","content":"按照比较规范的TOGAF架构分法，上面确实还有企业架构，不过这个是老板定，架构师到不了这个层面。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582277669,"ip_address":"","comment_id":180328,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582257195","product_id":100046301,"comment_content":"对于内部系统来说，业务架构再往上还有一层，可以叫管理架构。管理架构决定业务应该怎么走，将来可能怎么走，内部怎么协作。深入思考和洞察这些，有利于提前对业务可能发生的变化做一些预判","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484610,"discussion_content":"按照比较规范的TOGAF架构分法，上面确实还有企业架构，不过这个是老板定，架构师到不了这个层面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582277669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180221,"user_name":"天災","can_delete":false,"product_type":"c1","uid":1333996,"ip_address":"","ucode":"A43B3DF4313F36","user_header":"https://static001.geekbang.org/account/avatar/00/14/5a/ec/1f4ed642.jpg","comment_is_top":false,"comment_ctime":1582211557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582211557","product_id":100046301,"comment_content":"必须赞一个","like_count":0},{"had_liked":false,"id":180208,"user_name":"Rory","can_delete":false,"product_type":"c1","uid":1021565,"ip_address":"","ucode":"AB70F88244B087","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/7d/7d9b04a2.jpg","comment_is_top":false,"comment_ctime":1582209050,"is_pvip":false,"replies":[{"id":"70037","content":"透明这个词大家都在用，但是容易误解。<br>A对B透明，实际上表达的是，对于B来说，把A当作黑盒子看就行，透明指的是你啥都看不到。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582278183,"ip_address":"","comment_id":180208,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1582209050","product_id":100046301,"comment_content":"子系统的复杂性对外部是透明的，外部不用关心<br>—————<br>这里是 复杂性对外部不用透明，外部不关心。<br><br>我这理解正确么？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484565,"discussion_content":"透明这个词大家都在用，但是容易误解。\nA对B透明，实际上表达的是，对于B来说，把A当作黑盒子看就行，透明指的是你啥都看不到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582278183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021565,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/96/7d/7d9b04a2.jpg","nickname":"Rory","note":"","ucode":"AB70F88244B087","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180128,"discussion_content":"谢谢 意思是理解到了的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582278896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180057,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1582175263,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582175263","product_id":100046301,"comment_content":"架构的本质: 通过分，合让系统从无序变的有序","like_count":0},{"had_liked":false,"id":180040,"user_name":"四喜","can_delete":false,"product_type":"c1","uid":1071389,"ip_address":"","ucode":"C5EBED19C0F332","user_header":"https://static001.geekbang.org/account/avatar/00/10/59/1d/c89abcd8.jpg","comment_is_top":false,"comment_ctime":1582171024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582171024","product_id":100046301,"comment_content":"来得太及时了。","like_count":0},{"had_liked":false,"id":179895,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1582119028,"is_pvip":false,"replies":[{"id":"69928","content":"真爱啊，必须感谢","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582190620,"ip_address":"","comment_id":179895,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1582119028","product_id":100046301,"comment_content":"已订阅，已发朋友圈。必须支持，太有缘份了","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484442,"discussion_content":"真爱啊，必须感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582190620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1372095,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ef/bf/5172e648.jpg","nickname":"kawayi","note":"","ucode":"2B97EAF95BCA1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183289,"discussion_content":"老师多久更新一讲啊，希望可以尽快多学习一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582471137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}