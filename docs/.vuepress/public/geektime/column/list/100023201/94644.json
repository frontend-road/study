{"id":94644,"title":"工具链：什么样的工具链才能提升团队效率？","content":"<p>你好，我是winter。今天我们的主题是工具。</p><p>古语云：“工欲善其事，必先利其器”，程序员群体对工具的爱好和重视是一个悠久的传统。简单趁手的工具是程序员开发的好帮手。</p><p>但是在工程方面，工具不仅仅是简单的“趁手”即可，假如一个团队人人都自己发明几个小工具，那么后果将会是灾难性的：同一个团队的同学无法互相配合写代码，一旦有人离职，可能某一个项目就永远无法跑起来了。</p><p>所以我们今天从工程的角度谈一谈工具体系的规划。</p><h2>工具总论</h2><p>跟性能不同，工具体系并非业务结果，所以我们没法用简单的数据指标来衡量工具，它的结果更多程度是一种开发体验：帮助技术团队内的同学提升效率和体验。</p><p>作为工程体系，我们考虑工具的时候同样要遵循基本规则：现状与指标、方案、实施、结果和监控。</p><p>不过，对工具而言，指标和结果都是一种“软性指标”，也就是团队的开发效率和开发体验。这里我不太推荐把开发效率和开发体验过度数据化，我的经验是：开发效率提升n倍永远是一种臆想或者主观论断。</p><h2>工具体系的目标</h2><p>前面已经讲到，工具是为技术团队本身服务的工程体系，那么，工具的目标是什么呢？其实每一种工具的出现，必然都有一个非常具体的目标，比如npm帮助我们进行包管理，Yeoman帮助我们初始化项目模板。</p><!-- [[[read_end]]] --><p>但是这些目标是工具的目标，不是工具体系的目标。我们做一个假设，<strong>假如你是一个前端团队的工具体系负责人，现在要你来规划团队的工具体系，你会怎么做呢？</strong></p><p>如果你到社区找了一大堆工具，并且把它们要解决的问题都罗列出来，作为工具体系的目标，那就完全走上了错误的道路。</p><p>实际上，在考虑具体的工具之前，我们应该解决工具体系的“元问题”，即：我们对工具本身的要求是什么？</p><p><strong>考虑到工程行为都是团队合作，我们对工具最基本的要求就是：版本一致。</strong></p><p>只有整个团队的工具版本一致，至少要做到避免大版本差异，才能做到互相接手代码时，团队成员能够正确的使用工具开发。</p><p><strong>工具体系的另一个重要需求是：避免冲突</strong>，一些工具可能互相没有干扰，比如Yeoman和gulp，有一些工具则由社区设计了配合方案，比如webpack和babel，有一些工具，则存在着根本性冲突，如gulp和grunt。</p><p>所以，在谈及具体问题之前，我们必须要有这两个要求的解决方案。<strong>这就需要引入一个新的概念：工具链。</strong></p><p>工具链是一系列互相配合的工具，能够协作完成开发任务（注：工具链这个词最早是由C/C++程序员引入的概念，一般包含编译、链接、调试等工具）。</p><p>下面我们就来谈谈工具链的设计。</p><h2>工具体系的设计</h2><p>要想设计一个工具链，首先我们需要整理一下，前端开发大约要做哪些事，下面是我的答案：</p><ul>\n<li>初始化项目；</li>\n<li>运行和调试；</li>\n<li>测试（单元测试）；</li>\n<li>发布。</li>\n</ul><p>那么，一个前端项目的工具链，大约就会包含这些功能。一个典型的社区项目工具链可能就类似下面这样：</p><ul>\n<li>Yeoman</li>\n<li>webpack</li>\n<li>ava/nyc</li>\n<li>aws-cli</li>\n</ul><p>但是，这显然不够，我们还需要一种机制，保证团队使用的工具版本一致。</p><p>轻量级的做法是，在项目初始化模板中定义npm script并且在npm dev-dependency中规定它的版本号。</p><p>重量级的做法是，开发一个包装工具，在命令行中不直接使用命令，而使用包装过的命令。如在我之前的团队，使用的工具名为def，它规定了一些命令：</p><ul>\n<li>def init</li>\n<li>def dev</li>\n<li>def test</li>\n<li>def publish</li>\n</ul><p>这样，工具链的使用者只需指定工具链名称，就不需要知道项目具体使用了哪些工具，这样只需要专注自己的需求就够了。</p><p>同时，统一的命令行入口，意味着整个团队不需要互相学习工具链，就可以接手别人的项目开发。</p><p>在稍微大一些的团队内部，往往会需要不止一种开发模式，如移动开发和桌面开发，这样，所需要的工具链也不一样，因此我们需要多条工具链。</p><p>要想开发新的工具链，可以使用复制分支的方式来扩展原来的工具链。在我原来的工作中，不同的工具链被称作“套件”，每一种套件对应着一组互相配合的工具。</p><h2>工具体系的执行</h2><p>因为工具体系服务的是团队内部成员，所以执行非常简单，同时，工具体系的入口是初始化项目，所以只要初始化工具在手，可以控制其它所有工具。</p><p>我们在性能的那一课里，已经讲过工程体系的执行分成三个层次：纯管理、制度化和自动化。</p><p>工具体系因为其自身特性，可以说是最容易做到自动化的一个体系了。</p><h2>工具体系的监控</h2><p>工具体系的结果虽然是软性的，也不能完全不做监控。</p><p>纯粹的社区方案比较难做到监控，但是如果我们使用了前面提到的统一命令行入口包装，那么就可以做一些简单的统计工作了。</p><p>一般来说，以下指标跟开发者体验较为相关：</p><ul>\n<li>调试/构建次数；</li>\n<li>构建平均时长；</li>\n<li>使用的工具版本；</li>\n<li>发布次数。</li>\n</ul><p>在我之前的工作中，工具团队曾经从构建平均时长数据中发现构建效率问题，对webpack做了大量深度优化来改善开发体验。</p><p>同时，工具的相关数据还能够帮助发现一些问题，比如某个项目频繁发布，可能说明它风险很高。工具的相关数据还能帮我们发现老旧的工具，如果某个套件使用频率极低，则可以考虑把它下线。</p><p>总之，工具体系的监控不仅仅是衡量工具体系的好帮手，也是非常珍贵的研发数据，里面有很多可挖掘的价值。</p><h2>总结</h2><p>这一课，我们讲解了工具相关的工程知识。</p><p>我们仍然从目标、方案设计、执行和结果四个方面来讲解，工具体系的目标除了单个工具解决具体问题之外，还要注意一致性和配合问题，因此我们需要工具链。</p><p>工具链一般会涵盖研发阶段的各个主要操作。工具体系的执行比较简单，很容易就可以做到完全的自动化。工具体系的监控同样非常重要，工具的监控除了帮助我们改进工具体系，对研发体系的其它部分也有帮助。</p><p>最后，请你思考下自己所在的团队，是否已经建立了工具体系？听完了今天的课程，你认为它有哪些可改进的部分？</p><p></p>","neighbors":{"left":{"article_title":"性能：前端的性能到底对业务数据有多大的影响？","id":94156},"right":{"article_title":"持续集成：几十个前端一起工作，如何保证工作质量？","id":94979}},"comments":[{"had_liked":false,"id":93753,"user_name":"翰弟","can_delete":false,"product_type":"c1","uid":1144772,"ip_address":"","ucode":"42149ACC75AA08","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/EJZoM46wR6QqTeibhPZsO5wJTeUia4RndGicWfDZLw153WibjsnJXqEtGZICxAa8icb36pDkficTic3FViaySd1z9HmQBw/132","comment_is_top":false,"comment_ctime":1557580511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"91751893727","product_id":100023201,"comment_content":"程老师 前端优化和工程化有考虑出个课么","like_count":22},{"had_liked":false,"id":169825,"user_name":"稚鸿同学","can_delete":false,"product_type":"c1","uid":1212581,"ip_address":"","ucode":"989804DB990385","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/a5/83b424bc.jpg","comment_is_top":false,"comment_ctime":1578452820,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"18758322004","product_id":100023201,"comment_content":"现在用的工具链都是来自社区的，vue-cli3+webpack+babel....感觉要做到更加贴合自己的业务场景，做的优化还是很多","like_count":4,"discussions":[{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354885,"discussion_content":"灵活度也就随之降低点了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615357469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140271,"user_name":"灵感_idea","can_delete":false,"product_type":"c1","uid":1231317,"ip_address":"","ucode":"E0DBDDFA6040F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/d5/b08a27ed.jpg","comment_is_top":false,"comment_ctime":1570868081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10160802673","product_id":100023201,"comment_content":"这篇教程还是启发蛮多的，感谢。","like_count":2},{"had_liked":false,"id":113423,"user_name":"爱学习的大叔","can_delete":false,"product_type":"c1","uid":1085152,"ip_address":"","ucode":"91F9ABF1EC98D0","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/e0/847348b1.jpg","comment_is_top":false,"comment_ctime":1563004484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857971780","product_id":100023201,"comment_content":"我们现在有个项目是elk的，现在安装包和升级都是用的yarn","like_count":1},{"had_liked":false,"id":93782,"user_name":"迷途书童","can_delete":false,"product_type":"c1","uid":1090142,"ip_address":"","ucode":"462BE64D3373DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/5e/3871ff79.jpg","comment_is_top":false,"comment_ctime":1557587908,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5852555204","product_id":100023201,"comment_content":"winter老师从系统思考的角度对工具链进行了一个定位，给我一个启示，就是思考问题要站在比较高的维度","like_count":1},{"had_liked":false,"id":93777,"user_name":"胡琦","can_delete":false,"product_type":"c1","uid":1027994,"ip_address":"","ucode":"2D39C38FAC7EE7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/9a/23603936.jpg","comment_is_top":false,"comment_ctime":1557586393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852553689","product_id":100023201,"comment_content":"听完老师的课，感觉思维还停留在cli上。比如目前团队想用RN开发参考的携程CRN，但还缺很多模块，比如监控等，工具链该如何设计？","like_count":1},{"had_liked":false,"id":342650,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1650382241,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650382241","product_id":100023201,"comment_content":"希望讲一讲从0到1,如何搭建一个项目，依赖哪些工具。不要用vue react angular 那些框架。从项目目录架构、代码分层，html css js规划，页面编写，路由，网络请求等依赖添加，到构建单元测试，mock api，不同环境开发与部署，打包，混淆，上线等一整个流程。没有找到这样的课程与书籍，迫切需要。","like_count":0},{"had_liked":false,"id":305515,"user_name":"Kylin","can_delete":false,"product_type":"c1","uid":1376756,"ip_address":"","ucode":"9ADD1FBC9659C4","user_header":"https://static001.geekbang.org/account/avatar/00/15/01/f4/2856d67b.jpg","comment_is_top":false,"comment_ctime":1628006005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628006005","product_id":100023201,"comment_content":"这一整套系统搭建不是一天两天可以搞好的。","like_count":0},{"had_liked":false,"id":125752,"user_name":"咩啊","can_delete":false,"product_type":"c1","uid":1383703,"ip_address":"","ucode":"5282B0E008AE9D","user_header":"https://static001.geekbang.org/account/avatar/00/15/1d/17/94e4c63a.jpg","comment_is_top":false,"comment_ctime":1566258591,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1566258591","product_id":100023201,"comment_content":"统一工具版本真的很重要，像我现在的团队，开发支付宝小程序，一个人用了最新版本的开发工具（不知道他自己更新了），新版本对语法的检查更严格，导致一直报错，但是其他人用的是旧版本，就没办法对语法问题进行复现修改，还以为是代码出了问题","like_count":0,"discussions":[{"author":{"id":1375156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fb/b4/afbaab2f.jpg","nickname":"徐三响","note":"","ucode":"6B30D451EBD60D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":86922,"discussion_content":"规范软件使用的版本，这依然只属于制度化~你可以工具化加强约束。比如开发一个脚本，集成到代码里，每次开发者在本地commit的时候，就去检测一下各种工具或者软件的版本，如果检测到版本不符合要求，就失败这个commit","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576632678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1042089,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e6/a9/b459efb7.jpg","nickname":"如故","note":"","ucode":"F6895792309942","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1375156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fb/b4/afbaab2f.jpg","nickname":"徐三响","note":"","ucode":"6B30D451EBD60D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342536,"discussion_content":"package.json里不是就指定了各种依赖的版本吗 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610705709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":86922,"ip_address":""},"score":342536,"extra":""}]},{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354886,"discussion_content":"加勾子，commit先跑yarn命令确定，本地环境版本与上游一致，然后执行各种风格lint，UT，确保过才可以正常commit。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615357565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}