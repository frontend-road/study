{"id":118101,"title":"28丨从磁盘I/O的角度理解SQL查询的成本","content":"<p>在开始今天的内容前，我们先来回忆一下之前的内容。</p><p>数据库存储的基本单位是页，对于一棵B+树的索引来说，是先从根节点找到叶子节点，也就是先查找数据行所在的页，再将页读入到内存中，在内存中对页的记录进行查找，从而得到想要数据。你看，虽然我们想要查找的，只是一行记录，但是对于磁盘I/O来说却需要加载一页的信息，因为页是最小的存储单位。</p><p>那么对于数据库来说，如果我们想要查找多行记录，查询时间是否会成倍地提升呢？其实数据库会采用缓冲池的方式提升页的查找效率。</p><p>为了更好地理解SQL查询效率是怎么一回事，今天我们就来看看磁盘I/O是如何加载数据的。</p><p>这部分的内容主要包括以下几个部分：</p><ol>\n<li>数据库的缓冲池在数据库中起到了怎样的作用？如果我们对缓冲池内的数据进行更新，数据会直接更新到磁盘上吗？</li>\n<li>对数据页进行加载都有哪些方式呢？</li>\n<li>如何查看一条SQL语句需要在缓冲池中进行加载的页的数量呢？</li>\n</ol><h2>数据库缓冲池</h2><p>磁盘I/O需要消耗的时间很多，而在内存中进行操作，效率则会高很多，为了能让数据表或者索引中的数据随时被我们所用，DBMS会申请占用内存来作为数据缓冲池，这样做的好处是可以让磁盘活动最小化，从而减少与磁盘直接进行I/O的时间。要知道，这种策略对提升SQL语句的查询性能来说至关重要。如果索引的数据在缓冲池里，那么访问的成本就会降低很多。</p><!-- [[[read_end]]] --><p>那么缓冲池如何读取数据呢？</p><p>缓冲池管理器会尽量将经常使用的数据保存起来，在数据库进行页面读操作的时候，首先会判断该页面是否在缓冲池中，如果存在就直接读取，如果不存在，就会通过内存或磁盘将页面存放到缓冲池中再进行读取。</p><p>缓存在数据库中的结构和作用如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/05/9b/05e1692282d25768c87bbc31a1479b9b.png?wh=1102*622\" alt=\"\"><br>\n如果我们执行SQL语句的时候更新了缓存池中的数据，那么这些数据会马上同步到磁盘上吗？</p><p>实际上，当我们对数据库中的记录进行修改的时候，首先会修改缓冲池中页里面的记录信息，然后数据库会以一定的频率刷新到磁盘上。注意并不是每次发生更新操作，都会立刻进行磁盘回写。缓冲池会采用一种叫做checkpoint的机制将数据回写到磁盘上，这样做的好处就是提升了数据库的整体性能。</p><p>比如，当缓冲池不够用时，需要释放掉一些不常用的页，就可以采用强行采用checkpoint的方式，将不常用的脏页回写到磁盘上，然后再从缓冲池中将这些页释放掉。这里脏页（dirty page）指的是缓冲池中被修改过的页，与磁盘上的数据页不一致。</p><h3>查看缓冲池的大小</h3><p>了解完缓冲池的工作原理后，你可能想问，我们如何判断缓冲池的大小？</p><p>如果你使用的是MySQL MyISAM存储引擎，它只缓存索引，不缓存数据，对应的键缓存参数为key_buffer_size，你可以用它进行查看。</p><p>如果你使用的是InnoDB存储引擎，可以通过查看innodb_buffer_pool_size变量来查看缓冲池的大小，命令如下：</p><pre><code>mysql &gt; show variables like 'innodb_buffer_pool_size'\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/93/16/93b1b8acaf39f46245c6b751200e8316.png?wh=1308*306\" alt=\"\"><br>\n你能看到此时InnoDB的缓冲池大小只有8388608/1024/1024=8MB，我们可以修改缓冲池大小为128MB，方法如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/78/70/78fd83a2ff4f0a10ed20ec147ffbac70.png?wh=1384*130\" alt=\"\"><br>\n然后再来看下修改后的缓冲池大小，此时已成功修改成了128MB：</p><p><img src=\"https://static001.geekbang.org/resource/image/a3/cc/a364961bda6d5c4742460620053ec1cc.png?wh=1380*381\" alt=\"\"><br>\n在InnoDB存储引擎中，我们可以同时开启多个缓冲池，这里我们看下如何查看缓冲池的个数，使用命令：</p><pre><code>mysql &gt; show variables like 'innodb_buffer_pool_instances'\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/d1/27/d1f7896087c58bfef202f9a21e96ed27.png?wh=1509*367\" alt=\"\"></p><p>你能看到当前只有一个缓冲池。实际上<code>innodb_buffer_pool_instances</code>默认情况下为8，为什么只显示只有一个呢？这里需要说明的是，如果想要开启多个缓冲池，你首先需要将<code>innodb_buffer_pool_size</code>参数设置为大于等于1GB，这时<code>innodb_buffer_pool_instances</code>才会大于1。你可以在MySQL的配置文件中对<code>innodb_buffer_pool_size</code>进行设置，大于等于1GB，然后再针对<code>innodb_buffer_pool_instances</code>参数进行修改。</p><h3>数据页加载的三种方式</h3><p>我们刚才已经对缓冲池有了基本的了解。</p><p>如果缓冲池中没有该页数据，那么缓冲池有以下三种读取数据的方式，每种方式的读取效率都是不同的：</p><p><strong>1. 内存读取</strong></p><p>如果该数据存在于内存中，基本上执行时间在1ms左右，效率还是很高的。</p><p><img src=\"https://static001.geekbang.org/resource/image/a5/4f/a5d16af8d34ebdcfe327ef7b4841ad4f.png?wh=838*430\" alt=\"\"><br>\n<strong>2. 随机读取</strong></p><p>如果数据没有在内存中，就需要在磁盘上对该页进行查找，整体时间预估在10ms左右，这10ms中有6ms是磁盘的实际繁忙时间（包括了寻道和半圈旋转时间），有3ms是对可能发生的排队时间的估计值，另外还有1ms的传输时间，将页从磁盘服务器缓冲区传输到数据库缓冲区中。这10ms看起来很快，但实际上对于数据库来说消耗的时间已经非常长了，因为这还只是一个页的读取时间。</p><p><img src=\"https://static001.geekbang.org/resource/image/50/49/50fb2657341103548a76fce6f7769149.png?wh=1225*432\" alt=\"\"><br>\n<strong>3. 顺序读取</strong></p><p>顺序读取其实是一种批量读取的方式，因为我们请求的数据在磁盘上往往都是相邻存储的，顺序读取可以帮我们批量读取页面，这样的话，一次性加载到缓冲池中就不需要再对其他页面单独进行磁盘I/O操作了。如果一个磁盘的吞吐量是40MB/S，那么对于一个16KB大小的页来说，一次可以顺序读取2560（40MB/16KB）个页，相当于一个页的读取时间为0.4ms。采用批量读取的方式，即使是从磁盘上进行读取，效率也比从内存中只单独读取一个页的效率要高。</p><h2>通过last_query_cost统计SQL语句的查询成本</h2><p>我们先前已经讲过，一条SQL查询语句在执行前需要确定查询计划，如果存在多种查询计划的话，MySQL会计算每个查询计划所需要的成本，从中选择成本最小的一个作为最终执行的查询计划。</p><p>如果我们想要查看某条SQL语句的查询成本，可以在执行完这条SQL语句之后，通过查看当前会话中的last_query_cost变量值来得到当前查询的成本。这个查询成本对应的是SQL语句所需要读取的页的数量。</p><p>我以product_comment表为例，如果我们想要查询comment_id=900001的记录，然后看下查询成本，我们可以直接在聚集索引上进行查找：</p><pre><code>mysql&gt; SELECT comment_id, product_id, comment_text, user_id FROM product_comment WHERE comment_id = 900001;\n</code></pre><p>运行结果（1条记录，运行时间为0.042s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/da/fd/da50c6f039b431fbab963be16f16b5fd.png?wh=1152*145\" alt=\"\"><br>\n然后再看下查询优化器的成本，实际上我们只需要检索一个页即可：</p><pre><code>mysql&gt; SHOW STATUS LIKE 'last_query_cost';\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/cd/43/cde712f5d9fc42f31310511677811543.png?wh=1113*319\" alt=\"\"><br>\n如果我们想要查询comment_id在900001到9000100之间的评论记录呢？</p><pre><code>mysql&gt; SELECT comment_id, product_id, comment_text, user_id FROM product_comment WHERE comment_id BETWEEN 900001 AND 900100;\n</code></pre><p>运行结果（100条记录，运行时间为0.046s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/be/a0/be4d6cd476fd0c9898df5f785aa0c0a0.png?wh=1048*313\" alt=\"\"><br>\n然后再看下查询优化器的成本，这时我们大概需要进行20个页的查询。</p><pre><code>mysql&gt; SHOW STATUS LIKE 'last_query_cost';\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/62/fe/628138aa22d3244f8d08dc701a1f61fe.png?wh=1075*317\" alt=\"\"><br>\n你能看到页的数量是刚才的20倍，但是查询的效率并没有明显的变化，实际上这两个SQL查询的时间基本上一样，就是因为采用了顺序读取的方式将页面一次性加载到缓冲池中，然后再进行查找。虽然页数量（last_query_cost）增加了不少，但是通过缓冲池的机制，并没有增加多少查询时间。</p><h2>总结</h2><p>上一节我们了解到了页是数据库存储的最小单位，这一节我们了解了在数据库中是如何加载使用页的。SQL查询是一个动态的过程，从页加载的角度来看，我们可以得到以下两点结论：</p><ol>\n<li>位置决定效率。如果页就在数据库缓冲池中，那么效率是最高的，否则还需要从内存或者磁盘中进行读取，当然针对单个页的读取来说，如果页存在于内存中，会比在磁盘中读取效率高很多。</li>\n<li>批量决定效率。如果我们从磁盘中对单一页进行随机读，那么效率是很低的（差不多10ms），而采用顺序读取的方式，批量对页进行读取，平均一页的读取效率就会提升很多，甚至要快于单个页面在内存中的随机读取。</li>\n</ol><p>所以说，遇到I/O并不用担心，方法找对了，效率还是很高的。我们首先要考虑数据存放的位置，如果是经常使用的数据就要尽量放到缓冲池中，其次我们可以充分利用磁盘的吞吐能力，一次性批量读取数据，这样单个页的读取效率也就得到了提升。</p><p><img src=\"https://static001.geekbang.org/resource/image/f2/77/f254372aac175d6ac571ebe9ec024777.jpg?wh=3341*1887\" alt=\"\"><br>\n最后给你留两道思考题吧。你能解释下相比于单个页面的随机读，为什么顺序读取时平均一个页面的加载效率会提高吗？另外，对于今天学习的缓冲池机制和数据页加载的方式，你有什么心得体会吗？</p><p>欢迎在评论区写下你的答案，如果你觉得这篇文章有帮助，不妨把它分享给你的朋友或者同事吧。</p>","neighbors":{"left":{"article_title":"27丨从数据页的角度理解B+树查询","id":116766},"right":{"article_title":"29丨为什么没有理想的索引？","id":118746}},"comments":[{"had_liked":false,"id":126769,"user_name":"🄽🄸🅇🅄🅂","can_delete":false,"product_type":"c1","uid":1000060,"ip_address":"","ucode":"853763C229A5AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","comment_is_top":false,"comment_ctime":1566469384,"is_pvip":false,"replies":[{"id":"47089","content":"首先我们需要了解InnoDB存储引擎中缓冲池都包括了哪些，在InnoDB存储引擎中有一部分数据会放到内存中，缓冲池则占了这部分内存（In-Memory Structures）的大部分，它是用来存储各种数据的缓存，包括了数据页，索引页，插入缓冲，锁信息，自适应Hash，数据字典信息等。<br><br>为什么要使用缓冲池技术呢，这时因为InnoDB存储引擎是基于磁盘文件存储的，我们在访问物理硬盘和在内存中进行访问速度相差很大，为了尽可能弥补这中间的IO效率鸿沟，我们就需要把经常使用的数据加载到缓冲池中，避免每次访问都进行磁盘IO，从而提升数据库整体的访问性能。所以说“频次X位置”的原则，帮我们对IO访问效率进行了优化：<br>1）位置决定效率，提供缓冲池就是在内存中可以直接访问到数据，因此效率可以大幅提升<br>2）频次决定优先级顺序，因为缓冲池的大小是有限的，比如我们的磁盘有200G，但是内存只有16G，缓冲池大小只有1G，那么这时无法将所有数据都加载到缓冲池里，这里就有个优先级顺序的问题，也就是对经常使用频次高的热数据进行加载。<br>在了解了缓冲池作用之后，我们还需要了解缓冲池的另一个特性：预读。<br>因为缓冲池的作用就是提升IO效率，而我们进行读取数据的存在一个“局部性原理”，也就是我们使用了一些数据，大概率还会使用它周围的一些数据。因此我们可以采用“预读”的机制来减少未来的磁盘IO操作，进行提前加载。<br><br>我们再来看下什么是查询缓存？<br>查询缓存是提前把查询结果缓存起来，这样下次就不需要执行可以直接拿到结果。需要说明的是，在MySQL中的查询缓存，不是缓存查询计划，而是查询及对应的查询结果。这就意味着查询匹配的鲁棒性大大降低，只有相同的查询操作才会命中查询缓存。因此在MySQL的查询缓存命中率不高，在MySQL8.0版本中已经弃用了查询缓存功能。查看是否使用了查询缓存，使用命令：show variables like &#39;%query_chache%&#39;;<br><br>所以说缓冲池不等于查询缓存，他们两个存在共同的特点就是都是通过缓存的机制来提升效率。而缓冲池是服务于数据库整体的IO操作，通过建立缓冲池机制来弥补存储引擎的磁盘文件与内存访问之间的效率鸿沟，同时缓冲池会采用“预读”的机器提前加载一些马上会用到的数据，以提升整体的数据库性能。而查询缓存是服务于SQL查询和查询结果集的，因为命中条件苛刻，而且只要当数据表发生了变化，查询缓存就会失效，因此命中率低，在MySQL8.0版本中已经弃用了该功能。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1566629446,"ip_address":"","comment_id":126769,"utype":1}],"discussion_count":7,"race_medal":0,"score":"323689016584","product_id":100029501,"comment_content":"请问下老师，缓冲池和查询缓存是一个东西吗？","like_count":76,"discussions":[{"author":{"id":1239992,"avatar":"https://static001.geekbang.org/account/avatar/00/12/eb/b8/22065888.jpg","nickname":"小年","note":"","ucode":"BDEF5315847236","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7920,"discussion_content":"感谢，我也想问这个来着","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567730611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464159,"discussion_content":"首先我们需要了解InnoDB存储引擎中缓冲池都包括了哪些，在InnoDB存储引擎中有一部分数据会放到内存中，缓冲池则占了这部分内存（In-Memory Structures）的大部分，它是用来存储各种数据的缓存，包括了数据页，索引页，插入缓冲，锁信息，自适应Hash，数据字典信息等。\n\n为什么要使用缓冲池技术呢，这时因为InnoDB存储引擎是基于磁盘文件存储的，我们在访问物理硬盘和在内存中进行访问速度相差很大，为了尽可能弥补这中间的IO效率鸿沟，我们就需要把经常使用的数据加载到缓冲池中，避免每次访问都进行磁盘IO，从而提升数据库整体的访问性能。所以说“频次X位置”的原则，帮我们对IO访问效率进行了优化：\n1）位置决定效率，提供缓冲池就是在内存中可以直接访问到数据，因此效率可以大幅提升\n2）频次决定优先级顺序，因为缓冲池的大小是有限的，比如我们的磁盘有200G，但是内存只有16G，缓冲池大小只有1G，那么这时无法将所有数据都加载到缓冲池里，这里就有个优先级顺序的问题，也就是对经常使用频次高的热数据进行加载。\n在了解了缓冲池作用之后，我们还需要了解缓冲池的另一个特性：预读。\n因为缓冲池的作用就是提升IO效率，而我们进行读取数据的存在一个“局部性原理”，也就是我们使用了一些数据，大概率还会使用它周围的一些数据。因此我们可以采用“预读”的机制来减少未来的磁盘IO操作，进行提前加载。\n\n我们再来看下什么是查询缓存？\n查询缓存是提前把查询结果缓存起来，这样下次就不需要执行可以直接拿到结果。需要说明的是，在MySQL中的查询缓存，不是缓存查询计划，而是查询及对应的查询结果。这就意味着查询匹配的鲁棒性大大降低，只有相同的查询操作才会命中查询缓存。因此在MySQL的查询缓存命中率不高，在MySQL8.0版本中已经弃用了查询缓存功能。查看是否使用了查询缓存，使用命令：show variables like &amp;#39;%query_chache%&amp;#39;;\n\n所以说缓冲池不等于查询缓存，他们两个存在共同的特点就是都是通过缓存的机制来提升效率。而缓冲池是服务于数据库整体的IO操作，通过建立缓冲池机制来弥补存储引擎的磁盘文件与内存访问之间的效率鸿沟，同时缓冲池会采用“预读”的机器提前加载一些马上会用到的数据，以提升整体的数据库性能。而查询缓存是服务于SQL查询和查询结果集的，因为命中条件苛刻，而且只要当数据表发生了变化，查询缓存就会失效，因此命中率低，在MySQL8.0版本中已经弃用了该功能。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566629446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2815900,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f7/9c/69c5c5dc.jpg","nickname":"越锋利","note":"","ucode":"63E9E3F3C7D53D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411227,"discussion_content":"你的昵称好酷啊，搜了下还有个专门的网站能生成这种花花的字体，很有趣","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635866375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2076104,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ad/c8/dd337107.jpg","nickname":"干尾巴","note":"","ucode":"718D7A8BFDD6D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376831,"discussion_content":"缓冲池没有，去内存读取这句话怎么理解呀，操作系统都快忘得差不多了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622368291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2076104,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ad/c8/dd337107.jpg","nickname":"干尾巴","note":"","ucode":"718D7A8BFDD6D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376828,"discussion_content":"我看上面说了缓冲池还有一些回会策略，这些应该是查询缓存说不具备的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622367807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":105228,"discussion_content":"精彩！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577459207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000060,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","nickname":"🄽🄸🅇🅄🅂","note":"","ucode":"853763C229A5AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6091,"discussion_content":"明白了，谢谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566663431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123759,"user_name":"DZ","can_delete":false,"product_type":"c1","uid":1132240,"ip_address":"","ucode":"452555FA0F9E0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/46/d0/6bafd7d4.jpg","comment_is_top":false,"comment_ctime":1565752900,"is_pvip":false,"replies":[{"id":"63792","content":"整理的不错","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577542024,"ip_address":"","comment_id":123759,"utype":1}],"discussion_count":2,"race_medal":0,"score":"207724183108","product_id":100029501,"comment_content":"顺序读的页面平均加载效率更高是因为顺序读更贴合存储介质的物理特性，即一次顺序读取一批相邻物理块的效率，大于多次随机访问不连续的物理块的效率。<br><br>缓冲池机制和页面加载方式是计算机体系结构的经典方式，首先必须承认两个客观事实，一是资源有限，二是时间有限。从硬盘到内存再到CPU缓存，价格和效率永远存在矛盾，只能通过多级缓存的形式，将更贵的资源留给更热的数据。","like_count":49,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462805,"discussion_content":"整理的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577542024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2076104,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ad/c8/dd337107.jpg","nickname":"干尾巴","note":"","ucode":"718D7A8BFDD6D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376830,"discussion_content":"想学好数据库，首先的学号操作系统。弄清楚磁盘结构的扇区，磁道，盘面这些\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622367922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188878,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1584429650,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"53124037202","product_id":100029501,"comment_content":"在什么情况下，数据不在缓冲池中，而是在内存中，此时从内存中读取？","like_count":13},{"had_liked":false,"id":131362,"user_name":"小年","can_delete":false,"product_type":"c1","uid":1239992,"ip_address":"","ucode":"BDEF5315847236","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/b8/22065888.jpg","comment_is_top":false,"comment_ctime":1567730697,"is_pvip":false,"replies":[{"id":"63507","content":"SQL主要就是基本语法和性能优化","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577515307,"ip_address":"","comment_id":131362,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40222436361","product_id":100029501,"comment_content":"老师，不止可否在哪一期讲一讲面试的时候常考的一些SQL相关的内容呀？感觉这些索引深入了以后面试不太会涉及到，抱歉功利了点因为最近在秋招各种面试，担心看的太深了反而暂时用不到...","like_count":10,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466411,"discussion_content":"SQL主要就是基本语法和性能优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577515307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123716,"user_name":"lmtoo","can_delete":false,"product_type":"c1","uid":1133918,"ip_address":"","ucode":"FCD5B9C941D448","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","comment_is_top":false,"comment_ctime":1565746601,"is_pvip":false,"replies":[{"id":"63523","content":"对 总大小","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577516809,"ip_address":"","comment_id":123716,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27335550377","product_id":100029501,"comment_content":"innodb_buffer_pool_size是缓存池总大小吗？如果缓存池个数大于1，那每个缓冲池大小是不是innodb_buffer_pool_size&#47;innodb_buffer_pool_instances?","like_count":7,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462785,"discussion_content":"对 总大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577516809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000060,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","nickname":"🄽🄸🅇🅄🅂","note":"","ucode":"853763C229A5AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5820,"discussion_content":"根据上下文，我觉得应该是n个缓冲池共享1GB的空间，不然如果每个缓冲池1GB，那就没必要innodb_buffer_pool_size≥1GB时，默认值8才会生效这样的规则了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566472612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4805,"discussion_content":"从内存读取是什么意思？缓冲池不就是在内存里吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565747929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1474214,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7e/a6/4e331ef4.jpg","nickname":"骑行的掌柜J","note":"","ucode":"3163102651C653","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263093,"discussion_content":"上面老师不是说了嘛，如果你此时要读取的数据页是不存在该缓冲池中的时候，但是它又存在于内存上面，所以直接就可以从内存中把要查询的该数据加载到该缓冲池中。简单来说就是该缓冲池是内存中的一部分，是它的子集。不知道我这样说你理解没有。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589171947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4805,"ip_address":""},"score":263093,"extra":""}]}]},{"had_liked":false,"id":134249,"user_name":"峻铭","can_delete":false,"product_type":"c1","uid":1106202,"ip_address":"","ucode":"63AB23BADACA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/1a/20977779.jpg","comment_is_top":false,"comment_ctime":1568783063,"is_pvip":false,"replies":[{"id":"63780","content":"整理总结的不错","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577541291,"ip_address":"","comment_id":134249,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23043619543","product_id":100029501,"comment_content":"SELECT comment_id, product_id, comment_text, user_id FROM product_comment WHERE comment_id = 900001;<br>SELECT comment_id, product_id, comment_text, user_id FROM product_comment WHERE comment_id BETWEEN 900001 AND 900100;<br>这两句查询的last_query_cost都是4.724，说明这不是页<br>官网：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;server-status-variables.html<br><br>The total cost of the last compiled query as computed by the query optimizer. This is useful for comparing the cost of different query plans for the same query. The default value of 0 means that no query has been compiled yet. The default value is 0. Last_query_cost has session scope<br>对同一个查询语句的不同查询计划的代价进行计较，选择代价最小的。last_query_cost得到的值只是一个查询计划的评分值，不是页<br><br>","like_count":6,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467671,"discussion_content":"整理总结的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577541291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231369,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLn1y9RSL9JcACGRVkkhkEmjH7z1eiag763CVKwn3Mzb3djbibwbx0fgZqyBpPozGLOicnllSfydEng/132","nickname":"qijj","note":"","ucode":"AAE7BAD5DABEE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220452,"discussion_content":"这好像和老师讲的不一样啊，正文中last_query_cost 查询到的结果是 页  ，那个是对的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585878521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1474214,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7e/a6/4e331ef4.jpg","nickname":"骑行的掌柜J","note":"","ucode":"3163102651C653","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1231369,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLn1y9RSL9JcACGRVkkhkEmjH7z1eiag763CVKwn3Mzb3djbibwbx0fgZqyBpPozGLOicnllSfydEng/132","nickname":"qijj","note":"","ucode":"AAE7BAD5DABEE2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263104,"discussion_content":"上面那个老哥的理解有问题吧 官方文档对这个Last_query_cost变量一开始是说这个变量是“通过查询优化器计算最后编译查询的总成本。”然后接着解释说“这个对于比较同样查询的不同查询计划的成本是很有用的。”最后文档接着说“默认值0表示的含义是还没有编译任何查询。默认值0. Last_query_cost是有会话范围的。” 并没有说到什么评分啊。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589173148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":220452,"ip_address":""},"score":263104,"extra":""}]}]},{"had_liked":false,"id":149017,"user_name":"扶幽","can_delete":false,"product_type":"c1","uid":1322612,"ip_address":"","ucode":"1400EDFF8970D3","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/74/88c613e0.jpg","comment_is_top":false,"comment_ctime":1573127777,"is_pvip":false,"replies":[{"id":"63767","content":"硬盘平均寻道时间 7-14ms，假设硬盘是6000转，转一圈（100个山区）时间是0.01，平均一个扇区的时间是0.1ms","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577540855,"ip_address":"","comment_id":149017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18752996961","product_id":100029501,"comment_content":"是因为磁盘IO时寻道和半圈旋转时间较长吗？","like_count":5,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473709,"discussion_content":"硬盘平均寻道时间 7-14ms，假设硬盘是6000转，转一圈（100个山区）时间是0.01，平均一个扇区的时间是0.1ms","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577540855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127383,"user_name":"NO.9","can_delete":false,"product_type":"c1","uid":1336970,"ip_address":"","ucode":"B92F14B493406F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fUDCLLob6DFS8kZcMUfxOc4qQHeQfW4rIMK5Ty2u2AqLemcdhVRw7byx85HrVicSvy5AiabE0YGMj5gVt8ibgrusA/132","comment_is_top":false,"comment_ctime":1566687281,"is_pvip":false,"replies":[{"id":"63516","content":"对的 多谢分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577516225,"ip_address":"","comment_id":127383,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18746556465","product_id":100029501,"comment_content":"老师 你好，请教一个问题，<br>看完本章前面的部分之后忽然间意识到：<br>      数据库Down掉之后的Recover，只能是用最新对backup+checkpoint+transaction的log 恢复，就是因为commit的内容还没有从缓冲池写入磁盘。","like_count":5,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464467,"discussion_content":"对的 多谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577516225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123714,"user_name":"用0和1改变自己","can_delete":false,"product_type":"c1","uid":1527530,"ip_address":"","ucode":"42B8F6ECF6BDD0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/lfMbV8RibrhFxjILg4550cZiaay64mTh5Zibon64TiaicC8jDMEK7VaXOkllHSpS582Jl1SUHm6Jib2AticVlHibiaBvUOA/132","comment_is_top":false,"comment_ctime":1565746178,"is_pvip":false,"replies":[{"id":"63524","content":"总结的不错","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577516818,"ip_address":"","comment_id":123714,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14450648066","product_id":100029501,"comment_content":"1,顺序读取是一种批量读取，读取的数据都是相邻的，所以不需要每一页都进行I&#47;O操作，平均下来就效率更高了。<br>2.缓存池的刷新机制和许多缓存都是一样的，达到一定数量后进行更新，以达到提升性能都目的。","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462784,"discussion_content":"总结的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577516818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012325,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","nickname":"雪飞鸿","note":"","ucode":"65D7B030828809","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37940,"discussion_content":"顺序读取性能高主要因为减少了磁盘寻道耗时，但对于每一页的读取都需要一次磁盘I/0操作","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571704020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1012325,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","nickname":"雪飞鸿","note":"","ucode":"65D7B030828809","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":117925,"discussion_content":"固态硬盘就不需要寻道了吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578144977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37940,"ip_address":""},"score":117925,"extra":""}]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4820,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565752898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165201,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1577178847,"is_pvip":false,"replies":[{"id":"63863","content":"总结的不错！","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577594200,"ip_address":"","comment_id":165201,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10167113439","product_id":100029501,"comment_content":"第一个问题<br>我们的数据在磁盘上是相邻存储的，当我们将数据从磁盘中加载读取到缓冲区的时候，就直接一堆一堆的读取，根本不需要单独的去对某个数据进行I&#47;O的操作，这样效率就会很高，（重点在于数据在磁盘中是相邻存储的）<br><br>第二个问题<br>缓冲池这个东西应该跟计算机组成原理中的高速缓冲区（Cpu Cache)是一个道理的，访问速度比内存快，内存又比磁盘快，CPU在进行数据读取的时候，首先就会去访问Cache，只有当Cache中找不到数据的时候，CPU才会去访问内存，将内存中的数据加载到Cache中，然后在进行访问！这是缓冲区比较快的一方面原因，其次就是有个东西叫做“局部性原理“，包括了时间局部性和空间局部性，在访问数据的时候，这个时间局部性就起作用了，刚刚被访问过的数据，会很快的被访问到，这样CPU花在等待内存访问的时间就大大的缩短了。<br>我觉得CPU这个访问数据的方式和数据库中访问的方式的原理是一样的！CPU中是CPU Cache,数据库中呢是比如”Redis缓存、MemCache缓存”等！<br><br>不知道上述总结是否正确，但是我觉得万变不离其宗，很多东西只是换了一种方式去操作而已，其根本的原理是不变的！有不对的地方，还请老师指正！<br>","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479071,"discussion_content":"总结的不错！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577594200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186377,"user_name":"jacksnow","can_delete":false,"product_type":"c1","uid":1264732,"ip_address":"","ucode":"49693079973EEF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJafX5kNYJKpD9czE7pjYJtDWnuHeWQLtkfyAtPYUicbiafAUBvUqSnKTM3bahib1wURcRg2miaOFGnpQ/132","comment_is_top":false,"comment_ctime":1583831850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878799146","product_id":100029501,"comment_content":"老师，有个问题请教一下:<br>如果是两个表进行join操作，比如<br>select a.*, b.* <br>from a join b on a.xxx = b.xxx &#47;&#47; 第一步<br>where a.id = &#39;xxxx&#39; &#47;&#47; 第二步<br>第一步是进行数据组装<br>第二部是进行条件筛选.<br>我的问题是：<br>第一步组装数据的意思是不是在磁盘上通过a和b两个表的page页组装成新的page页，并且需要新分配磁盘空间来存储这些新的page页，查询完成之后再将这些page页进行回收？<br>第二步是否是在新组装出来的page页中通过索引进行查询，并将查到的page load到内存中来？","like_count":1},{"had_liked":false,"id":154465,"user_name":"梁","can_delete":false,"product_type":"c1","uid":1267198,"ip_address":"","ucode":"29A10759821D96","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/fe/e8fb06fb.jpg","comment_is_top":false,"comment_ctime":1574436408,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5869403704","product_id":100029501,"comment_content":"我想SSD磁盘在单个页面随机读的效率是否不会比单个页面顺序读的效率差了，SSD寻道时间才0.1ms。","like_count":1,"discussions":[{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161522,"discussion_content":"会略差一点点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580907121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154464,"user_name":"梁","can_delete":false,"product_type":"c1","uid":1267198,"ip_address":"","ucode":"29A10759821D96","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/fe/e8fb06fb.jpg","comment_is_top":false,"comment_ctime":1574436278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5869403574","product_id":100029501,"comment_content":"我想要是全闪存磁盘的话，就算是单个页面的随机读，效率也不会比顺序读取时平均一个页面的加载效率差，","like_count":1},{"had_liked":false,"id":129110,"user_name":"wonderq_gk","can_delete":false,"product_type":"c1","uid":1572636,"ip_address":"","ucode":"9A10DDC39DBB6B","user_header":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","comment_is_top":false,"comment_ctime":1567043838,"is_pvip":false,"replies":[{"id":"53398","content":"需要的时候，MySQL会自动将数据加载到缓冲池的，避免每次查询数据都进行磁盘IO，同样因为缓冲池的大小有限，因此MySQL也会管理和淘汰缓冲池，使得缓冲池性能最大化","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1570433294,"ip_address":"","comment_id":129110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862011134","product_id":100029501,"comment_content":"如何把数据放到缓冲池<br><br>","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465282,"discussion_content":"需要的时候，MySQL会自动将数据加载到缓冲池的，避免每次查询数据都进行磁盘IO，同样因为缓冲池的大小有限，因此MySQL也会管理和淘汰缓冲池，使得缓冲池性能最大化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570433294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129103,"user_name":"wonderq_gk","can_delete":false,"product_type":"c1","uid":1572636,"ip_address":"","ucode":"9A10DDC39DBB6B","user_header":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","comment_is_top":false,"comment_ctime":1567042868,"is_pvip":false,"replies":[{"id":"62740","content":"应该是innodb_buffer_pool_size参数设置为大于等于 1GB的时候，缓冲池的数量大于1才会生效","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577087867,"ip_address":"","comment_id":129103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862010164","product_id":100029501,"comment_content":"老师，我这里size是32M，为什么也是有8个缓冲池","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465279,"discussion_content":"应该是innodb_buffer_pool_size参数设置为大于等于 1GB的时候，缓冲池的数量大于1才会生效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577087867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126421,"user_name":"一米阳光","can_delete":false,"product_type":"c1","uid":1301955,"ip_address":"","ucode":"E198243A39AD84","user_header":"https://static001.geekbang.org/account/avatar/00/13/dd/c3/6bb8b410.jpg","comment_is_top":false,"comment_ctime":1566385387,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5861352683","product_id":100029501,"comment_content":"老师，ssd硬盘也存在随机读吗，还是只是减少了机械硬盘的寻道","like_count":1,"discussions":[{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161524,"discussion_content":"存在，只是减少寻道时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580907228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124602,"user_name":"Geek_Wison","can_delete":false,"product_type":"c1","uid":1504371,"ip_address":"","ucode":"2CD880F07FDD57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4HlmmWfWicNmo3x3HKaOwz3ibcicDFlV5xILbILKGFCXbnaLf2fZRARfBdVBC5NhIPmXxaxA0T9Jhg/132","comment_is_top":false,"comment_ctime":1565926261,"is_pvip":false,"replies":[{"id":"63789","content":"MySQL 8.0 取消的是查询缓存","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577541979,"ip_address":"","comment_id":124602,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5860893557","product_id":100029501,"comment_content":"老师，您好。这一节讲的数据库缓存池和新版本MySQL8.0取消的缓存指的是同一个东西吗？<br>如果是的话，那这节课的内容只在旧版本的mysql成立，在新版本的mysql（取消了缓存的版本）就没用了？","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463245,"discussion_content":"MySQL 8.0 取消的是查询缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577541979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1573288,"avatar":"https://static001.geekbang.org/account/avatar/00/18/01/a8/2662a8d1.jpg","nickname":"小白鼠丶","note":"","ucode":"76EFABC5DF8AEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8908,"discussion_content":"MySQL8.0取消的是查询缓存  而不是缓存池","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568097668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123776,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565754998,"is_pvip":false,"replies":[{"id":"45373","content":"对的 批量处理，以及缓冲池机制在系统性能设计中会经常用到","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1565766993,"ip_address":"","comment_id":123776,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860722294","product_id":100029501,"comment_content":"你能解释下相比于单个页面的随机读，为什么顺序读取时平均一个页面的加载效率会提高吗？<br>和硬盘的结构有关，硬盘如果读取连续的页，那平均延时和寻道时间平均到每个页面就非常少了，甚至非常接近读取一个页面的效率。<br><br>另外，对于今天学习的缓冲池机制和数据页加载的方式，你有什么心得体会吗？<br>缓冲机制在计算机性能优化随处可见，其理论依据就是计算机的局部性原理，空间局部性，时间局部性。","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462810,"discussion_content":"对的 批量处理，以及缓冲池机制在系统性能设计中会经常用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565766993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297432,"user_name":"皮特尔","can_delete":false,"product_type":"c1","uid":1017161,"ip_address":"","ucode":"313862C91DD325","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","comment_is_top":false,"comment_ctime":1623550037,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"1623550037","product_id":100029501,"comment_content":"SSD不存在顺序读的问题，所以数据库优化有一个简单粗暴的方案：上SSD","like_count":0,"discussions":[{"author":{"id":2597449,"avatar":"https://static001.geekbang.org/account/avatar/00/27/a2/49/7e749be2.jpg","nickname":"Nick","note":"","ucode":"37E60C08183617","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390678,"discussion_content":"对固态磁盘来说，虽然它的随机性能比机械硬盘好很多，但同样存在“先擦除再写入”的限制。随机读写会导致大量的垃圾回收，所以相对应的，随机 I/O 的性能比起连续 I/O 来，也还是差了很多。此外，连续 I/O 还可以通过预读--转自Linux性能优化实战","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1629969111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2962599,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/34/a7/52c4ea60.jpg","nickname":"年少挽滑稽世无双","note":"","ucode":"793DCBDE25A07B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2597449,"avatar":"https://static001.geekbang.org/account/avatar/00/27/a2/49/7e749be2.jpg","nickname":"Nick","note":"","ucode":"37E60C08183617","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587699,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663228135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":390678,"ip_address":"四川"},"score":587699,"extra":""}]}]},{"had_liked":false,"id":286669,"user_name":"Geek_dd3623","can_delete":false,"product_type":"c1","uid":2126054,"ip_address":"","ucode":"425D85E5DFFC85","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLg04lnicnUNWXFF2yyk7neSxl7fuI5LBZRYFRDEM8qhyPC3bDwFhz6FLx2NiaGFqa8ZpAz33Thj3cg/132","comment_is_top":false,"comment_ctime":1617468627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617468627","product_id":100029501,"comment_content":"缓存池的数据是怎么进行淘汰的呢?  是用 LRU 算法吗","like_count":0},{"had_liked":false,"id":232424,"user_name":"你的代码有灵魂吗？","can_delete":false,"product_type":"c1","uid":1688372,"ip_address":"","ucode":"0A276F30307965","user_header":"","comment_is_top":false,"comment_ctime":1594000789,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1594000789","product_id":100029501,"comment_content":"相比于单个页面的随机读取，顺序读取的页面平均读取时间更少的原因是：每次单个页面随机读取都要花费不少时间用于寻找页面所在的位置，而顺序读取只需在开始时花费一些时间寻找第一个页面的位置，之后就可以直接顺序读取了，不用再去寻找后续的页面位置。","like_count":0},{"had_liked":false,"id":230351,"user_name":"陈柏林","can_delete":false,"product_type":"c1","uid":1282562,"ip_address":"","ucode":"2636649821FAB9","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/02/288a6b8c.jpg","comment_is_top":false,"comment_ctime":1593353947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593353947","product_id":100029501,"comment_content":"我可以理解成删除也是先操作的数据缓冲池再定时更新到磁盘达到永久删除的效果吗？而删除也可能只是把记录从链表，但实际的数据还存在内存中，只是我们没有地址指向这个地址，所以算是删除了","like_count":0},{"had_liked":false,"id":205949,"user_name":"UKNOW","can_delete":false,"product_type":"c1","uid":1887734,"ip_address":"","ucode":"FB048BA678DD67","user_header":"https://static001.geekbang.org/account/avatar/00/1c/cd/f6/30ff4666.jpg","comment_is_top":false,"comment_ctime":1586762599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586762599","product_id":100029501,"comment_content":"“如果你使用的是 MySQL MyISAM 存储引擎，它只缓存索引，不缓存数据，对应的键缓存参数为 key_buffer_size，你可以用它进行查看。如果你使用的是 InnoDB 存储引擎，可以通过查看 innodb_buffer_pool_size 变量来查看缓冲池的大小”  <br><br>这句话不太理解， 存储引擎是针对每个表而不同的吧，而缓冲池是针对真个数据库吗？","like_count":0},{"had_liked":false,"id":201931,"user_name":"qijj","can_delete":false,"product_type":"c1","uid":1231369,"ip_address":"","ucode":"AAE7BAD5DABEE2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLn1y9RSL9JcACGRVkkhkEmjH7z1eiag763CVKwn3Mzb3djbibwbx0fgZqyBpPozGLOicnllSfydEng/132","comment_is_top":false,"comment_ctime":1585878818,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585878818","product_id":100029501,"comment_content":"oracle 也是这么处理的吗？","like_count":1},{"had_liked":false,"id":201930,"user_name":"qijj","can_delete":false,"product_type":"c1","uid":1231369,"ip_address":"","ucode":"AAE7BAD5DABEE2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLn1y9RSL9JcACGRVkkhkEmjH7z1eiag763CVKwn3Mzb3djbibwbx0fgZqyBpPozGLOicnllSfydEng/132","comment_is_top":false,"comment_ctime":1585878591,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585878591","product_id":100029501,"comment_content":"last_query_cost 查询到的结果是页还是执行计划的评分？ 看老师正文的意思是页，迫切希望能给个明确答案 ","like_count":0,"discussions":[{"author":{"id":1111183,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/8f/06bd9544.jpg","nickname":"AlphaGao","note":"","ucode":"862000415389FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303508,"discussion_content":"The total cost of the last compiled query as computed by the query optimizer. This is useful for comparing the cost of different query plans for the same query. The default value of 0 means that no query has been compiled yet. The default value is 0.\nIn MySQL 8.0.16 and later, this variable shows the cost of queries that have multiple query blocks, summing the cost estimates of each query block, estimating how many times non-cacheable subqueries are executed, and multiplying the cost of those query blocks by the number of subquery executions.\n是一个综合评定值，可以说是评分，说是查询的页数量好像也可以","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599288164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191141,"user_name":"fgdgtz","can_delete":false,"product_type":"c1","uid":1240401,"ip_address":"","ucode":"486CC4ACCC015C","user_header":"","comment_is_top":false,"comment_ctime":1584748729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584748729","product_id":100029501,"comment_content":"你好老师，我想问问如果是 order by 多个字段排序的执行流程是什么样的呢？<br>比如 有40000行 order by a desc,b desc limit 1000 ,a字段有索引，b字段无索引，a字段保存的是时间戳，有少部分时间戳是同样的，此时explain 会有 Using filesort，这样放入sort_buffer 是40000行 还是 大于1000行而小于40000行呢？或是扫描了多少行？","like_count":0},{"had_liked":false,"id":186387,"user_name":"jacksnow","can_delete":false,"product_type":"c1","uid":1264732,"ip_address":"","ucode":"49693079973EEF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJafX5kNYJKpD9czE7pjYJtDWnuHeWQLtkfyAtPYUicbiafAUBvUqSnKTM3bahib1wURcRg2miaOFGnpQ/132","comment_is_top":false,"comment_ctime":1583833527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583833527","product_id":100029501,"comment_content":"我看官网上面说，buffer pool的数据结构是一个list的结构，list里面存储的page，那么一个sql是如何命中buffer pool中缓存的page的呢？官网上也没有说明原理是啥，老师能解释一下吗？","like_count":0},{"had_liked":false,"id":186374,"user_name":"jacksnow","can_delete":false,"product_type":"c1","uid":1264732,"ip_address":"","ucode":"49693079973EEF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJafX5kNYJKpD9czE7pjYJtDWnuHeWQLtkfyAtPYUicbiafAUBvUqSnKTM3bahib1wURcRg2miaOFGnpQ/132","comment_is_top":false,"comment_ctime":1583831530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583831530","product_id":100029501,"comment_content":"老师，有个问题请教一下:<br>如果是两个表进行join操作，比如<br>select a.*, b.* <br>from a join b on a.xxx = b.xxx &#47;&#47; 第一步<br>where a.id = &#39;xxxx&#39; &#47;&#47; 第二步<br>第一步是进行数据组装<br>第二部是进行条件筛选.<br>我的问题是：<br>第一步组装数据的意思是不是在磁盘上通过a和b两个表的磁盘页组装成新的磁盘页，并且需要新分配磁盘空间来存储这些新的磁盘页？<br>第二步是否是在新组装出来的磁盘页中通过索引进行查询，并将查到的page load到内存中来？","like_count":0},{"had_liked":false,"id":184008,"user_name":"时光@1","can_delete":false,"product_type":"c1","uid":1585019,"ip_address":"","ucode":"0358732C5E80AE","user_header":"https://static001.geekbang.org/account/avatar/00/18/2f/7b/3f506234.jpg","comment_is_top":false,"comment_ctime":1583204280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583204280","product_id":100029501,"comment_content":"文中怎么说。如果缓冲池中没有该页数据，那么缓冲池有以下三种读取数据的方式，每种方式的读取效率都是不同的：","like_count":0},{"had_liked":false,"id":184007,"user_name":"时光@1","can_delete":false,"product_type":"c1","uid":1585019,"ip_address":"","ucode":"0358732C5E80AE","user_header":"https://static001.geekbang.org/account/avatar/00/18/2f/7b/3f506234.jpg","comment_is_top":false,"comment_ctime":1583204254,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583204254","product_id":100029501,"comment_content":"老师好，请问下数据页加载的三种方式 第一种内存读取 就是从缓冲池中读数据吗？","like_count":0,"discussions":[{"author":{"id":1706074,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/08/5a/4d709cf5.jpg","nickname":"Pray、PF","note":"","ucode":"1E3E4073763490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284993,"discussion_content":"不是，是在内存中却不在缓冲池中，缓冲池是内存的一个子集","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592707982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1474214,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7e/a6/4e331ef4.jpg","nickname":"骑行的掌柜J","note":"","ucode":"3163102651C653","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263111,"discussion_content":"第一种内存读取是说 当前缓冲池中没有你现在要的数据页信息，而正好内存里面有这个数据，所以就直接从内存中把该数据加载到当前缓冲池中即可使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589173380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166498,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1577459406,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577459406","product_id":100029501,"comment_content":"老师 缓存中的数据 如果数据库停了 这个数据的回复是靠日志吗","like_count":0},{"had_liked":false,"id":163320,"user_name":"爬行的蜗牛","can_delete":false,"product_type":"c1","uid":1033956,"ip_address":"","ucode":"6623B62DE63CE9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QD6bf8hkS5dHrabdW7M7Oo9An1Oo3QSxqoySJMDh7GTraxFRX77VZ2HZ13x3R4EVYddIGXicRRDAc7V9z5cLDlA/132","comment_is_top":false,"comment_ctime":1576685375,"is_pvip":false,"replies":[{"id":"62650","content":"总结的不错","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577081136,"ip_address":"","comment_id":163320,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576685375","product_id":100029501,"comment_content":"1. 因为一次顺序读取的话，单次读取的数据页比较大， 落实到每个页的平均时间比较低，2. checkpoint 的落盘机制印象深刻， 有点类似异步的机制；","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478346,"discussion_content":"总结的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577081136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154470,"user_name":"梁","can_delete":false,"product_type":"c1","uid":1267198,"ip_address":"","ucode":"29A10759821D96","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/fe/e8fb06fb.jpg","comment_is_top":false,"comment_ctime":1574436857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574436857","product_id":100029501,"comment_content":"那存在缓存池机制，我们在更新一条记录时，数据库是否会先将该页读到缓存中，再修改缓存中的页里面对应的记录，最后由checkpoint刷入磁盘呢？","like_count":0},{"had_liked":false,"id":142992,"user_name":"雪飞鸿","can_delete":false,"product_type":"c1","uid":1012325,"ip_address":"","ucode":"65D7B030828809","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","comment_is_top":false,"comment_ctime":1571617624,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1571617624","product_id":100029501,"comment_content":"文中以MySQL为例讲解，SQL Server也是这样处理数据的吗？<br>什么样的数据放到了内存但不放到缓冲池？缓冲池也在内存中，为什么还要区分数据是否存在与缓冲池中？","like_count":0},{"had_liked":false,"id":124723,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1054958,"ip_address":"","ucode":"7501AD9C0C4A70","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","comment_is_top":false,"comment_ctime":1565951676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565951676","product_id":100029501,"comment_content":"感觉缓冲池很像MySQL里面的Redis。。<br><br>老师，随机读取的意思是不是comment_id in (1001,10002,95230,5698)这样啊？","like_count":0},{"had_liked":false,"id":124328,"user_name":"胡玲玲","can_delete":false,"product_type":"c1","uid":1438315,"ip_address":"","ucode":"BA8C5190A13A74","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEI9Fb9tYoBrjUa8zpvOTGibnKYI9fz1QnfXO1Dy5rp5DPJ7nQOHIIXzKOXet3DMqHNYIHJHyz6bm3g/132","comment_is_top":false,"comment_ctime":1565861494,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1565861494","product_id":100029501,"comment_content":"老师,有个问题请教一下:<br>项目中使用kafka来做消息传递,监控的主库的binlog;但是由于功能场景需要再查询从库,这时候主从延迟会导致数据问题,出了重试机制还有其他解决办法吗?<br>比如:能否在从库写入成功之后再发送消息","like_count":0},{"had_liked":false,"id":124048,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1565796846,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1565796846","product_id":100029501,"comment_content":"数据页的加载方式，我可以手工调整是随机读取还是顺序读取吗？","like_count":0},{"had_liked":false,"id":123939,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1565782909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565782909","product_id":100029501,"comment_content":"对于上面的问题是不是想问的是“所谓顺序多个页，平均下来每个页的读取时间为什么比随机读取一个页的时候小”的么？如果这样的话，就容易理解多了。主要还是和磁盘存储原理有关","like_count":0},{"had_liked":false,"id":123931,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1565782558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565782558","product_id":100029501,"comment_content":"数据缓冲池数据来源，一种是内存，一种是磁盘，其中磁盘读取时，又分为随机读取和顺序读取。另外数据缓冲池也是一块特殊的内存，也就是说如果源数据在内存的话，等于将数据从一块内存转到了另一块内存里，这样理解对么？","like_count":0},{"had_liked":false,"id":123735,"user_name":"马哲富","can_delete":false,"product_type":"c1","uid":1107917,"ip_address":"","ucode":"D6BDDFE3CC07ED","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/cd/08088f14.jpg","comment_is_top":false,"comment_ctime":1565748780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565748780","product_id":100029501,"comment_content":"怎样把数据存放在数据池中，又怎样批量的读取数据呢？","like_count":0},{"had_liked":false,"id":123729,"user_name":"空知","can_delete":false,"product_type":"c1","uid":1013283,"ip_address":"","ucode":"C448E98238DD36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/23/31e5e984.jpg","comment_is_top":false,"comment_ctime":1565748083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565748083","product_id":100029501,"comment_content":"顺序读快 磁盘悬臂除了第一次转半圈 找磁道之后不用做这个操作了<br><br>老师问下<br>1.innodb_buffer_pool_size是全部缓存池实例的总大小吗？所有实例均分这个 size吗？<br>2. mysql查询之前版本是开启缓存器的 这个跟缓冲区区别是啥？","like_count":0},{"had_liked":false,"id":123672,"user_name":"蒙开强","can_delete":false,"product_type":"c1","uid":1317706,"ip_address":"","ucode":"61B3183781B9F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/4a/f9df2d06.jpg","comment_is_top":false,"comment_ctime":1565742289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565742289","product_id":100029501,"comment_content":"老师，你好，这个缓冲池里存的是优化的语句还是查询的结果集呢","like_count":0}]}