{"id":496857,"title":"01｜ROI价值内核：自动化测试的价值可以量化么？","content":"<p>你好，我是柳胜。</p><p>作为测试人员，我们都想做好自动化测试，但是每个行业都有自己的规律，也就是说常说的道，自动化测试也有自己的道。所以，在这个模块，我们的目标是了解自动化测试的道是什么，怎么能运用它让自己的测试工作更加有成效。</p><p>今天是价值篇的第一讲，我们先来弄清楚自动化测试的价值究竟是什么？看到这你可能有点困惑，自动化测试有那么多公司都在搞，自然是有价值的啊，有啥可讨论的呢？</p><p>其实这个问题非常关键，在开始工作之前，要把我们的工作价值想清楚，后续工作才能事半功倍。我列几个工作中我们频繁听到的问题，你会更有感触。</p><ul>\n<li>（上级沟通）“产品要上线了，QA人手紧，能不能搞一下测试自动化，减少点人手？”</li>\n<li>（调动人手）“什么？你还要再增加2个自动化测试开发工程师来完成这个项目，他们都要做什么？”</li>\n<li>（工作述职）“听说你开发了个什么自动化脚本，它给公司带来了什么价值？用量化的数据给我讲一讲！”</li>\n</ul><p>这样的问句是不是似曾相识？其实它们都指向了一个硬核问题“自动化测试项目的价值是什么？”</p><p>在这节课，我要和你捋一下，为什么要做自动化测试，并且带你找到度量它价值的方法。掌握了这些，就能对自己的工作目标更清楚、更有信心，别人问到的时候，我们也能讲清楚、说明白，得到了团队理解工作将事半功倍。</p><!-- [[[read_end]]] --><h2>为什么要搞自动化测试</h2><p>开篇词中我提了出海捕鱼的场景，不只自动化测试，整个测试工作就像织网一样，会有弹性的空间，网眼大了、小了，捕到多少鱼，这些都有不确定性，但是这个不确定性又关系到成本和收益这些敏感问题，这是测试工作的一个特点。</p><p>我曾经跟我的团队说过 “咱们做测试工作，甭管用什么方法和技术，目标就是用最小的成本，得出对软件质量最大的确定性结论”。</p><p>自动化测试也面临相同的困难，为了解决这样的不确定，我们有必要好好分析一下，自动化的成本和收益究竟怎么算？</p><p>如果感觉这样问还有些抽象，我们不妨换个问法，自动化测试实施之前和之后，自动化带来的改变是什么？为了进一步完善思路，我们结合一个更具体的例子来做推理、估算。</p><p>这个例子是：一个Web UI 订火车票的软件，成功订一张火车票这个测试案例，要做自动化所花费的成本、还有得到的收益，会是多少呢？</p><p>自动化实施之前，测试案例的执行要靠手工完成，一个工程师需要花费0.5个小时，运行完登录、订车票，查看数据库这样一个测试流程。</p><p>而自动化测试实施之后，流程可以用Selenium脚本自动完成，原先手工测试半个小时的工作量就省下来了。那么，省下来的这半个小时这就是自动化测试带来的价值。对不对？</p><p>对，但还不全面，我们衡量效益，不应该只看回报，还要看成本，我们要算上开发自动化测试花费的成本。为了开发Selenium订火车票的这个脚本，自动化测试工程师花费了1天的时间，合计就是8个小时。</p><p>现在，这个Selenium自动化测试案例，它的投资收益比ROI应该这么计算（产出和投入都用时间作为单位）：</p><p>产出/投入 = 0.5/8= 0.0625</p><p>结果不到7%。哇，投入了8个小时，才收获了0.5个小时。如果这是一项投资的话，那肯定是亏本的。哪个公司愿意做这样的买卖呢？</p><p>但是，上面的公式只计算了运行一次自动化测试案例的ROI。实际上，自动化测试案例开发出来后，肯定不止运行一次的。多运行一次，就会多节省下来一份工作量，如果用n来指代运行次数，t指代单次测试时间，现在的产出变成了n*t，n越大，产出就会越大。</p><p>那上面订火车票案例，运行多少次才能收回成本呢？1/0.0625=16，只要这个selenium脚本运行超过16次，我们就可以让ROI=1，收支平衡，收回成本了。</p><p><img src=\"https://static001.geekbang.org/resource/image/7f/82/7fa80bffaae0f230411b67310e9ca582.jpg?wh=1900x801\" alt=\"图片\" title=\"运行次数&amp;ROI关系示意图\"></p><p>太棒了，现在你就可以对公司说：“我的自动化测试收益是可以量化的，只要我保证开发出来的脚本，能运行超过16次，就是为公司省钱了。”</p><p>且慢，还有一笔账没有算，除了开发成本，还有维护成本。自动化测试开发出来后，还需要维护版本升级、诊断错误、优化结构等等的工作，这笔成本是需要持续投入的。</p><p>现在这个Selenium在它线上运营生命周期内的ROI计算公式，变成了后面这样：</p><p>产出/投入 =  0.5*N/(8+维护成本）</p><p>我们把它提炼成一个计算公式，就是：</p><p><img src=\"https://static001.geekbang.org/resource/image/cd/00/cd34280bc70b3633e696a7ba16f9e300.jpg?wh=1920x868\" alt=\"图片\" title=\"ROI计算公式\"></p><p>这个公式很简单，但仔细揣摩可以推导出几个有意思的结论。</p><p><strong>1.ROI大于1就是赚了，小于1就是亏了。</strong>那么，给定一个测试案例，要不要对它做自动化，判断的依据是（自动化测试）预期ROI至少要大于1。</p><p><strong>2.自动化测试是一个长收益模式。</strong>在理想情况下，是一次性投入（投入为开发成本），之后每运行一次，就会增加一份产出。所以，时间越长，次数越多，收到的回报就会越大。</p><p>3.关于开发成本（包括开发成本d和维护成本m），类似估算软件开发工作量，代码行法、功能点法，我们也可以引入到估算开发工作量里，比较好掌握。<strong>但维护成本就有点模糊了，这里包含了多种可变因素，是自动化测试项目风险的主要来源。</strong></p><p>维护成本来自于多个地方。一段代码从产生以后，就会持续产生维护工作量，而且，因为存在架构腐化等问题，维护工作量增加速度是以非线性来增长的。</p><p>到了最后，一个陈旧的老破系统，加入一个新功能需要写10行代码，只要花5分钟。但是搞清楚这10行代码，应该加到哪个文件里，要花费3天时间。在这种时候，这个软件系统就已经不可维护了，它要寿终正寝了。自动化测试代码的维护成本更复杂，不仅面临着腐化的问题，还有被测产品更新带来的维护等等。</p><p>所以，在实践中，你看不到前面图里，那样简单漂亮的ROI直线，它会表现为一段曲线：自动化的ROI增长速度，要比运行次数增长慢一些，直到最后，每运行一次，花费的维护工作量，比节省的工作量还多，自动化就该退休了，也就是下线，重构完了再上线。</p><p><img src=\"https://static001.geekbang.org/resource/image/73/4d/73e3da46cce6542dceda6ddee0a5e54d.jpg?wh=1900x801\" alt=\"图片\" title=\"运行次数&amp;ROI关系示意图2.0版\"></p><p>这里我想提醒你注意，<strong>ROI模型提供的是一种自动化测试投资收益比的量化思路，方便我们明确哪些因素影响着自动化测试效益。</strong>不可能存在一个万能的公式，把参数往里一带，就会算出ROI的数字如果世间的事都这么简单，还需人类干什么。我们需要做的是尽可能量化，你对量化的了解越多，对自动化测试的理解就会更加深入全面。</p><h2>做不做自动化测试，能用数据说话么？</h2><p>从ROI的公式来看，自动化测试的收益取决于t和n，t指的是节省下来的手工工作量，还是比较容易理解的。在字面上，n是一份自动化测试案例重复运行的次数，那么在实践中，n是什么呢？</p><p>聪明的你可能已经猜到了，n是测试案例的稳定回归次数。软件的新功能开发出来后，第1次测试之后，第2次，第3次到第n次，都是对第1次的回归。它们都是重复的工作，应该被自动化替代。</p><p>你看，从ROI公式，我们很容易推导出业界熟知的经验<strong>“自动化测试是用来做回归测试的”</strong>。自动化是开发出来不会只运行一次，除非它的t特别大，实现了手工测试做不到的事情，比如单元测试、性能测试。</p><p>我们再回到回归测试，n作为回归测试次数，对自动化测试工作有什么启发呢？它的作用很大，因为它能帮助我们量化地去回答一个 “做不做自动化测试” 的关键问题</p><p>一个测试案例A做不做自动化测试？首先要看看它的n能有多大。</p><p>假设软件发布周期持续一年，每两周迭代一次，每次迭代都需要一次测试，那么在这一年里，需要回归测试次数至少是365/14=26次。如果还考虑一些紧急feature、patch的发布，那实际的回归次数要大于26次。这样，我们就能得到一个n的估算值，比如说30次。</p><p>得到估算值后，你的决策不再依赖直觉，而是有了可量化的思考逻辑。30次能不能收回来成本？能！那这个测试案例A就可以搞自动化。不能，你就面临亏本风险，自动化一顿操作猛如虎，测试工作还是苦，这是项目组里的每一个人都会感受到的。</p><p>刚才说的是基于软件发布周期不变的情况下，如何估算回归次数n。在实际工作中，自动化测试一旦做起来，带来的变化是：测试执行时间变快，软件发布周期缩短，又反过来增加回归次数n，自动化测试的收益也在增加。</p><p><strong>这里我们又得到一个结论：软件发布周期变短是自动化测试ROI提升的产物。</strong></p><p>总结来说，只要我们把注意力关注放在ROI上，后面的好处都会相继而来，测试质量提高了，发布周期缩短了，团队也更加有信心了。</p><h2>实践中，冒烟测试是你自动化的开始</h2><p>紧接着，咱们再考虑下一个问题，测试案例A需要30次回归，是不是在刚引入新功能A的第1次迭代，就开始运行自动化？我的答案是要根据情况来判断。</p><p>上面说到n是测试案例的稳定回归次数，注意<strong>稳定</strong>这两个字，它代表功能A已经稳固下来，不再变了。更精确地说，功能A即使有变化，但是变化规律已经可以被自动化测试吸纳。这种情况下，自动化测试运行才能发挥效益。</p><p>这里你可以看看后面这张图，画的是加特纳的技术成熟曲线，它也可以用来描述软件功能的发展过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/2f/e6/2fcb06174dca22b246630c5b5a5379e6.jpg?wh=1920x921\" alt=\"图片\" title=\"加特纳技术成熟度曲线\"></p><p>通过加特纳成熟度曲线可以看出，新功能在产生初期，一般是不稳定的，和它的预期有一个差距。经过几轮调整后，才会进入到一个平缓的阶段，这也是稳定回归测试的阶段。而不同类型的软件，它的功能成熟时间长短，变化剧烈程度可能是非常不一样。</p><p>有的软件是做标准化产品的，比如专业性强的B端财务软件，计税模块发布出来就很稳定，我们采取的策略是在第1个版本做计税模块的自动化。</p><p>有的互联网软件第1版是投放试验性的，我看过国外一个招聘网站经过产品设计，AB测试多轮后，打磨了x版才稳定下来简历模块，那么这时的策略是在x版本进行简历模块自动化。</p><p>还有的生命周期比较短的软件项目，虽然有迭代，但功能一直无法稳定，那可能需要考虑完全手工测试，根本不需要自动化测试。其实这些都可以通过ROI模型讲得通。</p><p>到这里，咱们总结一下我们通过ROI得出的三个核心观点：</p><p>1.自动化测试是用来做回归测试的。</p><p>2.自动化测试从哪里开始？实施顺序从ROI高到低，也就是（给定一个软件系统），优先做回归次数最高的那部分功能，先做自动化回归次数最高的案例，再做低的，直到ROI等于1的案例。在功能模块的初期，可以考虑先做手工测试。</p><p>3.自动化测试什么时候开始？功能模块稳定的时候。</p><p>实际上，有一个很好的测试实践可以匹配上面的要求，那就是冒烟测试。冒烟测试是测试用例的子集，用来验证系统中基础的、影响发布软件的功能。甄选冒烟测试的一个常用办法就是二八原则。</p><p>二八原则又叫帕累托原则，在因果关系中，仅有20%的因素会影响80%的结果。它在各个领域都有体现，比如在市场营销领域，80%的利润是由20%的用户创造的；在经济学里，80%的财富掌握在20%的人的手里。</p><p>在软件领域，80%用户，常用的是系统中20%的功能。冒烟测试覆盖的这部分20%功能，是常用的，一般也是核心的，最先被开发出来的。所以，它同时满足稳定和回归次数高两个特点。</p><p>进而我们就可以得到推论：<strong>在实践中，可以设定目标，冒烟测试100%自动化。</strong>这时，自动化测试就可以和手工测试配合，形成一个新版本发布+冒烟测试的简单流水线。</p><p>如图所示，先从代码管理工具比如CVS、Gitlab中的开发分支中拉取代码，build构建，做一轮冒烟测试。如果冒烟测试通过，开发分支可以merge到发布分支，如果冒烟测试失败，那开发人员必须修改代码，直到冒烟测试通过。</p><p>这个流水线Pipeline充分利用了自动化无人参与，执行速度快的特点，可以帮助开发人员在第一时间验证代码的正确。由于是每次分支归并都会调用冒烟测试，所以n的次数高，自动化测试的ROI也会高。</p><p><img src=\"https://static001.geekbang.org/resource/image/fe/62/fe138ec5e6513c05e111f72328414962.jpg?wh=1920x726\" alt=\"图片\" title=\"新版本发布+冒烟测试流程图解\"></p><h2>小结</h2><p>今天这一讲，我们通过一个投资产出视角来观察自动化测试，它的成本是什么，它的产出是什么，还学习了ROI的计算公式。</p><p>我们通过ROI的收益规律，不仅可以推导出自动化测试业界的已有共识，比如：“自动化是用来做回归测试”，“冒烟测试优先做自动化”……而且，我们还能挖掘出一些新的合理观点，比如：“ROI从高到低，来做自动化测试”。</p><p>这说明业界的实践已经有意或无意地践行ROI规律，因此可以说，<strong>ROI是一个自动化测试项目的隐式命脉</strong>。</p><p>同时，我们又详细介绍了ROI公式的因子n，测试案例的回归次数。在实践中，找到n来估算ROI，能帮你判断一个案例该不该做自动化。</p><p>ROI公式里，除了n还有其它因子。在后面的课程中，我们再一一介绍其它因子，像m维护成本，现在这个概念看起来还有点模糊，我还会帮你把它分解，直到可操作和可度量的粒度，让ROI的方法论更有效地指导你的工作。</p><h2>思考题</h2><p>学习ROI之后，你可以从开篇的三个问题里选择一个或多个，试着回答一下。</p><ul>\n<li>“产品要上线了，QA人手紧，能不能搞一下测试自动化，减少点人手?”</li>\n<li>“什么？你还要再增加2个自动化测试开发工程师来完成这个项目，怎么算出来的？”</li>\n<li>“听说你开发了个什么自动化脚本，它给公司带来了什么价值？用量化的数据给我讲一讲。”</li>\n</ul><p>欢迎你在留言区记录你的收获和思考。如果这一讲对你有启发，也可以推荐给身边更多同事、朋友，跟他一起学习进步。</p>","neighbors":{"left":{"article_title":"开篇词 | 做性价比最高的自动化测试","id":496850},"right":{"article_title":"02｜3KU法则：如何找出最优自动化实施截面？","id":497405}},"comments":[{"had_liked":false,"id":342534,"user_name":"羊羊","can_delete":false,"product_type":"c1","uid":1162597,"ip_address":"","ucode":"B220CE8D1CA5DA","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/65/fbdf4fc1.jpg","comment_is_top":true,"comment_ctime":1650330289,"is_pvip":false,"replies":[{"id":"125268","content":"是的，现在你的思考过程，是“归纳法”，从实践中总结出规律，然后就可以使用“演绎法”，从规律推导出更多的最佳实践！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1650548979,"ip_address":"","comment_id":342534,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720428000993e+18","product_id":100109201,"comment_content":"在实际工作中，我们是先从技术实现的角度，筛选出可以实现自动化的case，然后按照case的优先级排序，再计算开发脚本的时间，分批自动化case。学习了老师这节课程，终于找到理论依据了","like_count":2,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565847,"discussion_content":"是的，现在你的思考过程，是“归纳法”，从实践中总结出规律，然后就可以使用“演绎法”，从规律推导出更多的最佳实践！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650548979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350580,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":3043989,"ip_address":"","ucode":"6B352B35754B65","user_header":"","comment_is_top":true,"comment_ctime":1657013669,"is_pvip":false,"replies":[{"id":"127891","content":"哈，直接又清楚的回答！ 尤其最后一句话，是重点！一定想办法把这个价值表达出来！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1658065863,"ip_address":"","comment_id":350580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720385118003e+18","product_id":100109201,"comment_content":"1、先做稳定的主业务流程的自动化。 <br>2、再做手工执行次数高的自动化。 <br>3、尽量少做&#47;不做页面变动频繁的自动化。<br>以上三点可以覆盖这三个问题：<br>1、根据（执行次数*执行时间）&#47;开发时间 来比较回答。<br>2、ROI公式甩出去<br>3、根据ROI公式节省的时间与业界普遍的测试薪资挂钩，给出一个实际价值LOL。","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580291,"discussion_content":"哈，直接又清楚的回答！ 尤其最后一句话，是重点！一定想办法把这个价值表达出来！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658065863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339041,"user_name":"李慧文","can_delete":false,"product_type":"c1","uid":1949604,"ip_address":"","ucode":"F1DCB7262CCE8F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/MpF5Hia4Qwibdice7Qibk3iamUVZY3KglCymK67n5YEvZjX8GbFY1J2f1RGTbNibpnvicxYZGoJL7oicfbpBIfWTCe7Gbw/132","comment_is_top":false,"comment_ctime":1647870217,"is_pvip":false,"replies":[{"id":"123934","content":"是的，本专栏是想帮助同学们在工作实践中 “做最好性价比的自动化测试”，把我们有限的精力，投入到ROI最高的地方。不要做“重复的”，“无效的”自动化测试。","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1647919328,"ip_address":"","comment_id":339041,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23122706697","product_id":100109201,"comment_content":"ROI 是一个自动化测试项目的隐式命脉，说的太对了，可以说现在所有的工作，包括计算机行业外的工作，都完全离不开ROI","like_count":5,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557660,"discussion_content":"是的，本专栏是想帮助同学们在工作实践中 “做最好性价比的自动化测试”，把我们有限的精力，投入到ROI最高的地方。不要做“重复的”，“无效的”自动化测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647919328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339184,"user_name":"太匆匆","can_delete":false,"product_type":"c1","uid":1628299,"ip_address":"","ucode":"2F3F273CB65F5D","user_header":"https://static001.geekbang.org/account/avatar/00/18/d8/8b/d81769bf.jpg","comment_is_top":false,"comment_ctime":1647959948,"is_pvip":false,"replies":[{"id":"123977","content":"说得好！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1648019819,"ip_address":"","comment_id":339184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14532861836","product_id":100109201,"comment_content":"冒烟测试进行自动化确实是最合理的选择，现在有了ROI这个武器，拒绝自动化测试无限扩大就有底气了。天下苦无限自动化测试久矣！","like_count":4,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557891,"discussion_content":"说得好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648019819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340264,"user_name":"who am i","can_delete":false,"product_type":"c1","uid":1714128,"ip_address":"","ucode":"60C1E9F2242A41","user_header":"https://static001.geekbang.org/account/avatar/00/1a/27/d0/089e99f8.jpg","comment_is_top":false,"comment_ctime":1648707874,"is_pvip":true,"replies":[{"id":"124443","content":"是的！在ROI公式里，自动化测试是长收益模型，所谓远水解不了近渴。","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1648726768,"ip_address":"","comment_id":340264,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10238642466","product_id":100109201,"comment_content":"问题1“产品要上线了，QA 人手紧，能不能搞一下测试自动化，减少点人手?” ，重点是产品要上线了是时间成本限制问题，临近上线时间节点和投入自动化开发时间是否符合，如果不符合不能搞自动化，且自动化主要是用来回归测试，产品上线功能是都是稳定还是待定","like_count":3,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559380,"discussion_content":"是的！在ROI公式里，自动化测试是长收益模型，所谓远水解不了近渴。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648726768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339142,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1647937989,"is_pvip":false,"replies":[{"id":"123955","content":"非常到位！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1647954056,"ip_address":"","comment_id":339142,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10237872581","product_id":100109201,"comment_content":"note<br>1. 自动化测试是用来做回归测试的<br>2.软件发布周期变短是自动化测试 ROI 提升的产物。<br>3.ROI 是一个自动化测试项目的隐式命脉。","like_count":2,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557752,"discussion_content":"非常到位！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647954057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342872,"user_name":"闲不住的令狐冲","can_delete":false,"product_type":"c1","uid":1356156,"ip_address":"","ucode":"AD046EC2F3164E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7BNKxqREtUP9ZhWgic92pHKkaPLGPM4xVjnoyMhHoFiaMUq5L0cCgCEXbeibiaR7ONnXh3W72pJUH5lq5pmphs14sA/132","comment_is_top":false,"comment_ctime":1650513057,"is_pvip":false,"replies":[{"id":"125273","content":"感谢分享观点！希望在第三模块的“job设计”，能和你思路碰撞！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1650549368,"ip_address":"","comment_id":342872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5945480353","product_id":100109201,"comment_content":"既然作者的公式提到了d，那么我也分享一下个人在工作中的心得。因为本人做过十多年开发，代码功底凑合，所以在加入测试团队后，根据产品特点（注意这个），重构了团队自动化框架，大幅减小了d（当然也因为更好的可维护性和可扩展性顺带缩短了m），收益也非常明显，特别是在迭代的流量项目中。<br>所以，我建议有余力同时也想在工作中脱颖而出的tester们，抽空学习一下经典开发框架的原理和设计模式。","like_count":2,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565855,"discussion_content":"感谢分享观点！希望在第三模块的“job设计”，能和你思路碰撞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650549368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339790,"user_name":"Even","can_delete":false,"product_type":"c1","uid":1147948,"ip_address":"","ucode":"C3555903EE9525","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/2c/1b0926b4.jpg","comment_is_top":false,"comment_ctime":1648385898,"is_pvip":true,"replies":[{"id":"124428","content":"剧透一下，抓住重点了，后面这个公式还会常常出现、花样使用的，敬请期待～","user_name":"编辑回复","user_name_real":"编辑","uid":"1501385","ctime":1648693405,"ip_address":"","comment_id":339790,"utype":2}],"discussion_count":1,"race_medal":0,"score":"5943353194","product_id":100109201,"comment_content":"ROI=(n×t)&#47;(d+m)。 ","like_count":1,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559299,"discussion_content":"剧透一下，抓住重点了，后面这个公式还会常常出现、花样使用的，敬请期待～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648693405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339341,"user_name":"willwchen","can_delete":false,"product_type":"c1","uid":1128315,"ip_address":"","ucode":"75E256EF6A7A56","user_header":"https://static001.geekbang.org/account/avatar/00/11/37/7b/27c990df.jpg","comment_is_top":false,"comment_ctime":1648040237,"is_pvip":true,"replies":[{"id":"124071","content":"看出来可能你负责的是领域性软件，业务性比较强。测试人员在团队种被赋予了业务专家的属性，这时，能引起团队共鸣的一个自动化测试价值，是把业务知识规则化表达出来，先让知识可表达，可存储。我在1.5里会说到这个！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1648089627,"ip_address":"","comment_id":339341,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5943007533","product_id":100109201,"comment_content":"自动化测试提升节约了多少测试时间的度量标准，感觉只适用于测试团队内部度量，怎么把这种价值传递到整个业务团队，能让业务团队感知到自动化对业务带来的价值，这个是目前最大的挑战，现实是业务团队对提升的测试效率感知不强，不感兴趣，2个100万的自动化工程师，对业务团队的感知提升，可能不如4个50万的业务测试工程师，对比衡量，是不是4个50万业务测试工程师价值更大，这4个业务测试工程师除了本身测试工作，还能再完成70%-80%自动化测试工程师的工作，这是尴尬之处","like_count":1,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558087,"discussion_content":"看出来可能你负责的是领域性软件，业务性比较强。测试人员在团队种被赋予了业务专家的属性，这时，能引起团队共鸣的一个自动化测试价值，是把业务知识规则化表达出来，先让知识可表达，可存储。我在1.5里会说到这个！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648089627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1386673,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eperhqESS9OyTHeTvLrpE8HPPI3ZVdDQdYmZoQ7pKeaeicylcxuY0LjSBia0AqOjSEeicyHFSfYgViaNQ/132","nickname":"jogholy","note":"","ucode":"3CE64DA901BD1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":558790,"discussion_content":"领域性软件，比如汽车行业的行车电脑是不是就属于这类？对这个名词有点陌生，请教一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648468061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":558087,"ip_address":""},"score":558790,"extra":""}]}]},{"had_liked":false,"id":339112,"user_name":"woJA1wCgAAUtR8JWp4a3IwtyFaATrSyg","can_delete":false,"product_type":"c1","uid":2923457,"ip_address":"","ucode":"20590CCC0BD599","user_header":"","comment_is_top":false,"comment_ctime":1647921648,"is_pvip":false,"replies":[{"id":"123953","content":"这个可以有，需要和开发一起协作<br>单元测试领域的TDD测试驱动开发<br>集成测试领域里的基于契约的测试<br>UI测试领域可以和开发复用组件库","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1647953999,"ip_address":"","comment_id":339112,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5942888944","product_id":100109201,"comment_content":"开发没有完成的情况下，怎么用自动化去写冒烟用例给开发自测呢","like_count":1,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557750,"discussion_content":"这个可以有，需要和开发一起协作\n单元测试领域的TDD测试驱动开发\n集成测试领域里的基于契约的测试\nUI测试领域可以和开发复用组件库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647953999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1764317,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/eb/dd/6820bc96.jpg","nickname":"Tester","note":"","ucode":"5C0580005ABAE2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":557853,"discussion_content":"复用组件库这个可以展开讲下吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648001823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557750,"ip_address":""},"score":557853,"extra":""}]},{"author":{"id":1005830,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/06/07a5227e.jpg","nickname":"安家胜","note":"","ucode":"0E7A4D9C6D39D7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562995,"discussion_content":"有些平台提供 Mock 功能，例如免费的 YApi、收费的 Eolinker 等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649922801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349876,"user_name":"随片","can_delete":false,"product_type":"c1","uid":2139020,"ip_address":"","ucode":"1EDA99E17B20C7","user_header":"https://static001.geekbang.org/account/avatar/00/20/a3/8c/23b2464c.jpg","comment_is_top":false,"comment_ctime":1656400622,"is_pvip":true,"replies":[{"id":"127886","content":"谢谢分享！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1658064643,"ip_address":"","comment_id":349876,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656400622","product_id":100109201,"comment_content":"answer：<br>1、主要考虑功能是否可以自动化，能：可以搞；不能：没法搞。<br>2、时间成本的考虑，如果需要在定时时间内完成自动化测试脚本，那么三个人开发减少开发工作日是ok的；如果时间并不是那么急，我想一个人保质保量的处理是ok的。<br>3、能够在开发新部署后，检查主流程的原有功能。从手工执行时间、自动化覆盖面积和执行次数说明量化数据。","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580285,"discussion_content":"谢谢分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658064643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348543,"user_name":"豁之一晶","can_delete":false,"product_type":"c1","uid":2959745,"ip_address":"","ucode":"9E1710D256F6AC","user_header":"https://static001.geekbang.org/account/avatar/00/2d/29/81/763def68.jpg","comment_is_top":false,"comment_ctime":1655185978,"is_pvip":false,"replies":[{"id":"126984","content":"迭代时间短，是指每个Sprint周期短，是么？<br>这种情况下，回归次数快也频繁，对自动化测试的要求也高，覆盖率和稳定性。你可以按照ROI金字塔来规划自动化测试，先督促开发人员写好单元测试，再做API测试，然后到UI自动化测试。工作量分配也按照从单元测试到UI测试依次递减。<br>当然这是一般规律，如果你的项目有一些特殊要求，也可以考虑进去。","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1655295847,"ip_address":"","comment_id":348543,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1655185978","product_id":100109201,"comment_content":"感谢老师的分享。我有一个疑问：当产品迭代时间较短的时候，偏向做接口自动化测试够不够？","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576130,"discussion_content":"迭代时间短，是指每个Sprint周期短，是么？\n这种情况下，回归次数快也频繁，对自动化测试的要求也高，覆盖率和稳定性。你可以按照ROI金字塔来规划自动化测试，先督促开发人员写好单元测试，再做API测试，然后到UI自动化测试。工作量分配也按照从单元测试到UI测试依次递减。\n当然这是一般规律，如果你的项目有一些特殊要求，也可以考虑进去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655295847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345279,"user_name":"TechnicMan爱测试","can_delete":false,"product_type":"c1","uid":1860180,"ip_address":"","ucode":"8EAAA84871554D","user_header":"https://static001.geekbang.org/account/avatar/00/1c/62/54/dd0220f0.jpg","comment_is_top":false,"comment_ctime":1652169488,"is_pvip":false,"replies":[{"id":"126061","content":"思路非常到位！ROI不是要给出一个明确的数字，而是用ROI的思维来去解释自己的工作！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1652233532,"ip_address":"","comment_id":345279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1652169488","product_id":100109201,"comment_content":"听说你开发了个什么自动化脚本，它给公司带来了什么价值？用量化的数据给我讲一讲。<br>答： 开发了自动化脚本，最大的价值我认为是可以在快速迭代周期中能够进可能多的测试，这些测试不一定非要是回归测试使用，往往用于小单元的冒烟测试更加合适一些。<br>回归测试引入自动化就需要按照作者提出的ROI模型进行分析，看看投入产出比，维护成本，新脚本使用的迭代次数等，即使写好了一批自动化脚本，但是系统不稳定或者测试迭代次数少，这样投入的人员，时间跟后期维护代码都是不值得的","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571450,"discussion_content":"思路非常到位！ROI不是要给出一个明确的数字，而是用ROI的思维来去解释自己的工作！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652233532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344525,"user_name":"萧瑟","can_delete":false,"product_type":"c1","uid":1633901,"ip_address":"","ucode":"0C182BA4EF650C","user_header":"https://static001.geekbang.org/account/avatar/00/18/ee/6d/1e715544.jpg","comment_is_top":false,"comment_ctime":1651629572,"is_pvip":false,"replies":[{"id":"125821","content":"没错，就是这个道理。一般地，自动化测试是长期回报的，所谓远水解不了近渴。","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1651731589,"ip_address":"","comment_id":344525,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651629572","product_id":100109201,"comment_content":"按照目前所在公司的实际情况，产品已经要准备上线了，能不能搞一下自动化，我会说不能搞，因为手工回归测试的时间成本要远小于自动化脚本的开发工作（因为熟悉程度高，手工回归更加快速）","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570323,"discussion_content":"没错，就是这个道理。一般地，自动化测试是长期回报的，所谓远水解不了近渴。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651731589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342810,"user_name":"Geek_d00d65","can_delete":false,"product_type":"c1","uid":2572973,"ip_address":"","ucode":"64D5574B05C176","user_header":"","comment_is_top":false,"comment_ctime":1650469809,"is_pvip":true,"replies":[{"id":"125274","content":"非常靠谱！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1650549566,"ip_address":"","comment_id":342810,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650469809","product_id":100109201,"comment_content":"1、项目临上线投入自动化，时间成本上不允许，而且自动化测试是用来做回归测试、冒烟测试的<br>2、通过ROI，用数据说服上级，多投入人力能得到什么回报，并且自动化搞起来后会缩短测试周期<br>3、通过ROI解释自动化能带来什么价值同时也把数据摆出来了","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565858,"discussion_content":"非常靠谱！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650549566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341749,"user_name":"小熊","can_delete":false,"product_type":"c1","uid":1307604,"ip_address":"","ucode":"124AC161138BAF","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/d4/b2464dce.jpg","comment_is_top":false,"comment_ctime":1649819510,"is_pvip":false,"replies":[{"id":"125249","content":"谢谢分享！维护时间在后面两讲“框架”和“代码”里都有讲到。在最后一个模块“度量”模块里会提到量化的方法。","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1650546551,"ip_address":"","comment_id":341749,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649819510","product_id":100109201,"comment_content":"感谢老师的分享，ROI这个公式很受启发，我近期也在关注自动化的有效性，发现对于微服务环境的自动化维护来说，环境稳定性本身也是一个较大的难点，要保障环境稳定，降低维护时间。 <br>关于问题三：“听说你开发了个什么自动化脚本，它给公司带来了什么价值？用量化的数据给我讲一讲。”，我们的自动化测试主要是全量功能的回归，系统业务多且复杂性增加，那么迭代3年以上的功能随着人员更迭，可靠性会打折，所以用自动化实现，自动回归是对线上质量的更好保障，请问这种随迭代更新维护的自动化，每日会集中处理失败的自动化用例，请问ROI公式针对这种项目级的维护时间要怎么算？","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565811,"discussion_content":"谢谢分享！维护时间在后面两讲“框架”和“代码”里都有讲到。在最后一个模块“度量”模块里会提到量化的方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650546551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341131,"user_name":"悠悠我心","can_delete":false,"product_type":"c1","uid":1758024,"ip_address":"","ucode":"2C1A775917C96C","user_header":"","comment_is_top":false,"comment_ctime":1649382833,"is_pvip":false,"replies":[{"id":"124755","content":"冒烟测试，是泛指高优先级测试集合。端到端case有冒烟测试，接口case多的话，也有接口冒烟测试！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1649518429,"ip_address":"","comment_id":341131,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649382833","product_id":100109201,"comment_content":"版本在稳定后开始做自动化测试，首先从收益最大的冒烟测试着手自动化，这里的冒烟测试我理解是线上功能的20%常用的功能，但每次都需要从分支代码回归，这里的具体的回归方式不太理解怎么实现，涉及到服务端+客户端，感觉特别难以实现","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561048,"discussion_content":"冒烟测试，是泛指高优先级测试集合。端到端case有冒烟测试，接口case多的话，也有接口冒烟测试！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649518429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340912,"user_name":"assange0","can_delete":false,"product_type":"c1","uid":2360590,"ip_address":"","ucode":"77BB60E4B039DA","user_header":"https://static001.geekbang.org/account/avatar/00/24/05/0e/8f35d78a.jpg","comment_is_top":false,"comment_ctime":1649228047,"is_pvip":true,"replies":[{"id":"124657","content":"很好的思考！人工介入时间可以理解为维护成本的一部分。为了让ROI容易理解，先做到简单抽象！我相信进入实践中，大家能对这个公式更加细化！","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1649253471,"ip_address":"","comment_id":340912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649228047","product_id":100109201,"comment_content":"关于ROI=(n*t)&#47;(d+m)，但是实际上我觉得作为分母的自动化成本应该是d+m+ta*n，其中ta是每次自动化执行过程中需要人工介入的时间，只是理想状态下的自动化测试这个ta会趋近于0，所以被省略了。","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560294,"discussion_content":"很好的思考！人工介入时间可以理解为维护成本的一部分。为了让ROI容易理解，先做到简单抽象！我相信进入实践中，大家能对这个公式更加细化！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649253472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340146,"user_name":"王凤伟","can_delete":false,"product_type":"c1","uid":2347098,"ip_address":"","ucode":"04C6E4BE50A109","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJuGM38WOWoDs35wKNhUz5AyZXDwWyqfsBnyS21MdWVsPpVDKoNfyzib1MYdgsCzkzgu7FNzpTHxCw/132","comment_is_top":false,"comment_ctime":1648628551,"is_pvip":true,"replies":[{"id":"124410","content":"这里的冒烟测试，也是回归测试的一种。新代码有可能破坏老功能，开发需要在测试的保护下做代码变更。这是测试的价值。","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1648652405,"ip_address":"","comment_id":340146,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1648628551","product_id":100109201,"comment_content":"老师 我再补充一个疑问，如果冒烟测试使用自动化，可是开发还没提测，等开发提测后我们有维护自动化代码的时间手工也冒烟完啦，如果冒烟历史功能，历史功能已经发布到线上啦，我们冒烟它意义是什么呢？ ","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559241,"discussion_content":"这里的冒烟测试，也是回归测试的一种。新代码有可能破坏老功能，开发需要在测试的保护下做代码变更。这是测试的价值。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648652405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347098,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJuGM38WOWoDs35wKNhUz5AyZXDwWyqfsBnyS21MdWVsPpVDKoNfyzib1MYdgsCzkzgu7FNzpTHxCw/132","nickname":"王凤伟","note":"","ucode":"04C6E4BE50A109","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559497,"discussion_content":"谢谢老师的解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648799015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340145,"user_name":"王凤伟","can_delete":false,"product_type":"c1","uid":2347098,"ip_address":"","ucode":"04C6E4BE50A109","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJuGM38WOWoDs35wKNhUz5AyZXDwWyqfsBnyS21MdWVsPpVDKoNfyzib1MYdgsCzkzgu7FNzpTHxCw/132","comment_is_top":false,"comment_ctime":1648628317,"is_pvip":true,"replies":[{"id":"124404","content":"我们可以把回归这个词先抛开，想一下测试是不是需要在各个环境下运行，它们的作用是什么。然后回归测试是测试的一种，你可以简单理解除了新功能的测试，剩下需要执行的测试都叫回归测试。为了保护新code不会broken已有的功能，所以能越早运行发现bug就越好啦。","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1648651731,"ip_address":"","comment_id":340145,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1648628317","product_id":100109201,"comment_content":"老师 请教一个问题，文中说自动化测试主要用来回归测试，那么，自动化测试到底是在生产环境执行回归 还是测试环境执行回归呢？如果在测试环境执行回归，回归的意义是什么？如果在生产回归，已经发布到线上啦，回归的意义又是什么呢？","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559234,"discussion_content":"我们可以把回归这个词先抛开，想一下测试是不是需要在各个环境下运行，它们的作用是什么。然后回归测试是测试的一种，你可以简单理解除了新功能的测试，剩下需要执行的测试都叫回归测试。为了保护新code不会broken已有的功能，所以能越早运行发现bug就越好啦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648651731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347098,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJuGM38WOWoDs35wKNhUz5AyZXDwWyqfsBnyS21MdWVsPpVDKoNfyzib1MYdgsCzkzgu7FNzpTHxCw/132","nickname":"王凤伟","note":"","ucode":"04C6E4BE50A109","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559498,"discussion_content":"谢谢老师的解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648799027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339644,"user_name":"郑小菜","can_delete":false,"product_type":"c1","uid":1546026,"ip_address":"","ucode":"B350EC4E18BFA3","user_header":"https://static001.geekbang.org/account/avatar/00/17/97/2a/84f3ee46.jpg","comment_is_top":false,"comment_ctime":1648267088,"is_pvip":false,"replies":[{"id":"124173","content":"我试着get一下你要说的意思哈，如果产品是基于work flow的，那么冒烟测试应该是产品中那部分最常用最基本的flow path，应该就是你说的“产品主流程”。所以，冒烟测试的用途是这样的，如果它失败了，其他的功能都不需要测了，直接返回开发修改。冒烟测试也可以用在很多场景，提测feature是场景之一，后面1.6讲，也会提到线上监控使用冒烟测试。","user_name":"作者回复","user_name_real":"编辑","uid":"1877634","ctime":1648374480,"ip_address":"","comment_id":339644,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648267088","product_id":100109201,"comment_content":"有个问题请教下，文中提到的“冒烟测试”，我是否可以理解为产品主流程？还是说指的就是持续集成中某个要提测feature的核心case？","like_count":0,"discussions":[{"author":{"id":1877634,"avatar":"","nickname":"sunshinelius","note":"","ucode":"50F35834586E4A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558547,"discussion_content":"我试着get一下你要说的意思哈，如果产品是基于work flow的，那么冒烟测试应该是产品中那部分最常用最基本的flow path，应该就是你说的“产品主流程”。所以，冒烟测试的用途是这样的，如果它失败了，其他的功能都不需要测了，直接返回开发修改。冒烟测试也可以用在很多场景，提测feature是场景之一，后面1.6讲，也会提到线上监控使用冒烟测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648374480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339296,"user_name":"IT蜗壳-Tango","can_delete":false,"product_type":"c1","uid":1000612,"ip_address":"","ucode":"92330844C1EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/a4/7a45d979.jpg","comment_is_top":false,"comment_ctime":1648026041,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648026041","product_id":100109201,"comment_content":"ROI的维护成本的确很难确定，除了维护成本还有作业报告的分析等因素","like_count":0},{"had_liked":false,"id":339144,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1647938171,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647938171","product_id":100109201,"comment_content":"1.快上线了 应该不能吧  来不及了 下次<br>2. unknown<br>3.ROI,  降低了重复执行用例的时间， 提高了效率。<br>为后期自动化回归测试用例，当n&gt; flag  适合做自动化， ROI&gt;1 , 为盈利状态；","like_count":0}]}