{"id":222935,"title":"开篇词 |  阅读源码，逐渐成了职业进阶道路上的“必选项”","content":"<p>你好，我是胡夕，Apache Kafka Committer，老虎证券用户增长团队负责人，也是《Apache Kafka实战》这本书的作者。</p><p>2019年，我在极客时间开设了我的第一个专栏《Kafka核心技术与实战》，想要帮助Kafka用户掌握Kafka核心设计原理及实战应用技术。时隔一年，我又带来了一个源码专栏。在这个专栏中，我会带你深入到Kafka核心源码，详细分析和讲述那些源码背后的架构思想和编程理念。同时，我还会针对一些棘手问题，给出源码级的解决思路。</p><h2>为什么要读源码？</h2><p>谈到源码分析，特别是Apache Kafka这类消息引擎的源码，你可能会说：“我都已经在使用它了，也算是也比较熟练了，何必还要再花费时间去阅读源码呢？”</p><p>当然了，一些非Kafka使用者也会说：“我不用Kafka，读源码对我有什么用呢？”</p><p>其实，在没有阅读源码之前，我也是这么想的。但是，后来在生产环境上碰到的一件事，彻底改变了我的想法。</p><p>我们知道，Kafka Broker端有个log.retention.bytes参数，官网的描述是：它指定了留存日志的最大值。有了这个参数的“帮忙”，我们信誓旦旦地向领导保证，不会过多占用公司原本就很紧张的物理磁盘资源。但是，最终实际占用的磁盘空间却远远超出了这个最大值。</p><!-- [[[read_end]]] --><p>我们查遍了各种资料，却始终找不到问题的根因，当时，我就想，只能读源码碰碰运气了。结果，源码非常清楚地说明了，这个参数能不能起作用和日志段大小息息相关。知道了这一点，问题就迎刃而解了。</p><p>这时，我才意识到，很多棘手的问题都要借助源码才能解决。</p><p>除此之外，我还发现，在很多互联网公司资深技术岗位的招聘要求上，“读过至少一种开源框架的源码”赫然在列。这也就意味着，<strong>阅读源码正在从“加分项”向“必选项”转变，掌握优秀的框架代码实现从NICE-TO-DO变成了MUST-DO</strong>。</p><p>那，为什么读源码逐渐成为了必选项？它究竟有什么作用呢？下面我结合我自己的经历，和你说说读源码的几点收获。</p><p><strong>1.可以帮助你更深刻地理解内部设计原理，提升你的系统架构能力和代码功力。</strong></p><p>作为一款优秀的消息引擎，Kafka的架构设计有很多为人称道的地方，掌握了这些原理将极大地提升我们自身的系统架构能力和代码功力。</p><p>当然了，即使你不使用Kafka，也可以借鉴其优秀的设计理念，提升你在其他框架上的系统架构能力。</p><p>你可能会问，官网文档也有相应的阐述啊，我单纯阅读文档不就够了吗？</p><p>实际上，我一直认为社区官方文档的内容有很大的提升空间，<strong>Kafka有许多很棒的设计理念和特性，在文档中并未得到充分的阐述。</strong></p><p>我简单举个例子。Kafka中有个非常重要的概念：<strong>当前日志段（Active Segment）</strong>。Kafka的很多组件（比如LogCleaner）是区别对待当前日志段和非当前日志段的。但是，Kafka官网上几乎完全没有提过它。</p><p>所以你看，单纯依赖官网文档的话，肯定是无法深入了解Kafka的。</p><p><strong>2.可以帮你快速定位问题并制定调优方案，减少解决问题的时间成本。</strong></p><p>很多人认为，阅读源码需要花费很多时间，不值得。这是一个非常大的误区。</p><p>实际上，你掌握的源码知识可以很好地指导你日后的实践，帮助你快速地定位问题的原因，迅速找到相应的解决方案。最重要的是，<strong>如果你对源码了然于心，你会很清楚线上环境的潜在问题，提前避“坑”。在解决问题时，阅读源码其实是事半功倍的“捷径”</strong>。</p><p>如果用时间成本来考量的话，你可以把阅读源码的时间分摊到后续解决各种问题的时间上，你会发现，这本质上是一件划算的事情。</p><p><strong>3.你还能参加Kafka开源社区，成为一名代码贡献者（Contributor）。</strong></p><p>在社区中，你能够和全世界的Kafka源码贡献者协同工作，彼此分享交流，想想就是一件很有意思的事情。特别是当你的代码被社区采纳之后，全世界的Kafka使用者都会使用你写的代码。这简直太让人兴奋了，不是吗？</p><p>总而言之，<strong>阅读源码的好处真的很多，既能精进代码功力，又能锤炼架构技巧，还能高效地解决实际问题，有百利而无一害。</strong></p><h2>如何用最短的时间掌握最核心的源码？</h2><p>Kafka代码有50多万行，如果我们直接冲下场开始读，一定会“丈二和尚摸不着头脑”。</p><p>毕竟，面对这么多代码，通读一遍的效率显然并不高。为了避免从入门到放弃，我们要用最高效的方式阅读最核心的源码。</p><p>通常来说，阅读大型项目的源码无外乎两种方法。</p><ul>\n<li><strong>自上而下（Top-Down）</strong>：从最顶层或最外层的代码一步步深入。通俗地说，就是从 main 函数开始阅读，逐渐向下层层深入，直到抵达最底层代码。这个方法的好处在于，你遍历的是完整的顶层功能路径，这对于你了解各个功能的整体流程极有帮助。</li>\n<li><strong>自下而上（Bottom-Up）</strong>：跟自上而下相反，是指先独立地阅读和搞懂每个组件的代码和实现机制，然后不断向上延展，并最终把它们组装起来。该方法不是沿着功能的维度向上溯源的，相反地，它更有助于你掌握底层的基础组件代码。</li>\n</ul><p>这两种方法各有千秋，不过，在学习Kafka源码的过程中，我发现，将两者结合的方法其实是最高效的，即先弄明白最细小单位组件的用途，然后再把它们拼接组合起来，掌握组件组合之后的功能。</p><p>具体怎么做呢？首先，你要确认最小单位的组件。我主要是看Kafka源码中的包结构（package structure），比如controller、log、server等，这些包基本上就是按照组件来划分的。我给这些组件确定的优先级顺序是“log–&gt;network–&gt;controller–&gt;server–&gt;coordinator–&gt;……”，毕竟，后面的组件会频繁地调用前面的组件。</p><p>等你清楚地了解了单个组件的源码结构，就可以试着切换成自上而下的方法，即从一个大的功能点入手，再逐步深入到各个底层组件的源码。得益于前面的积累，你会对下沉过程中碰到的各层基础代码非常熟悉，这会带给你很大的成就感。比起单纯使用自上而下或自下而上的方法，这套混合方法兼具了两者的优点。</p><p>关于如何选择大的功能点，我建议你从Kafka的命令行工具开始这种串联学习，搞明白这个工具的每一步都是怎么实现的，并且在向下钻取的过程中不断复习单个组件的原理，同时把这些组件结合在一起。</p><p>随着一遍遍地重复这个过程，你会更清楚各个组件间的交互逻辑，成为一个掌握源码的高手！</p><p>知道了方法以后，我们就可以开始Kafka源码的学习了。在深入细节之前，我们先来看下Kafka的源码全景图，找到核心的源码。</p><p><img src=\"https://static001.geekbang.org/resource/image/97/bd/971dee49c13fd501ceecaa9c573e79bd.jpg?wh=1229*636\" alt=\"\"></p><p>从功能上讲，Kafka源码分为四大模块。</p><ul>\n<li>服务器端源码：实现Kafka架构和各类优秀特性的基础。</li>\n<li>Java客户端源码：定义了与Broker端的交互机制，以及通用的Broker端组件支撑代码。</li>\n<li>Connect源码：用于实现Kafka与外部系统的高性能数据传输。</li>\n<li>Streams源码：用于实现实时的流处理功能。</li>\n</ul><p>可以看到，服务器端源码是理解Kafka底层架构特别是系统运行原理的基础，其他三个模块的源码都对它有着强烈的依赖。因此，<strong>Kafka最最精华的代码，当属服务器端代码无疑！</strong>我们学习这部分代码的性价比是最高的。</p><h2>专栏是如何设计的？</h2><p>那，我们就抓紧开始吧。在这个专栏里，我基于自己对服务器端源码结构的理解，特意为你精选了下面这些源码。</p><p><strong>这些源码全都是极具价值的组件，也是很多实际线上问题的“高发重灾区”</strong>。比如，Kafka日志段的代码逻辑就是很多线上异常的“始作俑者”。掌握这些源码能够大大地缩短你定位问题花费的时间。</p><p>我把服务器端源码按照功能划分了7个模块，每个模块会进一步划开多个子部分，详细地给出各个组件级的源码分析。你可以看下这张思维导图的重点介绍。</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/21/d0b557ff04864adafc4cdc7572cf0a21.jpg?wh=1514*842\" alt=\"\"></p><h3>丰富的流程图+细粒度讲解</h3><p>在读源码时，我们最常犯两种错误，一种是直接深入最底层的一行行源码之中，陷入细枝末节；另一种是过于粗粒度地学习，学了跟没学没有什么区别。</p><p>为了帮助你高效地学习，我摒弃了贪多求全的源码讲解方式，而是采用“流程图+代码注释”相结合的方式，对重点内容进行细粒度讲解，还会结合我的实战经验，给你划重点。</p><p>在阅读源码之前，你可以借助图片对各个方法的实现逻辑有个大致的了解。对于重点内容，我会用详细的注释形式帮助你理解。同时，我还绘制了思维导图，帮你总结回顾。</p><h3>真实的案例讲解，解决你的实战问题</h3><p>很多人虽然也读源码，却不懂源码可以应用到什么场景、解决什么问题。事实上，我在生产环境中碰到的很多问题，都是没办法单纯依赖官方文档或搜索引擎顺利解决的。只有阅读源码，切实掌握了实现原理，才能找到解决方案。</p><p>为了帮你学以致用，我会在专栏里给你分享大量的真实案例，既帮助你提前规避陷阱，也帮你积累一些常见问题的解决方案，有一些甚至是不见诸于文档的“武林秘籍”。</p><h3>传递社区的最新发展动向</h3><p>这是专栏最有意思的一部分。我们学习的Kafka源码每天都在不断地演进着，要想玩转Kafka，就必须要知道社区未来的更新计划以及重大功能改进。</p><p>我会针对一些具体的主题，给你分享最新的动态资讯。我希望展现在你面前的不再是一行行冰冷的代码，而是一个生动活泼的社区形象，让你真正有参与到社区的感觉。不要小看这种感觉，有的时候，它甚至是支撑你走完源码学习之路的最强大动力。</p><h3>课外拓展</h3><p>除此之外，我还会跟你分享一些延伸内容。比如成为Apache Kafka社区的代码贡献者的具体方法、实用的学习资料、经典的面试题讲解等，希望你也不要错过这部分的内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/69/3c/6961bc3841b09586cfayyf97f1fc803c.jpg?wh=750*4027\" alt=\"\"></p><p>最后，<strong>我还想再和你说说Scala语言的问题</strong>。毕竟，我们将要一起学习的Broker端源码是完全基于Scala的。</p><p>不过，这部分源码并没有用到Scala多少高大上的语法特性。如果你有Java语言基础，就更不用担心语言的问题了，因为它们有很多特性非常相似。</p><p>即使你不熟悉Scala语言也没关系。你不需要完整、系统地学习这门语言，只要能简单了解基本的函数式编程风格，以及它的几个关键特性，比如集合遍历、模式匹配等，就足够了。</p><p>当然了，为了不影响你理解专栏内涉及的源码，我会在“导读”这节课里带你深入了解下Scala语言。同时，在专栏里遇到Scala比较难的语言特性时，我也会和你具体解释。所以，你完全不用担心语言的问题。</p><p>好了，现在，我们就正式开启Apache Kafka源码分析学习之旅吧。正所谓：“日拱一卒无有尽，功不唐捐终入海。”阅读源码是个“苦差事”，希望你别轻易放弃。毕竟，<strong>掌握了源码，你就走在了很多人的前面</strong>。</p><p>最后，我很荣幸能够和你在这里相遇，一起学习交流，也欢迎你给我留言，说说你对Kafka源码分析的看法和疑问。</p>","neighbors":{"left":[],"right":{"article_title":"导读 | 构建Kafka工程和源码阅读环境、Scala语言热身","id":223962}},"comments":[{"had_liked":false,"id":206038,"user_name":"东风第一枝","can_delete":false,"product_type":"c1","uid":1402697,"ip_address":"","ucode":"0CD0F62E90DAD8","user_header":"https://static001.geekbang.org/account/avatar/00/15/67/49/864dba17.jpg","comment_is_top":false,"comment_ctime":1586777695,"is_pvip":false,"replies":[{"id":"76991","content":"一起加油！期望在社区看到你！","user_name":"作者回复","comment_id":206038,"uid":"1288090","ip_address":"","utype":1,"ctime":1586827845,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"87486123615","product_id":100050101,"comment_content":"打卡，第一期就是跟着老师学的。我的目标是成为一名源代码贡献者，加油！","like_count":21,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491646,"discussion_content":"一起加油！期望在社区看到你！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586827845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206132,"user_name":"镜子中间","can_delete":false,"product_type":"c1","uid":1463674,"ip_address":"","ucode":"21673BD6CC41F4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qsmAdOC3R3twep9xwiboiaNF6u3fk5jNZGibKrBuILKgyNMH0DAQMg3liaWQ7ntVAFGEBCg5uB9y9KdKrhD65TyGgQ/132","comment_is_top":false,"comment_ctime":1586791471,"is_pvip":false,"replies":[{"id":"77000","content":"谢谢鼓励。我们一起加油~ 另外多提宝贵意见~","user_name":"作者回复","comment_id":206132,"uid":"1288090","ip_address":"","utype":1,"ctime":1586828805,"user_name_real":"胡夕"}],"discussion_count":3,"race_medal":0,"score":"31651562543","product_id":100050101,"comment_content":"是胡夕老师带我进入了Kafka的世界，从最早的博客、公众号文章到老师的那本实战书以及极客时间的第一个Kafka专栏，一路下来收获颇多。等这个源码专栏很久了，果断买了！","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491687,"discussion_content":"谢谢鼓励。我们一起加油~ 另外多提宝贵意见~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586828805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/52/0a9d6073.jpg","nickname":"richard","note":"","ucode":"C1ABB3023DF1C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306300,"discussion_content":"老师公众号提供一下吧，多谢了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600241510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025622,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a6/56/abb7bfe3.jpg","nickname":"云韵","note":"","ucode":"3DE26DBAAAEDE6","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233032,"discussion_content":"老师的博客和公众号是什么，谢谢了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586904772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218563,"user_name":"三颗豆子","can_delete":false,"product_type":"c1","uid":2008638,"ip_address":"","ucode":"632CE3E7563666","user_header":"https://static001.geekbang.org/account/avatar/00/1e/a6/3e/3d18f35a.jpg","comment_is_top":false,"comment_ctime":1589818348,"is_pvip":false,"replies":[{"id":"80796","content":"Scala语言毕竟还是比较小众，不如Java来的普及~","user_name":"作者回复","comment_id":218563,"uid":"1288090","ip_address":"","utype":1,"ctime":1589850219,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"18769687532","product_id":100050101,"comment_content":"胡哥你好，粗略了解了下，Kafka由Java和Scala两种语言混合编写，混合编译成字节码由JVM执行。请问作者为什么后来不单纯地使用Scala，而是加入了Java呢，这方面是有什么考虑吗，比如库、性能、生态之类的？谢谢。","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495510,"discussion_content":"Scala语言毕竟还是比较小众，不如Java来的普及~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589850219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208627,"user_name":"欧阳","can_delete":false,"product_type":"c1","uid":1196886,"ip_address":"","ucode":"2612576E262813","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/56/62c38c36.jpg","comment_is_top":false,"comment_ctime":1587392588,"is_pvip":true,"replies":[{"id":"78141","content":"rdkafka的设计不是很了解。从官网来看，的确如你所说，应用需要定期调用rd_kafka_poll来触发回调。可能是producer端没有专属的后台线程来做这件事，所以需要应用自行完成。反观Java producer，producer后台有专属的Sender线程来触发回调，因此不需要应用自行poll。这可能就是设计上的区别。","user_name":"作者回复","comment_id":208627,"uid":"1288090","ip_address":"","utype":1,"ctime":1587519409,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"14472294476","product_id":100050101,"comment_content":"老师，求问一下，rdkafka 即使是producer也需要定期调用poll接口。否则会报：Local: queue FULL。<br>看了源码注释，说是为了能正确回调，我理解成异步producer设置的回调能调用。感觉有点不太明白：我理解不是应用通过producerAsync写入kafka client本地缓存，kfk client周期性的或者按缓存发现发送给brokers就行了吗？为什么还要应用来定时poll？设计有点令人费解。","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492546,"discussion_content":"rdkafka的设计不是很了解。从官网来看，的确如你所说，应用需要定期调用rd_kafka_poll来触发回调。可能是producer端没有专属的后台线程来做这件事，所以需要应用自行完成。反观Java producer，producer后台有专属的Sender线程来触发回调，因此不需要应用自行poll。这可能就是设计上的区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587519409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205994,"user_name":"客行","can_delete":false,"product_type":"c1","uid":1576654,"ip_address":"","ucode":"FF508FF1346F1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/0e/ce/9c96fa35.jpg","comment_is_top":false,"comment_ctime":1586770422,"is_pvip":false,"replies":[{"id":"76986","content":"这位同学看着眼熟：）","user_name":"作者回复","comment_id":205994,"uid":"1288090","ip_address":"","utype":1,"ctime":1586827548,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"14471672310","product_id":100050101,"comment_content":"文章写得好，老师的录音也很好，真是赚到啦","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491638,"discussion_content":"这位同学看着眼熟：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586827548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206462,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1311138,"ip_address":"","ucode":"5DE9C96C0AB62C","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/a2/bb120ffd.jpg","comment_is_top":false,"comment_ctime":1586865448,"is_pvip":false,"replies":[{"id":"77337","content":"谢谢鼓励，咱们一起努力","user_name":"作者回复","comment_id":206462,"uid":"1288090","ip_address":"","utype":1,"ctime":1587003938,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"10176800040","product_id":100050101,"comment_content":"又听到老师熟悉的声音啦！之前看了老师的kafka的专栏，然后工作中用到了很多，感谢老师！","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491801,"discussion_content":"谢谢鼓励，咱们一起努力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587003938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206230,"user_name":"北冥有鱼","can_delete":false,"product_type":"c1","uid":1592243,"ip_address":"","ucode":"1690734A1061F4","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/b3/51bb33f2.jpg","comment_is_top":false,"comment_ctime":1586826261,"is_pvip":false,"replies":[{"id":"77014","content":"谢谢，一起加油！","user_name":"作者回复","comment_id":206230,"uid":"1288090","ip_address":"","utype":1,"ctime":1586830599,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"10176760853","product_id":100050101,"comment_content":"也买了胡老师的书，现阶段也在做大数据相关工作，跟着胡老师成大神✌","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491721,"discussion_content":"谢谢，一起加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586830599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205988,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1586769505,"is_pvip":true,"replies":[{"id":"76985","content":"一起加油~ 另外你的名字看成KaKa了，哈哈，超喜欢卡卡~","user_name":"作者回复","comment_id":205988,"uid":"1288090","ip_address":"","utype":1,"ctime":1586827537,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"10176704097","product_id":100050101,"comment_content":"赞，支持","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491636,"discussion_content":"一起加油~ 另外你的名字看成KaKa了，哈哈，超喜欢卡卡~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586827537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296677,"user_name":"秋林","can_delete":false,"product_type":"c1","uid":1060632,"ip_address":"","ucode":"B5882D4EC73648","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/18/0c943f98.jpg","comment_is_top":false,"comment_ctime":1623115555,"is_pvip":false,"replies":[{"id":"107765","content":"加油～","user_name":"编辑回复","comment_id":296677,"uid":"2547771","ip_address":"","utype":2,"ctime":1623116643,"user_name_real":"叶如芊"}],"discussion_count":1,"race_medal":0,"score":"5918082851","product_id":100050101,"comment_content":"打卡，再次听到胡夕老师的声音非常舒服。<br>希望我也能成为kafka社区贡献者！","like_count":1,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521545,"discussion_content":"加油～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623116643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234740,"user_name":"张洋","can_delete":false,"product_type":"c1","uid":1182914,"ip_address":"","ucode":"549BE5DEEF8417","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/c2/bad34a50.jpg","comment_is_top":false,"comment_ctime":1594784623,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5889751919","product_id":100050101,"comment_content":"现在留言有点晚了，之前一直在学习胡夕老师的kafka核心技术与实战，感觉收获很大。<br>期间也看了点日志段的源码解析，第一次基本看不懂，然后跟着老师的思路理解了思路是什么，但是总觉得还差点意思，后来看了胡夕老师的书籍，仔细研究了 kafka是如何存储.log,.index.timeindex的以及如何进行查找的，再去看源码发现恍然大悟。  再难的东西也抵不住，下死工夫，只要用心去学，一定会学会的。 这次从头来学习一下这个专栏（之前看了四五章）希望自己可以得到很大的提升，成为一名源代码的贡献者！！！！","like_count":1},{"had_liked":false,"id":233071,"user_name":"Geek_a9b0fb","can_delete":false,"product_type":"c1","uid":2054473,"ip_address":"","ucode":"C22079C38EB7D7","user_header":"","comment_is_top":false,"comment_ctime":1594209763,"is_pvip":false,"replies":[{"id":"86019","content":"Kafka没有提供这样的功能:( 你需要自己实现，比如拿到消息后等待30分钟再处理","user_name":"作者回复","comment_id":233071,"uid":"1288090","ip_address":"","utype":1,"ctime":1594256379,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"5889177059","product_id":100050101,"comment_content":"老师，想问下，kafka如何做延迟消费。比如30分钟后，开始消费数据给用户发通知","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500878,"discussion_content":"Kafka没有提供这样的功能:( 你需要自己实现，比如拿到消息后等待30分钟再处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594256379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206938,"user_name":"阿洋","can_delete":false,"product_type":"c1","uid":1177800,"ip_address":"","ucode":"132ECB1B5F41D4","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/c8/432899be.jpg","comment_is_top":false,"comment_ctime":1586960166,"is_pvip":false,"replies":[{"id":"77312","content":"“如何跟进一个问题？” --- 社区一般通过jira去追踪某个问题。有的时候也通过邮件。这两种方式你都需要“如何跟进一个问题？” --- 社区一般通过jira去追踪某个问题。有的时候也通过邮件。<br>“如何参与kafka有个代码块的改进及讨论？” --- 比较正式的改进你可以创建jira。如果是不太重要的功能改进你直接提交一个PR即可，标题以MINOR:开头。如果仅仅是代码改进的一些想法，发邮件到dev邮件组即可。<br><br>通过单元测试了解源码是非常有效快速的方法。因为有些源码写的注释很少且不是特别容易理解，不妨以它对应的测试用例开始学起。单纯贡献测试用例也是可以的，更常见的做法是你对某块功能代码进行了修正从而新增了test case.","user_name":"作者回复","comment_id":206938,"uid":"1288090","ip_address":"","utype":1,"ctime":1587002544,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"5881927462","product_id":100050101,"comment_content":"胡老师，能和我们聊聊如何参与kafka的社区交流么？ 我现在负责kafka集群以及开发kafka周边生态组件，现在也经常阅读kafka源码，还有很多需要理解的东西，可一直想参与kafka社区里面，也申请了kafka jira的权限及订阅kafka社区邮件，可还是有点摸不着头脑，比如 如何跟进一个问题？，或者如何参与kafka有个代码块的改进及讨论？ 现在为了更好的了解kafka，也开始去学习kafka的单元测试，在了解单元测试的过程中，感觉比直接看代码思路要清晰，如果从贡献单元测试开始呢","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491958,"discussion_content":"“如何跟进一个问题？” --- 社区一般通过jira去追踪某个问题。有的时候也通过邮件。这两种方式你都需要“如何跟进一个问题？” --- 社区一般通过jira去追踪某个问题。有的时候也通过邮件。\n“如何参与kafka有个代码块的改进及讨论？” --- 比较正式的改进你可以创建jira。如果是不太重要的功能改进你直接提交一个PR即可，标题以MINOR:开头。如果仅仅是代码改进的一些想法，发邮件到dev邮件组即可。\n\n通过单元测试了解源码是非常有效快速的方法。因为有些源码写的注释很少且不是特别容易理解，不妨以它对应的测试用例开始学起。单纯贡献测试用例也是可以的，更常见的做法是你对某块功能代码进行了修正从而新增了test case.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587002544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206150,"user_name":"geek_27eain","can_delete":false,"product_type":"c1","uid":1736377,"ip_address":"","ucode":"EB86D23E062563","user_header":"","comment_is_top":false,"comment_ctime":1586794088,"is_pvip":false,"replies":[{"id":"77001","content":"Thanks!","user_name":"作者回复","comment_id":206150,"uid":"1288090","ip_address":"","utype":1,"ctime":1586828811,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"5881761384","product_id":100050101,"comment_content":"昨天刚听完老师的第一个卡夫卡专栏，今晚刚看完老师直播，就来看新专栏了","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491691,"discussion_content":"Thanks!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586828811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206110,"user_name":"Fouy_飞虎","can_delete":false,"product_type":"c1","uid":1105376,"ip_address":"","ucode":"EF792D1A96BFDB","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/e0/034ce26f.jpg","comment_is_top":false,"comment_ctime":1586788087,"is_pvip":false,"replies":[{"id":"76993","content":"Mark too:)","user_name":"作者回复","comment_id":206110,"uid":"1288090","ip_address":"","utype":1,"ctime":1586827890,"user_name_real":"胡夕"}],"discussion_count":1,"race_medal":0,"score":"5881755383","product_id":100050101,"comment_content":"Mark ","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491675,"discussion_content":"Mark too:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586827890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206007,"user_name":"spark","can_delete":false,"product_type":"c1","uid":1116667,"ip_address":"","ucode":"2F128E884F400F","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/fb/52a662b2.jpg","comment_is_top":false,"comment_ctime":1586772489,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881739785","product_id":100050101,"comment_content":"顶礼膜拜","like_count":1},{"had_liked":false,"id":332470,"user_name":"吴澎湖","can_delete":false,"product_type":"c1","uid":1565012,"ip_address":"","ucode":"4146DFE79ED548","user_header":"https://static001.geekbang.org/account/avatar/00/17/e1/54/a41c6a89.jpg","comment_is_top":false,"comment_ctime":1643268393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643268393","product_id":100050101,"comment_content":"再次碌卡学习源码第一次","like_count":0},{"had_liked":false,"id":270708,"user_name":"是男人就开巴巴托斯","can_delete":false,"product_type":"c1","uid":1352006,"ip_address":"","ucode":"C65873BBB28D05","user_header":"https://static001.geekbang.org/account/avatar/00/14/a1/46/3136ac25.jpg","comment_is_top":false,"comment_ctime":1609225518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609225518","product_id":100050101,"comment_content":"打卡<br>目标kafka, hbase, zookeeper源码","like_count":0},{"had_liked":false,"id":258743,"user_name":"徐建春","can_delete":false,"product_type":"c1","uid":2058841,"ip_address":"","ucode":"282E7F3574356D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKGcJibjz1LwiaBwXSgw4GEGQamDjIO7aAKYI150yC4tk0H5jc7eBgkMHKN2ib9icVloyyDeMxkkl49Qg/132","comment_is_top":false,"comment_ctime":1604547616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604547616","product_id":100050101,"comment_content":"一起来围观(・o・)","like_count":0},{"had_liked":false,"id":257618,"user_name":"flyCoder","can_delete":false,"product_type":"c1","uid":1074897,"ip_address":"","ucode":"82FB7B60775978","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/d1/8664c464.jpg","comment_is_top":false,"comment_ctime":1604044282,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604044282","product_id":100050101,"comment_content":"第一次课打卡，我也是冲着成为贡献者来的！","like_count":0},{"had_liked":false,"id":257571,"user_name":"珍妮•玛仕多","can_delete":false,"product_type":"c1","uid":1806720,"ip_address":"","ucode":"6E1E5564F979B3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/91/80/bc38f890.jpg","comment_is_top":false,"comment_ctime":1604029609,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604029609","product_id":100050101,"comment_content":"打卡，感谢胡夕前辈在知乎上经常回答我的提问","like_count":0},{"had_liked":false,"id":226713,"user_name":"做一个积极的跳蚤","can_delete":false,"product_type":"c1","uid":2035956,"ip_address":"","ucode":"BBE367BBCB6C28","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ecruTrMgzvqIs5iaWVibZw4Rxic42ZXGTflvOFHiaZEkf32Su01gDCWT8tdIcEoybg0ibAYU2Q8f9bleL7Q37fKguxQ/132","comment_is_top":false,"comment_ctime":1592188936,"is_pvip":false,"replies":[{"id":"83614","content":"课程主要面向Kafka服务器端，暂时不涉及到客户端。Kafka的C++客户端官网在这里：https:&#47;&#47;github.com&#47;edenhill&#47;librdkafka<br>","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592268476,"ip_address":"","comment_id":226713,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592188936","product_id":100050101,"comment_content":"老师，你好，我是一名c++程序员，一直听说kafka，但是今天才发现它是java和Scala写的，课程没有针对c++的客户端的讲解吗？比较java只会hellow word，scala也第一次听说。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498340,"discussion_content":"课程主要面向Kafka服务器端，暂时不涉及到客户端。Kafka的C++客户端官网在这里：https://github.com/edenhill/librdkafka\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592268476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226321,"user_name":"LeoBing","can_delete":false,"product_type":"c1","uid":1068193,"ip_address":"","ucode":"3964DA5DBFBE46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/a1/40b75a55.jpg","comment_is_top":false,"comment_ctime":1592034556,"is_pvip":false,"replies":[{"id":"83434","content":"这季不涉及了，要不然内容太多了，哈哈哈","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592182765,"ip_address":"","comment_id":226321,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592034556","product_id":100050101,"comment_content":"老师 客户端代码不会讲么(o^^o)","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498192,"discussion_content":"这季不涉及了，要不然内容太多了，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592182765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218560,"user_name":"游走","can_delete":false,"product_type":"c1","uid":1897220,"ip_address":"","ucode":"7CA4B0D227B674","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f3/04/ee6da3c0.jpg","comment_is_top":false,"comment_ctime":1589818241,"is_pvip":false,"replies":[{"id":"80794","content":"一起加油！","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1589850192,"ip_address":"","comment_id":218560,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589818241","product_id":100050101,"comment_content":"希望可以学到一些设计","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495509,"discussion_content":"一起加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589850192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217348,"user_name":"Knuth","can_delete":false,"product_type":"c1","uid":1083616,"ip_address":"","ucode":"21298EF9BBB91A","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/e0/292508a4.jpg","comment_is_top":false,"comment_ctime":1589467638,"is_pvip":false,"replies":[{"id":"80475","content":"1. 对的。那时候Kafka希望业务使用自己去重<br>2. 目前通过事务机制实现了Producer端的Exactly once","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1589524527,"ip_address":"","comment_id":217348,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589467638","product_id":100050101,"comment_content":"关于kafka里面 at-least-once delivery和Exactly once delivery问题，我看了一下论文，原文如下：<br>In general, Kafka only guarantees at-least-once delivery. Exactly once delivery typically requires two-phase commits and is not necessary for our applications<br>问题1：这个论文发表的时候貌似是不支持Exactly once的投递，而是仅仅支持at-least-once 投递，当comsumer挂了的时候，可能会造成接管的comsumer出现重复的消息，kafka这里表述的意思应该是把去重的这个问题直接丢给了application去处理了？<br>问题2：后续的版本里面支持了Exactly once的投递了吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495118,"discussion_content":"1. 对的。那时候Kafka希望业务使用自己去重\n2. 目前通过事务机制实现了Producer端的Exactly once","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589524527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212329,"user_name":"delete is create","can_delete":false,"product_type":"c1","uid":1147979,"ip_address":"","ucode":"A8C751219A7746","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/4b/e4738ba8.jpg","comment_is_top":false,"comment_ctime":1588086519,"is_pvip":true,"replies":[{"id":"78915","content":"嗯，这个专栏聚焦于Broker端代码。clients包的不会涉及，要不然内容太多了，没有100讲刹不住：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588125383,"ip_address":"","comment_id":212329,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588086519","product_id":100050101,"comment_content":"老师  kafkaAdminClient这个的源码后期你会分析么","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493477,"discussion_content":"嗯，这个专栏聚焦于Broker端代码。clients包的不会涉及，要不然内容太多了，没有100讲刹不住：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588125383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208342,"user_name":"witluo","can_delete":false,"product_type":"c1","uid":1443117,"ip_address":"","ucode":"3D9608C3DDDD95","user_header":"","comment_is_top":false,"comment_ctime":1587342651,"is_pvip":false,"replies":[{"id":"77804","content":"谢谢！","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587344986,"ip_address":"","comment_id":208342,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587342651","product_id":100050101,"comment_content":"期待～前面的kafka 实战学了几遍了，收货颇多","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492428,"discussion_content":"谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587344986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207049,"user_name":"yellowcloud","can_delete":false,"product_type":"c1","uid":1397597,"ip_address":"","ucode":"508967ED4BBEFC","user_header":"https://static001.geekbang.org/account/avatar/00/15/53/5d/46d369e5.jpg","comment_is_top":false,"comment_ctime":1586999830,"is_pvip":false,"replies":[{"id":"77310","content":"一起加油💪","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587002016,"ip_address":"","comment_id":207049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586999830","product_id":100050101,"comment_content":"打卡，跟着胡老师学习kafka源码。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491992,"discussion_content":"一起加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587002016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206987,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1586969128,"is_pvip":false,"replies":[{"id":"77302","content":"哈哈哈，这两个是一个公司：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587000672,"ip_address":"","comment_id":206987,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586969128","product_id":100050101,"comment_content":"又看到老师在专栏了，然后果断购买，老师的主页介绍也从人人贷变成的友信金服了😂","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491973,"discussion_content":"哈哈哈，这两个是一个公司：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587000672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206194,"user_name":"drapeau🏖","can_delete":false,"product_type":"c1","uid":1405331,"ip_address":"","ucode":"83BB32485995FC","user_header":"https://static001.geekbang.org/account/avatar/00/15/71/93/448cec84.jpg","comment_is_top":false,"comment_ctime":1586822250,"is_pvip":false,"replies":[{"id":"77004","content":"吾将上下而求索","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1586828911,"ip_address":"","comment_id":206194,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586822250","product_id":100050101,"comment_content":"路漫漫其修远兮","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491707,"discussion_content":"吾将上下而求索","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586828911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}