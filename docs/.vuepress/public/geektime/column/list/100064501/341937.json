{"id":341937,"title":"30 | 四线复盘法：怎么避免成为背锅侠？","content":"<p>你好，我是华仔。</p><p>在事后总结阶段，正常情况下我们主要是做<strong>收获总结</strong>和<strong>成果汇报</strong>即可，但是如果发生了明显的问题，就需要做<strong>问题复盘</strong>。</p><p>复盘是一个围棋术语，它指的是对局结束后回顾记录，检查招法的优劣和得失关键，并且根据分析提出更好的招法，提升以后的对局能力。后来，这个思路被引入到了管理工作中。</p><h2>问题复盘</h2><p>技术人员主要参与的是线上问题复盘，比如业务或者系统出现了线上问题，在问题解决之后往往就会组织复盘。</p><p>不管团队技术多么厉害，也不管公司多么有钱，都不能完全避免业务或者系统出现问题的可能，比如2015年5月27日支付宝发生了大规模宕机的事故，2018年10月22日GitHub发生了宕机24小时的事故等。</p><p>虽然无论做什么都不可能完全杜绝问题的发生，但这并不意味着我们只能坐以待毙。我们需要尽量降低问题发生的概率，减少问题导致的损失，因为就算事故不可避免，1年发生3次和10年发生1次，影响和意义也是完全不同的。</p><p>问题复盘的意义就在于找到问题的原因然后加以改进，避免同样的问题反复出现，降低问题的发生的概率和影响。</p><h2>四线复盘法</h2><p>但是，要做好问题复盘可不是一件容易的事。复盘会议上的各种明争暗斗，可能会让刚参加工作的“萌新”惊掉下巴，甚至让一些老员工也感到头疼。尤其是一些管理比较严的公司还会通过复盘来明确责任分配和处罚措施，复盘会议的激烈程度往往不亚于电视剧中的宫斗场景。</p><!-- [[[read_end]]] --><p>所以，怎么组织一场复盘，怎么分配责任和避免背锅，已经成了职场人的一项生存必备技能。</p><p>问题复盘的内容涵盖<strong>事实、分析、定责和改进</strong>4个部分，一次成功的问题复盘需要达成以下4个目标：</p><ol>\n<li><strong>讲清楚事实</strong>：事实是复盘的基础，如果连事实都没有讲清楚就开始分析、定责和改进，无异于搭建空中楼阁，做得再漂亮也是没有意义的。</li>\n<li><strong>全面且深入地分析</strong>：首先需要保证没有遗漏问题，其次需要深入分析问题根因，否则以后问题还是会以其他方式反复出现。</li>\n<li><strong>得出<strong><strong>让各方心服口服</strong></strong>的定责结论</strong>：需要有明确的定责标准，避免拍脑袋定责，或者按照级别和关系来定责。</li>\n<li><strong>制定可以落地的改进措施</strong>：避免提出一些虚头巴脑的措施，看起来高大上，实际上却不知道怎么落地，后续也无法跟踪。</li>\n</ol><p>这一讲分享的<strong>四线复盘法</strong>，就是通过时间线、问题链、责任链和改进线这4条不同的线索来展开复盘，从而实现事实、分析、定责和改进这4个部分的目标。</p><p>如果你是复盘负责人，四线复盘法可以让你不偏不倚、公平公正地组织复盘；如果你是复盘参与人，它可以让你避免背不必要的黑锅。当然，如果出现问题确实是你的责任，它也不会教你怎么逃避责任，而是会告诉你怎么思考和改进。</p><p>接下来，我会针对每条线索逐一讲解说明。</p><h2>第一条线：时间线</h2><p>为了讲清楚事实，我们要明确<strong>时间线</strong>，也就是<strong>问题发生的经过</strong>，包括问题发现、问题处理过程中采取的各种关键措施、问题恢复的时间和问题影响的结果等。</p><p>其中，时间信息非常关键，因为它能够反映出问题发现速度、各项措施执行时间和团队响应效率等指标。比如，运维重启30台机器花了1小时，通常情况下这种处理效率肯定是有问题的。</p><h2>第二条线：问题链</h2><p>为了全面且深入的分析，我们要明确<strong>问题链</strong>，也就是<strong>问题的传导路径</strong>。</p><p>通常情况下，一个问题往往不是单一原因导致的，而是多个原因“碰巧”组合在一起所导致的，所以分析整个问题的传导路径，才能全面地了解产生问题的过程。</p><p>同时，针对单个问题的分析也不能浅尝辄止，而应该采用第26讲的“5W根因分析法”深入分析，找到根本原因，这样才能为后续制定改进措施提供有效的指导。</p><p>问题链的路径逻辑有两类：业务流程和项目流程。</p><p><strong>业务流程</strong>是指，端到端的业务处理的过程，分析的对象是各个关联的系统。</p><p><strong>项目流程</strong>是指，端到端的项目开发的过程，分析的对象是项目各个阶段相关的人员，比如开发、测试、产品和运维等。</p><p>我们一般先采用业务流程的逻辑将问题定位到单个系统，然后再针对单个系统采用项目流程的方式将问题定位到具体的人或者流程中的某个步骤。</p><h2>第三条线：责任链</h2><p>为了得出让各方心服口服的定责结论，我们要明确<strong>责任链</strong>，也就是问题责任人之间的关系。</p><p>我们需要结合时间线中问题影响的结果、公司的故障定级标准和问题链的分析，最终确定哪些团队或个人应该承担责任，分别承担多大的责任，接受什么样的处罚。</p><p>之所以叫责任链，是因为一个问题的发生往往是整个流程上多个环节相关的人处理有问题，才会导致最终问题的发生。比如开发人员引入bug，测试人员遗漏了测试，产品人员没有验收到，最终才会在上线后发现问题，这个环节中只要有一个环节把握住了，问题就不会发生。</p><p>定责是问题复盘中最棘手的部分，因为定责的结果会直接影响团队和个人的绩效，所以做到公平公正、让各方都心服口服是一项很大的挑战。</p><p>通常情况下，制定明确的定责标准有利于尽量减少争议，常见的标准包括以下4条：</p><ol>\n<li><strong>违反公司规章/制度/流程的承担主责</strong>：比如公司规定必须要有灰度策略才能升级，某业务版本直接全量升级导致发生问题。</li>\n<li><strong>出现重大纰漏的承担主责</strong>：比如测试时漏测了某个常见的业务场景，导致上线后发生问题，测试承担主责，产品承担主责（因为上线前验收阶段没有发现问题），开发反而不一定承担责任（看具体的公司和团队要求）。</li>\n<li><strong>问题源头承担主责</strong>：比如A系统磁盘故障导致接口响应很慢且问题持续很长时间，从而进一步导致B系统对外响应也超时，这种情况下A系统应该承担主责，B系统承担次责。</li>\n<li><strong>问题放大者承担主责</strong>：比如A系统磁盘故障导致接口响应很慢但只持续了几分钟，结果诱发了B系统的设计缺陷，导致B系统瘫痪超过1小时，这种情况下B系统应该承担主责。</li>\n</ol><h2>第四条线：改进线</h2><p>为了制定可以落地的改进措施，我们要明确改进线，也就是问题的改进计划，包括具体措施、改进责任人和时间节点等。</p><p>（注：在这一讲中，<strong>问题责任人</strong>是指为问题承担责任的人，<strong>改进责任人</strong>是指负责落实改进措施的人，不一定是同一个。）</p><p>改进计划的思路来源于两个方面：时间线和问题链，通过时间线找到问题处理过程中不合理和可以优化的地方；通过问题链找到具体需要解决的问题。</p><p>具体措施可以是流程上的调整（增加或删除流程步骤），技术上的手段（增加功能、优化系统）和团队方面的措施（学习、培训、奖惩机制）等。</p><p>无论采取什么措施，都要求能够落地执行。比如“提升团队质量意识”这种比较虚的措施，应该细化为“团队参加公司的质量规范学习和考试”“推行Code Review”这种具体的措施。</p><p>接下来，我来带你拆解一个简单的线上问题复盘案例。</p><h2>案例：线上商城</h2><p>假设我们做了一个简单的线上商城，架构如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/86/42/864113641db6yy72ccae6b3079ec4142.jpg?wh=2700*692\" alt=\"\"></p><p>某次线上故障导致用户下单后无法支付，我们按照四线复盘法来来复盘这个问题。</p><h3>1. 时间线</h3><p>首先，我们完整地回顾问题产生、处理和收尾的整个过程，梳理了时间线：<br>\n<img src=\"https://static001.geekbang.org/resource/image/0d/26/0d5f8ccba6582c9b9a7a2d4e15f2ab26.jpg?wh=2700*1459\" alt=\"\"></p><h3>2. 问题链</h3><p>我们先按照业务流程来分析问题链，由于系统架构和这次问题都比较简单，所以问题链只涉及风控服务和支付服务：</p><p><img src=\"https://static001.geekbang.org/resource/image/03/bc/03bdf8bdaea4aa34c38b6983368631bc.jpg?wh=2700*386\" alt=\"\"></p><p>针对风控服务的问题，我们再按照项目流程来分析问题链：</p><p><img src=\"https://static001.geekbang.org/resource/image/62/65/620a8fea9d3027730a3yy0898b832f65.jpg?wh=2700*341\" alt=\"\"></p><h3>3. 责任链</h3><p>根据时间线中的影响结果，这次问题导致的损失是10000元；根据公司故障定级标准，属于轻微级别，惩罚措施是贡献活动经费；结合问题链和定责标准，我们得到了最终的责任链：</p><p><img src=\"https://static001.geekbang.org/resource/image/13/10/1362eba268e637bfbf95aae0a2103910.jpg?wh=2700*310\" alt=\"\"></p><h3>4. 改进线</h3><p>我们分析了时间线中的步骤，针对两个可以改进的地方制定了改进措施：<br>\n<img src=\"https://static001.geekbang.org/resource/image/83/fe/8396ef8c1ca0d5e4945b268a741e8ffe.jpg?wh=2700*846\" alt=\"\"><br>\n然后，我们又分析了问题链中的问题，针对另外两个可以改进的地方制定了改进措施：<br>\n<img src=\"https://static001.geekbang.org/resource/image/82/5e/8295af67ba20b2cb2153177efe10e35e.jpg?wh=2700*786\" alt=\"\"></p><p>以上就是用四线复盘法对这次问题做复盘的整个过程。</p><h2>小结</h2><p>现在，我们回顾一下重点内容。</p><ol>\n<li>一次成功的问题复盘需要达成4个目标：讲清楚事实，全面且深入地分析，得出让各方心服口服的定责结论，以及制定可以落地的改进措施。</li>\n<li>四线复盘法是通过时间线、问题链、责任链和改进线这4条不同的线索来展开复盘。它可以让你不偏不倚、公平公正地组织复盘，也可以让你避免背不必要的黑锅。</li>\n<li>时间线就是问题发生的经过，问题链就是问题的传导路径，责任链就是问题责任人之间的关系，改进线就是问题的改进计划。<br>\n<img src=\"https://static001.geekbang.org/resource/image/90/de/902c1097fcd425362551584d8f6730de.jpg?wh=2700*1941\" alt=\"\"></li>\n</ol><h2>思考题</h2><p>这就是今天的全部内容，留一道课后思考题给你吧。你或者你的团队承担过线上问题的责任吗？如果有，主要原因是什么？你觉得处理结果是否公平，复盘过程有没有需要改进的地方？</p><p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。<br>\n<img src=\"https://static001.geekbang.org/resource/image/af/76/af90ee9acaea177d9d3acbc278921876.jpeg?wh=1920*1080\" alt=\"\"></p>","neighbors":{"left":{"article_title":"29 | 金字塔汇报法：怎么汇报才能让领导认可你的成果？","id":340918},"right":{"article_title":"31 | 导学：为什么业务和管理是晋升高级别的基石？","id":342453}},"comments":[{"had_liked":false,"id":278419,"user_name":"王同学","can_delete":false,"product_type":"c1","uid":2422794,"ip_address":"","ucode":"D9A71159D450D7","user_header":"https://static001.geekbang.org/account/avatar/00/24/f8/0a/30562df7.jpg","comment_is_top":false,"comment_ctime":1612935264,"is_pvip":false,"replies":[{"id":"101131","content":"你要看下游有没有放大问题，注意是放大，而不是说出错，因为上游数据格式出错，正常来说下游肯定出错，只要没放大就没问题。","user_name":"作者回复","comment_id":278419,"uid":"1098920","ip_address":"","utype":1,"ctime":1612942072,"user_name_real":"华仔"}],"discussion_count":3,"race_medal":0,"score":"23087771744","product_id":100064501,"comment_content":"问题源头承担主责，问题放大者承担主责分不清楚。比如上游的数据格式出错，导致下游需要用数据的服务都有问题，那么是上游源头主责，还是下游放大问题者主责。上游定主责没问题，因为产生了错误的数据。下游定主责也可以，因为下游没有兼容缺陷数据。这个时候怎么定责","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515378,"discussion_content":"你要看下游有没有放大问题，注意是放大，而不是说出错，因为上游数据格式出错，正常来说下游肯定出错，只要没放大就没问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612942072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055624,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1b/88/ac69f57a.jpg","nickname":"磉盘","note":"","ucode":"1C245991F30A73","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377681,"discussion_content":"程序出错是正常的，下游有没有错误和异常处理，有没有日志记录。如果上游写数据到队列里，下游消费，如果下游没做一些处理，没有监控，导致下游服务卡死，数据丢失估计责任也跑步了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622774068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1047911,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fd/67/66ba04fd.jpg","nickname":"鹏","note":"","ucode":"FABA4F91C4F02D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1055624,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1b/88/ac69f57a.jpg","nickname":"磉盘","note":"","ucode":"1C245991F30A73","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":580044,"discussion_content":"这种情况下client 需要数据错误兼容，如果没有做只要服务器出问题客户端就会被牵扯进来，并且大概率会方法问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657848848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":377681,"ip_address":""},"score":580044,"extra":""}]}]},{"had_liked":false,"id":278765,"user_name":"菜心1986","can_delete":false,"product_type":"c1","uid":1716058,"ip_address":"","ucode":"E46C26FCBD1741","user_header":"https://static001.geekbang.org/account/avatar/00/1a/2f/5a/4ed3465d.jpg","comment_is_top":false,"comment_ctime":1613308455,"is_pvip":false,"replies":[{"id":"101308","content":"1. 这里讲的是线上问题复盘，事件触发模式，不需要定期举行。<br>2. 多大问题要追责，实行什么样的奖惩措施，是公司或者团队要预先制定规则的。<br>3. 看问题大小来复盘和追责，支付宝5.27全网宕机的事故，总裁都要担责。<br>","user_name":"作者回复","comment_id":278765,"uid":"1098920","ip_address":"","utype":1,"ctime":1613318469,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"14498210343","product_id":100064501,"comment_content":"复盘什么频率做一次？复盘的归因和追责部分要到什么程度？<br>这里的追责结果是否代表个人本身有问题？或者本人能力不行？<br>多大的问题要追责，比如一周没事是否也要找个问题来汇报？<br>追责是否都是底层人人员，领导或者老板会有问题可以复盘么？","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515492,"discussion_content":"1. 这里讲的是线上问题复盘，事件触发模式，不需要定期举行。\n2. 多大问题要追责，实行什么样的奖惩措施，是公司或者团队要预先制定规则的。\n3. 看问题大小来复盘和追责，支付宝5.27全网宕机的事故，总裁都要担责。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613318469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309836,"user_name":"cloud","can_delete":false,"product_type":"c1","uid":1256124,"ip_address":"","ucode":"EE8743DA121139","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/bc/ef254e35.jpg","comment_is_top":false,"comment_ctime":1630371003,"is_pvip":false,"replies":[{"id":"112287","content":"要么落实到流程、要么落实到工具和系统，不能依赖人","user_name":"作者回复","comment_id":309836,"uid":"1098920","ip_address":"","utype":1,"ctime":1630412365,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"10220305595","product_id":100064501,"comment_content":"李老师，我有些困惑。我们公司现在很多时候复盘也复盘了，也制定了一些措施，避免后续不再犯此类错误。但是一段时间之后，似乎又回到了老样子，如何让复盘后的措施，在团队中持续有效，这方面您有什么经验么?","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526035,"discussion_content":"要么落实到流程、要么落实到工具和系统，不能依赖人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630412365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302170,"user_name":"🍭","can_delete":false,"product_type":"c1","uid":2153560,"ip_address":"","ucode":"1877096CCD74DA","user_header":"https://static001.geekbang.org/account/avatar/00/20/dc/58/53e16f1e.jpg","comment_is_top":false,"comment_ctime":1626103988,"is_pvip":false,"replies":[{"id":"109328","content":"并没有很好的方法，更多靠个人的积累，如果遇到自以为是的产品或者运营，沟通很麻烦，我在阿里都遇到很多这样的产品，能力一般还很自信，开口闭口乔布斯、苹果之类的","user_name":"作者回复","comment_id":302170,"uid":"1098920","ip_address":"","utype":1,"ctime":1626138953,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"5921071284","product_id":100064501,"comment_content":"作为研发怎么判断产品提出的需求是否合理呢，可以从哪几部分进行分析？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523204,"discussion_content":"并没有很好的方法，更多靠个人的积累，如果遇到自以为是的产品或者运营，沟通很麻烦，我在阿里都遇到很多这样的产品，能力一般还很自信，开口闭口乔布斯、苹果之类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626138953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287680,"user_name":"周平","can_delete":false,"product_type":"c1","uid":1259488,"ip_address":"","ucode":"4954DC474C4FDF","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/e0/23f288ae.jpg","comment_is_top":false,"comment_ctime":1618107542,"is_pvip":false,"replies":[{"id":"104480","content":"被别人定责的时候，明确定责标准再根据标准找事实，基本上能够避免背黑锅。<br><br>你对定责的理解已经到了新的境界，点赞👍🏻<br><br>其实我也出过事单过责，但长期来看，关键还是自己成长，某次担责并不可怕，有时候担责反而让自己理解更深，印象更深","user_name":"作者回复","comment_id":287680,"uid":"1098920","ip_address":"","utype":1,"ctime":1618115748,"user_name_real":"华仔"}],"discussion_count":2,"race_medal":0,"score":"5913074838","product_id":100064501,"comment_content":"复盘的目的是找到问题的原因并改进，避免同样的问题反复出现，降低问题的发生的概率和影响。<br><br>我觉得，如果定不好责，特别影响复盘的目的，走偏。<br><br><br>想想以前被定过的责，好像是公平的，让人口服的，至少从逻辑上是找不出什么毛病来。<br><br>又一想，领导嘛，总能想出一些手段，做到逻辑上走通没毛病，再加上信息不对称，以及作为下属的弱势，总有办法让你说不出什么。<br><br><br>同时，又感到，做的事越多，越容易被人揪住辫子，追责。总的感受，我做了那么多事情，那么努力，结果奖励没见多少，还受罚了。<br><br><br>本文定责的原则，对我很有用，至少能帮我确定一些原则和边界。<br><br>同时，应从大利益的维度去考虑事情，不要太计较这些。<br><br><br>我自己还有个问题，心里特别怕出错，好像出了个错，好像天要塌下来一样。<br><br>其实，想想看，不需要看的那么重。<br><br><br>看来，定责是领导的一个技能，不是做事儿的人的技能，怎样定责也不在做事儿的人的影响范围内。<br><br><br>事情该做就做，重要的还是自己的成长。<br><br>回想了一下自己受过的责，也没几件。<br><br>这些受责是否影响了自己的成长和晋升呢？<br><br>我觉得最关键的还是自己的学识，认知。这方面的瓶颈，更大的影响了自己的晋升和成长。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518386,"discussion_content":"被别人定责的时候，明确定责标准再根据标准找事实，基本上能够避免背黑锅。\n\n你对定责的理解已经到了新的境界，点赞👍🏻\n\n其实我也出过事单过责，但长期来看，关键还是自己成长，某次担责并不可怕，有时候担责反而让自己理解更深，印象更深","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618115748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259488,"avatar":"https://static001.geekbang.org/account/avatar/00/13/37/e0/23f288ae.jpg","nickname":"周平","note":"","ucode":"4954DC474C4FDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366639,"discussion_content":"谢谢对我的肯定:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618140642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278764,"user_name":"菜心1986","can_delete":false,"product_type":"c1","uid":1716058,"ip_address":"","ucode":"E46C26FCBD1741","user_header":"https://static001.geekbang.org/account/avatar/00/1a/2f/5a/4ed3465d.jpg","comment_is_top":false,"comment_ctime":1613307905,"is_pvip":false,"replies":[{"id":"101307","content":"1. 团队leader也要承担连带责任<br>2. 大部分公司以结果导向，即使需求文档没写，如果是正常需求需要考虑的，在设计和测试的时候都要覆盖，需求文档不可能事无巨细全部覆盖到。","user_name":"作者回复","comment_id":278764,"uid":"1098920","ip_address":"","utype":1,"ctime":1613318335,"user_name_real":"华仔"}],"discussion_count":2,"race_medal":0,"score":"5908275201","product_id":100064501,"comment_content":"这里的技术负责人都是底层研发吧。管理层，比如经理没有承担责任么？<br>另外，团队合作时，比如测试遗漏怎么定？比如需求文档没有明确要求，测试是不是不需要关心了，出了问题也是无责任？<br>或者这个因公司而异，都可以？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515491,"discussion_content":"1. 团队leader也要承担连带责任\n2. 大部分公司以结果导向，即使需求文档没写，如果是正常需求需要考虑的，在设计和测试的时候都要覆盖，需求文档不可能事无巨细全部覆盖到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613318335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1716058,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2f/5a/4ed3465d.jpg","nickname":"菜心1986","note":"","ucode":"E46C26FCBD1741","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349601,"discussion_content":"这种隐藏的需求如果有问题是谁的产品没沟通到还是开发没想到还是测试没注意到？\n开发的职业也包括需求的完整实现么？这么看的话工作量怎么评估？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613366407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278325,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1612880829,"is_pvip":true,"replies":[{"id":"101117","content":"B的主责肯定是跑不掉，至于A是不是主责，要看A造成的问题大小。举个例子，如果A的问题只持续了1分钟就解决了，那不需要承担主责，如果A本身也导致了30分钟的问题，那么也是要承担主责的。","user_name":"作者回复","comment_id":278325,"uid":"1098920","ip_address":"","utype":1,"ctime":1612920095,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"5907848125","product_id":100064501,"comment_content":"“问题放大者承担主责”不是很理解。如果A是问题源头，B放大了问题，这时候是源头主责还是放大者主责呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515347,"discussion_content":"B的主责肯定是跑不掉，至于A是不是主责，要看A造成的问题大小。举个例子，如果A的问题只持续了1分钟就解决了，那不需要承担主责，如果A本身也导致了30分钟的问题，那么也是要承担主责的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612920095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350759,"user_name":"怀揣梦想的学渣","can_delete":false,"product_type":"c1","uid":1916685,"ip_address":"","ucode":"2349B9F4F6FDE3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","comment_is_top":false,"comment_ctime":1657175879,"is_pvip":true,"replies":[{"id":"127619","content":"理想情况当然能用系统做到最好，但总的有个建设过程，而且很多线上故障并不是靠开发一个系统就可以避免的。","user_name":"作者回复","comment_id":350759,"uid":"1098920","ip_address":"","utype":1,"ctime":1657184531,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1657175879","product_id":100064501,"comment_content":"责任划分的太细致明确，反而导致团队互相甩锅，复盘时候都在急于撇清自己的责任，甚至弱化自己做错事情的程度。如果有连带责任，团队会互相监督，避免让对方的犯错拖累自己，除非集体摆烂。<br>能用程序标准化管理的事情，就避免人去处理，人总有犯错的时候，再专业的也有犯错的时候。特别是经验老道的人，我所在团队就有一个老员工，凭借丰富的经验，给客户做安全配置，配置结束后，两个三线城市的短信业务全下线了，好在恢复比较快，五分钟就搞定。但是客户已经有感知和吐槽。复盘发现，是配置安全规则的时候人工手写写错了一个子网范围，后来统一要求图形界面勾选，再也没出过故障。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579128,"discussion_content":"理想情况当然能用系统做到最好，但总的有个建设过程，而且很多线上故障并不是靠开发一个系统就可以避免的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657184531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294457,"user_name":"bin","can_delete":false,"product_type":"c1","uid":1049047,"ip_address":"","ucode":"478603A9AB13B4","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/d7/f835081c.jpg","comment_is_top":false,"comment_ctime":1621949220,"is_pvip":false,"replies":[{"id":"106857","content":"好好学习这一讲，可以避免背黑锅 ：）","user_name":"作者回复","comment_id":294457,"uid":"1098920","ip_address":"","utype":1,"ctime":1621991873,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"1621949220","product_id":100064501,"comment_content":"背锅侠前来报道","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520662,"discussion_content":"好好学习这一讲，可以避免背黑锅 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621991873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281186,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1614612701,"is_pvip":false,"replies":[{"id":"102095","content":"4个9都没有了😂","user_name":"作者回复","comment_id":281186,"uid":"1098920","ip_address":"","utype":1,"ctime":1614644002,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"1614612701","product_id":100064501,"comment_content":"文中的case从发现到回滚，故障持续了1个多小时，那这个服务的全年可用性就只有4个9了吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516316,"discussion_content":"4个9都没有了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614644002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}