{"id":114194,"title":"34 | MySQL调优之事务：高并发场景下的数据库事务调优","content":"<p>你好，我是刘超。</p><p>数据库事务是数据库系统执行过程中的一个逻辑处理单元，保证一个数据库操作要么成功，要么失败。谈到他，就不得不提ACID属性了。数据库事务具有以下四个基本属性：原子性（Atomicity）、一致性（Consistent）、隔离性（Isolation）以及持久性（Durable）。正是这些特性，才保证了数据库事务的安全性。而在MySQL中，鉴于MyISAM存储引擎不支持事务，所以接下来的内容都是在InnoDB存储引擎的基础上进行讲解的。</p><p>我们知道，在Java并发编程中，可以多线程并发执行程序，然而并发虽然提高了程序的执行效率，却给程序带来了线程安全问题。事务跟多线程一样，为了提高数据库处理事务的吞吐量，数据库同样支持并发事务，而在并发运行中，同样也存在着安全性问题，例如，修改数据丢失，读取数据不一致等。</p><p>在数据库事务中，事务的隔离是解决并发事务问题的关键， 今天我们就重点了解下事务隔离的实现原理，以及如何优化事务隔离带来的性能问题。</p><h2>并发事务带来的问题</h2><p>我们可以通过以下几个例子来了解下并发事务带来的几个问题：</p><p>1.数据丢失</p><p><img src=\"https://static001.geekbang.org/resource/image/db/7d/db7d28a1f27d46cf534064ab4e74f47d.jpg?wh=2530*384\" alt=\"\"></p><p>2.脏读</p><p><img src=\"https://static001.geekbang.org/resource/image/d7/4c/d717c7e782620d2e46beb070dbc8154c.jpg?wh=2506*384\" alt=\"\"></p><p>3.不可重复读</p><p><img src=\"https://static001.geekbang.org/resource/image/61/9a/6173739ee9a5d7e26c8b00f2ed8d9e9a.jpg?wh=2560*372\" alt=\"\"></p><p>4.幻读</p><p><img src=\"https://static001.geekbang.org/resource/image/28/b6/280826363e1d5a3e64529dfd3443e5b6.jpg?wh=2598*374\" alt=\"\"></p><h2>事务隔离解决并发问题</h2><p>以上 4 个并发事务带来的问题，其中，数据丢失可以基于数据库中的悲观锁来避免发生，即在查询时通过在事务中使用 select xx for update 语句来实现一个排他锁，保证在该事务结束之前其他事务无法更新该数据。</p><!-- [[[read_end]]] --><p>当然，我们也可以基于乐观锁来避免，即将某一字段作为版本号，如果更新时的版本号跟之前的版本一致，则更新，否则更新失败。剩下 3 个问题，其实是数据库读一致性造成的，需要数据库提供一定的事务隔离机制来解决。</p><p>我们通过加锁的方式，可以实现不同的事务隔离机制。在了解事务隔离机制之前，我们不妨先来了解下MySQL都有哪些锁机制。</p><p>InnoDB实现了两种类型的锁机制：共享锁（S）和排他锁（X）。共享锁允许一个事务读数据，不允许修改数据，如果其他事务要再对该行加锁，只能加共享锁；排他锁是修改数据时加的锁，可以读取和修改数据，一旦一个事务对该行数据加锁，其他事务将不能再对该数据加任务锁。</p><p><strong>熟悉了以上InnoDB行锁的实现原理，我们就可以更清楚地理解下面的内容。</strong></p><p>在操作数据的事务中，不同的锁机制会产生以下几种不同的事务隔离级别，不同的隔离级别分别可以解决并发事务产生的几个问题，对应如下：</p><p><strong>未提交读（Read Uncommitted）：</strong>在事务A读取数据时，事务B读取数据加了共享锁，修改数据时加了排它锁。这种隔离级别，会导致脏读、不可重复读以及幻读。</p><p><strong>已提交读（Read Committed）：</strong>在事务A读取数据时增加了共享锁，一旦读取，立即释放锁，事务B读取修改数据时增加了行级排他锁，直到事务结束才释放锁。也就是说，事务A在读取数据时，事务B只能读取数据，不能修改。当事务A读取到数据后，事务B才能修改。这种隔离级别，可以避免脏读，但依然存在不可重复读以及幻读的问题。</p><p><strong>可重复读（Repeatable Read）：</strong>在事务A读取数据时增加了共享锁，事务结束，才释放锁，事务B读取修改数据时增加了行级排他锁，直到事务结束才释放锁。也就是说，事务A在没有结束事务时，事务B只能读取数据，不能修改。当事务A结束事务，事务B才能修改。这种隔离级别，可以避免脏读、不可重复读，但依然存在幻读的问题。</p><p><strong>可序列化（Serializable）：</strong>在事务A读取数据时增加了共享锁，事务结束，才释放锁，事务B读取修改数据时增加了表级排他锁，直到事务结束才释放锁。可序列化解决了脏读、不可重复读、幻读等问题，但隔离级别越来越高的同时，并发性会越来越低。</p><p>InnoDB中的RC和RR隔离事务是基于多版本并发控制（MVCC）实现高性能事务。一旦数据被加上排他锁，其他事务将无法加入共享锁，且处于阻塞等待状态，如果一张表有大量的请求，这样的性能将是无法支持的。</p><p>MVCC对普通的 Select 不加锁，如果读取的数据正在执行Delete或Update操作，这时读取操作不会等待排它锁的释放，而是直接利用MVCC读取该行的数据快照（数据快照是指在该行的之前版本的数据，而数据快照的版本是基于undo实现的，undo是用来做事务回滚的，记录了回滚的不同版本的行记录）。<span class=\"orange\">MVCC避免了对数据重复加锁的过程，大大提高了读操作的性能。</span></p><h2>锁具体实现算法</h2><p>我们知道，InnoDB既实现了行锁，也实现了表锁。行锁是通过索引实现的，如果不通过索引条件检索数据，那么InnoDB将对表中所有的记录进行加锁，其实就是升级为表锁了。</p><p>行锁的具体实现算法有三种：record lock、gap lock以及next-key lock。record lock是专门对索引项加锁；gap lock是对索引项之间的间隙加锁；next-key lock则是前面两种的组合，对索引项以其之间的间隙加锁。</p><p>只在可重复读或以上隔离级别下的特定操作才会取得gap lock或next-key lock，在Select 、Update和Delete时，除了基于唯一索引的查询之外，其他索引查询时都会获取gap lock或next-key lock，即锁住其扫描的范围。</p><h2>优化高并发事务</h2><p>通过以上讲解，相信你对事务、锁以及隔离级别已经有了一个透彻的了解了。清楚了问题，我们就可以聊聊高并发场景下的事务到底该如何调优了。</p><h3>1. 结合业务场景，使用低级别事务隔离</h3><p>在高并发业务中，为了保证业务数据的一致性，操作数据库时往往会使用到不同级别的事务隔离。隔离级别越高，并发性能就越低。</p><p>那换到业务场景中，我们如何判断用哪种隔离级别更合适呢？我们可以通过两个简单的业务来说下其中的选择方法。</p><p>我们在修改用户最后登录时间的业务场景中，这里对查询用户的登录时间没有特别严格的准确性要求，而修改用户登录信息只有用户自己登录时才会修改，不存在一个事务提交的信息被覆盖的可能。所以我们允许该业务使用最低隔离级别。</p><p>而如果是账户中的余额或积分的消费，就存在多个客户端同时消费一个账户的情况，此时我们应该选择RR级别来保证一旦有一个客户端在对账户进行消费，其他客户端就不可能对该账户同时进行消费了。</p><h3>2. 避免行锁升级表锁</h3><p>前面讲了，在InnoDB中，行锁是通过索引实现的，如果不通过索引条件检索数据，行锁将会升级到表锁。我们知道，表锁是会严重影响到整张表的操作性能的，所以我们应该避免他。</p><h3>3. 控制事务的大小，减少锁定的资源量和锁定时间长度</h3><p>你是否遇到过以下SQL异常呢？在抢购系统的日志中，在活动区间，我们经常可以看到这种异常日志：</p><pre><code>MySQLQueryInterruptedException: Query execution was interrupted\n</code></pre><p>由于在抢购提交订单中开启了事务，在高并发时对一条记录进行更新的情况下，由于更新记录所在的事务还可能存在其他操作，导致一个事务比较长，当有大量请求进入时，就可能导致一些请求同时进入到事务中。</p><p>又因为锁的竞争是不公平的，当多个事务同时对一条记录进行更新时，极端情况下，一个更新操作进去排队系统后，可能会一直拿不到锁，最后因超时被系统打断踢出。</p><p>在用户购买商品时，首先我们需要查询库存余额，再新建一个订单，并扣除相应的库存。这一系列操作是处于同一个事务的。</p><p>以上业务若是在两种不同的执行顺序下，其结果都是一样的，但在事务性能方面却不一样：</p><p><img src=\"https://static001.geekbang.org/resource/image/0c/27/0c60d5685aa881cf66be43c6c4529927.jpg?wh=1358*314\" alt=\"\"></p><p>这是因为，虽然这些操作在同一个事务，但锁的申请在不同时间，只有当其他操作都执行完，才会释放所有锁。因为扣除库存是更新操作，属于行锁，这将会影响到其他操作该数据的事务，所以我们应该尽量避免长时间地持有该锁，尽快释放该锁。</p><p>又因为先新建订单和先扣除库存都不会影响业务，所以我们可以将扣除库存操作放到最后，也就是使用执行顺序1，以此尽量减小锁的持有时间。</p><h2>总结</h2><p>其实MySQL的并发事务调优和Java的多线程编程调优非常类似，都是可以通过减小锁粒度和减少锁的持有时间进行调优。<span class=\"orange\">在MySQL的并发事务调优中，我们尽量在可以使用低事务隔离级别的业务场景中，避免使用高事务隔离级别。</span></p><p>在功能业务开发时，开发人员往往会为了追求开发速度，习惯使用默认的参数设置来实现业务功能。例如，在service方法中，你可能习惯默认使用transaction，很少再手动变更事务隔离级别。但要知道，transaction默认是RR事务隔离级别，在某些业务场景下，可能并不合适。因此，我们还是要结合具体的业务场景，进行考虑。</p><h2>思考题</h2><p>以上我们主要了解了锁实现事务的隔离性，你知道InnoDB是如何实现原子性、一致性和持久性的吗？</p><p>期待在留言区看到你的见解。也欢迎你点击“请朋友读”，把今天的内容分享给身边的朋友，邀请他一起讨论。</p><p></p>","comments":[{"had_liked":false,"id":121976,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565260958,"is_pvip":false,"replies":[{"id":"44861","content":"数据库基础非常扎实，赞","user_name":"作者回复","comment_id":121976,"uid":"1228576","ip_address":"","utype":1,"ctime":1565313359,"user_name_real":"刘超"}],"discussion_count":3,"race_medal":0,"score":"306507938974","product_id":100028001,"comment_content":"binlog + redo log 两阶段提交保证持久性<br>事务的回滚机制 保证原子性 要么全部提交成功 要么回滚<br>undo log + MVCC 保证一致性 事务开始和结束的过程不会其它事务看到 为了并发可以适当破坏一致性","like_count":72,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462037,"discussion_content":"数据库基础非常扎实，赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565313359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1539926,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUBia0Aevb2CyMNPvuzTkVvlcoDpdFELFav5Bcic90wxehZibo0VglM7aRZLMo93Ful7v5TFlKfEYyg/132","nickname":"啊不多","note":"","ucode":"A38DE3C564B748","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184245,"discussion_content":"binlog主要用于备份 恢复数据 redo log主要适用于重启数据库恢复数据 是这样吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582550923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1118374,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/a6/4d2c933e.jpg","nickname":"K","note":"","ucode":"69831D1EFC083C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4920,"discussion_content":"哇真的好期待老师讲解一下acid分别都是怎样实现的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565832468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122008,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1565267471,"is_pvip":false,"replies":[{"id":"44858","content":"对的","user_name":"作者回复","comment_id":122008,"uid":"1228576","ip_address":"","utype":1,"ctime":1565313235,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"87464613391","product_id":100028001,"comment_content":"默认transaction用的是数据库默认的隔离级别不是一定是RR，只是用MySQL默认是RR","like_count":21,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462056,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565313235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124040,"user_name":"L.","can_delete":false,"product_type":"c1","uid":1181647,"ip_address":"","ucode":"46A2F679C094E8","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/cf/b0d6fe74.jpg","comment_is_top":false,"comment_ctime":1565795759,"is_pvip":false,"replies":[{"id":"45558","content":"粗略看好像没什么问题，但仔细看就能看出问题了。<br><br>事务A存在读和改两个操作，事务B也同样存在读和改两个操作。事务A在读时，由于是共享锁，事务B也能读到该数据，当事务A进行修改就需要上排他锁了，此时事务B由于已经对该数据加了共享锁，事务A需要等待事务B释放共享锁才能获取排他锁来修改数据。同样事务B也在等待事务A释放共享锁。这种操作会导致死锁的出现。<br><br>我们一般用一个读的事务操作和一个读写事务操作来理解RR事务隔离级别。","user_name":"作者回复","comment_id":124040,"uid":"1228576","ip_address":"","utype":1,"ctime":1565832904,"user_name_real":"刘超"}],"discussion_count":7,"race_medal":0,"score":"44515468719","product_id":100028001,"comment_content":"老师，对于可重复读(Repeatable Read)的事务级别可以避免不可重复读的现象有个疑问：<br>对于事务A来说，它在获得共享锁期间修改了数据，比如把A改为B，修改完成后释放共享锁。在A获得共享锁期间，事务B看到的数据是A，释放共享锁后，事务B才获得排他锁，然后看到的数据是B。两次的数据不一样啊，还是没有避免不可重复读。。。。不知道我理解的哪里不对，望老师指点。。。🙏","like_count":11,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462976,"discussion_content":"粗略看好像没什么问题，但仔细看就能看出问题了。\n\n事务A存在读和改两个操作，事务B也同样存在读和改两个操作。事务A在读时，由于是共享锁，事务B也能读到该数据，当事务A进行修改就需要上排他锁了，此时事务B由于已经对该数据加了共享锁，事务A需要等待事务B释放共享锁才能获取排他锁来修改数据。同样事务B也在等待事务A释放共享锁。这种操作会导致死锁的出现。\n\n我们一般用一个读的事务操作和一个读写事务操作来理解RR事务隔离级别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565832904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1926759,"avatar":"","nickname":"赵玉闯","note":"","ucode":"82E85AC08206EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284182,"discussion_content":"事务一读取第一次如果释放共享锁，那事务二就可以加任何锁，当然也可以修改数据，这个时候事务一第二次去读取的的话就出现不一致了。但是RR是当事务一第一次获取共享锁读取时候就没释放共享所，所以事务二没有能力用排他锁去修改数据，也只能读而已，也就不会出现不一致。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1592464790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1142335,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6e/3f/49e5079f.jpg","nickname":"楞伽山人","note":"","ucode":"5859C06DAC790D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1926759,"avatar":"","nickname":"赵玉闯","note":"","ucode":"82E85AC08206EA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542098,"discussion_content":"分析的有道理 如果是在RR级别下 事务B读取到的数据是和A刚开始读取到的是一样的 如果事务A已经释放了锁 那么事务B要进行变更操作就会进行加排他锁 如果没有释放需要进行变更就需要等待事务A释放共享锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640666437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284182,"ip_address":""},"score":542098,"extra":""}]},{"author":{"id":2118466,"avatar":"https://static001.geekbang.org/account/avatar/00/20/53/42/349db1a4.jpg","nickname":"断嵩","note":"","ucode":"0AC6A20E1F6414","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591101,"discussion_content":"如果事务A和事务B同时加共享锁，无论在共享锁（lock in share mode）或者排他锁（for update）的情况下，都是当前读，当前读是一定要读到最新的版本，不具备可重复读的规则，可重复度只存在于快照读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666278129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1971079,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/13/87/73a17c60.jpg","nickname":"似曾相识","note":"","ucode":"DCBA5F6ABC7401","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266528,"discussion_content":"A加了共享锁为什么还能修改数据?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589527330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1118374,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/a6/4d2c933e.jpg","nickname":"K","note":"","ucode":"69831D1EFC083C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4919,"discussion_content":"老哥，我是这么理解的，rr级别下，a加了事务读取，其实b就读不到了。等到a结束了事务，适当共享锁，b才能读到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565832380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1971079,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/13/87/73a17c60.jpg","nickname":"似曾相识","note":"","ucode":"DCBA5F6ABC7401","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1118374,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/a6/4d2c933e.jpg","nickname":"K","note":"","ucode":"69831D1EFC083C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266530,"discussion_content":"A加共享锁，B如果也加共享锁是可以读到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589527433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4919,"ip_address":""},"score":266530,"extra":""}]}]},{"had_liked":false,"id":121738,"user_name":"和你一起搬砖的胡大爷","can_delete":false,"product_type":"c1","uid":1008587,"ip_address":"","ucode":"54607F4E17917A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","comment_is_top":false,"comment_ctime":1565195127,"is_pvip":false,"replies":[{"id":"44871","content":"好的，后面安排","user_name":"作者回复","comment_id":121738,"uid":"1228576","ip_address":"","utype":1,"ctime":1565314832,"user_name_real":"刘超"}],"discussion_count":3,"race_medal":0,"score":"31629966199","product_id":100028001,"comment_content":"老师能否重点讲一下record lock、gap lock 以及 next-key lock？","like_count":7,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461925,"discussion_content":"好的，后面安排","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565314832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1442123,"avatar":"https://static001.geekbang.org/account/avatar/00/16/01/4b/196a7d8a.jpg","nickname":"起点","note":"","ucode":"A54A6D21383B23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300376,"discussion_content":"深入理解mysql里的锁，可参考文章https://mp.weixin.qq.com/s/OC6edjkxoL76tVB_BxgoIw\n里面都做了详尽的说明","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598068644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4198,"discussion_content":"推荐买丁奇老师的mysql课程。里面讲的很详细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565224647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143177,"user_name":"月迷津渡","can_delete":false,"product_type":"c1","uid":1264111,"ip_address":"","ucode":"2B18B2FE3DAC3B","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","comment_is_top":false,"comment_ctime":1571643140,"is_pvip":false,"replies":[{"id":"55867","content":"文中解释了怎么实现了数据库的事务隔离级别，那就是通过锁来实现的，Spring的封装只是使用了 MySQL提供的标准接口，只要在设置transaction的时候设置事务隔离级别。<br><br>如果不想影响不同业务相互之间的性能，可以通过拆库实现。","user_name":"作者回复","comment_id":143177,"uid":"1228576","ip_address":"","utype":1,"ctime":1572082842,"user_name_real":"刘超"}],"discussion_count":4,"race_medal":0,"score":"23046479620","product_id":100028001,"comment_content":"一个问题困扰我挺久希望解答，spring的事务隔离和db的事务隔离机制有什么关系，这么问吧比如db里默认是RR的隔离级别（默认也肯定会有一个隔离级别），我spring的事务里就不用配置隔离级别了？如果spring的事务里的代码并没有db操作我也能设置spring的事务隔离级别？<br>其次就是设置db级别的事务隔离的话，那如果业务不一样的话是不是理论上可以把库拆开来？因为肯定有一些库用到了不需要的更高隔离级别影响性能。","like_count":6,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471409,"discussion_content":"文中解释了怎么实现了数据库的事务隔离级别，那就是通过锁来实现的，Spring的封装只是使用了 MySQL提供的标准接口，只要在设置transaction的时候设置事务隔离级别。\n\n如果不想影响不同业务相互之间的性能，可以通过拆库实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572082842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3012772,"avatar":"","nickname":"兮子","note":"","ucode":"E94C83593E7FAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583265,"discussion_content":"还有事务传播行为设置，可以处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660009451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"安徽"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2019760,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d1/b0/f4e91c7b.jpg","nickname":"吴亦凡","note":"","ucode":"A785AD9C98D657","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569846,"discussion_content":"可以理解成一个是rr只是针对qps，而spring的是tps，针对多个qps的一致性保证","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651572963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306345,"discussion_content":"spring的事务是依赖数据库实现的，它只是一层封装","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600250298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128779,"user_name":"咬尖月牙儿","can_delete":false,"product_type":"c1","uid":1325661,"ip_address":"","ucode":"A6223A6B713109","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/5d/c5dc789a.jpg","comment_is_top":false,"comment_ctime":1566961819,"is_pvip":false,"replies":[{"id":"50265","content":"可以阅读一些基础入门的书籍，也是作者已经消化梳理过了的，会比较通俗易懂。","user_name":"作者回复","comment_id":128779,"uid":"1228576","ip_address":"","utype":1,"ctime":1567829050,"user_name_real":"刘超"}],"discussion_count":2,"race_medal":0,"score":"18746831003","product_id":100028001,"comment_content":"老师，您这些数据库的相关知识是从官网还是某些书籍中获取的？我的数据库进阶的知识比较浅，看官网觉得有点费劲，不知道从哪入手去看去学","like_count":5,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465098,"discussion_content":"可以阅读一些基础入门的书籍，也是作者已经消化梳理过了的，会比较通俗易懂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567829050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306347,"discussion_content":"学习是循序渐进的，官网权威 直接读可能看不懂，不能跨级学习，慢即是快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600250774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191072,"user_name":".","can_delete":false,"product_type":"c1","uid":1083502,"ip_address":"","ucode":"83F583994F4F72","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/6e/3bd860d3.jpg","comment_is_top":false,"comment_ctime":1584724472,"is_pvip":true,"replies":[{"id":"74170","content":"每篇都有读后总结，赞一个","user_name":"作者回复","comment_id":191072,"uid":"1228576","ip_address":"","utype":1,"ctime":1585136842,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"14469626360","product_id":100028001,"comment_content":"1. 结合业务场景，使用低级别事务隔离<br>2. 避免行锁升级表锁<br>3. 控制事务的大小，减少锁定的资源量和锁定时间长度","like_count":4,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488110,"discussion_content":"每篇都有读后总结，赞一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585136842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170718,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1578673431,"is_pvip":false,"replies":[{"id":"67222","content":"这里的索引在update也会使用到","user_name":"作者回复","comment_id":170718,"uid":"1228576","ip_address":"","utype":1,"ctime":1579524273,"user_name_real":"刘超"}],"discussion_count":3,"race_medal":0,"score":"10168608023","product_id":100028001,"comment_content":"老是有个问题，希望得到解答：InnoDB引擎下，select语句是不加锁的啊，那在文章中 避免行锁升级表锁一节中，讲到 如果不通过索引条件检索数据，行锁将会升级到表锁，应该不成立啊？","like_count":3,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481082,"discussion_content":"这里的索引在update也会使用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579524273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306351,"discussion_content":"没有索引直接加的就是表锁，where命中部分变为主键行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600251095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","nickname":"易水寒","note":"","ucode":"F5D8127ED4754E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284000,"discussion_content":"老兄，只有显示加锁呢读操作（s锁或x锁）和写操作才会涉及到锁，普通的读操作根据隔离级别要么是读快照数据（根据undo log），要么是当前读（最新的数据，比如读未提交隔离级别）。undo log一般会伴随写操作而产生，更新和删除操作都是当前读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592410267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243354,"user_name":"起点","can_delete":false,"product_type":"c1","uid":1442123,"ip_address":"","ucode":"A54A6D21383B23","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/4b/196a7d8a.jpg","comment_is_top":false,"comment_ctime":1598070700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893037996","product_id":100028001,"comment_content":"多谢老师分享，又学到了很多知识。不过文中的知识需要很多基础知识的支撑才能理解，基础薄弱的同学需要了解一些基础<br><br>数据库为什么要有事务？<br><br>为了保证数据最终的一致性。<br><br><br>事务包括哪几个特性？<br><br>原子性、隔离性、一致性、持久性。<br><br><br>事务的并发引起了哪些问题？<br><br>事务并发会引起脏读、重复读、幻读问题。<br><br><br>怎么解决事务并发出现的问题？<br><br>设置事务隔离级别，读未提交，读提交，重复读，序列化。<br><br><br>数据库通过什么方式保证了事务的隔离性？<br><br>通过加锁来实现事务的隔离性。<br><br><br>频繁的加锁会带来什么问题？<br><br>因为锁的互斥特性，加锁的时候我们读数据的时候没办法对该数据进行修改。而在修改数据的时候也没办法读取数据，加锁的机制会极大的降低了数据库性能。<br><br><br>数据库是如何解决加锁后的性能问题的？<br><br>MVCC 多版本控制实现读取数据不用加锁， 可以让读取数据同时修改。修改数据时同时可读取。<br><br><br><br>mvcc原理参考<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;NTqNhlXPaOyPAlmSNY2PzQ<br><br>锁原理参考<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;OC6edjkxoL76tVB_BxgoIw","like_count":2},{"had_liked":false,"id":138327,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1570165244,"is_pvip":false,"replies":[{"id":"53307","content":"事务B读取数据加了共享锁，修改数据时加了排它锁","user_name":"作者回复","comment_id":138327,"uid":"1228576","ip_address":"","utype":1,"ctime":1570345979,"user_name_real":"刘超"}],"discussion_count":2,"race_medal":0,"score":"5865132540","product_id":100028001,"comment_content":"未提交读（Read Uncommitted）：在事务 A 读取数据时，事务 B 读取和修改数据加了共享锁。这种隔离级别，会导致脏读、不可重复读以及幻读。<br><br>这句话怎么理解呢？事务B读取和修改数据加了共享锁？修改数据不是只能加排它锁么？","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469487,"discussion_content":"事务B读取数据加了共享锁，修改数据时加了排它锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570345979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","nickname":"易水寒","note":"","ucode":"F5D8127ED4754E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284001,"discussion_content":"未提交读，读操作无论是否加锁，都是读当前最新的数据，加锁肯定是读最新的，只不过可能会和其他事务加的锁产生冲突，冲突的情况下会阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592410550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129072,"user_name":"加载中……","can_delete":false,"product_type":"c1","uid":1366948,"ip_address":"","ucode":"3E59A0A0784D0A","user_header":"https://static001.geekbang.org/account/avatar/00/14/db/a4/191be6ad.jpg","comment_is_top":false,"comment_ctime":1567039114,"is_pvip":false,"replies":[{"id":"50384","content":"这是RR下使用的间隙锁，所以不会出现幻读","user_name":"作者回复","comment_id":129072,"uid":"1228576","ip_address":"","utype":1,"ctime":1567944881,"user_name_real":"刘超"}],"discussion_count":7,"race_medal":0,"score":"5862006410","product_id":100028001,"comment_content":"老师好，有个问题请教下。文章中说：“可重复读（Repeatable Read）可以避免脏读、不可重复读，但依然存在幻读的问题。”<br>我之前了解的是，SQL标准不要求RR解决幻读，但InnoDB的 RR下 是不会产生幻读的。<br>而且自己实验也是InnoDB在RR下没有幻读的现象。操作如下：<br>sessionA: begin;<br>sessionA: select * from t where id&gt;1;(2条记录)<br>sessionB: insert into t(id,a) values(5,5);<br>sessionA: select * from t where id&gt;1;(还是2条看不到5,5。没有产生幻读)","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465260,"discussion_content":"这是RR下使用的间隙锁，所以不会出现幻读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567944881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1570138,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/j5clGGhnC727qj0UDKFBmUMtXljvQvkuUmqia1xJGsiaCJOZqbQ7Agv0bicq2hATmRaOfAnltjEgXsy8QMWVrcjeg/132","nickname":"Geek_178867","note":"","ucode":"1201C559DF6DA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394369,"discussion_content":"你select的时候后面加个for update就能看到3条数据了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631858852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","nickname":"易水寒","note":"","ucode":"F5D8127ED4754E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284015,"discussion_content":"会话A不能读到会话B插入的数据不是因为锁，而是因为mvcc机制，B中数据对A不可见，楼主可以去了解下快照读的含义及实现原理。如果A是加了共享锁的读操作，那么B会被阻塞，因为A中会加（1，∞）的间隙锁，也就是gap lock，我觉得是如此","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592412873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348830,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/SM4fwn9uFicXU8cQ1rNF2LQdKNbZI1FX1jmdwaE2MTrBawbugj4TQKjMKWG0sGbmqQickyARXZFS8NZtobvoWTHA/132","nickname":"td901105","note":"","ucode":"32D42A4F36FA02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270791,"discussion_content":"是因为select读取的是镜像吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590055057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8381,"discussion_content":"幻读和重复读的概念不清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567984380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7820,"discussion_content":"session B提交了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567683763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1366948,"avatar":"https://static001.geekbang.org/account/avatar/00/14/db/a4/191be6ad.jpg","nickname":"加载中……","note":"","ucode":"3E59A0A0784D0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7822,"discussion_content":"就一条语句，相当于 mysql内部会开启提交事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567684588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7820,"ip_address":""},"score":7822,"extra":""}]}]},{"had_liked":false,"id":127010,"user_name":"小布丁","can_delete":false,"product_type":"c1","uid":1253022,"ip_address":"","ucode":"A9907715455F58","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/9e/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1566534581,"is_pvip":false,"replies":[{"id":"47068","content":"两者实际上是一回事，Spring的事务也是基于数据库事务封装的方法。","user_name":"作者回复","comment_id":127010,"uid":"1228576","ip_address":"","utype":1,"ctime":1566610632,"user_name_real":"刘超"}],"discussion_count":2,"race_medal":0,"score":"5861501877","product_id":100028001,"comment_content":"老师数据库的事务和Spring的事务是一回事吗？写业务代码的时候，两种不同的事务分别起什么作用呢？或者说控制范围有何不同呢？","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464281,"discussion_content":"两者实际上是一回事，Spring的事务也是基于数据库事务封装的方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566610632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1926759,"avatar":"","nickname":"赵玉闯","note":"","ucode":"82E85AC08206EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284183,"discussion_content":"那如果数据库设置的级别和Spring不一样，会出错还是优先用谁的？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592464945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121799,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1565225659,"is_pvip":false,"replies":[{"id":"53404","content":"是的，可以根据自己的业务来选择隔离级别","user_name":"作者回复","comment_id":121799,"uid":"1228576","ip_address":"","utype":1,"ctime":1570434115,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"5860192955","product_id":100028001,"comment_content":"老师好!之前听说不少互联网公司，把mysql数据库默认隔离级别设置为读已提交(不手动设默认是RR)，来提高吞吐量。这样就需要开发人员根据业务选择合适的隔离级别是么?<br>接着老师减库存的例子:<br>新建订单,减库存操作可以在，读已提交隔离级别下执行么?<br>我觉得新建订单和减库存只要保证原子行就好了。减库存是读当前操作，还是需要在RR下。","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461952,"discussion_content":"是的，可以根据自己的业务来选择隔离级别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570434115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328974,"user_name":"皮卡卡","can_delete":false,"product_type":"c1","uid":2715554,"ip_address":"","ucode":"52B3F234550E7F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBHy0D2KUZwOGHRG8qloicx2V4E4mImsPIiavPfr12BZB6QyUlHNdmOohC3EbsgnM2QNBeoqu82Grw/132","comment_is_top":false,"comment_ctime":1640966326,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640966326","product_id":100028001,"comment_content":"跟着串下来，对锁、事务理解了很多，感谢","like_count":0},{"had_liked":false,"id":301188,"user_name":"动物不困","can_delete":false,"product_type":"c1","uid":1272259,"ip_address":"","ucode":"E0E4A31757936A","user_header":"https://static001.geekbang.org/account/avatar/00/13/69/c3/9bf5016f.jpg","comment_is_top":false,"comment_ctime":1625568409,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1625568409","product_id":100028001,"comment_content":"看到老师说<br>&quot;数据库的事务隔离级别，是通过锁来实现的&quot;<br>&quot;InnoDB中RC和RR隔离事务是基于多版本并发控制(MVCC)实现高性能事务&quot;<br><br>这里不理解了，到底是锁实现的，还是MVCC 实现的？<br>","like_count":0,"discussions":[{"author":{"id":2215928,"avatar":"https://static001.geekbang.org/account/avatar/00/21/cf/f8/86076de4.jpg","nickname":"宏彬","note":"","ucode":"8EFDD45EA62342","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387910,"discussion_content":"是配合使用的，当使快照读的时候，用到mvcc；当使用当前读，就有锁的参与了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628495300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291368,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1620230013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620230013","product_id":100028001,"comment_content":"原文：<br>行锁是通过索引实现的，如果不通过索引条件检索数据，那么 InnoDB 将对表中所有的记录进行加锁，其实就是升级为表锁了。<br><br>不通过索引条件检索数据，怎么理解？where 条件中无索引字段？","like_count":0},{"had_liked":false,"id":287219,"user_name":"出卖灵魂的教练Kerry","can_delete":false,"product_type":"c1","uid":1807943,"ip_address":"","ucode":"8C64517DA556FE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/47/93838ff7.jpg","comment_is_top":false,"comment_ctime":1617844912,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1617844912","product_id":100028001,"comment_content":"老师，读已提交和可重复读隔离级别应用场景，读完还是不太清楚，可否再说说呢？","like_count":0},{"had_liked":false,"id":275786,"user_name":"哦","can_delete":false,"product_type":"c1","uid":1444469,"ip_address":"","ucode":"A634888525305B","user_header":"https://static001.geekbang.org/account/avatar/00/16/0a/75/24764b3f.jpg","comment_is_top":false,"comment_ctime":1611667043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611667043","product_id":100028001,"comment_content":"我觉得讲的有问题呀，在RR级别中，事务A都修改数据了，怎么还加共享锁，而且在RR级别中加next-key locking是能解决幻读问题的，因为next-key locking将查询的范围都加了X锁，其他事务要插入必须等待锁释放，即事务A完成，那么事务A中两次相同查询的结果是一致的","like_count":0},{"had_liked":false,"id":243726,"user_name":"起点","can_delete":false,"product_type":"c1","uid":1442123,"ip_address":"","ucode":"A54A6D21383B23","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/4b/196a7d8a.jpg","comment_is_top":false,"comment_ctime":1598258177,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598258177","product_id":100028001,"comment_content":"    1.根据业务场景调整事务隔离级别，一致性要求不高，或者不会存在并发问题的的场景降低事务隔离级别。<br>    2.尽量让条件命中索引，只有在使用索引的时候才能使用到行锁，否则都是表锁。<br>    3.控制事务的粒度，代码中要避免没有强关联的业务写到一个事务里。事务粒度大不仅会影响性能而且还容易导致死锁。<br>    4.持久性和原子性是基于redolog和undolog实现的，undolog能保证事务中断后的数据回滚工作，redolog保证无论什么情况下（就算数据库宕机）只要事务commit了就能保证所有的操作都能写入磁盘。<br>","like_count":0,"discussions":[{"author":{"id":2532285,"avatar":"","nickname":"Geek_926921","note":"","ucode":"51C3B0178D77E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382454,"discussion_content":"大佬，数据的回滚到底是undo log 还是binLog 呀，在别的地方看到事务的回滚是由binlog来实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625578704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242089,"user_name":"在下蟑螂王","can_delete":false,"product_type":"c1","uid":2060756,"ip_address":"","ucode":"E66A65A327095A","user_header":"","comment_is_top":false,"comment_ctime":1597587711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597587711","product_id":100028001,"comment_content":"在看另一个老师的时候看到有点矛盾的地方啊。比如可重复读实现不是通过锁，是通过提前把要查的数据作成视图来实现的。。。虽然文中的x锁s锁确实也能实现。","like_count":1},{"had_liked":false,"id":227414,"user_name":"耿嘉艺","can_delete":false,"product_type":"c1","uid":2023401,"ip_address":"","ucode":"727A22BD41E8AF","user_header":"","comment_is_top":false,"comment_ctime":1592375817,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1592375817","product_id":100028001,"comment_content":"未提交读（Read Uncommitted）的隔离级别下，由于mvcc的存在，不应该也能防止脏读吗？还是说只有读取操作，发现记录被加锁的时候，才会使用mvcc","like_count":0,"discussions":[{"author":{"id":1238961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","nickname":"易水寒","note":"","ucode":"F5D8127ED4754E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284002,"discussion_content":"读已提交隔离级别及更好的隔离级别mvcc才会有效，未提交读和mvcc没任何关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592410705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197367,"user_name":"云封","can_delete":false,"product_type":"c1","uid":1542521,"ip_address":"","ucode":"51C2F84EEA1944","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aobibE2ABHn3njdaHBY23hcZcIs71aRahryuUDcLghQqTjmwghEIgKYelBERlNK881MP0oRpWGnrQdscD85dZ9g/132","comment_is_top":false,"comment_ctime":1585371906,"is_pvip":false,"replies":[{"id":"75254","content":"后面这里的select 是 select ... for update","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1585743961,"ip_address":"","comment_id":197367,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585371906","product_id":100028001,"comment_content":"老师，上面不是说普通的select不加锁嘛，为啥后面又说，在select下，除了基于唯一索引外，其他的索引查询都会获取gap lock以及next-key lock","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489507,"discussion_content":"后面这里的select 是 select ... for update","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585743961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194476,"user_name":"OneThin","can_delete":false,"product_type":"c1","uid":1050458,"ip_address":"","ucode":"506989C201402F","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/5a/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1585061657,"is_pvip":false,"replies":[{"id":"74160","content":"是的","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1585135369,"ip_address":"","comment_id":194476,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585061657","product_id":100028001,"comment_content":"最后一个例子，有个疑问，因为要判断库存，这里是不是应该用可重复读的隔离级别，所以读取库存的时候已经加锁了，直到事务结束，那么锁对啊时间应该差不多才对啊","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488828,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585135369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182259,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1582738242,"is_pvip":false,"replies":[{"id":"71178","content":"共享锁排他锁是实现事务的两个锁，而行锁是保证并发情况下的数据完整性，共享锁和排他锁的实现原理与行锁不一样。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1583156841,"ip_address":"","comment_id":182259,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582738242","product_id":100028001,"comment_content":"老师，共享锁排他锁和行锁的三种实现算法是什么关系？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485275,"discussion_content":"共享锁排他锁是实现事务的两个锁，而行锁是保证并发情况下的数据完整性，共享锁和排他锁的实现原理与行锁不一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583156841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170715,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1578672534,"is_pvip":false,"replies":[{"id":"67220","content":"可以设置全局，也可以对当前session设置，不能对单个表进行设置。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1579523763,"ip_address":"","comment_id":170715,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578672534","product_id":100028001,"comment_content":"在结合业务场景，使用低级别事务隔离中，所举的用户、积分的例子中，使用不同的隔离级别，但是隔离级别不能单独给表设置吧。","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481080,"discussion_content":"可以设置全局，也可以对当前session设置，不能对单个表进行设置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579523763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163887,"user_name":"火锅小王子","can_delete":false,"product_type":"c1","uid":1053262,"ip_address":"","ucode":"7D1BF39C437A99","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/4e/ff0702fc.jpg","comment_is_top":false,"comment_ctime":1576818938,"is_pvip":false,"replies":[{"id":"62979","content":"先通过SELECT @@tx_isolation;查询下数据库的隔离级别是否为REPEATABLE-READ，然后再按照以下步骤操作：<br>1、分表开启A、B两个客户端，并在两个客户端开启事务：<br>mysql&gt; start transaction;<br><br>2、并在两个客户端执行以下sql：<br>mysql&gt; select * from `order` where id=1；<br><br>3、在B客户端执行以下sql,但不提交事务<br>mysql&gt; update `order` set status = 2 where id =1;<br><br>4、此时在A客户端查询该值，此时你会发现值没有变<br>mysql&gt; select * from `order` where id = 1;<br><br>5、提交事务客户端B的事务，再次查询A中的值，此时你会发现仍然没有变<br>mysql&gt;commit；<br>mysql&gt; select * from `order` where id = 1;<br><br>6、提交客户端A中的事务，再次查询A，B的值，此时发生了变更<br>mysql&gt;commit；<br>mysql&gt; select * from `order` where id = 1;<br>mysql&gt; select * from `order` where id = 1;<br><br>可以按照以上步骤理解。<br>","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1577188832,"ip_address":"","comment_id":163887,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1576818938","product_id":100028001,"comment_content":"您好 对于可重复读的描述：事务 A 在读取数据时，事务 B 只能读取数据，不能修改。当事务 A 读取到数据后，事务 B 才能修改。 经试验  事务A在读取但是事务并未结束的时候  事务B是可以修改数据并提交的  不知道是我哪里理解有问题？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478570,"discussion_content":"先通过SELECT @@tx_isolation;查询下数据库的隔离级别是否为REPEATABLE-READ，然后再按照以下步骤操作：\n1、分表开启A、B两个客户端，并在两个客户端开启事务：\nmysql&amp;gt; start transaction;\n\n2、并在两个客户端执行以下sql：\nmysql&amp;gt; select * from `order` where id=1；\n\n3、在B客户端执行以下sql,但不提交事务\nmysql&amp;gt; update `order` set status = 2 where id =1;\n\n4、此时在A客户端查询该值，此时你会发现值没有变\nmysql&amp;gt; select * from `order` where id = 1;\n\n5、提交事务客户端B的事务，再次查询A中的值，此时你会发现仍然没有变\nmysql&amp;gt;commit；\nmysql&amp;gt; select * from `order` where id = 1;\n\n6、提交客户端A中的事务，再次查询A，B的值，此时发生了变更\nmysql&amp;gt;commit；\nmysql&amp;gt; select * from `order` where id = 1;\nmysql&amp;gt; select * from `order` where id = 1;\n\n可以按照以上步骤理解。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577188832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053262,"avatar":"https://static001.geekbang.org/account/avatar/00/10/12/4e/ff0702fc.jpg","nickname":"火锅小王子","note":"","ucode":"7D1BF39C437A99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98918,"discussion_content":"嗯嗯 实际是这样的 文中描述的是阻塞 其实并没有 而只是相当于当前事务隔离","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577191032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162608,"user_name":"飞天小猪","can_delete":false,"product_type":"c1","uid":1173360,"ip_address":"","ucode":"4F9E71E52274C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e7/70/2a382ccf.jpg","comment_is_top":false,"comment_ctime":1576564706,"is_pvip":false,"replies":[{"id":"61972","content":"这里是针对库存表的锁资源","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1576668899,"ip_address":"","comment_id":162608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576564706","product_id":100028001,"comment_content":"最后减库存例子中，如果要避免长时间持有锁，不应该先减库存，选择执行顺序2吗？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478102,"discussion_content":"这里是针对库存表的锁资源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576668899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158873,"user_name":"奋斗的小白鼠","can_delete":false,"product_type":"c1","uid":1743483,"ip_address":"","ucode":"752BB901FFB7CE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/icHicAP9M4M4DIjAvlj5FDdFxIeA0pR3J15QdvVjXQXbznwunDN8OvrYqnsFchtBTNrZCCfGTE2RpPzIxjkvFAKg/132","comment_is_top":false,"comment_ctime":1575467875,"is_pvip":false,"replies":[{"id":"60849","content":"这对于普通的select操作是不加锁的，不论事务隔离级别。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1575537281,"ip_address":"","comment_id":158873,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1575467875","product_id":100028001,"comment_content":"老师，您说MVCC 对普通的 Select 不加锁，那RC和RR级别不一样了吗？这两个不就是select加锁不一样吗？还有既然RC select也是快照读，那是不是也解决了不可重复读问题？<br>望解答，研究了一晚上Mvcc搞晕了","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476877,"discussion_content":"这对于普通的select操作是不加锁的，不论事务隔离级别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575537281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1442123,"avatar":"https://static001.geekbang.org/account/avatar/00/16/01/4b/196a7d8a.jpg","nickname":"起点","note":"","ucode":"A54A6D21383B23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300375,"discussion_content":"如果不理解MVCC，可阅读这篇文章\n\nhttps://mp.weixin.qq.com/s/NTqNhlXPaOyPAlmSNY2PzQ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598068363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","nickname":"易水寒","note":"","ucode":"F5D8127ED4754E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284004,"discussion_content":"rc快照读在事务结束前会变化，每次读的时候快照会变化，rr的快照读是事务开启（或开启事务后第一条查询执行时）时的快照，在事务结束前都不会变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592411357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158432,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1575369871,"is_pvip":false,"replies":[{"id":"60854","content":"检查下自己的代码以及隔离级别","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1575538135,"ip_address":"","comment_id":158432,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1575369871","product_id":100028001,"comment_content":"老师，您好，我在可重复读里面，事务A没有结束，不做修改操作，但是事务B也可以修改数据","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476724,"discussion_content":"检查下自己的代码以及隔离级别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575538135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","nickname":"易水寒","note":"","ucode":"F5D8127ED4754E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284005,"discussion_content":"估计你你理解了，事务A中的读应该是select …lock in share mode，也就是加共享锁的读，普通的读对其他事务的更新操作没影响","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592411559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1877904,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/a7/90/9a0da433.jpg","nickname":"小哇","note":"","ucode":"1C2C1FE3FCB9CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1238961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","nickname":"易水寒","note":"","ucode":"F5D8127ED4754E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287370,"discussion_content":"老师说的锁实现事务隔离级别，应该是锁➕MVCC实现隔离级别吧，看老师意思好像是事务读默认会加上共享锁而不是显式的.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593426268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284005,"ip_address":""},"score":287370,"extra":""}]}]},{"had_liked":false,"id":139990,"user_name":"月迷津渡","can_delete":false,"product_type":"c1","uid":1264111,"ip_address":"","ucode":"2B18B2FE3DAC3B","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","comment_is_top":false,"comment_ctime":1570781504,"is_pvip":false,"replies":[{"id":"54269","content":"在40讲中，讲到了redo log的工作原理，redo log 又包括了内存中的日志缓冲（redo log buffer）以及保存在磁盘的重做日志文件（redo log file），前者存储在内存中，容易丢失，后者持久化在磁盘中，不会丢失。<br><br>MySQL支持用户自定义在commit时如何将log buffer中的日志刷log file中。这种控制通过变量 innodb_flush_log_at_trx_commit 的值来决定。该变量有3种值：0、1、2，默认为1，即每提交一次事务都写到磁盘中，而设置为0时，为每秒将事务写到磁盘中。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1570955455,"ip_address":"","comment_id":139990,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1570781504","product_id":100028001,"comment_content":"有个问题请教下，我看到说 redolog 为了提升持久化的IO效率而产生，把每次事务写数据文件改成写redoLog然后再批量写redoLog到数据文件。我就有个问题了，redoLog和数据文件不都是磁盘读么？并且写redolog也需要在事务中同步写，因为异步写不能保证redolog必定写成功。。。求教","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470201,"discussion_content":"在40讲中，讲到了redo log的工作原理，redo log 又包括了内存中的日志缓冲（redo log buffer）以及保存在磁盘的重做日志文件（redo log file），前者存储在内存中，容易丢失，后者持久化在磁盘中，不会丢失。\n\nMySQL支持用户自定义在commit时如何将log buffer中的日志刷log file中。这种控制通过变量 innodb_flush_log_at_trx_commit 的值来决定。该变量有3种值：0、1、2，默认为1，即每提交一次事务都写到磁盘中，而设置为0时，为每秒将事务写到磁盘中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570955455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","nickname":"易水寒","note":"","ucode":"F5D8127ED4754E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284006,"discussion_content":"redolog整体上是近似顺序写（这里指刷盘），但不严格是顺序写，要比直接写数据文件效率高一些，另外redo log也能够让用户在持久性和性能上做选择，就是作者说的那三中log buffer刷盘的策略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592411866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","nickname":"月迷津渡","note":"","ucode":"2B18B2FE3DAC3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32480,"discussion_content":"非常感谢 跟log4J 异步记日志有点类似","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571041336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139659,"user_name":"面试官问","can_delete":false,"product_type":"c1","uid":1009375,"ip_address":"","ucode":"F9CE89589772F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/df/501ba989.jpg","comment_is_top":false,"comment_ctime":1570699973,"is_pvip":true,"replies":[{"id":"54270","content":"收到建议","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1570955563,"ip_address":"","comment_id":139659,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570699973","product_id":100028001,"comment_content":"Serializable 翻译为 可串行化 会更合理一些。","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470041,"discussion_content":"收到建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570955563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135269,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1569115327,"is_pvip":false,"replies":[{"id":"53070","content":"是的","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1569981268,"ip_address":"","comment_id":135269,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1569115327","product_id":100028001,"comment_content":"老师，对数据库锁不是很熟悉。以下结构是正确的吗？<br>数据库锁=乐观锁 + 悲观锁[共享锁、排它锁[行锁、表锁]]<br>这些是数据库所有的锁吗?<br>","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468118,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569981268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284337,"avatar":"","nickname":"ty_young","note":"","ucode":"EB1D5DB0AE7B33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230941,"discussion_content":"这个分类好奇怪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586781999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133203,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1568442302,"is_pvip":false,"replies":[{"id":"51105","content":"是的","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1568533719,"ip_address":"","comment_id":133203,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568442302","product_id":100028001,"comment_content":"请问老师数据库的事务本质是不是都是利用单库的事务机制实现的?分布式数据库事务，只是将控制事务提交或回滚的动作往上层提升啦?","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467292,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568533719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132304,"user_name":"小学生🍭","can_delete":false,"product_type":"c1","uid":1134122,"ip_address":"","ucode":"A0F62E3264D777","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/2a/e606529b.jpg","comment_is_top":false,"comment_ctime":1568080856,"is_pvip":false,"replies":[{"id":"50695","content":"也是行锁","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1568165317,"ip_address":"","comment_id":132304,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568080856","product_id":100028001,"comment_content":"老师update语句是行锁，那insert语句是什么锁呢","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466867,"discussion_content":"也是行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568165317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122899,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1565571694,"is_pvip":false,"replies":[{"id":"45086","content":"对的","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565573167,"ip_address":"","comment_id":122899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565571694","product_id":100028001,"comment_content":"老师好，查询未加索引时行锁升级为表锁这里有个疑问，mvvc机制下select不是不加锁吗？除非是in share mode或for update","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462446,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565573167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122410,"user_name":"星星滴蓝天","can_delete":false,"product_type":"c1","uid":1465990,"ip_address":"","ucode":"2F2F56F93AD828","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/86/40877404.jpg","comment_is_top":false,"comment_ctime":1565360665,"is_pvip":false,"replies":[{"id":"45097","content":"嗯嗯，后面会讲到死锁和锁等待的问题","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565574573,"ip_address":"","comment_id":122410,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565360665","product_id":100028001,"comment_content":"老师能否多讲点innodb锁。最近我们老是出现锁等待的情况，老师可否给一些优化的思路","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462239,"discussion_content":"嗯嗯，后面会讲到死锁和锁等待的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565574573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122179,"user_name":"苏志辉","can_delete":false,"product_type":"c1","uid":1068927,"ip_address":"","ucode":"39B25CE21C04EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7f/5dc11380.jpg","comment_is_top":false,"comment_ctime":1565313374,"is_pvip":false,"replies":[{"id":"50396","content":"对的，快照版本不大于事务版本号","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1567947902,"ip_address":"","comment_id":122179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565313374","product_id":100028001,"comment_content":"RR是基于MVVC的，而后者对于select不加锁，那么如果事务a有两次查询，事务b在a的两次查询之间做了修改，要保证可重复读，a两次读取的都是b改之前的快照吗？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462134,"discussion_content":"对的，快照版本不大于事务版本号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567947902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121918,"user_name":"LW","can_delete":false,"product_type":"c1","uid":1325297,"ip_address":"","ucode":"89820332658E98","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/f1/996a070d.jpg","comment_is_top":false,"comment_ctime":1565249037,"is_pvip":false,"replies":[{"id":"44868","content":"对的，redo log保证事务的原子性以及持久性，undo log保证事务的一致性。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565314403,"ip_address":"","comment_id":121918,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565249037","product_id":100028001,"comment_content":"思考题：通过redo log和undo log实现","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462003,"discussion_content":"对的，redo log保证事务的原子性以及持久性，undo log保证事务的一致性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565314403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121894,"user_name":"张学磊","can_delete":false,"product_type":"c1","uid":1250029,"ip_address":"","ucode":"F545F384A6F1E1","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eotSSnZic41tGkbflx0ogIg3ia6g2muFY1hCgosL2t3icZm7I8Ax1hcv1jNgr6vrZ53dpBuGhaoc6DKg/132","comment_is_top":false,"comment_ctime":1565245784,"is_pvip":false,"replies":[{"id":"44869","content":"对的","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1565314428,"ip_address":"","comment_id":121894,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565245784","product_id":100028001,"comment_content":"MySQL通过事务实战原子性，一个事务内的DML语句要么全部成功要么全部失败。通过redo log和undo log实现持久性和一致性，当执行DML语句时会将操作记录到redo log中并记录与之相反的操作到undo log中，事务一旦提交，就将该redolog中的操作，持久化到磁盘上，事务回滚，则执行undo log中记录的操作，恢复到执行前的状态。","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461993,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565314428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121815,"user_name":"撒旦的堕落","can_delete":false,"product_type":"c1","uid":1116864,"ip_address":"","ucode":"15F6AA41EE556F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/c0/401c240e.jpg","comment_is_top":false,"comment_ctime":1565227650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565227650","product_id":100028001,"comment_content":"这是因为，虽然这些操作在同一个事务，但锁的申请在不同时间，只有当其他操作都执行完，才会释放所有锁。  老师 这个虽然降低了更新库存表那行锁持有时间  但是不是增加了订单表锁定的时间了么  还是说一个事务数据插入操作 并不会受到另一个事务数据插入操作的影响","like_count":0},{"had_liked":false,"id":121767,"user_name":"我已经设置了昵称","can_delete":false,"product_type":"c1","uid":1364034,"ip_address":"","ucode":"ED672C5EBDBDC4","user_header":"https://static001.geekbang.org/account/avatar/00/14/d0/42/6fd01fb9.jpg","comment_is_top":false,"comment_ctime":1565221703,"is_pvip":false,"replies":[{"id":"51397","content":"可以的","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1568725499,"ip_address":"","comment_id":121767,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1565221703","product_id":100028001,"comment_content":"执行顺序1那边，是否可以把查询条件放到事务外，减少事务里面的操作","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461934,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568725499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108306,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e9/52/aa3be800.jpg","nickname":"Loubobooo","note":"","ucode":"7B2543A80EBDEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4516,"discussion_content":"这样查询库存会出现不一致，导致脏数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565508256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1364034,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d0/42/6fd01fb9.jpg","nickname":"我已经设置了昵称","note":"","ucode":"ED672C5EBDBDC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1108306,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e9/52/aa3be800.jpg","nickname":"Loubobooo","note":"","ucode":"7B2543A80EBDEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4757,"discussion_content":"貌似放事务里面也一样会不一致的问题呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565705077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4516,"ip_address":""},"score":4757,"extra":""}]}]}]}