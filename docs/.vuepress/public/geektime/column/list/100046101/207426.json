{"id":207426,"title":"10 | 一致哈希算法：如何分群，突破集群的“领导者”限制？","content":"<p>你好，我是韩健。</p><p>学完前面几讲后，有些同学可能有这样的疑问：如果我们通过Raft算法实现了KV存储，虽然领导者模型简化了算法实现和共识协商，但写请求只能限制在领导者节点上处理，导致了集群的接入性能约等于单机，那么随着业务发展，集群的性能可能就扛不住了，会造成系统过载和服务不可用，这时该怎么办呢？</p><p>其实这是一个非常常见的问题。在我看来，这时我们就要通过分集群，突破单集群的性能限制了。</p><p>说到这儿，有同学可能会说了，分集群还不简单吗？加个Proxy层，由Proxy层处理来自客户端的读写请求，接收到读写请求后，通过对Key做哈希找到对应的集群就可以了啊。</p><p>是的，哈希算法的确是个办法，但它有个明显的缺点：当需要变更集群数时（比如从2个集群扩展为3个集群），这时大部分的数据都需要迁移，重新映射，数据的迁移成本是非常高的。那么如何解决哈希算法，数据迁移成本高的痛点呢？答案就是一致哈希（Consistent Hashing）。</p><p>为了帮你更好地理解如何通过哈希寻址实现KV存储的分集群，我除了会带你了解哈希算法寻址问题的本质之外，还会讲一下一致哈希是如何解决哈希算法数据迁移成本高这个痛点，以及如何实现数据访问的冷热相对均匀。</p><!-- [[[read_end]]] --><p>对你来说，学完本讲内容之后，不仅能理解一致哈希的原理，还能掌握通过一致哈希实现数据访问冷热均匀的实战能力。</p><p>老规矩，在正式开始学习之前，我们先看一道思考题。</p><p>假设我们有一个由A、B、C三个节点组成（为了方便演示，我使用节点来替代集群）的KV服务，每个节点存放不同的KV数据：</p><p><img src=\"https://static001.geekbang.org/resource/image/16/9f/1651257c6ff0194960b6b2f07f51e99f.jpg?wh=1142*885\" alt=\"\" title=\"图1\"></p><p>那么，使用哈希算法实现哈希寻址时，到底有哪些问题呢？带着这个问题，让我们开始今天的内容吧。</p><h2>使用哈希算法有什么问题？</h2><p>通过哈希算法，每个key都可以寻址到对应的服务器，比如，查询key是key-01，计算公式为hash(key-01) % 3 ，经过计算寻址到了编号为1的服务器节点A（就像图2的样子）。</p><p><img src=\"https://static001.geekbang.org/resource/image/c6/5a/c6f440a9e77973c3591394d0d896ed5a.jpg?wh=1142*873\" alt=\"\" title=\"图2\"></p><p>但如果服务器数量发生变化，基于新的服务器数量来执行哈希算法的时候，就会出现路由寻址失败的情况，Proxy无法找到之前寻址到的那个服务器节点，这是为什么呢？</p><p>想象一下，假如3个节点不能满足业务需要了，这时我们增加了一个节点，节点的数量从3变化为4，那么之前的hash(key-01) % 3 = 1，就变成了hash(key-01) % 4 = X，因为取模运算发生了变化，所以这个X大概率不是1（可能X为2），这时你再查询，就会找不到数据了，因为key-01对应的数据，存储在节点A上，而不是节点B：</p><p><img src=\"https://static001.geekbang.org/resource/image/27/13/270362d08b0ea77437abcf032634b713.jpg?wh=1142*675\" alt=\"\" title=\"图3\"></p><p>同样的道理，如果我们需要下线1个服务器节点（也就是缩容），也会存在类似的可能查询不到数据的问题。</p><p>而解决这个问题的办法，在于我们要迁移数据，基于新的计算公式hash(key-01) % 4 ，来重新对数据和节点做映射。需要你注意的是，数据的迁移成本是非常高的。</p><p>为了便于你理解，我举个例子，对于1000万key的3节点KV存储，如果我们增加1个节点，变为4节点集群，则需要迁移75%的数据。</p><pre><code>$ go run ./hash.go  -keys 10000000 -nodes 3 -new-nodes 4\n74.999980%\n</code></pre><p><strong>从示例代码的输出，你可以看到，迁移成本是非常高昂的，这在实际生产环境中也是无法想象的。</strong></p><p>那我们如何通过一致哈希解决这个问题呢？</p><h2>如何使用一致哈希实现哈希寻址？</h2><p>一致哈希算法也用了取模运算，但与哈希算法不同的是，哈希算法是对节点的数量进行取模运算，而一致哈希算法是对2^32进行取模运算。你可以想象下，一致哈希算法，将整个哈希值空间组织成一个虚拟的圆环，也就是哈希环：</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/89/a15f17c6951dd1e195d5142f5087ef89.jpg?wh=1142*1149\" alt=\"\" title=\"图4\"></p><p>从图4中你可以看到，哈希环的空间是按顺时针方向组织的，圆环的正上方的点代表0，0点右侧的第一个点代表1，以此类推，2、3、4、5、6……直到2^32-1，也就是说0点左侧的第一个点代表2^32-1。</p><p>在一致哈希中，你可以通过执行哈希算法（为了演示方便，假设哈希算法函数为“c-hash()”），将节点映射到哈希环上，比如选择节点的主机名作为参数执行c-hash()，那么每个节点就能确定其在哈希环上的位置了：</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/f5/3cb21a553580afbc840b68d4c6b128f5.jpg?wh=1142*1096\" alt=\"\" title=\"图5\"></p><p>当需要对指定key的值进行读写的时候，你可以通过下面2步进行寻址：</p><ul>\n<li>首先，将key作为参数执行c-hash()计算哈希值，并确定此key在环上的位置；</li>\n<li>然后，从这个位置沿着哈希环顺时针“行走”，遇到的第一节点就是key对应的节点。</li>\n</ul><p>为了帮助你更好地理解如何通过一致哈希进行寻址，我举个例子。假设key-01、key-02、key-03 三个key，经过哈希算法c-hash()计算后，在哈希环上的位置就像图6的样子：</p><p><img src=\"https://static001.geekbang.org/resource/image/00/3a/00e85e7abdc1dc0488af348b76ba9c3a.jpg?wh=1142*1029\" alt=\"\" title=\"图6\"></p><p>那么根据一致哈希算法，key-01将寻址到节点A，key-02将寻址到节点B，key-03将寻址到节点C。讲到这儿，你可能会问：“老韩，那一致哈希是如何避免哈希算法的问题呢？”</p><p>别着急，接下来我分别以增加节点和移除节点为例，具体说一说一致哈希是如何避免上面的问题的。假设，现在有一个节点故障了（比如节点C）：</p><p><img src=\"https://static001.geekbang.org/resource/image/68/2e/68a09f7bc604040302fb2d3f102b422e.jpg?wh=1142*1016\" alt=\"\" title=\"图7\"></p><p>你可以看到，key-01和key-02不会受到影响，只有key-03的寻址被重定位到A。一般来说，在一致哈希算法中，如果某个节点宕机不可用了，那么受影响的数据仅仅是，会寻址到此节点和前一节点之间的数据。比如当节点C宕机了，受影响的数据是会寻址到节点B和节点C之间的数据（例如key-03），寻址到其他哈希环空间的数据（例如key-01），不会受到影响。</p><p>那如果此时集群不能满足业务的需求，需要扩容一个节点（也就是增加一个节点，比如D）：</p><p><img src=\"https://static001.geekbang.org/resource/image/91/d9/913e4709c226dae2bec0500b90d597d9.jpg?wh=1142*1027\" alt=\"\" title=\"图8\"></p><p>你可以看到，key-01、key-02不受影响，只有key-03的寻址被重定位到新节点D。一般而言，在一致哈希算法中，如果增加一个节点，受影响的数据仅仅是，会寻址到新节点和前一节点之间的数据，其它数据也不会受到影响。</p><p>让我们一起来看一个例子。使用一致哈希的话，对于1000万key的3节点KV存储，如果我们增加1个节点，变为4节点集群，只需要迁移24.3%的数据：</p><pre><code>$ go run ./consistent-hash.go  -keys 10000000 -nodes 3 -new-nodes 4\n24.301550% \n</code></pre><p><strong>你看，使用了一致哈希后，我们需要迁移的数据量仅为使用哈希算法时的三分之一，是不是大大提升效率了呢？</strong></p><p>总的来说，使用了一致哈希算法后，扩容或缩容的时候，都只需要重定位环空间中的一小部分数据。<strong>也就是说，一致哈希算法具有较好的容错性和可扩展性。</strong></p><p><strong>需要你注意的是，在哈希寻址中常出现这样的问题：</strong>客户端访问请求集中在少数的节点上，出现了有些机器高负载，有些机器低负载的情况，那么在一致哈希中，有什么办法能让数据访问分布的比较均匀呢？答案就是虚拟节点。</p><p>在一致哈希中，如果节点太少，容易因为节点分布不均匀造成数据访问的冷热不均，也就是说大多数访问请求都会集中少量几个节点上：</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/14/d044611092965188e28cd2daf8336814.jpg?wh=1142*1096\" alt=\"\" title=\"图9\"></p><p>你能从图中看到，虽然有3个节点，但访问请求主要集中的节点A上。<strong>那如何通过虚拟节点解决冷热不均的问题呢？</strong></p><p>其实，就是对每一个服务器节点计算多个哈希值，在每个计算结果位置上，都放置一个虚拟节点，并将虚拟节点映射到实际节点。比如，可以在主机名的后面增加编号，分别计算 “Node-A-01”“Node-A-02”“Node-B-01”“Node-B-02”“Node-C-01”“Node-C-02”的哈希值，于是形成6个虚拟节点：</p><p><img src=\"https://static001.geekbang.org/resource/image/75/d4/75527ae8011c8311dfb29c4b8ac005d4.jpg?wh=1142*1129\" alt=\"\" title=\"图10\"></p><p>你可以从图中看到，增加了节点后，节点在哈希环上的分布就相对均匀了。这时，如果有访问请求寻址到“Node-A-01”这个虚拟节点，将被重定位到节点A。你看，这样我们就解决了冷热不均的问题。</p><p>最后我想说的是，可能有同学已经发现了，当节点数越多的时候，使用哈希算法时，需要迁移的数据就越多，使用一致哈希时，需要迁移的数据就越少：</p><pre><code>$ go run ./hash.go  -keys 10000000 -nodes 3 -new-nodes 4\n74.999980%\n$ go run ./hash.go  -keys 10000000 -nodes 10 -new-nodes 11\n90.909000%\n\n$ go run ./consistent-hash.go  -keys 10000000 -nodes 3 -new-nodes 4\n24.301550%\n$ go run ./consistent-hash.go  -keys 10000000 -nodes 10 -new-nodes 11\n6.479330% \n</code></pre><p>从示例代码的输出中你可以看到，当我们向10个节点集群中增加节点时，<strong>如果使用了哈希算法，需要迁移高达90.91%的数据，使用一致哈希的话，只需要迁移6.48%的数据。</strong></p><p>我希望你能注意到这个规律，使用一致哈希实现哈希寻址时，可以通过增加节点数降低节点宕机对整个集群的影响，以及故障恢复时需要迁移的数据量。后续在需要时，你可以通过增加节点数来提升系统的容灾能力和故障恢复效率。</p><h2>内容小结</h2><p>以上就是本节课的全部内容了，本节课我主要带你了解了哈希算法的缺点、一致哈希的原理等内容。我希望你明确这样几个重点。</p><ul>\n<li>\n<p>一致哈希是一种特殊的哈希算法，在使用一致哈希算法后，节点增减变化时只影响到部分数据的路由寻址，也就是说我们只要迁移部分数据，就能实现集群的稳定了。</p>\n</li>\n<li>\n<p>当节点数较少时，可能会出现节点在哈希环上分布不均匀的情况。这样每个节点实际占据环上的区间大小不一，最终导致业务对节点的访问冷热不均。需要你注意的是，这个问题可以通过引入更多的虚拟节点来解决。</p>\n</li>\n</ul><p>最后我想说的是，一致哈希本质上是一种路由寻址算法，适合简单的路由寻址场景。比如在KV存储系统内部，它的特点是简单，不需要维护路由信息。</p><h2>课堂思考</h2><p>Raft集群具有容错能力，能容忍少数的节点故障，那么在多个Raft集群组成的KV系统中，如何设计一致哈希，实现当某个集群的领导者节点出现故障，并选举出新的领导者后，整个系统还能稳定运行呢？欢迎在留言区分享你的看法，与我一同讨论。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"09 | Raft算法（三）：如何解决成员变更的问题？","id":206274},"right":{"article_title":"11 | Gossip协议：流言蜚语，原来也可以实现一致性","id":208182}},"comments":[{"had_liked":false,"id":214327,"user_name":"指尖以东","can_delete":false,"product_type":"c1","uid":1092218,"ip_address":"","ucode":"1DEE134FE92FD0","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/7a/ae8c247d.jpg","comment_is_top":true,"comment_ctime":1588725237,"is_pvip":false,"replies":[{"id":"80899","content":"加一颗星：这个主要是利用算法的随机性，在实际使用中，增加更多的节点，就会均衡了。为了帮助大家更直观的理解，我新增了一个演示程序（https:&#47;&#47;github.com&#47;hanj4096&#47;hash），来演示虚拟节点的均衡性的。具体效果如下：<br> go run consistent-hash-vnode.go <br>normal mode: node0 79.597960% , node1 87.818782% , node2 132.613261%<br>vnode mode: node0 100.990099% , node1 98.679868% , node2 100.360036%<br><br>","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1589928040,"ip_address":"","comment_id":214327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720813931991e+18","product_id":100046101,"comment_content":"最近一直在看hash，老师可否讲讲虚拟节点的算法怎么做才能做到均衡，不然加的节点还是可能冷热不均衡的","like_count":11,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494026,"discussion_content":"加一颗星：这个主要是利用算法的随机性，在实际使用中，增加更多的节点，就会均衡了。为了帮助大家更直观的理解，我新增了一个演示程序（https://github.com/hanj4096/hash），来演示虚拟节点的均衡性的。具体效果如下：\n go run consistent-hash-vnode.go \nnormal mode: node0 79.597960% , node1 87.818782% , node2 132.613261%\nvnode mode: node0 100.990099% , node1 98.679868% , node2 100.360036%\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589928040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200377,"user_name":"Michael Tesla","can_delete":false,"product_type":"c1","uid":1033053,"ip_address":"","ucode":"C627F090293608","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/5d/ced9b5c2.jpg","comment_is_top":false,"comment_ctime":1585578348,"is_pvip":false,"replies":[{"id":"75991","content":"加一颗星:)，相比“值到节点”的一级映射，可以做两级映射，“值到集群，集群到领导者节点”，通过Raft的节点故障容错能力，来避免数据迁移。在实际系统中，如果不采用具有节点故障容错能力的共识算法，一般不会直接将数据写入到下一个节点，而是会有个备份服务器，当节点故障，切换到备节点时，为了实现强一致性，能读取到最新数据，不仅要做一致性对比和数据迁移，还是实现双读，比较复杂。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586192909,"ip_address":"","comment_id":200377,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70305055084","product_id":100046101,"comment_content":"老师，我觉得课后题的答案是：数据要同时写入当前集群和下一个集群。某个Raft集群挂掉后，原本路由到这个集群的请求，现在都到下一个Raft集群去了。只要下一个Raft集群保存了上一个集群的数据，即使某个集群挂了，整个系统还能正常提供服务。","like_count":17,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490011,"discussion_content":"加一颗星:)，相比“值到节点”的一级映射，可以做两级映射，“值到集群，集群到领导者节点”，通过Raft的节点故障容错能力，来避免数据迁移。在实际系统中，如果不采用具有节点故障容错能力的共识算法，一般不会直接将数据写入到下一个节点，而是会有个备份服务器，当节点故障，切换到备节点时，为了实现强一致性，能读取到最新数据，不仅要做一致性对比和数据迁移，还是实现双读，比较复杂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586192909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184402,"user_name":"Purson","can_delete":false,"product_type":"c1","uid":1446120,"ip_address":"","ucode":"5F0C1BB3C0C0A2","user_header":"https://static001.geekbang.org/account/avatar/00/16/10/e8/ec11e306.jpg","comment_is_top":false,"comment_ctime":1583308416,"is_pvip":false,"replies":[{"id":"71603","content":"https:&#47;&#47;github.com&#47;hanj4096&#47;hash<br>是的，虚拟节点，是需要映射到实际节点的，实际节点挂了，虚拟节点就没有意义了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583591691,"ip_address":"","comment_id":184402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70302785152","product_id":100046101,"comment_content":"老师，consistent-hash.go 和 hash.go 算法希望能分享一下。另外有个问题，虚拟节点还是映射了实际节点，比如一个节点有4个虚拟节点，如果1个实际节点挂了，是不是意味着另外3个相关的虚拟节点挂了，这样一致性hash算法还是会有很多不命中的情况。","like_count":17,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486003,"discussion_content":"https://github.com/hanj4096/hash\n是的，虚拟节点，是需要映射到实际节点的，实际节点挂了，虚拟节点就没有意义了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583591691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184278,"user_name":"星期一","can_delete":false,"product_type":"c1","uid":1125327,"ip_address":"","ucode":"2957D71C555E43","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/cf/bfb4d21f.jpg","comment_is_top":false,"comment_ctime":1583282545,"is_pvip":false,"replies":[{"id":"71425","content":"好，后续做个补充吧。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583388651,"ip_address":"","comment_id":184278,"utype":1}],"discussion_count":3,"race_medal":0,"score":"70302759281","product_id":100046101,"comment_content":"那TiDB 通过raft实现kv，region 来突破领导者单点问题，老师可以不可以串讲一下：TiDB、kafka、es 等常见分布式中间件  它们各自如何解决分布式的问题。","like_count":16,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485958,"discussion_content":"好，后续做个补充吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583388651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315510,"discussion_content":"想听串讲+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603283549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1211223,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","nickname":"QQ怪","note":"","ucode":"1A39B8433D9208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":242346,"discussion_content":"我也想知道，麻烦老师了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587476974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194281,"user_name":"Kvicii.Y","can_delete":false,"product_type":"c1","uid":1442588,"ip_address":"","ucode":"446BFA633569EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","comment_is_top":false,"comment_ctime":1585045432,"is_pvip":false,"replies":[{"id":"76003","content":"加一颗星:)，是的，不需要，领导者选举很快的，在客户端超时重试间隔内，是能恢复的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586198030,"ip_address":"","comment_id":194281,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31649816504","product_id":100046101,"comment_content":"4.当某一个节点故障了，该节点上的数据需要进行迁移吗？？感觉只是影响了瞬间的读写，raft选举会很快进行吧，恢复了之后就有正常了，选举期间的读写访问顺延到下一节点这个才需要具体实现吧？","like_count":7,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488803,"discussion_content":"加一颗星:)，是的，不需要，领导者选举很快的，在客户端超时重试间隔内，是能恢复的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586198030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184381,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1583303656,"is_pvip":false,"replies":[{"id":"71423","content":"需要自己开发工具，在迁移过渡状态时，还要考虑多读，数据写入到新节点，但读，需要同时读2个节点，返回最新的数据。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583388440,"ip_address":"","comment_id":184381,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31648074728","product_id":100046101,"comment_content":"老师请教下，在环中加入节点以及去掉节点，那存储的数据是如何迁移到其它节点上的？","like_count":7,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485995,"discussion_content":"需要自己开发工具，在迁移过渡状态时，还要考虑多读，数据写入到新节点，但读，需要同时读2个节点，返回最新的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583388440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315527,"avatar":"https://static001.geekbang.org/account/avatar/00/14/12/c7/a7a5df8b.jpg","nickname":"达子不一般","note":"","ucode":"A91C8DB45184F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399022,"discussion_content":"需要自己开发工具，在迁移过渡状态时，还要考虑多读，数据写入到新节点，但读，需要同时读2个节点，返回最新的数据。\n\n想了解下有哪个成熟产品是这么做的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632888323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184252,"user_name":"Sinclairs","can_delete":false,"product_type":"c1","uid":1019373,"ip_address":"","ucode":"0042C53C86E3A2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/ed/ea2cbf3a.jpg","comment_is_top":false,"comment_ctime":1583261633,"is_pvip":false,"replies":[{"id":"77562","content":"加一颗星:)，考虑到Raft集群本身就有节点故障容错能力，当发生领导者选举后，映射到新的领导者，就可以了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587150923,"ip_address":"","comment_id":184252,"utype":1}],"discussion_count":7,"race_medal":0,"score":"27353065409","product_id":100046101,"comment_content":"针对多个 Raft 集群, 需要有一个路由系统, 客户端通过这个路由系统来读写数据..<br>1. 客户端写数据时, 根据哈希算法会得到一个值, 这个值可以落到集群A的哈希分片上, 假设集群B是集群A顺时针哈希分片后的下一个分片.<br>客户端写入数据时, 要保证集群A和集群B同时写入成功<br>2. 客户端读取数据时, 路由系统若检测到集群A不可用, 则去访问集群B, 也能获得数据.<br>集群A和相邻的集群B同时发生故障的概率是非常小的, 这样就能保证系统的稳定运行.","like_count":6,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485948,"discussion_content":"加一颗星:)，考虑到Raft集群本身就有节点故障容错能力，当发生领导者选举后，映射到新的领导者，就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587150923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023101,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9c/7d/774e07f9.jpg","nickname":"study的程序员","note":"","ucode":"E5AE9037D24429","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562002,"discussion_content":"这么说读一个不存在的key，都要读两次了。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649762314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1466447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","nickname":"Daiver","note":"","ucode":"9B1A03AFBC79BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197404,"discussion_content":"Raft集群本身是高可用的，只是性能上存在单机并发限制，我觉得不需要考虑故障问题吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583419506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195592,"discussion_content":"把集群想像成单个节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583289567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1019373,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/ed/ea2cbf3a.jpg","nickname":"Sinclairs","note":"","ucode":"0042C53C86E3A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195610,"discussion_content":"我也是这样想的😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583291001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":195592,"ip_address":""},"score":195610,"extra":""}]},{"author":{"id":1318113,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1c/e1/c99d1473.jpg","nickname":"longyi","note":"","ucode":"204CC8D3E98AAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195409,"discussion_content":"没看懂。思考题里的多个raft集群指的是multi—raft吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583280322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1019373,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/ed/ea2cbf3a.jpg","nickname":"Sinclairs","note":"","ucode":"0042C53C86E3A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1318113,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1c/e1/c99d1473.jpg","nickname":"longyi","note":"","ucode":"204CC8D3E98AAC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195611,"discussion_content":"是这样理解的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583291040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":195409,"ip_address":""},"score":195611,"extra":""}]}]},{"had_liked":false,"id":187146,"user_name":" 尿布","can_delete":false,"product_type":"c1","uid":1476323,"ip_address":"","ucode":"D1C8BDA7540962","user_header":"https://static001.geekbang.org/account/avatar/00/16/86/e3/a31f6869.jpg","comment_is_top":false,"comment_ctime":1584025817,"is_pvip":false,"replies":[{"id":"75870","content":"加一颗星:)，引入虚拟节点，比如，将包含主机名和虚拟节点编号的字符串，作为参数，来计算哈希值。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586103983,"ip_address":"","comment_id":187146,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23058862297","product_id":100046101,"comment_content":"为什么一个节点可以算出多个hash值?","like_count":6,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487007,"discussion_content":"加一颗星:)，引入虚拟节点，比如，将包含主机名和虚拟节点编号的字符串，作为参数，来计算哈希值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586103983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213820,"user_name":"竹马彦四郎的好朋友影法師","can_delete":false,"product_type":"c1","uid":1475385,"ip_address":"","ucode":"A9555AEFF90CDF","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","comment_is_top":false,"comment_ctime":1588568374,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18768437558","product_id":100046101,"comment_content":"这一节感觉还是比较轻松的~","like_count":4},{"had_liked":false,"id":208373,"user_name":"Theodore","can_delete":false,"product_type":"c1","uid":1055049,"ip_address":"","ucode":"0735C2A64295FC","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/49/9452b2fd.jpg","comment_is_top":false,"comment_ctime":1587346429,"is_pvip":false,"replies":[{"id":"77862","content":"加一颗星:)，扩容或缩容时，一般是通过运维工具来迁移的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587356989,"ip_address":"","comment_id":208373,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18767215613","product_id":100046101,"comment_content":"解开了我多年的疑惑。我说一致性hash怎么解决迁移带来的问题，还是靠运维啊","like_count":4,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492440,"discussion_content":"加一颗星:)，扩容或缩容时，一般是通过运维工具来迁移的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587356989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184649,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1583377485,"is_pvip":false,"replies":[{"id":"71421","content":"数据迁移，实际操作起来，还是有复杂度，需要流程化。其实，领导者选举是很快的，一般，写失败后，重试就可以了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583387925,"ip_address":"","comment_id":184649,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18763246669","product_id":100046101,"comment_content":"当其中一个 Raft 集群领导者出现故障，读的时候还是可以从跟随者读，写的时候可以暂时先写到哈希环上的下一个集群中，等到重新选举领导者完成，再把数据捞回来。这么设计可以吗？","like_count":4,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486080,"discussion_content":"数据迁移，实际操作起来，还是有复杂度，需要流程化。其实，领导者选举是很快的，一般，写失败后，重试就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583387925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1475385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","nickname":"竹马彦四郎的好朋友影法師","note":"","ucode":"A9555AEFF90CDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257381,"discussion_content":"至于能不能&#34;读的时候还是可以从跟随者读&#34;, 要看你系统对一致性的设计是怎么样的了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588563998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194266,"user_name":"Kvicii.Y","can_delete":false,"product_type":"c1","uid":1442588,"ip_address":"","ucode":"446BFA633569EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","comment_is_top":false,"comment_ctime":1585044262,"is_pvip":false,"replies":[{"id":"76006","content":"加一颗星:)，问题1，是的，还需要将虚拟节点映射到实际节点；问题2，也可以这么理解的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586199825,"ip_address":"","comment_id":194266,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14469946150","product_id":100046101,"comment_content":"老师，<br>1.虚拟节点是要根据hash规则再做一次hash类似这样实现吗？<br>2.在这个例子中，节点A、B、C是不是就可以理解为三个Raft集群，每个集群上都分别有Leader，各自进行集群的维护操作呢？","like_count":3,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488796,"discussion_content":"加一颗星:)，问题1，是的，还需要将虚拟节点映射到实际节点；问题2，也可以这么理解的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586199825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184542,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1583334665,"is_pvip":false,"replies":[{"id":"71422","content":"Raft集群本身有容错能力，可以和一致哈希结合着使用，尽量避免数据迁移，在现实中，数据迁移还是有复杂度，除了要流程化，还避免引起节点CPU的高负载。大系统、容错要求高，是需要的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583388211,"ip_address":"","comment_id":184542,"utype":1}],"discussion_count":2,"race_medal":1,"score":"14468236553","product_id":100046101,"comment_content":"将数据按照某种方式分片然后按照一致性hash算法存放到不同的raft集群中，这样当某个集群出问题时，这部分分区数据会迁移到临近raft集群，保障了系统的稳定运行。理论上可行，可是实际中好像没有这样做的，管理多个raft集群感觉是个麻烦的事情。","like_count":3,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486049,"discussion_content":"Raft集群本身有容错能力，可以和一致哈希结合着使用，尽量避免数据迁移，在现实中，数据迁移还是有复杂度，除了要流程化，还避免引起节点CPU的高负载。大系统、容错要求高，是需要的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583388211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589989,"avatar":"https://static001.geekbang.org/account/avatar/00/18/42/e5/61cfe267.jpg","nickname":"Eclipse","note":"","ucode":"E7EB0BA99FA644","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":198221,"discussion_content":"redis集群应该就是这样搞的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583489654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194277,"user_name":"Kvicii.Y","can_delete":false,"product_type":"c1","uid":1442588,"ip_address":"","ucode":"446BFA633569EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","comment_is_top":false,"comment_ctime":1585044921,"is_pvip":false,"replies":[{"id":"76004","content":"加一颗星:)，前半句，是的，后半句，对key执行hash计算，得出key对应的索引值，然后根据key的索引值，找到key对应节点。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586198431,"ip_address":"","comment_id":194277,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10174979513","product_id":100046101,"comment_content":"3.对2^32取模的过程是不是相当于计算hash环的索引，实际对key进行hash计算找位置时才是找真正的索引？","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488802,"discussion_content":"加一颗星:)，前半句，是的，后半句，对key执行hash计算，得出key对应的索引值，然后根据key的索引值，找到key对应节点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586198431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184370,"user_name":"高志强","can_delete":false,"product_type":"c1","uid":1276563,"ip_address":"","ucode":"68737002043752","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","comment_is_top":false,"comment_ctime":1583300894,"is_pvip":false,"replies":[{"id":"71604","content":"https:&#47;&#47;github.com&#47;hanj4096&#47;hash","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583591700,"ip_address":"","comment_id":184370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173235486","product_id":100046101,"comment_content":"老师，consistent-hash.go 和 hash.go 算法在github上有代码么，想看看","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485989,"discussion_content":"https://github.com/hanj4096/hash","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583591700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300052,"user_name":"Ricky Fung","can_delete":false,"product_type":"c1","uid":1051363,"ip_address":"","ucode":"7AEA1F8EC4A088","user_header":"https://static001.geekbang.org/account/avatar/00/10/0a/e3/9637bfdb.jpg","comment_is_top":false,"comment_ctime":1624965437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5919932733","product_id":100046101,"comment_content":"课后问题 可以维护二级映射，hash(key) -&gt; 集群，集群 -&gt; leader节点IP，集群对应的leader节点IP可以统一存储到某个地方（例如redis）便于查询。","like_count":1},{"had_liked":false,"id":207402,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1587083239,"is_pvip":false,"replies":[{"id":"77557","content":"加一颗星:)，如果数据和节点的映射关系变了，那么数据就需要搬迁，比如，你可以这样推导来感性理解下，1~10，10个数作为key，分别按照3和4来取余，余数为对应的节点，然后统计下，有多少key对应节点的映射关系发生了变化，然后再增加key的数量，比如100，再来统计下。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587147417,"ip_address":"","comment_id":207402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882050535","product_id":100046101,"comment_content":"老师我对一致hash算法搬迁数据量有疑问，比如文中三个节点变成四个节点假设数据是均衡的三个节点存数据为总得33.3%，调整数据大概只要调整第三个节点的一半即16%这个比您文中的要少，怎么回事，是不是hash不均衡造成的偏差那您又如何知道该如何均衡的那","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492110,"discussion_content":"加一颗星:)，如果数据和节点的映射关系变了，那么数据就需要搬迁，比如，你可以这样推导来感性理解下，1~10，10个数作为key，分别按照3和4来取余，余数为对应的节点，然后统计下，有多少key对应节点的映射关系发生了变化，然后再增加key的数量，比如100，再来统计下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587147417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205614,"user_name":"winfield","can_delete":false,"product_type":"c1","uid":1216930,"ip_address":"","ucode":"6A5E1B449328C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIQMh5jMlvAibnTgiaVXmsb333JBjpdvLVcptc232zQey5wkBOEPiauepQpv8UlRcOFqnTyhEQiadaHMA/132","comment_is_top":false,"comment_ctime":1586685634,"is_pvip":false,"replies":[{"id":"77074","content":"加一颗星:)，是的，最终是需要寻址到实际节点上的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586851966,"ip_address":"","comment_id":205614,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5881652930","product_id":100046101,"comment_content":"有个疑问，一致性哈希中引入虚拟节点能解决冷热不均的问题么，虚拟节点最后不还是映射到了实际节点上？请老师帮忙解答下，谢谢！","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491528,"discussion_content":"加一颗星:)，是的，最终是需要寻址到实际节点上的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586851966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1716827,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/32/5b/d0c7e813.jpg","nickname":"luo","note":"","ucode":"1A1DA8EB916ECF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549426,"discussion_content":"做了两层hash，打的相对来说很均匀了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643971218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201730,"user_name":"吟游雪人","can_delete":false,"product_type":"c1","uid":1063805,"ip_address":"","ucode":"C432C9577B420C","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/7d/6376926b.jpg","comment_is_top":false,"comment_ctime":1585827035,"is_pvip":false,"replies":[{"id":"75418","content":"多个集群，不是同一个集群多个领导者节点，是指多个独立的集群。比如，你配置了2个基于Raft的KV存储集群，集群1，存放的是来自业务1的数据；集群2，存放的是来自业务2的数据。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585837673,"ip_address":"","comment_id":201730,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5880794331","product_id":100046101,"comment_content":"多集群是多领导者节点么？多领导者不就脑裂了么？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490405,"discussion_content":"多个集群，不是同一个集群多个领导者节点，是指多个独立的集群。比如，你配置了2个基于Raft的KV存储集群，集群1，存放的是来自业务1的数据；集群2，存放的是来自业务2的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585837673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1985184,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GjFJHox9V8qh53zIrExw4NK0KG9WBvRH8RJVjm9jp78RSpWfa2xzyq11dTNItpK2icQniaK4bibTv6ksRGiasjTvMg/132","nickname":"Adong0678","note":"","ucode":"845EECDFDE6233","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299952,"discussion_content":"对于作者的回复，集群1业务1，集群2业务2？那么，这两个集群有什么关系？业务1的写瓶颈如何解决？业务2的写瓶颈如何解决？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597887584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1985184,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GjFJHox9V8qh53zIrExw4NK0KG9WBvRH8RJVjm9jp78RSpWfa2xzyq11dTNItpK2icQniaK4bibTv6ksRGiasjTvMg/132","nickname":"Adong0678","note":"","ucode":"845EECDFDE6233","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":335262,"discussion_content":"集群1业务1，集群2肯定也跑的是业务1啊，用一致性哈希本来就是分摊集群1的负载用的，这样为的是突破raft单主的性能问题，谁搞2个跑不同的业务的集群然后用一致性哈希连一起啊....","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608131751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299952,"ip_address":""},"score":335262,"extra":""},{"author":{"id":1519086,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRK5v3IkvSfjicKNKlRLE2nTQUowhMvQkwWWWUSESat8EBbcPvMk4aAjZHGcsE5DCibES9WicHcC9Qw/132","nickname":"充值一万","note":"","ucode":"1B4B3AEFA9C8C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365419,"discussion_content":"大佬，请教一个问题，文中的节点（集群）它们的数据都是一样的（无故障情况下），3节点增加1个节点变成4节点，为什么只需要迁移75%的数据呢？新节点不是要复制所有的数据吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617798105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335262,"ip_address":""},"score":365419,"extra":""}]}]},{"had_liked":false,"id":200893,"user_name":"孙成子","can_delete":false,"product_type":"c1","uid":1317819,"ip_address":"","ucode":"7DF58E9202FC60","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/bb/4a749b6c.jpg","comment_is_top":false,"comment_ctime":1585669005,"is_pvip":false,"replies":[{"id":"75989","content":"加一颗星:)，值少。均匀是相对的，值越多越均匀，所以，当节点数少时，需要引入虚拟节点，也就是更多的值。可以写个程序，实际运行，感性的体验下:)。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586191565,"ip_address":"","comment_id":200893,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880636301","product_id":100046101,"comment_content":"一致性HASH算法，为什么会出现不均匀的情况？  hash的目的就是打散数据。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490167,"discussion_content":"加一颗星:)，值少。均匀是相对的，值越多越均匀，所以，当节点数少时，需要引入虚拟节点，也就是更多的值。可以写个程序，实际运行，感性的体验下:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586191565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195075,"user_name":"gokunn","can_delete":false,"product_type":"c1","uid":1928778,"ip_address":"","ucode":"6DACB000A47E8E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6e/4a/7af58dc7.jpg","comment_is_top":false,"comment_ctime":1585133392,"is_pvip":false,"replies":[{"id":"76000","content":"加一颗星:)，需要实际问题实际分析，来妥协和优化，比如，可以升级服务器；再比如，可以在集群前面，加个内存缓存，作为接入层。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586197286,"ip_address":"","comment_id":195075,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5880100688","product_id":100046101,"comment_content":"老师，请问一下，一致性hash下的raft集群还是会有单点问题，如果某个热点key分到一个raft集群里面，这个key访问非常频繁，而这个raft集群性能不足怎么办","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488966,"discussion_content":"加一颗星:)，需要实际问题实际分析，来妥协和优化，比如，可以升级服务器；再比如，可以在集群前面，加个内存缓存，作为接入层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586197286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1716827,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/32/5b/d0c7e813.jpg","nickname":"luo","note":"","ucode":"1A1DA8EB916ECF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549427,"discussion_content":"在tikv里是把这个key所在region进行切分来打算热点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643971330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193703,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1584950753,"is_pvip":false,"replies":[{"id":"75563","content":"加一颗星:)，简洁和复杂是相对的，大系统都是复杂的系统，这时，除了技术，我们还需要考虑可运营性。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585936087,"ip_address":"","comment_id":193703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879918049","product_id":100046101,"comment_content":"写的限制已经突破了，但是我们的系统也越来越复杂了。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488628,"discussion_content":"加一颗星:)，简洁和复杂是相对的，大系统都是复杂的系统，这时，除了技术，我们还需要考虑可运营性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585936087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186810,"user_name":"波波","can_delete":false,"product_type":"c1","uid":1236305,"ip_address":"","ucode":"847168EE0E7D44","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/51/a7e82963.jpg","comment_is_top":false,"comment_ctime":1583932436,"is_pvip":false,"replies":[{"id":"76174","content":"加一颗星:)，由你决定的，一致性哈希算法，本质上是路由寻址。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586280614,"ip_address":"","comment_id":186810,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878899732","product_id":100046101,"comment_content":"老师，如果环中的某个节点挂了，数据迁移到另一个节点上，那如果这个故障的节点恢复回来了，按照一致性哈希算法，读取迁移后的数据是从恢复回来的节点读还是从迁移后的节点读啊？<br>","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486881,"discussion_content":"加一颗星:)，由你决定的，一致性哈希算法，本质上是路由寻址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586280614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184339,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1583293230,"is_pvip":false,"replies":[{"id":"77560","content":"加一颗星:)，哈希槽的作用与一致性哈希是类似的。Raft集群本身有节点故障能力，可以和一致哈希结合着使用，尽量避免数据迁移。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587150592,"ip_address":"","comment_id":184339,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878260526","product_id":100046101,"comment_content":"老师，你说的raft集群是每个节点一主多备吧。然后每个主节点和备节点之间通过选举产生主节点吧。<br>可以采用redis中哈希槽的概念。<br>首先每个raft节点都会缓存（动态更新）其他节点的通信数据，用于集群内相互通信。<br>当一个节点挂掉了，可以将自己对应的哈希槽数据迁移到其他节点。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485977,"discussion_content":"加一颗星:)，哈希槽的作用与一致性哈希是类似的。Raft集群本身有节点故障能力，可以和一致哈希结合着使用，尽量避免数据迁移。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587150592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184306,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1583286620,"is_pvip":false,"replies":[{"id":"77561","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587150654,"ip_address":"","comment_id":184306,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878253916","product_id":100046101,"comment_content":"基于虚拟节点的机制，可以设计成每个节点是自身负责这部分虚拟节点的leader，左右相邻的两个节点为follower。每个leader down掉了，左右两个follower选举出leader，接管之前的节点负责的虚拟节点，恰好自身也包含了这部分数据。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485968,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587150654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184284,"user_name":"rm -rf&#47;*","can_delete":false,"product_type":"c1","uid":1388034,"ip_address":"","ucode":"D5A997682B6F7E","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/02/07ae4c9e.jpg","comment_is_top":false,"comment_ctime":1583283390,"is_pvip":false,"replies":[{"id":"71424","content":"加一颗星:)，动态映射到领导者。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583388584,"ip_address":"","comment_id":184284,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878250686","product_id":100046101,"comment_content":"老师：<br>    是不是就是  一个raft中的领导者做一致性hash的一个节点？？？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485961,"discussion_content":"加一颗星:)，动态映射到领导者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583388584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184237,"user_name":"盘胧","can_delete":false,"product_type":"c1","uid":1650748,"ip_address":"","ucode":"5386CC4C92ECC2","user_header":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","comment_is_top":false,"comment_ctime":1583252417,"is_pvip":false,"replies":[{"id":"76365","content":"加一颗星:)，资源异构，一般需要使用不同的一致性哈希进行寻址。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586376100,"ip_address":"","comment_id":184237,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878219713","product_id":100046101,"comment_content":"这三个集群性能差不多，就分散。总觉得少了点啥？如果资源异构的场景呢？<br>总结下，<br>1.一致性哈希适合同类型的节点集群，可以支持弹性伸缩。<br>2.哈希算法适合比较稳定的场景，规模不容易改变的。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485938,"discussion_content":"加一颗星:)，资源异构，一般需要使用不同的一致性哈希进行寻址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586376100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337630,"user_name":"白开水","can_delete":false,"product_type":"c1","uid":1026365,"ip_address":"","ucode":"F5CB6CCB9E1DC8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/3d/48aaac69.jpg","comment_is_top":false,"comment_ctime":1646923636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646923636","product_id":100046101,"comment_content":"老师请问一下：一致性hash中，实际a,b,c怎么决定在环上的位置呢？然后如果环上刚开始有abc，新来了一个d,那么如何决定这个d在环上的位置呢？","like_count":0},{"had_liked":false,"id":326144,"user_name":"黑曼巴ye","can_delete":false,"product_type":"c1","uid":1180877,"ip_address":"","ucode":"3ACFD4B79E46A1","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/cd/3f73dead.jpg","comment_is_top":false,"comment_ctime":1639393119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639393119","product_id":100046101,"comment_content":"是不是一致性hash只有增加少数节点才比普通hash算法有优势，假设将节点数增加2倍，那需要迁移的数据量和普通hash应该是一样的都是50%","like_count":0},{"had_liked":false,"id":288017,"user_name":"imsorry","can_delete":false,"product_type":"c1","uid":1316930,"ip_address":"","ucode":"7686DACC7B3356","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqSpE7I3EqGFuvHCGFa0YTOpPW9lWSm0qmcheJ4KwkLHUK5X2O13RBDPtEoYQe0WMialuSQAwQIichg/132","comment_is_top":false,"comment_ctime":1618276439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618276439","product_id":100046101,"comment_content":"有一个地方没太明白，引入虚拟节点实例请求还是落在真实节点上，如何解决个别节点负载过高的问题呢？","like_count":0},{"had_liked":false,"id":287150,"user_name":"充值一万","can_delete":false,"product_type":"c1","uid":1519086,"ip_address":"","ucode":"1B4B3AEFA9C8C2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRK5v3IkvSfjicKNKlRLE2nTQUowhMvQkwWWWUSESat8EBbcPvMk4aAjZHGcsE5DCibES9WicHcC9Qw/132","comment_is_top":false,"comment_ctime":1617797311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617797311","product_id":100046101,"comment_content":"恕我愚钝。数据迁移是指哪些数据呢？如果是K-V数据，每个节点上的数据都是一样的（无故障情况下）；3节点增加1个新节点变成4节点，新节点不是要复制所有的K-V数据吗，那不就是复制100%的数据了？为什么是75%呢？","like_count":0},{"had_liked":false,"id":258863,"user_name":"灰色的世界","can_delete":false,"product_type":"c1","uid":1888239,"ip_address":"","ucode":"BA4812D61E0F27","user_header":"https://static001.geekbang.org/account/avatar/00/1c/cf/ef/2e545600.jpg","comment_is_top":false,"comment_ctime":1604570152,"is_pvip":false,"replies":[{"id":"95858","content":"加一颗星:)，跨网络中心，一般而言最直接的影响是时延（网络抖动）和数据安全性，比如需要将心跳时间等时间值调大的，再比如需要考虑数据通讯加密。但在实际场景中，一般会将集群放在一个网络区域，不会跨区域，不同网络区域的集群通过“数据通道”进行数据同步。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606441703,"ip_address":"","comment_id":258863,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604570152","product_id":100046101,"comment_content":"老师，跨网络中心的raft的集群设计有哪些关键点呢","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508770,"discussion_content":"加一颗星:)，跨网络中心，一般而言最直接的影响是时延（网络抖动）和数据安全性，比如需要将心跳时间等时间值调大的，再比如需要考虑数据通讯加密。但在实际场景中，一般会将集群放在一个网络区域，不会跨区域，不同网络区域的集群通过“数据通道”进行数据同步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606441703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252355,"user_name":"ezekiel","can_delete":false,"product_type":"c1","uid":1158795,"ip_address":"","ucode":"AB4AB6FA8612D8","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/8b/43ce01ca.jpg","comment_is_top":false,"comment_ctime":1602250136,"is_pvip":false,"replies":[{"id":"92410","content":"加一颗星:)，“节点名称进行hash”，是个举例，不是“一定”；是的，hash取值需要个参数，“节点名称”就是这个参数。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1602520710,"ip_address":"","comment_id":252355,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602250136","product_id":100046101,"comment_content":"您好<br>为什么一定要为节点名称进行Hash？如果不进行Hash运算，直接在hash环上取值，在映射到节点上。节点不就可以均匀分布了吗？","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506756,"discussion_content":"加一颗星:)，“节点名称进行hash”，是个举例，不是“一定”；是的，hash取值需要个参数，“节点名称”就是这个参数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602520710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241693,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1597392256,"is_pvip":false,"replies":[{"id":"95952","content":"加一颗星:)，可以做两层“寻址”，先通过一致性哈希寻址到集群，然后再找到“领导者”。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606574390,"ip_address":"","comment_id":241693,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597392256","product_id":100046101,"comment_content":"这个影响并不在于领导者的选举问题啊,而是数据能否再次获得问题,一个领导者节点挂了,能不能再拿到这个领导者在整个一致性hash系统的数据,如果能够拿到,那就相当于一次细微的迁移,并不会对整个系统的稳定运行产生什么影响,不能拿到,那才是真正的出问题了","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503817,"discussion_content":"加一颗星:)，可以做两层“寻址”，先通过一致性哈希寻址到集群，然后再找到“领导者”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606574390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228460,"user_name":"sundy","can_delete":false,"product_type":"c1","uid":1724856,"ip_address":"","ucode":"581D4B976524B6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/51/b8/f76b15a1.jpg","comment_is_top":false,"comment_ctime":1592702437,"is_pvip":false,"replies":[{"id":"87650","content":"加一颗星:)，因为符号相同时，取模和取余是一样的，加上有些语言（比如C）使用%表示取余，有些语言（比如python）使用%表示取模，所以，在这里，对取模和取余，就没有做区分，使用“取模”来指代。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595757141,"ip_address":"","comment_id":228460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592702437","product_id":100046101,"comment_content":"老师 明明是取余%操作 为什么说是取模呢？","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499047,"discussion_content":"加一颗星:)，因为符号相同时，取模和取余是一样的，加上有些语言（比如C）使用%表示取余，有些语言（比如python）使用%表示取模，所以，在这里，对取模和取余，就没有做区分，使用“取模”来指代。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595757141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190179,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1584610752,"is_pvip":false,"replies":[{"id":"76015","content":"出于演示，做了个Golang版的:)。这个代码比较简洁，其实，如果时间允许，可以抽点时间，使用自己擅长的语言实现下，也加深下理解:)。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586202994,"ip_address":"","comment_id":190179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584610752","product_id":100046101,"comment_content":"有java版本的一致性hash代码？go看起来看不大明白","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487907,"discussion_content":"出于演示，做了个Golang版的:)。这个代码比较简洁，其实，如果时间允许，可以抽点时间，使用自己擅长的语言实现下，也加深下理解:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586202994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187688,"user_name":"大叮当","can_delete":false,"product_type":"c1","uid":1181578,"ip_address":"","ucode":"418EEFBD0C5A85","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/8a/4bef6202.jpg","comment_is_top":false,"comment_ctime":1584193045,"is_pvip":false,"replies":[{"id":"72443","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1584235963,"ip_address":"","comment_id":187688,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584193045","product_id":100046101,"comment_content":"谢谢谢谢，真太谢谢了，讲得很形象，豁然开朗","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487201,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584235963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186440,"user_name":"Fs","can_delete":false,"product_type":"c1","uid":1083184,"ip_address":"","ucode":"0AD0EFB5544B9A","user_header":"https://static001.geekbang.org/account/avatar/00/10/87/30/4626c8c0.jpg","comment_is_top":false,"comment_ctime":1583845516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583845516","product_id":100046101,"comment_content":"cassandra就是这么干的","like_count":0},{"had_liked":false,"id":184901,"user_name":"右耳听海","can_delete":false,"product_type":"c1","uid":1022011,"ip_address":"","ucode":"E0B9F1083F4F98","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/3b/5af90c80.jpg","comment_is_top":false,"comment_ctime":1583428249,"is_pvip":false,"replies":[{"id":"76197","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586287078,"ip_address":"","comment_id":184901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583428249","product_id":100046101,"comment_content":"solrcloud就是用的分片加集群","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486164,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586287078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184580,"user_name":"HuaMax","can_delete":false,"product_type":"c1","uid":1118488,"ip_address":"","ucode":"2E78DE1AF098AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","comment_is_top":false,"comment_ctime":1583365016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583365016","product_id":100046101,"comment_content":"为了保证高可用，数据不能只落到一个节点上，而是往后N个节点。如果是虚拟节点，则算法上要保证连续的N个虚拟节点不属于相同的真实节点，或者计算往后N-1个与第1个虚拟节点不属于同一个真实节点的虚拟节点","like_count":0},{"had_liked":false,"id":184512,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1583331826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583331826","product_id":100046101,"comment_content":"受益匪浅，学习了。","like_count":0},{"had_liked":false,"id":184260,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1583279345,"is_pvip":false,"replies":[{"id":"71427","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583388695,"ip_address":"","comment_id":184260,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1583279345","product_id":100046101,"comment_content":"今日得到<br>哈希算法在增删节点时会存在大量移动数据的问题。所以引入了一致性哈希算法<br>一致性哈希算法能达到的效果是在增删节点时，需要迁移的数据比较小。但也有不足就是节点比较少时，会出现节点承载的数据不同即出现冷热数据，解决办法就是增加虚拟节点(虚拟节点会映射到真实节点)","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485952,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583388695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317819,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1b/bb/4a749b6c.jpg","nickname":"孙成子","note":"","ucode":"7DF58E9202FC60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218662,"discussion_content":"虚拟节点还是映射到真实节点， 我理解还是相当于 热点在一个节点上？ 然并卵？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585668927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184236,"user_name":"盘胧","can_delete":false,"product_type":"c1","uid":1650748,"ip_address":"","ucode":"5386CC4C92ECC2","user_header":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","comment_is_top":false,"comment_ctime":1583251910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583251910","product_id":100046101,"comment_content":"memcached，带虚拟机节点","like_count":0}]}