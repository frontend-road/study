{"id":131887,"title":"14 | 编译器和解释器：V8是如何执行一段JavaScript代码的？","content":"<p>前面我们已经花了很多篇幅来介绍JavaScript是如何工作的，了解这些内容能帮助你从底层理解JavaScript的工作机制，从而能帮助你更好地理解和应用JavaScript。</p><p>今天这篇文章我们就继续“向下”分析，站在JavaScript引擎V8的视角，来分析JavaScript代码是如何被执行的。</p><p>前端工具和框架的自身更新速度非常快，而且还不断有新的出现。要想追赶上前端工具和框架的更新速度，你就需要抓住那些本质的知识，然后才能更加轻松地理解这些上层应用。比如我们接下来要介绍的V8执行机制，能帮助你从底层了解JavaScript，也能帮助你深入理解语言转换器Babel、语法检查工具ESLint、前端框架Vue和React的一些底层实现机制。因此，了解V8的编译流程能让你对语言以及相关工具有更加充分的认识。</p><p>要深入理解V8的工作原理，你需要搞清楚一些概念和原理，比如接下来我们要详细讲解的<strong>编译器（Compiler）、解释器（Interpreter）、抽象语法树（AST）、字节码（Bytecode）、即时编译器（JIT）</strong>等概念，都是你需要重点关注的。</p><h2>编译器和解释器</h2><p>之所以存在编译器和解释器，是因为机器不能直接理解我们所写的代码，所以在执行程序之前，需要将我们所写的代码“翻译”成机器能读懂的机器语言。按语言的执行流程，可以把语言划分为编译型语言和解释型语言。</p><!-- [[[read_end]]] --><p><strong>编译型语言在程序执行之前，需要经过编译器的编译过程，并且编译之后会直接保留机器能读懂的二进制文件，这样每次运行程序时，都可以直接运行该二进制文件，而不需要再次重新编译了</strong>。比如C/C++、GO等都是编译型语言。</p><p><strong>而由解释型语言编写的程序，在每次运行时都需要通过解释器对程序进行动态解释和执行</strong>。比如Python、JavaScript等都属于解释型语言。</p><p>那编译器和解释器是如何“翻译”代码的呢？具体流程你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/4e/81/4e196603ecb78188e99e963e251b9781.png?wh=1142*510\" alt=\"\"></p><center><span class=\"reference\">编译器和解释器“翻译”代码</span></center><p>从图中你可以看出这二者的执行流程，大致可阐述为如下：</p><ol>\n<li>在编译型语言的编译过程中，编译器首先会依次对源代码进行词法分析、语法分析，生成抽象语法树（AST），然后是优化代码，最后再生成处理器能够理解的机器码。如果编译成功，将会生成一个可执行的文件。但如果编译过程发生了语法或者其他的错误，那么编译器就会抛出异常，最后的二进制文件也不会生成成功。</li>\n<li>在解释型语言的解释过程中，同样解释器也会对源代码进行词法分析、语法分析，并生成抽象语法树（AST），不过它会再基于抽象语法树生成字节码，最后再根据字节码来执行程序、输出结果。</li>\n</ol><h2>V8是如何执行一段JavaScript代码的</h2><p>通过上面的介绍，相信你已经了解编译器和解释器了。那接下来，我们就重点分析下V8是如何执行一段JavaScript代码的。你可以先来“一览全局”，参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/1a/ae/1af282bdc4036096c03074da53eb84ae.png?wh=1142*522\" alt=\"\"></p><center><span class=\"reference\">V8执行一段代码流程图</span></center><p>从图中可以清楚地看到，V8在执行过程中既有<strong>解释器Ignition</strong>，又有<strong>编译器TurboFan</strong>，那么它们是如何配合去执行一段JavaScript代码的呢? 下面我们就按照上图来一一分解其执行流程。</p><h3>1. 生成抽象语法树（AST）和执行上下文</h3><p>将源代码转换为<strong>抽象语法树</strong>，并生成<strong>执行上下文</strong>，而执行上下文我们在前面的文章中已经介绍过很多了，主要是代码在执行过程中的环境信息。</p><p>那么下面我们就得重点讲解下抽象语法树（下面表述中就直接用它的简称AST了），看看什么是AST以及AST的生成过程是怎样的。</p><p>高级语言是开发者可以理解的语言，但是让编译器或者解释器来理解就非常困难了。对于编译器或者解释器来说，它们可以理解的就是AST了。所以无论你使用的是解释型语言还是编译型语言，在编译过程中，它们都会生成一个AST。这和渲染引擎将HTML格式文件转换为计算机可以理解的DOM树的情况类似。</p><p>你可以结合下面这段代码来直观地感受下什么是AST：</p><pre><code>var myName = &quot;极客时间&quot;\nfunction foo(){\n  return 23;\n}\nmyName = &quot;geektime&quot;\nfoo()\n</code></pre><p>这段代码经过<a href=\"http://resources.jointjs.com/demos/javascript-ast\">javascript-ast</a>站点处理后，生成的AST结构如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/73/36/7320526ef14d974be8393effcf25b436.png?wh=1142*1644\" alt=\"\"></p><center><span class=\"reference\">抽象语法树（AST）结构</span></center><p>从图中可以看出，AST的结构和代码的结构非常相似，其实你也可以把AST看成代码的结构化的表示，编译器或者解释器后续的工作都需要依赖于AST，而不是源代码。</p><p>AST是非常重要的一种数据结构，在很多项目中有着广泛的应用。其中最著名的一个项目是Babel。Babel是一个被广泛使用的代码转码器，可以将ES6代码转为ES5代码，这意味着你可以现在就用ES6编写程序，而不用担心现有环境是否支持ES6。Babel的工作原理就是先将ES6源码转换为AST，然后再将ES6语法的AST转换为ES5语法的AST，最后利用ES5的AST生成JavaScript源代码。</p><p>除了Babel外，还有ESLint也使用AST。ESLint是一个用来检查JavaScript编写规范的插件，其检测流程也是需要将源码转换为AST，然后再利用AST来检查代码规范化的问题。</p><p>现在你知道了什么是AST以及它的一些应用，那接下来我们再来看下AST是如何生成的。通常，生成AST需要经过两个阶段。</p><p><strong>第一阶段是分词（tokenize），又称为词法分析</strong>，其作用是将一行行的源码拆解成一个个token。所谓<strong>token</strong>，指的是语法上不可能再分的、最小的单个字符或字符串。你可以参考下图来更好地理解什么token。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/f5/838028071f63a132cc8b27b23960e5f5.png?wh=1142*505\" alt=\"\"></p><center><span class=\"reference\">分解token示意图</span></center><p>从图中可以看出，通过<code>var myName = “极客时间”</code>简单地定义了一个变量，其中关键字“var”、标识符“myName” 、赋值运算符“=”、字符串“极客时间”四个都是token，而且它们代表的属性还不一样。</p><p><strong>第二阶段是解析（parse），又称为语法分析</strong>，其作用是将上一步生成的token数据，根据语法规则转为AST。如果源码符合语法规则，这一步就会顺利完成。但如果源码存在语法错误，这一步就会终止，并抛出一个“语法错误”。</p><p>这就是AST的生成过程，先分词，再解析。</p><p>有了AST后，那接下来V8就会生成该段代码的执行上下文。至于执行上下文的具体内容，你可以参考前面几篇文章的讲解。</p><h3>2. 生成字节码</h3><p>有了AST和执行上下文后，那接下来的第二步，解释器Ignition就登场了，它会根据AST生成字节码，并解释执行字节码。</p><p>其实一开始V8并没有字节码，而是直接将AST转换为机器码，由于执行机器码的效率是非常高效的，所以这种方式在发布后的一段时间内运行效果是非常好的。但是随着Chrome在手机上的广泛普及，特别是运行在512M内存的手机上，内存占用问题也暴露出来了，因为V8需要消耗大量的内存来存放转换后的机器码。为了解决内存占用问题，V8团队大幅重构了引擎架构，引入字节码，并且抛弃了之前的编译器，最终花了将进四年的时间，实现了现在的这套架构。</p><p>那什么是字节码呢？为什么引入字节码就能解决内存占用问题呢？</p><p><strong>字节码就是介于AST和机器码之间的一种代码。但是与特定类型的机器码无关，字节码需要通过解释器将其转换为机器码后才能执行。</strong></p><p>理解了什么是字节码，我们再来对比下高级代码、字节码和机器码，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/87/ff/87d1ab147d1dc4b78488e2443d58a3ff.png?wh=1142*314\" alt=\"\"></p><center><span class=\"reference\">字节码和机器码占用空间对比</span></center><p>从图中可以看出，机器码所占用的空间远远超过了字节码，所以使用字节码可以减少系统的内存使用。</p><h3>3. 执行代码</h3><p>生成字节码之后，接下来就要进入执行阶段了。</p><p>通常，如果有一段第一次执行的字节码，解释器Ignition会逐条解释执行。到了这里，相信你已经发现了，解释器Ignition除了负责生成字节码之外，它还有另外一个作用，就是解释执行字节码。在Ignition执行字节码的过程中，如果发现有热点代码（HotSpot），比如一段代码被重复执行多次，这种就称为<strong>热点代码</strong>，那么后台的编译器TurboFan就会把该段热点的字节码编译为高效的机器码，然后当再次执行这段被优化的代码时，只需要执行编译后的机器码就可以了，这样就大大提升了代码的执行效率。</p><p>V8的解释器和编译器的取名也很有意思。解释器Ignition是点火器的意思，编译器TurboFan是涡轮增压的意思，寓意着代码启动时通过点火器慢慢发动，一旦启动，涡轮增压介入，其执行效率随着执行时间越来越高效率，因为热点代码都被编译器TurboFan转换了机器码，直接执行机器码就省去了字节码“翻译”为机器码的过程。</p><p>其实字节码配合解释器和编译器是最近一段时间很火的技术，比如Java和Python的虚拟机也都是基于这种技术实现的，我们把这种技术称为<strong>即时编译（JIT）</strong>。具体到V8，就是指解释器Ignition在解释执行字节码的同时，收集代码信息，当它发现某一部分代码变热了之后，TurboFan编译器便闪亮登场，把热点的字节码转换为机器码，并把转换后的机器码保存起来，以备下次使用。</p><p>对于JavaScript工作引擎，除了V8使用了“字节码+JIT”技术之外，苹果的SquirrelFish Extreme和Mozilla的SpiderMonkey也都使用了该技术。</p><p>这么多语言的工作引擎都使用了“字节码+JIT”技术，因此理解JIT这套工作机制还是很有必要的。你可以结合下图看看JIT的工作过程：</p><p><img src=\"https://static001.geekbang.org/resource/image/66/8a/662413313149f66fe0880113cb6ab98a.png?wh=766*912\" alt=\"\"></p><center><span class=\"reference\">即时编译（JIT）技术</span></center><h2>JavaScript的性能优化</h2><p>到这里相信你现在已经了解V8是如何执行一段JavaScript代码的了。在过去几年中，JavaScript的性能得到了大幅提升，这得益于V8团队对解释器和编译器的不断改进和优化。</p><p>虽然在V8诞生之初，也出现过一系列针对V8而专门优化JavaScript性能的方案，比如隐藏类、内联缓存等概念都是那时候提出来的。不过随着V8的架构调整，你越来越不需要这些微优化策略了，相反，对于优化JavaScript执行效率，你应该将优化的中心聚焦在单次脚本的执行时间和脚本的网络下载上，主要关注以下三点内容：</p><ol>\n<li>提升单次脚本的执行速度，避免JavaScript的长任务霸占主线程，这样可以使得页面快速响应交互；</li>\n<li>避免大的内联脚本，因为在解析HTML的过程中，解析和编译也会占用主线程；</li>\n<li>减少JavaScript文件的容量，因为更小的文件会提升下载速度，并且占用更低的内存。</li>\n</ol><h2>总结</h2><p>好了，今天就讲到这里，下面我来总结下今天的内容。</p><ul>\n<li>首先我们介绍了编译器和解释器的区别。</li>\n<li>紧接着又详细分析了V8是如何执行一段JavaScript代码的：V8依据JavaScript代码生成AST和执行上下文，再基于AST生成字节码，然后通过解释器执行字节码，通过编译器来优化编译字节码。</li>\n<li>基于字节码和编译器，我们又介绍了JIT技术。</li>\n<li>最后我们延伸说明了下优化JavaScript性能的一些策略。</li>\n</ul><p>之所以在本专栏里讲V8的执行流程，是因为我觉得编译器和解释器的相关概念和理论对于程序员来说至关重要，向上能让你充分理解一些前端应用的本质，向下能打开计算机编译原理的大门。通过这些知识的学习能让你将很多模糊的概念关联起来，使其变得更加清楚，从而拓宽视野，上升到更高的层次。</p><h2>思考时间</h2><p>最后留给你个思考题：你是怎么理解“V8执行时间越久，执行效率越高”这个性质的？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"13 | 垃圾回收：垃圾数据是如何自动回收的？","id":131233},"right":{"article_title":"15 | 消息队列和事件循环：页面是怎么“活”起来的？","id":132931}},"comments":[{"had_liked":false,"id":131132,"user_name":"不将就","can_delete":false,"product_type":"c1","uid":1462422,"ip_address":"","ucode":"20A1EFAB085B0F","user_header":"https://static001.geekbang.org/account/avatar/00/16/50/96/dd23dcb0.jpg","comment_is_top":false,"comment_ctime":1567648677,"is_pvip":false,"replies":[{"id":"49487","content":"<br>第一个问题：<br>xmlhttprequest 可以直接走网络进程，不需要浏览器进程介入<br><br>第二个问题：<br>因为前进或者后退也需要执行当前页面脚本啊，比如要执行beforeunload事件，执行的时候页面没响应了，所以前进后退也就失效了<br><br>第三个问题：<br>你把f2注释了，当执行fn函数时，照样会预扫描f1，照样会产生闭包，只不过当fn执行结束之后，闭包的内容没有外部引用，那么下次垃圾回收直接把比闭包的内容回收掉<br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567675172,"ip_address":"","comment_id":131132,"utype":1}],"discussion_count":6,"race_medal":0,"score":"336575097765","product_id":100033601,"comment_content":"重复看之前的文章，受益良多，在此表示感谢！<br>不过有几个疑问，老师有空的解答下哈！<br><br>问题一: 渲染进程里的input标签上传图片，通过与浏览器主进程通信，主进程读取硬磁盘图片数据返回给渲染进程，渲染进程里的js发起ajax请求，是通过浏览器主进程去调用网络进程发起请求，还是渲染进程可以直接调用网络进程发起请求？<br><br>问题二: 请求长时间处于pending状态或者脚本执行死循环，这时刷新或前进后退页面不响应，刷新或前进后退页面是属于浏览器主进程的UI交互行为，为什么渲染进程里的js引擎执行会影响到主进程？<br><br>问题三: <br>function fn(){<br><br>var a =10<br><br>function f1(){<br><br>console.log(a)<br><br>};<br><br>function f2(){<br><br>console.log(&#39;f2&#39;)<br><br>};<br><br>f2();<br><br>};<br><br>fn();<br><br>我在函数f2里打断点，当执行到函数f2时，chrome里显示Closure:{a:10},如果把这个原因解释为在fn函数里会预扫描f1函数，那我现在把fn2函数和调用都注释了，现在执行fn函数时不产生Closure，为什么就不预扫描f1函数了？这是为什么？<br><br><br>","like_count":78,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466303,"discussion_content":"\n第一个问题：\nxmlhttprequest 可以直接走网络进程，不需要浏览器进程介入\n\n第二个问题：\n因为前进或者后退也需要执行当前页面脚本啊，比如要执行beforeunload事件，执行的时候页面没响应了，所以前进后退也就失效了\n\n第三个问题：\n你把f2注释了，当执行fn函数时，照样会预扫描f1，照样会产生闭包，只不过当fn执行结束之后，闭包的内容没有外部引用，那么下次垃圾回收直接把比闭包的内容回收掉\n","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1567675172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224541,"discussion_content":"例子三的代码举例挺好的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586314471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325734,"discussion_content":"没懂，f2函数里不是没有用到外面的变量么？闭包里的内容为啥和是否执行f2有关呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605417535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":224541,"ip_address":""},"score":325734,"extra":""},{"author":{"id":2140649,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a9/e9/d58716e2.jpg","nickname":"木人","note":"","ucode":"0BC8C18EE851B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333026,"discussion_content":"与f2无关的。是断点的问题。从另一个角度上来说，函数f1并不是一个闭包。《你不知道的JavaScript》对闭包的定义是：能记住自身定义时所在的作用域的函数，即时它在这个作用域以外调用。f1仅仅是定义了，并没有调用，外界也没有变量区引用f1。虽然引擎会发现f1内部要访问外面的变量a，但是引擎也不知道这个f1到底会不会调用，所以保险起见引擎还是产生了一个clourse，只不过后面外部函数执行结束后，这个f1会立即被回收，那它对应的clourse也立即被回收了。所以楼主才会觉得“现在执行fn函数时不产生Closure”。但其实是产生的，只是很快就被回收了。\n没有注释之前，断点打到f2上，之所以可以观察到闭包被回收之前的场景，是因为那时执行流还没有退出外部函数。\n这个问题的本质就是，如果一个闭包被回收了，那引擎为它预留的clourse也会被回收。这也是解决闭包内存泄漏的一个方法，即在外部把引用闭包的变量赋值为null。","likes_number":28,"is_delete":false,"is_hidden":false,"ctime":1607418309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":325734,"ip_address":""},"score":333026,"extra":""},{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2140649,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a9/e9/d58716e2.jpg","nickname":"木人","note":"","ucode":"0BC8C18EE851B3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333090,"discussion_content":"明白了，多谢啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607430880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333026,"ip_address":""},"score":333090,"extra":""}]}]},{"had_liked":false,"id":131875,"user_name":"钟钟","can_delete":false,"product_type":"c1","uid":1499343,"ip_address":"","ucode":"D1A11CC3EB7137","user_header":"https://static001.geekbang.org/account/avatar/00/16/e0/cf/08b04e00.jpg","comment_is_top":false,"comment_ctime":1567946929,"is_pvip":false,"replies":[{"id":"50403","content":"是的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567983913,"ip_address":"","comment_id":131875,"utype":1}],"discussion_count":6,"race_medal":0,"score":"190546507953","product_id":100033601,"comment_content":"执行时间越长，执行效率越高。是因为更多的代码成为热点代码之后，转为了机器码来执行吗？","like_count":44,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466659,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567983913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/a9/9abbe7a4.jpg","nickname":"神三元","note":"","ucode":"0FB2E7C0683599","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46056,"discussion_content":"执行时间越长，暂用内存越来越大","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1573115418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394410,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/ea/b86667b8.jpg","nickname":"王玄","note":"","ucode":"E54ABB340D1E49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367575,"discussion_content":"机器码越来越多的同时，内存的占用也会随之增加吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1618397408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336194,"avatar":"https://static001.geekbang.org/account/avatar/00/14/63/82/b1afaf63.jpg","nickname":"小净","note":"","ucode":"F644D272D502B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374359,"discussion_content":"什么叫热点代码？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621150745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2356336,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f4/70/e9786a65.jpg","nickname":"(*｀へ´*)","note":"","ucode":"796F800744805A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336194,"avatar":"https://static001.geekbang.org/account/avatar/00/14/63/82/b1afaf63.jpg","nickname":"小净","note":"","ucode":"F644D272D502B9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558413,"discussion_content":"你是直接看评论区嘛，，文章写的多清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648290654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374359,"ip_address":""},"score":558413,"extra":""}]},{"author":{"id":2172330,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKw8ictgYcqf6upCGib0uBXa6oeWfVJARSLL1SFXtrz3TkJiavPicesLEoBg9RL7ibRYKTtZDexsrJPjJA/132","nickname":"victorykong","note":"","ucode":"76C1BE240D53F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351854,"discussion_content":"赞赞赞","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614496897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131938,"user_name":"Rapheal","can_delete":false,"product_type":"c1","uid":1636368,"ip_address":"","ucode":"71BCD0F9131EF2","user_header":"","comment_is_top":false,"comment_ctime":1567987821,"is_pvip":false,"replies":[{"id":"50424","content":"全局代码，或者函数  ！<br><br>比如下载完一个js文件，先编译这个js文件,但是js文件内定义的函数是不会编译的。<br><br>等调用到该函数的时候，Javascript引擎才会去编译该函数！<br><br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567995272,"ip_address":"","comment_id":131938,"utype":1}],"discussion_count":5,"race_medal":0,"score":"177661646957","product_id":100033601,"comment_content":"老师，编译的基本单位是一段JS代码（内敛JS）或者一个JS文件吗(还是以当前调用栈将要执行函数为单位）？","like_count":41,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466686,"discussion_content":"全局代码，或者函数  ！\n\n比如下载完一个js文件，先编译这个js文件,但是js文件内定义的函数是不会编译的。\n\n等调用到该函数的时候，Javascript引擎才会去编译该函数！\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567995272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1471963,"avatar":"https://static001.geekbang.org/account/avatar/00/16/75/db/1f2a24bd.jpg","nickname":"老壮","note":"","ucode":"8FD072F0636B8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382597,"discussion_content":"你说的编译作者说的编译，不是一个东西","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625643399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1636368,"avatar":"","nickname":"Rapheal","note":"","ucode":"71BCD0F9131EF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8680,"discussion_content":"被编译的函数如果下次再次被调用了，是不是就不需要重新编译啦（意味着暂存编译结果）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568035767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1319638,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/d6/9378f4d5.jpg","nickname":"隔夜果酱","note":"","ucode":"5AFEB62E832BCB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1636368,"avatar":"","nickname":"Rapheal","note":"","ucode":"71BCD0F9131EF2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9541,"discussion_content":"会重新解析执行,要不然HotSpot不就没有用了么,\n如果是被编译后的HotSpot肯定是不会再编译了.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568184262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8680,"ip_address":""},"score":9541,"extra":""},{"author":{"id":1636368,"avatar":"","nickname":"Rapheal","note":"","ucode":"71BCD0F9131EF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1319638,"avatar":"https://static001.geekbang.org/account/avatar/00/14/22/d6/9378f4d5.jpg","nickname":"隔夜果酱","note":"","ucode":"5AFEB62E832BCB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9950,"discussion_content":"有些道理。但是我这里说得编译是指的编译成字节码，下次执行不用重新生成AST和编译成字节码了。而HotSpot的编译成机器码，只针对少量高频的代码，会更高效。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568250874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":9541,"ip_address":""},"score":9950,"extra":""}]}]},{"had_liked":false,"id":184499,"user_name":"舔命难违","can_delete":false,"product_type":"c1","uid":1624489,"ip_address":"","ucode":"F0A6F07DF6E32A","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/a9/b3dcc723.jpg","comment_is_top":false,"comment_ctime":1583329264,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"121842413552","product_id":100033601,"comment_content":"“V8 执行时间越久，执行效率越高”，难怪我电脑开机越久就越卡……","like_count":28,"discussions":[{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255346,"discussion_content":"pc秀同学请坐下","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588391630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066049,"avatar":"https://static001.geekbang.org/account/avatar/00/10/44/41/7309042e.jpg","nickname":"yuanyuan-Vivian","note":"","ucode":"CC7C4E785124F7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586151,"discussion_content":"这应该不是同一件事吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662006556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3119484,"avatar":"","nickname":"Geek_89dbe0","note":"","ucode":"EEAF84552A1A5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583698,"discussion_content":"笑死，不仅仅是 chrome 占用了内存，还有别的应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660296811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1402625,"avatar":"https://static001.geekbang.org/account/avatar/00/15/67/01/313652c2.jpg","nickname":"馒头爱学习","note":"","ucode":"003DDBB8A61C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543895,"discussion_content":"思路清奇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641348899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245551,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/6f/259c24c5.jpg","nickname":"存在の缘由","note":"","ucode":"A38F7AFBAD78E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540384,"discussion_content":"听君一席话，如听一席话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640051374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026159,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/6f/00bdc332.jpg","nickname":"lilithinker","note":"","ucode":"CE0682BFA1FB01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402115,"discussion_content":"听君一席话，如听一席话…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633792729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003365,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/65/2133fdfb.jpg","nickname":"前端黑板报","note":"","ucode":"55A9F886A35838","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239025,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587267733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156074,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","nickname":"HoSalt","note":"","ucode":"610B03E2A002D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227450,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586493468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131672,"user_name":"Hurry","can_delete":false,"product_type":"c1","uid":1138560,"ip_address":"","ucode":"12FEE2A50CC667","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/80/51269d88.jpg","comment_is_top":false,"comment_ctime":1567842957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"83172221581","product_id":100033601,"comment_content":"从本文中明确的应该是在写代码的时候，如何让代码易于被 TurboFan 优化，减少反优化，老师提到的 hiddenClass 等我觉得大家还是有必要了解一下， 大家可以尝试使用 node 加选项 --trace-opt 跑代码体验一下 TurboFan 如何做优化，就会有很直观的感受 https:&#47;&#47;github.com&#47;hjzheng&#47;performance-test&#47;blob&#47;master&#47;v8&#47;addFunction.js","like_count":19},{"had_liked":false,"id":137054,"user_name":"GY","can_delete":false,"product_type":"c1","uid":1379119,"ip_address":"","ucode":"764214512E67C1","user_header":"https://static001.geekbang.org/account/avatar/00/15/0b/2f/6efc3051.jpg","comment_is_top":false,"comment_ctime":1569585460,"is_pvip":false,"replies":[{"id":"52568","content":"<br>你可以把JavaScript的编译看成了部分：<br><br>第一部分从一段JavaScript代码编译到字节码，然后解释器解释执行字节码！<br><br>第二部分深度编译，将活跃的字节码编译成二进制，然后直接执行二进制。<br><br>无论哪个阶段都需要编译。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1569587751,"ip_address":"","comment_id":137054,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48814225716","product_id":100033601,"comment_content":"前面第7和第12讲，变量提升说js的执行过程，是有编译过程的，变量提升就发生在编译过程，经过编译后，会生成两部分内容，执行上下文和可执行代码，但是在这一讲中，却并没有编译过程，在AST生成后，解释器就开始执行生成字节码执行了，这几讲的内容有点互相冲突，那么详细的过程到底是怎样的呢<br>我在查看其它资料，出现了预编译这个名词，这个又怎么解释呢<br>希望能解答下","like_count":11,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468920,"discussion_content":"\n你可以把JavaScript的编译看成了部分：\n\n第一部分从一段JavaScript代码编译到字节码，然后解释器解释执行字节码！\n\n第二部分深度编译，将活跃的字节码编译成二进制，然后直接执行二进制。\n\n无论哪个阶段都需要编译。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569587751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1519123,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/13/598bd22b.jpg","nickname":"gmm","note":"","ucode":"66AEDE141A5983","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288883,"discussion_content":"变量提升发生在语法分析阶段，可以看这篇文章\nhttps://blog.crimx.com/2015/03/29/javascript-hoist-under-the-hood/","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593922214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330661,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4d/e5/5e17c915.jpg","nickname":"skyblue","note":"","ucode":"102D8AD68BE37E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368644,"discussion_content":"那为什么网上都说ha是解释型语言，又怎么解释呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618790753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144039,"user_name":"westfall","can_delete":false,"product_type":"c1","uid":1632773,"ip_address":"","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/b164dc15.jpg","comment_is_top":false,"comment_ctime":1571830705,"is_pvip":false,"replies":[{"id":"56716","content":"是的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572618864,"ip_address":"","comment_id":144039,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35931569073","product_id":100033601,"comment_content":"字节码最终也会转成机器码来执行的吧？因为最终都是cpu来执行，cpu只能执行机器码","like_count":8,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471791,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572618864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156682,"user_name":"Bazinga","can_delete":false,"product_type":"c1","uid":1542274,"ip_address":"","ucode":"477DBE965CEA21","user_header":"https://static001.geekbang.org/account/avatar/00/17/88/82/b789613e.jpg","comment_is_top":false,"comment_ctime":1574935016,"is_pvip":false,"replies":[{"id":"60164","content":"流程是这样的：<br><br>v8先生成ast！<br><br>然后ignition根据ast生成字节码。<br><br>在然后ignition解释执行字节码。<br><br>所以ignition生成了字节码并解释执行字节码。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1574952707,"ip_address":"","comment_id":156682,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31639706088","product_id":100033601,"comment_content":"总结说：V8 依据 JavaScript 代码生成 AST 和执行上下文，再基于 AST 生成字节码，然后通过解释器执行字节码，通过编译器来优化编译字节码。但是第二节生成字节码那一段 说：解释器 Ignition 就登场了，它会根据 AST 生成字节码，并解释执行字节码。还有即时编译（JIT）技术那张图片，看起来也是先生成字节码 再经过解释器 。 所以字节码是解释器生成的吗？我都看懵了，求解答。","like_count":7,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476198,"discussion_content":"流程是这样的：\n\nv8先生成ast！\n\n然后ignition根据ast生成字节码。\n\n在然后ignition解释执行字节码。\n\n所以ignition生成了字节码并解释执行字节码。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574952707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542274,"avatar":"https://static001.geekbang.org/account/avatar/00/17/88/82/b789613e.jpg","nickname":"Bazinga","note":"","ucode":"477DBE965CEA21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65126,"discussion_content":"谢谢老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574984887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131242,"user_name":"Geek_Jamorx","can_delete":false,"product_type":"c1","uid":1608908,"ip_address":"","ucode":"5B5669D0C75FBD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0F94uoYZQicRd7YEFjEJWm0EaUJXzkhiaqa5GQQ8a1FkicQIoHC4sp2ZG9m1JAFABuGsj34ucztjibA/132","comment_is_top":false,"comment_ctime":1567677653,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"31632448725","product_id":100033601,"comment_content":"我想提一个问题，V8解析后的字节码或热节点的机器码是存在哪的，是以缓存的形式存储的么？和浏览器三级缓存原理的存储位置比如内存和磁盘有关系么？<br>最近面试有被问到，没答上来。。希望老师回答，十分感谢~","like_count":7,"discussions":[{"author":{"id":1485254,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoaxy8ibvXITdMcXFfd5O5E7Epq8MG5z1OBhO7MQXTfbcpA0fpcsIxkCHyUZ5ZSrj3spZpAQxEC9GA/132","nickname":"非洲大地我最凶","note":"","ucode":"30CDE0B486AE26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291362,"discussion_content":"判断是否命中强制缓存：当命中强制缓存时，状态码为200, 请求对应的Size值则代表该缓存存放的位置，分别为from memory cache 和 from disk cache。\nfrom memory cache代表使用内存中的缓存，from disk cache则代表使用的是硬盘中的缓存，浏览器读取缓存的顺序为memory > disk。\n1.内存缓存(from memory cache)：内存缓存具有两个特点，分别是快速读取和时效性：\n快速读取：内存缓存会将编译解析后的文件，直接存入该进程的内存中，占据该进程一定的内存资源，以方便下次运行使用时的快速读取。\n时效性：一旦该进程关闭，则该进程的内存则会清空。\n2.硬盘缓存(from disk cache)：硬盘缓存则是直接将缓存写入硬盘文件中，读取缓存需要对该缓存存放的硬盘文件进行I/O操作，然后重新解析该缓存内容，读取复杂，速度比内存缓存慢。退出进程不会清空。\n一般JS,字体，图片等会放在内存中，而CSS则会放在硬盘缓存","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1594792541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356668,"discussion_content":"面试什么公司问得这么高端","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1615644776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8362,"discussion_content":"文中有提到，其实一开始 V8 并没有字节码，而是直接将 AST 转换为机器码，但是对于移动设备只有512M内存，机器码会占用很多内存。所以后来才诞生了字节码，字节码会占据更少的内存空间。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1567948396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1608908,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0F94uoYZQicRd7YEFjEJWm0EaUJXzkhiaqa5GQQ8a1FkicQIoHC4sp2ZG9m1JAFABuGsj34ucztjibA/132","nickname":"Geek_Jamorx","note":"","ucode":"5B5669D0C75FBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11685,"discussion_content":"这个我后来去查过，以哈希表的形式存在了v8的堆内存中","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1568423564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8362,"ip_address":""},"score":11685,"extra":""}]},{"author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8351,"discussion_content":"据我所知，编译好后的机器码操作系统会有一个专门的区域来放的。但是你想下次允许同样的代码的时候，能马上拿到之前编译好的机器码，显然会放在磁盘里。具体什么时候才去读取缓存而不是重新运行，可以看 v8 官网的博客","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567936714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8361,"discussion_content":"不会是磁盘吧，磁盘读取太慢了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567948212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8351,"ip_address":""},"score":8361,"extra":""},{"author":{"id":1608908,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0F94uoYZQicRd7YEFjEJWm0EaUJXzkhiaqa5GQQ8a1FkicQIoHC4sp2ZG9m1JAFABuGsj34ucztjibA/132","nickname":"Geek_Jamorx","note":"","ucode":"5B5669D0C75FBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11687,"discussion_content":"是以哈希表形式存在堆内存中的","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1568423628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8351,"ip_address":""},"score":11687,"extra":""},{"author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1608908,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0F94uoYZQicRd7YEFjEJWm0EaUJXzkhiaqa5GQQ8a1FkicQIoHC4sp2ZG9m1JAFABuGsj34ucztjibA/132","nickname":"Geek_Jamorx","note":"","ucode":"5B5669D0C75FBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38471,"discussion_content":"我说的意思就是放在内存，只是下次重新启动的时候，会有一个策略去读磁盘里的代码缓存，而不是重新编译","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571793059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":11687,"ip_address":""},"score":38471,"extra":""}]},{"author":{"id":1253128,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/08/14642f9e.jpg","nickname":"相望于江湖","note":"","ucode":"9CCB6F89F92C89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370039,"discussion_content":"这个还能放哪儿？当然是内存，浏览器不会缓存这些编译后的字节码吧，这本来就是运行时的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619261651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8363,"discussion_content":"随着v8执行，热点代码会越来越来越多，turbofan将热点代码转换为机器码，也会占据越来越多的内存。这时候需要有一个策略来管理机器码和内存的关系。Angus 的提问有说到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567948591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131070,"user_name":"李懂","can_delete":false,"product_type":"c1","uid":1330436,"ip_address":"","ucode":"539E6639042C88","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/04/5e0d3713.jpg","comment_is_top":false,"comment_ctime":1567630669,"is_pvip":false,"replies":[{"id":"49313","content":"你可以认为WebAssembly就是，WebAssembly经过TuboFan处理下就能执行了","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567639296,"ip_address":"","comment_id":131070,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31632401741","product_id":100033601,"comment_content":"怎么都需要字节码文件，为啥，jsvaScript不像java一样先编译为字节码，这样执行效率不就高了么！","like_count":7,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466272,"discussion_content":"你可以认为WebAssembly就是，WebAssembly经过TuboFan处理下就能执行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567639296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131085,"user_name":"Marvin","can_delete":false,"product_type":"c1","uid":1096381,"ip_address":"","ucode":"443BD8B20285A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/ba/bd/6f2f078c.jpg","comment_is_top":false,"comment_ctime":1567642042,"is_pvip":false,"replies":[{"id":"49450","content":"引入了字节码，就有弹性空间了，可以在内存和执行速度之间做调节。<br><br>相比之前的V8，将JS代码全部编译成字节码，这种模式就没有协商的空间了！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567669239,"ip_address":"","comment_id":131085,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27337445818","product_id":100033601,"comment_content":"我理解，V8执行越久，被编译成机器码的热点代码就越多，所以整体执行效率就越高。如果是这样的话，那么V8内存占用也会越来越多，会面临的问题会和","like_count":6,"discussions":[{"author":{"id":1192961,"avatar":"https://static001.geekbang.org/account/avatar/00/12/34/01/30ca98e6.jpg","nickname":"arronK","note":"","ucode":"58DC6FBF2CF0C1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337992,"discussion_content":"所以这么来说，字节码就是介于内存容量和执行速度的一个更均衡的方案。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609146154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466280,"discussion_content":"引入了字节码，就有弹性空间了，可以在内存和执行速度之间做调节。\n\n相比之前的V8，将JS代码全部编译成字节码，这种模式就没有协商的空间了！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567669239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131079,"user_name":"小兵","can_delete":false,"product_type":"c1","uid":1261674,"ip_address":"","ucode":"AA3BA727C25179","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/6a/ab1cf396.jpg","comment_is_top":false,"comment_ctime":1567639968,"is_pvip":false,"replies":[{"id":"49493","content":"只要是同步脚本都会阻塞，这里我可能没说清楚。<br><br>我的表达的以上是同步脚本尽量小，尽量能内联。<br><br>其它的尽量采用异步脚本，如使用aysnc和defer。<br> ","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567675718,"ip_address":"","comment_id":131079,"utype":1}],"discussion_count":6,"race_medal":0,"score":"27337443744","product_id":100033601,"comment_content":"避免大的内联脚本，因为在解析 HTML 的过程中，解析和编译也会占用主线程；这句话可以理解为解析HTML代码的时候需要解析内联代码，而放到js文件的时候不需要吗？<br>另外思考题应该是执行越久，热点代码越多，即时编译的作用越大。","like_count":6,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466277,"discussion_content":"只要是同步脚本都会阻塞，这里我可能没说清楚。\n\n我的表达的以上是同步脚本尽量小，尽量能内联。\n\n其它的尽量采用异步脚本，如使用aysnc和defer。\n ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567675718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1356900,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b4/64/f3750751.jpg","nickname":"一直都在","note":"","ucode":"56F97202DE98A3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":578870,"discussion_content":"老师，同步脚本是不是指的会操作dom的脚本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657072650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":466277,"ip_address":""},"score":578870,"extra":""}]},{"author":{"id":2041369,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCiciak9BCOSsuydrXxSklzpzbr3nqj1E5vZCPlPPUSZs5q4R6LAgI56Ria6hdJFEAibvZEca0O5Lxdg/132","nickname":"Geek_07ad60","note":"","ucode":"D5381B940BCA87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311103,"discussion_content":"没看懂，矛盾了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602221106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1698735,"avatar":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","nickname":"JC.彦","note":"","ucode":"E87C1420B140F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240591,"discussion_content":"什么意思啊？尽量采用异步脚本，然后又尽量能内联(是同步吗？)，这不是矛盾吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587377432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1050196,"avatar":"https://static001.geekbang.org/account/avatar/00/10/06/54/16bb64d0.jpg","nickname":"蛋黄酱","note":"","ucode":"2351562F282B68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1698735,"avatar":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","nickname":"JC.彦","note":"","ucode":"E87C1420B140F4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336952,"discussion_content":"同步的话内联比额外加载块，因为加载还要等网络\n不需要同步的话能异步最好异步的意思吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608733381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":240591,"ip_address":""},"score":336952,"extra":""}]},{"author":{"id":1028582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b1/e6/d09e9277.jpg","nickname":"Geek_aa4de8","note":"","ucode":"8BAF6A3B421E86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7706,"discussion_content":"这些框架用于pc，移动端都是可以的，你可以根据根据场景再选择相应的UI 库就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567647172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308612,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1560162,"ip_address":"","ucode":"902E99E507AEC1","user_header":"https://static001.geekbang.org/account/avatar/00/17/ce/62/026e4408.jpg","comment_is_top":false,"comment_ctime":1629702948,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18809572132","product_id":100033601,"comment_content":"面试被问到：js 在编译过程中，会做一定的优化，那么日常开发，应该怎么利用这个优化，提升代码质量","like_count":4,"discussions":[{"author":{"id":2439555,"avatar":"https://static001.geekbang.org/account/avatar/00/25/39/83/72852cbf.jpg","nickname":"Lil Han","note":"","ucode":"82DD94B49B0330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539176,"discussion_content":"目前能想到的是，代码里尽量当做强类型语言来写，不要混用数据类型；比如：var a = &#39;&#39;; a = 1; \n这样不利于JIT优化，因为JIT编译时，会因为这种类型的混用做一些额外的处理。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639632686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303314,"user_name":"Geek_panda","can_delete":false,"product_type":"c1","uid":1622868,"ip_address":"","ucode":"ED245B851B841A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yxWUVmiccGZdE0lVATCpdUQDh7ubI7BGXRxiadfog14S3TjRR2dcqMLOR87jf2EA3taEFw4FdNMSDhRanKhMB2Kw/132","comment_is_top":false,"comment_ctime":1626713091,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"10216647683","product_id":100033601,"comment_content":"老师还在吗，想请教2个问题<br>1. v8生成执行上下文是根据源码生成还是根据ast来生成呢？<br>2. 解释器执行字节码时是不是也需要将他转成机器码，如果是的话，那他是不是也会通过TurboFan编译器编译<br>@李兵 老师","like_count":2,"discussions":[{"author":{"id":1263953,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/51/daf83beb.jpg","nickname":"Stephen","note":"","ucode":"45D462671F76A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405273,"discussion_content":"好问题, 我也有同样的疑问. 另外字节码交给解释器执行, 那机器码交给谁执行?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634546745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2647147,"avatar":"https://static001.geekbang.org/account/avatar/00/28/64/6b/d8ca3b18.jpg","nickname":"方剑鹏","note":"","ucode":"4F3C9227BA2681","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1263953,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/51/daf83beb.jpg","nickname":"Stephen","note":"","ucode":"45D462671F76A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567173,"discussion_content":"机器码交给操作系统去调度执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650851323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":405273,"ip_address":""},"score":567173,"extra":""}]},{"author":{"id":2439555,"avatar":"https://static001.geekbang.org/account/avatar/00/25/39/83/72852cbf.jpg","nickname":"Lil Han","note":"","ucode":"82DD94B49B0330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539175,"discussion_content":"文中有句原话：“有了 AST 后，那接下来 V8 就会生成该段代码的执行上下文”。\n所以个人理解的是执行上下文是根据AST生成的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639632273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2439555,"avatar":"https://static001.geekbang.org/account/avatar/00/25/39/83/72852cbf.jpg","nickname":"Lil Han","note":"","ucode":"82DD94B49B0330","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543062,"discussion_content":"但是 图V8 执行一段代码流程图 看起来又是在生成AST的过程中生成了执行上下文","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640942422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539175,"ip_address":""},"score":543062,"extra":""}]}]},{"had_liked":false,"id":217552,"user_name":"crown","can_delete":false,"product_type":"c1","uid":1970250,"ip_address":"","ucode":"72CBF7B2323E8A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/10/4a/1a549f4e.jpg","comment_is_top":false,"comment_ctime":1589532783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10179467375","product_id":100033601,"comment_content":"V8刚开始执行代码的时候, 都是通过ignition解释器来逐行解析字节码的, 这样性能会比较慢. 当执行一段时间过后, ignition可以捕获到经常被执行的到的字节码.  这些字节码就会被作为热代码交给turbofan编译成为机器码. 后续可以直接使用机器码, 而机器码的执行效率优于字节码. 当V8执行越久, 使用量高的字节码都被编译为机器码. 故V8执行越久, 效率越高","like_count":2},{"had_liked":false,"id":173680,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":1167046,"ip_address":"","ucode":"454538FF253B5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","comment_is_top":false,"comment_ctime":1579659520,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10169594112","product_id":100033601,"comment_content":"老师您好，我曾想过不用babel typescript等的ast而是自己开发一个c++项目，引入v8利用他的ast来做一些代码转换工作，这样可以基于c的很多机制做更多多线程方面的优化。后发现这对于v8来说是不可能的，因为v8是一部分一部分解析js的，v8为什么采用这样的机制呢？另外这方面如果想自己动手拿v8做些事儿 老师有什么推荐的资料 或书籍可以看看吗？","like_count":2,"discussions":[{"author":{"id":1167046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","nickname":"sugar","note":"","ucode":"454538FF253B5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223024,"discussion_content":"自问自答，v8是能拿到ast的，没问题。在v8.dev官网follow一下build过程，编译一下d8就可以。不过它的ast是cout print，想自己拿内存中的数据结构做二次开发 需要自己写很多c代码～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586183214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222491,"discussion_content":"厉害~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586149078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159660,"user_name":"七月有风","can_delete":false,"product_type":"c1","uid":1439990,"ip_address":"","ucode":"B3F82397347C5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/f8/f6/3e2db176.jpg","comment_is_top":false,"comment_ctime":1575722174,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10165656766","product_id":100033601,"comment_content":"老师,你好，node 的 JavaScript 引擎是 V8, ReactNative 和 Android webview 的 JavaScript 引擎是V8引擎吗？","like_count":2,"discussions":[{"author":{"id":1010463,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6b/1f/f7be5246.jpg","nickname":"大前端洞见","note":"","ucode":"1FA227A25F6056","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183102,"discussion_content":"基于Node.js 和 Chrome的是V8，所以RN开发环境是基于V8编译代码的，但执行环境Android的webview需要看机器系统区别了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582467601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1439990,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f8/f6/3e2db176.jpg","nickname":"七月有风","note":"","ucode":"B3F82397347C5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1010463,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6b/1f/f7be5246.jpg","nickname":"大前端洞见","note":"","ucode":"1FA227A25F6056","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":185314,"discussion_content":"RN开发环境是一个node服务，由V8执行。生产环境是RN内置的解释器，也是v8吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582615355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":183102,"ip_address":""},"score":185314,"extra":""}]}]},{"had_liked":false,"id":143631,"user_name":"刹那","can_delete":false,"product_type":"c1","uid":1620237,"ip_address":"","ucode":"E0B1C29EB07754","user_header":"https://static001.geekbang.org/account/avatar/00/18/b9/0d/ae745ec0.jpg","comment_is_top":false,"comment_ctime":1571748656,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"10161683248","product_id":100033601,"comment_content":"想到一个问题，可以把代码预先编译成字节码吗？这样浏览器下载了就能直接运行","like_count":2,"discussions":[{"author":{"id":1439990,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f8/f6/3e2db176.jpg","nickname":"七月有风","note":"","ucode":"B3F82397347C5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54944,"discussion_content":"下载完一个js文件，先编译这个js文件,但是js文件内定义的函数是不会编译的。\n等调用到该函数的时候，Javascript引擎才会去编译该函数。为什么不提前编译里面的函数，是因为编译该函数是需要执行上下文的，这就是不能预先编译成字节码的原因。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1574327955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1620237,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b9/0d/ae745ec0.jpg","nickname":"刹那","note":"","ucode":"E0B1C29EB07754","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1439990,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f8/f6/3e2db176.jpg","nickname":"七月有风","note":"","ucode":"B3F82397347C5B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109175,"discussion_content":"嗯执行上下文应该是运行时确定吧，编译相当于代码转换，静态的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577671784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54944,"ip_address":""},"score":109175,"extra":""}]},{"author":{"id":1253180,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/3c/70d30681.jpg","nickname":"EEEEEEEarly","note":"","ucode":"26B4EABB7B5890","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77962,"discussion_content":"bytecode会比源文件大得多，会增加load时间，v8团队认为没有必要","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575961788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1620237,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b9/0d/ae745ec0.jpg","nickname":"刹那","note":"","ucode":"E0B1C29EB07754","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1253180,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/3c/70d30681.jpg","nickname":"EEEEEEEarly","note":"","ucode":"26B4EABB7B5890","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109174,"discussion_content":"原来如此，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577671665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":77962,"ip_address":""},"score":109174,"extra":""}]}]},{"had_liked":false,"id":133625,"user_name":"Geek_177f82","can_delete":false,"product_type":"c1","uid":1606961,"ip_address":"","ucode":"C1BF9B51E92995","user_header":"","comment_is_top":false,"comment_ctime":1568623965,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10158558557","product_id":100033601,"comment_content":"问一个基础的问题。希望老师解答。编译器编译后的二进制文件，与解析器解析后机器码是一个东西吗？","like_count":2,"discussions":[{"author":{"id":1625651,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/33/09498236.jpg","nickname":"Geek_1b6022","note":"","ucode":"EBDDEF36DE58DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38001,"discussion_content":"不是，二进制文件里面的代码需要通过某种流程翻译成机器码，比如编译器，","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571712378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1163123,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bf/73/35dbe642.jpg","nickname":"一杯咖啡豆儿","note":"","ucode":"A4F8578021DF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98314,"discussion_content":"楼上理解的不太正确，二进制文件是最后输出的文件，计算机可以执行的是二进制文件。机器码是整个流程最后的步骤，目的是调用系统的硬件如大量使用的寄存器进行计算，然后生成二进制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577154060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131138,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1567650055,"is_pvip":false,"replies":[{"id":"49451","content":"是的，可以实现很多策略来权衡不同系统的情况","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567669326,"ip_address":"","comment_id":131138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10157584647","product_id":100033601,"comment_content":"V8执行越久，被编译成机器码的热点就越多，这些机器码帮助字节码可以直接执行而不用再使用解释器逐行执行，这相当于浏览器缓存，提高了执行性能。这些生成的机器码也会带来内存占用升高的问题，这里应该会有一个权衡措施吧，根据已占用的内存权衡如何判定是热点并生成机器码保存。","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466306,"discussion_content":"是的，可以实现很多策略来权衡不同系统的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567669326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131128,"user_name":"悬炫","can_delete":false,"product_type":"c1","uid":1159974,"ip_address":"","ucode":"28BA6B2169256B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/26/cc28a05a.jpg","comment_is_top":false,"comment_ctime":1567648136,"is_pvip":false,"replies":[{"id":"49449","content":"对的，ignition是直接解释执行字节码，这个我画图忽略了，稍晚点来调整。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567669102,"ip_address":"","comment_id":131128,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10157582728","product_id":100033601,"comment_content":"V8 执行一段代码流程图 中，感觉图最下面的那个箭头不对吧，应该不是机器码，而是解释执行吧","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466301,"discussion_content":"对的，ignition是直接解释执行字节码，这个我画图忽略了，稍晚点来调整。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567669102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252839,"user_name":"Bryant-cx","can_delete":false,"product_type":"c1","uid":1242146,"ip_address":"","ucode":"ED9A93A527F695","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/22/257e9e21.jpg","comment_is_top":false,"comment_ctime":1602499218,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5897466514","product_id":100033601,"comment_content":"代码第一次执行的时候，解释器Ignition会逐条执行。但是在Ignition执行字节码的过程中，如果发现某一段代码被重复执行，那么后台的编译器TurboFan就会把该段热点的字节码编译为高效的机器码。当再次执行这段被优化的代码时，只需要执行这段被编译后的机器码即可，这样就大大提升了代码的执行效率。","like_count":1},{"had_liked":false,"id":250064,"user_name":"😈Kyui","can_delete":false,"product_type":"c1","uid":1240112,"ip_address":"","ucode":"C072D33D3907B0","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/30/b10d8b5a.jpg","comment_is_top":false,"comment_ctime":1600919755,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5895887051","product_id":100033601,"comment_content":"老师能不能讲一下什么是反优化，以及如何触发的？","like_count":1},{"had_liked":false,"id":225147,"user_name":"Mickey","can_delete":false,"product_type":"c1","uid":1059845,"ip_address":"","ucode":"548E950F57D2A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/05/b8e769fa.jpg","comment_is_top":false,"comment_ctime":1591667175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5886634471","product_id":100033601,"comment_content":"看到这里，还是要感慨一下，老师好厉害，感觉自己还有很长的路子要走。","like_count":1},{"had_liked":false,"id":222899,"user_name":"Yeehow Chng","can_delete":false,"product_type":"c1","uid":1335916,"ip_address":"","ucode":"3CE6072CA7BEEC","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/6c/923bced2.jpg","comment_is_top":false,"comment_ctime":1590945086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885912382","product_id":100033601,"comment_content":"请问什么是V8的反优化?","like_count":1},{"had_liked":false,"id":138120,"user_name":"Cris","can_delete":false,"product_type":"c1","uid":1473520,"ip_address":"","ucode":"F8A287134F1078","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","comment_is_top":false,"comment_ctime":1570030879,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5864998175","product_id":100033601,"comment_content":"既然v8用到了编译器 可否认为js也得门编译型语言","like_count":1,"discussions":[{"author":{"id":1625651,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/33/09498236.jpg","nickname":"Geek_1b6022","note":"","ucode":"EBDDEF36DE58DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38024,"discussion_content":"自从有了JIT后，可能以后就没有编译型和解释型语言的说法了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571715008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131081,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1567640625,"is_pvip":true,"replies":[{"id":"49452","content":"第一个：站点就是文章中连接的地址，你可以手动操作下，直观感受下ast！<br><br>第二个：vue react 移动端和PC都适用的，现在都是响应式开发了，同一套框架可以适应很多平台","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567669470,"ip_address":"","comment_id":131081,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5862607921","product_id":100033601,"comment_content":"两个问题：1 “这段代码经过javascript-ast站点处理后&quot;，此句中“站点”对吗？2 Vue和React、bootstrap都是用于移动端开发吗？ 我开发PC端网页可以用吗？如果不能用，那PC端开发用什么前端框架？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466278,"discussion_content":"第一个：站点就是文章中连接的地址，你可以手动操作下，直观感受下ast！\n\n第二个：vue react 移动端和PC都适用的，现在都是响应式开发了，同一套框架可以适应很多平台","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567669470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098168,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c1/b8/fc08b905.jpg","nickname":"ZZJ","note":"","ucode":"1EFC51E697DD12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7731,"discussion_content":"这个“站点”是个网站呢。你点进去看看就知道了呢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567655046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358523,"user_name":"momo","can_delete":false,"product_type":"c1","uid":3181408,"ip_address":"湖北","ucode":"868DA7C7491C1E","user_header":"https://static001.geekbang.org/account/avatar/00/30/8b/60/00a7d37a.jpg","comment_is_top":false,"comment_ctime":1664411922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664411922","product_id":100033601,"comment_content":"明明是汇编的代码，注释写机器码。而且内容也对不上。:(","like_count":0},{"had_liked":false,"id":337002,"user_name":"一七","can_delete":false,"product_type":"c1","uid":2930028,"ip_address":"","ucode":"681C7720FAB84B","user_header":"https://static001.geekbang.org/account/avatar/00/2c/b5/6c/18c5b2ed.jpg","comment_is_top":false,"comment_ctime":1646544779,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1646544779","product_id":100033601,"comment_content":"所以编译器在 JIT 的流程中就是为了生成热点代码？<br>然后我看文中关于字节码的解释：解释器在解释执行字节码的时候也是要先转成机器码才能执行的，但是下面 JIT 的流程图并没有体现解释器将字节码转为机器码的过程，如果存在解释器将字节码转为机器码的这个过程，那么为什么还要编译器生成热点代码的机器码呢？","like_count":0,"discussions":[{"author":{"id":2930028,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/b5/6c/18c5b2ed.jpg","nickname":"一七","note":"","ucode":"681C7720FAB84B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560897,"discussion_content":"二刷，又想了一下这个问题，如果不是热点代码，会存在将字节码转为机器码的过程，若果是热点代码，因为之前已经转了机器码，就可以直接拿来现成的直接执行了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649486161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1466882,"avatar":"https://static001.geekbang.org/account/avatar/00/16/62/02/fd00a1de.jpg","nickname":"七月拾思","note":"","ucode":"7E405CBB9820F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2930028,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/b5/6c/18c5b2ed.jpg","nickname":"一七","note":"","ucode":"681C7720FAB84B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561064,"discussion_content":"是的，其实 iginition 解释器把字节码转成机器码时是有不小的开销的，如果是热点代码，提前被 turboFan 编译器编译成了机器码并保存了下来，那这样下次执行时就省去了把字节码转成机器码的过程，总体上执行效率就高不少了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649521991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":560897,"ip_address":""},"score":561064,"extra":""}]}]},{"had_liked":false,"id":336712,"user_name":"萌小乖","can_delete":false,"product_type":"c1","uid":1567685,"ip_address":"","ucode":"E1034D76F7EA1A","user_header":"https://static001.geekbang.org/account/avatar/00/17/eb/c5/39502a84.jpg","comment_is_top":false,"comment_ctime":1646308064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646308064","product_id":100033601,"comment_content":"你是怎么理解“V8 执行时间越久，执行效率越高”这个性质的？<br><br>因为一行javascript代码通过分词解析 语法分析后生成AST和执行上下文，紧接生成字节码，解释器一行行执行字节码的过程中发现使用率很高的字节码之后，会提交给编译器，由编译器生成机器可直接识别的机器码，存放在单独的地方，下次使用直接调取，V8执行的时间越久，这种高效代码的储存就越多，在运行时需要再次编译的字节码变少，执行效率越高","like_count":0},{"had_liked":false,"id":333535,"user_name":"torin","can_delete":false,"product_type":"c1","uid":1702824,"ip_address":"","ucode":"CB6CBC8F6BBEE3","user_header":"https://static001.geekbang.org/account/avatar/00/19/fb/a8/8dc8d745.jpg","comment_is_top":false,"comment_ctime":1644398836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644398836","product_id":100033601,"comment_content":"“V8 执行时间越久，执行效率越高”，是指重复执行这段代码吗？按照之前的垃圾回收机制来说，一段代码的执行完上下文之后，如果没被使用，就会销毁掉，后面再重新跑，又重新建立新的上下文，是不是就没有多次执行的概念了？","like_count":0},{"had_liked":false,"id":312064,"user_name":"z","can_delete":false,"product_type":"c1","uid":2240734,"ip_address":"","ucode":"98B89DC574793C","user_header":"https://static001.geekbang.org/account/avatar/00/22/30/de/10a85475.jpg","comment_is_top":false,"comment_ctime":1631611166,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1631611166","product_id":100033601,"comment_content":"执行上下文不是运行时生成的吗？","like_count":0,"discussions":[{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543073,"discussion_content":"编译时就产生了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640946161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311142,"user_name":"ly","can_delete":false,"product_type":"c1","uid":2582719,"ip_address":"","ucode":"9CCCF8A885A20E","user_header":"https://static001.geekbang.org/account/avatar/00/27/68/bf/7b39410e.jpg","comment_is_top":false,"comment_ctime":1631087380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631087380","product_id":100033601,"comment_content":"看到有的资料中讲在V8引擎中，源代码先被解析器转变为抽象语法树，然后使用JIT编译器的全代码生成器从AST直接生成本地可执行代码，没有字节码这一步骤，和本文矛盾吗？","like_count":0},{"had_liked":false,"id":300927,"user_name":"大掌柜","can_delete":false,"product_type":"c1","uid":2685899,"ip_address":"","ucode":"BB6C9A0CA5ED34","user_header":"https://static001.geekbang.org/account/avatar/00/28/fb/cb/c2ff6e72.jpg","comment_is_top":false,"comment_ctime":1625453433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625453433","product_id":100033601,"comment_content":"请问一下编译的字节码和机器码是存在哪里的呢，内存中嘛？比如一个函数我执行了一遍，后面再执行这个函数，v8是如何找到这个函数的热点机器码的呢？如何与正常的字节码运行结合起来的呢？希望老师可以解答一下或者提供一下参考资料","like_count":0},{"had_liked":false,"id":296943,"user_name":"迷之de小孩灬","can_delete":false,"product_type":"c1","uid":2643593,"ip_address":"","ucode":"6D1775A8D1EF18","user_header":"https://static001.geekbang.org/account/avatar/00/28/56/89/e2445988.jpg","comment_is_top":false,"comment_ctime":1623233249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623233249","product_id":100033601,"comment_content":"既然是即时编译，如何判断是热点代码？","like_count":0},{"had_liked":false,"id":296401,"user_name":"syne✨","can_delete":false,"product_type":"c1","uid":1373262,"ip_address":"","ucode":"F56E1BA7CF46CF","user_header":"https://static001.geekbang.org/account/avatar/00/14/f4/4e/2e804f2a.jpg","comment_is_top":false,"comment_ctime":1622956735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622956735","product_id":100033601,"comment_content":"想请问下老师：<br>1. js的变量提升是在 生成AST这个阶段还是在ignition生成字节码的这个阶段做的？<br>2. 老师在其他同学的问题中提到，编译过程中是不会编译函数的，而是要等到函数被调用时才编译，那未被编译的函数存放到哪里？字节码中的函数调用语句又是怎么找到这个未编译的函数去执行呢？<br>希望老师解答一下，这个问题困扰我好久了，谢谢老师","like_count":0},{"had_liked":false,"id":294355,"user_name":"无心","can_delete":false,"product_type":"c1","uid":1117921,"ip_address":"","ucode":"ACDA5708636A44","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/e1/993d92f0.jpg","comment_is_top":false,"comment_ctime":1621911630,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1621911630","product_id":100033601,"comment_content":"V8编译器是直接从字节码编译成机器码还是从AST编译成机器码？","like_count":0},{"had_liked":false,"id":292531,"user_name":"zdy","can_delete":false,"product_type":"c1","uid":2165387,"ip_address":"","ucode":"9A6AD7BCF18ECF","user_header":"https://static001.geekbang.org/account/avatar/00/21/0a/8b/108ea8b6.jpg","comment_is_top":false,"comment_ctime":1620871765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620871765","product_id":100033601,"comment_content":"老师我有个疑问 编译器生的机器码是每个渲染进程都会单独存储嘛 还是存储在浏览器进程 会生成重复的机器码吗","like_count":0},{"had_liked":false,"id":290767,"user_name":"阎晓静","can_delete":false,"product_type":"c1","uid":1395937,"ip_address":"","ucode":"55DA133B3B5E4E","user_header":"https://static001.geekbang.org/account/avatar/00/15/4c/e1/814431e9.jpg","comment_is_top":false,"comment_ctime":1619746551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619746551","product_id":100033601,"comment_content":"随着执行时间变长，被频繁执行的代码发现为热点代码，被编译器编译为了机器码","like_count":0},{"had_liked":false,"id":282127,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1615100044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615100044","product_id":100033601,"comment_content":"老师，我有一个疑问，机器码不是二进制码吗？但是文中的图中，机器码却是汇编语言呢？<br>","like_count":0},{"had_liked":false,"id":281554,"user_name":"XinYi💛","can_delete":false,"product_type":"c1","uid":2174116,"ip_address":"","ucode":"4AC0E31A62C25C","user_header":"https://static001.geekbang.org/account/avatar/00/21/2c/a4/b681fa30.jpg","comment_is_top":false,"comment_ctime":1614783648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614783648","product_id":100033601,"comment_content":"因为更多的字节码解释器解释，执行为机器码。下次读取字节码的时候有热点的字节码，就直接去读保存过的机器码。","like_count":0},{"had_liked":false,"id":276166,"user_name":"毛虫会飞","can_delete":false,"product_type":"c1","uid":2079378,"ip_address":"","ucode":"056A74DB751F3B","user_header":"https://static001.geekbang.org/account/avatar/00/1f/ba/92/15ea8204.jpg","comment_is_top":false,"comment_ctime":1611818810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611818810","product_id":100033601,"comment_content":"有个问题：文中有写“字节码需要通过解释器将其转换为机器码后才能执行”，但是我看老师在评论里又说“解释器是直接解释执行字节码”，所以，到底解释器有没有把字节码转换成机器码呢？","like_count":0},{"had_liked":false,"id":269669,"user_name":"蛋黄酱","can_delete":false,"product_type":"c1","uid":1050196,"ip_address":"","ucode":"2351562F282B68","user_header":"https://static001.geekbang.org/account/avatar/00/10/06/54/16bb64d0.jpg","comment_is_top":false,"comment_ctime":1608733559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608733559","product_id":100033601,"comment_content":"这样看起来不考虑内存大小的话，是不是Functional Programming很占优势？因为编译单位小，复用率高","like_count":0},{"had_liked":false,"id":264913,"user_name":"jianghuan","can_delete":false,"product_type":"c1","uid":1021317,"ip_address":"","ucode":"BC4B3BE0A431FE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/hP4XvwAqhicc1rZovhzLl9icG4FpMSBoNOK5KhuT9YPicVyx2IribuqFr4qxR66HfmYl5JNfrCHfk5D8g1anqxiaKjw/132","comment_is_top":false,"comment_ctime":1606706221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606706221","product_id":100033601,"comment_content":"reload刷新一个页面，v8需要重新编译这个页面的js么？","like_count":0},{"had_liked":false,"id":248430,"user_name":"Mister.Z","can_delete":false,"product_type":"c1","uid":1114220,"ip_address":"","ucode":"95153CE6B0EF7C","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/6c/f0d28c25.jpg","comment_is_top":false,"comment_ctime":1600160496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600160496","product_id":100033601,"comment_content":"收获良多，这也是为什么鼓励普及DRY原则的根本原因吧，效率决定一切！","like_count":0},{"had_liked":false,"id":229751,"user_name":"赛飞","can_delete":false,"product_type":"c1","uid":1372006,"ip_address":"","ucode":"189B7A3231B06C","user_header":"https://static001.geekbang.org/account/avatar/00/14/ef/66/dc3f4555.jpg","comment_is_top":false,"comment_ctime":1593137305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593137305","product_id":100033601,"comment_content":"执行时间越长，执行的效率就越高，但是占用的内存也会越大","like_count":0},{"had_liked":false,"id":225218,"user_name":"焦糖大瓜子","can_delete":false,"product_type":"c1","uid":1378319,"ip_address":"","ucode":"03E6DA621DFD5F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJxhkqxtWKQeYrYlVYphlicHXW5KmHAvibx6hmice4NTvmn60ZEfTpLp3480umVEquqPdMfwOnecj6Aw/132","comment_is_top":false,"comment_ctime":1591686187,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591686187","product_id":100033601,"comment_content":"“字节码就是介于 AST 和机器码之间的一种代码。但是与特定类型的机器码无关，字节码需要通过解释器将其转换为机器码后才能执行。“<br>这里的解释器是不是应为&quot;编译器&quot;？","like_count":0,"discussions":[{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287987,"discussion_content":"不， 就是解释器。解释器通常是图灵完备的抽象机，可以直接执行程序，即表达程序应该有的语义。自身可以编译到机器码的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593608634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225047,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1591624697,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1591624697","product_id":100033601,"comment_content":"V8 执行时间越久，执行效率越高?<br>是因为更多的热代码已经通过编译器从字节码转换为机器码了，下次执行的时候就不需要再通过解释器来逐条解释执行的，可以直接执行，所以效率高","like_count":0},{"had_liked":false,"id":224877,"user_name":"liur","can_delete":false,"product_type":"c1","uid":2019479,"ip_address":"","ucode":"0E1CE037C40141","user_header":"https://static001.geekbang.org/account/avatar/00/1e/d0/97/1497c201.jpg","comment_is_top":false,"comment_ctime":1591581650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591581650","product_id":100033601,"comment_content":"那越来越多的机器码被缓存起来了，岂不是又回到了老师开始说的内存问题了吗？","like_count":0},{"had_liked":false,"id":224664,"user_name":"Geek_41b41c","can_delete":false,"product_type":"c1","uid":1676855,"ip_address":"","ucode":"8F451136FF23FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/96/37/03d66049.jpg","comment_is_top":false,"comment_ctime":1591500407,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591500407","product_id":100033601,"comment_content":"您好老师，我有些地方不太明白：<br>在js源代码解析的过程之中，语法分析阶段生成执行上下文指的是全局的执行上下文吗？函数执行上下文是在解释器执行机器码过程中生成的吗？还是语法分析的过程中就已经生成了？如果是在语法分析的过程已经生成，那么调用栈也已经生成了吗？老师有空能解答一下吗？谢谢！！","like_count":0,"discussions":[{"author":{"id":2685899,"avatar":"https://static001.geekbang.org/account/avatar/00/28/fb/cb/c2ff6e72.jpg","nickname":"大掌柜","note":"","ucode":"BB6C9A0CA5ED34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401492,"discussion_content":"调用函数时候，才开始上下文","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633683065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219194,"user_name":"张萌","can_delete":false,"product_type":"c1","uid":1377299,"ip_address":"","ucode":"89C08DB3239BE5","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/13/84d35588.jpg","comment_is_top":false,"comment_ctime":1589964800,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589964800","product_id":100033601,"comment_content":"以后如果内存不是瓶颈了，是不是字节码这种技术就会被淘汰了","like_count":0,"discussions":[{"author":{"id":1566826,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e8/6a/6438c61b.jpg","nickname":"小、sen","note":"","ucode":"0FEB3465198330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338795,"discussion_content":"内存什么时候能不是瓶颈？你想下 无论做什么事情  都需要场地和空间吧  ","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609383415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217537,"user_name":"进击的前端er","can_delete":false,"product_type":"c1","uid":1506085,"ip_address":"","ucode":"9229B410F48B85","user_header":"https://static001.geekbang.org/account/avatar/00/16/fb/25/f6743e97.jpg","comment_is_top":false,"comment_ctime":1589528898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589528898","product_id":100033601,"comment_content":"关于思考题，热点代码越多，执行越快，也意味着内存占用越高","like_count":0},{"had_liked":false,"id":208749,"user_name":"李隆熙","can_delete":false,"product_type":"c1","uid":1373430,"ip_address":"","ucode":"162248F706F000","user_header":"https://static001.geekbang.org/account/avatar/00/14/f4/f6/6fc8caa9.jpg","comment_is_top":false,"comment_ctime":1587432367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587432367","product_id":100033601,"comment_content":"您好，请问如果不是热点代码 解析器执行后生成的字节码，应该也需要在某个阶段变成机器码的吧？请问这个阶段在什么时候发生，也是需要TurboFan介入吗","like_count":0},{"had_liked":false,"id":207139,"user_name":"Yu","can_delete":false,"product_type":"c1","uid":1378345,"ip_address":"","ucode":"1036F9AFED7A4B","user_header":"https://static001.geekbang.org/account/avatar/00/15/08/29/e0a19ed5.jpg","comment_is_top":false,"comment_ctime":1587013621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587013621","product_id":100033601,"comment_content":"如果我写了一个&lt;script&gt;标签，引擎是把这个标签里面所有的代码全部都解析成 AST，然后再解释成字节码执行嘛？还是说，它是一遍解析成AST一遍执行的呢？<br>另外，如果我有两个 script 标签呢？","like_count":0},{"had_liked":false,"id":204929,"user_name":"HoSalt","can_delete":false,"product_type":"c1","uid":1156074,"ip_address":"","ucode":"610B03E2A002D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","comment_is_top":false,"comment_ctime":1586493635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586493635","product_id":100033601,"comment_content":"反优化是什么？什么情况下会触发反优化？","like_count":0},{"had_liked":false,"id":204913,"user_name":"HoSalt","can_delete":false,"product_type":"c1","uid":1156074,"ip_address":"","ucode":"610B03E2A002D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","comment_is_top":false,"comment_ctime":1586489833,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586489833","product_id":100033601,"comment_content":"编译型语言 解释性语言<br>动态语言 静态语言<br>弱类型语言 强类型语言<br>有点晕","like_count":0},{"had_liked":false,"id":203376,"user_name":"KaKaKa","can_delete":false,"product_type":"c1","uid":1480732,"ip_address":"","ucode":"07D1980A71F321","user_header":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","comment_is_top":false,"comment_ctime":1586181133,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1586181133","product_id":100033601,"comment_content":"“解释器 Ignition 在解释执行字节码的同时，收集代码信息，当它发现某一部分代码变热了之后，TurboFan 编译器便闪亮登场“ 文章中这句话说解释字节码的同时，收集代码信息，但是 - 即时编译（JIT）技术 - 这张配图里面是先判断是否热点代码？<br>请问下：是先判断热点代码，还是说先用解释器去解释字节码，收集字节码信息，再判断是否热点代码？顺序是怎么样的，有了解的回复我一下~","like_count":0,"discussions":[{"author":{"id":1196864,"avatar":"https://static001.geekbang.org/account/avatar/00/12/43/40/e7ef18de.jpg","nickname":"嘉一","note":"","ucode":"8D16BD0B75B019","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263039,"discussion_content":"配图里面应该少了一个部分：“解释器 Ignition 在解释执行字节码的同时，收集代码信息，当它发现某一部分代码变热了之后，会给这段代码打上hot的标签”，然后等下次执行流程开始的时候就会先判断这段代码是否是热点代码，然后按照配图里面的流程走；这是我个人的综合理解，不知是否正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589165947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1698735,"avatar":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","nickname":"JC.彦","note":"","ucode":"E87C1420B140F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240505,"discussion_content":"先是解释器生成AST，然后解释器再解释执行字节码；当一段代码重复执行多次就会被判断为热点代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587369842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192389,"user_name":"墨灵","can_delete":false,"product_type":"c1","uid":1409700,"ip_address":"","ucode":"185D70CA20BEEE","user_header":"https://static001.geekbang.org/account/avatar/00/15/82/a4/a92c6eca.jpg","comment_is_top":false,"comment_ctime":1584848466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584848466","product_id":100033601,"comment_content":"看了老师的图解，有种豁然开朗的感觉，貌似在很多地方都用到AST，ESLint这些库应该先把一个文本解析成AST，然后对树的节点进行某些处理吧？","like_count":0},{"had_liked":false,"id":172644,"user_name":"风铃🎐","can_delete":false,"product_type":"c1","uid":1375452,"ip_address":"","ucode":"F94C12CF9D70D4","user_header":"https://static001.geekbang.org/account/avatar/00/14/fc/dc/739ebedd.jpg","comment_is_top":false,"comment_ctime":1579242761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579242761","product_id":100033601,"comment_content":"V8 执行时间越久，更多热点的字节码会转换为机器码，并把转换后的机器码保存起来，以备下次使用，而执行机器码的效率是非常高效的，所以执行效率越高。","like_count":0},{"had_liked":false,"id":171686,"user_name":"Tim","can_delete":false,"product_type":"c1","uid":1742972,"ip_address":"","ucode":"F51593465157E4","user_header":"https://static001.geekbang.org/account/avatar/00/1a/98/7c/07e6e7b7.jpg","comment_is_top":false,"comment_ctime":1578991968,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578991968","product_id":100033601,"comment_content":"感觉有点懵逼！<br>「解释器对字节码逐行解释执行」具体指什么呢？比如说我var了一个变量这样的语句，解释完是做了什么呢？","like_count":0,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222827,"discussion_content":"逐行解释并执行：相当于是将字节码一行一行转换成机器码，然后执行（看文章的图，应该是会先从字节码信息判断是否是热点代码，是的话则用编译器去生成机器码，并且保存下来，然后执行。具体怎么判断不知道）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586177353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167937,"user_name":"乃乎","can_delete":false,"product_type":"c1","uid":1393061,"ip_address":"","ucode":"03F587A06051AC","user_header":"https://static001.geekbang.org/account/avatar/00/15/41/a5/16c615cc.jpg","comment_is_top":false,"comment_ctime":1577966588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577966588","product_id":100033601,"comment_content":"想了解更多关于 JIT 的原理，可以看这个 https:&#47;&#47;hacks.mozilla.org&#47;2017&#47;02&#47;a-crash-course-in-just-in-time-jit-compilers&#47;","like_count":0},{"had_liked":false,"id":159031,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575517762,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1575517762","product_id":100033601,"comment_content":"机器码是cpu的运算器可以直接识别的吗？运算器内部是01010110101这样执行的吗","like_count":0,"discussions":[{"author":{"id":1253180,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/3c/70d30681.jpg","nickname":"EEEEEEEarly","note":"","ucode":"26B4EABB7B5890","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77785,"discussion_content":"建议先了解下指令集等基础","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575940541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159029,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575517685,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1575517685","product_id":100033601,"comment_content":"解释器的字节码和编译器的中间代码有什么区别？它们都是经过AST词意分析得到的。","like_count":0},{"had_liked":false,"id":159020,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575515959,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1575515959","product_id":100033601,"comment_content":"‘Babel 的工作原理就是先将 ES6 源码转换为 AST，然后再将 ES6 语法的 AST 转换为 ES5 语法的 AST，最后利用 ES5 的 AST 生成 JavaScript 源代码’，关于这句话，我怎么感觉babel应该是先将ES6转成ES5,再将ES5转换成AST。","like_count":0,"discussions":[{"author":{"id":1409700,"avatar":"https://static001.geekbang.org/account/avatar/00/15/82/a4/a92c6eca.jpg","nickname":"墨灵","note":"","ucode":"185D70CA20BEEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211415,"discussion_content":"这理解是有误的，如果是一个很大的js文件，如何把es6转es5？如果是一条语句，你就知道用什么规则翻译，AST就是把一个很大的js文件解析成一条条语句，然后通过polyfill翻译成es5，再组装成一个文件。之后的ES5文件编译，又是另一个AST了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584848955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156661,"user_name":"Bazinga","can_delete":false,"product_type":"c1","uid":1542274,"ip_address":"","ucode":"477DBE965CEA21","user_header":"https://static001.geekbang.org/account/avatar/00/17/88/82/b789613e.jpg","comment_is_top":false,"comment_ctime":1574932620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574932620","product_id":100033601,"comment_content":"字节码被解释执行会变成机器码吗？没看明白","like_count":0},{"had_liked":false,"id":142907,"user_name":"donglin","can_delete":false,"product_type":"c1","uid":1214957,"ip_address":"","ucode":"F77AAA841807D4","user_header":"","comment_is_top":false,"comment_ctime":1571579788,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571579788","product_id":100033601,"comment_content":"iOS系统是不是禁止了即时编译(JIT)技术？","like_count":0},{"had_liked":false,"id":139788,"user_name":"文蔺","can_delete":false,"product_type":"c1","uid":1067501,"ip_address":"","ucode":"B09E03A05553BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/ed/d8776b9c.jpg","comment_is_top":false,"comment_ctime":1570725883,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1570725883","product_id":100033601,"comment_content":"希望老师能聊聊 deoptimization 😄","like_count":0},{"had_liked":false,"id":139125,"user_name":"ziv","can_delete":false,"product_type":"c1","uid":1379769,"ip_address":"","ucode":"F9EFB62031C05F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqp2Vu0lVcnCibNeYiavf0Diap4tKAfJy7A1pkOukIs0ibuicG8Y80WTPxXkjJTcHLNnsS9ruVW3o9Wr8A/132","comment_is_top":false,"comment_ctime":1570549828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570549828","product_id":100033601,"comment_content":"老师，请问如何查看一段js代码的字节码和机器码","like_count":0},{"had_liked":false,"id":138622,"user_name":"Louis Hu","can_delete":false,"product_type":"c1","uid":1627255,"ip_address":"","ucode":"289E322B45B5EE","user_header":"https://static001.geekbang.org/account/avatar/00/18/d4/77/6d82909e.jpg","comment_is_top":false,"comment_ctime":1570374115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570374115","product_id":100033601,"comment_content":"请问老师：<br>浏览器开发如何确定一段JavaScript代码是选择内联的还是外部引用的？<br>","like_count":0},{"had_liked":false,"id":136266,"user_name":"Geek_Leon","can_delete":false,"product_type":"c1","uid":1503246,"ip_address":"","ucode":"EAC6BC158C47AF","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83erLlItp9mBJIDaKMFhJ8W183vH1ib7PuHCoZdW26qIg4ndvSMH6L76NksQcvbnvkayzJEDyq4ptQPg/132","comment_is_top":false,"comment_ctime":1569400205,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1569400205","product_id":100033601,"comment_content":"老师，想问一下，源代码通过词法分析和语法分析转换为AST，那这个过程属于一个解释过程还是一个编译过程？然后AST通过解释器，解释出字节码，还需要对字节码进行逐行解释执行成机器码？","like_count":0,"discussions":[{"author":{"id":1672247,"avatar":"https://static001.geekbang.org/account/avatar/00/19/84/37/9c4dd979.jpg","nickname":"24601","note":"","ucode":"F6F0652D12D882","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22769,"discussion_content":"1、“对于编译器或者解释器来说，它们可以理解的就是 AST 了。所以无论你使用的是解释型语言还是编译型语言，在编译过程中，它们都会生成一个 AST。这和渲染引擎将 HTML 格式文件转换为计算机可以理解的 DOM 树的情况类似。”。因此，转换为AST的过程，既不是编译器也不是解释器执行的。\n2、“这段代码经过javascript-ast站点处理后，生成的 AST 结构如下：”。因此，这个过程是由javascript-ast处理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569679022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1503246,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83erLlItp9mBJIDaKMFhJ8W183vH1ib7PuHCoZdW26qIg4ndvSMH6L76NksQcvbnvkayzJEDyq4ptQPg/132","nickname":"Geek_Leon","note":"","ucode":"EAC6BC158C47AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1672247,"avatar":"https://static001.geekbang.org/account/avatar/00/19/84/37/9c4dd979.jpg","nickname":"24601","note":"","ucode":"F6F0652D12D882","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25278,"discussion_content":"多谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570495861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22769,"ip_address":""},"score":25278,"extra":""}]}]},{"had_liked":false,"id":133437,"user_name":"Geek_3afa11","can_delete":false,"product_type":"c1","uid":1636315,"ip_address":"","ucode":"1104E8DA3DE3DE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiamxicsicau11JYs1e2zuxia1rw9Yeeozfjh64rRib6OXnOrWSibLveibiarvrFiaDbybAYWicgibCy153E10Q/132","comment_is_top":false,"comment_ctime":1568561267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568561267","product_id":100033601,"comment_content":"减少 JavaScript 文件的容量，因为更小的文件会提升下载速度，并且占用更低的内存。<br><br>占用更低的内存是因为可以利用比较小的内存空间，而不用试用一大片连续的内存空间吗？","like_count":0},{"had_liked":false,"id":133435,"user_name":"Geek_3afa11","can_delete":false,"product_type":"c1","uid":1636315,"ip_address":"","ucode":"1104E8DA3DE3DE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiamxicsicau11JYs1e2zuxia1rw9Yeeozfjh64rRib6OXnOrWSibLveibiarvrFiaDbybAYWicgibCy153E10Q/132","comment_is_top":false,"comment_ctime":1568561167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568561167","product_id":100033601,"comment_content":"提升单次脚本的执行速度，避免 JavaScript 的长任务霸占主线程，这样可以使得页面快速响应交互；<br><br>现在可以起到这个作用的技术比较火的有哪些呢","like_count":0},{"had_liked":false,"id":132780,"user_name":"AICC","can_delete":false,"product_type":"c1","uid":1020746,"ip_address":"","ucode":"C1D18B1E8B2DCE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/4a/de82f373.jpg","comment_is_top":false,"comment_ctime":1568218657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568218657","product_id":100033601,"comment_content":"执行时间越久，越多的代码从字节码优化为机器码，执行效率更高了，但是系统内存占用也更多了","like_count":0},{"had_liked":false,"id":131867,"user_name":"易儿易","can_delete":false,"product_type":"c1","uid":1242864,"ip_address":"","ucode":"B15D1031CA841E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLcWH3mSPmhjrs1aGL4b3TqI7xDqWWibM4nYFrRlp0z7FNSWaJz0mqovrgIA7ibmrPt8zRScSfRaqQ/132","comment_is_top":false,"comment_ctime":1567943617,"is_pvip":false,"replies":[{"id":"50404","content":"赞，本质的知识框架其实都一样，搭好了框架其它知识也就融会贯通","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567984139,"ip_address":"","comment_id":131867,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567943617","product_id":100033601,"comment_content":"知识的关联性让我在本节内重温了另外两个专栏的内容，JAVA核心技术专栏的JIT以及编译原理之美专栏的编译过程……底层基础知识的重要性真的不能忽视……之前我认识不清前端和后端，现在通过这几章的学习逐渐清晰了一些，看到了区别亦看到了相同点……","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466653,"discussion_content":"赞，本质的知识框架其实都一样，搭好了框架其它知识也就融会贯通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567984139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131657,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1567837753,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1567837753","product_id":100033601,"comment_content":"对于解释器，是不是每一种解释器都会对应一种字节码文件的格式，还是字节码文件的格式有统一的标准的，不同的解释器可以解释执行同一份字节码文件的？","like_count":0},{"had_liked":false,"id":131652,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1567837027,"is_pvip":true,"discussion_count":1,"race_medal":1,"score":"1567837027","product_id":100033601,"comment_content":"对于 JS 的性能优化方案：隐藏类和内敛缓存等这些技术，V8现在还在使用吗？","like_count":0,"discussions":[{"author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8352,"discussion_content":"肯定在用的，只是大部分我们不需要关注。react 里就有大量针对隐藏类的 优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567936771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131458,"user_name":"tick","can_delete":false,"product_type":"c1","uid":1106123,"ip_address":"","ucode":"D2C864306C06CB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","comment_is_top":false,"comment_ctime":1567757857,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1567757857","product_id":100033601,"comment_content":"字节码逐条解释执行变成机器码，这个怎么理解呀？（V8 执行一段代码流程图）","like_count":0,"discussions":[{"author":{"id":1656335,"avatar":"https://static001.geekbang.org/account/avatar/00/19/46/0f/fe1e47d2.jpg","nickname":"黄玄Hux","note":"","ucode":"CDD53456D8B20A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8161,"discussion_content":"因为这里是不准确的。解释器通常是图灵完备的抽象机，可以直接执行程序，即表达程序应该有的语义。解释器当然自身可以是编译到机器码的，但这里的配图是有歧义的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1567798782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543091,"discussion_content":"应该是直接逐行解释成得到结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640947103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131273,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1567688099,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567688099","product_id":100033601,"comment_content":"V8执行时间越久，越容易发现热点代码，执行转换为机器码的代码，自然执行效率会越高。<br><br>另外最近看之前文章想到一个问题，有些迷惑：<br>渲染进程解析html结构时候，发现<br>```<br><br>&lt;div id=&#39;main&#39;&gt;<br>&lt;&#47;div&gt;<br>&lt;script&gt;<br>let element1 = document.createElement(&#39;script&#39;)<br>element1.src = &#39;&#47;xxx.js&#39;<br>let element2 = document.createElement(&#39;div&#39;)<br>element2.style = &#39;height:50px&#39;<br>&#47;&#47; 将element1 和 element2 塞到div的前面， <br>&#47;&#47; 现在浏览器是停止解析，等着xxx.js 下载执行完 在解析吗？element2引起页面重排的时候 渲染进程进行解析dom吗<br> &lt;script&gt;<br><br>```<br><br><br>今日总结<br>要想理解V8必须了解几个基本概念，编译器compiler、解释器interpreter、抽象语法树AST、字节码byteCode、即时编译器JIT等。V8执行一段代码既用到解释器ignition也用到编译器turbofan。执行过程大致分为下面下面几个步骤：1 生成语法树和执行上下文；2 生成字节码，ignition根据AST生成字节码并解释执行字节码；3 执行代码，发现hotspot 通过turbofan转化为机器码，类似于JIT。","like_count":0,"discussions":[{"author":{"id":1698735,"avatar":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","nickname":"JC.彦","note":"","ucode":"E87C1420B140F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240441,"discussion_content":"页面重拍渲染进程是会解析DOM的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587364074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131253,"user_name":"林展翔","can_delete":false,"product_type":"c1","uid":1254011,"ip_address":"","ucode":"F1EA834AB9E758","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/7b/f8736786.jpg","comment_is_top":false,"comment_ctime":1567680874,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567680874","product_id":100033601,"comment_content":"通过老师的文章, 受益匪浅, 不过仍然有几个问题想请教下老师:<br>1. 在第 2 点中生成字节码, 使用了 ignition 解释器. 在运行过程中, 无需优化情况下还是会经过 ignition 解释器. 是否可以认为, 在生成字节码后, ignition 解释器还负责进行 字节码 到 机器码的转化工作.<br>2. 逐条解释并执行的意思是 逐条将字节码装换成机器码 并执行吗?<br>3. 通过老师的文章, 我对正常的 js 运行流程有了很深的了解. 但是, 异常情况下, 也是我们经常会遇到的, 老师能否为我们讲解下, 运行中出现异常, v8 引擎会如何进行处理.","like_count":0,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222533,"discussion_content":"1.解释器负责生成字节码，解释执行字节码的功能\n2.逐行解释执行：对字节码一行行转换成机器码，转换一行就执行一行（不保存，如果是热点代码，会使用编译器对字节码进行转换并执行，而且会保存起来）\n3.有异常，语法异常则在 ast 转换过程会报错，运行异常则在解释过程会报错（具体它是怎么去判断的我就不知道了）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586154285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131212,"user_name":"李艺轩","can_delete":false,"product_type":"c1","uid":1375756,"ip_address":"","ucode":"EF387413327B1D","user_header":"https://static001.geekbang.org/account/avatar/00/14/fe/0c/f9cb1af4.jpg","comment_is_top":false,"comment_ctime":1567672252,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567672252","product_id":100033601,"comment_content":"【单次脚本的执行时间】和【JavaScript 执行效率】<br>这两个概念有什么区别呢？","like_count":0},{"had_liked":false,"id":131190,"user_name":"肥嘟嘟左卫门","can_delete":false,"product_type":"c1","uid":1358889,"ip_address":"","ucode":"BA6D8E04C6B2CE","user_header":"https://static001.geekbang.org/account/avatar/00/14/bc/29/c248bfd1.jpg","comment_is_top":false,"comment_ctime":1567666946,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1567666946","product_id":100033601,"comment_content":"字节码和机器码存放的位置是不是不一样啊？既然字节码最后还是要转化为机器码，为什么说有了字节码之后，就能解决内存占用问题呢？","like_count":0,"discussions":[{"author":{"id":1254011,"avatar":"https://static001.geekbang.org/account/avatar/00/13/22/7b/f8736786.jpg","nickname":"林展翔","note":"","ucode":"F1EA834AB9E758","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7829,"discussion_content":"个人观点:\n        应该是, 字节码不是一股脑的都生产机器码, 就按照老师说的那样子, 是逐条解释成机器码. 用完的机器码, 可以先进行释放, 从而减少了峰值内存. 不知道对不对.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567686486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254011,"avatar":"https://static001.geekbang.org/account/avatar/00/13/22/7b/f8736786.jpg","nickname":"林展翔","note":"","ucode":"F1EA834AB9E758","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222535,"discussion_content":"对，我也是这样想，一次性将所有字节码编译成机器码再执行，你肯定要保存起来对吧？那占用的内存就会比较大，所以一行一行编译再执行，执行完的可以清除了（热点代码除外）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586154449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7829,"ip_address":""},"score":222535,"extra":""}]}]}]}