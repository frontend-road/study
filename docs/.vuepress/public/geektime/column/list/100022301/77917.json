{"id":77917,"title":"12 | 测试也是程序员的事吗？","content":"<p>你好，我是郑晔。</p><p>在“任务分解”这个模块，我准备从一个让我真正深刻理解了任务分解的主题开始，这个主题就是“测试”。</p><p>这是一个让程序员又爱有恨的主题，爱测试，因为它能让项目的质量有保证；恨测试，因为测试不好写。而实际上，很多人之所以写不好测试，主要是因为他不懂任务分解。</p><p>在上一个模块，我们提到了一些最佳实践，但都是从“以终为始”这个角度进行讲解的。这次，我准备换个讲法，用五讲的篇幅，完整地讲一下“开发者测试”，让你和我一起，重新认识这个你可能忽视的主题。</p><p>准备好了吗？我们先从让很多人疑惑的话题开始：程序员该写测试吗？</p><h2>谁要做测试？</h2><p>你是一个程序员，你当然知道为什么要测试，因为是我们开发的软件，我们得尽可能地保证它是对的，毕竟最基本的职业素养是要有的。</p><p>但测试工作应该谁来做，这是一个很有趣的话题。很多人凭直觉想到的答案是，测试不就该是测试人员的事吗，这还用问？</p><p><strong>测试人员应该做测试，这是没错的，但是测试只是测试人员的事吗？</strong></p><p>事实上，作为程序员，你多半已经做了很多测试工作。比如，在提交代码之前，你肯定会把代码跑一遍，保证提交的基本功能是正确的，这就是最基本的测试。但通常，你并不把它当成测试，所以，你的直觉里面，测试是测试人员的事。</p><!-- [[[read_end]]] --><p>但我依然要强调，测试应该是程序员工作的一部分，为什么这么说呢？</p><p>我们不妨想想，测试人员能测的是什么？没错，他们只能站在系统外部做功能特性的测试。而一个软件是由它内部诸多模块组成的，测试人员只从外部保障正确性，所能达到的效果是有限的。</p><p>打个比方，你做一台机器，每个零部件都不保证正确性，却要让最后的结果正确，这实在是一个可笑的要求，但这却真实地发生在软件开发的过程中。</p><p>在软件开发中有一个重要的概念：<a href=\"http://www.agilemodeling.com/essays/costOfChange.htm\">软件变更成本，它会随着时间和开发阶段逐步增加。</a>也就是说我们要尽可能早地发现问题，修正问题，这样所消耗掉的成本才是最低的。</p><p>上一个模块讲“以终为始”，就是在强调尽早发现问题。能从需求上解决的问题，就不要到开发阶段。同样，在开发阶段能解决的问题，就不要留到测试阶段。</p><p>你可以想一下，是你在代码中发现错误改代码容易，还是测试了报了 bug，你再定位找问题方便。</p><p>更理想的情况是，质量保证是贯穿在软件开发全过程中，从需求开始的每一个环节，都将“测试”纳入考量，每个角色交付自己的工作成果时，都多问一句，你怎么保证交付物的质量。</p><p>需求人员要确定验收标准，开发人员则要交出自己的开发者测试。这是一个来自于精益原则的重要思想：内建质量（Build Quality In）。</p><p><strong>所以，对于每个程序员来说，只有在开发阶段把代码和测试都写好，才有资格说，自己交付的是高质量的代码。</strong></p><h2>自动化测试</h2><p>不同于传统测试人员只通过手工的方式进行验证，程序员这个群体做测试有个天然的优势：会写代码，这个优势可以让我们把测试自动化。</p><p>早期测试代码，最简单的方式是另外写一个程序入口，我初入职场的时候，也曾经这么做过，毕竟这是一种符合直觉的做法。不过，既然程序员有写测试的需求，如此反复出现的东西，就会有更好的自动化方案。于是开始测试框架出现了。</p><p>最早的测试框架起源是 Smalltalk。这是一门早期的面向对象程序设计语言，它有很多拥趸，很多今天流行的编程概念就来自于 Smalltalk，测试框架便是其中之一。</p><p>真正让测试框架广泛流行起来，要归功于 Kent Beck 和 Erich Gamma。Kent Beck 是极限编程的创始人，在软件工程领域大名鼎鼎，而 Erich Gamma 则是著名的《设计模式》一书的作者，很多人熟悉的 Visual Studio Code 也有他的重大贡献。</p><p>有一次，二人一起从苏黎世飞往亚特兰大参加 OOPLSA（Object-Oriented Programming, Systems, Languages &amp; Applications）大会，在航班上两个人结对编程写出了JUnit。从这个名字你便不难看出，它的目标是打造一个单元测试框架。</p><p>顺便说一下，如果你知道 Kent Beck 是个狂热的 Smalltalk 粉丝，写过 SUnit 测试框架，就不难理解这两个人为什么能在一次航班上就完成这样的力作。</p><p>JUnit 之后，测试框架的概念逐渐开始流行起来。如今的“程序世界”，测试框架已经成为行业标配，每个程序设计语言都有自己的测试框架，甚至不止一种，一些语言甚至把它放到了标准库里，行业里也用 XUnit 统称这些测试框架。</p><p><strong>这种测试框架最大的价值，是把自动化测试作为一种最佳实践引入到开发过程中，使得测试动作可以通过标准化的手段固定下来。</strong></p><h2>测试模型：蛋卷与金字塔</h2><p>在前面的讨论里，我们把测试分为人工测试和自动化测试。即便我们只关注自动化测试，也可以按照不同的层次进行划分：将测试分成关注最小程序模块的单元测试、将多个模块组合在一起的集成测试，将整个系统组合在一起的系统测试。</p><p>有人喜欢把验收测试也放到这个分类里。为了简化讨论，我们暂时忽略验收测试。</p><p>随之而来的一个问题是，我们应该写多少不同层次的测试呢？理论上固然是越多越好了，但实际上，做任何事都是有成本的，所以，人们必须有所取舍。根据不同测试的配比，也就有了不同的测试模型。</p><p>有一种直觉的做法是，既然越高层的测试覆盖面越广，那就多写高层测试，比如系统测试。</p><p>当然，有些情景高层的测试不容易覆盖到的，所以，还要有一些底层的测试，比如单元测试。在这种情况下，底层的测试只是作为高层测试的补充，而主力就是高层测试。这样就会形成下面这样一种测试模型：冰淇淋蛋卷。</p><p><img src=\"https://static001.geekbang.org/resource/image/68/5a/68032e09ba926c260f18c0f1a51f3d5a.jpg?wh=2284*1351\" alt=\"\"></p><p>听说过冰淇淋蛋卷测试模型的人并不多，它是一种费时费力的模型，要准备高层测试实在是太麻烦了。</p><p>之所以要在这里提及它，是因为虽然这个概念很多人没听说过，但是有不少团队的测试实际采用的就是这样一种模型，这也是很多团队觉得测试很麻烦却不明就里的原因。</p><p>接下来，要说说另一种测试模型，也是行业里的最佳实践：测试金字塔。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/39/833986a5a99d5fyy5e54abfaa213b239.jpg?wh=2284*1170\" alt=\"\"></p><p>Mike Cohn 在自己的著作<a href=\"http://book.douban.com/subject/5334585/\">《Succeeding with Agile》</a>提出了测试金字塔，但大多数人都是通过 <a href=\"http://martinfowler.com/bliki/TestPyramid.html\">Martin Fowler 的文章</a>知道的这个概念。</p><p>从图中我们不难看出，它几乎是冰淇淋蛋卷的反转，测试金字塔的重点就是越底层的测试应该写得越多。</p><p>想要理解测试金字塔成为行业最佳实践的缘由，我们需要理解不同层次测试的差异。<strong>越是底层的测试，牵扯到相关内容越少，而高层测试则涉及面更广。</strong></p><p>比如单元测试，它的关注点只有一个单元，而没有其它任何东西。所以，只要一个单元写好了，测试就是可以通过的；而集成测试则要把好几个单元组装到一起才能测试，测试通过的前提条件是，所有这些单元都写好了，这个周期就明显比单元测试要长；系统测试则要把整个系统的各个模块都连在一起，各种数据都准备好，才可能通过。</p><p>这个模块的主题是“任务分解”，我必须强调一点：<strong>小事反馈周期短，而大事反馈周期长。</strong>小事容易做好，而大事难度则大得多。所以，以这个标准来看，底层的测试才更容易写好。</p><p>另外，因为涉及到的模块过多，任何一个模块做了调整，都有可能破坏高层测试，所以，高层测试通常是相对比较脆弱的。</p><p>此外，在实际的工作中，有些高层测试会牵扯到外部系统，这样一来，复杂度又在不断地提升。</p><p>人们会本能地都会倾向于少做复杂的东西，所以，人们肯定不会倾向于多写高层测试，其结果必然是，高层测试的测试量不会太多，测试覆盖率无论如何都上不来。而且，一旦测试失败，因为牵扯的内容太多，定位起来也是非常麻烦的。</p><p>而反过来，将底层测试定义为测试主体，因为牵扯的内容少，更容易写，才有可能让团队得到更多的测试，而且一旦出现问题，也会更容易发现。</p><p><strong>所以，虽然冰淇淋蛋卷更符合直觉，但测试金字塔才是行业的最佳实践。</strong></p><h2>当测试金字塔遇到持续集成</h2><p>测试金字塔是一个重要实践的基础，它就是持续集成。当测试数量达到一定规模，测试运行的时间就会很长，我们可能无法在本地环境一次性运行所有测试。一般我们会选择在本地运行所有单元测试和集成测试，而把系统测试放在持续集成服务器上执行。</p><p>这个时候，底层测试的数量就成了关键，按照测试金字塔模型，底层测试数量会很多，测试可以覆盖主要的场景；而按照冰淇淋蛋卷模型，底层测试的数量则有限。</p><p>作为提交代码的防护网，测试数量多寡决定着得到反馈的早晚。所以，金字塔模型与持续集成天然就有着很好的配合。</p><p>需要特别注意的是，<strong>不是用单元测试框架写的测试就是单元测试。</strong>很多人用单元测试框架写的是集成测试或是系统测试。单元测试框架只是一个自动化测试的工具而已，并不是用来定义测试类型的。</p><p>在实际工作中，区分不同测试有很多种做法，比如，将不同的测试放到不同的目录下，或是给不同类型的测试一个统一的命名规范。</p><p>区分不同类型测试主要目的，主要是在不同的场景下，运行不同类型的测试。就像前面提到的做法是，在本地运行单元测试和集成测试，在持续集成服务器上运行系统测试。</p><h2>总结时刻</h2><p>测试是软件开发重要的组成部分，测试应该是软件开发团队中所有人的事，而不仅仅是测试人员的事。因为软件变更成本会随着时间和开发阶段逐步增加，能在早期解决的问题，就不要将它延后至下一个阶段。</p><p>在测试问题上，程序员有着天生的优势，会写代码，于是，程序员拥有了一个突出的强项，自动化测试。写测试应该是程序员工作完成的重要组成部分。</p><p>随着人们对于测试理解的加深，各种各样的测试都出现了，也开始有了测试的分类：单元测试、集成测试、系统测试等等。越在底层测试，成本越低，执行越快；越在高层测试，成本越高，执行越慢。</p><p>人的时间和精力是有限的，所以，人们开始思考不同的测试如何组合。在这个方面的最佳实践称之为测试金字塔，它强调的重点是，越底层的测试应该写得越多。只有按照测试金字塔的方式写测试，持续集成才能更好地发挥作用。</p><p>如果今天的内容你只能记住一件事，那请记住：<strong>多写单元测试。</strong></p><p>最后，我想请你分享一下，你的团队在写测试上遇到哪些困难呢？欢迎在留言区写下你的想法。</p><p>感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":63417,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1548348069,"is_pvip":true,"replies":[{"id":"22443","content":"我认同你的说法","user_name":"作者回复","comment_id":63417,"uid":"1258861","ip_address":"","utype":1,"ctime":1548374743,"user_name_real":"dreamhead"}],"discussion_count":3,"race_medal":0,"score":"276426255013","product_id":100022301,"comment_content":"我有个执念，不愿主动写测试代码的程序员，不太可能是优秀的程序员","like_count":65,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437577,"discussion_content":"我认同你的说法","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1548374743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587121,"discussion_content":"我也有这个执念，可是我自己就无法坚持下来。团队人员的职业素养，时间，个人的目的等等阻力很大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662803177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570613,"discussion_content":"大伙来定义下，看看自己心目中“优秀的程序员”是怎样的，有什么品质。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651835226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66992,"user_name":"Nemo","can_delete":false,"product_type":"c1","uid":1005931,"ip_address":"","ucode":"6349E21E063DDA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/6b/d5467acd.jpg","comment_is_top":false,"comment_ctime":1550051955,"is_pvip":false,"replies":[{"id":"23677","content":"好建议，我可以考虑加餐。","user_name":"作者回复","comment_id":66992,"uid":"1258861","ip_address":"","utype":1,"ctime":1550058138,"user_name_real":"dreamhead"}],"discussion_count":2,"race_medal":0,"score":"143283972723","product_id":100022301,"comment_content":"能不能手把手教一下如何写一个完整，优秀的单元测试？","like_count":34,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439004,"discussion_content":"好建议，我可以考虑加餐。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550058138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587122,"discussion_content":"我感觉这个任务是重要且紧急的事情","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662803207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63451,"user_name":"jacky","can_delete":false,"product_type":"c1","uid":1049177,"ip_address":"","ucode":"A0BD06E2ABF520","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/59/989f65c8.jpg","comment_is_top":false,"comment_ctime":1548377199,"is_pvip":false,"replies":[{"id":"22618","content":"还有一点是，知识，很多人不愿意写测试的原因是不会写测试。","user_name":"作者回复","comment_id":63451,"uid":"1258861","ip_address":"","utype":1,"ctime":1548633428,"user_name_real":"dreamhead"}],"discussion_count":3,"race_medal":0,"score":"100332625007","product_id":100022301,"comment_content":"团队认知，开发周期，软件和生命财产关系不大，是单元测试的拦路虎","like_count":23,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437590,"discussion_content":"还有一点是，知识，很多人不愿意写测试的原因是不会写测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548633428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388367,"discussion_content":"是呀。不知道单元测试怎么写比较好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628733838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1974876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUCiacuh59wMZAeeNRwLiaGaRMZHibF05IibXeiaZfjcFfkmTwJTmPszibXLAQkk2mMdx8chPjTs2yvpZg/132","nickname":"Sky1225","note":"","ucode":"6F428AF396D99D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387670,"discussion_content":"我就是不会写，也没找到这方面比较好的资料","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628334552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81315,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1553858109,"is_pvip":false,"replies":[{"id":"29497","content":"小病不治，会生大病的。","user_name":"作者回复","comment_id":81315,"uid":"1258861","ip_address":"","utype":1,"ctime":1553917784,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"61683400253","product_id":100022301,"comment_content":"最近深有感触 单元测试写的越多 越能反思自己的代码 内建质量也能一步步建立起来 多写单元测试真是会产生蜕变的","like_count":14,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445148,"discussion_content":"小病不治，会生大病的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553917784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70595,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1551145141,"is_pvip":false,"replies":[{"id":"25448","content":"1和2，本质上是一个问题。其实，很多人担心写测试会影响写代码，但实际上，写测试，尤其是单元会帮助写代码，否则，你用的手工测试或系统测试的方式来保证系统的正确性。如果你不花练习写测试，你永远学不会写测试，写测试在你看来就是浪费时间。<br><br>这背后其实还隐藏着另外一个问题，为什么会变化快？因为一方面，前期的工作做得少，这是我们前面讲的内容要解决的，另一方面，设计做的不好，变化都是大变化，设计不做好，那就到处是问题，这是我们后面要讲的内容。<br><br>3，国内公司在工程上做得都不够好，如果想看好榜样，可以看看国外的公司，比如，Google，它要求100%测试覆盖率。<br><br>","user_name":"作者回复","comment_id":70595,"uid":"1258861","ip_address":"","utype":1,"ctime":1551247599,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"57385719989","product_id":100022301,"comment_content":"老师我有几个疑问:1. 单元测试是不是也要随着业务流程的变化而要持续维护？2. 对于变动非常频繁的业务流程是不是可以不写单元测试？因为考虑到时间的问题。3. 所有的大公司重要的项目（例如淘宝，京东等平台）是不是都有严格的单元测试编写或者执行规范？谢谢老师啦。","like_count":14,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440717,"discussion_content":"1和2，本质上是一个问题。其实，很多人担心写测试会影响写代码，但实际上，写测试，尤其是单元会帮助写代码，否则，你用的手工测试或系统测试的方式来保证系统的正确性。如果你不花练习写测试，你永远学不会写测试，写测试在你看来就是浪费时间。\n\n这背后其实还隐藏着另外一个问题，为什么会变化快？因为一方面，前期的工作做得少，这是我们前面讲的内容要解决的，另一方面，设计做的不好，变化都是大变化，设计不做好，那就到处是问题，这是我们后面要讲的内容。\n\n3，国内公司在工程上做得都不够好，如果想看好榜样，可以看看国外的公司，比如，Google，它要求100%测试覆盖率。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551247599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63554,"user_name":"Johnsen ","can_delete":false,"product_type":"c1","uid":1263386,"ip_address":"","ucode":"4E2D830D27C32E","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/1a/8dda4988.jpg","comment_is_top":false,"comment_ctime":1548398065,"is_pvip":false,"replies":[{"id":"22613","content":"首先，迭代速度快慢与是否写测试没关系，取决于工作是否完成是前面提到的 DoD。其次，前端之所以能够在今天成为一个独立的项目，在于它有大量的逻辑需要写，如今 JavaScript 相关的测试框架已经发展得很完整了，就按照正常的方式去写测试就好了。","user_name":"作者回复","comment_id":63554,"uid":"1258861","ip_address":"","utype":1,"ctime":1548632845,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"48793038321","product_id":100022301,"comment_content":"像前端项目主要以UI为主，版本迭代速度又很快的情况下怎么进行单元测试的编写","like_count":12,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437633,"discussion_content":"首先，迭代速度快慢与是否写测试没关系，取决于工作是否完成是前面提到的 DoD。其次，前端之所以能够在今天成为一个独立的项目，在于它有大量的逻辑需要写，如今 JavaScript 相关的测试框架已经发展得很完整了，就按照正常的方式去写测试就好了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1548632845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224083,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1591270554,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"35951008922","product_id":100022301,"comment_content":"我之所以回来重读《10X程序员工作法》，一方面是因为新专栏的更新，另一方面就是在写单元测试的时候，发现自己不会任务分解，所以写不出来。<br><br>在我看来，程序员去写单元测试，而且尽可能的保持高的代码覆盖率（同时还有代码风格检查）都是不需要讨论的事情。从敏捷编程被介绍到国内，一直到现在，似乎也没有多少开发团队能够做到。不知道国外的情况怎么样？<br><br>看了文中提供的关于软件变更成本的链接，那四张图片，应该可以用来说服开发团队和领导。但是，有自驱力，愿意提高自己编程技艺的程序员可能没有那么多。<br><br>我对于测试驱动开发和单元测试都是认可的，但是一来是没有太多机会实践，二来就是真的不不会写。现在可能好一点，但是仍旧需要多练习。<br><br>准备重读 Kent Beck 的《解析极限编程》和《测试驱动开发》。","like_count":8},{"had_liked":false,"id":326752,"user_name":"学习","can_delete":false,"product_type":"c1","uid":1437425,"ip_address":"","ucode":"CDFB71E0D1508B","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/f1/16545faf.jpg","comment_is_top":false,"comment_ctime":1639661333,"is_pvip":false,"replies":[{"id":"119302","content":"为自己写测试，好棒！","user_name":"作者回复","comment_id":326752,"uid":"1258861","ip_address":"","utype":1,"ctime":1640251320,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"31704432405","product_id":100022301,"comment_content":"非常认同之前听到的一句话，单元测试不是为公司写的，而是为自己写的。<br>在公司都不写单元测试的情况，你写了，差距就产生了，你进步得越快，就能越早脱离不好的公司，至少我认为，单元测试都不愿意写的公司绝对不是好公司","like_count":7,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541087,"discussion_content":"为自己写测试，好棒！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640251320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65121,"user_name":"🌲树根🌲","can_delete":false,"product_type":"c1","uid":1159060,"ip_address":"","ucode":"1CB2271FB7872D","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/94/6949a55c.jpg","comment_is_top":false,"comment_ctime":1549069443,"is_pvip":false,"replies":[{"id":"23078","content":"很多人不知道质量问题是一环套一环累积起来的。","user_name":"作者回复","comment_id":65121,"uid":"1258861","ip_address":"","utype":1,"ctime":1549074150,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"31613840515","product_id":100022301,"comment_content":"我的想法可以在复杂度高，重要核心的模块先开始写单元测试。特别是公用、底层的，因为这些靠功能测试很难覆盖。<br><br>单元测试难以推行主要是没有碰到质量的痛点，通常都依靠测试工程师来保证质量。我们之前就在遇到过质量崩塌，倒逼着我们去做，以保证质量。","like_count":7,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438327,"discussion_content":"很多人不知道质量问题是一环套一环累积起来的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1549074150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64506,"user_name":"布衣骇客","can_delete":false,"product_type":"c1","uid":1256280,"ip_address":"","ucode":"5226B0F67090D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/58/11c05ccb.jpg","comment_is_top":false,"comment_ctime":1548813493,"is_pvip":false,"replies":[{"id":"22889","content":"坚持是蜕变的基础，加油！","user_name":"作者回复","comment_id":64506,"uid":"1258861","ip_address":"","utype":1,"ctime":1548861121,"user_name_real":"dreamhead"}],"discussion_count":2,"race_medal":0,"score":"27318617269","product_id":100022301,"comment_content":"从一个以前基本不写j测试代码的我，不过基本都有自动化测试以及测试人员，现在也开始写自己的代码的那部分测试，最开始的不情愿，到现在一直写，并且我会一直写下去，觉得这个是一种验证，每次看到自己写的代码再用自己写的测试通过之后信心满满呐","like_count":6,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438034,"discussion_content":"坚持是蜕变的基础，加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548861121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587124,"discussion_content":"实践出真知啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662803470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63726,"user_name":"肉墩儿快跑","can_delete":false,"product_type":"c1","uid":1388656,"ip_address":"","ucode":"C8AB21845DFEFC","user_header":"https://static001.geekbang.org/account/avatar/00/15/30/70/f9eab394.jpg","comment_is_top":false,"comment_ctime":1548476134,"is_pvip":false,"replies":[{"id":"22675","content":"经济学告诉我们，没有足够高的价钱。","user_name":"作者回复","comment_id":63726,"uid":"1258861","ip_address":"","utype":1,"ctime":1548683287,"user_name_real":"dreamhead"}],"discussion_count":2,"race_medal":0,"score":"23023312614","product_id":100022301,"comment_content":"看绩效了，只要价钱足够高，就能保证了","like_count":5,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437695,"discussion_content":"经济学告诉我们，没有足够高的价钱。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548683287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587125,"discussion_content":"一针见血","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662803497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104331,"user_name":"wesleydeng","can_delete":false,"product_type":"c1","uid":1061385,"ip_address":"","ucode":"EC9204CEDDAF8D","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/09/669e21db.jpg","comment_is_top":false,"comment_ctime":1560733412,"is_pvip":false,"replies":[{"id":"37936","content":"首先，涉及到Spring启动，这是集成测试，不是单元测试。<br>其次，Spring提供了数据库的测试方案，测试之后，可以回滚，测试之间彼此不影响。用spring和test作为关键字可以搜到。<br>再次，我个人推荐使用Spring Data，自己少写数据库逻辑。","user_name":"作者回复","comment_id":104331,"uid":"1258861","ip_address":"","utype":1,"ctime":1560857896,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"18740602596","product_id":100022301,"comment_content":"现在单元测试有很多涉及到资源（比如db）的测试，这种情况下往往有依赖spring，导致了两个问题:<br>1.spring启动慢<br>2.dao测试不能跨环境，导致竟然因为有dao用了junit，不方便批量运行<br>junit这两个问题怎么破？","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454229,"discussion_content":"首先，涉及到Spring启动，这是集成测试，不是单元测试。\n其次，Spring提供了数据库的测试方案，测试之后，可以回滚，测试之间彼此不影响。用spring和test作为关键字可以搜到。\n再次，我个人推荐使用Spring Data，自己少写数据库逻辑。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1560857896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74675,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1552279034,"is_pvip":false,"replies":[{"id":"27348","content":"耦合是肯定的","user_name":"作者回复","comment_id":74675,"uid":"1258861","ip_address":"","utype":1,"ctime":1552351719,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"18732148218","product_id":100022301,"comment_content":"单元测试不好写 基本可以断定业务代码和通用代码纠结在一起了 需要重构<br>","like_count":5,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442647,"discussion_content":"耦合是肯定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552351719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64981,"user_name":"奕超","can_delete":false,"product_type":"c1","uid":1040045,"ip_address":"","ucode":"447069B3357999","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/ad/864516e4.jpg","comment_is_top":false,"comment_ctime":1548991036,"is_pvip":false,"replies":[{"id":"23048","content":"项目永远很紧，时间永远不够，你打算永远这样吗？","user_name":"作者回复","comment_id":64981,"uid":"1258861","ip_address":"","utype":1,"ctime":1549023434,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"18728860220","product_id":100022301,"comment_content":"实际情况是：很多时候，项目时间很紧，经常会提测后，再补，或者直接code review，测试就不写了；","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438260,"discussion_content":"项目永远很紧，时间永远不够，你打算永远这样吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549023434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63663,"user_name":"草原上的奔跑","can_delete":false,"product_type":"c1","uid":1120348,"ip_address":"","ucode":"D69C617F767736","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/5c/1a58e8f6.jpg","comment_is_top":false,"comment_ctime":1548455145,"is_pvip":false,"replies":[{"id":"22803","content":"很多不喜欢写测试的真实原因是，不会写。他们先要知道写测试是怎么回事，可以把我这个系列学完之后，分享给他们。","user_name":"作者回复","comment_id":63663,"uid":"1258861","ip_address":"","utype":1,"ctime":1548767124,"user_name_real":"dreamhead"}],"discussion_count":2,"race_medal":0,"score":"18728324329","product_id":100022301,"comment_content":"作为一个程序员，怎么保证自己写出来的程序是好的，答案是写测试，只有自己通过了单元测试、集成测试、系统测试，那么提测的时候我们才会有底气，而不是时刻准备着测试出问题去改。但是，很不幸的是，团队内部成员没有写测试的意识，让他们写，以不会写、时间不够为借口，就是不写，不知道郑老师对这种情况有没有好的解决办法。","like_count":5,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437676,"discussion_content":"很多不喜欢写测试的真实原因是，不会写。他们先要知道写测试是怎么回事，可以把我这个系列学完之后，分享给他们。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548767124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587126,"discussion_content":"说到底，不会写单元测试所有问题的关键。如果写单元测试和写helloworld一样简单，自然而然单元测试就不是问题了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662803681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292562,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1620877816,"is_pvip":false,"replies":[{"id":"106003","content":"加油！","user_name":"作者回复","comment_id":292562,"uid":"1258861","ip_address":"","utype":1,"ctime":1620986770,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"14505779704","product_id":100022301,"comment_content":"把写单元测试成为一种习惯…….","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519877,"discussion_content":"加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620986770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73788,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1552001901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14436903789","product_id":100022301,"comment_content":"多写基于方法级别的单元测试","like_count":3},{"had_liked":false,"id":63901,"user_name":"巫山老妖","can_delete":false,"product_type":"c1","uid":1056037,"ip_address":"","ucode":"B35E2CF1B3B04E","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/25/c4cc1e9f.jpg","comment_is_top":false,"comment_ctime":1548587954,"is_pvip":true,"replies":[{"id":"22612","content":"优秀程序员总是少数的，会写测试就已经上了一级台阶，能在写代码之前思考测试，就会再上一级台阶。","user_name":"作者回复","comment_id":63901,"uid":"1258861","ip_address":"","utype":1,"ctime":1548632599,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":3,"score":"14433489842","product_id":100022301,"comment_content":"测试没有银弹，主要看大家对测试这件事情的认知是否一致，现在都在推崇测试左移，尽可能玩发现问题，这就对程序员提出更高的要求。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437756,"discussion_content":"优秀程序员总是少数的，会写测试就已经上了一级台阶，能在写代码之前思考测试，就会再上一级台阶。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548632599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63615,"user_name":"行与修","can_delete":false,"product_type":"c1","uid":1241842,"ip_address":"","ucode":"11F21B663EF6D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/f2/2a9a6e9a.jpg","comment_is_top":false,"comment_ctime":1548416973,"is_pvip":false,"replies":[{"id":"22498","content":"说得有道理，不过，在接下来的几篇，我们先把关于测试的理念梳理顺了，知道问题出在哪，以后才好进行改进。","user_name":"作者回复","comment_id":63615,"uid":"1258861","ip_address":"","utype":1,"ctime":1548424508,"user_name_real":"dreamhead"}],"discussion_count":2,"race_medal":0,"score":"14433318861","product_id":100022301,"comment_content":"团队开发人员的编程功力不够，即使想写单元测试也是奢望。那种前后台代码不分，用着先进的设计模式但写着落后方式实现的代码的，一旦开始了单元测试，估计大部分时间不是在实现上而是在频繁修改单元测试代码上了。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437654,"discussion_content":"说得有道理，不过，在接下来的几篇，我们先把关于测试的理念梳理顺了，知道问题出在哪，以后才好进行改进。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548424508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587128,"discussion_content":"国内公司的现状啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662803730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264809,"user_name":"Better me","can_delete":false,"product_type":"c1","uid":1261959,"ip_address":"","ucode":"CADF08D357489A","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","comment_is_top":false,"comment_ctime":1606658307,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10196592899","product_id":100022301,"comment_content":"从高内聚低耦合的设计角度来理解测试金字塔：<br>单元测试更符合高内聚低耦合，一般是单个方法<br>服务测试一般是多个方法的组合<br>UI测试一般是多个服务功能的组合<br>系统的耦合强度越来越大，对于问题的定位也越来越难","like_count":2},{"had_liked":false,"id":225478,"user_name":"蓝士钦","can_delete":false,"product_type":"c1","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1591763514,"is_pvip":false,"replies":[{"id":"83849","content":"你说得很对！但是，程序员都太习惯于写代码了，而不习惯于写测试和文档。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592436967,"ip_address":"","comment_id":225478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10181698106","product_id":100022301,"comment_content":"单元测试确实很有用，首先要保证在设计上方法粒度足够细，在造边界数据的时候也能让我们从更多的情况考虑问题。就算需求变动，变动后再运行一遍单元测试就能很快的排查问题。<br>遇到的困难是，很多场景下我们更多的是接手祖传的代码，一个方法里面写了太多逻辑，导致单元测试不好写。所以补单元测试就成了一种常态，而补的时候就需要重构代码，有的时候因为不理解某个逻辑的含义导致不好重构，所以僵持住了。我觉得一个好的项目应该有足够清晰的设计文档，让接手的人能够更加快速准确的分析出项目的模型和接口，如果没有，那么重构的人应该规范设计，让人能见代码知其意。","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497860,"discussion_content":"你说得很对！但是，程序员都太习惯于写代码了，而不习惯于写测试和文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592436967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71813,"user_name":"zapup","can_delete":false,"product_type":"c1","uid":1397351,"ip_address":"","ucode":"388D6BB5D7B137","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/67/fcba0967.jpg","comment_is_top":false,"comment_ctime":1551440923,"is_pvip":false,"replies":[{"id":"26017","content":"是的，良好的设计会让测试更好写。","user_name":"作者回复","user_name_real":"dreamhead","uid":"1258861","ctime":1551452116,"ip_address":"","comment_id":71813,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141375515","product_id":100022301,"comment_content":"服务划分与编排做不好的、搞不清什么方法应该private&#47;什么方法应该public的程序员，也会害怕写单元测试：不知道应该在哪切这一刀来看问题。","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441341,"discussion_content":"是的，良好的设计会让测试更好写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551452116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342528,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1650327740,"is_pvip":false,"replies":[{"id":"125152","content":"可以去看我的另一个专栏《程序员的测试课》","user_name":"作者回复","user_name_real":"编辑","uid":"1258861","ctime":1650351063,"ip_address":"","comment_id":342528,"utype":1}],"discussion_count":2,"race_medal":4,"score":"5945295036","product_id":100022301,"comment_content":"老师，有个问题想请教你。我现在一个小公司里做java开发，用的是spring boot那一套技术栈，公司只有5，6个java开发，平时开发也都没有写什么单元测试和集成测试，公司也没要求，junit测试框架也没用过。看了您的专栏，测试确实很有用也很重要，我也想学着写测试，但是因为没有经验，不知从何下手。老师能不能传授一些经验呢？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564901,"discussion_content":"可以去看我的另一个专栏《程序员的测试课》","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650351064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2550743,"avatar":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","nickname":"if...else...","note":"","ucode":"D0565908C99695","race_medal":4,"user_type":1,"is_pvip":false},"reply_author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":564943,"discussion_content":"好的，看完这个专栏我会去了解一下您推荐的专栏。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650357349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":564901,"ip_address":""},"score":564943,"extra":""}]}]},{"had_liked":false,"id":341825,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1649849147,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"5944816443","product_id":100022301,"comment_content":"冰激凌蛋卷模型和测试金字塔模型。最佳实践:测试金字塔模型。","like_count":1},{"had_liked":false,"id":292639,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1004462,"ip_address":"","ucode":"8F7DE6E7B3D74F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/ae/a08024b2.jpg","comment_is_top":false,"comment_ctime":1620908968,"is_pvip":false,"replies":[{"id":"106001","content":"是的，难点在于设计。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1620986690,"ip_address":"","comment_id":292639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5915876264","product_id":100022301,"comment_content":"我写单元测试常常犯的一个错误是步子跨得太大，写着写着就把一个单元测试给写成功能测试了，虽然遵循「红-绿」法则，但有时还是按耐不住自己，我觉得可能要像一种习惯一样培养自己写单元测试。<br><br>虽然说写单元测试与设计是两个不同的关注点，但我觉得从「以终为始」的角度来看，如果不加认真设计，一堆设计不良的测试，真的可能会驱动开发出设计不良的代码来。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519900,"discussion_content":"是的，难点在于设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620986690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271777,"user_name":"牛掰的斐","can_delete":false,"product_type":"c1","uid":1337842,"ip_address":"","ucode":"A0265CCE3F4FC0","user_header":"https://static001.geekbang.org/account/avatar/00/14/69/f2/b17d73ff.jpg","comment_is_top":false,"comment_ctime":1609807303,"is_pvip":false,"replies":[{"id":"98825","content":"很好的总结和补充！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1610197948,"ip_address":"","comment_id":271777,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904774599","product_id":100022301,"comment_content":"测试只能站在系统的外部进行测试，而系统外部有多个模块，测试只能做到外部系统功能可用，效果有限，没法验证各个模块的正确性。因此程序员的单元测试是非常有必要的。比如有次功能测试正常，但在单元测试时发现某个单元有问题，仔细观察发现是该模块编码有问题没有引入到整个系统中，但整体的功能测试没有覆盖到导致。这种情况下，单元测试更容易发现问题，功能测试容易覆盖不全。<br><br><br><br><br>将测试分成关注最小程序模块的单元测试、将多个模块组合在一起的集成测试，将整个系统组合在一起的系统测试。<br><br><br>通常测试模型也有：冰激凌蛋卷模式和金字塔模式<br><br><br>相较于冰激凌蛋卷模式，金字塔模式要求单元测试多，集成测试次之，系统测试最少。<br><br><br>这样做的好处在于：<br><br><br>1. 单测依赖少，容易书写，早发现问题早修复<br>2. 系统测试相较于单元测试更脆弱，需要更大精力去覆盖所有场景，且易变动。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513040,"discussion_content":"很好的总结和补充！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610197948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255355,"user_name":"John Bull","can_delete":false,"product_type":"c1","uid":1362023,"ip_address":"","ucode":"2A1B4191CD87B8","user_header":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","comment_is_top":false,"comment_ctime":1603328283,"is_pvip":true,"replies":[{"id":"100531","content":"操练起来！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612247451,"ip_address":"","comment_id":255355,"utype":1}],"discussion_count":1,"race_medal":5,"score":"5898295579","product_id":100022301,"comment_content":"好吧，我承认，没写单元测试，是我还不会写😄","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507693,"discussion_content":"操练起来！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612247451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235266,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1594956533,"is_pvip":false,"replies":[{"id":"87009","content":"任务分解和估算是两件事，是不是要算，自己来决定。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1595116325,"ip_address":"","comment_id":235266,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889923829","product_id":100022301,"comment_content":"不是不想写单元测试，是确实不太会写。。。还有个问题写任务分解后预估工期的时候需要把写单元测试的时间也算上吗","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501663,"discussion_content":"任务分解和估算是两件事，是不是要算，自己来决定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595116325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89909,"user_name":"Amy","can_delete":false,"product_type":"c1","uid":1151869,"ip_address":"","ucode":"22ABF84ACD1F77","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/7d/177bf48a.jpg","comment_is_top":false,"comment_ctime":1556327619,"is_pvip":true,"replies":[{"id":"32206","content":"呃，这个角度好神奇，但你意识到要多写测试就好。","user_name":"作者回复","user_name_real":"dreamhead","uid":"1258861","ctime":1556342523,"ip_address":"","comment_id":89909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851294915","product_id":100022301,"comment_content":"自从知道测试人员的测试只是基于界面的点点点，之后写的每个方法都必需写单元测试。写单元测试是对自己负责。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448316,"discussion_content":"呃，这个角度好神奇，但你意识到要多写测试就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556342523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78606,"user_name":"Geek_fe0336","can_delete":false,"product_type":"c1","uid":1422144,"ip_address":"","ucode":"09D070BD4EFB57","user_header":"https://static001.geekbang.org/account/avatar/00/15/b3/40/54894c8f.jpg","comment_is_top":false,"comment_ctime":1553181876,"is_pvip":false,"replies":[{"id":"28649","content":"在单元测试里，M 的接口是可以用 Mock 的，这才算是单元测试。涉及到数据库，就变成了集成测试。","user_name":"作者回复","user_name_real":"dreamhead","uid":"1258861","ctime":1553257740,"ip_address":"","comment_id":78606,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848149172","product_id":100022301,"comment_content":"请教老师一个具体问题，mvc结构的工程，c层的单元测试要实际的去调用m层吗？需要和数据库里的数据做比对和验证吗？如果不用，c层的单元测试应该验证或测试哪些内容呢？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444161,"discussion_content":"在单元测试里，M 的接口是可以用 Mock 的，这才算是单元测试。涉及到数据库，就变成了集成测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553257740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64169,"user_name":"Xunqf","can_delete":false,"product_type":"c1","uid":1003577,"ip_address":"","ucode":"8E629BB0B446B5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/39/371c9918.jpg","comment_is_top":false,"comment_ctime":1548684637,"is_pvip":false,"replies":[{"id":"22744","content":"你说的是现状，我这里在讨论的是，应该是什么样。我反复提到，许多团队深陷泥潭不自知，就是现有的做事方式让他们陷了进去。","user_name":"作者回复","user_name_real":"dreamhead","uid":"1258861","ctime":1548718160,"ip_address":"","comment_id":64169,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843651933","product_id":100022301,"comment_content":"目前好像大部分公司都不怎么要求写单元测试，即使有些公司要求自测最多也只是业务上的测试，就像前端和移动端很多时候都是UI还原度和适配上的问题，也只有视觉上的东西暴露的更直接一些，其他方面的问题一般都很难说清楚，一般公司业绩考核也更看重直观的东西，所以大部分人都不会去做一些底层的单元测试！","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437894,"discussion_content":"你说的是现状，我这里在讨论的是，应该是什么样。我反复提到，许多团队深陷泥潭不自知，就是现有的做事方式让他们陷了进去。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1548718160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358071,"user_name":"雪舞","can_delete":false,"product_type":"c1","uid":1245961,"ip_address":"陕西","ucode":"4A06FE6D3EB777","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/09/afbc9616.jpg","comment_is_top":false,"comment_ctime":1663894585,"is_pvip":true,"replies":[{"id":"130414","content":"我还有一个专栏叫《程序员的测试课》","user_name":"作者回复","user_name_real":"编辑","uid":"1258861","ctime":1664259339,"ip_address":"陕西","comment_id":358071,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663894585","product_id":100022301,"comment_content":"不知道怎么写测试单元，还没碰到过","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588957,"discussion_content":"我还有一个专栏叫《程序员的测试课》","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1664259339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347881,"user_name":"邓嘉文","can_delete":false,"product_type":"c1","uid":2332845,"ip_address":"","ucode":"FCEDFABFB48055","user_header":"https://static001.geekbang.org/account/avatar/00/23/98/ad/f9d755f2.jpg","comment_is_top":false,"comment_ctime":1654532168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654532168","product_id":100022301,"comment_content":"我们公司代码单元测试都没有提交，很难受，不知道为什么这样，问问上级","like_count":0},{"had_liked":false,"id":339151,"user_name":"woJA1wCgAAkNX5-PXWqkJYLbOqbxPL_g","can_delete":false,"product_type":"c1","uid":2927088,"ip_address":"","ucode":"2916B7699974E1","user_header":"","comment_is_top":false,"comment_ctime":1647941792,"is_pvip":false,"replies":[{"id":"124545","content":"我的《程序员的测试课》，欢迎学习","user_name":"作者回复","user_name_real":"编辑","uid":"1258861","ctime":1648940492,"ip_address":"","comment_id":339151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647941792","product_id":100022301,"comment_content":"老师，我现在对单元测试的概念比较模糊，是我认为的，每个方法用JUnit过一遍吗，感觉好像没理解到位","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559761,"discussion_content":"我的《程序员的测试课》，欢迎学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648940492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317641,"user_name":"Slience-0°C","can_delete":false,"product_type":"c1","uid":1151612,"ip_address":"","ucode":"B50665EC6A80F5","user_header":"https://static001.geekbang.org/account/avatar/00/11/92/7c/12c571b6.jpg","comment_is_top":false,"comment_ctime":1634875169,"is_pvip":false,"replies":[{"id":"115158","content":"如果不想改变，那就永远不会改变。想改变的话，就来想办法。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1634904499,"ip_address":"","comment_id":317641,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1634875169","product_id":100022301,"comment_content":"项目永远很紧，时间永远不够，你打算永远这样么？——不过也没办法改变啊","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528912,"discussion_content":"如果不想改变，那就永远不会改变。想改变的话，就来想办法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634904499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1151612,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/7c/12c571b6.jpg","nickname":"Slience-0°C","note":"","ucode":"B50665EC6A80F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407197,"discussion_content":"我想是从宏观的公司层面的说这个问题，可能无法解决，底层的码农没有发言权","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634919769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578569,"discussion_content":"节奏最终是掌握在自己手里的，先从良好的设计和完整的单元测试开始，再逐步拓展。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656904418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299067,"user_name":"HackMSF","can_delete":false,"product_type":"c1","uid":1697626,"ip_address":"","ucode":"BA021D3CDBCBF8","user_header":"https://static001.geekbang.org/account/avatar/00/19/e7/5a/0010f3f7.jpg","comment_is_top":false,"comment_ctime":1624447663,"is_pvip":true,"replies":[{"id":"110662","content":"我的《程序员的测试课》已经上线，可以去了解一下如何编写测试。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1628205755,"ip_address":"","comment_id":299067,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624447663","product_id":100022301,"comment_content":"有个问题想请教一下大家。<br>【场景】入职一家公司，面对一个完整的系统，单元测试却很少，有意想去完善测试用例，提高系统稳定性，但是发现单元测试有点难写，原因可能是系统的设计不够合理，某个函数包含大段代码，总之就是会伴随很多的重构。<br><br>【问题】在这样的场景下，该如何入手呢？我的做法是先了解系统的设计，慢慢重构原有的系统，而不是一上来就写测试用例，因为这样的阻力很大。到后面系统的设计完善到一定程度后，开始增加测试用例去加固代码。ps：我们是2B的公司。<br><br>所以大家在这种场景下会怎么做？","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522319,"discussion_content":"我的《程序员的测试课》已经上线，可以去了解一下如何编写测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628205755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286133,"user_name":"xicheng0908","can_delete":false,"product_type":"c1","uid":1173968,"ip_address":"","ucode":"E8E93776E5555D","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/d0/d1a0f52c.jpg","comment_is_top":false,"comment_ctime":1617164725,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1617164725","product_id":100022301,"comment_content":"老师你好，请问移动端（android 或 ios）怎么做白盒测试呢？","like_count":0},{"had_liked":false,"id":188649,"user_name":"王维","can_delete":false,"product_type":"c1","uid":1091684,"ip_address":"","ucode":"836E6CDB1A56BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/64/965e0d9b.jpg","comment_is_top":false,"comment_ctime":1584397453,"is_pvip":false,"replies":[{"id":"72886","content":"聊胜于无","user_name":"作者回复","user_name_real":"dreamhead","uid":"1258861","ctime":1584438079,"ip_address":"","comment_id":188649,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584397453","product_id":100022301,"comment_content":"记得以前为了赶进度，都是后面补写的单元测试，哈哈","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487476,"discussion_content":"聊胜于无","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584438079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107243,"user_name":"刘冲","can_delete":false,"product_type":"c1","uid":1000439,"ip_address":"","ucode":"0C4F66921AE76C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/f7/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1561507892,"is_pvip":false,"replies":[{"id":"98195","content":"谁来写都可以，无论是开发，还是测试。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609221117,"ip_address":"","comment_id":107243,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561507892","product_id":100022301,"comment_content":"老师，集成测试是谁来写？测试人员么","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455435,"discussion_content":"谁来写都可以，无论是开发，还是测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609221117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80997,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1553771281,"is_pvip":false,"replies":[{"id":"29517","content":"想写好测试，要写好代码。","user_name":"作者回复","user_name_real":"dreamhead","uid":"1258861","ctime":1553927825,"ip_address":"","comment_id":80997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553771281","product_id":100022301,"comment_content":"测试会提高我们的设计能力，写出clean code","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445039,"discussion_content":"想写好测试，要写好代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553927825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}