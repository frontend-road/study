{"id":10759,"title":"06 | 你真的懂测试覆盖率吗？","content":"<p>在上一篇文章中，我为你介绍了软件测试各个阶段的自动化技术，在前面的文章中我也提到了测试覆盖率的概念，你当时可能有点不明白，那么今天我就和你详细聊聊测试覆盖率这个主题。</p>\n<p><span class=\"orange\">测试覆盖率通常被用来衡量测试的充分性和完整性，从广义的角度来讲，测试覆盖率主要分为两大类，一类是面向项目的需求覆盖率，另一类是更偏向技术的代码覆盖率。</span></p>\n<h2>需求覆盖率</h2>\n<p><strong>需求覆盖率是指测试对需求的覆盖程度，通常的做法是将每一条分解后的软件需求和对应的测试建立一对多的映射关系，最终目标是保证测试可以覆盖每个需求，以保证软件产品的质量。</strong></p>\n<p>我们通常采用ALM，Doors和TestLink等需求管理工具来建立需求和测试的对应关系，并以此计算测试覆盖率。</p>\n<p>需求覆盖率统计方法属于传统瀑布模型下的软件工程实践，传统瀑布模型追求自上而下地制定计划、分析需求、设计软件、编写代码、测试和运维等，在流程上是重量级的，已经很难适应当今互联网时代下的敏捷开发实践。</p>\n<p>所以，互联网测试项目中很少直接基于需求来衡量测试覆盖率，而是将软件需求转换成测试需求，然后基于测试需求再来设计测试点。</p>\n<p>因此，现在人们口中的测试覆盖率，通常默认指代码覆盖率，而不是需求覆盖率。</p>\n<h2>代码覆盖率</h2>\n<p><strong>简单来说，代码覆盖率是指，至少被执行了一次的条目数占整个条目数的百分比。</strong></p><!-- [[[read_end]]] -->\n<p>如果“条目数”是语句，对应的就是代码行覆盖率；如果“条目数”是函数，对应的就是函数覆盖率；如果“条目数”是路径，那么对应的就是路径覆盖率。依此类推，你就可以得到绝大多数常见的代码覆盖率类型的定义。</p>\n<p>这里我给你简单介绍一下最常用的三种代码覆盖率指标。</p>\n<ul>\n<li>行覆盖率又称为语句覆盖率，指已经被执行到的语句占总可执行语句（不包含类似C++的头文件声明、代码注释、空行等等）的百分比。这是最常用也是要求最低的覆盖率指标。实际项目中通常会结合判定覆盖率或者条件覆盖率一起使用。</li>\n<li>判定覆盖又称分支覆盖，用以度量程序中每一个判定的分支是否都被测试到了，即代码中每个判断的取真分支和取假分支是否各被覆盖至少各一次。比如，对于if(a&gt;0 &amp;&amp; b&gt;0)，就要求覆盖“a&gt;0 &amp;&amp; b&gt;0”为TURE和FALSE各一次。</li>\n<li>条件覆盖是指，判定中的每个条件的可能取值至少满足一次，度量判定中的每个条件的结果TRUE和FALSE是否都被测试到了。比如，对于if(a&gt;0 &amp;&amp; b&gt;0)，就要求“a&gt;0”取TRUE和FALSE各一次，同时要求“b&gt;0”取TRUE和FALSE各一次。</li>\n</ul>\n<h2>代码覆盖率的价值</h2>\n<p><strong>现在很多项目都在单元测试以及集成测试阶段统计代码覆盖率，但是我想说的是，统计代码覆盖率仅仅是手段，你必须透过现象看到事物的本质，才能从根本上保证软件整体的质量。</strong></p>\n<p><span class=\"orange\">统计代码覆盖率的根本目的是找出潜在的遗漏测试用例，并有针对性的进行补充，同时还可以识别出代码中那些由于需求变更等原因造成的不可达的废弃代码。</span></p>\n<p>通常我们希望代码覆盖率越高越好，代码覆盖率越高越能说明你的测试用例设计是充分且完备的，但你也会发现测试的成本会随着代码覆盖率的提高以类似指数级的方式迅速增加。</p>\n<p>如果想达到70%的代码覆盖率，你可能只需要30分钟的时间成本。但如果你想把代码覆盖率提高到90%，那么为了这额外的20%，你可能花的时间就远不止30分钟了。更进一步，你如果想达到100%的代码覆盖率，可想而知你花费的代价就会更大了。</p>\n<p>那么，为什么代码覆盖率的提高，需要付出越来越大的代价呢？因为在后期，你需要大量的桩代码、Mock代码和全局变量的配合来控制执行路径。</p>\n<p>所以，在软件企业中，只有单元测试阶段对代码覆盖率有较高的要求。因为从技术实现上讲，单元测试可以最大化地利用打桩技术来提高覆盖率。而你如果想在集成测试或者是GUI测试阶段将代码覆盖率提高到一定量级，那你所要付出的代价是巨大的，而且在很多情况下根本就实现不了。</p>\n<h2>代码覆盖率的局限性</h2>\n<p>我先来问你一个问题，如果你通过努力，已经把某个函数的MC/DC代码覆盖率（MC/DC覆盖率是最高标准的代码覆盖率指标，除了直接关系人生命安全的软件以外，很少会有项目会有严格的MC/DC覆盖率要求）做到了100%，软件质量是否就真的高枕无忧、万无一失了呢？</p>\n<p>很不幸，即使你所设计的测试用例已经达到100%的代码覆盖率，软件产品的质量也做不到万无一失。其根本原因在于代码覆盖率的计算是基于现有代码的，并不能发现那些“未考虑某些输入”以及“未处理某些情况”形成的缺陷。</p>\n<p>我给你举个极端的例子，如果一个被测函数里面只有一行代码，只要这个函数被调用过了，那么衡量这一行代码质量的所有覆盖率指标都会是100%，但是这个函数是否真正实现了应该需要实现的功能呢？</p>\n<p>显然，代码覆盖率反映的仅仅是已有代码的哪些逻辑被执行过了，哪些逻辑还没有被执行过。以此为依据，你可以补充测试用例，可以去测试那些还没有覆盖到的执行路径。但也是仅此而已，对于那些压根还没有代码实现的部分，基于代码覆盖率的统计指标就无能为力了。</p>\n<p><span class=\"orange\">总结来讲，高的代码覆盖率不一定能保证软件的质量，但是低的代码覆盖率一定不能能保证软件的质量。</span></p>\n<p>好了，现在你已经了解了代码覆盖率的概念、价值和局限性，那么接下来，我就以Java代码覆盖率工具为例，给你解释一下代码覆盖率工具的内部实现原理以及一些关键技术。</p>\n<p>当你理解了这部分内容，以后再面对各个不同开发语言的不同代码覆盖率工具时，就可以做到胸有成竹地根据具体的项目性质，选择最合适的代码覆盖率工具了。</p>\n<h2>代码覆盖率工具</h2>\n<p>JaCoCo是一款Java代码的主流开源覆盖率工具，可以很方便地嵌入到Ant、Maven中，并且和很多主流的持续集成工具以及代码静态检查工具，比如Jekins和Sonar等，都有很好的集成。</p>\n<p>首先，我先带你看看JaCoCo的代码覆盖率报告长什么样子。</p>\n<p>如图1所示为JaCoCo的整体代码覆盖率统计报告，包括了每个Java代码文件的行覆盖率以及分支覆盖率统计，并给出了每个Java代码文件的行数、方法数和类数等具体信息。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/bf/6c/bfc0cf6bed338bc8bafc008b7fa1db6c.png?wh=1740*807\" alt=\"\" /><br />\n<strong>图1 JaCoCo代码覆盖率统计报告实例</strong></p>\n<p>如图2所示为每个Java文件内部详细的代码覆盖率情况，图中绿色的行表示已经被覆盖，红色的行表示尚未被覆盖，黄色的行表示部分覆盖；左侧绿色菱形块表示该分支已经被完全覆盖、黄色菱形块表示该分支仅被部分覆盖。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/6b/ce/6bf54542c3acb5f8e0d3bdf62ee9e7ce.png?wh=1740*733\" alt=\"\" /></p>\n<p><strong>图2 JaCoCo详细代码覆盖率实例</strong></p>\n<p>显然，通过这个详尽的报告，你就可以知道代码真实的执行情况、哪些代码未被覆盖。以此为基础，你再去设计测试用例就会更有针对性了。</p>\n<h2>代码覆盖率工具的实现原理</h2>\n<p>JaCoCo的详细报告，让你惊叹于代码覆盖率工具的强大。但你有没有仔细想过，这样的统计信息如何被获取到的呢？</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/0b/d5/0b8f26275681d8d5edde60487d70e8d5.png?wh=1111*498\" alt=\"\" /><br />\n<strong>图3 统计代码覆盖率的不同注入实现技术</strong></p>\n<p><strong>实现代码覆盖率的统计，最基本的方法就是注入（Instrumentation）。简单地说，注入就是在被测代码中自动插入用于覆盖率统计的探针（Probe）代码，并保证插入的探针代码不会给原代码带来任何影响。</strong></p>\n<p>对于Java代码来讲，根据注入目标的不同，可以分为源代码（Source Code）注入和字节码（Byte Code）注入两大类。基于JVM本身特性以及执行效率的原因，目前主流的工具基本都是使用字节码注入，注入的具体实现采用ASM技术。</p>\n<p>ASM是一个Java字节码操纵框架，能被用来动态生成类或者增强既有类的功能，可以直接产生 class 文件，也可以在类被加载入JVM之前动态改变类行为。</p>\n<p>根据注入发生的时间点，字节码注入又可以分为两大模式：On-The-Fly注入模式和Offline注入模式。</p>\n<p><strong>第一，On-The-Fly注入模式</strong></p>\n<p>On-The-Fly模式的特点在于无需修改源代码，也无需提前进行字节码插桩。它适用于支持Java Agent的运行环境。</p>\n<p>这样做的优点是，可以在系统不停机的情况下，实时收集代码覆盖率信息。缺点是运行环境必须允许使用Java Agent。</p>\n<p>实现On-The-Fly模式，主要有两种技术方案：</p>\n<ol>\n<li>\n<p>开发自定义的类装载器（Class Loader）实现类装载策略，每次类加载前，需要在class文件中插入探针，早期的Emma就是使用这种方案实现的探针插入；</p>\n</li>\n<li>\n<p>借助Java Agent，利用执行在main()方法之前的拦截器方法premain()来插入探针，实际使用过程中需要在JVM的启动参数中添加“-javaagent”并指定用于实时字节码注入的代理程序，这样代理程序在装载每个class文件前，先判断是否已经插入了探针，如果没有则需要将探针插入class文件中，目前主流的JaCoCo就是使用了这个方式。</p>\n</li>\n</ol>\n<p><strong>第二，Offline注入模式</strong></p>\n<p>Offline模式也无需修改源代码，但是需要在测试开始之前先对文件进行插桩，并事先生成插过桩的class文件。它适用于不支持Java Agent的运行环境，以及无法使用自定义类装载器的场景。</p>\n<p>这样做的优点是，JVM启动时不再需要使用Java Agent额外开启代理，缺点是无法实时获取代码覆盖率信息，只能在系统停机时下获取。</p>\n<p>Offline模式根据是生成新的class文件还是直接修改原class文件，又可以分为Replace和Inject两种不同模式。</p>\n<p>和On-The-Fly注入模式不同，Replace和Inject的实现是，在测试运行前就已经通过ASM将探针插入了class文件，而在测试的运行过程中不需要任何额外的处理。Cobertura就是使用Offline模式的典型代表。</p>\n<h2>总结</h2>\n<p>测试覆盖率通常被用来衡量测试的充分性和完整性，包括面向项目的需求覆盖率和更偏向技术的代码覆盖率。而需求覆盖率的统计方式不再适用于现在的敏捷开发模式，所以现在谈到测试覆盖率，大多是指代码覆盖率。</p>\n<p>但是，高的代码覆盖率不一定能保证软件的质量，因为代码覆盖率是基于现有代码，无法发现那些“未考虑某些输入”以及“未处理某些情况”形成的缺陷。</p>\n<p>另外，对于代码覆盖率的统计工具，我希望你不仅仅是会用的层次，而是能够理解它们的原理，知其然知其所以然，才能更好地利用这些工具完成你的测试工作。</p>\n<h2>思考题</h2>\n<p>你在实际工作中，是否还接触过C/C++，JavaScript等语言的代码覆盖率工具，比如GCC Coverage、JSCoverage和Istanbul等？如果接触过的话，请你谈谈自己使用的感受以及遇到过的“坑”。</p>\n<p>欢迎你给我留言。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":177195,"user_name":"第1周-吕斌","can_delete":false,"product_type":"c1","uid":1845837,"ip_address":"","ucode":"DA904B8DD11A25","user_header":"","comment_is_top":false,"comment_ctime":1581318811,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"173380010651","product_id":100009601,"comment_content":"手动功能测试从业者看的好艰难","like_count":41,"discussions":[{"author":{"id":1166960,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/70/abb7bfe3.jpg","nickname":"潮汐","note":"","ucode":"7947D833E6C798","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311958,"discussion_content":"同感= =这块看的不明不白不清不楚","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602551272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2678569,"avatar":"https://static001.geekbang.org/account/avatar/00/28/df/29/3c956177.jpg","nickname":"上海","note":"","ucode":"6A4F9D80D25028","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393216,"discussion_content":"上来就是点点点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631301161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2672462,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/noTIfbBmzicH6oZaBqycVzE0icUuV5tJ48CRjbWPI83ibYkicmibEicFX03qLYHT3wBCHha62lXYRH91YdYz2jiaZTuBg/132","nickname":"Geek_220e09","note":"","ucode":"90B66A7CB3B2A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380491,"discussion_content":"你们的方向在管理，测试管理，项目管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624529019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1596325,"avatar":"https://static001.geekbang.org/account/avatar/00/18/5b/a5/eba044cc.jpg","nickname":"乔小乔🍭","note":"","ucode":"1211AF3A803C1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360232,"discussion_content":"哭出声音","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616395803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104850,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","nickname":"lidashuang","note":"","ucode":"560ABE8032760E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310650,"discussion_content":"开始学编程语言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601969789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1842792,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKBAgCziaJlpY208MuYGqy4O3q22DBS832qThfoA51rpibqA64MJ2D2P0AstjHFRnVHMluTt2BxSRmQ/132","nickname":"Geek_a1902b","note":"","ucode":"2A84041AC8C7F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298872,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597455673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16555,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1532020566,"is_pvip":false,"replies":[{"id":"5790","content":"你的两个观点都非常正确👍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1532071871,"ip_address":"","comment_id":16555,"utype":1}],"discussion_count":1,"race_medal":0,"score":"108906202966","product_id":100009601,"comment_content":"实际项目中，无论覆盖率多高，没有根据需求正确的写assert其实也是无法利用测试用例发现bug，提高代码质量，在实际的测试用例中，正向的case一般比较容易写，难得是测试error handling和模拟各种异常情况下的代码行为","like_count":25,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420837,"discussion_content":"你的两个观点都非常正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532071871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15581,"user_name":"Nic辉少","can_delete":false,"product_type":"c1","uid":1163674,"ip_address":"","ucode":"1680DD8B12C48D","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/9a/40b3a0e5.jpg","comment_is_top":false,"comment_ctime":1531309902,"is_pvip":false,"replies":[{"id":"5366","content":"好样的，学习的过程就是螺旋上升的过程，可能会有点痛苦，但是你会发现自己在潜移默化的进步，一个月后你再回头看看，会发现自己已经站在了一个全新的高度了，加油","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531384599,"ip_address":"","comment_id":15581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78840721230","product_id":100009601,"comment_content":"目前还没有接触过单元测试和代码方面的测试，每天努力坚持学一点，思考一点，吸收一点。","like_count":18,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420453,"discussion_content":"好样的，学习的过程就是螺旋上升的过程，可能会有点痛苦，但是你会发现自己在潜移默化的进步，一个月后你再回头看看，会发现自己已经站在了一个全新的高度了，加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531384599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15894,"user_name":"lucky_ziyie","can_delete":false,"product_type":"c1","uid":1165750,"ip_address":"","ucode":"F2AE03B55F333C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/b6/9d742b5a.jpg","comment_is_top":false,"comment_ctime":1531621471,"is_pvip":false,"replies":[{"id":"5510","content":"一看就知道你也是这个领域有过很多经验的业内人士，代码走查的确是个不错的时间，尤其是敏捷模式推崇的结对编程，但是走查往往只能发现静态或者一部分动态问题，而且走查的效果很大程度取决于个人的能力，不能系统化和体系化，代码覆盖率的局限性主要是不能发现有需求但是代码没有实现的场景，但是对于已有代码还是具有很高参考价值的，至少知道你那些分支和语句覆盖到了，另外mcdc现在只是在人生命相关的软件和系统中才会采用，很才有其它企业会用这个指标","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531708938,"ip_address":"","comment_id":15894,"utype":1}],"discussion_count":3,"race_medal":0,"score":"53071229023","product_id":100009601,"comment_content":"安全产品嵌入式Ｃ的单元测试对覆盖率要求很高，语句，分支，MCDC都要达到100%的覆盖率要求，单元测试工具一般会有统计要求，比如RTRT能统计一部分覆盖率，但MCDC没法统计；遇到的问题其实还是一个业界普遍的问题，就是覆盖率达到了，问题却发现的少，没有代码走查发现的多，但为完成覆盖率却耗时很多，所以包括公司领导在内的很多同事都认为覆盖率意义不大，觉得单元测试没有意义。这种局面貌似国内普遍现象，老师是否有一些指导建议？","like_count":12,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420590,"discussion_content":"一看就知道你也是这个领域有过很多经验的业内人士，代码走查的确是个不错的时间，尤其是敏捷模式推崇的结对编程，但是走查往往只能发现静态或者一部分动态问题，而且走查的效果很大程度取决于个人的能力，不能系统化和体系化，代码覆盖率的局限性主要是不能发现有需求但是代码没有实现的场景，但是对于已有代码还是具有很高参考价值的，至少知道你那些分支和语句覆盖到了，另外mcdc现在只是在人生命相关的软件和系统中才会采用，很才有其它企业会用这个指标","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531708938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1386673,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eperhqESS9OyTHeTvLrpE8HPPI3ZVdDQdYmZoQ7pKeaeicylcxuY0LjSBia0AqOjSEeicyHFSfYgViaNQ/132","nickname":"jogholy","note":"","ucode":"3CE64DA901BD1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548935,"discussion_content":"个人认为，单元测试不能做成完全的“白盒”测试。意思就是不要看着代码逻辑去写单元测试，而应该是根据函数的实现目的或者模块设计说明去写测试用例，当无法全覆盖时再尝试去看代码。这个时候发现的问题一般要么是测试人员没有完全理解模块设计，要么就是开发人员写了有问题的代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643451339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2006379,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KC48BJRJUqYCZRhBwxux4zEXpSfFDap1rdZN3FFZ6E7kbYggtY4zjkbkicicfDJCIOmIpfT5xfo53IqEgvqmibAQA/132","nickname":"117565","note":"","ucode":"04589108F91505","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284544,"discussion_content":"安全产品是有必要的。这里不强调人命相关，但对于安全产品，自身都无法保证安全，又怎么提供安全防护呢。除非是漏扫这些设备，否则像防火墙这种是一定要严谨再严谨的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592552025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15652,"user_name":"仡","can_delete":false,"product_type":"c1","uid":1163710,"ip_address":"","ucode":"FF3FB50C96D837","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/be/255c3b74.jpg","comment_is_top":false,"comment_ctime":1531359597,"is_pvip":false,"replies":[{"id":"5341","content":"其实更多的还是框架的思想，至于是用什么语言来实现都是可以的，最近基于python的自动化框架比较流行，主要是python自己的方便性","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531366438,"ip_address":"","comment_id":15652,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40186065261","product_id":100009601,"comment_content":"听到这一期，很多技术都是JAVA相关的～目前正在学习Python，Python自动化框架有什么好的建议么？谢谢～","like_count":9,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420499,"discussion_content":"其实更多的还是框架的思想，至于是用什么语言来实现都是可以的，最近基于python的自动化框架比较流行，主要是python自己的方便性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1531366438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21904,"user_name":"Jia","can_delete":false,"product_type":"c1","uid":1139676,"ip_address":"","ucode":"A9FA2F834D380F","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/dc/94512cff.jpg","comment_is_top":false,"comment_ctime":1535411491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31600182563","product_id":100009601,"comment_content":"还有一个很重要的覆盖率，Mutation测试覆盖率。主要是用来测试Test case的质量，而不是代码本身的质量。一个Test case suite质量高的话，对于代码出现的人为变异（可以理解为错误代码）都能很好的检测出来。","like_count":7},{"had_liked":false,"id":66611,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1549966759,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23024803239","product_id":100009601,"comment_content":"1.我们目前的业务主要是 C++ 代码，曾经有测试开发调研过一些代码覆盖率工具，但是由于代码量庞大，且和目前业务场景不符，导致没有后续；<br>2.非常同意茹老师说的「高的代码覆盖率不一定能保证软件的质量，但是低的代码覆盖率一定不能保证软件的质量」，所以我们一直坚持的理念是，注重效果，能够保证质量的手段就是好手段；<br>3.针对 2 我们目前的做法是代码红线 + 关键代码人工走读相结合的形式，一定程度上去加强代码层面的覆盖率；<br>4.相对全量代码覆盖率，个人感觉差异代码覆盖率的实用性更好；<br><br>以上，欢迎沟通交流。","like_count":5,"discussions":[{"author":{"id":1330305,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4c/81/34398512.jpg","nickname":"PCC","note":"","ucode":"BA27B7737E232B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314323,"discussion_content":"差异代码了覆盖率是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603151649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1019029,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","nickname":"sylan215","note":"","ucode":"5A2CF31BC69F40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1330305,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4c/81/34398512.jpg","nickname":"PCC","note":"","ucode":"BA27B7737E232B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322462,"discussion_content":"本次修改内容的代码覆盖率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604746680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":314323,"ip_address":""},"score":322462,"extra":""}]}]},{"had_liked":false,"id":16278,"user_name":"Jecy-8","can_delete":false,"product_type":"c1","uid":1016276,"ip_address":"","ucode":"2AE1575B9E63A6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/81/d4/e92abeb4.jpg","comment_is_top":false,"comment_ctime":1531873268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23006709748","product_id":100009601,"comment_content":"打卡～～之前的公司单元测试都是开发写，不过我也帮开发写过单元测试，正如老师所说单元测试覆盖率达到一定程度想要再提升非常难，而且并不是覆盖率越高就表明质量就没问题，个人觉得如果能从需求功能的角度去写单元测试，更能发挥单元测试的作用。","like_count":5},{"had_liked":false,"id":15580,"user_name":"丹","can_delete":false,"product_type":"c1","uid":1167671,"ip_address":"","ucode":"FC5BB2D441467B","user_header":"https://static001.geekbang.org/account/avatar/00/11/d1/37/e087a4ee.jpg","comment_is_top":false,"comment_ctime":1531309615,"is_pvip":false,"replies":[{"id":"5367","content":"很多敏捷团队可能没有完全文档化的测试用例，所以会比较依赖团队成熟度以及一些BDD和TDD的工具，关于什么是bdd和tdd，后面会专门来讲，这两者都属于迭代开发下的敏捷实践","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531384796,"ip_address":"","comment_id":15580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23006146095","product_id":100009601,"comment_content":"你好，我想请教一些问题，我们公司属于迭代开发，更新比较快，没有技术文档，这种情况下感觉测试用例不能覆盖全面，这种情况应该怎么去写测试用例","like_count":5,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420452,"discussion_content":"很多敏捷团队可能没有完全文档化的测试用例，所以会比较依赖团队成熟度以及一些BDD和TDD的工具，关于什么是bdd和tdd，后面会专门来讲，这两者都属于迭代开发下的敏捷实践","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531384796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15505,"user_name":"Rachel_fang","can_delete":false,"product_type":"c1","uid":1004050,"ip_address":"","ucode":"9DE25BDC220185","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/12/e0460331.jpg","comment_is_top":false,"comment_ctime":1531240681,"is_pvip":false,"replies":[{"id":"5292","content":"jacoco其实不管你的测试是手工跑的还是自动跑的，它都能统计哪些代码被执行到了，哪些没有。单条case的话也是一样的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531316284,"ip_address":"","comment_id":15505,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23006077161","product_id":100009601,"comment_content":"jacoco大多用于自动化测试得到覆盖率，但如果想知道单条case（手工or自动化）的覆盖率不知道有啥好的方法吗？","like_count":5,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420413,"discussion_content":"jacoco其实不管你的测试是手工跑的还是自动跑的，它都能统计哪些代码被执行到了，哪些没有。单条case的话也是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531316284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15944,"user_name":"lalio","can_delete":false,"product_type":"c1","uid":1126256,"ip_address":"","ucode":"8CBB0DADB6114C","user_header":"https://static001.geekbang.org/account/avatar/00/11/2f/70/c6387cd0.jpg","comment_is_top":false,"comment_ctime":1531666269,"is_pvip":false,"replies":[{"id":"5506","content":"go test我没有用过，如果你想自己扩展开发代码覆盖率工具的话，技术要求还是比较高的，首先需要知道工具的注入原理，然后要搞清楚出内部的代码覆盖率统计的数据结构，然后再去修改工具的源代码，总体来看，技术要求比较高","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531708344,"ip_address":"","comment_id":15944,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18711535453","product_id":100009601,"comment_content":"最近在研究go语言的代码覆盖率工具集成到公司的CI，尝试用的go test 的cover，不过了解下来发现这款官方出的工具只统计到了语句覆盖，用了godoc实现（本人英文水平有限，目前还没吃透原理），没有jacoco这款覆盖的种类全，统计报告也比较单一，想在cover的统计数据基础上做一些优化，老师有没有好的建议","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420610,"discussion_content":"go test我没有用过，如果你想自己扩展开发代码覆盖率工具的话，技术要求还是比较高的，首先需要知道工具的注入原理，然后要搞清楚出内部的代码覆盖率统计的数据结构，然后再去修改工具的源代码，总体来看，技术要求比较高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531708344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308885,"discussion_content":"同 golang，负责后台服务的 API 测试，现在想用触发 API 测试时的代码覆盖率来完善测试用例，也就是执行一次 API 回归测试，看覆盖了多少代码，但是没找到好的解决方案，仁兄有什么好的方案吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601110573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15593,"user_name":"秋荣","can_delete":false,"product_type":"c1","uid":1166659,"ip_address":"","ucode":"74711F9B42DEF2","user_header":"https://static001.geekbang.org/account/avatar/00/11/cd/43/ca4044f0.jpg","comment_is_top":false,"comment_ctime":1531318566,"is_pvip":false,"replies":[{"id":"5365","content":"总结的很到位，至于到底多少%合适，这个没有定论，而且到底是用行覆盖率还是其它的覆盖率，也没有一定，主要取决于项目的实际情况。试想一个完全没有单元测试的项目突然要求行覆盖率达到100%，那开发就什么都不用干了，全去写case了","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531384496,"ip_address":"","comment_id":15593,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18711187750","product_id":100009601,"comment_content":"不知道多少的代码覆盖率才算是达标的？团队转型ASE，经理制定指标80%，很多时候就是在为了达标而补测试。老师讲的很对，不要只看数字，要透过现象看本质，需要去看看每个测试覆盖率的情况，增加相应的测试","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420459,"discussion_content":"总结的很到位，至于到底多少%合适，这个没有定论，而且到底是用行覆盖率还是其它的覆盖率，也没有一定，主要取决于项目的实际情况。试想一个完全没有单元测试的项目突然要求行覆盖率达到100%，那开发就什么都不用干了，全去写case了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531384496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205376,"user_name":"higkoo","can_delete":false,"product_type":"c1","uid":1017951,"ip_address":"","ucode":"7C7B40DA418F07","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/5f/535398fd.jpg","comment_is_top":false,"comment_ctime":1586602684,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14471504572","product_id":100009601,"comment_content":"用过Golang和C++的代码覆盖率工具，共性问题是：需要中断被测程序才能获取到测试结果，无法实时获取。<br><br>请问 茹老师 怎么看？","like_count":3,"discussions":[{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308886,"discussion_content":"求 golang 的代码覆盖率工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601110601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154754,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1574553509,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14459455397","product_id":100009601,"comment_content":"老师 那一般情况 单元测试的覆盖率应该达到多少","like_count":3},{"had_liked":false,"id":15527,"user_name":"宸浩","can_delete":false,"product_type":"c1","uid":1112308,"ip_address":"","ucode":"5FFCECE5F8D5ED","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/f4/27222fc7.jpg","comment_is_top":false,"comment_ctime":1531269576,"is_pvip":false,"replies":[{"id":"5282","content":"这个会在后面的api测试中专门来讲。其实接口测试完全可以用代码覆盖率来衡量测试的完备性。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531310840,"ip_address":"","comment_id":15527,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14416171464","product_id":100009601,"comment_content":"老师，我想问下测试接口的话，怎么能保证覆盖完全呢，敏捷项目中涉及到的接口覆盖率，麻烦普及一下呗","like_count":3,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420427,"discussion_content":"这个会在后面的api测试中专门来讲。其实接口测试完全可以用代码覆盖率来衡量测试的完备性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531310840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15524,"user_name":"FamilyLi","can_delete":false,"product_type":"c1","uid":1166828,"ip_address":"","ucode":"CB51427E68385A","user_header":"https://static001.geekbang.org/account/avatar/00/11/cd/ec/0d1c052e.jpg","comment_is_top":false,"comment_ctime":1531268696,"is_pvip":false,"replies":[{"id":"5339","content":"Android SDK内置了Emma test coverage，你可以直接用，不过我还是比较推荐Jacoco","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531364530,"ip_address":"","comment_id":15524,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14416170584","product_id":100009601,"comment_content":"对于安卓智能手机的代码覆盖率有什么测试或者工具","like_count":3,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420425,"discussion_content":"Android SDK内置了Emma test coverage，你可以直接用，不过我还是比较推荐Jacoco","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531364530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17632,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1532805977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10122740569","product_id":100009601,"comment_content":"最近正在给公司准备一个关于TaaS和TDD的演讲，说一下我对TaaS的理解，请指正<br><br>TaaS是基于云计算的一套可以自定义服务的平台，在程序开发的初期，可以利用一些规则引擎，在TaaS的portal上把需求转化成use case和类图，进而可以利用类图反向生成桩代码，围绕桩代码不涉及到业务逻辑的unit test代码，这样可以节约开发人员大量的时间，让开发人员更加关注在业务逻辑模块的开发<br><br>当业务模块开发好之后，TaaS平台也可以24&#47;7的运行来进行相应的压力测试，安全测试，甚至可以通过人工智能总结已经上载的业务相关unit test，根据上下游的数据流，发现潜在bug<br><br>此外对于整个公司来说，不同的团队可以给TaaS平台贡献不同的service，比如专注API的平台根据公司的实际情况开发出转么测试hystrix的服务，portal平台开发出转么测试用户权限是否匹配的服务等<br><br>希望能深入交流，我的wx是 tracyrobingao","like_count":2},{"had_liked":false,"id":15603,"user_name":"008","can_delete":false,"product_type":"c1","uid":1164003,"ip_address":"","ucode":"E1D9D91E18208A","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/e3/df7447ff.jpg","comment_is_top":false,"comment_ctime":1531321576,"is_pvip":false,"replies":[{"id":"5362","content":"很棒的观点，其实有一些技术背景很强的公司，单元测试的框架选型已经各种mock选型也是有资深的测试和开发一起完成的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531384172,"ip_address":"","comment_id":15603,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10121256168","product_id":100009601,"comment_content":".Net的使用NUnit+ReSharper，从来没想过单元测试的代码覆盖率会提供给测试人员，都是开发内部自行消化。也许是因为刚开始推行，整体的覆盖率还太低，也因为测试人员完全黑盒式的测试，不过让测试人员针对性对未覆盖代码进行用例设计的确符合未来自动化测试中对测试人员的要求，更多的进行自动化测试中涉及不到的场景","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420467,"discussion_content":"很棒的观点，其实有一些技术背景很强的公司，单元测试的框架选型已经各种mock选型也是有资深的测试和开发一起完成的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531384172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15550,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1143372,"ip_address":"","ucode":"335960F683C23C","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/4c/4d636a23.jpg","comment_is_top":false,"comment_ctime":1531282910,"is_pvip":false,"replies":[{"id":"5279","content":"要求还是高的，如果没有完整的测试，代码覆盖率是达不到要求的。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531310140,"ip_address":"","comment_id":15550,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10121217502","product_id":100009601,"comment_content":"测试中几乎没接触过这类的代码级别的覆盖率，若都是由开发来完成，那对测试要求应该没这么高吧？","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420437,"discussion_content":"要求还是高的，如果没有完整的测试，代码覆盖率是达不到要求的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531310140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15519,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1531266981,"is_pvip":false,"replies":[{"id":"5369","content":"欢迎每次打卡","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531384882,"ip_address":"","comment_id":15519,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10121201573","product_id":100009601,"comment_content":"打卡06","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420422,"discussion_content":"欢迎每次打卡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531384882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241812,"user_name":"Geek_a1902b","can_delete":false,"product_type":"c1","uid":1842792,"ip_address":"","ucode":"2A84041AC8C7F9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKBAgCziaJlpY208MuYGqy4O3q22DBS832qThfoA51rpibqA64MJ2D2P0AstjHFRnVHMluTt2BxSRmQ/132","comment_is_top":false,"comment_ctime":1597455768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5892423064","product_id":100009601,"comment_content":"现在是发现自己很多问题然后不知道从哪开始针对性的学习提高核心竞争力，看了老师的文章越发觉得需要完善的太多了。","like_count":1},{"had_liked":false,"id":39725,"user_name":"向着光亮那方","can_delete":false,"product_type":"c1","uid":1009665,"ip_address":"","ucode":"DAAA98BDC30A1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/01/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1542342454,"is_pvip":false,"replies":[{"id":"15945","content":"同样是基于传统的代码覆盖率工具，没有任何的区别","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1543470362,"ip_address":"","comment_id":39725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837309750","product_id":100009601,"comment_content":"想问下，对于Android写的SDK，功能测试怎么统计覆盖率呢？","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429196,"discussion_content":"同样是基于传统的代码覆盖率工具，没有任何的区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543470362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30653,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1538966151,"is_pvip":false,"replies":[{"id":"11358","content":"严格说会，但是单元测试基本可以忽略不计，除非是那些本身性能灵感的方法","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1539250975,"ip_address":"","comment_id":30653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833933447","product_id":100009601,"comment_content":"用插桩会不会影响程序牲能。","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426060,"discussion_content":"严格说会，但是单元测试基本可以忽略不计，除非是那些本身性能灵感的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539250975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16277,"user_name":"田🤘🏻妞","can_delete":false,"product_type":"c1","uid":1167327,"ip_address":"","ucode":"3ED711E62ACD4F","user_header":"https://static001.geekbang.org/account/avatar/00/11/cf/df/4ee0d282.jpg","comment_is_top":false,"comment_ctime":1531873251,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5826840547","product_id":100009601,"comment_content":"看留言中有说  手动测试也可以使用jacoco来查看覆盖率，是说比如我在android手机上手动点点点测试，也可以查看覆盖率吗？  通往期待回答  非常感谢","like_count":1,"discussions":[{"author":{"id":1564961,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e1/21/63472854.jpg","nickname":"pan xi er","note":"","ucode":"15D3FB11F3A77C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162305,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580983575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16211,"user_name":"酸菜泡面","can_delete":false,"product_type":"c1","uid":1119911,"ip_address":"","ucode":"74592566C52E74","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/a7/b3491533.jpg","comment_is_top":false,"comment_ctime":1531834703,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5826801999","product_id":100009601,"comment_content":"目前在后台和安卓端使用过jacoco，还是有很好的作用的。一方面可以让开发同学了解自己的业务逻辑设计是否有问题，另一方面可以让测试同学了解自己的用例设计是否完善。覆盖率高不一定质量就没有问题，但是覆盖率低质量肯定不能保证。","like_count":1,"discussions":[{"author":{"id":1474130,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7e/52/e444696a.jpg","nickname":"小闪电","note":"","ucode":"60A0DF6674ADCC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":67805,"discussion_content":"请问安卓端怎么使用jacoco呢？可否分享一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575178483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16108,"user_name":"90后糊涂宝妈","can_delete":false,"product_type":"c1","uid":1170509,"ip_address":"","ucode":"35767BD18B06CC","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/4d/aa8adb94.jpg","comment_is_top":false,"comment_ctime":1531789183,"is_pvip":false,"replies":[{"id":"5577","content":"需求覆盖率在敏捷模式下的实践主要也是借助于需求管理工具，比如testlink等，来建立需求和用例之间的映射关系，以此来统计那些需求已经有测试用例覆盖了","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531795243,"ip_address":"","comment_id":16108,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826756479","product_id":100009601,"comment_content":"需求覆盖率在敏捷开发阶段具体怎么实行呢？感觉一直在说代码覆盖率。","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420672,"discussion_content":"需求覆盖率在敏捷模式下的实践主要也是借助于需求管理工具，比如testlink等，来建立需求和用例之间的映射关系，以此来统计那些需求已经有测试用例覆盖了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531795243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15673,"user_name":"丹丹兒🍥","can_delete":false,"product_type":"c1","uid":1169723,"ip_address":"","ucode":"95F2C8FEFCCA5A","user_header":"https://static001.geekbang.org/account/avatar/00/11/d9/3b/8c0134be.jpg","comment_is_top":false,"comment_ctime":1531373564,"is_pvip":false,"replies":[{"id":"5357","content":"前端应用级别并不是太建议做单元测试，比较建议的是用Jest来做组件级别的测试，并且可以用伊斯坦布尔来做js的代码覆盖率","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531383511,"ip_address":"","comment_id":15673,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826340860","product_id":100009601,"comment_content":"公司前端在考虑做单元测试，想让没有什么开发经验的测试人员来做这块，是不是很不合理？<br>但是其实我也是想参与的，所以想听听前端的单元测试的一些经验，jest的snapshot应该怎么用才合理？","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420509,"discussion_content":"前端应用级别并不是太建议做单元测试，比较建议的是用Jest来做组件级别的测试，并且可以用伊斯坦布尔来做js的代码覆盖率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531383511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15613,"user_name":"Leo`2018","can_delete":false,"product_type":"c1","uid":1163289,"ip_address":"","ucode":"698813486A003D","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/19/6e84275d.jpg","comment_is_top":false,"comment_ctime":1531350308,"is_pvip":false,"replies":[{"id":"5345","content":"没有源代码，代码覆盖率就无从谈起，当然也可以反编译，但基本没人会这么做，没有源代码的话，测试只能停留在黑盒层面","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531366749,"ip_address":"","comment_id":15613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826317604","product_id":100009601,"comment_content":"对于拿不到源代码的测试来说代码覆盖率基本没什么用，没有办法查看到哪些部分没有覆盖到？是这么理解吗？","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420474,"discussion_content":"没有源代码，代码覆盖率就无从谈起，当然也可以反编译，但基本没人会这么做，没有源代码的话，测试只能停留在黑盒层面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531366749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15605,"user_name":"yiluo","can_delete":false,"product_type":"c1","uid":1078309,"ip_address":"","ucode":"0E19787AC1E5E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/25/9d976034.jpg","comment_is_top":false,"comment_ctime":1531322580,"is_pvip":false,"replies":[{"id":"5361","content":"可以的，只要enable了Jacoco，不管你的测试是自动跑的还是手工跑的，它都能统计覆盖率","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531384035,"ip_address":"","comment_id":15605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826289876","product_id":100009601,"comment_content":"单元测试只是托底的测试，并无法保证质量。这点特别赞成。尤其是无法保证你的设计和实现是正确的。而且，单元测试也不宜过长过大，否则代码提交过程就太长了。不过覆盖率工具如果结合一个靠谱的功能测试以及其他专项测试，在探测漏测方面觉得还是很好的。不知道jacoco是不是可以在手工测试的时候，探测到覆盖率？","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420468,"discussion_content":"可以的，只要enable了Jacoco，不管你的测试是自动跑的还是手工跑的，它都能统计覆盖率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531384035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15575,"user_name":"arthur","can_delete":false,"product_type":"c1","uid":1116981,"ip_address":"","ucode":"EAD9D9D2837C5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/35/2c56c29c.jpg","comment_is_top":false,"comment_ctime":1531306936,"is_pvip":false,"replies":[{"id":"5368","content":"jest内置应该集成了伊斯坦布尔，伊斯坦布尔是js的代码覆盖率工具，地位相当于java的jacoco","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531384849,"ip_address":"","comment_id":15575,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826274232","product_id":100009601,"comment_content":"我们前端用的jest，会有覆盖率报告，原理不详","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420450,"discussion_content":"jest内置应该集成了伊斯坦布尔，伊斯坦布尔是js的代码覆盖率工具，地位相当于java的jacoco","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531384849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15574,"user_name":"Cherry","can_delete":false,"product_type":"c1","uid":1163910,"ip_address":"","ucode":"FE8D3D169C8C89","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/86/21eeedb3.jpg","comment_is_top":false,"comment_ctime":1531306011,"is_pvip":false,"replies":[{"id":"5370","content":"是的，以需求为准。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531384965,"ip_address":"","comment_id":15574,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826273307","product_id":100009601,"comment_content":"测试覆盖率和测试通过标准有什么区别呢？<br>通常情况下，迭代快的项目中，测试覆盖率还是以需求为标准的吧？<br>","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420449,"discussion_content":"是的，以需求为准。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531384965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15564,"user_name":"Geek_84a77e","can_delete":false,"product_type":"c1","uid":1167077,"ip_address":"","ucode":"D1A9B5A0CB871B","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/e5/66f38361.jpg","comment_is_top":false,"comment_ctime":1531295149,"is_pvip":false,"replies":[{"id":"5278","content":"思想方法完全正确，在跑单元测试的时候，如果开启了代码覆盖率统计，那么代码的哪些部分跑到，哪些部分没有跑到，都会体现在代码覆盖率报告中，然后可以针对没有跑到的代码来设计更多的测试用例","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531310031,"ip_address":"","comment_id":15564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826262445","product_id":100009601,"comment_content":"代码覆盖率是指针对rd提测的代码，采用工具进行代码检测，我们拿到这个检测结果可以知道哪块代码没有跑，这样我们针对没有跑到的代码补充一些测试用例？我理解的对吗？","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420446,"discussion_content":"思想方法完全正确，在跑单元测试的时候，如果开启了代码覆盖率统计，那么代码的哪些部分跑到，哪些部分没有跑到，都会体现在代码覆盖率报告中，然后可以针对没有跑到的代码来设计更多的测试用例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531310031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15543,"user_name":"wangq","can_delete":false,"product_type":"c1","uid":1174283,"ip_address":"","ucode":"7AAC51A6601ECE","user_header":"https://static001.geekbang.org/account/avatar/00/11/eb/0b/6022512d.jpg","comment_is_top":false,"comment_ctime":1531274591,"is_pvip":false,"replies":[{"id":"5290","content":"基本正确👍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531316078,"ip_address":"","comment_id":15543,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826241887","product_id":100009601,"comment_content":"不知道理解的对不对，不管是哪种覆盖率都很难去判断用例的覆盖情况，从需求覆盖率来说，风险点很多是在反面案例和关联场景，从代码覆盖率来说，存在未实现代码的风险，所以案例的覆盖更多依靠人员的个人经验和能力。","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420434,"discussion_content":"基本正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531316078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15541,"user_name":"Tomandy","can_delete":false,"product_type":"c1","uid":1163587,"ip_address":"","ucode":"65B13D779BA5FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/43/01b69b03.jpg","comment_is_top":false,"comment_ctime":1531274569,"is_pvip":false,"replies":[{"id":"5281","content":"现在基本是java的主流代码覆盖率工具","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531310746,"ip_address":"","comment_id":15541,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826241865","product_id":100009601,"comment_content":"久闻Jacoco大名，有机会尝试一把！","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420432,"discussion_content":"现在基本是java的主流代码覆盖率工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531310746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15517,"user_name":"红娟","can_delete":false,"product_type":"c1","uid":1164879,"ip_address":"","ucode":"F5988451FC91A6","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/4f/0c215abf.jpg","comment_is_top":false,"comment_ctime":1531266671,"is_pvip":false,"replies":[{"id":"5285","content":"是的，需求覆盖率其实就是用需求管理工具来映射需求和测试，更多的是管理，而不是技术","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531310996,"ip_address":"","comment_id":15517,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826233967","product_id":100009601,"comment_content":"关键词 代码覆盖率  需求覆盖率<br>文中代码覆盖率篇幅比较大😊","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420421,"discussion_content":"是的，需求覆盖率其实就是用需求管理工具来映射需求和测试，更多的是管理，而不是技术","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531310996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15514,"user_name":"Cynthia🌸","can_delete":false,"product_type":"c1","uid":1163960,"ip_address":"","ucode":"B3A48089794940","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b8/ec758482.jpg","comment_is_top":false,"comment_ctime":1531265592,"is_pvip":false,"replies":[{"id":"5287","content":"哈哈，是的，能够有收获就好","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531311087,"ip_address":"","comment_id":15514,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5826232888","product_id":100009601,"comment_content":"很赞，对于代码覆盖率又有了更深一步的认识。由于没有亲力亲为做过单元测试，所以之前的概念还是停留在开发给出的单元测试结果里，那个百分比上，至于细节并没有深究。<br>看了这篇文章，觉得自己还是有必要多了解一些，知己知彼百战不殆！","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420418,"discussion_content":"哈哈，是的，能够有收获就好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531311087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1244235,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJibdOKYcFAlp3UKuITmtFMx95Qg9ficIDmCBlk14XHnljX9ias4MiauwGv3vsNrVksUlwT95J13lzK0w/132","nickname":"小寒Edwin","note":"","ucode":"CE4A35465BC3C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48275,"discussion_content":"老师好，Istanbul 这块能做增量代码的代码覆盖率么，全量的我们这边没问题，增量的目前有点毫无头绪。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573470836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15510,"user_name":"假装乐","can_delete":false,"product_type":"c1","uid":1093437,"ip_address":"","ucode":"97A7D0A6D93865","user_header":"https://static001.geekbang.org/account/avatar/00/10/af/3d/28b61e6b.jpg","comment_is_top":false,"comment_ctime":1531263264,"is_pvip":false,"replies":[{"id":"5288","content":"jacoco的早期版本2009年就有了，那时还不是很成熟，早期的版本我也没有用过","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1531311208,"ip_address":"","comment_id":15510,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5826230560","product_id":100009601,"comment_content":"jococo是哪年出的？当初因为没有找到合适的，把cobertura改成了agent模式的","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420415,"discussion_content":"jacoco的早期版本2009年就有了，那时还不是很成熟，早期的版本我也没有用过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531311208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359361,"user_name":"Herbert","can_delete":false,"product_type":"c1","uid":2358822,"ip_address":"江苏","ucode":"BB16C81CD0282C","user_header":"https://static001.geekbang.org/account/avatar/00/23/fe/26/feda16aa.jpg","comment_is_top":false,"comment_ctime":1665474041,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665474041","product_id":100009601,"comment_content":"开发人员不写单元测试，这是有自信？！","like_count":0},{"had_liked":false,"id":355990,"user_name":"付晓杰","can_delete":false,"product_type":"c1","uid":1869584,"ip_address":"上海","ucode":"66634A3401A176","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FGeCDgpXdhsXseIGF3GCzZibDJlOfO4KDqPJkMra2e0TJj3QVQk4t1oEd1BuQPtYOeavFyYxicd5fTZ33tIbPOZQ/132","comment_is_top":false,"comment_ctime":1661909388,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661909388","product_id":100009601,"comment_content":"1.广义的测试覆盖率主要分为两大类：<br>（1）面向项目的需求覆盖率<br>（2）更偏向技术的代码覆盖率<br>           代码覆盖率的三个指标：<br>                    1）行覆盖率(又称为语句覆盖率)<br>                    2)  判定覆盖(又称分支覆盖)<br>                    3)  条件覆盖<br>2.代码覆盖率工具——JaCoCo","like_count":0},{"had_liked":false,"id":349408,"user_name":"王杰","can_delete":false,"product_type":"c1","uid":3006107,"ip_address":"","ucode":"92A45495F9E02C","user_header":"","comment_is_top":false,"comment_ctime":1655952864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655952864","product_id":100009601,"comment_content":"垃圾功能测试表示完全看不懂啊","like_count":0},{"had_liked":false,"id":347937,"user_name":"李柳","can_delete":false,"product_type":"c1","uid":2974387,"ip_address":"","ucode":"706187BD574B8B","user_header":"","comment_is_top":false,"comment_ctime":1654593641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654593641","product_id":100009601,"comment_content":"单元测试交给开发做","like_count":0},{"had_liked":false,"id":323126,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1637736926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637736926","product_id":100009601,"comment_content":"慢慢消化","like_count":0},{"had_liked":false,"id":300443,"user_name":"小猪(arlis)","can_delete":false,"product_type":"c1","uid":1480164,"ip_address":"","ucode":"8BD532D679BE74","user_header":"https://static001.geekbang.org/account/avatar/00/16/95/e4/54ea7e05.jpg","comment_is_top":false,"comment_ctime":1625157502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625157502","product_id":100009601,"comment_content":"不错","like_count":0},{"had_liked":false,"id":295208,"user_name":"小田","can_delete":false,"product_type":"c1","uid":1979796,"ip_address":"","ucode":"AE53EC53854E01","user_header":"https://static001.geekbang.org/account/avatar/00/1e/35/94/d4461a98.jpg","comment_is_top":false,"comment_ctime":1622299184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622299184","product_id":100009601,"comment_content":"今天这一节看的有些吃力，没有搞过探针测试。","like_count":0},{"had_liked":false,"id":271322,"user_name":"Geek_Dream","can_delete":false,"product_type":"c1","uid":1474048,"ip_address":"","ucode":"741D3E7167C494","user_header":"https://static001.geekbang.org/account/avatar/00/16/7e/00/c00ddb9d.jpg","comment_is_top":false,"comment_ctime":1609557894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609557894","product_id":100009601,"comment_content":"自己之前工作的时候，有使用过需求覆盖率及代码覆盖率这块，项目的需求覆盖率这块用的是JIra这款项目需求管理的工具，代码覆盖率用的是茹老师提到的Jacoco，通过agent进行插桩工作，Jacoco它能对行覆盖率、条件覆盖率、分支覆盖率具有很好的颜色填充效果，还能生成代码覆盖测试报告并展现，对设计测试用例起到了很好的推进作用，，对于使用Jacoco需要测试人员有一定的读懂代码的基础，对于本专栏讲到Jacoco原理时，需要测试人员对Java的字节码有深入的理解，才能理解他的原理及内在结构组成。","like_count":0},{"had_liked":false,"id":266914,"user_name":"JACK_史蒂夫","can_delete":false,"product_type":"c1","uid":2362428,"ip_address":"","ucode":"0726DB6C8501E9","user_header":"https://static001.geekbang.org/account/avatar/00/24/0c/3c/333675cb.jpg","comment_is_top":false,"comment_ctime":1607524596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607524596","product_id":100009601,"comment_content":"代码覆盖后有的逻辑也没覆盖","like_count":0},{"had_liked":false,"id":258043,"user_name":"Geek_3b1096","can_delete":false,"product_type":"c1","uid":1549364,"ip_address":"","ucode":"A6BD92B79B3632","user_header":"","comment_is_top":false,"comment_ctime":1604278380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604278380","product_id":100009601,"comment_content":"从来没有思考过覆盖率工具实现原理","like_count":0},{"had_liked":false,"id":253179,"user_name":"298","can_delete":false,"product_type":"c1","uid":2080996,"ip_address":"","ucode":"5EBAC336EE2B1F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ZEUY0xPncofNx0djiaAnYRM0GGD1D3xFianJDeDRlzaOe0a9p9sibicj280g4CYspeLjB5L5JEreKy4WnoBa8RhCTg/132","comment_is_top":false,"comment_ctime":1602643143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602643143","product_id":100009601,"comment_content":"使用过C&#47;C++的覆盖率统计工具，gcov，lcov，都是需要事先插桩的","like_count":0},{"had_liked":false,"id":231816,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1593776486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593776486","product_id":100009601,"comment_content":"自己没有做过代码覆盖率的测试，学习完文章后，我思考：在自己实际工作中（我的工作以功能测试为主），平时提及的测试覆盖率是指需求覆盖率，GUI功能测试用例怎么能够衡量代码覆盖率呢？代码覆盖率似乎还在在单元测试和集成测试时使用。","like_count":0},{"had_liked":false,"id":199339,"user_name":"二进制_1101","can_delete":false,"product_type":"c1","uid":1933516,"ip_address":"","ucode":"28DD5F42B4F11E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/80/cc/8455c6cf.jpg","comment_is_top":false,"comment_ctime":1585487219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585487219","product_id":100009601,"comment_content":"没有做过测试覆盖率的工作，想对老师讲的mc&#47;dc测试用例也不是太懂，这方面还要多补习一下！","like_count":0},{"had_liked":false,"id":198853,"user_name":"剑君","can_delete":false,"product_type":"c1","uid":1509038,"ip_address":"","ucode":"E2ECF016D199FF","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/ae/f2e34696.jpg","comment_is_top":false,"comment_ctime":1585470555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585470555","product_id":100009601,"comment_content":"学习完，打卡留🐔","like_count":0},{"had_liked":false,"id":195653,"user_name":"Geek_7760e8","can_delete":false,"product_type":"c1","uid":1912093,"ip_address":"","ucode":"15F1CDCD5F182B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/U4f6HuNHOFpMibyjeicjcs2zgWso2FAaeZicNpvxUaGQa2mZcSCG05ZzVr9icyO7uI90seZ6yJib10wWUStHTMTSia4A/132","comment_is_top":false,"comment_ctime":1585209559,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585209559","product_id":100009601,"comment_content":"没有编程经验，一直执行手工测试的我看得好艰难！后边的课程不知道能不能听得懂🙈","like_count":0,"discussions":[{"author":{"id":1852308,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/43/94/8b2b6cc1.jpg","nickname":"微凉凉","note":"","ucode":"1F1AFD96C14238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270398,"discussion_content":"我也是这样觉得，前面几章到现在，看不懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589992243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166949,"user_name":"酱油丹","can_delete":false,"product_type":"c1","uid":1254020,"ip_address":"","ucode":"B334CF8A15F735","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/84/04453fed.jpg","comment_is_top":false,"comment_ctime":1577636006,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1577636006","product_id":100009601,"comment_content":"&quot;但也是仅此而已，对于那些压根还没有代码实现的部分，基于代码覆盖率的统计指标就无能为力了。&quot; 这个就要基于需求的测试来搞来，所以我觉得需求覆盖率不适用于敏捷开发模式，这个讲的有点武断，只是我们还没找到更好的方法而已。","like_count":0},{"had_liked":false,"id":125066,"user_name":"(╯‵□′)╯︵┻━┻","can_delete":false,"product_type":"c1","uid":1387589,"ip_address":"","ucode":"10A03AB1CB6B42","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","comment_is_top":false,"comment_ctime":1566053884,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566053884","product_id":100009601,"comment_content":"单元测试的功能点会在集成和GUI测试中耦合在一起。所以对单元测试实现高覆盖率的好处是：测试点的粒度小，设计成本低；缺陷的定位和修复成本小。","like_count":0},{"had_liked":false,"id":116197,"user_name":"蓝宇","can_delete":false,"product_type":"c1","uid":1189169,"ip_address":"","ucode":"0854B2CEE72302","user_header":"https://static001.geekbang.org/account/avatar/00/12/25/31/8dff6488.jpg","comment_is_top":false,"comment_ctime":1563800843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563800843","product_id":100009601,"comment_content":"原文：互联网测试项目中很少直接基于需求来衡量测试覆盖率，而是将软件需求转换成测试需求，然后基于测试需求再来设计测试点。<br><br>有点疑问：为什么敏捷开发需要将软件需求转换为测试需求呢","like_count":0},{"had_liked":false,"id":72656,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1551687183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551687183","product_id":100009601,"comment_content":"测试工作中没有接触过代码覆盖率的工具，所以测试的工作不仅仅是测试业务逻辑，更多的时候本着质量的意识，从广度、深度去挖掘，以前没有接触过，去学习，去自己搭建环境，去实践，对于测试的理解更上一层楼！<br>      但是在测试报告的编写中，知道测试用例覆盖率和需求覆盖率，那时候用简单的加减法算的，没用具体工具。","like_count":0},{"had_liked":false,"id":34125,"user_name":"郭小菜","can_delete":false,"product_type":"c1","uid":1017297,"ip_address":"","ucode":"C4044C80BB331B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYfcUOVhf3vhEBUNGHgtIcw8ujMZnkabicLzzjn3xwdeeic2PJSe7ibJgMx2UjF0d7L4B4gsRpaqe2A/132","comment_is_top":false,"comment_ctime":1540012118,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1540012118","product_id":100009601,"comment_content":"老师，jacoco可以直接应用于线上吗？比如说根据用户的实际操作看代码的覆盖情况？","like_count":0},{"had_liked":false,"id":21213,"user_name":"碎碎念","can_delete":false,"product_type":"c1","uid":1211688,"ip_address":"","ucode":"122AE5282B31E6","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/28/423df492.jpg","comment_is_top":false,"comment_ctime":1534983275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534983275","product_id":100009601,"comment_content":"覆盖率分为项目的需要覆盖和代码覆盖，而目前常说的覆盖率更多的是指代码覆盖率。覆盖率这是检查代码的完备性，并不能说明覆盖率高软件的质量就高，初学者，多多指教","like_count":0},{"had_liked":false,"id":20995,"user_name":"才子","can_delete":false,"product_type":"c1","uid":1195046,"ip_address":"","ucode":"3B3422DA9AC8FA","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/26/ef973b79.jpg","comment_is_top":false,"comment_ctime":1534856968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534856968","product_id":100009601,"comment_content":"真正写好单元测试，其代码量会是源代码的数倍。现在开发人员也不愿意写单元测试或者写的不完全。老师说的对，代码覆盖率只是一个指标，并不能代表产品的质量。我们单位内以此作为质量的标杆，很不合理。而且有时候会为了满足覆盖率而作假，这是很不合理的。","like_count":0},{"had_liked":false,"id":18220,"user_name":"娟~","can_delete":false,"product_type":"c1","uid":1167760,"ip_address":"","ucode":"706C4D1389852A","user_header":"https://static001.geekbang.org/account/avatar/00/11/d1/90/55394a99.jpg","comment_is_top":false,"comment_ctime":1533195647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533195647","product_id":100009601,"comment_content":"老师您好，我最近在思考代码差异覆盖率，主要想考察的点是前后两个版本新增代码部分的覆盖情况，您有好的思路可以指导一下吗？","like_count":0},{"had_liked":false,"id":16552,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1532019761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532019761","product_id":100009601,"comment_content":"什么是代码静态工具？","like_count":0},{"had_liked":false,"id":16452,"user_name":"关甲乙🙈","can_delete":false,"product_type":"c1","uid":1089219,"ip_address":"","ucode":"4F4AF08E6D25A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/9e/c3/9bfd30c5.jpg","comment_is_top":false,"comment_ctime":1531963964,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531963964","product_id":100009601,"comment_content":"炳晟老师我来啦，大会上讲的好，这里讲的更赞一如既往的支持👍👍👍顺便抛一个问题哈，我们后端用的是纯 node，针对node也有适合的单测工具及覆盖率工具么","like_count":0},{"had_liked":false,"id":16275,"user_name":"田🤘🏻妞","can_delete":false,"product_type":"c1","uid":1167327,"ip_address":"","ucode":"3ED711E62ACD4F","user_header":"https://static001.geekbang.org/account/avatar/00/11/cf/df/4ee0d282.jpg","comment_is_top":false,"comment_ctime":1531873078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531873078","product_id":100009601,"comment_content":"每一篇文章都看好几遍。想问软件需求转换为测试需求  是什么意思？能否实例化一下  期待您的解答  谢谢","like_count":0},{"had_liked":false,"id":15872,"user_name":"Adele","can_delete":false,"product_type":"c1","uid":1009690,"ip_address":"","ucode":"5D2392E02679AF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/1a/dac67baa.jpg","comment_is_top":false,"comment_ctime":1531575974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531575974","product_id":100009601,"comment_content":"JaCoCo是开源免费的吗?","like_count":0},{"had_liked":false,"id":15841,"user_name":"胖虫子","can_delete":false,"product_type":"c1","uid":1100956,"ip_address":"","ucode":"21FC09D0121B4F","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/9c/ec71155f.jpg","comment_is_top":false,"comment_ctime":1531550518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531550518","product_id":100009601,"comment_content":"都没接触过，留言的好心虚","like_count":0},{"had_liked":false,"id":15752,"user_name":"coco","can_delete":false,"product_type":"c1","uid":1170264,"ip_address":"","ucode":"BAF47321B1CE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/db/58/1200e783.jpg","comment_is_top":false,"comment_ctime":1531448699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531448699","product_id":100009601,"comment_content":"知道覆盖率工具的实现原理的具体好处是什么，能举个例子吗？","like_count":0},{"had_liked":false,"id":15715,"user_name":"无名氏","can_delete":false,"product_type":"c1","uid":1168845,"ip_address":"","ucode":"1922C465A834F7","user_header":"https://static001.geekbang.org/account/avatar/00/11/d5/cd/6215d678.jpg","comment_is_top":false,"comment_ctime":1531409211,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531409211","product_id":100009601,"comment_content":"老师好，我们也在使用jacoco.在使用中发现一个问题，有些代码覆盖的颜色是白色的。不是jacoco文档介绍的黄色，绿色，红色。这个白色是什么原因造成的呢？不知道你是否知晓","like_count":0},{"had_liked":false,"id":15523,"user_name":"FamilyLi","can_delete":false,"product_type":"c1","uid":1166828,"ip_address":"","ucode":"CB51427E68385A","user_header":"https://static001.geekbang.org/account/avatar/00/11/cd/ec/0d1c052e.jpg","comment_is_top":false,"comment_ctime":1531268135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531268135","product_id":100009601,"comment_content":"对于安卓智能机的测试有什么好的代码覆盖率测试方法或工具。","like_count":0}]}