{"id":40092,"title":"13 | 为什么我们需要Pod？","content":"<p>你好，我是张磊。今天我和你分享的主题是：为什么我们需要Pod。</p><p>在前面的文章中，我详细介绍了在Kubernetes里部署一个应用的过程。在这些讲解中，我提到了这样一个知识点：Pod，是Kubernetes项目中最小的API对象。如果换一个更专业的说法，我们可以这样描述：Pod，是Kubernetes项目的原子调度单位。</p><p>不过，我相信你在学习和使用Kubernetes项目的过程中，已经不止一次地想要问这样一个问题：<span class=\"orange\">为什么我们会需要Pod？</span></p><p>是啊，我们在前面已经花了很多精力去解读Linux容器的原理、分析了Docker容器的本质，终于，“Namespace做隔离，Cgroups做限制，rootfs做文件系统”这样的“三句箴言”可以朗朗上口了，<strong>为什么Kubernetes项目又突然搞出一个Pod来呢？</strong></p><p>要回答这个问题，我们还是要一起回忆一下我曾经反复强调的一个问题：容器的本质到底是什么？</p><p>你现在应该可以不假思索地回答出来：容器的本质是进程。</p><p>没错。容器，就是未来云计算系统中的进程；容器镜像就是这个系统里的“.exe”安装包。那么Kubernetes呢？</p><p>你应该也能立刻回答上来：Kubernetes就是操作系统！</p><!-- [[[read_end]]] --><p>非常正确。</p><p>现在，就让我们登录到一台Linux机器里，执行一条如下所示的命令：</p><pre><code>$ pstree -g\n</code></pre><p>这条命令的作用，是展示当前系统中正在运行的进程的树状结构。它的返回结果如下所示：</p><pre><code>systemd(1)-+-accounts-daemon(1984)-+-{gdbus}(1984)\n           | `-{gmain}(1984)\n           |-acpid(2044)\n          ...      \n           |-lxcfs(1936)-+-{lxcfs}(1936)\n           | `-{lxcfs}(1936)\n           |-mdadm(2135)\n           |-ntpd(2358)\n           |-polkitd(2128)-+-{gdbus}(2128)\n           | `-{gmain}(2128)\n           |-rsyslogd(1632)-+-{in:imklog}(1632)\n           |  |-{in:imuxsock) S 1(1632)\n           | `-{rs:main Q:Reg}(1632)\n           |-snapd(1942)-+-{snapd}(1942)\n           |  |-{snapd}(1942)\n           |  |-{snapd}(1942)\n           |  |-{snapd}(1942)\n           |  |-{snapd}(1942)\n</code></pre><p>不难发现，在一个真正的操作系统里，进程并不是“孤苦伶仃”地独自运行的，而是以进程组的方式，“有原则地”组织在一起。比如，这里有一个叫作rsyslogd的程序，它负责的是Linux操作系统里的日志处理。可以看到，rsyslogd的主程序main，和它要用到的内核日志模块imklog等，同属于1632进程组。这些进程相互协作，共同完成rsyslogd程序的职责。</p><blockquote>\n<p>注意：我在本篇中提到的“进程”，比如，rsyslogd对应的imklog，imuxsock和main，严格意义上来说，其实是Linux 操作系统语境下的“线程”。这些线程，或者说，轻量级进程之间，可以共享文件、信号、数据内存、甚至部分代码，从而紧密协作共同完成一个程序的职责。所以同理，我提到的“进程组”，对应的也是 Linux 操作系统语境下的“线程组”。这种命名关系与实际情况的不一致，是Linux 发展历史中的一个遗留问题。对这个话题感兴趣的同学，可以阅读<a href=\"https://www.ibm.com/developerworks/cn/linux/kernel/l-thread/index.html\">这篇技术文章</a>来了解一下。</p>\n</blockquote><p>而Kubernetes项目所做的，其实就是将“进程组”的概念映射到了容器技术中，并使其成为了这个云计算“操作系统”里的“一等公民”。</p><p>Kubernetes项目之所以要这么做的原因，我在前面介绍Kubernetes和Borg的关系时曾经提到过：在Borg项目的开发和实践过程中，Google公司的工程师们发现，他们部署的应用，往往都存在着类似于“进程和进程组”的关系。更具体地说，就是这些应用之间有着密切的协作关系，使得它们必须部署在同一台机器上。</p><p>而如果事先没有“组”的概念，像这样的运维关系就会非常难以处理。</p><p>我还是以前面的rsyslogd为例子。已知rsyslogd由三个进程组成：一个imklog模块，一个imuxsock模块，一个rsyslogd自己的main函数主进程。这三个进程一定要运行在同一台机器上，否则，它们之间基于Socket的通信和文件交换，都会出现问题。</p><p>现在，我要把rsyslogd这个应用给容器化，由于受限于容器的“单进程模型”，这三个模块必须被分别制作成三个不同的容器。而在这三个容器运行的时候，它们设置的内存配额都是1 GB。</p><blockquote>\n<p>再次强调一下：容器的“单进程模型”，并不是指容器里只能运行“一个”进程，而是指容器没有管理多个进程的能力。这是因为容器里PID=1的进程就是应用本身，其他的进程都是这个PID=1进程的子进程。可是，用户编写的应用，并不能够像正常操作系统里的init进程或者systemd那样拥有进程管理的功能。比如，你的应用是一个Java Web程序（PID=1），然后你执行docker exec在后台启动了一个Nginx进程（PID=3）。可是，当这个Nginx进程异常退出的时候，你该怎么知道呢？这个进程退出后的垃圾收集工作，又应该由谁去做呢？</p>\n</blockquote><p>假设我们的Kubernetes集群上有两个节点：node-1上有3 GB可用内存，node-2有2.5 GB可用内存。</p><p>这时，假设我要用Docker Swarm来运行这个rsyslogd程序。为了能够让这三个容器都运行在同一台机器上，我就必须在另外两个容器上设置一个affinity=main（与main容器有亲密性）的约束，即：它们俩必须和main容器运行在同一台机器上。</p><p>然后，我顺序执行：“docker run main”“docker run imklog”和“docker run imuxsock”，创建这三个容器。</p><p>这样，这三个容器都会进入Swarm的待调度队列。然后，main容器和imklog容器都先后出队并被调度到了node-2上（这个情况是完全有可能的）。</p><p>可是，当imuxsock容器出队开始被调度时，Swarm就有点懵了：node-2上的可用资源只有0.5 GB了，并不足以运行imuxsock容器；可是，根据affinity=main的约束，imuxsock容器又只能运行在node-2上。</p><p>这就是一个典型的成组调度（gang scheduling）没有被妥善处理的例子。</p><p>在工业界和学术界，关于这个问题的讨论可谓旷日持久，也产生了很多可供选择的解决方案。</p><p>比如，Mesos中就有一个资源囤积（resource hoarding）的机制，会在所有设置了Affinity约束的任务都达到时，才开始对它们统一进行调度。而在Google Omega论文中，则提出了使用乐观调度处理冲突的方法，即：先不管这些冲突，而是通过精心设计的回滚机制在出现了冲突之后解决问题。</p><p>可是这些方法都谈不上完美。资源囤积带来了不可避免的调度效率损失和死锁的可能性；而乐观调度的复杂程度，则不是常规技术团队所能驾驭的。</p><p>但是，到了Kubernetes项目里，这样的问题就迎刃而解了：Pod是Kubernetes里的原子调度单位。这就意味着，Kubernetes项目的调度器，是统一按照Pod而非容器的资源需求进行计算的。</p><p>所以，像imklog、imuxsock和main函数主进程这样的三个容器，正是一个典型的由三个容器组成的Pod。Kubernetes项目在调度时，自然就会去选择可用内存等于3 GB的node-1节点进行绑定，而根本不会考虑node-2。</p><p>像这样容器间的紧密协作，我们可以称为“超亲密关系”。这些具有“超亲密关系”容器的典型特征包括但不限于：互相之间会发生直接的文件交换、使用localhost或者Socket文件进行本地通信、会发生非常频繁的远程调用、需要共享某些Linux Namespace（比如，一个容器要加入另一个容器的Network Namespace）等等。</p><p>这也就意味着，并不是所有有“关系”的容器都属于同一个Pod。比如，PHP应用容器和MySQL虽然会发生访问关系，但并没有必要、也不应该部署在同一台机器上，它们更适合做成两个Pod。</p><p>不过，相信此时你可能会有<strong>第二个疑问：</strong></p><p>对于初学者来说，一般都是先学会了用Docker这种单容器的工具，才会开始接触Pod。</p><p>而如果Pod的设计只是出于调度上的考虑，那么Kubernetes项目似乎完全没有必要非得把Pod作为“一等公民”吧？这不是故意增加用户的学习门槛吗？</p><p>没错，如果只是处理“超亲密关系”这样的调度问题，有Borg和Omega论文珠玉在前，Kubernetes项目肯定可以在调度器层面给它解决掉。</p><p>不过，Pod在Kubernetes项目里还有更重要的意义，那就是：<strong>容器设计模式</strong>。</p><p>为了理解这一层含义，我就必须先给你介绍一下<span class=\"orange\">Pod的实现原理。</span></p><p><strong>首先，关于Pod最重要的一个事实是：它只是一个逻辑概念。</strong></p><p>也就是说，Kubernetes真正处理的，还是宿主机操作系统上Linux容器的Namespace和Cgroups，而并不存在一个所谓的Pod的边界或者隔离环境。</p><p>那么，Pod又是怎么被“创建”出来的呢？</p><p>答案是：Pod，其实是一组共享了某些资源的容器。</p><p>具体的说：<strong>Pod里的所有容器，共享的是同一个Network Namespace，并且可以声明共享同一个Volume。</strong></p><p>那这么来看的话，一个有A、B两个容器的Pod，不就是等同于一个容器（容器A）共享另外一个容器（容器B）的网络和Volume的玩儿法么？</p><p>这好像通过docker run --net --volumes-from这样的命令就能实现嘛，比如：</p><pre><code>$ docker run --net=B --volumes-from=B --name=A image-A ...\n</code></pre><p>但是，你有没有考虑过，如果真这样做的话，容器B就必须比容器A先启动，这样一个Pod里的多个容器就不是对等关系，而是拓扑关系了。</p><p>所以，在Kubernetes项目里，Pod的实现需要使用一个中间容器，这个容器叫作Infra容器。在这个Pod中，Infra容器永远都是第一个被创建的容器，而其他用户定义的容器，则通过Join Network Namespace的方式，与Infra容器关联在一起。这样的组织关系，可以用下面这样一个示意图来表达：</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/cf/8c016391b4b17923f38547c498e434cf.png?wh=490*665\" alt=\"\"><br>\n如上图所示，这个Pod里有两个用户容器A和B，还有一个Infra容器。很容易理解，在Kubernetes项目里，Infra容器一定要占用极少的资源，所以它使用的是一个非常特殊的镜像，叫作：<code>k8s.gcr.io/pause</code>。这个镜像是一个用汇编语言编写的、永远处于“暂停”状态的容器，解压后的大小也只有100~200 KB左右。</p><p>而在Infra容器“Hold住”Network Namespace后，用户容器就可以加入到Infra容器的Network Namespace当中了。所以，如果你查看这些容器在宿主机上的Namespace文件（这个Namespace文件的路径，我已经在前面的内容中介绍过），它们指向的值一定是完全一样的。</p><p>这也就意味着，对于Pod里的容器A和容器B来说：</p><ul>\n<li>它们可以直接使用localhost进行通信；</li>\n<li>它们看到的网络设备跟Infra容器看到的完全一样；</li>\n<li>一个Pod只有一个IP地址，也就是这个Pod的Network Namespace对应的IP地址；</li>\n<li>当然，其他的所有网络资源，都是一个Pod一份，并且被该Pod中的所有容器共享；</li>\n<li>Pod的生命周期只跟Infra容器一致，而与容器A和B无关。</li>\n</ul><p>而对于同一个Pod里面的所有用户容器来说，它们的进出流量，也可以认为都是通过Infra容器完成的。这一点很重要，因为<strong>将来如果你要为Kubernetes开发一个网络插件时，应该重点考虑的是如何配置这个Pod的Network Namespace，而不是每一个用户容器如何使用你的网络配置，这是没有意义的。</strong></p><p>这就意味着，如果你的网络插件需要在容器里安装某些包或者配置才能完成的话，是不可取的：Infra容器镜像的rootfs里几乎什么都没有，没有你随意发挥的空间。当然，这同时也意味着你的网络插件完全不必关心用户容器的启动与否，而只需要关注如何配置Pod，也就是Infra容器的Network Namespace即可。</p><p>有了这个设计之后，共享Volume就简单多了：Kubernetes项目只要把所有Volume的定义都设计在Pod层级即可。</p><p>这样，一个Volume对应的宿主机目录对于Pod来说就只有一个，Pod里的容器只要声明挂载这个Volume，就一定可以共享这个Volume对应的宿主机目录。比如下面这个例子：</p><pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: two-containers\nspec:\n  restartPolicy: Never\n  volumes:\n  - name: shared-data\n    hostPath:      \n      path: /data\n  containers:\n  - name: nginx-container\n    image: nginx\n    volumeMounts:\n    - name: shared-data\n      mountPath: /usr/share/nginx/html\n  - name: debian-container\n    image: debian\n    volumeMounts:\n    - name: shared-data\n      mountPath: /pod-data\n    command: [&quot;/bin/sh&quot;]\n    args: [&quot;-c&quot;, &quot;echo Hello from the debian container &gt; /pod-data/index.html&quot;]\n</code></pre><p>在这个例子中，debian-container和nginx-container都声明挂载了shared-data这个Volume。而shared-data是hostPath类型。所以，它对应在宿主机上的目录就是：/data。而这个目录，其实就被同时绑定挂载进了上述两个容器当中。</p><p>这就是为什么，nginx-container可以从它的/usr/share/nginx/html目录中，读取到debian-container生成的index.html文件的原因。</p><p><span class=\"orange\">明白了Pod的实现原理后，我们再来讨论“容器设计模式”</span>，就容易多了。</p><p>Pod这种“超亲密关系”容器的设计思想，实际上就是希望，当用户想在一个容器里跑多个功能并不相关的应用时，应该优先考虑它们是不是更应该被描述成一个Pod里的多个容器。</p><p>为了能够掌握这种思考方式，你就应该尽量尝试使用它来描述一些用单个容器难以解决的问题。</p><p><strong>第一个最典型的例子是：WAR包与Web服务器。</strong></p><p>我们现在有一个Java Web应用的WAR包，它需要被放在Tomcat的webapps目录下运行起来。</p><p>假如，你现在只能用Docker来做这件事情，那该如何处理这个组合关系呢？</p><ul>\n<li>一种方法是，把WAR包直接放在Tomcat镜像的webapps目录下，做成一个新的镜像运行起来。可是，这时候，如果你要更新WAR包的内容，或者要升级Tomcat镜像，就要重新制作一个新的发布镜像，非常麻烦。</li>\n<li>另一种方法是，你压根儿不管WAR包，永远只发布一个Tomcat容器。不过，这个容器的webapps目录，就必须声明一个hostPath类型的Volume，从而把宿主机上的WAR包挂载进Tomcat容器当中运行起来。不过，这样你就必须要解决一个问题，即：如何让每一台宿主机，都预先准备好这个存储有WAR包的目录呢？这样来看，你只能独立维护一套分布式存储系统了。</li>\n</ul><p>实际上，有了Pod之后，这样的问题就很容易解决了。我们可以把WAR包和Tomcat分别做成镜像，然后把它们作为一个Pod里的两个容器“组合”在一起。这个Pod的配置文件如下所示：</p><pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: javaweb-2\nspec:\n  initContainers:\n  - image: geektime/sample:v2\n    name: war\n    command: [&quot;cp&quot;, &quot;/sample.war&quot;, &quot;/app&quot;]\n    volumeMounts:\n    - mountPath: /app\n      name: app-volume\n  containers:\n  - image: geektime/tomcat:7.0\n    name: tomcat\n    command: [&quot;sh&quot;,&quot;-c&quot;,&quot;/root/apache-tomcat-7.0.42-v2/bin/start.sh&quot;]\n    volumeMounts:\n    - mountPath: /root/apache-tomcat-7.0.42-v2/webapps\n      name: app-volume\n    ports:\n    - containerPort: 8080\n      hostPort: 8001 \n  volumes:\n  - name: app-volume\n    emptyDir: {}\n</code></pre><p>在这个Pod中，我们定义了两个容器，第一个容器使用的镜像是geektime/sample:v2，这个镜像里只有一个WAR包（sample.war）放在根目录下。而第二个容器则使用的是一个标准的Tomcat镜像。</p><p>不过，你可能已经注意到，WAR包容器的类型不再是一个普通容器，而是一个Init Container类型的容器。</p><p>在Pod中，所有Init Container定义的容器，都会比spec.containers定义的用户容器先启动。并且，Init Container容器会按顺序逐一启动，而直到它们都启动并且退出了，用户容器才会启动。</p><p>所以，这个Init Container类型的WAR包容器启动后，我执行了一句\"cp /sample.war /app\"，把应用的WAR包拷贝到/app目录下，然后退出。</p><p>而后这个/app目录，就挂载了一个名叫app-volume的Volume。</p><p>接下来就很关键了。Tomcat容器，同样声明了挂载app-volume到自己的webapps目录下。</p><p>所以，等Tomcat容器启动时，它的webapps目录下就一定会存在sample.war文件：这个文件正是WAR包容器启动时拷贝到这个Volume里面的，而这个Volume是被这两个容器共享的。</p><p>像这样，我们就用一种“组合”方式，解决了WAR包与Tomcat容器之间耦合关系的问题。</p><p>实际上，这个所谓的“组合”操作，正是容器设计模式里最常用的一种模式，它的名字叫：sidecar。</p><p>顾名思义，sidecar指的就是我们可以在一个Pod中，启动一个辅助容器，来完成一些独立于主进程（主容器）之外的工作。</p><p>比如，在我们的这个应用Pod中，Tomcat容器是我们要使用的主容器，而WAR包容器的存在，只是为了给它提供一个WAR包而已。所以，我们用Init Container的方式优先运行WAR包容器，扮演了一个sidecar的角色。</p><p><strong>第二个例子，则是容器的日志收集。</strong></p><p>比如，我现在有一个应用，需要不断地把日志文件输出到容器的/var/log目录中。</p><p>这时，我就可以把一个Pod里的Volume挂载到应用容器的/var/log目录上。</p><p>然后，我在这个Pod里同时运行一个sidecar容器，它也声明挂载同一个Volume到自己的/var/log目录上。</p><p>这样，接下来sidecar容器就只需要做一件事儿，那就是不断地从自己的/var/log目录里读取日志文件，转发到MongoDB或者Elasticsearch中存储起来。这样，一个最基本的日志收集工作就完成了。</p><p>跟第一个例子一样，这个例子中的sidecar的主要工作也是使用共享的Volume来完成对文件的操作。</p><p>但不要忘记，Pod的另一个重要特性是，它的所有容器都共享同一个Network Namespace。这就使得很多与Pod网络相关的配置和管理，也都可以交给sidecar完成，而完全无须干涉用户容器。这里最典型的例子莫过于Istio这个微服务治理项目了。</p><p>Istio项目使用sidecar容器完成微服务治理的原理，我在后面很快会讲解到。</p><blockquote>\n<p>备注：Kubernetes社区曾经把“容器设计模式”这个理论，整理成了<a href=\"https://www.usenix.org/conference/hotcloud16/workshop-program/presentation/burns\">一篇小论文</a>，你可以点击链接浏览。</p>\n</blockquote><h2>总结</h2><p>在本篇文章中我重点分享了Kubernetes项目中Pod的实现原理。</p><p>Pod是Kubernetes项目与其他单容器项目相比最大的不同，也是一位容器技术初学者需要面对的第一个与常规认知不一致的知识点。</p><p>事实上，直到现在，仍有很多人把容器跟虚拟机相提并论，他们把容器当做性能更好的虚拟机，喜欢讨论如何把应用从虚拟机无缝地迁移到容器中。</p><p>但实际上，无论是从具体的实现原理，还是从使用方法、特性、功能等方面，容器与虚拟机几乎没有任何相似的地方；也不存在一种普遍的方法，能够把虚拟机里的应用无缝迁移到容器中。因为，容器的性能优势，必然伴随着相应缺陷，即：它不能像虚拟机那样，完全模拟本地物理机环境中的部署方法。</p><p>所以，这个“上云”工作的完成，最终还是要靠深入理解容器的本质，即：进程。</p><p>实际上，一个运行在虚拟机里的应用，哪怕再简单，也是被管理在systemd或者supervisord之下的<strong>一组进程，而不是一个进程</strong>。这跟本地物理机上应用的运行方式其实是一样的。这也是为什么，从物理机到虚拟机之间的应用迁移，往往并不困难。</p><p>可是对于容器来说，一个容器永远只能管理一个进程。更确切地说，一个容器，就是一个进程。这是容器技术的“天性”，不可能被修改。所以，将一个原本运行在虚拟机里的应用，“无缝迁移”到容器中的想法，实际上跟容器的本质是相悖的。</p><p>这也是当初Swarm项目无法成长起来的重要原因之一：一旦到了真正的生产环境上，Swarm这种单容器的工作方式，就难以描述真实世界里复杂的应用架构了。</p><p>所以，你现在可以这么理解Pod的本质：</p><blockquote>\n<p>Pod，实际上是在扮演传统基础设施里“虚拟机”的角色；而容器，则是这个虚拟机里运行的用户程序。</p>\n</blockquote><p>所以下一次，当你需要把一个运行在虚拟机里的应用迁移到Docker容器中时，一定要仔细分析到底有哪些进程（组件）运行在这个虚拟机里。</p><p>然后，你就可以把整个虚拟机想象成为一个Pod，把这些进程分别做成容器镜像，把有顺序关系的容器，定义为Init Container。这才是更加合理的、松耦合的容器编排诀窍，也是从传统应用架构，到“微服务架构”最自然的过渡方式。</p><blockquote>\n<p>注意：Pod这个概念，提供的是一种编排思想，而不是具体的技术方案。所以，如果愿意的话，你完全可以使用虚拟机来作为Pod的实现，然后把用户容器都运行在这个虚拟机里。比如，Mirantis公司的<a href=\"https://github.com/Mirantis/virtlet\">virtlet项目</a>就在干这个事情。甚至，你可以去实现一个带有Init进程的容器项目，来模拟传统应用的运行方式。这些工作，在Kubernetes中都是非常轻松的，也是我们后面讲解CRI时会提到的内容。</p>\n</blockquote><p>相反的，如果强行把整个应用塞到一个容器里，甚至不惜使用Docker In Docker这种在生产环境中后患无穷的解决方案，恐怕最后往往会得不偿失。</p><h2>思考题</h2><p>除了Network Namespace外，Pod里的容器还可以共享哪些Namespace呢？你能说出共享这些Namesapce的具体应用场景吗？</p><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":26024,"user_name":"段帅民","can_delete":false,"product_type":"c1","uid":1010889,"ip_address":"","ucode":"0E72BA8B25E295","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/c9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1537491648,"is_pvip":false,"replies":[{"id":"9435","content":"这是我见过最形象的评论……","user_name":"作者回复","comment_id":26024,"uid":"1218095","ip_address":"","utype":1,"ctime":1537494144,"user_name_real":"Geek_6ef93d"}],"discussion_count":13,"race_medal":0,"score":"1637920031424","product_id":100015201,"comment_content":"这文章读起来像吃脆苹果，爽，这是我订阅专栏中写的最好的，没有之一","like_count":382,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424497,"discussion_content":"这是我见过最形象的评论……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537494144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2169373,"avatar":"https://static001.geekbang.org/account/avatar/00/21/1a/1d/1295e244.jpg","nickname":"TiAmo","note":"","ucode":"99F7EFB4204EF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384149,"discussion_content":"21年刚开始追这个栏目，晚吗","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1626404169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1032932,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c2/e4/ad418d90.jpg","nickname":"风","note":"","ucode":"2DEDB586E625C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2169373,"avatar":"https://static001.geekbang.org/account/avatar/00/21/1a/1d/1295e244.jpg","nickname":"TiAmo","note":"","ucode":"99F7EFB4204EF9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558325,"discussion_content":"2022年开始追，发现不晚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648205043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384149,"ip_address":""},"score":558325,"extra":""},{"author":{"id":1916685,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","nickname":"怀揣梦想的学渣","note":"","ucode":"2349B9F4F6FDE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2169373,"avatar":"https://static001.geekbang.org/account/avatar/00/21/1a/1d/1295e244.jpg","nickname":"TiAmo","note":"","ucode":"99F7EFB4204EF9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564621,"discussion_content":"2022年4月18日开始追，感觉还是有收获，比网上各种k8s培训班质量高很多，比Linux基金会那几个国内培训班的视频质量要好很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650289929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384149,"ip_address":""},"score":564621,"extra":""},{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1916685,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","nickname":"怀揣梦想的学渣","note":"","ucode":"2349B9F4F6FDE3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":574222,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653911353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":564621,"ip_address":""},"score":574222,"extra":""}]},{"author":{"id":2930234,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KqZeIjNOVQJnsIFkDBWl5wfaxWDGLpIMUdFbF7SQhXFavmxgpwQPj9FrGAV4xNrqd733qicT4IZVibELyziaLokDQ/132","nickname":"罗艺","note":"","ucode":"9D4E1A377BCF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562374,"discussion_content":"不光干脆，还很甘甜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649816411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2299225,"avatar":"https://static001.geekbang.org/account/avatar/00/23/15/59/65f7ebfc.jpg","nickname":"forbidden","note":"","ucode":"A85647733A765B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391996,"discussion_content":"这篇文章，价值极高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630752479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1249652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/11/74/72ffa6d6.jpg","nickname":"StayLet","note":"","ucode":"6B748CA3AF3C5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370829,"discussion_content":"一路读下来就特别佩服张老师的词汇量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619538772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1311001,"avatar":"https://static001.geekbang.org/account/avatar/00/14/01/19/f4da2829.jpg","nickname":"一秒","note":"","ucode":"F149B7F60620BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348336,"discussion_content":"从未见过如此厚颜xx之人。。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612515516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041512,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/26/a8/f1ebe0c8.jpg","nickname":"btzhangmen","note":"","ucode":"95AFF56F8541FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338990,"discussion_content":"我也是彻底的小白，我吃得也非常开心，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609470768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6b/c1/331b91c4.jpg","nickname":"郑文捷","note":"","ucode":"98C08BB54F0974","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214652,"discussion_content":"过了，不过这一篇写的好流畅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585222630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35739,"discussion_content":"文章质量极高，对于我这样的小白来说，通俗易懂，扫除了之前很多的误区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571302401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1640301,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOsGtyIibIo4rvFgbVUiabeVCLMx5nNicfy25LiaNXRtZC9yEpNxkuiax5IMbb02aHoCjj1FWYJQZd9WQ/132","nickname":"杨天一","note":"","ucode":"3A10AEFA182A88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6971,"discussion_content":"神奇比喻，还蛮形象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567234588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29231,"user_name":"Jeff.W","can_delete":false,"product_type":"c1","uid":1140420,"ip_address":"","ucode":"2043F83FB7B39C","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/c4/038f9325.jpg","comment_is_top":false,"comment_ctime":1538295490,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1328683189954","product_id":100015201,"comment_content":"pod是一个小家庭，它把密不可分的家庭成员(container)聚在一起，Infra container则是家长，掌管家中共通资源，家庭成员通过sidecar方式互帮互助，其乐融融～","like_count":309,"discussions":[{"author":{"id":1004666,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/7a/bf7e6f40.jpg","nickname":"Driveby","note":"","ucode":"81D7796F9277DB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550628,"discussion_content":"每篇文章都能看到你的如此生动形象的评论～","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1644646996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1913231,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgiarK8ic7vY1RuR65ESnibhR5D6ic4rCf6DW9PBS4UCHcEZjibZWwGeicU82EllIic5nBcia0B0x0TcsVdQ/132","nickname":"程辉","note":"","ucode":"E9B49C5DDA84CD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581042,"discussion_content":"概括的极佳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658469605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65456,"user_name":"Chaos","can_delete":false,"product_type":"c1","uid":1014962,"ip_address":"","ucode":"7CDC32065ABA78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/b2/d2f03436.jpg","comment_is_top":false,"comment_ctime":1549371335,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"1049521391559","product_id":100015201,"comment_content":"感谢张磊，这是本人看过解释 Pod 以及为何要有 Pod 这个设计最好的文章（看过估计20篇，这是第一篇中文的）。<br><br>云计算系统的操作系统是 k8s ，容器就相当于是其进程，而 Pod 则是进程组。这样解释给有 Linux 运维底子的人听，基本上一下子就明白过来了。赞！但容器镜像是「 .exe 」安装包似乎有点不妥，个人觉得是二进制可执行安装包似乎更恰当和通用一些。<br><br>Pod 的另一个重要意义，容器设计模式，通过这篇里有了更深的认知，在迁移传统基于虚拟机的应用时起到了关键作用。<br><br>其实 k8s.gcr.io&#47;pause 是前不久读了好几遍（因为讲的比较生涩） Ian Lewis 的 The Almighty Pause Container 这篇才基本明白原理。再读这篇算是巩固和解惑了。<br><br>「而后这个 &#47;app 目录，就挂载了一个名叫 app-volume 的 Volume 」惭愧，作为有18年实践经验的 Linux 老司机居然也愣了几十秒，继续往下看解释后才恍然大悟 volume 和 mountPath 是 bind mount （建议附注一下是绑定挂载）。<br><br>最后的总结也非常棒，「 Pod 实际上是在扮演传统基础设施里&quot;虚拟机&quot;的角色；而容器则是这个虚拟机里的应用程序」。要完成传统基于虚拟机的应用到微服务架构的迁移，核心思想是：分析应用组成（组件、进程），将其拆分成松耦合的容器（以容器镜像方式分发），利用 Init Container 来解决顺序和依赖关系。<br><br>这个课程，光这一篇就值回票价了。居然还附带学习到了 Docker Swarm 的局限性。","like_count":244,"discussions":[{"author":{"id":2435609,"avatar":"","nickname":"HackerJie","note":"","ucode":"D4177750BD2A65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349915,"discussion_content":"Linux老司机留言很棒","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1613629031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1309152,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f9/e0/2cdd1bc9.jpg","nickname":"Gray13","note":"","ucode":"3C7FEFE31CDB51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302672,"discussion_content":"老司机留言也很棒 优秀","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599007162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2054990,"avatar":"","nickname":"海柔儿稀罕","note":"","ucode":"CBEEBEA2CAE8A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293227,"discussion_content":"总结的好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595487397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2999800,"avatar":"","nickname":"Geek_32ee0b","note":"","ucode":"FD81E8F4DA184F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572766,"discussion_content":"看完后茅塞顿开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652949767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564384,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650242964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134694,"avatar":"https://static001.geekbang.org/account/avatar/00/11/50/66/047ee060.jpg","nickname":"Return12321","note":"","ucode":"F7A3C5ED02E1D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364789,"discussion_content":"老司机留言太棒了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617607335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26060,"user_name":"风轨","can_delete":false,"product_type":"c1","uid":1185844,"ip_address":"","ucode":"7B8A5233B61EB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/34/c082419c.jpg","comment_is_top":false,"comment_ctime":1537494650,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"409559387770","product_id":100015201,"comment_content":"刚上网查了，Linux 支持7种namespace:<br>1. cgroup用于隔离cgroup根目录;<br>2. IPC用于隔离系统消息队列;<br>3. Network隔离网络;<br>4. Mount隔离挂载点;<br>5. PID隔离进程;<br>6. User隔离用户和用户组;<br>7. UTS隔离主机名nis域名。<br><br>pod里网络和文件系统应该是用得最多的，其他的应用程序基本不用吧？","like_count":95,"discussions":[{"author":{"id":1222954,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a9/2a/677d4d6e.jpg","nickname":"hh","note":"","ucode":"0561B9D8C493A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385898,"discussion_content":"https://www.man7.org/linux/man-pages/man7/namespaces.7.html\n应该是8种 namespace 吧!? 少写一个 time_namespace","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1627341071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021421,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUSUdGJFtQolpA8mANMZnjXB18ibmx5JRhI0byF4jb29qNghKoEk9EDJNIIiayJDCnqZLSutX3pXnQ/132","nickname":"DI-陈赜（ze）","note":"","ucode":"2EDABDDB80F2C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4813,"discussion_content":"PID用的吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565750345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25899,"user_name":"Q宝的宝","can_delete":false,"product_type":"c1","uid":1219139,"ip_address":"","ucode":"55C575755A4905","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/43/d6291e76.jpg","comment_is_top":false,"comment_ctime":1537462940,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"263530467996","product_id":100015201,"comment_content":"痛快，每一篇都鞭辟入里。","like_count":61,"discussions":[{"author":{"id":1179298,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/a2/5252a278.jpg","nickname":"对方正在输入。。。","note":"","ucode":"7B0DEB4D9B43D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567511,"discussion_content":"你这鞭辟入里也很鞭辟入里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650935229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26661,"user_name":"北卡","can_delete":false,"product_type":"c1","uid":1218128,"ip_address":"","ucode":"2D947A61689FC6","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/50/bde525b1.jpg","comment_is_top":false,"comment_ctime":1537718821,"is_pvip":false,"replies":[{"id":"9694","content":"市面上的小镜像多的很啊，busybox，alpine","user_name":"作者回复","comment_id":26661,"uid":"1218095","ip_address":"","utype":1,"ctime":1537752039,"user_name_real":"Geek_6ef93d"}],"discussion_count":10,"race_medal":0,"score":"211991116325","product_id":100015201,"comment_content":"看得太爽了。请教一个问题：<br>war和tamcat这种情况。<br>如果把war独立出来做一个镜像的话，应该用什么做基础镜像呢？<br>我现在做镜像的时候通常都是用debian做基础镜像，但如果只是为了复制这个.war包的话，用debian感觉蛮浪费的。应该怎样做到最小呢，而且要支持cp命令。","like_count":50,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424705,"discussion_content":"市面上的小镜像多的很啊，busybox，alpine","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1537752039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114356,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","nickname":"Jowin","note":"","ucode":"19017F7D06C22A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309298,"discussion_content":"原来有小镜像，一直还疑惑，我一个小程序非得绑那么大的镜像么……","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601255086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2654081,"avatar":"https://static001.geekbang.org/account/avatar/00/28/7f/81/791d0f5e.jpg","nickname":"吴彦祖","note":"","ucode":"9C78C91FE552F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576057,"discussion_content":"centos就可以做基础镜像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655262605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1434572,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibhIgBf1gF0fjzQ0EX9PFmK1QdZjzGYmnPGqT6rC2IWwOMvSd8iavYZ5ZDCZfianZDFkaR48k5jqkeLg1vnVnTWRQ/132","nickname":"流火","note":"","ucode":"64581C106B04AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572847,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653010184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264621,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4b/ed/1176932f.jpg","nickname":"思勇","note":"","ucode":"FF0CE0CFA2CA43","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542620,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640799080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1353085,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a5/7d/8a67efab.jpg","nickname":"没有在线","note":"","ucode":"7CDC0C2609DB5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387318,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628124678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1229873,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c4/31/f92091d1.jpg","nickname":"shark","note":"","ucode":"485C22926374B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358527,"discussion_content":"如果只是 cp 命令，是不是可以使用一个空镜像，自己做一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615991586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2448007,"avatar":"https://static001.geekbang.org/account/avatar/00/25/5a/87/fb5d6fbb.jpg","nickname":"Vincent","note":"","ucode":"B251C6C958C4E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1229873,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c4/31/f92091d1.jpg","nickname":"shark","note":"","ucode":"485C22926374B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385076,"discussion_content":"可以..从scrach做. 但是首先要解决镜像里面cp二进制程序哪里来的问题. 现成的alpine/busybox都是很小的镜像，同时包含各种常用的linux命令，所以一般用这种小镜像作为基础镜像","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1626870714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":358527,"ip_address":""},"score":385076,"extra":""}]},{"author":{"id":1006424,"avatar":"","nickname":"门窗小二","note":"","ucode":"0BF3780C247F22","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355310,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615419564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1662244,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5d/24/e0b9e99e.jpg","nickname":"RJ","note":"","ucode":"AB68F6D3C6A51B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339731,"discussion_content":"mark 一下啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609765663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31051,"user_name":"Racoon","can_delete":false,"product_type":"c1","uid":1040047,"ip_address":"","ucode":"20D9DBDDEB3B1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/af/9379c7bd.jpg","comment_is_top":false,"comment_ctime":1539076396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"173337768236","product_id":100015201,"comment_content":"k8s.gcr.io&#47;pause<br>在node节点上一直看到有这个镜像，搞不懂是干嘛的<br>如今一看 豁然开朗","like_count":40},{"had_liked":false,"id":32741,"user_name":"songyy","can_delete":false,"product_type":"c1","uid":1007201,"ip_address":"","ucode":"34D6443B91676D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/61/985f3eb7.jpg","comment_is_top":false,"comment_ctime":1539683960,"is_pvip":false,"replies":[{"id":"11929","content":"因为是坑的二次方","user_name":"作者回复","comment_id":32741,"uid":"1218095","ip_address":"","utype":1,"ctime":1539691880,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"147568572024","product_id":100015201,"comment_content":"为什么说“Docker in Docker”这种方式在生产环境后患无穷呀？","like_count":34,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426879,"discussion_content":"因为是坑的二次方","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1539691880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564389,"discussion_content":"大坑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650243133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1805922,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/8e/62/5cb377fd.jpg","nickname":"yangchnet","note":"","ucode":"0527DE4777A5DB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378881,"discussion_content":"坑的二次方，学到了。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623483618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26031,"user_name":"huan","can_delete":false,"product_type":"c1","uid":1012286,"ip_address":"","ucode":"46CB95F6E4E5FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/3e/534db55d.jpg","comment_is_top":false,"comment_ctime":1537492100,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"147566380164","product_id":100015201,"comment_content":"重要理解了这个核心概念，透透透！不但解决了我前几天war和tomcat做一起，完成镜像的频繁打包问题，而且还想到怎么用puppeteer做一个init container,然后注入到nodejs主容器，从而解决chrome headless太大不容易安装的问题，爽爽爽！","like_count":34,"discussions":[{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564387,"discussion_content":"怎么做到的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650243108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228290,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/02/43202976.jpg","nickname":"w 🍍","note":"","ucode":"F2386C971EC58B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2292,"discussion_content":"puppeteer不是可以作为基础镜像吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563439056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25998,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1537490066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"117501607058","product_id":100015201,"comment_content":"讲的真的用心，水平也高。被圈粉，希望一直能出专栏。您一定有一票粉丝支持和跟随的！继续加油。","like_count":27},{"had_liked":false,"id":43561,"user_name":"王力国","can_delete":false,"product_type":"c1","uid":1310913,"ip_address":"","ucode":"3219C138948CAD","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/c1/38eb4289.jpg","comment_is_top":false,"comment_ctime":1543240202,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"113212389898","product_id":100015201,"comment_content":"如果写成一本书，一定会是最畅销的 k8s 书籍","like_count":26,"discussions":[{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564392,"discussion_content":"出书名是啥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650243238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2532838,"avatar":"https://static001.geekbang.org/account/avatar/00/26/a5/e6/b14fd7e6.jpg","nickname":"Vincent","note":"","ucode":"67F042169EA6CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377174,"discussion_content":"遇到熟人了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622538041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1325150,"avatar":"https://static001.geekbang.org/account/avatar/00/14/38/5e/f0394817.jpg","nickname":"费曼先生","note":"","ucode":"C65DC8746F98E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299215,"discussion_content":"其实张磊有出书的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597597426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35741,"discussion_content":"强烈建议出书~~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571302439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26427,"user_name":"kindnull","can_delete":false,"product_type":"c1","uid":1250935,"ip_address":"","ucode":"94733DC93AE2C0","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/77/30e059c8.jpg","comment_is_top":false,"comment_ctime":1537598325,"is_pvip":false,"replies":[{"id":"9591","content":"volume的挂载是bind mount，不是设备，它的功能就是把文件或目录绑定挂载在一起，所以你这里的纠结谁在谁上面是没有意义的……唯一需要明确的是，bind mount的挂载点，是容器volume在宿主机上的目录。这一块在容器基础部分有详细的解释。","user_name":"作者回复","comment_id":26427,"uid":"1218095","ip_address":"","utype":1,"ctime":1537604389,"user_name_real":"Geek_6ef93d"}],"discussion_count":6,"race_medal":0,"score":"104616813429","product_id":100015201,"comment_content":"从事Linux运维工作多年，有一点一直有点不明白，这里到底谁挂载到谁上面：<br>volumeMounts：<br>      -mountpath: &#47;app<br>        name: app-volume<br><br>文中有有这句话说&quot;而后这个 &#47;app 目录，就挂载了一个名叫 app-volume的Volume&quot;<br>这里是说将app-volume挂载到&#47;app上，但是app是个目录，那我想问的是app-volume是个目录还是设备？<br>同样下面：<br>volumeMounts:<br>    -mountpath:&#47;root&#47;apache-tomcat-7.0.42-v2&#47;webapps<br>       name:app-volume<br>---Tomecat容器同样声明了挂载app-volume到自己的webapps目录下<br><br>这里又说把app-volume挂载到webapps下，webapps明显是个目录，那app-volume是个目录吗？<br><br>但是我清楚记得在Linux下。如果要挂载一个分区设备到一个目录或者一个目录到另外一个主机目录下应该是：<br>mount  -t xxfs  src_dir   dest_dir<br>比如： mount  -t xfs &#47;dev&#47;sda   &#47;opt&#47;app<br>           mount -t nfs &#47;share&#47;data  192.168.0.100:&#47;data<br>上面的挂载的app-volume到底是设备还是文件，或者是去的一个别名？","like_count":24,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424628,"discussion_content":"volume的挂载是bind mount，不是设备，它的功能就是把文件或目录绑定挂载在一起，所以你这里的纠结谁在谁上面是没有意义的……唯一需要明确的是，bind mount的挂载点，是容器volume在宿主机上的目录。这一块在容器基础部分有详细的解释。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1537604389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1244496,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM49ONuR097wB6LqR8nn5kWiaQiaPic1y8UznibDOScQergTj5qeL6zQ4bIicYEkqlMiash3CUCAYmSt9tQA/132","nickname":"哈希碰撞","note":"","ucode":"DF82678E60095D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9537,"discussion_content":"/a /b /c \\\n               |--> /a /b /c /d /e\n/c /d /e /\n\n这个重复的/c 目录会被后来的/c目录覆盖，至于哪个是先哪个是后，谁做谁清楚。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568184004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1662244,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5d/24/e0b9e99e.jpg","nickname":"RJ","note":"","ucode":"AB68F6D3C6A51B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339734,"discussion_content":"“bind mount”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609765799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049440,"avatar":"https://static001.geekbang.org/account/avatar/00/10/03/60/d586a61c.jpg","nickname":"Jennings","note":"","ucode":"AAEB2DC9993CC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313129,"discussion_content":"没看基础的啊，讲过了的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602949299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1610260,"avatar":"https://static001.geekbang.org/account/avatar/00/18/92/14/6ca50b3b.jpg","nickname":"大G来了呦","note":"","ucode":"97711D9CCA73B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304973,"discussion_content":"重点是 bind  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599727744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110851,"discussion_content":"bind mount，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577760733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26963,"user_name":"攻城拔寨","can_delete":false,"product_type":"c1","uid":1053934,"ip_address":"","ucode":"CBC37183DAB6B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/ee/d72a8222.jpg","comment_is_top":false,"comment_ctime":1537785845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"96027066357","product_id":100015201,"comment_content":"war包跟tomcat这个栗子举得恰到好处啊","like_count":22},{"had_liked":false,"id":25993,"user_name":"刘榴","can_delete":false,"product_type":"c1","uid":1063491,"ip_address":"","ucode":"08C51E3CE77889","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/43/6abf3b7d.jpg","comment_is_top":false,"comment_ctime":1537489680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74551933712","product_id":100015201,"comment_content":"好专栏啊，再写成书继续支持","like_count":17},{"had_liked":false,"id":134208,"user_name":"俊釆","can_delete":false,"product_type":"c1","uid":1046158,"ip_address":"","ucode":"AB08F7D04C20CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/8e/c9c94420.jpg","comment_is_top":false,"comment_ctime":1568775385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"65993284825","product_id":100015201,"comment_content":"毫不夸张的讲，这是我在极客时间买的最划算的专栏，没有之一。","like_count":15},{"had_liked":false,"id":26276,"user_name":"fldhmily63319","can_delete":false,"product_type":"c1","uid":1220331,"ip_address":"","ucode":"6FFD779498970F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PUiby8MibibKcMd88OtDq1c0myEILZjap46fyiaOlML0UlNWzj9NTIEXOhXCCR1tcUibG0I6UoGp59Zj8H5EYwzkY9g/132","comment_is_top":false,"comment_ctime":1537531752,"is_pvip":false,"replies":[{"id":"9570","content":"kubernetes的更新是patch方式的，可以关注后续声明式api的内容。","user_name":"作者回复","comment_id":26276,"uid":"1218095","ip_address":"","utype":1,"ctime":1537545365,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"57372106600","product_id":100015201,"comment_content":"重问： 关于升级war和tomcat那块，也是先修改yml？然后kubenertes执行升级命令，pod会重新启动，生产也是按照这种方式吗？<br><br>所以这种情况下面，如果只是升级个war包，或者加一个新的war包，tomcat也要重新启动？这就不是完全松耦合了？","like_count":13,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424588,"discussion_content":"kubernetes的更新是patch方式的，可以关注后续声明式api的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537545365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2535948,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b2/0c/5a217ec6.jpg","nickname":"阿白","note":"","ucode":"28D1FB38CCC669","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556085,"discussion_content":"也为同问想不明白呢，呵呵~~~war的镜像更新了， apply -f yaml 不是一样的要导致 taomcat 容器的重建。期待后面的声明式API patch内容😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647195690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40967,"user_name":"草原之巅","can_delete":false,"product_type":"c1","uid":1285270,"ip_address":"","ucode":"11179FEF78BFE9","user_header":"https://static001.geekbang.org/account/avatar/00/13/9c/96/eeb09aea.jpg","comment_is_top":false,"comment_ctime":1542704894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53082312446","product_id":100015201,"comment_content":"张磊真牛逼！ 堪称高手中的高手！ ","like_count":12},{"had_liked":false,"id":36780,"user_name":"骨汤鸡蛋面","can_delete":false,"product_type":"c1","uid":1050002,"ip_address":"","ucode":"2AC141A523E710","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/92/b609f7e3.jpg","comment_is_top":false,"comment_ctime":1541323513,"is_pvip":true,"replies":[{"id":"13029","content":"如果nile不负责管理java进程的话当然可以。否则的话就是同一个容器。","user_name":"作者回复","comment_id":36780,"uid":"1218095","ip_address":"","utype":1,"ctime":1541338407,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"53080931065","product_id":100015201,"comment_content":"张老师，我们公司一直有一个问题： 我们用docker 管理测试环境，对于springboot 项目，一向是java -jar xx.jar 的方式启动，但因为是测试环境，经常代码本身有问题导致java（也就是容器主进程）启动不起来，进而触发健康检查重新调度该服务，然后开发总是抱怨看不到事故现场。我打算自己实现一个程序（我们称为nile），容器启动时先启动nile确保容器可以启动起来，再由nile启动java进程。这时还可以让nile 读取用户配置 自定义设置jvm 参数、nile向zk汇报一些应用情况等。这个做法呢，nile可以算是java 的sidecar，按您文章的说法，nile和java 是拓扑关系而不是对等关系，这个时候我一个pod里分别是nile和java容器是否可能呢？","like_count":12,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428013,"discussion_content":"如果nile不负责管理java进程的话当然可以。否则的话就是同一个容器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541338407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26252,"user_name":"巩夫建","can_delete":false,"product_type":"c1","uid":1222958,"ip_address":"","ucode":"6B06A4399D2338","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/2e/01b2839e.jpg","comment_is_top":false,"comment_ctime":1537527828,"is_pvip":false,"replies":[{"id":"9572","content":"nginx容器启动前做检查即可。主要好处就是解偶。","user_name":"作者回复","comment_id":26252,"uid":"1218095","ip_address":"","utype":1,"ctime":1537545488,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"53077135380","product_id":100015201,"comment_content":"非常棒，释义了pod的理念。有个小问题，像我之前一个docker中跑tomcat和nginx两个进程，共用同一个文件，如果拆成三部分，第一init container 文件镜像，第二 tomcat镜像，第三 nginx镜像，如何保证init container 启动后启动tomcat，最后启动nginx，还有这种优点有什么?目前只想到镜像高复用，谢谢作者。","like_count":12,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424580,"discussion_content":"nginx容器启动前做检查即可。主要好处就是解偶。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537545488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1650044,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2d/7c/84f53e33.jpg","nickname":"掐死你的温柔","note":"","ucode":"6053DAC0740755","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388742,"discussion_content":"是不是可以做多个init container，kubelet会按ymal文件里的顺序启动？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628932288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1597620,"avatar":"https://static001.geekbang.org/account/avatar/00/18/60/b4/430acd7f.jpg","nickname":"激水漂石","note":"","ucode":"C00B21DE4103E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373123,"discussion_content":"我也想问下，如果好几个容器需要指定顺序，一般怎么做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620625111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69737,"user_name":"姜子牙","can_delete":false,"product_type":"c1","uid":1253063,"ip_address":"","ucode":"1830E2FA33308B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rUPjvMdUGic56wNdVm0be85REaB7nLwyEC7HiamhmeWsQichtADA3IsFubIqOXMjlsEtmicdpDRC2YhNWVrpPKj1lw/132","comment_is_top":false,"comment_ctime":1550823437,"is_pvip":false,"replies":[{"id":"26194","content":"因为有JVM","user_name":"作者回复","comment_id":69737,"uid":"1218095","ip_address":"","utype":1,"ctime":1551585152,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"40205529101","product_id":100015201,"comment_content":"容器的“单进程模型”，并不是指容器里只能运行“...<br>这一段里说容器的单进程模型。我在跑一个web后端服务，springboot实现。 entrypoint 是java -jar xxxx.jar  .这条命令产生的进程就是PID=1的吗？ 容器只能管理PID=1的。我理解的就是这个进程执行不成功，容器户退出。但是如果我的springboot程序有问题，没跑成功，容器依然跑着呢，为啥?","like_count":9,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440255,"discussion_content":"因为有JVM","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551585152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26240,"user_name":"fatCat","can_delete":false,"product_type":"c1","uid":1228976,"ip_address":"","ucode":"1B002A04E3134E","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/b0/a088cb8f.jpg","comment_is_top":false,"comment_ctime":1537524861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40192230525","product_id":100015201,"comment_content":"以前看博客文章，都是哎呀妈呀脑瓜疼脑瓜疼，现在终于不疼了不疼了~~~","like_count":9},{"had_liked":false,"id":25999,"user_name":"extraterrestrial！！","can_delete":false,"product_type":"c1","uid":1017987,"ip_address":"","ucode":"74AE07CA68F6B6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GDYkD2X7pXSKUSaUFC8u3TBPaakaibnOBV2NYDc2TNfb8Su9icFMwSod6iaQX5iaGU2gT6xkPuhXeWvY8KaVEZAYzg/132","comment_is_top":false,"comment_ctime":1537490131,"is_pvip":true,"replies":[{"id":"9422","content":"对。不过我们现在讲的古典互联网技术不太建议这么做，这是原始互联网时代的思路。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537493762,"ip_address":"","comment_id":25999,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40192195795","product_id":100015201,"comment_content":"容器不能管理多进程那块，能不能每个容器都默认搬一套系统的init过去，而不要让普通应用进程做进程1，这样是不是就可以支持容器里面管理多进程了？","like_count":9,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424490,"discussion_content":"对。不过我们现在讲的古典互联网技术不太建议这么做，这是原始互联网时代的思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537493762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317115,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","nickname":"王崧霁","note":"","ucode":"4F3284634293A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25160,"discussion_content":"suppervisord管理多进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570440112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246279,"user_name":"sami","can_delete":false,"product_type":"c1","uid":1033240,"ip_address":"","ucode":"9A66FCA00D8A37","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","comment_is_top":false,"comment_ctime":1599241926,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"35958980294","product_id":100015201,"comment_content":"Pod和容器设计模式<br>\t为什么我们需要Pod<br>\t\t容器基本概念<br>\t\t\t视图隔离、资源受限的进程<br>\t\t\tKubernetes就是云时代的操作系统<br>\t\t\t容器镜像就是操作系统的软件安装包<br>\t\t\tPod=进程组（Linux线程组）<br>\t\tPod<br>\t\t\t一个逻辑单位，多个容器的组合<br>\t\t\tKubernetes的原子调度单位<br>\t\t为什么Pod必须是原子调度单位<br>\t\t\tTask co-scheduling 问题<br>\t\t\t\tMesos：资源囤积<br>\t\t\t\t\t所有设置了 Affinity 约束的任务都到达时，才开始统一进行调度<br>\t\t\t\t\t调度效率损失和死锁<br>\t\t\t\tGoogle Omega：乐观锁调度处理冲突<br>\t\t\t\t\t先不管冲突，通过精心设计的回滚机制在出现冲突之后解决问题<br>\t\t\t\t\t实现复杂<br>\t\t\t\t\t效率高<br>\t\t\t\tKubernetes：Pod<br>\t\t再次理解 Pod<br>\t\t\t亲密关系-调度解决<br>\t\t\t\t两个应用需要运行在同一台宿主机<br>\t\t\t超亲密关系- Pod 解决<br>\t\t\t\t会发生直接的文件交换<br>\t\t\t\t使用localhost或者Socket文件进行本地通信<br>\t\t\t\t会发生非常频繁的RPC调用<br>\t\t\t\t会共享某些 Linux Namespace（比如一个容器要加入另一个容器的 Network Namespace）<br>\tPod的实现机制<br>\t\tPod 要解决的问题<br>\t\t\t如何让一个 Pod 里的多个容器之间最高效共享某些资源和数据<br>\t\t\t\t容器之间原本被 Namespce 和 cgroups 隔离开<br>\t\t1.共享网络<br>\t\t\t容器A和B通过 Infra Container 的方式共享同一个 Network Namespace<br>\t\t\t\t镜像：k8s.grc.io&#47;pause；汇编语言编写、永远处于“暂停”；大小100-200KB<br>\t\t\t直接使用localhost通信<br>\t\t\t看到的网络设备跟 Infra 容器看到的完全一样<br>\t\t\t一个Pod只有一个IP地址，也就是这个Pod的Network Namespace对应的IP地址<br>\t\t\t\t所有网络资源Pod只有一份，所有容器共享<br>\t\t\tPod的生命周期跟Infra容器一致，而与容器A和B无关<br>\t\t2.共享存储<br>\t\t\tshared-data 对应在宿主机上的目录会被同时绑定挂载进了上述两个容器当中<br>\t详解容器设计模式<br>\t\t举例：WAT包 + Tomcat 的容器化<br>\t\t\t方法一：把WAR包和Tomcat打包进一个镜像<br>\t\t\t\t无论是WAR包和Tomcat更新都需要重新制作镜像<br>\t\t\t方法二：镜像里只打包Tomcat。使用数据卷（hostPath）从宿主机将WAR包挂载进Tomcat容器<br>\t\t\t\t需要维护一套分布式存储系统<br>\t\t\tInitContainer<br>\t\t\t\tInit Container 会比 spec.containers 定义的用户容器先启动，并且严格按照定义顺序依次执行<br>\t\t\t\t&#47;app是一个Volume<br>\t\t\t\tTomcat容器，同样也声明了挂载该Volume到自己的webapps目录下<br>\t\t容器设计模式：Sidecar<br>\t\t\t通过在 Pod 里定义专门容器，来执行主业务容器需要的辅助工作<br>\t\t\t\t原本需要SSH进去执行的脚本<br>\t\t\t\t日志收集<br>\t\t\t\tDebug 应用<br>\t\t\t\t应用监控<br>\t\t\t优势：将辅助功能同主业务容器解耦，实现独立发布和能力复用","like_count":8},{"had_liked":false,"id":56622,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1288625,"ip_address":"","ucode":"D6A5BB0294A428","user_header":"","comment_is_top":false,"comment_ctime":1546509278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35906247646","product_id":100015201,"comment_content":"Pod间除了共享Network Namespace外，默认还会共享IPC namespace和 User namespace。 1.12版本开始还可以选择是否开启Pid namespace的共享。","like_count":8},{"had_liked":false,"id":30243,"user_name":"Pixar","can_delete":false,"product_type":"c1","uid":1197659,"ip_address":"","ucode":"E653387BA8EA16","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/5b/07858c33.jpg","comment_is_top":false,"comment_ctime":1538737390,"is_pvip":false,"replies":[{"id":"10907","content":"你忽略了Tomcat的镜像也是会变更的啊。另外，我只提供了一个最佳实践的思路给你，具体的方案应该你自己根据需求自己设计。比如，如果你的tomcat镜像从来就几乎没更新过，那干脆拿它做基础镜像都行。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538799549,"ip_address":"","comment_id":30243,"utype":1}],"discussion_count":4,"race_medal":0,"score":"35898475758","product_id":100015201,"comment_content":"war包的例子并没有解决频发打包的问题吧? wa包变动后, geektime&#47;sample:v2包仍然需要重新打吧. 这和东西一股脑装在tomcat中后, 重新打tomcat 并没有差太多吧?","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425911,"discussion_content":"你忽略了Tomcat的镜像也是会变更的啊。另外，我只提供了一个最佳实践的思路给你，具体的方案应该你自己根据需求自己设计。比如，如果你的tomcat镜像从来就几乎没更新过，那干脆拿它做基础镜像都行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538799549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1540162,"avatar":"https://static001.geekbang.org/account/avatar/00/17/80/42/4f2ec593.jpg","nickname":"timetraveler","note":"","ucode":"543CE2E26631CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2870,"discussion_content":"解决了打包后文件大的问题啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563987711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2863436,"avatar":"","nickname":"无名氏","note":"","ucode":"786EDFCBFEADE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538267,"discussion_content":"我理解，主要是用来解藕及提升代码的版本维护性。1、tomcat的维护者和代码的维护者是两拨人，打在一个镜像，有持续的协作成本；2、如果是tomcat有更新，那这个镜像的版本，怎么和代码的版本关联起来呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639389387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028356,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f3/44/3390c377.jpg","nickname":"巭","note":"","ucode":"F295D4B65F4FAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387663,"discussion_content":"同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628328966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78074,"user_name":"你好吗？我很好！","can_delete":false,"product_type":"c1","uid":1071972,"ip_address":"","ucode":"2E57B529EBB116","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/64/b75ed485.jpg","comment_is_top":false,"comment_ctime":1553067310,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"31617838382","product_id":100015201,"comment_content":"请问大家这个只有纯内容的war包镜像怎么制作呀？有哪个镜像的Dockerfile可以参考的吗？","like_count":7,"discussions":[{"author":{"id":1566210,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e6/02/64fd7497.jpg","nickname":"缪存发","note":"","ucode":"20688C432A7AA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36618,"discussion_content":"from busybox\ncp *.war /app","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1571398662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2116699,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKIxTSS3SDJDODVhia8JUicSMuJTcicPqicnKctVkoO1g9a84b292j0Dqk7PZtic4eA9KhLdfaAT7knu4w/132","nickname":"Saka666","note":"","ucode":"FC8644D9E90E49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1566210,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e6/02/64fd7497.jpg","nickname":"缪存发","note":"","ucode":"20688C432A7AA7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351971,"discussion_content":"两行的dockerfile可还行","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1614532907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":36618,"ip_address":""},"score":351971,"extra":""}]},{"author":{"id":1229873,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c4/31/f92091d1.jpg","nickname":"shark","note":"","ucode":"485C22926374B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358754,"discussion_content":"使用空镜像制作一个含有cp命令的基础镜像，只有4M多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616044938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26164,"user_name":"silverhawk","can_delete":false,"product_type":"c1","uid":1018649,"ip_address":"","ucode":"BFBC8AF32868DA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/19/a15d060d.jpg","comment_is_top":false,"comment_ctime":1537508868,"is_pvip":false,"replies":[{"id":"9515","content":"取决于 1. 高可用考虑 2. 别的pod是不是也要用这个redis？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537513886,"ip_address":"","comment_id":26164,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31602279940","product_id":100015201,"comment_content":"非常好，请教一个问题，你之前说比如PHP和MySQL最好分在不同的pod，很可能就是不同的node上了，那么对于latency非常敏感的比如cache，像redis和一个web server是不是做成不同的container部署在一个pod里面合适呢？","like_count":7,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424543,"discussion_content":"取决于 1. 高可用考虑 2. 别的pod是不是也要用这个redis？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537513886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26524,"user_name":"Eddie LAU","can_delete":false,"product_type":"c1","uid":1222150,"ip_address":"","ucode":"0488CCB587D9DD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLIjtoBftwZxfXcxsTZUFGkd7SnnKJCazmBbwFEVPmHbWsWRwC7SHCGUNibCIvpddqct1Ybezmz6w/132","comment_is_top":false,"comment_ctime":1537633176,"is_pvip":false,"replies":[{"id":"9626","content":"不足之处肯定要在具体剖析特性的时候才会讲到。另外，这Kubernetes可不是推崇的问题，你会觉得我在推崇Linux吗？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537672841,"ip_address":"","comment_id":26524,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27307436952","product_id":100015201,"comment_content":"此专栏追到现在，老师用通俗的语言阐述了k8s的原理的同时也极力推崇k8s。我在学习使用的过程中也确实体会到了其各种优势。但是反过来想，老师是否可以简单举两个例子说下k8s目前为止依然存在的一些缺陷和不足呢？方便我们在应用过程中加以注意。","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424659,"discussion_content":"不足之处肯定要在具体剖析特性的时候才会讲到。另外，这Kubernetes可不是推崇的问题，你会觉得我在推崇Linux吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537672841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94853,"user_name":"tuyu","can_delete":false,"product_type":"c1","uid":1448863,"ip_address":"","ucode":"B235325B541408","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BIRpwViaN51yynIeFonD7QRlwDCVtKibrG956NTxzEqibOZZVjhMMgibOPmd3VicfYxpknZsic1oJq8KicZvXkmmiajuQg/132","comment_is_top":false,"comment_ctime":1557910375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23032746855","product_id":100015201,"comment_content":"思考题: <br>1.PID NAMESPACE<br>2.MOUNT NAMESPACE<br>3.IPC NAMESPACE","like_count":5},{"had_liked":false,"id":56602,"user_name":"魏颖琪","can_delete":false,"product_type":"c1","uid":1184964,"ip_address":"","ucode":"097544C71EBDA7","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/c4/e354d8ba.jpg","comment_is_top":false,"comment_ctime":1546504094,"is_pvip":false,"replies":[{"id":"21228","content":"你其实应该能理解，这里要讲的就是Linux 语境下的线程间关系，或者说，经典 OS 语境下的进程间关系。而不是 Linux 语义下的“进程”间关系。不过确实可以考虑换个例子了。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1547188416,"ip_address":"","comment_id":56602,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23021340574","product_id":100015201,"comment_content":"写得很清晰，但是rsyslogd例子有问题。在ptree中rsyslogd给出的in:imklog，in:imuxsock，rs:main Q:Reg是线程不是进程。在ps -ef中是看不到的，但是在ps -efL中可以看到（When used with -L, the NLWP (number of threads) and LWP (thread ID) columns will be added. -- man ps)。而ptree的-P除了显示进程号，也会显示线程号（Child threads of a process are found under the parent process and are shown with the process name in curly braces.  -- man pstree)）。如果出书的话，建议老师选择另外的例子。","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435140,"discussion_content":"你其实应该能理解，这里要讲的就是Linux 语境下的线程间关系，或者说，经典 OS 语境下的进程间关系。而不是 Linux 语义下的“进程”间关系。不过确实可以考虑换个例子了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1547188416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49261,"user_name":"龚松","can_delete":false,"product_type":"c1","uid":1024491,"ip_address":"","ucode":"1DDC6BEC5257DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/eb/8bc935e2.jpg","comment_is_top":false,"comment_ctime":1544637561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23019474041","product_id":100015201,"comment_content":"非常形象具体，通俗易懂。Pod是理解K8s下很多复杂概念的核心所在。Pod可以比喻为一台原先的物理机，而Pod的多个容器好比是运行在同一个机器上的多个进程，这样很自然，这些进程间可以通过localhost来访问（共享Network Namespace）、共享磁盘（共享Volume）、安全配置（Scret）等信息。这样Pod是将多个容器作了一层“聚合”，Pod与容器之间的关系就比较好理解了。","like_count":5},{"had_liked":false,"id":31036,"user_name":"薛定谔的指南针","can_delete":false,"product_type":"c1","uid":1009118,"ip_address":"","ucode":"3320659454FF04","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/de/8579c4e1.jpg","comment_is_top":false,"comment_ctime":1539073798,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"23013910278","product_id":100015201,"comment_content":"两个例子都非常经典，尤其是tomcat和war包的例子，感觉看完了以后容器技术立马涨了一大截，赞","like_count":5},{"had_liked":false,"id":30890,"user_name":"王亚南","can_delete":false,"product_type":"c1","uid":1082099,"ip_address":"","ucode":"F127F8118E303C","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/f3/01bf3b3e.jpg","comment_is_top":false,"comment_ctime":1539044298,"is_pvip":false,"replies":[{"id":"11150","content":"赞👍","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539067298,"ip_address":"","comment_id":30890,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23013880778","product_id":100015201,"comment_content":"不得不说，真是良心之作。","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426133,"discussion_content":"赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539067298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25995,"user_name":"lggl","can_delete":false,"product_type":"c1","uid":1219251,"ip_address":"","ucode":"EB07944F919D8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/b3/244b5192.jpg","comment_is_top":false,"comment_ctime":1537489724,"is_pvip":false,"replies":[{"id":"9437","content":"对，initcontainer就是干这个的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537494365,"ip_address":"","comment_id":25995,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23012326204","product_id":100015201,"comment_content":"关于升级war和tomcat那块，也是先修改yml？然后kubenertes执行升级命令，pod会重新启动，生产也是按照这种方式吗？","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424488,"discussion_content":"对，initcontainer就是干这个的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537494365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181476,"user_name":"罗辑思维","can_delete":false,"product_type":"c1","uid":1318941,"ip_address":"","ucode":"D257A06EDE928E","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","comment_is_top":false,"comment_ctime":1582548747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18762417931","product_id":100015201,"comment_content":"Pod类似港片里面大律师事务所，container是律所里的大律师。每位大律师都有自己独立的办公室，负责独立的业务，但又共用律所的前台、行政、保洁。","like_count":4},{"had_liked":false,"id":26087,"user_name":"huan","can_delete":false,"product_type":"c1","uid":1012286,"ip_address":"","ucode":"46CB95F6E4E5FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/3e/534db55d.jpg","comment_is_top":false,"comment_ctime":1537497865,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18717367049","product_id":100015201,"comment_content":"容器与容器是平等的，只是有些容器更加平等。<br><br>——超亲密关系","like_count":4,"discussions":[{"author":{"id":2334878,"avatar":"https://static001.geekbang.org/account/avatar/00/23/a0/9e/7af0342d.jpg","nickname":"不再面向浏览器编程","note":"","ucode":"2BBBFE5B8B2AA2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333960,"discussion_content":"秀儿，你好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607679524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287724,"user_name":"🐻","can_delete":false,"product_type":"c1","uid":1043072,"ip_address":"","ucode":"534EDAD496A0E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ea/80/8759e4c1.jpg","comment_is_top":false,"comment_ctime":1618125748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14503027636","product_id":100015201,"comment_content":"https:&#47;&#47;stackoverflow.com&#47;a&#47;51788814&#47;5161084<br><br>IPC namespace，同一个pod容器之间可以通过消息队列，共享内存等进程间通信方式来进行通信。<br><br>https:&#47;&#47;man7.org&#47;linux&#47;man-pages&#47;man7&#47;sysvipc.7.html","like_count":3},{"had_liked":false,"id":189147,"user_name":"zackery","can_delete":false,"product_type":"c1","uid":1052282,"ip_address":"","ucode":"92D737D6773855","user_header":"https://static001.geekbang.org/account/avatar/00/10/0e/7a/ab527628.jpg","comment_is_top":false,"comment_ctime":1584460281,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"14469362169","product_id":100015201,"comment_content":"课程最近才买的，不知道老师还会来互动么？或者有没有热心又聪明的同学来告诉我！<br>tomcat 那个例子我看的不是很懂，这种 init container 的方式，对比直接 tomcat 挂载一个有 war 包的目录的好处在哪里呢？后续发布更新，还是要重新发布整个 pod 的吧？<br>求解～","like_count":3,"discussions":[{"author":{"id":1738455,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/86/d7/bfd9e42a.jpg","nickname":"轨迹","note":"","ucode":"6C9619A0B60CDD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397354,"discussion_content":"应该是考虑，tomcat直接挂载目录的话，对于多个宿主机，就需要把war包拷贝到多个宿主机上，或者挂载一个分布式存储系统","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632588673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2117362,"avatar":"https://static001.geekbang.org/account/avatar/00/20/4e/f2/a3314a28.jpg","nickname":"鹤无双","note":"","ucode":"785B47B34FFBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352313,"discussion_content":"intiC 其实是一个初始化容器，也就是说在 main 容器运行之前已经在初始化了，等于说这个 initC 的动作是将 sample.war cp 到 app 这个目录然后再共享给 volumes 因为 volumes 是一个 emptyDir 空目录，然后这两个容器是在通过一个 pod 中等于说 tomcat 起来之后就共享 volumes 里面的 sample.war ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614679813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2424712,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/QPLkhJ3CoNt0j4ccGovE8tp7ma097vMrKbEq3jefQZNxI6psShxXxqMWTtI4T7oV0Jqq2KnWREnsJwkkZwnJ8Q/132","nickname":"Geek_f654de","note":"","ucode":"252C9BE5989D88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346293,"discussion_content":"如果Tomcat不更新下，那么可以将Tomcat作为基础镜像，后面war包更新就在这个基础镜像上build","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611902509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637475,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fc/63/bcda2f87.jpg","nickname":"熊","note":"","ucode":"B6423D29701EC5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304376,"discussion_content":"说下俺的粗浅理解 老师的这种方式 把war包的更新和tomcat更新解耦了 如果每次直接把war包扔到tomcat更新中 每次tomcat镜像都会需要重新打包发布","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599556677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026608,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/30/acc91f01.jpg","nickname":"honnkyou","note":"","ucode":"FD5EC4120EE803","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294653,"discussion_content":"”直接 tomcat 挂载一个有 war 包的目录“的话就要绑定node了吧，或者就得用共享存储保存目录。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595950499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145068,"avatar":"https://static001.geekbang.org/account/avatar/00/11/78/ec/f7f0d21a.jpg","nickname":"Dev-L","note":"","ucode":"485E940C3F17B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291621,"discussion_content":"采用init container 的方式，后续更新只需要改个模板就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594890098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133876,"user_name":"黑将军","can_delete":false,"product_type":"c1","uid":1154529,"ip_address":"","ucode":"4AD51EB14A77A0","user_header":"https://static001.geekbang.org/account/avatar/00/11/9d/e1/f5893f24.jpg","comment_is_top":false,"comment_ctime":1568689546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14453591434","product_id":100015201,"comment_content":"这真的是我看过最好的专栏，奈何没文化，只能一句卧槽走天下，太棒了","like_count":3},{"had_liked":false,"id":35625,"user_name":"陆培尔","can_delete":false,"product_type":"c1","uid":1095319,"ip_address":"","ucode":"B9AE067272513B","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/97/93e82345.jpg","comment_is_top":false,"comment_ctime":1540714314,"is_pvip":false,"replies":[{"id":"12691","content":"j可以，但感觉意义不大，除非jre总是升级","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540742443,"ip_address":"","comment_id":35625,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14425616202","product_id":100015201,"comment_content":"张老师的课获益匪浅，我们现在在做spring boot项目的容器化，现在是把整个jar包连同环境打成镜像，现在是否可以分解为一个jar包和一个java基础环境镜像？","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427604,"discussion_content":"j可以，但感觉意义不大，除非jre总是升级","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540742443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1989803,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/5c/ab/8e84d692.jpg","nickname":"治稳","note":"","ucode":"19A5C007E6B84A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394643,"discussion_content":"张老师好，为啥jre总是升级？分成两个不就可以降低每次上传的镜像大小了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631968343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32305,"user_name":"star","can_delete":false,"product_type":"c1","uid":1261789,"ip_address":"","ucode":"EE5415821522CD","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/dd/6a1ba128.jpg","comment_is_top":false,"comment_ctime":1539519500,"is_pvip":false,"replies":[{"id":"11835","content":"任何volume对应的都是宿主机啊","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539581777,"ip_address":"","comment_id":32305,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14424421388","product_id":100015201,"comment_content":"对于war包这个例子还有点不明白，war包这个 &#47;app 目录，就挂载了一个名叫 app-volume...那么这个app-volume是对应宿主机？还是infra容器？<br><br>难道可以创建一个没有任何对应的volume么？<br><br>","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426719,"discussion_content":"任何volume对应的都是宿主机啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539581777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32224,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1539488760,"is_pvip":false,"replies":[{"id":"11712","content":"https:&#47;&#47;cncf.io","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539502118,"ip_address":"","comment_id":32224,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14424390648","product_id":100015201,"comment_content":"老师，咨询个事情。现在在中国哪些地方能考CKA呢？ 费用是多少呢？ 有年限限制的么？","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426688,"discussion_content":"https://cncf.io","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539502118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30253,"user_name":"leo","can_delete":false,"product_type":"c1","uid":1156643,"ip_address":"","ucode":"73E8917E5156FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/a6/23/91e74c43.jpg","comment_is_top":false,"comment_ctime":1538742997,"is_pvip":true,"replies":[{"id":"10902","content":"是。不可以。建议重新理解一下我之前的回复。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538794755,"ip_address":"","comment_id":30253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14423644885","product_id":100015201,"comment_content":"不好意思，还是我，您的回复我没看懂。我的问题有两个<br>1.产生日志的容器是否属于应用容器？<br>2.一个Pod里是否可以只有init container，没有用户容器？<br>烦请解答一下，感谢！","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425914,"discussion_content":"是。不可以。建议重新理解一下我之前的回复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538794755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213435,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1588413594,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10178348186","product_id":100015201,"comment_content":"第二个例子，日志搜集的InitContainer要等退出了之后产生日志的container才会启动生成日志，那怎么用initContainer读取日志呢？","like_count":2,"discussions":[{"author":{"id":2100644,"avatar":"","nickname":"Geek_8e2759","note":"","ucode":"EBDBA4D92B5C50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360995,"discussion_content":"日志收集不是 initContainer，面是 sidecar 模式的一般容器，与主容器相同的生命周期，ref https://stackoverflow.com/a/64842392/2298986","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1616576302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2393431,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEK4xKibFviba7jKvx9OYcLXZgTywmqdwAibSS6hiaxVczQhAENWEOqfRzBadX5sYdw2cUcBYEtsicxyv6w/132","nickname":"Geek_08f26a","note":"","ucode":"4DE7914EAABF73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345512,"discussion_content":"apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    example: logging-sidecar\n  name: logging-sidecar-example\nspec:\n  containers:\n  - name: synthetic-logger\n    image: 172.17.0.22:8888/saas/hello-world:latest\n    command: [&#34;bash&#34;, &#34;-c&#34;, &#34;i=\\&#34;0\\&#34;; while true; do echo \\&#34;`hostname`: $i \\&#34; >> /var/log/1.log; date --rfc-3339 ns >> /var/log/1.log; sleep 4; i=$[$i+1]; done&#34;]\n    volumeMounts:\n    - name: varlog\n      mountPath: /var/log\n  - name: sidecar-log-collector\n    image: registry.cn-beijing.aliyuncs.com/k8s-mqm/fluentd-elasticsearch:v2.1.0\n    env:\n    - name: FLUENTD_ARGS\n      value: -c /etc/fluentd-config/fluentd.conf\n    volumeMounts:\n          - name: varlog\n            mountPath: /var/log\n          - name: config-volume\n            mountPath: /etc/fluentd-config\n  volumes:\n    - name: varlog\n      emptyDir: {}\n    - name: config-volume\n      configMap:\n        name: fluentd-config\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1611731330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2393431,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEK4xKibFviba7jKvx9OYcLXZgTywmqdwAibSS6hiaxVczQhAENWEOqfRzBadX5sYdw2cUcBYEtsicxyv6w/132","nickname":"Geek_08f26a","note":"","ucode":"4DE7914EAABF73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345511,"discussion_content":"送你一个类似的例子，收集日志的sidecar 需要与应用容器同生命周期当然不能用init container了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611731320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173415,"user_name":"book尾汁","can_delete":false,"product_type":"c1","uid":1446375,"ip_address":"","ucode":"AE2B8DFC643ACC","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/e7/044a9a6c.jpg","comment_is_top":false,"comment_ctime":1579530538,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10169465130","product_id":100015201,"comment_content":"有个小小的疑问，先把war包放在app目录下，然后把volume挂载到容器的&#47;app目录，这样app目录下的war包文件会被覆盖吗，&#47;app目录会为空吗","like_count":2},{"had_liked":false,"id":115203,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1223046,"ip_address":"","ucode":"61CFE863E8E6D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/86/8211935c.jpg","comment_is_top":false,"comment_ctime":1563506938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10153441530","product_id":100015201,"comment_content":"老师，第一个例子 tomcat 与 war 包，解耦后每次更新WAR包不也都要重新制作发布镜像吗？不然怎么更新里面的war包呢？","like_count":2},{"had_liked":false,"id":32098,"user_name":"勇敢的心","can_delete":false,"product_type":"c1","uid":1198639,"ip_address":"","ucode":"43678591F1A558","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/2f/42aa48d7.jpg","comment_is_top":false,"comment_ctime":1539413998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10129348590","product_id":100015201,"comment_content":"读老师您的文章有种海边拾宝的感觉，时不时蹦出来个好看的贝壳，让人兴奋不已～","like_count":2},{"had_liked":false,"id":26394,"user_name":"eden","can_delete":false,"product_type":"c1","uid":1220656,"ip_address":"","ucode":"8A5620A5C4BDB8","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/30/5a7247eb.jpg","comment_is_top":false,"comment_ctime":1537586331,"is_pvip":false,"replies":[{"id":"9596","content":"没问题啊，你仔细看看文稿备注里对单容器模型的解释？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537610326,"ip_address":"","comment_id":26394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10127520923","product_id":100015201,"comment_content":"老师，我有个疑问。按我之前对docker的理解docker容器也可以启动多个进程，一个docker容器不一定就是一个进程，比如docker容器的启动程序可以是个脚本，通过脚本可以启动多个进程，只要只有一个进程运行在前台即可。","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424618,"discussion_content":"没问题啊，你仔细看看文稿备注里对单容器模型的解释？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537610326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289677,"user_name":"阿庆","can_delete":false,"product_type":"c1","uid":1286902,"ip_address":"","ucode":"8E73945170B4F1","user_header":"https://static001.geekbang.org/account/avatar/00/13/a2/f6/d84a5fd5.jpg","comment_is_top":false,"comment_ctime":1619141654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5914108950","product_id":100015201,"comment_content":"apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: javaweb-2<br>spec:<br>  initContainers:<br>  - image: geektime&#47;sample:v2<br>    name: war<br>    command: [&quot;cp&quot;, &quot;&#47;sample.war&quot;, &quot;&#47;app&quot;]<br>    volumeMounts:<br>    - mountPath: &#47;app<br>      name: app-volume<br>  containers:<br>  - image: geektime&#47;tomcat:7.0<br>    name: tomcat<br>    command: [&quot;sh&quot;,&quot;-c&quot;,&quot;&#47;root&#47;apache-tomcat-7.0.42-v2&#47;bin&#47;start.sh&quot;]<br>    volumeMounts:<br>    - name: app-volume<br>        mountPath: &#47;root&#47;apache-tomcat-7.0.42-v2&#47;webapps<br>    ports:<br>    - containerPort: 8080<br>      hostPort: 8001<br>  volumes:<br>  - name: app-volume<br>    emptyDir: {}<br><br>作者大神，tomcat部分的挂载写法是不是要换个位置，应该是已经拥有war包数据的宿主机目录挂载到容器的目录，这样容器目录中才能读到数据","like_count":1},{"had_liked":false,"id":269111,"user_name":"吕哲","can_delete":false,"product_type":"c1","uid":1118096,"ip_address":"","ucode":"C69AA0C296DDE3","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/90/1dc1c940.jpg","comment_is_top":false,"comment_ctime":1608529548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5903496844","product_id":100015201,"comment_content":"技术好的大牛有很多，但是还能讲的这么好的就真的珍贵了。。感谢感谢！！","like_count":1},{"had_liked":false,"id":260368,"user_name":"Geek_f310da","can_delete":false,"product_type":"c1","uid":2291359,"ip_address":"","ucode":"A7BA7FFDEE6462","user_header":"","comment_is_top":false,"comment_ctime":1604993533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5899960829","product_id":100015201,"comment_content":"所有的软件都塞到一个容器中来迁移业务，会有什么后果？<br>比如一个容器中存在nginx+php-fpm来提供web服务<br>虽然能理解一个容器就是一个特殊进程这样的概念，但是实际上nginx+php-fpm放到一起来提供服务并没遇到什么问题<br>另外，如果不把nginx和php-fpm放在一起，其实需要解决nginx和php-fpm谁应该先启动的问题，如果nginx先启动了，而php-fpm没启动，业务是有问题的。","like_count":1},{"had_liked":false,"id":234496,"user_name":"董文荣","can_delete":false,"product_type":"c1","uid":1177499,"ip_address":"","ucode":"CC33DAC93749ED","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/9b/1b1e288a.jpg","comment_is_top":false,"comment_ctime":1594704937,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5889672233","product_id":100015201,"comment_content":"image: geektime&#47;sample:v2<br>image: geektime&#47;tomcat:7.0<br>老师好，镜像不能下载呢？Init:ImagePullBackOff","like_count":1,"discussions":[{"author":{"id":1528631,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/59iadOMkAEPOw1GJPNDOjwb5W6K6RpZ6aq97XNo2WZogKA8EhSgts7NOJBoEI4ptSGwgmClXfr9vN1WCULeKAog/132","nickname":"KoRyo","note":"","ucode":"DF44591BFD2282","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384930,"discussion_content":"是的。遇到同样的问题。\n希望能解答一下。\ncp 的时候出错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626799044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208194,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1587298838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882266134","product_id":100015201,"comment_content":"精彩！感谢！终于明白了Pod的概念了。","like_count":1},{"had_liked":false,"id":184710,"user_name":"Xiao淩求个好运气","can_delete":false,"product_type":"c1","uid":1157450,"ip_address":"","ucode":"63FAACBF305199","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/4a/b722cbbc.jpg","comment_is_top":false,"comment_ctime":1583389295,"is_pvip":false,"replies":[{"id":"72838","content":"感谢支持","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1584423339,"ip_address":"","comment_id":184710,"utype":1}],"discussion_count":1,"race_medal":2,"score":"5878356591","product_id":100015201,"comment_content":"就这一篇文章，配得上我为整个专栏付费，真是醍醐灌顶","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486103,"discussion_content":"感谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584423339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173419,"user_name":"book尾汁","can_delete":false,"product_type":"c1","uid":1446375,"ip_address":"","ucode":"AE2B8DFC643ACC","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/e7/044a9a6c.jpg","comment_is_top":false,"comment_ctime":1579531159,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5874498455","product_id":100015201,"comment_content":"挂载war包这个，应该是先挂载volume到&#47;app，然后再mv war包到app目录下吧，不然如果先移动war包到app目录下，再将volume挂载到&#47;app，原挂载点下的文件会被隐藏吧","like_count":1},{"had_liked":false,"id":106939,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1223046,"ip_address":"","ucode":"61CFE863E8E6D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/86/8211935c.jpg","comment_is_top":false,"comment_ctime":1561426814,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5856394110","product_id":100015201,"comment_content":"关于更新war包，那是不是每次也要构建一个新的镜像才行？那和第一种方法，把war包打到tomcat镜像好像更新方式都差不多吧？都难免要打新的镜像？","like_count":1,"discussions":[{"author":{"id":1012816,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/50/59d429c9.jpg","nickname":"MiracleWong","note":"","ucode":"05233774710AFE","race_medal":3,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260024,"discussion_content":"分离的话，war包只要继承自busybox or alpine等镜像就可以了，这样每次打包的新镜像比较小","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588839907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75623,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1552440988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5847408284","product_id":100015201,"comment_content":"老师，war+tomcat sidecar模式，我遇到这种Back-off restarting failed container，[root@kubernetes01 ~]# kubectl logs java-web-001<br>Tomcat started.<br>非常纳闷，tomcat我是自己做的镜像，用docker启动可以看到tomcat那个页面。","like_count":1},{"had_liked":false,"id":73922,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1552034149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5847001445","product_id":100015201,"comment_content":"听君一席话，深读十年书，🙏感谢感谢","like_count":1},{"had_liked":false,"id":64041,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":1201560,"ip_address":"","ucode":"C8C8A4F2B6C20F","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/98/a49061ab.jpg","comment_is_top":false,"comment_ctime":1548646245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843613541","product_id":100015201,"comment_content":"有没有可以课程中涉及到的镜像可以下载的地址","like_count":1},{"had_liked":false,"id":36365,"user_name":"小谢同学","can_delete":false,"product_type":"c1","uid":1032544,"ip_address":"","ucode":"E809E6BC470631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/60/fc3689d0.jpg","comment_is_top":false,"comment_ctime":1541059780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5836027076","product_id":100015201,"comment_content":"第一次明白何为醍醐灌顶","like_count":1},{"had_liked":false,"id":31713,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1539269354,"is_pvip":false,"replies":[{"id":"11454","content":"没什么联系……","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539308110,"ip_address":"","comment_id":31713,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834236650","product_id":100015201,"comment_content":"请问，sidecar这种用initcontainer的方式和后面讲到的statefulset的改变拓扑状态，有什么区别么？ ","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426473,"discussion_content":"没什么联系……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539308110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28619,"user_name":"洛子墟","can_delete":false,"product_type":"c1","uid":1036273,"ip_address":"","ucode":"CFC500D00F0B9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/f1/bf63fef6.jpg","comment_is_top":false,"comment_ctime":1538114182,"is_pvip":false,"replies":[{"id":"10400","content":"不能说完美，还是要结合考虑自己的场景","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538188159,"ip_address":"","comment_id":28619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833081478","product_id":100015201,"comment_content":"完美解决war和tomcat做一起，完成镜像的频繁打包问题！而且占据空间太大! 666","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425327,"discussion_content":"不能说完美，还是要结合考虑自己的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538188159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26539,"user_name":"silver","can_delete":false,"product_type":"c1","uid":1186740,"ip_address":"","ucode":"908E3C8560D6E1","user_header":"https://static001.geekbang.org/account/avatar/00/12/1b/b4/a6db1c1e.jpg","comment_is_top":false,"comment_ctime":1537660112,"is_pvip":false,"replies":[{"id":"9623","content":"不需要什么message，请关注后续的控制器模式","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537672144,"ip_address":"","comment_id":26539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5832627408","product_id":100015201,"comment_content":"&quot;Pod 的生命周期只跟 Infra 容器一致，而与容器 A 和 B 无关&quot;，那么当Pod中用户的容器A或者B崩溃了，k8s怎么收到failure message并且重新去部署Pod呢","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424663,"discussion_content":"不需要什么message，请关注后续的控制器模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537672144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26489,"user_name":"Kanner","can_delete":false,"product_type":"c1","uid":1024243,"ip_address":"","ucode":"28743D9F413602","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/f3/871e4a54.jpg","comment_is_top":false,"comment_ctime":1537620139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5832587435","product_id":100015201,"comment_content":"Pod里的容器还可以共享PID Namespace, IPC Namespace.","like_count":1},{"had_liked":false,"id":26488,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1537619835,"is_pvip":false,"replies":[{"id":"9664","content":"是的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537688461,"ip_address":"","comment_id":26488,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5832587131","product_id":100015201,"comment_content":"在 Pod 中，所有 Init Container 定义的容器，都会比 spec.containers 定义的用户容器先启动。并且，Init Container 容器会按顺序逐一启动，而直到它们都启动并且退出了，用户容器才会启动。<br>这里的init Container 容器是在启用完后，【会被自动删除】，接下来才启动用户窗口吗？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424647,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537688461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26267,"user_name":"烽火戏诸侯","can_delete":false,"product_type":"c1","uid":1225287,"ip_address":"","ucode":"3901D00B7F0683","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/47/11321969.jpg","comment_is_top":false,"comment_ctime":1537530403,"is_pvip":false,"replies":[{"id":"9571","content":"不能这么类比。这是container之间的关系。statefulset处理的是pod之间的关系。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537545414,"ip_address":"","comment_id":26267,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5832497699","product_id":100015201,"comment_content":"张老师 请教个问题哈，关于initcontainer这块，可不可以理解pod里面的container 有着服务依赖的关系，那以此类推，statefulset 可以理解是这个逻辑层次更高的概念吗？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424587,"discussion_content":"不能这么类比。这是container之间的关系。statefulset处理的是pod之间的关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537545414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26056,"user_name":"择动","can_delete":false,"product_type":"c1","uid":1038386,"ip_address":"","ucode":"09FB38D0F89E49","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/32/fab70236.jpg","comment_is_top":false,"comment_ctime":1537493924,"is_pvip":false,"replies":[{"id":"9519","content":"只是设计上的类比，实际上没啥关系……","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537514268,"ip_address":"","comment_id":26056,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5832461220","product_id":100015201,"comment_content":"偶像，那pod有和虚拟机在类比时又有什么不同呢，还是没什么不同？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424509,"discussion_content":"只是设计上的类比，实际上没啥关系……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537514268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25989,"user_name":"lggl","can_delete":false,"product_type":"c1","uid":1219251,"ip_address":"","ucode":"EB07944F919D8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/b3/244b5192.jpg","comment_is_top":false,"comment_ctime":1537489572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5832456868","product_id":100015201,"comment_content":"关于部署war包和tomcat，在升级war的时候，先修改yml，然后kubernets会重启整个pod，然后按照定义好的容器启动顺序流程走下去？正常生产是按照这种方式进行升级的吗？","like_count":1},{"had_liked":false,"id":25946,"user_name":"假装乐","can_delete":false,"product_type":"c1","uid":1093437,"ip_address":"","ucode":"97A7D0A6D93865","user_header":"https://static001.geekbang.org/account/avatar/00/10/af/3d/28b61e6b.jpg","comment_is_top":false,"comment_ctime":1537486948,"is_pvip":false,"replies":[{"id":"9429","content":"仔细看，是单独的容器……","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537493883,"ip_address":"","comment_id":25946,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5832454244","product_id":100015201,"comment_content":"张老师，数据库和war包是单独的pod，那么应用的数据库链接是否可以动态配置呢？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424469,"discussion_content":"仔细看，是单独的容器……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537493883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25900,"user_name":"wilder","can_delete":false,"product_type":"c1","uid":1007682,"ip_address":"","ucode":"C176379126D007","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/42/8a79c613.jpg","comment_is_top":false,"comment_ctime":1537463367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5832430663","product_id":100015201,"comment_content":"刚下班不久，看到张老师的文章很是开心，文章从“设计思想&#47;理念”上来剖析为何k8s要引入pod的教学方法实属让人有更深刻的认知。谢谢，谢谢了。","like_count":1},{"had_liked":false,"id":359803,"user_name":"stackWarn","can_delete":false,"product_type":"c1","uid":1002005,"ip_address":"北京","ucode":"89672E452DEBA5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/15/106eaaa8.jpg","comment_is_top":false,"comment_ctime":1665912560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665912560","product_id":100015201,"comment_content":"确实是最值的一门课","like_count":0},{"had_liked":false,"id":357429,"user_name":"微笑","can_delete":false,"product_type":"c1","uid":1678805,"ip_address":"四川","ucode":"5B204327DA1CE5","user_header":"https://static001.geekbang.org/account/avatar/00/19/9d/d5/1f3bcb2e.jpg","comment_is_top":false,"comment_ctime":1663242867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663242867","product_id":100015201,"comment_content":"问一个小白问题。既然k8s可以先计算pod需要的内存，然后选择节点。问什么Swarm不能也先计算所有容器需要的内存，然后选择节点呢？","like_count":0},{"had_liked":false,"id":357244,"user_name":"Geek_7794e2","can_delete":false,"product_type":"c1","uid":2350043,"ip_address":"美国","ucode":"2F749554FEA20D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","comment_is_top":false,"comment_ctime":1663087173,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1663087173","product_id":100015201,"comment_content":"当这个pod在其他节点上面运行的时候,initContainer不是还需要执行cp命令来将宿主机上面的war包复制到容器内,这不是还需要&quot;分布式存储系统吗&quot;","like_count":0},{"had_liked":false,"id":351141,"user_name":"looper","can_delete":false,"product_type":"c1","uid":1238396,"ip_address":"","ucode":"DA4BCE83836C04","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/7c/2a5a418b.jpg","comment_is_top":false,"comment_ctime":1657545438,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657545438","product_id":100015201,"comment_content":"打卡，还有 pid、user、time、mout、pid、uts、ipc","like_count":0},{"had_liked":false,"id":349539,"user_name":"dreamintime","can_delete":false,"product_type":"c1","uid":1192982,"ip_address":"","ucode":"0D22CF4A8ACA83","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6kFLT2oIiaU6fMCsC6ic2BWnXdm87OB3VibGFf4TUiaHQrUvU9V9hD3e2z8WwdOkumCWBZ8y05ia00UyicJorX5Xcskg/132","comment_is_top":false,"comment_ctime":1656053501,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1656053501","product_id":100015201,"comment_content":"老师，怎么理解k8s资源对象这个概念呢，网上搜了一圈就他们直接讲pod，service这些内容了。资源对象是啥意思呢","like_count":0},{"had_liked":false,"id":349136,"user_name":"猎豹","can_delete":false,"product_type":"c1","uid":1432488,"ip_address":"","ucode":"04FBA32E9F5EAD","user_header":"https://static001.geekbang.org/account/avatar/00/15/db/a8/7d2a4ade.jpg","comment_is_top":false,"comment_ctime":1655769868,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655769868","product_id":100015201,"comment_content":"值回票价的一篇","like_count":0},{"had_liked":false,"id":348597,"user_name":"叶子鑫鑫鑫","can_delete":false,"product_type":"c1","uid":1194658,"ip_address":"","ucode":"6521C3A046F100","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/a2/98f94be1.jpg","comment_is_top":false,"comment_ctime":1655222453,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655222453","product_id":100015201,"comment_content":"如果一个pod里面维护两个容器，我们怎么给它们做健康检查、销毁处理。<br>比如说一个pod里的一个容器宕机了，pod的表现应该是宕机还是继续运行呢？","like_count":0},{"had_liked":false,"id":343631,"user_name":"woo","can_delete":false,"product_type":"c1","uid":1133195,"ip_address":"","ucode":"3076FEA9A60DBC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibpASCYk5eF1lAEbJ3TSI0fuMtiaVDb7dNuBZDRPL6QjEict8Wrb8iax2OibbEBxSs4bicCYf3yMEkGmXB2b2UVypaIg/132","comment_is_top":false,"comment_ctime":1650962135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650962135","product_id":100015201,"comment_content":"有没有书籍推荐呢，谢谢。","like_count":0},{"had_liked":false,"id":343132,"user_name":"Nio","can_delete":false,"product_type":"c1","uid":1529642,"ip_address":"","ucode":"A1B8D3C01FB937","user_header":"https://static001.geekbang.org/account/avatar/00/17/57/2a/c6c95f37.jpg","comment_is_top":false,"comment_ctime":1650644205,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1650644205","product_id":100015201,"comment_content":"这个设计妙，容器是进程，pod是进程组。","like_count":0},{"had_liked":false,"id":342641,"user_name":"怀揣梦想的学渣","can_delete":false,"product_type":"c1","uid":1916685,"ip_address":"","ucode":"2349B9F4F6FDE3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","comment_is_top":false,"comment_ctime":1650378462,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650378462","product_id":100015201,"comment_content":"我居然通过文章理解了sidecar容器是干啥的，之前一直没理解官方文档为啥会在日志读取部分单独写sidecar。现在明白为何同一POD中，会有这种方式取日志。","like_count":0},{"had_liked":false,"id":342477,"user_name":"命运女神在微笑","can_delete":false,"product_type":"c1","uid":1492301,"ip_address":"","ucode":"249172371DA9F2","user_header":"https://static001.geekbang.org/account/avatar/00/16/c5/4d/3e75e5f1.jpg","comment_is_top":false,"comment_ctime":1650283573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650283573","product_id":100015201,"comment_content":"这片文章随便时间不长，但是带来的知识点太丰富了","like_count":0},{"had_liked":false,"id":341597,"user_name":"jiangb","can_delete":false,"product_type":"c1","uid":1030861,"ip_address":"","ucode":"A09415749CA88D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrqLEic7DVicYY1s9ldH0vGBialDoplVGpicZUJ0Fdaklw27Frv8Ac67eicb5LibhL74SUxAzlick2nfltA/132","comment_is_top":false,"comment_ctime":1649730546,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1649730546","product_id":100015201,"comment_content":"赞，读了2遍。","like_count":0},{"had_liked":false,"id":338991,"user_name":"浮生","can_delete":false,"product_type":"c1","uid":2124308,"ip_address":"","ucode":"D77217D00C8904","user_header":"https://static001.geekbang.org/account/avatar/00/20/6a/14/aeda3c7e.jpg","comment_is_top":false,"comment_ctime":1647851922,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647851922","product_id":100015201,"comment_content":"讲的太好了, 虽然看不明白","like_count":0},{"had_liked":false,"id":337973,"user_name":"阿白","can_delete":false,"product_type":"c1","uid":2535948,"ip_address":"","ucode":"28D1FB38CCC669","user_header":"https://static001.geekbang.org/account/avatar/00/26/b2/0c/5a217ec6.jpg","comment_is_top":false,"comment_ctime":1647196398,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647196398","product_id":100015201,"comment_content":"想请教张老师一个问题。您在文中多次强调“容器的单进程”属性，是因为容器本质上就是一个进程，不具备进程管理的能力（包括您提到的那个 Java web 容器中执行的 Nginx 挂了，Java Web是不管的）——但事实上有两个地方我不是太理解这种说法：<br>1、直接用 systemd 或者 supervisord 来创建容器，不就可以让这个容器（进程）具备了进程管理能力了吗？容器创建出来的其他进程都是这个 systemd 的子进程，也都纳入了 systemd 的监控管理放臭了吗？<br>2、我们现有的很多模块&#47;应用，本身就包含了 daemon 进程和功能进程，这些daemon进程不就是具有管理功能进程的能力嘛，如果进行容器化改造的时候，那么按照您文中对于Pod的讲解，这些daemon和功能进程应该是放到一个容器中，而不是Pod中的sidecar模式各自一个容器。但是这样的化，容器中不就又钻出来多个进程了，这和容器的单进程本质似乎又矛盾了呢~~~~<br><br>谢谢老师答疑解惑~~~","like_count":0},{"had_liked":false,"id":334668,"user_name":"Kira","can_delete":false,"product_type":"c1","uid":1193715,"ip_address":"","ucode":"86F6D1365DF36C","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/f3/77e52eb0.jpg","comment_is_top":false,"comment_ctime":1645065635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645065635","product_id":100015201,"comment_content":"写得太好了，学习了","like_count":0},{"had_liked":false,"id":330542,"user_name":"火の龍果","can_delete":false,"product_type":"c1","uid":1209089,"ip_address":"","ucode":"D59EDD5A4D3072","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/01/0aeba3d6.jpg","comment_is_top":false,"comment_ctime":1642036274,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642036274","product_id":100015201,"comment_content":"关于容器的“单进程模型”的问题，请问在容器中使用 shell 脚本启动最终应用，是不是也是不合适的？","like_count":0},{"had_liked":false,"id":325205,"user_name":"Geek_23bbd5","can_delete":false,"product_type":"c1","uid":2855302,"ip_address":"","ucode":"39F77978CD6461","user_header":"","comment_is_top":false,"comment_ctime":1638862937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638862937","product_id":100015201,"comment_content":"作者将容器和pod的关系写的非常清晰，而且也尝试从不同的角度去阐述他们的关系，可以令人更好地去理解","like_count":0},{"had_liked":false,"id":321783,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1637045783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637045783","product_id":100015201,"comment_content":"Pod，实际上是在扮演传统基础设施里“虚拟机”的角色；而容器，则是这个虚拟机里运行的用户程序。","like_count":0},{"had_liked":false,"id":316671,"user_name":"hevin","can_delete":false,"product_type":"c1","uid":1021745,"ip_address":"","ucode":"ADD0E8F9A5D3AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/31/c5651fa0.jpg","comment_is_top":false,"comment_ctime":1634484609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634484609","product_id":100015201,"comment_content":"写的太好了，形象易懂，非常清晰","like_count":0},{"had_liked":false,"id":312375,"user_name":"熊伟楠","can_delete":false,"product_type":"c1","uid":1930602,"ip_address":"","ucode":"3677EE3957CAA2","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mstClEX5QgywKCOMj0R8DkX3FiayxxQNhyxw1xQia1sSMcbciavpu0fiay4uoAD0RcDyphB1YGgxC4U7tLsD13CbeQ/132","comment_is_top":false,"comment_ctime":1631779554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631779554","product_id":100015201,"comment_content":"小白一个，想问下各位大佬，为何辅助容器是挂载&#47;app上然后cp根目录文件到&#47;app上以达到共享文件的目的，而不是直接挂载到&#47;上呢？","like_count":0},{"had_liked":false,"id":308859,"user_name":"happyfucheng","can_delete":false,"product_type":"c1","uid":1245040,"ip_address":"","ucode":"458E67028A5368","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/70/4a6f9065.jpg","comment_is_top":false,"comment_ctime":1629826783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629826783","product_id":100015201,"comment_content":"看到这篇，我感觉我有点入门了","like_count":0},{"had_liked":false,"id":308721,"user_name":"YH","can_delete":false,"product_type":"c1","uid":2655863,"ip_address":"","ucode":"D98D2963A9A159","user_header":"https://static001.geekbang.org/account/avatar/00/28/86/77/e9f69816.jpg","comment_is_top":false,"comment_ctime":1629771363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629771363","product_id":100015201,"comment_content":"老师你好，有没有k8s对接s3对象存储的方法，比如除了s3fs这种方式，有没有像csi插件这种的方式？谢谢","like_count":0},{"had_liked":false,"id":302982,"user_name":"lin","can_delete":false,"product_type":"c1","uid":1368735,"ip_address":"","ucode":"380FFA0C7790DC","user_header":"https://static001.geekbang.org/account/avatar/00/14/e2/9f/e5f5e138.jpg","comment_is_top":false,"comment_ctime":1626493547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626493547","product_id":100015201,"comment_content":"Pod是豆荚，Container就是豆荚包裹的种子。理解了这个词的意思对理解Pod和Container的关系也有帮助","like_count":0},{"had_liked":false,"id":296119,"user_name":"莱斯","can_delete":false,"product_type":"c1","uid":2346108,"ip_address":"","ucode":"19DBE8EFAE7C70","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiahQmojanAht9heYDSJsqwB9zwpa7kfGrSRaHC1ia1sQShfgWO9ibb1wMr9efUpDhpFrbQB3LIqxbg/132","comment_is_top":false,"comment_ctime":1622770150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622770150","product_id":100015201,"comment_content":"通透","like_count":0},{"had_liked":false,"id":295816,"user_name":"tiankonghewo","can_delete":false,"product_type":"c1","uid":1476427,"ip_address":"","ucode":"7A55A9C17DD9DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/4b/16ea3997.jpg","comment_is_top":false,"comment_ctime":1622609130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622609130","product_id":100015201,"comment_content":"没想到还有这么精辟的专栏，粗略学习了3遍了，每次都很享受，结合kubenetes in action和官方文档，简直完美","like_count":0},{"had_liked":false,"id":293129,"user_name":"樱小路依然","can_delete":false,"product_type":"c1","uid":1269957,"ip_address":"","ucode":"DBA9FF68015FE5","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/c5/69286d58.jpg","comment_is_top":false,"comment_ctime":1621235316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621235316","product_id":100015201,"comment_content":"因为之前没学过docker相关的知识<br>所以之前的概念看的懵懵懂懂，反而这篇pod的概念看的很明白","like_count":0},{"had_liked":false,"id":290930,"user_name":"Chn.K","can_delete":false,"product_type":"c1","uid":1285191,"ip_address":"","ucode":"F82E8CE20C16FA","user_header":"https://static001.geekbang.org/account/avatar/00/13/9c/47/50cf2cab.jpg","comment_is_top":false,"comment_ctime":1619864258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619864258","product_id":100015201,"comment_content":"磊哥，有个问题请教下：对于一个业务有多个同名进程，但是业务进程本身又不能做进程管理，这种情况应该怎么规划pod组成呢？我们现在的方式是通过supervisord来做1号进程来组织和管理业务进程，不知道有没有更好的方案？谢谢","like_count":0},{"had_liked":false,"id":290841,"user_name":"宋海东","can_delete":false,"product_type":"c1","uid":2531693,"ip_address":"","ucode":"0B1258859837D1","user_header":"","comment_is_top":false,"comment_ctime":1619776216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619776216","product_id":100015201,"comment_content":"对这个话题感兴趣的同学，可以阅读这篇技术文章来了解一下。  链接失效了 ，这篇文章名称是？https:&#47;&#47;www.ibm.com&#47;developerworks&#47;cn&#47;linux&#47;kernel&#47;l-thread&#47;index.html","like_count":0},{"had_liked":false,"id":290723,"user_name":"多选参数","can_delete":false,"product_type":"c1","uid":1248326,"ip_address":"","ucode":"B2294D80AB075F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","comment_is_top":false,"comment_ctime":1619704875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619704875","product_id":100015201,"comment_content":"最近在看学习 k8s，发现老师写的真的很有深度，很有逻辑","like_count":0},{"had_liked":false,"id":284747,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1616460007,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1616460007","product_id":100015201,"comment_content":"不想使用 Docker 原因就是在多个容器相互关联时，总觉得有些地方特别别扭，但是说不上来。但是又因为 K8S 太过复杂，而也搞不清楚 K8S 到底干了什么。但是这一篇的讲解，我彻底明白了为什么 K8S 为什么会火，感觉这一篇就值回购买的价格了，非常感谢。","like_count":0},{"had_liked":false,"id":284579,"user_name":"博雅大公","can_delete":false,"product_type":"c1","uid":2231434,"ip_address":"","ucode":"B29962B01736E4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep82iaEB1iaiaNrFr1SWXkmmlPMoOprgwhMDt9yILo7raCGDmuv3Gl7vgB5a1Euices12Loj8ko4U3nJQ/132","comment_is_top":false,"comment_ctime":1616371143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616371143","product_id":100015201,"comment_content":"即便是2021年读这篇文章依然收获颇多，赞！","like_count":0},{"had_liked":false,"id":282367,"user_name":"云梦泽","can_delete":false,"product_type":"c1","uid":1483363,"ip_address":"","ucode":"5EA906A52C4366","user_header":"https://static001.geekbang.org/account/avatar/00/16/a2/63/47aaff28.jpg","comment_is_top":false,"comment_ctime":1615207090,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615207090","product_id":100015201,"comment_content":"张磊大佬永远滴神，每次看都有新收获。PS：从阿里云课堂一路追来的研一小迷弟[doge]","like_count":0},{"had_liked":false,"id":278155,"user_name":"陈程","can_delete":false,"product_type":"c1","uid":1136009,"ip_address":"","ucode":"6D26DF5BDAFE02","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/89/a829f8a1.jpg","comment_is_top":false,"comment_ctime":1612777767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612777767","product_id":100015201,"comment_content":"通俗易懂，给个赞。","like_count":0},{"had_liked":false,"id":277705,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1612520131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612520131","product_id":100015201,"comment_content":"文章写得是真的好，知其然知其所以然，鞭辟入里，不仅仅是教你怎么做而是为什么这么做？这个门票值了，pod 其实是扮演传统基础建设中虚拟机的角色，而容器则是扮演着虚拟机中用户程序的角色。","like_count":0},{"had_liked":false,"id":277697,"user_name":"一秒","can_delete":false,"product_type":"c1","uid":1311001,"ip_address":"","ucode":"F149B7F60620BD","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/19/f4da2829.jpg","comment_is_top":false,"comment_ctime":1612517605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612517605","product_id":100015201,"comment_content":"volume能不能使用存储服务呢，不想挂载在宿主机上，比如minio等网络存储，我存到远端的存储服务上行不行","like_count":0},{"had_liked":false,"id":277683,"user_name":"一秒","can_delete":false,"product_type":"c1","uid":1311001,"ip_address":"","ucode":"F149B7F60620BD","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/19/f4da2829.jpg","comment_is_top":false,"comment_ctime":1612515480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612515480","product_id":100015201,"comment_content":"问题1: war包把依赖tomcat里的东西拿出来，手动解压war包，然后启动这个java应用也可以吧，这样就不需要另外启动tomcat了。","like_count":0},{"had_liked":false,"id":276598,"user_name":"边际革命","can_delete":false,"product_type":"c1","uid":1124665,"ip_address":"","ucode":"EC15C0AE4D487A","user_header":"https://static001.geekbang.org/account/avatar/00/11/29/39/be9d2e88.jpg","comment_is_top":false,"comment_ctime":1612022704,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612022704","product_id":100015201,"comment_content":"醍醐灌顶，茅塞顿开🤣","like_count":0},{"had_liked":false,"id":270914,"user_name":"xl","can_delete":false,"product_type":"c1","uid":2160078,"ip_address":"","ucode":"C015A3AF5C3CB0","user_header":"","comment_is_top":false,"comment_ctime":1609317053,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1609317053","product_id":100015201,"comment_content":"如果说 “Pod，实际上是在扮演传统基础设施里“虚拟机”的角色；而容器，则是这个虚拟机里运行的用户程序。”   那么在这种场景下，我们改如何理解kubernetes呢？可以横向扩展虚拟机的承载者?","like_count":0,"discussions":[{"author":{"id":2235381,"avatar":"https://static001.geekbang.org/account/avatar/00/22/1b/f5/52dada23.jpg","nickname":"Fresh feel","note":"","ucode":"15FD15429D76D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344506,"discussion_content":"真要这么类比，你把他理解成OpenStack吧😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611481279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268704,"user_name":"水蒸蛋","can_delete":false,"product_type":"c1","uid":1809160,"ip_address":"","ucode":"6F7F853A4BF901","user_header":"https://static001.geekbang.org/account/avatar/00/1b/9b/08/27ac7ecd.jpg","comment_is_top":false,"comment_ctime":1608298620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608298620","product_id":100015201,"comment_content":"我还是没有理解war包这个案例，如果更新war包init只能跑一次，pod不是要重新发布吗，就是省了从做镜像","like_count":0},{"had_liked":false,"id":268531,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1608250975,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608250975","product_id":100015201,"comment_content":"虚拟机中应用是可执行文件启动后的一组进程，比如Java –jar启动一个jar包；<br>容器是镜像（可执行文件）启动后的一个进程。<br>按我的理解虚拟机中的应用和容器中的进程是一回事，但是为啥在虚拟机中是一组而在容器中是一个？","like_count":0},{"had_liked":false,"id":267920,"user_name":"董瑞","can_delete":false,"product_type":"c1","uid":1117752,"ip_address":"","ucode":"5A701013987147","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/38/cffa4734.jpg","comment_is_top":false,"comment_ctime":1607997013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607997013","product_id":100015201,"comment_content":"从虚拟机应用迁移到容器应用的概念时，Pod 对应虚拟机，应用进程对应到一个容器，从这里一下子就理解了 Pod 的存在意义。","like_count":0},{"had_liked":false,"id":263323,"user_name":"liuis","can_delete":false,"product_type":"c1","uid":1199658,"ip_address":"","ucode":"55416B403EDD91","user_header":"https://static001.geekbang.org/account/avatar/00/12/4e/2a/ac7e345f.jpg","comment_is_top":false,"comment_ctime":1606100852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606100852","product_id":100015201,"comment_content":"物超所值，这个专栏是买过的所有专栏中讲的最好的了","like_count":0},{"had_liked":false,"id":258710,"user_name":"Ada Li","can_delete":false,"product_type":"c1","uid":2289318,"ip_address":"","ucode":"7C6413665B9822","user_header":"","comment_is_top":false,"comment_ctime":1604541955,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604541955","product_id":100015201,"comment_content":"将运行在虚拟机里的应用迁移到容器里，需要梳理应用在原环境里的所有依赖和关联关系，并且以容器模式进行微服务的重新设计，这方面有经验总结嚒？还是说现在大家都是摸着石头过河的阶段？","like_count":0},{"had_liked":false,"id":256471,"user_name":"好运来","can_delete":false,"product_type":"c1","uid":1113937,"ip_address":"","ucode":"F469ED6CEFEF30","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/51/9d5cfadd.jpg","comment_is_top":false,"comment_ctime":1603631500,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1603631500","product_id":100015201,"comment_content":"结合kubernetes权威指南第四版Pod章节的内容，原理实践二合一，总算搞明白这个Pod含义啦！","like_count":0},{"had_liked":false,"id":254613,"user_name":"犯二的哈士奇","can_delete":false,"product_type":"c1","uid":1001940,"ip_address":"","ucode":"F332A09CE2AE09","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/d4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1603157999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603157999","product_id":100015201,"comment_content":"我想请问下，按照你说的，传统意义上，我们都是一个容器就是跑一个进程。<br>但是在实际情况中，我们经常会为了方便，将多个子进程跑在一个容器中，方法是使用&#47;bin&#47;sh a进程启动命令 &amp;&amp; b进程启动命令，用这样的方法来启动容器达到同时运行2个子进程的目的。<br>比如nginx要和php-fpm启在一个容器中，那么就是&#47;bin&#47;sh php-fpm &amp;&amp; nginx -g &#39;daemon off&#39;。<br>我的问题是，这样用上一层&#47;bin&#47;sh进程包装了下一层2个子进程的方式，有没有什么不妥或者风险。","like_count":0},{"had_liked":false,"id":251080,"user_name":"€座々右。銘","can_delete":false,"product_type":"c1","uid":1502931,"ip_address":"","ucode":"CD7A037E8EF041","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/d3/41289d2a.jpg","comment_is_top":false,"comment_ctime":1601358909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601358909","product_id":100015201,"comment_content":"感觉war包这种举例不太好，因为现在开发都有git，更新的时候直接从git拉取最新的war包就行了，再弄一个镜像有点多此一举","like_count":0},{"had_liked":false,"id":248069,"user_name":"路易港","can_delete":false,"product_type":"c1","uid":1130363,"ip_address":"","ucode":"9AD70AAFC4EF3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/3f/7b/b4e2cca4.jpg","comment_is_top":false,"comment_ctime":1600000068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600000068","product_id":100015201,"comment_content":"整个教程直到这篇文章，终于让我有一种落霞与孤鹜齐飞，秋水共长天一色的赶脚，感谢作者！","like_count":0},{"had_liked":false,"id":247505,"user_name":"大G来了呦","can_delete":false,"product_type":"c1","uid":1610260,"ip_address":"","ucode":"97711D9CCA73B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/92/14/6ca50b3b.jpg","comment_is_top":false,"comment_ctime":1599728240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599728240","product_id":100015201,"comment_content":"想问下 这个 geektime的镜像  地址是啥 ，拉去不到惊醒","like_count":0},{"had_liked":false,"id":247384,"user_name":"锋","can_delete":false,"product_type":"c1","uid":1807836,"ip_address":"","ucode":"F26BC1F14AB0D7","user_header":"https://static001.geekbang.org/account/avatar/00/1b/95/dc/07195a63.jpg","comment_is_top":false,"comment_ctime":1599697366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599697366","product_id":100015201,"comment_content":"大佬您好，不知道现在提问还嫩不能得倒解答了，毕竟这么久了。有一个疑问是：多个容器挂载一个目录，都是相同的文件进行读写，这个时候不会导致锁的问题吗？还是说有什么特殊的处理方式？","like_count":0},{"had_liked":false,"id":246174,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1599199420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599199420","product_id":100015201,"comment_content":"那么基本上可以实现的Namespace,Kubernetes中基本都可以实现共享吧<br>就如同之前所讲的Namesapce<br>&quot;除了我们刚刚用到的 PID Namespace，Linux 操作系统还提供了 Mount、UTS、IPC、Network 和 User 这些 Namespace&quot;<br>这些Namesacpe理论上都可以支持","like_count":0},{"had_liked":false,"id":243766,"user_name":"vncl","can_delete":false,"product_type":"c1","uid":1273977,"ip_address":"","ucode":"9356B380E31362","user_header":"https://static001.geekbang.org/account/avatar/00/13/70/79/12dde4f5.jpg","comment_is_top":false,"comment_ctime":1598269805,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598269805","product_id":100015201,"comment_content":"思考题： <br>1. 多个容器的 pod 只有 net 和 ipc 是共享的namespace<br>2. 使用场景:  ipc和net 都是进程间通信的主要手段","like_count":0},{"had_liked":false,"id":243682,"user_name":"大G来了呦","can_delete":false,"product_type":"c1","uid":1610260,"ip_address":"","ucode":"97711D9CCA73B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/92/14/6ca50b3b.jpg","comment_is_top":false,"comment_ctime":1598248957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598248957","product_id":100015201,"comment_content":"大神一张口 就知道有没有，这门课上的值！","like_count":0},{"had_liked":false,"id":238161,"user_name":"Geek_536b07","can_delete":false,"product_type":"c1","uid":1897136,"ip_address":"","ucode":"6D2C18ADFE2500","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rurTzy9obgda82kG3FTrszfzuIRQH2Mljc36u9KZLnOcJEtjY1NqdEROjpkLZia8Lu97OKhoIIicHu4xoiclHpOAA/132","comment_is_top":false,"comment_ctime":1596083411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596083411","product_id":100015201,"comment_content":"在java代码中使用kubeclient连接apiserver抛出这种异常：apiserver received an error that is not an metav1.Status: &amp;net.OpError{Op:&quot;write&quot;, Net:&quot;tcp&quot;, Source:(*net.TCPAddr)(0xc08b8af710), Addr:(*net.TCPAddr)(0xc08b8af740), Err:(*os.SyscallError)(0xc07e85f4c0)}老师能帮忙分析下吗","like_count":0},{"had_liked":false,"id":219309,"user_name":"jacy","can_delete":false,"product_type":"c1","uid":1103456,"ip_address":"","ucode":"0022A8759DDCE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/60/f21b2164.jpg","comment_is_top":false,"comment_ctime":1589987346,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1589987346","product_id":100015201,"comment_content":"老师，对于容器只能管理一个进程我还是不太理解，下面是我的疑问，望老师解答。<br>1.容器只能管理一个进程，那是否允许创建子进程？<br>2.如果允许，创建出来的新进程在哪，如何管理，是不是进程资源无法回收，如果是这样，那容器进程退出后，创建的进程就成为了僵尸进程？","like_count":0},{"had_liked":false,"id":218309,"user_name":"Geek_734032","can_delete":false,"product_type":"c1","uid":1795866,"ip_address":"","ucode":"5BB1D4E0DBF3A0","user_header":"","comment_is_top":false,"comment_ctime":1589776303,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589776303","product_id":100015201,"comment_content":"买过最有价值的课程，期待出书","like_count":0},{"had_liked":false,"id":214015,"user_name":"rainbow702","can_delete":false,"product_type":"c1","uid":1002406,"ip_address":"","ucode":"C71239EE8B2A30","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/a6/747a07d2.jpg","comment_is_top":false,"comment_ctime":1588634841,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1588634841","product_id":100015201,"comment_content":"老师 关于init container第二个日志例子 比较费解: 因为init container启动完成退出之后 应用容器才会启动，那收集日志的工作放在init container 怎么还源源不断把日志发到es呢？??<br><br>还是说，这个例子中，pod中的两个容器都是应用容器，没有 init container ？","like_count":0,"discussions":[{"author":{"id":2100644,"avatar":"","nickname":"Geek_8e2759","note":"","ucode":"EBDBA4D92B5C50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360996,"discussion_content":"第二个例子指的是『一个 Pod 中多个容器』的例子，并不是说 initContainer 的第二个容器。日志收集容器肯定是需要和主容器一起生存下来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616576410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211937,"user_name":"loveyzhou","can_delete":false,"product_type":"c1","uid":1040706,"ip_address":"","ucode":"00D8EF917709A6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e1/42/a4955162.jpg","comment_is_top":false,"comment_ctime":1588039009,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1588039009","product_id":100015201,"comment_content":"war包和web服务器的例子没有想得很明白， docker compose中也是可以共享volume的吧，那我也可以给war包做个image，不是说非要做个类似分布式存储系统那样来管理war包。<br>services:<br>  war:<br>    volumes:<br>      - datavolume:&#47;xxx<br>  web:<br>    volumes:<br>      - datavolume:&#47;xxx<br>volumes:<br>  datavolume: {}<br>","like_count":0,"discussions":[{"author":{"id":1012816,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/50/59d429c9.jpg","nickname":"MiracleWong","note":"","ucode":"05233774710AFE","race_medal":3,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260025,"discussion_content":"你这样也是可以的，war 和 web container 共享了emptyDir 形式的Volume","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588840053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210415,"user_name":"小丢👣","can_delete":false,"product_type":"c1","uid":1031711,"ip_address":"","ucode":"A7699F00418FC4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/1f/57c88dd1.jpg","comment_is_top":false,"comment_ctime":1587741622,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587741622","product_id":100015201,"comment_content":"在一堆实践和学习过后，第三遍看了这个文章，醍醐灌顶，现在我可能才真正懂得pod的意义，才真正算开始入门，感谢张磊老师！","like_count":0},{"had_liked":false,"id":206432,"user_name":"张克菲","can_delete":false,"product_type":"c1","uid":1304742,"ip_address":"","ucode":"F89495F04DAD5D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/a6/e74ecf7d.jpg","comment_is_top":false,"comment_ctime":1586859742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586859742","product_id":100015201,"comment_content":"关于容器的单进程模型，有点疑问，即使一个容器起的第一个进程在容器这个namespace里是1号进程，他起了一个子进程，在这个namesapce里面PID=2，但是在host上还是可以看到他的PID（不是1）以及它创建的子进程的PID（不是2）。那么假设容器里面的PID=1的进程挂了，在host层面会不会把它的子进程接管过来呢？而实验证明，如果容器内1号进程挂了，它的子进程马上被干掉了，这样的话，是不是会造成子进程的资源没有被正确释放呢？","like_count":0},{"had_liked":false,"id":203481,"user_name":"无法言喻.","can_delete":false,"product_type":"c1","uid":1322328,"ip_address":"","ucode":"7F375BE388D4FC","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/58/aa35c402.jpg","comment_is_top":false,"comment_ctime":1586219740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586219740","product_id":100015201,"comment_content":"这个好像多重构建，技术原理是基于多重构建的吗？老师","like_count":0},{"had_liked":false,"id":200885,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1119133,"ip_address":"","ucode":"4BCA899B8E4E85","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/9d/0ff43179.jpg","comment_is_top":false,"comment_ctime":1585667507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585667507","product_id":100015201,"comment_content":"打卡<br><br>老师的文章开头强调“docker单进程模型”没看懂，如果我写一个shell脚本在容器启动时执行。脚本里将 imklog 和imuxsock 用&amp;提交到后台，main 在前台运行。会有什么问题？是不是我不理解linux进程原理造成的这个理解障碍？十分感谢。","like_count":0},{"had_liked":false,"id":178788,"user_name":"核子飞弹","can_delete":false,"product_type":"c1","uid":1125580,"ip_address":"","ucode":"CC3F6AD6CC83DA","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/cc/34859bbe.jpg","comment_is_top":false,"comment_ctime":1581824263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581824263","product_id":100015201,"comment_content":"整个课程都通俗易懂，深入浅出，超爽超值。","like_count":0},{"had_liked":false,"id":168523,"user_name":"小二科","can_delete":false,"product_type":"c1","uid":1064561,"ip_address":"","ucode":"985CA20B7AF7C4","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/71/f4467169.jpg","comment_is_top":false,"comment_ctime":1578104483,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578104483","product_id":100015201,"comment_content":"张哥，你出本书吧！！！一定特别畅销！！！！","like_count":0},{"had_liked":false,"id":155221,"user_name":"刘平","can_delete":false,"product_type":"c1","uid":1019655,"ip_address":"","ucode":"5249F4BB467A94","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/07/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1574666433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574666433","product_id":100015201,"comment_content":"总结：<br>容器的本质是进程。<br>镜像就是个安装包。<br>pod类比虚拟机，对多个容器编排管理。<br>k8s类比操作系统。","like_count":0},{"had_liked":false,"id":145322,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1572250872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572250872","product_id":100015201,"comment_content":"解决了一直以来的盲点和痛点，点赞","like_count":0},{"had_liked":false,"id":130285,"user_name":"Gene","can_delete":false,"product_type":"c1","uid":1090663,"ip_address":"","ucode":"639C1E9D75AE43","user_header":"https://static001.geekbang.org/account/avatar/00/10/a4/67/15a39517.jpg","comment_is_top":false,"comment_ctime":1567418772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567418772","product_id":100015201,"comment_content":"留言，设计模式虽好，但并非每个企业都有这种专业的人才可以将现有架构容器化，看起来容器化还是路长且阻呀，有容器化相关的工具嘛。","like_count":0},{"had_liked":false,"id":126532,"user_name":"lugusliu","can_delete":false,"product_type":"c1","uid":1378530,"ip_address":"","ucode":"B2D6A2F4122055","user_header":"https://static001.geekbang.org/account/avatar/00/15/08/e2/138689a8.jpg","comment_is_top":false,"comment_ctime":1566402000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566402000","product_id":100015201,"comment_content":"忍不住说个赞。","like_count":0},{"had_liked":false,"id":121747,"user_name":"~尘曦~","can_delete":false,"product_type":"c1","uid":1175695,"ip_address":"","ucode":"BFA7E7DBD9047B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f0/8f/ca9fded0.jpg","comment_is_top":false,"comment_ctime":1565217874,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565217874","product_id":100015201,"comment_content":"Infra这个容器是不是应该具有进程管理功能，pod不是共享PID的吗","like_count":0},{"had_liked":false,"id":119984,"user_name":"succ","can_delete":false,"product_type":"c1","uid":1110793,"ip_address":"","ucode":"F93C02705C5C6F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/09/3cf92783.jpg","comment_is_top":false,"comment_ctime":1564744015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564744015","product_id":100015201,"comment_content":"通透","like_count":0},{"had_liked":false,"id":109941,"user_name":"tangzc1","can_delete":false,"product_type":"c1","uid":1311254,"ip_address":"","ucode":"78CB596D2F33DC","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/16/6fe3fe44.jpg","comment_is_top":false,"comment_ctime":1562138076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562138076","product_id":100015201,"comment_content":" geektime&#47;sample:v2 这个镜像好像不存在了。","like_count":0},{"had_liked":false,"id":109513,"user_name":"Lucas WANG","can_delete":false,"product_type":"c1","uid":1134129,"ip_address":"","ucode":"25C71F06E0A070","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/31/33c95b53.jpg","comment_is_top":false,"comment_ctime":1562048262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562048262","product_id":100015201,"comment_content":"讲的真棒！","like_count":0},{"had_liked":false,"id":105194,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1223046,"ip_address":"","ucode":"61CFE863E8E6D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/86/8211935c.jpg","comment_is_top":false,"comment_ctime":1560936648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560936648","product_id":100015201,"comment_content":"老师，我们领导要求我把现在跑的3个nginx服务合并成1个nginx,然后静态文件代码放到ceph 共享存储 通过挂载访问 ···，他说这样做性能更好，更容易管理，因为3个nginx变成了1个nginx···，我不这样认为，请问老师对于这种做法有什么好的建议? 或者看法？","like_count":0},{"had_liked":false,"id":94061,"user_name":"冲野","can_delete":false,"product_type":"c1","uid":1505804,"ip_address":"","ucode":"B65C3C3280493D","user_header":"https://static001.geekbang.org/account/avatar/00/16/fa/0c/ee743364.jpg","comment_is_top":false,"comment_ctime":1557712052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557712052","product_id":100015201,"comment_content":"类比的很好。操作系统不是只有win，linux，macos；提供资源管理并屏蔽底层细节的系统都算是操作系统。","like_count":0},{"had_liked":false,"id":93384,"user_name":"红糖白糖","can_delete":false,"product_type":"c1","uid":1221664,"ip_address":"","ucode":"C6415C57AD6FF4","user_header":"https://static001.geekbang.org/account/avatar/00/12/a4/20/dd6f568c.jpg","comment_is_top":false,"comment_ctime":1557460736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557460736","product_id":100015201,"comment_content":"pod里面还可以共享mount namespace，可以通过设置MountPropagationBidirectional这个mount选项，此时在A 里面mount后，B里面也能看到(同一volume是前提)。但是A需要开privilege权限","like_count":0},{"had_liked":false,"id":88011,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1555811104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555811104","product_id":100015201,"comment_content":"现在算是真正的理解了kubernetes的pod了，牛逼老师","like_count":0},{"had_liked":false,"id":80792,"user_name":"李伟","can_delete":false,"product_type":"c1","uid":1030512,"ip_address":"","ucode":"21AA36B0A0FB14","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3d8sEiaduxqvTC4lotzZiatadC8E4JzZpjeLy39N170vNaCutjVV4V7DQcvOqFzJ5Kmicg/132","comment_is_top":false,"comment_ctime":1553734648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553734648","product_id":100015201,"comment_content":"在k8s上部署mysql的集群能否用于生产环境呢？有没有什么风险？","like_count":0},{"had_liked":false,"id":76080,"user_name":"田奇","can_delete":false,"product_type":"c1","uid":1006349,"ip_address":"","ucode":"4D7E9FF9D7E584","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/0d/597cfa28.jpg","comment_is_top":false,"comment_ctime":1552528574,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552528574","product_id":100015201,"comment_content":"如果我有一个应用，会fork多个子进程，那么把这个应用部署到容器里面，这些子进程容器看得到吗？子进程会成为孤儿进程或者僵尸进程吗","like_count":0,"discussions":[{"author":{"id":1156643,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a6/23/91e74c43.jpg","nickname":"leo","note":"","ucode":"73E8917E5156FC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27028,"discussion_content":"我的理解：如果这个应用是容器里的上帝进程即pid=1的话。容器能看到这些子进程；当容器被杀死后，这些子进程也会被同步杀死，不会成为孤儿进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570628141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68558,"user_name":"雪消魂","can_delete":false,"product_type":"c1","uid":1218648,"ip_address":"","ucode":"E258BEDD515A77","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/58/18925dd3.jpg","comment_is_top":false,"comment_ctime":1550544440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550544440","product_id":100015201,"comment_content":"即使某个服务存在多个副本，会不会存在这多个副本调度在了相同的node上，这种情况下node宕机了，服务是不是就会中断一段时间（直到副本在其他node上被重新调度）？这个情况如何避免","like_count":0},{"had_liked":false,"id":68226,"user_name":"小猪","can_delete":false,"product_type":"c1","uid":1201662,"ip_address":"","ucode":"EAD6A4876CEF3B","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/fe/ab541300.jpg","comment_is_top":false,"comment_ctime":1550461398,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1550461398","product_id":100015201,"comment_content":"老师，我们做的微服务使用springboot 项目开发，是使用java -jar xx.jar 的方式启动，这样就没有办法把代码和运行环境分离了吧？目前是把代码和环境都打包到一个镜像里。","like_count":0,"discussions":[{"author":{"id":1082097,"avatar":"https://static001.geekbang.org/account/avatar/00/10/82/f1/c2cfbd2e.jpg","nickname":"积红","note":"","ucode":"A8ED0D66E7E723","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3718,"discussion_content":"sidecar","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564733141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63046,"user_name":"隔壁老王，黑加仑","can_delete":false,"product_type":"c1","uid":1001069,"ip_address":"","ucode":"CB87C04538D8FA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuUYcwKWUuib3uM8XtEtthjgrzpql26MbSjkDTvSnsmibY45EV7CgOFHOnZRKMm2pibryCBQ4gakzlQ/132","comment_is_top":false,"comment_ctime":1548235569,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548235569","product_id":100015201,"comment_content":"问个我一直有疑问的问题。有A和B两个java应用，能同时运行到一个Pod里边吗。还是一个pod就是一个应用，这个应用可以横向扩展。","like_count":0},{"had_liked":false,"id":62608,"user_name":"@Yang","can_delete":false,"product_type":"c1","uid":1045906,"ip_address":"","ucode":"11C99A4AE76C62","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/92/28669fbc.jpg","comment_is_top":false,"comment_ctime":1548119642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548119642","product_id":100015201,"comment_content":"原来如此，受教了！","like_count":0},{"had_liked":false,"id":61105,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1547620996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547620996","product_id":100015201,"comment_content":"张老师，为啥您的镜像拉不下来呢？您的仓库注册地址在哪里啊？<br>","like_count":0},{"had_liked":false,"id":61060,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1547610253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547610253","product_id":100015201,"comment_content":"张老师，Pod共享数据卷的例子中:<br>volumes:<br>- name: shared-data<br>   hostPath:<br>        path: &#47;data<br>&#47;data目录对应的是宿主机上 &#47;var&#47;lib&#47;docker&#47;aufs&#47;mnt&#47;(data)目录吗？我好像没找到。<br>","like_count":0},{"had_liked":false,"id":58395,"user_name":"王盛武","can_delete":false,"product_type":"c1","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1547050781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547050781","product_id":100015201,"comment_content":"第一次写留言，精彩到哑巴了","like_count":0},{"had_liked":false,"id":57817,"user_name":"sherlock","can_delete":false,"product_type":"c1","uid":1170826,"ip_address":"","ucode":"2C7D80070F3B7A","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/8a/1b1601b1.jpg","comment_is_top":false,"comment_ctime":1546917090,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1546917090","product_id":100015201,"comment_content":"非常棒，但是有一个小小的问题，这个音频不能调整时间。","like_count":0},{"had_liked":false,"id":57815,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1546916852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546916852","product_id":100015201,"comment_content":"老师写得太好了，对docker和k8s又有比较深入的理解了。","like_count":0},{"had_liked":false,"id":55232,"user_name":"Geek_7cfe13","can_delete":false,"product_type":"c1","uid":1201227,"ip_address":"","ucode":"7542FE4E6C7871","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eobiabkoCXUvOPxWobEZviaQ6OQbSljnomicbL4Vrjk6SLic85YUCvicARicCHCxljiciaXTUBmnqGibOEeT8g/132","comment_is_top":false,"comment_ctime":1546071119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546071119","product_id":100015201,"comment_content":"目前看到的最好的专栏，没有之一。深入浅出，娓娓道来。","like_count":0},{"had_liked":false,"id":54954,"user_name":"XP","can_delete":false,"product_type":"c1","uid":1070172,"ip_address":"","ucode":"820FC9595FA646","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/5c/6855e2d5.jpg","comment_is_top":false,"comment_ctime":1545988071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545988071","product_id":100015201,"comment_content":"确实分析的好。我的团队相对传统。我先听着这个专题把团队产品容器化，现在又在听着第二遍深入理解。真的不错的专题","like_count":0},{"had_liked":false,"id":51624,"user_name":"九月の秋雨","can_delete":false,"product_type":"c1","uid":1155175,"ip_address":"","ucode":"85AAF3E40DBD4D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mrJwOdcr1xslW2eZFc1nogbRNc8rPRExOaQsgFXFicKF0H7TOtII1n1haaJd7t55ZWeUz1FPGZian5ejcvuJibQQg/132","comment_is_top":false,"comment_ctime":1545210428,"is_pvip":false,"replies":[{"id":"18748","content":"本地用容器自测跟集群上用组合的方式运行没有任何冲突啊。何必拿docker 公司的广告词指导生产环境的架构呢。更何况，docker 公司自己也不提这茬了。kubernetes docker mac，方便的很。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1545238037,"ip_address":"","comment_id":51624,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545210428","product_id":100015201,"comment_content":"老师你好,我对tomcat和war包的打包方式有点疑问.<br>docker镜像设计之初就是为了&quot;一次打包,到处运行&quot;,镜像内应该包含能够运行应用的完整的环境.但是将war包和tomcat拆开打包的反正不就违反了这一原则吗?而且应用的运行方式和底层的基础设施绑定了,如果我的开发人员在本地运行的是docker而不是k8s的话他就无法通过这种pod的方式来运行他的应用.","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433538,"discussion_content":"本地用容器自测跟集群上用组合的方式运行没有任何冲突啊。何必拿docker 公司的广告词指导生产环境的架构呢。更何况，docker 公司自己也不提这茬了。kubernetes docker mac，方便的很。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545238037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49850,"user_name":"包子","can_delete":false,"product_type":"c1","uid":1311663,"ip_address":"","ucode":"FFE79154C41D06","user_header":"https://static001.geekbang.org/account/avatar/00/14/03/af/41b531c9.jpg","comment_is_top":false,"comment_ctime":1544779480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544779480","product_id":100015201,"comment_content":"第一次发言，请教个问题。容器本质就是1个进程，如果 现在容器的启动命令是执行1个脚本start.sh，脚本里面没有复杂的逻辑只是java -jar起一个常驻的应用，然后bash start.sh会是PID=1的进程，java -jar是子进程。这么来说，是不是容器命令直接改为jar -jar （不用脚本启动）更好呢？或者说两者的模式有区别利弊没？注：我们现在不管是docker 还是 k8s，容器启动命令都是用的脚本","like_count":0},{"had_liked":false,"id":42268,"user_name":"豆豆","can_delete":false,"product_type":"c1","uid":1312718,"ip_address":"","ucode":"762F7758803E3C","user_header":"https://static001.geekbang.org/account/avatar/00/14/07/ce/3e9f5302.jpg","comment_is_top":false,"comment_ctime":1542936312,"is_pvip":false,"replies":[{"id":"15273","content":"看看 重新认识docker容器","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1542986892,"ip_address":"","comment_id":42268,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542936312","product_id":100015201,"comment_content":"老师，我还有个疑问。容器启动时，实际就是创建这个进程，同时指定namespace, 但是什么时候进行挂载操作呢？  ","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430032,"discussion_content":"看看 重新认识docker容器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542986892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42238,"user_name":"豆豆","can_delete":false,"product_type":"c1","uid":1312718,"ip_address":"","ucode":"762F7758803E3C","user_header":"https://static001.geekbang.org/account/avatar/00/14/07/ce/3e9f5302.jpg","comment_is_top":false,"comment_ctime":1542934992,"is_pvip":false,"replies":[{"id":"15272","content":"你可以试试，这个行为是可配置的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1542986870,"ip_address":"","comment_id":42238,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542934992","product_id":100015201,"comment_content":"老师，如果容器的目录中有文件，这时在这个目录上挂在，那里面的文件会进入宿主机目录里吗？ 还是需要特殊的参数？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430018,"discussion_content":"你可以试试，这个行为是可配置的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542986870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41165,"user_name":"张战辉","can_delete":false,"product_type":"c1","uid":1227600,"ip_address":"","ucode":"2F9E94526CD9F9","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/50/7955c359.jpg","comment_is_top":false,"comment_ctime":1542751712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542751712","product_id":100015201,"comment_content":"请问sidecar模式如何解决sidecar容器和主容器对同一加载目录的写操作数据一致问题","like_count":0},{"had_liked":false,"id":40370,"user_name":"robin","can_delete":false,"product_type":"c1","uid":1072810,"ip_address":"","ucode":"34E675ECE244BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/5e/aa/b29ee77d.jpg","comment_is_top":false,"comment_ctime":1542606469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542606469","product_id":100015201,"comment_content":"老师，第一个例子中该如何更新war包呢？<br>更新volume中的war包，然后重启pod吗？镜像并没有版本没有变化怎么来更新然后pod重启呢？","like_count":0},{"had_liked":false,"id":36432,"user_name":"weiwunb","can_delete":false,"product_type":"c1","uid":1275248,"ip_address":"","ucode":"30485A7F762615","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCEsLNSXFBaTZeHxGENXHibdsycvOpQFKKNIxxKhD4xApwgZhfQoZC77WXtvNLv8lY3oLJUwV6MpQ/132","comment_is_top":false,"comment_ctime":1541117845,"is_pvip":false,"replies":[{"id":"13045","content":"你看错了吧，那是sidecar","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1541339387,"ip_address":"","comment_id":36432,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1541117845","product_id":100015201,"comment_content":"老师 关于init container第二个日志例子 比较费解: 因为init container启动完成退出之后 应用容器才会启动，那收集日志的工作放在init container 怎么还源源不断把日志发到es呢？??","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427860,"discussion_content":"你看错了吧，那是sidecar","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541339387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542442,"discussion_content":"initContainer应该是后台的，应用容器是前台，这样就可以了吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640749241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002406,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4b/a6/747a07d2.jpg","nickname":"rainbow702","note":"","ucode":"C71239EE8B2A30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257970,"discussion_content":"有同样的疑问。而且，张老师的这个解释没看明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588634606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36285,"user_name":"xjjksj","can_delete":false,"product_type":"c1","uid":1029446,"ip_address":"","ucode":"2322DB549D387F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/46/fb410a77.jpg","comment_is_top":false,"comment_ctime":1541031768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541031768","product_id":100015201,"comment_content":"张老师，有类似 docker —volumes-from 的实现吗？<br><br>我有个 container A 每隔一段时间就会有新的文件产生，pod 里另外一个 container B 需要去获取这个新文件内容。<br><br>没法直接用 emptyDir 把那个文件所在目录在 A、B 之间共享，因为里面还有别的很多重要文件。<br><br>可以在 A 里面定时把新产生的文件拷贝到另一一个只会有那个文件自己的 emptyDir，然后共享给 B。然而 A 的 image 并不是我们自己维护的，是一个商业产品，运行比较复杂。<br><br>所以如果 k8s 能像 —volumes-from 把单个文件或目录文件共享给另外一个 container 的简单办法就太好了。","like_count":0},{"had_liked":false,"id":36025,"user_name":"牛牛肥","can_delete":false,"product_type":"c1","uid":1226493,"ip_address":"","ucode":"4F455A76F22BB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/b6/fd/a0f60753.jpg","comment_is_top":false,"comment_ctime":1540897180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540897180","product_id":100015201,"comment_content":"真心深入浅出，这需要多深厚的功力…","like_count":0},{"had_liked":false,"id":35172,"user_name":"jssfy","can_delete":false,"product_type":"c1","uid":1137238,"ip_address":"","ucode":"F16353CFE607B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/56/115c6433.jpg","comment_is_top":false,"comment_ctime":1540443585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540443585","product_id":100015201,"comment_content":"请问我们直接用容器时的--privileged模式在使用pod的场景下相应如何设置呢","like_count":0},{"had_liked":false,"id":34017,"user_name":"Caesar","can_delete":false,"product_type":"c1","uid":1253220,"ip_address":"","ucode":"0319C9E19387CD","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/64/54458855.jpg","comment_is_top":false,"comment_ctime":1539949046,"is_pvip":true,"replies":[{"id":"12182","content":"这是因为kata的pod是个vm啊，业务容器就是里面的普通进程而已。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540026402,"ip_address":"","comment_id":34017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539949046","product_id":100015201,"comment_content":"centos7+kubernetes+cri-containerd+kata-runtime，经过实践，在一个pod中有两个业务容器，两个业务容器会共享 Pause 容器除了Pid Namespace外所有的命名空间","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427105,"discussion_content":"这是因为kata的pod是个vm啊，业务容器就是里面的普通进程而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540026402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31078,"user_name":"广飞","can_delete":false,"product_type":"c1","uid":1055981,"ip_address":"","ucode":"7054CFECE99F52","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/ed/e2861655.jpg","comment_is_top":false,"comment_ctime":1539083328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539083328","product_id":100015201,"comment_content":"醍醐灌顶😂","like_count":0},{"had_liked":false,"id":31059,"user_name":"J.P. Liu","can_delete":false,"product_type":"c1","uid":1023654,"ip_address":"","ucode":"630A516DE5BD9C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9e/a6/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1539077591,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539077591","product_id":100015201,"comment_content":"看了不少k8s的入门，学习这个课程后终于清晰了","like_count":0},{"had_liked":false,"id":30534,"user_name":"FAncHAO","can_delete":false,"product_type":"c1","uid":1260609,"ip_address":"","ucode":"91ECDE28FC0513","user_header":"https://static001.geekbang.org/account/avatar/00/13/3c/41/a418c054.jpg","comment_is_top":false,"comment_ctime":1538912986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538912986","product_id":100015201,"comment_content":"讲的很形象生动，我已经是你的粉丝了","like_count":0},{"had_liked":false,"id":30464,"user_name":"莫须有3i","can_delete":false,"product_type":"c1","uid":1046334,"ip_address":"","ucode":"34505591030159","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/3e/4aab0cf0.jpg","comment_is_top":false,"comment_ctime":1538877139,"is_pvip":false,"replies":[{"id":"10998","content":"这个按自己喜欢的方式就好，比如etcd的读法","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538877996,"ip_address":"","comment_id":30464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538877139","product_id":100015201,"comment_content":"在与大家交流时，会听到pod的两种发音（“破的”，“怕的”），有时实在尴尬，不清除到底谁读错了。查过字典之后，实际是英美的区别（英 [pɒd]，美 [pɑ:d]），我听作者也是以英式发音，作者在与海外开发者接触的时候，他们也都是以英式发音为主吗?","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426013,"discussion_content":"这个按自己喜欢的方式就好，比如etcd的读法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538877996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30205,"user_name":"leo","can_delete":false,"product_type":"c1","uid":1156643,"ip_address":"","ucode":"73E8917E5156FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/a6/23/91e74c43.jpg","comment_is_top":false,"comment_ctime":1538724823,"is_pvip":true,"replies":[{"id":"10868","content":"pod里的容器当然没有顺序关系了，需要的话要在启动命令里做前置检查。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538739608,"ip_address":"","comment_id":30205,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538724823","product_id":100015201,"comment_content":"张磊老师好，对于&quot;第二个例子，则是容器的日志收集&quot;这段有些疑问，望解答。<br>init container必须早于用户容器启动，而且必须要完成并退出后才会启动用户容器。<br>那么这个第二个例子里面的应用容器，是否属于用户容器？<br>如果属于，那它必须要等sidecar容器运行完成并退出后才能会运行应用容器，接着产生新的日志。而此时sidecar容器已经停止运行，如何能把新的日志转发出去呢？<br>如果不属于，也是init container，那么启动顺序是先启动产生日志的容器，再运行转发日志的容器。如果是这样，就有另外一个疑问：<br>一个Pod是否可以没有用户容器，只有init container？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425896,"discussion_content":"pod里的容器当然没有顺序关系了，需要的话要在启动命令里做前置检查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538739608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29202,"user_name":"米斯特.杜","can_delete":false,"product_type":"c1","uid":1089110,"ip_address":"","ucode":"C2C567259FDEE2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9e/56/af7a9435.jpg","comment_is_top":false,"comment_ctime":1538288481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538288481","product_id":100015201,"comment_content":"确实深入浅出，除了学习技术本身以外，老师讲解的技术的方式方法也很值得学习","like_count":0},{"had_liked":false,"id":28759,"user_name":"天勤","can_delete":false,"product_type":"c1","uid":1219229,"ip_address":"","ucode":"282B5F9F9A0C5F","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/9d/82140a27.jpg","comment_is_top":false,"comment_ctime":1538141239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538141239","product_id":100015201,"comment_content":"非常精彩！","like_count":0},{"had_liked":false,"id":27802,"user_name":"Sun Fei","can_delete":false,"product_type":"c1","uid":1032631,"ip_address":"","ucode":"092EC0992050BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/b7/57f153f6.jpg","comment_is_top":false,"comment_ctime":1537946390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537946390","product_id":100015201,"comment_content":"讲的很清楚。","like_count":0},{"had_liked":false,"id":27337,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1010056,"ip_address":"","ucode":"DD4717C06E417D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/88/528442b0.jpg","comment_is_top":false,"comment_ctime":1537874130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537874130","product_id":100015201,"comment_content":"我在工作中pod下都是同一种类型的容器，只是启动多个实际，需求上没有用到在一个pod上启用不同类型的容器，今天学习受益匪浅","like_count":0},{"had_liked":false,"id":27304,"user_name":"dancer","can_delete":false,"product_type":"c1","uid":1019036,"ip_address":"","ucode":"B8D5641A3AC490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/9c/d48473ab.jpg","comment_is_top":false,"comment_ctime":1537868767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537868767","product_id":100015201,"comment_content":"思路清晰，重点突出，生动形象！买了容器与容器云这本书，配合专栏一起看！","like_count":0},{"had_liked":false,"id":27250,"user_name":"w 🍍","can_delete":false,"product_type":"c1","uid":1228290,"ip_address":"","ucode":"F2386C971EC58B","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/02/43202976.jpg","comment_is_top":false,"comment_ctime":1537858220,"is_pvip":false,"replies":[{"id":"9859","content":"从调度队列出队啊。比如一个容器始终没出现。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537886825,"ip_address":"","comment_id":27250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537858220","product_id":100015201,"comment_content":"请教下，“比如，Mesos 中就有一个资源囤积（resource hoarding）的机制，会在所有设置了 Affinity 约束的任务都达到时，才开始对它们统一进行调度” 中的任务都达到是什么意思，不大明白这是个怎样的机制。  提到的死锁又会在什么情况下发生。","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424850,"discussion_content":"从调度队列出队啊。比如一个容器始终没出现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537886825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26642,"user_name":"杨孔来","can_delete":false,"product_type":"c1","uid":1219154,"ip_address":"","ucode":"2CEA33CAB6322E","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/52/a51cbdef.jpg","comment_is_top":false,"comment_ctime":1537708918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537708918","product_id":100015201,"comment_content":"老师，帮忙看下，我按照官网和https:&#47;&#47;blog.csdn.net&#47;nklinsirui&#47;article&#47;details&#47;80806131;部署了k8s的集群，查询pod和node都正常，但通过dashboard访问时，一直提示403  forbidden: User \\&quot;system:anonymous\\&quot; ；也按照 上面blog的方案将证书添加到个人证书，但证书提示 没有足够的信息 无法验证该证书；不知道有什么替代的方案，也试过--anonymous-auth=false ，但如blob的作者所说，的确会造成api-server的不稳定","like_count":0},{"had_liked":false,"id":26640,"user_name":"杨孔来","can_delete":false,"product_type":"c1","uid":1219154,"ip_address":"","ucode":"2CEA33CAB6322E","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/52/a51cbdef.jpg","comment_is_top":false,"comment_ctime":1537708600,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537708600","product_id":100015201,"comment_content":"求助下，哪位大神可以帮忙看下，我按照官网和https:&#47;&#47;blog.csdn.net&#47;nklinsirui&#47;article&#47;details&#47;80806131，使用kubeadm的方式部署了k8s;coredns-78fcdf6894-btftn                1&#47;1       Running   0          4h<br>coredns-78fcdf6894-mp86s                1&#47;1       Running   0          4h<br>etcd-kiehls5                            1&#47;1       Running   0          4h<br>heapster-8478b79cbb-cvzjq               1&#47;1       Running   0          13m<br>kube-apiserver-kiehls5                  1&#47;1       Running   0          35m<br>kube-controller-manager-kiehls5         1&#47;1       Running   3          4h<br>kube-flannel-ds-6rrkn                   1&#47;1       Running   0          3h<br>kube-flannel-ds-f8t5p                   1&#47;1       Running   0          4h<br>kube-flannel-ds-km4tx                   1&#47;1       Running   0          3h<br>kube-proxy-6xgmn                        1&#47;1       Running   0          3h<br>kube-proxy-rm2vr                        1&#47;1       Running   0          3h<br>kube-proxy-sqprf                        1&#47;1       Running   0          4h<br>kube-scheduler-kiehls5                  1&#47;1       Running   3          4h<br>kubernetes-dashboard-69544cc447-fw5pl   1&#47;1       Running   0          14m<br>monitoring-grafana-69d5b8cc5-knw8z      1&#47;1       Running   0          3h<br>monitoring-influxdb-5fdb58bd4b-fjwjs    1&#47;1       Running   0          3h<br>各pod 都成功运行，但访问dashboard时一直提示：403  forbidden: User \\&quot;system:anonymous\\“；不知道有什么办法<br>","like_count":0},{"had_liked":false,"id":26482,"user_name":"eden","can_delete":false,"product_type":"c1","uid":1220656,"ip_address":"","ucode":"8A5620A5C4BDB8","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/30/5a7247eb.jpg","comment_is_top":false,"comment_ctime":1537618347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537618347","product_id":100015201,"comment_content":"所谓一个容器就是一个进程，意思是说我们在容器化某个应用时应该针对一个进程封装为一个容器镜像，然后以pod方式组织起来，这是推荐的容器化应用的实现方式。然而我们也可以将一个容器当做一个虚拟机来使用，将该应用的所有组件打包为一个复杂的容器镜像然后在kubernets里通过pod方式启动，只不过这样的话应用的组件之间耦合性太高，不好维护，例如，当我们要升级某个组件时必须重新制作这个复杂的镜像；如果要只对应用的某个组件扩容也是不可能实现的。我的理解没错吧","like_count":0},{"had_liked":false,"id":26277,"user_name":"马若飞","can_delete":false,"product_type":"c1","uid":1046394,"ip_address":"","ucode":"3D0327329A10AE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/7a/55618020.jpg","comment_is_top":false,"comment_ctime":1537531844,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537531844","product_id":100015201,"comment_content":"能用一句话说清楚技术概念的人才是真正的高手","like_count":0},{"had_liked":false,"id":26172,"user_name":"潘志宏","can_delete":false,"product_type":"c1","uid":1219264,"ip_address":"","ucode":"46D4EDCCEFBF14","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/c0/3b68d5b0.jpg","comment_is_top":false,"comment_ctime":1537511801,"is_pvip":false,"replies":[{"id":"9575","content":"其实挂个volume也不是啥太大的问题。关键还是要看目前面临的主要问题是什么。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537545643,"ip_address":"","comment_id":26172,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537511801","product_id":100015201,"comment_content":"假如有多个war包的情况下，每个war包都是独立镜像，那么initcontainers也要配置多个这种情况下，感觉有些繁琐，不知道有没有更简单的方法","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424546,"discussion_content":"其实挂个volume也不是啥太大的问题。关键还是要看目前面临的主要问题是什么。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537545643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26160,"user_name":"小小笑儿","can_delete":false,"product_type":"c1","uid":1040354,"ip_address":"","ucode":"CA63CC50DC2091","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/e2/823a04b4.jpg","comment_is_top":false,"comment_ctime":1537508227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537508227","product_id":100015201,"comment_content":"好像还有ipc和uts","like_count":0},{"had_liked":false,"id":26062,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1199969,"ip_address":"","ucode":"7ACE14C0C4AE61","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/61/00083e41.jpg","comment_is_top":false,"comment_ctime":1537494657,"is_pvip":false,"replies":[{"id":"9518","content":"volume 不是namespace ……","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537514218,"ip_address":"","comment_id":26062,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537494657","product_id":100015201,"comment_content":"还能共享volume namespace。日志采集时通过sidecar方式读取日志共享目录发送到ELK系统。","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424510,"discussion_content":"volume 不是namespace ……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537514218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}