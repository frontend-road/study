{"id":12049,"title":"26 | 协程 : 提升性能的利器","content":"<h1>源代码及 PDF 课件地址：</h1><p><strong><a href=\"https://gitee.com/geektime-geekbang/KotlinPrimer\">https://gitee.com/geektime-geekbang/KotlinPrimer</a></strong></p>","comments":[{"had_liked":false,"id":203352,"user_name":"...","can_delete":false,"product_type":"c3","uid":1020427,"ip_address":"","ucode":"35C881D8AA1C5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/0b/2ccf7908.jpg","comment_is_top":false,"comment_ctime":1586178392,"is_pvip":false,"replies":[{"id":83672,"content":"嗯，是的","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1592299419,"ip_address":"","comment_id":203352,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"看源码发现kotlin中协程就是线程池的包装  望更新","like_count":4,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490839,"discussion_content":"嗯，是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592299419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22158,"user_name":"Hunsbiously","can_delete":false,"product_type":"c3","uid":1008477,"ip_address":"","ucode":"300A5168EC94A6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/5d/b523af2d.jpg","comment_is_top":false,"comment_ctime":1535515885,"is_pvip":false,"replies":[{"id":7975,"content":"谢谢指出","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1535589535,"ip_address":"","comment_id":22158,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"我认为您对于协程的历史和计算机的历史的介绍是有问题的。另外关于DSL您的讲解也是有偏差的。","like_count":3,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423023,"discussion_content":"谢谢指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535589535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047302,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fb/06/0e6b6365.jpg","nickname":"ForzaJuve","note":"","ucode":"E090D83AE78EE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1740,"discussion_content":"你应该指出偏差在哪啊？...","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1562859155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329062,"user_name":"hxy","can_delete":false,"product_type":"c3","uid":1248553,"ip_address":"","ucode":"431327E8CA4364","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/29/18272af9.jpg","comment_is_top":false,"comment_ctime":1641091336,"is_pvip":false,"replies":[{"id":135921,"content":"在协程定义上，是运行多个协程运行在同一个线程上的，只不过是 kotlin 不支持而已","user_name":"作者回复","user_name_real":"编辑","uid":1009146,"ctime":1681091883,"ip_address":"上海","comment_id":329062,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"线程阻塞会被挂起，是会让出cpu的，这个不能算协程的优点","like_count":2,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613023,"discussion_content":"在协程定义上，是运行多个协程运行在同一个线程上的，只不过是 kotlin 不支持而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681091884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98808,"user_name":"遥远的救世主","can_delete":false,"product_type":"c3","uid":1181334,"ip_address":"","ucode":"4CC436479CAA21","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/96/4273bb09.jpg","comment_is_top":false,"comment_ctime":1559098668,"is_pvip":false,"replies":[{"id":42505,"content":"阻塞态编程时用协程，并发编程时用线程","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1563807459,"ip_address":"","comment_id":98808,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"Android开发中协程与线程如何取舍呢","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451847,"discussion_content":"阻塞态编程时用协程，并发编程时用线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563807459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70163,"user_name":"芋头","can_delete":false,"product_type":"c3","uid":1070287,"ip_address":"","ucode":"390438CFF71F0A","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/cf/fddcf843.jpg","comment_is_top":false,"comment_ctime":1551019925,"is_pvip":false,"replies":[{"id":28994,"content":"用在阻塞态问题上，比如读写数据，跨网请求等","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1553513990,"ip_address":"","comment_id":70163,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"请问下如果是做服务端开发，协程在哪些方面用得上？","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440469,"discussion_content":"用在阻塞态问题上，比如读写数据，跨网请求等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553513990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21134,"user_name":"null","can_delete":false,"product_type":"c3","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1534934875,"is_pvip":false,"replies":[{"id":7459,"content":"线程性能是高于协程的，没有错。但是阻塞态的线程是对CPU的极大浪费，属于占着资源不做事，造成额外调度，协程的优势在于可控制，这一点协程可以做的更好。","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1534938411,"ip_address":"","comment_id":21134,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"老师您好，学习了本节视频，有下面 3 个疑惑\n1. 大多数场景下，性能应该不是协程的优势，线程比协程的性能要好？\n2. 线程可以利用多核达到真正的并行计算，协程可以充分利用多核么？\n3. 协程主要的应用场景：用同步的书写方式，实现异步 + 回调的代码？\n\n谢谢","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422550,"discussion_content":"线程性能是高于协程的，没有错。但是阻塞态的线程是对CPU的极大浪费，属于占着资源不做事，造成额外调度，协程的优势在于可控制，这一点协程可以做的更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534938411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2728241,"avatar":"https://static001.geekbang.org/account/avatar/00/29/a1/31/ca97e229.jpg","nickname":"louc","note":"","ucode":"08FB5A46314B2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565803,"discussion_content":"作者的概念是错的，线程io阻塞只是把当前线程置于block状态，cpu是不会被阻塞的，试想一下，如果一个应用程序是小白写的，正好写了16线程都进入阻塞态，那cpu全被block了，系统中的别的应用还干不干活了。从嵌入式角度理解，io或者网路阻塞其实都是线程把cpu让出，交给对应的硬件处理单元，而该线程进入阻塞状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650545796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341776,"user_name":"深水蓝","can_delete":false,"product_type":"c3","uid":1637933,"ip_address":"","ucode":"3E3B195DE54DE1","user_header":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","comment_is_top":false,"comment_ctime":1649830359,"is_pvip":false,"replies":[{"id":135918,"content":"同一个线程内的不同协程是不用的，但 kotlin 内，每个协程独立运行在一个线程中，所以在 kotlin 协程内是必须有锁的","user_name":"作者回复","user_name_real":"编辑","uid":1009146,"ctime":1681091629,"ip_address":"上海","comment_id":341776,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"两个协程之间如果需要同步，难道不需要加锁吗？","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613019,"discussion_content":"同一个线程内的不同协程是不用的，但 kotlin 内，每个协程独立运行在一个线程中，所以在 kotlin 协程内是必须有锁的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681091629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291699,"user_name":"朱俊文","can_delete":false,"product_type":"c3","uid":2423457,"ip_address":"","ucode":"A4B888CE6A29A0","user_header":"https://static001.geekbang.org/account/avatar/00/24/fa/a1/f841d13a.jpg","comment_is_top":false,"comment_ctime":1620439476,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"线程阻塞不放弃cpu??????","like_count":1,"discussions":[{"author":{"id":2728241,"avatar":"https://static001.geekbang.org/account/avatar/00/29/a1/31/ca97e229.jpg","nickname":"louc","note":"","ucode":"08FB5A46314B2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565809,"discussion_content":"作者的概念是错的，线程io阻塞只是把当前线程置于block状态，cpu是不会被阻塞的，试想一下，如果一个应用程序是小白写的，正好写了16线程都进入阻塞态，那cpu全被block了，系统中的别的应用还干不干活了。从嵌入式角度理解，io或者网路阻塞其实都是线程把cpu让出，交给对应的硬件处理单元，而该线程进入阻塞状态。等到对应硬件驱动完成io则通过中断设置线程为runnable状态，等待cpu调度执行","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1650546112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348788,"avatar":"https://static001.geekbang.org/account/avatar/00/14/94/b4/bbca0fb9.jpg","nickname":"安景学","note":"","ucode":"0244CCB76234D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379095,"discussion_content":"应该会释放cpu，但可能不释放锁。除非是自旋的方式去拿锁，不会释放cpu，但这种自旋一般很快就结束了。博主的并发知识不太过关。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623679707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46071,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c3","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1543841662,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"这和线程await 有啥区别\n请教下","like_count":0}]}