{"id":119046,"title":"07 | 变量提升：JavaScript代码是按顺序执行的吗？","content":"<p>讲解完宏观视角下的浏览器后，从这篇文章开始，我们就进入下一个新的模块了，这里我会对JavaScript执行原理做深入介绍。</p><p>今天在该模块的第一篇文章，我们主要讲解<strong>执行上下文</strong>相关的内容。那为什么先讲执行上下文呢？它这么重要吗？可以这么说，<strong>只有理解了JavaScrip的执行上下文，你才能更好地理解JavaScript语言本身</strong>，比如变量提升、作用域和闭包等。不仅如此，理解执行上下文和调用栈的概念还能助你成为一名更合格的前端开发者。</p><p>不过由于我们专栏不是专门讲JavaScript语言的，所以我并不会对JavaScript语法本身做过多介绍。本文主要是从JavaScript的顺序执行讲起，然后<strong>一步步带你了解JavaScript是怎么运行的</strong>。</p><p>接下来咱们先看段代码，你觉得下面这段代码输出的结果是什么？</p><pre><code>showName()\nconsole.log(myname)\nvar myname = '极客时间'\nfunction showName() {\n    console.log('函数showName被执行');\n}\n</code></pre><p>使用过JavaScript开发的程序员应该都知道，JavaScript是按顺序执行的。若按照这个逻辑来理解的话，那么：</p><ul>\n<li>当执行到第1行的时候，由于函数showName还没有定义，所以执行应该会报错；</li>\n<li>同样执行第2行的时候，由于变量myname也未定义，所以同样也会报错。</li>\n</ul><p>然而实际执行结果却并非如此， 如下图：</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/fb/03/fbafaba4ad7092cbee011a8a02e38903.png?wh=722*414\" alt=\"\"></p><center><span class=\"reference\">在声明之前使用函数和变量的执行结果</span></center><p>第1行输出“函数showName被执行”，第2行输出“undefined”，这和前面想象中的顺序执行有点不一样啊！</p><p>通过上面的执行结果，你应该已经知道了函数或者变量可以在定义之前使用，那如果使用没有定义的变量或者函数，JavaScript代码还能继续执行吗？为了验证这点，我们可以删除第3行变量myname的定义，如下所示：</p><pre><code>showName()\nconsole.log(myname)\nfunction showName() {\n    console.log('函数showName被执行');\n}\n</code></pre><p>然后再次执行这段代码时，JavaScript引擎就会报错，结果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/a5/c2/a5262e2ca891ea114dfaf1e37f9ca4c2.png?wh=1142*73\" alt=\"\"></p><center><span class=\"reference\">使用了未定义的变量——执行报错</span></center><p>从上面两段代码的执行结果来看，我们可以得出如下三个结论。</p><ol>\n<li>在执行过程中，若使用了未声明的变量，那么JavaScript执行会报错。</li>\n<li>在一个变量定义之前使用它，不会出错，但是该变量的值会为undefined，而不是定义时的值。</li>\n<li>在一个函数定义之前使用它，不会出错，且函数能正确执行。</li>\n</ol><p>第一个结论很好理解，因为变量没有定义，这样在执行JavaScript代码时，就找不到该变量，所以JavaScript会抛出错误。</p><p>但是对于第二个和第三个结论，就挺让人费解的：</p><ul>\n<li>变量和函数为什么能在其定义之前使用？这似乎表明JavaScript代码并不是一行一行执行的。</li>\n<li>同样的方式，变量和函数的处理结果为什么不一样？比如上面的执行结果，提前使用的showName函数能打印出来完整结果，但是提前使用的myname变量值却是undefined，而不是定义时使用的“极客时间”这个值。</li>\n</ul><h2>变量提升（Hoisting）</h2><p>要解释这两个问题，你就需要先了解下什么是变量提升。</p><p>不过在介绍变量提升之前，我们先通过下面这段代码，来看看什么是JavaScript中的<strong>声明</strong>和<strong>赋值</strong>。</p><pre><code>var myname = '极客时间'\n</code></pre><p>这段代码你可以把它看成是两行代码组成的：</p><pre><code>var myname    //声明部分\nmyname = '极客时间'  //赋值部分\n</code></pre><p>如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/ec/3c/ec882f2d9deec26ce168b409f274533c.png?wh=1142*439\" alt=\"\"></p><center><span class=\"reference\">如何理解`var myname = '极客时间'`</span></center><p>上面是<strong>变量</strong>的声明和赋值，那接下来我们再来看看<strong>函数</strong>的声明和赋值，结合下面这段代码：</p><pre><code>function foo(){\n  console.log('foo')\n}\n\nvar bar = function(){\n  console.log('bar')\n}\n</code></pre><p>第一个函数foo是一个完整的函数声明，也就是说没有涉及到赋值操作；第二个函数是先声明变量bar，再把<code>function(){console.log('bar')}</code>赋值给bar。为了直观理解，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/61/77/611c09ab995b9b608d9c0db193266777.png?wh=1142*648\" alt=\"\"></p><center><span class=\"reference\">函数的声明和赋值</span></center><p>好了，理解了声明和赋值操作，那接下来我们就可以聊聊什么是变量提升了。</p><p><strong>所谓的变量提升，是指在JavaScript代码执行过程中，JavaScript引擎把变量的声明部分和函数的声明部分提升到代码开头的“行为”。变量被提升后，会给变量设置默认值，这个默认值就是我们熟悉的undefined。</strong></p><p>下面我们来模拟下实现：</p><pre><code>/*\n* 变量提升部分\n*/\n// 把变量 myname提升到开头，\n// 同时给myname赋值为undefined\nvar myname = undefined\n// 把函数showName提升到开头\nfunction showName() {\n    console.log('showName被调用');\n}\n\n/*\n* 可执行代码部分\n*/\nshowName()\nconsole.log(myname)\n// 去掉var声明部分，保留赋值语句\nmyname = '极客时间'\n</code></pre><p>为了模拟变量提升的效果，我们对代码做了以下调整，如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/ce/d5/cefe564dbff729e735a834fd9e3bd0d5.png?wh=1142*528\" alt=\"\"></p><center><span class=\"reference\">模拟变量提升示意图</span></center><p>从图中可以看出，对原来的代码主要做了两处调整：</p><ul>\n<li>第一处是把声明的部分都提升到了代码开头，如变量myname和函数showName，并给变量设置默认值undefined；</li>\n<li>第二处是移除原本声明的变量和函数，如<code>var myname = '极客时间'</code>的语句，移除了var声明，整个移除showName的函数声明。</li>\n</ul><p>通过这两步，就可以实现变量提升的效果。你也可以执行这段模拟变量提升的代码，其输出结果和第一段代码应该是完全一样的。</p><p>通过这段模拟的变量提升代码，相信你已经明白了可以在定义之前使用变量或者函数的原因——<strong>函数和变量在执行之前都提升到了代码开头</strong>。</p><h2>JavaScript代码的执行流程</h2><p>从概念的字面意义上来看，“变量提升”意味着变量和函数的声明会在物理层面移动到代码的最前面，正如我们所模拟的那样。但，这并不准确。<strong>实际上变量和函数声明在代码里的位置是不会改变的，而且是在编译阶段被JavaScript引擎放入内存中</strong>。对，你没听错，一段JavaScript代码在执行之前需要被JavaScript引擎编译，<strong>编译</strong>完成之后，才会进入<strong>执行</strong>阶段。大致流程你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/64/1e/649c6e3b5509ffd40e13ce9c91b3d91e.png?wh=1142*203\" alt=\"\"></p><center><span class=\"reference\">JavaScript的执行流程图</span></center><h3>1. 编译阶段</h3><p>那么编译阶段和变量提升存在什么关系呢？</p><p>为了搞清楚这个问题，我们还是回过头来看上面那段模拟变量提升的代码，为了方便介绍，可以把这段代码分成两部分。</p><p><strong>第一部分：变量提升部分的代码。</strong></p><pre><code>var myname = undefined\nfunction showName() {\n    console.log('函数showName被执行');\n}\n</code></pre><p><strong>第二部分：执行部分的代码。</strong></p><pre><code>showName()\nconsole.log(myname)\nmyname = '极客时间'\n</code></pre><p>下面我们就可以把JavaScript的执行流程细化，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/06/13/0655d18ec347a95dfbf843969a921a13.png?wh=1142*634\" alt=\"\"></p><center><span class=\"reference\">JavaScript执行流程细化图</span></center><p>从上图可以看出，输入一段代码，经过编译后，会生成两部分内容：<strong>执行上下文（Execution context）<strong>和</strong>可执行代码</strong>。</p><p><strong>执行上下文是JavaScript执行一段代码时的运行环境</strong>，比如调用一个函数，就会进入这个函数的执行上下文，确定该函数在执行期间用到的诸如this、变量、对象以及函数等。</p><p>关于执行上下文的细节，我会在下一篇文章《08 | 调用栈：为什么JavaScript代码会出现栈溢出？》做详细介绍，现在你只需要知道，在执行上下文中存在一个<strong>变量环境的对象</strong>（Viriable Environment），该对象中保存了变量提升的内容，比如上面代码中的变量myname和函数showName，都保存在该对象中。</p><p>你可以简单地把变量环境对象看成是如下结构：</p><pre><code>VariableEnvironment:\n     myname -&gt; undefined, \n     showName -&gt;function : {console.log(myname)\n</code></pre><p>了解完变量环境对象的结构后，接下来，我们再结合下面这段代码来分析下是如何生成变量环境对象的。</p><pre><code>showName()\nconsole.log(myname)\nvar myname = '极客时间'\nfunction showName() {\n    console.log('函数showName被执行');\n}\n</code></pre><p>我们可以一行一行来分析上述代码：</p><ul>\n<li>第1行和第2行，由于这两行代码不是声明操作，所以JavaScript引擎不会做任何处理；</li>\n<li>第3行，由于这行是经过var声明的，因此JavaScript引擎将在环境对象中创建一个名为myname的属性，并使用undefined对其初始化；</li>\n<li>第4行，JavaScript引擎发现了一个通过function定义的函数，所以它将函数定义存储到堆(HEAP）中，并在环境对象中创建一个showName的属性，然后将该属性值指向堆中函数的位置（不了解堆也没关系，JavaScript的执行堆和执行栈我会在后续文章中介绍）。</li>\n</ul><p>这样就生成了变量环境对象。接下来JavaScript引擎会把声明以外的代码编译为字节码，至于字节码的细节，我也会在后面文章中做详细介绍，你可以类比如下的模拟代码：</p><pre><code>showName()\nconsole.log(myname)\nmyname = '极客时间'\n</code></pre><p>好了，现在有了执行上下文和可执行代码了，那么接下来就到了执行阶段了。</p><h3>2. 执行阶段</h3><p>JavaScript引擎开始执行“可执行代码”，按照顺序一行一行地执行。下面我们就来一行一行分析下这个执行过程：</p><ul>\n<li>当执行到showName函数时，JavaScript引擎便开始在变量环境对象中查找该函数，由于变量环境对象中存在该函数的引用，所以JavaScript引擎便开始执行该函数，并输出“函数showName被执行”结果。</li>\n<li>接下来打印“myname”信息，JavaScript引擎继续在变量环境对象中查找该对象，由于变量环境存在myname变量，并且其值为undefined，所以这时候就输出undefined。</li>\n<li>接下来执行第3行，把“极客时间”赋给myname变量，赋值后变量环境中的myname属性值改变为“极客时间”，变量环境如下所示：</li>\n</ul><pre><code>VariableEnvironment:\n     myname -&gt; &quot;极客时间&quot;, \n     showName -&gt;function : {console.log(myname)\n</code></pre><p>好了，以上就是一段代码的编译和执行流程。实际上，编译阶段和执行阶段都是非常复杂的，包括了词法分析、语法解析、代码优化、代码生成等，这些内容我会在《14 | 编译器和解释器：V8是如何执行一段JavaScript代码的？》那节详细介绍，在本篇文章中你只需要知道JavaScript代码经过编译生成了什么内容就可以了。</p><h2>代码中出现相同的变量或者函数怎么办？</h2><p>现在你已经知道了，在执行一段JavaScript代码之前，会编译代码，并将代码中的函数和变量保存到执行上下文的变量环境中，那么如果代码中出现了重名的函数或者变量，JavaScript引擎会如何处理？</p><p>我们先看下面这样一段代码：</p><pre><code>function showName() {\n    console.log('极客邦');\n}\nshowName();\nfunction showName() {\n    console.log('极客时间');\n}\nshowName(); \n</code></pre><p>在上面代码中，我们先定义了一个showName的函数，该函数打印出来“极客邦”；然后调用showName，并定义了一个showName函数，这个showName函数打印出来的是“极客时间”；最后接着继续调用showName。那么你能分析出来这两次调用打印出来的值是什么吗？</p><p>我们来分析下其完整执行流程：</p><ul>\n<li><strong>首先是编译阶段</strong>。遇到了第一个showName函数，会将该函数体存放到变量环境中。接下来是第二个showName函数，继续存放至变量环境中，但是变量环境中已经存在一个showName函数了，此时，<strong>第二个showName函数会将第一个showName函数覆盖掉</strong>。这样变量环境中就只存在第二个showName函数了。</li>\n<li><strong>接下来是执行阶段</strong>。先执行第一个showName函数，但由于是从变量环境中查找showName函数，而变量环境中只保存了第二个showName函数，所以最终调用的是第二个函数，打印的内容是“极客时间”。第二次执行showName函数也是走同样的流程，所以输出的结果也是“极客时间”。</li>\n</ul><p>综上所述，<strong>一段代码如果定义了两个相同名字的函数，那么最终生效的是最后一个函数</strong>。</p><h2>总结</h2><p>好了，今天就到这里，下面我来简单总结下今天的主要内容：</p><ul>\n<li>JavaScript代码执行过程中，需要先做<strong>变量提升</strong>，而之所以需要实现变量提升，是因为JavaScript代码在执行之前需要先<strong>编译</strong>。</li>\n<li>在<strong>编译阶段</strong>，变量和函数会被存放到<strong>变量环境</strong>中，变量的默认值会被设置为undefined；在代码<strong>执行阶段</strong>，JavaScript引擎会从变量环境中去查找自定义的变量和函数。</li>\n<li>如果在编译阶段，存在两个相同的函数，那么最终存放在变量环境中的是最后定义的那个，这是因为后定义的会覆盖掉之前定义的。</li>\n</ul><p>以上就是今天所讲的主要内容，当然，学习这些内容并不是让你掌握一些JavaScript小技巧，其主要目的是让你清楚JavaScript的执行机制：<strong>先编译，再执行</strong>。</p><p>如果你了解了JavaScript执行流程，那么在编写代码时，你就能避开一些陷阱；在分析代码过程中，也能通过分析JavaScript的执行过程来定位问题。</p><h2>思考时间</h2><p>最后，看下面这段代码：</p><pre><code>showName()\nvar showName = function() {\n    console.log(2)\n}\nfunction showName() {\n    console.log(1)\n}\n</code></pre><p>你能按照JavaScript的执行流程，来分析最终输出结果吗？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":125738,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1566254496,"is_pvip":false,"replies":[{"id":"46176","content":"完全没问题，这个可以做参考答案！","user_name":"作者回复","comment_id":125738,"uid":"1141464","ip_address":"","utype":1,"ctime":1566260655,"user_name_real":"李兵"}],"discussion_count":11,"race_medal":0,"score":"723120760224","product_id":100033601,"comment_content":"输出1<br><br>编译阶段:<br>var showName<br>function showName(){console.log(1)}<br><br>执行阶段:<br>showName()&#47;&#47;输出1<br>showName=function(){console.log(2)}<br>&#47;&#47;如果后面再有showName执行的话，就输出2因为这时候函数引用已经变了","like_count":169,"discussions":[{"author":{"id":1950802,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/c4/52/74d2ff15.jpg","nickname":"摩根","note":"","ucode":"628B4F3B79FE7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230077,"discussion_content":"在同一个执行上下文中，函数声明的提升比比函数定义的优先级要更高。所以应该是function showName(){}在var showName前面吧","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1586705683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1640823,"avatar":"","nickname":"Geek_zy1991","note":"","ucode":"3E9DBB03DE6D9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1950802,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/c4/52/74d2ff15.jpg","nickname":"摩根","note":"","ucode":"628B4F3B79FE7D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304129,"discussion_content":"是的，函数声明的提升优先于变量声明的提升","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599477729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":230077,"ip_address":""},"score":304129,"extra":""},{"author":{"id":2833837,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/3d/ad/b68d90f0.jpg","nickname":"Hare","note":"","ucode":"084730938D2EAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1950802,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/c4/52/74d2ff15.jpg","nickname":"摩根","note":"","ucode":"628B4F3B79FE7D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412340,"discussion_content":"这才是正确答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636126321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":230077,"ip_address":""},"score":412340,"extra":""}]},{"author":{"id":1716063,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2f/5f/1deaa8dc.jpg","nickname":"Sunny🌻🌻🌻","note":"","ucode":"BD9323FA42C2ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287561,"discussion_content":"同一个执行上下文，如果变量和函数重名，函数声明会直接覆盖变量声明","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1593482100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347300,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8e/e4/f126ef1b.jpg","nickname":"芬兰湖边小画匠","note":"","ucode":"31289C9C4F4085","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342427,"discussion_content":"Tips: \n1.此处用var声明时，遵循的是函数声明的提升优于变量声明的提升。且与声明的顺序没有关系。\n2.如果换成用 let 或 const 声明变量，就会使用let,const规则，出现语法错误 SyntaxError: Identifier &#39;showName&#39; has already been declared","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1610679565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272789,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/d5/0e4b70a2.jpg","nickname":"Sean","note":"","ucode":"BC0715BF423613","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34350,"discussion_content":"请问老师，编译阶段时，变量环境内是存在两个showName吗？一个undefined,一个函数在heap中的地址吗？\n我的理解应该是只有一个，就是函数在heap中的地址；函数声明会覆盖之前的同名函数声明和变量声明吧。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571194966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1742972,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/98/7c/07e6e7b7.jpg","nickname":"Tim","note":"","ucode":"F51593465157E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1272789,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/d5/0e4b70a2.jpg","nickname":"Sean","note":"","ucode":"BC0715BF423613","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129695,"discussion_content":"编译阶段过程中，如果遇到函数时，发现变量对象中已有同名属性，则函数会覆盖这个属性，在老师最后给出的这段代码中，先遇到var showname,所以最开始showName是undefined，接着遇到了showName函数声明，会直接覆盖之前的同名属性showName。\n相反地如果编译遇到var 声明变量时且变量对象中已有同名属性，则会忽略这个var，不会覆盖这个属性。","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1578728635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":34350,"ip_address":""},"score":129695,"extra":""}]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463679,"discussion_content":"完全没问题，这个可以做参考答案！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566260655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1673843,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","nickname":"Geek_115bc8","note":"","ucode":"71FBC9F02AFE1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569542,"discussion_content":"记住变量的声明提升早于函数的声明提升。同名的变量和函数，函数将覆盖变量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651475796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2444863,"avatar":"https://static001.geekbang.org/account/avatar/00/25/4e/3f/3e84f39e.jpg","nickname":"Chin 是我啊","note":"","ucode":"F52E85B13C7BAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1673843,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","nickname":"Geek_115bc8","note":"","ucode":"71FBC9F02AFE1B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588550,"discussion_content":"前半句好像不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663833313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":569542,"ip_address":"美国"},"score":588550,"extra":""}]},{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60802,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574756061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125982,"user_name":"lane","can_delete":false,"product_type":"c1","uid":1082463,"ip_address":"","ucode":"D9AFDE4CCAD2D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/84/5f/389cb294.jpg","comment_is_top":false,"comment_ctime":1566289276,"is_pvip":false,"replies":[{"id":"46457","content":"我先来解释下页面在含有JavaScript的情况下DOM解析流程，然后再来解释你这个问题。<br><br>当从服务器接收HTML页面的第一批数据时，DOM解析器就开始工作了，在解析过程中，如果遇到了JS脚本，如下所示：<br>&lt;html&gt;<br>    &lt;body&gt;<br>        极客时间<br>        &lt;script&gt;<br>        document.write(&quot;--foo&quot;)<br>        &lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>那么DOM解析器会先执行JavaScript脚本，执行完成之后，再继续往下解析。<br><br>那么第二种情况复杂点了，我们内联的脚本替换成js外部文件，如下所示：<br>&lt;html&gt;<br>    &lt;body&gt;<br>        极客时间<br>        &lt;script type=&quot;text&#47;javascript&quot; src=&quot;foo.js&quot;&gt;&lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>这种情况下，当解析到JavaScript的时候，会先暂停DOM解析，并下载foo.js文件，下载完成之后执行该段JS文件，然后再继续往下解析DOM。这就是JavaScript文件为什么会阻塞DOM渲染。<br><br>我们再看第三种情况，还是看下面代码：<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;style type=&quot;text&#47;css&quot; src = &quot;theme.css&quot; &#47;&gt;<br>    &lt;&#47;head&gt;<br>    &lt;body&gt;<br>        &lt;p&gt;极客时间&lt;&#47;p&gt;<br>        &lt;script&gt;<br>            let e = document.getElementsByTagName(&#39;p&#39;)[0]<br>            e.style.color = &#39;blue&#39;<br>        &lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>当我在JavaScript中访问了某个元素的样式，那么这时候就需要等待这个样式被下载完成才能继续往下执行，所以在这种情况下，CSS也会阻塞DOM的解析。<br><br>所以这时候如果头部包含了js文件，那么同样也会暂停DOM解析，等带该JavaScript文件下载后，便开始编译执行该文件，执行结束之后，才开始继续DOM解析。<br>","user_name":"作者回复","comment_id":125982,"uid":"1141464","ip_address":"","utype":1,"ctime":1566307136,"user_name_real":"李兵"}],"discussion_count":9,"race_medal":0,"score":"589976808828","product_id":100033601,"comment_content":"老师，head头部引入的js文件，也是先编译的吗？","like_count":138,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463774,"discussion_content":"我先来解释下页面在含有JavaScript的情况下DOM解析流程，然后再来解释你这个问题。\n\n当从服务器接收HTML页面的第一批数据时，DOM解析器就开始工作了，在解析过程中，如果遇到了JS脚本，如下所示：\n&amp;lt;html&amp;gt;\n    &amp;lt;body&amp;gt;\n        极客时间\n        &amp;lt;script&amp;gt;\n        document.write(&amp;quot;--foo&amp;quot;)\n        &amp;lt;/script&amp;gt;\n    &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n那么DOM解析器会先执行JavaScript脚本，执行完成之后，再继续往下解析。\n\n那么第二种情况复杂点了，我们内联的脚本替换成js外部文件，如下所示：\n&amp;lt;html&amp;gt;\n    &amp;lt;body&amp;gt;\n        极客时间\n        &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;foo.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n    &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n这种情况下，当解析到JavaScript的时候，会先暂停DOM解析，并下载foo.js文件，下载完成之后执行该段JS文件，然后再继续往下解析DOM。这就是JavaScript文件为什么会阻塞DOM渲染。\n\n我们再看第三种情况，还是看下面代码：\n&amp;lt;html&amp;gt;\n    &amp;lt;head&amp;gt;\n        &amp;lt;style type=&amp;quot;text/css&amp;quot; src = &amp;quot;theme.css&amp;quot; /&amp;gt;\n    &amp;lt;/head&amp;gt;\n    &amp;lt;body&amp;gt;\n        &amp;lt;p&amp;gt;极客时间&amp;lt;/p&amp;gt;\n        &amp;lt;script&amp;gt;\n            let e = document.getElementsByTagName(&amp;#39;p&amp;#39;)[0]\n            e.style.color = &amp;#39;blue&amp;#39;\n        &amp;lt;/script&amp;gt;\n    &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n当我在JavaScript中访问了某个元素的样式，那么这时候就需要等待这个样式被下载完成才能继续往下执行，所以在这种情况下，CSS也会阻塞DOM的解析。\n\n所以这时候如果头部包含了js文件，那么同样也会暂停DOM解析，等带该JavaScript文件下载后，便开始编译执行该文件，执行结束之后，才开始继续DOM解析。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566307136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1020726,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/93/36/abb7bfe3.jpg","nickname":"Hhpon","note":"","ucode":"12FE37D4B67631","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":547458,"discussion_content":"老师，我们能不能在分析浏览器的渲染过程的时间把js的部分考虑进去呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642682602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":463774,"ip_address":""},"score":547458,"extra":""}]},{"author":{"id":1235099,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d8/9b/f9a00567.jpg","nickname":"why.","note":"","ucode":"C9E9B10F2BC0EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23673,"discussion_content":"最后一个情况应该是css 会阻塞js执行而不是阻塞dom解析吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569854060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1388975,"avatar":"https://static001.geekbang.org/account/avatar/00/15/31/af/71a7c4f7.jpg","nickname":"布兰","note":"","ucode":"F4AF2471542390","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341705,"discussion_content":"关于资源阻塞，可以看看这里：\nhttps://juejin.cn/post/6914479519394955271","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610501846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1382435,"avatar":"https://static001.geekbang.org/account/avatar/00/15/18/23/4b61af6a.jpg","nickname":"让我试试","note":"","ucode":"AC3226A6271A5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1388975,"avatar":"https://static001.geekbang.org/account/avatar/00/15/31/af/71a7c4f7.jpg","nickname":"布兰","note":"","ucode":"F4AF2471542390","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388043,"discussion_content":"感想分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628566988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341705,"ip_address":""},"score":388043,"extra":""}]},{"author":{"id":2248289,"avatar":"https://static001.geekbang.org/account/avatar/00/22/4e/61/38c2c2d9.jpg","nickname":"李洋","note":"","ucode":"CA7FACE0A4EBA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328393,"discussion_content":"对第三种情况持怀疑态度","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606133330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003156,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/94/0b22b6a2.jpg","nickname":"Luke","note":"","ucode":"4060B4E2EF1D13","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8527,"discussion_content":"老师，最后一种情况，如果js中没有访问元素的样式，那么js还要继续等待CSS 加载执行完成吗？在这种情况下，chrome 和firefox 的处理是不是不太一样？chrome 会并行加载解析css，而firefox 会等待css加载解析完成后再执行js？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568014977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1381790,"avatar":"https://static001.geekbang.org/account/avatar/00/15/15/9e/75c74880.jpg","nickname":"Ray","note":"","ucode":"388BAC98C1A52F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563958,"discussion_content":"如果script 标签设置了defer \n就会等DOM 解析加载之后再下载编译执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650118602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1082463,"avatar":"https://static001.geekbang.org/account/avatar/00/10/84/5f/389cb294.jpg","nickname":"lane","note":"","ucode":"D9AFDE4CCAD2D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5861,"discussion_content":"谢谢老师，如果有些外部引用的js是页面事件执行的时候才用，可不可以放到这个页面最后引用，以减少拥塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566512339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126044,"user_name":"爱吃锅巴的沐泡","can_delete":false,"product_type":"c1","uid":1244560,"ip_address":"","ucode":"27451E4F1A22D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/90/ae39017f.jpg","comment_is_top":false,"comment_ctime":1566300501,"is_pvip":false,"replies":[{"id":"46493","content":"下面是关于同名变量和函数的两点处理原则：<br><br>1:如果是同名的函数，JavaScript编译阶段会选择最后声明的那个。<br><br>2:如果变量和函数同名，那么在编译阶段，变量的声明会被忽略","user_name":"作者回复","comment_id":126044,"uid":"1141464","ip_address":"","utype":1,"ctime":1566347267,"user_name_real":"李兵"}],"discussion_count":5,"race_medal":0,"score":"383818389845","product_id":100033601,"comment_content":"答案：1<br><br>编译阶段:<br>var showName = undefined<br>function showName() {console.log(1)}<br><br>执行阶段:<br>showName()        &#47;&#47;输出1<br>showName = function() {console.log(2)}<br><br>分析：首先遇到声明的变量showName，并在变量环境中存一个showName属性，赋值为undefined; 又遇到声明的函数，也存一个showName的属性，但是发现之前有这个属性了，就将其覆盖掉，并指向堆中的声明的这个函数地址。所以在执行阶段调用showName()会输出1;执行showName = function() {console.log(2)}这句话是把堆中的另一个函数地址赋值给了showName属性，也就改变了其属性值，所以如果再调用showName()，那个会输出2. 这是不是体现了函数是对象，函数名是指针。<br><br>疑问：如果同名的变量和函数名，变量环境中是分别保存还是如何处理的？<br><br>","like_count":90,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463801,"discussion_content":"下面是关于同名变量和函数的两点处理原则：\n\n1:如果是同名的函数，JavaScript编译阶段会选择最后声明的那个。\n\n2:如果变量和函数同名，那么在编译阶段，变量的声明会被忽略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566347267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330661,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4d/e5/5e17c915.jpg","nickname":"skyblue","note":"","ucode":"102D8AD68BE37E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366749,"discussion_content":"老师留言的第2点很重要，算是这题考查的核心","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618185075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1222046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/9e/e78e11d7.jpg","nickname":"万象","note":"","ucode":"E81A16870C211E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343867,"discussion_content":"可以理解为一次声明两次赋值，所以最后一次生效","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611199256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1267160,"avatar":"https://static001.geekbang.org/account/avatar/00/13/55/d8/59e99000.jpg","nickname":"小叶","note":"","ucode":"043DFBF1E2E393","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134005,"discussion_content":"第二点，不论是变量和函数同名，或者变量与变量同名都是会忽略的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579006622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2378535,"avatar":"https://static001.geekbang.org/account/avatar/00/24/4b/27/d5266f19.jpg","nickname":"拿来吧","note":"","ucode":"7F4B64285D2AA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412949,"discussion_content":"get到啦 我就说怎么变量声明调换位置到函数声明的后面 怎么输出的还是1嘞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636340066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126414,"user_name":"he","can_delete":false,"product_type":"c1","uid":1018653,"ip_address":"","ucode":"78ED63228B78E9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/1d/8756d3bf.jpg","comment_is_top":false,"comment_ctime":1566384678,"is_pvip":false,"replies":[{"id":"46790","content":"对","user_name":"作者回复","comment_id":126414,"uid":"1141464","ip_address":"","utype":1,"ctime":1566426845,"user_name_real":"李兵"}],"discussion_count":10,"race_medal":0,"score":"306509062694","product_id":100033601,"comment_content":"函数提升要比变量提升的优先级要高一些，且不会被变量声明覆盖，但是会被变量赋值之后覆盖。","like_count":72,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463979,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566426845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813548,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ac/2c/a08ffd57.jpg","nickname":"一际天涯","note":"","ucode":"1CDEEC74148AE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143513,"discussion_content":"我觉得不是函数提升要比变量提升的优先级要高，而是顺序问题，编译过程先对变量提升，然后对函数提升，所以函数提升覆盖了变量","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579512080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":2014871,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/be/97/818b3e54.jpg","nickname":"骷髅精灵","note":"","ucode":"16766224E62E32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1813548,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ac/2c/a08ffd57.jpg","nickname":"一际天涯","note":"","ucode":"1CDEEC74148AE6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288521,"discussion_content":"不是顺序，你可以试试改变下顺序，还是1","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593771425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":143513,"ip_address":""},"score":288521,"extra":""},{"author":{"id":1344810,"avatar":"https://static001.geekbang.org/account/avatar/00/14/85/2a/376dd985.jpg","nickname":"uccs","note":"","ucode":"93DF5B81AB170E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2014871,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/be/97/818b3e54.jpg","nickname":"骷髅精灵","note":"","ucode":"16766224E62E32","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302050,"discussion_content":"他说的顺序没有错，先变量提升，再函数提升，这个顺序和代码中的位置顺序没有关系","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598773423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288521,"ip_address":""},"score":302050,"extra":""},{"author":{"id":1640823,"avatar":"","nickname":"Geek_zy1991","note":"","ucode":"3E9DBB03DE6D9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1813548,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ac/2c/a08ffd57.jpg","nickname":"一际天涯","note":"","ucode":"1CDEEC74148AE6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304132,"discussion_content":"看过js教程，是函数提升优先于变量提升","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599477891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":143513,"ip_address":""},"score":304132,"extra":""}]},{"author":{"id":2194564,"avatar":"https://static001.geekbang.org/account/avatar/00/21/7c/84/9c289380.jpg","nickname":"张爱平","note":"","ucode":"18798DA1028CCB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378649,"discussion_content":"&#34;函数提升要比变量提升的优先级要高一些，且不会被变量声明覆盖&#34;。这句话总觉得哪里不对，如果函数提升的优先级要高于变量，按照正常理解，优先级搞的应该先执行，那么在编译阶段，应该先提取所有的function，然后再提取var声明的变量。这个时候说不会被变量声明覆盖，那是怎么做到的呢？换个思路，如果在编辑阶段，变量提升优先级高于函数，先把所有var声明的变量放在最前面，然后再来提取function声明的，那是不是更能很好的说明，函数的声明不会变量声明覆盖这个结论呢？望路过的大神点拨。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623321042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1560162,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ce/62/026e4408.jpg","nickname":"阳仔","note":"","ucode":"902E99E507AEC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369037,"discussion_content":"函数式声明是声明+赋值的过程，而其赋值的操作会在执行阶段立即执行，就导致你说的结果...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618909629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1711954,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/1f/52/9e12d6b3.jpg","nickname":"kvsjsm","note":"","ucode":"A77CB68DF0DA5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48727,"discussion_content":"he的发言很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573521727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":127468,"user_name":"shezhenbiao","can_delete":false,"product_type":"c1","uid":1575104,"ip_address":"","ucode":"479362E230F31C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/cEiadV2uaZmhwu19Xcft9Qg0MsjmFlwzYbqbBJSwgKrmwOSaUZ6OibQZAEolxvbUH4M6NXAkC9NprpBXl4MO1iavQ/132","comment_is_top":false,"comment_ctime":1566724450,"is_pvip":false,"replies":[{"id":"47290","content":"<br><br>ES规定函数只不能在块级作用域中声明，<br>function foo(){<br>    if(true){<br>        console.log(&amp;#39;hello world&amp;#39;);<br>        function g(){ return true; }<br>    }<br>}<br>也就是说，上面这行代码执行会报错，但是个大浏览器都没有遵守这个标准。<br><br>接下来到了ES6了，ES6明确支持块级作用域，ES6规定块级作用域内部声明的函数，和通过let声明变量的行为类似。<br><br>规定的是理想的，但是还要照顾实现，要是完全按照let的方式来修订，会影响到以前老的代码，所以为了向下兼容，个大浏览器基本是按照下面的方式来实现的：<br><br>function foo(){<br>    if(true){<br>        console.log(&amp;#39;hello world&amp;#39;);<br>        var g = function(){return true;}    <br>    }<br>}<br><br>这就解释了你的疑问，不过还是不建议在块级作用域中定义函数，很多时候，简单的才是最好的。","user_name":"作者回复","comment_id":127468,"uid":"1141464","ip_address":"","utype":1,"ctime":1566783241,"user_name_real":"李兵"}],"discussion_count":5,"race_medal":0,"score":"237789925730","product_id":100033601,"comment_content":"老师好，请教您一个问题。<br>debugger;<br>(function(){<br>    console.log(g)<br>    if(true){<br>        console.log(&#39;hello world&#39;);<br>        function g(){ return true; }<br>    }<br>})();<br>这个函数步进调试时，发现打印g时值是undefined而不是提示not defined，说明if中g函数确实是提升了，但是为何不是g()而是undefined？然后走完function g(){ return true; }这一步后 console.log(g)中的g才变为g()。这里条件声明函数的变量提升有点搞不明白。","like_count":56,"discussions":[{"author":{"id":1982939,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIiagG8gyusGAXgiaDJPffR54icCnafm3t8aBVDvpSLUZvw1hWsCuyBO5C1EfHNDsjlEOiaVH7WDImic7A/132","nickname":"mango","note":"","ucode":"BE96DAD5F1D771","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253420,"discussion_content":"ES6 在附录B里面规定：\n1.允许在块级作用域内声明函数。\n2.函数声明类似于var，即会提升到全局作用域或函数作用域的头部。\n3.同时，函数声明还会提升到所在的块级作用域的头部。\n\n这里的表现应该是这样：\nfunction foo(){\n    var g1;\n    if(true){\n        function g2(){return true;}\n        console.log(&amp;#39;hello world&amp;#39;);\n        g1 = g2;\n    }\n}\ng1和g2表示引用不一样，这里是同名关系，但是所在的变量作用域是不一样的。\n\n下面这个文章详细解释了。\nhttps://juejin.im/post/5eaa8211e51d454de64e388e","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1588232993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1515527,"avatar":"https://static001.geekbang.org/account/avatar/00/17/20/07/9d793a1b.jpg","nickname":"lazycat","note":"","ucode":"51552154DC315C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285567,"discussion_content":"在块级作用域中定义的函数，在全局上下文中只是进行函数名变量进行提升，但是不执行赋值操作，所以为 undefined","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1592881738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1377608,"avatar":"https://static001.geekbang.org/account/avatar/00/15/05/48/a62045cb.jpg","nickname":"芝草晟林💦","note":"","ucode":"4C66F0ABA446C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1515527,"avatar":"https://static001.geekbang.org/account/avatar/00/17/20/07/9d793a1b.jpg","nickname":"lazycat","note":"","ucode":"51552154DC315C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293002,"discussion_content":"学习了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595409725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285567,"ip_address":""},"score":293002,"extra":""}]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464509,"discussion_content":"\n\nES规定函数只不能在块级作用域中声明，\nfunction foo(){\n    if(true){\n        console.log(&amp;amp;#39;hello world&amp;amp;#39;);\n        function g(){ return true; }\n    }\n}\n也就是说，上面这行代码执行会报错，但是个大浏览器都没有遵守这个标准。\n\n接下来到了ES6了，ES6明确支持块级作用域，ES6规定块级作用域内部声明的函数，和通过let声明变量的行为类似。\n\n规定的是理想的，但是还要照顾实现，要是完全按照let的方式来修订，会影响到以前老的代码，所以为了向下兼容，个大浏览器基本是按照下面的方式来实现的：\n\nfunction foo(){\n    if(true){\n        console.log(&amp;amp;#39;hello world&amp;amp;#39;);\n        var g = function(){return true;}    \n    }\n}\n\n这就解释了你的疑问，不过还是不建议在块级作用域中定义函数，很多时候，简单的才是最好的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566783241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437763,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/43/1360c74e.jpg","nickname":"锋","note":"","ucode":"46F3018AD13641","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262259,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589069254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126126,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1566318325,"is_pvip":true,"replies":[{"id":"46490","content":"对 是这样的，下面是关于同名变量和函数的两点处理原则：<br><br>1:如果是同名的函数，JavaScript编译阶段会选择最后声明的那个。<br><br>2:如果变量和函数同名，那么在编译阶段，变量的声明会被忽略。","user_name":"作者回复","comment_id":126126,"uid":"1141464","ip_address":"","utype":1,"ctime":1566346051,"user_name_real":"李兵"}],"discussion_count":10,"race_medal":2,"score":"169070042869","product_id":100033601,"comment_content":"老师，如果把两个函数调换个儿。那么先声明function，然后把 showName 赋值 undefined，undefined不会覆盖函数声明。这是为什么？<br><br>console.log(showName.toString())<br>function showName() {<br>    console.log(1)<br>}<br>var showName = function() {<br>  console.log(2)<br>}<br><br>打印的是函数体，而非undefined，证明 undefined 不会覆盖函数声明！！","like_count":39,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463842,"discussion_content":"对 是这样的，下面是关于同名变量和函数的两点处理原则：\n\n1:如果是同名的函数，JavaScript编译阶段会选择最后声明的那个。\n\n2:如果变量和函数同名，那么在编译阶段，变量的声明会被忽略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566346051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105288,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/88/85adaee8.jpg","nickname":"D","note":"","ucode":"114BF9BA735CDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8288,"discussion_content":"针对老师回复这一点\n2:如果变量和函数同名，那么在编译阶段，变量的声明会被忽略。\n我认为是编译过程决定的。编译器是针对两个声明进行编译，首先是var声明，其次是function声明，当同名的function的声明不管是在var声明之前还是之后都会造成function是声明覆盖var的成名的现象。因此我认为这不是被忽略而是被覆盖","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1567872995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":1105288,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/88/85adaee8.jpg","nickname":"D","note":"","ucode":"114BF9BA735CDA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8319,"discussion_content":"这么说也可以解释。编译器到底是怎么工作的，可能还得看编译器的实现源码。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567916658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8288,"ip_address":""},"score":8319,"extra":""},{"author":{"id":1813548,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ac/2c/a08ffd57.jpg","nickname":"一际天涯","note":"","ucode":"1CDEEC74148AE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1105288,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/88/85adaee8.jpg","nickname":"D","note":"","ucode":"114BF9BA735CDA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143505,"discussion_content":"你说的对，编译过程是先进行变量提升，然函数提升，所以函数覆盖变量。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579511757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8288,"ip_address":""},"score":143505,"extra":""}]},{"author":{"id":1351094,"avatar":"","nickname":"Louis","note":"","ucode":"891D9EDD6D2851","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7309,"discussion_content":"function showName() {\n    console.log(‘function’)\n}\nvar showName = ‘name’\nconsole.log(showName)\n得到的结果是name 为什么还说函数和变量重名 函数不会被覆盖？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567485830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1532500,"avatar":"https://static001.geekbang.org/account/avatar/00/17/62/54/043195eb.jpg","nickname":"安静","note":"","ucode":"76765E40621B52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1351094,"avatar":"","nickname":"Louis","note":"","ucode":"891D9EDD6D2851","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9408,"discussion_content":"代码的执行顺序并不会变，你把console放到前面打印的就是函数体了，你这段代码的执行顺序是：1.变量showName 声明被提前，函数showName 声明和赋值被提前，此时showName 是函数，2.然后代码顺序执行，showName被赋值“name”然后打印，所以结果是name","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1568166112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7309,"ip_address":""},"score":9408,"extra":""}]},{"author":{"id":1344810,"avatar":"https://static001.geekbang.org/account/avatar/00/14/85/2a/376dd985.jpg","nickname":"uccs","note":"","ucode":"93DF5B81AB170E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302052,"discussion_content":"变量提升 -> 函数提升 -> 执行（赋值）-> 赋值（执行），第三第四步具体是执行还是赋值，看你代码此时是执行还是赋值\n变量提升 -> 执行 -> 赋值\nconsole.log(a)  // undefined\nvar a = 1\n变量提升 -> 赋值-> 执行\nvar b = 2\nconsole.log(b)  // 2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598773958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1685404,"avatar":"","nickname":"Geek_94875e","note":"","ucode":"22FF709EE12956","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251104,"discussion_content":"我觉得应该这样理解：在编译阶段，发现是变量就只定义对应变量的key,不会覆盖值（在执行的时候覆盖），如果是函数，就定义对应key，并且覆盖值 ，有个相同的步骤：如果发现key存在就跳过定义key","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588065648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1514406,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1b/a6/6373416f.jpg","nickname":"青史成灰","note":"","ucode":"C28AB62034B833","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24927,"discussion_content":"&#34;如果变量和函数同名，那么在编译阶段，变量的声明会被忽略&#34;,不是很懂这句话的意思。意思是在编译阶段就不会再变量环境中创建和函数同名的变量吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570333237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1374221,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/0d/0afa80d4.jpg","nickname":"王博","note":"","ucode":"B0A747BD6D0244","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1514406,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1b/a6/6373416f.jpg","nickname":"青史成灰","note":"","ucode":"C28AB62034B833","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45997,"discussion_content":"我的理解应该是：如果同一个变量，函数声明在前，变量声明在后，那么在编译阶段函数声明不会被其后的变量声明所覆盖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573107924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24927,"ip_address":""},"score":45997,"extra":""}]}]},{"had_liked":false,"id":126111,"user_name":"林展翔","can_delete":false,"product_type":"c1","uid":1254011,"ip_address":"","ucode":"F1EA834AB9E758","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/7b/f8736786.jpg","comment_is_top":false,"comment_ctime":1566314749,"is_pvip":false,"replies":[{"id":"46489","content":"先是生成字节码，然后解释器可以直接执行字节码，输出结果。  但是通常Javascript还有个编译器，会把那些频繁执行的字节码编译为二进制，这样那些经常被运行的函数就可以快速执行了，通常又把这种解释器和编译器混合使用的技术称为JIT","user_name":"作者回复","comment_id":126111,"uid":"1141464","ip_address":"","utype":1,"ctime":1566345406,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"108940497149","product_id":100033601,"comment_content":"老师，可以请教下吗，在编译完成之后是单单生成了字节码，再到执行过程中变成对应平台的机器码？ 还是编译过程已经生成了对应平台的机器码， 执行阶段就直接去执行相应的机器码？","like_count":25,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463835,"discussion_content":"先是生成字节码，然后解释器可以直接执行字节码，输出结果。  但是通常Javascript还有个编译器，会把那些频繁执行的字节码编译为二进制，这样那些经常被运行的函数就可以快速执行了，通常又把这种解释器和编译器混合使用的技术称为JIT","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566345406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156690,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1574935853,"is_pvip":true,"replies":[{"id":"60143","content":"很赞","user_name":"作者回复","comment_id":156690,"uid":"1141464","ip_address":"","utype":1,"ctime":1574942687,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"100359183661","product_id":100033601,"comment_content":"lexical scope发生在编译阶段，会产生变量提升的效果；<br>JavaScript的Dynamic Scope发生在执行阶段，会产生this binding, prototype chaining search的过程；<br>变量提升只提升声明(left hand）不提升赋值(right hand)<br>function的声明主要有: function declaration, function expression<br>其中function declaration会将方法体也提升，而function expression同变量提升一样，只会提升声明；<br>变量提升在有let或者const的block中会出现Temporal Dead Zone Error, 效果好似没有提升；<br>另外要注意block内部的var变量能够穿透block提升到global scope.<br><br>更多JS请了解：<br>https:&#47;&#47;geekeast.github.io&#47;jsscope.html","like_count":23,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476200,"discussion_content":"很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574942687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126094,"user_name":"林高鸿","can_delete":false,"product_type":"c1","uid":1008474,"ip_address":"","ucode":"34AD2C0A7542AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/5a/4ec96cfe.jpg","comment_is_top":false,"comment_ctime":1566312494,"is_pvip":false,"replies":[{"id":"46491","content":"<br>你也可以理解为涉及失误，因为设计之初的目的就是想让网页动起来，JavaScript创造者Brendan Eich并没有打算把语言设计太复杂。<br><br>所以只引入了函数级作用域和全局作用域，一些快级作用域都被华丽地忽略掉了。<br><br>这样如果变量或者函数在if块，while块里面，因为他们没有作用域，所以在编译阶段，就干脆把这些变量和函数提升到开头，这样设计语言的复杂性就大大降低了，但是这也埋下了混乱的种子。<br><br>随着JavaScript的流行，人们发现问题越来越多，中间的历史就展开了，最终推出了es6，在语言层面做了非常大的调整，但是为了保持想下兼容，就必须新的规则和旧的规则都同时支持，这样也导致了语言层面不必要的复杂性。<br><br>虽然JavaScript语言本身问题很多，但是它已经是整个开发生态中的不可或缺的一环了，因此，不要因为它的问题多就不想去学它，我认为判断要学不学习一门语言要看所能产生的价值，JavaScript就这样一门存在很多缺陷却是非常有价值的语言。","user_name":"作者回复","comment_id":126094,"uid":"1141464","ip_address":"","utype":1,"ctime":1566346881,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"100350560302","product_id":100033601,"comment_content":"老师，ES6 后不用 var，所以可否理解 Hoisting 为“权宜之计&#47;设计失误”呢？","like_count":23,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463827,"discussion_content":"\n你也可以理解为涉及失误，因为设计之初的目的就是想让网页动起来，JavaScript创造者Brendan Eich并没有打算把语言设计太复杂。\n\n所以只引入了函数级作用域和全局作用域，一些快级作用域都被华丽地忽略掉了。\n\n这样如果变量或者函数在if块，while块里面，因为他们没有作用域，所以在编译阶段，就干脆把这些变量和函数提升到开头，这样设计语言的复杂性就大大降低了，但是这也埋下了混乱的种子。\n\n随着JavaScript的流行，人们发现问题越来越多，中间的历史就展开了，最终推出了es6，在语言层面做了非常大的调整，但是为了保持想下兼容，就必须新的规则和旧的规则都同时支持，这样也导致了语言层面不必要的复杂性。\n\n虽然JavaScript语言本身问题很多，但是它已经是整个开发生态中的不可或缺的一环了，因此，不要因为它的问题多就不想去学它，我认为判断要学不学习一门语言要看所能产生的价值，JavaScript就这样一门存在很多缺陷却是非常有价值的语言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566346881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127739,"user_name":"YBB","can_delete":false,"product_type":"c1","uid":1585967,"ip_address":"","ucode":"1507DBFE008715","user_header":"https://static001.geekbang.org/account/avatar/00/18/33/2f/84f7d587.jpg","comment_is_top":false,"comment_ctime":1566786552,"is_pvip":false,"replies":[{"id":"47398","content":"记住一点就行：函数只有在调用的时候才会被编译。","user_name":"作者回复","comment_id":127739,"uid":"1141464","ip_address":"","utype":1,"ctime":1566808580,"user_name_real":"李兵"}],"discussion_count":3,"race_medal":0,"score":"87466132472","product_id":100033601,"comment_content":"老师我想问下，一段javascript代码进入编译阶段是会对函数体内的代码也进行编译，还是只是将函数体的代码存储在堆，在执行中遇到该函数再去编译？","like_count":20,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464630,"discussion_content":"记住一点就行：函数只有在调用的时候才会被编译。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566808580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2801818,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/c0/9a/c2217ef2.jpg","nickname":"asdfghjkl","note":"","ucode":"6941A96865949B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408763,"discussion_content":"js执行分三步：1.语法分析，2.预编译，3.执行，你这是发生在语法分析上","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635320771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1378345,"avatar":"https://static001.geekbang.org/account/avatar/00/15/08/29/e0a19ed5.jpg","nickname":"Yu","note":"","ucode":"1036F9AFED7A4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235301,"discussion_content":"```\nfunction func() {\n  let a = 10;\n  var a = 1;\n}\n```\n上面的代码中，func没有执行，引擎依然会报语法错误\n所以没有执行的代码也会编译的，这里应该是预编译的时候检查出的错误","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587035299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150112,"user_name":"趁你还年轻233","can_delete":false,"product_type":"c1","uid":1053875,"ip_address":"","ucode":"B7CC120EF42980","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/b3/b6e1817a.jpg","comment_is_top":false,"comment_ctime":1573463591,"is_pvip":false,"replies":[{"id":"57773","content":"因为在执行过程showName先被替换为undefined<br>然后再执行showName（），这时showName的值是undefined了，所以提示错误","user_name":"作者回复","comment_id":150112,"uid":"1141464","ip_address":"","utype":1,"ctime":1573474088,"user_name_real":"李兵"}],"discussion_count":2,"race_medal":0,"score":"57408038439","product_id":100033601,"comment_content":"var showName;<br>function showName() {<br>    console.log(1)<br>}<br>showName();<br>showName = function() {<br>    console.log(2)<br>};<br><br>这样声明没有问题，可以正常输出1。<br><br>为什么下面的代码会报错呢：Uncaught TypeError: showName is not a function<br><br>var showName = undefined;<br>function showName() {<br>    console.log(1)<br>}<br>showName();<br>showName = function() {<br>    console.log(2)<br>};","like_count":13,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474066,"discussion_content":"因为在执行过程showName先被替换为undefined\n然后再执行showName（），这时showName的值是undefined了，所以提示错误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573474088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437763,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/43/1360c74e.jpg","nickname":"锋","note":"","ucode":"46F3018AD13641","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262261,"discussion_content":"老师是不是这样理解，编译后代码变成\nshowName>function(){console.log(1)}\nshowName=undefined\nshowName()\nshowName>function(){console.log(2)}\n然后执行阶段就按这个来执行？\n也就是说，声明函数代码的位置会在编译阶段改变。函数声明的提升，实际就是把代码的位置提到前面去了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589069866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126005,"user_name":"林展翔","can_delete":false,"product_type":"c1","uid":1254011,"ip_address":"","ucode":"F1EA834AB9E758","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/7b/f8736786.jpg","comment_is_top":false,"comment_ctime":1566292257,"is_pvip":false,"replies":[{"id":"46432","content":"需要通过 var x 声明才会在编译期间提升","user_name":"作者回复","comment_id":126005,"uid":"1141464","ip_address":"","utype":1,"ctime":1566303577,"user_name_real":"李兵"}],"discussion_count":4,"race_medal":0,"score":"31631063329","product_id":100033601,"comment_content":"x = 10 + 20;<br>console.log(x);<br>若对 x 未进行定义, 直接赋值, 可以输出<br>若按照课程理解并假设<br>编译阶段会有一个<br>x = undefine<br>但是<br>console.log(x);<br>x = 10 + 20;<br>console.log(x);<br>会出现报错  x is not defined<br>在这个地方 我的理解有什么问题吗 还是说 原来就没有 x = undefine 操作, 只是在 x = 10 + 20; 给 x 赋值了一下.","like_count":7,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463783,"discussion_content":"需要通过 var x 声明才会在编译期间提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566303577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1393371,"avatar":"https://static001.geekbang.org/account/avatar/00/15/42/db/d2b49a75.jpg","nickname":"John  Lee","note":"","ucode":"94E697691BCF2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561302,"discussion_content":"有var声明才会在编译阶段变量提升；没有声明直接赋值则会在 执行阶段 执行时隐式的声明并赋值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649596771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64090,"discussion_content":"function foo () {\n  console.log(a);\n}\nlet a = 20;\nfoo();  // This is perfectly valid","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574936021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64089,"discussion_content":"let和const其实也会，只不过变量会被赋值为uninitialized, 出现TDZ error","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574936008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125914,"user_name":"六个周","can_delete":false,"product_type":"c1","uid":1067697,"ip_address":"","ucode":"7FFED12CC3346F","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/b1/e2b9e94f.jpg","comment_is_top":false,"comment_ctime":1566271133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23041107613","product_id":100033601,"comment_content":"通过这篇文章我学到了一个知识点：<br>清楚 了JavaScript 的执行机制：先编译，再执行。","like_count":5},{"had_liked":false,"id":212144,"user_name":"Geek_94875e","can_delete":false,"product_type":"c1","uid":1685404,"ip_address":"","ucode":"22FF709EE12956","user_header":"","comment_is_top":false,"comment_ctime":1588066026,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14472967914","product_id":100033601,"comment_content":"我觉得在编译阶段变量提升这可能再加上一些描述会比较好一点<br>1：变量提升只针对var和function，对于let 和const就不会<br>2：var 和function的提升优先级是一样的，按先后顺序，只是提升的时候执行的逻辑不一样<br>  1.在提升的时候，如果没有定义对应的变量，就在vo里面定义变量<br>   2.如果定义了，就不在重复定义<br>   3.如果是函数，就设置对应的值为函数体","like_count":3,"discussions":[{"author":{"id":1204992,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Budy1Ogf3pGk9BZVjvl2SMqU0750QotCVs3SH8ibic2ia9OMQ70Bfib4V5CsbCX5giaKY0vNbuDVenVTFM8TcxwYbLw/132","nickname":"16602756241","note":"","ucode":"0D41AE54776653","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337996,"discussion_content":"函数和变量相比，会被优先提升。这意味着函数会被提升到更靠前的位置。可参考mdn：https://developer.mozilla.org/zh-CN/docs/Glossary/Hoisting","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609147612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193082,"user_name":"阿感","can_delete":false,"product_type":"c1","uid":1910075,"ip_address":"","ucode":"7BCB7E44A832D1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","comment_is_top":false,"comment_ctime":1584883601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14469785489","product_id":100033601,"comment_content":"showName();<br>var showName = function() { console.log(2)};<br>function showName() { console.log(1)}<br>showName();<br>输出1，2。<br>分析：<br>（1）JavaScript 的执行机制：先编译，再执行<br>（2）变量环境的对象（Viriable Environment），该对象中保存了变量提升的内容<br>（3）<br>对于var声明:<br>经过 var 声明的， JavaScript 引擎将在环境对象中创建一个名为xxxx 的属性，并使用 undefined 对其初始化;<br>对于函数声明：<br>JavaScript 引擎发现了一个通过 function 定义的函数，所以它将函数定义存储到堆 (HEAP）中，并在环境对象中创建一个 xxxx 的属性，然后将该属性值指向堆中函数的位置;<br>（4）没经过var声明，如 a = 1；这样的不会提升；es6的let const 也没有变量提升。<br>  (5)同名函数声明，后面覆盖前面的；如果变量和函数同名，那么在编译阶段，变量的声明会被忽略（函数声明优先级高）<br>(6)注意声明提前后，执行代码到底是什么。可能会导致虽然声明提前的时候，函数优先级高覆盖了同名变量，但是执行的时候却被改变指向，输出非函数值结果。<br><br>编译阶段：<br>本来var showName  = undefined，同名函数优先级更高，所以变量对象里保存的是function showName() { console.log(1)}；<br>执行阶段：<br>先看看执行部分的代码<br>showName();<br>showName = function() { console.log(2)};<br>（这里原来函数的位置整个被提升了）<br>showName();<br>所以第一个showName();执行，从变量对象里找到函数showName，输出1；<br>接着showName被赋值function() { console.log(2)};改变了指向。<br>再执行showName();那么就输出新指向的了，也就是2。<br>","like_count":3},{"had_liked":false,"id":132056,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1003156,"ip_address":"","ucode":"4060B4E2EF1D13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/94/0b22b6a2.jpg","comment_is_top":false,"comment_ctime":1568015831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14452917719","product_id":100033601,"comment_content":"当从服务器接收HTML页面的第一批数据时，DOM解析器就开始工作了，在解析过程中，如果遇到了JS脚本，如下所示：<br>&lt;html&gt;<br>    &lt;body&gt;<br>        极客时间<br>        &lt;script&gt;<br>        document.write(&quot;--foo&quot;)<br>        &lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>那么DOM解析器会先执行JavaScript脚本，执行完成之后，再继续往下解析。<br><br>那么第二种情况复杂点了，我们内联的脚本替换成js外部文件，如下所示：<br>&lt;html&gt;<br>    &lt;body&gt;<br>        极客时间<br>        &lt;script type=&quot;text&#47;javascript&quot; src=&quot;foo.js&quot;&gt;&lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>这种情况下，当解析到JavaScript的时候，会先暂停DOM解析，并下载foo.js文件，下载完成之后执行该段JS文件，然后再继续往下解析DOM。这就是JavaScript文件为什么会阻塞DOM渲染。<br><br>我们再看第三种情况，还是看下面代码：<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;style type=&quot;text&#47;css&quot; src = &quot;theme.css&quot; &#47;&gt;<br>    &lt;&#47;head&gt;<br>    &lt;body&gt;<br>        &lt;p&gt;极客时间&lt;&#47;p&gt;<br>        &lt;script&gt;<br>            let e = document.getElementsByTagName(&#39;p&#39;)[0]<br>            e.style.color = &#39;blue&#39;<br>        &lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>当我在JavaScript中访问了某个元素的样式，那么这时候就需要等待这个样式被下载完成才能继续往下执行，所以在这种情况下，CSS也会阻塞DOM的解析。<br><br>所以这时候如果头部包含了js文件，那么同样也会暂停DOM解析，等带该JavaScript文件下载后，便开始编译执行该文件，执行结束之后，才开始继续DOM解析。<br>-------------<br><br>老师，最后一种情况，如果js中没有访问元素的样式，那么js还要继续等待CSS 加载解析完成吗？在这种情况下，chrome 和firefox 的处理是不是不太一样？chrome 会并行加载解析css，而firefox 会等待css加载解析完成后再执行js？","like_count":3},{"had_liked":false,"id":125795,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1566261196,"is_pvip":true,"replies":[{"id":"46797","content":"是的，变量环境中只保存一个","user_name":"作者回复","comment_id":125795,"uid":"1141464","ip_address":"","utype":1,"ctime":1566427467,"user_name_real":"李兵"}],"discussion_count":3,"race_medal":0,"score":"14451163084","product_id":100033601,"comment_content":"showName()<br>function showName(){<br>    console.log(1)<br>}<br>var showName=function(){<br>    console.log(2)<br>}<br>showName()<br><br>第二个showName打印为2，为什么这个showName找的是变量而不是函数，或者此时变量环境中已经没有了showName函数，只有showName变量？谢谢","like_count":3,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463695,"discussion_content":"是的，变量环境中只保存一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566427467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337216,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/80/dae518d2.jpg","nickname":"羽蝶曲","note":"","ucode":"FEA9FB7F321874","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5465,"discussion_content":"个人理解是：首先变量环境中存储的是\nvar showName = undefined\nfunction showName(console.log(1)) \n其他的代码按顺序放在可执行代码里，顺序是：\nshowName() \nshowName = function() {\n    console.log(2)\n} \nshowName()\n所以第二个showName()的时候，执行代码阶段已经将showName替换掉了，所以就输出2","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566287481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108457,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","nickname":"杨陆伟","note":"","ucode":"3BC968447406EB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6109,"discussion_content":"showName = function() {\n    console.log(2)\n} \n是替换掉了函数，不是替换掉了变量？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566704241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150937,"user_name":"Lester","can_delete":false,"product_type":"c1","uid":1623285,"ip_address":"","ucode":"727C28A13A4284","user_header":"https://static001.geekbang.org/account/avatar/00/18/c4/f5/f64e30d8.jpg","comment_is_top":false,"comment_ctime":1573631826,"is_pvip":false,"replies":[{"id":"58094","content":"对的","user_name":"作者回复","comment_id":150937,"uid":"1141464","ip_address":"","utype":1,"ctime":1573642596,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"10163566418","product_id":100033601,"comment_content":"如果变量和函数同名，那么在编译阶段，变量的声明会被忽略，执行的时候还是后面的是什么就是什么，而不会因为同名，就一定是函数。","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474317,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573642596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126610,"user_name":"子非鱼","can_delete":false,"product_type":"c1","uid":1299589,"ip_address":"","ucode":"D65701790DABE5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/AcJM5WNhE05rzaVzeL9ia4QSnibd0ibbKNdIbySj2ibhj2xFRHibdhOX9fBEB5HMS1bbOt0tXcxwKur2gPdVaZpcIZw/132","comment_is_top":false,"comment_ctime":1566436001,"is_pvip":false,"replies":[{"id":"47147","content":"需要的，因为不管是否缓存了，都需要执行JS","user_name":"作者回复","comment_id":126610,"uid":"1141464","ip_address":"","utype":1,"ctime":1566658764,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"10156370593","product_id":100033601,"comment_content":"老师我有个问题，正常情况domcontentloaded事件是在浏览器下载并解析完html才触发，如果有内嵌外部js文件，也要等到js加载并执行完才触发。但如果页面是被二次访问并且html和引入的外部js都命中了缓存，则是否也要等到js被完全执行才触发呢？","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464084,"discussion_content":"需要的，因为不管是否缓存了，都需要执行JS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566658764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285303,"user_name":"Geek_2d96de","can_delete":false,"product_type":"c1","uid":2537423,"ip_address":"","ucode":"FE727D8F4DD121","user_header":"","comment_is_top":false,"comment_ctime":1616729437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5911696733","product_id":100033601,"comment_content":"变量和函数同名，在编译阶段变量的声明会被忽略。请问这里是真的被忽略还是执行阶段同名变量被赋值为undefined；<br><br>如下两种情况结果是一样的，都报错Uncaught TypeError: showName is not a function<br><br>var showName = undefined;<br>function showName() {<br>    console.log(&#39;showName被调用&#39;);<br>};<br>showName();<br>console.log(myname);<br>myname = &#39;极客时间&#39;;<br><br><br>var showName;<br>function showName() {<br>    console.log(&#39;showName被调用&#39;);<br>};<br>showName = undefined;<br>showName();<br>console.log(myname);<br>myname = &#39;极客时间&#39;;","like_count":1},{"had_liked":false,"id":251102,"user_name":"KeilingZhuang","can_delete":false,"product_type":"c1","uid":2114442,"ip_address":"","ucode":"CDBA0336FE3E26","user_header":"https://static001.geekbang.org/account/avatar/00/20/43/8a/9380fe92.jpg","comment_is_top":false,"comment_ctime":1601365307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5896332603","product_id":100033601,"comment_content":"这个专栏真是宝藏。搜了一堆文章和译文都没看明白，这篇文章一看就懂，谢谢大佬^_^  棒棒哒 ","like_count":1},{"had_liked":false,"id":180534,"user_name":"陈启年","can_delete":false,"product_type":"c1","uid":1101007,"ip_address":"","ucode":"EE34FC76AE3C9B","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/cf/1c19ad6d.jpg","comment_is_top":false,"comment_ctime":1582322570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877289866","product_id":100033601,"comment_content":"变量环境的对象（Viriable Environment）中的Viriable应为Variable","like_count":1},{"had_liked":false,"id":134024,"user_name":"iven～zf","can_delete":false,"product_type":"c1","uid":1117835,"ip_address":"","ucode":"FFE22A3EF41AD3","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/8b/036e9f7c.jpg","comment_is_top":false,"comment_ctime":1568723016,"is_pvip":false,"replies":[{"id":"51442","content":"macos的keynote","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1568772540,"ip_address":"","comment_id":134024,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863690312","product_id":100033601,"comment_content":"老师，您的图片是用什么画图工具了。感觉好友爱。","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467586,"discussion_content":"macos的keynote","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568772540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132353,"user_name":"芬兰湖边小画匠","can_delete":false,"product_type":"c1","uid":1347300,"ip_address":"","ucode":"31289C9C4F4085","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/e4/f126ef1b.jpg","comment_is_top":false,"comment_ctime":1568097290,"is_pvip":false,"replies":[{"id":"50920","content":"同乐同乐","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1568278881,"ip_address":"","comment_id":132353,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863064586","product_id":100033601,"comment_content":"9.10　刚好看到这里。老师，节日快乐。祝好","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466895,"discussion_content":"同乐同乐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568278881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127364,"user_name":"AICC","can_delete":false,"product_type":"c1","uid":1020746,"ip_address":"","ucode":"C1D18B1E8B2DCE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/4a/de82f373.jpg","comment_is_top":false,"comment_ctime":1566665506,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861632802","product_id":100033601,"comment_content":"太棒了，很喜欢这个课程~","like_count":1},{"had_liked":false,"id":126882,"user_name":"张峰","can_delete":false,"product_type":"c1","uid":1097820,"ip_address":"","ucode":"7015E9A9137521","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/5c/10111544.jpg","comment_is_top":false,"comment_ctime":1566515978,"is_pvip":false,"replies":[{"id":"46907","content":"调用的时候，08节有介绍","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566519016,"ip_address":"","comment_id":126882,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861483274","product_id":100033601,"comment_content":"showName函数的编译是在什么时候呢","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464222,"discussion_content":"调用的时候，08节有介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566519016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126611,"user_name":"子非鱼","can_delete":false,"product_type":"c1","uid":1299589,"ip_address":"","ucode":"D65701790DABE5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/AcJM5WNhE05rzaVzeL9ia4QSnibd0ibbKNdIbySj2ibhj2xFRHibdhOX9fBEB5HMS1bbOt0tXcxwKur2gPdVaZpcIZw/132","comment_is_top":false,"comment_ctime":1566436167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861403463","product_id":100033601,"comment_content":"&#47;&#47; application.js<br>$(function() {<br>  utils.log(&#39;Ready&#39;);<br>});<br>&#47;&#47; utils.js<br>window.utils = {<br>  log: function() {<br>    if (window.console) console.log.apply(console, arguments);<br>  }<br>};<br>&lt;script src ＝&quot;application.js&quot;&gt;&lt;&#47;script&gt;<br>&lt;script src ＝&quot;util.js&quot;&gt;&lt;&#47;script&gt;<br><br>一本书上说这段js代码在页面被缓存时候会出现问题，我的理解是即便util被缓存，不也要等到它执行完成再触发domcontentloaded事件吗？所以不会出问题","like_count":1},{"had_liked":false,"id":125885,"user_name":"李懂","can_delete":false,"product_type":"c1","uid":1330436,"ip_address":"","ucode":"539E6639042C88","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/04/5e0d3713.jpg","comment_is_top":false,"comment_ctime":1566268196,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861235492","product_id":100033601,"comment_content":"变量环境是在stack中创建，还是在heap中创建，<br>闭包是不是在函数执行后变量环境，被定义在当前词法作用域的函数包含，不回收！","like_count":1},{"had_liked":false,"id":125726,"user_name":"gallifrey","can_delete":false,"product_type":"c1","uid":1366631,"ip_address":"","ucode":"A4E5E0E7E2DEF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/da/67/73a0c754.jpg","comment_is_top":false,"comment_ctime":1566233502,"is_pvip":false,"replies":[{"id":"46179","content":"没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566260720,"ip_address":"","comment_id":125726,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861200798","product_id":100033601,"comment_content":"一、<br>showName()<br>var showName = function() {<br>    console.log(2)<br>}<br>function showName() {<br>    console.log(1)<br>}<br>编译阶段，第一个showName存入变量环境中，自动赋值undefined<br>第二个showName函数体也存入了变量环境中，但是是一个完整的函数声明赋值<br>执行阶段，Javacript引擎从变量环境中查找到showName函数体直接执行<br>输出结果：1","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463675,"discussion_content":"没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566260720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125722,"user_name":"gallifrey","can_delete":false,"product_type":"c1","uid":1366631,"ip_address":"","ucode":"A4E5E0E7E2DEF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/da/67/73a0c754.jpg","comment_is_top":false,"comment_ctime":1566233102,"is_pvip":false,"replies":[{"id":"46182","content":"不过第二个语句仅仅是赋值操作，函数并没有执行，所以不会输出2的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566260836,"ip_address":"","comment_id":125722,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5861200398","product_id":100033601,"comment_content":"二、<br>showName()<br>function showName(){<br>    console.log(1)<br>}<br>var showName=function(){<br>    console.log(2)<br>}<br>showName()<br>编译阶段，showName函数体存入变量环境<br>showName变量存入变量环境，赋值undefined<br>执行阶段，第一个showName()查找到函数体直接执行<br>输出结果：1<br>执行到第二个showName()时，showName变量已经赋值了function(){console.log(2)}<br>输出结果：2","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463673,"discussion_content":"不过第二个语句仅仅是赋值操作，函数并没有执行，所以不会输出2的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566260836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1366631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/da/67/73a0c754.jpg","nickname":"gallifrey","note":"","ucode":"A4E5E0E7E2DEF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5426,"discussion_content":"老师，因为后面赋值了，showName函数体已经变掉了，再执行showName()结果肯定会输出2吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566262056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1663106,"avatar":"https://static001.geekbang.org/account/avatar/00/19/60/82/1d8c8c27.jpg","nickname":"钓人的鱼","note":"","ucode":"FB437B918E5868","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1366631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/da/67/73a0c754.jpg","nickname":"gallifrey","note":"","ucode":"A4E5E0E7E2DEF9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19586,"discussion_content":"最后的变量showName是指向了堆中的匿名函数。匿名函数不会在赋值的时候执行，然后JavaScript 允许这样绑定函数,这个变量就变成了 函数了，用typeof showName可以看出，打印出来是 function 了，所以能够使用showName(),括号就是立马调用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569208769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5426,"ip_address":""},"score":19586,"extra":""}]}]},{"had_liked":false,"id":353915,"user_name":"y.yang","can_delete":false,"product_type":"c1","uid":1000986,"ip_address":"上海","ucode":"30F5827316EC89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/1a/5f612faa.jpg","comment_is_top":false,"comment_ctime":1659925039,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659925039","product_id":100033601,"comment_content":"有个疑问 执行上下文不是在执行阶段才创建的吗？编译阶段不是生成AST和作用域吗？","like_count":0},{"had_liked":false,"id":349948,"user_name":"粘粘大盗","can_delete":false,"product_type":"c1","uid":2838655,"ip_address":"","ucode":"E593844070B968","user_header":"https://static001.geekbang.org/account/avatar/00/2b/50/7f/057d3ab8.jpg","comment_is_top":false,"comment_ctime":1656468837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656468837","product_id":100033601,"comment_content":"为什么js是解释型语言会有变量提升呢？","like_count":0},{"had_liked":false,"id":348886,"user_name":"Geek_55da62","can_delete":false,"product_type":"c1","uid":2645773,"ip_address":"","ucode":"77EDC03D2A9697","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIzSeoGepp5mA80czicDppLUMSufHWgIDtxtfAE3pENb7RELnmmibqhlja4sqtn7icJHNojibnjP6nVzg/132","comment_is_top":false,"comment_ctime":1655515759,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655515759","product_id":100033601,"comment_content":"老师，看到你对js编译后生成的执行上下文和可执行代码有点疑惑：词法环境和变量环境有啥区别？我听说过词法作用域？那有变量作用域吗？","like_count":0},{"had_liked":false,"id":348037,"user_name":"兽蜗牛","can_delete":false,"product_type":"c1","uid":1002936,"ip_address":"","ucode":"2048F8B89107F6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/b8/6355bdd6.jpg","comment_is_top":false,"comment_ctime":1654682061,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654682061","product_id":100033601,"comment_content":"变量环境:<br>     变量 -&gt; showName -&gt; undefined, <br>     函数 -&gt; showName -&gt; function : {console.log(1)}<br><br>执行阶段:<br>    showName() &#47;&#47;输出1<br>    showName = function(){console.log(2)}","like_count":0},{"had_liked":false,"id":347931,"user_name":"Geek_a942b2","can_delete":false,"product_type":"c1","uid":1624657,"ip_address":"","ucode":"79672FDA9186F3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/icHcfIhDBHdN2Kl4oz0KUhH9pvVGNP1icdicib1Xb2XJvBGTb4j2lRYNh8ibbgjwUUtyaR6LeRb1l4WpuFYzwILxpew/132","comment_is_top":false,"comment_ctime":1654589034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654589034","product_id":100033601,"comment_content":"       showName()<br>        console.log(showName)<br>        function showName() { console.log(1)}<br>        console.log(showName)<br>        var showName = function() { console.log(2)}<br>        showName()<br><br>        &#47;&#47; 疑惑：变量提升同名覆盖，showName 应该被var 提升的 undefined 覆盖 结果没有<br>        &#47;&#47; 打印结果<br>        &#47;&#47; 1<br>        &#47;&#47; ƒ showName() { console.log(1)}<br>        &#47;&#47; ƒ showName() { console.log(1)}<br>        &#47;&#47; 2<br><br>","like_count":0},{"had_liked":false,"id":344872,"user_name":"S.erendipity","can_delete":false,"product_type":"c1","uid":2077749,"ip_address":"","ucode":"3F933F5694E7D7","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b4/35/1df3afd5.jpg","comment_is_top":false,"comment_ctime":1651829094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651829094","product_id":100033601,"comment_content":"这里跟覆盖其实没有关系，不管哪个 showName 先声明都会输出 1，因为函数提升会优先于变量提升","like_count":0},{"had_liked":false,"id":343908,"user_name":"开着你的花","can_delete":false,"product_type":"c1","uid":1407718,"ip_address":"","ucode":"E5B670B560D127","user_header":"https://static001.geekbang.org/account/avatar/00/15/7a/e6/250f2546.jpg","comment_is_top":false,"comment_ctime":1651116305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651116305","product_id":100033601,"comment_content":"<br>showName()<br>let  showName = function() {<br>    console.log(2)<br>}<br>function showName() {<br>    console.log(1)<br>}<br>&#47;&#47; change a declared and try try ","like_count":0},{"had_liked":false,"id":328768,"user_name":"聂鹏","can_delete":false,"product_type":"c1","uid":1005479,"ip_address":"","ucode":"98AA4D9E9BF9F1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJQLfPbnibuQwaXIgyr3hxUdVAuaZfsn4pjic3lDvUmlpfPqvMJ2aSfetI18lKpRyzLuIbYeY2K15ibg/132","comment_is_top":false,"comment_ctime":1640872659,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640872659","product_id":100033601,"comment_content":"问下老师：如果函数只在执行的时候才会被编译，那闭包产生是如何识别函数体内需要其他变量的<br>function say() {<br>  let name = &#39;JoJo&#39;;<br>  return function sayName() {<br>   return name;<br>  }<br>}<br><br>say()","like_count":0},{"had_liked":false,"id":327635,"user_name":"hao-kuai","can_delete":false,"product_type":"c1","uid":1272354,"ip_address":"","ucode":"DFDFDDDBA4503C","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/22/527904b2.jpg","comment_is_top":false,"comment_ctime":1640218379,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640218379","product_id":100033601,"comment_content":"1. JS执行分编译和执行两个阶段<br>2. 变量语录分声明和赋值两步<br>3. 编译阶段会先处理声明部分，到执行阶段会处理赋值部分；执行阶段提前访问，不会报错有了变量提升的现象<br>4. 这个角度也好区分函数声明和函数表达式","like_count":0},{"had_liked":false,"id":325715,"user_name":"装作很酷得","can_delete":false,"product_type":"c1","uid":2542381,"ip_address":"","ucode":"F3EB283C4C9BB1","user_header":"https://static001.geekbang.org/account/avatar/00/26/cb/2d/c9d4b310.jpg","comment_is_top":false,"comment_ctime":1639104256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639104256","product_id":100033601,"comment_content":"emmmm，不会有人连js变量提升这么基础的东西都不会就来看浏览器原理的吧。。。","like_count":0},{"had_liked":false,"id":323995,"user_name":"刘亚辉","can_delete":false,"product_type":"c1","uid":1520163,"ip_address":"","ucode":"60CD2FF352BED9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/icHicAP9M4M4ALsKr6vgLW7FNTmmBJGcvicg9QiamucYpNfupwZYrPicgeK73KNw0rgNuwnJdgLfSzkQ34ibfltZYUbQ/132","comment_is_top":false,"comment_ctime":1638253333,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1638253333","product_id":100033601,"comment_content":"console.log(name);<br>var name = &quot;极客时间&quot;;<br>打印出来的却是极客时间而不是undefined 这是为什么？","like_count":0,"discussions":[{"author":{"id":2815130,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f4/9a/2293fe04.jpg","nickname":"Codfish","note":"","ucode":"DC7D2DC5AFF9C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556801,"discussion_content":"var声明的变量会被挂载为window的属性，window有个name属性，你正好给他覆盖了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647519722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316664,"user_name":"撒哈拉","can_delete":false,"product_type":"c1","uid":1608406,"ip_address":"","ucode":"2F64B26543D772","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/d6/00cf9218.jpg","comment_is_top":false,"comment_ctime":1634480648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634480648","product_id":100033601,"comment_content":"变量声明或函数声明都会在编译阶段提升到执行上下文中。<br><br>如果两个声明的标识符相同，函数声明大于变量声明","like_count":0},{"had_liked":false,"id":313470,"user_name":"ly","can_delete":false,"product_type":"c1","uid":2582719,"ip_address":"","ucode":"9CCCF8A885A20E","user_header":"https://static001.geekbang.org/account/avatar/00/27/68/bf/7b39410e.jpg","comment_is_top":false,"comment_ctime":1632453662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632453662","product_id":100033601,"comment_content":"变量提升和执行上下文生成有先后顺序吗？文中提到经过编译后会生成执行上下文和可执行文件，那就是先变量提升然后生成执行上下文，但是变量提升的内容不是存放到执行上下文中的变量环境中的吗？","like_count":0},{"had_liked":false,"id":313468,"user_name":"ly","can_delete":false,"product_type":"c1","uid":2582719,"ip_address":"","ucode":"9CCCF8A885A20E","user_header":"https://static001.geekbang.org/account/avatar/00/27/68/bf/7b39410e.jpg","comment_is_top":false,"comment_ctime":1632453407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632453407","product_id":100033601,"comment_content":"JS不是解释型语言吗？为什么还需要编译呢？","like_count":0},{"had_liked":false,"id":282143,"user_name":"ihhuai","can_delete":false,"product_type":"c1","uid":1379127,"ip_address":"","ucode":"A796AF20437B8A","user_header":"https://static001.geekbang.org/account/avatar/00/15/0b/37/fd8355c4.jpg","comment_is_top":false,"comment_ctime":1615106601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615106601","product_id":100033601,"comment_content":"A Lexical Environment is a specification type used to define the association of Identifiers to specific variables and functions based upon the lexical nesting structure of ECMAScript code. A Lexical Environment consists of an Environment Record and a possibly null reference to an outer Lexical Environment. Usually a Lexical Environment is associated with some specific syntactic structure of ECMAScript code such as a FunctionDeclaration, a BlockStatement, or a Catch clause of a TryStatement and a new Lexical Environment is created each time such code is evaluated.<br><br>摘自 ecma-262 8.1 Lexical Environments<br><br>老师，按照这种说法，函数定义应该是放在 Lexical Environment 中的，而不是 Variable Environment。如果这个结论成立，那么 var 声明的变量也不都是放到 Veriable Environment 的，下面这段代码就可以证明这一点。<br><br>a();<br>var a = 10;<br>function a() {<br>    console.log(a); &#47;&#47; function<br>}<br>console.log(a); &#47;&#47; 10<br><br>而 var 声明的变量也会有放在 Variable Environment 中的情况，比如 eval&#47;with 语句等历史遗留的包袱","like_count":0},{"had_liked":false,"id":276471,"user_name":"于恺雯","can_delete":false,"product_type":"c1","uid":1782333,"ip_address":"","ucode":"FCE678848BE3E7","user_header":"https://static001.geekbang.org/account/avatar/00/1b/32/3d/7cb832ad.jpg","comment_is_top":false,"comment_ctime":1611946443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611946443","product_id":100033601,"comment_content":"console.log(showName)<br>showName()<br>var showName = function() {<br>    console.log(2)<br>}<br>function showName() {<br>    console.log(1)<br>}<br><br>打印结果：<br>ƒ showName() {<br>    console.log(1)<br>}<br>1","like_count":0},{"had_liked":false,"id":272459,"user_name":"Slowdive","can_delete":false,"product_type":"c1","uid":1624537,"ip_address":"","ucode":"AF3429CE47C462","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/d9/00870178.jpg","comment_is_top":false,"comment_ctime":1610094013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610094013","product_id":100033601,"comment_content":"老师！  你说了很多编译一段js代码，  这一段是怎么分的？ .js文件里所有的？ 函数调用前编译函数？如果是调用前， 那多次执行同一个函数会每次都编译吗？<br>另外const let，也一样在编译阶段放入内存对吧， 只是在解释器的代码里， 如果先访问了没有初始化的let const变量，会抛出一个暂时性死区的error对吧？","like_count":0},{"had_liked":false,"id":271819,"user_name":"啊哈哈","can_delete":false,"product_type":"c1","uid":1243584,"ip_address":"","ucode":"A8542946C03707","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","comment_is_top":false,"comment_ctime":1609822631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609822631","product_id":100033601,"comment_content":"<br>function foo() {}<br>console.log(foo); &#47;&#47; [Funciton foo]<br>var foo = 33<br>console.log(foo); &#47;&#47; 33<br><br>老师，解释下为什么同名的函数和变量，提升时函数的优先级高？","like_count":0},{"had_liked":false,"id":266081,"user_name":"小白菜","can_delete":false,"product_type":"c1","uid":2334321,"ip_address":"","ucode":"48692A4061175E","user_header":"https://static001.geekbang.org/account/avatar/00/23/9e/71/3b548202.jpg","comment_is_top":false,"comment_ctime":1607160802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607160802","product_id":100033601,"comment_content":"输出1,<br>当调用函数时，还没发生对showname变量的赋值操作，var showname是变量","like_count":0},{"had_liked":false,"id":263408,"user_name":"灬","can_delete":false,"product_type":"c1","uid":1997890,"ip_address":"","ucode":"ACE7136DEA6D0B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/7c/42/44877a3d.jpg","comment_is_top":false,"comment_ctime":1606126837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606126837","product_id":100033601,"comment_content":"如果我没记错的话，函数是一等公民吧，编一阶段不应该是函数在最顶部，其次才是变量吗？","like_count":0},{"had_liked":false,"id":258295,"user_name":"Geek_802152","can_delete":false,"product_type":"c1","uid":2283204,"ip_address":"","ucode":"FDED4C56D28E2D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/O2E7oAtDV7OJk4EY95nFlj6G6Q3j9YT9MWjQm7BgsqiawUKGRfXOR1bia50kpa1sznCeko6b27e6aAkyEyia5W49Q/132","comment_is_top":false,"comment_ctime":1604373175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604373175","product_id":100033601,"comment_content":"输出1","like_count":0},{"had_liked":false,"id":252503,"user_name":"Bryant-cx","can_delete":false,"product_type":"c1","uid":1242146,"ip_address":"","ucode":"ED9A93A527F695","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/22/257e9e21.jpg","comment_is_top":false,"comment_ctime":1602321864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602321864","product_id":100033601,"comment_content":"在编译阶段，由于变量提升，函数声明会覆盖掉变量声明，所以打印出1","like_count":0},{"had_liked":false,"id":250574,"user_name":"Geek5273","can_delete":false,"product_type":"c1","uid":2131667,"ip_address":"","ucode":"D48BF296571A18","user_header":"https://static001.geekbang.org/account/avatar/00/20/86/d3/7722167b.jpg","comment_is_top":false,"comment_ctime":1601135256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601135256","product_id":100033601,"comment_content":"请问老师，如果存在同名函数，变量环境中是只有一个变量，会指向后面声明的函数; 但有点疑惑是这时候堆中存在最后那个函数，还是两个函数都存在，只是第一个没有任何变量引用了？","like_count":0},{"had_liked":false,"id":240447,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1596933963,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596933963","product_id":100033601,"comment_content":"javascript code会先被javascript引擎先编译，并生成键值对的环境变量对象，运行阶段就是逐行运行code，遇到变量访问时就去环境变量对象中查找变量名对应的内容。","like_count":0},{"had_liked":false,"id":236019,"user_name":"老乡","can_delete":false,"product_type":"c1","uid":1172484,"ip_address":"","ucode":"90580F3B2F73A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/e4/04/09ee0fd1.jpg","comment_is_top":false,"comment_ctime":1595292846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595292846","product_id":100033601,"comment_content":"先编译后执行，这个讲的很好。<br>老师如果把你留的课后题目换个顺序，其实结果还是一样的输出 1.<br>我的理解为啥会输出 1.<br>我的猜测是不是因为函数的变量提升的优先级要高于变量的优先级。<br>其实这里还还是一知半解，还请老师赐教啊。<br>showName()<br>function showName() {<br>    console.log(1)<br>}<br>var showName = function() {<br>    console.log(2)<br>}","like_count":0},{"had_liked":false,"id":231067,"user_name":"Simon少明","can_delete":false,"product_type":"c1","uid":1358133,"ip_address":"","ucode":"F7ABE6DE4E55DE","user_header":"https://static001.geekbang.org/account/avatar/00/14/b9/35/96fb49d6.jpg","comment_is_top":false,"comment_ctime":1593573394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593573394","product_id":100033601,"comment_content":"思考题：<br>1、编译阶段：2-4行代码，遇到第一个showName声明赋值，放到变量环境中，然后到5-7行代码，同名函数覆盖；<br>2、执行阶段：执行showName函数，所以输出1","like_count":0},{"had_liked":false,"id":229024,"user_name":"lazycat","can_delete":false,"product_type":"c1","uid":1515527,"ip_address":"","ucode":"51552154DC315C","user_header":"https://static001.geekbang.org/account/avatar/00/17/20/07/9d793a1b.jpg","comment_is_top":false,"comment_ctime":1592881504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592881504","product_id":100033601,"comment_content":"在编译阶段，先将变量 showName 提升到全局中，赋值为 undefined ，然后找到了 showName 同名函数，则将 undefined 替换为指向函数的堆内存；在执行阶段，从全局上下文中找到 showName()，此时 showName 仍为同名函数，没有进行新的赋值，并进行执行，所以这里执行 showName() 函数，返回的 1。","like_count":0},{"had_liked":false,"id":228759,"user_name":"lazycat","can_delete":false,"product_type":"c1","uid":1515527,"ip_address":"","ucode":"51552154DC315C","user_header":"https://static001.geekbang.org/account/avatar/00/17/20/07/9d793a1b.jpg","comment_is_top":false,"comment_ctime":1592801257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592801257","product_id":100033601,"comment_content":"＂在一个变量定义之前使用它，不会出错，但是该变量的值会为 undefined，而不是定义时的值。＂<br><br>这句话说的不够严谨吧，这种变量声明提升，仅限于使用 var 的情况，使用let&#47;const就会直接报错了。","like_count":0},{"had_liked":false,"id":227803,"user_name":"Mark24","can_delete":false,"product_type":"c1","uid":1380059,"ip_address":"","ucode":"DC7A9B925C4236","user_header":"https://static001.geekbang.org/account/avatar/00/15/0e/db/8ca62cb5.jpg","comment_is_top":false,"comment_ctime":1592484779,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592484779","product_id":100033601,"comment_content":"羡慕作者的优秀，解答了我好多疑惑。继续看","like_count":0},{"had_liked":false,"id":223981,"user_name":"Vfeelit","can_delete":false,"product_type":"c1","uid":1501818,"ip_address":"","ucode":"F3FF2B069F347F","user_header":"https://static001.geekbang.org/account/avatar/00/16/ea/7a/d857723d.jpg","comment_is_top":false,"comment_ctime":1591248426,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591248426","product_id":100033601,"comment_content":"对本节内容的疑问（希望可以得到答复）：<br>函数执行，对函数进行编译，编译时产生执行上下文，如果函数执行完后再执行一次，这时函数会再编译一次？如果不会，那么在执行的时候，函数的上下文如何产生的？","like_count":0},{"had_liked":false,"id":217736,"user_name":"斌珏","can_delete":false,"product_type":"c1","uid":1475822,"ip_address":"","ucode":"47B05F3B1F172F","user_header":"https://static001.geekbang.org/account/avatar/00/16/84/ee/6ac4e28c.jpg","comment_is_top":false,"comment_ctime":1589599225,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589599225","product_id":100033601,"comment_content":"老师，我有一个疑问，函数声明是在词法环境，var 定义的函数表达式在变量环境中，不知道对不对，我看了规格文档。VariableEnvironment ：Identifies the Environment Record that holds bindings created by VariableStatements within this execution context.","like_count":0,"discussions":[{"author":{"id":2801818,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/c0/9a/c2217ef2.jpg","nickname":"asdfghjkl","note":"","ucode":"6941A96865949B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408788,"discussion_content":"你确定？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635324413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208292,"user_name":"gnat35","can_delete":false,"product_type":"c1","uid":1205180,"ip_address":"","ucode":"32F13B54C5AF92","user_header":"https://static001.geekbang.org/account/avatar/00/12/63/bc/df9b52e6.jpg","comment_is_top":false,"comment_ctime":1587317985,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587317985","product_id":100033601,"comment_content":"变量提升也可以算作js的糟粕了，不会还有人用 var 吧","like_count":0,"discussions":[{"author":{"id":2801818,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/c0/9a/c2217ef2.jpg","nickname":"asdfghjkl","note":"","ucode":"6941A96865949B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408782,"discussion_content":"不用但是需要知道，不然错了都不知道怎么回事\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635323788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204660,"user_name":"四五六七八","can_delete":false,"product_type":"c1","uid":1624856,"ip_address":"","ucode":"72E495897F73E2","user_header":"https://static001.geekbang.org/account/avatar/00/18/cb/18/aa72cc77.jpg","comment_is_top":false,"comment_ctime":1586438462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586438462","product_id":100033601,"comment_content":"同名的函数，后面的覆盖前面的<br>变量和函数同名，变量被忽略","like_count":0},{"had_liked":false,"id":203768,"user_name":"沧海一声笑","can_delete":false,"product_type":"c1","uid":1039904,"ip_address":"","ucode":"5297F2F4736B63","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","comment_is_top":false,"comment_ctime":1586264832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586264832","product_id":100033601,"comment_content":"我有一个问题 函数上下文是函数调用就被创建 还是编译阶段创建的","like_count":0},{"had_liked":false,"id":203622,"user_name":"小尾巴","can_delete":false,"product_type":"c1","uid":1075975,"ip_address":"","ucode":"31B76F55A11A9B","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/07/23aa0f42.jpg","comment_is_top":false,"comment_ctime":1586242321,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586242321","product_id":100033601,"comment_content":"结合老师讲的这一节，在去参考《你不知道的JavaScript · 上卷》中关于词法那一节一起看，会对这一块理解的更加深入","like_count":0},{"had_liked":false,"id":197408,"user_name":"阿郑","can_delete":false,"product_type":"c1","uid":1495155,"ip_address":"","ucode":"BBAC6BFCAFC762","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/73/06ed7823.jpg","comment_is_top":false,"comment_ctime":1585374541,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585374541","product_id":100033601,"comment_content":"思考题：由于变量提升的存在，代码编译后大概会是这个样子：<br>var showName = undefined<br>function showName(){<br>   console.log(1)<br>}<br><br>showName()<br>showName  = function(){<br>  console.log(2)<br>}<br>因此最终打印出来的结果是：1","like_count":0,"discussions":[{"author":{"id":2870651,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/cd/7b/8746601e.jpg","nickname":"Geek_970d0f","note":"","ucode":"BCF5032196C5CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540762,"discussion_content":"这个是不对的吧 会报错showname不是一个函数编译阶段变量提升后 showname被赋值了undefined","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640154159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192525,"user_name":"Nowki","can_delete":false,"product_type":"c1","uid":1379638,"ip_address":"","ucode":"8BAB9136C8F333","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DHDKIclaxBO9KpDvg6qOkZfr9o0e42YP9mQT1tAKYEnDqMo1SddJkIvB3EK2ILtq28K3Xe7jYGhXqmrTey4A4w/132","comment_is_top":false,"comment_ctime":1584857344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584857344","product_id":100033601,"comment_content":"在编译阶段下，同名的变量声明和函数声明，函数声明优先级高于变量声明","like_count":0},{"had_liked":false,"id":189957,"user_name":"FreezeSoul","can_delete":false,"product_type":"c1","uid":1015930,"ip_address":"","ucode":"0B67142C4EA3D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/7a/02fdf1a2.jpg","comment_is_top":false,"comment_ctime":1584585511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584585511","product_id":100033601,"comment_content":"哪里能找到v8的伪实现","like_count":0},{"had_liked":false,"id":189085,"user_name":"Woosang","can_delete":false,"product_type":"c1","uid":1220919,"ip_address":"","ucode":"BB63C9F1BBDF61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/CJYUnMtcdu7GdMGxzVicTYpfsbhTKzrCIpoLIJxn8ByWsq1ol35RZLe1u4eWJpFhGK7ISpee2slWYokn0vBicw7A/132","comment_is_top":false,"comment_ctime":1584454894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584454894","product_id":100033601,"comment_content":"输出1.  因为变量提升，同名函数覆盖了。","like_count":0},{"had_liked":false,"id":187353,"user_name":"15118015157","can_delete":false,"product_type":"c1","uid":1264896,"ip_address":"","ucode":"FD3074B4A24DBC","user_header":"","comment_is_top":false,"comment_ctime":1584089836,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584089836","product_id":100033601,"comment_content":"定义两个同名函数，第二个会覆盖第一个。<br>请问，定义两个同名变量呢？<br><br>var showName = function () { console.log(2) }<br>function showName() {<br>    console.log(1)<br>}<br>showName()<br><br>上面代码执行结果是2，为什么呢？<br><br>var showName = function () {<br>    console.log(&quot;af&quot;)<br>}<br>showName();<br><br>var showName = function () {<br>    console.log(&quot;af2&quot;)<br>}<br>showName();<br><br>上 main代码分别执行了两个函数，又是为什么呢？ 变量可以重复定义吗？","like_count":0,"discussions":[{"author":{"id":1377365,"avatar":"https://static001.geekbang.org/account/avatar/00/15/04/55/19943864.jpg","nickname":"要迅","note":"","ucode":"B2A75EF8090FFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287867,"discussion_content":"不是重复定义，定义了一个，但是两次执行的时候赋值是不一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593573673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185243,"user_name":"慢慢来的比较快","can_delete":false,"product_type":"c1","uid":1387527,"ip_address":"","ucode":"268B638E9B6688","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/07/636a47cd.jpg","comment_is_top":false,"comment_ctime":1583545167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583545167","product_id":100033601,"comment_content":"<br>function outer(){<br>    conosole.log(&#39;outer&#39;)<br>    test();<br>    inner();<br><br>    function inner(){<br>        conosole.log(&#39;inner&#39;)<br>    }<br>}<br><br>function test(){<br>    conosole.log(&#39;test&#39;)<br>}<br><br>老师，js是先编译后执行，比如上面的代码，js执行前，outer函数内部的inner会编译吗？还是说outer函数执行到inner()的时候，再先编译inner后执行inner函数吗？","like_count":0},{"had_liked":false,"id":175747,"user_name":"戡玉","can_delete":false,"product_type":"c1","uid":1162123,"ip_address":"","ucode":"398F0C0367E795","user_header":"https://static001.geekbang.org/account/avatar/00/11/bb/8b/028bbe52.jpg","comment_is_top":false,"comment_ctime":1580816677,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580816677","product_id":100033601,"comment_content":"老师，看到这里，真的想大赞你，讲解的实在太棒了！我之前看过很多js底层和基础的文章和教程，都没有这种图形化，深入浅出。我看了你的然后对照之前的知识笔记思考，感觉很多东西都非常通透了，你这个教程真是超值，非常感谢！","like_count":0},{"had_liked":false,"id":170082,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1578524732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578524732","product_id":100033601,"comment_content":"编译阶段，var showName 经历变量提升，所以声明后赋值showName为undefined，然后js引擎发现一个通过function定义的showName函数，于是放入Heap中，然后将函数的地址存在变量对象中，调用showName函数时候，从变量对象中查找，发现指向heap中的showName函数，最终输出1","like_count":0},{"had_liked":false,"id":167544,"user_name":"小童","can_delete":false,"product_type":"c1","uid":1763395,"ip_address":"","ucode":"300444B520E79D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e8/43/f9c0faed.jpg","comment_is_top":false,"comment_ctime":1577852516,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577852516","product_id":100033601,"comment_content":"编译阶段:<br> 第2行:var 变量声明 showName存到变量环境并赋值underfined;<br>第5行:函数定义 到时在变量环境中存在了，覆盖掉变量环境现在存在的是函数了。<br>执行阶段:<br>结果执行为1","like_count":0,"discussions":[{"author":{"id":1895345,"avatar":"","nickname":"Geek_0dfece","note":"","ucode":"AAFF0A2652536C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194840,"discussion_content":"现在变量环境存在的是函数showName，且是输出1的，那为什么他们说再次执行showname()会输出2？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583244175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163548,"user_name":"咕盟","can_delete":false,"product_type":"c1","uid":1625253,"ip_address":"","ucode":"8A1C8BCABF5DAD","user_header":"https://static001.geekbang.org/account/avatar/00/18/cc/a5/4c7680d2.jpg","comment_is_top":false,"comment_ctime":1576742143,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576742143","product_id":100033601,"comment_content":"你好，老师，为什么我在控制台会打印出 1 和 undefined ，会多出一个undefined呢？","like_count":0,"discussions":[{"author":{"id":1745340,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a1/bc/b67f2d6e.jpg","nickname":"ssh","note":"","ucode":"A08E0B0F15AC96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102004,"discussion_content":"因为你的function没有返回值， 所以console 会打印undefined","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577321661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160775,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1059952,"ip_address":"","ucode":"F70511D614B9F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/70/02b627a6.jpg","comment_is_top":false,"comment_ctime":1576031581,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1576031581","product_id":100033601,"comment_content":"请教老师一个问题。结合后面的课程《14 | 编译器和解释器：V8是如何执行一段JavaScript代码的？》，这个变量提升，是在哪个阶段完成的呢？是源代码到AST阶段，还是AST阶段到字节码阶段呢？还是会把变量提升看成是热点代码，编译成了机器码？","like_count":0,"discussions":[{"author":{"id":1435019,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e5/8b/7c1f2b19.jpg","nickname":"卡西","note":"","ucode":"3D48F58D7C8461","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":99676,"discussion_content":"在生成AST后, 会创建执行上下文, 这个时候会扫描内部变量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577201945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2815130,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f4/9a/2293fe04.jpg","nickname":"Codfish","note":"","ucode":"DC7D2DC5AFF9C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1435019,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e5/8b/7c1f2b19.jpg","nickname":"卡西","note":"","ucode":"3D48F58D7C8461","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556806,"discussion_content":"你好，有相关资料或者文章么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647520971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":99676,"ip_address":""},"score":556806,"extra":""}]}]},{"had_liked":false,"id":157907,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575280691,"is_pvip":false,"replies":[{"id":"60519","content":"v8最开始是直接生成二进制，后面在移动设备上暴露了出来了很多问题，所以又改成先生成中间的字节码，在基于字节码直接！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1575290352,"ip_address":"","comment_id":157907,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1575280691","product_id":100033601,"comment_content":"&#39;先是生成字节码，然后解释器可以直接执行字节码，输出结果。&#39;我记忆中V8引擎好像比以前的更快一些，直接二进制","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476571,"discussion_content":"v8最开始是直接生成二进制，后面在移动设备上暴露了出来了很多问题，所以又改成先生成中间的字节码，在基于字节码直接！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575290352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1328142,"avatar":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","nickname":"-_-|||","note":"","ucode":"94B21594658BF9","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71554,"discussion_content":"今天正好看见类似文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575432703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157878,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575275616,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1575275616","product_id":100033601,"comment_content":"‘一段 JavaScript 代码在执行之前需要被 JavaScript 引擎编译，编译完成之后，才会进入执行阶段。’javascript不是一种解释形语言吗？它会把整段代码都编译吗，解释形语言不是一句一句解释完在编译吗，那这样就又有问题了，真是解释形的怎么保证变量提升？","like_count":0},{"had_liked":false,"id":157466,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1575170294,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575170294","product_id":100033601,"comment_content":"首先编译阶段，变量showName在声明阶段被定义为undefined，然后如果没有下面的showName的function声明，上述代码在执行到第二行的时候会报错，TypeError: showName is not a function，但因为有第5行代码的原因，在变量环境对象中声明的showName被替换为showName function，所以最终结果为 打印 1","like_count":0},{"had_liked":false,"id":150352,"user_name":"kvsjsm","can_delete":false,"product_type":"c1","uid":1711954,"ip_address":"","ucode":"A77CB68DF0DA5E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1f/52/9e12d6b3.jpg","comment_is_top":false,"comment_ctime":1573522385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573522385","product_id":100033601,"comment_content":"    showName();<br>    var showName=function(){<br>        console.log(1);<br>    }<br><br>    showName();<br>    function showName(){<br>        console.log(2);<br>    }<br><br>    showName();<br>    function showName(){<br>        console.log(3);<br>    }<br>    showName();<br>\t&#47;&#47;执行结果 3 1 1 1<br>\t<br>\t变量提升，上下文中中的定义是 <br>\tVariableEnvironment:<br>\tshowName -&gt; undefined, &#47;&#47;此条去掉，被忽略<br>\tshowName -&gt;function : {console.log(2)&#47;&#47;此条去掉，被覆盖<br>\tshowName -&gt;function : {console.log(3)<br>\t<br>\t<br>\t<br>\t剩下执行的代码是：<br>\t&#47;&#47;调用函数 function : {console.log(3)<br>\tshowName(); &#47;&#47;3<br>\t<br>\t&#47;&#47;变量赋值，上下文中将showName -&gt;function : {console.log(3)替换成function(){console.log(1);}<br>\tshowName=function(){<br>        console.log(1);<br>    }<br>\t&#47;&#47;调用变量对应的函数指针<br>\tshowName();&#47;&#47;1<br>\tshowName();&#47;&#47;1<br>\tshowName();&#47;&#47;1","like_count":0},{"had_liked":false,"id":146338,"user_name":"Geek_a73745","can_delete":false,"product_type":"c1","uid":1697137,"ip_address":"","ucode":"BA1837992EFA4E","user_header":"","comment_is_top":false,"comment_ctime":1572502707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572502707","product_id":100033601,"comment_content":"声音挺好听啊","like_count":0},{"had_liked":false,"id":136270,"user_name":"钓人的鱼","can_delete":false,"product_type":"c1","uid":1663106,"ip_address":"","ucode":"FB437B918E5868","user_header":"https://static001.geekbang.org/account/avatar/00/19/60/82/1d8c8c27.jpg","comment_is_top":false,"comment_ctime":1569400996,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569400996","product_id":100033601,"comment_content":"老师那请问这个怎么理解<br>(function() {<br><br>    var x=foo();<br><br>    var foo=function foo() {<br>        return &quot;foobar&quot;<br>    };<br>    return x;<br>})();<br><br>老师你说“如果变量和函数同名，那么在编译阶段，变量的声明会被忽略” 编译阶段，变量的声明会被忽略，但是为什么这样搞 会报错说 foo不是一个函数？难道成为一个变量了吗？","like_count":0,"discussions":[{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287069,"discussion_content":"因为你在var x=foo();这行执行foo()的时候，foo是经过变量提升，还是undefined。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593356855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134983,"user_name":"米酒","can_delete":false,"product_type":"c1","uid":1625194,"ip_address":"","ucode":"6D82A83D2EE88C","user_header":"https://static001.geekbang.org/account/avatar/00/18/cc/6a/64bf4868.jpg","comment_is_top":false,"comment_ctime":1568968727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568968727","product_id":100033601,"comment_content":"函数声明和变量声明的提升有先后顺序吗？","like_count":0},{"had_liked":false,"id":134032,"user_name":"断了线的风筝","can_delete":false,"product_type":"c1","uid":1211764,"ip_address":"","ucode":"6A292399F40FD2","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoGKMvtK8GTC5Adfd1lXyh0F3KupISPWLryjefVMAPOWgf83HXLrDh6EO1MKoPfib6VibtjjjbPib1A/132","comment_is_top":false,"comment_ctime":1568724475,"is_pvip":false,"replies":[{"id":"51406","content":"看域名，第七个请求的域名和前面六个是同一个域名的话，那么会的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1568737581,"ip_address":"","comment_id":134032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568724475","product_id":100033601,"comment_content":"chrome浏览器如果出现6个请求pending,第7个请求会pending吗","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467591,"discussion_content":"看域名，第七个请求的域名和前面六个是同一个域名的话，那么会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568737581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133219,"user_name":"渡鸦","can_delete":false,"product_type":"c1","uid":1131095,"ip_address":"","ucode":"C76B10CBDCBBE1","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/57/111fdb41.jpg","comment_is_top":false,"comment_ctime":1568449056,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1568449056","product_id":100033601,"comment_content":"最后一道题：函数优先法则","like_count":0},{"had_liked":false,"id":130658,"user_name":"阿桐","can_delete":false,"product_type":"c1","uid":1160167,"ip_address":"","ucode":"E82211BD6E9E89","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/e7/227ee616.jpg","comment_is_top":false,"comment_ctime":1567502738,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567502738","product_id":100033601,"comment_content":"老师，关于变量提升和编译阶段的关系我理解的对吗？<br><br>在编译阶段，在内存中，JS引擎会先把变量的声明和函数的声明前置到代码的开头，所有变量提升的工作完成后，JS引擎会把变量的声明和函数的声明放到执行上下文的变量环境中，把那些非声明语句如赋值语句比较语句等代码放到可执行代码中，相当于在内存中把JS源码一分为二，即编译后得到执行上下文和可执行代码？","like_count":0,"discussions":[{"author":{"id":1651618,"avatar":"https://static001.geekbang.org/account/avatar/00/19/33/a2/585be249.jpg","nickname":"草原上的骆驼🐫","note":"","ucode":"F0B12CB1FEED84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12940,"discussion_content":"我觉得不是这样子的吧，执行上下文中只保存变量提升后的引用（当然是对对象和函数这种复杂的数据类型），引用指向堆中的函数的具体的逻辑部分。根据下一章的讲解来说，执行上下文应该是一种栈的运行机制。这样也就符合了javascript变量的保存机制了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568615888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128880,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1566979741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566979741","product_id":100033601,"comment_content":"老师，有两个问题：<br>问题1: 文中将到的“字节码”与“可执行代码”是同一个概念吗？JS脚本是直接解释执行“字节码”而不是预先生成目标机器码执行的对吗？<br><br>问题2: <br><br>如下代码：<br><br>&lt;script type=&quot;text&#47;javascript&quot;&gt;<br><br>\tvar username1 = &quot;name1&quot;; &#47;&#47;通过var<br><br>\tusername2 = &quot;name2&quot;;&#47;&#47;没有通过var<br><br><br><br>        console.log(window.username1); &#47;&#47; 输出：name1<br><br>\tconsole.log(username1);        &#47;&#47; 输出：name1<br><br>\tconsole.log(window.username2); &#47;&#47; 输出：name2\t\t<br><br>\tconsole.log(username2);        &#47;&#47; 输出：name2<br><br><br><br>\tdelete username1;<br><br>\tdelete username2;<br><br><br><br>\tconsole.log(window.username1); &#47;&#47; 输出：name1<br><br>\tconsole.log(username1);        &#47;&#47; 输出：name1<br><br>\tconsole.log(window.username2); &#47;&#47; 输出：undefined<br><br>\tconsole.log(username2);        &#47;&#47; 输出：Uncaught ReferenceError: username2 is not defined<br><br>1、文中提到的环境对象，在上述代码中是否🈯️的是window对象？声明变量就是在window对象中创建属性？<br><br>2、使用var和不使用var声明的变量有什么区别？是否都是在window对象中创建一个属性？只不过使用var创建的属性不能被delete，是在编译阶段创建，而没有使用var是在运行阶段做赋值操作时，发现没有此变量，再动态创建出变量，此变量可以被delete？<br><br>3、使用window.username2和username2访问变量的方式有什么不同？为何当变量被delete操作后，使用window.username2访问输出：undefined，而使用username2访问输出的却是：Uncaught ReferenceError: username2 is not defined?","like_count":0},{"had_liked":false,"id":127287,"user_name":"tick","can_delete":false,"product_type":"c1","uid":1106123,"ip_address":"","ucode":"D2C864306C06CB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","comment_is_top":false,"comment_ctime":1566635350,"is_pvip":false,"replies":[{"id":"47142","content":"这个我们后面会详细讲，涉及到堆，栈了，简单地理解，JavaScript中原生类型会保存在栈区，对象类型会保存在堆区，函数属于对象，所以会保存在堆中，但是在栈中有堆中对象的引用。<br><br>替换话就是指向另外一个函数对象","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566657680,"ip_address":"","comment_id":127287,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566635350","product_id":100033601,"comment_content":"变量环境中的同名函数替换是怎么替换呢？函数定义保存在执行堆中，那么函数定义怎么替换呀，会不会出现溢出什么的，还是说只是指向执行堆的指针值换掉，那么是不是在执行堆中就有两份函数定义呢？老师，这个能详细说吗？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464416,"discussion_content":"这个我们后面会详细讲，涉及到堆，栈了，简单地理解，JavaScript中原生类型会保存在栈区，对象类型会保存在堆区，函数属于对象，所以会保存在堆中，但是在栈中有堆中对象的引用。\n\n替换话就是指向另外一个函数对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566657680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736772,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/80/44/921939d4.jpg","nickname":"陈玉龙","note":"","ucode":"D9301234532FB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":58084,"discussion_content":"堆中前一个没有被引用的函数定义，这个堆内存应该会被浏览器释放掉吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574651480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126736,"user_name":"木棉","can_delete":false,"product_type":"c1","uid":1084629,"ip_address":"","ucode":"8A637B7435BF24","user_header":"https://static001.geekbang.org/account/avatar/00/10/8c/d5/398b31fe.jpg","comment_is_top":false,"comment_ctime":1566460268,"is_pvip":false,"replies":[{"id":"46867","content":"其它没问题，变量提升后变量环境中只有一个showName，你这里写了两个，这个需要注意下","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566466454,"ip_address":"","comment_id":126736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566460268","product_id":100033601,"comment_content":"showName()<br>function showName(){<br>    console.log(1)<br>}<br>var showName=function(){<br>    console.log(2)<br>}<br>showName()<br>首先：变量提升：var showName = undefined;<br>                        function showName(){console.log(1)}<br>其次：执行阶段：变量showName被赋值成为一个函数，这个函数会把变量环境里的那个showName覆盖掉，所以第二次showName()执行的时候就变成了2。<br>老师，这样理解对吗？<br>我的疑问是现在变量环境里只剩下了showName函数吗？<br>             ","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464139,"discussion_content":"其它没问题，变量提升后变量环境中只有一个showName，你这里写了两个，这个需要注意下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566466454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126496,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1566395610,"is_pvip":true,"replies":[{"id":"46789","content":"Google“nodejs 查看字节码”","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566425964,"ip_address":"","comment_id":126496,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1566395610","product_id":100033601,"comment_content":"老师，想查看编译阶段生成的字节码，有什么工具可以查看吗？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464016,"discussion_content":"Google“nodejs 查看字节码”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566425964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126360,"user_name":"nico@佳","can_delete":false,"product_type":"c1","uid":1471182,"ip_address":"","ucode":"64C15750419ED8","user_header":"https://static001.geekbang.org/account/avatar/00/16/72/ce/daa0ba17.jpg","comment_is_top":false,"comment_ctime":1566371501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566371501","product_id":100033601,"comment_content":"老师，你好，最近遇到个奇怪的问题，本机所有浏览器打开任何支持h2的网页的时候，都不会显示h2（但是通过vpn方式访问页面都可以），目前感觉可能是被ssl劫持了，https:&#47;&#47;www.zhihu.com&#47;question&#47;341879704&#47;answer&#47;796884677，想请问一下是否遇到过，能否指点下如何解决","like_count":0},{"had_liked":false,"id":126166,"user_name":"蓝配鸡","can_delete":false,"product_type":"c1","uid":1348738,"ip_address":"","ucode":"C79A7CA8885B7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/82/d0a417ba.jpg","comment_is_top":false,"comment_ctime":1566345248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566345248","product_id":100033601,"comment_content":"先编译, 变量环境中加入声明<br>Var showname = undefined <br>覆盖showname <br>Function showname(){...}<br><br>最后执行2行语句<br>showname() 输出 1<br>showname = function (){console.log(2)}<br><br>","like_count":0},{"had_liked":false,"id":126098,"user_name":"林高鸿","can_delete":false,"product_type":"c1","uid":1008474,"ip_address":"","ucode":"34AD2C0A7542AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/5a/4ec96cfe.jpg","comment_is_top":false,"comment_ctime":1566312721,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566312721","product_id":100033601,"comment_content":"或者说 Hosting 意义在哪呢？","like_count":0,"discussions":[{"author":{"id":1625541,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/icFUUvDyRafSKYH1VWzFuqJq7QD3kQWY8l2r0TZQuzwjDdNSLMFibicx6oMP6Fw7TlYfb73VvicYtlrqH0XQxLHuxA/132","nickname":"xupea","note":"","ucode":"485970C096C3D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6585,"discussion_content":"编译器实现的需要，因为执行之前事先要知道所有的变量和函数，然后才开始真正执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566984762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126085,"user_name":"王家麦子","can_delete":false,"product_type":"c1","uid":1622990,"ip_address":"","ucode":"0DC75134E8158F","user_header":"https://static001.geekbang.org/account/avatar/00/18/c3/ce/4e78783b.jpg","comment_is_top":false,"comment_ctime":1566309273,"is_pvip":false,"replies":[{"id":"46496","content":"插件通常都是使用c&#47;c++来编写的，不过现在的浏览器已经逐渐抛弃插件了，比如明年Chrome就会停止支持flash插件了。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566348745,"ip_address":"","comment_id":126085,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1566309273","product_id":100033601,"comment_content":"请教老师，前端是否可以自己实现插件，占用独立的浏览器进程呢？用什么方式实现？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463820,"discussion_content":"插件通常都是使用c/c++来编写的，不过现在的浏览器已经逐渐抛弃插件了，比如明年Chrome就会停止支持flash插件了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566348745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1648684,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJgOquToDkqbe2ZZAs1sK7ictjJreIjjzibcPPB4Cq0hoVSfQ2SKb2sQiaJ4zGJ8WmzickBIp9tzibEdtw/132","nickname":"Geek_992819","note":"","ucode":"9AA66B692F9108","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21603,"discussion_content":"ppapi， npapi了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569503676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625541,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/icFUUvDyRafSKYH1VWzFuqJq7QD3kQWY8l2r0TZQuzwjDdNSLMFibicx6oMP6Fw7TlYfb73VvicYtlrqH0XQxLHuxA/132","nickname":"xupea","note":"","ucode":"485970C096C3D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6581,"discussion_content":"Extensions 也是可以的吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566984390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126065,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1566304053,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1566304053","product_id":100033601,"comment_content":"看了老师的课，是不是就可以去和前端pk了啊😄","like_count":0,"discussions":[{"author":{"id":1273044,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/d4/85ef1463.jpg","nickname":"路漫漫","note":"","ucode":"F70F1DC612DE9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531869,"discussion_content":"不会的，前端也在看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637431195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625541,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/icFUUvDyRafSKYH1VWzFuqJq7QD3kQWY8l2r0TZQuzwjDdNSLMFibicx6oMP6Fw7TlYfb73VvicYtlrqH0XQxLHuxA/132","nickname":"xupea","note":"","ucode":"485970C096C3D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6586,"discussion_content":"看懂了老师的课程，你可以PK掉至少80%的前端人员","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566984831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125978,"user_name":"林展翔","can_delete":false,"product_type":"c1","uid":1254011,"ip_address":"","ucode":"F1EA834AB9E758","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/7b/f8736786.jpg","comment_is_top":false,"comment_ctime":1566288220,"is_pvip":false,"replies":[{"id":"46433","content":"第一个问题：在执行阶段对变量赋值会修改变量环境中的值的<br><br>第二个问题：每个阶段都有一定优化策略，要看具体情况而定","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566303674,"ip_address":"","comment_id":125978,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566288220","product_id":100033601,"comment_content":"老师可以问几个问题吗:<br>1. 编译过程中, 会生成对应的执行上下文以及执行代码, 若在执行代码中对变量的操作是会对执行上下文进行修改吗?<br>2. 编译与执行 JS 过程中可能会存在需要优化的地方, 那这个优化过程是处于执行之前还是在执行之后?","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463771,"discussion_content":"第一个问题：在执行阶段对变量赋值会修改变量环境中的值的\n\n第二个问题：每个阶段都有一定优化策略，要看具体情况而定","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566303674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125939,"user_name":"潮汐","can_delete":false,"product_type":"c1","uid":1042208,"ip_address":"","ucode":"F5E4F6DF9CEA9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/20/70a95f94.jpg","comment_is_top":false,"comment_ctime":1566277956,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1566277956","product_id":100033601,"comment_content":"其实这里是不是还有个变量提升和函数提升的权重问题？<br>var showName = function () {}<br>function showName(){} <br>无论是问题中的顺序还是交换这两条语句的顺序，他俩的编译阶段提升后的顺序都是：（而且如果把showName=1，执行showName()也并不报showName is not a function 的错）<br>var showName = undefined<br>function showName(){}<br>原因就是函数声明的权重会比变量声明的权重高（编译时会先进行变量声明的提升再是函数声明的提升的编译）<br>","like_count":0},{"had_liked":false,"id":125931,"user_name":"小兵","can_delete":false,"product_type":"c1","uid":1261674,"ip_address":"","ucode":"AA3BA727C25179","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/6a/ab1cf396.jpg","comment_is_top":false,"comment_ctime":1566276156,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566276156","product_id":100033601,"comment_content":"输出结果是1，我想问一下编译阶段会不会存放两个函数，一个是没有变量指向的，也就是第二行定义的函数体，一个是showName指向的函数体。然后执行到第二行的时候才会将showName的变量指向之前没有指向的函数体。","like_count":0},{"had_liked":false,"id":125916,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566271188,"is_pvip":false,"replies":[{"id":"46434","content":"对 这个涉及到词法环境，后面会介绍","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566303815,"ip_address":"","comment_id":125916,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566271188","product_id":100033601,"comment_content":"在ES6中，let const 声明变量，不允许在声明前使用，会形成暂时性死区。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463748,"discussion_content":"对 这个涉及到词法环境，后面会介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566303815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125912,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566271107,"is_pvip":false,"replies":[{"id":"46495","content":"嗯 谢谢纠正","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566348595,"ip_address":"","comment_id":125912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566271107","product_id":100033601,"comment_content":"老师这一节讲得很好，虽然是很基础的内容，但是文中的配图确实很不错。<br>指出老师朗读的一个问题，就是undefined的发音。<br>跟着老师一起精进。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463746,"discussion_content":"嗯 谢谢纠正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566348595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125900,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1123243,"ip_address":"","ucode":"E050E14BA0D115","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/ab/dca51819.jpg","comment_is_top":false,"comment_ctime":1566269965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566269965","product_id":100033601,"comment_content":"编译阶段 <br>function showName() {<br>    console.log(1)<br>}<br>执行阶段 <br>showName()<br>var showName = function() {<br>    console.log(2)<br>}<br><br>输出1 <br>","like_count":0},{"had_liked":false,"id":125791,"user_name":"小锅锅","can_delete":false,"product_type":"c1","uid":1623119,"ip_address":"","ucode":"A6E87261955BDB","user_header":"https://static001.geekbang.org/account/avatar/00/18/c4/4f/fdd51040.jpg","comment_is_top":false,"comment_ctime":1566261003,"is_pvip":false,"replies":[{"id":"46798","content":"如果同时出现函数声明和变量声明，编译过程中，优先使用函数","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566427557,"ip_address":"","comment_id":125791,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566261003","product_id":100033601,"comment_content":"                showName()&#47;&#47;输出1<br>\t\tvar showName = function() {<br>\t\t    console.log(2)<br>\t\t}<br>\t\tfunction showName() {<br>\t\t    console.log(1)<br>\t\t}<br>\t\tshowName();&#47;&#47;输出2<br>这里第二个函数体为什么不会覆盖第一个由变量赋值的函数呢？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463694,"discussion_content":"如果同时出现函数声明和变量声明，编译过程中，优先使用函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566427557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625541,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/icFUUvDyRafSKYH1VWzFuqJq7QD3kQWY8l2r0TZQuzwjDdNSLMFibicx6oMP6Fw7TlYfb73VvicYtlrqH0XQxLHuxA/132","nickname":"xupea","note":"","ucode":"485970C096C3D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6589,"discussion_content":"个人感觉函数的优先，有可能说明了函数提升是当时设计的初衷，但没想到还有一个副作用变量也提升了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566985304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125731,"user_name":"万字辈儿老小","can_delete":false,"product_type":"c1","uid":1375205,"ip_address":"","ucode":"79C38C2BE46CA1","user_header":"https://static001.geekbang.org/account/avatar/00/14/fb/e5/f4ef76b3.jpg","comment_is_top":false,"comment_ctime":1566237898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566237898","product_id":100033601,"comment_content":"沙发","like_count":0},{"had_liked":false,"id":125730,"user_name":"wuqilv","can_delete":false,"product_type":"c1","uid":1169314,"ip_address":"","ucode":"B9C4A2C2FF32AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/a2/5f6b90a9.jpg","comment_is_top":false,"comment_ctime":1566236378,"is_pvip":false,"replies":[{"id":"46178","content":"分析完全没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566260690,"ip_address":"","comment_id":125730,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566236378","product_id":100033601,"comment_content":"输出 1<br><br>提升部分代码<br>var showName = undefined<br>function showName() {<br>   console.log(1)<br>}<br><br>执行部分代码<br>showName()<br>showName = function() {<br>   console.log(2)<br>}","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463676,"discussion_content":"分析完全没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566260690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1753960,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/c3/68/69404846.jpg","nickname":"糖醋草莓皮","note":"","ucode":"C16330334C2C2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361064,"discussion_content":"<!DOCTYPE html>\n<html lang=&#34;en&#34;>\n  <body>\n    <h1>这是第一段html文字</h1>\n    <h1>这是第二段html文字</h1>\n    <h1>这是第三段html文字</h1>\n  </body>\n  <script>\n    document.addEventListener(&#34;DOMContentLoaded&#34;, () =>\n      alert(&#34;DOM ready after defer!&#34;)\n    );\n\n    let startOne = Date.now();\n    console.log(&#34;-------------------------------------&#34;);\n    console.log(&#34;DOM渲染完成,但是没有绘制到屏幕上 js执行开始&#34;);\n    console.time(&#34;one&#34;);\n    while (Date.now() - startOne <= 10000) {}\n    console.log(&#34;js执行结束,渲染线程继续,屏幕开始变化&#34;);\n    console.timeEnd(&#34;one&#34;);\n  </script>\n</html>\n\n想问一下老师 为什么js放在最后引入还是阻塞了渲染呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616590684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}