{"id":169545,"title":"04丨网络编程原理：一个字符的互联网之旅","content":"<p>我们开发的面向普通用户的应用程序，目前看来几乎都是互联网应用程序，也就是说，用户操作的应用程序，不管是浏览器还是移动App，核心请求都会通过互联网发送到后端的数据中心进行处理。这个数据中心可能是像微信这样的自己建设的、在多个地区部署的大规模机房，也可能是阿里云这样的云服务商提供的一个虚拟主机。</p><p>但是不管这个数据中心的大小，应用程序都需要在运行期和数据中心交互。比如我们在淘宝的搜索框随便输入一个字符“a”，就会在屏幕上看到一大堆商品。那么我们的手机是如何通过互联网完成这一操作的？这个字符如何穿越遥远的空间，从手机发送到淘宝的数据中心，在淘宝计算得到相关的结果，然后将结果再返回到我们的手机上，从而完成自己的互联网之旅呢？</p><p>虽然我们在编程的时候，很少要自己直接开发网络通信代码，服务器由Tomcat这样的WEB容器管理网络通信，服务间网络通信通过Dubbo这样的分布式服务框架完成网络通信。但是由于我们现在开发的应用主要是互联网应用，它们构建在网络通信基础上，网络通信的问题可能会出现在系统运行的任何时刻。了解网络通信原理，了解互联网应用如何跨越庞大的网络构建起来，对我们开发一个互联网应用系统很有帮助，对我们解决系统运行过程中各种因为网络通信而出现的各种问题更有帮助。</p><!-- [[[read_end]]] --><h2>DNS</h2><p>我们先从DNS说起。</p><p>构成互联网Internet的最基本的网络协议就是互联网协议Internet Protocol，简称IP协议。IP协议里面最重要的部分是IP地址，各种计算机设备之间能够互相通信，首先要能够找到彼此，IP地址就是互联网的地址标识。手机上的淘宝App能够访问淘宝的数据中心，就是知道了淘宝数据中心负责请求接入的服务器的IP地址，然后建立网络连接，进而处理请求数据。</p><p>那么手机上的淘宝App如何知道数据中心服务器的IP地址呢？当然淘宝的工程师可以在App里写死这个IP地址，但是这样做会带来很多问题，比如影响编程的灵活性以及程序的可用性等。</p><p>事实上这个IP地址是通过DNS域名解析服务器得到的。当我们打开淘宝App的时候，淘宝要把App首页加载进来，这时候就需要连接域名服务器进行域名解析，将xxx.taobao.com这样的域名解析为一个IP地址，然后连接目标服务器。</p><p><img src=\"https://static001.geekbang.org/resource/image/b6/9a/b66ab4aad74e047b671f59d9172c9f9a.png?wh=1092*772\" alt=\"\"></p><h2>CDN</h2><p>事实上DNS解析出来的IP地址，并不一定是淘宝数据中心的IP地址，也可能是淘宝CDN服务器的IP地址。</p><p>CDN是内容分发网络Content Delivery Network的缩写。我们能够用手机或者电脑上网，是因为运营服务商为我们提供了互联网接入服务，将我们的手机和电脑连接到互联网上。App请求的数据最先到达的是运营服务商的机房，然后运营商通过自己建设的骨干网络和交换节点，将我们请求数据的目的地址发往互联网的任何地方。</p><p>为了提高用户请求访问的速度，也为了降低数据中心的负载压力，淘宝会在全国各地各个主要的运营服务商的接入机房中部署一些缓存服务器，缓存那些静态的图片、资源文件等，这些缓存服务器构成了淘宝的CDN。</p><p>如果用户请求的数据数据是静态的资源，这些资源的URL通常以image.taobao.com之类的二级域名进行标识，域名解析的时候就会解析为淘宝CDN的IP地址，请求先被CDN处理，如果CDN中有需要的静态文件，就直接返回，如果没有，CDN会将请求发送到淘宝的数据中心，CDN从淘宝数据中心获得静态文件后，一方面缓存在自己的服务器上，一方面将数据返回给用户的App。</p><p><img src=\"https://static001.geekbang.org/resource/image/2d/a4/2da7c834bfadb8aee3325cea78fbd7a4.png?wh=1092*768\" alt=\"\"><br>\n而如果请求的数据是动态的，比如要搜索关键词为“a”的商品列表，请求的域名可能会是search.taobao.com这样的二级域名，就会直接被DNS解析为淘宝的数据中心的服务器IP地址，App请求发送到数据中心处理。</p><h2>HTTP</h2><p>不管发送到CDN还是数据中心，App请求都会以HTTP协议发送。</p><p>HTTP是一个应用层协议，当我们进行网络通信编程的时候，通常需要关注两方面的内容，一方面是应用层的通信协议，主要是我们通信的数据如何编码，既能使网络传输过去的数据携带必要的信息，又使通信的两方都能正确识别这些数据，即通信双方应用程序需要约定一个数据编码协议。另一方面就是网络底层通信协议，即如何为网络上需要通信的两个节点建立连接完成数据传输，目前互联网应用中最主要的就是TCP协议。</p><p>在TCP传输层协议层面，就是保证建立通信两方的稳定通信连接，将一方的数据以bit流的方式源源不断地发送到另一方，至于这些数据代表什么意思，哪里是两次请求的分界点，TCP协议统统不管，需要应用层面自己解决。如果我们基于TCP协议自己开发应用程序，就必须解决这些问题。而互联网应用需要在全球范围为用户提供服务，将全球的应用和全球的用户联系在一起，需要一个统一的应用层协议，这个协议就是HTTP协议。</p><p><img src=\"https://static001.geekbang.org/resource/image/79/50/79d09c6e3cd898f29b7432af5de81a50.png?wh=1836*358\" alt=\"\"><br>\n这张图是HTTP的请求头的例子，包括请求方法和请求头参数。请求方法主要有GET、POST，这是我们最常用的两种，此外还有DELETE、PUT、HEAD、TRACE等几种方法；请求头参数包括缓存控制Cache-Control、响应过期时间Expires、Cookie等等。</p><p>HTTP请求如果是GET方法，那么就只有请求头；如果是POST方法，在请求头之后还有一个body部分，包含请求提交的内容，HTTP会在请求头的Content-Length参数声明body的长度。</p><p><img src=\"https://static001.geekbang.org/resource/image/4e/92/4e396c4b95f22000b5cdd4d6ddc38192.png?wh=1052*490\" alt=\"\"><br>\n这是HTTP响应头的例子，响应头和请求头一样包含各种参数，而status状态码声明响应状态，状态码是200，表示响应正常。</p><p>响应状态码是3XX，表示请求被重定向，常用的302，表示请求被临时重定向到新的URL，响应头中包含新的临时URL，客户端收到响应后，重新请求这个新的URL；状态码是4XX，表示客户端错误，常见的403，表示请求未授权，被禁止访问，404表示请求的页面不存在；状态码是5XX，表示服务器异常，常见的500请求未完成，502请求处理超时，503服务器过载。</p><p>如果响应正常，那么在响应头之后就是响应body，浏览器的响应body通常是一个HTML页面，App的响应body通常是个JSON字符串。</p><h2>TCP</h2><p>应用程序使用操作系统的socket接口进行网络编程，socket里封装了TCP协议。应用程序通过socket接口使用TCP协议完成网络编程，socket或者TCP在应用程序看就是一个底层通信协议，事实上，TCP仅仅是一个传输层协议，在传输层协议之下，还有网络层协议，网络层协议之下还有数据链路层协议，数据链路层协议之下还有物理层协议。</p><p><img src=\"https://static001.geekbang.org/resource/image/ab/9a/ab0f73a9e8aef340dffa7fd64f299d9a.png?wh=274*470\" alt=\"\"><br>\n传输层协议TCP和网络层协议IP共同构成TCP/IP协议栈，成为互联网应用开发最主要的通信协议。OSI开放系统互联模型将网络协议定义了7层，TCP/IP协议栈将OSI顶部三层协议应用层、表示层、会话层合并为一个应用层，HTTP协议就是TCP/IP协议栈中的应用层协议。</p><p><strong>物理层</strong>负责数据的物理传输，计算机输入输出的只能是0 1这样的二进制数据，但是在真正的通信线路里有光纤、电缆、无线各种设备。光信号和电信号，以及无线电磁信号在物理上是完全不同的，如何让这些不同的设备能够理解、处理相同的二进制数据，这就是物理层要解决的问题。</p><p><strong>数据链路层</strong>就是将数据进行封装后交给物理层进行传输，主要就是将数据封装成数据帧，以帧为单位通过物理层进行通信，有了帧，就可以在帧上进行数据校验，进行流量控制。数据链路层会定义帧的大小，这个大小也被称为最大传输单元。</p><p>像HTTP要在传输的数据上添加一个HTTP头一样，数据链路层也会将封装好的帧添加一个帧头，帧头里记录的一个重要信息就是发送者和接受者的mac地址。mac地址是网卡的设备标识符，是唯一的，数据帧通过这个信息确保数据送达到正确的目标机器。</p><p>前面已经提到，<strong>网络层IP协议</strong>使得互联网应用根据IP地址就能访问到淘宝的数据中心，请求离开App后，到达运营服务商的交换机，交换机会根据这个IP地址进行路由转发，可能中间会经过很多个转发节点，最后数据到达淘宝的服务器。</p><p>网络层的数据需要交给链路层进行处理，而链路层帧的大小定义了最大传输单元，网络层的IP数据包必须要小于最大传输单元才能进行网络传输，这个数据包也有一个IP头，主要包括的就是发送者和接受者的IP地址。</p><p>IP协议不是一个可靠的通信协议，并不会确保数据一定送达。要保证通信的稳定可靠，需要<strong>传输层协议TCP</strong>。TCP协议在传输正式数据前，会先建立连接，这就是著名的TCP三次握手。</p><p><img src=\"https://static001.geekbang.org/resource/image/22/2b/22998c116366030bfce5ef4043579a2b.png?wh=756*670\" alt=\"\"><br>\nApp和服务器之间发送三次报文才会建立一个TCP连接，报文中的SYN表示请求建立连接，ACK表示确认。App先发送 SYN=1，Seq=X的报文，表示请求建立连接，X是一个随机数；淘宝服务器收到这个报文后，应答SYN=1，ACK=X+1，Seq=Y的报文，表示同意建立连接；App收到这个报文后，检查ACK的值为自己发送的Seq值+1，确认建立连接，并发送ACK=Y+1的报文给服务器；服务器收到这个报文后检查ACK值为自己发送的Seq值+1，确认建立连接。至此，App和服务器建立起TCP连接，就可以进行数据传输了。</p><p>TCP也会在数据包上添加TCP头，TCP头除了包含一些用于校验数据正确性和控制数据流量的信息外，还包含通信端口信息，一台机器可能同时有很多进程在进行网络通信。如何使数据到达服务器后能发送给正确的进程去处理，就需要靠通信端口进行标识了。HTTP默认端口是80，当然我们可以在启动HTTP应用服务器进程的时候，随便定义一个数字作为HTTP应用服务器进程的监听端口，但是App在请求的时候，必须在URL中包含这个端口，才能在构建的TCP包中记录这个端口，也才能在到达服务器后，被正确的HTTP服务器进程处理。</p><p>如果我们以POST方法提交一个搜索请求给淘宝服务器，那么最终在数据链路层构建出来的数据帧大概是这个样子，这里假设IP数据包的大小没有超过链路层的最大传输单元。</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/8d/2ef260e20f190fed1d03febdea09378d.png?wh=922*526\" alt=\"\"><br>\nApp要发送的数据只是key=\"a\"这样一个JSON字符串，每一层协议都会在上一层协议基础上添加一个头部信息，最后封装成一个链路层的数据帧在网络上传输，发送给淘宝的服务器。淘宝的服务器在收到这个数据帧后，在通信协议的每一层进行校验检查，确保数据准确后，将头部信息删除，再交给自己的上一层协议处理。HTTP应用服务器在最上层，负责HTTP协议的处理，最后将key=\"a\"这个JSON字符串交给淘宝工程师开发的应用程序处理。</p><h2>LB（负载均衡）</h2><p>HTTP请求到达淘宝数据中心的时候，事实上也并不是直接发送给搜索服务器处理。因为对于淘宝这样日活用户数亿的互联网应用而言，每时每刻都有大量的搜索请求到达数据中心，为了使这些海量的搜索请求都能得到及时处理，淘宝会部署一个由数千台服务器组成的搜索服务器集群，共同为这些高并发的请求提供服务。</p><p>因此，搜索请求到达数据中心的时候，首先到达的是搜索服务器集群的负载均衡服务器，也就是说，DNS解析出来的是负载均衡服务器的IP地址。然后，由负载均衡服务器将请求分发到搜索服务器集群中的某台服务器上。</p><p>负载均衡服务器的实现手段有很多种，淘宝这样规模的应用，通常使用Linux内核支持的链路层负载均衡。</p><p><img src=\"https://static001.geekbang.org/resource/image/e0/46/e0cbd3c93b67ed042c786862ede00f46.png?wh=1474*842\" alt=\"\"><br>\n这种负载均衡模式也叫直接路由模式，在负载均衡服务器的Linux操作系统内核拿到数据包后，直接修改数据帧中的mac地址，将其修改为搜索服务器集群中某个服务器的mac地址，然后将数据重新发送回服务器集群所在的局域网，这个数据帧就会被某个真实的搜索服务器接收到。</p><p>负载均衡服务器和集群内的搜索服务器配置相同的虚拟IP地址，也就是说，在网络通信的IP层面，负载均衡服务器变更mac地址的操作是透明的，不影响TCP/IP的通信连接。所以真实的搜索服务器处理完搜索请求，发送应答响应的时候，就会直接发送回请求的App手机，不会再经过负载均衡服务器。</p><h2>小结</h2><p>事实上，这个搜索字符“a”的互联网之旅到这里还没有结束。淘宝搜索服务器程序在收到这个搜索请求的时候，首先在本地缓存中查找是否有对应的搜索结果。如果没有，会将这个搜索请求，也就是这个字符发送给一个分布式缓存集群查找是否有对应的搜索结果。如果还没有，才会将这个请求发送给一个更大规模的搜索引擎集群去查找。</p><p>这些分布式缓存集群或者搜索引擎集群都需要通过RPC远程过程调用的方式进行调用请求，也就是需要通过网络进行服务调用，这些网络服务也都是基于TCP协议进行编程的。</p><p>对于互联网应用，用户请求数据离开手机通过各种网络通信，最后到达数据中心的应用服务器进行最后的计算、处理，中间会经过许多环节，事实上，这些环节就构成了互联网系统的整体架构，所以通过网络通信，可以将整个互联网应用系统串起来，对理解互联网系统的技术架构很有帮助，在程序开发、运行过程中遇到各种网络相关问题，也可以快速分析问题原因，快速解决问题。</p><h2>思考题</h2><p>负载均衡就是将不同的网络请求数据分发到多台服务器上，每台服务器承担一部分请求负载压力，多台服务器共同承担外部并发请求的压力，除了文中提到的这种负载均衡实现方案，你还了解哪些方案呢？</p><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"03丨Java虚拟机原理：JVM为什么被称为机器（machine）？","id":168945},"right":{"article_title":"05丨文件系统原理：如何用1分钟遍历一个100TB的文件？","id":169533}},"comments":[{"had_liked":false,"id":155182,"user_name":"Zend","can_delete":false,"product_type":"c1","uid":1053921,"ip_address":"","ucode":"80EBB0B6772E27","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/e1/ee5705a2.jpg","comment_is_top":false,"comment_ctime":1574657686,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"156193480342","product_id":100040201,"comment_content":"还有IP隧道模式，负载均衡服务器把收到的数据包，封装一个新的IP头标记，发给应用服务器，应用服务器收到数据包后，还原数据包，直接返回客户端，无需经过负载均衡服务器，缓解负载均衡服务器压力；<br>NAT模式：是把客户端发来的数据包的IP头的目的地址，在负载均衡器上换成其中一台应用服务器的IP地址，并发至此应用服务器来处理,应用服务器处理完成后把数据交给经过负载均衡器,负载均衡器再把数据包的原IP地址改为自己的IP，将目的地址改为客户端IP地址，无论是进来的流量,还是出去的流量,都必须经过负载均衡器。","like_count":37,"discussions":[{"author":{"id":1114352,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/f0/fe94061e.jpg","nickname":"假装在养🐷","note":"","ucode":"D0AB9CD03E0D5B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573475,"discussion_content":"负载均衡器的单机瓶颈怎么解决呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653457053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015930,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/80/7a/02fdf1a2.jpg","nickname":"FreezeSoul","note":"","ucode":"0B67142C4EA3D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214647,"discussion_content":"nat模式有什么优点么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585222041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165524,"user_name":"分清云淡","can_delete":false,"product_type":"c1","uid":1269873,"ip_address":"","ucode":"7045AE6BF72D31","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/71/895ee6cf.jpg","comment_is_top":false,"comment_ctime":1577251977,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"91771565193","product_id":100040201,"comment_content":"居然留言有这么多人不知道 Linux 内核负载均衡（也就是 LVS），LVS是第一个国产合并到Linux Kernel的功能 。批评一下作者不直接说LVS，让很多人误解了。 https:&#47;&#47;plantegg.github.io&#47;2019&#47;06&#47;20&#47;%E5%B0%B1%E6%98%AF%E8%A6%81%E4%BD%A0%E6%87%82%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1--lvs%E5%92%8C%E8%BD%AC%E5%8F%91%E6%A8%A1%E5%BC%8F&#47;","like_count":22,"discussions":[{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556082,"discussion_content":"20 | 高性能负载均衡：分类及架构 https://time.geekbang.org/column/article/8942\n想知道像淘宝这样的应用，仅仅用的只是软件负载均衡器吗，没有采用硬件负载均衡器？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647188575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159111,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1575539307,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"83179917931","product_id":100040201,"comment_content":"网络系统像蛋糕一样多层协议，反映了如何将一个复杂系统拆解成一个一个独立的子系统分而治之。<br>HTTP协议解决的是有明确目的的通信，例如Get就是从服务端获取某些资源，Put是往服务器修改数据，Post是往服务器添加数据。<br>TCP 协议解决的是二进制意义上的稳定通信，通过握手协议建立连接，收发双方都不断的重复读和写操作。<br>IP协议解决的是一个地址通信，IP是主机的地址，类似于一户人家的门牌号码。IP协议不是一个稳定的协议，发出就不管了。IP地址不太好记，所以用DNS来解析，就像我们熟人之间，说某某人的家就好了，不用再说具体门牌。<br>数据链路层，解决的是物理连接。每个网卡都有一个地址，这个地址像经纬度坐标，不像IP层的ip那样容易修改。<br>物理层，解决的是物理信号到二进制信号的转化。","like_count":20,"discussions":[{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298134,"discussion_content":"物理层发送方把电信号转换成光信号，通过光纤传输，接收方光信号转换成电信号....什么时候我们能直接应用光信号就好了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1597201794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155519,"user_name":"a、","can_delete":false,"product_type":"c1","uid":1532404,"ip_address":"","ucode":"590FE8DB111492","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIvUlicgrWtibbDzwhLw5cQrDSy2JuE1mVvmXq11KQIwpLicgDuWfpp9asE0VCN6HhibPDWn7wBc2lfmA/132","comment_is_top":false,"comment_ctime":1574695127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48819335383","product_id":100040201,"comment_content":"DNS的负载均衡，应用层的nginx、apache，传输层的F5.","like_count":12},{"had_liked":false,"id":249732,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1600773812,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"40255479476","product_id":100040201,"comment_content":"一篇文章概述网络编程原理。<br><br>我感觉即使不是互联网应用，单位内部局域网上的应用其实也符合“互联网之旅”中的描述（局域网内可能不需要 CDN，但是 DNS 还是可以有的）。<br><br>应用层（OSI 顶部的应用层、表示层、会话层）的 HTTP 协议，传输层的 TCP 协议，网络层的 IP 协议，数据链路层的 ARP 协议……能把这几个协议将清楚，那么一个网络包的旅程也就基本清楚了。<br><br>关于负载均衡，推荐隔壁专栏《从零开始学架构》中的《20 | 高性能负载均衡：分类及架构》和《21 | 高性能负载均衡：算法》。<br><br>对于思考题，其实负载均衡大概有三类，DNS、软件和硬件。<br><br>DNS 负载均衡一般由域名商提供，主要是按照访问的 IP 地址来决定访问不同地理位置的机房，相对简单、成本低，但是定制化功能较差和分配策略较少。<br><br>软件负载均衡比较常用，主要有 Nginx 和 LVS，7 层的 Nginx 大概是 5 万&#47;秒，4 层的 LVS 是十万级。优点是简单、便宜、灵活，缺点是性能不如硬件负载均衡，也没有安全防护功能。<br><br>硬件负载均衡（F5 和 A10）除了贵，基本没有别的缺点，功能强大、性能高、稳定，还有安全防护功能。<br><br>比较典型的负载均衡架构是由 DNS 支撑地理级别的负载均衡，然后由 F5 支持集群级别的负载均衡，最后由 Nginx 或者 LVS 来实现机器级别的负载均衡。","like_count":10},{"had_liked":false,"id":155925,"user_name":"realwuxing","can_delete":false,"product_type":"c1","uid":1276397,"ip_address":"","ucode":"AFDF169A4E0328","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJowicLVgt4uscjBFa2jG7WyBZ0G9ID9JibHdCiafpl7j01txMMXlEiayQjNkw70QKtJAtJ35XAI5voCg/132","comment_is_top":false,"comment_ctime":1574779147,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"23049615627","product_id":100040201,"comment_content":"李老师，想问下 Linux 内核支持的链路层负载均衡，web服务器与负载均衡服务器的IP地址都是一样的，这样不会有影响吗？在同一个局域网内，IP为什么也可以相同，谢谢！","like_count":5,"discussions":[{"author":{"id":1269873,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/71/895ee6cf.jpg","nickname":"分清云淡","note":"","ucode":"7045AE6BF72D31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100337,"discussion_content":"这个是LVS的一种部署结构，DR 模式，没有啥影响。性能最好，但是要求 LVS和web服务器在同一个二层网络下（部署不灵活）。 虽然IP相同但是Mac不同，在同一个二层网络下依赖Mac来路由就可以了  https://plantegg.github.io/2019/06/20/%E5%B0%B1%E6%98%AF%E8%A6%81%E4%BD%A0%E6%87%82%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1--lvs%E5%92%8C%E8%BD%AC%E5%8F%91%E6%A8%A1%E5%BC%8F/","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577251678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114901,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/15/293a185d.jpg","nickname":"JRich","note":"","ucode":"66AE9D61533960","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309853,"discussion_content":"这个意思是在一个局域网内，互相之间可以通信","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601464858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130948,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/c4/add90df3.jpg","nickname":"fresh_vito:)","note":"","ucode":"6AC05640717CE0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":192555,"discussion_content":"后面的web服务器，实际上拥有两个ip地址。一个是真实IP，一个是虚拟IP。虚拟IP由负载均衡机器设置提供。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583076204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131076,"discussion_content":"可以把每层都当成一个网络，二层是通过mac来通信，二层的LB只在二层活动，不关心三层基于IP的路由。层与层之间是没有关系的。两个网络拓扑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578824420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245294,"avatar":"https://static001.geekbang.org/account/avatar/00/13/00/6e/11362a1e.jpg","nickname":"感动超人","note":"","ucode":"DDBFE64A9DB28D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77821,"discussion_content":"我的推测是web服务器和负载均衡服务器不时在同一个局域网中,web服务器属于局域网A 负载均衡服务器属于局域网C,A C之间通过局域网B联系,这样就两者就可以使用同一IP地址了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575944777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1512247,"avatar":"https://static001.geekbang.org/account/avatar/00/17/13/37/641f1253.jpg","nickname":"枫林晚","note":"","ucode":"1A372E31BCF8C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":68923,"discussion_content":"这里的相同指的应该是对外网来说相同的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575245880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1219438,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","nickname":"蓝魔丶","note":"","ucode":"2AE4359E263558","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1512247,"avatar":"https://static001.geekbang.org/account/avatar/00/17/13/37/641f1253.jpg","nickname":"枫林晚","note":"","ucode":"1A372E31BCF8C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":80098,"discussion_content":"🙆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576146016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":68923,"ip_address":""},"score":80098,"extra":""}]}]},{"had_liked":false,"id":155019,"user_name":"观弈道人","can_delete":false,"product_type":"c1","uid":1016905,"ip_address":"","ucode":"F3BB619A33C605","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","comment_is_top":false,"comment_ctime":1574635156,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"18754504340","product_id":100040201,"comment_content":"李老师，想问下，负载均衡服务器想做到高可用，该怎么处理？谢谢","like_count":4,"discussions":[{"author":{"id":1119845,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/65/c22b4415.jpg","nickname":"风华神使","note":"","ucode":"ECAAB52216820D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60509,"discussion_content":"一般两种，一是keepalive+vip，一是硬件负载均衡通常自带高可用特点","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574735049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","nickname":"考休","note":"","ucode":"968DFC00D6D0CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63782,"discussion_content":"硬件负载均衡，使用F5或A10","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574909875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1180496,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/50/6eeb8792.jpg","nickname":"郑俊江","note":"","ucode":"5B974469DE0EBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60863,"discussion_content":"你说的有点大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574760844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210265,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","nickname":"奔奔奔跑","note":"","ucode":"F86EC205DCAACE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":58635,"discussion_content":"Keepalive","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574683158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1210265,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","nickname":"奔奔奔跑","note":"","ucode":"F86EC205DCAACE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":59467,"discussion_content":"应该不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574689350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":58635,"ip_address":""},"score":59467,"extra":""}]}]},{"had_liked":false,"id":155038,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1574640004,"is_pvip":false,"replies":[{"id":"59784","content":"具体这块我没看过，但是应该有很多地方可以在正式通信前就可以得到服务器的mac地址，比如在TCP握手的时候，ACK应答包的链路层数据帧里包含mac地址。<br><br>准确答案参考下面其他同学的评论~","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1574751824,"ip_address":"","comment_id":155038,"utype":1}],"discussion_count":12,"race_medal":0,"score":"14459541892","product_id":100040201,"comment_content":"老师您好，客户端在发送请求的时候，是如何知道服务器的mac地址的？这个有点想不明白","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475641,"discussion_content":"具体这块我没看过，但是应该有很多地方可以在正式通信前就可以得到服务器的mac地址，比如在TCP握手的时候，ACK应答包的链路层数据帧里包含mac地址。\n\n准确答案参考下面其他同学的评论~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574688244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61099,"discussion_content":"客客户端不需要知道服务器的mac地址的，只需要知道下一跳的mac地址就行了","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1574772921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2063114,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","nickname":"不要挑战自己的智商","note":"","ucode":"4910FF07C35DC5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":295480,"discussion_content":"真相\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596204795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":61099,"ip_address":""},"score":295480,"extra":""}]},{"author":{"id":1145624,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7b/18/6e44e6e0.jpg","nickname":"恺撒之剑","note":"","ucode":"18F55D253647E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60785,"discussion_content":"一般情况图中其实并不是服务器的mac，除非服务器和手机在同一个局域网，应该是下一个路由器或者中转服务器的mac，通过接力棒的方式不停的逐跳传送ip包","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1574755241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307497,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","nickname":"书策稠浊","note":"","ucode":"A29875CE15FDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370658,"discussion_content":"局域网arp","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619498190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047637,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcwXucibksEYWRmibTZj9pb3d5ibfVQHFS9shvJmgMgtN3BM3r9qiaL5YTZSFdLvPZiaEHfBia4dFODVqw/132","nickname":"北国骑士","note":"","ucode":"AC657FCA2014ED","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574247,"discussion_content":"这老师不行啊，这都不知道…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653922963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193167,"avatar":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","nickname":"蝴蝶","note":"","ucode":"8019924D99182F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550646,"discussion_content":"这个时候,要 ARP 协议出马啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644653635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1426131,"avatar":"https://static001.geekbang.org/account/avatar/00/15/c2/d3/4d14c230.jpg","nickname":"G7-华仔","note":"","ucode":"C137DE32EA2CF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215036,"discussion_content":"以安卓举例，客服端发起请求后，网络请求框架内部会通过Dns服务获取域名对应ip，这个过程在tcp握手之前。找到ip后，内部封装的socket就基于ip.建立连接。mac可能在这个连接建立过程中通过arp协议查找的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585274865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111175,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","nickname":"俊伟","note":"","ucode":"7905B4F25637F4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61057,"discussion_content":"对是ARP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574771343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1556708,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","nickname":"ant","note":"","ucode":"A39A03AF257471","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":59335,"discussion_content":"个人理解：客户端应该是无需知道服务器的mac地址，以老师所说的例子，客户端仅仅需要知道自己要访问什么比如www.taobao.com,通过域名解析服务器拿到服务器的ip地址即可（客户端仅仅需要知道服务器的IP就够了）。而ip（服务商分配的）和mac（出厂就带的）都是唯一的（当然IP是可变的，但必须是唯一的），既然是唯一那么也可以产生关联的。（比如通过地址解析协议以ip是可以拿到mac地址的）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574687100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1142588,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6f/3c/5a0cedda.jpg","nickname":"蜗牛君","note":"","ucode":"C782B6704EC9F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1556708,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","nickname":"ant","note":"","ucode":"A39A03AF257471","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60639,"discussion_content":"难道不是通过arp 拿到的mac 吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574742941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":59335,"ip_address":""},"score":60639,"extra":""},{"author":{"id":1518884,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2d/24/797bec43.jpg","nickname":"颖儿","note":"","ucode":"585FEBCBE0B5A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1142588,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6f/3c/5a0cedda.jpg","nickname":"蜗牛君","note":"","ucode":"C782B6704EC9F0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60808,"discussion_content":"用刘超老师的话 就是 靠吼 谁是ip****  局域网内 进行广播","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1574756864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":60639,"ip_address":""},"score":60808,"extra":""}]}]},{"had_liked":false,"id":301837,"user_name":"geek_arong2048","can_delete":false,"product_type":"c1","uid":1518310,"ip_address":"","ucode":"AB575BE100E4A9","user_header":"https://static001.geekbang.org/account/avatar/00/17/2a/e6/c788257f.jpg","comment_is_top":false,"comment_ctime":1625906127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10215840719","product_id":100040201,"comment_content":"负载均衡实现方式：<br>1、应用层面：LVS、Nginx、DNS等<br>2、协议层面：4层、7层负载均衡<br>3、算法层面：轮询、加权轮询、一致性哈希、随机等","like_count":3},{"had_liked":false,"id":155629,"user_name":"老男孩","can_delete":false,"product_type":"c1","uid":1134514,"ip_address":"","ucode":"CEC6D47412F620","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/b2/1e8b5616.jpg","comment_is_top":false,"comment_ctime":1574730435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10164665027","product_id":100040201,"comment_content":"坚持学习打卡。老师说的使用linux内核的方式负载均衡，我还是第一次听，涨姿势了。一般都是像array，f5这种硬件负载均衡器，还有nginx也可以做负载均衡，但一般用nginx做反向代理的，比如后端服务端口8080，但前端访问是80，nginx的端口。负载均衡器的也可以部署多台，服务器之间不断发送心跳包，监测对方是否宕机。这样能保证负责均衡器不出现单点问题。","like_count":2},{"had_liked":false,"id":299445,"user_name":"米兰的小铁匠","can_delete":false,"product_type":"c1","uid":1146923,"ip_address":"","ucode":"E52E05954BF39D","user_header":"https://static001.geekbang.org/account/avatar/00/11/80/2b/ef1581b5.jpg","comment_is_top":false,"comment_ctime":1624629635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5919596931","product_id":100040201,"comment_content":"<br>思考总结：本篇主要网络基础，一次网络请求的步骤<br>1、DNS：客户端通过DNS解析服务器的地址域名（可能是CND的服务），然后连接服务器<br>2、CDN：CDN是运行商机房，CDN再请求后台服务器（可能是负载均衡的服务）。一般静态资源会部署到CDN上（如秒杀了），极大减少服务器压力。<br>3、接着对发送的内容说明，Http、tcp协议等，并对网络通讯的5层协议依次描述（应用层、传输层、网络层、数据链路层、物理层）<br>4、最后简单说明了下负载均衡","like_count":1},{"had_liked":false,"id":241142,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1597200885,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5892168181","product_id":100040201,"comment_content":"TCP通信三次握手:<br>SYN 和ACK是报文标识位，前者表示请求建立一个新的连接，后者表示确认序列号有效<br>seq：字节流传输的标识序列号，32位，通常都是从0开始的。<br>ack：回复确认的序列号，一般都是对方请求的序列号+1，表示上次请求消耗了一个序列号，下次请求序列号+1开始。<br><br>1.客户端<br><br>标识位：SYN=1表示有意愿和服务器建立一个新的连接<br>seq=x表示把字节流初始序列号告诉服务器，让服务器知道本次通信的序列号是x<br><br>2.服务器回复客户端请求<br><br>ACK=1表示客户端发送的序列号有效<br>SYN=1表示也有意愿和客户端建立一个通信连接。<br>seq=y表示把自己的报文字节流初始标记x发送给客户端，待客户端确认。<br>ack=x+1表示确认了客户端的初始序列号，+1表示通信建立后序列号就从x+1开始。<br><br>3.客户端回复服务器<br><br>ACK=1，表示服务器的序列号有效<br>seq=x+1，表示第二次跟服务器通信，从上次通信的序列号+1<br>ack=y+1，表示确认了服务器的初始序列号，并告诉对方下次通信序列号从y+1开始<br><br>通信建立之初，这三次繁复的报文交换是为了建立可靠的通信环境。而且客户端和服务器是个双向通信的，所以双方都需要确认对方的通信关系。另外我觉得，将这个过程翻译成“三次握手”是有问题的。但没办法，这种翻译已经成了业内的“协议”了。","like_count":1},{"had_liked":false,"id":155228,"user_name":"俊杰","can_delete":false,"product_type":"c1","uid":1020008,"ip_address":"","ucode":"197C1CB1D48CB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/68/511fc1e5.jpg","comment_is_top":false,"comment_ctime":1574668369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5869635665","product_id":100040201,"comment_content":"曾经接触过的，七层负载均衡用Nginx，硬件层面的负载均衡用F5","like_count":1},{"had_liked":false,"id":346210,"user_name":"算法成瘾者","can_delete":false,"product_type":"c1","uid":1531879,"ip_address":"","ucode":"6E7A8E8844F9C3","user_header":"https://static001.geekbang.org/account/avatar/00/17/5f/e7/318ce10e.jpg","comment_is_top":false,"comment_ctime":1652919673,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652919673","product_id":100040201,"comment_content":"我的几点理解偏差纠正: <br>① 是先经过DNS 解析出IP，再到CDN缓存有无得判断。只是DNS解析出来的IP可能是CDN<br>的IP或者是 服务器的IP而已","like_count":0},{"had_liked":false,"id":333987,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1644653685,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644653685","product_id":100040201,"comment_content":"想起来,还有硬件负载均衡,F5 A10.还有系统级别的,如 LVS,软件级别的 nginx haproxy.还有更高层的 DNS 级别负载均衡.","like_count":0},{"had_liked":false,"id":333985,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1644653590,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644653590","product_id":100040201,"comment_content":"对的哦,还有 DNS 的负载均衡,有个什么 GSLB","like_count":0},{"had_liked":false,"id":333984,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1644653529,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644653529","product_id":100040201,"comment_content":"负载均衡嘛,可以在客户端做,那就是客户端负载均衡了,哈哈.靠近客户端的叫网关,靠近服务端的叫代理,兄弟们,觉得有道理吗?","like_count":0},{"had_liked":false,"id":287178,"user_name":"Rock","can_delete":false,"product_type":"c1","uid":2017724,"ip_address":"","ucode":"051DBF9DED50EC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c9/bc/d0ead251.jpg","comment_is_top":false,"comment_ctime":1617805912,"is_pvip":false,"replies":[{"id":"104285","content":"参考维基百科：https:&#47;&#47;zh.wikipedia.org&#47;wiki&#47;HTTP%E7%8A%B6%E6%80%81%E7%A0%81<br>401 Unauthorized是未认证的意思；403 Forbidden是未授权的意思。<br>500 服务器内部错误可以理解为原因，请求未完成可以认为是结果，文中表述重点放在结果上。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1617846518,"ip_address":"","comment_id":287178,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617805912","product_id":100040201,"comment_content":"401是未授权啊Unauthorized 500是Internal Server Error 这么明显的错误 多误导人啊","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518220,"discussion_content":"参考维基百科：https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81\n401 Unauthorized是未认证的意思；403 Forbidden是未授权的意思。\n500 服务器内部错误可以理解为原因，请求未完成可以认为是结果，文中表述重点放在结果上。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617846518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264504,"user_name":"meijing0114","can_delete":false,"product_type":"c1","uid":1012416,"ip_address":"","ucode":"B349D33E2F3ECC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/c0/b09911a0.jpg","comment_is_top":false,"comment_ctime":1606480704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606480704","product_id":100040201,"comment_content":"Nginx应该是最常用的负载均衡方式；硬件F5现在在互联网公司已经非常少见了；现在的负载均衡往往会附带很多对后端服务的感知；","like_count":0},{"had_liked":false,"id":237838,"user_name":"Zach","can_delete":false,"product_type":"c1","uid":1072397,"ip_address":"","ucode":"2A973D3370918D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/0d/0f0d9c30.jpg","comment_is_top":false,"comment_ctime":1595985023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595985023","product_id":100040201,"comment_content":"使用链路层负载均衡时，web服务器会响应针对虚拟ip的ARP报文吗？","like_count":0},{"had_liked":false,"id":226122,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1591955273,"is_pvip":false,"replies":[{"id":"83324","content":"1是的 2IP帧中包含IP路由清单，不覆盖源IP目标IP","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1592015016,"ip_address":"","comment_id":226122,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1591955273","product_id":100040201,"comment_content":"1.（链路层）客户端如何获悉服务端的mac地址？是在客户端和服务端tcp三次握手的时候获取吗？<br>2.（网络层）如果请求链路多次转发，会涉及到多个ip，网络层中服务端的ip会被覆盖吗？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498112,"discussion_content":"1是的 2IP帧中包含IP路由清单，不覆盖源IP目标IP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592015016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556174,"discussion_content":"参考其他回答，或者参考《计算机网络》等相关书籍，客户端并不需要获悉服务端的mac地址，如何清楚mac地址的用处，就知道这个答案了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647238589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204728,"user_name":"LH","can_delete":false,"product_type":"c1","uid":1211178,"ip_address":"","ucode":"819B9B2409E834","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/2a/7d8b5943.jpg","comment_is_top":false,"comment_ctime":1586446137,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586446137","product_id":100040201,"comment_content":"Mac地址是改的目标机器Mac地址吧","like_count":0,"discussions":[{"author":{"id":1288985,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcFhGY0NV4kFzOSXWDHR2lrI2UbUP4Y016GOnpTH7dqSbicqJarX0pHxMsfLopRiacKEPXLx7IHHqg/132","nickname":"一路前行","note":"","ucode":"32D3C715690783","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261337,"discussion_content":"mac地址在整个链路中是不断变化的，有可能是路由或者网关的mac","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588951316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197275,"user_name":"MrCubic","can_delete":false,"product_type":"c1","uid":1143176,"ip_address":"","ucode":"E0B78720596CAB","user_header":"https://static001.geekbang.org/account/avatar/00/11/71/88/933904e6.jpg","comment_is_top":false,"comment_ctime":1585366351,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585366351","product_id":100040201,"comment_content":"老师为什么不讲后半段，在服务端经过了那些处理，好像只停留在网络阶段","like_count":0},{"had_liked":false,"id":161121,"user_name":"灰灰","can_delete":false,"product_type":"c1","uid":1122397,"ip_address":"","ucode":"907A2FD339E158","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/5d/69170b96.jpg","comment_is_top":false,"comment_ctime":1576122482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576122482","product_id":100040201,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":160761,"user_name":"陈小龙 Cheney","can_delete":false,"product_type":"c1","uid":1328689,"ip_address":"","ucode":"4B721FE4DDB2F4","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/31/cb061c09.jpg","comment_is_top":false,"comment_ctime":1576029764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576029764","product_id":100040201,"comment_content":"手机App和浏览器到服务器的请求是HTTP, 而服务器集群之间的RPC一般是采用TCP协议.<br>RPC的函数可能长这样子: do_rpc(int host, string remote_func, map param) 也就是传入服务器编号, 远程调用的函数名, 调用参数.<br>一般调用参数param会被转化成json, 然后利用编程语言TCP库的接口send_package发出去.<br>所以本质上RPC还是TCP发包和收报, 处理和回应请求的一种方式.","like_count":0},{"had_liked":false,"id":156788,"user_name":"A🔱栋杰✨","can_delete":false,"product_type":"c1","uid":1046580,"ip_address":"","ucode":"C975704B321C15","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/34/9d8a2a6b.jpg","comment_is_top":false,"comment_ctime":1574956078,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574956078","product_id":100040201,"comment_content":"现在Android 10的MAC地址是动态的，这种情况下服务端回来的数据如何保证能送到新的MAC地址？","like_count":0},{"had_liked":false,"id":156665,"user_name":"yangfei","can_delete":false,"product_type":"c1","uid":1748357,"ip_address":"","ucode":"D57AEE3E2507D5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Yvdzjz9U5nJEJOeewTOpKWpM3Nbhy1XGicjOdNibfymrLaFDicudymv32JwyJEK2ANJCKo7HKzf1AIH1KZHmh632Q/132","comment_is_top":false,"comment_ctime":1574932895,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574932895","product_id":100040201,"comment_content":"李老师，你好，我曾经面试的时候，被问到，HTTP,HTTPS,TCP,UDP,WEBSORCKET这几个东西区别。我不知道怎么回答，老师能帮我解释下吗？","like_count":0,"discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159537,"discussion_content":"1,2,5是应用层协议，3，4是传输层协议。能得60分的答案，要得90分，请再细说每个协议的特征和作用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580704275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155891,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1574775110,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1574775110","product_id":100040201,"comment_content":"链路层负载均衡，负载均衡服务器和应用服务器的虚拟IP一致，就可以在应用层服务器直接返回给app,老师这个技术可以讲解一下的，第一次听说虚拟IP一致的概念","like_count":0,"discussions":[{"author":{"id":2063114,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","nickname":"不要挑战自己的智商","note":"","ucode":"4910FF07C35DC5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295484,"discussion_content":"同问。如果load balancer 和应用服务器ip地址不一致，难道就不能直接从应用服务器直接传回给用户吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596205178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155570,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1574700406,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574700406","product_id":100040201,"comment_content":"Nginx反向代理","like_count":0},{"had_liked":false,"id":155433,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1574688965,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574688965","product_id":100040201,"comment_content":"lvs负载均衡， nginx反向代理","like_count":0},{"had_liked":false,"id":155376,"user_name":"炎发灼眼","can_delete":false,"product_type":"c1","uid":1425953,"ip_address":"","ucode":"7D195057C8E94C","user_header":"https://static001.geekbang.org/account/avatar/00/15/c2/21/a8ef82ac.jpg","comment_is_top":false,"comment_ctime":1574683379,"is_pvip":false,"replies":[{"id":"59641","content":"Socket是操作系统提供的网络编程API，封装了TCP，UDP等协议的调用。如果要分层，应该分到传输层。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1574688358,"ip_address":"","comment_id":155376,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574683379","product_id":100040201,"comment_content":"老师你好，以前一直以为SOCKET也是一种协议，但是看你文中没有提及SOCKET是属于哪一层的，个人认为，应该也是属于应用层的一种，请老师解答下","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475735,"discussion_content":"Socket是操作系统提供的网络编程API，封装了TCP，UDP等协议的调用。如果要分层，应该分到传输层。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574688358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2063114,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","nickname":"不要挑战自己的智商","note":"","ucode":"4910FF07C35DC5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295485,"discussion_content":" Socket 算不上是协议。是一个 API，或者说是开发工具。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596205373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155298,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1574675976,"is_pvip":true,"replies":[{"id":"59637","content":"负载均衡也可以有很多台。<br><br>那谁来为负载均衡服务器做负载均衡？<br><br>我们在模块3继续交流。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1574688068,"ip_address":"","comment_id":155298,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1574675976","product_id":100040201,"comment_content":"应用服务器数量众多，但负载均衡服务器只有一台，那负载均衡服务器能处理过来吗？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475719,"discussion_content":"负载均衡也可以有很多台。\n\n那谁来为负载均衡服务器做负载均衡？\n\n我们在模块3继续交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574688068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556175,"discussion_content":"相同的疑问，即便是dns+四层+七层，如果只有每层都只有一台负载均衡器，明显也是存在问题的，首先，性能方面对于某些超大规模的访问，扛不住，然后，就是存在单点故障问题，而单点故障问题，解决的办法也只有通过集群部署，降低概率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647238947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2063114,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","nickname":"不要挑战自己的智商","note":"","ucode":"4910FF07C35DC5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413486,"discussion_content":"而且负载均衡器处理的问题比较简单，只需要查询一下字符相对应的服务器，然后马上转发请求，这个过程可以快速进行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636481753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1180496,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/50/6eeb8792.jpg","nickname":"郑俊江","note":"","ucode":"5B974469DE0EBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60867,"discussion_content":"dns,四层加七层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574760906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155010,"user_name":"_funyoo_","can_delete":false,"product_type":"c1","uid":1589568,"ip_address":"","ucode":"096B1A411E55A5","user_header":"https://static001.geekbang.org/account/avatar/00/18/41/40/5489dae0.jpg","comment_is_top":false,"comment_ctime":1574616769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574616769","product_id":100040201,"comment_content":"个人拙见：<br>文中采用的应该是 【IP负载均衡】。在底层更改mac地址来实现请求的负载均衡。<br><br>与这个比较像的，就是经常看到的【反向代理负载均衡】，反向代理是服务器的代理，这里的作用旨在根据某些算法转发请求至集群中的某一服务器，达到负载均衡的目的。但代理服务器也是服务器，他的性能也会影响整体的性能。<br><br>还有另外一个，就是【重定向负载均衡】，但要求客户端请求两次才能完成任务，一次是获取“我应该访问哪个服务器”，再根据返回的ip，访问对应服务器。我觉得这样性能较差，而且存在安全隐患，我真正的业务服务器直接暴露出来真的好吗？<br><br><br>个人拙见，欢迎补充指正🤝","like_count":0}]}