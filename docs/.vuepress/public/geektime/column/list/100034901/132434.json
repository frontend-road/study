{"id":132434,"title":"06 | HttpDNS和TLS：你的消息聊天真的安全吗？","content":"<p>你好，我是袁武林。</p><p>在开始之前，我们先回顾一下前面几篇的内容。我们陆续讲到了消息实时性、消息投递的可靠性、消息时序一致性在即时系统业务场景中的重要性和难点，以及相应的实现方案。</p><p>如果说消息的“实时性”“投递可靠性”“时序一致性”是评价一个即时消息服务可用性和先进性的重要指标；那么另一个重要的特性：安全性，就是一个IM服务能否存在的底线和立命之本。</p><p>对于依托即时消息技术之上的各种私密聊天App、轨迹位置服务、远程工控系统等业务，对于安全性的需要远高于一般业务。</p><p>毕竟，没有人能接受私密的聊天内容被第三方窥探，实时位置的暴露甚至可能带来人身方面的安全风险，而涉及了重要的远程工控操作，如果操作被截获或者篡改，可能会导致严重的工程事故。</p><p>那么今天，我们就来聊一聊IM系统中会有哪些常见的安全问题，针对这些不同安全问题，我们分别采用了哪些技术方案来进行应对。限于篇幅，对于每个技术点的具体实现过程，我们不做深入讨论，你只需要了解到具体方案的适用场景就可以了。</p><h2>消息安全性的三个维度</h2><p>既然对于即时消息服务来说，安全性是如此的重要和不可妥协，那么到底都有哪些环节可能导致消息安全方面的问题呢？</p><p>一般来说，从消息的产生和流转的细分上，我们大概从三个维度来描述消息的安全性：消息传输安全性、消息存储安全性、消息内容安全性。</p><!-- [[[read_end]]] --><h2>如何保证消息传输安全性</h2><p>我们先来关注一下消息在传输过程中的安全性。</p><p>传输安全性这个比较好理解，存在网络交互的即时消息服务，大多需要通过开放网络来进行消息和信令的传输。</p><p>可能导致出现安全风险的地方相对也比较多，比如，DNS劫持会导致发往IM服务的请求被拦截发到其他服务器，导致内容泄露或失效；或者明文传输的消息内容被中间设备劫取后篡改内容，再发往IM服务器引起业务错误等问题。</p><p>在消息传输过程中，我们主要关注两个问题：“访问入口安全”和“传输链路安全”，这也是两个基于互联网的即时消息场景下的重要防范点。</p><h3>保证访问入口安全：HttpDNS</h3><p>对于即时消息服务，一般都会提供一个公网的“接入服务”，作为用户消息收发的出入口，并通过域名的方式提供给客户端。对于这个出入口的访问，经常也会由于各种原因导致“访问不了”“地址错误”的问题。</p><p>关于访问入口，我们比较常见的问题就是DNS劫持。针对接入域名的DNS劫持问题的常见原因有下面两类。</p><p>第一类是路由器的DNS设置被非法侵入篡改了。这种问题常见于一些家用宽带路由器，由于安全性设置不够（比如使用默认密码），导致路由器被黑客或者木马修改了，DNS设置为恶意的DNS地址，这些有问题的DNS服务器会在你访问某些网站时返回仿冒内容，或者植入弹窗广告等。</p><p>第二类是运营商LocalDNS可能会导致接入域名的解析被劫持。</p><p>比如下面三种比较典型的情况。</p><ol>\n<li>LocalDNS是部分运营商为了降低跨网流量，缓存部分域名的指向内容，把域名强行指向自己的内容缓存服务器的IP地址。</li>\n<li>运营商可能会修改DNS的TTL(Time-To-Live，DNS缓存时间)，导致DNS的变更生效延迟，影响服务可用性。我们之前一个线上业务域名的TTL在某些省市能达到24小时。</li>\n<li>一些小运营商为了减轻自身的资源压力，把DNS请求转发给其他运营商去解析，这样分配的IP地址可能存在跨运营商访问的问题，导致请求变慢甚至不可用。</li>\n</ol><p><strong>那么，如何防止DNS劫持呢，我们一起来看看。</strong></p><p><strong>对于宽带路由器的DNS设置被篡改的问题</strong>，一般，我们会重置一下路由器的配置，然后修改默认的路由管理登录密码，基本上都能解决，这里不做细述。</p><p><strong>解决运营商LocalDNS的域名劫持和调度错误</strong>，业界比较常用的方案有HttpDNS。HttpDNS绕开了运营商的LocalDNS，通过HTTP协议（而不是基于UDP的DNS标准协议）来直接和DNS服务器交互，能有效防止域名被运营商劫持的问题。</p><p>而且由于HttpDNS服务器能获取到真实的用户出口IP，所以能选择离用户更近的节点进行接入，或者一次返回多个接入IP，让客户端通过测速等方式选择速度更快的接入IP，因此整体上接入调度也更精准。</p><p>当然，调度精准的另一个前提是HttpDNS服务自身需要有比较全的IP库来支持。目前很多大厂也基本都支持HttpDNS为主，运营商LocalDNS为辅的模式了，像很多第三方云厂商也提供对外的HttpDNS解析服务。HttpDNS的实现架构如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/75/73/75ed50f7ba71865a8b68f1bdb376fe73.png?wh=1965*1392\" alt=\"\"></p><p>这里介绍一下这张图。用户的请求不再通过运营商来查询域名的解析，而是通过HTTP独立提供的一个方法来进行查询，这个HTTP接口后端再去向权威DNS请求，以及去做一个数据的同步。</p><h3>保证传输链路安全：TLS传输层加密协议</h3><p>接下来，我们来看看第二种情况，消息传输链路。对于消息在传输链路中的安全隐患，基本可以总结为以下几种。</p><ol>\n<li>中断，攻击者破坏或者切断网络，破坏服务可用性。</li>\n<li>截获，攻击者非法窃取传输的消息内容，属于被动攻击。</li>\n<li>篡改，攻击者非法篡改传输的消息内容，破坏消息完整性和真实语义。</li>\n<li>伪造，攻击者伪造正常的通讯消息来模拟正常用户或者模拟IM服务端。</li>\n</ol><p>接下来，我们一起来逐一解决这几种隐患。</p><p><strong>关于消息链路中断，我们采取多通道方式进行解决。</strong></p><p>在即时消息系统中，对于“中断传输”这种主动攻击，破坏服务可用性的行为，一般可以采取多通道方式来提升链路可用性，比如很多IM系统的实现中，如果主链路连接不通或者连接不稳定，就会尝试自动切换到failover通道，这个failover通道可以是：</p><ol>\n<li>\n<p>从HttpDNS服务返回的多个“接入IP”中选择性进行切换，防止某一个“接入IP”的中间链路被破坏。</p>\n</li>\n<li>\n<p>从当前数据传输协议切换到其他传输协议，比如从基于UDP协议的QUIC协议切换到基于TCP协议的私有协议；或者针对TCP的私有协议提供HTTP Tunnel来对数据进行二次封装（微博目前支持这种方式），防止某些针对特定协议的中断攻击。</p>\n</li>\n</ol><p><strong>关于消息传输过程被截获、篡改、伪造，我们则利用私有协议和TLS的技术，来进行防控。</strong></p><p>对于消息传输过程中被第三方截获消息内容、消息内容被恶意篡改，以及第三方伪造IM服务端或者伪造客户端来获取消息或者执行恶意操作的情况，业界也有很多应对策略来进行防护。</p><ul>\n<li>私有协议</li>\n</ul><p>对于采用二进制私有协议的即时消息系统本身由于编码问题天然具备一定的防窃取和防篡改的能力，相对于使用JSON、XML、HTML等明文传输系统，被第三方截获后在内容破解上相对成本更高，因此安全性上会更好一些。</p><ul>\n<li>TLS</li>\n</ul><p>消息内容加密传输也能保证被截获后无法获取到消息明文，同样也不能对加密的内容进行篡改，但问题的关键是加密秘钥的协商本身需要较高的安全性保障。</p><p>比如双方约定好一个固定秘钥来进行加密，但由于客户端代码被反编译等原因，可能导致秘钥泄露；或者双方在连接建立时再协商好一个临时秘钥，但这个临时秘钥在传输上本身就可能被截获，从而导致后续的密文都能被破解。</p><p>另外的问题是，如果有第三方伪装成服务端来和客户端交换秘钥，这样即使后续的传输内容都是加密的也没有办法防止消息的泄露问题。</p><p>因此，为了解决上面一系列的安全问题，业界一般采用TLS协议来对业务数据进行保护，TLS巧妙地把“对称加密算法”“非对称加密算法”“秘钥交换算法”“消息认证码算法”“数字签名证书”“CA认证”进行结合，有效地解决了消息传输过程中的截获、篡改、伪造问题。</p><p>这里我解释一下具体的过程。</p><ol>\n<li>非对称加密算法和秘钥交换算法用于保证消息加密的密钥不被破解和泄露。</li>\n<li>对称加密算法对消息进行加密，保证业务数据传输过程被截获后无法破解，也无法篡改消息。</li>\n<li>数字签名和CA认证能验证证书持有者的公钥有效性，防止服务端身份的伪造。</li>\n</ol><p>TLS本身相对于原本的TCP三次握手，需要更多算法确认、秘钥协商交换、证书验证等环节，因此在握手环节会多出1-2个RTT(Round-Trip Time往返时延)，所以TLS在连接效率和传输性能上有一定的额外开销。</p><p>针对这个问题，最新的TLS 1.3版本进行了优化，可以支持1-RTT甚至0-RTT的握手环节，能较大幅度降低TLS的额外消耗，TLS 1.3在2018年8月才定稿最终版本（RFC 8446），大规模铺开使用还需一定时间，像微信早在几年前TLS 1.3的草案阶段，就自行实现了“基于TLS1.3的MMTLS协议”来保护消息传输中的安全。关于TLS的细节我就不在这篇中展开了，有兴趣的同学可以自行再找资料研究。</p><h2>如何保证消息存储安全性</h2><p>由于消息漫游和离线消息等业务需要，大部分即时消息服务会将消息暂存在IM服务器端的数据库，并保留一定的时间，对于一些私密的消息内容和用户隐私数据，如果出现内部人员非法查询或者数据库被“拖库”，可能会导致隐私信息的泄露。</p><h3>账号密码存储安全：“单向散列”算法</h3><p>针对账号密码的存储安全一般比较多地采用“高强度单向散列算法”（比如：SHA、MD5算法）和每个账号独享的“盐”（这里的“盐”是一个很长的随机字符串）结合来对密码原文进行加密存储。</p><p>“单向散列”算法在非暴力破解下，很难从密文反推出密码明文，通过“加盐”进一步增加逆向破解的难度。当然，如果“密文”和“盐”都被黑客获取到，这些方式也只是提升破解成本，并不能完全保证密码的安全性。因此还需要综合从网络隔离、DB访问权限、存储分离等多方位综合防治。</p><h3>消息内容存储安全：端到端加密</h3><p>针对消息内容的存储安全，如果存储在服务端，不管消息内容的明文或者密文都存在泄漏的风险。因此保证消息内容存储安全的最好方式是：</p><ol>\n<li>消息内容采用“端到端加密”（E2EE），中间任何链路环节都不对消息进行解密。</li>\n<li>消息内容不在服务端存储。</li>\n</ol><p>采用“端到端加密”方式进行通信，除了收发双方外，其他任何中间环节都无法获取消息原文内容，即使是研发者也做不到“破解”并且获取数据，顶多停止这种加密方式。</p><p>业界很多聊天软件如WhatsApp、Telegram就采用了“端到端加密”方式来保证消息内容的安全。但国内的大部分即时消息软件如QQ、微信等由于网络安全要求，目前暂时还没有采用“端到端加密”。</p><p>“端到端加密”之所以更加安全是因为：是由于和服务端TLS加密不一样，“端到端加密”的通信双方各自生成秘钥对并进行公钥的交换，私钥各自保存在本地不给到IM服务端。发送方的消息使用接收方的公钥来进行加密，因此即使是IM服务端拿到了加密信息，由于没有接收方的私钥，也无法解密消息。</p><h2>消息内容安全性</h2><p>内容安全性主要是指针对消息内容的识别和传播的控制，比如一些恶意的链接通过即时消息下发到直播间或者群，可能会导致点击的用户被引诱到一些钓鱼网站；另外一些反政、淫秽的图片、视频等消息的传播会引起不良的负面影响，需要进行识别处置并避免二次传播。</p><p>针对消息内容的安全性一般都依托于第三方的内容识别服务来进行“风险内容”的防范。</p><p>比如下面的几种方案：</p><ol>\n<li>\n<p>建立敏感词库，针对文字内容进行安全识别。</p>\n</li>\n<li>\n<p>依托图片识别技术来对色情图片和视频、广告图片、涉政图片等进行识别处置。</p>\n</li>\n<li>\n<p>使用“语音转文字”和OCR（图片文本识别）来辅助对图片和语音的进一步挖掘识别。</p>\n</li>\n<li>\n<p>通过爬虫技术来对链接内容进行进一步分析，识别“风险外链”。</p>\n</li>\n</ol><p>一般来说，针对内容安全的识别的方式和途径很多，也有很多成熟的第三方SaaS服务可以接入使用。</p><p>对于IM服务端来说，更多要做的是要建立和“识别”配套的各种惩罚处置机制，比如：识别到群里有个别人发色情视频或者图片，可以联动针对该用户进行“禁言处理”，如果一个群里出现多人发违规视频，可以针对该群“禁止发多媒体消息”或者进行“解散群”等操作。具体处置可以根据业务需要灵活处理。</p><h2>小结</h2><p>即时消息中，消息安全性是各种私密社交场景的核心需求，一般可以从三个维度来对安全性进行评价。</p><ol>\n<li>\n<p>消息传输安全性。“访问入口安全”和“传输链路安全”是基于互联网的即时消息场景下的重要防范点。针对“访问入口安全”可以通过HttpDNS来解决路由器被恶意篡改和运营商的LocalDNS问题；而TLS传输层加密协议是保证消息传输过程中不被截获、篡改、伪造的常用手段。</p>\n</li>\n<li>\n<p>消息存储安全性。针对账号密码的存储安全可以通过“高强度单向散列算法”和“加盐”机制来提升加密密码可逆性；对于追求极致安全性的即时消息场景并且政策允许的情况下，服务端应该尽量不存储消息内容，并且采用“端到端加密”方式来提供更加安全的消息传输保护。</p>\n</li>\n<li>\n<p>消息内容安全性。针对消息内容的安全识别可以依托“敏感词库”“图片识别”“OCR和语音转文字”“外链爬虫抓取分析”等多种手段，并且配合“联动惩罚处置”来进行风险识别的后置闭环。</p>\n</li>\n</ol><p>最后给你留一个思考题：<strong>TLS能识别客户端模拟器仿冒用户真实访问的问题吗？如果不能有什么其他更好的办法？</strong></p><p>你可以给我留言，我们一起解答，感谢你的收听，我们下期再见。</p>","comments":[{"had_liked":false,"id":131921,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1567977577,"is_pvip":false,"replies":[{"id":"50510","content":"👍","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568036486,"ip_address":"","comment_id":131921,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61697519721","product_id":100034901,"comment_content":"     消息安全性问题我记得大规模爆发的经典案例应当是当年的QQ尾巴吧？QQ使用近20年，手机端这块可能因为工作相关特性基本不太接触，不过我个人认为其实其一定程度上还是和PC类类似吧。毕竟手机就是一台Mimi的computer.对于老师说的我还是整体谈一下个人的见解吧；<br>    其实近15年爆发的安全问题无非出自几方面：<br>     一类是：客户端；主要表现形式1）弱密码 如简单设置数字就OK，结果被人破解了 2）非安全网络环境下上网 如蹭网、网吧上网时中毒 3）链接非安全，QQ尾巴就是经典案例，此三种是最普遍的；<br>     一类是服务器端： 1）连接数不限：其实这是个问题；造成QPS过高且不能确定是否是本人登录；故而像QQ或者某些在线教育的基本上都有严格的限制 2）网络安全：这个应当算是个老问题，举个例子吧：例如很多人家里东西被偷无非还是自己没有把门锁好、或者用了个最普通的门或者锁；不然为何为了安全现在会用防盗门 3）系统安全：各种补丁和问题爆发时你不注意不去强化，造成出问题。4）实时监控：网络异常、数据包异常时其实就说明有问题了 这就像现在商店商城都用监控一样。<br>      一个是应用程序：最经典的案例就是SQL注入，其实追其本源无非就是几个因素吧；1）省事完成了再说，没想到结果就被人利用了，其实老师所说的加密我印象里数据库端国内真正开始做是那次事件爆发之后再有的 2）数据传输时的安全性：举个个人觉得比较好的方式吧，消息中间件kafka这块我认为做的就还算不错，3）敏感过滤：其实不只是敏感词、甚至敏感链接吧。<br>       其实这些年尤其是2000后网络开始普及后：各种问题层出不穷，这也是为何监管越来越严格；DNS之类的其实真正挖下去肯定是有问题的，我们只能尽力避免一些常规问题，做好防患未然；这就像谷歌的 SRE有句很经典的话“没有问题是有问题的特殊形态”。网络这块深聊下去老师的课程就改成网络安全了 。<br>     谢谢老师的辛勤付出：期待老师的下节课的分享。","like_count":15,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466681,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568036486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376654,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","nickname":"一路向北","note":"","ucode":"54D8F1687AE1ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8555,"discussion_content":"大牛啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568017207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132356,"user_name":"王棕生","can_delete":false,"product_type":"c1","uid":1337944,"ip_address":"","ucode":"901BD0447A871E","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","comment_is_top":false,"comment_ctime":1568097382,"is_pvip":false,"replies":[{"id":"50659","content":"是的，模拟器识别确实可以通过机器学习等方式来识别异常行为。对于严格要求进行人机识别的场景，可以使用手机验证码、高难度的验证码识别、或者类似银行U盾的usb客户端证书认证来解决。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568129740,"ip_address":"","comment_id":132356,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57402672230","product_id":100034901,"comment_content":"TLS 能识别客户端模拟器仿冒用户真实访问的问题吗？如果不能有什么其他更好的办法？<br>答：  TLS 是传输层的加密协议，是用来保证消息传输过程中不被截获、篡改和伪造的，但是无法识别仿冒的真实用户。<br>         客户端模拟器如果像真实用户一样来访问服务端，其实是没有必要去识别的，因为此时模拟器一般是为了帮助真实用户做一些事情，没有恶意行为；如果存在恶意行为，进行识别的办法是通过机器学习的方式进行识别，例如：客户端模拟器会频繁发送消息，针对这一特征，可以对线上访问流量进行甄别。<br><br><br>","like_count":14,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466897,"discussion_content":"是的，模拟器识别确实可以通过机器学习等方式来识别异常行为。对于严格要求进行人机识别的场景，可以使用手机验证码、高难度的验证码识别、或者类似银行U盾的usb客户端证书认证来解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568129740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132445,"user_name":"东东🎈","can_delete":false,"product_type":"c1","uid":1326338,"ip_address":"","ucode":"D1BBE24CF76426","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/02/ecdb4e66.jpg","comment_is_top":false,"comment_ctime":1568123747,"is_pvip":false,"replies":[{"id":"50663","content":"1. 撤回这条信令也是写入到离线buffer里的，上线时接收方收到原消息和撤回信令，前者会被后者覆盖。<br>2. 一般是从mq拿到消息进行入库，入库成功才会下推。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568130302,"ip_address":"","comment_id":132445,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31632894819","product_id":100034901,"comment_content":"老师，问个im问题，服务端采用读扩散，比如A用户在群里面撤回了一条消息，B用户离线上线怎么收到这条已经撤回的消息，还有个问题群消息是异步mq入库成功后再推送吗，也就是推送的代码要放到mq里面，插入数据库成功后再推送吗？谢谢","like_count":8,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466942,"discussion_content":"1. 撤回这条信令也是写入到离线buffer里的，上线时接收方收到原消息和撤回信令，前者会被后者覆盖。\n2. 一般是从mq拿到消息进行入库，入库成功才会下推。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568130302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111899,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","nickname":"时隐时现","note":"","ucode":"DA4D622FF84920","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23000,"discussion_content":"对于第一个问题，能不能直接在离线buffer里将这条消息删除，让B上线后什么也看不到，而不是收到类型的微信提升“对方已撤回一条消息”？个人感觉这个技术上实现不会有瓶颈吧，更多的至少业务上的考量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569738356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156696,"user_name":"L","can_delete":false,"product_type":"c1","uid":1237556,"ip_address":"","ucode":"0BDC32D02DB267","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/34/0c2c1200.jpg","comment_is_top":false,"comment_ctime":1574936745,"is_pvip":false,"replies":[{"id":"60939","content":"每个uid登录验证时先获取到各自独立的salt，然后和登录提交的密码进行哈希，将结果和存储的密码密文进行一致性校验，这里salt和存储的密码密文一般都会分开存储。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1575626390,"ip_address":"","comment_id":156696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14459838633","product_id":100034901,"comment_content":"你好，对于账号密码存储那块有个问题，如果每个账号密码拥有一个单独的盐（随机的？）那如何验证登录呢？","like_count":4,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476204,"discussion_content":"每个uid登录验证时先获取到各自独立的salt，然后和登录提交的密码进行哈希，将结果和存储的密码密文进行一致性校验，这里salt和存储的密码密文一般都会分开存储。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575626390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138220,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1570105083,"is_pvip":false,"replies":[{"id":"53275","content":"消息存储的时候不一定需要加密哈，使用tls来进行消息传输基本就能避免消息被中途截获，篡改的问题。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570274894,"ip_address":"","comment_id":138220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865072379","product_id":100034901,"comment_content":"老师，如果需要在服务端存储消息内容，是加密后存储，下推离线消息时，解密之后再推送给用户？<br>不知道微博消息内容，是使用对称还是非对称加密？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469442,"discussion_content":"消息存储的时候不一定需要加密哈，使用tls来进行消息传输基本就能避免消息被中途截获，篡改的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570274894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133784,"user_name":"Geek_62a1d1","can_delete":false,"product_type":"c1","uid":1463795,"ip_address":"","ucode":"06DB73BD908D59","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJlvHOFaCicVAZGiaLibNKe4aIjkHc3fk6ibGjgcLtcAUzDibbNepUO2qUoeINANKotsfiaD6PMibCUCI5lA/132","comment_is_top":false,"comment_ctime":1568661945,"is_pvip":false,"replies":[{"id":"51491","content":"这个我不是专业哈，一般可以通过端口扫描、数据抓取分析等方法吧，大点的公司会有专门的网络安全部门来定期检查外网暴露的端口和传输的内容。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568806638,"ip_address":"","comment_id":133784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863629241","product_id":100034901,"comment_content":"老师，问个问题，您上面说的保证传输链路安全（中断、截获、篡改、伪造）是如何去发现这些问题呢？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467506,"discussion_content":"这个我不是专业哈，一般可以通过端口扫描、数据抓取分析等方法吧，大点的公司会有专门的网络安全部门来定期检查外网暴露的端口和传输的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568806638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132472,"user_name":"🐾","can_delete":false,"product_type":"c1","uid":1087256,"ip_address":"","ucode":"D0AD0260351C31","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","comment_is_top":false,"comment_ctime":1568129969,"is_pvip":false,"replies":[{"id":"50848","content":"谢谢，刚看到哈~","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568199049,"ip_address":"","comment_id":132472,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863097265","product_id":100034901,"comment_content":"老师节日快乐","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466958,"discussion_content":"谢谢，刚看到哈~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568199049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339829,"user_name":"laolinshi","can_delete":false,"product_type":"c1","uid":1024994,"ip_address":"","ucode":"269B879389D7D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/e2/5cb4f43f.jpg","comment_is_top":false,"comment_ctime":1648427636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648427636","product_id":100034901,"comment_content":"老师，文中提到的httpDNS服务是自己实现的，还是使用的第三方服务的？","like_count":0},{"had_liked":false,"id":241519,"user_name":"stevensafin","can_delete":false,"product_type":"c1","uid":1053553,"ip_address":"","ucode":"CC692A740C5FD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/71/3762b089.jpg","comment_is_top":false,"comment_ctime":1597320142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597320142","product_id":100034901,"comment_content":"httpdns这个图是不是有点问题呢？httpdns的服务器还会向权威DNS请求吗","like_count":0},{"had_liked":false,"id":226554,"user_name":"Geek_d26e63","can_delete":false,"product_type":"c1","uid":1809676,"ip_address":"","ucode":"24125CED20B6DF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fBOybgVTWXYXxaicaVEysXCjkKT13dX7icAj96KibJ815mia1FvYro9KcbA3xtwnIxmPJ38Vt6rmg6vp0auGKel93A/132","comment_is_top":false,"comment_ctime":1592140021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592140021","product_id":100034901,"comment_content":"md5现在已经不适用了吧：https:&#47;&#47;wenjie.store&#47;archives&#47;salted-password-hashing-doing-it-right","like_count":0},{"had_liked":false,"id":178830,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1581837218,"is_pvip":false,"replies":[{"id":"72283","content":"业务场景能接受的话单用户单设备登录能够比较好的降低风险。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584084439,"ip_address":"","comment_id":178830,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581837218","product_id":100034901,"comment_content":"同时只允许一个账户在一台机器上在线是否可以解决问题","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483986,"discussion_content":"业务场景能接受的话单用户单设备登录能够比较好的降低风险。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584084439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178820,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1581835570,"is_pvip":false,"replies":[{"id":"72282","content":"httpDNS和是否采用http协议不是强依赖的。IM消息系统里也会大量用到http协议，比如一个图片或者视频，一般是会先通过TCP长连接把这个图片或者视频的ID推到客户端，然后再由端上发起http请求来获取真正的图片和视频。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584084326,"ip_address":"","comment_id":178820,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581835570","product_id":100034901,"comment_content":"请问如果走localDns，应用层还走http协议么？一般IM消息系统会用到http协议么","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483980,"discussion_content":"httpDNS和是否采用http协议不是强依赖的。IM消息系统里也会大量用到http协议，比如一个图片或者视频，一般是会先通过TCP长连接把这个图片或者视频的ID推到客户端，然后再由端上发起http请求来获取真正的图片和视频。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584084326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177869,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1581518502,"is_pvip":false,"replies":[{"id":"72277","content":"这里说的“消息内容不在服务端存储”是指消息在服务端不永久存储，离线消息可以认为是一个存储buffer，一般只存储一段时间或者一定条数的最新消息和信令。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584083322,"ip_address":"","comment_id":177869,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581518502","product_id":100034901,"comment_content":"老师，请问“消息内容不在服务端存储”，对离线消息存在哪里？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483575,"discussion_content":"这里说的“消息内容不在服务端存储”是指消息在服务端不永久存储，离线消息可以认为是一个存储buffer，一般只存储一段时间或者一定条数的最新消息和信令。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584083322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152535,"user_name":"墨子","can_delete":false,"product_type":"c1","uid":1101504,"ip_address":"","ucode":"DB245139C7E64E","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/c0/81a96344.jpg","comment_is_top":false,"comment_ctime":1574040504,"is_pvip":false,"replies":[{"id":"58817","content":"您这里提到的wns具体是哪个产品？我看腾讯和万网都有叫wns的网络组件。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1574150775,"ip_address":"","comment_id":152535,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574040504","product_id":100034901,"comment_content":"大佬，问一个问题，wns与dns区别","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474848,"discussion_content":"您这里提到的wns具体是哪个产品？我看腾讯和万网都有叫wns的网络组件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574150775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101504,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/c0/81a96344.jpg","nickname":"墨子","note":"","ucode":"DB245139C7E64E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53263,"discussion_content":"我去看腾讯的感觉就是他们建立的httpdns服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574151749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146942,"user_name":"怪物老爷","can_delete":false,"product_type":"c1","uid":1327799,"ip_address":"","ucode":"AFF9FBDA8E2F22","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoro1y5n7l1Gq1vpzCRP9RJyNn5MuUz23PjYgSRbZ0aW0acUPufet09Pd5PFknB6ibtjXVZ3cQibevQ/132","comment_is_top":false,"comment_ctime":1572709521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572709521","product_id":100034901,"comment_content":"讲的真好！","like_count":0},{"had_liked":false,"id":146482,"user_name":"龙","can_delete":false,"product_type":"c1","uid":1005944,"ip_address":"","ucode":"B353E8002D2BF3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/78/4f384f93.jpg","comment_is_top":false,"comment_ctime":1572534129,"is_pvip":false,"replies":[{"id":"57186","content":"常用的对称加密就可以吧，AES-128 AES-256这些加上随机数。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573030572,"ip_address":"","comment_id":146482,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572534129","product_id":100034901,"comment_content":"老师，对消息内容（主要考虑文本），进行加解密的话，综合考虑性能，一般用什么技术来加解密比较好呢？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472879,"discussion_content":"常用的对称加密就可以吧，AES-128 AES-256这些加上随机数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573030572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146180,"user_name":"wuhaka","can_delete":false,"product_type":"c1","uid":1717134,"ip_address":"","ucode":"7628FE50C69F4C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKRn8Mcfib1laX6wddDlKRaSH8BjJESVNt1RD6iay3icbcyCcZib214Q93A8vZI9zarcuBianLUe06bwoQ/132","comment_is_top":false,"comment_ctime":1572448097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572448097","product_id":100034901,"comment_content":"不仅TLS，任何加密措施都不能解决模拟器伪造请求，这个是个无解的问题，本质上客户端安全攻防的问题，解决办法的实质是windows，android，ios等常用平台客户端如何防止反编译破解，常用字符串常量级加密、汇编花指令、反调试、动态加载吐出二进制文件等手段，道高一尺魔高一丈的问题；服务端机器学习识别为辅，核心是客户端反破解问题","like_count":0},{"had_liked":false,"id":133173,"user_name":"胡波 allenhu","can_delete":false,"product_type":"c1","uid":1014526,"ip_address":"","ucode":"33C6217E9A385C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/fe/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1568430506,"is_pvip":false,"replies":[{"id":"51296","content":"可以生成一个临时的对称秘钥，通过公钥加密后发给对方，来解决非对称加密性能差的问题，对于普通文本，也可以直接用公钥来加密。公钥可以都存放在公认的第三方权威服务器上（比如iMessage的端到端加密公钥就上传到苹果的Apple IDS服务器上），用户能从服务器获取到你的公钥，另外还可以通过GPG 使用去中心化的信任模型，来自行通过多种渠道交换公钥。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568628109,"ip_address":"","comment_id":133173,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568430506","product_id":100034901,"comment_content":"老师你好，请问端到端的加密方式，总不可能每一条消息的发送和接收都采用公私钥做加解密吧？是不是也要通过密钥交换算法来协商一个对称密钥？如果这样，因为连接不是直接建立在用户A和用户B之间，他们是如何做密钥交换的？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467279,"discussion_content":"可以生成一个临时的对称秘钥，通过公钥加密后发给对方，来解决非对称加密性能差的问题，对于普通文本，也可以直接用公钥来加密。公钥可以都存放在公认的第三方权威服务器上（比如iMessage的端到端加密公钥就上传到苹果的Apple IDS服务器上），用户能从服务器获取到你的公钥，另外还可以通过GPG 使用去中心化的信任模型，来自行通过多种渠道交换公钥。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568628109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132688,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1568193724,"is_pvip":false,"replies":[{"id":"50857","content":"这个好像比较困难吧，比如源代码泄露，重新基于原有代码来打包一个新app，这种通过请求很难鉴定出来呀，不确定是不是有基于app包md5进行校验的哈。个人觉得更多的是需要防止机器模拟人的行为来使用app吧。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568201569,"ip_address":"","comment_id":132688,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568193724","product_id":100034901,"comment_content":"老师，问一个客户端认证的问题，服务器怎么鉴定跟自己通讯的是授权的app，而不是其他非法app ","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467071,"discussion_content":"这个好像比较困难吧，比如源代码泄露，重新基于原有代码来打包一个新app，这种通过请求很难鉴定出来呀，不确定是不是有基于app包md5进行校验的哈。个人觉得更多的是需要防止机器模拟人的行为来使用app吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568201569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132165,"user_name":"刘小兔bunny","can_delete":false,"product_type":"c1","uid":1649519,"ip_address":"","ucode":"22A04EEF6D6479","user_header":"https://static001.geekbang.org/account/avatar/00/19/2b/6f/c99d739d.jpg","comment_is_top":false,"comment_ctime":1568034670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568034670","product_id":100034901,"comment_content":"本节DNS块的LocalDNS问题和信息安全问题学习起来有些吃力","like_count":0},{"had_liked":false,"id":132159,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1568034420,"is_pvip":false,"replies":[{"id":"50522","content":"除了限制处理或者重新登录还有其他方式来验证确实是真正的用户在使用还是模拟器在跑吗？","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568038093,"ip_address":"","comment_id":132159,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1568034420","product_id":100034901,"comment_content":"tls是保证传输安全，源头有问题，tls无法识别，解决：服务器对客户端进行筛选，短时间对服务器做大量请求，可做限制处理或要求重新登录","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466795,"discussion_content":"除了限制处理或者重新登录还有其他方式来验证确实是真正的用户在使用还是模拟器在跑吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568038093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1106184,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","nickname":"钢","note":"","ucode":"A49848BF63A579","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10847,"discussion_content":"用数字证书和数字签名可以解决吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568327877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132064,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":1376654,"ip_address":"","ucode":"54D8F1687AE1ED","user_header":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","comment_is_top":false,"comment_ctime":1568017431,"is_pvip":false,"replies":[{"id":"50519","content":"httpDNS就是让浏览器或者APP直接请求“从自建服务器接口返回的IP而不是域名”。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568037833,"ip_address":"","comment_id":132064,"utype":1}],"discussion_count":7,"race_medal":0,"score":"1568017431","product_id":100034901,"comment_content":"我有个疑问，关于HttpDNS。原理我懂，在进行DNS解析时，直接向自建服务器或第三方服务器去请求。但是进行域名解析的过程，是浏览器的行为，不是开发者的行为，我们怎么去控制DNS解析向自己的服务器发请求呢？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466741,"discussion_content":"httpDNS就是让浏览器或者APP直接请求“从自建服务器接口返回的IP而不是域名”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568037833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14630,"discussion_content":"这个问题我的理解是这样的：无论是B端还是C端，最终进行 DNS 查询的时候肯定会调用某个级别的系统接口；所以一般的解决办法是，通过 hack 的方式替换掉你使用框架的、默认的 DNS 查询接口就可以了；对于C端，更常见的情况是 HttpDNS 服务提供商直接提供 sdk 给你集成 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568773887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024994,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a3/e2/5cb4f43f.jpg","nickname":"laolinshi","note":"","ucode":"269B879389D7D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558632,"discussion_content":"对于APP的话，进行http请求的时候需要用到相关的http框架，可以对框架进行改造来实现不请求本地的DNS服务，而是通过请求httpDNS来获取IP地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648426449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":173221,"discussion_content":"浏览器的话看浏览器怎么实现的，这个应该改不了协议，app端各大手机底层都实现了httpDNS协议吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581839256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9471,"discussion_content":"这个问题，我也有疑问，如何进行控制的？ 麻烦老师进行作答的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568171676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376654,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","nickname":"一路向北","note":"","ucode":"54D8F1687AE1ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8719,"discussion_content":"我的问题是，如何控制浏览器向自建服务器请求，而不是向本地域名服务器请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568038589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1125776,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2d/90/8b62d37e.jpg","nickname":"差不多先生","note":"","ucode":"87E6BD7100CCF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1376654,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","nickname":"一路向北","note":"","ucode":"54D8F1687AE1ED","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12216,"discussion_content":"需要在端上改造下，一般情况下，通过域名做http请求，域名通过本地dns转换成IP，而httpdns通过自己服务器返回ip,端上直接通过ip去请求服务端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568502728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8719,"ip_address":""},"score":12216,"extra":""}]}]},{"had_liked":false,"id":131988,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1567999778,"is_pvip":false,"replies":[{"id":"50516","content":"如果是源码级的泄露这些内部机制也能获取到了呀。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568037390,"ip_address":"","comment_id":131988,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567999778","product_id":100034901,"comment_content":"模拟器不是TLS能识别出来的，本质上模拟器就是外挂，还是脱机挂，要想识别外挂，基本都是靠在客户端内置一些隐藏的检测机制，由服务器激发，因为外挂一般都是“够用就好”，不会在内部实现这些机制，所以对这些被激活的机制没有回应的，就可以判断为模拟器了","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466715,"discussion_content":"如果是源码级的泄露这些内部机制也能获取到了呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568037390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131956,"user_name":"煜","can_delete":false,"product_type":"c1","uid":1650785,"ip_address":"","ucode":"3C5A9A55A65FC9","user_header":"https://static001.geekbang.org/account/avatar/00/19/30/61/50e24e09.jpg","comment_is_top":false,"comment_ctime":1567992192,"is_pvip":false,"replies":[{"id":"50514","content":"epoll就是nio的实现呀，nio的异步非阻塞主要是指io过程中，用户进程不需要等待I&#47;O（比如read和write不需要hang住等待），而是直接返回，并通过Reactor模型来实现socket可读写时才唤醒io线程进行读写操作。<br>","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568037309,"ip_address":"","comment_id":131956,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567992192","product_id":100034901,"comment_content":"老师，请教一个额外的问题。nio所说的的异步非阻塞是体现在接收请求和处理请求，还是体现在对请求的读写？或者是是指底层调用了epoll？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466693,"discussion_content":"epoll就是nio的实现呀，nio的异步非阻塞主要是指io过程中，用户进程不需要等待I/O（比如read和write不需要hang住等待），而是直接返回，并通过Reactor模型来实现socket可读写时才唤醒io线程进行读写操作。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568037309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131936,"user_name":"墙角儿的花","can_delete":false,"product_type":"c1","uid":1258474,"ip_address":"","ucode":"EE5CAD76175CCF","user_header":"","comment_is_top":false,"comment_ctime":1567987811,"is_pvip":false,"replies":[{"id":"50512","content":"基本上是这样的：浏览器端 wss + json。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568036522,"ip_address":"","comment_id":131936,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567987811","product_id":100034901,"comment_content":"不让用端到端加密，支持浏览器的话最合适的是json+wss了吧。<br>老师，上篇文章我又留了个问题，辛苦老师再看下帮忙答疑<br>多谢","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466685,"discussion_content":"基本上是这样的：浏览器端 wss + json。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568036522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}