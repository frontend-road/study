{"id":505624,"title":"期中测试获奖用户名单及参考答案：通达系统架构设计","content":"<p>你好，我是李智慧。今天我们来公布一下期中测试的获奖用户名单和对应的答案。</p><p>我们期中测试的要求是写一个同城快送业务的系统架构设计文档，这个测试主要考察的目标包括：使用UML进行系统建模的能力，用文档表达设计思路的能力，完整思考一个系统整体架构的能力，以及识别设计落地关键技术问题及对策的能力。</p><p>在这里，感谢各位同学的积极参与，我收到了多位同学提交的答案，所有提交的答案都满足设计文档的格式要求，在设计的完整性上也基本达到了测试题目的要求，相信提交答案的同学也一定对如何从全局思考一个系统的架构设计，如何将设计思路表达出来有了感性而深刻的认识。</p><p>正如昵称为“外星人”（👽 ）的同学在文档中所说：“一开始，其实认为自己在理论+思想上，已经基本算是及格的。但是，等到真的给自己一个业务，要去做设计的时候发现，并不是自己预想的那么简单。因为，这时候，你需要思考的并不是某一个单一的业务场景：秒杀业务，地理位置解决方案，全球化用户加速访问之类的。这时候，你面临的是一个更加真实的挑战，现在让你来做设计，你会怎么设计。”</p><p>我相信，这种对全局现实性问题的思考，会对你的思考问题方式和事物认知能力产生长远的影响，你会注意到以前不曾注意的东西，也会思考以前忽略了的一些问题。</p><!-- [[[read_end]]] --><p>好，话不多说，在此，我们挑选出了3位获赞数最多且最符合作业要求的 3 位同学，获奖名单如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/58/ae0b56ee1c55f3ee48d0020bdd03cc58.jpg?wh=1875x625\" alt=\"图片\"></p><p>恭喜这 3 位同学！这里我也给出一个我写的答案，供你参考。</p><h2>参考答案：通达系统架构设计</h2><p>通达公司上级母公司是行业顶尖的物流配送企业，依托母公司的行业资源，我们将在全国多个主要城市开展一对一同城快送业务。本系统架构设计目标旨在快速利用公司现有资源，结合公司初期运营目标，开发一个能支持公司当下运营，也能支持公司未来发展的互联网应用系统。</p><h3>需求分析</h3><p>通达系统的核心使用者为需要在同城快速递送物品的用户和提供快送服务的快递员，系统用例图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/bf/fb59cc2d5401f0b0bab4fe060497f6bf.jpg?wh=1920x1114\" alt=\"图片\"></p><p>用户可以通过用户App创建快送订单，输入取件地址和收件地址，以及取件人、收件人联系方式后，系统预估订单金额，用户确认后，跳转到第三方支付页面等待用户支付。</p><p>快递员App实时上报自己当前位置。用户支付后，系统将订单发送给取件地点附近的所有快递员，快递员自主决定是否要抢单。系统会将用户订单信息推送给抢单成功的快递员APP，快递员根据收件地点上门取件并完成配送。</p><p>订单管理是系统的核心功能，因此系统需要设计开发专门的订单管理模块，具体的订单状态模型图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/6d/64/6d55fab63ddd3c8f2f9b11c975b0eb64.jpg?wh=1920x836\" alt=\"图片\"></p><p>用户点击确认创建订单后，订单状态为“待支付”，用户完成支付后，订单状态为“已支付”。如果用户支付失败或者超时未支付，订单状态为“超时未支付”，超时未支付状态为订单最终状态之一，此状态订单不可以再修改操作。</p><p>“已支付”状态订单发送给附近快递员，如果有快递员抢单成功，订单状态为“待取件”。如果快递员上门联系不到发件人，快递员在APP拍照输入取件失败证据，订单状态改为“取件失败”。如果快递员上门取件成功，快递员在APP点击确认取件，订单状态改为“配送中”。</p><p>送达目的地后，如果联系不到收件人，快递员在APP拍照输入送件失败证据，订单状态改为“配送失败”，如果配送成功，订单状态改为“已配送”。</p><p><strong> 非功能需求：</strong></p><p>系统设计需要在上线后支持日订单量50万订单，一年后支持日订单量300万订单。</p><h3>系统架构</h3><p>系统采用目前主流的微服务架构体系，整体架构图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/21/c1/21a781c30cfc43aac920aaf93a102dc1.jpg?wh=1920x2070\" alt=\"图片\"></p><p>用户和快递员的请求通过负载均衡服务器进入网关服务器集群，网关服务器集群调用具体微服务完成请求处理。</p><p>用户微服务负责用户注册，个人资料修改，账户充值等业务逻辑，同时，用户所有操作都通过用户微服务集中处理，由用户微服务调用其他服务完成业务逻辑，包括下单、支付等。</p><p>快递员微服务负责为快递员提供服务，包括快递员注册、认证等，也包括快递员抢单、确认收件成功及失败、确认配送成功及失败等。</p><p>订单微服务负责订单生命周期管理，订单创建以及所有订单状态变更全部调用订单微服务来完成。所以用户微服务和快递员微服务需要依赖订单微服务。</p><p>配单微服务负责将用户订单推送给附近的所有快递员，即为订单匹配快递员。一方面，配单微服务需要记录所有快递员的当前位置，快递员位置信息通过快递员APP每3秒定时上传到网关服务器，网关服务器直接调用配单微服务，配单微服务将当前快递员位置信息更新到Redis中。</p><p>另一方面，配单微服务需要得到用户最新成功支付的订单信息。用户微服务在用户成功支付后，将订单信息发送给消息队列服务器，配单服务器作为消息消费者获取订单信息。配单服务器匹配到订单取件位置5公里范围内所有快递员，通过消息推送服务器将订单信息推送给快递员，等待快递员抢单。</p><p>系统使用关系数据库记录用户、快递员信息，以及订单信息，关系数据库采用主从复制同步的方式进行双机部署，订单写操作通过主数据库完成，订单读操作通过从数据库完成。</p><p>下单抢单逻辑是系统的核心逻辑，具体处理活动图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/b9/ef/b91236af88658676383988c55f6f18ef.jpg?wh=1920x1075\" alt=\"图片\"></p><p>订单处理涉及到的角色泳道包括用户、用户微服务、订单微服务、配单微服务、快递员微服务、快递员。</p><p>用户调用用户微服务请求创建订单，用户微服务调用订单微服务完成创建订单。订单微服务返回订单创建成功后，用户微服务发起支付，用户APP端跳转到第三方支付，用户微服务等待第三方支付回调。</p><p>收到第三方支付回调结果后，如果支付成功，调用订单微服务修改订单状态为“已支付”。同时将订单信息通过消息队列异步发送给配单微服务。配单微服务实时接受快递员上报的位置信息，根据订单信息，匹配附近的快递员。</p><p>匹配到符合条件的快递员后，发送订单信息给快递员。快递员收到推送的订单信息后，决定是否要抢单。快递员点下抢单按钮后，请求发送给快递员微服务，快递员微服务可能会同时收到多个快递员的抢单请求，所以抢单请求需要加锁顺序操作，保证第一个到达系统的抢单请求能成功抢单。</p><p>由于快递员微服务是集群部署，所以需要使用外部锁来保证请求的顺序性，系统使用Redis完成锁操作。抢单成功的请求调用订单微服务，更新订单状态为“已配单”，并发送收件地址给快递员，快递员根据地址上门取件。</p><h3>主要技术选型</h3><ol>\n<li>开发语言采用Java开发实现，APP端支持安卓和IOS两种系统。</li>\n<li>负载均衡服务器采用Nginx部署。</li>\n<li>网关采用SpringBoot开发，系统上线时，订单量较小，网关服务器采用双机部署，未来根据系统负载压力和监控指标进行扩容。</li>\n<li>微服务框架采用Dubbo，每个微服务至少部署3个实例，并根据监控指标动态扩容。</li>\n<li>消息队列采用ActiveMQ部署。</li>\n<li>数据库采用MySQL并配置主从复制，实现读写分离。</li>\n<li>缓存使用Redis，Redis记录快递员实时位置信息并实现抢单加锁操作。</li>\n</ol><h3>关键技术落地实现</h3><p>抢单的锁实现通过调用Redis的CAS命令来实现，具体过程为：</p><ol>\n<li>订单支付完成后，配单微服务收到订单消息，立即在Redis中创建一个&lt;订单ID，-1&gt;的键值对；</li>\n<li>快递员抢单的时候，调用Redis的CAS命令：CAS &lt;订单ID&gt; &lt;-1&gt; &lt;快递员ID&gt;，该命令比较订单ID的value是否为-1，如果是-1，就将value设置为当前快递员ID；</li>\n<li>只有第一个快递员调用的时候value为-1，才能设置成功，也就是能抢单成功，并且记录下来抢单成功的快递员ID。其他抢单请求都返回CAS失败。</li>\n</ol><p>由于快递员位置在不断变更，并且高并发地发送给系统。而Redis中GeoHash命令通过跳表来存储位置，这种不断更新位置的高并发请求将会对Redis造成巨大的计算压力。因此系统并不采用Redis的GeoHash命令来进行距离计算，而是采用专栏<a href=\"https://time.geekbang.org/column/article/492306\">第9讲</a>交友软件同样的设计方案，即采用Hash表加GeoHash编码的方式来实现，Hash表存储在Redis中。</p>","neighbors":{"left":{"article_title":"22 | 大数据平台设计：如何用数据为用户创造价值？","id":501586},"right":{"article_title":"结束语 | 一个架构师的一天","id":506644}},"comments":[{"had_liked":false,"id":343367,"user_name":"Geek_970bec","can_delete":false,"product_type":"c1","uid":2620538,"ip_address":"","ucode":"172E54AA0697DA","user_header":"","comment_is_top":false,"comment_ctime":1650800839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650800839","product_id":100105701,"comment_content":"新人白嫖7天免费看 3天看完 总结 偏架构 适合3年以上大厂开发看","like_count":1},{"had_liked":false,"id":341807,"user_name":"無名小卒","can_delete":false,"product_type":"c1","uid":1345918,"ip_address":"","ucode":"1CBD8F26D7D33E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/hGLA7hlgfLk3VQs1m3HbkGCg0zicgaSJeYFGfW7JgocuicpoN0Ukyic7MouDXXxBDAKSJLJyEWb3Ef7ic6K6bOKbsw/132","comment_is_top":false,"comment_ctime":1649839631,"is_pvip":false,"replies":[{"id":"124871","content":"考虑很周到，这样分析，也许我们应该拆分一个独立的快递员位置微服务，供其他微服务使用。","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1649850722,"ip_address":"","comment_id":341807,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649839631","product_id":100105701,"comment_content":"老师，您在系统架构里说到“配单微服务需要记录所有快递员的当前位置”，从功能职责边界角度来看的话，我觉得快递员位置信息还是放到快递员微服务会合适些。<br>此外，除了快递员从取件到配送完成的过程需要获取定位信息，其实从抢单到取件的过程也可以获取定位，以供用户了解快递员是否到达取件地取件，提升用户体验。","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562554,"discussion_content":"考虑很周到，这样分析，也许我们应该拆分一个独立的快递员位置微服务，供其他微服务使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649850722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341744,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1315541,"ip_address":"","ucode":"346EC4B30294F6","user_header":"https://static001.geekbang.org/account/avatar/00/14/12/d5/38764102.jpg","comment_is_top":false,"comment_ctime":1649818510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649818510","product_id":100105701,"comment_content":"老师，期间的图和文档能否分享一下呢","like_count":0},{"had_liked":false,"id":341514,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1649668644,"is_pvip":false,"replies":[{"id":"124806","content":"感谢你的坚持和参与，希望这个课程能给你带来收获和成长。<br><br>","user_name":"作者回复","user_name_real":"作者","uid":"1007349","ctime":1649727738,"ip_address":"","comment_id":341514,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1649668644","product_id":100105701,"comment_content":"转眼间课程就结束了，感谢老师的讲解和指导，受益匪浅。<br><br>尤其这最后一课：“因为期中测试的评论区只有三个作业链接，就以为稳了，结果因为字数不够被刷了。随便拷一段文字过来也达到要求了”，所以做事不能有侥幸心理，不能大意。 哈哈哈~<br><br><br>师傅领进门 修行在个人。各位江湖再见。","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561815,"discussion_content":"感谢你的坚持和参与，希望这个课程能给你带来收获和成长。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649727738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1253652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","nickname":"Steven","note":"","ucode":"3FE64459842015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":562286,"discussion_content":"了解和理解了，谢谢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649810875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":561815,"ip_address":""},"score":562286,"extra":""}]}]},{"had_liked":false,"id":341491,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1649659797,"is_pvip":false,"replies":[{"id":"124793","content":"谢谢参与~~ 优秀作业是我选的，没有选中的核心原因是字数，设计文档需要给相关者阅读，字数少本身就无法传递出足够的设计意图，所以我们作业是对字数有要求的。<br><br>1 快送用户发起订单的时候，需要给快送商品拍照，快递员可以看到商品照片，决定是否接单，CDN用来缓存商品照片。<br>2 可以用redis<br>3 MySQL主备和主从技术上是一回事<br>4 是的<br>5 可以<br><br>1 异地多活主要考虑是成本，只要公司觉得多活带来的收益能够覆盖成本，多大量级都可以搞多活<br>2 曾经在实践中设为1个月","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1649664695,"ip_address":"","comment_id":341491,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1649659797","product_id":100105701,"comment_content":"期中测试出来，陪跑了一把。陪跑的某一方面原因是我4月3日当天赶出来，字数没到 2000 吗？<br><br>提交方式是“把文档链接提交在评论区”，奖励要求是获赞最多且符合作业要求。可是评论区现在一共只有三个作业链接，其它的作业在哪了？点赞数是多少呢？<br><br>本着公平公正公开的原则，所以我还是有必要问个明白的，是吧，小编。   :)<br><br><br><br>回到学习上来，因为参考文档没写太细，以下几个问题，想听听老师的看法：<br><br>1，CDN，我认为是不需要的，没有什么静态资源需要放到CDN。<br>2，消息队列，我认为在这个量级下是没有必要采用消息中间队的，可以考虑用 Redis 这个轻量级的方案。<br>3，MySQL 数据库，我觉得主备即可，并不需要主从。<br>4，网关考虑了双机部署，那负载均衡服务器 Nginx 也是需要双机高可用的。<br>5，Redis 以什么方式部署？哨兵足够了吧。<br><br>另外，针对同城快递这个场景：<br>1，异地多活在什么量级需要考虑？<br>2，订单数据的冷热数据时间分界线设置为多少是合理的？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561535,"discussion_content":"谢谢参与~~ 优秀作业是我选的，没有选中的核心原因是字数，设计文档需要给相关者阅读，字数少本身就无法传递出足够的设计意图，所以我们作业是对字数有要求的。\n\n1 快送用户发起订单的时候，需要给快送商品拍照，快递员可以看到商品照片，决定是否接单，CDN用来缓存商品照片。\n2 可以用redis\n3 MySQL主备和主从技术上是一回事\n4 是的\n5 可以\n\n1 异地多活主要考虑是成本，只要公司觉得多活带来的收益能够覆盖成本，多大量级都可以搞多活\n2 曾经在实践中设为1个月","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649664695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","nickname":"Steven","note":"","ucode":"3FE64459842015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561543,"discussion_content":"感谢这么快的回复。\n\n关于优秀作业，您是老板您说了算。\n\nMySQL主备和主从在细节上是有区别的，从提供读，备不提供读，从在某些情况下要考虑延迟的情况等等。班门弄斧了，在技术成熟的团队里可以认为没啥区别，您的角度看可能也确实没啥区别。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649667178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341452,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1649636491,"is_pvip":true,"replies":[{"id":"124789","content":"1 spring boot 包含 spring gateway<br>2 架构师喜欢Dubbo，团队有Dubbo经验，核心工程师熟悉Dubbo<br>3 同一个URL，URL请求要经过CDN，不管CDN有没有这张图片。有专门CDN开发的人实现CDN的逻辑<br>4 这里是安卓或IOS系统消息推送，也可以用长连接。可以用websocket","user_name":"作者回复","user_name_real":"作者","uid":"1007349","ctime":1649643282,"ip_address":"","comment_id":341452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649636491","product_id":100105701,"comment_content":"请教老师几个问题啊：<br>Q1：网关为什么不用SpringCloud Gateway？<br>文中说“网关采用 SpringBoot 开发”，为什么要自己开发。SpringCloud有现成的网关“SpringCloud Gateway”。为什么不用现成的？<br>Q2：Dubbo比http更好吗？<br>文中说“微服务框架采用 Dubbo”。一般的SpringCloud培训，服务间调用通常都用feign，feign实际上是http调用。选Dubbo，是因为Dubbo比http更好吗？<br>Q3：CDN使用时需要业务逻辑吗？<br>CDN怎么使用的？比如一个图片放在CDN上，APP访问此图片时，APP上的图片URL是CDN的URL，而不是后端服务器上的URL。是这样使用的吗？<br>如果是这样用的，假如CDN上没有该图片，怎么转到后盾服务器去获取？这个判断逻辑是谁实现的？是CDN自己实现的吗？还是网站开发人员需要在CDN上写业务逻辑？（或者只是在CDN上做个配置？没有用过CDN，瞎猜的）<br>Q4：推送服务是怎么实现的？<br>推送服务是通过长连接来实现的吗？（类似于网约车）。是否可以用websocket实现？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561465,"discussion_content":"1 spring boot 包含 spring gateway\n2 架构师喜欢Dubbo，团队有Dubbo经验，核心工程师熟悉Dubbo\n3 同一个URL，URL请求要经过CDN，不管CDN有没有这张图片。有专门CDN开发的人实现CDN的逻辑\n4 这里是安卓或IOS系统消息推送，也可以用长连接。可以用websocket","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649643282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}