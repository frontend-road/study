{"id":81997,"title":"总结课 | 在实际开发中，如何权衡选择使用哪种数据结构和算法？","content":"<p>你好，我是王争，今天是一篇总结课。我们学了这么多数据结构和算法，在实际开发中，究竟该如何权衡选择使用哪种数据结构和算法呢？今天我们就来聊一聊这个问题，希望能帮你把学习带回实践中。</p><p>我一直强调，学习数据结构和算法，不要停留在学院派的思维中，只把算法当作应付面试、考试或者竞赛的花拳绣腿。作为软件开发工程师，我们要把数据结构和算法，应用到软件开发中，解决实际的开发问题。</p><p>不过，要想在实际的开发中，灵活、恰到好处地应用数据结构和算法，需要非常深厚的实战经验积累。尽管我在课程中，一直都结合实际的开发场景来讲解，希望带你真枪实弹地演练算法如何解决实际的问题。但是，在今后的软件开发中，你要面对的问题远比我讲的场景要复杂、多变、不确定。</p><p>要想游刃有余地解决今后你要面对的问题，光是熟知每种数据结构和算法的功能、特点、时间空间复杂度，还是不够的。毕竟工程上的问题不是算法题。算法题的背景、条件、限制都非常明确，我们只需要在规定的输入、输出下，找最优解就可以了。</p><p>而工程上的问题往往都比较开放，在选择数据结构和算法的时候，我们往往需要综合各种因素，比如编码难度、维护成本、数据特征、数据规模等，最终选择一个<strong>工程的最合适解</strong>，而非<strong>理论上的最优解</strong>。</p><!-- [[[read_end]]] --><p>为了让你能做到活学活用，在实际的软件开发中，不生搬硬套数据结构和算法，今天，我们就聊一聊，在实际的软件开发中，如何权衡各种因素，合理地选择使用哪种数据结构和算法？关于这个问题，我总结了六条经验。</p><h2>1.时间、空间复杂度不能跟性能划等号</h2><p>我们在学习每种数据结构和算法的时候，都详细分析了算法的时间复杂度、空间复杂度，但是，在实际的软件开发中，复杂度不能与性能简单划等号，不能表示执行时间和内存消耗的确切数据量。为什么这么说呢？原因有下面几点。</p><p><strong>复杂度不是执行时间和内存消耗的精确值</strong></p><p>在用大O表示法表示复杂度的时候，我们会忽略掉低阶、常数、系数，只保留高阶，并且它的度量单位是语句的执行频度。每条语句的执行时间，并非是相同、确定的。所以，复杂度给出的只能是一个非精确量值的趋势。</p><p><strong>代码的执行时间有时不跟时间复杂度成正比</strong></p><p>我们常说，时间复杂度是O(nlogn)的算法，比时间复杂度是O(n^2)的算法，执行效率要高。这样说的一个前提是，算法处理的是大规模数据的情况。对于小规模数据的处理，算法的执行效率并不一定跟时间复杂度成正比，有时还会跟复杂度成反比。</p><p><strong>对于处理不同问题的不同算法，其复杂度大小没有可比性</strong></p><p>复杂度只能用来表征不同算法，在处理同样的问题，以及同样数据类型的情况下的性能表现。但是，对于不同的问题、不同的数据类型，不同算法之间的复杂度大小并没有可比性。</p><h2>2.抛开数据规模谈数据结构和算法都是“耍流氓”</h2><p>在平时的开发中，在数据规模很小的情况下，普通算法和高级算法之间的性能差距会非常小。如果代码执行频率不高、又不是核心代码，这个时候，我们选择数据结构和算法的主要依据是，其是否简单、容易维护、容易实现。大部分情况下，我们直接用最简单的存储结构和最暴力的算法就可以了。</p><p>比如，对于长度在一百以内的字符串匹配，我们直接使用朴素的字符串匹配算法就够了。如果用KMP、BM这些更加高效的字符串匹配算法，实际上就大材小用了。因为这对于处理时间是毫秒量级敏感的系统来说，性能的提升并不大。相反，这些高级算法会徒增编码的难度，还容易产生bug。</p><h2>3.结合数据特征和访问方式来选择数据结构</h2><p>面对实际的软件开发场景，当我们掌握了基础数据结构和算法之后，最考验能力的并不是数据结构和算法本身，而是对问题需求的挖掘、抽象、建模。<strong>如何将一个背景复杂、开放的问题，通过细致的观察、调研、假设，理清楚要处理数据的特征与访问方式，这才是解决问题的重点。</strong>只有理清楚了这些东西，我们才能将问题转化成合理的数据结构模型，进而找到满足需求的算法。</p><p>比如我们前面讲过，Trie树这种数据结构是一种非常高效的字符串匹配算法。但是，如果你要处理的数据，并没有太多的前缀重合，并且字符集很大，显然就不适合利用Trie树了。所以，在用Trie树之前，我们需要详细地分析数据的特点，甚至还要写些分析代码、测试代码，明确要处理的数据是否适合使用Trie树这种数据结构。</p><p>再比如，图的表示方式有很多种，邻接矩阵、邻接表、逆邻接表、二元组等等。你面对的场景应该用哪种方式来表示，具体还要看你的数据特征和访问方式。如果每个数据之间联系很少，对应到图中，就是一个稀疏图，就比较适合用邻接表来存储。相反，如果是稠密图，那就比较适合采用邻接矩阵来存储。</p><h2>4.区别对待IO密集、内存密集和计算密集</h2><p>如果你要处理的数据存储在磁盘，比如数据库中。那代码的性能瓶颈有可能在磁盘IO，而并非算法本身。这个时候，你需要合理地选择数据存储格式和存取方式，减少磁盘IO的次数。</p><p>比如我们在<a href=\"https://time.geekbang.org/column/article/41440\">递归</a>那一节讲过最终推荐人的例子。你应该注意到了，当时我给出的代码尽管正确，但其实并不高效。如果某个用户是经过层层推荐才来注册的，那我们获取他的最终推荐人的时候，就需要多次访问数据库，性能显然就不高了。</p><p>不过，这个问题解决起来不难。我们知道，某个用户的最终推荐人一旦确定，就不会变动。所以，我们可以离线计算每个用户的最终推荐人，并且保存在表中的某个字段里。当我们要查看某个用户的最终推荐人的时候，访问一次数据库就可以获取到。</p><p>刚刚我们讲了数据存储在磁盘的情况，现在我们再来看下，数据存储在内存中的情况。如果你的数据是存储在内存中，那我们还需要考虑，代码是内存密集型的还是CPU密集型的。</p><p>所谓CPU密集型，简单点理解就是，代码执行效率的瓶颈主要在CPU执行的效率。我们从内存中读取一次数据，到CPU缓存或者寄存器之后，会进行多次频繁的CPU计算（比如加减乘除），CPU计算耗时占大部分。所以，在选择数据结构和算法的时候，要尽量减少逻辑计算的复杂度。比如，用位运算代替加减乘除运算等。</p><p>所谓内存密集型，简单点理解就是，代码执行效率的瓶颈在内存数据的存取。对于内存密集型的代码，计算操作都比较简单，比如，字符串比较操作，实际上就是内存密集型的。每次从内存中读取数据之后，我们只需要进行一次简单的比较操作。所以，内存数据的读取速度，是字符串比较操作的瓶颈。因此，在选择数据结构和算法的时候，需要考虑是否能减少数据的读取量，数据是否在内存中连续存储，是否能利用CPU缓存预读。</p><h2>5.善用语言提供的类，避免重复造轮子</h2><p>实际上，对于大部分常用的数据结构和算法，编程语言都提供了现成的类和函数实现。比如，Java中的HashMap就是散列表的实现，TreeMap就是红黑树的实现等。在实际的软件开发中，除非有特殊的要求，我们都可以直接使用编程语言中提供的这些类或函数。</p><p>这些编程语言提供的类和函数，都是经过无数验证过的，不管是正确性、鲁棒性，都要超过你自己造的轮子。而且，你要知道，重复造轮子，并没有那么简单。你需要写大量的测试用例，并且考虑各种异常情况，还要团队能看懂、能维护。这显然是一个出力不讨好的事情。这也是很多高级的数据结构和算法，比如Trie树、跳表等，在工程中，并不经常被应用的原因。</p><p>但这并不代表，学习数据结构和算法是没用的。深入理解原理，有助于你能更好地应用这些编程语言提供的类和函数。能否深入理解所用工具、类的原理，这也是普通程序员跟技术专家的区别。</p><h2>6.千万不要漫无目的地过度优化</h2><p>掌握了数据结构和算法这把锤子，不要看哪里都是钉子。比如，一段代码执行只需要0.01秒，你非得用一个非常复杂的算法或者数据结构，将其优化成0.005秒。即便你的算法再优秀，这种微小优化的意义也并不大。相反，对应的代码维护成本可能要高很多。</p><p>不过度优化并不代表，我们在软件开发的时候，可以不加思考地随意选择数据结构和算法。我们要学会估算。估算能力实际上也是一个非常重要的能力。我们不仅要对普通情况下的数据规模和性能压力做估算，还需要对异常以及将来一段时间内，可能达到的数据规模和性能压力做估算。这样，我们才能做到未雨绸缪，写出来的代码才能经久可用。</p><p>还有，当你真的要优化代码的时候，一定要先做Benchmark基准测试。这样才能避免你想当然地换了一个更高效的算法，但真实情况下，性能反倒下降了。</p><h2>总结</h2><p>工程上的问题，远比课本上的要复杂。所以，我今天总结了六条经验，希望你能把数据结构和算法用在刀刃上，恰当地解决实际问题。</p><p><img src=\"https://static001.geekbang.org/resource/image/f7/f4/f7125dded207f84d3e363ef1603b03f4.jpg?wh=1142*815\" alt=\"\"></p><p>我们在利用数据结构和算法解决问题的时候，一定要先分析清楚问题的需求、限制、隐藏的特点等。只有搞清楚了这些，才能有针对性地选择恰当的数据结构和算法。这种灵活应用的实战能力，需要长期的刻意锻炼和积累。这是一个有经验的工程师和一个学院派的工程师的区别。</p><p>好了，今天的内容就到这里了。最后，我想听你谈一谈，你在实际开发选择数据结构和算法时，有什么感受和方法呢？</p><p>欢迎在留言区写下你的想法，也欢迎你把今天的文章分享给你的朋友，帮助他在数据结构和算法的实际运用中走得更远。</p>","comments":[{"had_liked":false,"id":68152,"user_name":"观弈道人","can_delete":false,"product_type":"c1","uid":1016905,"ip_address":"","ucode":"F3BB619A33C605","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","comment_is_top":false,"comment_ctime":1550449708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"126104501292","product_id":100017301,"comment_content":"课程要结束了，可惜拉下好多内容。","like_count":30},{"had_liked":false,"id":68206,"user_name":"猫头鹰爱拿铁","can_delete":false,"product_type":"c1","uid":1105958,"ip_address":"","ucode":"24266B58968428","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/26/4942a09e.jpg","comment_is_top":false,"comment_ctime":1550457423,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"78859868751","product_id":100017301,"comment_content":"已经开始二刷了。二刷完后打算再做一遍习题吧。<br>关于选择数据结构这块，我觉得确实要好好研究下底层的数据结构实现。这个对自己的成长也是有好处的。例如看完hashmap的源码会对巧妙使用位运算提升性能有更深层次的体会。然后就是工程中还要考虑实际场景，例如并发等等，如果不研究深一点数据结构，哪怕对应到散列表，jdk有hashtable，hashmap，concurrentmap选啥呢。","like_count":19,"discussions":[{"author":{"id":1205697,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/c1/afcd981b.jpg","nickname":"程序员二师兄","note":"","ucode":"C9E3B5B3358BDF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287962,"discussion_content":"嗯？这个昵称有点眼熟，是不是你？量子老师，手动艾特你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593601719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205697,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/c1/afcd981b.jpg","nickname":"程序员二师兄","note":"","ucode":"C9E3B5B3358BDF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287961,"discussion_content":"我也是二刷的，又快学一遍了，仍然有新的收获","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593601615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1105958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e0/26/4942a09e.jpg","nickname":"猫头鹰爱拿铁","note":"","ucode":"24266B58968428","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1205697,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/c1/afcd981b.jpg","nickname":"程序员二师兄","note":"","ucode":"C9E3B5B3358BDF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":287976,"discussion_content":"居然能碰到班长，哈哈。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593605095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287961,"ip_address":""},"score":287976,"extra":""},{"author":{"id":1205697,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/c1/afcd981b.jpg","nickname":"程序员二师兄","note":"","ucode":"C9E3B5B3358BDF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1105958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e0/26/4942a09e.jpg","nickname":"猫头鹰爱拿铁","note":"","ucode":"24266B58968428","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":288080,"discussion_content":"哈哈哈，巧了，我正好二刷到这里，看到留言很有意思，于是底下留言回复了一下，回复完之后看到昵称很眼熟，然后在脑海里的Hashmap根据昵称作为Key，map.get 查询了一下，立刻就想到你啦，哈哈😄，O（1）的时间复杂度。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593648463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287976,"ip_address":""},"score":288080,"extra":""}]}]},{"had_liked":false,"id":68193,"user_name":"牧民牛仔","can_delete":false,"product_type":"c1","uid":1247561,"ip_address":"","ucode":"1CC29B7129B207","user_header":"https://static001.geekbang.org/account/avatar/00/13/09/49/8bc5e315.jpg","comment_is_top":false,"comment_ctime":1550455467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"70269932203","product_id":100017301,"comment_content":"老师的课程设计的很合理，对应的数据结构及算法章节，随时可查，随时可以复习。点个赞","like_count":17},{"had_liked":false,"id":68154,"user_name":"李伟","can_delete":false,"product_type":"c1","uid":1239462,"ip_address":"","ucode":"F0EF60EB250B20","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","comment_is_top":false,"comment_ctime":1550450087,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"61679992231","product_id":100017301,"comment_content":"在平时工作上，看到有些前人留下来的代码，看起来效率不是很高，但是却没有人去优化它，应该就是属于老师今天说的这种情况！","like_count":15,"discussions":[{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":92956,"discussion_content":"嗯 有时候是出力不讨好，有时候真的是权衡维护成本和性能提升成本","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1576895887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1939316,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/97/74/a933d664.jpg","nickname":"莜戏","note":"","ucode":"C3488A2BB44359","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346328,"discussion_content":"优化是存在风险的，需慎重","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611909428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68189,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1550455174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40205160838","product_id":100017301,"comment_content":"这篇文章让我想起了以前看书学习设计模式中德一个忠告，滥用设计模式比不用设计模式更糟糕！","like_count":10},{"had_liked":false,"id":69094,"user_name":"王子瑞Aliloke有事电联","can_delete":false,"product_type":"c1","uid":1249400,"ip_address":"","ucode":"9ABE8E475E336B","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/78/29bd3f1e.jpg","comment_is_top":false,"comment_ctime":1550659972,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"35910398340","product_id":100017301,"comment_content":"学习好基础的知识，力求能开发出ES，Kafka，MQ 这一类的优秀开源工具。<br>一刷还没完成，但数据结构与算法，我一定会精通的，计划花200+小时的认真学习，精通数据结构与算法","like_count":9,"discussions":[{"author":{"id":1244845,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fe/ad/7fa85a7d.jpg","nickname":"放飞心情","note":"","ucode":"75A2192D91D86C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391513,"discussion_content":"至少花费400小时的伙伴在等你，很多还懵懵懂懂的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630490747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074734,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","nickname":"骑着🚀看银河","note":"","ucode":"8706A99A89F0CE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367053,"discussion_content":"后边再加个零","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618240930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259301,"avatar":"https://static001.geekbang.org/account/avatar/00/13/37/25/9d39b172.jpg","nickname":"星空","note":"","ucode":"B35FF4999D7CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363425,"discussion_content":"现在效果如何？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617192764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1507783,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","nickname":"夜涛","note":"","ucode":"672CC53663710B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307611,"discussion_content":"现在除了会个排序和二分查找 ，其他都快忘光了 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600695825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2019640,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d1/38/4bc4d6b9.jpg","nickname":"wxd","note":"","ucode":"21D9A850FFDE07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281592,"discussion_content":"哈哈，程序员的世界精通二字不可轻易出现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591772010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225231,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/0f/fff4d7c3.jpg","nickname":"TSY","note":"","ucode":"9A6E39EBC7EAE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267164,"discussion_content":"怎么样了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589610217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":92957,"discussion_content":"em\n200+小时 精通，老铁小心被打击啊。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576895960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68425,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1550499009,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27320302785","product_id":100017301,"comment_content":"1.目标不同，评价标准不同。<br>2.根据环境特征选择解决方法。<br>3.将复杂、开放的问题，合理抽象为特定范式。<br>4.善于找到问题的瓶颈，并优先解决。<br>5.善于借助前人的经验，并尽可能理解他们的经历与选择。<br>6.注意成本收益，投入恰到好处，切忌严重过度投入。","like_count":7},{"had_liked":false,"id":68187,"user_name":"未来的胡先森","can_delete":false,"product_type":"c1","uid":1234682,"ip_address":"","ucode":"AFF193AC0E2E6C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/fa/1f5bf642.jpg","comment_is_top":false,"comment_ctime":1550455073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23025291553","product_id":100017301,"comment_content":"这门专栏要不断的回过头去复习巩固，关键还是要不断的 coding 练习","like_count":6},{"had_liked":false,"id":68210,"user_name":"呦呦鹿鸣","can_delete":false,"product_type":"c1","uid":1238190,"ip_address":"","ucode":"BC80F2093CD6C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/ae/7b310c2d.jpg","comment_is_top":false,"comment_ctime":1550458115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14435360003","product_id":100017301,"comment_content":"是的，用最小的成本满足需求，这或许就是终极原则了。做设计时应该要有取舍，权衡各方面的优劣，切勿过度设计","like_count":4},{"had_liked":false,"id":219477,"user_name":"polly","can_delete":false,"product_type":"c1","uid":1496444,"ip_address":"","ucode":"E990ACF1CC31DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/d5/7c/848bdbc4.jpg","comment_is_top":false,"comment_ctime":1590029612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10179964204","product_id":100017301,"comment_content":"购买算法的课程比较晚，目前通读了一遍，但是没有亲手写算法，对算法有了一个整体的了解，不像有些书籍纯理论一样难啃，接下来找时间在leecode上刷刷题，自己动手写写，感谢王争老师","like_count":3},{"had_liked":false,"id":68183,"user_name":"郑晨Cc","can_delete":false,"product_type":"c1","uid":1324942,"ip_address":"","ucode":"57146E444D6329","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/8e/cf0b4575.jpg","comment_is_top":false,"comment_ctime":1550454665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10140389257","product_id":100017301,"comment_content":"老师终于不更新新知识点了 上周才搞定了动态规划，就要见到曙光了 哈哈","like_count":3},{"had_liked":false,"id":175479,"user_name":"Elliot","can_delete":false,"product_type":"c1","uid":1030070,"ip_address":"","ucode":"CC58A6FD2F338C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/b6/17103195.jpg","comment_is_top":false,"comment_ctime":1580731105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5875698401","product_id":100017301,"comment_content":"非常精彩","like_count":2},{"had_liked":false,"id":89139,"user_name":"万里有云","can_delete":false,"product_type":"c1","uid":1443026,"ip_address":"","ucode":"C715F2A9094413","user_header":"https://static001.geekbang.org/account/avatar/00/16/04/d2/4a5e3034.jpg","comment_is_top":false,"comment_ctime":1556090273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851057569","product_id":100017301,"comment_content":"学习数据结构于算法就和学习汇编语言一样，平时工作中很难直接用到，但它是软件运行的基础原理，理解和不理解还是有挺大的区别的。","like_count":2},{"had_liked":false,"id":70729,"user_name":"肖平亮  Sean","can_delete":false,"product_type":"c1","uid":1181280,"ip_address":"","ucode":"CDE4895F63CC23","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/60/cb7ba509.jpg","comment_is_top":false,"comment_ctime":1551170683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846137979","product_id":100017301,"comment_content":"希望我也能在谷歌工作。","like_count":1},{"had_liked":false,"id":69213,"user_name":"Simune","can_delete":false,"product_type":"c1","uid":1270641,"ip_address":"","ucode":"54E9FF6A1DA862","user_header":"https://static001.geekbang.org/account/avatar/00/13/63/71/09609fce.jpg","comment_is_top":false,"comment_ctime":1550678248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845645544","product_id":100017301,"comment_content":"因为工作原因中途掉队了，我还会回来的。多谢老师咯。","like_count":1},{"had_liked":false,"id":68184,"user_name":"integrity","can_delete":false,"product_type":"c1","uid":1249252,"ip_address":"","ucode":"C0C502DE1D988D","user_header":"https://static001.geekbang.org/account/avatar/00/13/0f/e4/fe35162f.jpg","comment_is_top":false,"comment_ctime":1550454694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845421990","product_id":100017301,"comment_content":"慢慢看","like_count":1},{"had_liked":false,"id":309371,"user_name":"侯恩训","can_delete":false,"product_type":"c1","uid":1162376,"ip_address":"","ucode":"F4DC47EECA0F00","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/88/fbb6022e.jpg","comment_is_top":false,"comment_ctime":1630071281,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1630071281","product_id":100017301,"comment_content":"学习总结<br>1. 时间和空间复杂度不能和性能划等号。<br>2. 抛开数据规模谈数据结构和算法就是耍流氓。<br>3. 结合数据特征和访问方式选择数据结构和算法。<br>4. 区别计算密集，内存密集和io密集。<br>5. 善用语言提供的类.<br>6. 不要过度优化","like_count":0,"discussions":[{"author":{"id":1042644,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e8/d4/a0c2569d.jpg","nickname":"骑白马的菜鸟","note":"","ucode":"6BD69C742B3AE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408471,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635251854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306693,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2732243,"ip_address":"","ucode":"D124F4FA4E816F","user_header":"https://static001.geekbang.org/account/avatar/00/29/b0/d3/200e82ff.jpg","comment_is_top":false,"comment_ctime":1628671622,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1628671622","product_id":100017301,"comment_content":"数据结构与算法交教给我的最大的思路就是如何将一个问题抽象成一个一个数据结构和算法。其实就跟我们做数学物理题一样。我们将问题的核心抽丝剥茧出来。","like_count":1},{"had_liked":false,"id":298207,"user_name":"槑·先生","can_delete":false,"product_type":"c1","uid":1445744,"ip_address":"","ucode":"897F0475592E3A","user_header":"https://static001.geekbang.org/account/avatar/00/16/0f/70/f59db672.jpg","comment_is_top":false,"comment_ctime":1623949344,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1623949344","product_id":100017301,"comment_content":"准备开始三刷","like_count":1},{"had_liked":false,"id":285823,"user_name":"邵帅","can_delete":false,"product_type":"c1","uid":1207488,"ip_address":"","ucode":"EB662C972CC248","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gLC1Z8lYdWPHquZbJCf5FfIDgOJKiapygoyNrl4b5fkibyV2LBnCKV5BjRAYOhPGJxL425rIdSVnibTMEg012S9Pg/132","comment_is_top":false,"comment_ctime":1617021254,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617021254","product_id":100017301,"comment_content":"还是无法区分内存密集型和cpu密集型  感觉大部分的指令操作都要读取内存啊。","like_count":0},{"had_liked":false,"id":285429,"user_name":"到道可道","can_delete":false,"product_type":"c1","uid":1031181,"ip_address":"","ucode":"12B94B6C26BE0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/0d/00424e81.jpg","comment_is_top":false,"comment_ctime":1616811954,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1616811954","product_id":100017301,"comment_content":"这个课程是很早订阅的，现在来二刷","like_count":0},{"had_liked":false,"id":252315,"user_name":"海洋行者","can_delete":false,"product_type":"c1","uid":1376730,"ip_address":"","ucode":"3C3A1F8686EED0","user_header":"https://static001.geekbang.org/account/avatar/00/15/01/da/834fc35a.jpg","comment_is_top":false,"comment_ctime":1602232855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602232855","product_id":100017301,"comment_content":"Mark一下，整整 80 h 完成一刷，虽然在学习过程中，能动手实践的基本上都闭卷做了一遍，不理解的地方也参考其他书籍和博客、视频来补充，不过很多东西回头就忘，没能做到学而时习之，温故而知新！准备在二刷的过程融会贯通。","like_count":0},{"had_liked":false,"id":240111,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1596764239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596764239","product_id":100017301,"comment_content":"你倒是优化了，但是相关的业务本年也没几次，结果别人接手在不改变原有逻辑的情况下添加新功能，看的蛋疼。","like_count":0},{"had_liked":false,"id":225159,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1591669260,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1591669260","product_id":100017301,"comment_content":"这个总结课写的真好，解决了一些工作中的困惑。<br><br>其实在日常工作中，未必能够有意识的去选择算法，毕竟不是每个人都是算法工程师。但是我一直觉得算法其实是一种思维训练，从知道概念，到手熟，再到下意识的编码实现。<br><br>在工作中可能最重要的就是根据数据的规模、特征和访问方式来选择合适的算法，另外就是要考虑性能上的要求。<br><br>课程中间也介绍了很多 Java 提供的类库，对我来说，首先是要能选择合适的类和函数去实现功能。最近几年，Java 的变化挺大的，我需要更新一下自己的 Java 知识。<br><br>如果可能的话，自己写一些 Benchmark，根据测试得到数据对代码进行优化，但是不要过早优化、不要过度优化。","like_count":1},{"had_liked":false,"id":185257,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1583547573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583547573","product_id":100017301,"comment_content":"课程买了半年了，才看完。有些章节读了好几遍，感想颇多。","like_count":0},{"had_liked":false,"id":174219,"user_name":"梦想的优惠券","can_delete":false,"product_type":"c1","uid":1257418,"ip_address":"","ucode":"D3B44F6C618CA7","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/ca/cbce6e94.jpg","comment_is_top":false,"comment_ctime":1580094038,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1580094038","product_id":100017301,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":146171,"user_name":"Tom.G","can_delete":false,"product_type":"c1","uid":1206034,"ip_address":"","ucode":"7929B45C1A51F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/12/5c6eb568.jpg","comment_is_top":false,"comment_ctime":1572446819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572446819","product_id":100017301,"comment_content":"去年订阅的，今年9月才开始，终于赶上","like_count":0},{"had_liked":false,"id":113073,"user_name":"daniel李","can_delete":false,"product_type":"c1","uid":1248280,"ip_address":"","ucode":"573840F0C6573E","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/18/bacf4b7a.jpg","comment_is_top":false,"comment_ctime":1562893251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562893251","product_id":100017301,"comment_content":"总结的很好。<br><br>碰到大部分的工程师都是死磕时间复杂度，老是实际数据规模很小却用海量数据的假设来设计解决方案。空间复杂度不管，数据结构预处理成本不管","like_count":0},{"had_liked":false,"id":112078,"user_name":"安然自若","can_delete":false,"product_type":"c1","uid":1202709,"ip_address":"","ucode":"1BF9CB4F6B6F5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/15/adeb7be2.jpg","comment_is_top":false,"comment_ctime":1562664891,"is_pvip":false,"replies":[{"id":"40809","content":"https:&#47;&#47;github.com&#47;wangzheng0822&#47;algo","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1562712115,"ip_address":"","comment_id":112078,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562664891","product_id":100017301,"comment_content":"代码在哪里🧐","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457564,"discussion_content":"https://github.com/wangzheng0822/algo","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562712115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90133,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1556423229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556423229","product_id":100017301,"comment_content":"学完打卡，面试前回来复习，老师讲到的工程方面的例子，面试的时候往往都会问到","like_count":0},{"had_liked":false,"id":74587,"user_name":"有朋自远方来","can_delete":false,"product_type":"c1","uid":1083600,"ip_address":"","ucode":"23A12829DEB119","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/d0/6e75f766.jpg","comment_is_top":false,"comment_ctime":1552263588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552263588","product_id":100017301,"comment_content":"我工作中用不到算法。。。。。。","like_count":0},{"had_liked":false,"id":72249,"user_name":"Sharry","can_delete":false,"product_type":"c1","uid":1239293,"ip_address":"","ucode":"045DDB864659F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/fd/035f4c94.jpg","comment_is_top":false,"comment_ctime":1551540113,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551540113","product_id":100017301,"comment_content":"一路走来自己的数据结构与算法的知识终于有了体系了, 如老师所说, 我使用的打怪升级的方式, 每积攒一个技能, 便多收获一丝喜悦","like_count":0},{"had_liked":false,"id":69894,"user_name":"Gordon","can_delete":false,"product_type":"c1","uid":1072448,"ip_address":"","ucode":"19F1FDE40E6A1D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/40/e0a47f30.jpg","comment_is_top":false,"comment_ctime":1550898768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550898768","product_id":100017301,"comment_content":"感谢王老师的陪伴，收获很多。","like_count":0},{"had_liked":false,"id":68559,"user_name":"Ｍｒ．Ｒｉｇｈｔ_li","can_delete":false,"product_type":"c1","uid":1002636,"ip_address":"","ucode":"FDEB86F7BB2C29","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/8c/120e2cdb.jpg","comment_is_top":false,"comment_ctime":1550544702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550544702","product_id":100017301,"comment_content":"更新完了，开始复习了","like_count":0}]}