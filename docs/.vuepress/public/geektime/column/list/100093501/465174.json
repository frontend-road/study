{"id":465174,"title":"24｜方法：理解“方法”的本质","content":"<p>你好，我是Tony Bai。</p><p>在前面的几讲中，我们对Go函数做了一个全面系统的学习。我们知道，函数是Go代码中的基本功能逻辑单元，<strong>它承载了Go程序的所有执行逻辑。可以说，Go程序的执行流本质上就是在函数调用栈中上下流动，从一个函数到另一个函数</strong>。</p><p>讲到这里，如果你做过提前预习，你可能要站出来反驳我了：“老师，你的说法太过绝对了，Go语言还有一种语法元素，<strong>方法（method）</strong>，它也可以承载代码逻辑，程序也可以从一个方法流动到另外一个方法”。</p><p>别急！我这么说自然有我的道理，等会儿你就知道了。从这节课开始，我们会花三节课的时间，系统讲解Go语言中的<strong>方法</strong>。我们将围绕方法的本质、方法receiver的类型选择、方法集合，以及如何实现方法的“继承”这几个主题，进行讲解。</p><p>那么，在这一节课中，我就先来解答我们开头提到的这个问题，看看Go语言中的方法究竟是什么。等你掌握了方法的本质后，再来评判我的说法是否正确也不迟。</p><h2>认识Go方法</h2><p>我们知道，Go语言从设计伊始，就不支持经典的面向对象语法元素，比如类、对象、继承，等等，但Go语言仍保留了名为“方法（method）”的语法元素。当然，Go语言中的方法和面向对象中的方法并不是一样的。Go引入方法这一元素，并不是要支持面向对象编程范式，而是Go践行组合设计哲学的一种实现层面的需要。这个我们后面课程会展开细讲，这里你先了解一下就可以了。</p><!-- [[[read_end]]] --><p>简单了解之后，我们就以Go标准库net/http包中*Server类型的方法ListenAndServeTLS为例，讲解一下Go方法的一般形式：</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/dd/7b3a2b6b620a27cca9b92bf612e66ddd.jpg?wh=2096x990\" alt=\"\"></p><p>Go中方法的声明和函数的声明有很多相似之处，我们可以参照着来学习。比如，Go的方法也是以func关键字修饰的，并且和函数一样，也包含方法名（对应函数名）、参数列表、返回值列表与方法体（对应函数体）。</p><p>而且，方法中的这几个部分和函数声明中对应的部分，在形式与语义方面都是一致的，比如：方法名字首字母大小写决定该方法是否是导出方法；方法参数列表支持变长参数；方法的返回值列表也支持具名返回值等。</p><p>不过，它们也有不同的地方。从上面这张图我们可以看到，和由五个部分组成的函数声明不同，Go方法的声明有<strong>六个组成部分</strong>，多的一个就是图中的receiver部分。在receiver部分声明的参数，Go称之为receiver参数，<strong>这个receiver参数也是方法与类型之间的纽带，也是方法与函数的最大不同。</strong></p><p><strong>接下来我们就重点说说这部分声明的receiver参数。</strong></p><p>Go中的方法必须是归属于一个类型的，而receiver参数的类型就是这个方法归属的类型，或者说这个方法就是这个类型的一个方法。我们以上图中的ListenAndServeTLS为例，这里的receiver参数srv的类型为*Server，那么我们可以说，这个方法就是*Server类型的方法，</p><p>注意！这里我说的是ListenAndServeTLS是*Server类型的方法，而不是Server类型的方法。具体的原因，我们在后面课程还会细讲，这里你先有这个认知就好了。</p><p>为了方便讲解，我们将上面例子中的方法声明，转换为一个方法的一般声明形式：</p><pre><code class=\"language-plain\">func (t *T或T) MethodName(参数列表) (返回值列表) {\n    // 方法体\n}\n</code></pre><p>无论receiver参数的类型为*T还是T，我们都把一般声明形式中的T叫做receiver参数t的基类型。如果t的类型为T，那么说这个方法是类型T的一个方法；如果t的类型为*T，那么就说这个方法是类型*T的一个方法。而且，要注意的是，每个方法只能有一个receiver参数，Go不支持在方法的receiver部分放置包含多个receiver参数的参数列表，或者变长receiver参数。</p><p>那么，receiver参数的作用域是什么呢？</p><p>你还记得我们在<a href=\"https://time.geekbang.org/column/article/436915\">第11讲</a>中提到过的、关于函数/方法作用域的结论吗？我们这里再复习一下：<strong>方法接收器（receiver）参数、函数/方法参数，以及返回值变量对应的作用域范围，都是函数/方法体对应的显式代码块</strong>。</p><p>这就意味着，receiver部分的参数名不能与方法参数列表中的形参名，以及具名返回值中的变量名存在冲突，必须在这个方法的作用域中具有唯一性。如果这个不唯一不存在，比如像下面例子中那样，Go编译器就会报错：</p><pre><code class=\"language-plain\">type T struct{}\n\nfunc (t T) M(t string) { // 编译器报错：duplicate argument t (重复声明参数t)\n    ... ...\n}\n</code></pre><p>不过，如果在方法体中，我们没有用到receiver参数，我们也可以省略receiver的参数名，就像下面这样：</p><pre><code class=\"language-plain\">type T struct{}\n\nfunc (T) M(t string) { \n    ... ...\n}\n</code></pre><p>仅当方法体中的实现不需要receiver参数参与时，我们才会省略receiver参数名，不过这一情况很少使用，你了解一下就好了。</p><p>除了receiver参数名字要保证唯一外，Go语言对receiver参数的基类型也有约束，那就是<strong>receiver参数的基类型本身不能为指针类型或接口类型</strong>。下面的例子分别演示了基类型为指针类型和接口类型时，Go编译器报错的情况：</p><pre><code class=\"language-plain\">type MyInt *int\nfunc (r MyInt) String() string { // r的基类型为MyInt，编译器报错：invalid receiver type MyInt (MyInt is a pointer type)\n    return fmt.Sprintf(\"%d\", *(*int)(r))\n}\n\ntype MyReader io.Reader\nfunc (r MyReader) Read(p []byte) (int, error) { // r的基类型为MyReader，编译器报错：invalid receiver type MyReader (MyReader is an interface type)\n    return r.Read(p)\n}\n</code></pre><p>最后，Go对方法声明的位置也是有约束的，Go要求，<strong>方法声明要与receiver参数的基类型声明放在同一个包内</strong>。基于这个约束，我们还可以得到两个推论。</p><ul>\n<li>第一个推论：<strong>我们不能为原生类型（诸如int、float64、map等）添加方法</strong>。<br>\n比如，下面的代码试图为Go原生类型int增加新方法Foo，这样做，Go编译器会报错：</li>\n</ul><pre><code class=\"language-plain\">func (i int) Foo() string { // 编译器报错：cannot define new methods on non-local type int\n    return fmt.Sprintf(\"%d\", i) \n}\n</code></pre><ul>\n<li>第二个推论：<strong>不能跨越Go包为其他包的类型声明新方法</strong>。<br>\n比如，下面的代码试图跨越包边界，为Go标准库中的http.Server类型添加新方法Foo，这样做，Go编译器同样会报错：</li>\n</ul><pre><code class=\"language-plain\">import \"net/http\"\n\nfunc (s http.Server) Foo() { // 编译器报错：cannot define new methods on non-local type http.Server\n}\n</code></pre><p>到这里，我们已经基本了解了Go方法的声明形式以及对receiver参数的相关约束。有了这些基础后，我们就可以看一下如何使用这些方法（method）。</p><p>我们直接还是通过一个例子理解一下。如果receiver参数的基类型为T，那么我们说receiver参数绑定在T上，我们可以通过*T或T的变量实例调用该方法：</p><pre><code class=\"language-plain\">type T struct{}\n\nfunc (t T) M(n int) {\n}\n\nfunc main() {\n    var t T\n    t.M(1) // 通过类型T的变量实例调用方法M\n\n    p := &amp;T{}\n    p.M(2) // 通过类型*T的变量实例调用方法M\n}\n</code></pre><p>不过，看到这里你可能会问，这段代码中，方法M是类型T的方法，那为什么通过*T类型变量也可以调用M方法呢？关于这个问题，我会在下一讲中告诉你原因，这里你先了解方法的调用方式就好了。</p><p>从上面这些分析中，我们也可以看到，和其他主流编程语言相比，Go语言的方法，只比函数多出了一个receiver参数，这就大大降低了Gopher们学习方法这一语法元素的门槛。</p><p>但即便如此，你在使用方法时可能仍然会有一些疑惑，比如，方法的类型是什么？我们是否可以将方法赋值给函数类型的变量？调用方法时方法对receiver参数的修改是不是外部可见的？要想解除你心中这些疑惑，我们就必须深入到方法的本质层面。</p><p>接下来我们就来看看本质上Go方法究竟是什么。</p><h2>方法的本质是什么？</h2><p>通过前面的学习，我们知道了Go的方法与Go中的类型是通过receiver联系在一起，我们可以为任何非内置原生类型定义方法，比如下面的类型T：</p><pre><code class=\"language-plain\">type T struct { \n    a int\n}\n\nfunc (t T) Get() int {  \n    return t.a \n}\n\nfunc (t *T) Set(a int) int { \n    t.a = a \n    return t.a \n}\n</code></pre><p>我们可以和典型的面向对象语言C++做下对比。如果你了解C++语言，尤其是看过C++大牛、《C++ Primer》作者Stanley B·Lippman的大作<a href=\"https://book.douban.com/subject/1091086/\">《深入探索C++对象模型》</a>，你大约会知道，C++中的对象在调用方法时，编译器会自动传入指向对象自身的this指针作为方法的第一个参数。</p><p>而Go方法中的原理也是相似的，只不过我们是将receiver参数以第一个参数的身份并入到方法的参数列表中。按照这个原理，我们示例中的类型T和*T的方法，就可以分别等价转换为下面的普通函数：</p><pre><code class=\"language-plain\">// 类型T的方法Get的等价函数\nfunc Get(t T) int {  \n    return t.a \n}\n\n// 类型*T的方法Set的等价函数\nfunc Set(t *T, a int) int { \n    t.a = a \n    return t.a \n}\n</code></pre><p>这种等价转换后的函数的类型就是方法的类型。只不过在Go语言中，这种等价转换是由Go编译器在编译和生成代码时自动完成的。Go语言规范中还提供了<strong>方法表达式（Method Expression）</strong>的概念，可以让我们更充分地理解上面的等价转换，我们来看一下。</p><p>我们还以上面类型T以及它的方法为例，结合前面说过的Go方法的调用方式，我们可以得到下面代码：</p><pre><code class=\"language-plain\">var t T\nt.Get()\n(&amp;t).Set(1)\n</code></pre><p>我们可以用另一种方式，把上面的方法调用做一个等价替换：</p><pre><code class=\"language-plain\">var t T\nT.Get(t)\n(*T).Set(&amp;t, 1)\n</code></pre><p>这种直接以类型名T调用方法的表达方式，被称为 <strong>Method Expression</strong>。通过Method Expression这种形式，类型T只能调用T的方法集合（Method Set）中的方法，同理类型*T也只能调用*T的方法集合中的方法。关于方法集合，我们会在下一讲中详细讲解。</p><p>我们看到，<strong>Method Expression</strong> 有些类似于C++中的静态方法（Static Method），C++中的静态方法在使用时，以该C++类的某个对象实例作为第一个参数，而Go语言的Method Expression在使用时，同样以receiver参数所代表的类型实例作为第一个参数。</p><p>这种通过Method Expression对方法进行调用的方式，与我们之前所做的方法到函数的等价转换是如出一辙的。所以，<strong>Go语言中的方法的本质就是，一个以方法的receiver参数作为第一个参数的普通函数</strong>。</p><p>而且，Method Expression就是Go方法本质的最好体现，因为方法自身的类型就是一个普通函数的类型，我们甚至可以将它作为右值，赋值给一个函数类型的变量，比如下面示例：</p><pre><code class=\"language-plain\">func main() {\n    var t T\n    f1 := (*T).Set // f1的类型，也是*T类型Set方法的类型：func (t *T, int)int\n    f2 := T.Get    // f2的类型，也是T类型Get方法的类型：func(t T)int\n    fmt.Printf(\"the type of f1 is %T\\n\", f1) // the type of f1 is func(*main.T, int) int\n    fmt.Printf(\"the type of f2 is %T\\n\", f2) // the type of f2 is func(main.T) int\n    f1(&amp;t, 3)\n    fmt.Println(f2(t)) // 3\n}\n</code></pre><p>既然<strong>方法本质上也是函数</strong>，那么我们在这节课开头的争论也就有了答案，这已经能够证明我的说法是正确的。但看到这里，你可能会问：我知道方法的本质是函数又怎么样呢？它对我在实际编码工作有什么帮助吗？</p><p>下面我们就以一个实际例子来看看，如何基于对方法本质的深入理解，来分析解决实际编码工作中遇到的真实问题。</p><h2>巧解难题</h2><p>这个例子是来自于<a href=\"https://tonybai.com\">我个人博客</a>的一次真实的读者咨询，他的问题代码是这样的：</p><pre><code class=\"language-plain\">package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\ntype field struct {\n    name string\n}\n\nfunc (p *field) print() {\n    fmt.Println(p.name)\n}\n\nfunc main() {\n    data1 := []*field{{\"one\"}, {\"two\"}, {\"three\"}}\n    for _, v := range data1 {\n        go v.print()\n    }\n\n    data2 := []field{{\"four\"}, {\"five\"}, {\"six\"}}\n    for _, v := range data2 {\n        go v.print()\n    }\n\n    time.Sleep(3 * time.Second)\n}\n</code></pre><p>这段代码在我的多核macOS上的运行结果是这样（由于Goroutine调度顺序不同，你自己的运行结果中的行序可能与下面的有差异）：</p><pre><code class=\"language-plain\">one\ntwo\nthree\nsix\nsix\nsix\n</code></pre><p>这位读者的问题显然是：<strong>为什么对data2迭代输出的结果是三个“six”，而不是four、five、six？</strong></p><p>那我们就来分析一下。</p><p>首先，我们根据 <strong>Go方法的本质</strong>，也就是<strong>一个以方法的receiver参数作为第一个参数的普通函数</strong>，对这个程序做个<strong>等价变换</strong>。这里我们利用Method Expression方式，等价变换后的源码如下：</p><pre><code class=\"language-plain\">type field struct {\n    name string\n}\n\nfunc (p *field) print() {\n    fmt.Println(p.name)\n}\n\nfunc main() {\n    data1 := []*field{{\"one\"}, {\"two\"}, {\"three\"}}\n    for _, v := range data1 {\n        go (*field).print(v)\n    }\n\n    data2 := []field{{\"four\"}, {\"five\"}, {\"six\"}}\n    for _, v := range data2 {\n        go (*field).print(&amp;v)\n    }\n\n    time.Sleep(3 * time.Second)\n}\n</code></pre><p>这段代码中，我们把对field的方法print的调用，替换为Method Expression形式，替换前后的程序输出结果是一致的。但变换后，问题是不是豁然开朗了！我们可以很清楚地看到使用go关键字启动一个新Goroutine时，method expression形式的print函数是如何绑定参数的：</p><ul>\n<li>\n<p>迭代data1时，由于data1中的元素类型是field指针(*field)，因此赋值后v就是元素地址，与print的receiver参数类型相同，每次调用(*field).print函数时直接传入的v即可，实际上传入的也是各个field元素的地址；</p>\n</li>\n<li>\n<p>迭代data2时，由于data2中的元素类型是field（非指针），与print的receiver参数类型不同，因此需要将其取地址后再传入(*field).print函数。这样每次传入的&amp;v实际上是变量v的地址，而不是切片data2中各元素的地址。</p>\n</li>\n</ul><p>在<a href=\"https://time.geekbang.org/column/article/450944\">第19讲《控制结构：Go的for循环，仅此一种》</a>中，我们学习过for range使用时应注意的几个问题，其中循环变量复用是关键的一个。这里的v在整个for range过程中只有一个，因此data2迭代完成之后，<strong>v是元素“six”的拷贝</strong>。</p><p>这样，一旦启动的各个子goroutine在main goroutine执行到Sleep时才被调度执行，那么最后的三个goroutine在打印&v时，实际打印的也就是在v中存放的值“six”。而前三个子goroutine各自传入的是元素“one”、“two”和“three”的地址，所以打印的就是“one”、“two”和“three”了。</p><p>那么原程序要如何修改，才能让它按我们期望，输出“one”、“two”、“three”、“four”、 “five”、“six”呢？</p><p>其实，我们只需要将field类型print方法的receiver类型由*field改为field就可以了。我们直接来看一下修改后的代码：</p><pre><code class=\"language-plain\">type field struct {\n    name string\n}\n\nfunc (p field) print() {\n    fmt.Println(p.name)\n}\n\nfunc main() {\n    data1 := []*field{{\"one\"}, {\"two\"}, {\"three\"}}\n    for _, v := range data1 {\n        go v.print()\n    }\n\n    data2 := []field{{\"four\"}, {\"five\"}, {\"six\"}}\n    for _, v := range data2 {\n        go v.print()\n    }\n\n    time.Sleep(3 * time.Second)\n}\n</code></pre><p>修改后的程序的输出结果是这样的（因Goroutine调度顺序不同，在你的机器上的结果输出顺序可能会有不同）：</p><pre><code class=\"language-plain\">one\ntwo\nthree\nfour\nfive\nsix\n</code></pre><p>为什么这回就可以输出预期的值了呢？我把它留作这节课的思考题，你可以参考我的分析思路自行分析一下，欢迎你在留言区给出你的答案。</p><h2>小结</h2><p>好了，今天的课讲到这里就结束了，现在我们一起来回顾一下吧。</p><p>在这一讲中，我们开始讲解Go语言中除函数之外的、另一种可承载代码执行逻辑的语法元素：方法（method）。</p><p>我们要知道，Go提供方法这种语法，并非出自对经典面向对象编程范式支持的考虑，而是出自Go的组合设计哲学下类型系统实现层面上的需要。</p><p>Go方法在声明形式上相较于Go函数多了一个receiver组成部分，这个部分是方法与类型之间联系的纽带。我们可以在receiver部分声明receiver参数。但Go对receiver参数有诸多限制，比如只能有一个、参数名唯一、不能是变长参数等等。</p><p>除此之外，Go对receiver参数的基类型也是有约束的，即基类型本身不能是指针类型或接口类型。Go方法声明的位置也受到了Go规范的约束，方法声明必须与receiver参数的基类型在同一个包中。</p><p>Go方法本质上其实是一个函数，这个函数以方法的receiver参数作为第一个参数，Go编译器会在我们进行方法调用时协助进行这样的转换。牢记并理解方法的这个本质可以帮助我们在实际编码中解决一些奇怪的问题。</p><h2>思考题</h2><p>在“巧解难题”部分，我给你留了个问题，为啥我们只需要将field类型print方法的receiver类型，由*field改为field就可以输出预期的结果了呢？期待在留言区看到你的答案。</p><p>欢迎你把这节课分享给更多对Go语言的方法感兴趣的朋友。我是Tony Bai，我们下节课见。</p>","comments":[{"had_liked":false,"id":325407,"user_name":"ddh","can_delete":false,"product_type":"c1","uid":2806043,"ip_address":"","ucode":"8E852375365F16","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","comment_is_top":false,"comment_ctime":1638947977,"is_pvip":false,"replies":[{"id":118600,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562247,"ip_address":"","comment_id":325407,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"思考题解答：\n      由 *field 改为 field结果正确的原因是， *field的方法的第一个参数是*field， 这个对于[]*field数组直接传入成员就可以了， 而对于[]field数组， 则是要取地址，也就是指针。 但是这个指针指的是for range 循环的局部变量的地址， 这个地址在for 循环中是不变的， 在for循环结束后这个地址就指向了最后一个元素， goroutine真正实行打印的解引用的地址是局部变量的地址， 自然只会打印最后一个元素了\n     field 的方法， 不涉及引用， 传参都是拷贝复制","like_count":55},{"had_liked":false,"id":351508,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1657855449,"is_pvip":false,"replies":[{"id":127866,"content":"你这个问题很好👍。\n\n我可以将其转换为另外一个几乎等价的问题：我们知道c++的方法(成员函数)本质就是以编译器插入的一个this指针作为首个参数的普通函数。那么大家为什么不直接用c的函数，非要用面向对象的c++呢？\n\n其实你的问题本质上是一个编程范式演进的过程。Go类型+方法(类比于c++的类+方法)和oo范式一样，是一种“封装”概念的实现，即隐藏自身状态，仅提供方法供调用者对其状态进行正确改变操作，防止其他事物对其进行错误的状态改变操作。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1658016012,"ip_address":"","comment_id":351508,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"go方法的本质是一个以方法的 receiver 参数作为第一个参数的普通函数\n函数是第一等公民，那大家都写函数就行了，方法存在的意义是啥呢？","like_count":18,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538952,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030733,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ba/4d/7ba09ff0.jpg","nickname":"郑童文","note":"","ucode":"3D193715CB8549","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593205,"discussion_content":"请问为什么goroutin 是在 for 循环到了最后一个值才开始执行呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1668002602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3222094,"avatar":"https://static001.geekbang.org/account/avatar/00/31/2a/4e/a3f53cae.jpg","nickname":"撕影","note":"","ucode":"8DC169F8B8E653","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":594595,"discussion_content":" &#34;这个地址在for 循环中是不变的， 在for循环结束后这个地址就指向了最后一个元素&#34;\n这里不懂，既然地址不变是怎么做到循环结束后就指向了最后一个元素的？\n这里若把 “go” 去掉，第二个循环 就是执行 v.print()等价于 field.print(&amp;v)  那还是可以按意图打印,按说这里地址是不变的，求解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669195692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325303,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1638902366,"is_pvip":false,"replies":[{"id":118587,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639558618,"ip_address":"","comment_id":325303,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"思考题，reciever是 field 值类型非 *field 指针类型，转换后的方法表达式如下：\n1) field.print(*v)\n2) field.print(v)\n打印的都是切片的元素的值。","like_count":16,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580215,"discussion_content":"你这个问题很好👍。\n\n我可以将其转换为另外一个几乎等价的问题：我们知道c++的方法(成员函数)本质就是以编译器插入的一个this指针作为首个参数的普通函数。那么大家为什么不直接用c的函数，非要用面向对象的c++呢？\n\n其实你的问题本质上是一个编程范式演进的过程。Go类型+方法(类比于c++的类+方法)和oo范式一样，是一种“封装”概念的实现，即隐藏自身状态，仅提供方法供调用者对其状态进行正确改变操作，防止其他事物对其进行错误的状态改变操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658016013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1648999,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/67/fc61a741.jpg","nickname":"田小麦","note":"","ucode":"4C10997F6173ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589921,"discussion_content":"这个问题确实问的好，就是开头说的编程范式！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665396888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325862,"user_name":"左耳朵东","can_delete":false,"product_type":"c1","uid":1160678,"ip_address":"","ucode":"60134ACF12BB52","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","comment_is_top":false,"comment_ctime":1639203746,"is_pvip":false,"replies":[{"id":119083,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1640053835,"ip_address":"","comment_id":325862,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"如果 print 方法的 receiver 类型为 field：\n首先，两个 for range 循环中的 go v.print() 分别等同于 go field.print(*v) 和 go field.print(v)，\n然后，第一个 for range  循环，用 *field 去调用 print 方法时，编译器检测到 print 方法只接受 field 值类型参数，所以自动做了隐式类型转换，转成 *v 后传入 print 方法\n可以看到两个 for range 中实际传到 print 的实参都是 field 值类型而非指针类型，所以就得到了预期结果","like_count":15,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538930,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639558618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558445,"discussion_content":"所以，前者是传递引用，属于浅拷贝\n后者是传递值，属于深拷贝，？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648302525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325341,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1638928098,"is_pvip":false,"replies":[{"id":118599,"content":"这.... :)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562236,"ip_address":"","comment_id":325341,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师在我心目中就是 “Go 语言百科全书”。","like_count":13,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540407,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640053835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344782,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKkkzHH7lKmxHdJmZW4niaUNicmZwVr8usAxDp93RgicDSicoVpict2ezIexpnTEs5dZQibQdt1V0UMlCUg/132","nickname":"Geek_d560e0","note":"","ucode":"064A1AE69F5BC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628624,"discussion_content":"用 *field 去调用 print 方法时，编译器检测到 print 方法只接受 field 值类型参数，所以自动做了隐式类型转换，转成 *v 后传入 print 方法。 豁然开朗。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695632813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585760,"discussion_content":"感觉这个解释的最清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661793850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325469,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1638968575,"is_pvip":true,"replies":[{"id":118604,"content":"指针在Go中被弱化，所以我在设计大纲时没有特意为之留出章节，如果大家有这方面的想法，我和编辑老师看看是否可以在加餐中补充一下。但可能要放在后面了","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639563094,"ip_address":"","comment_id":325469,"utype":1}],"discussion_count":2,"race_medal":4,"score":2,"product_id":100093501,"comment_content":"*field 改为 field，由指针类型变成普通类型。goroutine在编译的时候就初始化了变量吧，那么指针类型的自然会随着变化而变化，普通类型被值拷贝而不会发生变化。\n* 和 &amp; 都是值得花时间学习和理解的东西，不知道老师后面会不会特别的说一下呢？","like_count":9,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538951,"discussion_content":"这.... :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325744,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1639113538,"is_pvip":false,"replies":[{"id":118798,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639804241,"ip_address":"","comment_id":325744,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"一直以为 func 开头的就是方法，原来还分函数和方法！我对方法的理解：\n1. 提供了良好的封装，receiver 限定了使用对象，方法名可以表使用达对象可以提供的行为\n2. 使用起来更方便简洁，因为可以少传一个参数\n3. Go 语言设计者的思维真是缜密啊，“方法声明必须与 receiver 参数的基类型在同一个包中”这个规则解决了无数可能出现的奇奇怪怪的情况\n4. 可以促进包中代码功能的高内聚，因为你出了包，定义方法时会受到限制，可以及时发现：哎呀，有问题","like_count":6,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538957,"discussion_content":"指针在Go中被弱化，所以我在设计大纲时没有特意为之留出章节，如果大家有这方面的想法，我和编辑老师看看是否可以在加餐中补充一下。但可能要放在后面了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639563094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585761,"discussion_content":"个人理解：  *用于修饰类型（基础类型或者其它高级类型，或自定义类型）， 如果函数中采用*T, 表示这个函数为指针参数，调用时需要传入地址进来；如果结合某个实例使用*，表示取这个指针地址实际指向的内存值。    而&amp;用于修饰实例，例如 var t T,   &amp;t 表示这个实例t的地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661794056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350751,"user_name":"Roway","can_delete":false,"product_type":"c1","uid":1060967,"ip_address":"","ucode":"65AF589142AB6C","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/67/a1e9aaba.jpg","comment_is_top":false,"comment_ctime":1657162507,"is_pvip":true,"replies":[{"id":127610,"content":"T泛指一个go类型\n*T 是T类型的指针类型\n&amp;T{} 返回一个T类型实例的指针\n_ 是go语法中的空标识符\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1657172707,"ip_address":"","comment_id":350751,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100093501,"comment_content":"*T &amp;T T _ 这四个分别是什么意思？还有哪些基本的概念","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579089,"discussion_content":"T泛指一个go类型\n*T 是T类型的指针类型\n&amp;T{} 返回一个T类型实例的指针\n_ 是go语法中的空标识符\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657172707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333619,"user_name":"Untitled","can_delete":false,"product_type":"c1","uid":1039464,"ip_address":"","ucode":"8DD6ABA3E81A2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/68/006ba72c.jpg","comment_is_top":false,"comment_ctime":1644453167,"is_pvip":false,"replies":[{"id":121973,"content":"T是基类型，说的是T本身不能为指针类型。\n\ntype T *int\nfunc (T) M1() {} &#47;&#47; invalid receiver type T (pointer or interface type)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644591411,"ip_address":"","comment_id":333619,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"receiver 参数的基类型本身不能为指针类型或接口类型？？\n*T不是指针类型吗？不理解","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550569,"discussion_content":"T是基类型，说的是T本身不能为指针类型。\n\ntype T *int\nfunc (T) M1() {} // invalid receiver type T (pointer or interface type)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644591411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362099,"user_name":"不说话装糕手","can_delete":false,"product_type":"c1","uid":2922271,"ip_address":"北京","ucode":"6465E83F4E6F58","user_header":"https://static001.geekbang.org/account/avatar/00/2c/97/1f/2a68c980.jpg","comment_is_top":false,"comment_ctime":1668151646,"is_pvip":false,"replies":[{"id":131792,"content":"实际上当然会传入，来个例子证明一下吧。\n\ntype Foo struct {\n}\n\nfunc (Foo) M1(a int, b int) int {\n    return a + b\n}\n\nfunc main() {\n    m1 := Foo.M1\n    fmt.Printf(&quot;%T\\n&quot;, m1)\n}\n\n运行这个例子输出：func(main.Foo, int, int) int","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1668407643,"ip_address":"北京","comment_id":362099,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"白老师您好，关于文章中“没有用到 receiver 参数，我们也可以省略 receiver 的参数名”情况，如果把方法看作是第一个参数为receiver的函数，那么这个没有形参名字的receiver类型参数，实际上是否传入了函数，并且该如何设计代码验证呢？","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539671,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639804241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537758,"discussion_content":"这几天学习下来，我感觉可以和 Java 对比一下来理解（当然这是非完全正确区别）：\n1) 方法就跟 Java 中的实例方法类似；\n2) 函数就跟 Java 中的类方法（静态方法）类似。\n\n还有就是：方法表行为，函数表功能。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639155944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325407,"user_name":"ddh","can_delete":false,"product_type":"c1","uid":2806043,"ip_address":"","ucode":"8E852375365F16","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","comment_is_top":false,"comment_ctime":1638947977,"is_pvip":false,"replies":[{"id":118600,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562247,"ip_address":"","comment_id":325407,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"思考题解答：\n      由 *field 改为 field结果正确的原因是， *field的方法的第一个参数是*field， 这个对于[]*field数组直接传入成员就可以了， 而对于[]field数组， 则是要取地址，也就是指针。 但是这个指针指的是for range 循环的局部变量的地址， 这个地址在for 循环中是不变的， 在for循环结束后这个地址就指向了最后一个元素， goroutine真正实行打印的解引用的地址是局部变量的地址， 自然只会打印最后一个元素了\n     field 的方法， 不涉及引用， 传参都是拷贝复制","like_count":55,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538952,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030733,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ba/4d/7ba09ff0.jpg","nickname":"郑童文","note":"","ucode":"3D193715CB8549","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593205,"discussion_content":"请问为什么goroutin 是在 for 循环到了最后一个值才开始执行呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1668002602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3222094,"avatar":"https://static001.geekbang.org/account/avatar/00/31/2a/4e/a3f53cae.jpg","nickname":"撕影","note":"","ucode":"8DC169F8B8E653","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":594595,"discussion_content":" &#34;这个地址在for 循环中是不变的， 在for循环结束后这个地址就指向了最后一个元素&#34;\n这里不懂，既然地址不变是怎么做到循环结束后就指向了最后一个元素的？\n这里若把 “go” 去掉，第二个循环 就是执行 v.print()等价于 field.print(&amp;v)  那还是可以按意图打印,按说这里地址是不变的，求解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669195692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351508,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1657855449,"is_pvip":false,"replies":[{"id":127866,"content":"你这个问题很好👍。\n\n我可以将其转换为另外一个几乎等价的问题：我们知道c++的方法(成员函数)本质就是以编译器插入的一个this指针作为首个参数的普通函数。那么大家为什么不直接用c的函数，非要用面向对象的c++呢？\n\n其实你的问题本质上是一个编程范式演进的过程。Go类型+方法(类比于c++的类+方法)和oo范式一样，是一种“封装”概念的实现，即隐藏自身状态，仅提供方法供调用者对其状态进行正确改变操作，防止其他事物对其进行错误的状态改变操作。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1658016012,"ip_address":"","comment_id":351508,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"go方法的本质是一个以方法的 receiver 参数作为第一个参数的普通函数\n函数是第一等公民，那大家都写函数就行了，方法存在的意义是啥呢？","like_count":18,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580215,"discussion_content":"你这个问题很好👍。\n\n我可以将其转换为另外一个几乎等价的问题：我们知道c++的方法(成员函数)本质就是以编译器插入的一个this指针作为首个参数的普通函数。那么大家为什么不直接用c的函数，非要用面向对象的c++呢？\n\n其实你的问题本质上是一个编程范式演进的过程。Go类型+方法(类比于c++的类+方法)和oo范式一样，是一种“封装”概念的实现，即隐藏自身状态，仅提供方法供调用者对其状态进行正确改变操作，防止其他事物对其进行错误的状态改变操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658016013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1648999,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/67/fc61a741.jpg","nickname":"田小麦","note":"","ucode":"4C10997F6173ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589921,"discussion_content":"这个问题确实问的好，就是开头说的编程范式！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665396888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325303,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1638902366,"is_pvip":false,"replies":[{"id":118587,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639558618,"ip_address":"","comment_id":325303,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"思考题，reciever是 field 值类型非 *field 指针类型，转换后的方法表达式如下：\n1) field.print(*v)\n2) field.print(v)\n打印的都是切片的元素的值。","like_count":16,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538930,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639558618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558445,"discussion_content":"所以，前者是传递引用，属于浅拷贝\n后者是传递值，属于深拷贝，？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648302525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325862,"user_name":"左耳朵东","can_delete":false,"product_type":"c1","uid":1160678,"ip_address":"","ucode":"60134ACF12BB52","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","comment_is_top":false,"comment_ctime":1639203746,"is_pvip":false,"replies":[{"id":119083,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1640053835,"ip_address":"","comment_id":325862,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"如果 print 方法的 receiver 类型为 field：\n首先，两个 for range 循环中的 go v.print() 分别等同于 go field.print(*v) 和 go field.print(v)，\n然后，第一个 for range  循环，用 *field 去调用 print 方法时，编译器检测到 print 方法只接受 field 值类型参数，所以自动做了隐式类型转换，转成 *v 后传入 print 方法\n可以看到两个 for range 中实际传到 print 的实参都是 field 值类型而非指针类型，所以就得到了预期结果","like_count":15,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540407,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640053835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344782,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKkkzHH7lKmxHdJmZW4niaUNicmZwVr8usAxDp93RgicDSicoVpict2ezIexpnTEs5dZQibQdt1V0UMlCUg/132","nickname":"Geek_d560e0","note":"","ucode":"064A1AE69F5BC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628624,"discussion_content":"用 *field 去调用 print 方法时，编译器检测到 print 方法只接受 field 值类型参数，所以自动做了隐式类型转换，转成 *v 后传入 print 方法。 豁然开朗。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695632813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585760,"discussion_content":"感觉这个解释的最清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661793850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325341,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1638928098,"is_pvip":false,"replies":[{"id":118599,"content":"这.... :)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562236,"ip_address":"","comment_id":325341,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师在我心目中就是 “Go 语言百科全书”。","like_count":13,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538951,"discussion_content":"这.... :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325469,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1638968575,"is_pvip":true,"replies":[{"id":118604,"content":"指针在Go中被弱化，所以我在设计大纲时没有特意为之留出章节，如果大家有这方面的想法，我和编辑老师看看是否可以在加餐中补充一下。但可能要放在后面了","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639563094,"ip_address":"","comment_id":325469,"utype":1}],"discussion_count":2,"race_medal":4,"score":2,"product_id":100093501,"comment_content":"*field 改为 field，由指针类型变成普通类型。goroutine在编译的时候就初始化了变量吧，那么指针类型的自然会随着变化而变化，普通类型被值拷贝而不会发生变化。\n* 和 &amp; 都是值得花时间学习和理解的东西，不知道老师后面会不会特别的说一下呢？","like_count":9,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538957,"discussion_content":"指针在Go中被弱化，所以我在设计大纲时没有特意为之留出章节，如果大家有这方面的想法，我和编辑老师看看是否可以在加餐中补充一下。但可能要放在后面了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639563094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585761,"discussion_content":"个人理解：  *用于修饰类型（基础类型或者其它高级类型，或自定义类型）， 如果函数中采用*T, 表示这个函数为指针参数，调用时需要传入地址进来；如果结合某个实例使用*，表示取这个指针地址实际指向的内存值。    而&amp;用于修饰实例，例如 var t T,   &amp;t 表示这个实例t的地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661794056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325744,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1639113538,"is_pvip":false,"replies":[{"id":118798,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639804241,"ip_address":"","comment_id":325744,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"一直以为 func 开头的就是方法，原来还分函数和方法！我对方法的理解：\n1. 提供了良好的封装，receiver 限定了使用对象，方法名可以表使用达对象可以提供的行为\n2. 使用起来更方便简洁，因为可以少传一个参数\n3. Go 语言设计者的思维真是缜密啊，“方法声明必须与 receiver 参数的基类型在同一个包中”这个规则解决了无数可能出现的奇奇怪怪的情况\n4. 可以促进包中代码功能的高内聚，因为你出了包，定义方法时会受到限制，可以及时发现：哎呀，有问题","like_count":6,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539671,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639804241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537758,"discussion_content":"这几天学习下来，我感觉可以和 Java 对比一下来理解（当然这是非完全正确区别）：\n1) 方法就跟 Java 中的实例方法类似；\n2) 函数就跟 Java 中的类方法（静态方法）类似。\n\n还有就是：方法表行为，函数表功能。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639155944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350751,"user_name":"Roway","can_delete":false,"product_type":"c1","uid":1060967,"ip_address":"","ucode":"65AF589142AB6C","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/67/a1e9aaba.jpg","comment_is_top":false,"comment_ctime":1657162507,"is_pvip":true,"replies":[{"id":127610,"content":"T泛指一个go类型\n*T 是T类型的指针类型\n&amp;T{} 返回一个T类型实例的指针\n_ 是go语法中的空标识符\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1657172707,"ip_address":"","comment_id":350751,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100093501,"comment_content":"*T &amp;T T _ 这四个分别是什么意思？还有哪些基本的概念","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579089,"discussion_content":"T泛指一个go类型\n*T 是T类型的指针类型\n&amp;T{} 返回一个T类型实例的指针\n_ 是go语法中的空标识符\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657172707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333619,"user_name":"Untitled","can_delete":false,"product_type":"c1","uid":1039464,"ip_address":"","ucode":"8DD6ABA3E81A2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/68/006ba72c.jpg","comment_is_top":false,"comment_ctime":1644453167,"is_pvip":false,"replies":[{"id":121973,"content":"T是基类型，说的是T本身不能为指针类型。\n\ntype T *int\nfunc (T) M1() {} &#47;&#47; invalid receiver type T (pointer or interface type)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644591411,"ip_address":"","comment_id":333619,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"receiver 参数的基类型本身不能为指针类型或接口类型？？\n*T不是指针类型吗？不理解","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550569,"discussion_content":"T是基类型，说的是T本身不能为指针类型。\n\ntype T *int\nfunc (T) M1() {} // invalid receiver type T (pointer or interface type)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644591411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362099,"user_name":"不说话装糕手","can_delete":false,"product_type":"c1","uid":2922271,"ip_address":"北京","ucode":"6465E83F4E6F58","user_header":"https://static001.geekbang.org/account/avatar/00/2c/97/1f/2a68c980.jpg","comment_is_top":false,"comment_ctime":1668151646,"is_pvip":false,"replies":[{"id":131792,"content":"实际上当然会传入，来个例子证明一下吧。\n\ntype Foo struct {\n}\n\nfunc (Foo) M1(a int, b int) int {\n    return a + b\n}\n\nfunc main() {\n    m1 := Foo.M1\n    fmt.Printf(&quot;%T\\n&quot;, m1)\n}\n\n运行这个例子输出：func(main.Foo, int, int) int","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1668407643,"ip_address":"北京","comment_id":362099,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"白老师您好，关于文章中“没有用到 receiver 参数，我们也可以省略 receiver 的参数名”情况，如果把方法看作是第一个参数为receiver的函数，那么这个没有形参名字的receiver类型参数，实际上是否传入了函数，并且该如何设计代码验证呢？","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593644,"discussion_content":"实际上当然会传入，来个例子证明一下吧。\n\ntype Foo struct {\n}\n\nfunc (Foo) M1(a int, b int) int {\n    return a + b\n}\n\nfunc main() {\n    m1 := Foo.M1\n    fmt.Printf(&#34;%T\\n&#34;, m1)\n}\n\n运行这个例子输出：func(main.Foo, int, int) int","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668407643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334740,"user_name":"Geek_7254f2","can_delete":false,"product_type":"c1","uid":2275448,"ip_address":"","ucode":"D5770398168983","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4iaBTGZFCibGEWH3YavQO3e1FB9wnODiaYzexxGqTWRMiay6THfZNVSLDaIOz5RClHefVIYibZxm8G2Q/132","comment_is_top":false,"comment_ctime":1645098489,"is_pvip":false,"replies":[{"id":122593,"content":"好建议👍，感谢。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1645597682,"ip_address":"","comment_id":334740,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"建议老师把data1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}和data2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}其中data1和date2中[]*、[]类型的区别讲一下，就好理解了。特别是还有*[]类型，这三个类型很像，很容易混淆","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552797,"discussion_content":"好建议👍，感谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645597682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168361,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d3/e9/59ff9004.jpg","nickname":"Fibonacci","note":"","ucode":"31DB723EB4BBA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588777,"discussion_content":"这里有疑问……data1元素应该是放指针，为啥里面的元素不写取地址符","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664095813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325372,"user_name":"return","can_delete":false,"product_type":"c1","uid":1135528,"ip_address":"","ucode":"42B8A3380DF04B","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","comment_is_top":false,"comment_ctime":1638933874,"is_pvip":false,"replies":[{"id":118595,"content":"最后的少数情况的结果也正常，看goroutine调度的时机。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562152,"ip_address":"","comment_id":325372,"utype":1}],"discussion_count":8,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"老师不仅把原理讲透，每篇还罗列了各种坑，讲的太好了。\n有个疑问，\ndata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}    \nfor _, v := range data2 {        \n    go (*field).print(&amp;v)    \n}\n关于这一段， 按道理 goroutine 注册的时候 就会对参数求值， receiver也是参数，\n我自己打印了一下， &amp;v的值 确实是   &amp;{four}  &amp;{five} &amp;{six}，\n但是 goroutine打印出来就变成了  3个six。\n而且 尝试很多次后发现， 少数情况 会出现 2个six 另一个事 five。 \n很懵！！！","like_count":4},{"had_liked":false,"id":365311,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"北京","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1672364802,"is_pvip":false,"replies":[{"id":133072,"content":"✅","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1672374313,"ip_address":"北京","comment_id":365311,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"由指针修改成非指针后，方法调用的时候，是拷贝入参值，不是一个指针地址，所以没问题","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597964,"discussion_content":"✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672374313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325595,"user_name":"Geralt","can_delete":false,"product_type":"c1","uid":1184102,"ip_address":"","ucode":"2F31ED777D06A0","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/66/ac631a36.jpg","comment_is_top":false,"comment_ctime":1639034963,"is_pvip":true,"replies":[{"id":118607,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639564163,"ip_address":"","comment_id":325595,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"*field 改为 field 之后，每次调用v.print()时v的值都是不一样的。","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538946,"discussion_content":"最后的少数情况的结果也正常，看goroutine调度的时机。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1248326,"avatar":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","nickname":"多选参数","note":"","ucode":"B2294D80AB075F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537683,"discussion_content":"这个问题的本质就是理解方法的本质，在那个问题中，传入的是 v 这个变量的地址值。而输出可能会出现 2 个 six，1 个 five，主要是 goroutine 的运行是这个地址值里头所存的数据不同。比如你一个 goroutine 起来之后并开始运行，这个时候还没有遍历到 five，那么这个输出的就是 four，同理输出 2 个 six 一个 five 也是类似的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639144040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540447,"discussion_content":"其实是 因为  变量v 在for range 中的 地址 一直是同一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640059169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1527530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lfMbV8RibrhFxjILg4550cZiaay64mTh5Zibon64TiaicC8jDMEK7VaXOkllHSpS582Jl1SUHm6Jib2AticVlHibiaBvUOA/132","nickname":"用0和1改变自己","note":"","ucode":"42B8F6ECF6BDD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537380,"discussion_content":"goroutine也就是共享内存的，&amp;v是v的地址，在同一时间取值，导致取的是最新的值，如果把每个goroutine有时间隔开，没有并发，就能按顺序输出了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639045830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1527530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lfMbV8RibrhFxjILg4550cZiaay64mTh5Zibon64TiaicC8jDMEK7VaXOkllHSpS582Jl1SUHm6Jib2AticVlHibiaBvUOA/132","nickname":"用0和1改变自己","note":"","ucode":"42B8F6ECF6BDD0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537544,"discussion_content":"为啥是同一时间取值，参数是注册GOroutine就取值的 而不是 运行才取值呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639100758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":537380,"ip_address":"","group_id":0},"score":537544,"extra":""},{"author":{"id":1527530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lfMbV8RibrhFxjILg4550cZiaay64mTh5Zibon64TiaicC8jDMEK7VaXOkllHSpS582Jl1SUHm6Jib2AticVlHibiaBvUOA/132","nickname":"用0和1改变自己","note":"","ucode":"42B8F6ECF6BDD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537557,"discussion_content":"goroutine是并行的，且共享内存，取值的时候已经被for语句改了，你可以在go print语句下面加个延时，打印出来看看","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639103018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":537544,"ip_address":"","group_id":0},"score":537557,"extra":""}]},{"author":{"id":1005864,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/28/943709cb.jpg","nickname":"Witt","note":"","ucode":"19C8BCA266130A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537306,"discussion_content":"你给for中每次执行goroutine后加个1毫秒的sleep就知道怎么回事了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639025227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537160,"discussion_content":"因为主协程和其他子协程的顺序是并行的吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638974306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325532,"user_name":"Witt","can_delete":false,"product_type":"c1","uid":1005864,"ip_address":"","ucode":"19C8BCA266130A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/28/943709cb.jpg","comment_is_top":false,"comment_ctime":1639016940,"is_pvip":false,"replies":[{"id":118605,"content":"应该可以。这样每个&amp;v就是一块独立的地址👍。你可以写代码试一下。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639563221,"ip_address":"","comment_id":325532,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"这算不算一种解决方法，迭代 data2的时候在 for 内遮蔽 v 的值 v:=v 😀","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538961,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639564163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","nickname":"Middleware","note":"","ucode":"C0028293ECDD47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538964,"discussion_content":"莫非这就是强者？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639564335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1242122,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f4/0a/4b973b2b.jpg","nickname":"女干部","note":"","ucode":"38843F447B03F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538921,"discussion_content":"莫非这就是强者？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639557405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375246,"user_name":"酥宝话不多","can_delete":false,"product_type":"c1","uid":2564698,"ip_address":"浙江","ucode":"3B9BF256682504","user_header":"https://static001.geekbang.org/account/avatar/00/27/22/5a/873ac981.jpg","comment_is_top":false,"comment_ctime":1685112145,"is_pvip":false,"replies":[{"id":136954,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1685195132,"ip_address":"辽宁","comment_id":375246,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"本来学得一知半解，看老师的解答，就基本略懂略懂了哈","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538959,"discussion_content":"应该可以。这样每个&amp;v就是一块独立的地址👍。你可以写代码试一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639563221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1005864,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/28/943709cb.jpg","nickname":"Witt","note":"","ucode":"19C8BCA266130A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":540514,"discussion_content":"测试了，可以的老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640073634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":538959,"ip_address":"","group_id":0},"score":540514,"extra":""}]}]},{"had_liked":false,"id":373129,"user_name":"义务教育漏网之鱼","can_delete":false,"product_type":"c1","uid":3198641,"ip_address":"湖北","ucode":"DE23BC762FD57B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIFEQibKmCdPwFMncjfPFficY97fdnZWFxFbu8uze8REXB5S6gMtxRsESWibBmEFibBsaaj0ZkKmWPtEA/132","comment_is_top":false,"comment_ctime":1682070503,"is_pvip":false,"replies":[{"id":136309,"content":"在25讲中有详细说明:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1682148936,"ip_address":"辽宁","comment_id":373129,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"type field struct {\n\tname string\n}\n\nfunc (p *field) method() {\n\tfmt.Println(p.name)\n}\n\nfunc main() {\n\tf := field{&quot;ffff&quot;}\n\tf.method()\n}\n请老师解惑。如上这个示例，方法 method 是绑定在 *field 类型上的。按照本章的讲解应该只允许 *field 类型的实例调用。根据我测试的结果来看 field 类型的实例也可以调用 method 方法，这是为什么呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619506,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685195132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370247,"user_name":"A_唐波涛","can_delete":false,"product_type":"c1","uid":2296316,"ip_address":"湖南","ucode":"CF3FD966F12F36","user_header":"https://static001.geekbang.org/account/avatar/00/23/09/fc/bfd68c69.jpg","comment_is_top":false,"comment_ctime":1678605305,"is_pvip":false,"replies":[{"id":135038,"content":"你这个代码中也不存在并发的问题，因为没有使用go关键字创建goroutine来执行for循环，因此都是顺序执行的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1678704040,"ip_address":"北京","comment_id":370247,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"这到底是go并发的原因，还是老师说的原因？如下代码运行，感觉更多是并发影响了结果！\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Println(p.name)\n}\n\nfunc main() {\n\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\tfor _, v := range data1 {\n\t\tfmt.Print(v, &quot; + &quot;)\n\t\tv.print()\n\t}\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor _, v := range data2 {\n\t\tfmt.Print(v, &quot; + &quot;)\n\t\tv.print()\n\t}\n\n\tdata3 := field{&quot;kkk3&quot;}\n\tdata3.print()\n\n\tdata4 := &amp;field{&quot;kkk4&quot;}\n\tdata4.print()\n\n\ttime.Sleep(3 * time.Second)\n}\n------输出结果------\n&amp;{one} + one\n&amp;{two} + two\n&amp;{three} + three\n{four} + four\n{five} + five\n{six} + six\nkkk3\nkkk4","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615260,"discussion_content":"在25讲中有详细说明:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682148936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362343,"user_name":"徐小虾","can_delete":false,"product_type":"c1","uid":2007882,"ip_address":"辽宁","ucode":"0B8536E3E23898","user_header":"https://static001.geekbang.org/account/avatar/00/1e/a3/4a/d3867ca2.jpg","comment_is_top":false,"comment_ctime":1668427497,"is_pvip":true,"replies":[{"id":131818,"content":"再刷一遍，或者把这一讲中的comment看一遍吧:)。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1668522004,"ip_address":"辽宁","comment_id":362343,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"为什么不是 four four four 呀\n","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608864,"discussion_content":"你这个代码中也不存在并发的问题，因为没有使用go关键字创建goroutine来执行for循环，因此都是顺序执行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678704040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355363,"user_name":"laah","can_delete":false,"product_type":"c1","uid":2314187,"ip_address":"北京","ucode":"C3886AA1CC556D","user_header":"https://static001.geekbang.org/account/avatar/00/23/4f/cb/ad3526bc.jpg","comment_is_top":false,"comment_ctime":1661317400,"is_pvip":false,"replies":[{"id":129356,"content":"这里提到的本质是函数，是为了帮助大家理解方法(method)。\n\n“我直接定义一个普通函数的形式，这个函数会被识别为第一个参数对应类型的一个方法吗？” - 肯定不会的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1661408316,"ip_address":"北京","comment_id":355363,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"请教一个问题：\ngo方法本质上是一个普通函数，那两者是否是等价的？\n比如我直接定义一个普通函数的形式，这个函数会被识别为第一个参数对应类型的一个方法吗？我理解应该不是吧～","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585223,"discussion_content":"这里提到的本质是函数，是为了帮助大家理解方法(method)。\n\n“我直接定义一个普通函数的形式，这个函数会被识别为第一个参数对应类型的一个方法吗？” - 肯定不会的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661408316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334740,"user_name":"Geek_7254f2","can_delete":false,"product_type":"c1","uid":2275448,"ip_address":"","ucode":"D5770398168983","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4iaBTGZFCibGEWH3YavQO3e1FB9wnODiaYzexxGqTWRMiay6THfZNVSLDaIOz5RClHefVIYibZxm8G2Q/132","comment_is_top":false,"comment_ctime":1645098489,"is_pvip":false,"replies":[{"id":122593,"content":"好建议👍，感谢。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1645597682,"ip_address":"","comment_id":334740,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"建议老师把data1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}和data2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}其中data1和date2中[]*、[]类型的区别讲一下，就好理解了。特别是还有*[]类型，这三个类型很像，很容易混淆","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552797,"discussion_content":"好建议👍，感谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645597682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168361,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d3/e9/59ff9004.jpg","nickname":"Fibonacci","note":"","ucode":"31DB723EB4BBA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588777,"discussion_content":"这里有疑问……data1元素应该是放指针，为啥里面的元素不写取地址符","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664095813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325372,"user_name":"return","can_delete":false,"product_type":"c1","uid":1135528,"ip_address":"","ucode":"42B8A3380DF04B","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","comment_is_top":false,"comment_ctime":1638933874,"is_pvip":false,"replies":[{"id":118595,"content":"最后的少数情况的结果也正常，看goroutine调度的时机。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562152,"ip_address":"","comment_id":325372,"utype":1}],"discussion_count":8,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"老师不仅把原理讲透，每篇还罗列了各种坑，讲的太好了。\n有个疑问，\ndata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}    \nfor _, v := range data2 {        \n    go (*field).print(&amp;v)    \n}\n关于这一段， 按道理 goroutine 注册的时候 就会对参数求值， receiver也是参数，\n我自己打印了一下， &amp;v的值 确实是   &amp;{four}  &amp;{five} &amp;{six}，\n但是 goroutine打印出来就变成了  3个six。\n而且 尝试很多次后发现， 少数情况 会出现 2个six 另一个事 five。 \n很懵！！！","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538946,"discussion_content":"最后的少数情况的结果也正常，看goroutine调度的时机。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1248326,"avatar":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","nickname":"多选参数","note":"","ucode":"B2294D80AB075F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537683,"discussion_content":"这个问题的本质就是理解方法的本质，在那个问题中，传入的是 v 这个变量的地址值。而输出可能会出现 2 个 six，1 个 five，主要是 goroutine 的运行是这个地址值里头所存的数据不同。比如你一个 goroutine 起来之后并开始运行，这个时候还没有遍历到 five，那么这个输出的就是 four，同理输出 2 个 six 一个 five 也是类似的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639144040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540447,"discussion_content":"其实是 因为  变量v 在for range 中的 地址 一直是同一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640059169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1527530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lfMbV8RibrhFxjILg4550cZiaay64mTh5Zibon64TiaicC8jDMEK7VaXOkllHSpS582Jl1SUHm6Jib2AticVlHibiaBvUOA/132","nickname":"用0和1改变自己","note":"","ucode":"42B8F6ECF6BDD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537380,"discussion_content":"goroutine也就是共享内存的，&amp;v是v的地址，在同一时间取值，导致取的是最新的值，如果把每个goroutine有时间隔开，没有并发，就能按顺序输出了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639045830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1527530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lfMbV8RibrhFxjILg4550cZiaay64mTh5Zibon64TiaicC8jDMEK7VaXOkllHSpS582Jl1SUHm6Jib2AticVlHibiaBvUOA/132","nickname":"用0和1改变自己","note":"","ucode":"42B8F6ECF6BDD0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537544,"discussion_content":"为啥是同一时间取值，参数是注册GOroutine就取值的 而不是 运行才取值呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639100758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":537380,"ip_address":"","group_id":0},"score":537544,"extra":""},{"author":{"id":1527530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lfMbV8RibrhFxjILg4550cZiaay64mTh5Zibon64TiaicC8jDMEK7VaXOkllHSpS582Jl1SUHm6Jib2AticVlHibiaBvUOA/132","nickname":"用0和1改变自己","note":"","ucode":"42B8F6ECF6BDD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537557,"discussion_content":"goroutine是并行的，且共享内存，取值的时候已经被for语句改了，你可以在go print语句下面加个延时，打印出来看看","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639103018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":537544,"ip_address":"","group_id":0},"score":537557,"extra":""}]},{"author":{"id":1005864,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/28/943709cb.jpg","nickname":"Witt","note":"","ucode":"19C8BCA266130A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537306,"discussion_content":"你给for中每次执行goroutine后加个1毫秒的sleep就知道怎么回事了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639025227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537160,"discussion_content":"因为主协程和其他子协程的顺序是并行的吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638974306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365311,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"北京","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1672364802,"is_pvip":false,"replies":[{"id":133072,"content":"✅","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1672374313,"ip_address":"北京","comment_id":365311,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"由指针修改成非指针后，方法调用的时候，是拷贝入参值，不是一个指针地址，所以没问题","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597964,"discussion_content":"✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672374313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325595,"user_name":"Geralt","can_delete":false,"product_type":"c1","uid":1184102,"ip_address":"","ucode":"2F31ED777D06A0","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/66/ac631a36.jpg","comment_is_top":false,"comment_ctime":1639034963,"is_pvip":true,"replies":[{"id":118607,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639564163,"ip_address":"","comment_id":325595,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"*field 改为 field 之后，每次调用v.print()时v的值都是不一样的。","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538961,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639564163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","nickname":"Middleware","note":"","ucode":"C0028293ECDD47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538964,"discussion_content":"莫非这就是强者？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639564335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1242122,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f4/0a/4b973b2b.jpg","nickname":"女干部","note":"","ucode":"38843F447B03F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538921,"discussion_content":"莫非这就是强者？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639557405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325532,"user_name":"Witt","can_delete":false,"product_type":"c1","uid":1005864,"ip_address":"","ucode":"19C8BCA266130A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/28/943709cb.jpg","comment_is_top":false,"comment_ctime":1639016940,"is_pvip":false,"replies":[{"id":118605,"content":"应该可以。这样每个&amp;v就是一块独立的地址👍。你可以写代码试一下。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639563221,"ip_address":"","comment_id":325532,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"这算不算一种解决方法，迭代 data2的时候在 for 内遮蔽 v 的值 v:=v 😀","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538959,"discussion_content":"应该可以。这样每个&amp;v就是一块独立的地址👍。你可以写代码试一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639563221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1005864,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/28/943709cb.jpg","nickname":"Witt","note":"","ucode":"19C8BCA266130A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":540514,"discussion_content":"测试了，可以的老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640073634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":538959,"ip_address":"","group_id":0},"score":540514,"extra":""}]}]},{"had_liked":false,"id":375246,"user_name":"酥宝话不多","can_delete":false,"product_type":"c1","uid":2564698,"ip_address":"浙江","ucode":"3B9BF256682504","user_header":"https://static001.geekbang.org/account/avatar/00/27/22/5a/873ac981.jpg","comment_is_top":false,"comment_ctime":1685112145,"is_pvip":false,"replies":[{"id":136954,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1685195132,"ip_address":"辽宁","comment_id":375246,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"本来学得一知半解，看老师的解答，就基本略懂略懂了哈","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619506,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685195132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373129,"user_name":"义务教育漏网之鱼","can_delete":false,"product_type":"c1","uid":3198641,"ip_address":"湖北","ucode":"DE23BC762FD57B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIFEQibKmCdPwFMncjfPFficY97fdnZWFxFbu8uze8REXB5S6gMtxRsESWibBmEFibBsaaj0ZkKmWPtEA/132","comment_is_top":false,"comment_ctime":1682070503,"is_pvip":false,"replies":[{"id":136309,"content":"在25讲中有详细说明:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1682148936,"ip_address":"辽宁","comment_id":373129,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"type field struct {\n\tname string\n}\n\nfunc (p *field) method() {\n\tfmt.Println(p.name)\n}\n\nfunc main() {\n\tf := field{&quot;ffff&quot;}\n\tf.method()\n}\n请老师解惑。如上这个示例，方法 method 是绑定在 *field 类型上的。按照本章的讲解应该只允许 *field 类型的实例调用。根据我测试的结果来看 field 类型的实例也可以调用 method 方法，这是为什么呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615260,"discussion_content":"在25讲中有详细说明:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682148936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370247,"user_name":"A_唐波涛","can_delete":false,"product_type":"c1","uid":2296316,"ip_address":"湖南","ucode":"CF3FD966F12F36","user_header":"https://static001.geekbang.org/account/avatar/00/23/09/fc/bfd68c69.jpg","comment_is_top":false,"comment_ctime":1678605305,"is_pvip":false,"replies":[{"id":135038,"content":"你这个代码中也不存在并发的问题，因为没有使用go关键字创建goroutine来执行for循环，因此都是顺序执行的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1678704040,"ip_address":"北京","comment_id":370247,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"这到底是go并发的原因，还是老师说的原因？如下代码运行，感觉更多是并发影响了结果！\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Println(p.name)\n}\n\nfunc main() {\n\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\tfor _, v := range data1 {\n\t\tfmt.Print(v, &quot; + &quot;)\n\t\tv.print()\n\t}\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor _, v := range data2 {\n\t\tfmt.Print(v, &quot; + &quot;)\n\t\tv.print()\n\t}\n\n\tdata3 := field{&quot;kkk3&quot;}\n\tdata3.print()\n\n\tdata4 := &amp;field{&quot;kkk4&quot;}\n\tdata4.print()\n\n\ttime.Sleep(3 * time.Second)\n}\n------输出结果------\n&amp;{one} + one\n&amp;{two} + two\n&amp;{three} + three\n{four} + four\n{five} + five\n{six} + six\nkkk3\nkkk4","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608864,"discussion_content":"你这个代码中也不存在并发的问题，因为没有使用go关键字创建goroutine来执行for循环，因此都是顺序执行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678704040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362343,"user_name":"徐小虾","can_delete":false,"product_type":"c1","uid":2007882,"ip_address":"辽宁","ucode":"0B8536E3E23898","user_header":"https://static001.geekbang.org/account/avatar/00/1e/a3/4a/d3867ca2.jpg","comment_is_top":false,"comment_ctime":1668427497,"is_pvip":true,"replies":[{"id":131818,"content":"再刷一遍，或者把这一讲中的comment看一遍吧:)。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1668522004,"ip_address":"辽宁","comment_id":362343,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"为什么不是 four four four 呀\n","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593782,"discussion_content":"再刷一遍，或者把这一讲中的comment看一遍吧:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668522004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355363,"user_name":"laah","can_delete":false,"product_type":"c1","uid":2314187,"ip_address":"北京","ucode":"C3886AA1CC556D","user_header":"https://static001.geekbang.org/account/avatar/00/23/4f/cb/ad3526bc.jpg","comment_is_top":false,"comment_ctime":1661317400,"is_pvip":false,"replies":[{"id":129356,"content":"这里提到的本质是函数，是为了帮助大家理解方法(method)。\n\n“我直接定义一个普通函数的形式，这个函数会被识别为第一个参数对应类型的一个方法吗？” - 肯定不会的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1661408316,"ip_address":"北京","comment_id":355363,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"请教一个问题：\ngo方法本质上是一个普通函数，那两者是否是等价的？\n比如我直接定义一个普通函数的形式，这个函数会被识别为第一个参数对应类型的一个方法吗？我理解应该不是吧～","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593782,"discussion_content":"再刷一遍，或者把这一讲中的comment看一遍吧:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668522004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354841,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"辽宁","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1660815976,"is_pvip":false,"replies":[{"id":129090,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1660833756,"ip_address":"辽宁","comment_id":354841,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"思考题：由 *field 改为 field 就可以输出预期的结果了呢\n原理解释：\n这样for _, v := range data2 {        go v.print()    } 每次传递的不是局部变量的指针了，而是传递的[]field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}} 中的每一个值的拷贝，go  v.print()方法其实转换后为：\n\nfor _,v := rang data2 {\n    go  print(v)\n}","like_count":1},{"had_liked":false,"id":350877,"user_name":"枫","can_delete":false,"product_type":"c1","uid":3043622,"ip_address":"","ucode":"2850902F61B46C","user_header":"https://static001.geekbang.org/account/avatar/00/2e/71/26/773e6dcb.jpg","comment_is_top":false,"comment_ctime":1657271286,"is_pvip":false,"replies":[{"id":127667,"content":"在go中没有“协程注册”这样一说。go关键字 + 函数即可启动goroutine执行后面的函数。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1657403182,"ip_address":"","comment_id":350877,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"老师，有一个小小的问题，就是有协程存在时，是协程都注册完毕后才执行函数吗","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584463,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660833756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343534,"user_name":"Geek_as","can_delete":false,"product_type":"c1","uid":1534500,"ip_address":"","ucode":"AB7B70DBC2B5F8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qhonwcQle1RBufvLdTm4MgSNl554GBXUZtNNH65oYajbbRLxKsZX4hM9vFtrLLpDM0H93ZNWRFAZSrIZC7yAsQ/132","comment_is_top":false,"comment_ctime":1650895091,"is_pvip":false,"replies":[{"id":125443,"content":"传引用不准确，是值传递，这里就是值copy。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651023878,"ip_address":"","comment_id":343534,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"由*改成field后就变成了(field).print(v),传入的参数由&amp;v，又变为v，即不再传地址改传引用了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579371,"discussion_content":"在go中没有“协程注册”这样一说。go关键字 + 函数即可启动goroutine执行后面的函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657403182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2996016,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/b7/30/c1e4f5b5.jpg","nickname":"微微超级丹💫","note":"","ucode":"ABEFC2FA673BE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587240,"discussion_content":"所以第二种情况有不一定就都输出six吧，如果goroutine执行的比较快，也可能第二次循环时，第一个goroutine就输出了five","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662900457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333895,"user_name":"Geek_2337af","can_delete":false,"product_type":"c1","uid":2847330,"ip_address":"","ucode":"54B135EB7E70F1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep7c7UKsjRiclaAqD9vMHSUXayzrvRhvic3Lm6ibX82L3DibJnCCtDmB3OfxbuVjetpT6Qa8IuwqZCWlw/132","comment_is_top":false,"comment_ctime":1644572398,"is_pvip":false,"replies":[{"id":122061,"content":"因为”记录“的是同一个v的地址。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644762125,"ip_address":"","comment_id":333895,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"在创建goroutine的时候，v的状态不会被记录进去的吗，为什么最后三个打印的都是同一个six，请老师回答","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550861,"discussion_content":"因为”记录“的是同一个v的地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644762125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333889,"user_name":"Geek_2337af","can_delete":false,"product_type":"c1","uid":2847330,"ip_address":"","ucode":"54B135EB7E70F1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep7c7UKsjRiclaAqD9vMHSUXayzrvRhvic3Lm6ibX82L3DibJnCCtDmB3OfxbuVjetpT6Qa8IuwqZCWlw/132","comment_is_top":false,"comment_ctime":1644570963,"is_pvip":false,"replies":[{"id":122062,"content":"我在mac和linux上运行你的程序，输出结果都是：\n\none\n*main.field\ntwo\n*main.field\nthree\n*main.field\nfour\nmain.field\nfive\nmain.field\nsix\nmain.field\n\n没问题啊。\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644762273,"ip_address":"","comment_id":333889,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Println(p.name)\n}\n\nfunc main() {\n\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\tfor _, v := range data1 {\n\t\t&#47;&#47;go v.print()\n\t\tv.print()\n\t\tfmt.Printf(&quot;%T\\n&quot;, v)\n\n\t}\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor _, v := range data2 {\n\t\t&#47;&#47;go v.print()\n\t\tv.print()\n\t\tfmt.Printf(&quot;%T\\n&quot;, v)\n\t}\n\n\ttime.Sleep(3 * time.Second)\n\t&#47;&#47;f := field{&quot;aa&quot;}\n\t&#47;&#47;f.print()\n}\n\n结果：\n*main.field\nthree\n*main.field\nfour\nmain.field\nfive\nmain.field\nsix\nmain.field\n修改后为什么是这样的结果呢，请老师回答，只有主线程，不是按顺序执行，最后sleep然后退出的吗","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550862,"discussion_content":"我在mac和linux上运行你的程序，输出结果都是：\n\none\n*main.field\ntwo\n*main.field\nthree\n*main.field\nfour\nmain.field\nfive\nmain.field\nsix\nmain.field\n\n没问题啊。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644762274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333503,"user_name":"Niverkk","can_delete":false,"product_type":"c1","uid":2179875,"ip_address":"","ucode":"F9220C10107E44","user_header":"https://static001.geekbang.org/account/avatar/00/21/43/23/d98fb8f7.jpg","comment_is_top":false,"comment_ctime":1644389342,"is_pvip":false,"replies":[{"id":121881,"content":"你问题中的示例用的是闭包方式引用的field啊。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644456971,"ip_address":"","comment_id":333503,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"白老师，对于使用协程并发循环打印，感觉跟指针还是值类型没关系吧，因为是公用一个变量，就算是值类型也不能保证就必是 1 2 3 吧，就好像这样 ：\ngo func() {\n\ttime.Sleep(time.Second * 1) &#47;&#47;这里手动模拟调度卡顿了什么的\n\t(*field).print(v)\n}()\n还是取决于调度时间点的吧?","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550244,"discussion_content":"你问题中的示例用的是闭包方式引用的field啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644456971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330878,"user_name":"青鸟飞鱼","can_delete":false,"product_type":"c1","uid":1807943,"ip_address":"","ucode":"8C64517DA556FE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/47/93838ff7.jpg","comment_is_top":false,"comment_ctime":1642240850,"is_pvip":false,"replies":[{"id":121527,"content":"这个会和编辑老师商量，可能会有的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643426654,"ip_address":"","comment_id":330878,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"我觉得老师，还是可以加餐讲讲指针的知识","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550244,"discussion_content":"你问题中的示例用的是闭包方式引用的field啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644456971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326161,"user_name":"不负青春不负己🤘","can_delete":false,"product_type":"c1","uid":1363671,"ip_address":"","ucode":"A6DD8E8B20EA6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","comment_is_top":false,"comment_ctime":1639400849,"is_pvip":false,"replies":[{"id":119070,"content":"方法等价转换为函数后的形式是否理解了？如果理解了，这个也应该理解的啊。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1640050677,"ip_address":"","comment_id":326161,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"巧解难题这块没有理解,主要在为什么修改struct 不是类型的指针就可以了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548867,"discussion_content":"这个会和编辑老师商量，可能会有的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643426655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325495,"user_name":"Bynow","can_delete":false,"product_type":"c1","uid":2735072,"ip_address":"","ucode":"1E4F3ADD65CF18","user_header":"https://static001.geekbang.org/account/avatar/00/29/bb/e0/c7cd5170.jpg","comment_is_top":false,"comment_ctime":1638980981,"is_pvip":false,"replies":[{"id":118602,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562583,"ip_address":"","comment_id":325495,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"*field 在data2取得是变量v的指针，调用print方法时传递的是v的指针，当遍历结束变量v拷贝最后一个值six v的指针指向的内容是six\nfield 在data2只拷贝变量v当前遍历的拷贝值","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538954,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325482,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1638974081,"is_pvip":false,"replies":[{"id":118603,"content":"好建议。我让编辑老师改一下。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639563020,"ip_address":"","comment_id":325482,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"老师，上面说到方法表达式时，go方法的调用方式那里：\n\nvar t T\nt.Get()\nt.Set(1)\n\n最后的 t.Set(1)我感觉应该是 (&amp;t).Set(1)才对吧（虽然 t.Set(1)也可以调用到），因为这是举例与下面的 (*T).Set(&amp;t, 1) 方法表达式等价变换来进行比较，需要对应起来？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538956,"discussion_content":"好建议。我让编辑老师改一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639563020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354841,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"辽宁","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1660815976,"is_pvip":false,"replies":[{"id":129090,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1660833756,"ip_address":"辽宁","comment_id":354841,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"思考题：由 *field 改为 field 就可以输出预期的结果了呢\n原理解释：\n这样for _, v := range data2 {        go v.print()    } 每次传递的不是局部变量的指针了，而是传递的[]field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}} 中的每一个值的拷贝，go  v.print()方法其实转换后为：\n\nfor _,v := rang data2 {\n    go  print(v)\n}","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584463,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660833756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350877,"user_name":"枫","can_delete":false,"product_type":"c1","uid":3043622,"ip_address":"","ucode":"2850902F61B46C","user_header":"https://static001.geekbang.org/account/avatar/00/2e/71/26/773e6dcb.jpg","comment_is_top":false,"comment_ctime":1657271286,"is_pvip":false,"replies":[{"id":127667,"content":"在go中没有“协程注册”这样一说。go关键字 + 函数即可启动goroutine执行后面的函数。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1657403182,"ip_address":"","comment_id":350877,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"老师，有一个小小的问题，就是有协程存在时，是协程都注册完毕后才执行函数吗","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579371,"discussion_content":"在go中没有“协程注册”这样一说。go关键字 + 函数即可启动goroutine执行后面的函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657403182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2996016,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/b7/30/c1e4f5b5.jpg","nickname":"微微超级丹💫","note":"","ucode":"ABEFC2FA673BE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587240,"discussion_content":"所以第二种情况有不一定就都输出six吧，如果goroutine执行的比较快，也可能第二次循环时，第一个goroutine就输出了five","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662900457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343534,"user_name":"Geek_as","can_delete":false,"product_type":"c1","uid":1534500,"ip_address":"","ucode":"AB7B70DBC2B5F8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qhonwcQle1RBufvLdTm4MgSNl554GBXUZtNNH65oYajbbRLxKsZX4hM9vFtrLLpDM0H93ZNWRFAZSrIZC7yAsQ/132","comment_is_top":false,"comment_ctime":1650895091,"is_pvip":false,"replies":[{"id":125443,"content":"传引用不准确，是值传递，这里就是值copy。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651023878,"ip_address":"","comment_id":343534,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"由*改成field后就变成了(field).print(v),传入的参数由&amp;v，又变为v，即不再传地址改传引用了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567893,"discussion_content":"传引用不准确，是值传递，这里就是值copy。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651023878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333895,"user_name":"Geek_2337af","can_delete":false,"product_type":"c1","uid":2847330,"ip_address":"","ucode":"54B135EB7E70F1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep7c7UKsjRiclaAqD9vMHSUXayzrvRhvic3Lm6ibX82L3DibJnCCtDmB3OfxbuVjetpT6Qa8IuwqZCWlw/132","comment_is_top":false,"comment_ctime":1644572398,"is_pvip":false,"replies":[{"id":122061,"content":"因为”记录“的是同一个v的地址。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644762125,"ip_address":"","comment_id":333895,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"在创建goroutine的时候，v的状态不会被记录进去的吗，为什么最后三个打印的都是同一个six，请老师回答","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567893,"discussion_content":"传引用不准确，是值传递，这里就是值copy。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651023878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333889,"user_name":"Geek_2337af","can_delete":false,"product_type":"c1","uid":2847330,"ip_address":"","ucode":"54B135EB7E70F1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep7c7UKsjRiclaAqD9vMHSUXayzrvRhvic3Lm6ibX82L3DibJnCCtDmB3OfxbuVjetpT6Qa8IuwqZCWlw/132","comment_is_top":false,"comment_ctime":1644570963,"is_pvip":false,"replies":[{"id":122062,"content":"我在mac和linux上运行你的程序，输出结果都是：\n\none\n*main.field\ntwo\n*main.field\nthree\n*main.field\nfour\nmain.field\nfive\nmain.field\nsix\nmain.field\n\n没问题啊。\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644762273,"ip_address":"","comment_id":333889,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Println(p.name)\n}\n\nfunc main() {\n\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\tfor _, v := range data1 {\n\t\t&#47;&#47;go v.print()\n\t\tv.print()\n\t\tfmt.Printf(&quot;%T\\n&quot;, v)\n\n\t}\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor _, v := range data2 {\n\t\t&#47;&#47;go v.print()\n\t\tv.print()\n\t\tfmt.Printf(&quot;%T\\n&quot;, v)\n\t}\n\n\ttime.Sleep(3 * time.Second)\n\t&#47;&#47;f := field{&quot;aa&quot;}\n\t&#47;&#47;f.print()\n}\n\n结果：\n*main.field\nthree\n*main.field\nfour\nmain.field\nfive\nmain.field\nsix\nmain.field\n修改后为什么是这样的结果呢，请老师回答，只有主线程，不是按顺序执行，最后sleep然后退出的吗","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550861,"discussion_content":"因为”记录“的是同一个v的地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644762125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333503,"user_name":"Niverkk","can_delete":false,"product_type":"c1","uid":2179875,"ip_address":"","ucode":"F9220C10107E44","user_header":"https://static001.geekbang.org/account/avatar/00/21/43/23/d98fb8f7.jpg","comment_is_top":false,"comment_ctime":1644389342,"is_pvip":false,"replies":[{"id":121881,"content":"你问题中的示例用的是闭包方式引用的field啊。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644456971,"ip_address":"","comment_id":333503,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"白老师，对于使用协程并发循环打印，感觉跟指针还是值类型没关系吧，因为是公用一个变量，就算是值类型也不能保证就必是 1 2 3 吧，就好像这样 ：\ngo func() {\n\ttime.Sleep(time.Second * 1) &#47;&#47;这里手动模拟调度卡顿了什么的\n\t(*field).print(v)\n}()\n还是取决于调度时间点的吧?","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550862,"discussion_content":"我在mac和linux上运行你的程序，输出结果都是：\n\none\n*main.field\ntwo\n*main.field\nthree\n*main.field\nfour\nmain.field\nfive\nmain.field\nsix\nmain.field\n\n没问题啊。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644762274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330878,"user_name":"青鸟飞鱼","can_delete":false,"product_type":"c1","uid":1807943,"ip_address":"","ucode":"8C64517DA556FE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/47/93838ff7.jpg","comment_is_top":false,"comment_ctime":1642240850,"is_pvip":false,"replies":[{"id":121527,"content":"这个会和编辑老师商量，可能会有的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643426654,"ip_address":"","comment_id":330878,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"我觉得老师，还是可以加餐讲讲指针的知识","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548867,"discussion_content":"这个会和编辑老师商量，可能会有的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643426655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326161,"user_name":"不负青春不负己🤘","can_delete":false,"product_type":"c1","uid":1363671,"ip_address":"","ucode":"A6DD8E8B20EA6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","comment_is_top":false,"comment_ctime":1639400849,"is_pvip":false,"replies":[{"id":119070,"content":"方法等价转换为函数后的形式是否理解了？如果理解了，这个也应该理解的啊。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1640050677,"ip_address":"","comment_id":326161,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"巧解难题这块没有理解,主要在为什么修改struct 不是类型的指针就可以了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540370,"discussion_content":"方法等价转换为函数后的形式是否理解了？如果理解了，这个也应该理解的啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640050677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325495,"user_name":"Bynow","can_delete":false,"product_type":"c1","uid":2735072,"ip_address":"","ucode":"1E4F3ADD65CF18","user_header":"https://static001.geekbang.org/account/avatar/00/29/bb/e0/c7cd5170.jpg","comment_is_top":false,"comment_ctime":1638980981,"is_pvip":false,"replies":[{"id":118602,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562583,"ip_address":"","comment_id":325495,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"*field 在data2取得是变量v的指针，调用print方法时传递的是v的指针，当遍历结束变量v拷贝最后一个值six v的指针指向的内容是six\nfield 在data2只拷贝变量v当前遍历的拷贝值","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540370,"discussion_content":"方法等价转换为函数后的形式是否理解了？如果理解了，这个也应该理解的啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640050677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325482,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1638974081,"is_pvip":false,"replies":[{"id":118603,"content":"好建议。我让编辑老师改一下。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639563020,"ip_address":"","comment_id":325482,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"老师，上面说到方法表达式时，go方法的调用方式那里：\n\nvar t T\nt.Get()\nt.Set(1)\n\n最后的 t.Set(1)我感觉应该是 (&amp;t).Set(1)才对吧（虽然 t.Set(1)也可以调用到），因为这是举例与下面的 (*T).Set(&amp;t, 1) 方法表达式等价变换来进行比较，需要对应起来？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538954,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325458,"user_name":"Geek_119489","can_delete":false,"product_type":"c1","uid":2858862,"ip_address":"","ucode":"D708B6E8BE1D66","user_header":"","comment_is_top":false,"comment_ctime":1638962365,"is_pvip":false,"replies":[{"id":118601,"content":"约束说的：是基类型T不能为指针类型。*T是指针类型。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562284,"ip_address":"","comment_id":325458,"utype":1}],"discussion_count":5,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"*int算指针类型，但是*T不算指针类型吗？","like_count":1},{"had_liked":false,"id":325371,"user_name":"liaomars","can_delete":false,"product_type":"c1","uid":2104856,"ip_address":"","ucode":"4FCA97EE9FB57D","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","comment_is_top":false,"comment_ctime":1638933581,"is_pvip":false,"replies":[{"id":118596,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562167,"ip_address":"","comment_id":325371,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"思考题回复：\n把*field 改为 field ，那么 print()方法就可以转换成 print(p field)\n第一个for的调用就可以转换成：(field).print(*field)\n第二for的调用就可以转换成：(field).print(field)","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538953,"discussion_content":"约束说的：是基类型T不能为指针类型。*T是指针类型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1979191,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/33/37/6088a9a2.jpg","nickname":"蜘蛛别过来","note":"","ucode":"D579C1F5AC8F09","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":550561,"discussion_content":"老师，这里基类型不能是指针是为什么呢？为了防止指针的指针嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644587253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":538953,"ip_address":"","group_id":0},"score":550561,"extra":""}]},{"author":{"id":1501818,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ea/7a/d857723d.jpg","nickname":"Vfeelit","note":"","ucode":"F3FF2B069F347F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545577,"discussion_content":"*T 是指针类型，但是如果T还是指针类型，就不行。实际就是不允许指针的指针...类型","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641996752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2858915,"avatar":"","nickname":"Geek_1621b6","note":"","ucode":"55DFE13F04D336","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537849,"discussion_content":"都是指针类型，注意老师说的是基类型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639218574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","nickname":"罗杰","note":"","ucode":"96BAFAA147341F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537249,"discussion_content":"为什么不是呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639012514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325347,"user_name":"扣剑书生","can_delete":false,"product_type":"c1","uid":2855599,"ip_address":"","ucode":"6F5FD189D2916C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/92/af/ad02ae4b.jpg","comment_is_top":false,"comment_ctime":1638928773,"is_pvip":false,"replies":[{"id":118594,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639560735,"ip_address":"","comment_id":325347,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"*field -&gt; field\n最终传入 print 的参数 v都是对应结构体的值","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538947,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325312,"user_name":"西红柿牛腩泡饼","can_delete":false,"product_type":"c1","uid":1218761,"ip_address":"","ucode":"0B090A9D8588F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/c9/9b457156.jpg","comment_is_top":false,"comment_ctime":1638920438,"is_pvip":false,"replies":[{"id":118065,"content":"感谢反馈，已整体复核修改了","user_name":"编辑回复","user_name_real":"编辑","uid":2537474,"ctime":1638948257,"ip_address":"","comment_id":325312,"utype":2}],"discussion_count":3,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"无论 receiver 参数的类型为T 还是 T，这段中斜体部分应该是极客时间把星号识别成了文字格式，文中有几处此种类型错误","like_count":1,"discussions":[{"author":{"id":2537474,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b8/02/b538e9f4.jpg","nickname":"然而","note":"","ucode":"F1F1E093925934","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537056,"discussion_content":"感谢反馈，已整体复核修改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638948257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537551,"discussion_content":"大佬优秀啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639101874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2104856,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","nickname":"liaomars","note":"","ucode":"4FCA97EE9FB57D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537008,"discussion_content":"我也觉得有问题，不然感觉是重复的，读起来怪怪的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638934179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395037,"user_name":"wu526","can_delete":false,"product_type":"c1","uid":1022129,"ip_address":"四川","ucode":"69282EB175B48E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/b1/f89a84d0.jpg","comment_is_top":false,"comment_ctime":1729152137,"is_pvip":false,"replies":[{"id":143492,"content":"那是因为go 1.22修改了for range语句中变量的语义，将var per loop（即整个循环仅定义一个循环变量）改为var per iteration(每次迭代重新定义一个变量)。\n\n具体可看这个blog https:&#47;&#47;go.dev&#47;blog&#47;loopvar-preview","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1729691674,"ip_address":"辽宁","comment_id":395037,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"老师，请问一下&quot;巧解难题&quot;这个代码，如果在go1.21版本以及之前的版本执行，都会输出多个six, 在go1.22及后续输出一个six, 为什么会有这种差异呢? 烦请老师解答一下，谢谢。","like_count":0,"discussions":[{"author":{"id":2537474,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b8/02/b538e9f4.jpg","nickname":"然而","note":"","ucode":"F1F1E093925934","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537056,"discussion_content":"感谢反馈，已整体复核修改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638948257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537551,"discussion_content":"大佬优秀啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639101874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2104856,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","nickname":"liaomars","note":"","ucode":"4FCA97EE9FB57D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537008,"discussion_content":"我也觉得有问题，不然感觉是重复的，读起来怪怪的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638934179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390679,"user_name":"人言有力","can_delete":false,"product_type":"c1","uid":1690736,"ip_address":"浙江","ucode":"3708FBBFB641FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/70/64045bc0.jpg","comment_is_top":false,"comment_ctime":1715943283,"is_pvip":false,"replies":[{"id":142122,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1716345176,"ip_address":"北京","comment_id":390679,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"本节核心概念——go方法本质是一个receiver作为第一个参数的函数，不可以跨包定义和定义多个。\n\n思考题，为什么改成field类型的方法就可以呢？因为等价为入参是*p和p，在for range迭代中不会有引用局部变量v，而v的地址是不变的。所以修改方法的receiver类型就能解决","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652831,"discussion_content":"那是因为go 1.22修改了for range语句中变量的语义，将var per loop（即整个循环仅定义一个循环变量）改为var per iteration(每次迭代重新定义一个变量)。\n\n具体可看这个blog https://go.dev/blog/loopvar-preview","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729691674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382999,"user_name":"jasen","can_delete":false,"product_type":"c1","uid":2595680,"ip_address":"广东","ucode":"E0B7A5F82E247F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLq1w2nAUjZRccn8HJONc7WguHVPY5egD7DjNVDtQdoyicaycyQOPRj939ZnxRqkd4dPEATAicgUJAA/132","comment_is_top":false,"comment_ctime":1698291870,"is_pvip":true,"replies":[{"id":139511,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1698371240,"ip_address":"辽宁","comment_id":382999,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":" data1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n    for _, v := range data1 {\n        go v.print() &#47;&#47; 我理解，编译器将其转换为了 go (*v).print()\n    }\n    time.Sleep(1 * time.Second)\n    &#47;&#47; 我理解，编译器转换为了下面这段代码\n    for _, v := range data1 {\n        go (*v).print()\n    }\n\n    time.Sleep(1 * time.Second)\n\n    data2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n    for _, v := range data2 {\n        go v.print()\n    }\n    time.Sleep(1 * time.Second)\n    for _, v := range data2 {\n        go (&amp;v).print() &#47;&#47; 我理解，这里编译器做了转换  go v.print()\n    }\n    \n    time.Sleep(1 * time.Second)","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645543,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716345176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381941,"user_name":"Geek_03c08d","can_delete":false,"product_type":"c1","uid":2994456,"ip_address":"广东","ucode":"50ADD8DCA09C0D","user_header":"","comment_is_top":false,"comment_ctime":1696246219,"is_pvip":false,"replies":[{"id":139175,"content":"看加餐部分，有专门一节讲的指针。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1696669823,"ip_address":"北京","comment_id":381941,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"已经看到了这里,怎么没有讲解指针方面的知识?代码中有些涉及的部分有疑问","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630365,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698371240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379566,"user_name":"zhongmin","can_delete":false,"product_type":"c1","uid":1265621,"ip_address":"湖北","ucode":"C7AB10205A4F04","user_header":"https://static001.geekbang.org/account/avatar/00/13/4f/d5/1666b7d0.jpg","comment_is_top":false,"comment_ctime":1692110794,"is_pvip":false,"replies":[{"id":138271,"content":"&quot;只能是*field类型的数据才能够调用&quot; -- 不是的。Go提供了语法糖，会自动取地址。\n\n比如：\n\nfunc (*T)M1() {}\n\nvar t T\nt.M1()\n\n编译器会自动将t.M1()转换为(&amp;t).M1()。\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1692161172,"ip_address":"北京","comment_id":379566,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"有点不明白的是，在GO中，如果方法中指定输入参数是指针（*filed）。我理解的是，这个应该只能是*filed类型的数据才能够调用。\n\n1. 第一个data1中，你定义的数据是指针输入的是指针，感觉好理解\n2. 第二个中 data2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}} ，每次 v 不是具体的值嘛， eg. 输入的不是具体的值field类型嘛，为什么也能调用*field 的方法\n\n难道会自动转换成这个输入局部变量的取地址符？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625758,"discussion_content":"&#34;只能是*field类型的数据才能够调用&#34; -- 不是的。Go提供了语法糖，会自动取地址。\n\n比如：\n\nfunc (*T)M1() {}\n\nvar t T\nt.M1()\n\n编译器会自动将t.M1()转换为(&amp;t).M1()。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692161172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379142,"user_name":"左耳朵东","can_delete":false,"product_type":"c1","uid":1160678,"ip_address":"广东","ucode":"60134ACF12BB52","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","comment_is_top":false,"comment_ctime":1691408126,"is_pvip":false,"replies":[{"id":138156,"content":"你的main函数中的t.Get()实际上会被编译器自动转为(*t).Get()。这是语法糖。因为Get的receiver类型是T，不是T指针。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1691476552,"ip_address":"北京","comment_id":379142,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"白老师您好，有个疑问向老师请教：\ntype T struct{}\n\nfunc (t T) Get() {\n\tfmt.Printf(&quot;%T&quot;, t)\n}\n\nfunc IterateFunc(i any) {\n\ttyp := reflect.TypeOf(i)\n\tnumMethod := typ.NumMethod()\n\tfor i := 0; i &lt; numMethod; i++ {\n\t\tmethod := typ.Method(i)\n\t\tinType := method.Func.Type().In(0)\n\t\tfmt.Println(method.Name, inType)\n\t}\n}\n\nfunc main(){\n\tt := &amp;T{}\n\tIterateFunc(t) &#47;&#47; 输出 Get *main.T\n\tt.Get() &#47;&#47; 输出 main.T\n}\n\n这里因为 t 是指针类型，所以 t.Get 不是应该等价于 T.Get(*t) 吗，为什么通过反射发现入参却是 *main.T ?","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625234,"discussion_content":"你的main函数中的t.Get()实际上会被编译器自动转为(*t).Get()。这是语法糖。因为Get的receiver类型是T，不是T指针。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691476552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1160678,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","nickname":"左耳朵东","note":"","ucode":"60134ACF12BB52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":625245,"discussion_content":"正常调用时的语法糖转换可以理解，主要是反射那里的入参为什么是 *main.T  而不是 main.T，而且通过反射调用 Get 方法的入参也必须是 *main.T，这跟 Get 的定义不符","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691485396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":625234,"ip_address":"广东","group_id":0},"score":625245,"extra":""}]}]},{"had_liked":false,"id":325458,"user_name":"Geek_119489","can_delete":false,"product_type":"c1","uid":2858862,"ip_address":"","ucode":"D708B6E8BE1D66","user_header":"","comment_is_top":false,"comment_ctime":1638962365,"is_pvip":false,"replies":[{"id":118601,"content":"约束说的：是基类型T不能为指针类型。*T是指针类型。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562284,"ip_address":"","comment_id":325458,"utype":1}],"discussion_count":5,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"*int算指针类型，但是*T不算指针类型吗？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538953,"discussion_content":"约束说的：是基类型T不能为指针类型。*T是指针类型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1979191,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/33/37/6088a9a2.jpg","nickname":"蜘蛛别过来","note":"","ucode":"D579C1F5AC8F09","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":550561,"discussion_content":"老师，这里基类型不能是指针是为什么呢？为了防止指针的指针嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644587253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":538953,"ip_address":"","group_id":0},"score":550561,"extra":""}]},{"author":{"id":1501818,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ea/7a/d857723d.jpg","nickname":"Vfeelit","note":"","ucode":"F3FF2B069F347F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545577,"discussion_content":"*T 是指针类型，但是如果T还是指针类型，就不行。实际就是不允许指针的指针...类型","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641996752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2858915,"avatar":"","nickname":"Geek_1621b6","note":"","ucode":"55DFE13F04D336","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537849,"discussion_content":"都是指针类型，注意老师说的是基类型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639218574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","nickname":"罗杰","note":"","ucode":"96BAFAA147341F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537249,"discussion_content":"为什么不是呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639012514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325371,"user_name":"liaomars","can_delete":false,"product_type":"c1","uid":2104856,"ip_address":"","ucode":"4FCA97EE9FB57D","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","comment_is_top":false,"comment_ctime":1638933581,"is_pvip":false,"replies":[{"id":118596,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639562167,"ip_address":"","comment_id":325371,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"思考题回复：\n把*field 改为 field ，那么 print()方法就可以转换成 print(p field)\n第一个for的调用就可以转换成：(field).print(*field)\n第二for的调用就可以转换成：(field).print(field)","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538947,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639562167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325347,"user_name":"扣剑书生","can_delete":false,"product_type":"c1","uid":2855599,"ip_address":"","ucode":"6F5FD189D2916C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/92/af/ad02ae4b.jpg","comment_is_top":false,"comment_ctime":1638928773,"is_pvip":false,"replies":[{"id":118594,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1639560735,"ip_address":"","comment_id":325347,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"*field -&gt; field\n最终传入 print 的参数 v都是对应结构体的值","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538943,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639560735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325312,"user_name":"西红柿牛腩泡饼","can_delete":false,"product_type":"c1","uid":1218761,"ip_address":"","ucode":"0B090A9D8588F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/c9/9b457156.jpg","comment_is_top":false,"comment_ctime":1638920438,"is_pvip":false,"replies":[{"id":118065,"content":"感谢反馈，已整体复核修改了","user_name":"编辑回复","user_name_real":"编辑","uid":2537474,"ctime":1638948257,"ip_address":"","comment_id":325312,"utype":2}],"discussion_count":3,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"无论 receiver 参数的类型为T 还是 T，这段中斜体部分应该是极客时间把星号识别成了文字格式，文中有几处此种类型错误","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538943,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639560735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395037,"user_name":"wu526","can_delete":false,"product_type":"c1","uid":1022129,"ip_address":"四川","ucode":"69282EB175B48E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/b1/f89a84d0.jpg","comment_is_top":false,"comment_ctime":1729152137,"is_pvip":false,"replies":[{"id":143492,"content":"那是因为go 1.22修改了for range语句中变量的语义，将var per loop（即整个循环仅定义一个循环变量）改为var per iteration(每次迭代重新定义一个变量)。\n\n具体可看这个blog https:&#47;&#47;go.dev&#47;blog&#47;loopvar-preview","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1729691674,"ip_address":"辽宁","comment_id":395037,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"老师，请问一下&quot;巧解难题&quot;这个代码，如果在go1.21版本以及之前的版本执行，都会输出多个six, 在go1.22及后续输出一个six, 为什么会有这种差异呢? 烦请老师解答一下，谢谢。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652831,"discussion_content":"那是因为go 1.22修改了for range语句中变量的语义，将var per loop（即整个循环仅定义一个循环变量）改为var per iteration(每次迭代重新定义一个变量)。\n\n具体可看这个blog https://go.dev/blog/loopvar-preview","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729691674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390679,"user_name":"人言有力","can_delete":false,"product_type":"c1","uid":1690736,"ip_address":"浙江","ucode":"3708FBBFB641FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/70/64045bc0.jpg","comment_is_top":false,"comment_ctime":1715943283,"is_pvip":false,"replies":[{"id":142122,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1716345176,"ip_address":"北京","comment_id":390679,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"本节核心概念——go方法本质是一个receiver作为第一个参数的函数，不可以跨包定义和定义多个。\n\n思考题，为什么改成field类型的方法就可以呢？因为等价为入参是*p和p，在for range迭代中不会有引用局部变量v，而v的地址是不变的。所以修改方法的receiver类型就能解决","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645543,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716345176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382999,"user_name":"jasen","can_delete":false,"product_type":"c1","uid":2595680,"ip_address":"广东","ucode":"E0B7A5F82E247F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLq1w2nAUjZRccn8HJONc7WguHVPY5egD7DjNVDtQdoyicaycyQOPRj939ZnxRqkd4dPEATAicgUJAA/132","comment_is_top":false,"comment_ctime":1698291870,"is_pvip":true,"replies":[{"id":139511,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1698371240,"ip_address":"辽宁","comment_id":382999,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":" data1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n    for _, v := range data1 {\n        go v.print() &#47;&#47; 我理解，编译器将其转换为了 go (*v).print()\n    }\n    time.Sleep(1 * time.Second)\n    &#47;&#47; 我理解，编译器转换为了下面这段代码\n    for _, v := range data1 {\n        go (*v).print()\n    }\n\n    time.Sleep(1 * time.Second)\n\n    data2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n    for _, v := range data2 {\n        go v.print()\n    }\n    time.Sleep(1 * time.Second)\n    for _, v := range data2 {\n        go (&amp;v).print() &#47;&#47; 我理解，这里编译器做了转换  go v.print()\n    }\n    \n    time.Sleep(1 * time.Second)","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630365,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698371240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381941,"user_name":"Geek_03c08d","can_delete":false,"product_type":"c1","uid":2994456,"ip_address":"广东","ucode":"50ADD8DCA09C0D","user_header":"","comment_is_top":false,"comment_ctime":1696246219,"is_pvip":false,"replies":[{"id":139175,"content":"看加餐部分，有专门一节讲的指针。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1696669823,"ip_address":"北京","comment_id":381941,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"已经看到了这里,怎么没有讲解指针方面的知识?代码中有些涉及的部分有疑问","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629104,"discussion_content":"看加餐部分，有专门一节讲的指针。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696669823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379566,"user_name":"zhongmin","can_delete":false,"product_type":"c1","uid":1265621,"ip_address":"湖北","ucode":"C7AB10205A4F04","user_header":"https://static001.geekbang.org/account/avatar/00/13/4f/d5/1666b7d0.jpg","comment_is_top":false,"comment_ctime":1692110794,"is_pvip":false,"replies":[{"id":138271,"content":"&quot;只能是*field类型的数据才能够调用&quot; -- 不是的。Go提供了语法糖，会自动取地址。\n\n比如：\n\nfunc (*T)M1() {}\n\nvar t T\nt.M1()\n\n编译器会自动将t.M1()转换为(&amp;t).M1()。\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1692161172,"ip_address":"北京","comment_id":379566,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"有点不明白的是，在GO中，如果方法中指定输入参数是指针（*filed）。我理解的是，这个应该只能是*filed类型的数据才能够调用。\n\n1. 第一个data1中，你定义的数据是指针输入的是指针，感觉好理解\n2. 第二个中 data2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}} ，每次 v 不是具体的值嘛， eg. 输入的不是具体的值field类型嘛，为什么也能调用*field 的方法\n\n难道会自动转换成这个输入局部变量的取地址符？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629104,"discussion_content":"看加餐部分，有专门一节讲的指针。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696669823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379142,"user_name":"左耳朵东","can_delete":false,"product_type":"c1","uid":1160678,"ip_address":"广东","ucode":"60134ACF12BB52","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","comment_is_top":false,"comment_ctime":1691408126,"is_pvip":false,"replies":[{"id":138156,"content":"你的main函数中的t.Get()实际上会被编译器自动转为(*t).Get()。这是语法糖。因为Get的receiver类型是T，不是T指针。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1691476552,"ip_address":"北京","comment_id":379142,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"白老师您好，有个疑问向老师请教：\ntype T struct{}\n\nfunc (t T) Get() {\n\tfmt.Printf(&quot;%T&quot;, t)\n}\n\nfunc IterateFunc(i any) {\n\ttyp := reflect.TypeOf(i)\n\tnumMethod := typ.NumMethod()\n\tfor i := 0; i &lt; numMethod; i++ {\n\t\tmethod := typ.Method(i)\n\t\tinType := method.Func.Type().In(0)\n\t\tfmt.Println(method.Name, inType)\n\t}\n}\n\nfunc main(){\n\tt := &amp;T{}\n\tIterateFunc(t) &#47;&#47; 输出 Get *main.T\n\tt.Get() &#47;&#47; 输出 main.T\n}\n\n这里因为 t 是指针类型，所以 t.Get 不是应该等价于 T.Get(*t) 吗，为什么通过反射发现入参却是 *main.T ?","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625758,"discussion_content":"&#34;只能是*field类型的数据才能够调用&#34; -- 不是的。Go提供了语法糖，会自动取地址。\n\n比如：\n\nfunc (*T)M1() {}\n\nvar t T\nt.M1()\n\n编译器会自动将t.M1()转换为(&amp;t).M1()。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692161172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342609,"user_name":"心海","can_delete":false,"product_type":"c1","uid":2120140,"ip_address":"","ucode":"FAE47D9EF4ABE9","user_header":"https://static001.geekbang.org/account/avatar/00/20/59/cc/27f4aa7e.jpg","comment_is_top":false,"comment_ctime":1650362897,"is_pvip":false,"replies":[{"id":125226,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1650493914,"ip_address":"","comment_id":342609,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"var sl = []int{1, 2, 3}\nvar s2 = []int{4, 5, 6}\n\nfunc sPrint1(s int) {\n\tfmt.Println(s)\n}\n\nfunc sPrint2(s *int) {\n\tfmt.Println(*s)\n}\nfunc main() {\n\n\tfor _, v := range sl {\n\t\t&#47;&#47;v是一个值，传递给sPrint1的传参是v的拷贝，sPrint1的实参不会因为v的改变而改变\n\t\tgo sPrint1(v)\n\t}\n\tfor _, v := range s2 {\n\t\t&#47;&#47;&amp;v是变量v的地址，当sPrint2开始执行时，&amp;v指向的值已经变为6\n\t\tgo sPrint2(&amp;v)\n\t}\n\ttime.Sleep(3 * time.Second)\n}\n","like_count":0},{"had_liked":false,"id":325735,"user_name":"Geek_1621b6","can_delete":false,"product_type":"c1","uid":2858915,"ip_address":"","ucode":"55DFE13F04D336","user_header":"","comment_is_top":false,"comment_ctime":1639109371,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"我觉得第二种情况会打印三个six是因为go (*field).print(&amp;v)中&amp;v是不变的，在循环结束后指向six。而第一种情况go (*field).print(v)中v的值是在变化的。","like_count":3},{"had_liked":false,"id":368193,"user_name":"无咎","can_delete":false,"product_type":"c1","uid":1479120,"ip_address":"北京","ucode":"B9759B5646F3AB","user_header":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","comment_is_top":false,"comment_ctime":1675995819,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"还是dump地址的方式，Playground: https:&#47;&#47;go.dev&#47;play&#47;p&#47;yGHjXmlVCyZ\n代码\n```\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Printf(&quot;fields.print(%p, %p, %+v)\\n&quot;, &amp;p, p, p)\n\t&#47;&#47; fmt.Println(p.name)\n}\n\nfunc main() {\n\t&#47;*\n\t\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\t\tfor i := 0; i &lt; len(data1); i++ {\n\t\t\tfmt.Printf(&quot;data1-&amp;v:%p, v=%#v\\n&quot;, &amp;data1[i], data1[i])\n\t\t}\n\t\tfor _, v := range data1 {\n\t\t\tfmt.Printf(&quot;data1-&amp;v:%p, v=%#v\\n&quot;, &amp;v, v)\n\t\t\tgo v.print()\n\t\t}\n\t\tfmt.Println(&quot;---&quot;)\n\t*&#47;\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor i := 0; i &lt; len(data2); i++ {\n\t\tfmt.Printf(&quot;data2-&amp;v:%p, v=%#v\\n&quot;, &amp;data2[i], data2[i])\n\t}\n\tfmt.Println(&quot;---1---&quot;)\n\tfor _, v := range data2 {\n\t\tfmt.Printf(&quot;data2-&amp;v:%p, v=%#v\\n&quot;, &amp;v, v)\n\t\tgo v.print()\n\t}\n\tfmt.Println(&quot;---2---&quot;)\n\n\ttime.Sleep(3 * time.Second)\n\tfmt.Println(&quot;---3---&quot;)\n}\n```\n输出\n```\ndata2-&amp;v:0xc00008c180, v=main.field{name:&quot;four&quot;}\ndata2-&amp;v:0xc00008c190, v=main.field{name:&quot;five&quot;}\ndata2-&amp;v:0xc00008c1a0, v=main.field{name:&quot;six&quot;}\n---1---\ndata2-&amp;v:0xc00008a050, v=main.field{name:&quot;four&quot;}\ndata2-&amp;v:0xc00008a050, v=main.field{name:&quot;five&quot;}\ndata2-&amp;v:0xc00008a050, v=main.field{name:&quot;six&quot;}\n---2---\nfields.print(0xc000012010, 0xc00008a050, &amp;{name:six})\nfields.print(0xc000100000, 0xc00008a050, &amp;{name:six})\nfields.print(0xc000194000, 0xc00008a050, &amp;{name:six})\n---3---\n\nProgram exited.\n```\n其中v的地址是0xc00008a050，传入到field的也是0xc00008a050这个地址。","like_count":1},{"had_liked":false,"id":351398,"user_name":"江河","can_delete":false,"product_type":"c1","uid":1981442,"ip_address":"","ucode":"C91566C13DD825","user_header":"https://static001.geekbang.org/account/avatar/00/1e/3c/02/8a07be41.jpg","comment_is_top":false,"comment_ctime":1657769621,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"读这一篇时，始终带着一个闭包问题在看，在``` go v.print() ``` 转换成 ``` go print(v) ```时，才反应过来，这里已经是传参了，v不是一个闭包环境中的绑定变量。","like_count":1},{"had_liked":false,"id":344861,"user_name":"路边的猪","can_delete":false,"product_type":"c1","uid":2057354,"ip_address":"","ucode":"92F7C082E44FC4","user_header":"https://static001.geekbang.org/account/avatar/00/1f/64/8a/bc8cb43c.jpg","comment_is_top":false,"comment_ctime":1651826372,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"func main() {\n\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\tfor _, v := range data1 {\n\t\tgo v.print()\n\t}\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor _, v := range data2 {\n\t\tgo v.print()\n\t\ttime.Sleep(1 * time.Second)\n\t}\n\ttime.Sleep(10 * time.Second)\n}\n\n还有这样一个骚操作","like_count":1},{"had_liked":false,"id":329361,"user_name":"Geek_fightingDC","can_delete":false,"product_type":"c1","uid":1843027,"ip_address":"","ucode":"EF7F7316ADFF49","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83equSjO9AVmwhvyhTZzk6icNTSED9s1sUdFZSfqTHq2PmZ4MibMFX58C8qDW2a4cjiaFvAdiaRchsLz54g/132","comment_is_top":false,"comment_ctime":1641300568,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"方法，本质上是函数","like_count":1},{"had_liked":false,"id":325403,"user_name":"ddh","can_delete":false,"product_type":"c1","uid":2806043,"ip_address":"","ucode":"8E852375365F16","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","comment_is_top":false,"comment_ctime":1638945922,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"这样改也是可以的\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Println(p.name)\n}\n\nfunc main() {\n\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\tfor _, v := range data1 {\n\t\tgo v.print()\n\t}\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor i := range data2 {\n\t\tgo data2[i].print()\n\t}\n\n\ttime.Sleep(3 * time.Second)\n}","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565545,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650493915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342609,"user_name":"心海","can_delete":false,"product_type":"c1","uid":2120140,"ip_address":"","ucode":"FAE47D9EF4ABE9","user_header":"https://static001.geekbang.org/account/avatar/00/20/59/cc/27f4aa7e.jpg","comment_is_top":false,"comment_ctime":1650362897,"is_pvip":false,"replies":[{"id":125226,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1650493914,"ip_address":"","comment_id":342609,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"var sl = []int{1, 2, 3}\nvar s2 = []int{4, 5, 6}\n\nfunc sPrint1(s int) {\n\tfmt.Println(s)\n}\n\nfunc sPrint2(s *int) {\n\tfmt.Println(*s)\n}\nfunc main() {\n\n\tfor _, v := range sl {\n\t\t&#47;&#47;v是一个值，传递给sPrint1的传参是v的拷贝，sPrint1的实参不会因为v的改变而改变\n\t\tgo sPrint1(v)\n\t}\n\tfor _, v := range s2 {\n\t\t&#47;&#47;&amp;v是变量v的地址，当sPrint2开始执行时，&amp;v指向的值已经变为6\n\t\tgo sPrint2(&amp;v)\n\t}\n\ttime.Sleep(3 * time.Second)\n}\n","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565545,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650493915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325735,"user_name":"Geek_1621b6","can_delete":false,"product_type":"c1","uid":2858915,"ip_address":"","ucode":"55DFE13F04D336","user_header":"","comment_is_top":false,"comment_ctime":1639109371,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"我觉得第二种情况会打印三个six是因为go (*field).print(&amp;v)中&amp;v是不变的，在循环结束后指向six。而第一种情况go (*field).print(v)中v的值是在变化的。","like_count":3},{"had_liked":false,"id":368193,"user_name":"无咎","can_delete":false,"product_type":"c1","uid":1479120,"ip_address":"北京","ucode":"B9759B5646F3AB","user_header":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","comment_is_top":false,"comment_ctime":1675995819,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"还是dump地址的方式，Playground: https:&#47;&#47;go.dev&#47;play&#47;p&#47;yGHjXmlVCyZ\n代码\n```\npackage main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Printf(&quot;fields.print(%p, %p, %+v)\\n&quot;, &amp;p, p, p)\n\t&#47;&#47; fmt.Println(p.name)\n}\n\nfunc main() {\n\t&#47;*\n\t\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\t\tfor i := 0; i &lt; len(data1); i++ {\n\t\t\tfmt.Printf(&quot;data1-&amp;v:%p, v=%#v\\n&quot;, &amp;data1[i], data1[i])\n\t\t}\n\t\tfor _, v := range data1 {\n\t\t\tfmt.Printf(&quot;data1-&amp;v:%p, v=%#v\\n&quot;, &amp;v, v)\n\t\t\tgo v.print()\n\t\t}\n\t\tfmt.Println(&quot;---&quot;)\n\t*&#47;\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor i := 0; i &lt; len(data2); i++ {\n\t\tfmt.Printf(&quot;data2-&amp;v:%p, v=%#v\\n&quot;, &amp;data2[i], data2[i])\n\t}\n\tfmt.Println(&quot;---1---&quot;)\n\tfor _, v := range data2 {\n\t\tfmt.Printf(&quot;data2-&amp;v:%p, v=%#v\\n&quot;, &amp;v, v)\n\t\tgo v.print()\n\t}\n\tfmt.Println(&quot;---2---&quot;)\n\n\ttime.Sleep(3 * time.Second)\n\tfmt.Println(&quot;---3---&quot;)\n}\n```\n输出\n```\ndata2-&amp;v:0xc00008c180, v=main.field{name:&quot;four&quot;}\ndata2-&amp;v:0xc00008c190, v=main.field{name:&quot;five&quot;}\ndata2-&amp;v:0xc00008c1a0, v=main.field{name:&quot;six&quot;}\n---1---\ndata2-&amp;v:0xc00008a050, v=main.field{name:&quot;four&quot;}\ndata2-&amp;v:0xc00008a050, v=main.field{name:&quot;five&quot;}\ndata2-&amp;v:0xc00008a050, v=main.field{name:&quot;six&quot;}\n---2---\nfields.print(0xc000012010, 0xc00008a050, &amp;{name:six})\nfields.print(0xc000100000, 0xc00008a050, &amp;{name:six})\nfields.print(0xc000194000, 0xc00008a050, &amp;{name:six})\n---3---\n\nProgram exited.\n```\n其中v的地址是0xc00008a050，传入到field的也是0xc00008a050这个地址。","like_count":1},{"had_liked":false,"id":351398,"user_name":"江河","can_delete":false,"product_type":"c1","uid":1981442,"ip_address":"","ucode":"C91566C13DD825","user_header":"https://static001.geekbang.org/account/avatar/00/1e/3c/02/8a07be41.jpg","comment_is_top":false,"comment_ctime":1657769621,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"读这一篇时，始终带着一个闭包问题在看，在``` go v.print() ``` 转换成 ``` go print(v) ```时，才反应过来，这里已经是传参了，v不是一个闭包环境中的绑定变量。","like_count":1},{"had_liked":false,"id":344861,"user_name":"路边的猪","can_delete":false,"product_type":"c1","uid":2057354,"ip_address":"","ucode":"92F7C082E44FC4","user_header":"https://static001.geekbang.org/account/avatar/00/1f/64/8a/bc8cb43c.jpg","comment_is_top":false,"comment_ctime":1651826372,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"func main() {\n\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\tfor _, v := range data1 {\n\t\tgo v.print()\n\t}\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor _, v := range data2 {\n\t\tgo v.print()\n\t\ttime.Sleep(1 * time.Second)\n\t}\n\ttime.Sleep(10 * time.Second)\n}\n\n还有这样一个骚操作","like_count":1},{"had_liked":false,"id":329361,"user_name":"Geek_fightingDC","can_delete":false,"product_type":"c1","uid":1843027,"ip_address":"","ucode":"EF7F7316ADFF49","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83equSjO9AVmwhvyhTZzk6icNTSED9s1sUdFZSfqTHq2PmZ4MibMFX58C8qDW2a4cjiaFvAdiaRchsLz54g/132","comment_is_top":false,"comment_ctime":1641300568,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"方法，本质上是函数","like_count":1},{"had_liked":false,"id":325403,"user_name":"ddh","can_delete":false,"product_type":"c1","uid":2806043,"ip_address":"","ucode":"8E852375365F16","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","comment_is_top":false,"comment_ctime":1638945922,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"这样改也是可以的\ntype field struct {\n\tname string\n}\n\nfunc (p *field) print() {\n\tfmt.Println(p.name)\n}\n\nfunc main() {\n\tdata1 := []*field{{&quot;one&quot;}, {&quot;two&quot;}, {&quot;three&quot;}}\n\tfor _, v := range data1 {\n\t\tgo v.print()\n\t}\n\n\tdata2 := []field{{&quot;four&quot;}, {&quot;five&quot;}, {&quot;six&quot;}}\n\tfor i := range data2 {\n\t\tgo data2[i].print()\n\t}\n\n\ttime.Sleep(3 * time.Second)\n}","like_count":1}]}