{"id":221314,"title":"20 | 从务实的角度，给你架构设计的重点知识和学习路径","content":"<p>你好，我是王庆友。</p><p>到目前为止，我们已经讲完了业务架构和技术架构的相关内容，相信你现在对架构有了更深入的理解。</p><p>学习架构呢，要掌握的东西有很多，你是不是开始担心自己一辈子都学不完呢？其实，我们也不需要一下子铺开学习所有的架构技能，重要的是把控好学习的节奏，在适当的时间学习适当的内容，我们可以结合实际工作，一步步地成长。所以今天这一讲，我想给你提供一些架构学习的重点方向和路径建议。</p><h2>架构原则汇总</h2><p>在技术架构篇，我针对系统的高可用、高性能、可伸缩和低成本，给你介绍了很多的架构设计原则，不同的原则对应着不同的目标，这里我把这些架构原则和目标汇总成一个表格，来帮助你更直观地了解它们。</p><p><img src=\"https://static001.geekbang.org/resource/image/92/23/92ff7493c75f34d4085702dcb4a57323.jpg?wh=2284*2400\" alt=\"\"></p><p>限于篇幅，这里我挑选几个原则来重点说下：</p><ul>\n<li><strong>可回滚/可禁用</strong></li>\n</ul><p><strong>可回滚原则</strong>确保了系统可以向后兼容，当系统升级出现问题的时候，我们可以回滚到旧版本，保证系统始终可用。</p><p>不过有些时候，系统回滚很困难。举个例子，如果数据库的新旧表结构差异很大，除了回滚代码，我们还要回滚数据库，这样操作起来往往需要很长时间，系统的可回滚性就比较差。所以在设计时，我们要尽量考虑数据库修改和代码的兼容性，并提前做好系统回滚的预案。</p><p><strong>可禁用原则</strong>要求我们提供功能是否可用的配置，在系统出现故障时，我们能够快速下线相应的功能。比如说，新的商品推荐算法有问题，我们可以通过程序开关禁用这个功能。</p><!-- [[[read_end]]] --><ul>\n<li><strong>使用成熟技术</strong></li>\n</ul><p>作为开发人员，我们都很想尝试新技术，但我们知道，新的技术还没有经过充分的验证，它往往会存在很多隐藏的Bug。</p><p>所以，作为架构师，我们在做方案设计的时候，一方面，要从系统的稳定性出发，尽量选择成熟的技术，避免因为新技术的坑而导致系统可用性出现问题；另一方面，选择成熟的技术也意味着选择了团队熟悉的技术，这样学习成本低，落地快。</p><ul>\n<li><strong>使用同质化硬件</strong></li>\n</ul><p>我们在做硬件选型的时候，要尽量选择相同的硬件和相同的配置。</p><p>比如说，对于服务器，我们选择同样的CPU和内存配置，以及同样的操作系统版本，这样我们更容易通过统一的自动化脚本，对节点进行配置，对系统做水平扩展时也会更加容易。</p><h2>架构落地过程</h2><p>这些架构原则都是我们要深入理解，并且在实践中要逐渐运用和掌握的。那么下面，我就带你来了解一下架构的具体落地过程，帮助你更好地理解架构师的职责和技能要求。</p><p>简单地说，架构师的职责就是负责设计架构，并跟踪架构的实施过程，解决过程中出现的疑难问题，确保架构顺利落地。在第1讲“<a href=\"https://time.geekbang.org/column/article/200825\">架构的本质</a>”中，我和你介绍过架构师的能力模型，比如抽象思维、平衡取舍、沟通能力等等。接下来，我就结合架构的落地过程和架构师的能力模型，来具体说下架构师是如何开展工作的。</p><p><img src=\"https://static001.geekbang.org/resource/image/c8/f7/c8ee9fd90ed76fd4eace41fbf074a8f7.jpg?wh=2284*1218\" alt=\"\"></p><p>架构师的工作从接到项目需求，或者从自己主动识别系统当前的问题开始，TA的工作过程可以分为三个大阶段。</p><p>首先，架构师要和产品经理或者业务人员沟通，了解业务；和开发人员沟通，了解系统。</p><p>了解完系统和业务后，架构师接下来就要设计具体的方案，方案设计要分三步走：</p><ul>\n<li>首先，架构师针对业务需求，分解相应功能到现有的各个系统，把系统的各个部分串起来，这个第一版的方案至少要能够在表面上解决当前的问题，这样就形成一个<span class=\"orange\">草根</span>的方案。</li>\n<li>然后，架构师要进一步深入思考业务的本质，对现有的草根方案进行升华，比如说，通过抽象，让方案更加通用，可以解决多个类似的或潜在的业务需求，这样，草根的方案就变成了一个<span class=\"orange\">高大上</span>的方案，这里很考验架构师的<strong>透过问题看本质</strong>和<strong>抽象总结</strong>的能力，</li>\n<li>接下来，基于现有的各项约束，比如时间、资金和人员技术能力等因素，架构师要对方案进行简化，把高大上的方案变成一个<span class=\"orange\">接地气</span>的方案，以最小的代价实现最大的价值，这里很考验架构师的<strong>平衡取舍能力</strong>。</li>\n</ul><p>方案设计好之后，最后还要进行<strong>宣讲</strong>，架构师需要说服相关的人员接受方案，并且在后续的方案执行中，负责跟踪架构的落地，如果过程中有疑难问题，架构师还要协助解决。</p><p>所以，我们可以看到，架构师在设计方案时，会有一个反复迭代的过程，最终才能得到一个简约而不简单的方案。并且在方案设计的前后，架构师还需要和大量的人员进行沟通，这些都需要架构师具备宽广的知识面和良好的沟通能力。</p><h2>架构师知识结构</h2><p><strong>那么，架构师都需要掌握哪些具体的技能呢？</strong>这里我给你提供了一个简化的架构师技能图谱，可以帮助你循序渐进地学习这些架构技能。</p><p><img src=\"https://static001.geekbang.org/resource/image/bd/05/bd542ad898f1f060fdbb120d7462b005.jpg?wh=2284*1780\" alt=\"\"></p><p>首先，作为架构师，我们需要了解<strong><span class=\"orange\">计算机硬件和操作系统</span></strong>的相关知识，它们是负责具体干活的，如果对它们有深入的了解，我们就能知道系统底层是怎么执行的，在做具体设计的时候，我们也就可以做各种优化。比如说，在设计RPC通讯框架时，我们可以通过IO多路复用和内存零拷贝技术，来提升服务端并发处理请求的能力。</p><p>在这之上就是<strong><span class=\"orange\">具体技术</span></strong>相关的内容，从浅到深可以分为三个部分：</p><ul>\n<li>第一部分是<strong>开发相关的基本知识</strong>，比如数据结构和算法、具体的开发语言、常用的设计模式以及开发框架等等，这样你就具备了基本的开发能力。</li>\n<li>第二部分是<strong>各种中间件知识</strong>，常用的中间件包括数据库、缓存、消息系统、微服务框架等等，对于这些核心中间件，我们不但要了解具体的用法，还要深入理解它们的适用场景。这样你就能写出高效健壮的代码，能够独立承担一个子系统的开发。</li>\n<li>继续往下深入，你还要学习<strong>分布式系统相关的知识</strong>，包括底层网络和分布式通信技术，这样你就可以了解系统是怎么连接在一起的。除此之外，你还要了解一些周边的系统，比如大数据平台、运维监控系统、接入系统等等，这样，你就可以了解系统端到端的运行过程，从技术架构上保证系统的稳定可用。</li>\n</ul><p>掌握了这些技术能力之后，你就可以逐渐往全面的架构师发展了。比如说，你可以结合业务，来设计应用体系，包括数据模型和服务设计；你可以了解各种应用架构模型，知道它们的优缺点和适用场景，能够定义一个良好的应用依赖关系。</p><p>再往上，就是成为业务领域专家。在这个阶段，你已经知道如何通过业务拆分，实现业务之间的解耦；如何通过业务抽象，实现业务的扩展和重用。</p><p>到最后，你已经对各种架构设计的目标和架构原则都非常了解了，知道面对一个具体的问题，大致都有哪些解决的手段；然后，经过大量的实践，你能够把技术架构、应用架构、业务架构融会贯通，并针对具体情况，对架构的各个目标做良好的平衡。当然，作为架构师，你还要和一系列的人员打交道，这时候就需要你培养更多的<strong><span class=\"orange\">软技能</span></strong>，能把复杂的架构问题以简单的方式表达出来。</p><h2>架构师成长路径</h2><p>现在，你已经清楚了作为一个架构师，TA需要具备什么样的知识结构。如果你想成为一名架构师，在不同的成长阶段，你还需要学习不同的内容。这里，我以Java为例，进一步给出学习的重点内容，给你提供更具体的参考。</p><p><img src=\"https://static001.geekbang.org/resource/image/36/64/36078cf0b5c469893c0be152b69d8d64.jpg?wh=2284*1500\" alt=\"\"></p><p>第一个阶段是<strong><span class=\"orange\">初级开发阶段</span></strong>。</p><p>在这个阶段，你需要深入学习数据结构和算法，并且一定要深入掌握单体应用的分层架构，因为这是架构设计的基础。</p><p>另外，对JDK的一些核心类，你不能仅仅停留在使用层面，而是要深入研读源代码，了解它的内部设计。这样你就知道如何开发一个高效的程序，如何进行各种代码级的调优。</p><p>第二个阶段是<strong><span class=\"orange\">高级开发阶段</span></strong>。</p><p>首先，你需要非常了解<strong>设计模式</strong>，每个设计模式都可以看做是一个小型的架构设计，这里面有很好的设计原则和抽象思维，你在做系统设计时可以借鉴它们。</p><p>然后，你需要非常了解<strong>核心的中间件</strong>，包括DB、微服务框架、缓存和消息系统，要清楚地了解它们的适用场景（比如消息系统的削峰、解耦和异步），知道如何对它们进行调优，以及了解它们都有哪些常见的坑等等，核心中间件是我们做技术选型的基础。</p><p>同时，你要深入掌握<strong>数据库设计和服务接口设计</strong>，了解它们的最佳设计实践，它们承载了系统核心的业务数据和业务逻辑。</p><p>最后，你需要进一步<strong>研读源码</strong>，源码是活的教材，它包含了大量实用的设计原则和技巧。这里我建议你选择一些开源的开发框架和RPC通信框架，去深入了解它们内部的实现原理，比如Spring和Netty。</p><p>第三个阶段是<strong><span class=\"orange\">架构师阶段</span></strong>，成为技术专家。</p><p>首先，你需要深入了解网络通信，比如说网络分层和HTTP/TCP协议，还有各种常见的RPC通讯框架，了解它们的特性和适用场景，这样你在设计分布式系统时，就能够进行合理的技术选型。</p><p>然后是了解底层系统，包括JVM、操作系统和硬件原理，再往上延伸到系统的接入部分，了解常见的负载均衡特性和用法，这样你可以对整体的系统有个透彻的了解，把各个环节可以很好地衔接起来。这里，我特别建议你去读下Java和JVM的规格说明书，了解Java的底层设计。</p><p>最后，你需要熟练掌握各种设计工具和方法论，比如领域驱动设计和UML，了解常用的架构设计原则，这样你就能够结合业务，选择合适的应用架构和技术架构并进行落地。在这一阶段，对你总的要求就是能够从<strong>端到端的角度</strong>进行业务分析和系统设计。</p><p>第四阶段是<strong><span class=\"orange\">大师阶段</span></strong>。</p><p>在这个阶段，你需要对架构的各个目标都非常了解，除了业务系统设计，你还要对运维和监控有深入的认知。同时，你需要了解业界的架构实践，跟踪技术的发展趋势，如果出来一项新技术，你可以比较准确地对它进行定位，把它纳入到自己的能力体系当中。</p><p>另外，在这个阶段，你也已经通过大量的实践，培养了很好的软技能，比如沟通能力、项目管理能力等等。那么最后，你就能做到技术和业务的融会贯通，可以平衡各种架构目标，设计非常实用和接地气的架构，并保障它的顺利落地。</p><h2>架构师境界</h2><p>你可以发现，架构师的能力是一个逐渐提升的过程，如果从架构师的境界来看，由浅到深可以分为四层：第一层看山不是山，第二层看山是山，第三层看山不是山，第四层看山是山。</p><p>这是一个螺旋式上升的过程，那么它究竟是什么意思呢？</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/7f/8dee8d15ad007764e3f781a3d8cdbe7f.jpg?wh=2284*1330\" alt=\"\"></p><ul>\n<li>刚接手项目的时候，你对业务还不太了解，经常会被业务方冒出的术语弄得一愣一愣的，如果把现有问题比作山，那就是横看成岭侧成峰，你根本摸不透，此时<strong>看山不是山</strong>。</li>\n<li>经过业务梳理和深入了解系统以后，你能够设计出一个简单的方案，把各个系统串起来，能解决当前的问题，对当前的这个“山”能够看清楚全貌，此时就做到了<strong>看山是山</strong>。但这样的方案往往设计不够，只能解决表面问题，碰到其它类似问题或者问题稍微变形，系统还需要重新开发。</li>\n<li>通过进一步抽象，你能够发现问题的本质，明白了原来这个问题是共性的，后续还会有很多类似的问题。然后你就对设计进行总结和升华，得到一个通用的方案，它不光能解决当前的问题，还可以解决潜在的问题。此时，你看到的已经是问题的本质，<strong>看山不是山</strong>。但这样的方案往往会过度设计，太追求通用化，会创造出过多的抽象概念，理解和实现起来都特别困难，过犹不及。</li>\n<li>最后回到问题本身，你能够去除过度的抽象，给出的设计简洁明了，增之一分嫌肥，减之一分嫌瘦，既能解决当前的问题，又保留了一定的扩展能力，此时问题还是那个问题，<strong>山还是那个山</strong>。这样的方案在了解问题本质的基础上，同时考虑到了现状，评估了未来，不多做，不少做。</li>\n</ul><p>你可以对照这四个境界，来评估你当前的架构能力，不断地提升对自己的要求。</p><h2>总结</h2><p>今天，我汇总了常见的技术架构设计原则，它们都是实践的总结，你在做架构设计时，可以参考这些原则，在项目中采取相应的手段来实现架构目标。值得注意的是，在做具体的架构设计时，你需要对设计进行反复迭代，才能最终得到一个高性价比的方案。</p><p>针对架构师的成长，我也给你提供了相应的知识结构和可行的进阶之路，希望你能够一步步成长，最终实现自己的理想。</p><p><strong>读万卷书，行万里路。</strong>架构师的成长尤其如此，架构没有速成之路，我们先要“读万卷书”，学习各种架构需要的技能，然后“行万里路”，通过大量的实践把架构知识变成架构能力。</p><p><strong>最后，给你留一道思考题：</strong>一个架构方案从调研到设计再到落地，你觉得最困难的地方是什么？</p><p>欢迎在留言区和我互动，我会第一时间给你反馈。如果这节课对你有帮助，也欢迎你把它分享给你的朋友。感谢阅读，我们下期再见。</p>","neighbors":{"left":{"article_title":"19 | 综合案例：电商平台技术架构是如何演变的？","id":219788},"right":{"article_title":"结束语 | 和你聊聊我的架构心路历程","id":221579}},"comments":[{"had_liked":false,"id":203508,"user_name":"AlfredLover","can_delete":false,"product_type":"c1","uid":1042354,"ip_address":"","ucode":"A3A998F362CC37","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/b2/334bc992.jpg","comment_is_top":false,"comment_ctime":1586223515,"is_pvip":true,"replies":[{"id":"76098","content":"有点干，大家多稀释几遍。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1586244847,"ip_address":"","comment_id":203508,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27356027291","product_id":100046301,"comment_content":"这课程值得反复阅读","like_count":6,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490879,"discussion_content":"有点干，大家多稀释几遍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586244847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203195,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1586154215,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23060990695","product_id":100046301,"comment_content":"最难的应该不是这三步。而是落地后持续的演进。毕竟从一个项目长远的角度看，比如说5年10年。持续维护架构健康，并非一人之力可以达成。需要的是团队具备这种持续优化演进架构的共识，并把这个共识一直传承下去。","like_count":5,"discussions":[{"author":{"id":1666025,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6b/e9/7620ae7e.jpg","nickname":"雨落～紫竹","note":"","ucode":"33CED2F34E708F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591691,"discussion_content":"你这叫过度设计 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666769133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216050,"user_name":"Robin康F","can_delete":false,"product_type":"c1","uid":1962437,"ip_address":"","ucode":"618F8686D1231D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJyLCPnVq4gKMN5jPcd9wVVEXtZMibCNAkLrJf4uZKdV40Nelb3uPtCETfuw5hbbC693sUHQpRUMiaA/132","comment_is_top":false,"comment_ctime":1589175065,"is_pvip":false,"replies":[{"id":"79972","content":"想法很好，业务需求是表面，设计是深入了解需求后的对本质的抽象，并适合开发人员落地。作为技术人员，一开始学的是技术，到一定阶段后，要深入理解业务，业务和技术结合起来，才能设计解决方案。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1589188943,"ip_address":"","comment_id":216050,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14474076953","product_id":100046301,"comment_content":"一个架构方案从调研到设计再到落地,我认为最困难的是设计，因为它是调研的抽象，是落地的前提，抽象不好，扩展性可能不好，落地方案也是缺漏频出。设计又分业务架构设计和技术架构设计，业务架构设计是连接业务和技术的桥梁，又不是技术架构的前提，所以能够很好的理解业务，并抽象为合理的架构就是最至关重要的了，老师觉得我的想法咋样了，希望给一些建议","like_count":3,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494653,"discussion_content":"想法很好，业务需求是表面，设计是深入了解需求后的对本质的抽象，并适合开发人员落地。作为技术人员，一开始学的是技术，到一定阶段后，要深入理解业务，业务和技术结合起来，才能设计解决方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589188943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203326,"user_name":"深山小书童","can_delete":false,"product_type":"c1","uid":1079593,"ip_address":"","ucode":"6B5DD3B3D84534","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/29/a90cf777.jpg","comment_is_top":false,"comment_ctime":1586173041,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14471074929","product_id":100046301,"comment_content":"读完了整体来说受益匪浅，谢谢老师。总体来说业务架构写的比技术架构好很多，也许是业务架构上的文章在网上比较少见，技术架构的文章太司空见惯。","like_count":3},{"had_liked":false,"id":203033,"user_name":"小洛","can_delete":false,"product_type":"c1","uid":1005062,"ip_address":"","ucode":"227EC21891012B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/06/ea49b29d.jpg","comment_is_top":false,"comment_ctime":1586105796,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5881073092","product_id":100046301,"comment_content":"从端到端的完整业务去看问题，去做架构设计，但是往往有盲点，考虑不周，在落地的时候有可能发现设计不可行","like_count":1,"discussions":[{"author":{"id":1204168,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5f/c8/13aa8aa9.jpg","nickname":"night","note":"","ucode":"03B3C955092C03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365330,"discussion_content":"我理解，架构设计的过程中，端到端的目的是全场景、全流程。这个能够打通，说明视角和思考链路是完整的。当然过程中会，会在每个层进行发散展开和设计收敛的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617772792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359342,"user_name":"杜秀清","can_delete":false,"product_type":"c1","uid":2952514,"ip_address":"上海","ucode":"4D33DD69E8D238","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGiahPncXAMXlRibCVapHxib4V90Pxa56QQr6iatHmHn77YibSibWhdBe9YKxrD5ria9ZI4JfFjD1SecAmg/132","comment_is_top":false,"comment_ctime":1665457813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665457813","product_id":100046301,"comment_content":"业务与技术的融合，并考虑后期的循序渐进式的迭代","like_count":0},{"had_liked":false,"id":344408,"user_name":"Geek_741b0e","can_delete":false,"product_type":"c1","uid":2946336,"ip_address":"","ucode":"CCFCE37871A55A","user_header":"","comment_is_top":false,"comment_ctime":1651512497,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651512497","product_id":100046301,"comment_content":"我也感觉最难的是落地，涉及的人多，业务广，接受度也不一样，执行也不一样。落地的周期也很长等等","like_count":0},{"had_liked":false,"id":290064,"user_name":"遇黑则明16619751287","can_delete":false,"product_type":"c1","uid":1142931,"ip_address":"","ucode":"4ED98BBC2EC078","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/93/03d8fb2e.jpg","comment_is_top":false,"comment_ctime":1619343082,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619343082","product_id":100046301,"comment_content":"项目重构有点难","like_count":0},{"had_liked":false,"id":272798,"user_name":"寒光","can_delete":false,"product_type":"c1","uid":1206187,"ip_address":"","ucode":"061BE413595F21","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/ab/fcf0cec4.jpg","comment_is_top":false,"comment_ctime":1610287820,"is_pvip":false,"replies":[{"id":"99620","content":"感谢捧场！！！","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1611039112,"ip_address":"","comment_id":272798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610287820","product_id":100046301,"comment_content":"听完一遍后，又看了一遍，理论有高度，例子接地气，非常好的课程！","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513391,"discussion_content":"感谢捧场！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611039112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228551,"user_name":"dao","can_delete":false,"product_type":"c1","uid":1087879,"ip_address":"","ucode":"4181FB270462CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","comment_is_top":false,"comment_ctime":1592733022,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592733022","product_id":100046301,"comment_content":"抱着随便读读的心态，试读了几篇，蛮有收获。","like_count":0},{"had_liked":false,"id":225114,"user_name":"Maiza","can_delete":false,"product_type":"c1","uid":1007248,"ip_address":"","ucode":"D6911CDAC0D8C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/90/5f79859b.jpg","comment_is_top":false,"comment_ctime":1591661421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591661421","product_id":100046301,"comment_content":"最难的地方应该是落地呀，每个人都有自己不同的想法和利益。想要完整的落地你的架构真的是天时地利人和的事情 。。。","like_count":0},{"had_liked":false,"id":213369,"user_name":"Maiza","can_delete":false,"product_type":"c1","uid":1007248,"ip_address":"","ucode":"D6911CDAC0D8C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/90/5f79859b.jpg","comment_is_top":false,"comment_ctime":1588396966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588396966","product_id":100046301,"comment_content":"老师总结的很到位，受教。","like_count":0},{"had_liked":false,"id":205563,"user_name":"Middleware","can_delete":false,"product_type":"c1","uid":1072015,"ip_address":"","ucode":"C0028293ECDD47","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","comment_is_top":false,"comment_ctime":1586674435,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1586674435","product_id":100046301,"comment_content":"读万卷书行万里路","like_count":0},{"had_liked":false,"id":203953,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1586311644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586311644","product_id":100046301,"comment_content":"我觉得最困难的是对业务的现有模式的真正理解和今后的业务的扩展的预见判断。","like_count":0},{"had_liked":false,"id":203807,"user_name":"Geek_kevin","can_delete":false,"product_type":"c1","uid":1301274,"ip_address":"","ucode":"03B0253CA59582","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/1a/30201f1a.jpg","comment_is_top":false,"comment_ctime":1586269011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586269011","product_id":100046301,"comment_content":"我就感觉难点应该是沟通问题,如何说服大家认可你的架构方案？如何以低成本的去验证？还有就是确保开发人员真正理解并严格执行架构落地。","like_count":0},{"had_liked":false,"id":203507,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1586223210,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586223210","product_id":100046301,"comment_content":"架构师之路还有好多路要走","like_count":0},{"had_liked":false,"id":203487,"user_name":"雨霖铃声声慢","can_delete":false,"product_type":"c1","uid":1052607,"ip_address":"","ucode":"656D98310C6DA3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/bf/ee93c4cf.jpg","comment_is_top":false,"comment_ctime":1586221114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586221114","product_id":100046301,"comment_content":"最困难的是沟通吧，让别人能够接受这个方案而且还能做的好是挺难的。尤其是涉及到多部门合作，还要协调排期优先级等等。","like_count":0},{"had_liked":false,"id":203073,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1586136555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586136555","product_id":100046301,"comment_content":"学无止境啊","like_count":0}]}