{"id":96277,"title":"01 | 如何制定性能调优标准？","content":"<p>你好，我是刘超。</p><p>我有一个朋友，有一次他跟我说，他们公司的系统从来没有经过性能调优，功能测试完成后就上线了，线上也没有出现过什么性能问题呀，那为什么很多系统都要去做性能调优呢？</p><p>当时我就回答了他一句，如果你们公司做的是 12306 网站，不做系统性能优化就上线，试试看会是什么情况。</p><p>如果是你，你会怎么回答呢？今天，我们就从这个话题聊起，希望能跟你一起弄明白这几个问题：我们为什么要做性能调优？什么时候开始做？做性能调优是不是有标准可参考？</p><h2>为什么要做性能调优？</h2><p>一款线上产品如果没有经过性能测试，那它就好比是一颗定时炸弹，你不知道它什么时候会出现问题，你也不清楚它能承受的极限在哪儿。</p><p>有些性能问题是时间累积慢慢产生的，到了一定时间自然就爆炸了；而更多的性能问题是由访问量的波动导致的，例如，活动或者公司产品用户量上升；当然也有可能是一款产品上线后就半死不活，一直没有大访问量，所以还没有引发这颗定时炸弹。</p><p>现在假设你的系统要做一次活动，产品经理或者老板告诉你预计有几十万的用户访问量，询问系统能否承受得住这次活动的压力。如果你不清楚自己系统的性能情况，也只能战战兢兢地回答老板，有可能大概没问题吧。</p><p>所以，要不要做性能调优，这个问题其实很好回答。所有的系统在开发完之后，多多少少都会有性能问题，我们首先要做的就是想办法把问题暴露出来，例如进行压力测试、模拟可能的操作场景等等，再通过性能调优去解决这些问题。</p><!-- [[[read_end]]] --><p>比如，当你在用某一款 App 查询某一条信息时，需要等待十几秒钟；在抢购活动中，无法进入活动页面等等。你看，系统响应就是体现系统性能最直接的一个参考因素。</p><p>那如果系统在线上没有出现响应问题，我们是不是就不用去做性能优化了呢？再给你讲一个故事吧。</p><p>曾经我的前前东家系统研发部门来了一位大神，为什么叫他大神，因为在他来公司的一年时间里，他只做了一件事情，就是把服务器的数量缩减到了原来的一半，系统的性能指标，反而还提升了。</p><p><span class=\"orange\">好的系统性能调优不仅仅可以提高系统的性能，还能为公司节省资源。</span>这也是我们做性能调优的最直接的目的。</p><h2>什么时候开始介入调优？</h2><p>解决了为什么要做性能优化的问题，那么新的问题就来了：如果需要对系统做一次全面的性能监测和优化，我们从什么时候开始介入性能调优呢？是不是越早介入越好？</p><p>其实，在项目开发的初期，我们没有必要过于在意性能优化，这样反而会让我们疲于性能优化，不仅不会给系统性能带来提升，还会影响到开发进度，甚至获得相反的效果，给系统带来新的问题。</p><p>我们只需要在代码层面保证有效的编码，比如，减少磁盘 I/O 操作、降低竞争锁的使用以及使用高效的算法等等。遇到比较复杂的业务，我们可以充分利用设计模式来优化业务代码。例如，设计商品价格的时候，往往会有很多折扣活动、红包活动，我们可以用装饰模式去设计这个业务。</p><p>在系统编码完成之后，我们就可以对系统进行性能测试了。这时候，产品经理一般会提供线上预期数据，我们在提供的参考平台上进行压测，通过性能分析、统计工具来统计各项性能指标，看是否在预期范围之内。</p><p>在项目成功上线后，我们还需要根据线上的实际情况，依照日志监控以及性能统计日志，来观测系统性能问题，一旦发现问题，就要对日志进行分析并及时修复问题。</p><h2>有哪些参考因素可以体现系统的性能？</h2><p>上面我们讲到了在项目研发的各个阶段性能调优是如何介入的，其中多次讲到了性能指标，那么性能指标到底有哪些呢？</p><p>在我们了解性能指标之前，我们先来了解下哪些计算机资源会成为系统的性能瓶颈。</p><p><strong>CPU</strong>：有的应用需要大量计算，他们会长时间、不间断地占用 CPU 资源，导致其他资源无法争夺到 CPU 而响应缓慢，从而带来系统性能问题。例如，代码递归导致的无限循环，正则表达式引起的回溯，JVM频繁的 FULL GC，以及多线程编程造成的大量上下文切换等，这些都有可能导致 CPU 资源繁忙。</p><p><strong>内存</strong>：Java 程序一般通过 JVM 对内存进行分配管理，主要是用 JVM 中的堆内存来存储 Java 创建的对象。系统堆内存的读写速度非常快，所以基本不存在读写性能瓶颈。但是由于内存成本要比磁盘高，相比磁盘，内存的存储空间又非常有限。所以当内存空间被占满，对象无法回收时，就会导致内存溢出、内存泄露等问题。</p><p><strong>磁盘I/O</strong>：磁盘相比内存来说，存储空间要大很多，但磁盘 I/O 读写的速度要比内存慢，虽然目前引入的 SSD 固态硬盘已经有所优化，但仍然无法与内存的读写速度相提并论。</p><p><strong>网络</strong>：网络对于系统性能来说，也起着至关重要的作用。如果你购买过云服务，一定经历过，选择网络带宽大小这一环节。带宽过低的话，对于传输数据比较大，或者是并发量比较大的系统，网络就很容易成为性能瓶颈。</p><p><strong>异常</strong>：Java 应用中，抛出异常需要构建异常栈，对异常进行捕获和处理，这个过程非常消耗系统性能。如果在高并发的情况下引发异常，持续地进行异常处理，那么系统的性能就会明显地受到影响。</p><p><strong>数据库</strong>：大部分系统都会用到数据库，而数据库的操作往往是涉及到磁盘 I/O 的读写。大量的数据库读写操作，会导致磁盘 I/O 性能瓶颈，进而导致数据库操作的延迟性。对于有大量数据库读写操作的系统来说，数据库的性能优化是整个系统的核心。</p><p><strong>锁竞争</strong>：在并发编程中，我们经常会需要多个线程，共享读写操作同一个资源，这个时候为了保持数据的原子性（即保证这个共享资源在一个线程写的时候，不被另一个线程修改），我们就会用到锁。锁的使用可能会带来上下文切换，从而给系统带来性能开销。JDK1.6 之后，Java 为了降低锁竞争带来的上下文切换，对 JVM 内部锁已经做了多次优化，例如，新增了偏向锁、自旋锁、轻量级锁、锁粗化、锁消除等。而如何合理地使用锁资源，优化锁资源，就需要你了解更多的操作系统知识、Java 多线程编程基础，积累项目经验，并结合实际场景去处理相关问题。</p><p>了解了上面这些基本内容，我们可以得到下面几个指标，来衡量一般系统的性能。</p><h3>响应时间</h3><p>响应时间是衡量系统性能的重要指标之一，响应时间越短，性能越好，一般一个接口的响应时间是在毫秒级。在系统中，我们可以把响应时间自下而上细分为以下几种：</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/f7/7b9946fd1a3512ded6d2ab0e563870f7.jpg?wh=1942*865\" alt=\"\"></p><ul>\n<li>数据库响应时间：数据库操作所消耗的时间，往往是整个请求链中最耗时的；</li>\n<li>服务端响应时间：服务端包括 Nginx 分发的请求所消耗的时间以及服务端程序执行所消耗的时间；</li>\n<li>网络响应时间：这是网络传输时，网络硬件需要对传输的请求进行解析等操作所消耗的时间；</li>\n<li>客户端响应时间：对于普通的 Web、App 客户端来说，消耗时间是可以忽略不计的，但如果你的客户端嵌入了大量的逻辑处理，消耗的时间就有可能变长，从而成为系统的瓶颈。</li>\n</ul><h3>吞吐量</h3><p>在测试中，我们往往会比较注重系统接口的 TPS（每秒事务处理量），因为 TPS 体现了接口的性能，TPS 越大，性能越好。在系统中，我们也可以把吞吐量自下而上地分为两种：磁盘吞吐量和网络吞吐量。</p><p>我们先来看<strong>磁盘吞吐量</strong>，磁盘性能有两个关键衡量指标。</p><p>一种是 IOPS（Input/Output Per Second），即每秒的输入输出量（或读写次数），这种是指单位时间内系统能处理的 I/O 请求数量，I/O 请求通常为读或写数据操作请求，关注的是随机读写性能。适应于随机读写频繁的应用，如小文件存储（图片）、OLTP 数据库、邮件服务器。</p><p>另一种是数据吞吐量，这种是指单位时间内可以成功传输的数据量。对于大量顺序读写频繁的应用，传输大量连续数据，例如，电视台的视频编辑、视频点播 VOD（Video On Demand），数据吞吐量则是关键衡量指标。</p><p>接下来看<strong>网络吞吐量</strong>，这个是指网络传输时没有帧丢失的情况下，设备能够接受的最大数据速率。网络吞吐量不仅仅跟带宽有关系，还跟 CPU 的处理能力、网卡、防火墙、外部接口以及 I/O 等紧密关联。而吞吐量的大小主要由网卡的处理能力、内部程序算法以及带宽大小决定。</p><h3>计算机资源分配使用率</h3><p>通常由 CPU 占用率、内存使用率、磁盘 I/O、网络 I/O 来表示资源使用率。这几个参数好比一个木桶，如果其中任何一块木板出现短板，任何一项分配不合理，对整个系统性能的影响都是毁灭性的。</p><h3>负载承受能力</h3><p>当系统压力上升时，你可以观察，系统响应时间的上升曲线是否平缓。这项指标能直观地反馈给你，系统所能承受的负载压力极限。例如，当你对系统进行压测时，系统的响应时间会随着系统并发数的增加而延长，直到系统无法处理这么多请求，抛出大量错误时，就到了极限。</p><h2>总结</h2><p>通过今天的学习，我们知道性能调优可以使系统稳定，用户体验更佳，甚至在比较大的系统中，还能帮公司节约资源。</p><p>但是在项目的开始阶段，我们没有必要过早地介入性能优化，只需在编码的时候保证其优秀、高效，以及良好的程序设计。</p><p>在完成项目后，我们就可以进行系统测试了，我们可以将以下性能指标，作为性能调优的标准，响应时间、吞吐量、计算机资源分配使用率、负载承受能力。</p><p>回顾我自己的项目经验，有电商系统、支付系统以及游戏充值计费系统，用户级都是千万级别，且要承受各种大型抢购活动，所以我对系统的性能要求非常苛刻。除了通过观察以上指标来确定系统性能的好坏，还需要在更新迭代中，充分保障系统的稳定性。</p><p>这里，<strong>给你延伸一个方法，</strong>就是将迭代之前版本的系统性能指标作为参考标准，通过自动化性能测试，校验迭代发版之后的系统性能是否出现异常，这里就不仅仅是比较吞吐量、响应时间、负载能力等直接指标了，还需要比较系统资源的 CPU 占用率、内存使用率、磁盘 I/O、网络 I/O 等几项间接指标的变化。</p><h2>思考题</h2><p>除了以上这些常见的性能参考指标，你是否还能想到其他可以衡量系统性能的指标呢？</p><p>期待在留言区看到你的见解。也欢迎你点击“请朋友读”，把今天的内容分享给身边的朋友，邀请他一起讨论。</p><p></p>","neighbors":{"left":{"article_title":"开篇词 | 怎样才能做好性能调优？","id":96263},"right":{"article_title":"02 | 如何制定性能调优策略？","id":96908}},"comments":[{"had_liked":false,"id":96271,"user_name":"杨军","can_delete":false,"product_type":"c1","uid":1191730,"ip_address":"","ucode":"43C1636CF69A9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/2f/32/db8e5674.jpg","comment_is_top":false,"comment_ctime":1558370510,"is_pvip":false,"replies":[{"id":"34546","content":"杨军你好，系统负载代表单位时间内正在运行或等待的进程或线程数，代表了系统的繁忙程度，CPU利用率则代表单位时间内一个线程或进程实时占用CPU的百分比。我们知道，一个进程或者线程在运行时，未必都在实时的利用CPU的。<br><br>比如，在CPU密集型的情况下，系统的负载未必会高，但CPU的利用率肯定会高，一个线程&#47;进程一直在计算，它对CPU的实时利用率是100%，而系统负载是0.1; <br><br>又比如，而对于I&#47;O密集型的程序来说，有可能CPU的利用率不高，但系统的负载却会非常高，这是因为I&#47;O经常引起阻塞，这样导致很多线程&#47;进程被处于阻塞等待状态，处于等待的线程或进程也是属于负载线程&#47;进程的。<br><br>通过以上两个例子，不知道有没有让你分清楚两个指标的区别，有问题保持沟通。","user_name":"作者回复","comment_id":96271,"uid":"1228576","ip_address":"","utype":1,"ctime":1558432599,"user_name_real":"Geek_1330fe"}],"discussion_count":4,"race_medal":0,"score":"688753137870","product_id":100028001,"comment_content":"首先很高兴终于有人开Java性能优化的课程，我在工作中需要接触很多这方面的工作，希望通过学习这次课程能带来更多收获。<br>然后我想请教老师一个问题，CPU利用率和系统负载这两个指标之间是什么关系？网上很多资料讲的不清不楚，看不明白。<br>","like_count":161,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450804,"discussion_content":"杨军你好，系统负载代表单位时间内正在运行或等待的进程或线程数，代表了系统的繁忙程度，CPU利用率则代表单位时间内一个线程或进程实时占用CPU的百分比。我们知道，一个进程或者线程在运行时，未必都在实时的利用CPU的。\n\n比如，在CPU密集型的情况下，系统的负载未必会高，但CPU的利用率肯定会高，一个线程/进程一直在计算，它对CPU的实时利用率是100%，而系统负载是0.1; \n\n又比如，而对于I/O密集型的程序来说，有可能CPU的利用率不高，但系统的负载却会非常高，这是因为I/O经常引起阻塞，这样导致很多线程/进程被处于阻塞等待状态，处于等待的线程或进程也是属于负载线程/进程的。\n\n通过以上两个例子，不知道有没有让你分清楚两个指标的区别，有问题保持沟通。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1558432599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1092637,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ac/1d/c695f03e.jpg","nickname":"武兴业","note":"","ucode":"9091C8B76AD2F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290565,"discussion_content":"老师请教一下，为何一直在计算cpu load是0.1，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594533890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1440772,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fc/04/d83a555e.jpg","nickname":"Kevin⚡️Zhou","note":"","ucode":"C0FC2673705212","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251694,"discussion_content":"系统负载应该是1吧, 如果一个进程一直在计算?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588103932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1849024,"avatar":"","nickname":"杨文圣","note":"","ucode":"B5E9883D377A48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228724,"discussion_content":"老师讲的非常好，而且基本每条评论都在认真作答分析，必须点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586571948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96579,"user_name":"遇见阳光","can_delete":false,"product_type":"c1","uid":1203576,"ip_address":"","ucode":"378E5D37B3CD0E","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/78/f011d586.jpg","comment_is_top":false,"comment_ctime":1558451834,"is_pvip":false,"replies":[{"id":"34601","content":"遇见阳光 你好，TPS(transaction per second)是单位时间内处理事务的数量，QPS(query per second)是单位时间内请求的数量。TPS代表一个事务的处理，可以包含了多次请求。很多公司用QPS作为接口吞吐量的指标，也有很多公司使用TPS作为标准，两者都能表现出系统的吞吐量的大小，TPS的一次事务代表一次用户操作到服务器返回结果，QPS的一次请求代表一个接口的一次请求到服务器返回结果。当一次用户操作只包含一个请求接口时，TPS和QPS没有区别。当用户的一次操作包含了多个服务请求时，这个时候TPS作为这次用户操作的性能指标就更具有代表性了。","user_name":"作者回复","comment_id":96579,"uid":"1228576","ip_address":"","utype":1,"ctime":1558488381,"user_name_real":"Geek_1330fe"}],"discussion_count":2,"race_medal":0,"score":"297911195258","product_id":100028001,"comment_content":"老师，tps qps这块还是有点不太清楚。","like_count":70,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450924,"discussion_content":"遇见阳光 你好，TPS(transaction per second)是单位时间内处理事务的数量，QPS(query per second)是单位时间内请求的数量。TPS代表一个事务的处理，可以包含了多次请求。很多公司用QPS作为接口吞吐量的指标，也有很多公司使用TPS作为标准，两者都能表现出系统的吞吐量的大小，TPS的一次事务代表一次用户操作到服务器返回结果，QPS的一次请求代表一个接口的一次请求到服务器返回结果。当一次用户操作只包含一个请求接口时，TPS和QPS没有区别。当用户的一次操作包含了多个服务请求时，这个时候TPS作为这次用户操作的性能指标就更具有代表性了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1558488381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":124771,"discussion_content":"老师上面的这段话是不是这样理解的：QPS 针对的接口的调用， TPS 针对的是用户的某次操作？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578450283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100756,"user_name":"kaixiao7","can_delete":false,"product_type":"c1","uid":1242577,"ip_address":"","ucode":"505EC4AFB5E656","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/d1/cc6f82eb.jpg","comment_is_top":false,"comment_ctime":1559633142,"is_pvip":false,"replies":[{"id":"36411","content":"可以自己实现自定义异常，继承RuntimeException，然后将writableStackTrace设置为false。<br><br>以下是RuntimeException的构造函数：<br><br>protected RuntimeException(String message, Throwable cause,<br>                               boolean enableSuppression,<br>                               boolean writableStackTrace) {<br>        super(message, cause, enableSuppression, writableStackTrace);<br>    }","user_name":"作者回复","comment_id":100756,"uid":"1228576","ip_address":"","utype":1,"ctime":1559698895,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"224897932534","product_id":100028001,"comment_content":"老师，关于JVM的异常问题，您在@陆离的回答中说&quot;平时的业务异常避免生成栈追踪信息，在异常中用字符串描述业务异常信息即可&quot;，我通过throw new Exception(&quot;aaa&quot;)，debug时发现还是会调用fillInStackTrace()方法。我是不是理解错了呢？具体该怎么做？感谢","like_count":53,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452666,"discussion_content":"可以自己实现自定义异常，继承RuntimeException，然后将writableStackTrace设置为false。\n\n以下是RuntimeException的构造函数：\n\nprotected RuntimeException(String message, Throwable cause,\n                               boolean enableSuppression,\n                               boolean writableStackTrace) {\n        super(message, cause, enableSuppression, writableStackTrace);\n    }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559698895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99929,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1211320,"ip_address":"","ucode":"D28CC11C99F0CE","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/b8/6f47ba1b.jpg","comment_is_top":false,"comment_ctime":1559360208,"is_pvip":false,"replies":[{"id":"35976","content":"可以通过tcpdump抓包看看连接状态，分析是否是服务端的FIN packet没有发出去。<br><br>正常的关闭流程是：服务端在接收到客户端发送的关闭请求FIN后，会进入CLOSE_WAIT状态，同时发送ACK回去。在完成与客户端直接的通信操作之后，再向客户端发送FIN，进入LAST_ACK状态。<br><br>如果连接是CLOSE_WAIT状态，而不是LAST_ACK状态，说明还没有发FIN给Client，那么可能是在关闭连接之前还有许多数据要发送或者其他事要做，导致没有发这个FIN packet。<br><br>建议确定关闭请求的四次握手，哪个环节出了问题，再去排查业务代码，可能是由于超时或者异常导致没有正常关闭连接。<br><br>","user_name":"作者回复","comment_id":99929,"uid":"1228576","ip_address":"","utype":1,"ctime":1559452490,"user_name_real":"刘超"}],"discussion_count":4,"race_medal":0,"score":"143293280976","product_id":100028001,"comment_content":"请问老师最近段时间遇到端口被CLOSE_WAIT占用，重启后过了半天又重现，以前没有出现过，一般如何排查","like_count":34,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452329,"discussion_content":"可以通过tcpdump抓包看看连接状态，分析是否是服务端的FIN packet没有发出去。\n\n正常的关闭流程是：服务端在接收到客户端发送的关闭请求FIN后，会进入CLOSE_WAIT状态，同时发送ACK回去。在完成与客户端直接的通信操作之后，再向客户端发送FIN，进入LAST_ACK状态。\n\n如果连接是CLOSE_WAIT状态，而不是LAST_ACK状态，说明还没有发FIN给Client，那么可能是在关闭连接之前还有许多数据要发送或者其他事要做，导致没有发这个FIN packet。\n\n建议确定关闭请求的四次握手，哪个环节出了问题，再去排查业务代码，可能是由于超时或者异常导致没有正常关闭连接。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559452490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027174,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ac/66/ffa6013c.jpg","nickname":"我要去远行","note":"","ucode":"8DE9870BB4E0C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155438,"discussion_content":"这个问题我最近也遇到过，起因是因为开启了http长连接 keepAlive。 关闭长连接的话，close_wait明显下降。\n原因可能是你这边的服务设置超时时间过短，你这边已经主动关闭，但是上游还未超时没有发送FIN包。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1580227765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1568448,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJWZyym9hkz3ic6xGo84ZibObUofUSfve9CdhbXq21DFoVyMWaUaq4vQwlpgZCOE4QUCzjKKO6bB88g/132","nickname":"Geek001","note":"","ucode":"1C4D9FF4294AFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293362,"discussion_content":"客户端关闭了，服务端未关闭连接。通常可能是响应慢导致，或者请求关闭太快","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595510614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569838,"discussion_content":"🚩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651569984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96215,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1558358811,"is_pvip":false,"replies":[{"id":"34449","content":"晚上好 QQ怪，你说的很对。我们平时在使用AB进行压测时，会有一个failed requests指标，本身接口没有异常的情况下，压测出现了异常，也是说明这个接口有性能问题。还有就是percentage of the requests served within a certain time这个指标，这个指标对金融交易系统来说是非常重要的，如果有99%的请求是1ms返回，但有1%是500ms返回，这对于某些对交易时间要求极致的金融系统来说也是性能问题。感谢你的回答，期望我的回答能让你满意！","user_name":"作者回复","comment_id":96215,"uid":"1228576","ip_address":"","utype":1,"ctime":1558360600,"user_name_real":"Geek_1330fe"}],"discussion_count":2,"race_medal":0,"score":"117522475803","product_id":100028001,"comment_content":"我觉得还有接口返回200的成功率吧","like_count":28,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450775,"discussion_content":"晚上好 QQ怪，你说的很对。我们平时在使用AB进行压测时，会有一个failed requests指标，本身接口没有异常的情况下，压测出现了异常，也是说明这个接口有性能问题。还有就是percentage of the requests served within a certain time这个指标，这个指标对金融交易系统来说是非常重要的，如果有99%的请求是1ms返回，但有1%是500ms返回，这对于某些对交易时间要求极致的金融系统来说也是性能问题。感谢你的回答，期望我的回答能让你满意！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1558360600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1029549,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b5/ad/381c57be.jpg","nickname":"李俊超","note":"","ucode":"C70D72BA6E92F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289235,"discussion_content":"Percentage of the requests served within a certain time(ms)\n这个数据用于描述每个请求处理时间的分布情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594036303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96247,"user_name":"天持","can_delete":false,"product_type":"c1","uid":1179388,"ip_address":"","ucode":"85B3578D691852","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/fc/102a5645.jpg","comment_is_top":false,"comment_ctime":1558364052,"is_pvip":false,"replies":[{"id":"34487","content":"你好 天持，机器的cpu高是不是我们服务进程导致的呢，可以使用top命令查看各个进程的cpu使用率，如果是我们服务进程导致的，可以再通过系统命令top -H -p 进程ID 查看具体线程的cpu使用率，如果确定某个线程的cpu使用率异常，可以使用jstack系统命令导出系统日志进行分析。这是帮我们确定是不是服务性能问题，不过按照我的经验，10%的高出，比较难排查出具体的问题，线程的cpu使用率不断在变化，我们很难区分到底哪个线程使用cpu异常。<br><br>如果确定是我们代码问题，我们也可以使用排除法进行分析，将你怀疑可能产生问题的代码注释掉，一个一个排除，这也是最笨的方法，但有时候找不到问题的时候就很受用。<br><br>如果不是代码问题，还有就是服务器的配置问题，不同的服务器配置，系统资源使用率也会不一样。","user_name":"作者回复","comment_id":96247,"uid":"1228576","ip_address":"","utype":1,"ctime":1558401856,"user_name_real":"Geek_1330fe"}],"discussion_count":1,"race_medal":0,"score":"113227513748","product_id":100028001,"comment_content":"今天查个问题，发现有台机器cpu使用率，明显比其他机器高了10%左右，其他指标也没发现问题，不懂呀，好好学习","like_count":27,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450791,"discussion_content":"你好 天持，机器的cpu高是不是我们服务进程导致的呢，可以使用top命令查看各个进程的cpu使用率，如果是我们服务进程导致的，可以再通过系统命令top -H -p 进程ID 查看具体线程的cpu使用率，如果确定某个线程的cpu使用率异常，可以使用jstack系统命令导出系统日志进行分析。这是帮我们确定是不是服务性能问题，不过按照我的经验，10%的高出，比较难排查出具体的问题，线程的cpu使用率不断在变化，我们很难区分到底哪个线程使用cpu异常。\n\n如果确定是我们代码问题，我们也可以使用排除法进行分析，将你怀疑可能产生问题的代码注释掉，一个一个排除，这也是最笨的方法，但有时候找不到问题的时候就很受用。\n\n如果不是代码问题，还有就是服务器的配置问题，不同的服务器配置，系统资源使用率也会不一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558401856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195245,"user_name":"大树","can_delete":false,"product_type":"c1","uid":1665402,"ip_address":"","ucode":"B19420E1F0FF1C","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/7a/76bf4c79.jpg","comment_is_top":false,"comment_ctime":1585149679,"is_pvip":false,"replies":[{"id":"75251","content":"创建异常对象时会调用父类Throwable的fillInStackTrace()方法生成栈追踪信息，也就是调用native的fillInStackTrace()方法去爬取线程堆栈信息，为运行时栈做一份快照，正是这一部分开销很大","user_name":"作者回复","comment_id":195245,"uid":"1228576","ip_address":"","utype":1,"ctime":1585743146,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"104664364783","product_id":100028001,"comment_content":"抛出异常需要构建异常栈，对异常进行捕获和处理，这个过程比较消耗系统的性能，怎么理解？为什么这个过程就消耗性能？消耗什么性能呢？CPU？内存？","like_count":25,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489007,"discussion_content":"创建异常对象时会调用父类Throwable的fillInStackTrace()方法生成栈追踪信息，也就是调用native的fillInStackTrace()方法去爬取线程堆栈信息，为运行时栈做一份快照，正是这一部分开销很大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585743146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96213,"user_name":"Phoenix","can_delete":false,"product_type":"c1","uid":1005368,"ip_address":"","ucode":"C51BE4C948755B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/38/ba6a106f.jpg","comment_is_top":false,"comment_ctime":1558358222,"is_pvip":false,"replies":[{"id":"34465","content":"你好 Phoenix，切忌在主库中操作这种报表类的导出，在写入和查询都在一个主库进行，会造成数据库性能瓶颈，严重的会导致数据库死锁。我们可以将数据库读写分离，写业务走主(写)库，导出数据可以从从(读)库导出。这种实现方式，首先能提高数据导出的性能，其次不影响写业务。<br><br>如果你们公司有大数据中心，可以考虑将需要导出的数据实时同步到大数据中心，通过实时的流计算处理生成不同需求的业务数据。<br><br>希望以上的回答能让你满意，如果有问题保持沟通！","user_name":"作者回复","comment_id":96213,"uid":"1228576","ip_address":"","utype":1,"ctime":1558363267,"user_name_real":"Geek_1330fe"}],"discussion_count":1,"race_medal":0,"score":"96047638734","product_id":100028001,"comment_content":"想请教下老师，使用MySQL经常会遇到业务需要实时导出大量业务数据的需求，那么如何在不影响业务和不分库的的情况满足业务实时导出大量数据的需求呢？","like_count":23,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450774,"discussion_content":"你好 Phoenix，切忌在主库中操作这种报表类的导出，在写入和查询都在一个主库进行，会造成数据库性能瓶颈，严重的会导致数据库死锁。我们可以将数据库读写分离，写业务走主(写)库，导出数据可以从从(读)库导出。这种实现方式，首先能提高数据导出的性能，其次不影响写业务。\n\n如果你们公司有大数据中心，可以考虑将需要导出的数据实时同步到大数据中心，通过实时的流计算处理生成不同需求的业务数据。\n\n希望以上的回答能让你满意，如果有问题保持沟通！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1558363267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97956,"user_name":"诸葛","can_delete":false,"product_type":"c1","uid":1215321,"ip_address":"","ucode":"F602CD90E1C4DB","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/59/5768aa99.jpg","comment_is_top":false,"comment_ctime":1558853013,"is_pvip":false,"replies":[{"id":"35037","content":"如果没有生成堆栈追踪信息，不会有性能问题。一般业务异常避免生成堆栈追踪信息，我们知道这个异常是什么原因，所以直接返回字符串就好了。而系统异常，一般都会生成堆栈追踪信息，以便追踪源头，更好的排查问题。","user_name":"作者回复","comment_id":97956,"uid":"1228576","ip_address":"","utype":1,"ctime":1558870092,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"78868264341","product_id":100028001,"comment_content":"异常：Java 应用中，抛出异常需要构建异常栈，对异常进行捕获和处理，这个过程非常消耗系统性能。如果在高并发的情况下引发异常，持续地进行异常处理，那么系统的性能就会明显地受到影响。<br>老师好，高并发调用方法之后第一步就是检验一堆入参，如果入参有问题立即抛出异常给前端，不再处理下边的逻辑了，这样有问题吗？我看系统性能还可以啊。压力测试也还行。如果有问题的话那应该怎么做呢，检验错误后给前端放回code码然后返回空对象吗？感谢","like_count":19,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451489,"discussion_content":"如果没有生成堆栈追踪信息，不会有性能问题。一般业务异常避免生成堆栈追踪信息，我们知道这个异常是什么原因，所以直接返回字符串就好了。而系统异常，一般都会生成堆栈追踪信息，以便追踪源头，更好的排查问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558870092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96447,"user_name":"Mr. Huang","can_delete":false,"product_type":"c1","uid":1118720,"ip_address":"","ucode":"C985A0E115CACF","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/00/ba8d3d0f.jpg","comment_is_top":false,"comment_ctime":1558426086,"is_pvip":true,"replies":[{"id":"34549","content":"你好Mr.Huang，比较常用的压力测试工具有AB，这是一个Linux系统工具，使用起来很简便，还有jmeter工具，可以在Windows环境下运行使用，个人比较习惯使用AB。","user_name":"作者回复","comment_id":96447,"uid":"1228576","ip_address":"","utype":1,"ctime":1558433127,"user_name_real":"Geek_1330fe"}],"discussion_count":1,"race_medal":0,"score":"53098033638","product_id":100028001,"comment_content":"老师您好，请问您提到的那几个响应时间测试，有没有比较好的工具推荐","like_count":13,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450883,"discussion_content":"你好Mr.Huang，比较常用的压力测试工具有AB，这是一个Linux系统工具，使用起来很简便，还有jmeter工具，可以在Windows环境下运行使用，个人比较习惯使用AB。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558433127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96204,"user_name":"Seal","can_delete":false,"product_type":"c1","uid":1025328,"ip_address":"","ucode":"EF19500E0E7D0F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/30/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1558357342,"is_pvip":false,"replies":[{"id":"34445","content":"你好 Seal，你的描述很准确，QPS&#47;TPS这两个性能指标非常相似，都是描述吞吐量的性能指标，QPS特指的一次查询请求，TPS是指每次处理事务请求，TPS包括了QPS，例如一个事务处理可能包括多个查询请求。","user_name":"作者回复","comment_id":96204,"uid":"1228576","ip_address":"","utype":1,"ctime":1558359399,"user_name_real":"Geek_1330fe"}],"discussion_count":1,"race_medal":0,"score":"44508030302","product_id":100028001,"comment_content":"我经常关注的一个性能指标还有QPS（每秒请求数），它体现了服务端对接口的处理能力。在响应时间一定的情况下，QPS越大，性能越高! 每个应用服务都有自己最大的QPS值，当QPS达到最大时，再持续加压，将会出现响应时间变长，QPS下降，内存或CPU升高等现象!","like_count":10,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450768,"discussion_content":"你好 Seal，你的描述很准确，QPS/TPS这两个性能指标非常相似，都是描述吞吐量的性能指标，QPS特指的一次查询请求，TPS是指每次处理事务请求，TPS包括了QPS，例如一个事务处理可能包括多个查询请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558359399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96387,"user_name":"业余草","can_delete":false,"product_type":"c1","uid":1126538,"ip_address":"","ucode":"99BDC1E629049D","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","comment_is_top":false,"comment_ctime":1558407450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31623178522","product_id":100028001,"comment_content":"优化，首先是你要知道它是什么，用了什么原理，才能更深入的去做好优化。其实最重要的优化，是优化自己的编程思想。首先要排除的是，每个需求，不是功能做完了就做好了。我们要做的是把知识变成钱，而不是把劳动力变成钱，😊","like_count":7},{"had_liked":false,"id":96887,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1558530114,"is_pvip":false,"replies":[{"id":"34691","content":"行者你好，你想到的很好，我们在做性能测试的时候有一个percentage of the requests served within a certain time指标，就是反应单位时间内，不同响应时间的占比率，例如50% 的响应时间是1ms以内，80%的响应时间是2ms以内，99%的响应时间是5ms以内。说明有19%是在2ms~5ms以内，如果这个范围太大，有可能存在性能问题，具体问题具体分析。<br><br>上述我说的这个参数应该就是你现在描述的性能指标，有问题保持沟通。","user_name":"作者回复","comment_id":96887,"uid":"1228576","ip_address":"","utype":1,"ctime":1558576508,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"27328333890","product_id":100028001,"comment_content":"老师，我想到服务器响应时间可以进一步细分到服务器中位数响应时间，服务器最慢的响应时间；要尽可能让所有接口响应时间接近，避免长尾。","like_count":7,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451047,"discussion_content":"行者你好，你想到的很好，我们在做性能测试的时候有一个percentage of the requests served within a certain time指标，就是反应单位时间内，不同响应时间的占比率，例如50% 的响应时间是1ms以内，80%的响应时间是2ms以内，99%的响应时间是5ms以内。说明有19%是在2ms~5ms以内，如果这个范围太大，有可能存在性能问题，具体问题具体分析。\n\n上述我说的这个参数应该就是你现在描述的性能指标，有问题保持沟通。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558576508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96761,"user_name":"打码程序媛(^ρ^)&#47;","can_delete":false,"product_type":"c1","uid":1216362,"ip_address":"","ucode":"800182E05B1ED9","user_header":"https://static001.geekbang.org/account/avatar/00/12/8f/6a/b3b0c35e.jpg","comment_is_top":false,"comment_ctime":1558499791,"is_pvip":false,"replies":[{"id":"34641","content":"你好 打码程序媛，其实压力测试也是性能测试的一部分。压力测试用于测试系统的稳定性以及系统的负载能力，强调的是系统在极限环境下的恢复能力以及极限环境下的最大负载，所以压力测试的指标包括最大吞吐量、响应时间、异常数量以及系统的在极限环境下资源使用率的恢复能力。性能测试除了需要这些极限环境下的性能指标，也需要规划范围内的测试结果，包括了吞吐量、响应时间、异常率以及系统资源使用率等。希望我的回答能解答你的疑惑。","user_name":"作者回复","comment_id":96761,"uid":"1228576","ip_address":"","utype":1,"ctime":1558522350,"user_name_real":"Geek_1330fe"}],"discussion_count":1,"race_medal":0,"score":"23033336271","product_id":100028001,"comment_content":"老师您好，我看您没有区分压测和性能测试，想问问它们的指标都是一样的吗？有没有什么区别呢？","like_count":5,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451007,"discussion_content":"你好 打码程序媛，其实压力测试也是性能测试的一部分。压力测试用于测试系统的稳定性以及系统的负载能力，强调的是系统在极限环境下的恢复能力以及极限环境下的最大负载，所以压力测试的指标包括最大吞吐量、响应时间、异常数量以及系统的在极限环境下资源使用率的恢复能力。性能测试除了需要这些极限环境下的性能指标，也需要规划范围内的测试结果，包括了吞吐量、响应时间、异常率以及系统资源使用率等。希望我的回答能解答你的疑惑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558522350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101691,"user_name":"SlamDunk","can_delete":false,"product_type":"c1","uid":1103460,"ip_address":"","ucode":"ED55AB509B4059","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/64/75f772dc.jpg","comment_is_top":false,"comment_ctime":1559916715,"is_pvip":false,"replies":[{"id":"36653","content":"偶尔一两次异常情况是不会影响系统的性能，但在峰值出现大量请求异常，会影响到系统性能。<br><br>建议查看下是否重写了业务的异常。我们一般在定义业务异常时可以自己实现自定义异常，继承RuntimeException，然后将writableStackTrace设置为false。<br><br><br><br>以下是RuntimeException的构造函数：<br><br>protected RuntimeException(String message, Throwable cause,<br>                               boolean enableSuppression,<br>                               boolean writableStackTrace) {<br>        super(message, cause, enableSuppression, writableStackTrace);<br>    }","user_name":"作者回复","comment_id":101691,"uid":"1228576","ip_address":"","utype":1,"ctime":1559957479,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"18739785899","product_id":100028001,"comment_content":"请问，我们公司业务代码对异常的处理方式:先打印异常堆栈信息到日志文件，再返回错误码和业务错误信息给前端。这种做法对性能影响大吗?","like_count":4,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453072,"discussion_content":"偶尔一两次异常情况是不会影响系统的性能，但在峰值出现大量请求异常，会影响到系统性能。\n\n建议查看下是否重写了业务的异常。我们一般在定义业务异常时可以自己实现自定义异常，继承RuntimeException，然后将writableStackTrace设置为false。\n\n\n\n以下是RuntimeException的构造函数：\n\nprotected RuntimeException(String message, Throwable cause,\n                               boolean enableSuppression,\n                               boolean writableStackTrace) {\n        super(message, cause, enableSuppression, writableStackTrace);\n    }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559957479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99403,"user_name":"Teamillet","can_delete":false,"product_type":"c1","uid":1538903,"ip_address":"","ucode":"66B712805BD5A4","user_header":"https://static001.geekbang.org/account/avatar/00/17/7b/57/16b46235.jpg","comment_is_top":false,"comment_ctime":1559207897,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14444109785","product_id":100028001,"comment_content":"编译原理还好没忘记，少用正则……","like_count":3},{"had_liked":false,"id":97240,"user_name":"陆离","can_delete":false,"product_type":"c1","uid":1483932,"ip_address":"","ucode":"2C8C206CE36A81","user_header":"https://static001.geekbang.org/account/avatar/00/16/a4/9c/b32ed9e9.jpg","comment_is_top":false,"comment_ctime":1558617162,"is_pvip":false,"replies":[{"id":"34755","content":"陆离 你好，请问是在问“Java异常影响系统性能”这个问题吗？Java创建异常对象时会调用父类Throwable的fillInStackTrace()方法生成栈追踪信息，同时这个方法使用了Synchronized关键字修饰，在高并发的情况下，如果是系统异常，将会生成栈追踪信息，是非常消耗时的。<br><br>平时的业务异常日志避免生成栈追踪信息，在异常中用字符串描述具体的业务异常信息极客，这样可以提升系统并发时异常情况多时的性能。","user_name":"作者回复","comment_id":97240,"uid":"1228576","ip_address":"","utype":1,"ctime":1558621735,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"14443519050","product_id":100028001,"comment_content":"老师你好，我想问一下那个jvm异常的问题，这个在高并发的情况下出现异常是怎么影响到系统性能的呢","like_count":3,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451187,"discussion_content":"陆离 你好，请问是在问“Java异常影响系统性能”这个问题吗？Java创建异常对象时会调用父类Throwable的fillInStackTrace()方法生成栈追踪信息，同时这个方法使用了Synchronized关键字修饰，在高并发的情况下，如果是系统异常，将会生成栈追踪信息，是非常消耗时的。\n\n平时的业务异常日志避免生成栈追踪信息，在异常中用字符串描述具体的业务异常信息极客，这样可以提升系统并发时异常情况多时的性能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558621735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96223,"user_name":"我行我素","can_delete":false,"product_type":"c1","uid":1224678,"ip_address":"","ucode":"4C69542FAB0671","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","comment_is_top":false,"comment_ctime":1558360031,"is_pvip":false,"replies":[{"id":"34480","content":"你好 我行我素，感谢你的回答。并发用户数代表系统同一时间处理事务的并发能力，也是体现系统性能的一个直接性能指标。当然，TPS也能间接的体现系统并发处理能力。","user_name":"作者回复","comment_id":96223,"uid":"1228576","ip_address":"","utype":1,"ctime":1558400015,"user_name_real":"Geek_1330fe"}],"discussion_count":1,"race_medal":0,"score":"14443261919","product_id":100028001,"comment_content":"并发用户数，高可用可扩展等方面","like_count":3,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450781,"discussion_content":"你好 我行我素，感谢你的回答。并发用户数代表系统同一时间处理事务的并发能力，也是体现系统性能的一个直接性能指标。当然，TPS也能间接的体现系统并发处理能力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558400015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96216,"user_name":"小辉辉","can_delete":false,"product_type":"c1","uid":1189661,"ip_address":"","ucode":"9FF25E25C85350","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/1d/1cb36854.jpg","comment_is_top":false,"comment_ctime":1558358831,"is_pvip":false,"replies":[{"id":"34463","content":"为你手动点赞👍🏻","user_name":"编辑回复","comment_id":96216,"uid":"1356014","ip_address":"","utype":2,"ctime":1558363074,"user_name_real":"王冬青"}],"discussion_count":1,"race_medal":0,"score":"14443260719","product_id":100028001,"comment_content":"现在的项目也是没有经过压测和调优的，上线也没多久，正好跟着老师的专栏来试着优化一下性能😁😁😁","like_count":3,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450776,"discussion_content":"为你手动点赞👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558363074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98451,"user_name":"Geek_af3d01","can_delete":false,"product_type":"c1","uid":1107401,"ip_address":"","ucode":"58C5FDD61C955E","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/c9/fa9199d0.jpg","comment_is_top":false,"comment_ctime":1559005815,"is_pvip":false,"replies":[{"id":"35229","content":"建议使用jmeter或者loadrunner，可以通过录制业务流程，生成jmeter脚本。近期我会讲到测试工具的使用。","user_name":"作者回复","comment_id":98451,"uid":"1228576","ip_address":"","utype":1,"ctime":1559009045,"user_name_real":"刘超"}],"discussion_count":1,"race_medal":0,"score":"10148940407","product_id":100028001,"comment_content":"老师 您好 我想请问个问题 您说的压测工具ab 我用过 但是我们现在想要模拟完整的项目流程去压测(直播项目) 您有什么好的建议么","like_count":3,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451693,"discussion_content":"建议使用jmeter或者loadrunner，可以通过录制业务流程，生成jmeter脚本。近期我会讲到测试工具的使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559009045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96915,"user_name":"ty_young","can_delete":false,"product_type":"c1","uid":1284337,"ip_address":"","ucode":"EB1D5DB0AE7B33","user_header":"","comment_is_top":false,"comment_ctime":1558535122,"is_pvip":false,"replies":[{"id":"34694","content":"这位同学，你好。我们这里描述的三种吞吐量，一个是应用服务的吞吐量，然后就是磁盘和网络吞吐量。上述描述不是在强调磁盘和网络吞吐量决定了应用服务的吞吐量的必然关系。在某些情况下，磁盘的吞吐量和网络的吞吐量会影响我们应用服务的吞吐量。而在磁盘性能以及网络带宽合理的情况下，两者对应用服务吞吐量的影响是最小的。<br><br>以上我的解释希望能帮你更好的理解，有问题保持沟通。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1558577047,"ip_address":"","comment_id":96915,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10148469714","product_id":100028001,"comment_content":"老师，TPS是应用处理的性能指标吧，然后由磁盘吞吐量和网络吞吐量所决定或者影响么","like_count":2,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451061,"discussion_content":"这位同学，你好。我们这里描述的三种吞吐量，一个是应用服务的吞吐量，然后就是磁盘和网络吞吐量。上述描述不是在强调磁盘和网络吞吐量决定了应用服务的吞吐量的必然关系。在某些情况下，磁盘的吞吐量和网络的吞吐量会影响我们应用服务的吞吐量。而在磁盘性能以及网络带宽合理的情况下，两者对应用服务吞吐量的影响是最小的。\n\n以上我的解释希望能帮你更好的理解，有问题保持沟通。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558577047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96607,"user_name":"Mr.J","can_delete":false,"product_type":"c1","uid":1267172,"ip_address":"","ucode":"372D8C614F6C3D","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/e4/7061abd5.jpg","comment_is_top":false,"comment_ctime":1558459584,"is_pvip":false,"replies":[{"id":"34598","content":"你好，在我看来Linux操作系统、JVM以及Java基础三者的学习并不会存在前后顺序，可以并行学习。对于Java初学者来说，建议可以一边了解Java的运行原理(JVM)一边学习Java基础知识，基础打好之后，我们可以进入高级篇，比如Java的并发编程，如果需要进行一些项目实践，我们可以学习Spring相关框架组件。Linux操作系统我们也可以在了解基础原理的前提下，先熟练掌握一些常用操作命令，再作深入学习。","user_name":"作者回复","user_name_real":"Geek_1330fe","uid":"1228576","ctime":1558486615,"ip_address":"","comment_id":96607,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10148394176","product_id":100028001,"comment_content":"老师您好，看到性能调优这块的指标内容，需要涉及到很多方面的知识，比如Linux操作，JVM虚拟机原理，Java源码基础知识等，这些东西对于一个刚接触后台开发的人来说，确实比较吃力，在学习本专栏课程的同时去学习这些东西，这些有优先级吗，哪些是需要先急需掌握一部分的","like_count":3,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450933,"discussion_content":"你好，在我看来Linux操作系统、JVM以及Java基础三者的学习并不会存在前后顺序，可以并行学习。对于Java初学者来说，建议可以一边了解Java的运行原理(JVM)一边学习Java基础知识，基础打好之后，我们可以进入高级篇，比如Java的并发编程，如果需要进行一些项目实践，我们可以学习Spring相关框架组件。Linux操作系统我们也可以在了解基础原理的前提下，先熟练掌握一些常用操作命令，再作深入学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558486615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96443,"user_name":"LW","can_delete":false,"product_type":"c1","uid":1325297,"ip_address":"","ucode":"89820332658E98","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/f1/996a070d.jpg","comment_is_top":false,"comment_ctime":1558425361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10148359953","product_id":100028001,"comment_content":"希望能接触到更多实战级的调优策略及思路，也希望老师能多多列举一些真实的案例。另外，估计好多同学都跟我一样，并没有经历过大数据量，高并发的业务场景，老师能不能带着我们这些没有接触过这类场景的同学，去模拟一下真实的线上环境的性能问题，并在这种性能问题下逐步优化，最终达到性能调休的目标。","like_count":2},{"had_liked":false,"id":96234,"user_name":"随遇而安","can_delete":false,"product_type":"c1","uid":1184542,"ip_address":"","ucode":"6D2D0FF9B434AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/1e/00f574c1.jpg","comment_is_top":false,"comment_ctime":1558361249,"is_pvip":false,"replies":[{"id":"34461","content":"坚持就会有收获，加油！","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1558362914,"ip_address":"","comment_id":96234,"utype":2}],"discussion_count":1,"race_medal":0,"score":"10148295841","product_id":100028001,"comment_content":"希望这次能学到真正的东西","like_count":2,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450786,"discussion_content":"坚持就会有收获，加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558362914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106986,"user_name":"李","can_delete":false,"product_type":"c1","uid":1396623,"ip_address":"","ucode":"426288EBB410C2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIfQFSpQJNKeqW5Q9PfciaLyDDFm9heqW5SHQCzlrajXO8f38RCH3BE5k8QHGPMictbbAM9IGvicj5EQ/132","comment_is_top":false,"comment_ctime":1561432374,"is_pvip":false,"replies":[{"id":"38850","content":"这个没有一个衡量标准，但CPU一直使用率爆满，得不到释放，肯定是不正常的了。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1561519369,"ip_address":"","comment_id":106986,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856399670","product_id":100028001,"comment_content":"老师你好,cpu使用率是多大才是比较合理的，例如并发高的情况下cpu使用率肯定高，多少并发对应多少cpu使用率才算是系统是正常的","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455314,"discussion_content":"这个没有一个衡量标准，但CPU一直使用率爆满，得不到释放，肯定是不正常的了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561519369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98683,"user_name":"Geek_ebda96","can_delete":false,"product_type":"c1","uid":1134862,"ip_address":"","ucode":"02912E6D95A5A6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoRiaKX0ulEibbbwM4xhjyMeza0Pyp7KO1mqvfJceiaM6ZNtGpXJibI6P2qHGwBP9GKwOt9LgHicHflBXw/132","comment_is_top":false,"comment_ctime":1559057032,"is_pvip":false,"replies":[{"id":"35332","content":"进程或线程，不单单指的是进程。可用使用top指令查看整体的使用率以及单个进程和单个线程的使用率。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1559087868,"ip_address":"","comment_id":98683,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5854024328","product_id":100028001,"comment_content":"老师你好，请问系统负载所指的正在运行或者等待的进程数和CPU的数目的百分比，但我大部分得系统来说运行的进程数目基本不会边，都是稳定的，在变的应该是应用程序本身的线程数，这个参数对于性能观察来说有用么，哪些方法能看到因为线程数过多或者线程的使用率很高导致性能问题，比如TOP查看CPU使用率？","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451787,"discussion_content":"进程或线程，不单单指的是进程。可用使用top指令查看整体的使用率以及单个进程和单个线程的使用率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559087868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072350,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/de/16695891.jpg","nickname":"小太阳","note":"","ucode":"84FF032FE78B11","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":66874,"discussion_content":"可能是这个道理：线程越多，对应的进程就越忙碌，也会间接导致等待的进程数变多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575113598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98381,"user_name":"jeff zhang","can_delete":false,"product_type":"c1","uid":1184119,"ip_address":"","ucode":"804FC3088DAB78","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/77/18b0b500.jpg","comment_is_top":false,"comment_ctime":1558972704,"is_pvip":false,"replies":[{"id":"35192","content":"你好 胜杰，负载表示系统的繁忙程度，包括运行时的线程和阻塞等待线程，我用0.1大概描述一下系统的繁忙程度，也有可能是其他值，系统一直运行一个线程，负载不会满。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1559000774,"ip_address":"","comment_id":98381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853940000","product_id":100028001,"comment_content":"在负载和cpu那个问题，您的答复我不太理解，cpu密集型情况下一个线程一直运行为什么负载是0.1？  还有等待的线程都会算到load里面吗？多谢","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451669,"discussion_content":"你好 胜杰，负载表示系统的繁忙程度，包括运行时的线程和阻塞等待线程，我用0.1大概描述一下系统的繁忙程度，也有可能是其他值，系统一直运行一个线程，负载不会满。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559000774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97359,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1195767,"ip_address":"","ucode":"284CC0FFCD511F","user_header":"https://static001.geekbang.org/account/avatar/00/12/3e/f7/84413d01.jpg","comment_is_top":false,"comment_ctime":1558660295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853627591","product_id":100028001,"comment_content":"期待后续","like_count":1},{"had_liked":false,"id":96912,"user_name":"🐌🐌🐌","can_delete":false,"product_type":"c1","uid":1442513,"ip_address":"","ucode":"0A7943AEBFA296","user_header":"https://static001.geekbang.org/account/avatar/00/16/02/d1/36285394.jpg","comment_is_top":false,"comment_ctime":1558534500,"is_pvip":false,"replies":[{"id":"34754","content":"这位同学，我今晚尝试模拟重现你说的问题，但是没有成功。希望你能贴出具体的配置信息，或者更详细的日志，希望我能帮你找到一些线索。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1558620476,"ip_address":"","comment_id":96912,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5853501796","product_id":100028001,"comment_content":"请教一个数据库连接池优化的问题：<br><br>项目采用spring boot druid连接池 数据库是mysql5.7版本，偶尔会报connection holder is null的错误。   <br><br>为什么程序启动一段时间后，netstat 查询与数据库的tcp 连接数为0 会小于连接池配置的最小数量呢？<br><br><br>请问下可能会是什么原因，如何调试解决？<br>","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451060,"discussion_content":"这位同学，我今晚尝试模拟重现你说的问题，但是没有成功。希望你能贴出具体的配置信息，或者更详细的日志，希望我能帮你找到一些线索。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558620476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1881512,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/b5/a8/427a7b6d.jpg","nickname":"石佩","note":"","ucode":"8A7BDD7B5A4906","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201264,"discussion_content":"是不是数据库超过规定的连接时长被关了 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583767924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336776,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/c8/fc094eec.jpg","nickname":"大茹","note":"","ucode":"4681A1EDD8D6F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2313,"discussion_content":"建议关注下druid的keepalive   https://github.com/alibaba/druid/wiki/KeepAlive_cn","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563455917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96860,"user_name":"Chocolate","can_delete":false,"product_type":"c1","uid":1013822,"ip_address":"","ucode":"242CF0E3C10E97","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/3e/c39d86f1.jpg","comment_is_top":false,"comment_ctime":1558524759,"is_pvip":false,"replies":[{"id":"34645","content":"感谢这位热心同学！","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1558525991,"ip_address":"","comment_id":96860,"utype":2}],"discussion_count":1,"race_medal":0,"score":"5853492055","product_id":100028001,"comment_content":"网络吞吐量里面的字被和谐了","like_count":1,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451037,"discussion_content":"感谢这位热心同学！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558525991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96691,"user_name":"庄风","can_delete":false,"product_type":"c1","uid":1267661,"ip_address":"","ucode":"21FC66BA9E7EBB","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/cd/9235341a.jpg","comment_is_top":false,"comment_ctime":1558488662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853455958","product_id":100028001,"comment_content":"希望老师在以后的课程中讲一下相关性能监测工具软件。我在项目中遇到了性能问题后，确实不知道该如何分析、监测系统状态，并进行相应的处理和优化。之前一直用的是Windows自带的性能监视器，不过并不好用。","like_count":1},{"had_liked":false,"id":96665,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1558486126,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853453422","product_id":100028001,"comment_content":"主要是纯粹的JAVA专栏  很期待很期待","like_count":1},{"had_liked":false,"id":96549,"user_name":"anz","can_delete":false,"product_type":"c1","uid":1048950,"ip_address":"","ucode":"29D6B6D79A0DD3","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/76/6100f079.jpg","comment_is_top":false,"comment_ctime":1558446712,"is_pvip":false,"replies":[{"id":"34602","content":"给你赞一个","user_name":"作者回复","user_name_real":"Geek_1330fe","uid":"1228576","ctime":1558488691,"ip_address":"","comment_id":96549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853414008","product_id":100028001,"comment_content":"目前在做交易系统的性能优化,最直接的感受是,在不做产品逻辑变动的情况下,合并查询,批量操作,几乎解决了我目前遇到的80%的问题;但是配置优化方面自己比较欠缺,希望跟着老师能补补自己的短板","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450914,"discussion_content":"给你赞一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558488691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96374,"user_name":"HUANG Rongjun","can_delete":false,"product_type":"c1","uid":1004437,"ip_address":"","ucode":"E47B7AB5848390","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/95/aad9db72.jpg","comment_is_top":false,"comment_ctime":1558405117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853372413","product_id":100028001,"comment_content":"正好项目前几天遇到了docker&#47;tomcat容器，导致整个CPU100%的问题，系统学习一下。","like_count":1},{"had_liked":false,"id":96345,"user_name":"kukukakiki","can_delete":false,"product_type":"c1","uid":1107581,"ip_address":"","ucode":"C2E37C72EE0FD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/7d/81029d50.jpg","comment_is_top":false,"comment_ctime":1558401667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853368963","product_id":100028001,"comment_content":"感觉分布式事务的处理也是需要考虑的性能问题","like_count":1},{"had_liked":false,"id":96250,"user_name":"邵岩","can_delete":false,"product_type":"c1","uid":1128625,"ip_address":"","ucode":"E6E9D8678FA1B8","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/b1/10861b45.jpg","comment_is_top":false,"comment_ctime":1558364473,"is_pvip":false,"replies":[{"id":"34488","content":"你好，邵岩。在规划的资源使用率范围之内以及合理的响应时间内，TPS越高越好，这是相对，需要有参考。","user_name":"作者回复","user_name_real":"Geek_1330fe","uid":"1228576","ctime":1558402013,"ip_address":"","comment_id":96250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853331769","product_id":100028001,"comment_content":"Tps越高，说明系统性能越好吗？","like_count":1,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450793,"discussion_content":"你好，邵岩。在规划的资源使用率范围之内以及合理的响应时间内，TPS越高越好，这是相对，需要有参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558402013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206636,"user_name":"jzhongchen","can_delete":false,"product_type":"c1","uid":1745949,"ip_address":"","ucode":"B78FD795DB752F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a4/1d/81e93f87.jpg","comment_is_top":false,"comment_ctime":1586912471,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586912471","product_id":100028001,"comment_content":"对系统性能指标的了解，之前我能就有一个监控采集系统，内存居高不下，后来分析可能是缓存的链接里面的资源没有释放","like_count":0},{"had_liked":false,"id":201163,"user_name":"Geek_d7aa3c","can_delete":false,"product_type":"c1","uid":1535057,"ip_address":"","ucode":"7915385781074F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wm9Ecicta5FTicBJhrzibFtmqnCG3xScYianDTyc84c3Copb5nhwmWxwdcXphGIywFAy71uNodoeCGCO5SHgWpd2pQ/132","comment_is_top":false,"comment_ctime":1585725836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585725836","product_id":100028001,"comment_content":"留言收获：<br> 1.系统负载代表单位时间内正在运行或等待的进程或线程数，代表了系统的繁忙程度，CPU利用率则代表单位时间内一个线程或进程实时占用CPU的百分比。","like_count":0},{"had_liked":false,"id":199268,"user_name":"10年以后","can_delete":false,"product_type":"c1","uid":1297421,"ip_address":"","ucode":"FE58CA7E5C2AF9","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/0d/89435926.jpg","comment_is_top":false,"comment_ctime":1585485231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585485231","product_id":100028001,"comment_content":"性能调优标准","like_count":0},{"had_liked":false,"id":188509,"user_name":".","can_delete":false,"product_type":"c1","uid":1083502,"ip_address":"","ucode":"83F583994F4F72","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/6e/3bd860d3.jpg","comment_is_top":false,"comment_ctime":1584363104,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584363104","product_id":100028001,"comment_content":"在项目的开始阶段，我们没有必要过早地介入性能优化，只需在编码的时候保证其优秀、高效，以及良好的程序设计。","like_count":0},{"had_liked":false,"id":173374,"user_name":"wxlbear","can_delete":false,"product_type":"c1","uid":1145447,"ip_address":"","ucode":"D35622050C086C","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/67/2c43bb7a.jpg","comment_is_top":false,"comment_ctime":1579514261,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579514261","product_id":100028001,"comment_content":"老师实在是非常的敬业，基本上有问必答，点个赞👍👍👍","like_count":0},{"had_liked":false,"id":144485,"user_name":"Geek_899a29","can_delete":false,"product_type":"c1","uid":1303251,"ip_address":"","ucode":"153F579437E615","user_header":"https://wx.qlogo.cn/mmopen/vi_32/yBTQ1dOpveXMMHDRvuxG78SIQ0mgFgKfP33xSuAV5wh4tJtxxNGk8df5a8cTpledIr7M5dvHlOYH1lE9BRulEQ/132","comment_is_top":false,"comment_ctime":1571937282,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571937282","product_id":100028001,"comment_content":"Benchmark                       Mode  Cnt          Score          Error  Units<br>Helloworld.withStackTrace      thrpt   20     778650.387 ±    72834.181  ops&#47;s<br>Helloworld.withoutStackTrace  thrpt   20  159196159.237 ± 10929025.354  ops&#47;s","like_count":0},{"had_liked":false,"id":142763,"user_name":"睁眼看世界","can_delete":false,"product_type":"c1","uid":1206388,"ip_address":"","ucode":"F94CF34BC5B2AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/74/461b202d.jpg","comment_is_top":false,"comment_ctime":1571498438,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571498438","product_id":100028001,"comment_content":"很棒的一个专栏，发现的太迟，刚好最近所在在压测，跟着老师从头学习！","like_count":0},{"had_liked":false,"id":141846,"user_name":"雪哥","can_delete":false,"product_type":"c1","uid":1166268,"ip_address":"","ucode":"7AE50B31768A28","user_header":"https://static001.geekbang.org/account/avatar/00/11/cb/bc/fe68899c.jpg","comment_is_top":false,"comment_ctime":1571236351,"is_pvip":false,"replies":[{"id":"55142","content":"jmeter或loadrunner都可以，我们的压测工具是自己使用python脚本语言写的，定制化强一些","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1571472441,"ip_address":"","comment_id":141846,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571236351","product_id":100028001,"comment_content":"老师我想问一下，千万级并发用户的压测，一般用什么工具啊，或者其他技术手段实现超大并发的性能测试","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470910,"discussion_content":"jmeter或loadrunner都可以，我们的压测工具是自己使用python脚本语言写的，定制化强一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571472441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138915,"user_name":"Sdylan","can_delete":false,"product_type":"c1","uid":1008503,"ip_address":"","ucode":"4589D0D0FA9275","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/77/423345ab.jpg","comment_is_top":false,"comment_ctime":1570505135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570505135","product_id":100028001,"comment_content":"2019.10.8 打卡","like_count":0},{"had_liked":false,"id":131613,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1567825481,"is_pvip":false,"replies":[{"id":"50382","content":"这个工后面在不同的章节分别讲到各类组件的性能问题","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1567944569,"ip_address":"","comment_id":131613,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567825481","product_id":100028001,"comment_content":"首先，给老师点个赞，几乎有问必答，评论区很精彩，现在已经比较享受延后阅读的快感啦！<br>老师提到的压测性能指标已经比较全面了，我在压测时主要也是关注TP99、TPS、CPU使用情况、磁盘使用情况、网络使用情况、以及压力机多少并发数、多少台压力机、压测时间、压测时性能的抖动、被压机的JVM是否有 FULL GC、当然，被压机的本身配置也要关注几核、内存多少、磁盘多少、磁盘是什么类型等等。<br>老师能否给出一个常用组件的大概性能指标具体值，比如：各类MQ、各类RPC、各类数据库的什么版本配置下TPS、TP99大概多少？大部分机器我认为其极限性能都是达不到的，不过一台普通的机器性能极限大概是多少？他们本身怎么做到极致性能的这个我想了解一下，不过一个一个去压测也行，不过太耗时，可能也不准确？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466538,"discussion_content":"这个工后面在不同的章节分别讲到各类组件的性能问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567944569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072350,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/de/16695891.jpg","nickname":"小太阳","note":"","ucode":"84FF032FE78B11","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":66876,"discussion_content":"我也觉得。评论区也很精彩，大家问得好，老师也答得认真！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575113753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118224,"user_name":"阳阳","can_delete":false,"product_type":"c1","uid":1159221,"ip_address":"","ucode":"BD7404A3AE79E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/35/44e5516e.jpg","comment_is_top":false,"comment_ctime":1564296375,"is_pvip":true,"discussion_count":2,"race_medal":1,"score":"1564296375","product_id":100028001,"comment_content":"作为一名技术从业者，一口标准的普通话，还是挺不错的。","like_count":0,"discussions":[{"author":{"id":2744868,"avatar":"","nickname":"麻花","note":"","ucode":"FCCD929A8B47DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392761,"discussion_content":"人家有播音员","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631112571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1214529,"avatar":"https://static001.geekbang.org/account/avatar/00/12/88/41/310c0fc3.jpg","nickname":"desire1992","note":"","ucode":"738DE374E2D1FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2744868,"avatar":"","nickname":"麻花","note":"","ucode":"FCCD929A8B47DC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561377,"discussion_content":"这个老哥太耿直\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649610626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392761,"ip_address":""},"score":561377,"extra":""}]}]},{"had_liked":false,"id":115836,"user_name":"博弈","can_delete":false,"product_type":"c1","uid":1433344,"ip_address":"","ucode":"B1A69837E41972","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/EcYNib1bnDf5dz6JcrE8AoyZYMdqic2VNmbBtCcVZTO9EoDZZxqlQDEqQKo6klCCmklOtN9m0dTd2AOXqSneJYLw/132","comment_is_top":false,"comment_ctime":1563756444,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563756444","product_id":100028001,"comment_content":"希望能跟着老师吃到肉。","like_count":0},{"had_liked":false,"id":115038,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1135159,"ip_address":"","ucode":"CD8B84A57A6A0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/37/13b4c8aa.jpg","comment_is_top":false,"comment_ctime":1563459183,"is_pvip":false,"replies":[{"id":"42357","content":"赞，补充了很多","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1563760708,"ip_address":"","comment_id":115038,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563459183","product_id":100028001,"comment_content":"高可用，高性能，可扩展性，可伸缩性，安全性等指标","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458939,"discussion_content":"赞，补充了很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563760708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108312,"user_name":"男朋友","can_delete":false,"product_type":"c1","uid":1401707,"ip_address":"","ucode":"9818176E0BBD31","user_header":"https://static001.geekbang.org/account/avatar/00/15/63/6b/34b89fae.jpg","comment_is_top":false,"comment_ctime":1561716174,"is_pvip":false,"replies":[{"id":"39353","content":"算的，可以体现出服务的稳定性","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1561862637,"ip_address":"","comment_id":108312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561716174","product_id":100028001,"comment_content":"不知道一个服务的故障率算不算.....","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455916,"discussion_content":"算的，可以体现出服务的稳定性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561862637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103475,"user_name":"骡子看书","can_delete":false,"product_type":"c1","uid":1358287,"ip_address":"","ucode":"0BAFD7E0D10841","user_header":"https://static001.geekbang.org/account/avatar/00/14/b9/cf/21fef111.jpg","comment_is_top":false,"comment_ctime":1560444226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560444226","product_id":100028001,"comment_content":"很开心你的到来。让我明白了自己的渺小，还需不断努力","like_count":0},{"had_liked":false,"id":102096,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1560135640,"is_pvip":false,"replies":[{"id":"36882","content":"收到你的建议。系统性能调优可以基于开发后期来做，而且是有目标性去调优的。前期主要是一些选型和设计优化，所以对于开发效率和成本并不冲突。不用过于去花大量人力和时间去做调优。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1560175714,"ip_address":"","comment_id":102096,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560135640","product_id":100028001,"comment_content":"后面的课程还没看，但是我个人认为有一个必须要提的一点是。不谈日活用户量，和并发访问量的优化是没有意义的。个人还是希望能有针对不同用户体量的优化的策略。<br>因为甚至部分企业业务的解决方案，用户量可能连四位数都不到。自认为，这种情况性能的调优就不需要那么极致。因为就算花费大量成本去调优，也未必能节约大量的成本。<br><br>另一方面希望能看到，性能，开发效率，成本。之间的取舍与权衡的思路。 性能调优大多会从一定程度上降低开发效率。而性能调优也会带来开发成本的提升，但是可能会节约服务器成本。这方面如何权衡？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453257,"discussion_content":"收到你的建议。系统性能调优可以基于开发后期来做，而且是有目标性去调优的。前期主要是一些选型和设计优化，所以对于开发效率和成本并不冲突。不用过于去花大量人力和时间去做调优。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560175714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100029,"user_name":"ROAD","can_delete":false,"product_type":"c1","uid":1515127,"ip_address":"","ucode":"7A09F8DEDB1A45","user_header":"https://static001.geekbang.org/account/avatar/00/17/1e/77/d932331a.jpg","comment_is_top":false,"comment_ctime":1559396806,"is_pvip":false,"replies":[{"id":"57889","content":"可能调用了内核态的系统方法","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1573558049,"ip_address":"","comment_id":100029,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559396806","product_id":100028001,"comment_content":"做性能测试时，有时候CPU的sys比user暂用更高，这是为什么呢？我们自己的应用对CPU的消耗不是应该在user里面才对吗？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452379,"discussion_content":"可能调用了内核态的系统方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573558049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98846,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1054958,"ip_address":"","ucode":"7501AD9C0C4A70","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","comment_is_top":false,"comment_ctime":1559105180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559105180","product_id":100028001,"comment_content":"之前没做过性能调优，也没怎么接触过压力测试，只是在写代码的时候会注意代码风格和质量。希望后面能学到性能优化方面的更多知识。","like_count":0},{"had_liked":false,"id":98684,"user_name":"Geek_ebda96","can_delete":false,"product_type":"c1","uid":1134862,"ip_address":"","ucode":"02912E6D95A5A6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoRiaKX0ulEibbbwM4xhjyMeza0Pyp7KO1mqvfJceiaM6ZNtGpXJibI6P2qHGwBP9GKwOt9LgHicHflBXw/132","comment_is_top":false,"comment_ctime":1559057432,"is_pvip":false,"replies":[{"id":"35742","content":"一样适用，对分布式集群压测要分布均匀。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1559226962,"ip_address":"","comment_id":98684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559057432","product_id":100028001,"comment_content":"老师，对于单机的系统和分布式集群的系统，这种性能指标是不是有不一样的地方","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451788,"discussion_content":"一样适用，对分布式集群压测要分布均匀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559226962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98474,"user_name":"jeff zhang","can_delete":false,"product_type":"c1","uid":1184119,"ip_address":"","ucode":"804FC3088DAB78","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/77/18b0b500.jpg","comment_is_top":false,"comment_ctime":1559008173,"is_pvip":false,"replies":[{"id":"35239","content":"我在这里一起回答你的两个问题，第一个问题，系统负载达到1时，并不是像CPU一样，一个线程或者进程数量就能达到1的。第二个问题，如果非计算密集型的场景，出现load超过1，CPU不到40%，这种情况一般没有性能瓶颈，load超过1是因为大量请求由于网络I&#47;O导致阻塞。可以试着降低请求，观察load是否将下来，如果少量请求，负载正常，说明系统性能正常，否则，需要考虑是否存在I&#47;O瓶颈，或一些导致线程严重阻塞的性能问题。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1559017410,"ip_address":"","comment_id":98474,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559008173","product_id":100028001,"comment_content":"还有一个问题，我的一个服务压测时单cpu load超过1时，cpu不到40%，我应该以哪个标准来看我的服务当前是否OK？为什么？多谢","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451703,"discussion_content":"我在这里一起回答你的两个问题，第一个问题，系统负载达到1时，并不是像CPU一样，一个线程或者进程数量就能达到1的。第二个问题，如果非计算密集型的场景，出现load超过1，CPU不到40%，这种情况一般没有性能瓶颈，load超过1是因为大量请求由于网络I/O导致阻塞。可以试着降低请求，观察load是否将下来，如果少量请求，负载正常，说明系统性能正常，否则，需要考虑是否存在I/O瓶颈，或一些导致线程严重阻塞的性能问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559017410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98471,"user_name":"jeff zhang","can_delete":false,"product_type":"c1","uid":1184119,"ip_address":"","ucode":"804FC3088DAB78","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/77/18b0b500.jpg","comment_is_top":false,"comment_ctime":1559007667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559007667","product_id":100028001,"comment_content":"还是有点困惑，假设单核的服务器，cpu密集型的线程一直在跑，cpu应该是100%，那load也超过1了吧，毕竟还有别的系统进程，多谢","like_count":0},{"had_liked":false,"id":98359,"user_name":"Miracle","can_delete":false,"product_type":"c1","uid":1547543,"ip_address":"","ucode":"F13FEE8D4B050E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJSCnLYuia6EDvwjnc9w92hOMsOhMNzCOchYgvK1ylcgKo5pBMibOk9a9jSHp3zDrJ7ick4m0Nm6SGyA/132","comment_is_top":false,"comment_ctime":1558967322,"is_pvip":false,"replies":[{"id":"35185","content":"同学你好，已经更新的04讲有详解这个问题。","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1558980605,"ip_address":"","comment_id":98359,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1558967322","product_id":100028001,"comment_content":"老师，您好！我在网上看了一下正则表达式的回溯，没有得到很好的理解，望老师能够指导说明一下正则表达式的回溯以及如何解决正则表达式回溯问题。","like_count":0,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451656,"discussion_content":"同学你好，已经更新的04讲有详解这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558980605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98191,"user_name":"再续啸傲","can_delete":false,"product_type":"c1","uid":1360184,"ip_address":"","ucode":"912987A17DCA92","user_header":"https://static001.geekbang.org/account/avatar/00/14/c1/38/e45bbb6b.jpg","comment_is_top":false,"comment_ctime":1558928072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558928072","product_id":100028001,"comment_content":"tps qps 最大响应时长 平均响应时长","like_count":0},{"had_liked":false,"id":97587,"user_name":"何某人","can_delete":false,"product_type":"c1","uid":1401069,"ip_address":"","ucode":"BCCC5C7E1FE679","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/ed/b99c688d.jpg","comment_is_top":false,"comment_ctime":1558702864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558702864","product_id":100028001,"comment_content":"sql也会造成性能问题","like_count":0},{"had_liked":false,"id":97291,"user_name":"Fever","can_delete":false,"product_type":"c1","uid":1263997,"ip_address":"","ucode":"2595F13BC3ECAB","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/7d/7b9fd831.jpg","comment_is_top":false,"comment_ctime":1558630580,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558630580","product_id":100028001,"comment_content":"还有单次请求耗时，广告系统中会把请求的耗时分成各个分位，查看每个分位的请求数来作为优化标准。","like_count":0},{"had_liked":false,"id":96941,"user_name":"大茹","can_delete":false,"product_type":"c1","uid":1336776,"ip_address":"","ucode":"4681A1EDD8D6F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/65/c8/fc094eec.jpg","comment_is_top":false,"comment_ctime":1558540681,"is_pvip":false,"replies":[{"id":"34712","content":"对的，系统负载可以在Linux系统中通过top命令查看到，我们可以看到1、5、15分钟的平均负载，系统的负载代表系统的繁忙程度，包括运行的进程&#47;线程以及阻塞等待的进程和线程，所以跟CPU、I&#47;O关系密切。一个物理CPU可能有多核，一核CPU的负载为1，如果是四核，则系统的负载为4。一般单核的负载值在1以下比较合理，如果超过1了，则代表系统处于比较繁忙状态。<br><br>如果系统负载一直很小，CPU的使用率也不高，在保证系统性能的前提下，可以改用更低CPU配置的服务器。","user_name":"作者回复","user_name_real":"刘超","uid":"1228576","ctime":1558593153,"ip_address":"","comment_id":96941,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558540681","product_id":100028001,"comment_content":"系统负载就是load吧？是不是cpu 内存 io 都会影响load，另外load值为多少才比较合理，小了应该也算是资源的浪费吧？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451074,"discussion_content":"对的，系统负载可以在Linux系统中通过top命令查看到，我们可以看到1、5、15分钟的平均负载，系统的负载代表系统的繁忙程度，包括运行的进程/线程以及阻塞等待的进程和线程，所以跟CPU、I/O关系密切。一个物理CPU可能有多核，一核CPU的负载为1，如果是四核，则系统的负载为4。一般单核的负载值在1以下比较合理，如果超过1了，则代表系统处于比较繁忙状态。\n\n如果系统负载一直很小，CPU的使用率也不高，在保证系统性能的前提下，可以改用更低CPU配置的服务器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558593153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96830,"user_name":"纸战","can_delete":false,"product_type":"c1","uid":1226796,"ip_address":"","ucode":"D4B756F88B54F4","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/2c/cf9a0384.jpg","comment_is_top":false,"comment_ctime":1558516709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558516709","product_id":100028001,"comment_content":"服务性能指标 我知道的主要 tps，tpm,还有tp90，tp99等","like_count":0},{"had_liked":false,"id":96430,"user_name":"David Mo","can_delete":false,"product_type":"c1","uid":1083504,"ip_address":"","ucode":"66C30A3CD7EDA6","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/70/32534e2d.jpg","comment_is_top":false,"comment_ctime":1558421655,"is_pvip":false,"replies":[{"id":"34576","content":"嗯，别人的最佳实践不一定适用于你的业务场景，但我们可以透过现象看本质呀～了解调优背后的原理，理解消化吸收，然后为你所用。","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1558449394,"ip_address":"","comment_id":96430,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1558421655","product_id":100028001,"comment_content":"感觉工具很重要，有工具的帮助能快速定位关键瓶颈，用20&#47;80原则，根据你的调优目标，cost efficient原则集中去解决主要问题。千万不能盲目去根据最佳实践去调。","like_count":0,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450877,"discussion_content":"嗯，别人的最佳实践不一定适用于你的业务场景，但我们可以透过现象看本质呀～了解调优背后的原理，理解消化吸收，然后为你所用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558449394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96422,"user_name":"dapaul","can_delete":false,"product_type":"c1","uid":1239335,"ip_address":"","ucode":"A53E0018F138A1","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/27/2aa8fb31.jpg","comment_is_top":false,"comment_ctime":1558418353,"is_pvip":true,"replies":[{"id":"34550","content":"你好dapaul，我们可以使用测试工具做压力测试，通过设置并发用户数以及请求数，可以模拟高并发场景。我们也可以自己写多线程代码来实现高并发测试。","user_name":"作者回复","user_name_real":"Geek_1330fe","uid":"1228576","ctime":1558433833,"ip_address":"","comment_id":96422,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558418353","product_id":100028001,"comment_content":"有个小白问题:如何做tps压力测试呢？如何模拟线上的高平发请求？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450875,"discussion_content":"你好dapaul，我们可以使用测试工具做压力测试，通过设置并发用户数以及请求数，可以模拟高并发场景。我们也可以自己写多线程代码来实现高并发测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558433833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96382,"user_name":"拒绝","can_delete":false,"product_type":"c1","uid":1335155,"ip_address":"","ucode":"CB0264C4D3FE17","user_header":"https://static001.geekbang.org/account/avatar/00/14/5f/73/bb3dc468.jpg","comment_is_top":false,"comment_ctime":1558406894,"is_pvip":false,"replies":[{"id":"34529","content":"专栏中的实战篇中《电商系统的分布式事务调优》和《如何使用缓存优化系统性能？》会有讲到结合mq和redis的使用来解决高并发问题，由于mq和redis的调优的具体知识点也比较多，本次专栏没有分篇深入讲解。如果有比较感兴趣的具体知识点，可以在这里提出。","user_name":"作者回复","user_name_real":"Geek_1330fe","uid":"1228576","ctime":1558416673,"ip_address":"","comment_id":96382,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558406894","product_id":100028001,"comment_content":"提高系统性能，怎么不把mq，redis给加入进来呢，经常听人说如何解决高并发问题，常见的有用mq做流量削峰，redis做缓存等。","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450856,"discussion_content":"专栏中的实战篇中《电商系统的分布式事务调优》和《如何使用缓存优化系统性能？》会有讲到结合mq和redis的使用来解决高并发问题，由于mq和redis的调优的具体知识点也比较多，本次专栏没有分篇深入讲解。如果有比较感兴趣的具体知识点，可以在这里提出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558416673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96341,"user_name":"one pencil","can_delete":false,"product_type":"c1","uid":1235938,"ip_address":"","ucode":"E831E77AAA30C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/e2/392bedb9.jpg","comment_is_top":false,"comment_ctime":1558401351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558401351","product_id":100028001,"comment_content":"学习一波，温故而知新","like_count":0},{"had_liked":false,"id":96276,"user_name":"刘十一","can_delete":false,"product_type":"c1","uid":1035899,"ip_address":"","ucode":"5927D77D248E30","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/7b/fa0f9368.jpg","comment_is_top":false,"comment_ctime":1558376449,"is_pvip":false,"replies":[{"id":"34484","content":"同学你好，下一讲中老师就会分享如何分析性能问题，解决问题。","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1558401107,"ip_address":"","comment_id":96276,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1558376449","product_id":100028001,"comment_content":"调优之前如何排查？网上找的一些方法，查看是有问题，但是没怎么说如何排查","like_count":0,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450807,"discussion_content":"同学你好，下一讲中老师就会分享如何分析性能问题，解决问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558401107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96267,"user_name":":)","can_delete":false,"product_type":"c1","uid":1239198,"ip_address":"","ucode":"23D505949442B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/9e/6550a051.jpg","comment_is_top":false,"comment_ctime":1558370125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558370125","product_id":100028001,"comment_content":"再买一节，希望能够打开一扇窗！","like_count":0},{"had_liked":false,"id":96266,"user_name":":)","can_delete":false,"product_type":"c1","uid":1239198,"ip_address":"","ucode":"23D505949442B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/9e/6550a051.jpg","comment_is_top":false,"comment_ctime":1558370023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558370023","product_id":100028001,"comment_content":"再买一节，希望能够打开 一扇窗！","like_count":0},{"had_liked":false,"id":96212,"user_name":"英子","can_delete":false,"product_type":"c1","uid":1395256,"ip_address":"","ucode":"33032D03750576","user_header":"https://static001.geekbang.org/account/avatar/00/15/4a/38/4d2eb166.jpg","comment_is_top":false,"comment_ctime":1558357846,"is_pvip":false,"replies":[{"id":"34448","content":"晚上好 英子，这个专栏中有一些章节通过实际案例分享了如何使用工具来分析和确定性能瓶颈，我也会在《内存持续上升，我该如何排查问题？》这一讲中重点讲解如何使用工具分析和查找问题。","user_name":"作者回复","user_name_real":"Geek_1330fe","uid":"1228576","ctime":1558359954,"ip_address":"","comment_id":96212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558357846","product_id":100028001,"comment_content":"里面章节有讲如何使用哪些工具来分析确定瓶颈在哪里吗？","like_count":0,"discussions":[{"author":{"id":1228576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/20/19d42715.jpg","nickname":"刘超","note":"","ucode":"CD56F93596E818","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450773,"discussion_content":"晚上好 英子，这个专栏中有一些章节通过实际案例分享了如何使用工具来分析和确定性能瓶颈，我也会在《内存持续上升，我该如何排查问题？》这一讲中重点讲解如何使用工具分析和查找问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558359954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96188,"user_name":"码农 布莱恩特","can_delete":false,"product_type":"c1","uid":1475223,"ip_address":"","ucode":"3E9A969D2530D4","user_header":"https://static001.geekbang.org/account/avatar/00/16/82/97/b26628dc.jpg","comment_is_top":false,"comment_ctime":1558353744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558353744","product_id":100028001,"comment_content":"批量处理的性能调优啊！批量处理的时长很能反映应用的性能","like_count":0},{"had_liked":false,"id":96180,"user_name":"小胖子","can_delete":false,"product_type":"c1","uid":1219991,"ip_address":"","ucode":"16C0B467871D5F","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/97/076d6fb1.jpg","comment_is_top":false,"comment_ctime":1558351441,"is_pvip":false,"replies":[{"id":"34467","content":"你说的都对～坚持哦！","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1558363462,"ip_address":"","comment_id":96180,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1558351441","product_id":100028001,"comment_content":"好好学习天天向上","like_count":0,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450755,"discussion_content":"你说的都对～坚持哦！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558363462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96177,"user_name":"在屋顶唱歌","can_delete":false,"product_type":"c1","uid":1542445,"ip_address":"","ucode":"FFA8216E68D8E6","user_header":"https://static001.geekbang.org/account/avatar/00/17/89/2d/573eb133.jpg","comment_is_top":false,"comment_ctime":1558350105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558350105","product_id":100028001,"comment_content":"很全面的一个专栏，好好学习天天向上😀 ","like_count":0},{"had_liked":false,"id":96168,"user_name":"邋遢的流浪剑客","can_delete":false,"product_type":"c1","uid":1260881,"ip_address":"","ucode":"32AF6F9070506D","user_header":"https://static001.geekbang.org/account/avatar/00/13/3d/51/9723276c.jpg","comment_is_top":false,"comment_ctime":1558348064,"is_pvip":false,"replies":[{"id":"34460","content":"晚上好，这位同学，感谢你的信任，我们定会实现完美交付！","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1558362759,"ip_address":"","comment_id":96168,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1558348064","product_id":100028001,"comment_content":"一直想找一个总结性能调优问题比较全面的资料，希望能跟紧课程进度，学会性能调优","like_count":0,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450749,"discussion_content":"晚上好，这位同学，感谢你的信任，我们定会实现完美交付！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558362759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96163,"user_name":"tdytaylor","can_delete":false,"product_type":"c1","uid":1181214,"ip_address":"","ucode":"5B4919FDFE91A6","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/1e/51ad425f.jpg","comment_is_top":false,"comment_ctime":1558347300,"is_pvip":false,"replies":[{"id":"34413","content":"高性能系统触手可及◝😌◟","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1558350832,"ip_address":"","comment_id":96163,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1558347300","product_id":100028001,"comment_content":"第一个发言，争取学好性能优化","like_count":0,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450747,"discussion_content":"高性能系统触手可及◝😌◟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558350832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]}]}