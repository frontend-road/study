{"id":40727,"title":"02 | 如何才能做好动静分离？有哪些方案可选？","content":"<p>上一篇文章中，我介绍了秒杀系统在架构上要考虑的几个原则，我估计你很快就会问：“知易行难，这些原则应该怎么应用到系统中呢？”别急，从这篇文章开始，我就会逐一介绍秒杀系统的各个关键环节中涉及的关键技术。</p><p>今天我们就先来讨论第一个关键点：数据的动静分离。不知道你之前听过这个解决方案吗？不管你有没有听过，我都建议你先停下来思考动静分离的价值。如果你的系统还没有开始应用动静分离的方案，那你也可以想想为什么没有，是之前没有想到，还是说业务体量根本用不着？</p><p>不过我可以确信地说，如果你在一个业务飞速发展的公司里，并且你在深度参与公司内类秒杀类系统的架构或者开发工作，那么你迟早会想到动静分离的方案。为什么？很简单，<strong>秒杀的场景中，对于系统的要求其实就三个字：快、准、稳</strong>。</p><p>那怎么才能“快”起来呢？我觉得抽象起来讲，就只有两点，一点是提高单次请求的效率，一点是减少没必要的请求。今天我们聊到的“动静分离”其实就是瞄着这个大方向去的。</p><p>不知道你是否还记得，最早的秒杀系统其实是要刷新整体页面的，但后来秒杀的时候，你只要点击“刷新抢宝”按钮就够了，这种变化的本质就是动静分离，分离之后，客户端大幅度减少了请求的数据量。这不自然就“快”了吗？</p><!-- [[[read_end]]] --><h2>何为动静数据</h2><p>那到底什么才是动静分离呢？所谓“动静分离”，其实就是把用户请求的数据（如HTML页面）划分为“动态数据”和“静态数据”。</p><p>简单来说，<strong>“动态数据”和“静态数据”的主要区别就是看页面中输出的数据是否和URL、浏览者、时间、地域相关，以及是否含有Cookie等私密数据</strong>。比如说：</p><ol>\n<li>很多媒体类的网站，某一篇文章的内容不管是你访问还是我访问，它都是一样的。所以它就是一个典型的静态数据，但是它是个动态页面。</li>\n<li>我们如果现在访问淘宝的首页，每个人看到的页面可能都是不一样的，淘宝首页中包含了很多根据访问者特征推荐的信息，而这些个性化的数据就可以理解为动态数据了。</li>\n</ol><p>这里再强调一下，我们所说的静态数据，不能仅仅理解为传统意义上完全存在磁盘上的HTML页面，它也可能是经过Java系统产生的页面，但是它输出的页面本身不包含上面所说的那些因素。也就是所谓“动态”还是“静态”，并不是说数据本身是否动静，而是数据中是否含有和访问者相关的个性化数据。</p><p>还有一点要注意，就是页面中“不包含”，指的是“页面的HTML源码中不含有”，这一点务必要清楚。</p><p>理解了静态数据和动态数据，我估计你很容易就能想明白“动静分离”这个方案的来龙去脉了。分离了动静数据，我们就可以对分离出来的静态数据做缓存，有了缓存之后，静态数据的“访问效率”自然就提高了。</p><p>那么，怎样对静态数据做缓存呢？我在这里总结了几个重点。</p><p><strong>第一，你应该把静态数据缓存到离用户最近的地方</strong>。静态数据就是那些相对不会变化的数据，因此我们可以把它们缓存起来。缓存到哪里呢？常见的就三种，用户浏览器里、CDN上或者在服务端的Cache中。你应该根据情况，把它们尽量缓存到离用户最近的地方。</p><p><strong>第二，静态化改造就是要直接缓存HTTP连接</strong>。相较于普通的数据缓存而言，你肯定还听过系统的静态化改造。静态化改造是直接缓存HTTP连接而不是仅仅缓存数据，如下图所示，Web代理服务器根据请求URL，直接取出对应的HTTP响应头和响应体然后直接返回，这个响应过程简单得连HTTP协议都不用重新组装，甚至连HTTP请求头也不需要解析。</p><p><img src=\"https://static001.geekbang.org/resource/image/2c/46/2c608715621afc9c95570dce00a87546.jpg?wh=1366*484\" alt=\"\"></p><center><span class=\"reference\">图1  静态化改造</span></center><p>第三，让谁来缓存静态数据也很重要。不同语言写的Cache软件处理缓存数据的效率也各不相同。以Java为例，因为Java系统本身也有其弱点（比如不擅长处理大量连接请求，每个连接消耗的内存较多，Servlet容器解析HTTP协议较慢），所以你可以不在Java层做缓存，而是直接在Web服务器层上做，这样你就可以屏蔽Java语言层面的一些弱点；而相比起来，Web服务器（如Nginx、Apache、Varnish）也更擅长处理大并发的静态文件请求。</p><h2>如何做动静分离的改造</h2><p>理解了动静态数据的“why”和“what”，接下来我们就要看“how”了。我们如何把动态页面改造成适合缓存的静态页面呢？其实也很简单，就是去除前面所说的那几个影响因素，把它们单独分离出来，做动静分离。</p><p>下面，我以典型的商品详情系统为例来详细介绍。这里，你可以先打开京东或者淘宝的商品详情页，看看这个页面里都有哪些动静数据。我们从以下5个方面来分离出动态内容。</p><ol>\n<li><strong>URL唯一化</strong>。商品详情系统天然地就可以做到URL唯一化，比如每个商品都由ID来标识，那么http://item.xxx.com/item.htm?id=xxxx就可以作为唯一的URL标识。为啥要URL唯一呢？前面说了我们是要缓存整个HTTP连接，那么以什么作为Key呢？就以URL作为缓存的Key，例如以id=xxx这个格式进行区分。</li>\n<li><strong>分离浏览者相关的因素</strong>。浏览者相关的因素包括是否已登录，以及登录身份等，这些相关因素我们可以单独拆分出来，通过动态请求来获取。</li>\n<li><strong>分离时间因素</strong>。服务端输出的时间也通过动态请求获取。</li>\n<li><strong>异步化地域因素</strong>。详情页面上与地域相关的因素做成异步方式获取，当然你也可以通过动态请求方式获取，只是这里通过异步获取更合适。</li>\n<li><strong>去掉Cookie</strong>。服务端输出的页面包含的Cookie可以通过代码软件来删除，如Web服务器Varnish可以通过unset req.http.cookie 命令去掉Cookie。注意，这里说的去掉Cookie并不是用户端收到的页面就不含Cookie了，而是说，在缓存的静态数据中不含有Cookie。</li>\n</ol><p>分离出动态内容之后，如何组织这些内容页就变得非常关键了。这里我要提醒你一点，因为这其中很多动态内容都会被页面中的其他模块用到，如判断该用户是否已登录、用户ID是否匹配等，所以这个时候我们应该将这些信息JSON化（用JSON格式组织这些数据），以方便前端获取。</p><p>前面我们介绍里用缓存的方式来处理静态数据。而动态内容的处理通常有两种方案：ESI（Edge Side Includes）方案和CSI（Client Side Include）方案。</p><ol>\n<li><strong>ESI方案（或者SSI）</strong>：即在Web代理服务器上做动态内容请求，并将请求插入到静态页面中，当用户拿到页面时已经是一个完整的页面了。这种方式对服务端性能有些影响，但是用户体验较好。</li>\n<li><strong>CSI方案</strong>。即单独发起一个异步JavaScript 请求，以向服务端获取动态内容。这种方式服务端性能更佳，但是用户端页面可能会延时，体验稍差。</li>\n</ol><h2>动静分离的几种架构方案</h2><p>前面我们通过改造把静态数据和动态数据做了分离，那么如何在系统架构上进一步对这些动态和静态数据重新组合，再完整地输出给用户呢？</p><p>这就涉及对用户请求路径进行合理的架构了。根据架构上的复杂度，有3种方案可选：</p><ol>\n<li>实体机单机部署；</li>\n<li>统一Cache层；</li>\n<li>上CDN。</li>\n</ol><p><span class=\"orange\">方案1：实体机单机部署</span></p><p>这种方案是将虚拟机改为实体机，以增大Cache的容量，并且采用了一致性Hash分组的方式来提升命中率。这里将Cache分成若干组，是希望能达到命中率和访问热点的平衡。Hash分组越少，缓存的命中率肯定就会越高，但短板是也会使单个商品集中在一个分组中，容易导致Cache被击穿，所以我们应该适当增加多个相同的分组，来平衡访问热点和命中率的问题。</p><p>这里我给出了实体机单机部署方案的结构图，如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/4e/8a/4e4f0b0e5b83deaccb8cc49ad40f1a8a.jpg?wh=1643*1900\" alt=\"\"></p><center><span class=\"reference\">图2  Nginx+Cache+Java结构实体机单机部署</span></center><p>实体机单机部署有以下几个优点：</p><ol>\n<li>没有网络瓶颈，而且能使用大内存；</li>\n<li>既能提升命中率，又能减少Gzip压缩；</li>\n<li>减少Cache失效压力，因为采用定时失效方式，例如只缓存3秒钟，过期即自动失效。</li>\n</ol><p>这个方案中，虽然把通常只需要虚拟机或者容器运行的Java应用换成实体机，优势很明显，它会增加单机的内存容量，但是一定程度上也造成了CPU的浪费，因为单个的Java进程很难用完整个实体机的CPU。</p><p>另外就是，一个实体机上部署了Java应用又作为Cache来使用，这造成了运维上的高复杂度，所以这是一个折中的方案。如果你的公司里，没有更多的系统有类似需求，那么这样做也比较合适，如果你们有多个业务系统都有静态化改造的需求，那还是建议把Cache层单独抽出来公用比较合理，如下面的方案2所示。</p><p><span class=\"orange\">方案2：统一Cache层</span></p><p>所谓统一Cache层，就是将单机的Cache统一分离出来，形成一个单独的Cache集群。统一Cache层是个更理想的可推广方案，该方案的结构图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/36/d2/36af87e321f9d6a2f4516bf2e21e55d2.jpg?wh=1643*2065\" alt=\"\"></p><center><span class=\"reference\">图3 统一Cache </span></center><p>将Cache层单独拿出来统一管理可以减少运维成本，同时也方便接入其他静态化系统。此外，它还有一些优点。</p><ol>\n<li>单独一个Cache层，可以减少多个应用接入时使用Cache的成本。这样接入的应用只要维护自己的Java系统就好，不需要单独维护Cache，而只关心如何使用即可。</li>\n<li>统一Cache的方案更易于维护，如后面加强监控、配置的自动化，只需要一套解决方案就行，统一起来维护升级也比较方便。</li>\n<li>可以共享内存，最大化利用内存，不同系统之间的内存可以动态切换，从而能够有效应对各种攻击。</li>\n</ol><p>这种方案虽然维护上更方便了，但是也带来了其他一些问题，比如缓存更加集中，导致：</p><ol>\n<li>Cache层内部交换网络成为瓶颈；</li>\n<li>缓存服务器的网卡也会是瓶颈；</li>\n<li>机器少风险较大，挂掉一台就会影响很大一部分缓存数据。</li>\n</ol><p>要解决上面这些问题，可以再对Cache做Hash分组，即一组Cache缓存的内容相同，这样能够避免热点数据过度集中导致新的瓶颈产生。</p><p><span class=\"orange\">方案3：上CDN</span></p><p>在将整个系统做动静分离后，我们自然会想到更进一步的方案，就是将Cache进一步前移到CDN上，因为CDN离用户最近，效果会更好。</p><p>但是要想这么做，有以下几个问题需要解决。</p><ol>\n<li><strong>失效问题</strong>。前面我们也有提到过缓存时效的问题，不知道你有没有理解，我再来解释一下。谈到静态数据时，我说过一个关键词叫“相对不变”，它的言外之意是“可能会变化”。比如一篇文章，现在不变，但如果你发现个错别字，是不是就会变化了？如果你的缓存时效很长，那用户端在很长一段时间内看到的都是错的。所以，这个方案中也是，我们需要保证CDN可以在秒级时间内，让分布在全国各地的Cache同时失效，这对CDN的失效系统要求很高。</li>\n<li><strong>命中率问题</strong>。Cache最重要的一个衡量指标就是“高命中率”，不然Cache的存在就失去了意义。同样，如果将数据全部放到全国的CDN上，必然导致Cache分散，而Cache分散又会导致访问请求命中同一个Cache的可能性降低，那么命中率就成为一个问题。</li>\n<li><strong>发布更新问题</strong>。如果一个业务系统每周都有日常业务需要发布，那么发布系统必须足够简洁高效，而且你还要考虑有问题时快速回滚和排查问题的简便性。</li>\n</ol><p>从前面的分析来看，将商品详情系统放到全国的所有CDN节点上是不太现实的，因为存在失效问题、命中率问题以及系统的发布更新问题。那么是否可以选择若干个节点来尝试实施呢？答案是“可以”，但是这样的节点需要满足几个条件：</p><ol>\n<li>靠近访问量比较集中的地区；</li>\n<li>离主站相对较远；</li>\n<li>节点到主站间的网络比较好，而且稳定；</li>\n<li>节点容量比较大，不会占用其他CDN太多的资源。</li>\n</ol><p>最后，还有一点也很重要，那就是：节点不要太多。</p><p>基于上面几个因素，选择CDN的二级Cache比较合适，因为二级Cache数量偏少，容量也更大，让用户的请求先回源的CDN的二级Cache中，如果没命中再回源站获取数据，部署方式如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/dd/c0fd22cf9d565a8ea2e9edcefae3b2dd.jpg?wh=951*946\" alt=\"\"></p><center><span class=\"reference\">图4  CDN化部署方案</span></center><p>使用CDN的二级Cache作为缓存，可以达到和当前服务端静态化Cache类似的命中率，因为节点数不多，Cache不是很分散，访问量也比较集中，这样也就解决了命中率问题，同时能够给用户最好的访问体验，是当前比较理想的一种CDN化方案。</p><p>除此之外，CDN化部署方案还有以下几个特点：</p><ol>\n<li>把整个页面缓存在用户浏览器中；</li>\n<li>如果强制刷新整个页面，也会请求CDN；</li>\n<li>实际有效请求，只是用户对“刷新抢宝”按钮的点击。</li>\n</ol><p>这样就把90%的静态数据缓存在了用户端或者CDN上，当真正秒杀时，用户只需要点击特殊的“刷新抢宝”按钮，而不需要刷新整个页面。这样一来，系统只是向服务端请求很少的有效数据，而不需要重复请求大量的静态数据。</p><p>秒杀的动态数据和普通详情页面的动态数据相比更少，性能也提升了3倍以上。所以“抢宝”这种设计思路，让我们不用刷新页面就能够很好地请求到服务端最新的动态数据。</p><h2>总结一下</h2><p>今天，我主要介绍了实现动静分离的几种思路，并由易到难给出了几种架构方案，以及它们各自的优缺点。可以看到，不同的架构方案会引入不同的问题，比如我们把缓存数据从CDN上移到用户的浏览器里，针对秒杀这个场景是没问题的，但针对一般的商品可否也这样做呢？</p><p>你可能会问，存储在浏览器或CDN上，有多大区别？我的回答是：区别很大！因为在CDN上，我们可以做主动失效，而在用户的浏览器里就更不可控，如果用户不主动刷新的话，你很难主动地把消息推送给用户的浏览器。</p><p>另外，在什么地方把静态数据和动态数据合并并渲染出一个完整的页面也很关键，假如在用户的浏览器里合并，那么服务端可以减少渲染整个页面的CPU消耗。如果在服务端合并的话，就要考虑缓存的数据是否进行Gzip压缩了：如果缓存Gzip压缩后的静态数据可以减少缓存的数据量，但是进行页面合并渲染时就要先解压，然后再压缩完整的页面数据输出给用户；如果缓存未压缩的静态数据，这样不用解压静态数据，但是会增加缓存容量。虽然这些都是细节问题，但你在设计架构方案时都需要考虑清楚。</p><p>最后，欢迎在留言区分享讨论你对于数据动静分离的一些关键认知，我会第一时间给你反馈。</p><p></p>","comments":[{"had_liked":false,"id":67346,"user_name":"james","can_delete":false,"product_type":"c1","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1550133374,"is_pvip":false,"discussion_count":20,"race_medal":0,"score":"778939213950","product_id":100017501,"comment_content":"现在不都是前后端分离嘛, 不知道为啥还要将动静分离拿出来说事, 前端页面部署CDN早就标配了, 对于秒杀操作, 没有哪个平台是让用户刷新页面的, 都是到时间后点击按钮来秒杀, 而且这个缓存策略不应该是第一次访问不到再查询缓存, 应该在商家创建完秒杀产品后, 缓存就有了, 如果修改内容, 就直接更新缓存, 秒杀开始后, 商家就不能再修改了, 不想抬杠, 反正我认为这篇文章没啥干货","like_count":182,"discussions":[{"author":{"id":1312485,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DwZUsQhia0wIWNEfeGZ2srQWzVC04JjLFDwgmicpnNF3mUPdRJD6U6vviceJqMxGYUGtxaiaZWltyNtQ5fZhia7YN3w/132","nickname":"榴芒科技","note":"","ucode":"EC297012B1B942","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40487,"discussion_content":"感觉讲的很烂 跟我们平时面试一样 ，忽悠一下，落地不了， 一顿瞎说 没实际用处","likes_number":21,"is_delete":false,"is_hidden":false,"ctime":1572223170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1312485,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DwZUsQhia0wIWNEfeGZ2srQWzVC04JjLFDwgmicpnNF3mUPdRJD6U6vviceJqMxGYUGtxaiaZWltyNtQ5fZhia7YN3w/132","nickname":"榴芒科技","note":"","ucode":"EC297012B1B942","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374028,"discussion_content":"吃茶去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620976024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":40487,"ip_address":""},"score":374028,"extra":""}]},{"author":{"id":1518417,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2b/51/4020a79b.jpg","nickname":"张宁","note":"","ucode":"BBBCCFDDC6010B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25235,"discussion_content":"看我前两篇我也有同样的感受，感觉作者还停留在前后端不分离的时代。看了两篇，感觉略水","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1570460100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1120761,"avatar":"https://static001.geekbang.org/account/avatar/00/11/19/f9/62ae32d7.jpg","nickname":"Ken","note":"","ucode":"9F829156E855C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297874,"discussion_content":"前后端分离和动静分离是两个不一样的切面，前后端分离不代表就是动静分离。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1597079606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065057,"avatar":"https://static001.geekbang.org/account/avatar/00/10/40/61/1d505497.jpg","nickname":"itgo","note":"","ucode":"97A13E1CA3F15D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":69927,"discussion_content":"如果不说的话，你又会说别人连基本的动静分离都没说到。\n另外，你的动静分离做的有多彻底呢？虚心使人进步！","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1575301096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134895,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/2f/7b04140c.jpg","nickname":"孫やさん","note":"","ucode":"C60877C1C71685","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41111,"discussion_content":"看得云里雾里的，什么回源，什么Gzip压缩都不知道咋回事","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1572355232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1041013,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e2/75/94039076.jpg","nickname":"石建","note":"","ucode":"72339F0F3463E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387055,"discussion_content":"这篇老师在有些地方说的不明确。我想对LZ补充的是，自己实操一个系统：前端走CDN + nginx lua 取缓存（静态数据） + Java回源或主动更新缓存（静态数据） + 用户个性推荐（动态数据，可降级）。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1627964133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374038,"discussion_content":"感觉你的想法是很典型的一种认识观，就是完全从具体方案出发，但是实际上我们应该先研究清楚问题，方案嘛是逐步推出优化的，会不断变化，也没有唯一正确的，不能因为你今天用了智能机就觉得以前的人用功能机没必要，毕竟没有爸爸哪有儿子。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1620977099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1486157,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ad/4d/e3345713.jpg","nickname":"Make More Time","note":"","ucode":"0EA908D497AD54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371266,"discussion_content":"老师这篇文章主要从“思路”，“切点”，“建议”等说明设计秒杀系统的思路，思路，思路，重要的事说三遍。一切的技术都是为业务服务的，你知道为什么前后端要分离？要这么发展吗？你知道前后端分离也很大的增加系统复杂度吗？前后端不分离很Low吗？老师说的动静分离是什么都没有搞清楚就在这里胡乱评论，请你谦虚也请你认真思考。想做架构师，设计系统不是买白菜不是拼积木，写几年点业务飘了就可以做的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1619701555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156630,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a6/16/20045d95.jpg","nickname":"龙江","note":"","ucode":"50217EF903684C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25463,"discussion_content":"其实讲之前的迭代的实现，不是讲现在的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1570530154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2741744,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPghSpy52TKibwu3Dzd5EYetAtoXZVPIqhV8clJfFLJP3vfJib5Ay9k69aMnTNkRiav2wtwfryDIAkw/132","nickname":"秃头制造者","note":"","ucode":"033ABAF394AB3E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389804,"discussion_content":"如果我没理解错老师的意思的话，老师讲的是后端也可以做动静分离，动静分离并不代表html页面和Java分离，不知道我理解的对不对","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1629435984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1857536,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoG6W3ugJo1XEqmLPULB9o19GribV7hDZTMuVauvcpW8gaS2QPibwMkxce4fT2xCLGqRG0rx3V9WAWA/132","nickname":"睡不醒的🐷","note":"","ucode":"E88BD4EAD6F655","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167838,"discussion_content":"呵呵,你只适合做码农","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581521326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1158156,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ac/0c/f3e37765.jpg","nickname":"夏","note":"","ucode":"2DE213960503A8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577038,"discussion_content":"感觉整个课程没什么水平，浪费时间，纯粹骗钱！强烈要求下架退钱！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655896591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1496947,"avatar":"","nickname":"Geek_c6fcb1","note":"","ucode":"2AF220F3D8C53F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385075,"discussion_content":"1、动静分离说的是数据，不是单指页面，我纯后端也可以做动静分离嘛。\n2、你说的商家产生缓存是一种主动的形式，还有对应的被动形式。你的主动形式做超级公用的数据缓存是可以的，但只要加入一点定制数据流不行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626870287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1263932,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","nickname":"静静聆听","note":"","ucode":"0A8600CB928EFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338908,"discussion_content":"老师说的应该是淘宝10年时候的方案，现在这些方案肯定是不适用的，只能参考了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609416278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300043,"discussion_content":"前后端分离与动静区别很大把。我的理解是动静区别是是否要请求后端才能拿到数据。把静态数据缓存化，那么点击秒杀时就不用再去请求静态数据，再秒杀这些。老师给了思路，具体怎么做，还是不懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597917499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1214951,"avatar":"https://static001.geekbang.org/account/avatar/00/12/89/e7/eae1a2cc.jpg","nickname":"dwz","note":"","ucode":"46041F26EDE2EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355273,"discussion_content":"我也是你这样认为的，目前前端页面都是放CDN，但一个页面中有些配置数据，这些数据也就是静态数据，那么对于秒杀来看就应该放在CDN上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615391599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300043,"ip_address":""},"score":355273,"extra":""}]},{"author":{"id":1085152,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8e/e0/847348b1.jpg","nickname":"爱学习的大叔","note":"","ucode":"91F9ABF1EC98D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261802,"discussion_content":"现在前后端分离是标配了，但是真正实现起来还是有好多技术细节的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589008024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1289318,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ac/66/a256008b.jpg","nickname":"SuperDai","note":"","ucode":"0CA86D253754CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14936,"discussion_content":"并不是每个人都像您这么大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568790195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1356664,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b3/78/a335089a.jpg","nickname":"Diane__Yan","note":"","ucode":"B071258BC7AE87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4341,"discussion_content":"不能再同意啦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565322426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34780,"user_name":"J.M.Liu","can_delete":false,"product_type":"c1","uid":1200037,"ip_address":"","ucode":"B2CB84B8E923A6","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/a5/71358d7b.jpg","comment_is_top":false,"comment_ctime":1540298642,"is_pvip":false,"replies":[{"id":"12629","content":"举个栗子，假如三次访问同一个商品，cache分别有3组，那么如果这3次访问都分别访问不同的3组cache那么是不是3次都没命中。如果只是一组cache的话，那么除了第一次没有命中外，后面两次就命中了。所以cache分组对命中率是不是有影响了。","user_name":"作者回复","comment_id":34780,"uid":"1253339","ip_address":"","utype":1,"ctime":1540630454,"user_name_real":"君山"}],"discussion_count":8,"race_medal":0,"score":"117504415634","product_id":100017501,"comment_content":"Hash 分组越少，缓存的命中率肯定就会越高，但短板是也会使单个商品集中在一个分组中，容易导致 Cache 被击穿，所以我们应该适当增加多个相同的分组，来平衡访问热点和命中率的问题。<br><br>老师，我也不是很明白hash分组的多少和命中率之间的关系。命中率不是只和热点数据是否被缓存有关吗，为什么和分组的多少也有关系啊？还有您说的cache分散是什么概念啊？这个问题好像很多人都问到了，看来很多人都不明白，希望老师可以比较详细地解答一下，谢谢老师。","like_count":27,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427335,"discussion_content":"举个栗子，假如三次访问同一个商品，cache分别有3组，那么如果这3次访问都分别访问不同的3组cache那么是不是3次都没命中。如果只是一组cache的话，那么除了第一次没有命中外，后面两次就命中了。所以cache分组对命中率是不是有影响了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540630454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085549,"avatar":"https://static001.geekbang.org/account/avatar/00/10/90/6d/ce080709.jpg","nickname":"刘彬","note":"","ucode":"F0547F4A568E31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16112,"discussion_content":"我认为cache的分组应该是cache高可用性的一个feature，对应用应该是透明的，也就是说，这3组cache的数据应该自动进行同步，而不是每一个cache没有命中后再写入缓存。当然在基础设施没有如此完善的时候，应用的架构师需要去考虑这个问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568871671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257418,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ca/cbce6e94.jpg","nickname":"梦想的优惠券","note":"","ucode":"D3B44F6C618CA7","race_medal":4,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374540,"discussion_content":"我的理解，就是备份","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621238584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1481811,"avatar":"https://static001.geekbang.org/account/avatar/00/16/9c/53/ade0afb0.jpg","nickname":"ub8","note":"","ucode":"0D937C3EAEB781","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":118573,"discussion_content":"蒙B了，感觉回到上个世纪","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578154643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1590953,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/a9/70fa676f.jpg","nickname":"Luke","note":"","ucode":"2C8A1FAB8B6301","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321286,"discussion_content":"秒杀系统为什么会出新第一次访问不命中的情况呢，难道不是秒杀前会将相关数据主动刷进cache吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604559631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1486601,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL2dAokNdibVZvaBwpQ8ZJ9DDZtAoIKvW32YpdK499WpjpmJiakLCxvn5fX5MNIlehiaibRX4IgSuwckw/132","nickname":"Dawn","note":"","ucode":"8764B8812E5FF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297523,"discussion_content":"cache的hash分组是怎么做的呢，通过一致性hash吗，如果通过一致性hash，同一个商品不应该到同一个分组吗，怎么会存在同一个商品请求到三个分组的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596959524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1214951,"avatar":"https://static001.geekbang.org/account/avatar/00/12/89/e7/eae1a2cc.jpg","nickname":"dwz","note":"","ucode":"46041F26EDE2EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1486601,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL2dAokNdibVZvaBwpQ8ZJ9DDZtAoIKvW32YpdK499WpjpmJiakLCxvn5fX5MNIlehiaibRX4IgSuwckw/132","nickname":"Dawn","note":"","ucode":"8764B8812E5FF8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355276,"discussion_content":"对，我也想不通，为啥会到三个分组里面去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615391734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297523,"ip_address":""},"score":355276,"extra":""}]},{"author":{"id":1085152,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8e/e0/847348b1.jpg","nickname":"爱学习的大叔","note":"","ucode":"91F9ABF1EC98D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261809,"discussion_content":"如果能解决缓存同步的问题，那么分组无疑是很棒的方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589008445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38502,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1542068769,"is_pvip":false,"replies":[{"id":"14452","content":"抽象总结能力很强😉","user_name":"作者回复","comment_id":38502,"uid":"1253339","ip_address":"","utype":1,"ctime":1542528310,"user_name_real":"君山"}],"discussion_count":2,"race_medal":0,"score":"87441414689","product_id":100017501,"comment_content":"动静分离的思想暗含着，分而治之和重点把控变化的思维。<br>分而治之-几乎所有不能直接解决的问题，都会分割开来，直到比较容易解决为止，学习也类似，把不能理解的知识作分割，直到比较容易理解<br>把控变化-管理或者研究事物发展的趋势，就需要重点关注和把控变化的情况，静态的容易处理，所以，变化的就对整体起到了决定性的作用<br><br>对于编程缓存是提高性能的杀手锏，静态资源自然是越靠前越好，动态资源也是越靠前越好，但是需要注意处理好变化的一致性问题","like_count":21,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428724,"discussion_content":"抽象总结能力很强😉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542528310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374030,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620976298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29551,"user_name":"阿毛","can_delete":false,"product_type":"c1","uid":1221386,"ip_address":"","ucode":"356F1FF2B56372","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/0a/0f681189.jpg","comment_is_top":false,"comment_ctime":1538419256,"is_pvip":false,"replies":[{"id":"10661","content":"因为时间要以服务端为准，客户端的时间用户可以自己修改","user_name":"作者回复","comment_id":29551,"uid":"1253339","ip_address":"","utype":1,"ctime":1538476130,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"74552863288","product_id":100017501,"comment_content":"分离时间因素。服务端输出的时间也通过动态请求获取。<br><br>这里的时间为什么也要动态请求呢?","like_count":17,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425657,"discussion_content":"因为时间要以服务端为准，客户端的时间用户可以自己修改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538476130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37844,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1541747946,"is_pvip":false,"replies":[{"id":"14459","content":"只要你想学一定能找到机会，至于如何向别人学习，最简单的一个办法，多和那个同学吃吃饭，一回生二回熟😊","user_name":"作者回复","comment_id":37844,"uid":"1253339","ip_address":"","utype":1,"ctime":1542528998,"user_name_real":"君山"}],"discussion_count":3,"race_medal":0,"score":"70261224682","product_id":100017501,"comment_content":"老师对于目前而言，你讲的架构方面，比如CDN、Nginx这些对于目前我的工作内容而言，涉及不到，哪怕上个新项目，我只要向运维申请机器，其他的不管，也没机会管，那么我如何快速的补充的这些东西，因为上面的讲的内容，可能对于我而言太空洞，应该如何避免？","like_count":16,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428500,"discussion_content":"只要你想学一定能找到机会，至于如何向别人学习，最简单的一个办法，多和那个同学吃吃饭，一回生二回熟😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542528998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1289318,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ac/66/a256008b.jpg","nickname":"SuperDai","note":"","ucode":"0CA86D253754CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14934,"discussion_content":"Nginx还是很有必要学习下的，就像数据库有DBA，那我们为什么还要掌握甚至精通一个道理","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1568789978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085152,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8e/e0/847348b1.jpg","nickname":"爱学习的大叔","note":"","ucode":"91F9ABF1EC98D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261810,"discussion_content":"算法和数据结构学完了以后准备学习啊Nginx","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589008564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29911,"user_name":"嚴脂红.*","can_delete":false,"product_type":"c1","uid":1017900,"ip_address":"","ucode":"D27D807AA334E4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/2c/87861bb1.jpg","comment_is_top":false,"comment_ctime":1538588887,"is_pvip":true,"replies":[{"id":"11688","content":"Viso就行啊","user_name":"作者回复","comment_id":29911,"uid":"1253339","ip_address":"","utype":1,"ctime":1539497172,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"65963098327","product_id":100017501,"comment_content":"我想知道老师用的配图都是用什么软件做的呢？","like_count":15,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425776,"discussion_content":"Viso就行啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539497172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29889,"user_name":"Rosso","can_delete":false,"product_type":"c1","uid":1259309,"ip_address":"","ucode":"28845E04A77B0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/2d/822fed5b.jpg","comment_is_top":false,"comment_ctime":1538581017,"is_pvip":false,"replies":[{"id":"10765","content":"二级cache是指cdn设置了多级回源机制，就是如果缓存没有命中再到二级缓存中去取，而不是直接回服务端来请求<br>本质是减少回原的请求量","user_name":"作者回复","comment_id":29889,"uid":"1253339","ip_address":"","utype":1,"ctime":1538619788,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"57373155865","product_id":100017501,"comment_content":"CDN二级cache缓存是一个什么概念？是一个CDN上的术语么？百度了一下没怎么查到","like_count":13,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425760,"discussion_content":"二级cache是指cdn设置了多级回源机制，就是如果缓存没有命中再到二级缓存中去取，而不是直接回服务端来请求\n本质是减少回原的请求量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538619788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34163,"user_name":"Hana","can_delete":false,"product_type":"c1","uid":1233257,"ip_address":"","ucode":"F434131F5A0EFC","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/69/07239d3c.jpg","comment_is_top":false,"comment_ctime":1540025664,"is_pvip":false,"replies":[{"id":"12221","content":"动态数据在服务端合成是通过一种叫ESI的技术实现的，例如&lt;esi:src=&quot;xx.htm&quot;&#47;&gt;在静态页面中包含这种标签，然后由varnish等软件来解析这种标签，再发起动态请求，把动态请求的结果合成到静态页面中，最终形成一个完整的页面<br><br>服务端生成json格式的目的本身是方便让前端页面渲染时容易使用这些数据。可以把这些json数据在服务端合成一起输出，也可以在浏览器里单独发一个ajax请求再异步获取都可以","user_name":"作者回复","comment_id":34163,"uid":"1253339","ip_address":"","utype":1,"ctime":1540093310,"user_name_real":"君山"}],"discussion_count":2,"race_medal":0,"score":"40194731328","product_id":100017501,"comment_content":"对于浏览器端的动静分离，疑问<br>问题一：动静数据在服务器端合成的话，是用什么怎么合成的？<br><br>而对于app原生开发的话<br>问题二：商品详情返回动静数据都是json格式的，那么在服务端如何合成呢？还是只能前段来分开请求合成？","like_count":9,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427140,"discussion_content":"动态数据在服务端合成是通过一种叫ESI的技术实现的，例如&amp;lt;esi:src=&amp;quot;xx.htm&amp;quot;/&amp;gt;在静态页面中包含这种标签，然后由varnish等软件来解析这种标签，再发起动态请求，把动态请求的结果合成到静态页面中，最终形成一个完整的页面\n\n服务端生成json格式的目的本身是方便让前端页面渲染时容易使用这些数据。可以把这些json数据在服务端合成一起输出，也可以在浏览器里单独发一个ajax请求再异步获取都可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540093310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374031,"discussion_content":"是占位符呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620976430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149356,"user_name":"星一","can_delete":false,"product_type":"c1","uid":1103829,"ip_address":"","ucode":"EF550131FAE1BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/d5/6fbf1070.jpg","comment_is_top":false,"comment_ctime":1573200929,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27343004705","product_id":100017501,"comment_content":"我居然看不下去了，感觉很多地方都没有解释明白","like_count":5},{"had_liked":false,"id":29672,"user_name":"A星空之夜","can_delete":false,"product_type":"c1","uid":1110974,"ip_address":"","ucode":"E99D61B7827532","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/be/d8ba00d5.jpg","comment_is_top":false,"comment_ctime":1538479420,"is_pvip":false,"replies":[{"id":"10768","content":"理论上都可以，各有优缺点，秒杀推荐在客户端做，普通的商品推荐在服务端做","user_name":"作者回复","comment_id":29672,"uid":"1253339","ip_address":"","utype":1,"ctime":1538620364,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"27308283196","product_id":100017501,"comment_content":"方案一和方案二中静态页面和动态资源的组装完整页面是在服务端吗？","like_count":6,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425684,"discussion_content":"理论上都可以，各有优缺点，秒杀推荐在客户端做，普通的商品推荐在服务端做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538620364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114723,"user_name":"杨晓维","can_delete":false,"product_type":"c1","uid":1434854,"ip_address":"","ucode":"4B657DD4A1E2C4","user_header":"https://static001.geekbang.org/account/avatar/00/15/e4/e6/5795b1aa.jpg","comment_is_top":false,"comment_ctime":1563370735,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23038207215","product_id":100017501,"comment_content":"所以到这边还没有用到Redis吗？","like_count":5,"discussions":[{"author":{"id":2307316,"avatar":"","nickname":"宋兰兰","note":"","ucode":"D12863D5EC8B93","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324682,"discussion_content":"cdn是缓存静态数据，提升前端访问速度。redis是k-value内存数据库，主要缓存动态数据，提升后端服务的数据获取速度","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605151620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374032,"discussion_content":"最好先不要直接干到具体方案和工具，先理解思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620976490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29586,"user_name":"sgl","can_delete":false,"product_type":"c1","uid":1252243,"ip_address":"","ucode":"D73875BA22954F","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/93/e3b44969.jpg","comment_is_top":false,"comment_ctime":1538447823,"is_pvip":false,"replies":[{"id":"10774","content":"Cache层是web缓存可以直接缓存http请求，例如varnish<br><br>另外一个缓存就是redis这种","user_name":"作者回复","comment_id":29586,"uid":"1253339","ip_address":"","utype":1,"ctime":1538621779,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"18718317007","product_id":100017501,"comment_content":"想问一下，方案一和方案二里的cahe层，还有一个缓存，缓存是什么？","like_count":4,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425665,"discussion_content":"Cache层是web缓存可以直接缓存http请求，例如varnish\n\n另外一个缓存就是redis这种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538621779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36756,"user_name":"他城之途","can_delete":false,"product_type":"c1","uid":1241716,"ip_address":"","ucode":"EC5659F234120C","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/74/36a86f4b.jpg","comment_is_top":false,"comment_ctime":1541309325,"is_pvip":false,"replies":[{"id":"14467","content":"😉，在单独的qa文章中有介绍","user_name":"作者回复","comment_id":36756,"uid":"1253339","ip_address":"","utype":1,"ctime":1542529792,"user_name_real":"君山"}],"discussion_count":3,"race_medal":0,"score":"14426211213","product_id":100017501,"comment_content":"看评论，很多人被老师的“缓存命中率”整懵了，我觉得老师把“命中率”改成“利用率”可能会更好避免误解，老师的意思是分组多了，单个分组的“利用率”就低了。但在很多人的概念里，“命中率”是指缓存打中率，跟第一次和失效有关。","like_count":4,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428001,"discussion_content":"😉，在单独的qa文章中有介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542529792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004299,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/0b/133c0955.jpg","nickname":"多弗哥","note":"","ucode":"6E85B33424BFE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320131,"discussion_content":"不会啊，很好理解啊，分布式环境下Hash分组多了命中率自然下来了，不都这样么","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604256747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000060,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","nickname":"🄽🄸🅇🅄🅂","note":"","ucode":"853763C229A5AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1542,"discussion_content":"非常感谢, 一直很困惑这个命中率究竟是什么, 阅读中联想到的是导弹击中目标了, 就是命中了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562679993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29700,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1538491074,"is_pvip":false,"replies":[{"id":"10771","content":"失效需要一个失效系统来实现，一般有主动失效和被动失效<br>主动失效需要监控数据库数据的变化然后转成消息来发送失效消息，这个实现比较复杂，阿里有个系统叫metaq，大家可以去网上查查<br><br>被动失效就是只缓存固定时间，然后到期后自动失效","user_name":"作者回复","comment_id":29700,"uid":"1253339","ip_address":"","utype":1,"ctime":1538620877,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"14423392962","product_id":100017501,"comment_content":"缓存失效了怎么办呢？文中没有给出答案，请指导一下。","like_count":3,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425691,"discussion_content":"失效需要一个失效系统来实现，一般有主动失效和被动失效\n主动失效需要监控数据库数据的变化然后转成消息来发送失效消息，这个实现比较复杂，阿里有个系统叫metaq，大家可以去网上查查\n\n被动失效就是只缓存固定时间，然后到期后自动失效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538620877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29595,"user_name":"缪文","can_delete":false,"product_type":"c1","uid":1042262,"ip_address":"","ucode":"59603B50EF5FC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/56/c72997f3.jpg","comment_is_top":false,"comment_ctime":1538449148,"is_pvip":false,"replies":[{"id":"10659","content":"统一cache层的缓存是web型的缓存，如varnish<br><br>缓存单点是通过hash分组，即多个分组缓存一样的内容<br><br>Hash分组是通过nginx完成的，一个分组的机器配在nginx的stream里<br><br>","user_name":"作者回复","comment_id":29595,"uid":"1253339","ip_address":"","utype":1,"ctime":1538475872,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"14423351036","product_id":100017501,"comment_content":"统一cache层，就是类似于redis或者阿里的tair这样的中间件吧？缓存单点怎么解决的？同一个商品的缓存再怎么hash都是落到同一个tair节点的","like_count":3,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425669,"discussion_content":"统一cache层的缓存是web型的缓存，如varnish\n\n缓存单点是通过hash分组，即多个分组缓存一样的内容\n\nHash分组是通过nginx完成的，一个分组的机器配在nginx的stream里\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538475872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262671,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1605798714,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"10195733306","product_id":100017501,"comment_content":"即使不做秒杀系统，也需要做动静分离，但是秒杀系统可能需要把动静分离做到极致。<br><br>动静的差别主要是看数据中是否含有和访问者相关的个性化数据，更具体的说就是看，页面的 HTML 源码中是否含有个性化数据。<br><br>文中讲的三种动静分离架构方案，似乎的确有时间的影子，但是即使现在也不是每个秒杀系统都需要上 CDN 的，也可能是大家都被云厂商“惯坏了”。<br><br>没有做过秒杀系统，很多内容看的也不是很明白，抱着虚心学习的心态。看到留言里面不少“大佬”吐槽，有点好奇。按照资历和经验来看，国内能够超过作者的人可能并不多，但是似乎都自我感觉良好。<br><br>其实专栏的主旨并不是手把手教你搭建一个秒杀系统，而是讲秒杀系统的或者说类似的高并发、高性能、数据一致性的系统的设计思路。","like_count":3},{"had_liked":false,"id":64543,"user_name":"小野","can_delete":false,"product_type":"c1","uid":1314970,"ip_address":"","ucode":"3DF58AA2AB226C","user_header":"https://static001.geekbang.org/account/avatar/00/14/10/9a/1e69d930.jpg","comment_is_top":false,"comment_ctime":1548818056,"is_pvip":false,"replies":[{"id":"23145","content":"正常情况下，你的理解是对的<br>这里说的问题是，如果一个key访问量过大，到导致单台的cache实例支持不了这么大的访问，从而导致cache失效，然后在把流量直接打到后端服务的情况","user_name":"作者回复","comment_id":64543,"uid":"1253339","ip_address":"","utype":1,"ctime":1549164731,"user_name_real":"君山"}],"discussion_count":3,"race_medal":0,"score":"10138752648","product_id":100017501,"comment_content":"Cache分组越多，命中率越低能理解。为什么分组越少越容易Cache被击穿呢。按我个人理解，Cache击穿就是同一个Key同一时间大量并发请求因为Cache中没有，都请求到后端系统去了。分组越多还是一样都击穿到后端系统去了啊","like_count":2,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438059,"discussion_content":"正常情况下，你的理解是对的\n这里说的问题是，如果一个key访问量过大，到导致单台的cache实例支持不了这么大的访问，从而导致cache失效，然后在把流量直接打到后端服务的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549164731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061306,"avatar":"https://static001.geekbang.org/account/avatar/00/10/31/ba/35b3b16c.jpg","nickname":"Marsman","note":"","ucode":"A108E7A0A59FAC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374960,"discussion_content":"击穿 vs 穿透， 是两个不同的概念， 楼主说的是穿透（缓存没命中，要到DB去拿），老师说的是击穿，分组越少，单个cache要承担的请求就越多，而cache单机的容量上限达到了，应用层就会直接去DB拿，这说的是cache被“击穿”了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621420512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374034,"discussion_content":"这里说的是流量集中程度，因为分组越少流量集中度越高，就越容易击穿，反之分组多了，流量没那么集中了，击穿的可能性会降低。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620976725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63081,"user_name":"🐻两脚兽จุ๊บ。","can_delete":false,"product_type":"c1","uid":1066471,"ip_address":"","ucode":"00D171AB21E041","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/e7/df079023.jpg","comment_is_top":false,"comment_ctime":1548246509,"is_pvip":false,"replies":[{"id":"23140","content":"多个虚拟机实际上就是共用一个实体机，所以每个虚拟机能用的资源就是少一些，因为每个虚拟机会竞争整个实体机的资源，例如网络和内存。所以单个实例来讲虚拟机和实体机能用的资源还是有很大差异的","user_name":"作者回复","comment_id":63081,"uid":"1253339","ip_address":"","utype":1,"ctime":1549163254,"user_name_real":"君山"}],"discussion_count":3,"race_medal":0,"score":"10138181101","product_id":100017501,"comment_content":"许大大你好. 今天看了您这篇动静分离的干货, 受益匪浅. 想请教个问题. 方案1里面提到的把通常只需要虚拟机或者容器运行的 Java 应用换成实体机, 并且列出了实体机的几个优点. 这里面还是不大懂实体机相对于虚拟机为什么会存在这些差异. 我认为的是: 虚拟机只不过是实体机通过vps软件虚拟化出来的服务器而已, 同等配置的虚拟机跟实体机本质上没什么差别, 为什么会有网络瓶颈, 甚至大内存差别??? 希望得到徐老师的回复.谢谢","like_count":3,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437462,"discussion_content":"多个虚拟机实际上就是共用一个实体机，所以每个虚拟机能用的资源就是少一些，因为每个虚拟机会竞争整个实体机的资源，例如网络和内存。所以单个实例来讲虚拟机和实体机能用的资源还是有很大差异的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549163254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374035,"discussion_content":"看来只有无物理隔离才能真正做到资源的隔离，用软件做的隔离还是会存在竞争问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620976814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004299,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/0b/133c0955.jpg","nickname":"多弗哥","note":"","ucode":"6E85B33424BFE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320132,"discussion_content":"你可以问运维啊，虚拟机和实体机差别大了，硬件资源很大很大，用虚拟技术做容器部署时，容器运行是要竞争资源的，当然有瓶颈了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604257134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30770,"user_name":"func","can_delete":false,"product_type":"c1","uid":1254534,"ip_address":"","ucode":"481018617F42D8","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/86/6069f169.jpg","comment_is_top":false,"comment_ctime":1538992859,"is_pvip":false,"replies":[{"id":"11192","content":"主要是性能和稳定性考虑","user_name":"作者回复","comment_id":30770,"uid":"1253339","ip_address":"","utype":1,"ctime":1539084935,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"10128927451","product_id":100017501,"comment_content":"许老师，架构图中的cache 是通过Varnish缓存的精通数据吗？nginx 也可以实现  为什么要单独加一层这个呢？","like_count":2,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426088,"discussion_content":"主要是性能和稳定性考虑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539084935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30768,"user_name":"func","can_delete":false,"product_type":"c1","uid":1254534,"ip_address":"","ucode":"481018617F42D8","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/86/6069f169.jpg","comment_is_top":false,"comment_ctime":1538992233,"is_pvip":false,"replies":[{"id":"11193","content":"你可以了解一下varnish的原理","user_name":"作者回复","comment_id":30768,"uid":"1253339","ip_address":"","utype":1,"ctime":1539085013,"user_name_real":"君山"}],"discussion_count":1,"race_medal":0,"score":"10128926825","product_id":100017501,"comment_content":"没明白老师数的这个意思指的是？Cache层是web缓存可以直接缓存http请求，例如varnish？web缓存，缓存http请求？缓存的是请求后返回的数据？如果是同一个http请求就不会走到 redis cache了？","like_count":2,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426086,"discussion_content":"你可以了解一下varnish的原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539085013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89200,"user_name":"~~","can_delete":false,"product_type":"c1","uid":1440024,"ip_address":"","ucode":"4E316822CD8382","user_header":"https://static001.geekbang.org/account/avatar/00/15/f9/18/653a2daa.jpg","comment_is_top":false,"comment_ctime":1556104013,"is_pvip":false,"replies":[{"id":"34289","content":"就是一个大的cache，存放了不同的内容，可以调整存的比例","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1558246211,"ip_address":"","comment_id":89200,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851071309","product_id":100017501,"comment_content":"老师您好,我想请问统一Cache中所说到的: 不同系统之间的内存可以动态切换,具体是指什么情况呢?","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448051,"discussion_content":"就是一个大的cache，存放了不同的内容，可以调整存的比例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558246211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75852,"user_name":"威猛小茂然","can_delete":false,"product_type":"c1","uid":1196929,"ip_address":"","ucode":"E4E9B1ED9021C0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJTA5BZT4zapBbpHctcDGs2M9NFIkwEWXoicUwBsmCZSRlNzGI7NYXicZAOibLKVyE2u7ib8PuibXibel9g/132","comment_is_top":false,"comment_ctime":1552481682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5847448978","product_id":100017501,"comment_content":"写的挺不错的","like_count":1},{"had_liked":false,"id":69376,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1550730593,"is_pvip":false,"replies":[{"id":"26125","content":"🙂","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1551525671,"ip_address":"","comment_id":69376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5845697889","product_id":100017501,"comment_content":"最近面试经常问道如何设计一个秒杀系统,感觉这个专栏不适合面试,适合实操","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440088,"discussion_content":"🙂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551525671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67117,"user_name":"Do","can_delete":false,"product_type":"c1","uid":1313480,"ip_address":"","ucode":"EA11EBD6439D1B","user_header":"https://static001.geekbang.org/account/avatar/00/14/0a/c8/dae4a360.jpg","comment_is_top":false,"comment_ctime":1550076019,"is_pvip":false,"replies":[{"id":"26115","content":"淘宝的sku算是动态数据，商品的URL不会变的。","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1551524309,"ip_address":"","comment_id":67117,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5845043315","product_id":100017501,"comment_content":"你好，请问下，以淘宝的商品详情页面为例，那么详情页的sku部分算是动态数据还是静态数据呢？淘宝这边是否允许改变商品的sku呢，允许的话是不是改变后会重新静态化然后页面url不会改变，还是页面会新生成个url?","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439062,"discussion_content":"淘宝的sku算是动态数据，商品的URL不会变的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551524309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61772,"user_name":"黄欢","can_delete":false,"product_type":"c1","uid":1367556,"ip_address":"","ucode":"21EF1FF55CBA14","user_header":"https://static001.geekbang.org/account/avatar/00/14/de/04/60620ce7.jpg","comment_is_top":false,"comment_ctime":1547797248,"is_pvip":false,"replies":[{"id":"21992","content":"一致性hash可以让相同的请求落在同一台机器上，这样就可以提升cache的命中率了，也可以看看第8节我专门解释了这个问题","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1547978424,"ip_address":"","comment_id":61772,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842764544","product_id":100017501,"comment_content":"请问一致性Hash和提高命中率有什么关系？","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436986,"discussion_content":"一致性hash可以让相同的请求落在同一台机器上，这样就可以提升cache的命中率了，也可以看看第8节我专门解释了这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547978424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54534,"user_name":"Y.P.C","can_delete":false,"product_type":"c1","uid":1303055,"ip_address":"","ucode":"0496F78739B044","user_header":"https://static001.geekbang.org/account/avatar/00/13/e2/0f/274e12bf.jpg","comment_is_top":false,"comment_ctime":1545893281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5840860577","product_id":100017501,"comment_content":"请问你所说的缓存http连接是只缓存这个url对应的页面吗？麻烦老师举例说明下","like_count":1},{"had_liked":false,"id":49143,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1544610497,"is_pvip":false,"replies":[{"id":"19640","content":"原理上差不多吧，只不过我说的varnish当时还没有集群分组的功能，所以需要自己设计hash分组","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1545824661,"ip_address":"","comment_id":49143,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839577793","product_id":100017501,"comment_content":"要解决上面这些问题，可以再对 Cache 做 Hash 分组，即一组 Cache 缓存的内容相同，这样能够避免热点数据过度集中导致新的瓶颈产生。<br><br><br>不太理解  如果使用了redis  cluster  利用它自带的hash分组策略可以吧    还需要自己实现hash分组策略？","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432500,"discussion_content":"原理上差不多吧，只不过我说的varnish当时还没有集群分组的功能，所以需要自己设计hash分组","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545824661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35515,"user_name":"rice","can_delete":false,"product_type":"c1","uid":1072435,"ip_address":"","ucode":"5D61CA5902E04A","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/33/378c0740.jpg","comment_is_top":false,"comment_ctime":1540634117,"is_pvip":false,"replies":[{"id":"12648","content":"一般情况下，有多级缓存的话，都是二级缓存的节点数少一点，这样能提升二级缓存的命中率。<br><br>选一级缓存也是为了提升命中率","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1540719388,"ip_address":"","comment_id":35515,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5835601413","product_id":100017501,"comment_content":"关于商品详情页缓存在cdn，为何cdn二级缓存的节点少呢？为何不是cdn一级缓存？","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427560,"discussion_content":"一般情况下，有多级缓存的话，都是二级缓存的节点数少一点，这样能提升二级缓存的命中率。\n\n选一级缓存也是为了提升命中率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540719388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34159,"user_name":"Hana","can_delete":false,"product_type":"c1","uid":1233257,"ip_address":"","ucode":"F434131F5A0EFC","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/69/07239d3c.jpg","comment_is_top":false,"comment_ctime":1540024669,"is_pvip":false,"replies":[{"id":"12222","content":"在app里缓存静态数据当然也可以，app本身也提供缓存数据的机制","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1540093395,"ip_address":"","comment_id":34159,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834991965","product_id":100017501,"comment_content":"老师，您从一开始的假设都是客户端是浏览器端 即web端，但是现在很多情况都是开发原生app端，那么这些内容里的有些静态数据缓存在客户端上这个也成立么？以及一些相关的假设","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427139,"discussion_content":"在app里缓存静态数据当然也可以，app本身也提供缓存数据的机制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540093395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31097,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1539089433,"is_pvip":true,"replies":[{"id":"11667","content":"是的<br>用nginx对请求进行路由，让商品固定的落到固定的分组里，增加缓存命中率","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1539495123,"ip_address":"","comment_id":31097,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834056729","product_id":100017501,"comment_content":"说的缓存分组是在nginx中对于缓存节点的分组吗1或者叫机器？？？","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426228,"discussion_content":"是的\n用nginx对请求进行路由，让商品固定的落到固定的分组里，增加缓存命中率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539495123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30975,"user_name":"GrubbyLu","can_delete":false,"product_type":"c1","uid":1063483,"ip_address":"","ucode":"1B471210A668EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/3b/3a6efa8f.jpg","comment_is_top":false,"comment_ctime":1539055704,"is_pvip":false,"replies":[{"id":"11187","content":"Nginx做负载均衡，cache缓存静态数据","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1539084455,"ip_address":"","comment_id":30975,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834023000","product_id":100017501,"comment_content":"许老师问下，方案一和方案二中nginx的7层代理，是只用来做负载均衡，而不进行数据缓存嘛？如果缓存数据，是缓存什么数据呢？  还是只有分布式Cache层才进行真正的静态数据缓存？望解答多谢","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426167,"discussion_content":"Nginx做负载均衡，cache缓存静态数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539084455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29671,"user_name":"A星空之夜","can_delete":false,"product_type":"c1","uid":1110974,"ip_address":"","ucode":"E99D61B7827532","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/be/d8ba00d5.jpg","comment_is_top":false,"comment_ctime":1538478214,"is_pvip":false,"replies":[{"id":"10772","content":"Hash是在nginx上根据url来实现hash分组","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1538621585,"ip_address":"","comment_id":29671,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833445510","product_id":100017501,"comment_content":"在方案二中，提到的“ 对 Cache 做 Hash 分组，即一组 Cache 缓存的内容相同” 这个hash分组是在根据什么hash的以及是在nginx层分析的吗？","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425683,"discussion_content":"Hash是在nginx上根据url来实现hash分组","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538621585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29554,"user_name":"cyflhn","can_delete":false,"product_type":"c1","uid":1156058,"ip_address":"","ucode":"0D4E51B2C9FCAD","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/da/dffe997b.jpg","comment_is_top":false,"comment_ctime":1538437973,"is_pvip":false,"replies":[{"id":"10660","content":"如果页面都是动态内容，那缓存的意义不大了，像秒杀这种即使是动态内容也可以缓存几秒来挡掉一部分流量","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1538476053,"ip_address":"","comment_id":29554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833405269","product_id":100017501,"comment_content":"列表页的缓存一直是我们一个比较头疼的问题，比如商品列表页很难缓存，因为失效的问题很难处理，记得之前你建议使用esi,但是个人觉得对目前的项目改动较大，要对现有的动态页面进行动静分离，而且如果动态部分不能缓存，其实静态化意义也不大了，因为还是有大量请求回源","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425659,"discussion_content":"如果页面都是动态内容，那缓存的意义不大了，像秒杀这种即使是动态内容也可以缓存几秒来挡掉一部分流量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538476053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341448,"user_name":"Geek_5e3dd1","can_delete":false,"product_type":"c1","uid":2950644,"ip_address":"","ucode":"5849154880BB8C","user_header":"","comment_is_top":false,"comment_ctime":1649634648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649634648","product_id":100017501,"comment_content":"不用cdn的话，服务器带宽会耗尽吧。","like_count":0},{"had_liked":false,"id":337361,"user_name":"李先森","can_delete":false,"product_type":"c1","uid":1141462,"ip_address":"","ucode":"5295B696987630","user_header":"https://static001.geekbang.org/account/avatar/00/11/6a/d6/2efae56a.jpg","comment_is_top":false,"comment_ctime":1646790430,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646790430","product_id":100017501,"comment_content":"方案一和二的LVS和nginx分别用的什么负载均衡策略，哪个用的一致性hash哪个是根据url hash？一致性hash根据用户id还是url？方案一不同物理机是否在一个集群？从A机器接入的请求被nginx路由到B机器做访问岂不是A和B之间也有流量？建议老师把方案简单讲解一下，小白表示最近两篇的图都有些疑惑","like_count":1},{"had_liked":false,"id":247500,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1599727446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599727446","product_id":100017501,"comment_content":"“详情页面上与地域相关的因素做成异步方式获取，当然你也可以通过动态请求方式获取，只是这里通过异步获取更合适”，这其中异步方式获取和动态请求获取有什么区别？感觉是一样的","like_count":0},{"had_liked":false,"id":221234,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1590453690,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590453690","product_id":100017501,"comment_content":"你说的浏览器缓存整个页面的做法是在头里面增加缓存吗","like_count":0},{"had_liked":false,"id":198811,"user_name":"远鹏","can_delete":false,"product_type":"c1","uid":1110723,"ip_address":"","ucode":"37B06413D88BEC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/c3/f18e4507.jpg","comment_is_top":false,"comment_ctime":1585469008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585469008","product_id":100017501,"comment_content":"讲的很不错  在合适的时间选择合适的架构很重要","like_count":0},{"had_liked":false,"id":192076,"user_name":"Mango","can_delete":false,"product_type":"c1","uid":1734886,"ip_address":"","ucode":"EC2D20BD322E22","user_header":"","comment_is_top":false,"comment_ctime":1584836899,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584836899","product_id":100017501,"comment_content":"尽量把动静分离，为系统腾出内存和CPU","like_count":0},{"had_liked":false,"id":172199,"user_name":"miniluo","can_delete":false,"product_type":"c1","uid":1397339,"ip_address":"","ucode":"5735B6DEE7902B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/FheCgo4Ovibo0L1vAGgMdZkzQMm1GUMHMMqQ8aglufXaD2hW9z96DjQicAam723jOCZwXVmiaNiaaq4PLsf4COibZ5A/132","comment_is_top":false,"comment_ctime":1579130743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579130743","product_id":100017501,"comment_content":"老师，有一点不明白。如果用hash(暂且考虑固定缓存组数量)，怎么会三次访问的同一个商品会存在不命中的情况呢？","like_count":0},{"had_liked":false,"id":150253,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1573485020,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1573485020","product_id":100017501,"comment_content":"老师请问：现在都是前后端分离， 动态数据，静态数据还用考虑么？<br> <br>现在项目一般的都用了阿里云的cdn了. <br>至于如何用的不知道...<br><br>缓存现在接触到的是redia缓存.<br><br><br><br>","like_count":0,"discussions":[{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48649,"discussion_content":"打错了。redis","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573518325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145028,"user_name":"..","can_delete":false,"product_type":"c1","uid":1643663,"ip_address":"","ucode":"0F5693BA5A067B","user_header":"https://static001.geekbang.org/account/avatar/00/19/14/8f/a00cdea4.jpg","comment_is_top":false,"comment_ctime":1572165111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572165111","product_id":100017501,"comment_content":"缓存HTTP连接是怎样实现的?没太明白，也就服务端根据ID去缓存中查找对应数据吗？","like_count":0},{"had_liked":false,"id":114724,"user_name":"杨晓维","can_delete":false,"product_type":"c1","uid":1434854,"ip_address":"","ucode":"4B657DD4A1E2C4","user_header":"https://static001.geekbang.org/account/avatar/00/15/e4/e6/5795b1aa.jpg","comment_is_top":false,"comment_ctime":1563370821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563370821","product_id":100017501,"comment_content":"Cache是缓存，具体时间什么实现的？","like_count":0},{"had_liked":false,"id":79183,"user_name":"扬～","can_delete":false,"product_type":"c1","uid":1208163,"ip_address":"","ucode":"6FA7D8FE188341","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/63/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1553396639,"is_pvip":false,"replies":[{"id":"30090","content":"最后一节有回答","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1554532510,"ip_address":"","comment_id":79183,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553396639","product_id":100017501,"comment_content":"在访问cache不是通过hash来找分片吗？为什么说分片分散，命中率下降呢？在cache路由时，不是就能确定数据属于这个分片，至于命中不命中则跟缓存失效时间有关。希望老师能够解答一下命中率这块，谢谢","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444386,"discussion_content":"最后一节有回答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554532510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69348,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1550721771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550721771","product_id":100017501,"comment_content":"判断数据是“动态”还是&quot;静态&quot;&quot;,依据的是数据中是否含有和访问者相关的个性化数据。","like_count":0},{"had_liked":false,"id":68876,"user_name":"jacy","can_delete":false,"product_type":"c1","uid":1103456,"ip_address":"","ucode":"0022A8759DDCE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/60/f21b2164.jpg","comment_is_top":false,"comment_ctime":1550624952,"is_pvip":false,"replies":[{"id":"26121","content":"因为动静资源是在cache层里做的合并的","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1551525343,"ip_address":"","comment_id":68876,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1550624952","product_id":100017501,"comment_content":"老师您好，我有个疑问，图中的线是cache直连的jboss，是不是指每次的动态化资源获取都要经过静态缓存层，为何要做这种操作？","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439859,"discussion_content":"因为动静资源是在cache层里做的合并的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551525343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61245,"user_name":"oTo123","can_delete":false,"product_type":"c1","uid":1071162,"ip_address":"","ucode":"5923128645D816","user_header":"https://static001.geekbang.org/account/avatar/00/10/58/3a/98d6ee8d.jpg","comment_is_top":false,"comment_ctime":1547645478,"is_pvip":false,"replies":[{"id":"22003","content":"秒杀相关的系统还没有用到","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1547981790,"ip_address":"","comment_id":61245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547645478","product_id":100017501,"comment_content":"请问你们有用到openresty吗?","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436802,"discussion_content":"秒杀相关的系统还没有用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547981790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58636,"user_name":"朱四龙","can_delete":false,"product_type":"c1","uid":1159163,"ip_address":"","ucode":"9F26141674A025","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/fb/1a06b64d.jpg","comment_is_top":false,"comment_ctime":1547164556,"is_pvip":false,"replies":[{"id":"22000","content":"阿里已经做过https的改造，我记得是不会直接缓存https的链接，在https只会在网站接入层的最外层，在服务器内部之间仍然是用http协议来做缓存。","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1547981621,"ip_address":"","comment_id":58636,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547164556","product_id":100017501,"comment_content":"URL唯一化，如果是https协议的链接，缓存还生效吗，这里的缓存需要特殊配置吗，还是nginx会自动处理","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436145,"discussion_content":"阿里已经做过https的改造，我记得是不会直接缓存https的链接，在https只会在网站接入层的最外层，在服务器内部之间仍然是用http协议来做缓存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547981621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57869,"user_name":"钱彬彬","can_delete":false,"product_type":"c1","uid":1108171,"ip_address":"","ucode":"218C6814E73C16","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/cb/be4388db.jpg","comment_is_top":false,"comment_ctime":1546932639,"is_pvip":false,"replies":[{"id":"21997","content":"我们早期是用varnish做web代理服务器做cache的，后面阿里自己开发了类似的软件，你可以研究一下varnish的缓存原理。","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1547980803,"ip_address":"","comment_id":57869,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546932639","product_id":100017501,"comment_content":"老师您好，<br>Web 代理服务器根据请求 URL，直接取出对应的 HTTP 响应头和响应体然后直接返回，这个响应体然后直接返回，这个响应过程简单得连 HTTP 协议都不用重新组装，甚至连 HTTP 请求头也不需要解析。<br><br>关于这一段始终不得要领，您说的web代理服务器是nginx吗？，如果是nginx，怎么配置才能达到HTTP 协议都不用重新组装，甚至连 HTTP 请求头也不需要解析的效果。<br><br>请执教，谢谢啦。","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435801,"discussion_content":"我们早期是用varnish做web代理服务器做cache的，后面阿里自己开发了类似的软件，你可以研究一下varnish的缓存原理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547980803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57698,"user_name":"歪头儿在帝都","can_delete":false,"product_type":"c1","uid":1220330,"ip_address":"","ucode":"ADF272E86CDDDB","user_header":"https://static001.geekbang.org/account/avatar/00/12/9e/ea/f556db9a.jpg","comment_is_top":false,"comment_ctime":1546869694,"is_pvip":false,"replies":[{"id":"21996","content":"如果限定一个用户只能秒杀一个商品，那就要在秒杀成功之前校验一下是否已经参加过秒杀了，即检查一下该用户是否已经在已成交列表中了。<br><br>","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1547980467,"ip_address":"","comment_id":57698,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546869694","product_id":100017501,"comment_content":"许老师您好，单个用户怎么控制并发下的重复秒杀，可以在应用层做控制。谢谢","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435708,"discussion_content":"如果限定一个用户只能秒杀一个商品，那就要在秒杀成功之前校验一下是否已经参加过秒杀了，即检查一下该用户是否已经在已成交列表中了。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547980467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53851,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1545741711,"is_pvip":false,"replies":[{"id":"19626","content":"方案1和方案2都是集群模式，区别是方案2把cache层单独抽离出来了，cache和应用分别是两个集群","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1545822001,"ip_address":"","comment_id":53851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545741711","product_id":100017501,"comment_content":"方案1和方案2的图没有看明白啊，图中看不出来是单机部署，还是做了集群啊，求指点，","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434266,"discussion_content":"方案1和方案2都是集群模式，区别是方案2把cache层单独抽离出来了，cache和应用分别是两个集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545822001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46918,"user_name":"我就是我，烟火不一样的我","can_delete":false,"product_type":"c1","uid":1126118,"ip_address":"","ucode":"BB4262C02711D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/e6/9dd5c011.jpg","comment_is_top":false,"comment_ctime":1544001980,"is_pvip":false,"replies":[{"id":"19655","content":"是的","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1545826019,"ip_address":"","comment_id":46918,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544001980","product_id":100017501,"comment_content":"方案1架构方案 实体机单机部署是指反向代理服务器和缓存服务器和应用服务器都在同一台机器上部署？","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431599,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545826019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46913,"user_name":"我就是我，烟火不一样的我","can_delete":false,"product_type":"c1","uid":1126118,"ip_address":"","ucode":"BB4262C02711D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/e6/9dd5c011.jpg","comment_is_top":false,"comment_ctime":1544001203,"is_pvip":false,"replies":[{"id":"19652","content":"三次握手还是需要的，就是不需要服务器在构建HTTP请求了。","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1545825938,"ip_address":"","comment_id":46913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544001203","product_id":100017501,"comment_content":"请问一下老师，静态化改造就是要直接缓存 HTTP 连接？意思是客户端请求nginx反向代理服务器时，不用在进行http三次握手吗？直接返回一个可复用的http连接吗？<br>","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431596,"discussion_content":"三次握手还是需要的，就是不需要服务器在构建HTTP请求了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545825938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38745,"user_name":"Lucas WANG","can_delete":false,"product_type":"c1","uid":1134129,"ip_address":"","ucode":"25C71F06E0A070","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/31/33c95b53.jpg","comment_is_top":false,"comment_ctime":1542119353,"is_pvip":false,"replies":[{"id":"14447","content":"建议看一下最后一篇文章","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1542527857,"ip_address":"","comment_id":38745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542119353","product_id":100017501,"comment_content":"同样，如果将数据全部放到全国的 CDN 上，必然导致 Cache 分散，而 Cache 分散又会导致访问请求命中同一个 Cache 的可能性降低，那么命中率就成为一个问题。<br><br>为啥要命中到同一个Cache？只要用户请求的内容能够从边缘节点获取到就行吧。","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428794,"discussion_content":"建议看一下最后一篇文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542527857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36414,"user_name":"Ryan Feng","can_delete":false,"product_type":"c1","uid":1006588,"ip_address":"","ucode":"DFFC358671DD45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/fc/da52e7df.jpg","comment_is_top":false,"comment_ctime":1541100394,"is_pvip":false,"replies":[{"id":"13013","content":"也可以，就看成熟度的比较了","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1541239417,"ip_address":"","comment_id":36414,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541100394","product_id":100017501,"comment_content":"openresty+lua不是也可以实现web层缓存，对这种方案怎么看？","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427855,"discussion_content":"也可以，就看成熟度的比较了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541239417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36197,"user_name":"浪花一朵朵","can_delete":false,"product_type":"c1","uid":1193297,"ip_address":"","ucode":"C514EE94B4F04D","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/51/90f5e6d1.jpg","comment_is_top":false,"comment_ctime":1540973064,"is_pvip":false,"replies":[{"id":"13017","content":"是的，用物理机是为了更大的内存，可以缓存更多的数据，最终也是提升性能","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1541240064,"ip_address":"","comment_id":36197,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1540973064","product_id":100017501,"comment_content":"老师，实体机单机部署，是指将java程序，cache缓存放在同一台机器上么？用增加机器的方式来提高整体性能？是这个意思么？","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427777,"discussion_content":"是的，用物理机是为了更大的内存，可以缓存更多的数据，最终也是提升性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541240064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35962,"user_name":"LieBrother","can_delete":false,"product_type":"c1","uid":1043890,"ip_address":"","ucode":"592D28D12835A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/b2/df330f12.jpg","comment_is_top":false,"comment_ctime":1540874202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540874202","product_id":100017501,"comment_content":"学习到了","like_count":0},{"had_liked":false,"id":34155,"user_name":"Hana","can_delete":false,"product_type":"c1","uid":1233257,"ip_address":"","ucode":"F434131F5A0EFC","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/69/07239d3c.jpg","comment_is_top":false,"comment_ctime":1540023803,"is_pvip":false,"replies":[{"id":"12224","content":"cache分散导致命中率下降是因为，总的请求数不变，那么每个cache承担的请求数就会减少，所以同一个cache中被访问同一个商品的概率就下降了，所以命中率就下降了。","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1540093703,"ip_address":"","comment_id":34155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1540023803","product_id":100017501,"comment_content":"同样，如果将数据全部放到全国的 CDN 上，必然导致 Cache 分散，而 Cache 分散又会导致访问请求命中同一个 Cache 的可能性降低，那么命中率就成为一个问题。<br><br><br>老师，这里的缓存分散到全国各地，为啥会降低命中率，命不中情况不是在缓存失效或者第一次请求产生的情况吗？  还是您的意思是 分散的cache多了，相对于整体来说总的缓存失效和第一次就多了？","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427137,"discussion_content":"cache分散导致命中率下降是因为，总的请求数不变，那么每个cache承担的请求数就会减少，所以同一个cache中被访问同一个商品的概率就下降了，所以命中率就下降了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540093703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32902,"user_name":"游刃","can_delete":false,"product_type":"c1","uid":1099669,"ip_address":"","ucode":"BF26FF7FF95A86","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/95/26a7979a.jpg","comment_is_top":false,"comment_ctime":1539733386,"is_pvip":false,"replies":[{"id":"12233","content":"Nginx不会区分动静数据，动静的区分是有类似varinish这种软件来解析的，varnish通过&lt;esi：src=xxx&#47;&gt;这种标签来合成动静数据，Nginx只根据URL做cache分组","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1540096665,"ip_address":"","comment_id":32902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539733386","product_id":100017501,"comment_content":"Http缓存是由Nginx根据Url区分动静的吗😊ཽ","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426910,"discussion_content":"Nginx不会区分动静数据，动静的区分是有类似varinish这种软件来解析的，varnish通过&amp;lt;esi：src=xxx/&amp;gt;这种标签来合成动静数据，Nginx只根据URL做cache分组","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540096665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29701,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1538491188,"is_pvip":false,"replies":[{"id":"10770","content":"当然适合，例如我们的app就是类似的c&#47;s系统啊，很多静态内容都直接缓存在本地","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1538620642,"ip_address":"","comment_id":29701,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538491188","product_id":100017501,"comment_content":"动静分离方案是否也适合C &#47; S系统？若适合，请举例说明一下。谢谢","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425692,"discussion_content":"当然适合，例如我们的app就是类似的c/s系统啊，很多静态内容都直接缓存在本地","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538620642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29657,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1538471883,"is_pvip":false,"replies":[{"id":"10773","content":"区别是，图3把cache层独立出来了成单独一层","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1538621682,"ip_address":"","comment_id":29657,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538471883","product_id":100017501,"comment_content":"老师好，请问图2 和 图3没有任何区别呀，看不出来统一Cache后的架构是什么样的呢？帮忙指点下，谢谢~~","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425682,"discussion_content":"区别是，图3把cache层独立出来了成单独一层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538621682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29650,"user_name":"王茂","can_delete":false,"product_type":"c1","uid":1088125,"ip_address":"","ucode":"DD9BE21B3E2C00","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/7d/8cb5367c.jpg","comment_is_top":false,"comment_ctime":1538469448,"is_pvip":false,"replies":[{"id":"11686","content":"每秒3单还不是很多😄","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1539497131,"ip_address":"","comment_id":29650,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1538469448","product_id":100017501,"comment_content":"一个客户日均2万单。现在单台每秒3单，已经用了cdn.oss.做资源缓存redis做库存缓存。现在单纯加服务器感觉已经没法去做高一点的并发。","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425679,"discussion_content":"每秒3单还不是很多😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539497131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29567,"user_name":"dancer","can_delete":false,"product_type":"c1","uid":1019036,"ip_address":"","ucode":"B8D5641A3AC490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/9c/d48473ab.jpg","comment_is_top":false,"comment_ctime":1538444364,"is_pvip":false,"replies":[{"id":"10658","content":"例如第一次请求就不会命中，另外，商品更新时也会失效缓存，也会不命中","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1538475045,"ip_address":"","comment_id":29567,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538444364","product_id":100017501,"comment_content":"不是很明白老师一直所讲的Cache未命中，因为我这里理解为CDN会缓存所有秒杀商品的静态数据，老师能否再详细讲一下什么时候会发生Cache未命中吗？","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425661,"discussion_content":"例如第一次请求就不会命中，另外，商品更新时也会失效缓存，也会不命中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538475045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}