{"id":215815,"title":"14 | 订单数据越来越多，数据库越来越慢该怎么办？","content":"<p>你好，我是李玥。</p><p>在前面几节课，我们一起学习了在并发持续高速增长的情况下，如何来逐步升级存储。今天这节课我们来聊一聊，如何应对数据的持续增长，特别是像订单数据这种会随着时间一直累积的数据。</p><p>为什么数据量越大数据库就越慢？你得理解这里面的根本原因。</p><p>我们知道，无论是“增删改查”哪个操作，其实都是查找问题，因为你都得先找到数据才能对数据做操作。那存储系统性能问题，其实就是查找快慢的问题。</p><p>无论是什么样的存储系统，一次查询所耗费的时间，都取决于两个因素：</p><ol>\n<li>查找的时间复杂度；</li>\n<li>数据总量。</li>\n</ol><p>这也是为什么大厂面试时总喜欢问“时间复杂度”相关问题的原因。查找的时间复杂度又取决于两个因素：</p><ol>\n<li>查找算法；</li>\n<li>存储数据的数据结构。</li>\n</ol><p>你看，这两个知识点也是面试问题中的常客吧？所以人家面试官并不是非要问你一些用不上的问题来为难你，这些知识点真的不是用不上，而是你不知道怎么用。</p><p>我们把话题拉回来。对于我们大多数做业务的系统，用的都是现成的数据库，数据的存储结构和查找算法都是由数据库来实现的，业务系统基本没法去改变它。比如说，我们讲过MySQL的InnoDB存储引擎，它的存储结构是B+树，查找算法大多就是树的查找，查找的时间复杂度就是O(log n)，这些都是固定的。那我们唯一能改变的，就是数据总量了。</p><!-- [[[read_end]]] --><p>所以，<strong>解决海量数据导致存储系统慢的问题，思想非常简单，就是一个“拆”字，把一大坨数据拆分成N个小坨，学名叫“分片（Shard）</strong>”。拆开之后，每个分片里的数据就没那么多了，然后让查找尽量落在某一个分片上，这样来提升查找性能。</p><p>所有分布式存储系统解决海量数据查找问题都是遵循的这个思想，但是光有思想还不够，还需要落地，下面我们就来说如何拆分数据的问题。</p><h2>存档历史订单数据提升查询性能</h2><p>我们在开发业务系统的时候，很多数据都是具备时间属性的，并且随着系统运行，累计增长越来越多，数据量达到一定程度就会越来越慢，比如说电商中的订单数据，就是这种情况。按照我们刚刚说的思想，这个时候就需要拆分数据了。</p><p>我们的订单数据一般都是保存在MySQL中的订单表里面，说到拆分MySQL的表，大多数同学的第一反应都是“分库分表”，别着急，咱现在的数据量还没到非得分库分表那一步呢，下一节课我会和你讲分库分表。<strong>当单表的订单数据太多，多到影响性能的时候，首选的方案是，归档历史订单。</strong></p><p>所谓归档，其实也是一种拆分数据的策略。简单地说，就是把大量的历史订单移到另外一张历史订单表中。为什么这么做呢？因为像订单这类具有时间属性的数据，都存在热尾效应。大多数情况下访问的都是最近的数据，但订单表里面大量的数据都是不怎么常用的老数据。</p><p>因为新数据只占数据总量中很少的一部分，所以把新老数据分开之后，新数据的数据量就会少很多，查询速度也就会快很多。老数据虽然和之前比起来没少多少，查询速度提升不明显，但是，因为老数据很少会被访问到，所以慢一点儿也问题不大。</p><p>这样拆分的另外一个好处是，<strong>拆分订单时，需要改动的代码非常少</strong>。大部分对订单表的操作都是在订单完成之前，这些业务逻辑都是完全不用修改的。即使像退货退款这类订单完成后的操作，也是有时限的，那这些业务逻辑也不需要修改，原来该怎么操作订单表还怎么操作。</p><p>基本上只有查询统计类的功能，会查到历史订单，这些需要稍微做一些调整，按照时间，选择去订单表还是历史订单表查询就可以了。很多电商大厂在它逐步发展壮大的过程中，都用这种订单拆分的方案撑了好多年。你可能还有印象，几年前你在京东、淘宝查自己的订单时，都有一个查“三个月前订单”的选项，其实就是查订单历史表。</p><p>归档历史订单，大致的流程是这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/e1/da/e16007b7e26c34a55d4bb4689b358dda.png?wh=1142*263\" alt=\"\"></p><ol>\n<li>首先我们需要创建一个和订单表结构一模一样的历史订单表；</li>\n<li>然后，把订单表中的历史订单数据分批查出来，插入到历史订单表中去。这个过程你怎么实现都可以，用存储过程、写个脚本或者写个导数据的小程序都行，用你最熟悉的方法就行。如果你的数据库已经做了主从分离，那最好是去从库查询订单，再写到主库的历史订单表中去，这样对主库的压力会小一点儿。</li>\n<li>现在，订单表和历史订单表都有历史订单数据，先不要着急去删除订单表中的数据，你应该测试和上线支持历史订单表的新版本代码。因为两个表都有历史订单，所以现在这个数据库可以支持新旧两个版本的代码，如果新版本的代码有Bug，你还可以立刻回滚到旧版本，不至于影响线上业务。</li>\n<li>等新版本代码上线并验证无误之后，就可以删除订单表中的历史订单数据了。</li>\n<li>最后，还需要上线一个迁移数据的程序或者脚本，定期把过期的订单从订单表搬到历史订单表中去。</li>\n</ol><p>类似于订单商品表这类订单的相关的子表，也是需要按照同样的方式归档到各自的历史表中，由于它们都是用订单ID作为外键来关联到订单主表的，随着订单主表中的订单一起归档就可以了。</p><p>这个过程中，我们要注意的问题是，要做到对线上业务的影响尽量的小。迁移这么大量的数据，或多或少都会影响数据库的性能，你应该尽量放在闲时去迁移，<strong>迁移之前一定做好备份</strong>，这样如果不小心误操作了，也能用备份来恢复。</p><h2>如何批量删除大量数据？</h2><p>这里面还有一个很重要的细节问题：如何从订单表中删除已经迁走的历史订单数据？我们直接执行一个删除历史订单的SQL行不行？像这样删除三个月前的订单：</p><pre><code>delete from orders\nwhere timestamp &lt; SUBDATE(CURDATE(),INTERVAL 3 month);\n</code></pre><p>大概率你会遇到错误，提示删除失败，因为需要删除的数据量太大了，所以需要分批删除。比如说我们每批删除1000条记录，那分批删除的SQL可以这样写：</p><pre><code>delete from orders\nwhere timestamp &lt; SUBDATE(CURDATE(),INTERVAL 3 month)\norder by id limit 1000;\n</code></pre><p>执行删除语句的时候，最好在每次删除之间停顿一会儿，避免给数据库造成太大的压力。上面这个删除语句已经可以用了，反复执行这个SQL，直到全部历史订单都被删除，是可以完成删除任务的。</p><p>但是这个SQL还有优化空间，它每执行一次，都要先去timestamp对应的索引上找出符合条件的记录，然后再把这些记录按照订单ID排序，之后删除前1000条记录。</p><p>其实没有必要每次都按照timestamp比较订单，所以我们可以先通过一次查询，找到符合条件的历史订单中最大的那个订单ID，然后在删除语句中把删除的条件转换成按主键删除。</p><pre><code>select max(id) from orders\nwhere timestamp &lt; SUBDATE(CURDATE(),INTERVAL 3 month);\n\n\ndelete from orders\nwhere id &lt;= ?\norder by id limit 1000;\n</code></pre><p>这样每次删除的时候，由于条件变成了主键比较，我们知道在MySQL的InnoDB存储引擎中，表数据结构就是按照主键组织的一颗B+树，而B+树本身就是有序的，所以不仅查找非常快，也不需要再进行额外的排序操作了。当然这样做的前提条件是订单ID必须和订单时间正相关才行，大多数订单ID的生成规则都可以满足这个条件，所以问题不大。</p><p>然后我们再说一下，为什么在删除语句中非得加一个排序呢？因为按ID排序后，我们每批删除的记录，基本都是ID连续的一批记录，由于B+树的有序性，这些ID相近的记录，在磁盘的物理文件上，大致也是放在一起的，这样删除效率会比较高，也便于MySQL回收页。</p><p>大量的历史订单数据删除完成之后，如果你检查一下MySQL占用的磁盘空间，你会发现它占用的磁盘空间并没有变小，这是什么原因呢？这也是和InnoDB的物理存储结构有关系。</p><p>虽然逻辑上每个表是一颗B+树，但是物理上，每条记录都是存放在磁盘文件中的，这些记录通过一些位置指针来组织成一颗B+树。当MySQL删除一条记录的时候，只能是找到记录所在的文件中位置，然后把文件的这块区域标记为空闲，然后再修改B+树中相关的一些指针，完成删除。其实那条被删除的记录还是躺在那个文件的那个位置，所以并不会释放磁盘空间。</p><p>这么做也是没有办法的办法，因为文件就是一段连续的二进制字节，类似于数组，它不支持从文件中间删除一部分数据。如果非要这么删除，只能是把这个位置之后的所有数据往前挪，这样等于是要移动大量数据，非常非常慢。所以，删除的时候，只能是标记一下，并不真正删除，后续写入新数据的时候再重用这块儿空间。</p><p>理解了这个原理，你就很容易知道，不仅是MySQL，很多其他的数据库都会有类似的问题。这个问题也没什么特别好的办法解决，磁盘空间足够的话，就这样吧，至少数据删了，查询速度也快了，基本上是达到了目的。</p><p>如果说我们数据库的磁盘空间很紧张，非要把这部分磁盘空间释放出来，可以执行一次OPTIMIZE TABLE释放存储空间。对于InnoDB来说，执行OPTIMIZE TABLE实际上就是把这个表重建一遍，执行过程中会一直锁表，也就是说这个时候下单都会被卡住，这个是需要注意的。另外，这么优化有个前提条件，MySQL的配置必须是每个表独立一个表空间（innodb_file_per_table = ON），如果所有表都是放在一起的，执行OPTIMIZE TABLE也不会释放磁盘空间。</p><p>重建表的过程中，索引也会重建，这样表数据和索引数据都会更紧凑，不仅占用磁盘空间更小，查询效率也会有提升。那对于频繁插入删除大量数据的这种表，如果能接受锁表，定期执行OPTIMIZE TABLE是非常有必要的。</p><p>如果说，我们的系统可以接受暂时停服，最快的方法是这样的：直接新建一个临时订单表，然后把当前订单复制到临时订单表中，再把旧的订单表改名，最后把临时订单表的表名改成正式订单表。这样，相当于我们手工把订单表重建了一次，但是，不需要漫长的删除历史订单的过程了。我把执行过程的SQL放在下面供你参考：</p><pre><code>-- 新建一个临时订单表\ncreate table orders_temp like orders;\n\n\n-- 把当前订单复制到临时订单表中\ninsert into orders_temp\n  select * from orders\n  where timestamp &gt;= SUBDATE(CURDATE(),INTERVAL 3 month);\n\n\n-- 修改替换表名\nrename table orders to orders_to_be_droppd, orders_temp to orders;\n\n\n-- 删除旧表\ndrop table orders_to_be_dropp\n</code></pre><h2>小结</h2><p>对于订单这类具有时间属性的数据，会随时间累积，数据量越来越多，为了提升查询性能需要对数据进行拆分，首选的拆分方法是把旧数据归档到历史表中去。这种拆分方法能起到很好的效果，更重要的是对系统的改动小，升级成本低。</p><p>在迁移历史数据过程中，如果可以停服，最快的方式是重建一张新的订单表，然后把三个月内的订单数据复制到新订单表中，再通过修改表名让新的订单表生效。如果只能在线迁移，那需要分批迭代删除历史订单数据，删除的时候注意控制删除节奏，避免给线上数据库造成太大压力。</p><p>最后，我要再一次提醒你，线上数据操作非常危险，在操作之前一定要做好数据备份。</p><h2>思考题</h2><p>在数据持续增长的过程中，今天介绍的这种“归档历史订单”的数据拆分方法，和直接进行分库分表相比，比如说按照订单创建时间，自动拆分成每个月一张表，两种方法各有什么优点和缺点？欢迎你在留言区与我讨论。</p><p>感谢你的阅读，如果你觉得今天的内容对你有帮助，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":200064,"user_name":"李玥","can_delete":false,"product_type":"c1","uid":1501046,"ip_address":"","ucode":"B19E91EE248591","user_header":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","comment_is_top":true,"comment_ctime":1585539149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233721629943992e+18","product_id":100046801,"comment_content":"Hi，我是李玥。<br><br>这里回顾一下上节课的思考题：<br><br>课后请你想一下，复制状态机除了用于数据库的备份和复制以外，在计算机技术领域，还有哪些地方也用到了复制状态机？欢迎你在留言区与我讨论。感谢你的阅读，如果你觉得今天的内容对你有帮助，也欢迎把它分享给你的朋友。<br><br>复制状态机的应用是非常广泛的，比如说现在很火的区块链技术，也是借鉴了复制状态机理论，它的链，或者说是账本就是操作日志，每个人的钱包，就是状态。它只要保证账本一旦记录后就不会被篡改，那在任何人的电脑上，计算出来的钱包就都是一样的。","like_count":30},{"had_liked":false,"id":197047,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1585352899,"is_pvip":false,"replies":[{"id":"74829","content":"不执行OPTIMIZE也是可以提升性能的。数据和索引虽然在物理上没有删除，但逻辑上已经删除掉了，执行查询操作的时候，并不会去访问这些已经删除的数据。<br><br>比如，原来有100条数据，删除完成后剩了10条。虽然100条数据都在磁盘文件中，但这时候执行一次全表扫描，MySQL只会访问剩下的10条数据。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585532767,"ip_address":"","comment_id":197047,"utype":1}],"discussion_count":3,"race_medal":0,"score":"130434371779","product_id":100046801,"comment_content":"如果不进行OPTIMIZE，想通过历史表来提升性能的目的岂不是达不到了？","like_count":31,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489442,"discussion_content":"不执行OPTIMIZE也是可以提升性能的。数据和索引虽然在物理上没有删除，但逻辑上已经删除掉了，执行查询操作的时候，并不会去访问这些已经删除的数据。\n\n比如，原来有100条数据，删除完成后剩了10条。虽然100条数据都在磁盘文件中，但这时候执行一次全表扫描，MySQL只会访问剩下的10条数据。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585532767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367264,"discussion_content":"数据量其实是有下降的 因为真实查找时内存中是不存在这些删除的有序id的。唯一问题是 读盘时仍然会将之前的数据空间装载进来 这就是数据空洞了。或者说数据库的碎片率了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618307785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1046714,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","nickname":"约书亚","note":"","ucode":"81EA27ADD9EC1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371550,"discussion_content":"感觉是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619838049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":367264,"ip_address":""},"score":371550,"extra":""}]}]},{"had_liked":false,"id":197399,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1585373666,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"113254523362","product_id":100046801,"comment_content":"“归档历史订单”可以灵活控制，比如把不再会进行修改的订单，迁移到偏重查询快系统（各种NOSQL），不再需要online查询的数据，可以迁移到offline的库中。<br>直接进行分库分表，会遇到冷热不均的问题，如：电商大促或年节购物旺季订单量与谈季和平季订单可能会量级差别。用时间这个维度去分库分表，操作上相对简单，但是到达这种需要分库分表量级的系统，切分的灵活性更加重要，怎么分业务场景不同切分维度也会不同。","like_count":27,"discussions":[{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407894,"discussion_content":"大佬，这块有什么经验介绍吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635146345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211317,"user_name":"二进制之路","can_delete":false,"product_type":"c1","uid":1008395,"ip_address":"","ucode":"67C84B013147B1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/0b/ad56aeb4.jpg","comment_is_top":false,"comment_ctime":1587948097,"is_pvip":false,"replies":[{"id":"78789","content":"是的，磁盘碎片和内存碎片产生的原因是一样的，所以清理的思路很多都是相似的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1588049886,"ip_address":"","comment_id":211317,"utype":1}],"discussion_count":3,"race_medal":0,"score":"96077228609","product_id":100046801,"comment_content":"一下子和Java的GC算法产生了共鸣。<br>创建新表的方式，只复制少部分数据，效率更高，但你要能接受这段时间的STW。这是复制算法。<br>历史归档，删除数据的方式，会产生碎片，利用率低。只有到空间不足的情况下，才进行压缩整理（OPTIMIZE）。这是标记清理算法，关键时刻再整理（STW），CMS GC就是这个思路。<br>","like_count":23,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493248,"discussion_content":"是的，磁盘碎片和内存碎片产生的原因是一样的，所以清理的思路很多都是相似的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588049886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441830,"avatar":"https://static001.geekbang.org/account/avatar/00/16/00/26/a80010f0.jpg","nickname":"JL","note":"","ucode":"07BD8069AE2CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281080,"discussion_content":"CMS 的缺点不就是会产生碎片么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591668579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1008395,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/0b/ad56aeb4.jpg","nickname":"二进制之路","note":"","ucode":"67C84B013147B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1441830,"avatar":"https://static001.geekbang.org/account/avatar/00/16/00/26/a80010f0.jpg","nickname":"JL","note":"","ucode":"07BD8069AE2CBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281120,"discussion_content":"是的，当碎片过多，导致没有足够大的连续内存时，就会进行FGC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591674857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281080,"ip_address":""},"score":281120,"extra":""}]}]},{"had_liked":false,"id":197698,"user_name":"攻城拔寨","can_delete":false,"product_type":"c1","uid":1053934,"ip_address":"","ucode":"CBC37183DAB6B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/ee/d72a8222.jpg","comment_is_top":false,"comment_ctime":1585392480,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44535065440","product_id":100046801,"comment_content":"1. 自动分表需要事先做好预估，把时间间隔设置好，如果表数据增长速度不均匀（例如淡季旺季，后期业务膨胀），可能需要重新设计分表规则，很麻烦。表名也变化了，代码侵入性比较大。<br>优点就是如果数据增长速度变化不大，不用持续做归档。<br><br>2. 归档的好处是代码侵入性低，因为热表名字还是一样。表增长速度变成也能灵活改变归档数据大小跟速度。<br>缺点就是需要持续归档迁移，后期归档数据太大也会遇到瓶颈","like_count":11,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538268,"discussion_content":"归档库是可以做成分库分表的 而数据迁移因为是静态数据实际上迁移起来会比较轻松。对于无业务意义的分片键 现在dba都可以实现离线迁移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639390017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197343,"user_name":"刘楠","can_delete":false,"product_type":"c1","uid":1120773,"ip_address":"","ucode":"9F19D44CBEE039","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/05/f154d134.jpg","comment_is_top":false,"comment_ctime":1585369689,"is_pvip":false,"replies":[{"id":"74825","content":"是可以的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585532490,"ip_address":"","comment_id":197343,"utype":1}],"discussion_count":6,"race_medal":0,"score":"44535042649","product_id":100046801,"comment_content":"alter table A engine=InnoDB 命令来重建这样也能达到释放空间的效果吧","like_count":11,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489501,"discussion_content":"是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585532490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105354,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/ca/fe3f7f0e.jpg","nickname":"T.Y","note":"","ucode":"243C96604F1CAA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553111,"discussion_content":"mysql官网上提示：OPTIMIZE TABLE uses online DDL for regular and partitioned InnoDB tables, which reduces downtime for concurrent DML operations。 所以老师是否应该说明一下，OPTIMIZE TABLE 并不会锁表很长时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645715805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612372,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9a/54/5d51fda4.jpg","nickname":"婷","note":"","ucode":"1264B8F777B7CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216291,"discussion_content":"是的哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585412361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1811495,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","nickname":"小袁","note":"","ucode":"3F5D8721F577D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216231,"discussion_content":"online ddl。另外一个数据库大神课程里面有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585409912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1387631,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/6f/52abb6c0.jpg","nickname":"小向","note":"","ucode":"C6F6C6800C72E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1811495,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","nickname":"小袁","note":"","ucode":"3F5D8721F577D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280408,"discussion_content":"什么课程？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591537941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":216231,"ip_address":""},"score":280408,"extra":""},{"author":{"id":1481979,"avatar":"https://static001.geekbang.org/account/avatar/00/16/9c/fb/7fe6df5b.jpg","nickname":"陈卧虫","note":"","ucode":"44BB84712436AB","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1387631,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/6f/52abb6c0.jpg","nickname":"小向","note":"","ucode":"C6F6C6800C72E8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590495,"discussion_content":"mysql 45讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665822179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":280408,"ip_address":"浙江"},"score":590495,"extra":""}]}]},{"had_liked":false,"id":216523,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1589276346,"is_pvip":true,"replies":[{"id":"80333","content":"这种情况可能就不适合按月来分片。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589462129,"ip_address":"","comment_id":216523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35949014714","product_id":100046801,"comment_content":"按时间分库分表一直有个疑惑， 按月进行分表， 有几个月数据很小，有几个月数据特别大，这种会怎么处理","like_count":8,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494851,"discussion_content":"这种情况可能就不适合按月来分片。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589462129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198316,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1585444571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27355248347","product_id":100046801,"comment_content":"定期归历史的方式其实oracle的使用频率是最高的。<br>不过删主键的方式确实不曾想到和尝试过，觉得短期不失为不错的选择。<br>自动分表总归会有坑：这也是为何自动化的极限还是要人去监控；自动化减少的人的机械操作而已，不是不需要人去操作和监控，尤其数据库数量众多时还是要人去自动化。<br>手工虽麻烦细节上的把控会比较好：细节会把控的比较好。<br>相对合理的方式应当是二者结合：1）拆分之前人为的做一次检查，2）拆分的动作自动化去执行，3）结果由人去复核。<br>毕竟当需要同时拆分的工作量很庞大时不可能全部都是手工操作，这其实就像运维：一个人去操作2-3台可能，20-50其实就很困难了，500以上要全部人为操作基本就只能自动化+人为操作了。<br>谢谢今天的分享：期待后续的课程。","like_count":7},{"had_liked":false,"id":197763,"user_name":"此方彼方Francis","can_delete":false,"product_type":"c1","uid":1001390,"ip_address":"","ucode":"73E6C93CF1FE39","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/ae/0a5f7a56.jpg","comment_is_top":false,"comment_ctime":1585397306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27355201082","product_id":100046801,"comment_content":"任何时间属性相关的数据基本都可以这样处理（比如聊天数据），这种处理办法和分库分表等并不冲突。这种办法相对简单大部分情况下效果也比较好，只是如果业务发展很好，那么订单表的数据依旧有可能很多，另外历史数据表依旧是需要查询的，时间越久数据量越多，查询历史数据太慢的话迟早也会是个问题。<br>分库分表这种方案需要选比较好的shard key，在数据统计上会麻烦一些，单表数据量上来之后依旧有归档的需求。<br>按月新建表会有数据热点问题，查询和统计还是会比较麻烦。","like_count":7},{"had_liked":false,"id":197115,"user_name":"王","can_delete":false,"product_type":"c1","uid":1268844,"ip_address":"","ucode":"4C129F533C3A86","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/6c/7a4593fa.jpg","comment_is_top":false,"comment_ctime":1585358514,"is_pvip":false,"replies":[{"id":"74822","content":"我个人的建议是，如果归档能解决问题，就不要分库分表。我们下节课会详细讲讲分库分表。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585532407,"ip_address":"","comment_id":197115,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18765227698","product_id":100046801,"comment_content":"老师，什么情况下需要归档，什么情况需要分库分表呢？有什么具体的指标吗？","like_count":5,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489450,"discussion_content":"我个人的建议是，如果归档能解决问题，就不要分库分表。我们下节课会详细讲讲分库分表。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585532407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330862,"discussion_content":"如果数据有明显的冷热区分，就用归档，否则分库分表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606723849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238894,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1596359108,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"14481260996","product_id":100046801,"comment_content":"你可能还有印象，几年前你在京东、淘宝查自己的订单时，都有一个查“三个月前订单”的选项，其实就是查订单历史表。<br>这个确实有印象，以前我们产品也抄了这个查询条件。不过我的问题是，现在怎么没有这个选项了？","like_count":4,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367266,"discussion_content":"现在是用瀑布流的方式掩盖了 实质是一样的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1618307923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1429082,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ce/5a/f6042e30.jpg","nickname":"木子飞","note":"","ucode":"69210DD3E7ADC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340480,"discussion_content":"你可能还有印象，几年前你在京东、淘宝查自己的订单时，都有一个查“三个月前订单”的选项，其实就是查订单历史表。\n这个确实有印象，以前我们产品也抄了这个查询条件。不过我的问题是，现在怎么没有这个选项了？\n------老师，这里能否回答一下呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610013354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1649057,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","nickname":"hello","note":"","ucode":"4F42DAA5DB5C38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1429082,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ce/5a/f6042e30.jpg","nickname":"木子飞","note":"","ucode":"69210DD3E7ADC2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377522,"discussion_content":"评论区问，老师估计不会看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622694646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340480,"ip_address":""},"score":377522,"extra":""}]}]},{"had_liked":false,"id":199578,"user_name":"Mq","can_delete":false,"product_type":"c1","uid":1178359,"ip_address":"","ucode":"041F572AFAB275","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/f7/91ac44c5.jpg","comment_is_top":false,"comment_ctime":1585491745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14470393633","product_id":100046801,"comment_content":"归档历史数据的优点是简单，对系统的改造少，缺点是不是长久之计<br>分库分表需要对数据访问层做架构变更，对系统的改造大，要考虑数据分布，对接口查询性能等业务需求的影响，另外我觉得按时间分表跟我们设计这个分库分表就不符，我们做业务数据分库分表就是想数据打散，按时间分达不到这个目的，按时间适用在做一体化系统，因为这些系统有很多报表统计需求可能用的上","like_count":3},{"had_liked":false,"id":197050,"user_name":"怀朔","can_delete":false,"product_type":"c1","uid":1006865,"ip_address":"","ucode":"52FAC1C2FD37B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/11/e1f36640.jpg","comment_is_top":false,"comment_ctime":1585353734,"is_pvip":false,"replies":[{"id":"74826","content":"所以我们说，这个方案的前提是必须得停机操作。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585532544,"ip_address":"","comment_id":197050,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14470255622","product_id":100046801,"comment_content":"比这个删除规律 是不是有问题啊？<br>1、创建temp表<br>2、把历史数据迁移老表<br>3、check历史数据条数 <br>4、删除老数据？<br><br><br>按照老师的方法<br> 在rename 之前 插入之后 这时候有数据进来 数据会丢在老表里面了？","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489443,"discussion_content":"所以我们说，这个方案的前提是必须得停机操作。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585532544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1916764,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3f/5c/ed0f0836.jpg","nickname":"gfgf","note":"","ucode":"007190E2B44314","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218885,"discussion_content":"可以把新表的自增列设置的值大一些，操作该表之后，把中间时间数据插入回去，可以做到不停机，系统闲时业务数据在一定范围内的可以这样操作\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585710959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691109,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","nickname":"虚竹","note":"","ucode":"8D8C96C793724E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215873,"discussion_content":"能接受暂时停服的才能这么用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585393571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220590,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1590291383,"is_pvip":false,"replies":[{"id":"81461","content":"这个地方改为：“其实没有必要每次都按照timestamp比较订单”。我联系编辑小姐姐修改，感谢你的问题！","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1590368697,"ip_address":"","comment_id":220590,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10180225975","product_id":100046801,"comment_content":"老师，您的这句话：“其实每次都排序是没必要的，所以我们可以先通过一次查询，找到符合条件的历史订单中最大的那个订单 ID，然后在删除语句中把删除的条件转换成按主键删除。” <br><br>事实上每次，都做了排序啊？为什么说没必要呢？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496183,"discussion_content":"这个地方改为：“其实没有必要每次都按照timestamp比较订单”。我联系编辑小姐姐修改，感谢你的问题！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590368697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204749,"user_name":"夏目","can_delete":false,"product_type":"c1","uid":1212750,"ip_address":"","ucode":"67C075A01CF4D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/4e/d71092f4.jpg","comment_is_top":false,"comment_ctime":1586449327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10176383919","product_id":100046801,"comment_content":"分库分表不需要迁移数据，容量也大，缺点是各个表数据可能差异较大，查询较麻烦。历史订单表查询相对简单，迁移数据麻烦","like_count":2},{"had_liked":false,"id":202349,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1585972342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10175906934","product_id":100046801,"comment_content":"1.前者操作所有数据都会有一个路由的前置操作，这是有开销的。其次，因为分表了，所以其区域查找这种就需要多表数据做聚合，这就会让查询变得很复杂低效（采用mycat这种中间件可以规避业务代码大量改动的问题，但聚合数据的开销依旧是跑不掉的，而且引入中间件还有多一条的问题）。<br><br>2.后者其实性能，操作成本，对业务代码的侵入程度都比前者有优势，唯一遗憾的就是其应用场景有限。只有在整体业务单量不大，且归档数据操作概率极低的情况下适用。因为如果业务单量很大，比如日单量一百万，那么这个热数据表能存多久的数据？十天？二十天？这样的时间区间是严重不符合归档条件的，往往归档数据都是半年，少说三四个月的完结订单。而且归档数据，数据量很大。意味着性能很差，频繁导入导出，查询修改，是支撑不住的。","like_count":3},{"had_liked":false,"id":198247,"user_name":"特种流氓","can_delete":false,"product_type":"c1","uid":1248825,"ip_address":"","ucode":"D9985CBA8B4AAD","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/39/174741d1.jpg","comment_is_top":false,"comment_ctime":1585437982,"is_pvip":false,"replies":[{"id":"74814","content":"如果要同时查二个表，那合并和去重就在所难免。一般情况下，最好能设计好业务逻辑，尽量不要同时查当前和历史表。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585531880,"ip_address":"","comment_id":198247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10175372574","product_id":100046801,"comment_content":"最近的订单表往归档表挪数据的过程中可能一份数据在两张表都存在 这个时候用户查询全部订单的时候是否我们在应用利用是用去重去剔除重复数据","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489674,"discussion_content":"如果要同时查二个表，那合并和去重就在所难免。一般情况下，最好能设计好业务逻辑，尽量不要同时查当前和历史表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585531880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197043,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1585352442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10175287034","product_id":100046801,"comment_content":"思考题<br>把历史订单数据归档方案实现相对简单，也很有效果，需要注意的就是归档时注意对线上服务的影响。<br><br>如果采用按照订单创建时间分库分表，优点是省去了后面归档历史数据的重复工作，在一定程序上可以提高写入和查询性能，但也有不足。<br><br>首先就是采用分库分表在技术复杂度上相比历史数据归档还是高一些的<br><br>其次就是如果刚好到新的一个月，前一个月的数据还是属于热数据，所以会涉及多表查询<br><br>最后就是这种方案会造成产生大量的表，如果订单数据不大，每个表中数据量也不会太大，有点浪费资源了","like_count":2},{"had_liked":false,"id":201586,"user_name":"Panmax","can_delete":false,"product_type":"c1","uid":1004871,"ip_address":"","ucode":"9D65E3B84C5519","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/47/d217c45f.jpg","comment_is_top":false,"comment_ctime":1585808076,"is_pvip":false,"replies":[{"id":"75539","content":"这个可以灵活处理。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585908787,"ip_address":"","comment_id":201586,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880775372","product_id":100046801,"comment_content":"最后一种方案中（重建一张新的订单表），最后不应该把 orders_to_be_droppd 表删掉吧，删掉之后历史数据就丢了。","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490370,"discussion_content":"这个可以灵活处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585908787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200565,"user_name":"sami","can_delete":false,"product_type":"c1","uid":1033240,"ip_address":"","ucode":"9A66FCA00D8A37","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","comment_is_top":false,"comment_ctime":1585618675,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"5880585971","product_id":100046801,"comment_content":"以前做过一个系统，有三类表，包括历史单，完成单和在途单。也是老师说的拆分的思路","like_count":1,"discussions":[{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270423,"discussion_content":"这种分表路由一般是在业务代码中写死的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590003006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1033240,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","nickname":"sami","note":"","ucode":"9A66FCA00D8A37","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270607,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590028993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":270423,"ip_address":""},"score":270607,"extra":""}]}]},{"had_liked":false,"id":198085,"user_name":"Aliliin","can_delete":false,"product_type":"c1","uid":1025239,"ip_address":"","ucode":"61F9A09BB6650F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/d7/5d2bfaa7.jpg","comment_is_top":false,"comment_ctime":1585408773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880376069","product_id":100046801,"comment_content":"归档历史数据一般可以根据日前时间分类新建表<br>删除历史数据要注意分批删除，还有就是删除数据但是磁盘空间并没有释放，可以执行optimism table 进行磁盘空间释放执行过程会锁表<br>还有一种方案就新建一张表迁移所需数据到新的表<br>注意别忘记和要删除的表的其他表的相关数据","like_count":1},{"had_liked":false,"id":197820,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1024763,"ip_address":"","ucode":"F6B5C64BC99FB7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/fb/94af9cf1.jpg","comment_is_top":false,"comment_ctime":1585399676,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5880366972","product_id":100046801,"comment_content":"保证关系数据库数据最小化，在抗流量的过程中很有作用。历史数据异步同步到大数据环境，定期删除关系数据库里的归档数据。保证sql 执行效率","like_count":1,"discussions":[{"author":{"id":1975581,"avatar":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCnhAYmvAsNcYKyNLUJG5iax9BKgXAJzxypEJGRVwhibjZ53S5icgEDibn8uqrqwsKcxzEXfRRUXTdqjA/132","nickname":"岳宜波","note":"","ucode":"5043CA250FDCB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250532,"discussion_content":"同步大数据环境你们是怎么做的？如何保证数据一致性呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588008186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1024763,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a2/fb/94af9cf1.jpg","nickname":"Alex","note":"","ucode":"F6B5C64BC99FB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1975581,"avatar":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCnhAYmvAsNcYKyNLUJG5iax9BKgXAJzxypEJGRVwhibjZ53S5icgEDibn8uqrqwsKcxzEXfRRUXTdqjA/132","nickname":"岳宜波","note":"","ucode":"5043CA250FDCB1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251436,"discussion_content":"一种根据业务时间做批量迁移，另外一种就是cdc ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588084555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":250532,"ip_address":""},"score":251436,"extra":""}]}]},{"had_liked":false,"id":335481,"user_name":"sotondolphin","can_delete":false,"product_type":"c1","uid":2306394,"ip_address":"","ucode":"136444B47ACDC5","user_header":"","comment_is_top":false,"comment_ctime":1645533615,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645533615","product_id":100046801,"comment_content":"删除的时候还需要考虑foreign key constraitnts. 不然也容易报错","like_count":0},{"had_liked":false,"id":327962,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1640422568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640422568","product_id":100046801,"comment_content":"思考题：<br>1.归档历史订单，对程序的改动较少，易操作，安全可靠，缺点是，对历史数据的统计和查询仍然有性能上的问题；<br>2.直接分库分表，正好相反，程序的改动较大，且不容易操作，数据查询和统计较复杂，优点是，分表后，每张表的数据量可以稳定在一个量级上，数据查询性能较优。","like_count":0},{"had_liked":false,"id":326135,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1639390131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639390131","product_id":100046801,"comment_content":"归档库优点<br>1.如果线上日均GMV只有10w以内 那么通常归档库与订单库可以采用同样的分库分表结构 ，这种方式也简化了迁移成本<br>2.查询与写操作（通常是订单状态修改，因为付款成功通常也只改状态了，原始订单是要保存做OLAP的）改动量极小 这点老师已在文中阐释过<br><br>归档库缺点<br>1.对于线上日均GMV大的表（以日均百万GMV来算） 通常订单表与归档库的分布分表方案是不同的 ，代码中需要维护两套数据源 当然也可以将归档库查询下沉为api调用<br>2.相较于按月查询来说 会存在数据冷热不均问题。比方说某些表数据量多（因为某个用户下单多）等。通常这种问题只是牺牲下存储空间 目前基本是忽略的<br><br>按月分库优点<br>1.适合小数据量的订单表 如日均10W甚至更低 。通常订单库与归档库都不需要分库分表 且业务本身也就是按月查询<br><br>按月分库缺点<br>1.数据写入量一旦增多 还是要回归到分库分表方式<br>2.按人聚合查询场景天生不支持 需要自己对每笔数据做聚合 或者由大数据来做计算支撑<br>","like_count":0},{"had_liked":false,"id":304657,"user_name":"林铭铭","can_delete":false,"product_type":"c1","uid":1068499,"ip_address":"","ucode":"AB392BEE7CD6A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/d3/67bdcca9.jpg","comment_is_top":false,"comment_ctime":1627540577,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627540577","product_id":100046801,"comment_content":"数据归档也算是一种古老的技术了。","like_count":0},{"had_liked":false,"id":266900,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1607521670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607521670","product_id":100046801,"comment_content":"按月分表，查询会更加复杂，随版本迭代表的字段也会有所差异，后续使用和数据分析可能产生版本不兼容的问题。好处是，时间上做了分片，减少了性能压力，和归档维护成本。<br>归档的好处是，设计简单，代码和db耦合性低。<br>但是每次归档可能会停机，或者需要借助db运维基础设施，进行online的数据迁移。","like_count":0},{"had_liked":false,"id":215119,"user_name":"better","can_delete":false,"product_type":"c1","uid":1257750,"ip_address":"","ucode":"2B9BCCED753D7F","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/16/f2269e73.jpg","comment_is_top":false,"comment_ctime":1588908176,"is_pvip":true,"replies":[{"id":"79936","content":"建议你还是选用关系型数据库，这样迁移风险还比较可控。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589170700,"ip_address":"","comment_id":215119,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588908176","product_id":100046801,"comment_content":"老师您好，我想请教一下，我们目前有一个业务需求，需要将关系型数据库MySQL中的数据迁移到另外一种数据库中存储，且要求最好是国产非商用的数据库，所以像MariaDB、PostgreSQL可能都不能作为此次的选型。<br><br>我个人觉得能找到跟MySQL比较贴近的关系型数据库的话，迁移成本应该能够最低，但目前一直找不到合适的替代品。<br><br>目前团队里其他成员预研的一种方案是Luence，但Luence和MySQL毕竟是两个区别比较大的产品。<br><br>我想请教老师的问题是：<br>1.当前这种业务需求和限制下，老师有什么技术选型建议，或有没有什么MySQL的替代产品推荐<br>2.老师觉得用Luence替代是否可行，可行性方面需要考虑哪些方面呢","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494322,"discussion_content":"建议你还是选用关系型数据库，这样迁移风险还比较可控。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589170700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207060,"user_name":"闫冬","can_delete":false,"product_type":"c1","uid":1109691,"ip_address":"","ucode":"1725E869D5A3D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/bb/7afd6824.jpg","comment_is_top":false,"comment_ctime":1587001136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587001136","product_id":100046801,"comment_content":"物理删除订单这个感觉还是挺危险的 按时间分表是不是更好一些呢","like_count":0},{"had_liked":false,"id":206440,"user_name":"Paualf","can_delete":false,"product_type":"c1","uid":1179425,"ip_address":"","ucode":"38E8A87193DBA6","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/21/77949293.jpg","comment_is_top":false,"comment_ctime":1586861730,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1586861730","product_id":100046801,"comment_content":"归档历史和分库分表对比，归档历史查询历史数据比较方便，但是数据量可能会比较多，分库分表使用起来性能比较高查询修改等，查询历史数据操作麻烦些，都有利有弊","like_count":0},{"had_liked":false,"id":201670,"user_name":"SnoWalker","can_delete":false,"product_type":"c1","uid":1094726,"ip_address":"","ucode":"826A3DE7E3AEC9","user_header":"https://static001.geekbang.org/account/avatar/00/10/b4/46/686f5abe.jpg","comment_is_top":false,"comment_ctime":1585818562,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585818562","product_id":100046801,"comment_content":"最后讲到的表重建方案往复杂分析可以转换成 影子换表 策略，可以不停服操作","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366337,"discussion_content":"就是影子换表策略\n停服是为了防止有新插入的数据\n\n其实可以记录下当时最大的时间，减少停服时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618038421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199946,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1585504592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585504592","product_id":100046801,"comment_content":"归档历史订单 对于刚起步的电商系统是一个很好的升级策略！<br>感谢老师！","like_count":0},{"had_liked":false,"id":199699,"user_name":"Kk","can_delete":false,"product_type":"c1","uid":1116208,"ip_address":"","ucode":"D23C7A6AB429FE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epP0aHseGFYtPUZhdMZ8eJz5BHhEXOiaqziarKWPgfEmdaev7NvR8CjfM7oZwYsVicfrT4ibS4ZlOMKCQ/132","comment_is_top":false,"comment_ctime":1585494100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585494100","product_id":100046801,"comment_content":"老师讲下OceanBase数据库","like_count":0},{"had_liked":false,"id":198645,"user_name":"木头发芽","can_delete":false,"product_type":"c1","uid":1419723,"ip_address":"","ucode":"657B381C5DA963","user_header":"https://static001.geekbang.org/account/avatar/00/15/a9/cb/a431bde5.jpg","comment_is_top":false,"comment_ctime":1585461482,"is_pvip":false,"replies":[{"id":"74811","content":"每种方案都有利弊，需要权衡。<br><br>下节课我会讲到，按照时间分片的这种方式，有哪些优缺点。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585531737,"ip_address":"","comment_id":198645,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585461482","product_id":100046801,"comment_content":"手动归档方案跟用按订单日期做sharding的方式比，我觉得后者更简单方便，只要提供给用户按日期阶段查订单功能查询性能也不会有太大影响，反而少了手动归档操作，手动容易出错，耗时耗力","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489735,"discussion_content":"每种方案都有利弊，需要权衡。\n\n下节课我会讲到，按照时间分片的这种方式，有哪些优缺点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585531737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198347,"user_name":"Minasix","can_delete":false,"product_type":"c1","uid":1795474,"ip_address":"","ucode":"6252A1A4A18799","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqMib1RDh7yMjERiaFvmay128fZw7EWOvUgL08WaxvxtrqBFqjezOTurR1ZnHbicAdiaCy5uwfQJwZicCg/132","comment_is_top":false,"comment_ctime":1585446337,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585446337","product_id":100046801,"comment_content":"很赞的课程，持续跟进学习，感谢老师","like_count":0},{"had_liked":false,"id":198305,"user_name":"丁小明","can_delete":false,"product_type":"c1","uid":1207622,"ip_address":"","ucode":"CC23857B8D75D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","comment_is_top":false,"comment_ctime":1585443728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585443728","product_id":100046801,"comment_content":"对于分库分表的方式，必然会存在跨表查询的问题，在这个业务场景下感觉没有什么优势。<br>或者说归档方案其实也是一种分库分表。","like_count":0},{"had_liked":false,"id":197210,"user_name":"小荷才露尖尖角","can_delete":false,"product_type":"c1","uid":1068480,"ip_address":"","ucode":"C74284B1FEA6BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/c0/7313033b.jpg","comment_is_top":false,"comment_ctime":1585363339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585363339","product_id":100046801,"comment_content":"好货","like_count":0},{"had_liked":false,"id":197159,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1585361074,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585361074","product_id":100046801,"comment_content":"老师好，“归档历史订单”优点是简单好实现，缺点是这种方案不够灵活，并且归档时间不可控，如果短时间业务增多数据量暴增，那本来归档三个月前的数据就变成了要归档两个月前的数据。<br>而订单按照时间创建每月一张表本质上就是分表了，既然分表，最关键的就是确认分表键，以用户id维度的查询，用时间来做分表键是不合适的，会导致一次用户查询多张表。所以比较好的解决方案我觉得应该是分表+历史数据归档，不是按照时间做分表。这样由于分表，基本可控制住当前库的数据，就算数据暴增，影响也不大，并且相同用户数据在一张表里面，查询高效。不过具体方案还要看具体场景，基本都是有用武之地的。","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366339,"discussion_content":"你将脚本中的时间参数改下（timestamp >= SUBDATE(CURDATE(),INTERVAL 2 month)）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618038546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197125,"user_name":"icyricky","can_delete":false,"product_type":"c1","uid":1302556,"ip_address":"","ucode":"D63C285165309D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/1c/aa50dc27.jpg","comment_is_top":false,"comment_ctime":1585359255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585359255","product_id":100046801,"comment_content":"提前拆分好，觉得就不需要做归档旧数据到历史表，不需要做碎片整理工作…比较省事，但是统计类的工作开发需求就会比较多…只能说看需求个有优劣吧","like_count":0}]}