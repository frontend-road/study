{"id":118657,"title":"48 | DMA：为什么Kafka这么快？","content":"<p>过去几年里，整个计算机产业界，都在尝试不停地提升I/O设备的速度。把HDD硬盘换成SSD硬盘，我们仍然觉得不够快；用PCI Express接口的SSD硬盘替代SATA接口的SSD硬盘，我们还是觉得不够快，所以，现在就有了傲腾（Optane）这样的技术。</p><p>但是，无论I/O速度如何提升，比起CPU，总还是太慢。SSD硬盘的IOPS可以到2万、4万，但是我们CPU的主频有2GHz以上，也就意味着每秒会有20亿次的操作。</p><p>如果我们对于I/O的操作，都是由CPU发出对应的指令，然后等待I/O设备完成操作之后返回，那CPU有大量的时间其实都是在等待I/O设备完成操作。</p><p>但是，这个CPU的等待，在很多时候，其实并没有太多的实际意义。我们对于I/O设备的大量操作，其实都只是把内存里面的数据，传输到I/O设备而已。在这种情况下，其实CPU只是在傻等而已。特别是当传输的数据量比较大的时候，比如进行大文件复制，如果所有数据都要经过CPU，实在是有点儿太浪费时间了。</p><p>因此，计算机工程师们，就发明了DMA技术，也就是<strong>直接内存访问</strong>（Direct Memory Access）技术，来减少CPU等待的时间。</p><h2>理解DMA，一个协处理器</h2><!-- [[[read_end]]] --><p>其实DMA技术很容易理解，本质上，DMA技术就是我们在主板上放一块独立的芯片。在进行内存和I/O设备的数据传输的时候，我们不再通过CPU来控制数据传输，而直接通过<strong>DMA控制器</strong>（DMA Controller，简称DMAC）。这块芯片，我们可以认为它其实就是一个<strong>协处理器</strong>（Co-Processor）。</p><p><strong>DMAC最有价值的地方体现在，当我们要传输的数据特别大、速度特别快，或者传输的数据特别小、速度特别慢的时候。</strong></p><p>比如说，我们用千兆网卡或者硬盘传输大量数据的时候，如果都用CPU来搬运的话，肯定忙不过来，所以可以选择DMAC。而当数据传输很慢的时候，DMAC可以等数据到齐了，再发送信号，给到CPU去处理，而不是让CPU在那里忙等待。</p><p>好了，现在你应该明白DMAC的价值，知道了它适合用在什么情况下。那我们现在回过头来看。我们上面说，DMAC是一块“协处理器芯片”，这是为什么呢？</p><p>注意，这里面的“协”字。DMAC是在“协助”CPU，完成对应的数据传输工作。在DMAC控制数据传输的过程中，我们还是需要CPU的。</p><p>除此之外，DMAC其实也是一个特殊的I/O设备，它和CPU以及其他I/O设备一样，通过连接到总线来进行实际的数据传输。总线上的设备呢，其实有两种类型。一种我们称之为<strong>主设备</strong>（Master），另外一种，我们称之为<strong>从设备</strong>（Slave）。</p><p>想要主动发起数据传输，必须要是一个主设备才可以，CPU就是主设备。而我们从设备（比如硬盘）只能接受数据传输。所以，如果通过CPU来传输数据，要么是CPU从I/O设备读数据，要么是CPU向I/O设备写数据。</p><p>这个时候你可能要问了，那我们的I/O设备不能向主设备发起请求么？可以是可以，不过这个发送的不是数据内容，而是控制信号。I/O设备可以告诉CPU，我这里有数据要传输给你，但是实际数据是CPU拉走的，而不是I/O设备推给CPU的。</p><p><img src=\"https://static001.geekbang.org/resource/image/99/bc/9998b67238044aad60d2aa0735b98ebc.jpeg?wh=2269*1513\" alt=\"\"></p><p>不过，DMAC就很有意思了，它既是一个主设备，又是一个从设备。对于CPU来说，它是一个从设备；对于硬盘这样的IO设备来说呢，它又变成了一个主设备。那使用DMAC进行数据传输的过程究竟是什么样的呢？下面我们来具体看看。</p><p>1.首先，CPU还是作为一个主设备，向DMAC设备发起请求。这个请求，其实就是在DMAC里面修改配置寄存器。</p><p>2.CPU修改DMAC的配置的时候，会告诉DMAC这样几个信息：</p><ul>\n<li>首先是<strong>源地址的初始值以及传输时候的地址增减方式</strong>。<br>\n所谓源地址，就是数据要从哪里传输过来。如果我们要从内存里面写入数据到硬盘上，那么就是要读取的数据在内存里面的地址。如果是从硬盘读取数据到内存里，那就是硬盘的I/O接口的地址。<br>\n我们讲过总线的时候说过，I/O的地址可以是一个内存地址，也可以是一个端口地址。而地址的增减方式就是说，数据是从大的地址向小的地址传输，还是从小的地址往大的地址传输。</li>\n<li>其次是<strong>目标地址初始值和传输时候的地址增减方式</strong>。目标地址自然就是和源地址对应的设备，也就是我们数据传输的目的地。</li>\n<li>第三个自然是<strong>要传输的数据长度</strong>，也就是我们一共要传输多少数据。</li>\n</ul><p>3.设置完这些信息之后，DMAC就会变成一个空闲的状态（Idle）。</p><p>4.如果我们要从硬盘上往内存里面加载数据，这个时候，硬盘就会向DMAC发起一个数据传输请求。这个请求并不是通过总线，而是通过一个额外的连线。</p><p>5.然后，我们的DMAC需要再通过一个额外的连线响应这个申请。</p><p>6.于是，DMAC这个芯片，就向硬盘的接口发起要总线读的传输请求。数据就从硬盘里面，读到了DMAC的控制器里面。</p><p>7.然后，DMAC再向我们的内存发起总线写的数据传输请求，把数据写入到内存里面。</p><p>8.DMAC会反复进行上面第6、7步的操作，直到DMAC的寄存器里面设置的数据长度传输完成。</p><p>9.数据传输完成之后，DMAC重新回到第3步的空闲状态。</p><p>所以，整个数据传输的过程中，我们不是通过CPU来搬运数据，而是由DMAC这个芯片来搬运数据。但是CPU在这个过程中也是必不可少的。因为传输什么数据，从哪里传输到哪里，其实还是由CPU来设置的。这也是为什么，DMAC被叫作“协处理器”。</p><p><img src=\"https://static001.geekbang.org/resource/image/c9/8e/c9ed34b47b0cd33867c581772d8eff8e.jpeg?wh=1456*1336\" alt=\"\"></p><center><span class=\"reference\">现在的外设里面，很多都内置了DMAC</span></center><p>最早，计算机里是没有DMAC的，所有数据都是由CPU来搬运的。随着人们对于数据传输的需求越来越多，先是出现了主板上独立的DMAC控制器。到了今天，各种I/O设备越来越多，数据传输的需求越来越复杂，使用的场景各不相同。加之显示器、网卡、硬盘对于数据传输的需求都不一样，所以各个设备里面都有自己的DMAC芯片了。</p><h2>为什么那么快？一起来看Kafka的实现原理</h2><p>了解了DMAC是怎么回事儿，那你可能要问了，这和我们实际进行程序开发有什么关系呢？有什么API，我们直接调用一下，就能加速数据传输，减少CPU占用吗？</p><p>你还别说，过去几年的大数据浪潮里面，还真有一个开源项目很好地利用了DMA的数据传输方式，通过DMA的方式实现了非常大的性能提升。这个项目就是<strong>Kafka</strong>。下面我们就一起来看看它究竟是怎么利用DMA的。</p><p>Kafka是一个用来处理实时数据的管道，我们常常用它来做一个消息队列，或者用来收集和落地海量的日志。作为一个处理实时数据和日志的管道，瓶颈自然也在I/O层面。</p><p>Kafka里面会有两种常见的海量数据传输的情况。一种是从网络中接收上游的数据，然后需要落地到本地的磁盘上，确保数据不丢失。另一种情况呢，则是从本地磁盘上读取出来，通过网络发送出去。</p><p>我们来看一看后一种情况，从磁盘读数据发送到网络上去。如果我们自己写一个简单的程序，最直观的办法，自然是用一个文件读操作，从磁盘上把数据读到内存里面来，然后再用一个Socket，把这些数据发送到网络上去。</p><pre><code>File.read(fileDesc, buf, len);\nSocket.send(socket, buf, len);\n</code></pre><center><a href=\"https://developer.ibm.com/articles/j-zerocopy/\">代码来源</a></center><center><span class=\"reference\">这段伪代码，来自IBM Developer Works上关于Zero Copy的文章</span></center><p>在这个过程中，数据一共发生了四次传输的过程。其中两次是DMA的传输，另外两次，则是通过CPU控制的传输。下面我们来具体看看这个过程。</p><p>第一次传输，是从硬盘上，读到操作系统内核的缓冲区里。这个传输是通过DMA搬运的。</p><p>第二次传输，需要从内核缓冲区里面的数据，复制到我们应用分配的内存里面。这个传输是通过CPU搬运的。</p><p>第三次传输，要从我们应用的内存里面，再写到操作系统的Socket的缓冲区里面去。这个传输，还是由CPU搬运的。</p><p>最后一次传输，需要再从Socket的缓冲区里面，写到网卡的缓冲区里面去。这个传输又是通过DMA搬运的。</p><p><img src=\"https://static001.geekbang.org/resource/image/e0/d5/e0e85505e793e804e3b396fc50871cd5.jpg?wh=2376*1653\" alt=\"\"></p><p>这个时候，你可以回过头看看这个过程。我们只是要“搬运”一份数据，结果却整整搬运了四次。而且这里面，从内核的读缓冲区传输到应用的内存里，再从应用的内存里传输到Socket的缓冲区里，其实都是把同一份数据在内存里面搬运来搬运去，特别没有效率。</p><p>像Kafka这样的应用场景，其实大部分最终利用到的硬件资源，其实又都是在干这个搬运数据的事儿。所以，我们就需要尽可能地减少数据搬运的需求。</p><p>事实上，Kafka做的事情就是，把这个数据搬运的次数，从上面的四次，变成了两次，并且只有DMA来进行数据搬运，而不需要CPU。</p><pre><code>@Override\npublic long transferFrom(FileChannel fileChannel, long position, long count) throws IOException {\n    return fileChannel.transferTo(position, count, socketChannel);\n}\n</code></pre><center><span class=\"reference\">如果你层层追踪Kafka的代码，你会发现，最终它调用了Java  NIO库里的transferTo方法</span></center><p>Kafka的代码调用了Java NIO库，具体是FileChannel里面的transferTo方法。我们的数据并没有读到中间的应用内存里面，而是直接通过Channel，写入到对应的网络设备里。并且，对于Socket的操作，也不是写入到Socket的Buffer里面，而是直接根据描述符（Descriptor）写入到网卡的缓冲区里面。于是，在这个过程之中，我们只进行了两次数据传输。</p><p><img src=\"https://static001.geekbang.org/resource/image/59/ab/596042d111ad9b871045d970a10464ab.jpg?wh=2116*1578\" alt=\"\"></p><p>第一次，是通过DMA，从硬盘直接读到操作系统内核的读缓冲区里面。第二次，则是根据Socket的描述符信息，直接从读缓冲区里面，写入到网卡的缓冲区里面。</p><p>这样，我们同一份数据传输的次数从四次变成了两次，并且没有通过CPU来进行数据搬运，所有的数据都是通过DMA来进行传输的。</p><p>在这个方法里面，我们没有在内存层面去“复制（Copy）”数据，所以这个方法，也被称之为<strong>零拷贝</strong>（Zero-Copy）。</p><p>IBM Developer Works里面有一篇文章，专门写过程序来测试过，在同样的硬件下，使用零拷贝能够带来的性能提升。我在这里放上这篇文章<a href=\"https://developer.ibm.com/articles/j-zerocopy/\">链接</a>。在这篇文章最后，你可以看到，无论传输数据量的大小，传输同样的数据，使用了零拷贝能够缩短65%的时间，大幅度提升了机器传输数据的吞吐量。想要深入了解零拷贝，建议你可以仔细读一读这篇文章。</p><h2>总结延伸</h2><p>讲到这里，相信你对DMA的原理、作用和效果都有所理解了。那么，我们一起来回顾总结一下。</p><p>如果我们始终让CPU来进行各种数据传输工作，会特别浪费。一方面，我们的数据传输工作用不到多少CPU核心的“计算”功能。另一方面，CPU的运转速度也比I/O操作要快很多。所以，我们希望能够给CPU“减负”。</p><p>于是，工程师们就在主板上放上了DMAC这样一个协处理器芯片。通过这个芯片，CPU只需要告诉DMAC，我们要传输什么数据，从哪里来，到哪里去，就可以放心离开了。后续的实际数据传输工作，都会由DMAC来完成。随着现代计算机各种外设硬件越来越多，光一个通用的DMAC芯片不够了，我们在各个外设上都加上了DMAC芯片，使得CPU很少再需要关心数据传输的工作了。</p><p>在我们实际的系统开发过程中，利用好DMA的数据传输机制，也可以大幅提升I/O的吞吐率。最典型的例子就是Kafka。</p><p>传统地从硬盘读取数据，然后再通过网卡向外发送，我们需要进行四次数据传输，其中有两次是发生在内存里的缓冲区和对应的硬件设备之间，我们没法节省掉。但是还有两次，完全是通过CPU在内存里面进行数据复制。</p><p>在Kafka里，通过Java的NIO里面FileChannel的transferTo方法调用，我们可以不用把数据复制到我们应用程序的内存里面。通过DMA的方式，我们可以把数据从内存缓冲区直接写到网卡的缓冲区里面。在使用了这样的零拷贝的方法之后呢，我们传输同样数据的时间，可以缩减为原来的1/3，相当于提升了3倍的吞吐率。</p><p>这也是为什么，Kafka是目前实时数据传输管道的标准解决方案。</p><h2>推荐阅读</h2><p>学完了这一讲之后，我推荐你阅读一下Kafka的论文，<a href=\"http://notes.stephenholiday.com/Kafka.pdf\">Kakfa:a Distrubted Messaging System for Log Processing</a>。Kafka的论文其实非常简单易懂，是一个很好的让你了解系统、日志、分布式系统的入门材料。</p><p>如果你想要进一步去了解Kafka，也可以订阅极客时间的专栏“<a href=\"https://time.geekbang.org/column/intro/191\">Kafka核心技术与实战</a>”。</p><h2>课后思考</h2><p>你可以自己尝试写一段使用零拷贝和不使用零拷贝传输数据的代码，然后看一看两者之间的性能差异。你可以看看，零拷贝能够带来多少吞吐量提升。</p><p>欢迎你把你运行程序的结果写在留言区，和大家一起讨论、分享。你也可以把这个问题分享给你的朋友，一起试一试，看看DMA和零拷贝，是否真的可以大幅度提升性能。</p><p></p>","neighbors":{"left":{"article_title":"47 | SSD硬盘（下）：如何完成性能优化的KPI？","id":118191},"right":{"article_title":"49 | 数据完整性（上）：硬件坏了怎么办？","id":119901}},"comments":[{"had_liked":false,"id":138020,"user_name":"焰火","can_delete":false,"product_type":"c1","uid":1244606,"ip_address":"","ucode":"D3353B386DE3B5","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/be/079c78c7.jpg","comment_is_top":false,"comment_ctime":1569984361,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"289332793193","product_id":100026001,"comment_content":"DMAC：我们不加工数据，只是数据的搬运工","like_count":68,"discussions":[{"author":{"id":2413071,"avatar":"https://static001.geekbang.org/account/avatar/00/24/d2/0f/8f14c85b.jpg","nickname":"红薯板栗","note":"","ucode":"236BE91291A575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351304,"discussion_content":"CPU是老板，DMA是员工，不能让搬运数据的活影响了老板的思考[狗头]","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1614235779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637933,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","nickname":"深水蓝","note":"","ucode":"3E3B195DE54DE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195695,"discussion_content":"这个必要很棒很喜欢。其实DMAC也是可以加工数据的，例如数据的拼接。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583298926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125949,"user_name":"免费的人","can_delete":false,"product_type":"c1","uid":1032106,"ip_address":"","ucode":"2B12D8ED63C564","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/aa/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1566280248,"is_pvip":false,"replies":[{"id":"52657","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569661647,"ip_address":"","comment_id":125949,"utype":1}],"discussion_count":1,"race_medal":0,"score":"134710266424","product_id":100026001,"comment_content":"从kafka论文里摘的：<br>In addition we optimize the network access for consumers. Kafka<br>is a multi-subscriber system and a single message may be<br>consumed multiple times by different consumer applications. A<br>typical approach to sending bytes from a local file to a remote<br>socket involves the following steps: (1) read data from the storage<br>media to the page cache in an OS, (2) copy data in the page cache<br>to an application buffer, (3) copy application buffer to another<br>kernel buffer, (4) send the kernel buffer to the socket. This<br>includes 4 data copying and 2 system calls. On Linux and other<br>Unix operating systems, there exists a sendfile API [5] that can<br>directly transfer bytes from a file channel to a socket channel.<br>This typically avoids 2 of the copies and 1 system call introduced<br>in steps (2) and (3). Kafka exploits the sendfile API to efficiently<br>deliver bytes in a log segment file from a broker to a consumer.","like_count":32,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463762,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569661647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235228,"user_name":"Hellboy1989","can_delete":false,"product_type":"c1","uid":1510970,"ip_address":"","ucode":"5843AF09CDA063","user_header":"https://static001.geekbang.org/account/avatar/00/17/0e/3a/a84da865.jpg","comment_is_top":false,"comment_ctime":1594947583,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"96084228095","product_id":100026001,"comment_content":"kafkad那么快，零拷贝是其中一面，他的硬盘顺序读写也是一个重要的原因。","like_count":23,"discussions":[{"author":{"id":1165671,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/67/0f74bf61.jpg","nickname":"昵称还没想好。","note":"","ucode":"21E6001F29951B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577544,"discussion_content":"还有 消息批处理、二分查找（*.index -&gt; *.log）、Page Cache等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656170146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125826,"user_name":"yhh","can_delete":false,"product_type":"c1","uid":1105102,"ip_address":"","ucode":"B566981788B6A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/ce/a144dea1.jpg","comment_is_top":false,"comment_ctime":1566262896,"is_pvip":false,"replies":[{"id":"52656","content":"yhh同学，<br><br>你好，那就不能了，我们需要把数据复制到内存里面来，在用户态用程序进行处理。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569661603,"ip_address":"","comment_id":125826,"utype":1}],"discussion_count":5,"race_medal":0,"score":"87465608816","product_id":100026001,"comment_content":"如果我们的应用程序需要对数据做进一步的加工，那还能使用零拷贝吗","like_count":21,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463706,"discussion_content":"yhh同学，\n\n你好，那就不能了，我们需要把数据复制到内存里面来，在用户态用程序进行处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569661603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/e7/31944ee7.jpg","nickname":"千军万马万马@","note":"","ucode":"0BDAD22123435A","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375991,"discussion_content":"nonono,应该这样问 &#34;如果我们的应用程序需要对数据做进一步的加工，那还能使用零拷贝概念下的技术方案比如: mmap+file  or sendfile()  or sendfile+DMA Scatter/Gather 吗?&#34;","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621919009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1269827,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/43/1690d87e.jpg","nickname":"山丘","note":"","ucode":"28B3B82D1242E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553533,"discussion_content":"内核态开发也可以的嘛，不一定需要用户态程序才能修改内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645953646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1939316,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/97/74/a933d664.jpg","nickname":"莜戏","note":"","ucode":"C3488A2BB44359","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1269827,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/43/1690d87e.jpg","nickname":"山丘","note":"","ucode":"28B3B82D1242E3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577336,"discussion_content":"内核不应该去处理上层的具体事务","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1656040520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":553533,"ip_address":""},"score":577336,"extra":""}]},{"author":{"id":1014800,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","nickname":"Scott","note":"","ucode":"7E57FDCB5E5D49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5832,"discussion_content":"不能，因为那样必须要到用户空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566476721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133579,"user_name":"soimage","can_delete":false,"product_type":"c1","uid":1011400,"ip_address":"","ucode":"82FC2D560616D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/c8/ed2926b5.jpg","comment_is_top":false,"comment_ctime":1568613586,"is_pvip":false,"replies":[{"id":"52627","content":"soimage，<br><br>这样说也对，不过砍完之后数据传输其实都是DMA的过程了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569657093,"ip_address":"","comment_id":133579,"utype":1}],"discussion_count":3,"race_medal":0,"score":"70288090322","product_id":100026001,"comment_content":"看到最后，也没看出kafka快跟dma有关系，倒是跟zero-copy关系大一些，通过砍掉两次内核空间和用户空间的数据拷贝，以及内核态和用户态的切换成本来优化","like_count":17,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467433,"discussion_content":"soimage，\n\n这样说也对，不过砍完之后数据传输其实都是DMA的过程了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569657093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105854,"avatar":"https://static001.geekbang.org/account/avatar/00/10/df/be/c6f8953f.jpg","nickname":"万事屋","note":"","ucode":"57C08B85373B0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39031,"discussion_content":"不是要走tcp吗，是拷贝到tcp缓冲区吗？tcp缓冲区和网卡缓冲区啥区别？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571880689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1096652,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bb/cc/fac12364.jpg","nickname":"xxx","note":"","ucode":"E79CEA70430449","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1105854,"avatar":"https://static001.geekbang.org/account/avatar/00/10/df/be/c6f8953f.jpg","nickname":"万事屋","note":"","ucode":"57C08B85373B0D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577632,"discussion_content":"TCP的缓冲区还是在操作系统内核中，而网卡缓冲区在网卡设备中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656245761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39031,"ip_address":""},"score":577632,"extra":""}]}]},{"had_liked":false,"id":185632,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1583650338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57418225186","product_id":100026001,"comment_content":"其实底层还是调用了linux的系统调用sendfile这个函数","like_count":14},{"had_liked":false,"id":227156,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1592300893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35952039261","product_id":100026001,"comment_content":"面试被问到为什么kafka这么快，这篇文章至少可以作为原因之一。可惜今天才看到","like_count":9},{"had_liked":false,"id":160910,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1576059441,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35935797809","product_id":100026001,"comment_content":"以前只知道kafka通过零拷贝技术提高了吞吐量，但不知道为什么？这下老师通过硬件知识体系理解了相关技术原理，简直太棒了","like_count":8},{"had_liked":false,"id":142144,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1571300020,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35931038388","product_id":100026001,"comment_content":"  因为cpu比较快，而io比较慢，所以在处理数据的时候，主板或者外部设备上添加了DMA这个io读取操作的协处理器。<br> kafaka 是利用dma的硬件条件，减少，cpu对于数据的搬运次数，因为kafuka在处理实时消息方面比较快。","like_count":9,"discussions":[{"author":{"id":1940105,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","nickname":"A君","note":"","ucode":"FE96F089C2312C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292786,"discussion_content":"将内核态内存映射到用户态，就实现了数据在两态间切换的零拷贝。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595331362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125948,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1566280208,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"35926018576","product_id":100026001,"comment_content":"老师 我想问一下 对于传统的四步读取文件然后网络发送里 操作系统的内核缓冲区是不是也在内存的某一个地方（只是用户访问不到）然后第二步 复制到应用程序内存中 事实上就是从内存的某一个地方复制到内存另一个地方 然后应用程序就可以操作了","like_count":8,"discussions":[{"author":{"id":1014800,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","nickname":"Scott","note":"","ucode":"7E57FDCB5E5D49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6801,"discussion_content":"是的，kernel buffer","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1567126921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1268264,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5a/28/732d3f2f.jpg","nickname":"GEEKBANG_6638780","note":"","ucode":"952194E56FD8C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284136,"discussion_content":"这里面其实就是设计了系统调用，内核态到用户态的切换","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1592451456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243901,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fa/fd/ec24cba7.jpg","nickname":"fcb的鱼","note":"","ucode":"88667EBF09CEC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163482,"discussion_content":"是的，操作系统内核的缓冲区用户访问不到。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581081346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141924,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1571270680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27341074456","product_id":100026001,"comment_content":"请问老师，我是不是可以这样理解，java的fileChannel的api都是基于DMAC的实现？","like_count":6},{"had_liked":false,"id":138032,"user_name":"前端西瓜哥","can_delete":false,"product_type":"c1","uid":1248576,"ip_address":"","ucode":"150130C34CD1C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/40/f70e5653.jpg","comment_is_top":false,"comment_ctime":1569987205,"is_pvip":false,"replies":[{"id":"53158","content":"Fstar同学，<br><br>你好，我不是一个Web服务器的专家，所以其他Web服务器我不太清楚。不过Nginx的确是可以通过配置sendfile的开关on&#47;off来控制是不是zero copy的","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1570084754,"ip_address":"","comment_id":138032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23044823685","product_id":100026001,"comment_content":"我记得 Nginx 的静态服务器貌似也是零拷贝。市面上常见的web服务器的静态服务器应该都实现了零拷贝吧？","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469357,"discussion_content":"Fstar同学，\n\n你好，我不是一个Web服务器的专家，所以其他Web服务器我不太清楚。不过Nginx的确是可以通过配置sendfile的开关on/off来控制是不是zero copy的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570084754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125394,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1399673,"ip_address":"","ucode":"929E3FFD14EFC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/79/d55044ac.jpg","comment_is_top":false,"comment_ctime":1566178646,"is_pvip":false,"replies":[{"id":"52659","content":"coder同学，<br><br>你好，超算里面的rDMA我还真没有了解过。等我抽空先自己学习一下。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569661696,"ip_address":"","comment_id":125394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23041015126","product_id":100026001,"comment_content":" 超算里面核与核之间的数据拷贝，一般会通过基于IB总线的RDMA来完成，可以避免过cpu内核的开销，希望徐老师能讲一下rDMA","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463561,"discussion_content":"coder同学，\n\n你好，超算里面的rDMA我还真没有了解过。等我抽空先自己学习一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569661696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273077,"user_name":"吃饭睡觉打酱油","can_delete":false,"product_type":"c1","uid":1071668,"ip_address":"","ucode":"95EC98C2B5045B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5a/34/4cbadca6.jpg","comment_is_top":false,"comment_ctime":1610432615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18790301799","product_id":100026001,"comment_content":"老师，看完后对DMAC进行数据传输流程有疑问：1、为什么需要刚开始的第3步  2、第4的发起为什么是硬盘发起的，而不是DMAC ？","like_count":5},{"had_liked":false,"id":127900,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1566806877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14451708765","product_id":100026001,"comment_content":"从去年一直在在用elk+kafka 作为日志系统，之所以选择kafka是因为知道他快，但是具体怎么快？为什么快只有学完这篇你会觉得一下通透了<br>day 48天笔记：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;11412797.html","like_count":3},{"had_liked":false,"id":125645,"user_name":"大明","can_delete":false,"product_type":"c1","uid":1179422,"ip_address":"","ucode":"EE63B3F69F93BD","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/1e/2a40a5ca.jpg","comment_is_top":false,"comment_ctime":1566220015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14451121903","product_id":100026001,"comment_content":"哈哈哈哈","like_count":3},{"had_liked":false,"id":130813,"user_name":"纵横四海1949","can_delete":false,"product_type":"c1","uid":1152862,"ip_address":"","ucode":"C53B9D0973A4FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/5e/3a9928eb.jpg","comment_is_top":false,"comment_ctime":1567556559,"is_pvip":false,"replies":[{"id":"51133","content":"看这个程序怎么写啊，可以走DMA也可以不走DMA。<br><br>不走DMA就是要通过user space在内存里面复制中转。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568539088,"ip_address":"","comment_id":130813,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10157491151","product_id":100026001,"comment_content":"从C盘复制数据到D盘是怎么个过程呢？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466142,"discussion_content":"看这个程序怎么写啊，可以走DMA也可以不走DMA。\n\n不走DMA就是要通过user space在内存里面复制中转。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568539088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152862,"avatar":"https://static001.geekbang.org/account/avatar/00/11/97/5e/3a9928eb.jpg","nickname":"纵横四海1949","note":"","ucode":"C53B9D0973A4FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196798,"discussion_content":"多谢老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583373802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125507,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566196823,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10156131415","product_id":100026001,"comment_content":"老师讲得好啊，之前一直不是很理解DMA是什么原理，到底是怎么工作的，这篇文章，深入浅出，感谢老师。","like_count":2,"discussions":[{"author":{"id":1446025,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erTlRJ6skf7iawAeqNfIT1PPgjD7swUdRIRkX1iczjj97GNrxnsnn3QuOhkVbCLgFYAm7sMZficNTSbA/132","nickname":"senekis","note":"","ucode":"CD88681F0278FD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5413,"discussion_content":"谢谢老师，终于对零拷贝技术的底层有了一定的认识，之前困惑了很久的问题，终于又解决了一个。在住院的病床上看完了这篇文章，希望今天的检查之后不用去手术，能够早点回到工作岗位上继续编程啊！","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1566248254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125360,"user_name":"红泥小火炉","can_delete":false,"product_type":"c1","uid":1237681,"ip_address":"","ucode":"40D2BDEAFA65AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/b1/f2ac07ab.jpg","comment_is_top":false,"comment_ctime":1566174153,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10156108745","product_id":100026001,"comment_content":"对DMAC的长度配置时机有个疑问，一个DMAC下面可以挂多个设备吧，如果可以的话，不同设备的buffer长度是不同的，DMAC的长度配置做不到通用啊，难道是在每次传输前都需要配置一次？","like_count":3,"discussions":[{"author":{"id":1081379,"avatar":"https://static001.geekbang.org/account/avatar/00/10/80/23/33555b32.jpg","nickname":"天涯海角","note":"","ucode":"B35E85576982ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583560,"discussion_content":"现在每个设备都有自己的dma芯片了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660206331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188710,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","nickname":"LDxy","note":"","ucode":"956432CE7B7761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5388,"discussion_content":"每次都要配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566220694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125316,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1566145550,"is_pvip":false,"replies":[{"id":"52660","content":"安排同学，<br><br>你好，Linux Kernel里有sendfile函数来实现零拷贝","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569661748,"ip_address":"","comment_id":125316,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10156080142","product_id":100026001,"comment_content":"C语言可以直接调Linux系统api实现零拷贝吗？有哪些api？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463524,"discussion_content":"安排同学，\n\n你好，Linux Kernel里有sendfile函数来实现零拷贝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569661748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014800,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","nickname":"Scott","note":"","ucode":"7E57FDCB5E5D49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6802,"discussion_content":"还有一个transfer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567126983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1068361,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","nickname":"明翼","note":"","ucode":"E77F86BEB3D5C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5317,"discussion_content":"有的我记得是sendfile你可以去查查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566175879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259018,"user_name":"姜姜","can_delete":false,"product_type":"c1","uid":1120332,"ip_address":"","ucode":"1DAD620C8E9F31","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/4c/e12f3b41.jpg","comment_is_top":false,"comment_ctime":1604617463,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5899584759","product_id":100026001,"comment_content":"如果用mmap内存映射到文件，也可以实现领拷贝，这种方式会使用到DMAC吗？","like_count":1,"discussions":[{"author":{"id":1131165,"avatar":"https://static001.geekbang.org/account/avatar/00/11/42/9d/c36b7ef7.jpg","nickname":"顾骨","note":"","ucode":"3F6BA592AB7723","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409252,"discussion_content":"mmap还是会经历 DMA 把数据传输到 kernel buffer，然后 kernel buffer 和应用共享这个 buffer，然后再 send，也会涉及 DMA","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635403141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176529,"user_name":"fcb的鱼","can_delete":false,"product_type":"c1","uid":1243901,"ip_address":"","ucode":"88667EBF09CEC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/fa/fd/ec24cba7.jpg","comment_is_top":false,"comment_ctime":1581081503,"is_pvip":false,"replies":[{"id":"68633","content":"fcb的鱼同学，<br><br>你好，我觉得你在这里把软件和硬件的各个概念混在一起了。<br><br>1. CPU是硬件，操作系统是软件。内存也是硬件，数据都是加载到内存里面的。<br>2. “操作系统内核中的数据”存放在哪里？也是存放在内存里呀。<br>3. DMAC也是一个硬件，我们这里写的过程，就是直接从硬盘读数据到内存呀。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581219959,"ip_address":"","comment_id":176529,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5876048799","product_id":100026001,"comment_content":"cpu处理的是用户内存中的数据,访问不到操作系统中的数据。DMA处理的是操作系统内核中的数据，访问不到用户内存。可以这也理解吧？要不然为啥不让DMAC直接将数据从硬盘读到用户的内存呢？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483131,"discussion_content":"fcb的鱼同学，\n\n你好，我觉得你在这里把软件和硬件的各个概念混在一起了。\n\n1. CPU是硬件，操作系统是软件。内存也是硬件，数据都是加载到内存里面的。\n2. “操作系统内核中的数据”存放在哪里？也是存放在内存里呀。\n3. DMAC也是一个硬件，我们这里写的过程，就是直接从硬盘读数据到内存呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581219959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1466048,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/c0/45711276.jpg","nickname":"John","note":"","ucode":"A869A7692DA370","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226068,"discussion_content":"首先明白2个知识：\n1.在系统执行指令的时候有2种状态，一个是核心态、一个是用户态，这两个态是权限上的差别\n2.应用程序无法读取内核地址空间的数据。\n用一次IO举个例子\n1、app发起read 从用户态切换核心态\n2、DMA Copy到内核中\n3、再次切换内核copy到App\n4、App再次发起write 又要切换回核心态\n零拷贝就是通过DMA，避免了数据来回Copy，同时也避免了多次上下文切换，所以零拷贝也叫内核旁路技术","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1586418586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243901,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fa/fd/ec24cba7.jpg","nickname":"fcb的鱼","note":"","ucode":"88667EBF09CEC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164908,"discussion_content":"额，多谢回复。实际上我考虑的是在4步搬运法中为什么不让DMAC直接写到内存里边而不经过cpu的2次拷贝，仔细想了下才明白因为cpu是整个处理中心，必须由他来管理整个搬运步骤，所以省略不了。如果传输的数据在内存中不做任何加工,那么就选用2次搬运法，可以极大的提升效率。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581236641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127107,"user_name":"袭","can_delete":false,"product_type":"c1","uid":1077573,"ip_address":"","ucode":"D5B8609CDFB145","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/45/126cd913.jpg","comment_is_top":false,"comment_ctime":1566555920,"is_pvip":false,"replies":[{"id":"51183","content":"袭同学，<br><br>你好，什么叫做“程序到网卡”呢？其实从硬件的角度，只有内存、硬盘、网卡这些设备并没有“程序”这个东西。<br><br>需要把软件代码和硬件设备分离开来想这个问题。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568552825,"ip_address":"","comment_id":127107,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5861523216","product_id":100026001,"comment_content":"如果不是由硬盘而是要从程序到网卡，可以省略socket buffer这一步吗？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464324,"discussion_content":"袭同学，\n\n你好，什么叫做“程序到网卡”呢？其实从硬件的角度，只有内存、硬盘、网卡这些设备并没有“程序”这个东西。\n\n需要把软件代码和硬件设备分离开来想这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568552825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136903,"discussion_content":"他问的是从内存直接到网卡，不经过docker buffet","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579171400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349583,"user_name":"xianbin.yang","can_delete":false,"product_type":"c1","uid":2151575,"ip_address":"","ucode":"A9D26D0D649932","user_header":"https://static001.geekbang.org/account/avatar/00/20/d4/97/2f01be06.jpg","comment_is_top":false,"comment_ctime":1656116675,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656116675","product_id":100026001,"comment_content":"1.5G的文件，从硬盘到硬盘， nio是10毫秒，io是10秒","like_count":0},{"had_liked":false,"id":336710,"user_name":"Sudouble","can_delete":false,"product_type":"c1","uid":1365574,"ip_address":"","ucode":"B369B09DAF8D20","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/46/5eb5261b.jpg","comment_is_top":false,"comment_ctime":1646305218,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646305218","product_id":100026001,"comment_content":"看了老师这么多篇文章，印象最深的还是化繁为简的水平，一下点破了问题的核心。比如kafka数据传递效率如此高的原因是调用的是sendfile。<br>当业务量到了一个量级，需要进行各种优化和改进，这个过程很难得，但也是能让人成长最快的地方。","like_count":0},{"had_liked":false,"id":333632,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1644455723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644455723","product_id":100026001,"comment_content":"https:&#47;&#47;www.jianshu.com&#47;p&#47;fad3339e3448","like_count":0},{"had_liked":false,"id":331303,"user_name":"鹏伟刘","can_delete":false,"product_type":"c1","uid":1813243,"ip_address":"","ucode":"CE6E9DAEDDCC12","user_header":"https://static001.geekbang.org/account/avatar/00/1b/aa/fb/c4e781aa.jpg","comment_is_top":false,"comment_ctime":1642541272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642541272","product_id":100026001,"comment_content":"吞吐量提升三倍，是不是也说明cpu只有小部分时间在干数据搬运的活😂？然后单从数据传输速度看，第一次复制-从硬盘到缓存，以及第四次复制-从缓存到网络设备的传输速度，应该也比第二次和第三次复制-缓存之间复制的速度慢很多？","like_count":0},{"had_liked":false,"id":318772,"user_name":"czw","can_delete":false,"product_type":"c1","uid":2198248,"ip_address":"","ucode":"2A458E3AC8A951","user_header":"https://static001.geekbang.org/account/avatar/00/21/8a/e8/d53b0231.jpg","comment_is_top":false,"comment_ctime":1635419245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635419245","product_id":100026001,"comment_content":"内存缓存区是什么意思？","like_count":0},{"had_liked":false,"id":318721,"user_name":"顾骨","can_delete":false,"product_type":"c1","uid":1131165,"ip_address":"","ucode":"3F6BA592AB7723","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/9d/c36b7ef7.jpg","comment_is_top":false,"comment_ctime":1635402908,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1635402908","product_id":100026001,"comment_content":"传统的 sendfile 经历的过程：硬盘 -》kernel buffer -》socket buffer -》 NIC<br><br>只有网卡支持 scatter-gather 才是文中所描述的过程：硬盘 -》kernel buffer -》NIC<br><br>而且 Linux kernel 2.6.33 版本之后引入了新的系统调用 splice，一种软件实现的零拷贝技术","like_count":1},{"had_liked":false,"id":315323,"user_name":"Geek_ee3685","can_delete":false,"product_type":"c1","uid":2750366,"ip_address":"","ucode":"2E0D5A064F5619","user_header":"","comment_is_top":false,"comment_ctime":1633832645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633832645","product_id":100026001,"comment_content":"老师 用socket数据传输 为什么会有2 3两步 从内核缓冲区直接到 socket的缓冲区 为什么还要从内存里再到 buffer 里？","like_count":0},{"had_liked":false,"id":315320,"user_name":"Geek_ee3685","can_delete":false,"product_type":"c1","uid":2750366,"ip_address":"","ucode":"2E0D5A064F5619","user_header":"","comment_is_top":false,"comment_ctime":1633830368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633830368","product_id":100026001,"comment_content":"老师 地址增减方式是倒着读数据和正着读数据的意思吗？","like_count":0},{"had_liked":false,"id":314182,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1194572,"ip_address":"","ucode":"FBFAE23E8E48B7","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/4c/b6200773.jpg","comment_is_top":false,"comment_ctime":1632888592,"is_pvip":false,"replies":[{"id":"113929","content":"不是，是总线交给了DMA控制器，不需要CPU参与。地址空间还是需要的。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1633166095,"ip_address":"","comment_id":314182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632888592","product_id":100026001,"comment_content":"&gt;第一次，是通过 DMA，从硬盘直接读到操作系统内核的读缓冲区里面。第二次，则是根据 Socket 的描述符信息，直接从读缓冲区里面，写入到网卡的缓冲区里面。<br><br>这个实现过程是硬盘向DMAC发出控制信号，由DMAC拉取数据，然后又因为目标地址是网卡，地址固定？所以不用经过寻址的过程吗？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527602,"discussion_content":"不是，是总线交给了DMA控制器，不需要CPU参与。地址空间还是需要的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633166095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310033,"user_name":"Geek_337e21","can_delete":false,"product_type":"c1","uid":2274627,"ip_address":"","ucode":"D51F99290C30C8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyNezT33TyZdPI8DtRe7LzV9geutjMkaNNByOkyMXhNQVia5CJE54lWrBpicftq7jdo8bCcXhokjUQ/132","comment_is_top":false,"comment_ctime":1630462766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630462766","product_id":100026001,"comment_content":"为什么不直接从磁盘到网卡缓冲区？","like_count":0},{"had_liked":false,"id":305880,"user_name":"Geek_e08c40","can_delete":false,"product_type":"c1","uid":2666373,"ip_address":"","ucode":"8B4A3AC18EFD93","user_header":"","comment_is_top":false,"comment_ctime":1628217427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628217427","product_id":100026001,"comment_content":"对于 Socket 的操作，也不是写入到 Socket 的 Buffer 里面，而是直接根据描述符（Descriptor）写入到网卡的缓冲区里面<br><br>这块能详细讲一下吗 对于发送数据如果不写入到socket的buffer里面的话,又是怎么写入到nic buffer呢","like_count":0},{"had_liked":false,"id":300153,"user_name":"xiaoxlm","can_delete":false,"product_type":"c1","uid":2400819,"ip_address":"","ucode":"9F4DF8000C6749","user_header":"","comment_is_top":false,"comment_ctime":1625022241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625022241","product_id":100026001,"comment_content":"这章结合这篇文章看，更美味<br>https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;357820303","like_count":0},{"had_liked":false,"id":297135,"user_name":"菽绣","can_delete":false,"product_type":"c1","uid":1755477,"ip_address":"","ucode":"60955E14C39C6B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/c9/55/0e627a31.jpg","comment_is_top":false,"comment_ctime":1623322433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623322433","product_id":100026001,"comment_content":"明白了，所以kafka的堆内存要设小","like_count":0},{"had_liked":false,"id":270994,"user_name":"鱼","can_delete":false,"product_type":"c1","uid":1487584,"ip_address":"","ucode":"89EC9CE3AD0281","user_header":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","comment_is_top":false,"comment_ctime":1609340682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609340682","product_id":100026001,"comment_content":"Kafka除了通过JavaNIO的transferTo利用sendfile零拷贝技术（涉及DMA）,在Broker中数据落盘时候还通过Java的MappedByteBuffer实践了另外一种零拷贝技术--Memory Mapped File,加快数据的写入，","like_count":0},{"had_liked":false,"id":267574,"user_name":"BlingBling","can_delete":false,"product_type":"c1","uid":2059896,"ip_address":"","ucode":"E6EFCFE55B3672","user_header":"https://static001.geekbang.org/account/avatar/00/1f/6e/78/e7045b49.jpg","comment_is_top":false,"comment_ctime":1607831970,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1607831970","product_id":100026001,"comment_content":"老师您好，请问一下cpu和gpu之间可以实现zero copy吗？在实际项目中遇到相关的需求场景，希望老师提供一些思路和方向，谢谢🙏","like_count":0},{"had_liked":false,"id":249169,"user_name":"Ethan","can_delete":false,"product_type":"c1","uid":1810189,"ip_address":"","ucode":"75F613D58909DB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZHw73tgCqGKhvticUWGRz4icgicu4hFWfKtacoFJeItH7maNuNUmjnEgDTJvOibwUWgGV0p6guNPibMVWDV4BUmEmlA/132","comment_is_top":false,"comment_ctime":1600491474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600491474","product_id":100026001,"comment_content":"“第二次传输，需要从内核缓冲区里面的数据，复制到我们应用分配的内存里面。这个传输是通过 CPU 搬运的。”那意思是说磁盘中的一份数据在内存中会有copy多一份，也就是两份吗？","like_count":0},{"had_liked":false,"id":235933,"user_name":"nero","can_delete":false,"product_type":"c1","uid":1078793,"ip_address":"","ucode":"038100ACA14B29","user_header":"https://static001.geekbang.org/account/avatar/00/10/76/09/cf7513c8.jpg","comment_is_top":false,"comment_ctime":1595250571,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1595250571","product_id":100026001,"comment_content":"DMA步骤哪里，CPU不仅仅像DMA发出了修改指令，而且。也会像通信的io设备发出请求。这样才会有第四步吧？要不然硬盘自己不会发出来DMA请求。<br>然后还有一个总线的控制权，是不是老师没说啊 ？ ","like_count":0,"discussions":[{"author":{"id":1400806,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","nickname":"Mr.埃克斯","note":"","ucode":"855BE5DFD2BB0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376020,"discussion_content":"老师这里讲的不是很明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621929355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203215,"user_name":"re","can_delete":false,"product_type":"c1","uid":1275541,"ip_address":"","ucode":"AA565C2B6EA105","user_header":"https://static001.geekbang.org/account/avatar/00/13/76/95/86a5c281.jpg","comment_is_top":false,"comment_ctime":1586157280,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586157280","product_id":100026001,"comment_content":"文章里提到了io搬运期间 cpu闲置 没有看出来dma快在哪 求解惑","like_count":0,"discussions":[{"author":{"id":2274627,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyNezT33TyZdPI8DtRe7LzV9geutjMkaNNByOkyMXhNQVia5CJE54lWrBpicftq7jdo8bCcXhokjUQ/132","nickname":"Geek_337e21","note":"","ucode":"D51F99290C30C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391436,"discussion_content":"原先数据需要经过cpu，现在数据不需要经过cpu而是cpu告诉dmc目的地址和源地址，大小，就可以不管了，实际的数据传输由dmc执行，此时cpu可以用来做其他事，而不是重复的从内存中读到寄存器，再从寄存器写到内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630463357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161347,"user_name":"成为祝福","can_delete":false,"product_type":"c1","uid":1315665,"ip_address":"","ucode":"8C48D080E9A6A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/51/99c88021.jpg","comment_is_top":false,"comment_ctime":1576196457,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1576196457","product_id":100026001,"comment_content":"老师好，如果CPU已经在步骤1和2成功设置了DMAC从硬盘读，写入内存，为何还需要第4步硬盘“主动”发起请求呢？感觉DMAC已经拥有一切需要的信息去“主动的”完成这次操作了。","like_count":0,"discussions":[{"author":{"id":1007294,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/be/9ea55f46.jpg","nickname":"feihui","note":"","ucode":"13F1D4A82BC650","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126988,"discussion_content":"有个预处理阶段：测试设备状态；向DMA控制器的设备地址寄存器中送入设备号，并启动设备；向主存地址计数器中送入欲交换数据的主存起始地址；向字计数器中送入欲交换的数据个数。外部设备准备好发送的数据（输入）或上次接收的数据已处理完毕（输出）时，将通知DMA控制器发出DMA请求，申请主存总线。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578557003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1122034,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1e/f2/453d5f88.jpg","nickname":"seker","note":"","ucode":"9B705F91355873","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1007294,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/be/9ea55f46.jpg","nickname":"feihui","note":"","ucode":"13F1D4A82BC650","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":297971,"discussion_content":"你好，基于给出的这些信息。在文中第4步，为什么DMAC不是“主动”发起请求，我的理解是这样的：\n\nCPU修改DMAC配置完成后，DMAC会变成一个空闲状态，需要等待硬盘给出的传输请求。\n\n这个时候DMAC并不知道外部设备是否已准备好要发送的数据，而DMAC并不需要去验证这些数据，只需要把数据从硬盘读到DMAC控制器里面，直到DMAC寄存器里面设置的数据长度传输完成。\n\n因此，DMAC并不会“主动”发起传输请求，而是“被动”等待传输请求。\n\n如我理解有问题可以再探讨下。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597127046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":126988,"ip_address":""},"score":297971,"extra":""}]}]},{"had_liked":false,"id":141022,"user_name":"David","can_delete":false,"product_type":"c1","uid":1023472,"ip_address":"","ucode":"1C76747719CD3B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9d/f0/6c34b90f.jpg","comment_is_top":false,"comment_ctime":1571103560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571103560","product_id":100026001,"comment_content":"👍","like_count":0},{"had_liked":false,"id":140612,"user_name":"skye","can_delete":false,"product_type":"c1","uid":1027840,"ip_address":"","ucode":"C55C9F52C78A00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/00/9b49f42b.jpg","comment_is_top":false,"comment_ctime":1571016205,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571016205","product_id":100026001,"comment_content":"老师，DMAC搬运数据的时候，CPU在干嘛？不是等待吗？","like_count":0,"discussions":[{"author":{"id":1022247,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","nickname":"阿卡牛","note":"","ucode":"0BC43A904C3199","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44047,"discussion_content":"不用等待，可以做其它事情，等DMA拷贝完成后通知CPU，CPU再处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572925517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138720,"user_name":"小先生","can_delete":false,"product_type":"c1","uid":1055214,"ip_address":"","ucode":"E5F2052E0323C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","comment_is_top":false,"comment_ctime":1570432996,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570432996","product_id":100026001,"comment_content":"请问老师，在什么场景下，I&#47;O 设备会主设备发起请求？<br>","like_count":0,"discussions":[{"author":{"id":1061803,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/ab/d8ba4242.jpg","nickname":"哒哒哒","note":"","ucode":"9378AD329F8AE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382473,"discussion_content":"我们常用的鼠标键盘的输入就是主动发起请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625586372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125788,"user_name":"gigglesun","can_delete":false,"product_type":"c1","uid":1012912,"ip_address":"","ucode":"7AE6C7DCE06063","user_header":"","comment_is_top":false,"comment_ctime":1566260742,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1566260742","product_id":100026001,"comment_content":"&quot;4. 如果我们要从硬盘上往内存里面加载数据，这个时候，硬盘就会向 DMAC 发起一个数据传输请求。这个请求并不是通过总线，而是通过一个额外的连线。&quot;这个地方不太明白，硬盘怎么能发起数据传输请求，我的理解硬盘就是单一的存储设备，没有逻辑处理能力。请老师指点~","like_count":0,"discussions":[{"author":{"id":2274627,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyNezT33TyZdPI8DtRe7LzV9geutjMkaNNByOkyMXhNQVia5CJE54lWrBpicftq7jdo8bCcXhokjUQ/132","nickname":"Geek_337e21","note":"","ucode":"D51F99290C30C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391440,"discussion_content":"首先 CPU 通过设置 DMA 控制器的寄存器对它进行编程，所以 DMA 控制器知道将什么数据传送到什么地方。DMA 控制器还要向磁盘控制器发出一个命令，通知它从磁盘读数据到其内部的缓冲区并检验校验和。当有效数据位于磁盘控制器的缓冲区中时，DMA 就可以开始了。\n\nDMA 控制器通过在总线上发出一个读请求到磁盘控制器而发起 DMA 传送，这是第二步。这个读请求就像其他读请求一样，磁盘控制器并不知道或者并不关心它是来自 CPU 还是来自 DMA 控制器。通常情况下，要写的内存地址在总线的地址线上，所以当磁盘控制器去匹配下一个字时，它知道将该字写到什么地方。写到内存就是另外一个总线循环了，这是第三步。当写操作完成时，磁盘控制器在总线上发出一个应答信号到 DMA 控制器，这是第四步。\n\n然后，DMA 控制器会增加内存地址并减少字节数量。如果字节数量仍然大于 0 ，就会循环步骤 2 - 步骤 4 ，直到字节计数变为 0 。此时，DMA 控制器会打断 CPU 并告诉它传输已经完成了。操作系统开始运行时，它不会把磁盘块拷贝到内存中，因为它已经在内存中了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630464636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2274627,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyNezT33TyZdPI8DtRe7LzV9geutjMkaNNByOkyMXhNQVia5CJE54lWrBpicftq7jdo8bCcXhokjUQ/132","nickname":"Geek_337e21","note":"","ucode":"D51F99290C30C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391442,"discussion_content":"也就是说，DMA需要等待磁盘发出数据（控制电路和接口）已经准备好的的信息，才可以开始读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630465138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/39/1be8b56c.jpg","nickname":"snzhaoch","note":"","ucode":"033111124D15DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7059,"discussion_content":"中断信号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567328969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1400806,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","nickname":"Mr.埃克斯","note":"","ucode":"855BE5DFD2BB0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1121593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/39/1be8b56c.jpg","nickname":"snzhaoch","note":"","ucode":"033111124D15DC","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":376022,"discussion_content":"感觉并不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621929454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7059,"ip_address":""},"score":376022,"extra":""}]}]}]}