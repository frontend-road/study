{"id":95844,"title":"11 | 二进制编码：“手持两把锟斤拷，口中疾呼烫烫烫”？","content":"<p>上算法和数据结构课的时候，老师们都会和你说，程序 = 算法 + 数据结构。如果对应到组成原理或者说硬件层面，算法就是我们前面讲的各种计算机指令，数据结构就对应我们接下来要讲的二进制数据。</p><p>众所周知，现代计算机都是用0和1组成的二进制，来表示所有的信息。前面几讲的程序指令用到的机器码，也是使用二进制表示的；我们存储在内存里面的字符串、整数、浮点数也都是用二进制表示的。万事万物在计算机里都是0和1，所以呢，搞清楚各种数据在二进制层面是怎么表示的，是我们必备的一课。</p><p>大部分教科书都会详细地从整数的二进制表示讲起，相信你在各种地方都能看到对应的材料，所以我就不再啰啰嗦嗦地讲这个了，只会快速地浏览一遍整数的二进制表示。</p><p>然后呢，我们重点来看一看，大家在实际应用中最常遇到的问题，也就是文本字符串是怎么表示成二进制的，特别是我们会遇到的乱码究竟是怎么回事儿。我们平时在开发的时候，所说的Unicode和UTF-8之间有什么关系。理解了这些，相信以后遇到任何乱码问题，你都能手到擒来了。</p><h2>理解二进制的“逢二进一”</h2><p>二进制和我们平时用的十进制，其实并没有什么本质区别，只是平时我们是“逢十进一”，这里变成了“逢二进一”而已。每一位，相比于十进制下的0～9这十个数字，我们只能用0和1这两个数字。</p><!-- [[[read_end]]] --><p>任何一个十进制的整数，都能通过二进制表示出来。把一个二进制数，对应到十进制，非常简单，就是把从右到左的第N位，乘上一个2的N次方，然后加起来，就变成了一个十进制数。当然，既然二进制是一个面向程序员的“语言”，这个从右到左的位置，自然是从0开始的。</p><p>比如0011这个二进制数，对应的十进制表示，就是$0×2^3+0×2^2+1×2^1+1×2^0$<br>\n$=3$，代表十进制的3。</p><p>对应地，如果我们想要把一个十进制的数，转化成二进制，使用<strong>短除法</strong>就可以了。也就是，把十进制数除以2的余数，作为最右边的一位。然后用商继续除以2，把对应的余数紧靠着刚才余数的右侧，这样递归迭代，直到商为0就可以了。</p><p>比如，我们想把13这个十进制数，用短除法转化成二进制，需要经历以下几个步骤：</p><p><img src=\"https://static001.geekbang.org/resource/image/a2/d8/a2b6f2a92bcf99e9f96367bbb90383d8.jpg?wh=1963*676\" alt=\"\"></p><p>因此，对应的二进制数，就是1101。</p><p>刚才我们举的例子都是正数，对于负数来说，情况也是一样的吗？我们可以把一个数最左侧的一位，当成是对应的正负号，比如0为正数，1为负数，这样来进行标记。</p><p>这样，一个4位的二进制数， 0011就表示为+3。而1011最左侧的第一位是1，所以它就表示-3。这个其实就是整数的<strong>原码表示法</strong>。原码表示法有一个很直观的缺点就是，0可以用两个不同的编码来表示，1000代表0， 0000也代表0。习惯万事一一对应的程序员看到这种情况，必然会被“逼死”。</p><p>于是，我们就有了另一种表示方法。我们仍然通过最左侧第一位的0和1，来判断这个数的正负。但是，我们不再把这一位当成单独的符号位，在剩下几位计算出的十进制前加上正负号，而是在计算整个二进制值的时候，在左侧最高位前面加个负号。</p><p>比如，一个4位的二进制补码数值1011，转换成十进制，就是$-1×2^3+0×2^2+1×2^1+1×2^0$<br>\n$=-5$。如果最高位是1，这个数必然是负数；最高位是0，必然是正数。并且，只有0000表示0，1000在这样的情况下表示-8。一个4位的二进制数，可以表示从-8到7这16个整数，不会白白浪费一位。</p><p>当然更重要的一点是，用补码来表示负数，使得我们的整数相加变得很容易，不需要做任何特殊处理，只是把它当成普通的二进制相加，就能得到正确的结果。</p><p>我们简单一点，拿一个4位的整数来算一下，比如 -5 + 1 = -4，-5 + 6 = 1。我们各自把它们转换成二进制来看一看。如果它们和无符号的二进制整数的加法用的是同样的计算方式，这也就意味着它们是同样的电路。</p><p><img src=\"https://static001.geekbang.org/resource/image/bf/ae/bf4cfd001308da2be317b08d1f40a7ae.jpg?wh=2896*1450\" alt=\"\"></p><h2>字符串的表示，从编码到数字</h2><p>不仅数值可以用二进制表示，字符乃至更多的信息都能用二进制表示。最典型的例子就是<strong>字符串</strong>（Character String）。最早计算机只需要使用英文字符，加上数字和一些特殊符号，然后用8位的二进制，就能表示我们日常需要的所有字符了，这个就是我们常常说的<strong>ASCII码</strong>（American Standard Code for Information Interchange，美国信息交换标准代码）。</p><p><img src=\"https://static001.geekbang.org/resource/image/be/05/bee81480de3f6e7181cb7bb5f55cc805.png?wh=1664*1104\" alt=\"\"></p><center><a href=\"https://en.wikipedia.org/wiki/ASCII\">图片来源</a></center><p>ASCII码就好比一个字典，用8位二进制中的128个不同的数，映射到128个不同的字符里。比如，小写字母a在ASCII里面，就是第97个，也就是二进制的0110 0001，对应的十六进制表示就是 61。而大写字母 A，就是第65个，也就是二进制的0100 0001，对应的十六进制表示就是41。</p><p>在ASCII码里面，数字9不再像整数表示法里一样，用0000 1001来表示，而是用0011 1001 来表示。字符串15也不是用0000 1111 这8位来表示，而是变成两个字符1和5连续放在一起，也就是 0011 0001 和 0011 0101，需要用两个8位来表示。</p><p>我们可以看到，最大的32位整数，就是2147483647。如果用整数表示法，只需要32位就能表示了。但是如果用字符串来表示，一共有10个字符，每个字符用8位的话，需要整整80位。比起整数表示法，要多占很多空间。</p><p>这也是为什么，很多时候我们在存储数据的时候，要采用二进制序列化这样的方式，而不是简单地把数据通过CSV或者JSON，这样的文本格式存储来进行序列化。<strong>不管是整数也好，浮点数也好，采用二进制序列化会比存储文本省下不少空间。</strong></p><p>ASCII码只表示了128个字符，一开始倒也堪用，毕竟计算机是在美国发明的。然而随着越来越多的不同国家的人都用上了计算机，想要表示譬如中文这样的文字，128个字符显然是不太够用的。于是，计算机工程师们开始各显神通，给自己国家的语言创建了对应的<strong>字符集</strong>（Charset）和<strong>字符编码</strong>（Character Encoding）。</p><p>字符集，表示的可以是字符的一个集合。比如“中文”就是一个字符集，不过这样描述一个字符集并不准确。想要更精确一点，我们可以说，“第一版《新华字典》里面出现的所有汉字”，这是一个字符集。这样，我们才能明确知道，一个字符在不在这个集合里面。比如，我们日常说的Unicode，其实就是一个字符集，包含了150种语言的14万个不同的字符。</p><p>而字符编码则是对于字符集里的这些字符，怎么一一用二进制表示出来的一个字典。我们上面说的Unicode，就可以用UTF-8、UTF-16，乃至UTF-32来进行编码，存储成二进制。所以，有了Unicode，其实我们可以用不止UTF-8一种编码形式，我们也可以自己发明一套 GT-32 编码，比如就叫作Geek Time 32好了。只要别人知道这套编码规则，就可以正常传输、显示这段代码。</p><p><img src=\"https://static001.geekbang.org/resource/image/99/3e/9911c58d79e8a1f106d48a83457d193e.jpg?wh=2821*1462\" alt=\"\"></p><p>同样的文本，采用不同的编码存储下来。如果另外一个程序，用一种不同的编码方式来进行解码和展示，就会出现乱码。这就好像两个军队用密语通信，如果用错了密码本，那看到的消息就会不知所云。在中文世界里，最典型的就是“手持两把锟斤拷，口中疾呼烫烫烫”的典故。</p><p>我曾经听说过这么一个笑话，没有经验的同学，在看到程序输出“烫烫烫”的时候，以为是程序让CPU过热发出报警，于是尝试给CPU降频来解决问题。</p><p>既然今天要彻底搞清楚编码知识，我们就来弄清楚“锟斤拷”和“烫烫烫”的来龙去脉。</p><p><img src=\"https://static001.geekbang.org/resource/image/5c/fd/5c6e03705f50c250ccb5300849c281fd.png?wh=820*343\" alt=\"\"></p><center><span class=\"reference\">搜索了一下我自己的个人邮件历史记录，不出意外,里面出现了各种“锟斤拷”</span></center><p>首先，“锟斤拷”的来源是这样的。如果我们想要用Unicode编码记录一些文本，特别是一些遗留的老字符集内的文本，但是这些字符在Unicode中可能并不存在。于是，Unicode会统一把这些字符记录为U+FFFD这个编码。如果用UTF-8的格式存储下来，就是\\xef\\xbf\\xbd。如果连续两个这样的字符放在一起，\\xef\\xbf\\xbd\\xef\\xbf\\xbd，这个时候，如果程序把这个字符，用GB2312的方式进行decode，就会变成“锟斤拷”。这就好比我们用GB2312这本密码本，去解密别人用UTF-8加密的信息，自然没办法读出有用的信息。</p><p>而“烫烫烫”，则是因为如果你用了Visual Studio的调试器，默认使用MBCS字符集。“烫”在里面是由0xCCCC来表示的，而0xCC又恰好是未初始化的内存的赋值。于是，在读到没有赋值的内存地址或者变量的时候，电脑就开始大叫“烫烫烫”了。</p><p>了解了这些原理，相信你未来在遇到中文的编码问题的时候，可以做到“手中有粮，心中不慌”了。</p><h2>总结延伸</h2><p>到这里，相信你发现，我们可以用二进制编码的方式，表示任意的信息。只要建立起字符集和字符编码，并且得到大家的认同，我们就可以在计算机里面表示这样的信息了。所以说，如果你有心，要发明一门自己的克林贡语并不是什么难事。</p><p>不过，光是明白怎么把数值和字符在逻辑层面用二进制表示是不够的。我们在计算机组成里面，关心的不只是数值和字符的逻辑表示，更要弄明白，在硬件层面，这些数值和我们一直提的晶体管和电路有什么关系。下一讲，我就会为你揭开神秘的面纱。我会从时钟和D触发器讲起，最终让你明白，计算机里的加法，是如何通过电路来实现的。</p><h2>推荐阅读</h2><p>关于二进制和编码，我推荐你读一读《编码：隐匿在计算机软硬件背后的语言》。从电报机到计算机，这本书讲述了很多计算设备的历史故事，当然，也包含了二进制及其背后对应的电路原理。</p><h2>课后思考</h2><p>你肯定会计算十进制整数的加减法，二进制的加减法也是一样的。如果二进制的加法中，有数是负数的时候该怎么处理呢？我们今天讲了补码的表示形式，如果这个负数是原码表示的，又应该如何处理？如果是补码表示的呢？请你用二进制加法试着算一算，-5+4=-1，通过原码和补码是如何进行的？</p><p>欢迎你在留言区写下你的思考和疑问，和大家一起探讨。你也可以把今天的文章分享给你朋友，和他一起学习和进步。</p>","neighbors":{"left":{"article_title":"10 | 动态链接：程序内部的“共享单车”","id":95244},"right":{"article_title":"12 | 理解电路：从电报机到门电路，我们如何做到“千里传信”？","id":95868}},"comments":[{"had_liked":false,"id":96036,"user_name":"Z.Clark","can_delete":false,"product_type":"c1","uid":1476747,"ip_address":"","ucode":"DE5B782EBB8DC0","user_header":"https://static001.geekbang.org/account/avatar/00/16/88/8b/12fb6161.jpg","comment_is_top":true,"comment_ctime":1558314888,"is_pvip":false,"replies":[{"id":"35523","content":"👍","user_name":"作者回复","comment_id":96036,"uid":"1053568","ip_address":"","utype":1,"ctime":1559130296,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"9.2233721930318991e+18","product_id":100026001,"comment_content":"这是因为9的ASCII码是0039，换算成二进制，就是0011 1001了","like_count":36,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450687,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559130296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96121,"user_name":"猫头鹰爱拿铁","can_delete":false,"product_type":"c1","uid":1105958,"ip_address":"","ucode":"24266B58968428","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/26/4942a09e.jpg","comment_is_top":false,"comment_ctime":1558337545,"is_pvip":true,"replies":[{"id":"35520","content":"👍","user_name":"作者回复","comment_id":96121,"uid":"1053568","ip_address":"","utype":1,"ctime":1559130221,"user_name_real":"徐文浩"}],"discussion_count":2,"race_medal":0,"score":"147587225609","product_id":100026001,"comment_content":"[-5+4]补=[-5]补+[4]补=[1011+0100]补=[1111]补 原码1001 ","like_count":34,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450729,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559130221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1452167,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcwXucibksEYRSYg6icjibzGa7efcMrCsGec2UwibjTd57icqDz0zzkEEOM2pXVju60dibzcnQKPfRkN9g/132","nickname":"Geek_93970d","note":"","ucode":"52AC308BEC7737","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580442,"discussion_content":"1111 补码对应的原码不应该是 0001 吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658189702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156591,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1574918575,"is_pvip":false,"replies":[{"id":"68139","content":"👍","user_name":"作者回复","comment_id":156591,"uid":"1053568","ip_address":"","utype":1,"ctime":1580651754,"user_name_real":"徐文浩"}],"discussion_count":4,"race_medal":0,"score":"117539035567","product_id":100026001,"comment_content":"1.原码表示法有一个很直观的缺点就是，0 可以用两个不同的编码来表示，1000 代表 0， 0000 也代表 0。<br>2. 用补码来表示负数，使得我们的整数相加变得很容易，不需要做任何特殊处理，只是把它当成普通的二进制相加，就能得到正确的结果。<br>3. 我们日常说的 Unicode，其实就是一个字符集，包含了 150 种语言的 14 万个不同的字符。<br>4. 而字符编码则是对于字符集里的这些字符，怎么一一用二进制表示出来的一个字典。我们上面说的 Unicode，就可以用 UTF-8、UTF-16，乃至 UTF-32 来进行编码，存储成二进制<br>5.烫的问题其实是编码和解码不一致的问题","like_count":27,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476162,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580651754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2332551,"avatar":"https://static001.geekbang.org/account/avatar/00/23/97/87/e0a840ac.jpg","nickname":"午饭 、","note":"","ucode":"F6E5E6F6F97664","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554990,"discussion_content":"善于总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646710660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1631948,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epHSfL8MzZJkDnJJvgPpXTbIkthGkU4CKvZIQscn52NQkex2bDnYbgHAda6picENk7EvyhjAuXzFTg/132","nickname":"Geek_d3431c","note":"","ucode":"67A820B0BE8EF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337117,"discussion_content":"谢谢，分享。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608800904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2058510,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","nickname":"Geek_63aa00","note":"","ucode":"4AF5D3318F4468","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324668,"discussion_content":"概括的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605150083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96006,"user_name":"lzhao","can_delete":false,"product_type":"c1","uid":1509217,"ip_address":"","ucode":"9E71888215D3E1","user_header":"","comment_is_top":false,"comment_ctime":1558311651,"is_pvip":false,"replies":[{"id":"35510","content":"ASCII码里面的9，其实是字符串的“9”，对应的二进制里面的表示是 0011 1001","user_name":"作者回复","comment_id":96006,"uid":"1053568","ip_address":"","utype":1,"ctime":1559129340,"user_name_real":"徐文浩"}],"discussion_count":5,"race_medal":0,"score":"48802951907","product_id":100026001,"comment_content":"在 ASCII 码里面，数字 9 不再像整数表示法里一样，用 0000 1001 来表示，而是用 0011 1001 来表示。<br><br>这里不明白","like_count":11,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450676,"discussion_content":"ASCII码里面的9，其实是字符串的“9”，对应的二进制里面的表示是 0011 1001","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1559129340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1524983,"avatar":"","nickname":"Geek_rebel","note":"","ucode":"E6B2BAAC385EEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295802,"discussion_content":"9不再是数字9的二进制表示，而是码表的十六进制的0039，转成二进制就是00111001。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596350280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2549897,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/GeJFj6vZ5V5Piatibibiajiaxn9tf1beWHSrIPZzyn5t3Czm1lPUYWNkFIoh4Ol8gK07zH0k6LY94hcgZ2wosUGOKsg/132","nickname":"一亩三分地","note":"","ucode":"B0522ABBFFE2FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578065,"discussion_content":"9 在 ascii 表里16进制为 0x0039 对应的成二进制就是  0011 1001","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656494091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2449748,"avatar":"https://static001.geekbang.org/account/avatar/00/25/61/54/5bf767e7.jpg","nickname":"没有心的人","note":"","ucode":"F27D5894087B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":396057,"discussion_content":"就是一个映射表吧，一个值对应一个码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632386939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1234591,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d6/9f/0213e8a0.jpg","nickname":"🤪HappyJoo","note":"","ucode":"96E1858F06BABA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276128,"discussion_content":"去查一下 ASCII 就知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590823384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279797,"user_name":"红薯板栗","can_delete":false,"product_type":"c1","uid":2413071,"ip_address":"","ucode":"236BE91291A575","user_header":"https://static001.geekbang.org/account/avatar/00/24/d2/0f/8f14c85b.jpg","comment_is_top":false,"comment_ctime":1613965085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40268670749","product_id":100026001,"comment_content":"-5+4 = [1101]原+[0100]原 = [1010]反 + [0100]反  = [1011]补 + [0100]补 = [1111]补 = [1110]反 = [1001]原 = -1","like_count":9},{"had_liked":false,"id":221063,"user_name":"逆舟","can_delete":false,"product_type":"c1","uid":1270780,"ip_address":"","ucode":"B303B4B8E10E0C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er8AdNibZHbZriaqLQZrNPcX8hVOpY91o0ELl7eOq7qy3aTibjia10ymIsKUKW6Ucs9SuXBDWlg6sjahw/132","comment_is_top":false,"comment_ctime":1590395933,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40245101597","product_id":100026001,"comment_content":"请问老师为什么只讲了 源码、补码，而没有讲反码呢？<br>这三者之间的联系跟转换也没有提，不知道老师出于什么考虑？<br>上学时这三个码一直弄不清缘由，今天看了文章才知道补码是为了方便加法计算、更好利用比特位，以及唯一表示0，希望老师能抽空再介绍下反码缘由以及它与 补码 源码的关系，多谢！","like_count":9,"discussions":[{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312261,"discussion_content":"支持，希望老师加上原码，反码，补码，移码的相关知识。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602643768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2549897,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/GeJFj6vZ5V5Piatibibiajiaxn9tf1beWHSrIPZzyn5t3Czm1lPUYWNkFIoh4Ol8gK07zH0k6LY94hcgZ2wosUGOKsg/132","nickname":"一亩三分地","note":"","ucode":"B0522ABBFFE2FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578066,"discussion_content":"如 9 的原码是 1001 ，\n反码是原码全部按位取反得到  0110\n补码是反码+1， 得到 0110\n移码是补码的符号位取反，其他位不变，得到 1110","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656494448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113498,"user_name":"DreamItPossible","can_delete":false,"product_type":"c1","uid":1254103,"ip_address":"","ucode":"232FCE2BB22012","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/d7/fed46140.jpg","comment_is_top":false,"comment_ctime":1563033234,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"40217738898","product_id":100026001,"comment_content":"文中三种表示方法背后的思想是“一个数与其相反数之和为0”，用相反数来类比再合适不过了。<br><br>课后作业题解答：<br><br>使用原码表示-5+4=-1，记住最高位为符号位<br>$$(-5+4)_原=(-5)_原+(4)_原=(1101)_原+(0100)_原=(1001)_原=-1$$<br>使用补码表示-5+4=-1，记住最高位为符号位<br>$$(-5+4)_补=(-5)_补+(4)_补=(1011)_补+(0100)_补=(1111)_补=-1$$","like_count":9,"discussions":[{"author":{"id":1390396,"avatar":"https://static001.geekbang.org/account/avatar/00/15/37/3c/614fc975.jpg","nickname":"C.","note":"","ucode":"8573488D4EBAC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303265,"discussion_content":"原码的最左位仅表示符号，不参与计算。补码的最左位可以参加计算。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1599205004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085152,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8e/e0/847348b1.jpg","nickname":"爱学习的大叔","note":"","ucode":"91F9ABF1EC98D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539716,"discussion_content":"原码最高位不参与计算，只表示正负数，补码最高位参与计算.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639811352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2354332,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/9c/b4acd768.jpg","nickname":"Sarah","note":"","ucode":"FDC8A0D30EAE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378638,"discussion_content":"写得好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623316065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100194,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1559475917,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"35919214285","product_id":100026001,"comment_content":"老师好!二进制传输具体是怎么减少传输位数的啊。文中用了最大的32位数字解释。好想有点懂了，更多都是不懂:-(，非数字的具体是怎么变成二进制的。a是97用ASCII是0110 0001，十六进制61。字符串aa用ASCII就是4位。0110 0001 0110 0001。不晓得怎么压缩😂","like_count":8,"discussions":[{"author":{"id":2831751,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/35/87/b88f6f6f.jpg","nickname":"明雨","note":"","ucode":"292BAE1A51F074","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413971,"discussion_content":"构造哈夫曼树来实现压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636624136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1758307,"avatar":"","nickname":"韩方兴","note":"","ucode":"3C02DC65F3BB83","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289716,"discussion_content":"举个例子，比如说我要存个 0x11 这个值，使用二进制的话  就直接存 0x11 就行，只占一个字节，而使用字符的话，会占用两个字节，会变成 0x31 0x31，所以说二进制会比字符串更省空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594188633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2449748,"avatar":"https://static001.geekbang.org/account/avatar/00/25/61/54/5bf767e7.jpg","nickname":"没有心的人","note":"","ucode":"F27D5894087B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1758307,"avatar":"","nickname":"韩方兴","note":"","ucode":"3C02DC65F3BB83","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":396055,"discussion_content":"这里是四个字符吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632386790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289716,"ip_address":""},"score":396055,"extra":""}]}]},{"had_liked":false,"id":299443,"user_name":"lh_lh","can_delete":false,"product_type":"c1","uid":2668983,"ip_address":"","ucode":"3B110D9E3A575C","user_header":"https://static001.geekbang.org/account/avatar/00/28/b9/b7/4e66a604.jpg","comment_is_top":false,"comment_ctime":1624629515,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27394433291","product_id":100026001,"comment_content":"二进制补码的本质，也就是那两个步骤的转换方法是怎么来的。<br><br>要将正数转成对应的负数，其实只要用0减去这个数就可以了。比如，-8其实就是0-8。<br><br>已知8的二进制是00001000，-8就可以用下面的式子求出：<br><br>　００００００００<br>－００００１０００<br>－－－－－－－－－<br><br>因为00000000（被减数）小于0000100（减数），所以不够减。请回忆一下小学算术，如果被减数的某一位小于减数，我们怎么办？很简单，问上一位借1就可以了。<br><br>所以，0000000也问上一位借了1，也就是说，被减数其实是100000000，算式也就改写成：<br><br>１００００００００<br>－００００１０００<br>－－－－－－－－－<br>　１１１１１０００<br><br>进一步观察，可以发现100000000 = 11111111 + 1，所以上面的式子可以拆成两个：<br><br>　１１１１１１１１<br>－００００１０００<br>－－－－－－－－－<br>　１１１１０１１１<br>＋０００００００１<br>－－－－－－－－－<br>　１１１１１０００<br><br>二进制补码的两个转换步骤就是这么来的。","like_count":6,"discussions":[{"author":{"id":1013003,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/0b/553d4ec4.jpg","nickname":"逍遥","note":"","ucode":"570969BCFC96EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577267,"discussion_content":"这么理解，十进制也可以有补码。按8位举例。\n8  十进制原码存储就是 00000008，\n-8十进制补码存储就是 99999992","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655993626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013003,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/0b/553d4ec4.jpg","nickname":"逍遥","note":"","ucode":"570969BCFC96EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577266,"discussion_content":"感谢分享，懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655993427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96368,"user_name":"焰火","can_delete":false,"product_type":"c1","uid":1244606,"ip_address":"","ucode":"D3353B386DE3B5","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/be/079c78c7.jpg","comment_is_top":false,"comment_ctime":1558404361,"is_pvip":true,"replies":[{"id":"35495","content":"嗯，谢谢提醒。之前一段时间在东南亚出差，所以堆积了一些消息回复得不够及时，这两天正在加紧回复大家的问题呢。","user_name":"作者回复","comment_id":96368,"uid":"1053568","ip_address":"","utype":1,"ctime":1559126177,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"27328208137","product_id":100026001,"comment_content":"希望浩哥有空的话，可以解答一下这几天前面几章大家问的问题，因为工作太忙，很多人不可能跟进度跟的这么紧  ^_^  谢谢~~","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450850,"discussion_content":"嗯，谢谢提醒。之前一段时间在东南亚出差，所以堆积了一些消息回复得不够及时，这两天正在加紧回复大家的问题呢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1559126177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96206,"user_name":"庄风","can_delete":false,"product_type":"c1","uid":1267661,"ip_address":"","ucode":"21FC66BA9E7EBB","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/cd/9235341a.jpg","comment_is_top":false,"comment_ctime":1558357534,"is_pvip":false,"replies":[{"id":"35491","content":"作为程序员，所以从右到左是从第0位数起的啦。","user_name":"作者回复","comment_id":96206,"uid":"1053568","ip_address":"","utype":1,"ctime":1559125497,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"23033194014","product_id":100026001,"comment_content":"“就是把从右到左的第 N 位，乘上一个 2 的 N 次方”，应该是乘以2的N-1次方吧？","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450769,"discussion_content":"作为程序员，所以从右到左是从第0位数起的啦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559125497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96052,"user_name":"庄小P","can_delete":false,"product_type":"c1","uid":1489063,"ip_address":"","ucode":"A71FA01F713790","user_header":"","comment_is_top":false,"comment_ctime":1558316720,"is_pvip":false,"replies":[{"id":"35518","content":"哈哈，有趣的问题，因为这个网页也是用的unicode加上utf-8，而回复里也不能放图，所以我还真没有办法给你看到。<br><br>不过stackoverflow上有人问过类似的问题，所以你可以去看这个链接，里面有不支持的文字的图<br>https:&#47;&#47;stackoverflow.com&#47;questions&#47;6276681&#47;what-characters-are-not-present-in-unicode","user_name":"作者回复","comment_id":96052,"uid":"1053568","ip_address":"","utype":1,"ctime":1559130091,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"23033153200","product_id":100026001,"comment_content":"首先，“锟斤拷”的来源是这样的。如果我们想要用 Unicod...果我们想要用 Unicode 编码记录一些文本，特别是一些遗留的老字符集内的文本，但是这些字符在 Unicode 中可能并不存在。于是，Unicode 会统一把这些字符记录为FFFD 这个编码。如果用 UTF-8 的格式存储下来，就是...<br><br>这里的意思是说在文本中输入不在Unicode字符集的字符， 那这字符会长什么样子呢？？老师，能不能举个例子呢。 <br><br><br><br><br>","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450696,"discussion_content":"哈哈，有趣的问题，因为这个网页也是用的unicode加上utf-8，而回复里也不能放图，所以我还真没有办法给你看到。\n\n不过stackoverflow上有人问过类似的问题，所以你可以去看这个链接，里面有不支持的文字的图\nhttps://stackoverflow.com/questions/6276681/what-characters-are-not-present-in-unicode","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559130091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104380,"user_name":"漏网之渔","can_delete":false,"product_type":"c1","uid":1092258,"ip_address":"","ucode":"8D7896E99E784C","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/a2/c7a3758d.jpg","comment_is_top":false,"comment_ctime":1560741237,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"18740610421","product_id":100026001,"comment_content":"在 ASCII 码里面，数字 9 不再像整数表示法里一样，用 0000 1001 来表示，而是用 0011 1001表示。<br>转换方法：数字9的ASCII是0039，十六进制的0039转换成二进制就是0011 1001。","like_count":4,"discussions":[{"author":{"id":1940105,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","nickname":"A君","note":"","ucode":"FE96F089C2312C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284576,"discussion_content":"补码原来还可以这样算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592560856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142906,"user_name":"心浮天空","can_delete":false,"product_type":"c1","uid":1051609,"ip_address":"","ucode":"3B2D0E6CC51EE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/d9/3328dd12.jpg","comment_is_top":false,"comment_ctime":1571579723,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14456481611","product_id":100026001,"comment_content":"在开发接触最多的是字符集编码, 在对字符串与byte[]进行转换时, 需要指定编码格式, 无论是前端、后端、数据接口、数据库大多使用的都是UTF-8， 一般来说整个项目使用的编码格式是统一。<br>对字符集而言, 在开发中从来没见过字符集的相关设定, 如何知道自己使用的字符集是什么，又如何保证开发环境和生产环境使用的字符集是一致的？","like_count":3},{"had_liked":false,"id":99093,"user_name":"等风来","can_delete":false,"product_type":"c1","uid":1350677,"ip_address":"","ucode":"5B7FF74A51F534","user_header":"https://static001.geekbang.org/account/avatar/00/14/9c/15/719f1f44.jpg","comment_is_top":false,"comment_ctime":1559141394,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14444043282","product_id":100026001,"comment_content":"二进制序列化存储和文本存储有点不明白， 文本存储是采用字符集编码，那二进制如何采用怎么方式存储呢","like_count":3,"discussions":[{"author":{"id":1245504,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/40/a203a3b9.jpg","nickname":"爱学习不害怕","note":"","ucode":"BE325C02E4C92F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289233,"discussion_content":"到寄存器里直接操作晶体管的高低电平","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594034900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96200,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1558356341,"is_pvip":true,"replies":[{"id":"35503","content":"没有错哦，就是1101啊，13 = 8 + 4 + 0 + 1","user_name":"作者回复","comment_id":96200,"uid":"1053568","ip_address":"","utype":1,"ctime":1559128123,"user_name_real":"徐文浩"}],"discussion_count":3,"race_medal":1,"score":"14443258229","product_id":100026001,"comment_content":"文章中的这个写错了： “对应的二进制数，就是 1101”  应该是1011 <br>","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450766,"discussion_content":"没有错哦，就是1101啊，13 = 8 + 4 + 0 + 1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559128123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241853,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/fd/8e038ecd.jpg","nickname":"蠡小俊","note":"","ucode":"777C81C8291CFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348259,"discussion_content":"这个是录音文件弄错了，把讲到的整个短除过程当中从左到右的顺序改成从右到左就对了，文稿本身是对的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612493499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1509635,"avatar":"https://static001.geekbang.org/account/avatar/00/17/09/03/684d549c.jpg","nickname":"X_Ferr💙","note":"","ucode":"500B829D420FC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130547,"discussion_content":"不过录音里录错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578757824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96033,"user_name":"古夜","can_delete":false,"product_type":"c1","uid":1341612,"ip_address":"","ucode":"0A82D3CFCEDF07","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","comment_is_top":false,"comment_ctime":1558314649,"is_pvip":false,"replies":[{"id":"35533","content":"😀","user_name":"作者回复","comment_id":96033,"uid":"1053568","ip_address":"","utype":1,"ctime":1559130775,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"14443216537","product_id":100026001,"comment_content":"加了笑话更有料了","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450685,"discussion_content":"😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559130775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179754,"user_name":"深水蓝","can_delete":false,"product_type":"c1","uid":1637933,"ip_address":"","ucode":"3E3B195DE54DE1","user_header":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","comment_is_top":false,"comment_ctime":1582091727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10172026319","product_id":100026001,"comment_content":"第一次用Visual C++编写C语言的时候，大票同学（包括我在内）的程序都直呼烫烫烫，当时真不明白为什么内存越界会“烫”呢？","like_count":2},{"had_liked":false,"id":166864,"user_name":"小小灬厮","can_delete":false,"product_type":"c1","uid":1445003,"ip_address":"","ucode":"F4197D2F73364B","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/8b/3f7e9e74.jpg","comment_is_top":false,"comment_ctime":1577618363,"is_pvip":false,"replies":[{"id":"68110","content":"😊","user_name":"作者回复","comment_id":166864,"uid":"1053568","ip_address":"","utype":1,"ctime":1580636798,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"10167552955","product_id":100026001,"comment_content":"开头那句话一开始我还看不懂是什么意思，看到最后那张图片把我给笑抽了，这可能是第一篇让我捧腹大笑的技术文了😂","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479657,"discussion_content":"😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580636798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131355,"user_name":"ruanxw","can_delete":false,"product_type":"c1","uid":1577997,"ip_address":"","ucode":"4C4F9EFF2458F3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUrryic1mC5jVSRPyYtibXSUjFstBxIlHrZF4yc8NrZHiclxRZQMAYf7h4G5qrzpFyynsz6jHRsFgOQ/132","comment_is_top":false,"comment_ctime":1567729600,"is_pvip":false,"replies":[{"id":"51047","content":"最左一位才是符号位，而不是最右侧的那一位，1011如果不考虑符号，都是正数的确是11，如果是原码表示最左侧代表符号位才是-3，如果是补码的话，应该是-5","user_name":"作者回复","comment_id":131355,"uid":"1053568","ip_address":"","utype":1,"ctime":1568449367,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"10157664192","product_id":100026001,"comment_content":"老师 我的基础比较薄弱 1011表示-3，而我的理解怎么是11，而且我不知道什么时候最右边那一位表示符号 ","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466405,"discussion_content":"最左一位才是符号位，而不是最右侧的那一位，1011如果不考虑符号，都是正数的确是11，如果是原码表示最左侧代表符号位才是-3，如果是补码的话，应该是-5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568449367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352980,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"北京","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1659062540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5954029836","product_id":100026001,"comment_content":"正数：原码=反码=补码 ； 负数： 反码 = 原码除符号位其他取反，补码 = 反码 + 1； 所以 [-5]原 = 1101，[-5]反 = 1010，[-5]补  = 1011，[4]原 = [4]反 = [4]补 = 0100 。-5 + 4 = 【-5】补 + 【4】补 = 【1011 + 0100】补 = 【1111】补 = 【1110】反= 【1001】原 = -1  ","like_count":1},{"had_liked":false,"id":349489,"user_name":"逍遥","can_delete":false,"product_type":"c1","uid":1013003,"ip_address":"","ucode":"570969BCFC96EF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/0b/553d4ec4.jpg","comment_is_top":false,"comment_ctime":1655993701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5950960997","product_id":100026001,"comment_content":"所以补码的本质，就是让进位溢出。<br>这么理解，十进制也可以有补码。按8位举例。<br>8  十进制原码存储就是 00000008，<br>-8十进制补码存储就是 99999992","like_count":1},{"had_liked":false,"id":347037,"user_name":"程杰","can_delete":false,"product_type":"c1","uid":3003067,"ip_address":"","ucode":"6580E4B8091E76","user_header":"https://static001.geekbang.org/account/avatar/00/2d/d2/bb/8f647aef.jpg","comment_is_top":false,"comment_ctime":1653636836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5948604132","product_id":100026001,"comment_content":"-5原码为1101  补码为1011 但是计算的时候需要用补码计算的，1011（-5补）+0100（4无补，用原码表示）=1111，为1开头证明为补码，代表为负数，需要转为原码，原码为1001，最高位为符号位 所以值为-1","like_count":1},{"had_liked":false,"id":291909,"user_name":"友","can_delete":false,"product_type":"c1","uid":2536820,"ip_address":"","ucode":"972A4333A8B101","user_header":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","comment_is_top":false,"comment_ctime":1620601829,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5915569125","product_id":100026001,"comment_content":"为什么 1000可以表示 -8  1001 不能表示-9呢 为什么-9需要 11001呢   为什么11001不是表示-25呢","like_count":1,"discussions":[{"author":{"id":2536820,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","nickname":"友","note":"","ucode":"972A4333A8B101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415021,"discussion_content":"感谢回复 这个是我懵懵懂懂时期的评论看完csapp就再也不问这种蠢问题了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636965282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2222614,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/1fXYkS0UlZUQQtzUpG2TZzVhVZHarfpWT5wjO7iajw959zysQks1vLFM2uQsKnYG3uQAhzenH9LP86goiciaCDNibQ/132","nickname":"Xingyi_Xie","note":"","ucode":"D1849DB8BFB1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415010,"discussion_content":"1001 = -1*2^3 + 0*2^2 + 0*2^2 + 1*2^2 = -8 + 1 = -7 如果 1000 是-8，1001 是 -9，那么 -9 + 1 = -8 怎么计算呢（1001 + 0001 不等于 1000 呀）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636963344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264513,"user_name":"范小曼","can_delete":false,"product_type":"c1","uid":2296545,"ip_address":"","ucode":"E7F896BB78D7AD","user_header":"","comment_is_top":false,"comment_ctime":1606484988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5901452284","product_id":100026001,"comment_content":"有种说法说什么计算机内存中都是unicode规定的字符对应 比如 “中国”假设unicode对应的是 10011 那内存中就是这样的，但是如果存储到硬盘上的话需要一种具体的编码方式，比如utf-8，他可能对10011 是这样存储的： 11001101，是这样的么，没查到相关资料不过网上倒是一大堆博客这样说","like_count":1},{"had_liked":false,"id":187032,"user_name":"杨剑锋","can_delete":false,"product_type":"c1","uid":1192940,"ip_address":"","ucode":"890BA54B313C2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/ec/f41da26c.jpg","comment_is_top":false,"comment_ctime":1583995668,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878962964","product_id":100026001,"comment_content":"终于知道了乱码问题的来源，这几天碰到一个乱码问题，就是从字符集下手去解决，老师讲的真棒","like_count":1},{"had_liked":false,"id":169639,"user_name":"wine99","can_delete":false,"product_type":"c1","uid":1682531,"ip_address":"","ucode":"F22F3E23E6F851","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/h6unp47tSLwwUZgnd3tuSSSEEOvXrC8aTI38ESYzsVZU8zZLMxvLDv8Zw2fmhr9M8CM46HCvQvicoutzwTjwNaA/132","comment_is_top":false,"comment_ctime":1578395312,"is_pvip":false,"replies":[{"id":"68085","content":"wine99同学，<br><br>你好，数字逻辑 课程里还有很多别的知识啊，比如卡诺图。组成原理更多是一个全局性的预览性质的课程。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580632081,"ip_address":"","comment_id":169639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5873362608","product_id":100026001,"comment_content":"编码 这本书的前半部分，可不就是大学上的数字逻辑课吗😆","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480649,"discussion_content":"wine99同学，\n\n你好，数字逻辑 课程里还有很多别的知识啊，比如卡诺图。组成原理更多是一个全局性的预览性质的课程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580632081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96082,"user_name":"Smirk","can_delete":false,"product_type":"c1","uid":1230263,"ip_address":"","ucode":"F677072767F0A4","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/b7/87e7e865.jpg","comment_is_top":false,"comment_ctime":1558322566,"is_pvip":true,"replies":[{"id":"35508","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559128483,"ip_address":"","comment_id":96082,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853289862","product_id":100026001,"comment_content":"终于知道烫烫烫咋回事了……","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450713,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559128483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360119,"user_name":"一省吾身","can_delete":false,"product_type":"c1","uid":1676631,"ip_address":"北京","ucode":"D902357160BBD9","user_header":"https://static001.geekbang.org/account/avatar/00/19/95/57/a2991536.jpg","comment_is_top":false,"comment_ctime":1666189514,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1666189514","product_id":100026001,"comment_content":"本节收获:<br> 1.弄清楚了字符 字符集  编码方式等概念.<br> 2.一个字符信息实际有两个状态:<br>  I.落盘时根据字符集查对应的编码后转换为二进制存储. <br>  II.使用编辑器打开时,编辑器根据对应的的编码方式查对应的字符,最后显示在显示器上.<br>因此落盘的编码方式和打开时的编码方式有不相符就容易导致乱码.<br>","like_count":0},{"had_liked":false,"id":357900,"user_name":"woodie","can_delete":false,"product_type":"c1","uid":2004783,"ip_address":"北京","ucode":"1C2925AD8191DA","user_header":"","comment_is_top":false,"comment_ctime":1663740902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663740902","product_id":100026001,"comment_content":"-5+4= 1000 0101【原】 + 0000 0100 【原】=  1111 1010【反】 + 0000 0100 【反】=  1111 1011【补】 + 0000 0100 【补】= 1111 1111【补】=  1111 1110【反】=  1000 0001【原】","like_count":0},{"had_liked":false,"id":355576,"user_name":"蜘蛛侠","can_delete":false,"product_type":"c1","uid":3053481,"ip_address":"河南","ucode":"B59D7255BAD55B","user_header":"https://static001.geekbang.org/account/avatar/00/2e/97/a9/e3b097f1.jpg","comment_is_top":false,"comment_ctime":1661504942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661504942","product_id":100026001,"comment_content":"是不是有问题啊  1011 是-3 咋一会 又成-5了","like_count":0},{"had_liked":false,"id":349488,"user_name":"逍遥","can_delete":false,"product_type":"c1","uid":1013003,"ip_address":"","ucode":"570969BCFC96EF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/0b/553d4ec4.jpg","comment_is_top":false,"comment_ctime":1655993613,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655993613","product_id":100026001,"comment_content":"这么理解，十进制也可以有补码。按8位举例。<br>8  十进制原码存储就是 00000008，<br>-8十进制补码存储就是 99999992","like_count":0},{"had_liked":false,"id":343252,"user_name":"Geek_d68bf9","can_delete":false,"product_type":"c1","uid":2173090,"ip_address":"","ucode":"D88E117B6A18B3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIstR9CfEytdeJyicODHOe6cYGt4icg8cNVam9mE0s7picUsInZvwvia1hEtKsyHETfic0jrAddjt0wXdA/132","comment_is_top":false,"comment_ctime":1650726673,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650726673","product_id":100026001,"comment_content":"这个补码感觉讲的不够清晰","like_count":0},{"had_liked":false,"id":336007,"user_name":"何同一","can_delete":false,"product_type":"c1","uid":2637195,"ip_address":"","ucode":"3270B66A34F29A","user_header":"https://static001.geekbang.org/account/avatar/00/28/3d/8b/47bcc851.jpg","comment_is_top":false,"comment_ctime":1645844856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645844856","product_id":100026001,"comment_content":"亦或：拿两个中继去吸第三个开关，两个都接通的时候可以把那个开关向上弹开，只有一个接通的时候开关水平接通，两个都不接通的时候开关向下垂落","like_count":0},{"had_liked":false,"id":332803,"user_name":"Prof.Bramble","can_delete":false,"product_type":"c1","uid":2503989,"ip_address":"","ucode":"7641ECE0E6BEDC","user_header":"https://static001.geekbang.org/account/avatar/00/26/35/35/9c5eb2c2.jpg","comment_is_top":false,"comment_ctime":1643639628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643639628","product_id":100026001,"comment_content":"原码和补码互转均可符号位不动，其他位取反+1","like_count":0},{"had_liked":false,"id":324733,"user_name":"跨江大桥","can_delete":false,"product_type":"c1","uid":1162242,"ip_address":"","ucode":"4629B23F1BB9F0","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/02/3f7a7197.jpg","comment_is_top":false,"comment_ctime":1638594184,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638594184","product_id":100026001,"comment_content":"这标题起的，绝了。经历过的都懂","like_count":0},{"had_liked":false,"id":310065,"user_name":"Geek_6dbc6e","can_delete":false,"product_type":"c1","uid":2592343,"ip_address":"","ucode":"D67891F61ED37F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1bMu4VzjC7zQT6YggXNlTQ1Kbf8ibiasibG4VvGRKNiagQyCkkKibeibauJGHNGP70ogrBz9A28EVJzrPqPlia70FwsmQ/132","comment_is_top":false,"comment_ctime":1630476891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630476891","product_id":100026001,"comment_content":"有个疑问，基本类型的数据转二进制还能理解，但是像js里的对象、数组、python里的字典、元组之类的数据结构又是怎样转成二进制表示的呢？希望可以解答胰腺癌","like_count":0},{"had_liked":false,"id":260891,"user_name":"Geek_63aa00","can_delete":false,"product_type":"c1","uid":2058510,"ip_address":"","ucode":"4AF5D3318F4468","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","comment_is_top":false,"comment_ctime":1605148784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605148784","product_id":100026001,"comment_content":"负数的4位表示的范围不是1111到0111吗？即-15到7","like_count":0},{"had_liked":false,"id":255251,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1603289817,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603289817","product_id":100026001,"comment_content":"喜欢这篇文章的标题","like_count":0},{"had_liked":false,"id":253184,"user_name":"阿阳","can_delete":false,"product_type":"c1","uid":1165817,"ip_address":"","ucode":"20A35FB86B1C5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","comment_is_top":false,"comment_ctime":1602643821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602643821","product_id":100026001,"comment_content":"老师您好，原码，反码，补码，移码的相关知识感觉还是挺麻烦的，理解起来有点困难，老师能否加上这相关的知识讲解吗？","like_count":0},{"had_liked":false,"id":253181,"user_name":"阿阳","can_delete":false,"product_type":"c1","uid":1165817,"ip_address":"","ucode":"20A35FB86B1C5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","comment_is_top":false,"comment_ctime":1602643679,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602643679","product_id":100026001,"comment_content":"原码计算还挺麻烦的，比如原码计算-5 + 6，表达式是1101 + 0110，应该是先判断大小，然后再判断是谁减谁吗？","like_count":0},{"had_liked":false,"id":251288,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1601451287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601451287","product_id":100026001,"comment_content":"4位数下，-5的原码：1101，相加后结果为0001，即1。<br>-5的补码：1011，相加后结果为1111，即补码表示的-1.<br>因此原码计算得到的结果是错误的，补码计算得到的结果是正确的。","like_count":0},{"had_liked":false,"id":227234,"user_name":"有学识的兔子","can_delete":false,"product_type":"c1","uid":1628867,"ip_address":"","ucode":"D1D654B1562FC9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIicr82CnrdEjibibAvyeKRQHszSzIAqoCWxN0kqC442XcjEae6S9j6NDtKLpg4Da4CUQQeUFUicWqiaDw/132","comment_is_top":false,"comment_ctime":1592319865,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592319865","product_id":100026001,"comment_content":"1. 通过老师的讲解，我理解是如果是用原码表示负数，简单的方式就是先转换成补码，在进行加法运算，然后再转成原码；而补码形式可直接进行加法运算，加入运算过程中产生溢出位直接丢弃； <br>原码： 1101（-5）+ 0100（4）= 1011（-5补）+0100（补） = 1111（补）= 1001（原）","like_count":0},{"had_liked":false,"id":227189,"user_name":"海洋之心","can_delete":false,"product_type":"c1","uid":1341575,"ip_address":"","ucode":"D540476207AFF4","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/87/54eb0929.jpg","comment_is_top":false,"comment_ctime":1592309823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592309823","product_id":100026001,"comment_content":"我对应的unicode码点是6211没错，但是经过utf8编码后得到的是 E6 89 91","like_count":0},{"had_liked":false,"id":202557,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1586006913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586006913","product_id":100026001,"comment_content":"二进制编码<br>首先，计算机只认识0和1，世间万物存入计算机都被转化成这两个数字。<br>二进制表示负数时，第一位如果是1，转换成10进制是当作-1，并且0只能用0000来表示，这样，就可以表示所有数字了，比如四位可以表示-8 -- 7这16个数字，二进制的加减法和十进制完全相同，只要记得逢二进一就好。<br>ASCII码，字符集，用8位二进制表示128个不同的字符，包括字母，数字，特殊符号。个位数的数字不是由10进制转换过来，而是固定编好的。多位数的字符串表示就是把每个数字的ASCII码组合在一起。 应用在英文世界。<br>其他语言也有了各自的编码字符集。Unicode是统一的。<br>‘锟斤拷’，一些老字符在Unicode中没有，它就把他们记录成U+FFFD，而这个用utf-8存下来，变成\\xef\\xbf\\xbd,连续两个这样的字符合在一起被GB2312解码时就编程“锟斤拷”<br>‘烫烫烫’，VS默认使用MBCS字符集，0xCCC表示‘烫’，而0xCC恰好表示未初始化内存的赋值，于是在读到没有内存地址或变量的时候，就会输出“烫烫烫”。","like_count":0},{"had_liked":false,"id":187545,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1584155845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584155845","product_id":100026001,"comment_content":"正数源码和补码表示是一样的。负数不同，负数补码表示法是对应正数取反加一得到。如果是源码表示的负数可以先将符号位去掉，然后取反加一得到补码表示，然后通过补码的加法计算各种数的加法。减法可以转化为加法处理，统一到补码的加法。","like_count":0},{"had_liked":false,"id":185063,"user_name":"VenFox","can_delete":false,"product_type":"c1","uid":1002112,"ip_address":"","ucode":"11F08AD5685505","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/80/b1862ca3.jpg","comment_is_top":false,"comment_ctime":1583475454,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1583475454","product_id":100026001,"comment_content":"老师，我想问下计算机是怎么识别一段二进制序列是数字、字符、指令的？","like_count":0,"discussions":[{"author":{"id":1034564,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c9/44/15086742.jpg","nickname":"chwaiz","note":"","ucode":"6ADF1B99B9119E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260366,"discussion_content":"我猜计算机并不知道一段二进制序列的内容,最后识别成什么是看读取时用的规则\n\n比如`0011 1001`既可以表示ASCII码的9,也可以表示单纯的十进制数57,还可以表示为你自定义的其他信息\n\n再比如老师这节里讲的,用UTF-8编码保存了一段文字,但是读取的时候用了GB2312,原本有意义的文字就变成了锟斤拷\n\n结论是:单纯的二进制序列是没有意义的,识别成什么看程序怎么读取\n\n一点小小的看法,各位有不同意见欢迎一起讨论~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588861558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153483,"user_name":"好饿早知道送外卖了","can_delete":false,"product_type":"c1","uid":1132304,"ip_address":"","ucode":"AED22DB5BF8FC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","comment_is_top":false,"comment_ctime":1574244093,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1574244093","product_id":100026001,"comment_content":"<br>一边学习一遍查阅资料发现个问题：<br><br>文中这句是不是有些问题？<br>`这就好比我们用 GB2312 这本密码本，去解密别人用 UTF-8 加密的信息，自然没办法读出有用的信息。`<br><br>感觉`锟斤拷`并不是`UTF-8`与`GB2312`的转换导致吧？<br><br>UTF-8与Unicode的转换本身都必须经历`Unicode`的转译<br>GB2312－－Unicode－－UTF8<br><br>所以`锟斤拷`实际上是源于GBK字符集和Unicode字符集之间的转换问题?<br>感觉未知字符在从Unicode转译成GBK字符集的时候原本就会出现这个问题。<br><br>以下是相关链接：<br>https:&#47;&#47;baike.baidu.com&#47;item&#47;%E9%94%9F%E6%96%A4%E6%8B%B7<br>https:&#47;&#47;blog.csdn.net&#47;ZYY88886666&#47;article&#47;details&#47;75285780<br>","like_count":0},{"had_liked":false,"id":136476,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1569457807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569457807","product_id":100026001,"comment_content":"11 二进制编码 1 计算机在内存里都是以0和1来表示的，数字可以转换成0和1，int类型最大是2的32，字符也需要转换成二进制，每一个字符对应了一个数字，2 ascii码总共有128个字符，很多语种，太多放不下，所以有了unicode字符集，字符集里面有很多的字符，各个语种的字符，字符集转换成2进制，可以选择不同的编码格式，utf-8，UTF-16，utf-32，如果用utf-8编码，用UTF-16解码，则会出现乱码的情况。utf-8编码等对字符编码之后，转成二进制，占用的内存多，所以一般采用二进制的格式存储。<br>","like_count":0},{"had_liked":false,"id":130898,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1567567812,"is_pvip":false,"replies":[{"id":"51054","content":"👍理解得没问题","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568449829,"ip_address":"","comment_id":130898,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567567812","product_id":100026001,"comment_content":"1 计算机内部的运算是二进制。<br>2 不通字符集，采用不通的编码规范，所以当用 gb2312的字符集解码，utf-8编码的内容时，会出现乱码现象。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466184,"discussion_content":"👍理解得没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568449829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123748,"user_name":"skye","can_delete":false,"product_type":"c1","uid":1027840,"ip_address":"","ucode":"C55C9F52C78A00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/00/9b49f42b.jpg","comment_is_top":false,"comment_ctime":1565750614,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565750614","product_id":100026001,"comment_content":"请问老师，补码什么时候转成原码的？","like_count":0},{"had_liked":false,"id":120236,"user_name":"lanco","can_delete":false,"product_type":"c1","uid":1188352,"ip_address":"","ucode":"C24A0A8716C78C","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/00/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1564813106,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1564813106","product_id":100026001,"comment_content":"深入探讨手持两把锟斤拷，口中疾呼烫烫烫，挺有趣","like_count":0},{"had_liked":false,"id":115687,"user_name":"前端西瓜哥","can_delete":false,"product_type":"c1","uid":1248576,"ip_address":"","ucode":"150130C34CD1C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/40/f70e5653.jpg","comment_is_top":false,"comment_ctime":1563698469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563698469","product_id":100026001,"comment_content":"课后思考题：<br>-5 = [1101]原 = [1010]反 = [1011]补；<br>4  = [0100]原 = [0100]反 = [0100]补；<br><br>[1011]补 + [0100]补 = [1111]补 = [1000]反 = [1001]原 = -1<br>（补码的补码就是原码。）<br>所以，-5 + 4 等于 -1。","like_count":0},{"had_liked":false,"id":115457,"user_name":"墨羲","can_delete":false,"product_type":"c1","uid":1599574,"ip_address":"","ucode":"AB917E5E64BA39","user_header":"https://static001.geekbang.org/account/avatar/00/18/68/56/7e37a59b.jpg","comment_is_top":false,"comment_ctime":1563592759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563592759","product_id":100026001,"comment_content":"十进制下的5转化成二进制为101，补足四位为0101，那这个数是正还是负啊？","like_count":0},{"had_liked":false,"id":114485,"user_name":"夏天的风","can_delete":false,"product_type":"c1","uid":1516199,"ip_address":"","ucode":"56313A2EC9D564","user_header":"","comment_is_top":false,"comment_ctime":1563324055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563324055","product_id":100026001,"comment_content":"然后用商继续除以 2，把对应的余数紧靠着刚才余数的右侧，这样递归迭代，直到商为 0 就可以了。<br>这里的右侧应该是左侧吧？","like_count":0},{"had_liked":false,"id":112692,"user_name":"Aaaaaaaaaaayou","can_delete":false,"product_type":"c1","uid":1073601,"ip_address":"","ucode":"67BA315B87587D","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","comment_is_top":false,"comment_ctime":1562807231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562807231","product_id":100026001,"comment_content":"请问老师二进制序列化是用的什么编码格式呢？","like_count":0},{"had_liked":false,"id":112492,"user_name":"瀚海星尘","can_delete":false,"product_type":"c1","uid":1024461,"ip_address":"","ucode":"90F418299EA3BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/cd/2c513481.jpg","comment_is_top":false,"comment_ctime":1562745970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562745970","product_id":100026001,"comment_content":"终于想明白补码是什么道理了！","like_count":0},{"had_liked":false,"id":106006,"user_name":"Amark","can_delete":false,"product_type":"c1","uid":1121326,"ip_address":"","ucode":"E5F48633654002","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/2e/93812642.jpg","comment_is_top":false,"comment_ctime":1561124801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561124801","product_id":100026001,"comment_content":"请问老师utf-8最多可以编码多少字符","like_count":0},{"had_liked":false,"id":99817,"user_name":"VenFox","can_delete":false,"product_type":"c1","uid":1002112,"ip_address":"","ucode":"11F08AD5685505","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/80/b1862ca3.jpg","comment_is_top":false,"comment_ctime":1559309321,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1559309321","product_id":100026001,"comment_content":"老师，我有个问题，一段二进制数字怎么区分它是指令还是字符","like_count":0},{"had_liked":false,"id":99238,"user_name":"A🔱栋杰✨","can_delete":false,"product_type":"c1","uid":1046580,"ip_address":"","ucode":"C975704B321C15","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/34/9d8a2a6b.jpg","comment_is_top":false,"comment_ctime":1559180689,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1559180689","product_id":100026001,"comment_content":"最大的 32 位整数， 2147483647，用整数表示只需32位，用字符表示则需80位，故二进制序列化的方式更省空间。<br><br>问：用整数表示整数字符串，就是二进制序列化吗？在二进制序列化中，非数字字符串与如何与整数对应？<br><br>“我”在Unicode字符集中的点位是\\u6211，对应的UTF-8编码是6211。<br><br>问：Unicode点位与UTF-8编码是一一对应吗？(各种)点位与(各种)编码间一一对应吗？","like_count":0},{"had_liked":false,"id":96580,"user_name":"易林林","can_delete":false,"product_type":"c1","uid":1049836,"ip_address":"","ucode":"27F84A3FCBBCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/ec/0539c89d.jpg","comment_is_top":false,"comment_ctime":1558452094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558452094","product_id":100026001,"comment_content":"不觉得枯燥，有种重温的感觉，不过看知识点和问题的角度发生很大变化。","like_count":0},{"had_liked":false,"id":96540,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1558444278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558444278","product_id":100026001,"comment_content":"原码：1101+0100=10001=-1<br>补码：1011+0100=1111=-1","like_count":0},{"had_liked":false,"id":96286,"user_name":"matter","can_delete":false,"product_type":"c1","uid":1517718,"ip_address":"","ucode":"260BAE6D7F7870","user_header":"https://static001.geekbang.org/account/avatar/00/17/28/96/a49c7264.jpg","comment_is_top":false,"comment_ctime":1558393309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558393309","product_id":100026001,"comment_content":"老师，我明白了补码和原码表示的区别。但是对这两种方法的使用场景很模糊。什么情况下计算机使用补码，什么情况下使用原码。使用的时候会标识出来吗？","like_count":0},{"had_liked":false,"id":96110,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1558334109,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558334109","product_id":100026001,"comment_content":"打卡day11<br>刚完成笔记如下：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;10893437.html<br>去做踮着脚尖才能够到的事情，你的储备就会发挥出最大效能","like_count":0},{"had_liked":false,"id":96109,"user_name":"旺旺","can_delete":false,"product_type":"c1","uid":1213887,"ip_address":"","ucode":"161B267F67EBCA","user_header":"https://static001.geekbang.org/account/avatar/00/12/85/bf/5c5e86bb.jpg","comment_is_top":false,"comment_ctime":1558334108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558334108","product_id":100026001,"comment_content":"终于要开始讲门电路了吗  哇 期待   ","like_count":0},{"had_liked":false,"id":96040,"user_name":"宋不肥","can_delete":false,"product_type":"c1","uid":1240126,"ip_address":"","ucode":"32B34AF579C91C","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","comment_is_top":false,"comment_ctime":1558315679,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558315679","product_id":100026001,"comment_content":"二进制的加减法，溢出之后有两位判断位，由此判断正负。低位正常加法进位就行","like_count":0},{"had_liked":false,"id":96034,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1558314740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558314740","product_id":100026001,"comment_content":"字符集编码也是一种加密，只不过对非计算机从业者来说是透明的，一般只需要关心屏幕上的字符图形，而无需关心他们是如何存储，传输的。想起了网络分层，用户只需关心应用层，低层协议大可不必关心。","like_count":0}]}