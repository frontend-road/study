{"id":324215,"title":"30 | 流处理平台：Flink是如何快速识别用户兴趣，实现实时推荐的？","content":"<p>你好，我是王喆。</p><p>刚刚结束的2020年双11活动，让技术圈出现了一个非常劲爆的新闻，就是阿里基于Flink，实现了数据的批流一体处理，每秒能够处理40亿条的巨量数据。这也是业界首次在这么大规模的数据洪峰之上，实现数据流的实时处理。</p><p>也正是因为实时数据流处理功能的实现，让阿里的推荐系统引擎能够在双11期间做出更快速的反应，实时抓住用户的兴趣，给出更准确的推荐。</p><p>这节课，我就带你揭开阿里使用流处理平台Flink的面纱，来重点解决这3个问题：</p><ul>\n<li>为什么说实时性是影响推荐系统效果的关键因素？</li>\n<li>到底什么是批流一体的数据处理体系？</li>\n<li>业界流行的Flink到底是怎么实现数据流处理的？</li>\n</ul><h2>为什么实时性是影响推荐系统效果的关键因素？</h2><p>周星驰的电影《功夫》里有一句著名的台词“天下武功，无坚不摧，唯快不破”。如果说推荐模型的架构是那把“无坚不摧”的“玄铁重剑”，那么推荐系统的实时性就是“唯快不破”的“柳叶飞刀”。那这把柳叶飞刀到底是怎么发挥作用的呢？我说个切身的场景你就明白了。</p><p>假设，你正在手机上刷抖音，你刚刚看了一个精彩的足球进球视频，感觉意犹未尽，还想看更多这样的视频。这个时候，抖音的推荐系统肯定不会让你失望，它很快会接收到“你观看了精彩进球视频”的信号，快速地抓到你的兴趣点，然后，它会迅速做出反馈，给你推送更多类似的视频。</p><!-- [[[read_end]]] --><p>那我们也可以试想一下，如果抖音的推荐系统实时性不够的话，会发生什么呢？可能是你看完了精彩进球的视频之后，推荐系统还跟什么都没发生一样，依然按部就班地给你推荐一些原本就设定好的不相关视频。如果是这样的话，抖音又怎么能让你欲罢不能，刷了又想刷呢？</p><p>这个例子就充分说明了，<strong>推荐系统只有拥有实时抓住用户新兴趣点的能力，才能让你的用户“离不开你”</strong>。</p><h2>什么是批流一体的数据处理体系？</h2><p>那作为推荐系统工程师，我们就要思考，到底怎样才能实现用户兴趣的快速提取呢？这就不得不提到推荐系统的数据体系。</p><p>我们之前讲的数据处理，无论是数据的预处理，还是特征工程，大部分是在Spark平台上完成的。Spark平台的特点是，它处理的数据都是已经落盘的数据。也就是说，这些数据要么是在硬盘上，要么是在分布式的文件系统上，然后才会被批量地载入到Spark平台上进行运算处理，这种批量处理大数据的架构就叫做批处理大数据架构。它的整体结构图如图1所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/15/78/153c832b255ce750537698fc5866a878.jpg?wh=1832*752\" alt=\"\" title=\"图1 传统批处理大数据架构\"></p><p>但批处理架构的特点就是慢，数据从产生到落盘，再到被Spark平台重新读取处理，往往要经历几十分钟甚至几小时的延迟。如果推荐系统是建立在这样的数据处理架构上，还有可能实时地抓住用户的新兴趣点吗？肯定是没有希望了。</p><p>那怎么办呢？我们能不能在数据产生之后就立马处理它，而不是等到它落盘后再重新处理它呢？当然是可以的，这种在数据产生后就直接对数据流进行处理的架构，就叫做流处理大数据架构。</p><p>我们从图2的流处理架构示意图中可以看到，它和批处理大数据架构相比，不仅用流处理平台替换掉了分布式批处理Map Reduce计算平台，而且在数据源与计算平台之间，也不再有存储系统这一层。这就大大提高了数据处理的速度，让数据的延迟可以降低到几分钟级别，甚至一分钟以内，这也让实时推荐成为了可能。</p><p><img src=\"https://static001.geekbang.org/resource/image/dc/b1/dc38fbc4e98fc348a3a6bd58d2bc51b1.jpg?wh=1826*676\" alt=\"\" title=\"图2 流处理大数据架构\"></p><p>但是，流处理平台也不是十全十美的。由于流处理平台是对数据流进行直接处理，它没有办法进行长时间段的历史数据的全量处理，这就让流处理平台无法应用在历史特征的提取，模型的训练样本生成这样非常重要的领域。</p><p>那是不是说，根本就没有能够同时具有批处理、流处理优势的解决方案吗？当然是有的，这就是我们在一开始说的，批流一体的大数据架构，其中最有代表性的就是Flink。</p><p>如下图3所示，<strong>批流一体的大数据架构最重要的特点，就是在流处理架构的基础上添加了数据重播的功能</strong>。</p><p>我们怎么理解这个数据重播功能呢？它指的是在数据落盘之后，还可以利用流处理平台同样的代码，进行落盘数据的处理，这就相当于进行了一遍重播。这样不就实现了离线环境下的数据批处理了吗？而且由于流处理和批处理使用的是一套代码，因此完美保证了代码维护的一致性，是近乎完美的数据流解决方案。</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/7b/7c6a35831867bfyy3140b619616d7c7b.jpg?wh=1804*778\" alt=\"\" title=\"图3 批流一体大数据架构\"></p><p>既然批流一体的大数据架构这么完美，为什么我们很少听说有实现这套方案的公司呢？以我个人的实践经验来看，这主要是因为它实现起来有下面两个难点。</p><ul>\n<li>大批成熟的互联网公司已经在Spark等批处理平台上，构建起了整套的数据体系，要想完全迁移到批流一体的数据体系上，有着非常沉重的技术负担。</li>\n<li>批流一体的解决方案还很理想化，因为我们在实际处理特征的时候，很难让批处理和流处理完全共享一套代码。</li>\n</ul><p>比如，我们在流处理中可以很方便地计算出点击量、曝光量这类方便累计的指标，但如果遇到比较复杂的特征，像是用户过去一个月的平均访问时长，用户观看视频的进度百分比等等，这些指标就很难在流处理中计算得到了。这是因为计算这类特征所需的数据时间跨度大，计算复杂，流处理难以实现。</p><p>因此，<strong>在对待流处理平台时，我们的态度应该是，取其所长</strong>。更具体点来说就是，在需要实时计算的地方发挥它的长处，但也没有必要过于理想主义，强调一切应用都应该批流一体，这反而会为我们增加过多的技术负担。</p><h2>Flink是如何处理数据流的？</h2><p>现在，我们已经清楚流处理平台的特点和优势了，但Flink平台到底是怎么进行流数据处理的呢？</p><p>我们先来认识Flink中两个最重要的概念，数据流（DataStream）和窗口（Window）。数据流其实就是消息队列，从网站、APP这些客户端中产生的数据，被发送到服务器端的时候，就是一个数据消息队列，而流处理平台就是要对这个消息队列进行实时处理。</p><p>就像下图4所示的那样，上面是来自三个用户的数据，其中一个一个紫色的点就是一条条数据，所有紫色的点按时间排列就形成了一个消息队列。</p><p><a href=\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/stream/operators/windows.html\"><img src=\"https://static001.geekbang.org/resource/image/21/15/2151181244e9b21b03029333294f9515.jpg?wh=1644*970\" alt=\"\" title=\"图4 数据流和窗口\"></a></p><p>知道了什么是消息队列，Flink会怎么处理这个消息队列里的数据呢？答案很简单，就是随着时间的流失，按照时间窗口来依次处理每个时间窗口内的数据。</p><p>比如图4中的数据流就被分割成了5个时间窗口，每个窗口的长度假设是5分钟，这意味着每积攒够5分钟的数据，Flink就会把缓存在内存中的这5分钟数据进行一次批处理。这样，我们就可以算出数据流中涉及物品的最新CTR，并且根据用户最新点击的物品来更新用户的兴趣向量，记录特定物品曝光给用户的次数等等。</p><p>除了上面例子中的固定窗口以外，Flink还提供了多种不同的窗口类型，滑动窗口（Sliding Window）也是我们经常会用到的。</p><p>滑动窗口的特点是在两个窗口之间留有重叠的部分，Flink在移动窗口的时候，不是移动window size这个长度，而是移动window slide这个长度，window slide的长度要小于window size。因此，窗口内部的数据不仅包含了数据流中新进入的window slide长度的数据，还包含了上一个窗口的老数据，这部分数据的长度是window size-window slide。</p><p><a href=\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/stream/operators/windows.html\"><img src=\"https://static001.geekbang.org/resource/image/eb/10/eb6af5fcb0ff8088f31f2bc5776eae10.jpg?wh=1618*992\" alt=\"\" title=\"图5 Flink中的滑动窗口\"></a></p><p>那滑动窗口这种方式有什么用呢？它最典型的用处就是做一些数据的JOIN操作。比如我们往往需要通过JOIN连接一个物品的曝光数据和点击数据，以此来计算CTR，但是你要知道，曝光数据肯定是在点击数据之前到达Flink的。</p><p>那如果在分窗的时候，恰好把曝光数据和点击数据分割在了两个窗口怎么办呢？那点击数据就不可能找到相应的曝光数据了。这个时候，只要我们使用滑动窗口，这个问题就迎刃而解了。因为两个窗口重叠的部分给我们留了足够的余量来进行数据JOIN，避免数据的遗漏。</p><p>事实上，除了固定窗口和滑动窗口，Flink还提供了更丰富的窗口操作，比如基于会话的Session Window，全局性的Global Window。除此之外，Flink还具有数据流JOIN，状态保存特性state等众多非常有价值的操作，想继续学习的同学可以在课后参考Flink的<a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.12/\">官方文档</a> 。我们这节课，只要清楚Flink的核心概念数据流和时间窗口就可以了，因为它反映了流处理平台最核心的特点。</p><h2>Flink数据流处理实践</h2><p>接下来，就又到了实践的环节。我们要继续在SparrowRecsys项目上利用Flink实现一个特征更新的应用。因为没有真实的数据流环境，所以我们利用MoviesLens的ratings表来模拟一个用户评分的数据流，然后基于这个数据流，利用Flink的时间窗口操作，来实时地提取出用户最近的评分电影，以此来反映用户的兴趣。</p><p>下面就是SparrowRecsys中相关的代码（详细代码：com.sparrowrecsys.nearline.flink.RealTimeFeature）。你可以看到，我首先定义了一个评分的数据流ratingStream，然后在处理ratingStream的时候，是把userId作为key进行处理。</p><p>接着，我又利用到了两个函数timeWindow和reduce。利用timeWindow函数，我们可以把处理的时间窗口设置成1s，再利用reduce函数，把每个时间窗口到期时触发的操作设置好。</p><p>在完成了reduce操作后，我们再触发addSink函数中添加的操作，进行数据存储、特征更新等操作。</p><pre><code>DataStream&lt;Rating&gt; ratingStream = inputStream.map(Rating::new);\nratingStream.keyBy(rating -&gt; rating.userId)\n        .timeWindow(Time.seconds(1))\n        .reduce(\n                (ReduceFunction&lt;Rating&gt;) (rating, t1) -&gt; {\n                    if (rating.timestamp.compareTo(t1.timestamp) &gt; 0){\n                        return rating;\n                    }else{\n                        return t1;\n                    }\n                }\n        ).addSink(new SinkFunction&lt;Rating&gt;() {\n    @Override\n    public void invoke(Rating value, Context context) {\n        System.out.println(&quot;userId:&quot; + value.userId + &quot;\\tlatestMovieId:&quot; + value.latestMovieId);\n    }\n});\n\n</code></pre><p>看完了这些操作之后，你知道我们应该怎么把用户最近的高分电影评价历史，实时反映到推荐结果上了吗？其实很简单，我们的用户Embedding是通过平均用户的高分电影Embedding得到的，我们只需要在得到新的高分电影后，实时地更新用户Embedding就可以了，然后在推荐过程中，用户的推荐列表自然会发生实时的变化。这就是SparrowRecsys基于Flink的实时推荐过程。</p><h2>小结</h2><p>这节课我们讲了流处理平台Flink特点，并且通过Flink的实践清楚了，利用流处理平台提高推荐系统实时性的方法。</p><p>Flink是最具代表性的批流一体的大数据平台。它的特点就是，让批处理和流处理共用一套代码，从而既能批量处理已落盘的数据，又能直接处理实时数据流。从理论上来说，是近乎完美的数据流解决方案。</p><p>而Flink提高推荐系统实时性的原理可以理解为是，用户数据进入数据流，也就是数据消息队列后，会被分割成一定时长的时间窗口，之后Flink会按照顺序来依次处理每个时间窗口内的数据，计算出推荐系统需要的特征。这个处理是直接在实时数据流上进行的，所以相比原来基于Spark的批处理过程，实时性有了大幅提高。</p><p>为了方便你复习，我把这节课的核心概念总结在了下面的表格里，希望你能记住它们。</p><p><img src=\"https://static001.geekbang.org/resource/image/ba/b1/baff4cbda249a76a7204c023ce5cc6b1.jpeg?wh=1920*1080\" alt=\"\"></p><p>至于Flink的实时性实践，我们要记住，利用Flink我们可以实时地获取到用户刚刚评价过的电影，然后通过实时更新用户Embedding，就可以实现SparrowRecsys的实时推荐了。</p><h2>课后思考</h2><ol>\n<li>你觉得实时性是不是对所有推荐系统都非常重要？比如对于抖音、快手这类短视频应用，还有优酷、Netflix这类长视频应用，实时性对哪个更重要一些？为什么？</li>\n<li>Flink要加强的往往是数据的实时性，特征的实时性，你觉得模型训练的实时性重要吗？模型训练的实时性发挥的作用和特征实时性有什么不同呢？</li>\n</ol><p>期待在留言区看到你对Flink的思考和疑惑，我们下节课见！</p>","neighbors":{"left":{"article_title":"29 | 图神经网络：Pinterest是如何应用图神经网络的？","id":322487},"right":{"article_title":"31｜模型迭代：阿里巴巴是如何迭代更新推荐模型的？","id":324975}},"comments":[{"had_liked":false,"id":287584,"user_name":"Alan","can_delete":false,"product_type":"c1","uid":2115316,"ip_address":"","ucode":"591A28E310A8F5","user_header":"https://static001.geekbang.org/account/avatar/00/20/46/f4/93b1275b.jpg","comment_is_top":true,"comment_ctime":1618040514,"is_pvip":false,"replies":[{"id":"104479","content":"两点说的都非常好，推荐其他同学参考。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1618113534,"ip_address":"","comment_id":287584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233722188614001e+18","product_id":100060801,"comment_content":"答：1、短视频应用的实时性要求更高！因为相同时间内，短视频用户的单视频停留周期短、场景更换频繁，用户兴趣反馈信息更多；<br>2、我们常说的推荐实时=7特征实时+3模型实时，都很重要！特征实时推荐是加强当前用户关注话题（现在、个别），模型训练实时推荐加强的用户未来关注的话题（下次、整体）。业界常见的做法，基于用户特征实时变化的推荐（热周期-用户活跃期），至于模型训练（或强化学习）放在冷周期（用户睡眠期）。<br>","like_count":43,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518356,"discussion_content":"两点说的都非常好，推荐其他同学参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618113534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275199,"user_name":"顾小平","can_delete":false,"product_type":"c1","uid":1012253,"ip_address":"","ucode":"B25F7CB3C95F5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/1d/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1611386539,"is_pvip":false,"replies":[{"id":"99958","content":"是这样，特征实时更新，模型可以天级别更新。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1611550416,"ip_address":"","comment_id":275199,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31676157611","product_id":100060801,"comment_content":"老师你好，这篇文章说的是不是特征的实时性呢，就可以可以构建最新的用户特征去在线推断，但是在线推断跑的模型还是基于离线数据（批处理计算出来的）训练出来的模型，所以模型也需要做到准实时的更新，比如一天更新一次模型？","like_count":8,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514256,"discussion_content":"是这样，特征实时更新，模型可以天级别更新。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611550416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269484,"user_name":"那时刻","can_delete":false,"product_type":"c1","uid":1150927,"ip_address":"","ucode":"B0D150856C3A4A","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/cf/890f82d6.jpg","comment_is_top":false,"comment_ctime":1608684648,"is_pvip":false,"replies":[{"id":"97756","content":"前两个思考我都认同。<br><br>关于Apache Beam我感觉确实听的落地案例少一些。认识的阿里、Netflix、还是我们公司都是flink。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1608713963,"ip_address":"","comment_id":269484,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27378488424","product_id":100060801,"comment_content":"相对于长视频应用，短视频应用的实时性要求更高些，因为短视频用户切换到下一个视频的时间短，需要推荐系统快速推荐短视频。<br><br>我觉得模型实时性也蛮重要的，可以让模型及时迭代。模型的实时性是模型本身快速及时的通过数据迭代模型，加强模型推荐能力。而特征实时性，可以快速而准确依据用户特征推荐内容。<br><br>想问一下老师，Apache Beam也是批流一体的模型，在业界有应用么？","like_count":7,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512291,"discussion_content":"前两个思考我都认同。\n\n关于Apache Beam我感觉确实听的落地案例少一些。认识的阿里、Netflix、还是我们公司都是flink。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608713963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269703,"user_name":"Geek_91c50b","can_delete":false,"product_type":"c1","uid":2281331,"ip_address":"","ucode":"AA6F9A01B84406","user_header":"","comment_is_top":false,"comment_ctime":1608742386,"is_pvip":false,"replies":[{"id":"97799","content":"是这样，spark streaming也是流处理平台的主流方案，跟flink是竞争关系。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1608771520,"ip_address":"","comment_id":269703,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18788611570","product_id":100060801,"comment_content":"老师，我有个疑问：文中“Spark 平台的特点是，它处理的数据都是已经落盘的数据。”，spark 不是也能直接消费kafka里的数据而不落盘，是不是spark与flink的区别其实也没这么大","like_count":4,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512360,"discussion_content":"是这样，spark streaming也是流处理平台的主流方案，跟flink是竞争关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608771520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2385169,"avatar":"","nickname":"Leigh","note":"","ucode":"422DEEC39FDA59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350281,"discussion_content":"为什么听到看到的批流一体都是flink，没有spark streaming？spark streaming 是有什么短板吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613794084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1795467,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTISicpsLbj7rPPEtKc9ibk9cAOPhTzJPZGKKdO8MnJA4DI3pYrlC4Tx6oKcfyF0JbIylFaub6X2pnUw/132","nickname":"何拟","note":"","ucode":"612882A25A9D50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2385169,"avatar":"","nickname":"Leigh","note":"","ucode":"422DEEC39FDA59","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360300,"discussion_content":"不清楚，用过spark streaming， 直接消费kafka的话延迟也是秒级","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616414010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":350281,"ip_address":""},"score":360300,"extra":""},{"author":{"id":2310201,"avatar":"https://static001.geekbang.org/account/avatar/00/23/40/39/d098c465.jpg","nickname":"饭思思","note":"","ucode":"D19B969CEB44C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2385169,"avatar":"","nickname":"Leigh","note":"","ucode":"422DEEC39FDA59","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381944,"discussion_content":"spark streaming还是基于batch的形式，算是比较快速的批处理。核心还是划分dag，切分stage。这一个stage的任务都完成才能进行下一步。而flink是真正的一条条数据进行处理，时延比spark低很多。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1625312292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":350281,"ip_address":""},"score":381944,"extra":""}]}]},{"had_liked":false,"id":283950,"user_name":"赵炯","can_delete":false,"product_type":"c1","uid":2457563,"ip_address":"","ucode":"763B73880C5B40","user_header":"https://static001.geekbang.org/account/avatar/00/25/7f/db/c22a5af1.jpg","comment_is_top":false,"comment_ctime":1615992827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14500894715","product_id":100060801,"comment_content":"语音助手？？","like_count":4},{"had_liked":false,"id":290103,"user_name":"190coder","can_delete":false,"product_type":"c1","uid":1202881,"ip_address":"","ucode":"68111F5B32CCF7","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/c1/6df65e0a.jpg","comment_is_top":false,"comment_ctime":1619361990,"is_pvip":true,"replies":[{"id":"105187","content":"一般会做不同流之间的汇总，因为有些东西没法单独更新，比如点击往往需要跟曝光做匹配后再更新等等。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1619411961,"ip_address":"","comment_id":290103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10209296582","product_id":100060801,"comment_content":"请教下老师一个短期画像架构问题。短期画像是用flink实时更新所有流的偏好，（如点击，下单，浏览等不同流）。还是只计算属于自己流内的计数,然后短期画像做统一汇总计算。","like_count":2,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519114,"discussion_content":"一般会做不同流之间的汇总，因为有些东西没法单独更新，比如点击往往需要跟曝光做匹配后再更新等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619411961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308677,"user_name":"Geek_8a732a","can_delete":false,"product_type":"c1","uid":2723806,"ip_address":"","ucode":"97A312D97F7B91","user_header":"","comment_is_top":false,"comment_ctime":1629730895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629730895","product_id":100060801,"comment_content":"1、实时性对短视频比长视频更重要，因为用户在看短视频的工程中不断产生新的点击，用户的喜好都在实时变化<br>2、模型的实时性也是重要的，模型的实时性可以提升模型的推荐能力，特征实时性可以根据用户的特征来更快速准确的推荐内容","like_count":0},{"had_liked":false,"id":274331,"user_name":"找大夫吗","can_delete":false,"product_type":"c1","uid":2346858,"ip_address":"","ucode":"3CFFC732A6F8E7","user_header":"https://static001.geekbang.org/account/avatar/00/23/cf/6a/42ee61a1.jpg","comment_is_top":false,"comment_ctime":1610968330,"is_pvip":false,"replies":[{"id":"99651","content":"这应该是一个非常工程化的问题，这个得要问你自己，如果flink都取不到实时评分，你到底能在哪取到？如果取不到，当然是无法实时更新这个feature的","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1611096177,"ip_address":"","comment_id":274331,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1610968330","product_id":100060801,"comment_content":"想请教王老师一个问题：<br>问题场景：短视频推荐场景下采用DSSM双塔模型召回，离线训练完之后把模型 serving上线，然后把用户和item的embedding存入redis, 想根据flink获取的实时特征（过去一小时的行为）去更新用户embedding<br>问题：对于像 ‘用户历史平均分均值’ 这样的input特征，可能flink都获取不到用户实时的评分数据，这种情况下该怎么做到实时特征构建呢？","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513979,"discussion_content":"这应该是一个非常工程化的问题，这个得要问你自己，如果flink都取不到实时评分，你到底能在哪取到？如果取不到，当然是无法实时更新这个feature的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611096177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2052928,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/53/40/d599bf28.jpg","nickname":"冻糕","note":"","ucode":"B0A45E87795C69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369473,"discussion_content":"一个思路  历史平均分是历史所有评分和  除以 历史 评分总数。所以可以这两个数据也存入特征库中。当流入一条信评分进行实时数据计算 历史总评分加上新评分 再除以历史评总分数加1。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1619053217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2414668,"avatar":"","nickname":"夜枭","note":"","ucode":"7A09EC9E003379","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344169,"discussion_content":"之前用storm准实时处理时可以将用户点击数据加入redis缓存里，缓存1一小时的时间","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611309749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}