{"id":324835,"title":"44 | 借用检查： 深入理解生命周期参数：高阶生命周期（一）","content":"<p><strong>课件及Demo下载链接</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Rust\">https://gitee.com/geektime-geekbang/geektime-Rust</a></p>","comments":[{"had_liked":false,"id":307285,"user_name":"神 一生有你","can_delete":false,"product_type":"c3","uid":1047574,"ip_address":"","ucode":"423AD11359E265","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/16/0a3f1c15.jpg","comment_is_top":false,"comment_ctime":1629006418,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"默认借用检查只分析了当前作用域，当你的引用超出范围就会报错，这时就需要你来告诉借用检查器，也就是使用生命周期显示标注是没有问题，具体情况如何标注，就是语法问题对应几种场景，也就是老师讲的几种标注情况和语法，但归根到底，生命周期是解决引用无效的问题，而借用检查器目前实现很简单，只简单判断引用本地作用范围，跨函数等其它情况就只能靠写代码的人了，如果你发现警告了，用生命周期参数标注告诉它，按这样检查就不超范围了，就解决了，还有一个根本原则，输入:(大于)输出。目前程序员搏斗不了编译器，但比借用检查器还是强很多的（人工智能自动标注生命周期以后还是有希望的）","like_count":4,"discussions":[{"author":{"id":2186271,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5c/1f/1a80f7e7.jpg","nickname":"三日月夜","note":"","ucode":"246A8C3233ADFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654412,"discussion_content":"三年后通义千问对rust的生命周期参数理解的也不是很透彻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732671873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"河南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366849,"user_name":"Geek_f969c9","can_delete":false,"product_type":"c3","uid":3296783,"ip_address":"陕西","ucode":"83C3228B5CCED0","user_header":"","comment_is_top":false,"comment_ctime":1674451084,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"在开头的例子中，DoSomething&lt;&amp;&#39;a usize&gt;已经标注了&#39;a大于函数foo，所以当调用b.do_sth(&amp;s)时&amp;&#39;b s无法协变为&amp;&#39;a usize，因为&#39;b生命小于&#39;a;","like_count":1},{"had_liked":false,"id":385784,"user_name":"fandream","can_delete":false,"product_type":"c3","uid":3697081,"ip_address":"浙江","ucode":"C2A18E7AEC5F6B","user_header":"https://static001.geekbang.org/account/avatar/00/38/69/b9/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1703382960,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"原来的例子中, foo&lt;&#39;a&gt;(b: Box&lt;DoSomething&lt;&amp;&#39;a usize&gt;) 属于前期绑定, 在函数调用前进行绑定, 也就是在main函数作用域中, 所以&#39;a的声明周期范围在main函数中, 而调b.do_sth(&amp;val)时, do_sth的参数value的声明周期是&#39;a, 而&amp;val的生命周期范围在foo函数中, 所以&amp;val的生命周期小于&#39;a的生命周期, 也就是val活的不够长","like_count":0}]}