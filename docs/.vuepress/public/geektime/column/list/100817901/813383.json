{"id":813383,"title":"13｜动手实战 ：项目整合，实现知识入库与知识检索","content":"<p>你好，我是叶伟民。</p><p>上一节课我们生成了简报。但是如果我们不仅仅想看当天的简报，我们还想看前天甚至最近一周的简报，那该怎么办呢？</p><p>其中一种方法就是把每天的简报整合进我们的实战案例1，然后在实战案例1首页提问框里面提问：<strong>前天有哪些CNET新闻？</strong></p><h2>最终效果</h2><p>我们先来看看最终的效果。</p><p>我们在首页输入你的问题对话框输入：<strong>前天有哪些CNET新闻？<strong>然后点击</strong>提交</strong>按钮，AI将会回答前天的CNET新闻简报。</p><p><img src=\"https://static001.geekbang.org/resource/image/82/88/8256417d0838b6a047e4df7b0a3f0088.jpg?wh=1603x447\" alt=\"\"></p><p>接下来我们进入实战环节，编写相应的代码。结合前面学过的实战案例1，其实无非是完成知识入库和知识检索两个部分。</p><p>所以接下来的讲解，我们会用到很多前面学过的知识，建议你先关注整合的步骤和用到了哪些知识点，然后再自己动手操作演练。</p><p>另外，我也把每个知识点具体对应的链接给你列出来了，方便你复习回顾。</p><h3>修改测试数据</h3><p>上一节课我们知识入库在 <code>result.json</code> 文件。这节课我们将从这个文件读取知识入库到数据库。</p><p>因为我们这节课要检索前天的知识，而当同学们第一次按照<a href=\"https://time.geekbang.org/column/article/812551\">上一节课</a>实战的时候，可能获取不到前天的知识。出于教学和测试目的，我们需要修改一下这个文件里面的知识。把知识的创建日期改成前天的。</p><p>我们打开 <code>result.json</code> 文件，将每条数据以下红线框部分都改成前天的日期。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/42/e0/4278ccdefe1fa17f5a7683ce3cce53e0.jpg?wh=2949x2632\" alt=\"\"></p><p>然后保存。完成这一基础步骤之后，我们可以把知识保存进数据库了。</p><h2>将知识存进数据库</h2><p>将知识存进数据库的代码主要分以下几部分。</p><ol>\n<li>建立ORM模型。</li>\n<li>将知识存进数据库。</li>\n<li>管理数据库里面的知识。</li>\n</ol><h3>建立ORM模型</h3><p>我们先来建立ORM模型。这里只需要按照<a href=\"https://time.geekbang.org/column/article/809371?utm_campaign=guanwang&utm_content=0511&utm_medium=geektime&utm_source=pinpaizhuanqu&utm_term=guanwang\">第九节课</a>所讲的元数据表结构设计，建立ORM模型。我们打开实战案例1 <code>home</code> 目录下的 <code>feed.py</code> 文件，在底部加入以下代码。</p><pre><code class=\"language-python\">class CNET新闻(models.Model):\n    id = models.IntegerField(\n         primary_key = True,\n         editable = False)\n\n    标题 = models.TextField()\n    url = models.TextField(null=True)\n    作者 = models.TextField(null=True)\n    权限 = models.TextField(null=True)\n    文本摘要原文 = models.TextField(default=False)\n    全文原文 = models.TextField(default=False)\n    文本摘要中文翻译 = models.TextField(default=False)\n    全文中文翻译 = models.TextField(default=False)\n\n    创建时间 = models.DateTimeField(auto_now_add=True)\n    lastmodified_time = models.DateTimeField(auto_now=True)\n</code></pre><p>然后我们按照<a href=\"https://time.geekbang.org/column/article/806091?\">第一节课</a>所讲的方式，另外开一个 <code>Anaconda Powershell Prompt</code>，激活 <code>rag1</code> 虚拟环境，进入实战案例1的目录，然后运行以下命令更新数据库。</p><pre><code class=\"language-powershell\">python manage.py makemigrations \npython manage.py migrate\npython manage.py runserver\n</code></pre><p>以上代码第1和第2行更新数据库，第3行顺便把实战案例1运行起来。</p><p>建立完ORM模型之后，更新完数据库之后，我们可以将知识存进数据库了。</p><h3>将知识存进数据库</h3><p>将知识存进数据库的方式有很多种，为了尽可能通用，我们将知识入库方法封装成一个http API，并对外开放。</p><p>我们打开 <code>home</code> 文件夹下面的 <code>views_api.py</code> 文件，在最底部加入以下代码。</p><pre><code class=\"language-python\">@csrf_exempt\ndef 知识入库api(request):\n    知识 = request.POST['knowledge']\n\n    知识入库(知识)\n    return JsonResponse({\"code\":200,\"message\":\"已经成功将知识入库\"})\n</code></pre><p>然后打开 <code>home</code> 文件夹下面的 <code>urls.py</code> 文件，在最底部的 <code>]</code> 前面插入以下代码。</p><pre><code class=\"language-python\">path(\"api/add-knowledge\", views_api.知识入库api, name=\"add-knowledge\"),\n</code></pre><p>接下来我们把上节课爬到的CNET新闻导入数据库。</p><h3>导入知识</h3><p>然后我们回到实战案例2，新建<code>将新闻导入数据库.py</code> 文件，输入以下代码。</p><pre><code class=\"language-python\">import json\nimport requests\n\nif __name__ == \"__main__\":\n    # 读取result.json文件,\n    with open(\"result.json\", \"r\", encoding=\"utf-8\") as f:\n        data = json.load(f)\n\n    url = \"http://127.0.0.1:8000/api/add-cnet-news\"\n    # 将data做为form-data以post形式发给url\n    headers = {'Content-Type': \"application/json\"}\n    response = requests.post(url, json=data,headers=headers)\n\n    # 打印response的结果\n    print(response.text)\n</code></pre><p>然后回到实战案例2的 <code>Anaconda Powershell Prompt</code>（也就是虚拟环境为 <code>rag2</code> 的那个），运行以下命令将知识导入数据库。</p><pre><code class=\"language-powershell\">python .\\将新闻导入数据库.py\n</code></pre><p>如果一切顺利，我们会看到以下截图。</p><p><img src=\"https://static001.geekbang.org/resource/image/08/42/08751c9bbf9b368bf80c2154d3e64742.jpg?wh=2900x262\" alt=\"\"></p><p>将知识存进数据库之后，我们还需要管理数据库里面的知识。</p><h3>管理数据库里面的知识</h3><p>我们打开 <code>home</code> 文件夹下面的 <code>admin.py</code> 文件，在最底部加入以下代码。</p><pre><code class=\"language-python\">from .models import CNET新闻\n\nclass CNET新闻Admin(admin.ModelAdmin):\n    pass\n\nadmin.site.register(CNET新闻, CNET新闻Admin)\n</code></pre><p>然后我们打开浏览器，输入 <a href=\"http://127.0.0.1:8000/admin\">http://127.0.0.1:8000/admin</a> ，登录之后将跳回管理员界面。如果一切顺利，我们应该看到如下界面。</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/a9/3dbded3ee4f44f5ab11yyb3613b126a9.jpg?wh=2920x1185\" alt=\"\"></p><p>然后点击以上链接之后，将会看到刚才导入的CNET新闻。</p><p>现在我们可以在管理员界面管理数据库里面的知识了。</p><p>接下来，我们还要编写根据问题检索知识部分的代码。</p><h2>根据问题检索知识</h2><p>根据问题检索知识主要包括三个步骤。</p><ol>\n<li>\n<p>大模型根据用户提问得出查询参数。</p>\n</li>\n<li>\n<p>根据查询参数检索出对应的知识。</p>\n</li>\n<li>\n<p>将检索到的知识与用户提问一起提交给大模型。</p>\n</li>\n</ol><p>我们依次来实现它们。</p><h3>根据用户提问得出查询参数</h3><p>首先，我们打开 <code>home</code> 文件夹下面的 <code>rag.py</code> 文件，找到<code>构造解析用户输入并返回结构化数据用的 messages</code> 函数，把它修改成如下代码。</p><pre><code class=\"language-python\">def 构造解析用户输入并返回结构化数据用的messages(用户输入):\n&nbsp; messages=[\n&nbsp; {\"role\": \"user\", \"content\": f\"\"\"\n&nbsp; 请根据用户的输入返回json格式结果，除此之外不要返回其他内容。注意，模块部分请按以下选项返回对应序号：\n&nbsp; &nbsp;1. 销售对账\n&nbsp; &nbsp;2. 报价单\n&nbsp; &nbsp;3. 销售订单\n&nbsp; &nbsp;4. 送货单\n&nbsp; &nbsp;5. 退货单\n   6. 从CNET新闻表里面检索知识\n&nbsp; &nbsp;7. 其他\n\n&nbsp; 示例1：\n&nbsp; 用户：客户北京极客邦有限公司的款项到账了多少？\n&nbsp; 系统：\n&nbsp; {{'模块':1,'客户名称':'北京极客邦有限公司'}}\n\n&nbsp; 示例2：\n&nbsp; 用户：你好\n&nbsp; 系统：\n&nbsp; {{'模块':7,'其他数据',None}}\n\n&nbsp; 示例3：\n&nbsp; 用户：最近一年你过得如何？\n&nbsp; 系统：\n&nbsp; {{'模块':7,'其他数据',None}}\n\n&nbsp; 示例4：\n&nbsp; 用户：前天的CNET新闻有哪些？\n&nbsp; 系统：\n&nbsp; {{'模块':6,'日期',-3}}\n\n&nbsp; 用户：{用户输入}\n&nbsp; 系统：\n&nbsp; \"\"\"},\n&nbsp; ]\n&nbsp; return messages\n</code></pre><p>与之前相比，我们添加了第28到31行代码。这几行代码十分容易懂，使用了<a href=\"https://time.geekbang.org/column/article/807859\">第五节课</a>根据用户发问查询数据的知识点，具体就是加了一个示例，指导大模型根据问题指出正确的模块序号6（也就是CNET新闻），同时得出正确的日期。</p><h3>将查询参数转化为程序可识别的日期</h3><p>现在通过大模型会获得以下查询参数：</p><pre><code class=\"language-json\">{\n  \"模块\": 6, \n  \"日期\": \"前天\"\n}\n</code></pre><p>注意，这里<strong>日期</strong>的值是<strong>前天</strong>，这个值只能被人类识别，程序不可识别和计算。那么我们如何将<strong>前天</strong>换算成具体的日期呢？</p><p>我一开始跟其他网络文章一样，是使用大模型得出前天的具体日期。结果掉进坑里面了，发现不稳定。经过思考研究，我认为：得出前天的具体日期是数学计算。在大模型不擅长数学计算的段子满天飞的今天，做为一名工程师，我们应该实事求是，尊重这个事实，不要强大模型所难，让大模型去做数学计算。我们要知人善用，让大模型去做它擅长的事情。</p><p>另外，实事求是和精益求精并不冲突。我们工程师实事求是把AI应用落地，AI科学家们精益求精解决大模型做数学计算的问题。工程师和科学家都是为AI、为社会、为人类做贡献，我们只是分工不同而已。</p><p>既然不使用大模型得出前天的具体日期，那么如何获得呢？我们可以使用传统代码。</p><p>我们打开 <code>rag.py</code> 文件里面的<code>对AI结果进一步处理</code>函数，添加多一行代码。</p><pre><code class=\"language-python\">def 对AI结果进一步处理(AI结果):\n  处理后结果 = AI结果.replace(\"```json\", '').replace(\"```\", '') # 去掉json格式之外无关的内容\n  处理后结果 = 处理后结果.replace(\"根据您所提供的信息，\",\"\") # 去掉开头的提示\n\n  处理后结果 = 将日期换算成实际日期(处理后结果)# 针对实战案例2的处理\n\n  return 处理后结果\n</code></pre><p>其中第5行就是我们新添加的代码，专门用于获得实际日期。</p><p>然后我们在<code>对AI结果进一步处理</code>函数前面加上<code>将日期换算成实际日期</code>函数的具体实现。</p><pre><code class=\"language-python\">def 将日期换算成实际日期(input_str):\n  if \"日期\" in input_str:\n    try:\n      # 将输入的 JSON 字符串转换为字典\n      input_data = json.loads(input_str.strip())\n\n\n      # 检查模块是否为6\n      if input_data.get(\"模块\") == 6:\n          # 检查是否存在日期字段\n          if \"日期\" in input_data:\n            if input_data[\"日期\"] == \"前天\":\n              # 获取当前日期并计算前天的日期\n              yesterday = datetime.now() - timedelta(days=2)\n              input_data[\"日期\"] = yesterday.strftime(\"%Y-%m-%d\")\n      return json.dumps(input_data)\n    except:\n      return input_str\n</code></pre><p>以后我们可以根据需要扩展第11行到14行代码。随着扩展越来越多，我们肯定是要提取出类和设计模式的，这里我们可以应用这门课最后一节课的知识，用AI帮助我们规范化和工程化。</p><h3>根据查询参数检索出对应的知识</h3><p>这一步使用了<a href=\"https://time.geekbang.org/column/article/808306\">第六节课</a>的知识点，我们找到 <code>rag.py</code> 文件里面的<code>查询</code>函数，把这个函数改成后面的样子。</p><pre><code class=\"language-python\">def 查询(查询参数):\n&nbsp; &nbsp; if '模块' in 查询参数:\n&nbsp; &nbsp; &nbsp; &nbsp; if 查询参数['模块'] == 1: #'销售对账'\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if '客户名称' in 查询参数:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 客户 = 查询参数['客户名称'].strip()\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 销售入账记录.objects.filter(客户__icontains=客户)\n&nbsp; &nbsp; &nbsp; &nbsp; if 查询参数['模块'] == 6: #'CNET新闻'\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if '日期' in 查询参数:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 日期 = 查询参数['日期'].strip()\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(f'日期={日期}')\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # 定义日期字符串\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; date_str = '2024-09-14'\n\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # 定义日期格式\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; date_format = '%Y-%m-%d'\n\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # 将字符串转换为日期对象\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; date_obj = datetime.strptime(date_str, date_format)\n\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 查询结果 = CNET新闻.objects.filter(新闻发布日期__date=date_obj).values_list('标题中文翻译', flat=True)\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 查询结果\n</code></pre><p>从数据库检索出对应知识之后，我们还需要将检索到的知识与用户提问一起提交给大模型。这里可以重用之前的代码。</p><p>然后我们打开浏览器，输入 <code>http://127.0.0.1:8000/</code>， 在首页输入你的问题对话框输入：<strong>前天有哪些CNET新闻？<strong>然后点击</strong>提交</strong>按钮。如果一切顺利，AI将会回答前天的CNET新闻简报。</p><p><img src=\"https://static001.geekbang.org/resource/image/db/8b/db556063551c4e872535b0cecea4108b.jpg?wh=3044x1297\" alt=\"\"></p><p>好了，现在我们很容易就可以查看<strong>前天有哪些CNET新闻</strong>了。</p><p>实战案例2到此结束了。实战案例2的完整源代码放在<a href=\"https://github.com/weiminye/time-geekbang-org-rag/tree/main/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B2\">这里</a>。</p><p>通过实战案例1和2，同学们能够从0到1打造自己的RAG应用。接下来我们将目标转到检索知识的质量上。接下来的十几节课里，我们将继续学习基础概念，并通过对应的动手实战代码来提升知识检索质量。</p><h2>小结</h2><p>好了，今天这一讲到这里就结束了，最后我们来回顾一下。</p><p>这一讲我们学会了一件事情和一个重点。</p><p>一件事情是如何将实战案例2整合进实战案例1。将实战案例2整合进实战案例1之后，我们就可以提问<strong>前天有哪些CNET新闻</strong>了。这节课讲完后，现在我们的实战案例1除了包含知识检索部分，还包含了知识入库部分了。</p><p>一个重点是我们要知人善用，不要强大模型所难，知道大模型的能力边界，知道大模型擅长干什么，不擅长干什么。在大模型不擅长数学计算的段子满天飞的今天，做为一名工程师，我们应该实事求是，尊重这个事实，不要强大模型所难，让大模型去做数学计算。我们要知人善用，让大模型去做它擅长的事情。</p><h2>思考题</h2><p>学习学习，既要学又要习，才能真正掌握一项技能。现在动起手来吧，基于这节课代码去完善你上一节的课后练习代码。</p><p>如果你觉得有收获的话，欢迎你把这节课分享出去，让更多的人了解将数据获取进RAG应用的方法。</p>","neighbors":{"left":{"article_title":"12｜动手实战：挑选后生成简报","id":812551},"right":{"article_title":"加餐1｜前两章课后题答案","id":813827}},"comments":[{"had_liked":false,"id":395082,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":3920101,"ip_address":"广东","ucode":"19E83C631DF25E","user_header":"https://static001.geekbang.org/account/avatar/00/3b/d0/e5/0a3ee17c.jpg","comment_is_top":false,"comment_ctime":1729336646,"is_pvip":false,"replies":[{"id":143609,"content":"很多方法，从简单到困难列一下吧：\n\n1. 最简单的，加if-else\n2. 复杂一点，设计模式加更多类（本质上还是if-else）\n3. AI&#47;大模型进行分类（也就是前面章节的内容，AI&#47;大模型只是不擅长计算，但是擅长分类，可以让AI&#47;大模型分类之后，根据分类结果进行计算）","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1731379460,"ip_address":"江苏","comment_id":395082,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"老师请问定位到前天的代码是写死在代码中的，如果我要查询上个星期，上个月的怎么办呢？","like_count":0,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653654,"discussion_content":"很多方法，从简单到困难列一下吧：\n\n1. 最简单的，加if-else\n2. 复杂一点，设计模式加更多类（本质上还是if-else）\n3. AI/大模型进行分类（也就是前面章节的内容，AI/大模型只是不擅长计算，但是擅长分类，可以让AI/大模型分类之后，根据分类结果进行计算）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731379460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":4046088,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0eVrZvOOzJ822yHplW7IcViaSrRS4FZBLI2LM7z7PUpgGb3lH1bw0J7Zh3fBEhWb0DYSfGtBE4kZAYJcaxJfgBujOMAOaYc7JuTyQXK2Lj4E/132","nickname":"Geek_5df8e7","note":"","ucode":"59D8BD001AF262","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654513,"discussion_content":"另外，老师的提示词里有错误\n现在：{{&#39;模块&#39;:7,&#39;其他数据&#39;,None}}\n应该：{{&#39;模块&#39;:7,&#39;其他数据&#39;:None}}\n\njson格式的话，第一行应该是错误的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732861627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":4046088,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0eVrZvOOzJ822yHplW7IcViaSrRS4FZBLI2LM7z7PUpgGb3lH1bw0J7Zh3fBEhWb0DYSfGtBE4kZAYJcaxJfgBujOMAOaYc7JuTyQXK2Lj4E/132","nickname":"Geek_5df8e7","note":"","ucode":"59D8BD001AF262","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654512,"discussion_content":"比如提示词像这样写，百度的AI能正常回复：\n{{&#39;模块&#39;:6,&#39;日期From&#39;:&#39;2024/11/10&#39;,&#39;日期To&#39;:&#39;2024/11/16&#39;}}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732861561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":4046088,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0eVrZvOOzJ822yHplW7IcViaSrRS4FZBLI2LM7z7PUpgGb3lH1bw0J7Zh3fBEhWb0DYSfGtBE4kZAYJcaxJfgBujOMAOaYc7JuTyQXK2Lj4E/132","nickname":"Geek_5df8e7","note":"","ucode":"59D8BD001AF262","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654511,"discussion_content":"请根据用户的输入返回json格式结果，除此之外不要返回其他内容。注意，模块部分请按以下选项返回对应序号： 1. 销售对账 2. 报价单 3. 销售订单 4. 送货单 5. 退货单 6. 从CNET新闻表里面检索知识 7. 其他 示例1： 用户：客户北京极客邦有限公司的款项到账了多少？ 系统： {{&#39;模块&#39;:1,&#39;客户名称&#39;:&#39;北京极客邦有限公司&#39;}} 示例2： 用户：你好 系统： {{&#39;模块&#39;:7,&#39;其他数据&#39;:None}} 示例3： 用户：最近一年你过得如何？ 系统： {{&#39;模块&#39;:7,&#39;其他数据&#39;:None}} 示例4： 用户：前天的CNET新闻有哪些？ 系统： {{&#39;模块&#39;:6,&#39;日期From&#39;:&#39;2024/11/27&#39;,&#39;日期To&#39;:&#39;2024/11/27&#39;}} 示例5： 用户：上周的CNET新闻有哪些？ 系统： {{&#39;模块&#39;:6,&#39;日期From&#39;:&#39;2024/11/17&#39;,&#39;日期To&#39;:&#39;2024/11/23&#39;}} 用户：&#34;上上周的CNET新闻有哪些？&#34; 系统：","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732861525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}