{"id":83520,"title":"42 | 案例篇：如何优化 NAT 性能？（下）","content":"<p>你好，我是倪朋飞。</p><p>上一节，我们学习了 NAT 的原理，明白了如何在 Linux 中管理 NAT 规则。先来简单复习一下。</p><p>NAT 技术能够重写 IP 数据包的源 IP 或目的 IP，所以普遍用来解决公网 IP 地址短缺的问题。它可以让网络中的多台主机，通过共享同一个公网 IP 地址，来访问外网资源。同时，由于 NAT 屏蔽了内网网络，也为局域网中机器起到安全隔离的作用。</p><p>Linux 中的NAT ，基于内核的连接跟踪模块实现。所以，它维护每个连接状态的同时，也对网络性能有一定影响。那么，碰到 NAT 性能问题时，我们又该怎么办呢？</p><p>接下来，我就通过一个案例，带你学习 NAT 性能问题的分析思路。</p><h2>案例准备</h2><p>下面的案例仍然基于 Ubuntu 18.04，同样适用于其他的 Linux 系统。我使用的案例环境是这样的：</p><ul>\n<li>\n<p>机器配置：2 CPU，8GB 内存。</p>\n</li>\n<li>\n<p>预先安装 docker、tcpdump、curl、ab、SystemTap 等工具，比如</p>\n</li>\n</ul><pre><code>  # Ubuntu\n  $ apt-get install -y docker.io tcpdump curl apache2-utils\n  \n  # CentOS\n  $ curl -fsSL https://get.docker.com | sh\n  $ yum install -y tcpdump curl httpd-tools\n</code></pre><p>大部分工具，你应该都比较熟悉，这里我简单介绍一下 SystemTap 。</p><p><a href=\"https://sourceware.org/systemtap/\">SystemTap</a> 是 Linux 的一种动态追踪框架，它把用户提供的脚本，转换为内核模块来执行，用来监测和跟踪内核的行为。关于它的原理，你暂时不用深究，后面的内容还会介绍到。这里你只要知道怎么安装就可以了：</p><!-- [[[read_end]]] --><pre><code># Ubuntu\napt-get install -y systemtap-runtime systemtap\n# Configure ddebs source\necho &quot;deb http://ddebs.ubuntu.com $(lsb_release -cs) main restricted universe multiverse\ndeb http://ddebs.ubuntu.com $(lsb_release -cs)-updates main restricted universe multiverse\ndeb http://ddebs.ubuntu.com $(lsb_release -cs)-proposed main restricted universe multiverse&quot; | \\\nsudo tee -a /etc/apt/sources.list.d/ddebs.list\n# Install dbgsym\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys F2EDC64DC5AEE1F6B9C621F0C8CAB6595FDFF622\napt-get update\napt install ubuntu-dbgsym-keyring\nstap-prep\napt-get install linux-image-`uname -r`-dbgsym\n\n# CentOS\nyum install systemtap kernel-devel yum-utils kernel\nstab-prep\n</code></pre><p>本次案例还是我们最常见的 Nginx，并且会用 ab 作为它的客户端，进行压力测试。案例中总共用到两台虚拟机，我画了一张图来表示它们的关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/70/c6/7081ad1b72535107e94f852ac41e0dc6.png?wh=1632*1032\" alt=\"\"></p><p>接下来，我们打开两个终端，分别 SSH 登录到两台机器上（以下步骤，假设终端编号与图示VM 编号一致），并安装上面提到的这些工具。注意，curl 和 ab 只需要在客户端 VM（即 VM2）中安装。</p><p>同以前的案例一样，下面的所有命令都默认以 root 用户运行。如果你是用普通用户身份登陆系统，请运行 sudo su root 命令，切换到 root 用户。</p><blockquote>\n<p>如果安装过程中有什么问题，同样鼓励你先自己搜索解决，解决不了的，可以在留言区向我提问。如果你以前已经安装过了，就可以忽略这一点了。</p>\n</blockquote><p>接下来，我们就进入到案例环节。</p><h2>案例分析</h2><p>为了对比 NAT 带来的性能问题，我们首先运行一个不用 NAT 的 Nginx 服务，并用 ab 测试它的性能。</p><p>在终端一中，执行下面的命令，启动 Nginx，注意选项 --network=host ，表示容器使用 Host 网络模式，即不使用 NAT：</p><pre><code>$ docker run --name nginx-hostnet --privileged --network=host -itd feisky/nginx:80\n</code></pre><p>然后到终端二中，执行 curl 命令，确认 Nginx 正常启动：</p><pre><code>$ curl http://192.168.0.30/\n...\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>继续在终端二中，执行 ab 命令，对 Nginx 进行压力测试。不过在测试前要注意，Linux 默认允许打开的文件描述数比较小，比如在我的机器中，这个值只有 1024：</p><pre><code># open files\n$ ulimit -n\n1024\n</code></pre><p>所以，执行 ab 前，先要把这个选项调大，比如调成 65536:</p><pre><code># 临时增大当前会话的最大文件描述符数\n$ ulimit -n 65536\n</code></pre><p>接下来，再去执行 ab 命令，进行压力测试：</p><pre><code># -c表示并发请求数为5000，-n表示总的请求数为10万\n# -r表示套接字接收错误时仍然继续执行，-s表示设置每个请求的超时时间为2s\n$ ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30/\n...\nRequests per second:    6576.21 [#/sec] (mean)\nTime per request:       760.317 [ms] (mean)\nTime per request:       0.152 [ms] (mean, across all concurrent requests)\nTransfer rate:          5390.19 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0  177 714.3      9    7338\nProcessing:     0   27  39.8     19     961\nWaiting:        0   23  39.5     16     951\nTotal:          1  204 716.3     28    7349\n...\n</code></pre><p>关于 ab 输出界面的含义，我已经在 <a href=\"https://time.geekbang.org/column/article/81497\">怎么评估系统的网络性能</a> 文章中介绍过，忘了的话自己先去复习。从这次的界面，你可以看出：</p><ul>\n<li>\n<p>每秒请求数（Requests  per second）为 6576；</p>\n</li>\n<li>\n<p>每个请求的平均延迟（Time per request）为 760ms；</p>\n</li>\n<li>\n<p>建立连接的平均延迟（Connect）为 177ms。</p>\n</li>\n</ul><p>记住这几个数值，这将是接下来案例的基准指标。</p><blockquote>\n<p>注意，你的机器中，运行结果跟我的可能不一样，不过没关系，并不影响接下来的案例分析思路。</p>\n</blockquote><p>接着，回到终端一，停止这个未使用NAT的Nginx应用：</p><pre><code>$ docker rm -f nginx-hostnet\n</code></pre><p>再执行下面的命令，启动今天的案例应用。案例应用监听在 8080 端口，并且使用了 DNAT ，来实现 Host 的 8080 端口，到容器的 8080 端口的映射关系：</p><pre><code>$ docker run --name nginx --privileged -p 8080:8080 -itd feisky/nginx:nat\n</code></pre><p>Nginx 启动后，你可以执行 iptables 命令，确认 DNAT 规则已经创建：</p><pre><code>$ iptables -nL -t nat\nChain PREROUTING (policy ACCEPT)\ntarget     prot opt source               destination\nDOCKER     all  --  0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL\n\n...\n\nChain DOCKER (2 references)\ntarget     prot opt source               destination\nRETURN     all  --  0.0.0.0/0            0.0.0.0/0\nDNAT       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:172.17.0.2:8080\n</code></pre><p>你可以看到，在 PREROUTING 链中，目的为本地的请求，会转到 DOCKER 链；而在 DOCKER 链中，目的端口为 8080 的 tcp 请求，会被 DNAT 到 172.17.0.2 的 8080 端口。其中，172.17.0.2 就是 Nginx 容器的 IP 地址。</p><p>接下来，我们切换到终端二中，执行 curl 命令，确认 Nginx 已经正常启动：</p><pre><code>$ curl http://192.168.0.30:8080/\n...\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>然后，再次执行上述的 ab 命令，不过这次注意，要把请求的端口号换成 8080：</p><pre><code># -c表示并发请求数为5000，-n表示总的请求数为10万\n# -r表示套接字接收错误时仍然继续执行，-s表示设置每个请求的超时时间为2s\n$ ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30:8080/\n...\napr_pollset_poll: The timeout specified has expired (70007)\nTotal of 5602 requests completed\n</code></pre><p>果然，刚才正常运行的 ab ，现在失败了，还报了连接超时的错误。运行 ab 时的-s 参数，设置了每个请求的超时时间为 2s，而从输出可以看到，这次只完成了 5602 个请求。</p><p>既然是为了得到 ab 的测试结果，我们不妨把超时时间延长一下试试，比如延长到 30s。延迟增大意味着要等更长时间，为了快点得到结果，我们可以同时把总测试次数，也减少到 10000:</p><pre><code>$ ab -c 5000 -n 10000 -r -s 30 http://192.168.0.30:8080/\n...\nRequests per second:    76.47 [#/sec] (mean)\nTime per request:       65380.868 [ms] (mean)\nTime per request:       13.076 [ms] (mean, across all concurrent requests)\nTransfer rate:          44.79 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0 1300 5578.0      1   65184\nProcessing:     0 37916 59283.2      1  130682\nWaiting:        0    2   8.7      1     414\nTotal:          1 39216 58711.6   1021  130682\n...\n</code></pre><p>再重新看看 ab 的输出，这次的结果显示：</p><ul>\n<li>\n<p>每秒请求数（Requests per second）为 76；</p>\n</li>\n<li>\n<p>每个请求的延迟（Time per request）为 65s；</p>\n</li>\n<li>\n<p>建立连接的延迟（Connect）为 1300ms。</p>\n</li>\n</ul><p>显然，每个指标都比前面差了很多。</p><p>那么，碰到这种问题时，你会怎么办呢？你可以根据前面的讲解，先自己分析一下，再继续学习下面的内容。</p><p>在上一节，我们使用 tcpdump 抓包的方法，找出了延迟增大的根源。那么今天的案例，我们仍然可以用类似的方法寻找线索。不过，现在换个思路，因为今天我们已经事先知道了问题的根源——那就是 NAT。</p><p>回忆一下Netfilter 中，网络包的流向以及 NAT 的原理，你会发现，要保证 NAT 正常工作，就至少需要两个步骤：</p><ul>\n<li>\n<p>第一，利用 Netfilter 中的钩子函数（Hook），修改源地址或者目的地址。</p>\n</li>\n<li>\n<p>第二，利用连接跟踪模块 conntrack ，关联同一个连接的请求和响应。</p>\n</li>\n</ul><p>是不是这两个地方出现了问题呢？我们用前面提到的动态追踪工具 SystemTap 来试试。</p><p>由于今天案例是在压测场景下，并发请求数大大降低，并且我们清楚知道 NAT 是罪魁祸首。所以，我们有理由怀疑，内核中发生了丢包现象。</p><p>我们可以回到终端一中，创建一个 dropwatch.stp 的脚本文件，并写入下面的内容：</p><pre><code>#! /usr/bin/env stap\n\n############################################################\n# Dropwatch.stp\n# Author: Neil Horman &lt;nhorman@redhat.com&gt;\n# An example script to mimic the behavior of the dropwatch utility\n# http://fedorahosted.org/dropwatch\n############################################################\n\n# Array to hold the list of drop points we find\nglobal locations\n\n# Note when we turn the monitor on and off\nprobe begin { printf(&quot;Monitoring for dropped packets\\n&quot;) }\nprobe end { printf(&quot;Stopping dropped packet monitor\\n&quot;) }\n\n# increment a drop counter for every location we drop at\nprobe kernel.trace(&quot;kfree_skb&quot;) { locations[$location] &lt;&lt;&lt; 1 }\n\n# Every 5 seconds report our drop locations\nprobe timer.sec(5)\n{\n  printf(&quot;\\n&quot;)\n  foreach (l in locations-) {\n    printf(&quot;%d packets dropped at %s\\n&quot;,\n           @count(locations[l]), symname(l))\n  }\n  delete locations\n}\n</code></pre><p>这个脚本，跟踪内核函数 kfree_skb() 的调用，并统计丢包的位置。文件保存好后，执行下面的 stap 命令，就可以运行丢包跟踪脚本。这里的stap，是 SystemTap 的命令行工具：</p><pre><code>$ stap --all-modules dropwatch.stp\nMonitoring for dropped packets\n</code></pre><p>当你看到 probe begin 输出的 “Monitoring for dropped packets” 时，表明 SystemTap 已经将脚本编译为内核模块，并启动运行了。</p><p>接着，我们切换到终端二中，再次执行 ab 命令：</p><pre><code>$ ab -c 5000 -n 10000 -r -s 30 http://192.168.0.30:8080/\n</code></pre><p>然后，再次回到终端一中，观察 stap 命令的输出：</p><pre><code>10031 packets dropped at nf_hook_slow\n676 packets dropped at tcp_v4_rcv\n\n7284 packets dropped at nf_hook_slow\n268 packets dropped at tcp_v4_rcv\n</code></pre><p>你会发现，大量丢包都发生在 nf_hook_slow 位置。看到这个名字，你应该能想到，这是在 Netfilter Hook 的钩子函数中，出现丢包问题了。但是不是 NAT，还不能确定。接下来，我们还得再跟踪  nf_hook_slow 的执行过程，这一步可以通过 perf 来完成。</p><p>我们切换到终端二中，再次执行 ab 命令：</p><pre><code>$ ab -c 5000 -n 10000 -r -s 30 http://192.168.0.30:8080/\n</code></pre><p>然后，再次切换回终端一，执行 perf record 和 perf report 命令</p><pre><code># 记录一会（比如30s）后按Ctrl+C结束\n$ perf record -a -g -- sleep 30\n\n# 输出报告\n$ perf report -g graph,0\n</code></pre><p>在 perf report 界面中，输入查找命令 / 然后，在弹出的对话框中，输入 nf_hook_slow；最后再展开调用栈，就可以得到下面这个调用图：</p><p><img src=\"https://static001.geekbang.org/resource/image/0e/3c/0e844a471ff1062a1db70a303add943c.png?wh=587*851\" alt=\"\"></p><p>从这个图我们可以看到，nf_hook_slow 调用最多的有三个地方，分别是 ipv4_conntrack_in、br_nf_pre_routing 以及 iptable_nat_ipv4_in。换言之，nf_hook_slow 主要在执行三个动作。</p><ul>\n<li>\n<p>第一，接收网络包时，在连接跟踪表中查找连接，并为新的连接分配跟踪对象（Bucket）。</p>\n</li>\n<li>\n<p>第二，在 Linux 网桥中转发包。这是因为案例 Nginx 是一个 Docker 容器，而容器的网络通过网桥来实现；</p>\n</li>\n<li>\n<p>第三，接收网络包时，执行 DNAT，即把 8080 端口收到的包转发给容器。</p>\n</li>\n</ul><p>到这里，我们其实就找到了性能下降的三个来源。这三个来源，都是 Linux 的内核机制，所以接下来的优化，自然也是要从内核入手。</p><p>根据以前各个资源模块的内容，我们知道，Linux 内核为用户提供了大量的可配置选项，这些选项可以通过 proc 文件系统，或者 sys 文件系统，来查看和修改。除此之外，你还可以用 sysctl 这个命令行工具，来查看和修改内核配置。</p><p>比如，我们今天的主题是 DNAT，而 DNAT 的基础是 conntrack，所以我们可以先看看，内核提供了哪些 conntrack 的配置选项。</p><p>我们在终端一中，继续执行下面的命令：</p><pre><code>$ sysctl -a | grep conntrack\nnet.netfilter.nf_conntrack_count = 180\nnet.netfilter.nf_conntrack_max = 1000\nnet.netfilter.nf_conntrack_buckets = 65536\nnet.netfilter.nf_conntrack_tcp_timeout_syn_recv = 60\nnet.netfilter.nf_conntrack_tcp_timeout_syn_sent = 120\nnet.netfilter.nf_conntrack_tcp_timeout_time_wait = 120\n...\n</code></pre><p>你可以看到，这里最重要的三个指标：</p><ul>\n<li>\n<p>net.netfilter.nf_conntrack_count，表示当前连接跟踪数；</p>\n</li>\n<li>\n<p>net.netfilter.nf_conntrack_max，表示最大连接跟踪数；</p>\n</li>\n<li>\n<p>net.netfilter.nf_conntrack_buckets，表示连接跟踪表的大小。</p>\n</li>\n</ul><p>所以，这个输出告诉我们，当前连接跟踪数是 180，最大连接跟踪数是 1000，连接跟踪表的大小，则是 65536。</p><p>回想一下前面的 ab 命令，并发请求数是 5000，而请求数是 100000。显然，跟踪表设置成，只记录 1000 个连接，是远远不够的。</p><p>实际上，内核在工作异常时，会把异常信息记录到日志中。比如前面的 ab 测试，内核已经在日志中报出了 “nf_conntrack: table full” 的错误。执行 dmesg 命令，你就可以看到：</p><pre><code>$ dmesg | tail\n[104235.156774] nf_conntrack: nf_conntrack: table full, dropping packet\n[104243.800401] net_ratelimit: 3939 callbacks suppressed\n[104243.800401] nf_conntrack: nf_conntrack: table full, dropping packet\n[104262.962157] nf_conntrack: nf_conntrack: table full, dropping packet\n</code></pre><p>其中，net_ratelimit 表示有大量的日志被压缩掉了，这是内核预防日志攻击的一种措施。而当你看到 “nf_conntrack: table full” 的错误时，就表明 nf_conntrack_max 太小了。</p><p>那是不是，直接把连接跟踪表调大就可以了呢？调节前，你先得明白，连接跟踪表，实际上是内存中的一个哈希表。如果连接跟踪数过大，也会耗费大量内存。</p><p>其实，我们上面看到的 nf_conntrack_buckets，就是哈希表的大小。哈希表中的每一项，都是一个链表（称为 Bucket），而链表长度，就等于 nf_conntrack_max 除以 nf_conntrack_buckets。</p><p>比如，我们可以估算一下，上述配置的连接跟踪表占用的内存大小：</p><pre><code># 连接跟踪对象大小为376，链表项大小为16\nnf_conntrack_max*连接跟踪对象大小+nf_conntrack_buckets*链表项大小 \n= 1000*376+65536*16 B\n= 1.4 MB\n</code></pre><p>接下来，我们将 nf_conntrack_max 改大一些，比如改成 131072（即nf_conntrack_buckets的2倍）：</p><pre><code>$ sysctl -w net.netfilter.nf_conntrack_max=131072\n$ sysctl -w net.netfilter.nf_conntrack_buckets=65536\n</code></pre><p>然后再切换到终端二中，重新执行 ab 命令。注意，这次我们把超时时间也改回原来的 2s：</p><pre><code>$ ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30:8080/\n...\nRequests per second:    6315.99 [#/sec] (mean)\nTime per request:       791.641 [ms] (mean)\nTime per request:       0.158 [ms] (mean, across all concurrent requests)\nTransfer rate:          4985.15 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0  355 793.7     29    7352\nProcessing:     8  311 855.9     51   14481\nWaiting:        0  292 851.5     36   14481\nTotal:         15  666 1216.3    148   14645\n</code></pre><p>果然，现在你可以看到：</p><ul>\n<li>\n<p>每秒请求数（Requests per second）为 6315（不用NAT时为6576）；</p>\n</li>\n<li>\n<p>每个请求的延迟（Time per request）为 791ms（不用NAT时为760ms）；</p>\n</li>\n<li>\n<p>建立连接的延迟（Connect）为 355ms（不用NAT时为177ms）。</p>\n</li>\n</ul><p>这个结果，已经比刚才的测试好了很多，也很接近最初不用 NAT 时的基准结果了。</p><p>不过，你可能还是很好奇，连接跟踪表里，到底都包含了哪些东西？这里的东西，又是怎么刷新的呢？</p><p>实际上，你可以用 conntrack 命令行工具，来查看连接跟踪表的内容。比如：</p><pre><code># -L表示列表，-o表示以扩展格式显示\n$ conntrack -L -o extended | head\nipv4     2 tcp      6 7 TIME_WAIT src=192.168.0.2 dst=192.168.0.96 sport=51744 dport=8080 src=172.17.0.2 dst=192.168.0.2 sport=8080 dport=51744 [ASSURED] mark=0 use=1\nipv4     2 tcp      6 6 TIME_WAIT src=192.168.0.2 dst=192.168.0.96 sport=51524 dport=8080 src=172.17.0.2 dst=192.168.0.2 sport=8080 dport=51524 [ASSURED] mark=0 use=1\n</code></pre><p>从这里你可以发现，连接跟踪表里的对象，包括了协议、连接状态、源IP、源端口、目的IP、目的端口、跟踪状态等。由于这个格式是固定的，所以我们可以用 awk、sort 等工具，对其进行统计分析。</p><p>比如，我们还是以 ab 为例。在终端二启动 ab 命令后，再回到终端一中，执行下面的命令：</p><pre><code># 统计总的连接跟踪数\n$ conntrack -L -o extended | wc -l\n14289\n\n# 统计TCP协议各个状态的连接跟踪数\n$ conntrack -L -o extended | awk '/^.*tcp.*$/ {sum[$6]++} END {for(i in sum) print i, sum[i]}'\nSYN_RECV 4\nCLOSE_WAIT 9\nESTABLISHED 2877\nFIN_WAIT 3\nSYN_SENT 2113\nTIME_WAIT 9283\n\n# 统计各个源IP的连接跟踪数\n$ conntrack -L -o extended | awk '{print $7}' | cut -d &quot;=&quot; -f 2 | sort | uniq -c | sort -nr | head -n 10\n  14116 192.168.0.2\n    172 192.168.0.96\n</code></pre><p>这里统计了总连接跟踪数，TCP协议各个状态的连接跟踪数，以及各个源IP的连接跟踪数。你可以看到，大部分 TCP 的连接跟踪，都处于 TIME_WAIT 状态，并且它们大都来自于 192.168.0.2 这个 IP 地址（也就是运行 ab 命令的 VM2）。</p><p>这些处于 TIME_WAIT 的连接跟踪记录，会在超时后清理，而默认的超时时间是 120s，你可以执行下面的命令来查看：</p><pre><code>$ sysctl net.netfilter.nf_conntrack_tcp_timeout_time_wait\nnet.netfilter.nf_conntrack_tcp_timeout_time_wait = 120\n</code></pre><p>所以，如果你的连接数非常大，确实也应该考虑，适当减小超时时间。</p><p>除了上面这些常见配置，conntrack 还包含了其他很多配置选项，你可以根据实际需要，参考 nf_conntrack 的<a href=\"https://www.kernel.org/doc/Documentation/networking/nf_conntrack-sysctl.txt\">文档</a>来配置。</p><h2>小结</h2><p>今天，我带你一起学习了，如何排查和优化 NAT 带来的性能问题。</p><p>由于 NAT 基于 Linux 内核的连接跟踪机制来实现。所以，在分析 NAT 性能问题时，我们可以先从 conntrack 角度来分析，比如用 systemtap、perf 等，分析内核中 conntrack 的行文；然后，通过调整 netfilter 内核选项的参数，来进行优化。</p><p>其实，Linux 这种通过连接跟踪机制实现的 NAT，也常被称为有状态的 NAT，而维护状态，也带来了很高的性能成本。</p><p>所以，除了调整内核行为外，在不需要状态跟踪的场景下（比如只需要按预定的IP和端口进行映射，而不需要动态映射），我们也可以使用无状态的 NAT （比如用 tc 或基于 DPDK 开发），来进一步提升性能。</p><h2>思考</h2><p>最后，给你留一个思考题。你有没有碰到过 NAT 带来的性能问题？你是怎么定位和分析它的根源的？最后，又是通过什么方法来优化解决的？你可以结合今天的案例，总结自己的思路。</p><p>欢迎在留言区和我讨论，也欢迎你把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","neighbors":{"left":{"article_title":"41 | 案例篇：如何优化 NAT 性能？（上）","id":83189},"right":{"article_title":"43 | 套路篇：网络性能优化的几个思路（上）","id":83783}},"comments":[{"had_liked":false,"id":71762,"user_name":"分清云淡","can_delete":false,"product_type":"c1","uid":1269873,"ip_address":"","ucode":"7045AE6BF72D31","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/71/895ee6cf.jpg","comment_is_top":false,"comment_ctime":1551428155,"is_pvip":false,"replies":[{"id":"26320","content":"👍 谢谢分享。内核问题的分析和排查一般都比较耗时间，对基础知识的要求也会高一些。","user_name":"作者回复","comment_id":71762,"uid":"1001282","ip_address":"","utype":1,"ctime":1551705007,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"164760185403","product_id":100020901,"comment_content":"https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;VYBs8iqf0HsNg9WAxktzYQ：（多个容器snat时因为搜索本地可用端口（都从1025开始，到找到可用端口并插入到conntrack表是一个非事务并且有时延--第二个插入会失败，进而导致第一个syn包被扔掉的错误，扔掉后重传找到新的可用端口，表现就是时延偶尔为1秒或者3秒）<br><br>这篇文章是我见过诊断NAT问题最专业的，大家要多学习一下里面的思路和手段","like_count":39,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441319,"discussion_content":"👍 谢谢分享。内核问题的分析和排查一般都比较耗时间，对基础知识的要求也会高一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551705007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186767,"user_name":"ben","can_delete":false,"product_type":"c1","uid":1785149,"ip_address":"","ucode":"7084248C8D962C","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3d/3d/66512c23.jpg","comment_is_top":false,"comment_ctime":1583920069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"117548037061","product_id":100020901,"comment_content":"其实遇到很多问题的时候多看看内核日志就知道了，linux很智能的，很多报错信息都在日志里面，越遇到系统优化层面，就多要看看内核日志，我一般是使用journalctl -k -f来查看，有报错信息就Google，线上遇到nf_conntrack: table full，就是这样排查出来的，查看内核日志真的很重要，特别应用日志没看出什么来的时候","like_count":28},{"had_liked":false,"id":71648,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1551406782,"is_pvip":false,"replies":[{"id":"26305","content":"嗯嗯，是个好问题。下一模块中有内核线程的分析思路，到时候可以看到分析的方法","user_name":"作者回复","comment_id":71648,"uid":"1001282","ip_address":"","utype":1,"ctime":1551703228,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"31616177854","product_id":100020901,"comment_content":"这个案例，能不能讲讲怎么找到是NAT问题？这个很关键，但文章里直接点明说是NAT问题，这个就不好了，一般看cpu,看其他指标很难想到是nat问题，真实场景里，怎么会想到是nat问题呢？","like_count":8,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441255,"discussion_content":"嗯嗯，是个好问题。下一模块中有内核线程的分析思路，到时候可以看到分析的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551703228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70959,"user_name":"vvccoe","can_delete":false,"product_type":"c1","uid":1099892,"ip_address":"","ucode":"1BE9FDE72175BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/74/a1bd2307.jpg","comment_is_top":false,"comment_ctime":1551234037,"is_pvip":false,"replies":[{"id":"25714","content":"这是内核数据结构的大小，一般不会变化","user_name":"作者回复","comment_id":70959,"uid":"1001282","ip_address":"","utype":1,"ctime":1551399481,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"31616005109","product_id":100020901,"comment_content":"‘# 连接跟踪对象大小为 376，链表项大小为 16<br>nf_conntrack_max* 连接跟踪对象大小 +nf_conntrack_buckets* 链表项大小 <br>= 1000*376+65536*16 B<br>= 1.4 MB’   <br>老师 上面的376和16 是固定值吗？<br>","like_count":7,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440921,"discussion_content":"这是内核数据结构的大小，一般不会变化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551399481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284474,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","nickname":"AceslupK","note":"","ucode":"048F84D019CBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394062,"discussion_content":"突然就来两个值，也没细说，懵圈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631705867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1298046,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZicicibGibtR5zAia782Ajc5I5BN3F3tjAdlibATIknHv67gbxeH21N7B6vbgwLjYb1miaLKhqicptB5ibYw/132","nickname":"阿飞","note":"","ucode":"F8B1FC8521264D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269739,"discussion_content":"当时我看到这里也有同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589943926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84767,"user_name":"Geek_007","can_delete":false,"product_type":"c1","uid":1467182,"ip_address":"","ucode":"C80107538EAA7F","user_header":"https://static001.geekbang.org/account/avatar/00/16/63/2e/e49116d1.jpg","comment_is_top":false,"comment_ctime":1554904274,"is_pvip":false,"replies":[{"id":"30635","content":"1. 有很多服务是依赖conntrack的，所以要看实际需求确定<br>2. 要看iptables规则是不是用到了conntrack功能","user_name":"作者回复","comment_id":84767,"uid":"1001282","ip_address":"","utype":1,"ctime":1555075053,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":1,"score":"27324708050","product_id":100020901,"comment_content":"老师你好，有两个问题想请教一下。<br>第一点，了解到ip_conntrack模块既然会限制链接，且调大会导致占用内存，而且调大了也不一定能解决大流量服务器的网络性能问题，我理解是不是应该关掉ip_conntrack模块，因为业务服务器按理说是不需要状态追踪的。<br>第二点，如果我关掉ip_conntrack，会不会因为我执行iptables命令导致该模块被加载，或者执行conntrack命令导致模块被加载。。","like_count":7,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446440,"discussion_content":"1. 有很多服务是依赖conntrack的，所以要看实际需求确定\n2. 要看iptables规则是不是用到了conntrack功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555075053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2068721,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/90/f1/7f2b5e16.jpg","nickname":"CHN-Lee-玉米","note":"","ucode":"0A53080F38F229","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378013,"discussion_content":"你可以在raw表加一条notrack规则","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622997436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90920,"user_name":"无名老卒","can_delete":false,"product_type":"c1","uid":1348261,"ip_address":"","ucode":"48874CE670E122","user_header":"","comment_is_top":false,"comment_ctime":1556723333,"is_pvip":false,"replies":[{"id":"33127","content":"应该是反过来，nf_conntrack_max是最大连接跟踪数，nf_conntrack_buckets是连接跟踪表（哈希表）大小。哈希表最大也就是最大连接跟踪数","user_name":"作者回复","comment_id":90920,"uid":"1001282","ip_address":"","utype":1,"ctime":1557326418,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"23031559813","product_id":100020901,"comment_content":"很惊讶，之前在线上环境中就出现了kernel: nf_conntrack: table full, dropping packet.的报错，当时就认为是conntrack_max导致的，后面调整了这个值之后就恢复了，但其实那次故障也不应该会加载nf_conntrack模块，因为iptables规则只是设置了几个IP允许登陆服务器，当时也不清楚为什么会去加载这个模块了。<br><br>同时，conntrack_max和conntrack_buckets有没有什么联系呢？从描述中，感觉conntrack_buckets应该要大于conntrack_max才对，但实际 上不是这样，请老师解惑下。","like_count":5,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448722,"discussion_content":"应该是反过来，nf_conntrack_max是最大连接跟踪数，nf_conntrack_buckets是连接跟踪表（哈希表）大小。哈希表最大也就是最大连接跟踪数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557326418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2110718,"avatar":"https://static001.geekbang.org/account/avatar/00/20/34/fe/e5429b02.jpg","nickname":"glimmer","note":"","ucode":"48A16C52FB4C45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367959,"discussion_content":"iptables一开启就会激活这个nf_conntrack，或者iptables没开启但执行iptables -t nat -L 等查询命令可能亦会激活(因为nat模块依赖nf_conntrack)。是这样的吗，老师？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618501715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71646,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1551406721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18731275905","product_id":100020901,"comment_content":"systemtap这个真牛，还可以追踪内核模块执行，长见识咯！iptables需要学习下","like_count":4},{"had_liked":false,"id":71019,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1551246218,"is_pvip":false,"replies":[{"id":"25715","content":"是的","user_name":"作者回复","comment_id":71019,"uid":"1001282","ip_address":"","utype":1,"ctime":1551399502,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"14436148106","product_id":100020901,"comment_content":"[D42打卡]<br>今天的内容只能围观了.<br>居然还用了内核动态追踪工具,统计丢包位置.<br>对于我这种完全不了解内核的人来说, 只当是开了眼界.<br><br>对于我来说,目前知道 NAT会带来性能损耗 就行了.🤦‍♀️<br>能避免就避免使用,不能避免了就在请求数较多的场景下调些参数.<br><br>`# 连接跟踪对象大小为 376，链表项大小为 16`<br>这应该是c结构体的大小吧.<br>","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440946,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551399502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306926,"user_name":"章星","can_delete":false,"product_type":"c1","uid":1134381,"ip_address":"","ucode":"6A4BC852BE7025","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/2d/7b5ed6c2.jpg","comment_is_top":false,"comment_ctime":1628778973,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5923746269","product_id":100020901,"comment_content":"执行第二个8080的容器的时候提示：<br>&#47;bin&#47;sh: 1: cannot create &#47;proc&#47;sys&#47;net&#47;netfilter&#47;nf_conntrack_max: Permission denied  <br>不知道有没有人碰到，怎么解决呢<br>root@vm101:&#47;home&#47;zhang# docker logs nginx         <br>&#47;bin&#47;sh: 1: cannot create &#47;proc&#47;sys&#47;net&#47;netfilter&#47;nf_conntrack_max: Permission denied<br>root@vm101:&#47;home&#47;zhang# docker ps -a<br>CONTAINER ID   IMAGE              COMMAND                  CREATED          STATUS                      PORTS     NAMES<br>79b0ea8bb408   feisky&#47;nginx:nat   &quot;&#47;bin&#47;sh -c &#39;echo 10…&quot;   11 minutes ago   Exited (2) 11 minutes ago             nginx","like_count":1,"discussions":[{"author":{"id":1059938,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2c/62/906b5eee.jpg","nickname":"毒狼","note":"","ucode":"0771F3868CD604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579084,"discussion_content":"高版本内核可以运行如下命令启动nat容器：sysctl -w net.nf_conntrack_max=1000; docker run --name nginx --privileged -p 8080:8080 -itd feisky/nginx:nat /bin/sh -c &#34;nginx -g \\&#34;daemon off;\\&#34;&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657168049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1082187,"avatar":"https://static001.geekbang.org/account/avatar/00/10/83/4b/0e96fcae.jpg","nickname":"sky","note":"","ucode":"FC323371453C97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552550,"discussion_content":"我也遇到了，也没找到解决方案.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645509284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119127,"user_name":"aliuql","can_delete":false,"product_type":"c1","uid":1086235,"ip_address":"","ucode":"FCF6CEC8138A94","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/1b/bf902c9d.jpg","comment_is_top":false,"comment_ctime":1564529463,"is_pvip":false,"replies":[{"id":"44418","content":"不一定，比如使用hostnetwork就会直接使用host的网络。NAT支持流量限制，不过需要额外的配置","user_name":"作者回复","comment_id":119127,"uid":"1001282","ip_address":"","utype":1,"ctime":1565017103,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5859496759","product_id":100020901,"comment_content":"老师你好，docker，是不是必然会用到dnat的端口映射？linux服务器内 nat本身应该也有流量限制吧！","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460753,"discussion_content":"不一定，比如使用hostnetwork就会直接使用host的网络。NAT支持流量限制，不过需要额外的配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565017103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71052,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1551254685,"is_pvip":false,"replies":[{"id":"25716","content":"NAT，不是net😊","user_name":"作者回复","comment_id":71052,"uid":"1001282","ip_address":"","utype":1,"ctime":1551399544,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5846221981","product_id":100020901,"comment_content":"以前只是知道net性能不好，今天通过老师的讲解彻底明白了来龙去脉。<br>公司内部上网用的就是net 人一多就特别慢。<br>业务基本上没用过net。","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440962,"discussion_content":"NAT，不是net😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551399544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70908,"user_name":"Cranliu","can_delete":false,"product_type":"c1","uid":1304302,"ip_address":"","ucode":"DC2DE84B142FDA","user_header":"https://static001.geekbang.org/account/avatar/00/13/e6/ee/e3c4c9b3.jpg","comment_is_top":false,"comment_ctime":1551227377,"is_pvip":false,"replies":[{"id":"25713","content":"先尝试尝试案例，再回去补补基础","user_name":"作者回复","comment_id":70908,"uid":"1001282","ip_address":"","utype":1,"ctime":1551399330,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"5846194673","product_id":100020901,"comment_content":"今天是跟不上了，没有网络基础，进入到网络模块就开始觉得吃力了😂","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440894,"discussion_content":"先尝试尝试案例，再回去补补基础","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551399330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970516,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLK4NPyaFDl4rzrd4A9z42tQDibFLdCicbrAdyUa5P2B5u8UCUBenpHX7VgUCibvHvhpza4icMBKVnhmA/132","nickname":"学无止境","note":"","ucode":"2C28E8E54DAB4E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415293,"discussion_content":"确实吃力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637048828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297269,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cb/75/0106cd63.jpg","nickname":"永","note":"","ucode":"F1737EBDB046FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":128846,"discussion_content":"有同感，很吃力，觉得是长见识了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578665759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356893,"user_name":"Brilliant","can_delete":false,"product_type":"c1","uid":1522168,"ip_address":"上海","ucode":"CFF4F5BCAF21EE","user_header":"https://static001.geekbang.org/account/avatar/00/17/39/f8/b5a1b669.jpg","comment_is_top":false,"comment_ctime":1662688180,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1662688180","product_id":100020901,"comment_content":"$ docker run --name nginx --privileged -p 8080:8080 -itd feisky&#47;nginx:nat<br>执行后容器没有启动起来，日志显示<br>&#47;bin&#47;sh: 1: cannot create &#47;proc&#47;sys&#47;net&#47;netfilter&#47;nf_conntrack_max: Permission denied<br><br>需要为容器中的入口指令提权，如下：<br>$ docker run --name nginx --privileged=true -u=root -p 8080:8080 -itd feisky&#47;nginx:nat &#47;bin&#47;sh<br><br>附docker版本为：20.10.17","like_count":0,"discussions":[{"author":{"id":2052700,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/52/5c/d4a9accb.jpg","nickname":"仄言","note":"","ucode":"D35DD3AF65A0BE","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589039,"discussion_content":"踩坑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664358987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353733,"user_name":"肥low","can_delete":false,"product_type":"c1","uid":1043480,"ip_address":"北京","ucode":"A158AFAAB8C742","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","comment_is_top":false,"comment_ctime":1659706151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659706151","product_id":100020901,"comment_content":"这个基础知识应该去哪里学习才能不走弯路呢……","like_count":0},{"had_liked":false,"id":329118,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1641133175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641133175","product_id":100020901,"comment_content":"<br># 连接跟踪对象大小为376，链表项大小为16<br>nf_conntrack_max*连接跟踪对象大小+nf_conntrack_buckets*链表项大小 <br>= 1000*376+65536*16 B<br>= 1.4 MB<br><br>在这样的设置下，每一个bucket 所对应的list 大小是 1000&#47;65536 ? 那就是不到1,  意思是大部门情况都不需要单向链表遍历了吗？","like_count":0},{"had_liked":false,"id":324818,"user_name":"Issac慜","can_delete":false,"product_type":"c1","uid":1793361,"ip_address":"","ucode":"690B69FC1C0BB2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/5d/51/87fc7ef9.jpg","comment_is_top":false,"comment_ctime":1638663140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638663140","product_id":100020901,"comment_content":"在测试系统的并发和新建时，出现过指标上不去的问题。最终就是发现最大连接跟踪数设置的比较小，导致测试不通过","like_count":1},{"had_liked":false,"id":311711,"user_name":"小刚","can_delete":false,"product_type":"c1","uid":1018189,"ip_address":"","ucode":"8B30EEF1A194FB","user_header":"","comment_is_top":false,"comment_ctime":1631420305,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1631420305","product_id":100020901,"comment_content":"这篇文章仔细看了几遍，也操作了文中的实际案例。期间遇到的问题及解决方法顺便记录一下：<br><br>1.带NAT的docker启动不起来，docker logs 提示权限不足，修改Dockerfile，进入docker发现实际是 &#47;proc&#47;sys&#47;net&#47;netfilter&#47;nf_conntrack_max文件无写权限<br>2.systemtap按文中步骤安装后，执行脚本报符号找不到，尝试从源码安装仍不可用<br><br>我用的ubuntu版本为最新下载的18.04.5，原因为ubuntu18.04.5的内核版本(5.4)过高导致的兼容性问题，安装18.04.1(内核4.15.0)即可解决这两问题，其中systemtap问题要注意下systemtap和内核版本兼容。","like_count":1,"discussions":[{"author":{"id":1970516,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLK4NPyaFDl4rzrd4A9z42tQDibFLdCicbrAdyUa5P2B5u8UCUBenpHX7VgUCibvHvhpza4icMBKVnhmA/132","nickname":"学无止境","note":"","ucode":"2C28E8E54DAB4E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415294,"discussion_content":"哪有dockerfile???","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637048859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262903,"user_name":"大大","can_delete":false,"product_type":"c1","uid":1340730,"ip_address":"","ucode":"3A3DC9AC382651","user_header":"https://static001.geekbang.org/account/avatar/00/14/75/3a/a7596c06.jpg","comment_is_top":false,"comment_ctime":1605877270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605877270","product_id":100020901,"comment_content":"不知道老师现在还能回答问题么，我们线上出现一个问题，内核比较新5.4，ipvs模式下，只有一台物理机上出现问题，pod内通过service访问服务，当后端的pod在本机时百分之百超时失败，经抓包发现svc后面的pod返回tcp三次握手的第二个包时原ip没有改成service  ipvs 导致client  直接reset","like_count":0},{"had_liked":false,"id":211087,"user_name":"欧雄虎(Badguy）","can_delete":false,"product_type":"c1","uid":1573307,"ip_address":"","ucode":"D72B1CC455AA56","user_header":"https://static001.geekbang.org/account/avatar/00/18/01/bb/7d15d44a.jpg","comment_is_top":false,"comment_ctime":1587893853,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587893853","product_id":100020901,"comment_content":"老师我那个脚本不能执行成功，辛苦帮看下，自己百度没解决<br>root@VM-0-5-ubuntu:~# stap --all-modules dropwatch.stp<br>semantic error: while resolving probe point: identifier &#39;kernel&#39; at dropwatch.stp:19:7<br>        source: probe kernel.trace(&quot;kfree_skb&quot;) { locations[$location] &lt;&lt;&lt; 1 }<br>                      ^<br><br>semantic error: no match (similar tracepoints: map, kfree, rdpmc, unmap, read_msr)<br><br>Pass 2: analysis failed.  [man error::pass2]<br>Tip: &#47;usr&#47;share&#47;doc&#47;systemtap&#47;README.Debian should help you get started.<br>root@VM-0-5-ubuntu:~# uname -r<br>4.15.0-54-generic<br>","like_count":0},{"had_liked":false,"id":196086,"user_name":"Hills录","can_delete":false,"product_type":"c1","uid":1000004,"ip_address":"","ucode":"779020947ACABA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/44/d3d67640.jpg","comment_is_top":false,"comment_ctime":1585234398,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585234398","product_id":100020901,"comment_content":"这篇看的太爽了，期待自己早日能够如此这般～","like_count":0},{"had_liked":false,"id":190498,"user_name":"Richard","can_delete":false,"product_type":"c1","uid":1316758,"ip_address":"","ucode":"893F958B9DD161","user_header":"https://static001.geekbang.org/account/avatar/00/14/17/96/846fc11b.jpg","comment_is_top":false,"comment_ctime":1584665051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584665051","product_id":100020901,"comment_content":"这个例子是描述Linux使用nat功能遇到的性能问题，一般情况下我们都是在路由器或者防火墙中使用nat，这种情况下会不会遇到nat的性能问题？如果有那么有没有相应的排查方式？","like_count":0},{"had_liked":false,"id":161655,"user_name":"Geek_1386e9","can_delete":false,"product_type":"c1","uid":1584198,"ip_address":"","ucode":"DCD2234365F6C7","user_header":"","comment_is_top":false,"comment_ctime":1576287651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576287651","product_id":100020901,"comment_content":"老师，有个snat问题请教下，我们使用了华为云的snat网关，我理解snat网关代理内网主机访问公网是作为客户端访问公网的，那么最大的连接数应该受到端口号65535的限制，为什么在管理后台可以查到snat的连接数会超过65535呢，想不明白，烦请抽空解答下","like_count":0},{"had_liked":false,"id":141643,"user_name":"辉晖","can_delete":false,"product_type":"c1","uid":1574062,"ip_address":"","ucode":"E5EC033EE4952B","user_header":"https://static001.geekbang.org/account/avatar/00/18/04/ae/0118c132.jpg","comment_is_top":false,"comment_ctime":1571206361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571206361","product_id":100020901,"comment_content":"这边安装实验使用ab压测，没有大量nf_hook_slow丢包<br>29384 packets dropped at tcp_rcv_state_process<br>22287 packets dropped at sk_stream_kill_queues<br>12686 packets dropped at tcp_v4_rcv<br>6668 packets dropped at tcp_v4_do_rcv<br>8 packets dropped at unix_stream_connect<br>1 packets dropped at nf_hook_slow<br>1 packets dropped at unix_release_sock","like_count":0},{"had_liked":false,"id":134687,"user_name":"刘鼎","can_delete":false,"product_type":"c1","uid":1104094,"ip_address":"","ucode":"B534B9394A56F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/de/8f40357d.jpg","comment_is_top":false,"comment_ctime":1568895456,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568895456","product_id":100020901,"comment_content":"# 连接跟踪对象大小为 376，链表项大小为 16<br>nf_conntrack_max* 连接跟踪对象大小 +nf_conntrack_buckets* 链表项大小 <br>= 1000*376+65536*16 B<br>= 1.4 MB<br><br>这个计算，应该是假设每个链表只有一个结点吧？<br>我理解是有65535个链表，假如1000个在一个链表，应该是65535+1000个的结点空间？","like_count":0},{"had_liked":false,"id":119261,"user_name":"tony","can_delete":false,"product_type":"c1","uid":1051042,"ip_address":"","ucode":"C8AB60BD90327B","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/a2/40f83a42.jpg","comment_is_top":false,"comment_ctime":1564545242,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564545242","product_id":100020901,"comment_content":"root@ub1805:~# apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F2EDC64DC5AEE1F6B9C621F0C8CAB6595FDFF622<br>Executing: &#47;tmp&#47;apt-key-gpghome.kvfiZkEsRG&#47;gpg.1.sh --keyserver keyserver.ubuntu.com --recv-keys F2EDC64DC5AEE1F6B9C621F0C8CAB6595FDFF622<br>gpg: keyserver receive failed: Invalid argument<br>root@ub1805:~# stap-prep<br>You need package linux-image-4.15.0-52-generic-dbgsym but it does not seem to be available<br> Ubuntu -dbgsym packages are typically in a separate repository<br> Follow https:&#47;&#47;wiki.ubuntu.com&#47;DebuggingProgramCrash to add this repository<br>root@ub1805:~# apt-get install linux-image-`uname -r`-dbgsym<br>Reading package lists... Done<br>Building dependency tree       <br>Reading state information... Done<br>E: Unable to locate package linux-image-4.15.0-52-generic-dbgsym<br>E: Couldn&#39;t find any package by glob &#39;linux-image-4.15.0-52-generic-dbgsym&#39;<br>E: Couldn&#39;t find any package by regex &#39;linux-image-4.15.0-52-generic-dbgsym&#39;<br>好像无法安装","like_count":0},{"had_liked":false,"id":110057,"user_name":"bigzuo","can_delete":false,"product_type":"c1","uid":1224554,"ip_address":"","ucode":"448C258D31A8A6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/RQdib68D7dsoFlYXOweiaPqLrcyn2jD6DCGnz8nc2VFmhmX0bpGTeSrVM5M9Qs7ibIInAmt5MeLcpcNja5YjyZCIg/132","comment_is_top":false,"comment_ctime":1562162345,"is_pvip":false,"replies":[{"id":"40092","content":"正好赶紧去补补😊","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1562249197,"ip_address":"","comment_id":110057,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562162345","product_id":100020901,"comment_content":"不太熟悉linux 网络底层超过，这节课看的很费力","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456701,"discussion_content":"正好赶紧去补补😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562249197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101943,"user_name":"Goal","can_delete":false,"product_type":"c1","uid":1307012,"ip_address":"","ucode":"C337CD4C7E07B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/84/7d21bd9e.jpg","comment_is_top":false,"comment_ctime":1560065051,"is_pvip":false,"replies":[{"id":"37095","content":"可以只调整一个，不过要记得这两个参数一起决定了连接跟踪表的结构，这是一个哈希表，两者相除表示冲突的程度。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1560260294,"ip_address":"","comment_id":101943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560065051","product_id":100020901,"comment_content":"nf_conntrack_buckets 和 nf_conntrack_max  从文中的描述没有搞清楚，<br>我们只是调整了 nf_conntrack_max（最大连接跟踪数），那么，这个连接是记录在 nf_conntrack_buckets（连接跟踪表）中的吗？，那是否意味着，调整max的同时，也得调整buckets表的大小？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453182,"discussion_content":"可以只调整一个，不过要记得这两个参数一起决定了连接跟踪表的结构，这是一个哈希表，两者相除表示冲突的程度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560260294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98159,"user_name":"manatee","can_delete":false,"product_type":"c1","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1558922561,"is_pvip":false,"replies":[{"id":"35924","content":"谢谢指出","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1559429243,"ip_address":"","comment_id":98159,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558922561","product_id":100020901,"comment_content":"另外安装centos 安装systemtap那边有个小小的笔误，最后那个stab-prep 应该是stap-prep","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451583,"discussion_content":"谢谢指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559429243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98149,"user_name":"manatee","can_delete":false,"product_type":"c1","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1558921164,"is_pvip":false,"replies":[{"id":"35925","content":"嗯嗯 不同版本的选项有可能不一样，所以我们一直强调要查man","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1559429296,"ip_address":"","comment_id":98149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558921164","product_id":100020901,"comment_content":"讲个不是很重要的点，ab命令在centos中没有-s参数","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451578,"discussion_content":"嗯嗯 不同版本的选项有可能不一样，所以我们一直强调要查man","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559429296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79347,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1553440908,"is_pvip":false,"replies":[{"id":"29341","content":"可能是debuginfo跟内核版本不一致","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553698804,"ip_address":"","comment_id":79347,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1553440908","product_id":100020901,"comment_content":"请问这个错误是什么原因导致的呢？<br>root@maxwell-virtual-machine:&#47;usr&#47;bin&#47;env# stap --all-modules dropwatch.stp<br>semantic error: while resolving probe point: identifier &#39;kernel&#39; at dropwatch.stp:18:7<br>        source: probe kernel.trace(&quot;kfree_skb&quot;) { locations[$location] &lt;&lt;&lt; 1 }<br>                      ^<br><br>semantic error: no match<br><br>Pass 2: analysis failed.  [man error::pass2]<br>Tip: &#47;usr&#47;share&#47;doc&#47;systemtap&#47;README.Debian should help you get started.<br>","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444463,"discussion_content":"可能是debuginfo跟内核版本不一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553698804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169422,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d8/0e/1bf7f57a.jpg","nickname":"🎉晶晶🎉😄","note":"","ucode":"76B608C42E06A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531074,"discussion_content":"[root@localhost ~]# uname -a\nLinux localhost.localdomain 4.18.0-348.el8.x86_64 #1 SMP Tue Oct 19 15:14:17 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n[root@localhost ~]#  rpm -qa|grep kernel\nkernel-devel-4.18.0-348.el8.x86_64\nkernel-4.18.0-348.el8.x86_64\nkernel-tools-4.18.0-348.el8.x86_64\nkernel-tools-libs-4.18.0-348.el8.x86_64\nkernel-core-4.18.0-348.el8.x86_64\nkernel-headers-4.18.0-348.el8.x86_64\nkernel-debuginfo-common-x86_64-4.18.0-348.el8.x86_64\nkernel-debuginfo-4.18.0-348.el8.x86_64\nkernel-modules-4.18.0-348.el8.x86_64\n\n\ncentos8下，检查了内核版本一样的，还是有这个问题：\n[root@localhost ~]# stap --all-modules dropwatch.stp\nsemantic error: while resolving probe point: identifier &#39;kernel&#39; at dropwatch.stp:19:7\n        source: probe kernel.trace(&#34;kfree_skb&#34;) { locations[$location] &lt;&lt;&lt; 1 }\n                      ^\n\nsemantic error: no match (similar tracepoints: map, kfree, xrun, reg_rr, reg_wr)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637221090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71326,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1551320986,"is_pvip":false,"replies":[{"id":"25723","content":"😊","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551400586,"ip_address":"","comment_id":71326,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551320986","product_id":100020901,"comment_content":"讲的不错，让我懂了追踪过程，和我最想知道的东西","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441109,"discussion_content":"😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551400586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71249,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1551313171,"is_pvip":false,"replies":[{"id":"25720","content":"嗯 内核数据结构的大小","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551400037,"ip_address":"","comment_id":71249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551313171","product_id":100020901,"comment_content":"打卡day44<br>很少用nat，没有发言权😂<br>不过对于lvs的nat模式，之后如果用到，可以用这里的contrack命令分析分析具体状态<br>然后计算链表占用内存大小的，链接对象376和链表大小16是固定数值？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441068,"discussion_content":"嗯 内核数据结构的大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551400037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71153,"user_name":"noma","can_delete":false,"product_type":"c1","uid":1334774,"ip_address":"","ucode":"ADB9D589B9A798","user_header":"","comment_is_top":false,"comment_ctime":1551274493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551274493","product_id":100020901,"comment_content":"systemtap 这个使用姿势好高级！","like_count":1}]}