{"id":296574,"title":"41 | OperatorState介绍与使用","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Flink\">https://gitee.com/geektime-geekbang/geektime-Flink</a></p>","comments":[{"had_liked":false,"id":253591,"user_name":"写点啥呢","can_delete":false,"product_type":"c3","uid":1065272,"ip_address":"","ucode":"C19032CF1C41BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/38/4f89095b.jpg","comment_is_top":false,"comment_ctime":1602808815,"is_pvip":false,"replies":[{"id":93255,"content":"后面专门讲解了BroadcastState","user_name":"作者回复","user_name_real":"张利兵","uid":1119779,"ctime":1603529661,"ip_address":"","comment_id":253591,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"请问老师，UnionListState和BroadcastState从图上看都是会把状态复制到每个task一份，是不是它们两个在功能上是不是有重叠呢？","like_count":0,"discussions":[{"author":{"id":1119779,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/23/99c7ede5.jpg","nickname":"张利兵","note":"","ucode":"DBAE17970AB143","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507115,"discussion_content":"后面专门讲解了BroadcastState","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603529661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287816,"user_name":"zj","can_delete":false,"product_type":"c3","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1618157068,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"为什么keyedstate不需要支持重新分布","like_count":1,"discussions":[{"author":{"id":2068627,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/90/93/5e94be87.jpg","nickname":"钝感","note":"","ucode":"50FE1DD4EAEB78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399186,"discussion_content":"就是已经按key分好了，不需要再分了，也不能分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632918032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2068627,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/90/93/5e94be87.jpg","nickname":"钝感","note":"","ucode":"50FE1DD4EAEB78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399183,"discussion_content":"我认为：KeyedState的并行度和Key的个数相关，状态又维护在相应的key中，并不会被重新分配。好似井水不犯河水","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632917892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282544,"user_name":"Allan","can_delete":false,"product_type":"c3","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1615295400,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"保持状态，需要我们实现checkpointfunction算子，去实现快照保持，初始化，从而可以恢复。","like_count":1},{"had_liked":false,"id":334666,"user_name":"福","can_delete":false,"product_type":"c3","uid":2455712,"ip_address":"","ucode":"F2FC7AF5D433C6","user_header":"https://static001.geekbang.org/account/avatar/00/25/78/a0/7a248ddc.jpg","comment_is_top":false,"comment_ctime":1645064579,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"张老师，不是 说operator stage 只有3种类型嘛，广播，liststage，uninliststage,这3种，为什么这个教程中，有个ReducingStage 这种类型","like_count":0},{"had_liked":false,"id":329483,"user_name":"小进","can_delete":false,"product_type":"c3","uid":2162785,"ip_address":"","ucode":"56CFE04797B012","user_header":"https://static001.geekbang.org/account/avatar/00/21/00/61/cc0b88d0.jpg","comment_is_top":false,"comment_ctime":1641365793,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"老师，请教一下，对于案例中描述的Buffering sink，我想用这种方式实现数据批量写入数据库，但是存在的问题是如果最新的一批数据没有到达threshold阈值，后续又没有新数据到来，那这样的话这批数据会永远被留在状态里，我考虑过增加计时器定时触发，但是定时器的触发又不能和threshold阈值触发放在同一个方法里，对于这个问题有什么好的解决办法嚒","like_count":0,"discussions":[{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634883,"discussion_content":"我的做法：通过继承RichSinkFunction实现自定义sink，在open方法中定义一个scheduleWithFixedDelay，来定时写入下游数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704178597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}