{"id":13310,"title":"21 | 移动测试神器：带你玩转Appium","content":"<p>在上一篇文章中，我介绍了Web App、Native App和Hybrid App三种不同类型的移动应用以及对应的测试设计方法，也介绍了移动应用所特有的专项测试知识。</p>\n<p>今天，我就以移动应用的自动化测试为主题，介绍目前主流的移动应用自动化测试框架Appium。Appium 是一个开源的自动化测试框架，支持iOS和Android上Web App、Native App和Hybrid App的自动化测试。</p>\n<p>由于基于Appium的移动应用环境搭建相对复杂，虽然网上也有不少教程，但是知识点都比较零碎，而且大多都是基于早期版本的示例，所以我会使用最新版本的Appium Desktop 1.6.2和Appium Server 1.8.1来展开今天的内容：</p>\n<ul>\n<li>首先，我会展示如何在Mac环境下一步一步地搭建Appium测试环境；</li>\n<li>接下来，我以iOS为例，实际开发两个测试用例，一个是Native App的测试用例，另一个是Web App的测试用例（因为Hybird App的测试用例其实是类似的，Native App的壳，Web App的内容，所以就不再单独举例子了）；</li>\n<li>然后，我会在iOS的模拟器上实际执行这两个测试用例（之所以选择iOS模拟器，而不用iOS真机做例子，是因为iOS真机的测试需要用到Apple开发者账号，还需要对被测应用进行签名等，会在环境搭建过程中引入很多额外步骤，而这些步骤对于讲解Appium并没有直接的关系）；</li>\n<li>最后，当你已经通过实际使用对Appium形成感性认识后，我再来简单介绍一下Appium的内部原理，让你做到知其然知其所以然。</li>\n</ul><!-- [[[read_end]]] -->\n<h2>移动应用的自动化测试需求</h2>\n<p>在开始设计测试用例前，我们首先需要明确要开发的这两个自动化测试用例的具体测试需求。</p>\n<ol>\n<li>\n<p>Native App的测试用例，被测App我选用了Appium官方的示例App，被测App的源代码可以通过“<a href=\"https://github.com/appium/ios-test-app%E2%80%9D\">https://github.com/appium/ios-test-app”</a> 下载，然后在Xcode中编译打包成TestApp.app。<br />\n具体的测试需求是输入两个数字，然后点击“Compute Sum”验证两个数字相加后的结果是否正确。</p>\n</li>\n<li>\n<p>Web App的测试用例，具体需求是在iPhone上打开Safari浏览器，访问Appium的官方主页“<a href=\"http://appium.io\">http://appium.io</a>”，然后验证主页的标题是否是“Appium: Mobile App Automation Made Awesome”。</p>\n</li>\n</ol>\n<p><img src=\"https://static001.geekbang.org/resource/image/39/26/391e5c3efac446b7cfc76fc1620cb626.png?wh=640*658\" alt=\"\" /></p>\n<center>图1  Native App和Web App的GUI界面示例</center>\n<p>接下来，我将从最初的环境搭建开始，和你来一起开发iOS上的Native App和Web App的测试用例。首先我们看一下iOS的环境搭建，如果你之前没有接触过这部分内容，你可以跟着我的步骤一步一步来做；而如果你已经比较熟悉Xcode的话，可以跳过这部分内容，直接从“Appium环境搭建”部分看起。</p>\n<h2>iOS环境搭建</h2>\n<p>在正式搭建Appium环境前，我们先来搭建iOS开发环境：</p>\n<ul>\n<li>首先，下载安装Xcode；</li>\n<li>然后，在Xcode中下载iOS的模拟器；</li>\n<li>接着，使用Xcode编译打包被测试App；</li>\n<li>最后，在iOS的模拟器中尝试手工执行这两个测试用例。</li>\n</ul>\n<p>在iOS模拟器中，手动执行测试用例的具体操作步骤如下：</p>\n<ol>\n<li>\n<p>启动Xcode，导入ios-test-app下的TestApp.xcodeproj项目。</p>\n</li>\n<li>\n<p>在Xcode中，打开“Preferences”中的“Components”，完成iOS 10.0 Simulator的下载。</p>\n</li>\n<li>\n<p>在Xcode的“General”页面，将TestApp的“Deployment Target”设置为10.0，并且将“Devices”设置为“iPhone”，如图2所示。</p>\n</li>\n</ol>\n<p><img src=\"https://static001.geekbang.org/resource/image/fa/83/faad103928afd3011e0c273ce3e22683.png?wh=812*474\" alt=\"\" /></p>\n<center>图2 TestApp的General配置</center>\n<ol start=\"4\">\n<li>\n<p>在Xcode中编译运行TestApp，之后系统会自动启动iPhone模拟器，自动完成TestApp的安装，并在iPhone模拟器中自动启动TestApp。</p>\n</li>\n<li>\n<p>在TestApp中手动执行自定义的加法测试用例。</p>\n</li>\n<li>\n<p>退出TestApp，然后打开Safari浏览器，在Safari中执行访问Appium官方主页的测试用例。</p>\n</li>\n</ol>\n<p>至此，你已经搭建好了iOS开发环境，并且成功编译打包了TestApp。接下来，我们再一起来搭建Appium测试环境，并尝试在Appium中开发上述的两个测试用例。</p>\n<h2>Appium测试环境搭建</h2>\n<p>通过Appium的官方网站下载并安装最新版本的Appium，截止本文写作的时间，最新版本是Appium-1.6.2.dmg。</p>\n<p>需要注意的是，早期版本和网上很多教程都建议用命令行的形式启动Appium Server，但在这里我是想强调的是，你完全可以通过界面启动（在Launchpad中找到Appium的图标，点击即可启动），而且新版本的Appium也推荐这个启动方式。通过界面启动，是目前最简单直接的方式。</p>\n<p>然后，你需要用命令行“npm install -g appium-doctor”安装Appium的环境诊断工具appium-doctor，用于检查Appium所依赖的相关环境变量以及其他安装包是否都已经配置好了。如果还没有，就需要逐个安装，并根据appium-doctor的提示配置环境变量。</p>\n<p>这里，Appium最主要的依赖项主要有：Java、Node.js、Xcode、Carthage、Android SDK、adb等。如果你所有的环境依赖都正常配置的话，你就会看到appium-doctor返回这样一个截图，如图3所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/3b/a8/3b8915195cade244fe094a37a1a295a8.png?wh=1506*622\" alt=\"\" /></p>\n<center>图3 正常配置环境依赖后，appium-doctor返回的截图</center>\n<p>按照上面的步骤，配置好Appium的环境依赖后，就可以继续启动Appium Server了。</p>\n<h2>Appium Inspector的使用</h2>\n<p>为了后续测试用例的顺利执行，我们可以先来熟悉一下Appium Inspector的使用。Appium Inspector主要是用来协助对界面元素进行定位的工具。</p>\n<p>首先，我们来看看如何使用Appium Inspector启动iPhone的模拟器，并在模拟器上运行TestApp，以及如何通过Inspector定位TestApp界面上的元素（了解元素的定位是后续开发自动化脚本的基础）。具体的操作过程如下。</p>\n<ol>\n<li>通过Appium Server的“Start Inspector Session”按钮，进入Session配置界面。</li>\n</ol>\n<p><img src=\"https://static001.geekbang.org/resource/image/5a/b9/5a4a49e29f98057e75a7f18dedaac5b9.png?wh=1448*398\" alt=\"\" /></p>\n<center>图4 点击“Start Inspector Session”按钮打开Session配置界面</center>\n<ol start=\"2\">\n<li>在Session配置界面完成必要参数的配置。这里你需要根据选用的移动设备操作系统、模拟器/真机等具体情况来完成参数配置工作。需要配置的参数主要包括：platformName、platformVersion、DeviceName、automationName和app。<br />\n其中，automationName，指自动化测试框架的名称，这里采用了XCUITest；app指被测Native App的安装包路径，这里使用之前Xcode打包生成的TestApp.app，这样启动模拟器时，就会自动把TestApp.app安装到模拟器中。<br />\n其他参数的配置非常简单，我就不再一一展开了。</li>\n</ol>\n<p><img src=\"https://static001.geekbang.org/resource/image/b4/79/b4fbfef46aa425e1c2b1c51c6811b179.png?wh=1920*1123\" alt=\"\" /></p>\n<center>图5 Session配置界面</center>\n<ol start=\"3\">\n<li>完成配置后，点击Session界面的“Start Session”按钮，启动iPhone模拟器，并在iPhone模拟器中启动TestApp，同时还会打开Inspector窗口。如图6所示。</li>\n</ol>\n<p><img src=\"https://static001.geekbang.org/resource/image/cd/d5/cd95332b27674b7986c183b967c8a9d5.png?wh=1920*978\" alt=\"\" /></p>\n<center>图6 启动Session后的Inspector窗口</center>\n<ol start=\"4\">\n<li>在Inspector窗口，我们可以利用“Select Elements”功能，通过点击元素显示Native App上的元素定位信息。如图7所示。</li>\n</ol>\n<p><img src=\"https://static001.geekbang.org/resource/image/31/9a/31ed3e4326ae3f3494b78b49c9f6bd9a.png?wh=1920*1011\" alt=\"\" /></p>\n<center>图7 “Select Elements”功能示例</center>\n<ol start=\"5\">\n<li>在Inspector窗口，可以通过“Recording”功能生成不同语言的自动化脚本。比如在启用了“Recording”功能后，点击“Compute Sum”按钮，就会生成如图8所示的自动化脚本片段。</li>\n</ol>\n<p><img src=\"https://static001.geekbang.org/resource/image/b2/5d/b28a1e0f1d8c9d571c675b2062ba455d.png?wh=1920*1009\" alt=\"\" /></p>\n<center>图8 “Recording”功能示例</center>\n<p>了解了如何通过Inspector获取元素定位信息的方法之后，我们就来正式开发基于Appium的第一个Web App和第一个Native App的测试用例。</p>\n<h2>基于Appium开发你的第一个Native App的测试用例</h2>\n<p><strong>第一步，建立一个空的Maven项目，然后在POM文件中加入如图9所示的依赖。</strong></p>\n<p>在这个案例里面，我们会使用TestNG组织测试用例，所以代码的第14行加入了TestNG的依赖。</p>\n<p>第19行的java-client是关键，java-client的作用是利用Java代码将测试用例中的操作步骤发送给Appium Server，然后由Appium Server自动完成这些操作。</p>\n<p>目前Appium支持多种编程语言，每种语言都有自己的client，比如这里使用Java语言，所以引入了java-client；如果你使用Python语言，那么就需要引用python-client。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/09/59/0900c83c8262f90c0635626fa990f459.png?wh=825*361\" alt=\"\" /></p>\n<center>图9 POM文件加入TestNG和java-client的依赖</center>\n<p><strong>第二步，创建一个类，并命名为“iOS_NativeApp_DemoTest”，然后按照如图10所示的代码实现这个class。</strong></p>\n<p>注意，这里的代码是真实的可执行Java代码，你可以直接拿去使用。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/32/2e/32022f6b0166fea7498cbbdc0af9a22e.png?wh=919*926\" alt=\"\" /></p>\n<center>图10 Native App测试用例实例</center>\n<ul>\n<li>代码第21行的@BeforeTest，第38行的@AfterTest，以及第44行的@Test，都是利用了TestNG的annotation对函数进行标注。<br />\n标有@Test的函数是真正的测试主体，所有测试相关的步骤都放在这个函数中；<br />\n标有@ BeforeTest的函数会在@Test函数之前执行测试的相关准备工作，图中的代码用这个函数完成了DesiredCapabilities的设置，并用该Capabilities构造了iosdriver；<br />\n标有@ AfterTest的函数在@Test函数执行结束后执行，主要用于环境的清理和收尾，图示的代码用这个函数完成了iosdriver的退出操作。</li>\n<li>代码的第24-33行构造了DesiredCapabilities对象，并对APPIUM_VERSION、PLATFORM_VERSION、PLATFORM_NAME、AUTOMATION_NAME、DEVICE_NAME和APP等参数进行了设置。其中APP的值是被测Native App安装包的绝对路径。</li>\n<li>代码的第46-58行是测试用例的主体部分，主要分为三部分：<br />\n第47-50行通过iosdriver的findElementByAccessibilityId方法定义了页面上的四个元素，分别是输入参数框A、输入参数框B、计算按钮和加法结果显示框。代码中具体的AccessibilityId可以通过Inspector获取。<br />\n第53-55行通过自定义元素的操作执行加法运算。<br />\n第58行通过断言方法assertEquals验证加法运算的结果。</li>\n</ul>\n<p><strong>第三步，为了运行这个TestNG的测试用例，我们需要再添加一个testng.xml文件，</strong> 具体内容如图11所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/ea/0f/eadddd658205bdce9ddfa2488fe6130f.png?wh=1318*336\" alt=\"\" /></p>\n<center>图11 testng.xml文件示例</center>\n<p><strong>第四步，在保证Appium Server已经启动的情况下，就可以运行testng.xml执行测试了。</strong> 测试开始后，首先会自动启动基于iOS 10.0的iPhone 7模拟器，然后依次自动完成WebDriverAgent（WDA）和被测Native App的安装。</p>\n<p>WDA是由Facebook开源的支持iOS自动化的代理工具，其底层通过XCUItest实现自动化。</p>\n<p>接着，就会自动运行被测Native App，并根据@Test函数中定义的步骤完成自动化测试的步骤和验证。</p>\n<p>到此，我们的第一个基于Appium的Native App自动化测试用例就设计完了。</p>\n<h2>基于Appium开发你的第一个Web App的测试用例</h2>\n<p>有了Native App测试用例的设计基础，再来实现一个基于Appium的Web App自动化测试用例就简单得多了。</p>\n<p><strong>第一步，在上述的Maven项目中再创建一个类，并命名为“iOS_WebApp_DemoTest”，然后按照如图12所示的代码实现这个类。</strong></p>\n<p><img src=\"https://static001.geekbang.org/resource/image/91/16/911057393796c62e5d854607299ba216.png?wh=1578*1522\" alt=\"\" /></p>\n<center>图12 Web App测试用例实例</center>\n<p>代码的整体结构和上述Native App测试用例的完全一致，只有一个地方需要特别注意：代码的第29行，由于Web App是基于浏览器的测试，所以这里不需要指定App这个参数，而是直接用BROWSER_NAME指定浏览器的名字即可。</p>\n<p>对于测试用例的主体部分，也就是代码的第45-47行就比较简单了，首先打开Safari浏览器并访问“<a href=\"http://appium.io/\">http://appium.io/</a>”，接着用断言方法assertEquals验证页面的Title是不是“Appium: Mobile App Automation Made Awesome.”。其中，实际页面的Title，可以通过mobiledriver的getTitle方法获得。</p>\n<p><strong>第二步，在testng.xml中添加这个Web App的测试用例，然后我们就可以在Appium Server已经启动的情况下执行这个测试用例了。</strong></p>\n<p>这个测试用例，首先会自动启动基于iOS 10.0的iPhone 7模拟器，然后自动打开Safari浏览器并访问Appium的官方网站。执行完成后的界面如下图13所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/7a/9c/7ada743125c6412e20b0b944b479559c.png?wh=1920*1258\" alt=\"\" /></p>\n<center>图13 测试用例执行完成的界面</center>\n<p>进行到这里，我们基于Appium开发的第一个Web App的自动化测试用例，也就开发完成了。</p>\n<p>经过前面Appium环境搭建，以及两个测试用例的设计，相信你已经对Appium有了一个感性的认识了。那么，Appium的实现原理又是怎样的呢？理解了Appium的使用原理，可以帮助你更好地使用这个工具，设计更加“有的放矢”的测试用例。</p>\n<h2>Appium的实现原理</h2>\n<p>Appium作为目前主流的移动应用自动化测试框架，具有极强的灵活性，主要体现在以下5个方面：</p>\n<ul>\n<li>测试用例的实现支持多种编程语言，比如Java、Ruby、Python等；</li>\n<li>Appium Server支持多平台，既有基于Mac的版本，也有基于Windows的版本；</li>\n<li>支持Web App、Native App和Hybird App三大类移动应用的测试；</li>\n<li>既支持iOS，也支持Android；</li>\n<li>既支持真机，也支持模拟器。</li>\n</ul>\n<p>实际应用中，你可以根据项目情况灵活组合完成移动应用的自动化测试。比如，用Java写iOS上的Native App的测试用例，测试用例跑在Mac平台的iPhone虚拟机上；或者，用Python写Android上的Web App的测试用例，测试用例通过Windows平台跑在Android的真机上。</p>\n<p>这样的组合还有很多很多。那你有没有想过，Appium为什么可以做到如此强大的灵活性呢？这就要从Appium的基本原理讲起了。</p>\n<p>要真正理解Appium的内部原理，你可以把Appium分成三大部分，分别是Appium Client、Appium Server和设备端。这三部分的关系如图14所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/97/ef/97a2e84f7766d8ee38eb3923b4b9d8ef.png?wh=1592*605\" alt=\"\" /></p>\n<center>图14 Appium内部原理</center>\n<p><strong>我们先来看看处于中间位置的Appium Server。</strong></p>\n<p>Appium Server有Mac和Windows版本，也就是说Appium Server可以运行在Mac或者Windows电脑上。本质上，Appium Server是一个 Node.js 应用，接受来自Appium Client的请求，解析后通过WebDriver协议和设备端上的代理打交道。</p>\n<ul>\n<li>如果是iOS，Appium Server会把操作请求发送给WebDriverAgent（简称WDA），然后WDA再基于XCUITest完成iOS模拟器或者真机上的自动化操作；</li>\n<li>如果是Android，Appium Server会把操作请求发送给appium-UIautomator2-server，然后appium-UIautomator2-server再基于UIAutomator V2完成Android模拟器或者真机上的自动化操作。</li>\n</ul>\n<p>Appium Client其实就是测试代码，使用对应语言的Client将基于JSON Wire协议的操作指令发给Appium Server。</p>\n<p>整体来说，Appium的内部原理可以总结为：<strong>Appium属于C/S架构，Appium Client通过多语言支持的第三方库向Appium Server发起请求，基于Node.js的Appium Server会接受Appium Client发来的请求，接着和iOS或者Android平台上的代理工具打交道，代理工具在运行过程中不断接收请求，并根据 WebDriver 协议解析出要执行的操作，最后调用iOS或者Android平台上的原生测试框架完成测试。</strong></p>\n<h2>总结</h2>\n<p>好了，我来总结一下今天的主要的内容：</p>\n<p>目前网络上，Appium工具使用相关的资料都比较零散，为此我以最新版本的Appium Desktop 1.6.2和Appium Server 1.8.1为例，手把手地带你搭建了iOS环境，以及Appium测试环境，并介绍了如何通过Appium Inspector来定位页面元素。</p>\n<p>搭建好了测试环境后，我分别针对Native App和Web App这两类移动应用，基于Appium实现了两个测试用例，这也是我在这个专栏里面，为你实现的第一个移动应用的测试用例。虽然测试需求比较简单，但是你也可以从中体会到移动应用测试用例设计的思想、方法。</p>\n<p>最后，本着知其然知其所以然的原则，我介绍了Appium的实现原理：它属于C/S架构，Appium Client通过第三方库向Appium Server发起请求，Appium Server接受请求，然后和移动平台上的代理工具打交道，代理工具在运行过程中不断接收来自Appium Server的请求，并解析出要执行的操作，最后调用移动平台原生的测试框架完成测试操作。</p>\n<h2>思考题</h2>\n<p>我在这篇文章里面举的例子都是基于iOS的，建议你基于Android分别实现一个Web App和Native App的测试用例。</p>\n<p>如果实现过程中，遇到了问题，或者有一些自己的想法，请给我留言讨论吧。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":20198,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1534306803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40189012467","product_id":100009601,"comment_content":"Appium 作为目前最主流的移动端自动化测试工具，应用的范围应该是相当广泛了，技术上也是相当成熟了，本次讲解的步骤非常详细，可以让初学者轻松上手，赞👍<br><br>欢迎沟通交流，公众号「sylan215」","like_count":9},{"had_liked":false,"id":20206,"user_name":"hi ！girl","can_delete":false,"product_type":"c1","uid":1165892,"ip_address":"","ucode":"0DB69C86E361C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/ca/44/c2d77269.jpg","comment_is_top":false,"comment_ctime":1534308893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23009145373","product_id":100009601,"comment_content":"老师，由于国内手机权限很多，执行appium时，安装的辅助apk不能自动安装完成，想问老师有什么好的想法解决？目前我的做法是：检测设备端是否存在appium相关app，存在，不安装；不存在，安装，所以首次安装都需要手动点击权限，第二次后执行不需要安装，但是部分手机运行时不会执行命令，此时会调起安装appium server的权限框，又该如果解决呢？","like_count":5},{"had_liked":false,"id":20129,"user_name":"emilymeng","can_delete":false,"product_type":"c1","uid":1164285,"ip_address":"","ucode":"CB5155F4D9BC0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c3/fd/f4663263.jpg","comment_is_top":false,"comment_ctime":1534290551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14419192439","product_id":100009601,"comment_content":"老师讲的这节太及时了，刚好可以使用到。","like_count":3},{"had_liked":false,"id":20389,"user_name":"孙丢丢","can_delete":false,"product_type":"c1","uid":1053473,"ip_address":"","ucode":"1DBF2C23F7BECD","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/21/2622c4e9.jpg","comment_is_top":false,"comment_ctime":1534412642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124347234","product_id":100009601,"comment_content":"老师好～<br>Appium1.6.2➕iOS 10.1.1 inspector时定位不到xpath 提示的是：（&#47;&#47;XCUIElementTypeStaticText[@name=“AX error -25205”])[2]. google了一下感觉iOS 11系统可以解决这个问题 不过11系统还有其他的问题 wda的证书要每次都去手动信任一下 就导致跑不起来 陷入了死循环。不确定老师有没有碰到这个问题 期待老师的回复～","like_count":2},{"had_liked":false,"id":20282,"user_name":"叶夏立","can_delete":false,"product_type":"c1","uid":1184057,"ip_address":"","ucode":"0A756C4553D4BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/39/f7dcc2e6.jpg","comment_is_top":false,"comment_ctime":1534346416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5829313712","product_id":100009601,"comment_content":"茹老师很好的给小白们普及了一下appium的基本知识，也让我好好回顾了一下appium😜","like_count":1},{"had_liked":false,"id":360812,"user_name":"Jiminy","can_delete":false,"product_type":"c1","uid":1144906,"ip_address":"广东","ucode":"79527D1DC6636B","user_header":"https://static001.geekbang.org/account/avatar/00/11/78/4a/4f8da65e.jpg","comment_is_top":false,"comment_ctime":1666869912,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1666869912","product_id":100009601,"comment_content":"老师，请问怎么并发同时操作多台设备呢？","like_count":0},{"had_liked":false,"id":234858,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1594813957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594813957","product_id":100009601,"comment_content":"appium内部原理，老师讲得非常好，赞！<br><br>使用文字介绍详细的步骤，真是没有看视频那么容易理解。<br>不过，通过看文档解决问题，也是一项能力，毕竟你遇到的问题不可能都能找到视频教程。","like_count":0},{"had_liked":false,"id":194865,"user_name":"Bella2019jike","can_delete":false,"product_type":"c1","uid":1854737,"ip_address":"","ucode":"E44E16855BABE1","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLOT8FHaH8mQv12qWvXfRCUaHLDpswUDjH8Lz6qo60j3Jw3yIfic4Via4U74Fk2auBYJ9ibOvhictLUzQ/132","comment_is_top":false,"comment_ctime":1585112198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585112198","product_id":100009601,"comment_content":"老师讲的好细，跃跃欲试了，官方文档也不错就是看英文没有老师讲的具体。","like_count":0},{"had_liked":false,"id":190227,"user_name":"oci","can_delete":false,"product_type":"c1","uid":1200077,"ip_address":"","ucode":"091547A9B22E19","user_header":"","comment_is_top":false,"comment_ctime":1584618682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584618682","product_id":100009601,"comment_content":"感谢分享","like_count":0},{"had_liked":false,"id":182403,"user_name":"良人","can_delete":false,"product_type":"c1","uid":1876652,"ip_address":"","ucode":"2908A5CD5AF997","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a2/ac/0c49f628.jpg","comment_is_top":false,"comment_ctime":1582781748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582781748","product_id":100009601,"comment_content":"感觉就是开发啊","like_count":0},{"had_liked":false,"id":131189,"user_name":"Ken","can_delete":false,"product_type":"c1","uid":1102641,"ip_address":"","ucode":"35E2CF86E56F14","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/31/cf7e9aea.jpg","comment_is_top":false,"comment_ctime":1567666522,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567666522","product_id":100009601,"comment_content":"请问一下老师，appnium怎样可以同时进行多台手机跑测试用例呢？","like_count":0,"discussions":[{"author":{"id":1356077,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/2d/661132f3.jpg","nickname":"佚名","note":"","ucode":"A4E35B21AC3C31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32339,"discussion_content":"可以了解一下STF","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571026000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114752,"user_name":"贝贝","can_delete":false,"product_type":"c1","uid":1167094,"ip_address":"","ucode":"D420D1D39D1BAB","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/f6/b4839802.jpg","comment_is_top":false,"comment_ctime":1563377688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563377688","product_id":100009601,"comment_content":"老师，今天遇到一个问题，appium 1.84版本，Xcode9，如果开两个appium的话，wda安装了跑的时候会自动卸载，不能两台iPhone一起跑，是不是我哪里操作不对了啊？应该是支持两个设备一起跑的吧，期待老师解答(^^)","like_count":0},{"had_liked":false,"id":109822,"user_name":"@说了再见","can_delete":false,"product_type":"c1","uid":1202443,"ip_address":"","ucode":"FA8EE493F4553F","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/0b/27420fd7.jpg","comment_is_top":false,"comment_ctime":1562117105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562117105","product_id":100009601,"comment_content":"接触 appium 的时间也有一年左右了，觉得这个工具真的是『大神之作』，这是我阅读专栏的第一篇文章，感觉老师非常贴心，先演示 demo，之后讲解原理，非常适合新入门的小白掌握大体概念，非常棒，谢谢老师。","like_count":0},{"had_liked":false,"id":84614,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1554885917,"is_pvip":false,"replies":[{"id":"31244","content":"哈哈，希望可以成功运行","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1555472281,"ip_address":"","comment_id":84614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554885917","product_id":100009601,"comment_content":"今天看了原理，明天实践操作起来","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446403,"discussion_content":"哈哈，希望可以成功运行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555472281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58499,"user_name":"johnny","can_delete":false,"product_type":"c1","uid":1210226,"ip_address":"","ucode":"54E78B7BBC6AF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/72/8f77ddb0.jpg","comment_is_top":false,"comment_ctime":1547092540,"is_pvip":false,"replies":[{"id":"26063","content":"感谢支持，看到第一个移动app的自动化测试跑起来的感觉一定很棒","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1551502523,"ip_address":"","comment_id":58499,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547092540","product_id":100009601,"comment_content":"按照你说的步骤实现了。<br>第一次接触MAC OS、IDEA开发工具、Appium...<br>点赞。<br>","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436095,"discussion_content":"感谢支持，看到第一个移动app的自动化测试跑起来的感觉一定很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551502523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35486,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1540622868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540622868","product_id":100009601,"comment_content":"1、在VMWare MAC可以搭建这个环境吗？<br>2、MAC也应该支持Python ","like_count":0},{"had_liked":false,"id":34950,"user_name":"wfmedtest","can_delete":false,"product_type":"c1","uid":1263031,"ip_address":"","ucode":"8FBD6E96BEFC3A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIk0cGUy1nvQxxtzwicEO7KfHQZRlGAJeZxsKibqRvDDd8W4uaibOYHycAJzal3oSZqibFJibbhicgUzIGw/132","comment_is_top":false,"comment_ctime":1540367468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540367468","product_id":100009601,"comment_content":"Appium搭建环境能否讲下","like_count":0},{"had_liked":false,"id":23753,"user_name":"✨阿土白白💤","can_delete":false,"product_type":"c1","uid":1163603,"ip_address":"","ucode":"C600934758CD5D","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/53/157c7020.jpg","comment_is_top":false,"comment_ctime":1536632310,"is_pvip":false,"replies":[{"id":"8792","content":"可以考虑不同accessibility id作元素识别","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536794801,"ip_address":"","comment_id":23753,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536632310","product_id":100009601,"comment_content":"老师我想请教一个ios自动化的问题。appium 的inspector通过accessibility id 识别ios元素。有条用例，我想检查下B页面某个元素的text 值是否是A页面传过来的，但该元素的accessibility id就是它的text value。就好比，一个元素是7，去检查它是不是7，好像没有意义呢。请问这种情况该如何处理呢？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423710,"discussion_content":"可以考虑不同accessibility id作元素识别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536794801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20270,"user_name":"浮躁的社会","can_delete":false,"product_type":"c1","uid":1164862,"ip_address":"","ucode":"8BB1F7098AD5B2","user_header":"","comment_is_top":false,"comment_ctime":1534342797,"is_pvip":false,"replies":[{"id":"7216","content":"可以参考官方文档，不过是英文的，但是个人觉得appium的官方文档写得不够友好，尤其是对于初学者。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1534553783,"ip_address":"","comment_id":20270,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534342797","product_id":100009601,"comment_content":"谁有详细的appium使用文档吗？网上找了一下都很零碎，哪位大佬有给分享一下谢谢🙏","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422180,"discussion_content":"可以参考官方文档，不过是英文的，但是个人觉得appium的官方文档写得不够友好，尤其是对于初学者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534553783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20268,"user_name":"浮躁的社会","can_delete":false,"product_type":"c1","uid":1164862,"ip_address":"","ucode":"8BB1F7098AD5B2","user_header":"","comment_is_top":false,"comment_ctime":1534342681,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534342681","product_id":100009601,"comment_content":"网上找了一下并没有详细的appium的相关教程，都很零碎，请问有相关使用教程的文档吗","like_count":0}]}