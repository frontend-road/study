{"id":146454,"title":"10 | 发号器：如何保证分库分表后ID的全局唯一性？","content":"<p>你好，我是唐扬。</p><p>在前面两节课程中，我带你了解了分布式存储两个核心问题：数据冗余和数据分片，以及在传统关系型数据库中是如何解决的。当我们面临高并发的查询数据请求时，可以使用主从读写分离的方式，部署多个从库分摊读压力；当存储的数据量达到瓶颈时，我们可以将数据分片存储在多个节点上，降低单个存储节点的存储压力，此时我们的架构变成了下面这个样子：</p><p><img src=\"https://static001.geekbang.org/resource/image/14/f5/14dc3467723db359347551c24819c3f5.jpg?wh=1142*882\" alt=\"\"></p><p>你可以看到，我们通过分库分表和主从读写分离的方式解决了数据库的扩展性问题，但是在09讲我也提到过，数据库在分库分表之后，我们在使用数据库时存在的许多限制，比方说查询的时候必须带着分区键；一些聚合类的查询（像是count()）性能较差，需要考虑使用计数器等其它的解决方案，其实分库分表还有一个问题我在<a href=\"https://time.geekbang.org/column/article/145480\">09讲</a>中没有提到，就是主键的全局唯一性的问题。本节课，我将带你一起来了解，在分库分表后如何生成全局唯一的数据库主键。</p><p>不过，在探究这个问题之前，你需要对“使用什么字段作为主键”这个问题有所了解，这样才能为我们后续探究如何生成全局唯一的主键做好铺垫。</p><h2>数据库的主键要如何选择？</h2><p>数据库中的每一条记录都需要有一个唯一的标识，依据数据库的第二范式，数据库中每一个表中都需要有一个唯一的主键，其他数据元素和主键一一对应。</p><!-- [[[read_end]]] --><p><strong>那么关于主键的选择就成为一个关键点了，</strong>一般来讲，你有两种选择方式：</p><p>1.使用业务字段作为主键，比如说对于用户表来说，可以使用手机号，email或者身份证号作为主键。</p><p>2.使用生成的唯一ID作为主键。</p><p>不过对于大部分场景来说，第一种选择并不适用，比如像评论表你就很难找到一个业务字段作为主键，因为在评论表中，你很难找到一个字段唯一标识一条评论。而对于用户表来说，我们需要考虑的是作为主键的业务字段是否能够唯一标识一个人，一个人可以有多个email和手机号，一旦出现变更email或者手机号的情况，就需要变更所有引用的外键信息，所以使用email或者手机作为主键是不合适的。</p><p>身份证号码确实是用户的唯一标识，但是由于它的隐私属性，并不是一个用户系统的必须属性，你想想，你的系统如果没有要求做实名认证，那么肯定不会要求用户填写身份证号码的。并且已有的身份证号码是会变更的，比如在1999年时身份证号码就从15位变更为18位，但是主键一旦变更，以这个主键为外键的表也都要随之变更，这个工作量是巨大的。</p><p><strong>因此，我更倾向于使用生成的ID作为数据库的主键。</strong>不单单是因为它的唯一性，更是因为一旦生成就不会变更，可以随意引用。</p><p>在单库单表的场景下，我们可以使用数据库的自增字段作为ID，因为这样最简单，对于开发人员来说也是透明的。但是当数据库分库分表后，使用自增字段就无法保证ID的全局唯一性了。</p><p>想象一下，当我们分库分表之后，同一个逻辑表的数据被分布到多个库中，这时如果使用数据库自增字段作为主键，那么只能保证在这个库中是唯一的，无法保证全局的唯一性。那么假如你来设计用户系统的时候，使用自增ID作为用户ID，就可能出现两个用户有两个相同的ID，这是不可接受的，那么你要怎么做呢？我建议你搭建发号器服务来生成全局唯一的ID。</p><h2>基于Snowflake算法搭建发号器</h2><p>从我历年所经历的项目中，我主要使用的是变种的Snowflake算法来生成业务需要的ID的，本讲的重点，也是运用它去解决ID全局唯一性的问题。搞懂这个算法，知道它是怎么实现的，就足够你应用它来设计一套分布式发号器了，不过你可能会说了：“那你提全局唯一性，怎么不提UUID呢？”</p><p>没错，UUID（Universally Unique Identifier，通用唯一标识码）不依赖于任何第三方系统，所以在性能和可用性上都比较好，我一般会使用它生成Request ID来标记单次请求，但是如果用它来作为数据库主键，它会存在以下几点问题。</p><p>首先，生成的ID最好具有单调递增性，也就是有序的，而UUID不具备这个特点。为什么ID要是有序的呢？<strong>因为在系统设计时，ID有可能成为排序的字段。</strong>我给你举个例子。</p><p>比如，你要实现一套评论的系统时，你一般会设计两个表，一张评论表，存储评论的详细信息，其中有ID字段，有评论的内容，还有评论人ID，被评论内容的ID等等，以ID字段作为分区键；另一个是评论列表，存储着内容ID和评论ID的对应关系，以内容ID为分区键。</p><p>我们在获取内容的评论列表时，需要按照时间倒序排列，因为ID是时间上有序的，所以我们就可以按照评论ID的倒序排列。而如果评论ID不是在时间上有序的话，我们就需要在评论列表中再存储一个多余的创建时间的列用作排序，假设内容ID、评论ID和时间都是使用8字节存储，我们就要多出50%的存储空间存储时间字段，造成了存储空间上的浪费。</p><p><strong>另一个原因在于ID有序也会提升数据的写入性能。</strong></p><p>我们知道MySQL InnoDB存储引擎使用B+树存储索引数据，而主键也是一种索引。索引数据在B+树中是有序排列的，就像下面这张图一样，图中2，10，26都是记录的ID，也是索引数据。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/71/83e43a3868c076fccdc633f5ec2b0171.jpg?wh=1142*373\" alt=\"\"></p><p>这时，当插入的下一条记录的ID是递增的时候，比如插入30时，数据库只需要把它追加到后面就好了。但是如果插入的数据是无序的，比如ID是13，那么数据库就要查找13应该插入的位置，再挪动13后面的数据，这就造成了多余的数据移动的开销。</p><p><img src=\"https://static001.geekbang.org/resource/image/34/2a/34b2a05a6fc70730748eaaed12bc9b2a.jpg?wh=1142*434\" alt=\"\"></p><p>我们知道机械磁盘在完成随机的写时，需要先做“寻道”找到要写入的位置，也就是让磁头找到对应的磁道，这个过程是非常耗时的。而顺序写就不需要寻道，会大大提升索引的写入性能。</p><p><strong>UUID不能作为ID的另一个原因是它不具备业务含义，</strong>其实现实世界中使用的ID中都包含有一些有意义的数据，这些数据会出现在ID的固定的位置上。比如说我们使用的身份证的前六位是地区编号；7～14位是身份证持有人的生日；不同城市电话号码的区号是不同的；你从手机号码的前三位就可以看出这个手机号隶属于哪一个运营商。而如果生成的ID可以被反解，那么从反解出来的信息中我们可以对ID来做验证，我们可以从中知道这个ID的生成时间，从哪个机房的发号器中生成的，为哪个业务服务的，对于问题的排查有一定的帮助。</p><p>最后，UUID是由32个16进制数字组成的字符串，如果作为数据库主键使用比较耗费空间。</p><p>你能看到，UUID方案有很大的局限性，也是我不建议你用它的原因，而twitter提出的Snowflake算法完全可以弥补UUID存在的不足，因为它不仅算法简单易实现，也满足ID所需要的全局唯一性，单调递增性，还包含一定的业务上的意义。</p><p>Snowflake的核心思想是将64bit的二进制数字分成若干部分，每一部分都存储有特定含义的数据，比如说时间戳、机器ID、序列号等等，最终生成全局唯一的有序ID。它的标准算法是这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/2d/8d/2dee7e8e227a339f8f3cb6e7b47c0c8d.jpg?wh=1142*304\" alt=\"\"></p><p>从上面这张图中我们可以看到，41位的时间戳大概可以支撑pow(2,41)/1000/60/60/24/365年，约等于69年，对于一个系统是足够了。</p><p>如果你的系统部署在多个机房，那么10位的机器ID可以继续划分为2～3位的IDC标示（可以支撑4个或者8个IDC机房）和7～8位的机器ID（支持128-256台机器）；12位的序列号代表着每个节点每毫秒最多可以生成4096的ID。</p><p>不同公司也会依据自身业务的特点对Snowflake算法做一些改造，比如说减少序列号的位数增加机器ID的位数以支持单IDC更多的机器，也可以在其中加入业务ID字段来区分不同的业务。<strong>比方说我现在使用的发号器的组成规则就是：</strong>1位兼容位恒为0 + 41位时间信息 + 6位IDC信息（支持64个IDC）+ 6位业务信息（支持64个业务）+ 10位自增信息（每毫秒支持1024个号）</p><p>我选择这个组成规则，主要是因为我在单机房只部署一个发号器的节点，并且使用KeepAlive保证可用性。业务信息指的是项目中哪个业务模块使用，比如用户模块生成的ID，内容模块生成的ID，把它加入进来，一是希望不同业务发出来的ID可以不同，二是因为在出现问题时可以反解ID，知道是哪一个业务发出来的ID。</p><p>那么了解了Snowflake算法的原理之后，我们如何把它工程化，来为业务生成全局唯一的ID呢？<strong>\b一般来说我们会有两种算法的实现方式：</strong></p><p><strong>一种是嵌入到业务代码里，也就是分布在业务服务器中。</strong>这种方案的好处是业务代码在使用的时候不需要跨网络调用，性能上会好一些，但是就需要更多的机器ID位数来支持更多的业务服务器。另外，由于业务服务器的数量很多，我们很难保证机器ID的唯一性，所以就需要引入ZooKeeper等分布式一致性组件来保证每次机器重启时都能获得唯一的机器ID。</p><p><strong>另外一个部署方式是作为独立的服务部署，这也就是我们常说的发号器服务。</strong>业务在使用发号器的时候就需要多一次的网络调用，但是内网的调用对于性能的损耗有限，却可以减少机器ID的位数，如果发号器以主备方式部署，同时运行的只有一个发号器，那么机器ID可以省略，这样可以留更多的位数给最后的自增信息位。即使需要机器ID，因为发号器部署实例数有限，那么就可以把机器ID写在发号器的配置文件里，这样可以保证机器ID唯一性，也无需引入第三方组件了。<strong>微博和美图都是使用独立服务的方式来部署发号器的，性能上单实例单CPU可以达到两万每秒。</strong></p><p>Snowflake算法设计得非常简单且巧妙，性能上也足够高效，同时也能够生成具有全局唯一性、单调递增性和有业务含义的ID，但是它也有一些缺点，其中最大的缺点就是它依赖于系统的时间戳，一旦系统时间不准，就有可能生成重复的ID。所以如果我们发现系统时钟不准，就可以让发号器暂时拒绝发号，直到时钟准确为止。</p><p>另外，如果请求发号器的QPS不高，比如说发号器每毫秒只发一个ID，就会造成生成ID的末位永远是1，那么在分库分表时如果使用ID作为分区键就会造成库表分配的不均匀。<strong>这一点，也是我在实际项目中踩过的坑，而解决办法主要有两个：</strong></p><p>1.时间戳不记录毫秒而是记录秒，这样在一个时间区间里可以多发出几个号，避免出现分库分表时数据分配不均。</p><p>2.生成的序列号的起始号可以做一下随机，这一秒是21，下一秒是30，这样就会尽量地均衡了。</p><p>我在开头提到，自己的实际项目中采用的是变种的Snowflake算法，也就是说对Snowflake算法进行了一定的改造，从上面的内容中你可以看出，这些改造：一是要让算法中的ID生成规则符合自己业务的特点；二是为了解决诸如时间回拨等问题。</p><p>其实，大厂除了采取Snowflake算法之外，还会选用一些其他的方案，比如滴滴和美团都有提出基于数据库生成ID的方案。这些方法根植于公司的业务，同样能解决分布式环境下ID全局唯一性的问题。对你而言，可以多角度了解不同的方法，这样能够寻找到更适合自己业务目前场景的解决方案，不过我想说的是，<strong>方案不在多，而在精，方案没有最好，只有最适合，真正弄懂方法背后的原理，并将它落地，才是你最佳的选择。</strong></p><h2>课程小结</h2><p>本节课，我结合自己的项目经历带你了解了如何使用Snowflake算法解决分库分表后数据库ID的全局唯一的问题，在这个问题中，又延伸性地带你了解了生成的ID需要满足单调递增性，以及要具有一定业务含义的特性。当然，我们重点的内容是讲解如何将Snowflake算法落地，以及在落地过程中遇到了哪些坑，带你去解决它。</p><p>Snowflake的算法并不复杂，你在使用的时候可以b不考虑独立部署的问题，先想清楚按照自身的业务场景，需要如何设计Snowflake算法中的每一部分占的二进制位数。比如你的业务会部署几个IDC，应用服务器要部署多少台机器，每秒钟发号个数的要求是多少等等，然后在业务代码中实现一个简单的版本先使用，等到应用服务器数量达到一定规模，再考虑独立部署的问题就可以了。这样可以避免多维护一套发号器服务，减少了运维上的复杂度。</p><h2>一课一思</h2><p>今天的课程中我们了解了分布式发号器的实现原理和生成ID的特性，那么在你的系统中你的ID是如何生成的呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"09 | 数据库优化方案（二）：写入数据量增加时，如何实现分库分表？","id":145480},"right":{"article_title":"11 |   NoSQL：在高并发场景下，数据库和NoSQL如何做到互补？","id":147946}},"comments":[{"had_liked":false,"id":139730,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1570712087,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"658700708375","product_id":100035801,"comment_content":"个人觉得“微信序列号生成器”的方法更简单，因为：<br>Snowflake<br>1. Snowflake算法是基于二进制的，对于像我这样基础不扎实的理解起来还是比较困难。<br>2. Snowflake集群环境下需要保证时钟同步，对运维能力有一定要求；一旦时钟错乱，又刚好是高并发时，会导致大量异常序号。<br>3. 如果公司运维能力有限，不适合用Snowflake。<br>4. 百度开源的UidGenerator（仅支持单机部署）使用Snowflake算法，单机QPS可达600万。项目说明：https:&#47;&#47;github.com&#47;baidu&#47;uid-generator&#47;blob&#47;master&#47;README.zh_cn.md 。<br>5. 美团Leaf（分布式ID生成系统），QPS近5万。项目地址：https:&#47;&#47;tech.meituan.com&#47;2017&#47;04&#47;21&#47;mt-leaf.html 。<br><br>微信序列号生成器<br>文档地址：https:&#47;&#47;www.infoq.cn&#47;article&#47;wechat-serial-number-generator-architecture<br>1. 递增但不连续的数字序列解决方案。<br>2. 设计目标QPS1000万以上。<br>3. 通过在递增过程中使用“步长”将每秒磁盘写入由1000万级降至1万。<br>4. 设计原理相对于Snowflake更通俗易懂。<br>5. 可以使用hash的负载均衡策略组建集群。<br>6. 缺点：需要自己实现集群中机器增减后更新负载均衡策略的逻辑。<br>7. Java版最简单Demo（）：使用spring boot搭建一个web工程，使用Controller调用Service实现数字递增<br>Service类<br>import org.springframework.stereotype.Service;<br><br>import javax.annotation.PostConstruct;<br>import java.util.concurrent.atomic.AtomicLong;<br><br>@Service<br>public class GeneratorService {<br><br>    private AtomicLong id;<br><br>    @PostConstruct<br>    private void init(){<br>        id = new AtomicLong(0);<br>    }<br><br>    public long getId(){<br>        return id.incrementAndGet();<br>    }<br>}<br>单机测试QPS 3万（测试工程、测试脚本在同一机器运行。）<br>硬件信息：CPU 2.7 GHz Intel Core i7 | 内存 16 GB 2133 MHz LPDDR3<br>测试工具：JMeter","like_count":153,"discussions":[{"author":{"id":1259218,"avatar":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","nickname":"发条橙子 。","note":"","ucode":"ED076F4534FFED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56386,"discussion_content":"列举了这么多 .. 却连最基本的二进制都说理解起来困难...","likes_number":21,"is_delete":false,"is_hidden":false,"ctime":1574477581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285277,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9c/9d/de684e88.jpg","nickname":"极致","note":"","ucode":"76D6AB15BD9401","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370614,"discussion_content":"我就问你单机java机器重启了怎么办","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1619485426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1090566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a4/06/f2ad8d79.jpg","nickname":"隼","note":"","ucode":"0D6C905E3CC339","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329309,"discussion_content":"您这段比上边的文章还好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606364557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1090566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a4/06/f2ad8d79.jpg","nickname":"隼","note":"","ucode":"0D6C905E3CC339","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329916,"discussion_content":"谢谢鼓励","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606481485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329309,"ip_address":""},"score":329916,"extra":""}]},{"author":{"id":1051363,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0a/e3/9637bfdb.jpg","nickname":"Ricky Fung","note":"","ucode":"7AEA1F8EC4A088","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36142,"discussion_content":"大部分公司使用的都是基于推特的snowflake算法吧，有见过基于Redis实现发号器的，对运维水平要求可能高一点。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571324419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1051363,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0a/e3/9637bfdb.jpg","nickname":"Ricky Fung","note":"","ucode":"7AEA1F8EC4A088","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36407,"discussion_content":"使用Snowflake算法的公司应该是可以保证服务器时间同步。使用redis做发号器要考虑的问题也很多：1. redis宕机，数据还没持久化到硬盘；2. redis宕机后，发生主从切换，怎么保证序列正常；3.  redis要通过应用程序封装一次，这样会多一次IO操作，如果生成100万个序列，也要访问100万次redis，怎么优化？\n总结：\n1. 高并发场景下可以借助redis生成序列，但不适合依赖redis的自增操作实现序列递增；\n2.  需要快速实现发号器功能，能容忍序列重复，可以直接使用redis实现，因为简单。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1571373359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":36142,"ip_address":""},"score":36407,"extra":""}]},{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582307,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659359864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2164123,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oOSgaSW8MFRDx6da1bicY40IVg7hoDNjYlSuTeIg93aB3nuKedhbTa2HQhXpBJmN2w0xU9icvkTDZWMzL5NVicrYw/132","nickname":"伪钞","note":"","ucode":"7087364945A6B0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389751,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629422458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433570,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/e2/c6d9cb4c.jpg","nickname":"钟小强","note":"","ucode":"012B705562FDE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387974,"discussion_content":"各大厂的示例挺好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628518127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364275,"discussion_content":"java Demo最简单版，只有一个递增id，不包含其他信息，难以分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617429103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213078,"avatar":"https://static001.geekbang.org/account/avatar/00/12/82/96/aa795685.jpg","nickname":"mghio","note":"","ucode":"74883EDE4FD0DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234689,"discussion_content":"举的例子有点过于简单了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586995211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165027,"discussion_content":"你列举这个id没有业务含义，而且服务重启就会重置，具体方案肯定不是这么简单。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581249928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1670644,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7d/f4/08999596.jpg","nickname":"帥","note":"","ucode":"7A9F4F0E84A6D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159172,"discussion_content":"一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580655629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139431,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1570631606,"is_pvip":false,"replies":[{"id":"53777","content":"可以暂时记录上次发好的时间，然后和这次的时间比较","user_name":"作者回复","comment_id":139431,"uid":"1448977","ip_address":"","utype":1,"ctime":1570665230,"user_name_real":"唐扬"}],"discussion_count":5,"race_medal":0,"score":"78880042934","product_id":100035801,"comment_content":"老师说如果我们发现系统时钟不准，就可以让发号器暂时拒绝发号，直到时钟准确为止。我们的程序本身就是运行在系统中的，如何来判断系统中的时间是否准确呢？","like_count":18,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469938,"discussion_content":"可以暂时记录上次发好的时间，然后和这次的时间比较","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114352,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/f0/fe94061e.jpg","nickname":"假装在养🐷","note":"","ucode":"D0AB9CD03E0D5B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573802,"discussion_content":"那写入程序没有新增的ID，岂不是就不能执行了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653646967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066705,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","nickname":"阿杜","note":"","ucode":"349D3572F5ABE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":91580,"discussion_content":"不应该停止发号吧，还应该继续发号，可以依据上次时间正常的号递增获取新号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576841050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1006864,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/10/0acf7cbc.jpg","nickname":"Ryan-Hou","note":"","ucode":"5B703C1E1596A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1066705,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","nickname":"阿杜","note":"","ucode":"349D3572F5ABE7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":105997,"discussion_content":"可能会出现重复的号。号的唯一性在所有的系统需求里应该是优先级最高的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577504540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":91580,"ip_address":""},"score":105997,"extra":""}]},{"author":{"id":1205627,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/7b/66b9befd.jpg","nickname":"Hwan","note":"","ucode":"A728C6790511BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41404,"discussion_content":"我看好像可以记录上次的时间戳时间，如果当前时间小于上次时间，就可以阻塞住或者拒绝发号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572420592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163989,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1576840935,"is_pvip":false,"replies":[{"id":"63075","content":"应该可行","user_name":"作者回复","comment_id":163989,"uid":"1448977","ip_address":"","utype":1,"ctime":1577242526,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"74591284967","product_id":100035801,"comment_content":"不仅仅是分库分表后的数据库，很多业务场景都需要分布式发号器，使用snowflake是个很好的选择，不过一般都是用的snowflake雪花算法，实现上会有所差异，比如机器位数和序号位数的选取就不同，1+41位时间戳+10机器区间位+12号递增或随机的数字，类似这种。uuid长度过长，也不递增，使用受限。不过snowflake算法有个问题就是服务器时间回拨的问题，就是时间可能不准，这个时候不能停止发号，我觉得可以采取的方式是：每个服务器存储最新的一个maxNewId，起个线程监控服务器时间是否正确，不正确就从maxNewId递增1获取，同事调准服务器时间，直到服务器时间正确。","like_count":17,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478605,"discussion_content":"应该可行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577242526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173517,"user_name":"张珂","can_delete":false,"product_type":"c1","uid":1249512,"ip_address":"","ucode":"E0AFA940BEAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/e8/172b5915.jpg","comment_is_top":false,"comment_ctime":1579587400,"is_pvip":false,"replies":[{"id":"67356","content":"性能在单实例单核可以达到2亿万次每秒<br><br>发号器一般是改的redis","user_name":"作者回复","comment_id":173517,"uid":"1448977","ip_address":"","utype":1,"ctime":1579694667,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"31644358472","product_id":100035801,"comment_content":"老师好，想了解部署一套snowflake，性能怎么样？还有一个问题是，发号器虽然可以保证递增发号，但写入数据库时（假设有两个事务要写同一个表），那对于底层B+树也不一定顺序写入，无法利用磁盘顺序写的性能优化吧？","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482095,"discussion_content":"性能在单实例单核可以达到2亿万次每秒\n\n发号器一般是改的redis","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579694667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139295,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1570605166,"is_pvip":false,"replies":[{"id":"53785","content":"其实很难预估数据量，某一天有活动咋办？不同的起始值也可，只是增加人工成本，增加了库表咋办？忘了设置咋办？","user_name":"作者回复","comment_id":139295,"uid":"1448977","ip_address":"","utype":1,"ctime":1570665595,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"31635376238","product_id":100035801,"comment_content":"但是当数据库分库分表后，使用自增字段就无法保证 ID 的全局唯一性了？<br>1.使用数据库的自增，设置起始值和步长不一样，不是一样可以实现吗？<br>2.预估每天的数据量，预先生成ID存入缓存（比如Redis）里面，然后去取，这种方法也简单？<br>","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469883,"discussion_content":"其实很难预估数据量，某一天有活动咋办？不同的起始值也可，只是增加人工成本，增加了库表咋办？忘了设置咋办？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1154316,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9d/0c/abb7bfe3.jpg","nickname":"飞鸟在途","note":"","ucode":"1F6F21B25F0B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218754,"discussion_content":"实际中高并发业务下，哪有先生成订单id存入缓存的redis也是单点。再说了 业务是连续的，所谓的一天，只不过是我们规定的，实际哪有停歇的业务～","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585698222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1068169,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4c/89/e698c0a9.jpg","nickname":"gerry pang","note":"","ucode":"54BD1D8DE1DBBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282190,"discussion_content":"1.预存号码如果存储的时限是一天，用不了就失效。\n2.redis用集群环境\n3.对于量不够的情况，要是考虑一个监控，比如池子里还剩10w的时候，自动补充一百万，\n这样这个方案会不会好多点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591920761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174899,"user_name":"Lane","can_delete":false,"product_type":"c1","uid":1008257,"ip_address":"","ucode":"F70459D1BBD9F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/81/ad80f427.jpg","comment_is_top":false,"comment_ctime":1580453286,"is_pvip":true,"replies":[{"id":"68360","content":"是的，如果是独立部署的话就可以保证了","user_name":"作者回复","comment_id":174899,"uid":"1448977","ip_address":"","utype":1,"ctime":1580872693,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"23055289766","product_id":100035801,"comment_content":"老师我有疑问：中间的机器ID，同一毫秒内，3号机器先注册了一个用户，1号机器再注册一个用户。这样的话也不是顺序的了。","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482560,"discussion_content":"是的，如果是独立部署的话就可以保证了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580872693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1199091,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4b/f3/8b9df836.jpg","nickname":"jimmy","note":"","ucode":"9B93DCAB317572","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259128,"discussion_content":"独立部署怎么解决有序呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588762818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143670,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1571754097,"is_pvip":false,"replies":[{"id":"55501","content":"会发这么多号吗……","user_name":"作者回复","comment_id":143670,"uid":"1448977","ip_address":"","utype":1,"ctime":1571793000,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"23046590577","product_id":100035801,"comment_content":"老师，序列号占12位，对应序列号最大值4096，如果一毫秒内请求生成唯一键的次数大于此值怎么办呢？我能想到的办法是当生成的序列号达到4096时，延时1毫秒，再生成。实际中，是这样处理吗？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471645,"discussion_content":"会发这么多号吗……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571793000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140358,"user_name":"王肖武","can_delete":false,"product_type":"c1","uid":1282385,"ip_address":"","ucode":"561AF05284EBE2","user_header":"https://static001.geekbang.org/account/avatar/00/13/91/51/234f9a73.jpg","comment_is_top":false,"comment_ctime":1570889153,"is_pvip":false,"replies":[{"id":"54299","content":"首先，服务器的时钟一般是对时的<br>其次，如果是单独部署的发号器，没有机器ID是可以保证单调递增的","user_name":"作者回复","comment_id":140358,"uid":"1448977","ip_address":"","utype":1,"ctime":1570970326,"user_name_real":"唐扬"}],"discussion_count":5,"race_medal":0,"score":"23045725633","product_id":100035801,"comment_content":"snowflake不能保证单调递增吧？首先，服务器的时钟可能有快有慢；其次，同一时刻，机器号大的机器生成的ID总是大于机器号小的机器，但他的请求可能是先到达了数据库。个人观点：主键还是要用数据库的自增id，另外再加个全局唯一的code作为业务主键。","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470357,"discussion_content":"首先，服务器的时钟一般是对时的\n其次，如果是单独部署的发号器，没有机器ID是可以保证单调递增的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570970326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259854,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/4e/f937748b.jpg","nickname":"小小程序猿","note":"","ucode":"DCE81131B24285","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220478,"discussion_content":"那snowflake还是不能保证单调递增？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585882409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312297,"discussion_content":"不能保证单调递增，这个好像是个问题点，我觉得应该说一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602656728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1199091,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4b/f3/8b9df836.jpg","nickname":"jimmy","note":"","ucode":"9B93DCAB317572","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259132,"discussion_content":"独立部署的话，如果没有实例ID怎么处理？总不能一台机器提供服务吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588763138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1138576,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5f/90/711efc88.jpg","nickname":"FuriousEric","note":"","ucode":"0A66DA938976F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1199091,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4b/f3/8b9df836.jpg","nickname":"jimmy","note":"","ucode":"9B93DCAB317572","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361594,"discussion_content":"老师的方案就是主备部署，永远只有单机在工作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616711252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":259132,"ip_address":""},"score":361594,"extra":""}]}]},{"had_liked":false,"id":139171,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1570580064,"is_pvip":false,"replies":[{"id":"53622","content":"容器ID太长了。。。 其实引入zk也还好，对于zk是弱依赖，只是启动的时候拉一下机器ID","user_name":"作者回复","comment_id":139171,"uid":"1448977","ip_address":"","utype":1,"ctime":1570582395,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"23045416544","product_id":100035801,"comment_content":"假设通过容器化来部署发号器，且同时会有多个发号器容器运行，那这个 worker Id 如何生成。容器自身的 id 是一串很长的16进制，无法转换为 worker id 吧？难道也需要引入 zookeeper 吗？有没有其他简单可行的方案？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469828,"discussion_content":"容器ID太长了。。。 其实引入zk也还好，对于zk是弱依赖，只是启动的时候拉一下机器ID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139145,"user_name":"jimmy","can_delete":false,"product_type":"c1","uid":1199091,"ip_address":"","ucode":"9B93DCAB317572","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/f3/8b9df836.jpg","comment_is_top":false,"comment_ctime":1570556789,"is_pvip":false,"replies":[{"id":"53625","content":"容器ID太长了吧，比较占发号器的位数","user_name":"作者回复","comment_id":139145,"uid":"1448977","ip_address":"","utype":1,"ctime":1570582492,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"23045393269","product_id":100035801,"comment_content":"snowflake方案中 现在一般公司都有容器虚拟化，所以每个实例都有自己的实例ID，以此作为唯一ID即可，另外保险起见在服务启动的时候可以向其他启动的服务发送check请求，确保ID全局唯一，这样可以不引入zk，让系统更简单些～","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469812,"discussion_content":"容器ID太长了吧，比较占发号器的位数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139638,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1003104,"ip_address":"","ucode":"E8F0F3B000020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","comment_is_top":false,"comment_ctime":1570695951,"is_pvip":false,"replies":[{"id":"53996","content":"在没到69年的时候增加时间的位数……<br>","user_name":"作者回复","comment_id":139638,"uid":"1448977","ip_address":"","utype":1,"ctime":1570750768,"user_name_real":"唐扬"}],"discussion_count":6,"race_medal":0,"score":"18750565135","product_id":100035801,"comment_content":"标准的snowflake算法最多支持69年，如果项目真的支撑到69年之后，应该怎么处理呢","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470028,"discussion_content":"在没到69年的时候增加时间的位数……\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570750768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076100,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6b/84/d1e6eac9.jpg","nickname":"sun","note":"","ucode":"0358B9288D4018","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33402,"discussion_content":"真的撑到69年后  那时候程序员比我们聪明的多","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1571120797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119149,"avatar":"https://static001.geekbang.org/account/avatar/00/11/13/ad/e09661dc.jpg","nickname":"旅行的猫","note":"","ucode":"1731CB84F0BA33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136722,"discussion_content":"嗯 没猜错的话69年你应该退休了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579159307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081379,"avatar":"https://static001.geekbang.org/account/avatar/00/10/80/23/33555b32.jpg","nickname":"天涯海角","note":"","ucode":"B35E85576982ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43522,"discussion_content":"你这考虑的也太久了吧。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572879630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1744412,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLFzTL7n7a5wmZ7NicjTFGLk2CdM8t0iaUwm6ZHZ6ZaEfvwgTey9LBmPWA5Yq8kK6cGgPVgbgL24Q6Q/132","nickname":"chutianxia","note":"","ucode":"DE575E94EDEE91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577827,"discussion_content":"我都退休了！！ 怕锤子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656379041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114352,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/f0/fe94061e.jpg","nickname":"假装在养🐷","note":"","ucode":"D0AB9CD03E0D5B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573803,"discussion_content":"69年的时候，写代码的人都不在了吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653647123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139271,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1570598637,"is_pvip":false,"replies":[{"id":"53672","content":"👍","user_name":"作者回复","comment_id":139271,"uid":"1448977","ip_address":"","utype":1,"ctime":1570600745,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"18750467821","product_id":100035801,"comment_content":"1.数据库自增的全局唯一键。可以在设计出按一定步进生成id。比如分库为3台，每台的主键id初始值分别为0、1、2自增步进为3。这样也可以唯一。不过数据库作为整个系统的吊车尾。还是别拿它搞事了。<br>2.如果业务没有id带有实时字段的要求，那么可以用预生成备用的方式。客户端服务每次按一定步进来拉取id集合，并缓存到客户端本地内存。如此也能有效率的提升。（哪怕有实时业务段，也可以将非业务的其他部分生成好，到客户端用时再拼接）","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469870,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570600745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32457,"discussion_content":"2.好像是唐扬老师给我提的建议哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571039052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139252,"user_name":"ET go home","can_delete":false,"product_type":"c1","uid":1128795,"ip_address":"","ucode":"8E43C7966300CB","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/5b/2c893396.jpg","comment_is_top":false,"comment_ctime":1570592542,"is_pvip":false,"replies":[{"id":"53666","content":"是的 不过像redis那样单线程处理就好了","user_name":"作者回复","comment_id":139252,"uid":"1448977","ip_address":"","utype":1,"ctime":1570594668,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"18750461726","product_id":100035801,"comment_content":"请问下同一时间位，同一机器，在生成序列号时，是要上锁的吧？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469855,"discussion_content":"是的 不过像redis那样单线程处理就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570594668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183485,"user_name":"停三秒","can_delete":false,"product_type":"c1","uid":1442497,"ip_address":"","ucode":"C9D8F39F24672E","user_header":"https://static001.geekbang.org/account/avatar/00/16/02/c1/80e68043.jpg","comment_is_top":false,"comment_ctime":1583050358,"is_pvip":false,"replies":[{"id":"71088","content":"ID在同一时间是可以重复的，所以每次重启选择一个可用的，或者一台机器用一个固定的就好了","user_name":"作者回复","comment_id":183485,"uid":"1448977","ip_address":"","utype":1,"ctime":1583114813,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14467952246","product_id":100035801,"comment_content":"想知道那个机器ID如何设置，如果节点重启就再分配一个机器ID的话，那10位的机器ID也支撑不了多少次的重启啊","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485697,"discussion_content":"ID在同一时间是可以重复的，所以每次重启选择一个可用的，或者一台机器用一个固定的就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583114813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150756,"user_name":"yuan","can_delete":false,"product_type":"c1","uid":1207302,"ip_address":"","ucode":"EA3D0573478EC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/06/2ac17d5a.jpg","comment_is_top":false,"comment_ctime":1573607212,"is_pvip":false,"replies":[{"id":"57972","content":"标准实现是的","user_name":"作者回复","comment_id":150756,"uid":"1448977","ip_address":"","utype":1,"ctime":1573610777,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"14458509100","product_id":100035801,"comment_content":"为什么snowflake的第一位一定是0？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474263,"discussion_content":"标准实现是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573610777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033053,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/5d/ced9b5c2.jpg","nickname":"Michael Tesla","note":"","ucode":"C627F090293608","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":172439,"discussion_content":"保证生成的id是正整数","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1581778089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285185,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9c/41/65ca105f.jpg","nickname":"简单","note":"","ucode":"90DBD51C1736FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65568,"discussion_content":"难道不是代表了正负？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575013366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018685,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8b/3d/0c3a2fd4.jpg","nickname":"偶尔复活下","note":"","ucode":"18B1D525CD50D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392062,"discussion_content":"正整数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630809268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147094,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1572792220,"is_pvip":false,"replies":[{"id":"56859","content":"这样要对每一个库的offset都要维护，你要是分了1000张表，就要维护1000个offset","user_name":"作者回复","comment_id":147094,"uid":"1448977","ip_address":"","utype":1,"ctime":1572835771,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14457694108","product_id":100035801,"comment_content":"如果单纯为了保证分表之后自增主键唯一，在创建数据表的时候，配合auto_increment_offset和auto_increment_increment不就可以实现吗？（当然我不是说在微服务中不需要取号器）","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473143,"discussion_content":"这样要对每一个库的offset都要维护，你要是分了1000张表，就要维护1000个offset","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572835771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143474,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1571714464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14456616352","product_id":100035801,"comment_content":"学习了，之前面试时被问到如何设计ID生成器，没答好。","like_count":3},{"had_liked":false,"id":143221,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1571651010,"is_pvip":false,"replies":[{"id":"55358","content":"是的，没错","user_name":"作者回复","comment_id":143221,"uid":"1448977","ip_address":"","utype":1,"ctime":1571701336,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"14456552898","product_id":100035801,"comment_content":"老师，有相关的示例代码不？我的理解是每一个毫秒将下41时间戳加1，10位的机器不变，12的序列号先随机生成一个数字，然后再在这个基础上生成这一毫秒所需要的全局id的数量。不知道我理解的对不对。打卡09.","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471429,"discussion_content":"是的，没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571701336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37924,"discussion_content":"感谢老师抽时间回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571701488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140663,"user_name":"朱海昆","can_delete":false,"product_type":"c1","uid":1047293,"ip_address":"","ucode":"73E49C17A0314E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/fd/3a6d013a.jpg","comment_is_top":false,"comment_ctime":1571023692,"is_pvip":true,"replies":[{"id":"54402","content":"我想是通过记录上一次发号的时间戳，如果这次的时间戳比上次的小，就认为是回拨，拒绝发号","user_name":"作者回复","comment_id":140663,"uid":"1448977","ip_address":"","utype":1,"ctime":1571038581,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14455925580","product_id":100035801,"comment_content":"老师在生产上是如何处理时钟回拨的？看材料leaf是基于zookeeper 记录处理的，是不是还有其他方式？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470501,"discussion_content":"我想是通过记录上一次发号的时间戳，如果这次的时间戳比上次的小，就认为是回拨，拒绝发号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571038581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207985,"user_name":"daydaynobug","can_delete":false,"product_type":"c1","uid":1336773,"ip_address":"","ucode":"C6923405EB62BA","user_header":"https://static001.geekbang.org/account/avatar/00/14/65/c5/97003360.jpg","comment_is_top":false,"comment_ctime":1587226991,"is_pvip":false,"replies":[{"id":"78079","content":"额 从1发号还是从0发号随你","user_name":"作者回复","comment_id":207985,"uid":"1448977","ip_address":"","utype":1,"ctime":1587472721,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10177161583","product_id":100035801,"comment_content":"但是如果真的出现每毫秒只发一个号，不应该是末尾永远是0吗","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492306,"discussion_content":"额 从1发号还是从0发号随你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587472721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143676,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1571754991,"is_pvip":false,"replies":[{"id":"55502","content":"可以单线程，比如类似redis的实现","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571793060,"ip_address":"","comment_id":143676,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161689583","product_id":100035801,"comment_content":"老师，如果发号器部在一台机器上，使用多线程，那对于占12位的序号部分，在生成时，要用线程锁吧？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471647,"discussion_content":"可以单线程，比如类似redis的实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571793060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141275,"user_name":"tiny🌾","can_delete":false,"product_type":"c1","uid":1119851,"ip_address":"","ucode":"7A4DE00381D1F3","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/6b/af7c7745.jpg","comment_is_top":false,"comment_ctime":1571134159,"is_pvip":true,"replies":[{"id":"54642","content":"1.我觉得是为之后扩展考虑<br>2. 可以记录上次发号的时间，然后和这次发号时间比对","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571184109,"ip_address":"","comment_id":141275,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10161068751","product_id":100035801,"comment_content":"问2个问题<br>1.为什么第一位要保留不用？<br>2.如何知道时钟不对，让程序自动拒绝了？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470709,"discussion_content":"1.我觉得是为之后扩展考虑\n2. 可以记录上次发号的时间，然后和这次发号时间比对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571184109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1975581,"avatar":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCnhAYmvAsNcYKyNLUJG5iax9BKgXAJzxypEJGRVwhibjZ53S5icgEDibn8uqrqwsKcxzEXfRRUXTdqjA/132","nickname":"岳宜波","note":"","ucode":"5043CA250FDCB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265428,"discussion_content":"第一位不用是因为生成的id要为正数…第一位为1的话就成负数了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589385910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254530,"avatar":"https://static001.geekbang.org/account/avatar/00/13/24/82/b5808a60.jpg","nickname":"李冲","note":"","ucode":"C8C12308B0FDDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37610,"discussion_content":"我还以为是因为符号位的问题，只用63位对于各种语言都没毛病","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571645960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140557,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1570985083,"is_pvip":false,"replies":[{"id":"54328","content":"是的，你可以js调用的时候一次生成多个号，这样避免频繁调用","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571010043,"ip_address":"","comment_id":140557,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160919675","product_id":100035801,"comment_content":"打卡。我们项目遇到一个，是想从浏览器要生成一个全局唯一ID，然后在js处理，最后post到后端记录。现实证明这样做确实有重复，所以，难道我们只能搭建一个序列号生成器服务，每次请求来，或者至少每次JS加载都调用一次，再和上面本地都一起混淆。因为是监控程序，怕序列号生成器影响到前端。","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470439,"discussion_content":"是的，你可以js调用的时候一次生成多个号，这样避免频繁调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571010043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140285,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1570870953,"is_pvip":false,"replies":[{"id":"54303","content":"1. 是的，此时算是发号器故障<br>2. 应该是对时不准<br>3. 时间是不固定的，不过可以通过ntp对时","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570970525,"ip_address":"","comment_id":140285,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160805545","product_id":100035801,"comment_content":"老师好，<br>“如果我们发现系统时钟不准，就可以让发号器暂时拒绝发号，直到时钟准确为止。”<br>1、那不就中断业务了？<br>2、话说时钟回拨是什么怎么回事呀？我看网上说是硬件层面导致的，但是还是不明白具体是怎么导致的。<br>3、如果发生回拨，回拨的时间大概是多少呀？<br>谢谢","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470329,"discussion_content":"1. 是的，此时算是发号器故障\n2. 应该是对时不准\n3. 时间是不固定的，不过可以通过ntp对时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570970525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139783,"user_name":"Keith","can_delete":false,"product_type":"c1","uid":1193337,"ip_address":"","ucode":"B40774090714D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","comment_is_top":false,"comment_ctime":1570723587,"is_pvip":false,"replies":[{"id":"54003","content":"你实现时可以不以1970年为基准时间","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570756508,"ip_address":"","comment_id":139783,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10160658179","product_id":100035801,"comment_content":"关于41位的时间戳的可支撑时间问题, 如果时间戳是从0开始计算则约可以支持69年, 但如果以当前时间开始算, 则可用的只有不到20年了(69-(2019-1970))","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470112,"discussion_content":"你实现时可以不以1970年为基准时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570756508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374168,"discussion_content":"其实41位是时间差值，和基准时间有关系的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621047695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139704,"user_name":"Ankhetsin","can_delete":false,"product_type":"c1","uid":1028469,"ip_address":"","ucode":"3CA233D08D4A72","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b1/75/60a71bbd.jpg","comment_is_top":false,"comment_ctime":1570708934,"is_pvip":false,"replies":[{"id":"53995","content":"uidgenaerator是的，leaf-segment是基于数据库的，leaf-snowflake是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570750587,"ip_address":"","comment_id":139704,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160643526","product_id":100035801,"comment_content":"UidGenerator和leaf-segment是不是推特雪花算法原理？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470067,"discussion_content":"uidgenaerator是的，leaf-segment是基于数据库的，leaf-snowflake是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570750587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139435,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1570632398,"is_pvip":false,"replies":[{"id":"53776","content":"还是挺大的 因为列表数据在存储和缓存的时候只有两列，增加一列，空间会增加50%","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665199,"ip_address":"","comment_id":139435,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160566990","product_id":100035801,"comment_content":"id自增的解释中第一条有点牵强。加一列时间字段带来的空间影响太小了吧？用id标识时间顺序不是一个好设计啊。<br><br>现在对于雪片算法的时钟回拨问题，其实还是有不少解决方案的，比如专门划分出几位，一旦发现回拨就在这几位上顺次加一，没有必要等，等待带来的影响太大。<br><br>最后id偏斜的问题，在分库数量为N的前提下，起始值的随机函数区间范围得是N的倍数才能保证不偏斜（最好就是0到N），这就要求一旦分区数增加，服务还要调整参数","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469941,"discussion_content":"还是挺大的 因为列表数据在存储和缓存的时候只有两列，增加一列，空间会增加50%","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139245,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1570591874,"is_pvip":false,"replies":[{"id":"53679","content":"会出现重号","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570600978,"ip_address":"","comment_id":139245,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10160526466","product_id":100035801,"comment_content":"12 位的序列号代表着每个节点每毫秒最多可以生成 4096个ID，假设我生成到4097个会出现什么情况应该不到9999都可以吧。。","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469852,"discussion_content":"会出现重号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570600978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274117,"avatar":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","nickname":"👽","note":"","ucode":"D313AF941B412D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35474,"discussion_content":"跟9999有什么关系？12位说的是二进制，最大长度是2的12次方个id。\n然后顺便说一下，貌似生成不了4096个，应该是4095个。\n12位最大的二进制 是12个1 = 4095。\n\n然后是业务问题，每毫秒4095个，一秒 4095000，409万个。409万，，，\n这个量对于目前99%的公司来说，应该都够了。这代表着每秒就能有百万级的数据。\n\n要是还不够，，，就只能改策略了。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571283895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206930,"user_name":"姜大大","can_delete":false,"product_type":"c1","uid":1480811,"ip_address":"","ucode":"C2C7FAD30D89BF","user_header":"https://static001.geekbang.org/account/avatar/00/16/98/6b/5b9f6a3c.jpg","comment_is_top":false,"comment_ctime":1586958797,"is_pvip":false,"replies":[{"id":"78091","content":"是你配置在发号器中的呀","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587473230,"ip_address":"","comment_id":206930,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881926093","product_id":100035801,"comment_content":"不同的机房IDC怎么获取？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491954,"discussion_content":"是你配置在发号器中的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587473230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201978,"user_name":"小小程序猿","can_delete":false,"product_type":"c1","uid":1259854,"ip_address":"","ucode":"DCE81131B24285","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/4e/f937748b.jpg","comment_is_top":false,"comment_ctime":1585883975,"is_pvip":false,"replies":[{"id":"75824","content":"单机自增","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586087614,"ip_address":"","comment_id":201978,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880851271","product_id":100035801,"comment_content":"我怎么觉得snowflake就是不自增的呢？大的机器号永远大于小的机器号","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490473,"discussion_content":"单机自增","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586087614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199963,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1182690,"ip_address":"","ucode":"6726EA3EFD2F79","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/e2/68daf201.jpg","comment_is_top":false,"comment_ctime":1585524431,"is_pvip":false,"replies":[{"id":"74854","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585538724,"ip_address":"","comment_id":199963,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880491727","product_id":100035801,"comment_content":"之前代码中只是使用了uuid作为主键，但是像老师说的，不利于使用数据库主键索引，有时间实践一下snowflake算法。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489906,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585538724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190728,"user_name":"kamida","can_delete":false,"product_type":"c1","uid":1904146,"ip_address":"","ucode":"16D7CA59870AC0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jXbwicoDwia7ooDfwBTRyvNYQkefnVwF1CMicMS8FqKfuFAdvVZo2pqc4ic0R9kSdHTIxaE6YyqxwX8BdNGv5PqSIw/132","comment_is_top":false,"comment_ctime":1584687827,"is_pvip":false,"replies":[{"id":"73295","content":"可以用类似redis那样的单线程设计","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584689123,"ip_address":"","comment_id":190728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879655123","product_id":100035801,"comment_content":"老师 我想问一下为什么发号器的性能可以这么好<br>假设我们是单机发号器 在同一毫秒内 那十二位的序列号应该被加锁吧 这样的话 同时有两个请求 发号器得一个一个的生成ID<br><br>还有一个问题是 所有业务公用一个发号器吗 然后发号器根据不同的请求来设置ID里的业务字段？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488048,"discussion_content":"可以用类似redis那样的单线程设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584689123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165715,"user_name":"五羊司机","can_delete":false,"product_type":"c1","uid":1668397,"ip_address":"","ucode":"9843F4E58032CE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/nf73HyxDKACe84GR6QLM7LJPibxUBOcrY2DIJTsKHbbegIIH9YZykQbHYOoWADAUibpcmFesgSA6XGU3tlwTA5KQ/132","comment_is_top":false,"comment_ctime":1577287777,"is_pvip":false,"replies":[{"id":"63259","content":"mycat只能给数据库用，发号器更通用","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577348505,"ip_address":"","comment_id":165715,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872255073","product_id":100035801,"comment_content":"老师，不太明白，mycat也能生成唯一自增ID，为什么还要实现发号器，请问这俩有什么区别","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479265,"discussion_content":"mycat只能给数据库用，发号器更通用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577348505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154310,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1574407316,"is_pvip":false,"replies":[{"id":"59485","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574642796,"ip_address":"","comment_id":154310,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869374612","product_id":100035801,"comment_content":"老师，序列号设置为10位每毫秒生成1024个序号，拿评论来说，也就是每秒支持1024*1000的并发评论么，另外，雪花算法生成的主键也会作为分库表的一列保存在数据库里么","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475435,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146118,"user_name":"吕宗霖","can_delete":false,"product_type":"c1","uid":1442590,"ip_address":"","ucode":"BBB6662BE2B564","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1e/f605f4a9.jpg","comment_is_top":false,"comment_ctime":1572436492,"is_pvip":false,"replies":[{"id":"56424","content":"不会的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572478512,"ip_address":"","comment_id":146118,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867403788","product_id":100035801,"comment_content":"老师好呀，发号器生成id当主键的话，由于位数较多，对数据库索引性能影响大么","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472717,"discussion_content":"不会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572478512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142054,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1571284660,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5866251956","product_id":100035801,"comment_content":"学习的时候用 int做主键，<br>后来工作的初步也用int，<br>后来公司为了考虑分布式，换了uuid作主键，<br>再后来，换公司，这里用Long做主键。<br><br>额外说两个问题：<br>1，如果数据量小的情况下，就算分布式UUID其实也足够。不能用于排序，增查效率较差，这些再数据量没那么大的情况下，都不构成问题。但是带来的优点：易于生成（甚至直接引入个类就可以用），也无需独立部署，隐藏业务（其实生成器已经可以隐藏部分业务了，但是单调递增的特性，还是可以暴力尝试其他的id，但是uuid按理说更加不容易被破解）<br>2，小公司，小系统，小业务。我觉得其实id  int 已经足够。毕竟最大21亿的数据量，通常来讲也够了。而且简单，高性能。。。现在很多用long的公司，都是为了将来的扩展考虑的么？","like_count":1,"discussions":[{"author":{"id":1123043,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","nickname":"benny","note":"","ucode":"E2F30AF0C808D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166308,"discussion_content":"看业务 有些业务用户id用int可以 ugc的东西int就不够了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581384240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024341,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/55/cff2322c.jpg","nickname":"雪中亮","note":"","ucode":"B294FDFF9F13E8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40108,"discussion_content":"我们这小公司，int还真不够了，日增200W，用不了3年","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572080677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141600,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1571200732,"is_pvip":false,"replies":[{"id":"54698","content":"是可以用发号器来代替了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571205849,"ip_address":"","comment_id":141600,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866168028","product_id":100035801,"comment_content":"老师，有个疑问，如果部署了这么一套发号器，在不考虑非功能性需求前提下，是不是意味着所有原先使用数据库自增或者guid来作为唯一id的场景都可以用发号器来代替？<br>有没有什么场景不应该这么用的？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470816,"discussion_content":"是可以用发号器来代替了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571205849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139376,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1570622131,"is_pvip":false,"replies":[{"id":"53780","content":"看你的业务需求，如果对于发号器的时间延迟要求高，可以一个机房部署一个，如果不高，可以共用","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665351,"ip_address":"","comment_id":139376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865589427","product_id":100035801,"comment_content":"这样是不是需要在每个机房都配置一个产生 ID 的机器？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469915,"discussion_content":"看你的业务需求，如果对于发号器的时间延迟要求高，可以一个机房部署一个，如果不高，可以共用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139281,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1570601212,"is_pvip":false,"replies":[{"id":"53787","content":"是数字的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665635,"ip_address":"","comment_id":139281,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865568508","product_id":100035801,"comment_content":"那老师。实际数据库是存储 二进制字段还是。  转换为bigint类型的数字","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469876,"discussion_content":"是数字的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360455,"user_name":"谷涛","can_delete":false,"product_type":"c1","uid":2974376,"ip_address":"广东","ucode":"B1CC8365F17D3F","user_header":"","comment_is_top":false,"comment_ctime":1666580554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666580554","product_id":100035801,"comment_content":"雪花算法时间戳占41位，最大值是2的41次方减1，用这个最大值算年限是69年，难道这可以说是雪花算法的最大年限吗，难道不需要减去现在的时间戳时间吗，北京时间1970年01月01日08时00分00秒的时间戳是0，算出来的69年，只能使用到1970+69 年","like_count":0},{"had_liked":false,"id":338864,"user_name":"梦楼","can_delete":false,"product_type":"c1","uid":2093516,"ip_address":"","ucode":"2D0F3050ACC091","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f1/cc/3bd32c6f.jpg","comment_is_top":false,"comment_ctime":1647765655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647765655","product_id":100035801,"comment_content":"讲的很不错，赞！！！","like_count":0},{"had_liked":false,"id":324695,"user_name":"喜世","can_delete":false,"product_type":"c1","uid":1281431,"ip_address":"","ucode":"95C25A01D6298D","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/97/1f3948be.jpg","comment_is_top":false,"comment_ctime":1638548592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638548592","product_id":100035801,"comment_content":"老师，您好，“另外，如果请求发号器的 QPS 不高，比如说发号器每毫秒只发一个 ID，就会造成生成 ID 的末位永远是 1，那么在分库分表时如果使用 ID 作为分区键就会造成库表分配的不均匀。这一点，也是我在实际项目中踩过的坑” 这一点我有点不懂，分库分表时，先对分区键做了hash,而hash算法是一个均匀算法，就是输入尽管只有一丁点差异，输出也会完全不同，有巨大差异，那么，是什么原因造成老师说的分配不均匀了？","like_count":0},{"had_liked":false,"id":314036,"user_name":"Geek_c29efb","can_delete":false,"product_type":"c1","uid":2708067,"ip_address":"","ucode":"4CBA15A66E6EA6","user_header":"","comment_is_top":false,"comment_ctime":1632814727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632814727","product_id":100035801,"comment_content":"老师，文章前面说不要选用业务字段作为ID，后面说UUID不能作为ID的另一个原因是它不具备业务含义，感觉有点前后矛盾，不知道是不是我理解错了？麻烦解惑一下，谢谢！","like_count":0},{"had_liked":false,"id":285258,"user_name":"FuriousEric","can_delete":false,"product_type":"c1","uid":1138576,"ip_address":"","ucode":"0A66DA938976F7","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/90/711efc88.jpg","comment_is_top":false,"comment_ctime":1616710921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616710921","product_id":100035801,"comment_content":"老师，Twitter原版的snowflake算法，如果有多台机器同时工作，由于workerid不同，生成的最终id必定不是单调递增的，从而导致当做主键插入db的时候，B+树的节点要不停移动数据。虽然老师的单台机器能解决问题，但是毕竟一般公司每个发号器服务都至少布置两台，防止出现问题，难道这些公司都忽视这个性能问题吗？我看网上绝大部分文章都忽视了这个问题，只有老师的专栏提到了这个问题。","like_count":0},{"had_liked":false,"id":281505,"user_name":"circle。","can_delete":false,"product_type":"c1","uid":1758349,"ip_address":"","ucode":"F42633FA7DBB80","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d4/8d/76667754.jpg","comment_is_top":false,"comment_ctime":1614768071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614768071","product_id":100035801,"comment_content":"老师，文章中说：“由于业务服务器的数量很多，我们很难保证机器 ID 的唯一性，所以就需要引入 ZooKeeper 等分布式一致性组件来保证每次机器重启时都能获得唯一的机器 ID。”   我想知道这个机器ID是怎么定义的呢？为什么重启可能会产生重复机器ID? 可以对每台物理机的ID自己人为定义成0,1,2....这样是不是就不会产生重复机器ID了","like_count":0},{"had_liked":false,"id":270934,"user_name":"tongzi","can_delete":false,"product_type":"c1","uid":2002210,"ip_address":"","ucode":"7349A6E42EDF17","user_header":"https://static001.geekbang.org/account/avatar/00/1e/8d/22/0bf540be.jpg","comment_is_top":false,"comment_ctime":1609322411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609322411","product_id":100035801,"comment_content":"老师好有个问题，发好器既然是基础服务，需要怎么保障高可用呢？","like_count":0},{"had_liked":false,"id":261328,"user_name":"dandy","can_delete":false,"product_type":"c1","uid":1583740,"ip_address":"","ucode":"5EE976FCBD9215","user_header":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","comment_is_top":false,"comment_ctime":1605272737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605272737","product_id":100035801,"comment_content":"另外存储中，1方法寸zk 2方法寸本地文件。 2方法机器done了应该也有问题吧，应该都需要寸zk之类的","like_count":0},{"had_liked":false,"id":261327,"user_name":"dandy","can_delete":false,"product_type":"c1","uid":1583740,"ip_address":"","ucode":"5EE976FCBD9215","user_header":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","comment_is_top":false,"comment_ctime":1605272633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605272633","product_id":100035801,"comment_content":"每次生成后，都需要存储到zk当中吗，不知老师你们线上是这样处理的吗","like_count":0},{"had_liked":false,"id":258362,"user_name":"徐小熊","can_delete":false,"product_type":"c1","uid":2120879,"ip_address":"","ucode":"673D3C055AE5B5","user_header":"https://static001.geekbang.org/account/avatar/00/20/5c/af/2215f3b6.jpg","comment_is_top":false,"comment_ctime":1604397690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604397690","product_id":100035801,"comment_content":"请问，如果使用读写分离的形式部署 数据库，是为了减少数据库的压力吗？如果是，那为啥不使用redis这样的内存数据库做一个缓存，减少数据库的压力不是更高效吗？","like_count":0},{"had_liked":false,"id":254222,"user_name":"~patience","can_delete":false,"product_type":"c1","uid":1614285,"ip_address":"","ucode":"8D9BC78A241CEA","user_header":"https://static001.geekbang.org/account/avatar/00/18/a1/cd/bc74741c.jpg","comment_is_top":false,"comment_ctime":1603085741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603085741","product_id":100035801,"comment_content":"雪花id的开始时间戳越大,生成的id位数就越短,那这个开始时间戳太大了,以后会不会生成的id位数会增多?比如现在生成的id是14位,过几个月或者一年生成的就是18位了?","like_count":0},{"had_liked":false,"id":203489,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586221193,"is_pvip":false,"replies":[{"id":"78266","content":"高可用是另一方面，这里只是单纯的说如何解决时钟不准的问题","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623950,"ip_address":"","comment_id":203489,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586221193","product_id":100035801,"comment_content":"1：如果我们发现系统时钟不准，就可以让发号器暂时拒绝发号，直到时钟准确为止，此时发号器是不可用的，这是不能允许的吧？发号器如果不能实现高可用，那问题就太大了，依赖发号器的服务都会暂停的？<br><br>2：发号器的实现思路<br>2-1：机器号＋时间戳来实现<br>2-2：基于uuid实现<br>2-3：基于数据自增主键实现<br>2-4：基于redis加一指令实现<br>2-5：基于zk实现<br>2-6：基于开源的雪花算法实现，或者参考其他公司开源的发号器实现，比如：百度、腾讯、美团<br><br>注意：发号器生产的ID，需要唯一、单调递增、高性能","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490876,"discussion_content":"高可用是另一方面，这里只是单纯的说如何解决时钟不准的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202799,"user_name":"tm1234","can_delete":false,"product_type":"c1","uid":1947612,"ip_address":"","ucode":"4042321C713186","user_header":"","comment_is_top":false,"comment_ctime":1586071138,"is_pvip":false,"replies":[{"id":"75847","content":"不会的，发号器能承担很高并发，并且写场景下才会使用发号器，而写场景的并发通常不高","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586089164,"ip_address":"","comment_id":202799,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586071138","product_id":100035801,"comment_content":"请问老师发号服务为了保证生产全局唯一自增id是需要加锁的对吧，那这样的话对于高并发的场景（大量的发号请求同时到达），发号服务会不会成为整个系统的瓶颈呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490690,"discussion_content":"不会的，发号器能承担很高并发，并且写场景下才会使用发号器，而写场景的并发通常不高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586089164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157606,"user_name":"大鸡腿🍗","can_delete":false,"product_type":"c1","uid":1413499,"ip_address":"","ucode":"38AF8AE00F6166","user_header":"https://static001.geekbang.org/account/avatar/00/15/91/7b/2dd4d0c1.jpg","comment_is_top":false,"comment_ctime":1575210570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575210570","product_id":100035801,"comment_content":"感觉不引入zk也可以实现唯一，不同机器工作机器id不同，即使同一台机器同个时间后面12位序列号也不同呢","like_count":0},{"had_liked":false,"id":143728,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1571773466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571773466","product_id":100035801,"comment_content":"老师，我理解发号器是单节点时，发出的号的单调递增的，但由于网络延时等，客户端收到的顺序并不一定严格单调递增，导致创建DB记录时，并不能保证按ID单调递增的顺序创建。不过，从秒级或更粗的粒度看，DB记录是按ID单调递增创建的","like_count":0},{"had_liked":false,"id":142280,"user_name":"Ricky Fung","can_delete":false,"product_type":"c1","uid":1051363,"ip_address":"","ucode":"7AEA1F8EC4A088","user_header":"https://static001.geekbang.org/account/avatar/00/10/0a/e3/9637bfdb.jpg","comment_is_top":false,"comment_ctime":1571324491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571324491","product_id":100035801,"comment_content":"大部分公司使用的都是基于推特的snowflake算法吧，有见过基于Redis实现发号器的，对运维水平要求可能高一点。","like_count":0},{"had_liked":false,"id":141044,"user_name":"Hinimix","can_delete":false,"product_type":"c1","uid":1316937,"ip_address":"","ucode":"7994136C93BD89","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/49/b1d864e5.jpg","comment_is_top":false,"comment_ctime":1571105728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571105728","product_id":100035801,"comment_content":"我不是分库分表，用bigint做的","like_count":0},{"had_liked":false,"id":139723,"user_name":"Geek_3ad2ea","can_delete":false,"product_type":"c1","uid":1531622,"ip_address":"","ucode":"5A4E8B2E1E658E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eosJHBkDV1wMicK4UlKSqo8BjLZcUcK0iavJOkH11SENrsmRBvkRKCeXPjV5f3pNfiah35qWNtt4gAWA/132","comment_is_top":false,"comment_ctime":1570711559,"is_pvip":false,"replies":[{"id":"53992","content":"为什么呢","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570750303,"ip_address":"","comment_id":139723,"utype":1}],"discussion_count":5,"race_medal":0,"score":"1570711559","product_id":100035801,"comment_content":"这样的话，一个服务只能在同一台机器上生成ID了，如果如果这台机器挂了，还是有很低的概率产生非自增的id吧？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470076,"discussion_content":"为什么呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570750303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1327371,"avatar":"https://static001.geekbang.org/account/avatar/00/14/41/0b/04cb0bba.jpg","nickname":"Alex Yao","note":"","ucode":"4A56A5431A1E0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36102,"discussion_content":"故障的情况下一毫秒内主备切换不太可能做到吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571321479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1531622,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eosJHBkDV1wMicK4UlKSqo8BjLZcUcK0iavJOkH11SENrsmRBvkRKCeXPjV5f3pNfiah35qWNtt4gAWA/132","nickname":"Geek_3ad2ea","note":"","ucode":"5A4E8B2E1E658E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1327371,"avatar":"https://static001.geekbang.org/account/avatar/00/14/41/0b/04cb0bba.jpg","nickname":"Alex Yao","note":"","ucode":"4A56A5431A1E0D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37547,"discussion_content":"生成ID的服务器不是主备的关系，而是多节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571632687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":36102,"ip_address":""},"score":37547,"extra":""},{"author":{"id":1138576,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5f/90/711efc88.jpg","nickname":"FuriousEric","note":"","ucode":"0A66DA938976F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1531622,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eosJHBkDV1wMicK4UlKSqo8BjLZcUcK0iavJOkH11SENrsmRBvkRKCeXPjV5f3pNfiah35qWNtt4gAWA/132","nickname":"Geek_3ad2ea","note":"","ucode":"5A4E8B2E1E658E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361593,"discussion_content":"多节点会造成id不是单调递增，从而导致B+树节点数据要移动，没有自增id性能好，这个怎么破？老师的方案比较极端，就主备部署，永远只有一台机器，必定单调递增","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616711040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37547,"ip_address":""},"score":361593,"extra":""}]},{"author":{"id":1531622,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eosJHBkDV1wMicK4UlKSqo8BjLZcUcK0iavJOkH11SENrsmRBvkRKCeXPjV5f3pNfiah35qWNtt4gAWA/132","nickname":"Geek_3ad2ea","note":"","ucode":"5A4E8B2E1E658E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30732,"discussion_content":"假如在一毫秒内先从某个机器ID比较大的服务上获取id，然后服务挂了，此时如果切到某个机器ID比较小的机器上去获取，那么由于前面的时间戳一样，那么后面一次获取到的id不是会比上一次小？这个确实有点极端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570855481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}