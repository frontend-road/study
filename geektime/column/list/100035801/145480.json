{"id":145480,"title":"09 | 数据库优化方案（二）：写入数据量增加时，如何实现分库分表？","content":"<p>你好，我是唐扬。</p><p>前一节课，我们学习了在高并发下数据库的一种优化方案：读写分离，它就是依靠主从复制的技术使得数据库实现了数据复制为多份，增强了抵抗大量并发读请求的能力，提升了数据库的查询性能的同时，也提升了数据的安全性。当某一个数据库节点，无论是主库还是从库发生故障时，我们还有其他的节点中存储着全量的数据，保证数据不会丢失。此时，你的电商系统的架构图变成了下面这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/05/23/05fa7f7a861ebedc4d8f0c57bc88b023.jpg?wh=1142*618\" alt=\"\"></p><p>这时，公司CEO突然传来一个好消息，运营推广持续带来了流量，你所设计的电商系统的订单量突破了五千万。订单数据都是单表存储的，你的压力倍增，因为无论是数据库的查询还是写入性能都在下降，数据库的磁盘空间也在报警。所以，你主动分析现阶段自己需要考虑的问题，并寻求高效的解决方式，以便系统能正常运转下去。<strong>你考虑的问题主要有以下几点：</strong></p><p>1.系统正在持续不断地发展，注册的用户越来越多，产生的订单越来越多，数据库中存储的数据也越来越多，单个表的数据量超过了千万甚至到了亿级别。这时即使你使用了索引，索引占用的空间也随着数据量的增长而增大，数据库就无法缓存全量的索引信息，那么就需要从磁盘上读取索引数据，就会影响到查询的性能了。<strong>那么这时你要如何提升查询性能呢？</strong></p><!-- [[[read_end]]] --><p>2.数据量的增加也占据了磁盘的空间，数据库在备份和恢复的时间变长，<strong>你如何让数据库系统支持如此大的数据量呢？</strong></p><p>3.不同模块的数据，比如用户数据和用户关系数据，全都存储在一个主库中，一旦主库发生故障，所有的模块都会受到影响，<strong>那么如何做到不同模块的故障隔离呢？</strong></p><p>4.你已经知道了，在4核8G的云服务器上对MySQL 5.7做Benchmark，大概可以支撑500TPS和10000QPS，你可以看到数据库对于写入性能要弱于数据查询的能力，那么随着系统写入请求量的增长，<strong>数据库系统如何来处理更高的并发写入请求呢？</strong></p><p>这些问题你可以归纳成，数据库的写入请求量大造成的性能和可用性方面的问题，要解决这些问题，你所采取的措施就是对数据进行分片。这样可以很好地分摊数据库的读写压力，也可以突破单机的存储瓶颈，而常见的一种方式是对数据库做“分库分表”。</p><p>分库分表是一个很常见的技术方案，你应该有所了解。那你会说了：“既然这个技术很普遍，而我又有所了解，那你为什么还要提及这个话题呢？”因为以我过往的经验来看，不少人会在“分库分表”这里踩坑，主要体现在：</p><p>1.对如何使用正确的分库分表方式一知半解，没有明白使用场景和方法。比如，一些同学会在查询时不使用分区键；</p><p>2.分库分表引入了一些问题后，没有找到合适的解决方案。比如，会在查询时使用大量连表查询等等。</p><p>本节课，我就带你解决这两个问题，从常人容易踩坑的地方，跳出来。</p><h2>如何对数据库做垂直拆分</h2><p>分库分表是一种常见的将数据分片的方式，它的基本思想是依照某一种策略将数据尽量平均地分配到多个数据库节点或者多个表中。</p><p>不同于主从复制时数据是全量地被拷贝到多个节点，分库分表后，每个节点只保存部分的数据，这样可以有效地减少单个数据库节点和单个数据表中存储的数据量，在解决了数据存储瓶颈的同时也能有效地提升数据查询的性能。同时，因为数据被分配到多个数据库节点上，那么数据的写入请求也从请求单一主库变成了请求多个数据分片节点，在一定程度上也会提升并发写入的性能。</p><p><strong>比如，我之前做过一个直播项目，</strong>在这个项目中，需要存储用户在直播间中发的消息以及直播间中的系统消息，你知道这些消息量极大，有些比较火的直播间有上万条留言是很常见的事儿，日积月累下来就积攒了几亿的数据，查询的性能和存储空间都扛不住了。没办法，就只能加班加点重构，启动多个数据库来分摊写入压力和容量的压力，也需要将原来单库的数据迁移到新启动的数据库节点上，好在最后成功完成分库分表和数据迁移校验工作，不过也着实花费了不少的时间和精力。</p><p>数据库分库分表的方式有两种：一种是垂直拆分，另一种是水平拆分。这两种方式，在我看来，掌握拆分方式是关键，理解拆分原理是内核。所以你在学习时，最好可以结合自身业务来思考。</p><p>垂直拆分，顾名思义就是对数据库竖着拆分，也就是将数据库的表拆分到多个不同的数据库中。</p><p>垂直拆分的原则一般是按照业务类型来拆分，核心思想是专库专用，将业务耦合度比较高的表拆分到单独的库中。举个形象的例子，就是在整理衣服的时候，将羽绒服、毛衣、T恤分别放在不同的格子里。这样可以解决我在开篇提到的第三个问题：把不同的业务的数据分拆到不同的数据库节点上，这样一旦数据库发生故障时只会影响到某一个模块的功能，不会影响到整体功能，从而实现了数据层面的故障隔离。</p><p><strong>我还是以微博系统为例来给你说明一下。</strong></p><p>在微博系统中有和用户相关的表，有和内容相关的表，有和关系相关的表，这些表都存储在主库中。在拆分后，我们期望用户相关的表分拆到用户库中，内容相关的表分拆到内容库中，关系相关的表分拆到关系库中。</p><p><img src=\"https://static001.geekbang.org/resource/image/77/40/7774c9393a6295b2d5e0f1a9fa7a5940.jpg?wh=1142*765\" alt=\"\"></p><p>对数据库进行垂直拆分是一种偏常规的方式，这种方式其实你会比较常用，不过拆分之后，虽然可以暂时缓解存储容量的瓶颈，但并不是万事大吉，因为数据库垂直拆分后依然不能解决某一个业务模块的数据大量膨胀的问题，一旦你的系统遭遇某一个业务库的数据量暴增，在这个情况下，你还需要继续寻找可以弥补的方式。</p><p>比如微博关系量早已经过了千亿，单一的数据库或者数据表已经远远不能满足存储和查询的需求了，这个时候，你需要将数据拆分到多个数据库和数据表中，<strong>也就是对数据库和数据表做水平拆分了。</strong></p><h2>如何对数据库做水平拆分</h2><p>和垂直拆分的关注点不同，垂直拆分的关注点在于业务相关性，而水平拆分指的是将单一数据表按照某一种规则拆分到多个数据库和多个数据表中，关注点在数据的特点。</p><p><strong>拆分的规则有下面这两种：</strong></p><p>1.按照某一个字段的哈希值做拆分，这种拆分规则比较适用于实体表，比如说用户表，内容表，我们一般按照这些实体表的ID字段来拆分。比如说我们想把用户表拆分成16个库，每个库是64张表，那么可以先对用户ID做哈希，哈希的目的是将ID尽量打散，然后再对16取余，这样就得到了分库后的索引值；对64取余，就得到了分表后的索引值。</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/39/7c6af43da41bb197be753207d4b9e039.jpg?wh=1142*652\" alt=\"\"></p><p>2.另一种比较常用的是按照某一个字段的区间来拆分，比较常用的是时间字段。你知道在内容表里面有“创建时间”的字段，而我们也是按照时间来查看一个人发布的内容。我们可能会要看昨天的内容，也可能会看一个月前发布的内容，这时就可以按照创建时间的区间来分库分表，比如说可以把一个月的数据放入一张表中，这样在查询时就可以根据创建时间先定位数据存储在哪个表里面，再按照查询条件来查询。</p><p><strong>一般来说，列表数据可以使用这种拆分方式，</strong>比如一个人一段时间的订单，一段时间发布的内容。但是这种方式可能会存在明显的热点，这很好理解嘛，你当然会更关注最近我买了什么，发了什么，所以查询的QPS也会更多一些，对性能有一定的影响。另外，使用这种拆分规则后，数据表要提前建立好，否则如果时间到了2020年元旦，DBA（Database Administrator，数据库管理员）却忘记了建表，那么2020年的数据就没有库表可写了，就会发生故障了。</p><p><img src=\"https://static001.geekbang.org/resource/image/40/c4/40ec1287d871d656f508d5e108f675c4.jpg?wh=1142*458\" alt=\"\"></p><p>数据库在分库分表之后，数据的访问方式也有了极大的改变，原先只需要根据查询条件到从库中查询数据即可，现在则需要先确认数据在哪一个库表中，再到那个库表中查询数据。这种复杂度也可以通过数据库中间件来解决，我们在<a href=\"https://time.geekbang.org/column/article/145095\">08讲</a>中已经有所讲解，这里就不再赘述了，不过，我想再次强调的是，你需要对所使用数据库中间件的原理有足够的了解，和足够强的运维上的把控能力。</p><p>不过，你要知道的是，分库分表虽然能够解决数据库扩展性的问题，但是它也给我们的使用带来了一些问题。</p><h2>解决分库分表引入的问题</h2><p>分库分表引入的一个最大的问题就是<strong>引入了分库分表键，也叫做分区键，</strong>也就是我们对数据库做分库分表所依据的字段。</p><p>从分库分表规则中你可以看到，无论是哈希拆分还是区间段的拆分，我们首先都需要选取一个数据库字段，这带来一个问题是：我们之后所有的查询都需要带上这个字段，才能找到数据所在的库和表，否则就只能向所有的数据库和数据表发送查询命令。如果像上面说的要拆分成16个库和64张表，那么一次数据的查询会变成16*64=1024次查询，查询的性能肯定是极差的。</p><p><strong>当然，方法总比问题多，</strong>针对这个问题，我们也会有一些相应的解决思路。比如，在用户库中我们使用ID作为分区键，这时如果需要按照昵称来查询用户时，你可以按照昵称作为分区键再做一次拆分，但是这样会极大地增加存储成本，如果以后我们还需要按照注册时间来查询时要怎么办呢，再做一次拆分吗？</p><p><strong>所以最合适的思路是</strong>你要建立一个昵称和ID的映射表，在查询的时候要先通过昵称查询到ID，再通过ID查询完整的数据，这个表也可以是分库分表的，也需要占用一定的存储空间，但是因为表中只有两个字段，所以相比重新做一次拆分还是会节省不少的空间的。</p><p><strong>分库分表引入的另外一个问题是一些数据库的特性在实现时可能变得很困难。</strong>比如说多表的JOIN在单库时是可以通过一个SQL语句完成的，但是拆分到多个数据库之后就无法跨库执行SQL了，不过好在我们对于JOIN的需求不高，即使有也一般是把两个表的数据取出后在业务代码里面做筛选，复杂是有一些，不过是可以实现的。再比如说在未分库分表之前查询数据总数时只需要在SQL中执行count()即可，现在数据被分散到多个库表中，我们可能要考虑其他的方案，比方说将计数的数据单独存储在一张表中或者记录在Redis里面。</p><p>当然，虽然分库分表会对我们使用数据库带来一些不便，但是相比它所带来的扩展性和性能方面的提升，我们还是需要做的，因为，经历过分库分表后的系统，才能够突破单机的容量和请求量的瓶颈，就比如说，我在开篇提到的我们的电商系统，它正是经历了分库分表，才会解决订单表数据量过大带来的性能衰减和容量瓶颈。</p><h2>课程小结</h2><p>总的来说，在面对数据库容量瓶颈和写并发量大的问题时，你可以采用垂直拆分和水平拆分来解决，不过你要注意，这两种方式虽然能够解决问题，但是也会引入诸如查询数据必须带上分区键，列表总数需要单独冗余存储等问题。</p><p>而且，你需要了解的是在实现分库分表过程中，数据从单库单表迁移多库多表是一件既繁杂又容易出错的事情，而且如果我们初期没有规划得当，后面要继续增加数据库数或者表数时，我们还要经历这个迁移的过程。<strong>所以，从我的经验出发，对于分库分表的原则主要有以下几点：</strong></p><p>1.如果在性能上没有瓶颈点那么就尽量不做分库分表；</p><p>2.如果要做，就尽量一次到位，比如说16库，每个库64表就基本能够满足几年内你的业务的需求。</p><p>3.很多的NoSQL数据库，例如Hbase，MongoDB都提供auto sharding的特性，如果你的团队内部对于这些组件比较熟悉，有较强的运维能力，那么也可以考虑使用这些NoSQL数据库替代传统的关系型数据库。</p><p>其实，在我看来，有很多人并没有真正从根本上搞懂为什么要拆分，拆分后会带来哪些问题，只是一味地学习大厂现有的拆分方法，从而导致问题频出。<strong>所以，你在使用一个方案解决一个问题的时候一定要弄清楚原理，搞清楚这个方案会带来什么问题，要如何来解决，要知其然也知其所以然，这样才能在解决问题的同时避免踩坑。</strong></p><h2>一课一思</h2><p>分库分表实际上是分布式存储中一种数据分片的解决方案，那么你还了解哪些分布式存储组件也使用了类似的技术呢？它的实现方式你了解吗？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":138649,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1570409498,"is_pvip":false,"replies":[{"id":"53459","content":"1.多表join一般不会是全量数据，是分页数据，所以只有一少部分<br>2.建议是订单ID分库分表，然后建立买家ID和卖家ID和订单ID的映射<br>3. 一般是先双写两个库，然后校验数据，然后灰度切读，最后全量切读","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570492347,"ip_address":"","comment_id":138649,"utype":1}],"discussion_count":8,"race_medal":1,"score":"358052695066","product_id":100035801,"comment_content":"主要内容梳理<br>写入请求量大会造成性能和可用性的问题，如何应对呢？<br>采取对数据进行&quot;分片&quot;，这是一种思想，在数据库中就是分库分表，Kafka中是分区，ES中是分片<br><br>分库分表的思想是根据某种分配策略把数据尽量均匀的分到多个数据库节点或多个表中，这样每个数据库节点和表都只存储部分数据，这样对数据的存储、读和写都有意义<br>存储:因为分库分表后每个节点和表只存储部分数据，这样就能解决数据存储的瓶颈<br>读:因为每个节点和表存储部分数据，数据量变小，可以提升查询性能<br>写:数据写入被分摊到多个节点和表，写入性能提高<br><br>分库分表有两种方式:垂直拆分和水平拆分<br>垂直拆分的关注点在业务相关性，原则是按照业务拆分，核心思想是专库专用，将业务耦合度高的拆分到单独库中<br>水平拆分是把单一数据库按照某种规则拆分到多个数据库和多个数据表中，关注点在数据的特点<br><br>水平拆分的两种方法<br>1.根据某个字段的hash值拆分<br>比如想把用户表拆成16库64表，方案如下<br>先对id进行hash操作hash(id)，这样有助于打散数据<br>然后对16取余 hash(id)%16，这样就得到了分库后的索引<br>最后对64取余 hash(id)%16%64，这样就得到了分表后的索引值<br><br>2.根据某个字段的区间或范围拆分<br>可以根据时间拆分<br><br>引入分库分表确实有很多优点，但也会引入新的问题<br>1.引入了分区分表键，也叫分区键<br>因为我们需要对分区键进行hash进行索引，这样就导致我们查询都要带上该分区键，比较好的解决办法是用id做分区键，但是如果有根据用户昵称查询的需求怎么办呢？<br>解决办法就是建立一个昵称和id的映射表<br>2.一些数据库的特性的实现变得困难<br>(1)夸库join不可用<br>解决办法是在业务代码中做处理<br>(2)求count<br>采取第三方组件例如redis实现<br><br>课后思考题<br>大数据的存储组件一般都涉及数据分片技术<br>例如Kafka的分区，ES的分片等等<br>拿Kafka的分区来举例<br>Kafka会对消息的key进行hash然后对分区数量取模，这样就得到了topic对应的分区索引<br><br>疑问点<br>1.老师我想请教下就是多库join的问题，如果采用在业务代码中进行处理不太妥吧，数据量太大了，如果有分页或排序的需求，这是要把各个库的数据都查出来，在内存中进行操作，这样会想当耗费内存，且性能低，老师有啥好办法吗？<br><br>2.如果一个订单库采用了买家id做为分区键，这样查询买家的订单非常容易，那要查询卖家的订单是不是和文中根据昵称查询一样，建立一个卖家和买家的映射表解决？<br><br>3.文中老师说如果要做分库分表留言一次性做到位，但这样在开始会很浪费空间，所以一般公司还是会采取慢慢扩容的方式，这样就引入了不停机迁移数据的问题，针对这种情况，老师是怎么做的呢？<br>谢谢老师<br>","like_count":83,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469606,"discussion_content":"1.多表join一般不会是全量数据，是分页数据，所以只有一少部分\n2.建议是订单ID分库分表，然后建立买家ID和卖家ID和订单ID的映射\n3. 一般是先双写两个库，然后校验数据，然后灰度切读，最后全量切读","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570492347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098616,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/78/97f3aaeb.jpg","nickname":"Chen","note":"","ucode":"5B5BDEB0A407C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212945,"discussion_content":"最后对64取余 hash(id)%16%64，这样就得到了分表后的索引值。\n\n这个有问题，hash(id)%64 即可。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585036708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1810606,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a0/ae/8c2bec53.jpg","nickname":"心有我动","note":"","ucode":"ED1451224904F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098616,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/78/97f3aaeb.jpg","nickname":"Chen","note":"","ucode":"5B5BDEB0A407C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554764,"discussion_content":"这么做可以让数据更平均","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646582060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212945,"ip_address":""},"score":554764,"extra":""}]},{"author":{"id":1674637,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK6uMhKkDoyJ5ctXISeMrhXVBw55z7KJQze2niaUZGIhibeHrWib7jtCfOc8zOhxzeB5BAMZggicvQjZQ/132","nickname":"Geek_eedadb","note":"","ucode":"5C0AA741DA013F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30429,"discussion_content":"to老师，通过索引查到id，再分批去查实体么？这样效率不是很差么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570837079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":168414,"discussion_content":"双写两个库后的数据校验怎么做啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581579650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":550846,"discussion_content":"我觉得应该抽查部分数据做校验。先校验总量，再校验每一条数据是否都对应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644757709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":168414,"ip_address":""},"score":550846,"extra":""}]},{"author":{"id":1595467,"avatar":"https://static001.geekbang.org/account/avatar/00/18/58/4b/8b044dd3.jpg","nickname":"和光同尘","note":"","ucode":"A3195757E45CD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57156,"discussion_content":"分页去es分片查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574577091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667160,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gIOoIaPQSQiaqTib74Rqicw7WCSlwBTSBhasBeJgpqnkH6LNCSIObuJ8PyXWO0W4Viaib1iaXNxBypAtqwPiaNR7FbE4w/132","nickname":"Forward","note":"","ucode":"10B310810C5149","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38472,"discussion_content":"多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571793133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180678,"user_name":"Xiang","can_delete":false,"product_type":"c1","uid":1000070,"ip_address":"","ucode":"374744FF627C00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/86/d05de870.jpg","comment_is_top":false,"comment_ctime":1582362955,"is_pvip":true,"replies":[{"id":"70257","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1582513811,"ip_address":"","comment_id":180678,"utype":1}],"discussion_count":7,"race_medal":0,"score":"130431381835","product_id":100035801,"comment_content":"介绍一个 range+hash 分库分表的方案吧，分库分表？如何做到永不迁移数据和避免热点？<br><br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;QFlUPS8X0errMwpxdBMHvg","like_count":30,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484755,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582513811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259156,"avatar":"https://static001.geekbang.org/account/avatar/00/13/36/94/0b969588.jpg","nickname":"青年祭司","note":"","ucode":"C88EDAE3FF09AE","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405985,"discussion_content":"👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634688571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1399424,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9x5X5WYPsKD2UAsEhPthmZbWqcjk5VkrHyVspRbyjab4Nv0PsbZYiaUibciatOKZgVb5uTNtTsNRgJesVmWeTtlMA/132","nickname":"Geek_11dda3","note":"","ucode":"8942FD97809C9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377899,"discussion_content":"很清晰，看一遍就懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622955666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031306,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bc/8a/9420cf2a.jpg","nickname":"冠超","note":"","ucode":"230FD3AAF63B48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325029,"discussion_content":"这个写的真好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605225554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1232077,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","nickname":"SuperYue","note":"","ucode":"97DEDA055C462A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200236,"discussion_content":"这个方案还是有热点问题 0-1000万的表和1000-2000万的表热点完全不同，在用户id没增长到1000万时，所有压力全在0-1000万的表。只是数据库做了均衡，表没做到均衡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583671173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1014054,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/26/9ac98036.jpg","nickname":"招谁惹谁","note":"","ucode":"F4B43C8C098E96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1232077,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","nickname":"SuperYue","note":"","ucode":"97DEDA055C462A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284830,"discussion_content":"没到1000万的时候，一般是没有压力的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592655321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":200236,"ip_address":""},"score":284830,"extra":""},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1232077,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","nickname":"SuperYue","note":"","ucode":"97DEDA055C462A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364261,"discussion_content":"db0，db1和db2都有一个0-1000万的表，均摊300万，单表支持没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617425668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":200236,"ip_address":""},"score":364261,"extra":""}]}]},{"had_liked":false,"id":139399,"user_name":"撒旦的堕落","can_delete":false,"product_type":"c1","uid":1116864,"ip_address":"","ucode":"15F6AA41EE556F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/c0/401c240e.jpg","comment_is_top":false,"comment_ctime":1570626940,"is_pvip":false,"replies":[{"id":"53779","content":"可以搭建新的库之后，先在业务上双写，然后校验两边的数据，再灰度切读，再全量切读","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665295,"ip_address":"","comment_id":139399,"utype":1}],"discussion_count":6,"race_medal":0,"score":"113239776636","product_id":100035801,"comment_content":"老师说的道理 我都明白  只是如果现在有一张上亿的表  并且存在特定属性更新 那么如何不停机 进行分库分表  有木有具体的实践","like_count":26,"discussions":[{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251966,"discussion_content":"我们重构底层库表也是这样：\n\n1. 截止某天的旧数据，同步到新库表。新库表有个 source_id 字段，用来保存旧数据的自增 id，因为迁移的旧数据自增主键，与新表的自增 id 存在冲突可能。同时要保证旧数据的原有关联关系。\n\n2. 代码里双写，新旧库表同一个事务。\n\n3. 有对账脚本，根据行数据的唯一性主键，对比每行数据。存在差异时，以旧库表数据为准，修复新库表数据。\n\n4. 这时线上业务的读写，均是旧库表。\n\n5. 如果有新需求，读新库表，写新旧的库表，仍旧是双写。\n\n6. 对账脚本稳定一段时间后，在灰度上切读，此时灰度读新库表，仍双写。线上仍然读写旧库表。\n\n7. 持续观察后，线上也切读，线上读新库表，双写。此时线上旧库表无读操作。\n\n8. 继续观察，没问题就切写，读写均操作新库表。不再写旧库表，旧库表归档。\n\n9. 停掉对账脚本，迁移完成。","likes_number":21,"is_delete":false,"is_hidden":false,"ctime":1588130279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1678641,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ONIogicHLw4qYdzjVlm5SS75kqnmrdziadgOaHZNn8IGffSZ8xHTgOz0ZBzsFqyO5dsjF7JFs5LBXvHXSpC6eiaibg/132","nickname":"Geek_4c1353","note":"","ucode":"E86D3B067A3694","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289776,"discussion_content":"请问一个，在同一个事务里面双写新旧库，用到的是分布式的事务吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594210436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":251966,"ip_address":""},"score":289776,"extra":""},{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1678641,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ONIogicHLw4qYdzjVlm5SS75kqnmrdziadgOaHZNn8IGffSZ8xHTgOz0ZBzsFqyO5dsjF7JFs5LBXvHXSpC6eiaibg/132","nickname":"Geek_4c1353","note":"","ucode":"E86D3B067A3694","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550847,"discussion_content":"应该是的，因为不同的库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644757941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289776,"ip_address":""},"score":550847,"extra":""}]},{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469927,"discussion_content":"可以搭建新的库之后，先在业务上双写，然后校验两边的数据，再灰度切读，再全量切读","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570665295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140277,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/35/1b14f2af.jpg","nickname":"王小白白白","note":"","ucode":"7049DA34B12208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182756,"discussion_content":"切读是什么意思呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582454827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1215066,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8a/5a/b67a82e3.jpg","nickname":"shen","note":"","ucode":"AE5737B0C7DC4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140277,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/35/1b14f2af.jpg","nickname":"王小白白白","note":"","ucode":"7049DA34B12208","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212620,"discussion_content":"读新库数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584979823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":182756,"ip_address":""},"score":212620,"extra":""}]}]},{"had_liked":false,"id":194764,"user_name":"逍遥飞鹤","can_delete":false,"product_type":"c1","uid":1321385,"ip_address":"","ucode":"6E0EF9533C33B4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLXImZpDhhE53PvZib8Aiae1ZMg1JukaMOBasgyEtPcib2Rrib2CdlfA7WxYNZQkicavxjFOg3W9CcFgJQ/132","comment_is_top":false,"comment_ctime":1585103978,"is_pvip":false,"replies":[{"id":"75841","content":"是的","user_name":"作者回复","comment_id":194764,"uid":"1448977","ip_address":"","utype":1,"ctime":1586088881,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"70304580714","product_id":100035801,"comment_content":"如果是因读性能引起的分库分表，可考虑ES或MongoDB、HBase的数据重构方式，避免在MySQL做文章<br>如果是写性能引起的分库分表，可按老师上面的这些原则进行实践和改造","like_count":16,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488892,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586088881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1462843,"avatar":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","nickname":"不工","note":"","ucode":"A8725E6D0E1765","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321357,"discussion_content":"正解，分库分表join，多条件where太难了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604569077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1144780,"avatar":"https://static001.geekbang.org/account/avatar/00/11/77/cc/8f532c1a.jpg","nickname":"魔山","note":"","ucode":"F077EAC8840644","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555245,"discussion_content":"场景：对mysql做冷热数据分离，所以写性能可以保持的不错，但是历史数据还需要查询，此时就可以把大量历史数据放到大数组组件中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646821486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043495,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/27/f708ba52.jpg","nickname":"冷夜飞雪","note":"","ucode":"CC01ADAA8DFDFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366905,"discussion_content":"如果要分库分表，并且需要多维度去查询，为啥不直接使用es呢，也不用分库分表了。求教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618215027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153366,"user_name":"leesir","can_delete":false,"product_type":"c1","uid":1116673,"ip_address":"","ucode":"D720A0966666D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/01/3bd45e1e.jpg","comment_is_top":false,"comment_ctime":1574223948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48818864204","product_id":100035801,"comment_content":"分库分表如何做：<br>1、对实体表，路由规则可以是id取模，计算得到数据真正存放的表。可以降低单表的规模，平均每个表的数据量。<br>2、对时间倒排的列表，比如微博内容或者订单，可以根据时间字段水平分表，将近期少部热点数据集中到一起。<br><br>分库分表所引发的问题的解决方案：<br>1、由于分区规则的原因，查询无论如何都必须拿到分区键。可以对某些高频非分区键字段建立二级映射，模拟mysql主键和二级索引的解决方式（二级索引的叶子数据存放的是主键索引）。比如根据name查询用户，可以建立name和uid的映射，查询时先根据name拿到uid，再用uid做后续查询。<br>2、数据库拆分后，针对联表查询，要么少做联表，要么做数据冗余（表字段冗余，或者其他nosql数据冗余）。<br>3、分布式事务<br>a) 数据库中间件<br>b) mq事务消息<br>c) 将分布式大事务转化成多个本地小事务，通过异步通知+定时补偿+幂等实现最终一致性","like_count":11},{"had_liked":false,"id":138822,"user_name":"枫叶11","can_delete":false,"product_type":"c1","uid":1141858,"ip_address":"","ucode":"9953B0CA7367E2","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/62/baf10fb2.jpg","comment_is_top":false,"comment_ctime":1570460847,"is_pvip":false,"replies":[{"id":"53448","content":"主要考虑数据的增长情况，数据迁移一般是先双写旧库和新库，然后校验数据，然后灰度切读，最后全量切读，注意点就是数据校验过程，会比较繁琐","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570491810,"ip_address":"","comment_id":138822,"utype":1}],"discussion_count":5,"race_medal":0,"score":"48815101103","product_id":100035801,"comment_content":"公司小业务少时，不可能一开始就规划很多库和表(如16*64)，就像很多项目开始都只有一个库，但是我们做架构时可以预先考虑到后面可能会分库分表。请问老师，能不能讲一下最开始设计数据库时需要为今后分库分表考虑哪些因素，和一旦扩容后数据迁移的方案和注意点。谢谢。","like_count":11,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469662,"discussion_content":"主要考虑数据的增长情况，数据迁移一般是先双写旧库和新库，然后校验数据，然后灰度切读，最后全量切读，注意点就是数据校验过程，会比较繁琐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570491810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008350,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/de/57cbb843.jpg","nickname":"billow","note":"","ucode":"6D58AEA45BA6A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25358,"discussion_content":"双写，校验，切库，基本上都是这个套路；能不能专门搞篇文章讲讲具体实操的流程？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1570509770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1755152,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","nickname":"Info_E","note":"","ucode":"97207B2CC4C776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008350,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/de/57cbb843.jpg","nickname":"billow","note":"","ucode":"6D58AEA45BA6A3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352586,"discussion_content":"校验是具体校验什么，怎么校验","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614775738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":25358,"ip_address":""},"score":352586,"extra":""}]},{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550849,"discussion_content":"双写-&gt;灰度切读-&gt;校验-&gt;全量切读-&gt;切库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644758379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259854,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/4e/f937748b.jpg","nickname":"小小程序猿","note":"","ucode":"DCE81131B24285","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219972,"discussion_content":"双写，校验，切库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585829266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139260,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1570594353,"is_pvip":false,"replies":[{"id":"53674","content":"可以的，也可以同步到一个大库中，不过性能有点儿差","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570600802,"ip_address":"","comment_id":139260,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35930332721","product_id":100035801,"comment_content":"分库分表之后,对于app端查询的问题还比较好解决。但是后端运营系统查询就麻烦，比如订单分库分表后，运营系统查询订单的时候可能根据多维度查询，这种方案您在工作中是怎么去解决的？我现在的做法就是同步到es里面。用ES去查。","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469861,"discussion_content":"可以的，也可以同步到一个大库中，不过性能有点儿差","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570600802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595467,"avatar":"https://static001.geekbang.org/account/avatar/00/18/58/4b/8b044dd3.jpg","nickname":"和光同尘","note":"","ucode":"A3195757E45CD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57162,"discussion_content":"订单表数据同步到es,也会造成es索引数据的庞大,这方面查询es你们是如何优化的呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574577638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138774,"user_name":"Chocolate","can_delete":false,"product_type":"c1","uid":1013822,"ip_address":"","ucode":"242CF0E3C10E97","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/3e/c39d86f1.jpg","comment_is_top":false,"comment_ctime":1570446629,"is_pvip":false,"replies":[{"id":"53450","content":"是的，没错","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570491833,"ip_address":"","comment_id":138774,"utype":1}],"discussion_count":5,"race_medal":0,"score":"35930184997","product_id":100035801,"comment_content":"老师，请问下昵称和 ID 的映射表怎么建立，是按照昵称进行分库分表吗，即先查询这个昵称在哪个库哪个表，然后找到 ID，根据 ID 所在的库和表进行查询吗？","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469640,"discussion_content":"是的，没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570491833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259854,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/4e/f937748b.jpg","nickname":"小小程序猿","note":"","ucode":"DCE81131B24285","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219965,"discussion_content":"不应该是根据id分表分库吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585828814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595467,"avatar":"https://static001.geekbang.org/account/avatar/00/18/58/4b/8b044dd3.jpg","nickname":"和光同尘","note":"","ucode":"A3195757E45CD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72979,"discussion_content":"老师,这样的场景多了的话 就需要维护很多的中间表,我们也有这样的需求,现在评审卡在这,请问有更好的方案吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575546788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1242340,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f4/e4/e7f7ca92.jpg","nickname":"林绍灏","note":"","ucode":"AA2CB00DB0C97C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1595467,"avatar":"https://static001.geekbang.org/account/avatar/00/18/58/4b/8b044dd3.jpg","nickname":"和光同尘","note":"","ucode":"A3195757E45CD5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291190,"discussion_content":"可以用Es来做这个映射的工作","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1594727887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":72979,"ip_address":""},"score":291190,"extra":""}]},{"author":{"id":1323868,"avatar":"https://static001.geekbang.org/account/avatar/00/14/33/5c/8c0a372a.jpg","nickname":"Fourty Seven","note":"","ucode":"DD213225842F68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40514,"discussion_content":"关系表就两列数据不用分库分表也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572228199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141412,"user_name":"深深的人","can_delete":false,"product_type":"c1","uid":1010362,"ip_address":"","ucode":"415DD0A53CC15D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/ba/5788408e.jpg","comment_is_top":false,"comment_ctime":1571149209,"is_pvip":false,"replies":[{"id":"54640","content":"可以考虑用es","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571184014,"ip_address":"","comment_id":141412,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27340952985","product_id":100035801,"comment_content":"老师查询conut怎么做冗余，那种有where条件的","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470744,"discussion_content":"可以考虑用es","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571184014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138934,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1570512683,"is_pvip":false,"replies":[{"id":"53801","content":"1. 是对昵称做hash，登陆的时候不需要知道昵称呀，可以针对手机号做hash，昵称是用来判断昵称是否存在<br>2. 不太清楚数据冗余 + 新的分区表的意思，是增加新的分区表吗？那么就要改分库分表的规则，那这样原先的数据就读不到了？是要做数据迁移？<br>3. 是需要一步步迭代，这里是说这些库表是足够了，如果业务没有那么大数据量，可以按照业务来<br>4. 计数是最终一致就好了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570671088,"ip_address":"","comment_id":138934,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27340316459","product_id":100035801,"comment_content":"感谢老师分享，对于分表有点疑问：<br>1.如果是用户信息表需要分表，数据量大的前提下，需要准备一个映射表来存储昵称+uid的对应关系，文中提到了映射表也可以做分库分表，基本的思路是什么？用户在做登录相关操作的时候，都不知道昵称+uid的映射关系在哪张表中，难道是通过昵称算出hash值来确定分区键？<br>2.如果hash分表的策略又达到了瓶颈，需要更多的容量呢？基于对业务影响最小的方案是采用数据冗余+新的分区表还是重建分表规则做数据迁移？这一部分没有讲到哦，后面能否专门讲解下，一般应该是前者吧，因为后者在数据量大的情况下做一次数据迁移成本太高了？<br>3.对于文中提到的，16个库每个库中64张表，1024个张表，这个分表策略的理由是什么？个人感觉这个分表规则显得有些太浮夸了，因为有些业务压根用不到这么多表，甚至有时候分表操作是分表策略（局部分表）+当前模式（局部不分表）公用的方式来协调的，一步一步迭代过来的？不是很理解文中提到的这个策略的容量是如何计算出来的？如果数据量压根用不到这么多表，数据过于分散，对于管理和维护成本来讲有点小题大做了吧？<br><br>另外有一点，文中提到的总计数的问题，用redis存储的前提是当前的业务逻辑不是敏感的，用redis可以提升性能，如果是敏感业务的话，在更新数据库后还没有写入redis中的这个时间差，请求并发没办法估量和控制，所以最后的数据总量仅仅是最终的数据是一致的，但是逻辑是不一致的，核心原因是redis和mysql是属于不同的存储系统，无法做到两个系统公共支持一个分布式事物，无法拿到精确一致的视图，当然如果是非敏感业务，在保证性能的前提下，逻辑不一致可以容忍的话是可以考虑这种方案的。","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469706,"discussion_content":"1. 是对昵称做hash，登陆的时候不需要知道昵称呀，可以针对手机号做hash，昵称是用来判断昵称是否存在\n2. 不太清楚数据冗余 + 新的分区表的意思，是增加新的分区表吗？那么就要改分库分表的规则，那这样原先的数据就读不到了？是要做数据迁移？\n3. 是需要一步步迭代，这里是说这些库表是足够了，如果业务没有那么大数据量，可以按照业务来\n4. 计数是最终一致就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570671088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360176,"discussion_content":"为什么说, 登陆的时候不需要知道昵称呀, 有些系统就是支持昵称, 或者说用户名 + 密码进行登录呀? 这时候不应该是对昵称或者用户名做hash, 找到uid分区键, 然后根据分区键去查询用户信息, 进行登录验证吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616382618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221825,"user_name":"Sam_Deep_Thinking","can_delete":false,"product_type":"c1","uid":1001152,"ip_address":"","ucode":"8E4EF6F24B821B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/c0/bf880bda.jpg","comment_is_top":false,"comment_ctime":1590596849,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"23065433329","product_id":100035801,"comment_content":"我觉得分库和分表要单独分开来讲。要分库，是因为并发写压力太大，不得不分，这个时候分表是没任何作用的，单个数据库实例瓶颈就在那。而分表，在数据量大，而并发写压力不高时，就很合适，也没必要分库。<br><br>另外比较赞同的是，尽量不分库分表，实在没办法才做这一步，部分情况下，做数据归档也是可以的。","like_count":5,"discussions":[{"author":{"id":1755152,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","nickname":"Info_E","note":"","ucode":"97207B2CC4C776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590505,"discussion_content":"分库也不一定是因为读写压力大，还有主要是垂直划分，业务区分，专库专用，数据隔离，同时解决单机访问压力大的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665826294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139505,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1570670091,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23045506571","product_id":100035801,"comment_content":"老师能详细介绍一下分区和分片技术吗？","like_count":5,"discussions":[{"author":{"id":1755152,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","nickname":"Info_E","note":"","ucode":"97207B2CC4C776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590504,"discussion_content":"这还不够详细吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665826018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138768,"user_name":"Corner","can_delete":false,"product_type":"c1","uid":1446316,"ip_address":"","ucode":"7862D593172536","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/ac/9cc5e692.jpg","comment_is_top":false,"comment_ctime":1570444323,"is_pvip":false,"replies":[{"id":"53452","content":"直接取余也好，只是怕ID会不均匀","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570491870,"ip_address":"","comment_id":138768,"utype":1}],"discussion_count":6,"race_medal":0,"score":"23045280803","product_id":100035801,"comment_content":"请教老师，为什么id要先做hash再做取余计算分库位置呢？直接用id取余不可以吗？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469639,"discussion_content":"直接取余也好，只是怕ID会不均匀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570491870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350425,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/19/41dbba8c.jpg","nickname":"破晓","note":"","ucode":"1162E00FF08DF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371499,"discussion_content":"id有些是数字有些是字符串类型，id有些是递增，也有不递增的，hash计算可以做到兼容这些情况，还有分布均匀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619794198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1296063,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c6/bf/52b3f71d.jpg","nickname":"dawn","note":"","ucode":"1757B28F1EF5C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272250,"discussion_content":"id基本都是递增的，怎么会不均匀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590276379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1696370,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e2/72/f5f43053.jpg","nickname":"菜七岁","note":"","ucode":"3C7DEE40595BC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1296063,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c6/bf/52b3f71d.jpg","nickname":"dawn","note":"","ucode":"1757B28F1EF5C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294808,"discussion_content":"应该是数据有冷热之分的原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596005946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":272250,"ip_address":""},"score":294808,"extra":""},{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1296063,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c6/bf/52b3f71d.jpg","nickname":"dawn","note":"","ucode":"1757B28F1EF5C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302228,"discussion_content":"不一定都是递增的哦，有的是自己生成的uuid，根据时间戳+随机数。hash的结果是离散的，可以保证随机性。\n因为有一些记录的key要保证整个系统的全局唯一性，所以有可能不是使用递增索引的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598852470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":272250,"ip_address":""},"score":302228,"extra":""},{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1296063,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c6/bf/52b3f71d.jpg","nickname":"dawn","note":"","ucode":"1757B28F1EF5C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330750,"discussion_content":"一般微服务都有统一的分布式id服务，所有服务统一从该发号器获取id，所以到业务层只能保证获取到的id在时序上是递增的，但是连续性是随机的，所以对id先做一次哈希非常非常有必要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606704276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":272250,"ip_address":""},"score":330750,"extra":""}]}]},{"had_liked":false,"id":139456,"user_name":"黑暗浪子","can_delete":false,"product_type":"c1","uid":1014691,"ip_address":"","ucode":"FBB8C24EBEC5BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/a3/82b2a73e.jpg","comment_is_top":false,"comment_ctime":1570650665,"is_pvip":true,"replies":[{"id":"53774","content":"如果有运维能力也可","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665071,"ip_address":"","comment_id":139456,"utype":1}],"discussion_count":2,"race_medal":1,"score":"18750519849","product_id":100035801,"comment_content":"这个东西能不用就不用。毕竟很多老系统还有超多join操作，你一开始分库分表，所有代码都要重写。我倒觉得换es，mongodb是个好思路","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469956,"discussion_content":"如果有运维能力也可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048888,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/38/554ece99.jpg","nickname":"厕所看C","note":"","ucode":"344DC9E80F0F9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213555,"discussion_content":"老系统的join感觉本来就是个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585105038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194492,"user_name":"Josey","can_delete":false,"product_type":"c1","uid":1813086,"ip_address":"","ucode":"BA461C259CC64B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/aa/5e/9be28107.jpg","comment_is_top":false,"comment_ctime":1585062727,"is_pvip":false,"replies":[{"id":"75843","content":"要么一次分足够多的表，要么可以采用类似时间范围这样不需要hash得分表方式","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586088983,"ip_address":"","comment_id":194492,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14469964615","product_id":100035801,"comment_content":"老师，我们现在面临一个问题，如果我们在使用某个业务字段哈希之后分了64张表之后，后面又发现分表后性能瓶颈，要把64张表分成128张表，这种操作就需要把原来的哈希规则重制，有什么好的办法解决吗？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488832,"discussion_content":"要么一次分足够多的表，要么可以采用类似时间范围这样不需要hash得分表方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586088983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330751,"discussion_content":"提供一个思路：哈希环，迁移数据只需要迁移部分节点数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606704339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364262,"discussion_content":"都得事前设计，例如hash slot","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617425977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":330751,"ip_address":""},"score":364262,"extra":""}]}]},{"had_liked":false,"id":173513,"user_name":"张珂","can_delete":false,"product_type":"c1","uid":1249512,"ip_address":"","ucode":"E0AFA940BEAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/e8/172b5915.jpg","comment_is_top":false,"comment_ctime":1579585878,"is_pvip":false,"replies":[{"id":"67357","content":"👍能解决问题就好","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579694771,"ip_address":"","comment_id":173513,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14464487766","product_id":100035801,"comment_content":"老师好，我这辈子做过的最大系统，不仅仅用上分库分表和读写分离了。很简单就是在100个MySQL，每个MySQL有100个表，这样根据id后四位就可以定位到它应该放在哪个MySQL和哪个表。但是因为每天可能有20亿的事务量，长此以往的数据积累，单表超过2000万时增改查性能都急剧下降，而且还有大数据团队要从这里导数据出去，低峰时还要删数据。那么我们就在时间纬度上也做了“分库分表”的思想：这一套分库分表乘以31，每天一套表来做日切，于是避免了单表过大，线上导数据风险大的问题，但业务上只能实时查询的31天内的数据，就是成本好大运维压力挺大。","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482092,"discussion_content":"👍能解决问题就好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579694771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377567,"discussion_content":"直接用newSql吧，tidb、polardb...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622711643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138973,"user_name":"xu晓晨","can_delete":false,"product_type":"c1","uid":1513945,"ip_address":"","ucode":"EE0374EB48FBDC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoTDBX4a5u3Oc0zDpKDp6UbcYDcwAJXfBSmicqQwoyxaoVLEWzjIoUqYBiaDJHAYkO8icLtXqk4ibqKg/132","comment_is_top":false,"comment_ctime":1570521171,"is_pvip":false,"replies":[{"id":"53638","content":"一致性hash解决不了这个问题，如果要增加库的话，只能重新分配，所以会比较麻烦","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570582922,"ip_address":"","comment_id":138973,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14455423059","product_id":100035801,"comment_content":"如果分库分表后 又增加了一个库来存储。那么原来的数据岂不是都不能用了？所有的数据再需要重新的分一遍吗？<br>据说一致性hash能解决这问题？老师可以具体说说吗","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469720,"discussion_content":"一致性hash解决不了这个问题，如果要增加库的话，只能重新分配，所以会比较麻烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179537,"discussion_content":"一致性哈希只能部分解决","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582217516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132661,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","nickname":"乘坐Tornado的线程魔法师","note":"","ucode":"C4C9915866E769","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51101,"discussion_content":"经过调研，发现一致性hash可以应用在分库分表并涉及到数据迁移的场景中。除此之外，一致性hash一般应用在分布式缓存对session的分布式存储。请查证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573811104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219667,"user_name":"红鲤鱼与绿鲤鱼与驴baci","can_delete":false,"product_type":"c1","uid":1199902,"ip_address":"","ucode":"CB7D8A522D665E","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/1e/cb8ddbe9.jpg","comment_is_top":false,"comment_ctime":1590060466,"is_pvip":false,"replies":[{"id":"83115","content":"uid可以用发号器生成，然后就可以根据uid知道写哪一个库了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591803092,"ip_address":"","comment_id":219667,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10179995058","product_id":100035801,"comment_content":"老师关于分表的问题，比如您文章中说的 用户分表  根据uid 进行hash运算，分了一共16个库（0-15）我要获取某个用户的信息 ，可以根据uid 进行hash运算 找到对应的用户表，这个能理解，但是在添加的时候呢？ 分了16个库，来一个注册用户，这时候这个用户的注册数据应该怎么进行hash计算，让用户数据写入到对应的分库中？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495897,"discussion_content":"uid可以用发号器生成，然后就可以根据uid知道写哪一个库了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591803092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212426,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1588122308,"is_pvip":false,"replies":[{"id":"83123","content":"一般会同步到一个非分库分表的存储中，比如elasticsearch，或者单个mysql，因为后台的请求量不大，所以还好","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591803832,"ip_address":"","comment_id":212426,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10178056900","product_id":100035801,"comment_content":"老师，你好！<br>订单表分库分表之后，像后台 OA 系统，带查询条件订单分页列表，带查询条件count 订单数量，这些需求该如何实现吖？<br>","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493501,"discussion_content":"一般会同步到一个非分库分表的存储中，比如elasticsearch，或者单个mysql，因为后台的请求量不大，所以还好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591803832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330753,"discussion_content":"一般会统一导入到es或者hbase里面去做张宽表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606704411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158779,"user_name":"M","can_delete":false,"product_type":"c1","uid":1437769,"ip_address":"","ucode":"1A756D9AFCEB48","user_header":"https://static001.geekbang.org/account/avatar/00/15/f0/49/889f9ef6.jpg","comment_is_top":false,"comment_ctime":1575449837,"is_pvip":false,"replies":[{"id":"61442","content":"额，尽量不做连表，互联网业务比较简单，一般可以查出数据后，在内存中关联","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576132388,"ip_address":"","comment_id":158779,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10165384429","product_id":100035801,"comment_content":"麻烦请教下老师，项目中单表百万级的多表联查怎么做优化呢？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476844,"discussion_content":"额，尽量不做连表，互联网业务比较简单，一般可以查出数据后，在内存中关联","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576132388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437769,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/49/889f9ef6.jpg","nickname":"M","note":"","ucode":"1A756D9AFCEB48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81078,"discussion_content":"感谢老师的回复，上层业务逻辑去避免这个问题。如果一定有这种操作，是不是只能从索引优化方面考虑解决呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576218708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144415,"user_name":"zk_207","can_delete":false,"product_type":"c1","uid":1183552,"ip_address":"","ucode":"196D92ECC8540D","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/40/e838871e.jpg","comment_is_top":false,"comment_ctime":1571917371,"is_pvip":false,"replies":[{"id":"55691","content":"马上就有啦：）","user_name":"作者回复","comment_id":144415,"uid":"1448977","ip_address":"","utype":1,"ctime":1571960098,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10161851963","product_id":100035801,"comment_content":"扬哥，后续可以开一期讲一下线上数据迁移的专题吗？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471927,"discussion_content":"马上就有啦：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571960098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142396,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1571363055,"is_pvip":false,"replies":[{"id":"55097","content":"我归在了用户中心","user_name":"作者回复","comment_id":142396,"uid":"1448977","ip_address":"","utype":1,"ctime":1571453992,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10161297647","product_id":100035801,"comment_content":"老师，今天回来提个问题：在垂直拆分各个业务到不同的库和中心后，以前的那种rel关系表，到底应该归为哪个中心呢？望解答，困惑了我很久，谢谢！","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471104,"discussion_content":"我归在了用户中心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571453992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140243,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1570861622,"is_pvip":false,"replies":[{"id":"54305","content":"1. 确实是需要的，不过一般的面向用户的业务不会有这么多维度的查询，如果需要的话，可以使用nosql数据库，比如说es<br>2. 是这样的，不过不需要分布式事务，只要保证最终一致性就好了","user_name":"作者回复","comment_id":140243,"uid":"1448977","ip_address":"","utype":1,"ctime":1570970780,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10160796214","product_id":100035801,"comment_content":"老师好<br>分区表采用hash（ID）取余方式，如果要通过昵称查询昵称就建立昵称+id两列的分区表。<br>问题：<br>1、那要是按照用户所属城市查询呢，按照年龄查询呢，按照电话、邮箱查询呢。每个查询都要建立一张两列的分区表吗？<br>2、如果用户修改昵称怎么办？既要更新昵称+id两列的分区表，又要更新hash Id的分区表<br>    更新昵称+id两列的分区表：<br>     1）昵称hash后分配到和原来同一个库的同一个表：直接修改<br>     2）昵称hash后分配到和原来同一个库的不同表：删除在修改，放在一个事务里面<br>     3）昵称hash后分配到和原来不同的库不同的表：删除修改，分布式事务<br>    更新hash Id的分区表：直接更新就行了。<br>  感觉这是不是太复杂了，或者代价太大了？有其他更优的方式吗？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470313,"discussion_content":"1. 确实是需要的，不过一般的面向用户的业务不会有这么多维度的查询，如果需要的话，可以使用nosql数据库，比如说es\n2. 是这样的，不过不需要分布式事务，只要保证最终一致性就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570970780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140063,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1570800036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10160734628","product_id":100035801,"comment_content":"打卡。老师，我一直以为“垂直”分表，是把一张大宽表，选出其中一些“列”，来化为新表😢 另外，在Oracle中的分区Partition索引，它支持多级 Sub Partition，那个它复杂度和存储是不是很恐怖呢😱 ","like_count":2},{"had_liked":false,"id":138809,"user_name":"Toutoublue","can_delete":false,"product_type":"c1","uid":1667307,"ip_address":"","ucode":"C1B1AFC8FBA972","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/eb/34301b40.jpg","comment_is_top":false,"comment_ctime":1570458965,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10160393557","product_id":100035801,"comment_content":"我挺推荐AWS Dynamo DB的，不用我自己部署，原生支持分区（有partition key），还支持分区内排序（有sort key），而且可以用API调用。<br>这个不是广告，纯属个人使用感受。","like_count":2,"discussions":[{"author":{"id":1175430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/86/12f95d66.jpg","nickname":"FATMAN89","note":"","ucode":"48A67FB47B3C5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329174,"discussion_content":"我来自Amazon.com，基本上公司内部绝大部分都用DynamoDB，用rdbms的设计会被驳回，除非能证明你非得用，不用整个业务就跑步来。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606323585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1217501,"avatar":"https://static001.geekbang.org/account/avatar/00/12/93/dd/af390796.jpg","nickname":"guangbao","note":"","ucode":"7042F2BEAC871F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1175430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/86/12f95d66.jpg","nickname":"FATMAN89","note":"","ucode":"48A67FB47B3C5D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343202,"discussion_content":"亚马逊内部还这样？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610966643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329174,"ip_address":""},"score":343202,"extra":""}]},{"author":{"id":1119851,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/6b/af7c7745.jpg","nickname":"tiny🌾","note":"","ucode":"7A4DE00381D1F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33495,"discussion_content":"我们也用于海外业务，缺点是贵啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571129382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233778,"user_name":"易轻尘","can_delete":false,"product_type":"c1","uid":1136684,"ip_address":"","ucode":"0D0CB9D6D45A70","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","comment_is_top":false,"comment_ctime":1594446889,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5889414185","product_id":100035801,"comment_content":"现在很多上云数据库都会采用数据sharding的方式，将不同的key区间分散到不同的主机、机架甚至是数据中心中。sharding不仅能够减轻单机的负担，也能通过将shard复制同时存储在多个主机上提高可用性（这个思想很像RAID)。知道的产品有TiDB、阿里的Tair等等","like_count":1},{"had_liked":false,"id":213909,"user_name":"Realz","can_delete":false,"product_type":"c1","uid":1987948,"ip_address":"","ucode":"0A9179FB8CF039","user_header":"","comment_is_top":false,"comment_ctime":1588588627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883555923","product_id":100035801,"comment_content":"老师，有个问题想请教一下：<br>日常情况下针对用户ID进行分库分表可以很合理的将数据均匀分布在多个库和表中，如果针对2B产品企业id的情况来看，当一张表中存储企业数据超过几千万，其中个别企业数据超过几百万，这样针对企业ID hash 进行分表可能会导致数据产生不均匀分布，极端情况下个别表的数据量会特别大。<br><br>目前的想法是针对个别大数据量的企业ID进行单独分表，其余的企业ID进行随机分表，但是这样的方案不是很通用，所以想请问下有没有什么通用一些的方案？<br>谢谢老师🙏","like_count":1},{"had_liked":false,"id":195482,"user_name":"lofaith","can_delete":false,"product_type":"c1","uid":1322553,"ip_address":"","ucode":"5DF6922BBF1AD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/39/7682b49e.jpg","comment_is_top":false,"comment_ctime":1585191026,"is_pvip":false,"replies":[{"id":"75831","content":"互联网项目基本不会有join","user_name":"作者回复","comment_id":195482,"uid":"1448977","ip_address":"","utype":1,"ctime":1586087851,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5880158322","product_id":100035801,"comment_content":"老师分库分表之后join操作怎么弄，比如用户分表之后，是先查出来用户数据然后循环查询关联的信息吗","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489086,"discussion_content":"互联网项目基本不会有join","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586087851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185742,"user_name":"SuperYue","can_delete":false,"product_type":"c1","uid":1232077,"ip_address":"","ucode":"97DEDA055C462A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","comment_is_top":false,"comment_ctime":1583673546,"is_pvip":false,"replies":[{"id":"72214","content":"所以一般会冗余多一份数据，在这份数据上可以用到你的where语句中使用的条件","user_name":"作者回复","comment_id":185742,"uid":"1448977","ip_address":"","utype":1,"ctime":1584020238,"user_name_real":"唐扬"}],"discussion_count":6,"race_medal":0,"score":"5878640842","product_id":100035801,"comment_content":"hash分片之后where条件是范围分页查询，那不是完蛋了 遍历所有的表做聚合查询这个性能能撑住吗","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486483,"discussion_content":"所以一般会冗余多一份数据，在这份数据上可以用到你的where语句中使用的条件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584020238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1462843,"avatar":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","nickname":"不工","note":"","ucode":"A8725E6D0E1765","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321362,"discussion_content":"多冗余的一份数据也是分库分表的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604569849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1462843,"avatar":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","nickname":"不工","note":"","ucode":"A8725E6D0E1765","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544762,"discussion_content":"如果还是分库分表就跟原来一样了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641700332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":321362,"ip_address":""},"score":544762,"extra":""}]},{"author":{"id":1179453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/3d/b24e44aa.jpg","nickname":"Cactus","note":"","ucode":"0A64D13A5B96A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218192,"discussion_content":"好像明白老师的意思了，空间换时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585629681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113737,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","nickname":"xuanyuan","note":"","ucode":"1EC79B9372868F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204979,"discussion_content":"“一般会冗余多一份数据，在这份数据上可以用到你的where语句中使用的条件” 具体是咋操作？ 建立 id 和 where 条件映射关系表么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584244153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1990288,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/5e/90/6ab53210.jpg","nickname":"付威","note":"","ucode":"7C0E9724647F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1113737,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","nickname":"xuanyuan","note":"","ucode":"1EC79B9372868F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267253,"discussion_content":"其实就是做一份汇总表，应对运营后台这种常见的范围查询，聚合操作等。数据汇总的方式也有好几种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589620346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":204979,"ip_address":""},"score":267253,"extra":""}]}]},{"had_liked":false,"id":182272,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1582754650,"is_pvip":false,"replies":[{"id":"71096","content":"mysql更成熟，会的人多，好招人：）","user_name":"作者回复","comment_id":182272,"uid":"1448977","ip_address":"","utype":1,"ctime":1583115029,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5877721946","product_id":100035801,"comment_content":"老师可以讲一下为什么互联网公司都用mysql而少用pg吗？不都是开源软件么？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485281,"discussion_content":"mysql更成熟，会的人多，好招人：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182271,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1582754536,"is_pvip":false,"replies":[{"id":"71097","content":"不是的，是按照昵称来分库分表，昵称可以计算一个base64的值来存储","user_name":"作者回复","comment_id":182271,"uid":"1448977","ip_address":"","utype":1,"ctime":1583115084,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5877721832","product_id":100035801,"comment_content":"你要建立一个昵称和 ID 的映射表，在查询的时候要先通过昵称查询到 ID，再通过 ID 查询完整的数据，这个表也可以是分库分表的，也需要占用一定的存储空间，但是因为表中只有两个字段，所以相比重新做一次拆分还是会节省不少的空间的。~~~~~~因为查询语句的where是用昵称做条件的，老师可以讲一下如何设计昵称和用户ID的关系表吗？这个关系表也做了分库分表之后，是要查询所有的表才能获得昵称和ID的关系吗？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485280,"discussion_content":"不是的，是按照昵称来分库分表，昵称可以计算一个base64的值来存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174234,"user_name":"排骨","can_delete":false,"product_type":"c1","uid":1216484,"ip_address":"","ucode":"471D3A9D72AA63","user_header":"https://static001.geekbang.org/account/avatar/00/12/8f/e4/7e1eff62.jpg","comment_is_top":false,"comment_ctime":1580102571,"is_pvip":false,"replies":[{"id":"68366","content":"嗯 两种都是垂直拆分的方式","user_name":"作者回复","comment_id":174234,"uid":"1448977","ip_address":"","utype":1,"ctime":1580873314,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5875069867","product_id":100035801,"comment_content":"垂直分的含义是：一个库里的多个表分散到多个库里？<br>垂直分不是指：把某些特定的列划分到特定的分区，减少表的宽度，每个分区都保存了其中列所在的行。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482343,"discussion_content":"嗯 两种都是垂直拆分的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580873314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153077,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1574154050,"is_pvip":false,"replies":[{"id":"59021","content":"这样也可以的","user_name":"作者回复","comment_id":153077,"uid":"1448977","ip_address":"","utype":1,"ctime":1574294518,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5869121346","product_id":100035801,"comment_content":"Redis也是通过数据分片来解决水平扩展的。对于用户昵称查询，总数啥的，可以直接load到ES中吗？然后查询时直接查询ES就可以了？这种方案会不会有什么问题？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475034,"discussion_content":"这样也可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143573,"user_name":"腿毛王","can_delete":false,"product_type":"c1","uid":1667286,"ip_address":"","ucode":"04CB656F4BD54B","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/d6/d7d47a26.jpg","comment_is_top":false,"comment_ctime":1571735775,"is_pvip":false,"replies":[{"id":"55499","content":"1.可以使用消息队列削峰填谷，或者使用nosql存储<br>2. 可以用发号器","user_name":"作者回复","comment_id":143573,"uid":"1448977","ip_address":"","utype":1,"ctime":1571792902,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5866703071","product_id":100035801,"comment_content":"大神，请教你两个问题：<br>1、数据库单行并发更新到达瓶颈后怎么继续提升性能？（已经无法水平或者垂直拆分了）<br>2、我们通常用把一个业务编号设置为UK来保证数据唯一，分库之后这个方法无法解决这个问题，请问如何区分上游的重复请求？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471600,"discussion_content":"1.可以使用消息队列削峰填谷，或者使用nosql存储\n2. 可以用发号器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571792902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143461,"user_name":"Richeir","can_delete":false,"product_type":"c1","uid":1005500,"ip_address":"","ucode":"1D58234F917724","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/bc/cd0761ff.jpg","comment_is_top":false,"comment_ctime":1571712567,"is_pvip":true,"replies":[{"id":"55492","content":"如果需要按照别的字段分页查询就需要冗余存储一份了","user_name":"作者回复","comment_id":143461,"uid":"1448977","ip_address":"","utype":1,"ctime":1571792588,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"5866679863","product_id":100035801,"comment_content":"老师，如果水平分表是按照用户Id分的，如何进行分页查询呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471550,"discussion_content":"如果需要按照别的字段分页查询就需要冗余存储一份了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571792588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005500,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/bc/cd0761ff.jpg","nickname":"Richeir","note":"","ucode":"1D58234F917724","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39997,"discussion_content":"谢谢老师解答😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572055401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142878,"user_name":"天天向善","can_delete":false,"product_type":"c1","uid":1108250,"ip_address":"","ucode":"6AE57FB2B15043","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/1a/6ba207a3.jpg","comment_is_top":false,"comment_ctime":1571573162,"is_pvip":true,"replies":[{"id":"55195","content":"1. 如果要根据这么多字段来查询的话，还是用es吧<br>2. 是的呀，文中也是这么讲述的<br>3. 这个一般不会用在线的表来统计，最好是使用hive这种数据仓库来统计","user_name":"作者回复","comment_id":142878,"uid":"1448977","ip_address":"","utype":1,"ctime":1571577886,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5866540458","product_id":100035801,"comment_content":"用户表按手机号分库分表后，1多个字段查询，如用户名，昵称，注册时间，性别，手机号，邮箱等条件分页查询，应该怎么建中间映射表？还是用es？2可以根据用户名与手机号登录，是不是要加一个用户名与用户id映射表，根据用户名分库分表？3统计每天的新增用户，是用es还是有其它建表方案？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471307,"discussion_content":"1. 如果要根据这么多字段来查询的话，还是用es吧\n2. 是的呀，文中也是这么讲述的\n3. 这个一般不会用在线的表来统计，最好是使用hive这种数据仓库来统计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571577886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142467,"user_name":"fdconan","can_delete":false,"product_type":"c1","uid":1244596,"ip_address":"","ucode":"01C71C6E9FD1E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLv9HJIW4OACkjlwOQJ9cU7HzvaDFYkACWCib2lzOMef9ZiaGDTVFqjPicpVK5KDRbBRVGGHrMHQO1Rw/132","comment_is_top":false,"comment_ctime":1571374216,"is_pvip":false,"replies":[{"id":"55091","content":"需要容量的评估","user_name":"作者回复","comment_id":142467,"uid":"1448977","ip_address":"","utype":1,"ctime":1571453809,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5866341512","product_id":100035801,"comment_content":"2. 如果要做，就尽量一次到位，比如说 16 库，每个库 64 表就基本能够满足为了几年内你的业务的需求。想问下老师，如果几年后，分库分表后存储量依然很大，到了瓶颈，那么就需要再进行一次分库分表么？感觉一步到位是比较难的。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471138,"discussion_content":"需要容量的评估","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571453809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138643,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1570405206,"is_pvip":false,"replies":[{"id":"53456","content":"如果对nosql数据库比较熟悉的话，可以利用它的扩展性的","user_name":"作者回复","comment_id":138643,"uid":"1448977","ip_address":"","utype":1,"ctime":1570491987,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"5865372502","product_id":100035801,"comment_content":"老师现在nosql替代关系型数据库还不成熟吗，分库分表是解决了一些问题，但维护起来也是比较麻烦的","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469604,"discussion_content":"如果对nosql数据库比较熟悉的话，可以利用它的扩展性的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570491987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132661,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","nickname":"乘坐Tornado的线程魔法师","note":"","ucode":"C4C9915866E769","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51093,"discussion_content":"MongoDB 4.2版本已经支持了分布式事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573810082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359878,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLDuUeF7u9lAY3qmfKSfDBQzCJuveFVyIGE7D1PEI8ZQ1kTScwvRdruYHff0zpEnJWlsYicLlWGvcTg/132","nickname":"小虎","note":"","ucode":"66CCAB2C757B3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27563,"discussion_content":"大大降低和分散后期的关系型数据存储容量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570667524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359878,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLDuUeF7u9lAY3qmfKSfDBQzCJuveFVyIGE7D1PEI8ZQ1kTScwvRdruYHff0zpEnJWlsYicLlWGvcTg/132","nickname":"小虎","note":"","ucode":"66CCAB2C757B3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27562,"discussion_content":"建议能用nosql的地方就先用，遇到强结构化数据再放关系型数据库。这样会从前期大大降低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570667471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360484,"user_name":"zhengyu.nie","can_delete":false,"product_type":"c1","uid":1541669,"ip_address":"浙江","ucode":"FFE0377D323E46","user_header":"https://static001.geekbang.org/account/avatar/00/17/86/25/25ded6c3.jpg","comment_is_top":false,"comment_ctime":1666596147,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1666596147","product_id":100035801,"comment_content":"&quot;在 4 核 8G 的云服务器上对 MySQL 5.7 做 Benchmark，大概可以支撑 500TPS 和 10000QPS&quot;<br>-------------------------------------------------------------------------<br><br>老师你好，结合数据库这几节，请教一下我们平时评估mysql容量的时候，考虑因素应该是哪些呢？<br><br>我理解：<br>1. 连接池参数根据 qps * 单次持有时间 ，默认一般是6-10。<br>如qps是3000，单次执行1ms ，那么就是3000 * 0.001 = 3 个连接就够了<br>个人结论是：1万以下并发没有必要拆库，连接池配置一般druid等中间件默认配置6-10，不改也基本上能用。<br><br>2.拆分表的话，根据单表容量不超过1000万来设计，比如预期5年内会超过1000万一张表的时候，再去拆，拆就彻底一些，拆成128张。<br><br>3.拆库的话，如果连接扛不住再拆库，比如有几万的qps，否则1万以下的qps读写分离方案就够用了，没有必要拆几个库出来。<br><br>如有不对请指正","like_count":0},{"had_liked":false,"id":345982,"user_name":"沐","can_delete":false,"product_type":"c1","uid":1326537,"ip_address":"","ucode":"678F6A0C778CDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/c9/a1e6a307.jpg","comment_is_top":false,"comment_ctime":1652750403,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1652750403","product_id":100035801,"comment_content":"我们目前首先是归档六个月前的订单数据，数据库中只存储六个月内的数据。<br>因为系统数据量大，但并发压力不是特别大，所以只采用了分表、没有分库。","like_count":0},{"had_liked":false,"id":340124,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1648614938,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648614938","product_id":100035801,"comment_content":"分库后数据倾斜怎么处理？","like_count":0},{"had_liked":false,"id":328734,"user_name":"立豪同学13","can_delete":false,"product_type":"c1","uid":2311234,"ip_address":"","ucode":"27E00822E81477","user_header":"","comment_is_top":false,"comment_ctime":1640855075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640855075","product_id":100035801,"comment_content":"针对老师说的直播项目。如果是我的话，我会针对并发写的压力对数据库进行分库；对于单表的普通查询慢的问题，会把数据同步到ES查询（若数据量到达TB级别，可以把ES换成HDFS，比如HBase）；最后如果单表事务查询慢的问题，才会考虑分表操作，原因是分表对于业务的侵入性过大，并且要结合业务特性做好分表策略，改造难度大，并且降低SQL查询的灵活性，所以不到万不得已就不会考虑分表。","like_count":0},{"had_liked":false,"id":322042,"user_name":"LFD","can_delete":false,"product_type":"c1","uid":2842496,"ip_address":"","ucode":"0E0AB7D92004A5","user_header":"https://static001.geekbang.org/account/avatar/00/2b/5f/80/963a32f9.jpg","comment_is_top":false,"comment_ctime":1637147066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637147066","product_id":100035801,"comment_content":"老师您好，分库分表操作的前提应该还是要保证数据的一致性吧。根据业务分库可以通过对不同业务创建独立的数据集群的方式保证读写性能同时也能减少单台服务器数据存储的硬盘压力。对于热点操作，数据量大的表，采用分表的方式。但是上述两种策略应该都是保证一个集群下，数据库一致性的前提。","like_count":0},{"had_liked":false,"id":317430,"user_name":"董俊俊","can_delete":false,"product_type":"c1","uid":1297887,"ip_address":"","ucode":"732300A779660B","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","comment_is_top":false,"comment_ctime":1634795707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634795707","product_id":100035801,"comment_content":"分库分表后，就不能用数据库的事务了，那像下单支付等需要事务的场景怎么办？","like_count":0},{"had_liked":false,"id":317424,"user_name":"董俊俊","can_delete":false,"product_type":"c1","uid":1297887,"ip_address":"","ucode":"732300A779660B","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","comment_is_top":false,"comment_ctime":1634793422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634793422","product_id":100035801,"comment_content":"对表id取模，分库分表后，数据被打散到各个表中，那列表数据如何获取？","like_count":0},{"had_liked":false,"id":316887,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1634605877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634605877","product_id":100035801,"comment_content":"如果是全文搜索场景，还是用户大ES来拯救MySQL，分库分表复杂度有点高","like_count":0},{"had_liked":false,"id":302314,"user_name":"belief","can_delete":false,"product_type":"c1","uid":1765541,"ip_address":"","ucode":"563EDA9F2C9214","user_header":"https://static001.geekbang.org/account/avatar/00/1a/f0/a5/ff758400.jpg","comment_is_top":false,"comment_ctime":1626163803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626163803","product_id":100035801,"comment_content":"有一个疑问，用户表分表后，按照用户名称查找用户id，数据应该怎样检索","like_count":0},{"had_liked":false,"id":302142,"user_name":"昭宣","can_delete":false,"product_type":"c1","uid":2559343,"ip_address":"","ucode":"A9DDB92E318090","user_header":"https://static001.geekbang.org/account/avatar/00/27/0d/6f/fdd351b6.jpg","comment_is_top":false,"comment_ctime":1626096648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626096648","product_id":100035801,"comment_content":"将计数的数据存在一张表或者redis中我有点异议。由于MVCC的原因,不同的人看到的数据条数可能是不同的，这也是为什么innodb中不存储数据总数，而是每次都扫描计数。如果对count()值要求不是很严格，是可以用的。","like_count":0},{"had_liked":false,"id":300074,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1624975124,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1624975124","product_id":100035801,"comment_content":"<br>垂直拆分：专库专用。<br>水平拆分规则：<br>1. 按照某一个字段的哈希值做拆分，这种拆分规则比较适用于实体表。<br>2. 另一种比较常用的是按照某一个字段的区间来拆分，比较常用的是时间字段。<br><br>问题：<br>分库分表引入的一.的问题。<br>1.引入了分库分表键，也叫做分区键。解决方案：映射表。<br>问题2一些数据库的特性在实现时可能变得很困难。join的替代方案：内存中处理，count的替代方案：Redis缓存。","like_count":0},{"had_liked":false,"id":297353,"user_name":"Mr.white","can_delete":false,"product_type":"c1","uid":1275593,"ip_address":"","ucode":"B7243541968B74","user_header":"https://static001.geekbang.org/account/avatar/00/13/76/c9/3ccb5263.jpg","comment_is_top":false,"comment_ctime":1623472988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623472988","product_id":100035801,"comment_content":"请问 昵称和user_id也分库分表后 不就又进入了需要多次查询的循环了么? 没有理解这一块","like_count":0},{"had_liked":false,"id":264063,"user_name":"FATMAN89","can_delete":false,"product_type":"c1","uid":1175430,"ip_address":"","ucode":"48A67FB47B3C5D","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/86/12f95d66.jpg","comment_is_top":false,"comment_ctime":1606323479,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606323479","product_id":100035801,"comment_content":"老师写的非常好，我所在的公司Amazon.com，根据我所了解的情况，在大多数组，尤其包括retail和AWS，基本上是能不用关系型数据库就不用，所以近几年来基本上大大小小的系统都从RDBMS迁移到了自己开发的DynamoDB上，但应该还有由于历史原因还未迁移的rdbms系统存在。因为在数据非常大的时候，需要使用者对rdbms的掌握成度要求非常高，schema要建设的非常好，稍有不慎很容易产生outage。","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364268,"discussion_content":"这是否意味着NoSQL代替了RDBMS？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617427328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257508,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1244248,"ip_address":"","ucode":"86A78303C9AB9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/58/90b7b363.jpg","comment_is_top":false,"comment_ctime":1604017620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604017620","product_id":100035801,"comment_content":"一个业务的库还要分0到16个库吗，这里的库是在多个db实例里，还是一个db实例","like_count":0},{"had_liked":false,"id":253201,"user_name":"聪","can_delete":false,"product_type":"c1","uid":1009831,"ip_address":"","ucode":"9D672A8580A945","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","comment_is_top":false,"comment_ctime":1602648319,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602648319","product_id":100035801,"comment_content":"按照业务部门去分库不行吗？要求每个组的表相互之间没有联系。比如大的系统就设计成event driven，用kafka做消息传递。这样让每个子系统的业务分开，处理的业务分开，每个业务就管自己的数据。","like_count":0},{"had_liked":false,"id":247533,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1599733599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599733599","product_id":100035801,"comment_content":"水平拆分以后，如果查询一批数据，都分在各个表中，这样发出100个请求再合并，那总时间比较长，对外提供服务肯定算慢了，怎样解决呢？","like_count":0},{"had_liked":false,"id":244122,"user_name":"吕坤","can_delete":false,"product_type":"c1","uid":1066533,"ip_address":"","ucode":"439ACE828232CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/25/5cbbbc70.jpg","comment_is_top":false,"comment_ctime":1598405621,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598405621","product_id":100035801,"comment_content":"老师你好，请问针对6亿+的用户余额表，如何做分表及如何做数据迁移？","like_count":0,"discussions":[{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330754,"discussion_content":"文章中提供了清晰的思路：\n1.双写\n2.校验\n3.灰度切读流量\n4.切写流量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606704524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238538,"user_name":"时熵","can_delete":false,"product_type":"c1","uid":1095280,"ip_address":"","ucode":"3CDAE8628117D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/70/33e87a4f.jpg","comment_is_top":false,"comment_ctime":1596191014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596191014","product_id":100035801,"comment_content":"感觉如果交易涉及事务，分库后的处理会更加复杂。或许分布式数据库会是性能提升的最终选择。","like_count":0},{"had_liked":false,"id":207946,"user_name":"yuan","can_delete":false,"product_type":"c1","uid":1207302,"ip_address":"","ucode":"EA3D0573478EC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/06/2ac17d5a.jpg","comment_is_top":false,"comment_ctime":1587220335,"is_pvip":false,"replies":[{"id":"78080","content":"看你的业务和数据库配置，几万应该没问题","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587472749,"ip_address":"","comment_id":207946,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587220335","product_id":100035801,"comment_content":"2. 如果要做，就尽量一次到位，比如说 16 库，每个库 64 表就基本能够满足几年内你的业务的需求。<br><br>——————————————————————<br>16库 64表大概能支撑多少的qps？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492290,"discussion_content":"看你的业务和数据库配置，几万应该没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587472749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204975,"user_name":"啸歌","can_delete":false,"product_type":"c1","uid":1113874,"ip_address":"","ucode":"D8C8963BB940F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2rgam9XfHbuSIZB4S3UG2GLrf9CLkiatDG62eEMicT4yprYdSAZET3kfqQBPxqBHkZw2KRhMdJX4Q/132","comment_is_top":false,"comment_ctime":1586503073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586503073","product_id":100035801,"comment_content":"两点疑问：<br>1、最合适的思路是你要建立一个昵称和 ID 的映射表。这个要先查询一次映射表再根据分库分表键ID去查数据，这样不是多了一次网络IO，和重新做一次拆分还是会节省不少的空间。这两个孰轻孰重呢？<br>2、第二个疑问也是老师最后总结的第三点提到的Hbase，MongoDB。如果是海量数据的话，是不是要区分热点数据放在缓存，常用数据分库分表，历史数据或者冷数据放到HBase呢？","like_count":0},{"had_liked":false,"id":203416,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586186811,"is_pvip":false,"replies":[{"id":"78267","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587623968,"ip_address":"","comment_id":203416,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586186811","product_id":100035801,"comment_content":"😅分库分表核心在于突破单机性能和容量瓶颈，代价是关联表查询基本废啦！查询的时候需要带上分区字段，否则查询只能遍历所有库表，性能好不了。<br>所有，想突破单机性能和容量瓶颈的存储系统，基本没得选，也必须进行“分库分表”，通常会采用哈希或者范围的方式进行数据分片。<br>只分表性能比分库又分表差一些，不过也能解决一些问题吧？而且渐进的方式也是先分表再分库分表吧？<br>这节能引起共鸣，也正好需要，很有借鉴意义。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490857,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587623968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202614,"user_name":"上山砍柴","can_delete":false,"product_type":"c1","uid":1059766,"ip_address":"","ucode":"F85D250C11ED70","user_header":"https://wx.qlogo.cn/mmopen/vi_32/4pFDynicvRnrTTRavia64UAknQjyX3KFfm67W4AZG52wm2TgwL1FWNX1zhIlIVgicPw2jzPqKASAib5nI1QfY6pc2Q/132","comment_is_top":false,"comment_ctime":1586015375,"is_pvip":false,"replies":[{"id":"75835","content":"可以使用消息队列","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586088597,"ip_address":"","comment_id":202614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586015375","product_id":100035801,"comment_content":"老师您好！在高并发的场景下，如何满足数据库的大量写操作呢？能不能先道缓存再写入库中，但是这样又会造成数据丢失的风险，希望老师能够解答","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490632,"discussion_content":"可以使用消息队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586088597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195908,"user_name":"lofaith","can_delete":false,"product_type":"c1","uid":1322553,"ip_address":"","ucode":"5DF6922BBF1AD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/39/7682b49e.jpg","comment_is_top":false,"comment_ctime":1585223398,"is_pvip":false,"replies":[{"id":"75837","content":"复杂的方法是 建立用户名到ID，手机号到id两张表","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586088842,"ip_address":"","comment_id":195908,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585223398","product_id":100035801,"comment_content":"老师，我有个问题，分表之后，我要按照用户名或者手机号去搜索用户，那就需要一张ID 用户名 手机号三个字段的映射表，那这个映射表分表之后我要怎么查询到张三的ID呢，如果用hash(张三)%16的方式确定映射表，那我怎么确定手机号呢，如果手机号也是hash(手机号)%16来确定，那我怎么确定张三的结果和张三手机号的结果是一样的呢，这个多条件的问题没想明白，希望老师能解答一下，谢谢老师","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489188,"discussion_content":"复杂的方法是 建立用户名到ID，手机号到id两张表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586088842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182268,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1582754326,"is_pvip":false,"replies":[{"id":"71098","content":"基本上我会很少涉及事务","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115104,"ip_address":"","comment_id":182268,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582754326","product_id":100035801,"comment_content":"分库分表的场景中，对数据库的日志(redo  undo)的使用有什么要求吗？不用日志，也就是不回滚事务会有什么问题吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485279,"discussion_content":"基本上我会很少涉及事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181377,"user_name":"Michael 🛡YZY","can_delete":false,"product_type":"c1","uid":1186115,"ip_address":"","ucode":"F1D2BF8489A7D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/43/226ca347.jpg","comment_is_top":false,"comment_ctime":1582531631,"is_pvip":false,"replies":[{"id":"71111","content":"后面的课程会有例子","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115466,"ip_address":"","comment_id":181377,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582531631","product_id":100035801,"comment_content":"课程总结的很棒,感谢老师! 同时参考了隔壁课程的分表分库的知识,对此有了一个大致的了解.基于大家的问题, 老师能否用一些实际的例子短平快的给大家分门别类的深入讲解一下具体的做法,这样避免停留在理论上, 而对于生产环境best practice并不熟悉","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484979,"discussion_content":"后面的课程会有例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166782,"user_name":"路人","can_delete":false,"product_type":"c1","uid":1084291,"ip_address":"","ucode":"55FF703DE772D7","user_header":"https://static001.geekbang.org/account/avatar/00/10/8b/83/d2afc837.jpg","comment_is_top":false,"comment_ctime":1577594465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577594465","product_id":100035801,"comment_content":"分库分表中还有一个难点分布式事务，这个老师可以介绍一下么？","like_count":0},{"had_liked":false,"id":165551,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1577258479,"is_pvip":false,"replies":[{"id":"63154","content":"会有几率，可以手动修复","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577275827,"ip_address":"","comment_id":165551,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577258479","product_id":100035801,"comment_content":"用redis记录总数，逻辑上可能会出现不一致","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479201,"discussion_content":"会有几率，可以手动修复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577275827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164566,"user_name":"Geek_4256f6","can_delete":false,"product_type":"c1","uid":1756677,"ip_address":"","ucode":"FC840E0ADF0E4D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITuWWRfVicBTNMCib0FQ50EHPxR4t4KicEW34QgncK6aWnAhUsty05ibNQNk1fbeJCZWXWVcdPu2Sogg/132","comment_is_top":false,"comment_ctime":1577027975,"is_pvip":false,"replies":[{"id":"63057","content":"基于成本考虑，是可以一台机器多个库的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577240624,"ip_address":"","comment_id":164566,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1577027975","product_id":100035801,"comment_content":"老师，分库是一个库对应一台机器吗，  还是一台机器上建多个库","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478817,"discussion_content":"基于成本考虑，是可以一台机器多个库的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577240624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1756677,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITuWWRfVicBTNMCib0FQ50EHPxR4t4KicEW34QgncK6aWnAhUsty05ibNQNk1fbeJCZWXWVcdPu2Sogg/132","nickname":"Geek_4256f6","note":"","ucode":"FC840E0ADF0E4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100187,"discussion_content":"还有点疑问，一台机器多个库的话，那这是不是还是没有达到提升性能的作用呢，  mysql默认并发线程是100，  就算一台机器多个库，他最多还是只能100个线程，","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577241040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161907,"user_name":"李泽文","can_delete":false,"product_type":"c1","uid":1691141,"ip_address":"","ucode":"4E563C6B9618CB","user_header":"https://static001.geekbang.org/account/avatar/00/19/ce/05/4c493ef9.jpg","comment_is_top":false,"comment_ctime":1576398727,"is_pvip":false,"replies":[{"id":"62157","content":"在第11讲中有介绍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576737531,"ip_address":"","comment_id":161907,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576398727","product_id":100035801,"comment_content":"唐老师，很多开源组件都具备分库分表和主从分离的特性，比如mongodb，hbase，elasticsearch，这三个的应用场景各是什么，各有什么优缺点。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477905,"discussion_content":"在第11讲中有介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576737531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154512,"user_name":"深深的人","can_delete":false,"product_type":"c1","uid":1010362,"ip_address":"","ucode":"415DD0A53CC15D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/ba/5788408e.jpg","comment_is_top":false,"comment_ctime":1574472331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574472331","product_id":100035801,"comment_content":"老师，我们是商家的数据放在一起，但是有的商家数据比较多，有的少，哪种hash函数会没有热点问题呢？","like_count":0},{"had_liked":false,"id":152629,"user_name":"好饿早知道送外卖了","can_delete":false,"product_type":"c1","uid":1132304,"ip_address":"","ucode":"AED22DB5BF8FC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","comment_is_top":false,"comment_ctime":1574053419,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1574053419","product_id":100035801,"comment_content":"good","like_count":0},{"had_liked":false,"id":150886,"user_name":"熊胜杰","can_delete":false,"product_type":"c1","uid":1313671,"ip_address":"","ucode":"FC0525781BCD92","user_header":"https://static001.geekbang.org/account/avatar/00/14/0b/87/b9291adb.jpg","comment_is_top":false,"comment_ctime":1573621238,"is_pvip":false,"replies":[{"id":"58446","content":"可以看看加餐，里面有提到","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573867014,"ip_address":"","comment_id":150886,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573621238","product_id":100035801,"comment_content":"如果拆分64个库后，业务发展64不够了，如何不停机动态扩容？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474300,"discussion_content":"可以看看加餐，里面有提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573867014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150018,"user_name":"lanco","can_delete":false,"product_type":"c1","uid":1188352,"ip_address":"","ucode":"C24A0A8716C78C","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/00/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1573445918,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573445918","product_id":100035801,"comment_content":"其实如果数据大到一定程度，感觉到mysql的瓶颈之后，我们也应该考虑这个数据库是否还能满足我们的业务了，毕竟技术也应该随着业务去进步才对","like_count":0},{"had_liked":false,"id":147080,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1572789601,"is_pvip":false,"replies":[{"id":"56855","content":"不可以的，用户的账户数据和内容数据要拆分到不同的库中，这样可以做到模块之间错误的隔离<br><br>事务的话如果万不得已可以用分布式事务，否则一般情况下是不需要关心事务的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572835554,"ip_address":"","comment_id":147080,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572789601","product_id":100035801,"comment_content":"感觉一个模块中所有的都得用同样的颗粒度来划分，从而做到某个用户相关的数据都在同一个库上？不然似乎不好处理事务。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473132,"discussion_content":"不可以的，用户的账户数据和内容数据要拆分到不同的库中，这样可以做到模块之间错误的隔离\n\n事务的话如果万不得已可以用分布式事务，否则一般情况下是不需要关心事务的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572835554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145413,"user_name":"","can_delete":false,"product_type":"c1","uid":1146076,"ip_address":"","ucode":"974CAAC2D3FDCF","user_header":"https://static001.geekbang.org/account/avatar/00/11/7c/dc/0bad8e27.jpg","comment_is_top":false,"comment_ctime":1572268877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572268877","product_id":100035801,"comment_content":"分库分表怎么解决事务问题","like_count":0},{"had_liked":false,"id":142274,"user_name":"Ricky Fung","can_delete":false,"product_type":"c1","uid":1051363,"ip_address":"","ucode":"7AEA1F8EC4A088","user_header":"https://static001.geekbang.org/account/avatar/00/10/0a/e3/9637bfdb.jpg","comment_is_top":false,"comment_ctime":1571323556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571323556","product_id":100035801,"comment_content":"Redis cluster中slot也是分片思想的体现吧，crc32(key)%slot数量","like_count":0},{"had_liked":false,"id":141510,"user_name":"曲线","can_delete":false,"product_type":"c1","uid":1497749,"ip_address":"","ucode":"5F33B60DF44BC7","user_header":"https://static001.geekbang.org/account/avatar/00/16/da/95/c7e72ec1.jpg","comment_is_top":false,"comment_ctime":1571186806,"is_pvip":false,"replies":[{"id":"54657","content":"子表指的是依赖的表吗？如果数据量也很大的话，也是要拆分的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571189127,"ip_address":"","comment_id":141510,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571186806","product_id":100035801,"comment_content":"问下老师，如果对表做水平拆分，一个主表对应多个子表，对主表按分区键拆分了，子表也需要拆分吗？还是有其他处理？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470777,"discussion_content":"子表指的是依赖的表吗？如果数据量也很大的话，也是要拆分的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571189127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141464,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1571158808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571158808","product_id":100035801,"comment_content":"分库，分表，分区键，映射表，学习了.打卡09.","like_count":0},{"had_liked":false,"id":140977,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1571100772,"is_pvip":false,"replies":[{"id":"54578","content":"1. 我觉得我那种更好，比方说如果按照年龄查要怎么办呢？再拼接年龄进去吗<br>2. 一般的hash函数都好，比如crc32","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571117326,"ip_address":"","comment_id":140977,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571100772","product_id":100035801,"comment_content":"老师好，想问下对于用户表分库分表，一般是按照主键id分，但是根据昵称查，需要在建一张id-昵称映射关系表。我看还有另外一种叫因子法的策略，就是按照算法把昵称计算成固定整数，以这个为分表键，然后前面拼接id后当作主键，这样根据id和昵称都可以计算出分表键。两个问题：1.这两种方案，哪一种更好呢，或者各适应哪类情况。2.还有就是把昵称转化为整数的算法一般用什么呢？有什么要求。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470640,"discussion_content":"1. 我觉得我那种更好，比方说如果按照年龄查要怎么办呢？再拼接年龄进去吗\n2. 一般的hash函数都好，比如crc32","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571117326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140613,"user_name":"Hinimix","can_delete":false,"product_type":"c1","uid":1316937,"ip_address":"","ucode":"7994136C93BD89","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/49/b1d864e5.jpg","comment_is_top":false,"comment_ctime":1571016251,"is_pvip":false,"replies":[{"id":"54394","content":"分区表还是不能突破单机的限制","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571036819,"ip_address":"","comment_id":140613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571016251","product_id":100035801,"comment_content":"老师，不分库只分表，用mysql的分区表咋样","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470468,"discussion_content":"分区表还是不能突破单机的限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571036819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140398,"user_name":"龙","can_delete":false,"product_type":"c1","uid":1541092,"ip_address":"","ucode":"4561D16FBDB391","user_header":"https://static001.geekbang.org/account/avatar/00/17/83/e4/0ba893ee.jpg","comment_is_top":false,"comment_ctime":1570929569,"is_pvip":false,"replies":[{"id":"54297","content":"不用的呀~  按照昵称分库分表后，昵称就是分区键了<br><br>如果是模糊查询，可以使用es","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570970195,"ip_address":"","comment_id":140398,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570929569","product_id":100035801,"comment_content":"建立昵称分库分表时候，对昵称进行模糊查询是不是都要全部表搜索一次？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470373,"discussion_content":"不用的呀~  按照昵称分库分表后，昵称就是分区键了\n\n如果是模糊查询，可以使用es","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570970195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139785,"user_name":"guoguo 👻","can_delete":false,"product_type":"c1","uid":1025664,"ip_address":"","ucode":"874B0A1E0F7DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/80/6ff7ea5f.jpg","comment_is_top":false,"comment_ctime":1570725098,"is_pvip":false,"replies":[{"id":"54025","content":"如果你的流水表需要按照时间查询呢？这个看业务的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570767249,"ip_address":"","comment_id":139785,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570725098","product_id":100035801,"comment_content":"我现在对业务上的流水表也是按照用户id(id是string)取hash取模来分的，因为所有对业务流水表的查询，天然都是用户查自己的，那么不存在说，我有一个查询，条件不带分表键的问题。<br>而你讲的，实体表根据hash取模，流水表根据时间分。我的实现和你推荐的不一样。<br>能讲讲我这种实现的弊端么","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470113,"discussion_content":"如果你的流水表需要按照时间查询呢？这个看业务的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570767249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025664,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a6/80/6ff7ea5f.jpg","nickname":"guoguo 👻","note":"","ucode":"874B0A1E0F7DEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38922,"discussion_content":"那你讲的流水表按时间分，不也会按用户查么？\n我流水表按用户分，也会遇到按时间查。\n不是一样么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571845880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139356,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1570618383,"is_pvip":false,"replies":[{"id":"53781","content":"不是 是一个逻辑库分割成64个表","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570665375,"ip_address":"","comment_id":139356,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570618383","product_id":100035801,"comment_content":"老师说的16个库  64张表  每个数据库的64张表是使用分区表吗？？？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469905,"discussion_content":"不是 是一个逻辑库分割成64个表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570665375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138914,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1184658,"ip_address":"","ucode":"0641211EE9DA5C","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/92/0b4c8e30.jpg","comment_is_top":false,"comment_ctime":1570505111,"is_pvip":false,"replies":[{"id":"53639","content":"是的，所以要尽量避免，或者使用NoSQL数据库来替代<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570582958,"ip_address":"","comment_id":138914,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1570505111","product_id":100035801,"comment_content":"老师，如果限定了16个库，后期业务量增大还要继续扩大节点数量，这样做是不是就会有问题了","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469696,"discussion_content":"是的，所以要尽量避免，或者使用NoSQL数据库来替代\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570582958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187021,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","nickname":"Gojustforfun","note":"","ucode":"7513A40F27344F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25428,"discussion_content":"提前估算好未来几年内业务的增长量，16个库只是概数实际数量要根据业务及增长量来增减。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570527405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138899,"user_name":"刘伟","can_delete":false,"product_type":"c1","uid":1425456,"ip_address":"","ucode":"26A77D2F6429F0","user_header":"https://static001.geekbang.org/account/avatar/00/15/c0/30/53965ee0.jpg","comment_is_top":false,"comment_ctime":1570501677,"is_pvip":false,"replies":[{"id":"53496","content":"不是一回事儿，只是这些中间件都会同时支持这两个功能","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570503085,"ip_address":"","comment_id":138899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570501677","product_id":100035801,"comment_content":"像shardingSphere，cobar，arlas这些中间件，是不是同时提供了读写分离和分库分表的方案？读写分离和分库分表本质上是一回事吧？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469689,"discussion_content":"不是一回事儿，只是这些中间件都会同时支持这两个功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570503085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138813,"user_name":"Toutoublue","can_delete":false,"product_type":"c1","uid":1667307,"ip_address":"","ucode":"C1B1AFC8FBA972","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/eb/34301b40.jpg","comment_is_top":false,"comment_ctime":1570459294,"is_pvip":false,"replies":[{"id":"53449","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570491818,"ip_address":"","comment_id":138813,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570459294","product_id":100035801,"comment_content":"关于思考题，HBase也是用了类似分片分区的技术，region会发生分裂","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469657,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570491818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138800,"user_name":"天凉好个秋","can_delete":false,"product_type":"c1","uid":1136145,"ip_address":"","ucode":"E11B5F990A4000","user_header":"https://static001.geekbang.org/account/avatar/00/11/56/11/5d113d5c.jpg","comment_is_top":false,"comment_ctime":1570456493,"is_pvip":false,"replies":[{"id":"53457","content":"额 我可能没说清楚，是分成16个库，每个库64张表","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570492197,"ip_address":"","comment_id":138800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570456493","product_id":100035801,"comment_content":"请问老师，16个库和64张表之间有什么关系吗？平均一个库存储4张表，但对应哪四张表该怎么判断呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469649,"discussion_content":"额 我可能没说清楚，是分成16个库，每个库64张表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570492197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138645,"user_name":"刘丹","can_delete":false,"product_type":"c1","uid":1081922,"ip_address":"","ucode":"66594D1C957E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","comment_is_top":false,"comment_ctime":1570407011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570407011","product_id":100035801,"comment_content":"我的看法是首先选择原生支持自动分库分表的数据库集群，例如GreenPlum、Elasticsearch或其它解决方案，方便开发和运维；其次考虑使用中间件做代理。","like_count":0}]}