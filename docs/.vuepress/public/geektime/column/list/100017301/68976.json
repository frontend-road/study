{"id":68976,"title":"26 | 红黑树（下）：掌握这些技巧，你也可以实现一个红黑树","content":"<p>红黑树是一个让我又爱又恨的数据结构，“爱”是因为它稳定、高效的性能，“恨”是因为实现起来实在太难了。我今天讲的红黑树的实现，对于基础不太好的同学，理解起来可能会有些困难。但是，我觉得没必要去死磕它。</p><p>我为什么这么说呢？因为，即便你将左右旋背得滚瓜烂熟，我保证你过不几天就忘光了。因为，学习红黑树的代码实现，对于你平时做项目开发没有太大帮助。对于绝大部分开发工程师来说，这辈子你可能都用不着亲手写一个红黑树。除此之外，它对于算法面试也几乎没什么用，一般情况下，靠谱的面试官也不会让你手写红黑树的。</p><p>如果你对数据结构和算法很感兴趣，想要开拓眼界、训练思维，我还是很推荐你看一看这节的内容。但是如果学完今天的内容你还觉得懵懵懂懂的话，也不要纠结。我们要有的放矢去学习。你先把平时要用的、基础的东西都搞会了，如果有余力了，再来深入地研究这节内容。</p><p>好，我们现在就进入正式的内容。<strong><span class=\"orange\">上一节，我们讲到红黑树定义的时候，提到红黑树的叶子节点都是黑色的空节点。当时我只是粗略地解释了，这是为了代码实现方便，那更加确切的原因是什么呢？</span></strong> 我们这节就来说一说。</p><h2>实现红黑树的基本思想</h2><p>不知道你有没有玩过魔方？其实魔方的复原解法是有固定算法的：遇到哪几面是什么样子，对应就怎么转几下。你只要跟着这个复原步骤，就肯定能将魔方复原。</p><!-- [[[read_end]]] --><p>实际上，红黑树的平衡过程跟魔方复原非常神似，大致过程就是：<strong>遇到什么样的节点排布，我们就对应怎么去调整</strong>。只要按照这些固定的调整规则来操作，就能将一个非平衡的红黑树调整成平衡的。</p><p>还记得我们前面讲过的红黑树的定义吗？今天的内容里，我们会频繁用到它，所以，我们现在再来回顾一下。一棵合格的红黑树需要满足这样几个要求：</p><ul>\n<li>\n<p>根节点是黑色的；</p>\n</li>\n<li>\n<p>每个叶子节点都是黑色的空节点（NIL），也就是说，叶子节点不存储数据；</p>\n</li>\n<li>\n<p>任何相邻的节点都不能同时为红色，也就是说，红色节点是被黑色节点隔开的；</p>\n</li>\n<li>\n<p>每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点。</p>\n</li>\n</ul><p>在插入、删除节点的过程中，第三、第四点要求可能会被破坏，而我们今天要讲的“平衡调整”，实际上就是要把被破坏的第三、第四点恢复过来。</p><p>在正式开始之前，我先介绍两个非常重要的操作，<strong>左旋（rotate left）</strong>、<strong>右旋（rotate right）</strong>。左旋全称其实是叫<strong>围绕某个节点的左旋</strong>，那右旋的全称估计你已经猜到了，就叫<strong>围绕某个节点的右旋</strong>。</p><p>我们下面的平衡调整中，会一直用到这两个操作，所以我这里画了个示意图，帮助你彻底理解这两个操作。图中的a，b，r表示子树，可以为空。</p><p><img src=\"https://static001.geekbang.org/resource/image/0e/1e/0e37e597737012593a93105ebbf4591e.jpg?wh=1142*713\" alt=\"\"></p><p>前面我说了，红黑树的插入、删除操作会破坏红黑树的定义，具体来说就是会破坏红黑树的平衡，所以，我们现在就来看下，红黑树在插入、删除数据之后，如何调整平衡，继续当一棵合格的红黑树的。</p><h2>插入操作的平衡调整</h2><p>首先，我们来看插入操作。</p><p><strong>红黑树规定，插入的节点必须是红色的。而且，二叉查找树中新插入的节点都是放在叶子节点上</strong>。所以，关于插入操作的平衡调整，有这样两种特殊情况，但是也都非常好处理。</p><ul>\n<li>\n<p>如果插入节点的父节点是黑色的，那我们什么都不用做，它仍然满足红黑树的定义。</p>\n</li>\n<li>\n<p>如果插入的节点是根节点，那我们直接改变它的颜色，把它变成黑色就可以了。</p>\n</li>\n</ul><p>除此之外，其他情况都会违背红黑树的定义，于是我们就需要进行调整，调整的过程包含两种基础的操作：<strong>左右旋转</strong>和<strong>改变颜色</strong>。</p><p>红黑树的平衡调整过程是一个迭代的过程。我们把正在处理的节点叫做<strong>关注节点</strong>。关注节点会随着不停地迭代处理，而不断发生变化。最开始的关注节点就是新插入的节点。</p><p>新节点插入之后，如果红黑树的平衡被打破，那一般会有下面三种情况。我们只需要根据每种情况的特点，不停地调整，就可以让红黑树继续符合定义，也就是继续保持平衡。</p><p>我们下面依次来看每种情况的调整过程。提醒你注意下，为了简化描述，我把父节点的兄弟节点叫做叔叔节点，父节点的父节点叫做祖父节点。</p><p><strong>CASE 1：如果关注节点是a，它的叔叔节点d是红色</strong>，我们就依次执行下面的操作：</p><ul>\n<li>\n<p>将关注节点a的父节点b、叔叔节点d的颜色都设置成黑色；</p>\n</li>\n<li>\n<p>将关注节点a的祖父节点c的颜色设置成红色；</p>\n</li>\n<li>\n<p>关注节点变成a的祖父节点c；</p>\n</li>\n<li>\n<p>跳到CASE  2或者CASE  3。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/60/40/603cf91f54b5db21bd02c6c5678ecf40.jpg?wh=1142*615\" alt=\"\"></p><p><strong>CASE 2：如果关注节点是a，它的叔叔节点d是黑色，关注节点a是其父节点b的右子节点</strong>，我们就依次执行下面的操作：</p><ul>\n<li>\n<p>关注节点变成节点a的父节点b；</p>\n</li>\n<li>\n<p>围绕新的关注节点\bb左旋；</p>\n</li>\n<li>\n<p>跳到CASE  3。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/44/ad/4480a314f9d83c343b8adbb28b6782ad.jpg?wh=1142*624\" alt=\"\"></p><p><strong>CASE 3：如果关注节点是a，它的叔叔节点d是黑色，关注节点a是其父节点b的左子节点</strong>，我们就依次执行下面的操作：</p><ul>\n<li>\n<p>围绕关注节点a的祖父节点c右旋；</p>\n</li>\n<li>\n<p>将关注节点a的父节点b、兄弟节点c的颜色互换。</p>\n</li>\n<li>\n<p>调整结束。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/04/12/04650d9470b1e67899f5b8b7b8e33212.jpg?wh=1142*856\" alt=\"\"></p><h2>删除操作的平衡调整</h2><p>红黑树插入操作的平衡调整还不是很难，但是它的删除操作的平衡调整相对就要难多了。不过原理都是类似的，我们依旧只需要根据关注节点与周围节点的排布特点，按照一定的规则去调整就行了。</p><p>删除操作的平衡调整分为两步，第一步是<strong>针对删除节点初步调整</strong>。初步调整只是保证整棵红黑树在一个节点删除之后，仍然满足最后一条定义的要求，也就是说，每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点；第二步是<strong>针对关注节点进行二次调整</strong>，让它满足红黑树的第三条定义，即不存在相邻的两个红色节点。</p><h3>1.针对删除节点初步调整</h3><p>这里需要注意一下，红黑树的定义中“只包含红色节点和黑色节点”，经过初步调整之后，为了保证满足红黑树定义的最后一条要求，有些节点会被标记成两种颜色，“红-黑”或者“黑-黑”。如果一个节点被标记为了“黑-黑”，那在计算黑色节点个数的时候，要算成两个黑色节点。</p><p>在下面的讲解中，如果一个节点既可以是红色，也可以是黑色，在画图的时候，我会用一半红色一半黑色来表示。如果一个节点是“红-黑”或者“黑-黑”，我会用左上角的一个小黑点来表示额外的黑色。</p><p><strong>CASE 1：如果要删除的节点是a，它只有一个子节点b</strong>，那我们就依次进行下面的操作：</p><ul>\n<li>\n<p>删除节点a，并且把节点b替换到节点a的位置，这一部分操作跟普通的二叉查找树的删除操作一样；</p>\n</li>\n<li>\n<p>节点a只能是黑色，节点b也只能是红色，其他情况均不符合红黑树的定义。这种情况下，我们把节点b改为黑色；</p>\n</li>\n<li>\n<p>调整结束，不需要进行二次调整。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/a6/c3/a6c4c347b7cbdf57662bab399ed36cc3.jpg?wh=1142*730\" alt=\"\"></p><p><strong>CASE 2：如果要删除的节点a有两个非空子节点，并且它的后继节点就是节点a的右子节点c</strong>。我们就依次进行下面的操作：</p><ul>\n<li>\n<p>如果节点a的后继节点就是右子节点c，那右子节点c肯定没有左子树。我们把节点a删除，并且将节点c替换到节点a的位置。这一部分操作跟普通的二叉查找树的删除操作无异；</p>\n</li>\n<li>\n<p>然后把节点c的颜色设置为跟节点a相同的颜色；</p>\n</li>\n<li>\n<p>如果节点c是黑色，为了不违反红黑树的最后一条定义，我们给节点c的右子节点d多加一个黑色，这个时候节点d就成了“红-黑”或者“黑-黑”；</p>\n</li>\n<li>\n<p>这个时候，关注节点变成了节点d，第二步的调整操作就会针对关注节点来做。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/48/4e/48e3bd2cdd66cb635f8a4df8fb8fd64e.jpg?wh=1142*583\" alt=\"\"></p><p><strong>CASE 3：如果要删除的是节点a，它有两个非空子节点，并且节点a的后继节点不是右子节点</strong>，我们就依次进行下面的操作：</p><ul>\n<li>\n<p>找到后继节点d，并将它删除，删除后继节点d的过程参照CASE  1；</p>\n</li>\n<li>\n<p>将节点a替换成后继节点d；</p>\n</li>\n<li>\n<p>把节点d的颜色设置为跟节点a相同的颜色；</p>\n</li>\n<li>\n<p>如果节点d是黑色，为了不违反红黑树的最后一条定义，我们给节点d的右子节点c多加一个黑色，这个时候节点c就成了“红-黑”或者“黑-黑”；</p>\n</li>\n<li>\n<p>这个时候，关注节点变成了节点c，第二步的调整操作就会针对关注节点来做。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/b9/29/b93c1fa4de16aee5482424ddf49f3c29.jpg?wh=1142*655\" alt=\"\"></p><h3>2.针对关注节点进行二次调整</h3><p>经过初步调整之后，关注节点变成了“红-黑”或者“黑-黑”节点。针对这个关注节点，我们再分四种情况来进行二次调整。二次调整是为了让红黑树中不存在相邻的红色节点。</p><p><strong>CASE 1：如果关注节点是a，它的兄弟节点c是红色的</strong>，我们就依次进行下面的操作：</p><ul>\n<li>\n<p>围绕关注节点a的父节点b左旋；</p>\n</li>\n<li>\n<p>关注节点a的父节点b和祖父节点c交换颜色；</p>\n</li>\n<li>\n<p>关注节点不变；</p>\n</li>\n<li>\n<p>继续从四种情况中选择适合的规则来调整。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/ac/91/ac76d78c064a2486e2a5b4c4903acb91.jpg?wh=1142*856\" alt=\"\"></p><p><strong>CASE 2：如果关注节点是a，它的兄弟节点c是黑色的，并且节点c的左右子节点d、e都是黑色的</strong>，我们就依次进行下面的操作：</p><ul>\n<li>\n<p>将关注节点a的兄弟节点c的颜色变成红色；</p>\n</li>\n<li>\n<p>从关注节点a中去掉一个黑色，这个时候节点a就是单纯的红色或者黑色；</p>\n</li>\n<li>\n<p>给关注节点a的父节点b添加一个黑色，这个时候节点b就变成了“红-黑”或者“黑-黑”；</p>\n</li>\n<li>\n<p>关注节点从a变成其父节点b；</p>\n</li>\n<li>\n<p>继续从四种情况中选择符合的规则来调整。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/ec/ec/eca118d673c607eb2b103f3476fb24ec.jpg?wh=1142*641\" alt=\"\"></p><p><strong>CASE 3：如果关注节点是a，它的兄弟节点c是黑色，c的左子节点d是红色，c的右子节点e是黑色</strong>，我们就依次进行下面的操作：</p><ul>\n<li>\n<p>围绕关注节点a的兄弟节点c右旋；</p>\n</li>\n<li>\n<p>节点c和节点d交换颜色；</p>\n</li>\n<li>\n<p>关注节点不变；</p>\n</li>\n<li>\n<p>跳转到CASE  4，继续调整。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/44/af/44075213100edd70315e1492422c92af.jpg?wh=1142*856\" alt=\"\"></p><p><strong>CASE 4：如果关注节点a的兄弟节点c是黑色的，并且c的右子节点是红色的</strong>，我们就依次进行下面的操作：</p><ul>\n<li>\n<p>围绕关注节点a的父节点b左旋；</p>\n</li>\n<li>\n<p>将关注节点a的兄弟节点c的颜色，跟关注节点a的父节点b设置成相同的颜色；</p>\n</li>\n<li>\n<p>将关注节点a的父节点b的颜色设置为黑色；</p>\n</li>\n<li>\n<p>从关注节点a中去掉一个黑色，节点a就变成了单纯的红色或者黑色；</p>\n</li>\n<li>\n<p>将关注节点a的叔叔节点e设置为黑色；</p>\n</li>\n<li>\n<p>调整结束。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/5f/44/5f73f61bf77a7f2bb75f168cf432ec44.jpg?wh=1142*837\" alt=\"\"></p><h2>解答开篇</h2><p>红黑树的平衡调整就讲完了，现在，你能回答开篇的问题了吗？为什么红黑树的定义中，要求叶子节点是黑色的空节点？</p><p>要我说，之所以有这么奇怪的要求，其实就是为了实现起来方便。只要满足这一条要求，那在任何时刻，红黑树的平衡操作都可以归结为我们刚刚讲的那几种情况。</p><p>还是有点不好理解，我通过一个例子来解释一下。假设红黑树的定义中不包含刚刚提到的那一条“叶子节点必须是黑色的空节点”，我们往一棵红黑树中插入一个数据，新插入节点的父节点也是红色的，两个红色的节点相邻，这个时候，红黑树的定义就被破坏了。那我们应该如何调整呢？</p><p><img src=\"https://static001.geekbang.org/resource/image/d9/c9/d9d1ce7d6bf3da4888f39f9d15be99c9.jpg?wh=1142*530\" alt=\"\"></p><p>你会发现，这个时候，我们前面在讲插入时，三种情况下的平衡调整规则，没有一种是适用的。但是，如果我们把黑色的空节点都给它加上，变成下面这样，你会发现，它满足CASE 2了。</p><p><img src=\"https://static001.geekbang.org/resource/image/8b/9a/8b1fb8c8004d86f737d829ecbd3a599a.jpg?wh=1142*566\" alt=\"\"></p><p>你可能会说，你可以调整一下平衡调整规则啊。比如把CASE 2改为“如果关注节点a的叔叔节点b是黑色或者不存在，a是父节点的右子节点，就进行某某操作”。当然可以，但是这样的话规则就没有原来简洁了。</p><p>你可能还会说，这样给红黑树添加黑色的空的叶子节点，会不会比较浪费存储空间呢？答案是不会的。虽然我们在讲解或者画图的时候，每个黑色的、空的叶子节点都是独立画出来的。实际上，在具体实现的时候，我们只需要像下面这样，共用一个黑色的、空的叶子节点就行了。</p><p><img src=\"https://static001.geekbang.org/resource/image/d6/66/d63231acb0e9d54c3469055d8dbdb366.jpg?wh=1142*571\" alt=\"\"></p><h2>内容小结</h2><p>“红黑树一向都很难学”，有这种想法的人很多。但是我感觉，其实主要原因是，很多人试图去记忆它的平衡调整策略。实际上，你只需要能看懂我讲的过程，没有知识盲点，就算是掌握了这部分内容了。毕竟实际的软件开发并不是闭卷考试，当你真的需要实现一个红黑树的时候，可以对照着我讲的步骤，一点一点去实现。</p><p>现在，我就来总结一下，如何比较轻松地看懂我今天讲的操作过程。</p><p>第一点，<strong>把红黑树的平衡调整的过程比作魔方复原，不要过于深究这个算法的正确性</strong>。你只需要明白，只要按照固定的操作步骤，保持插入、删除的过程，不破坏平衡树的定义就行了。</p><p>第二点，<strong>找准关注节点，不要搞丢、搞错关注节点</strong>。因为每种操作规则，都是基于关注节点来做的，只有弄对了关注节点，才能对应到正确的操作规则中。在迭代的调整过程中，关注节点在不停地改变，所以，这个过程一定要注意，不要弄丢了关注节点。</p><p>第三点，<strong>插入操作的平衡调整比较简单，但是删除操作就比较复杂</strong>。针对删除操作，我们有两次调整，第一次是针对要删除的节点做初步调整，让调整后的红黑树继续满足第四条定义，“每个节点到可达叶子节点的路径都包含相同个数的黑色节点”。但是这个时候，第三条定义就不满足了，有可能会存在两个红色节点相邻的情况。第二次调整就是解决这个问题，让红黑树不存在相邻的红色节点。</p><h2>课后思考</h2><p>如果你以前了解或者学习过红黑树，关于红黑树的实现，你也可以在留言区讲讲，你是怎样来学习的？在学习的过程中，有过什么样的心得体会？有没有什么好的学习方法？</p><p>欢迎留言和我分享，我会第一时间给你反馈。</p>","comments":[{"had_liked":false,"id":78104,"user_name":"pplegend","can_delete":false,"product_type":"c1","uid":1367329,"ip_address":"","ucode":"BD1AEE18CC4106","user_header":"","comment_is_top":false,"comment_ctime":1553071316,"is_pvip":false,"discussion_count":69,"race_medal":0,"score":"3875613572308","product_id":100017301,"comment_content":"我决定了 放弃研究红黑树了，如果面试遇到算我倒霉，人生要学会放弃一些东西","like_count":903,"discussions":[{"author":{"id":1991279,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/62/6f/06d476f7.jpg","nickname":"Geek_Akara","note":"","ucode":"E86A5A9EEC8BFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271393,"discussion_content":"老师只是讲了红黑树的概念，没有背景故事确实很难理解，红黑树的诞生，通过什么算法保持平衡性的，为什么要转换颜色，其实红色的结点不是红色的，而是链接红色结点的那一条链是红色的，因为链颜色没地方存，所以才存到了结点中，那么为什么是一条红色的链呢？ 算法 第四版 250页 2-3树开始到红黑树实现，细细地读，大概4-5个小时的时间，把红黑树解释的明明白白的，所以这里十几分钟的讲解是肯定听不懂的。","likes_number":64,"is_delete":false,"is_hidden":false,"ctime":1590127651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1991279,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/62/6f/06d476f7.jpg","nickname":"Geek_Akara","note":"","ucode":"E86A5A9EEC8BFF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285026,"discussion_content":"感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592717471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271393,"ip_address":""},"score":285026,"extra":""},{"author":{"id":1311315,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLW8JDURuH8rWWd4kibR9ibsehbiaERqBJIP20GDJfZjaRlGQQVqw6780NTxrfxBujrzQvBnIcrmfkCg/132","nickname":"gibson1112","note":"","ucode":"51CF21A78A35C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1991279,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/62/6f/06d476f7.jpg","nickname":"Geek_Akara","note":"","ucode":"E86A5A9EEC8BFF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358840,"discussion_content":"3节点转换成一条左斜的红色链接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616060154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271393,"ip_address":""},"score":358840,"extra":""},{"author":{"id":1116219,"avatar":"https://static001.geekbang.org/account/avatar/00/11/08/3b/1f129ac4.jpg","nickname":"zhhzzhhzzh","note":"","ucode":"871D20F818A778","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1991279,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/62/6f/06d476f7.jpg","nickname":"Geek_Akara","note":"","ucode":"E86A5A9EEC8BFF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573543,"discussion_content":"删除那部分看起来还是有点迷糊，里面的代码实现太简洁了，很多分支的判断条件不知道为什么要这么判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653483681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271393,"ip_address":""},"score":573543,"extra":""}]},{"author":{"id":2056488,"avatar":"","nickname":"alask.lu","note":"","ucode":"872F0D9193513B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295436,"discussion_content":"眼前的黑不是黑，你说的红是什么红哦","likes_number":59,"is_delete":false,"is_hidden":false,"ctime":1596195466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1451643,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/NwnOWGnM9wuiaKRQkMQ3qx7AvDHrkEczzapBsXYCPTM1AggCV3iav3wIWc2L62ZfzIYicHv5txgbf6PtoQgXKuJEg/132","nickname":"学海无涯","note":"","ucode":"39C180ED9AA266","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2056488,"avatar":"","nickname":"alask.lu","note":"","ucode":"872F0D9193513B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382503,"discussion_content":"优秀","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625620397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295436,"ip_address":""},"score":382503,"extra":""}]},{"author":{"id":1213078,"avatar":"https://static001.geekbang.org/account/avatar/00/12/82/96/aa795685.jpg","nickname":"mghio","note":"","ucode":"74883EDE4FD0DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278004,"discussion_content":"世上无难事，只要肯放弃","likes_number":31,"is_delete":false,"is_hidden":false,"ctime":1591143240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1577339,"avatar":"https://static001.geekbang.org/account/avatar/00/18/11/7b/3426351c.jpg","nickname":"一念_风生","note":"","ucode":"13211B6B33C491","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334880,"discussion_content":"已经养成了学习之前先看评论的习惯了。。。然后直接跳到下一章。。。","likes_number":27,"is_delete":false,"is_hidden":false,"ctime":1608016701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1747210,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a9/0a/964c0ea0.jpg","nickname":"zhangyu","note":"","ucode":"F9B964F52099C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373725,"discussion_content":"兄弟，本来我还想死磕一下，看了你的留言，我动摇了，直接点了浏览器的close","likes_number":23,"is_delete":false,"is_hidden":false,"ctime":1620835704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1238166,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/96/a5d775e9.jpg","nickname":"牧凉","note":"","ucode":"1F57A16E37C668","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1747210,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a9/0a/964c0ea0.jpg","nickname":"zhangyu","note":"","ucode":"F9B964F52099C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379473,"discussion_content":"哈哈哈哈哈哈哈哈","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1623918762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373725,"ip_address":""},"score":379473,"extra":""},{"author":{"id":1032236,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/2c/87cc08ce.jpg","nickname":"baiyutang","note":"","ucode":"FD2436978BB447","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1747210,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a9/0a/964c0ea0.jpg","nickname":"zhangyu","note":"","ucode":"F9B964F52099C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590623,"discussion_content":"就你秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665930170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373725,"ip_address":"广东"},"score":590623,"extra":""}]},{"author":{"id":1392172,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3e/2c/9fa82579.jpg","nickname":"轻轻笑靥","note":"","ucode":"6EC68CEA1F9F7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292407,"discussion_content":"原本是想来评论区看看大神们是如何理解的，看到这条突然觉得人生也没那么难了，哈哈","likes_number":22,"is_delete":false,"is_hidden":false,"ctime":1595217175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2249227,"avatar":"https://static001.geekbang.org/account/avatar/00/22/52/0b/50bf0f05.jpg","nickname":"橙子橙","note":"","ucode":"CD51367A14D955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322555,"discussion_content":"&#34;人生要学会放弃一些东西&#34; 哈哈哈 凌晨12点 笑死","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1604762929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2065335,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/83/b7/48c468b7.jpg","nickname":"shuker","note":"","ucode":"5011AF8E094EBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302493,"discussion_content":"面试要是遇到了，我就分析一通原理，再问能不能换成跳表","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1598934741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476490,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/8a/07ab933c.jpg","nickname":"璀璨星空","note":"","ucode":"CE6324C4261A52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338479,"discussion_content":"别太早说放弃，路还长,饭也是要一口一口吃的,学算法不是一口吃个大胖纸哦","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1609298861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238238,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/de/deaa9da1.jpg","nickname":"光脚造轮子","note":"","ucode":"7B1485B7045D15","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313260,"discussion_content":"暂时放弃，弄会了其他的再回过头来看，不要浪费太多的时间","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1603015787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1265707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","nickname":"第一装甲集群司令克莱斯特","note":"","ucode":"4E8FBB23AD860B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299617,"discussion_content":"谢谢你的负能量，让我产生了正能量。我一定要学会RBT！","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1597753078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":13,"child_discussions":[{"author":{"id":1652366,"avatar":"https://static001.geekbang.org/account/avatar/00/19/36/8e/22c236d6.jpg","nickname":"wardseptember","note":"","ucode":"872320C858B2C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1265707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","nickname":"第一装甲集群司令克莱斯特","note":"","ucode":"4E8FBB23AD860B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309099,"discussion_content":"学会了没，兄弟","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1601188840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299617,"ip_address":""},"score":309099,"extra":""},{"author":{"id":1238238,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/de/deaa9da1.jpg","nickname":"光脚造轮子","note":"","ucode":"7B1485B7045D15","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1265707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","nickname":"第一装甲集群司令克莱斯特","note":"","ucode":"4E8FBB23AD860B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313259,"discussion_content":"学会了没，兄弟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603015730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299617,"ip_address":""},"score":313259,"extra":""},{"author":{"id":2204462,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/IY4fLqdVwCPlW7xJicz3nZm4OePT0o20tDZj1Hiauk2b0iaHMQcSOGpamLt9b72hYVG72sgRWic1BHY3uCvibWcfickw/132","nickname":"Grocker","note":"","ucode":"DF2E19A65DEAD6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1265707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","nickname":"第一装甲集群司令克莱斯特","note":"","ucode":"4E8FBB23AD860B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315396,"discussion_content":"学会了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603268920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299617,"ip_address":""},"score":315396,"extra":""}]},{"author":{"id":1851743,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/41/5f/b08562bf.jpg","nickname":"小麦VictorMak","note":"","ucode":"2331AD5B63B5D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384975,"discussion_content":"读书的时候学得可认真了，算法导论考试95分，现在工作好几年了，红黑树几乎还回去了","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1626836607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1040071,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/c7/26485903.jpg","nickname":"Yolo七夜","note":"","ucode":"7CB74C0A1DF785","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318568,"discussion_content":"相信我，你并不孤独，哈哈哈","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1603782502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1221991,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/67/bf286335.jpg","nickname":"AllenGFLiu","note":"","ucode":"90FA8A619A2629","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29621,"discussion_content":"不要想着看一遍就能看懂，这种心理预设建制得太高会影响成就感。可以多看几次。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1570776782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014401,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/81/69874318.jpg","nickname":"ding","note":"","ucode":"54AF950B3CA740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374059,"discussion_content":"看完删除节点的初步调整的3个case之后，发现第二步调整还有4个case。然后跳到这条评论。我开始动摇了，在想那4个case还要不要继续看...","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1620982481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2445066,"avatar":"https://static001.geekbang.org/account/avatar/00/25/4f/0a/0ebfbb01.jpg","nickname":"征服天堂","note":"","ucode":"686ED7ECC00004","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367733,"discussion_content":"我觉得记得红黑树几个特性就行，插入删除调整无非就是旋转+变色，这东西能都记得的就是神了，哈哈","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1618452700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240490,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ed/aa/67fbccda.jpg","nickname":"soulful","note":"","ucode":"93105631E8106A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251927,"discussion_content":"如果是工程中用到红黑树，考虑到实现和可能的bug，可以选择使用第三方库或者跳表替代\n\n对于红黑树，我们可以先记住它的由来，要解决的问题和适用场景等\n\n对于实现的话，不要想一下子就能看懂，可以收藏起来多看多练，实现不是问题\n\n","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1588126335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302365,"discussion_content":"我以为只有我一个人放弃了.......哈哈哈哈哈哈哈哈哈","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1598886761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1926508,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/65/6c/be97a3ae.jpg","nickname":"Geek_bb2310","note":"","ucode":"022885B257DEB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305553,"discussion_content":"呵呵","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599998429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302365,"ip_address":""},"score":305553,"extra":""}]},{"author":{"id":1336782,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/ce/2714f9ef.jpg","nickname":"大鹏","note":"","ucode":"CA7D4754CFA6B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243620,"discussion_content":"哈哈，听你说完，我仿佛对红黑树又产生兴趣了","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587553592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1906773,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/18/55/3141c125.jpg","nickname":"Braeswood_Blvd","note":"","ucode":"5985430F78A11D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336782,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/ce/2714f9ef.jpg","nickname":"大鹏","note":"","ucode":"CA7D4754CFA6B7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253024,"discussion_content":"你是魔鬼吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588211048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":243620,"ip_address":""},"score":253024,"extra":""},{"author":{"id":1613665,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9f/61/c46b42f4.jpg","nickname":"talkyoung","note":"","ucode":"8D231FA9004B64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1906773,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/18/55/3141c125.jpg","nickname":"Braeswood_Blvd","note":"","ucode":"5985430F78A11D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272347,"discussion_content":"我就是他的天使","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590291258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253024,"ip_address":""},"score":272347,"extra":""}]},{"author":{"id":1030070,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b7/b6/17103195.jpg","nickname":"Elliot","note":"","ucode":"CC58A6FD2F338C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":172269,"discussion_content":"红黑树是一种平衡二叉树。Enough。。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1581774510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1763569,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e8/f1/45a700b9.jpg","nickname":"Hahahaha","note":"","ucode":"70AC545E044F96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370022,"discussion_content":"你不是一个人在战斗=-=","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619254048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026390,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a9/56/315c5be7.jpg","nickname":"青鸟","note":"","ucode":"A4818C5C0C688D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364917,"discussion_content":"哈哈哈，俺也一样。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617644109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266370,"avatar":"https://static001.geekbang.org/account/avatar/00/13/52/c2/3105d722.jpg","nickname":"Leon","note":"","ucode":"3C5F6DF9B8B718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344753,"discussion_content":"我也放弃了，遇到了面试算我倒霉","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611567964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2090232,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/e4/f8/80374742.jpg","nickname":"锅侠","note":"","ucode":"2F7856BEF55301","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336258,"discussion_content":"我也决定放弃了\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608541407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148845,"avatar":"https://static001.geekbang.org/account/avatar/00/11/87/ad/50a85a04.jpg","nickname":"hao","note":"","ucode":"997F2B57E2F556","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324021,"discussion_content":"不孤单","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605025164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1922171,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/54/7b/780c04ff.jpg","nickname":"史努比","note":"","ucode":"20D1EC05778BC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148845,"avatar":"https://static001.geekbang.org/account/avatar/00/11/87/ad/50a85a04.jpg","nickname":"hao","note":"","ucode":"997F2B57E2F556","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327138,"discussion_content":"这位肯定有对象了，光棍节说了这句话，哈哈","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1605753371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":324021,"ip_address":""},"score":327138,"extra":""}]},{"author":{"id":1324314,"avatar":"https://static001.geekbang.org/account/avatar/00/14/35/1a/9fa38dc9.jpg","nickname":"子瞻","note":"","ucode":"5C26FF10934534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306120,"discussion_content":"舍得，有舍才有得。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600174345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2133309,"avatar":"https://static001.geekbang.org/account/avatar/00/20/8d/3d/91b1afd3.jpg","nickname":"小北","note":"","ucode":"8FE84905F0E073","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304724,"discussion_content":"真的头疼啊 兄弟\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599647562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691517,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cf/7d/d9085aaa.jpg","nickname":"punnpkin","note":"","ucode":"E635BD016D892F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94668,"discussion_content":"牛皮 我也不想看","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576978999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1157713,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/51/809b3c0d.jpg","nickname":"寒星","note":"","ucode":"6A35E9C967F7BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1973,"discussion_content":"我也有此想法，就记住它的由来和使用场景就算了，哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563157744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2986532,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/92/24/199224be.jpg","nickname":"阎罗王","note":"","ucode":"EC5FB70286C027","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585470,"discussion_content":"臣附议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661584592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339996,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/mMhqrvyZWoJH9iamnz2EnXj2zv0shByvPdqoTia1Tkia8DlGU9ZJ62aUMhosuBC4DuB8JJibBkZIc5g2hA3xQ67VibA/132","nickname":"机器变得更残忍","note":"","ucode":"0BB563F4D59374","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550946,"discussion_content":"感觉平衡树比起前面少了不少循序渐进的东西，点进评论恍然大悟了，有些算法还是得多花时间来找资料自学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644821802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1699086,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ed/0e/155a6ef4.jpg","nickname":"万歳","note":"","ucode":"6C86DB96A14BF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548740,"discussion_content":"我甚至开始怀疑是不是我智商有问题，怎么都理解不了红黑树这东西/(ㄒoㄒ)/~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643354040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2636178,"avatar":"https://static001.geekbang.org/account/avatar/00/28/39/92/88ed94f2.jpg","nickname":"YX","note":"","ucode":"CC108CCE845EAE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531778,"discussion_content":"放弃也是一种美丽，别让字节面试官看见","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637413643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2788958,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/8e/5e/a9d5defc.jpg","nickname":"chase_hong","note":"","ucode":"C8CC27ED0A5FD4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403546,"discussion_content":"先打个标记，后面再来看(如果我还记得的话)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634105994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022633,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9a/a9/e2feba1b.jpg","nickname":"Chenng","note":"","ucode":"B2D2E32F7AEBAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331882,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607000066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155165,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/5d/ba0eb1c4.jpg","nickname":"TINY","note":"","ucode":"BEFAD5A3BB5C79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295157,"discussion_content":"先理解AVL树、4阶B树再看红黑树。还有可以看视频资料学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596106382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722878,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/49/fe/48846a6d.jpg","nickname":"Ebdaoli","note":"","ucode":"E45C113C1AFD12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289734,"discussion_content":"我进来看评论的，舒服了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594194791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625233,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cc/91/d56a81af.jpg","nickname":"CoderArthur","note":"","ucode":"5B591914F0F67C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282281,"discussion_content":"要的就是你这样的评论！终于舒坦了点~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591935443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1092218,"avatar":"https://static001.geekbang.org/account/avatar/00/10/aa/7a/ae8c247d.jpg","nickname":"指尖以东","note":"","ucode":"1DEE134FE92FD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259860,"discussion_content":"确实难以理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588826207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1472408,"avatar":"https://static001.geekbang.org/account/avatar/00/16/77/98/b3dd4236.jpg","nickname":"彬彬","note":"","ucode":"6ED76129A2427D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178451,"discussion_content":"跟我想法一样 哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582165241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344997,"avatar":"https://static001.geekbang.org/account/avatar/00/14/85/e5/eedb0528.jpg","nickname":"Zed","note":"","ucode":"0B1BF15DFB050C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":174439,"discussion_content":"哈哈哈哈哈笑死了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581917537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103511,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d6/97/0bdd1d8b.jpg","nickname":"lcc","note":"","ucode":"C57D0540367728","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52758,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574083537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1631292,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e4/3c/dfcb86df.jpg","nickname":"Ryan24G","note":"","ucode":"EA1E134C18DA80","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6300,"discussion_content":"哈哈哈哈哈 牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566828227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1569596,"avatar":"https://static001.geekbang.org/account/avatar/00/17/f3/3c/cb4e31c1.jpg","nickname":"Eason_Grace","note":"","ucode":"5C0D348FF31BAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6174,"discussion_content":"哈哈哈~面试应该不会让自实现一个红黑树的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566743191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1359658,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/2a/e56244c8.jpg","nickname":"彭昀磊","note":"","ucode":"1B12F73B56ABBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1569596,"avatar":"https://static001.geekbang.org/account/avatar/00/17/f3/3c/cb4e31c1.jpg","nickname":"Eason_Grace","note":"","ucode":"5C0D348FF31BAE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205270,"discussion_content":"换句话讲，如果面试要求实现红黑树也就意味着面试结束了。。。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1584283370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6174,"ip_address":""},"score":205270,"extra":""},{"author":{"id":2249227,"avatar":"https://static001.geekbang.org/account/avatar/00/22/52/0b/50bf0f05.jpg","nickname":"橙子橙","note":"","ucode":"CD51367A14D955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1569596,"avatar":"https://static001.geekbang.org/account/avatar/00/17/f3/3c/cb4e31c1.jpg","nickname":"Eason_Grace","note":"","ucode":"5C0D348FF31BAE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322556,"discussion_content":"头条了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604762974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6174,"ip_address":""},"score":322556,"extra":""}]}]},{"had_liked":false,"id":40862,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1542684267,"is_pvip":false,"replies":[{"id":"14807","content":"👍 倾佩","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542766361,"ip_address":"","comment_id":40862,"utype":1}],"discussion_count":11,"race_medal":0,"score":"1247083200107","product_id":100017301,"comment_content":"我看到老师说道要我举个例子，我不太清楚是我说的那个问题还是关于红黑树的理解，这里也分个区<br>一：我说的case3的情况是表示老师的画的那个图，case3图的例子根节点到左边叶子节点只经过2个黑色节点，到右边叶子节点却经过了3个黑色节点。<br><br>二：我这里就大概说下吧（一家之言，自己的一点经验，也希望别的同学来一起讨论）：<br>1.左旋右旋这个，个人还是认为要画图，不画图我自己也写不出那个代码……哈哈。<br><br>2.说到插入删除的算法，我说用到了递推，就比如插入的CASE1的情况，CASE1的处理之后，关注节点从本身变成了他的祖父节点（红色节点），这就是往根节点递推。不过我认为CASE1处理过一次之后，不一定会进入case2或者case3，是有可能还在case1的。<br><br>换句话说，就是可以在case1的情况下，一直往根节点走，因为当前节点永远是红色，所以在最后要把根节点涂黑。同时，只要进入到case2,case3的情况，就是变成平衡二叉树的单旋和双旋的情况，双旋的处理逻辑就是把双旋变成单旋（比如先右后左旋就是把树变成“左撇子”）。这个就变成了单左旋能一步到位处理的平衡了，这个就是归纳。把未知情况转化为已知，如果我没有记错的话，数学归纳法的核心思想就是递推和归纳。<br><br>3.其实我们只要记住，除了关注的节点所在的子树，其他的子树本身都是一颗红黑树，他们是满足红黑树的所有特征的。当关注节点往根节点递推时，这个时候关注节点的子树也已经满足了红黑树的定义，我们就不用再去特别关注子树的特征。只要注意关注节点往上的部分。这样就能把问题简化，思考的时候思路会清晰一些。<br><br>4.再说到删除算法，我看到很多同学没理解为什么要红-黑，黑-黑节点的出现。这里我的看法是，红黑树最不好控制的其实是最后一个的性质4（每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点），因为你永远不知道别的子树到底有多少个黑色节点。这里加入红-黑，黑-黑节点就可以控制红黑树满足性质4，到时候要恢复颜色，只要去掉多余的黑色即可。<br><br>接下来的处理思路就是要满足：1.每个节点不是红的就是黑的，2.相邻节点不能是红的。这个思路计时变复杂为简单。<br><br>删除的case1情况，并没有真正处理，而且为了进入接下来的case2,case3,case4，这里又是之前说到的归纳思想。case2的情况又是一个递推思路，关注节点往根节点递推，让其左右子树都满足红黑树的定义。因为往上推，右子树多了一个黑色节点，就把关注节点的兄弟节点变红，使其满足性质4.<br><br>删除的case3是为了进入case4，提前变色的原因和case2是一样的，都是为了满足性质4。同样是归纳推理的思路。都要记住一点，各种case下的其他子树节点都满足红黑树的定义，需要分类讨论的，都在这几种case情况中了。<br><br>4.最后的建议，其实说了这么多，很多的表达都不太清楚，但是个人感觉，数学基础好的同学，理解红黑树会好一些，学习的时候多画画图，人对图形的敏感肯定比文字高，另外的就是大家可以去看看源码，本人是做java开发的，jdk1.8的treemap就是用红黑树实现的，跟着源码多看看，跟着老师的说明或者百度上的教程思考，动笔画画图，都能理解的。我自己看jdk源码的也是看了将近两个月才大概明白（因为也在上班，只有晚上有一些时间来看看代码）。学习的过程中要耐心，学习红黑树本身也不是为了“默写”，而是去学习思想，锻炼思维，复杂问题简单化，新问题转化为已解决过的问题等等。其实说到最后，都是用到了数学的思维，这些思维都会在潜移默化中影响到自己。<br><br>ps:本人并不是什么大牛，不会的东西也是很多很多，上面只是自己的一点感想。老师的建议很多，不要太去扣细节，我们要在一个整体的角度上去看红黑树是怎么处理的，知道他的应用场景，什么时候要用他，什么时候该用他，为什么要用他。这几个地方弄清楚，大部分就够了，我们要有的放矢，抓准学习的核心内容。","like_count":290,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429636,"discussion_content":"👍 倾佩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542766361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042685,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e8/fd/abb7bfe3.jpg","nickname":"Langzi233","note":"","ucode":"5A21AC08FC089B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203189,"discussion_content":"耗子叔推荐的数据结构动画图，可以单步操作看清每一步是如何操作的，借第一条留言宝地转给有需要的人：https://www.cs.usfca.edu/~galles/visualization/Algorithms.html","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1584008884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319431,"discussion_content":"我打算先放弃这个，先弄明白其他的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604028504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1600012,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6a/0c/3740de12.jpg","nickname":"huahuaxiaoshao","note":"","ucode":"3309034B2A8C65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2475,"discussion_content":"看了这么多评论，这条评论，我是真的佩服。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563690751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2971870,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/58/de/dad844b1.jpg","nickname":"晨遥","note":"","ucode":"C3972A1FE5E021","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570886,"discussion_content":"插入那块感觉确实写得有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651983450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2750366,"avatar":"","nickname":"Geek_ee3685","note":"","ucode":"2E0D5A064F5619","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404808,"discussion_content":"Case 处于同一层的bd两个节点怎么可能颜色不一样那","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634405710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003231,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/df/70992786.jpg","nickname":"，","note":"","ucode":"A18D24A4ED51C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341870,"discussion_content":"一:case3情况是例子有问题吧？调整后不满足条件4了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610539486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2285946,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e1/7a/b206cded.jpg","nickname":"人在江湖龙在江湖","note":"","ucode":"20850038573DAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1003231,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/df/70992786.jpg","nickname":"，","note":"","ucode":"A18D24A4ED51C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351583,"discussion_content":"插入的case3应该错了吧，为什么没有人讨论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614335107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341870,"ip_address":""},"score":351583,"extra":""},{"author":{"id":1889141,"avatar":"","nickname":"醉梦了红尘","note":"","ucode":"DB742865BAD6B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2285946,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e1/7a/b206cded.jpg","nickname":"人在江湖龙在江湖","note":"","ucode":"20850038573DAE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376301,"discussion_content":"case3规则没问题，只是没有还出来插入节点的兄弟节点，应该要有个黑色的兄弟节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622074674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351583,"ip_address":""},"score":376301,"extra":""}]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319432,"discussion_content":"你是真的弄懂了。自己能总结，还能提高的数学层次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604028610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1504652,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f5/8c/82fb5890.jpg","nickname":"抱小星","note":"","ucode":"BA7B0DAFDA4AF5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149070,"discussion_content":"真大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579730702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40286,"user_name":"沉睡的木木夕","can_delete":false,"product_type":"c1","uid":1036362,"ip_address":"","ucode":"2C6B23B34C44E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/4a/7e3d158d.jpg","comment_is_top":false,"comment_ctime":1542589661,"is_pvip":false,"discussion_count":14,"race_medal":0,"score":"718802128093","product_id":100017301,"comment_content":"感觉看不下去了，多层级的左旋右旋过程能不能再详细说一下？还有新增，删除那里的case几种情况，是不是就是说红黑树操作只有这几种情况？这里面的左右旋真的没搞懂","like_count":167,"discussions":[{"author":{"id":1358312,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b9/e8/0b3cf295.jpg","nickname":"HaiSky","note":"","ucode":"ECE7C263142432","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293003,"discussion_content":"https://blog.csdn.net/fei33423/article/details/79132930   看这个分分钟理解清楚","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595409777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1498811,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqxPHQ0mFEJ8ia1fLa9ZGqGmvHmuKkuIBCNk4BbIhBvnV4EAqnxdpVBEPuHJOUoyhGewdicNR01GkdA/132","nickname":"freshbin","note":"","ucode":"08EFEA2CC04F3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":241937,"discussion_content":"看懵逼了，看了一点点直接拖下来看总结和留言，我反正是晕晕的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587450377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1600999,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/z5OUcd5RD7gMIevhHORHFcQsXNlZ4UxIU2jS6UwyUIM0w0nXI57nZKCXsibmN2o71WLtg5YXuJKeMNkItEzEaGg/132","nickname":"chrisforbt","note":"","ucode":"CA000E8A615001","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37511,"discussion_content":"这一节讲得不行，太急了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571628448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1528610,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/22/cce9a2e5.jpg","nickname":"naku","note":"","ucode":"B49EF5B5B38400","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218909,"discussion_content":"左旋和右旋这个名字真的很难理解的， 我都是用其他名字替代的。 叫左加和右加，左旋的本质其实就是让该位置的左子树节点个数+1， 右子树节点个数减一。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585712917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476490,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/8a/07ab933c.jpg","nickname":"璀璨星空","note":"","ucode":"CE6324C4261A52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338482,"discussion_content":"模糊倒是不觉得,还是得有基础才行啊，原理说的很清楚了，不可能还全部动图画出来吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609299112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1528610,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/22/cce9a2e5.jpg","nickname":"naku","note":"","ucode":"B49EF5B5B38400","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218913,"discussion_content":"你想啊，左加完后左子树肯定是节点变多了，就好跟图形对上了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585713188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1256391,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2b/c7/518cada0.jpg","nickname":"lark","note":"","ucode":"C4C81443B4AD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182069,"discussion_content":"建议看看算法第四版里第三章符号表中的23树和红黑树，很容易理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582386162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1122753,"avatar":"https://static001.geekbang.org/account/avatar/00/11/21/c1/2ad2133b.jpg","nickname":"柏","note":"","ucode":"862994F4FDDEAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155155,"discussion_content":"我也觉得 讲的太模糊了 感觉还不如去看教材","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580218557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075267,"avatar":"https://static001.geekbang.org/account/avatar/00/10/68/43/1fe64086.jpg","nickname":"zero_","note":"","ucode":"14D3AD3D997112","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55448,"discussion_content":"左旋右旋都不懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574380014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1472051,"avatar":"https://static001.geekbang.org/account/avatar/00/16/76/33/928ffd21.jpg","nickname":"AlexS","note":"","ucode":"3DA81A613CE645","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44580,"discussion_content":"输入英文是因为敏感词","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572957541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1387589,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","nickname":"(╯‵□′)╯︵┻━┻","note":"","ucode":"10A03AB1CB6B42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37259,"discussion_content":"想象左、父、右节点都在圆边上，圆心是它们中间的位置，不是任何节点。“围绕父节点旋转”的说法比较误导。旋转概况起来就两步：1旋转本身（祖父节点指向新父节点、新旧父子节点关系反转），2新父节点的原（与旋转）同向子节点移交给原父节点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571562647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1472051,"avatar":"https://static001.geekbang.org/account/avatar/00/16/76/33/928ffd21.jpg","nickname":"AlexS","note":"","ucode":"3DA81A613CE645","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1387589,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","nickname":"(╯‵□′)╯︵┻━┻","note":"","ucode":"10A03AB1CB6B42","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44578,"discussion_content":"“围绕节点X左旋”的结果就像左轮pistol的转轮逆时针转一格，X往下转了一下，Y往左转了一下，a,r子树都好说还跟着原来的X,Y就好了，但是原来挂β子树的Y的左孩子挂了X，所以只能给β另找位置，此时正好X右孩子空了，所以就挂那好了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572957512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37259,"ip_address":""},"score":44578,"extra":""},{"author":{"id":1387589,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","nickname":"(╯‵□′)╯︵┻━┻","note":"","ucode":"10A03AB1CB6B42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1472051,"avatar":"https://static001.geekbang.org/account/avatar/00/16/76/33/928ffd21.jpg","nickname":"AlexS","note":"","ucode":"3DA81A613CE645","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47243,"discussion_content":"左轮好IP，很棒的比喻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573301868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44578,"ip_address":""},"score":47243,"extra":""}]},{"author":{"id":1304434,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e7/72/8c2105ef.jpg","nickname":"kakalot","note":"","ucode":"30BDE225C2DF1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26946,"discussion_content":"其实红黑树就是把4阶B树的节点拆开，了解一下B树，然后理解红黑树就很容易了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570625343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40282,"user_name":"凡","can_delete":false,"product_type":"c1","uid":1041878,"ip_address":"","ucode":"BCF83BE1D434D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/d6/37a1be71.jpg","comment_is_top":false,"comment_ctime":1542589294,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"478283959150","product_id":100017301,"comment_content":"文章还没看完，前面的就忘了","like_count":111,"discussions":[{"author":{"id":1516010,"avatar":"https://static001.geekbang.org/account/avatar/00/17/21/ea/2cfb9144.jpg","nickname":"auko","note":"","ucode":"7E3AA25B2D250F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":148089,"discussion_content":"俺也一样","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579689638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","nickname":"ABC","note":"","ucode":"7501AD9C0C4A70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583516,"discussion_content":"真实","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660176470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2212143,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c1/2f/5c8167aa.jpg","nickname":"油纸伞","note":"","ucode":"C2655B9F8874E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352059,"discussion_content":"真实！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614586380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1890452,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiartmgOY37cyzpYRicGBy7ZSnzZzmozxqaXE7Xm1aA3ubicDhMOIsfgibicFicvKA0NJ61YdicgXTdHpOw/132","nickname":"hxloongs","note":"","ucode":"8CFAF37C0DB1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348854,"discussion_content":"俺也一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612754685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319363,"discussion_content":"俺也一样。当时学得还很仔细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604017438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691637,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cf/f5/1c935458.jpg","nickname":"冷风","note":"","ucode":"E07336BA11F733","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310683,"discussion_content":"俺也一样，直接不记了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601993787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2136251,"avatar":"https://static001.geekbang.org/account/avatar/00/20/98/bb/bdc4376c.jpg","nickname":"小丑、","note":"","ucode":"9FCFC63FEA09FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306326,"discussion_content":"俺也一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600247442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1380312,"avatar":"https://static001.geekbang.org/account/avatar/00/15/0f/d8/9286b272.jpg","nickname":"leetcode","note":"","ucode":"3B8C3668A0DE74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280602,"discussion_content":"看过忘过 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591577498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178651,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fc/1b/7fa5823c.jpg","nickname":"在下令狐冲","note":"","ucode":"6228893CCF8C09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70633,"discussion_content":"兄弟,你不是一个人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575374003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247610,"avatar":"https://static001.geekbang.org/account/avatar/00/13/09/7a/f78e67b0.jpg","nickname":"醉丶春风","note":"","ucode":"A2B31C277A053E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8032,"discussion_content":"说的太对了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567762680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589328,"avatar":"","nickname":"Cjmedia","note":"","ucode":"E1EEA0194078A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7789,"discussion_content":"说出心坎了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567675716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41448,"user_name":"。。。","can_delete":false,"product_type":"c1","uid":1267092,"ip_address":"","ucode":"F4D90A500B66D3","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/94/cefb8a05.jpg","comment_is_top":false,"comment_ctime":1542783532,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"375204938284","product_id":100017301,"comment_content":"红黑树是由2-3树演变过来的，父节点指向的节点是红节点，那么就认为这两个节点其实是2-3树里面的3节点。如果有一个黑节点链接了两个红节点，那么就认为这是一个4-节点，因为2-3树不允许4-节点所以要将其提取出来。所谓的旋转。对于2-3树来说节点并没有变化。因为 红节点和指向他的节点本来就被认为是一个节点。建议看《算法》。里面讲了红黑树的精髓。看完以后怎么旋转怎么写红黑树就都知道了","like_count":87,"discussions":[{"author":{"id":1268797,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5c/3d/e8325811.jpg","nickname":"对白","note":"","ucode":"3183E5ADBC794B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296869,"discussion_content":"左倾红黑树对应的是2-3树，左倾红黑树中只有左子节点可以为红节点；红黑树对应的是2-3-4树，红黑树的左右子节点都可以为红节点。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1596691860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622700,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/ac/9fe701e9.jpg","nickname":"goldfinch","note":"","ucode":"2DE0DFD86CCB69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4564,"discussion_content":"2-3树对应的是左偏的红黑树吧，对应的是右结点不能为红的红黑树","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1565549700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139121,"avatar":"https://static001.geekbang.org/account/avatar/00/11/61/b1/1261c177.jpg","nickname":"胖胖虎","note":"","ucode":"9CA8F99CC82944","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278286,"discussion_content":"红黑树可以有多种实现方式，这节课里讲的这种是Linux内核里的实现。这里如果父节点是黑色可以直接插入。由2-3数演变的红黑树是不允许出现右节点是红色的情况，和本文略有不同。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591168688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1138645,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5f/d5/2fec2911.jpg","nickname":"yu","note":"","ucode":"56856DCC0C8387","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1139121,"avatar":"https://static001.geekbang.org/account/avatar/00/11/61/b1/1261c177.jpg","nickname":"胖胖虎","note":"","ucode":"9CA8F99CC82944","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304975,"discussion_content":"自己也是这里疑惑了很久，对照2-3树，是左倾的，为什么黑色下面有两个红色，作者交代的不够清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599728207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278286,"ip_address":""},"score":304975,"extra":""}]},{"author":{"id":1991279,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/62/6f/06d476f7.jpg","nickname":"Geek_Akara","note":"","ucode":"E86A5A9EEC8BFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271395,"discussion_content":"看完了回来了，顿悟了，五个小时的内容真不是二十分钟能够理解的了的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590127998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1810050,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9e/82/61e5acf7.jpg","nickname":"MooNight","note":"","ucode":"B5B5876841E33E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163973,"discussion_content":"《算法》这本书真的讲的通俗易懂，强烈推荐。我也是看了这本书讲的红黑树才略微懂一点点的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581132106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1916654,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3e/ee/82c2ef12.jpg","nickname":"是海港呀","note":"","ucode":"32AD09DB7B1F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1810050,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9e/82/61e5acf7.jpg","nickname":"MooNight","note":"","ucode":"B5B5876841E33E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244502,"discussion_content":"是算法导论还是算法啊，国外的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587606554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":163973,"ip_address":""},"score":244502,"extra":""},{"author":{"id":1331818,"avatar":"https://static001.geekbang.org/account/avatar/00/14/52/6a/f851f753.jpg","nickname":"kevin","note":"","ucode":"2EFF9E75B8FC95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1916654,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3e/ee/82c2ef12.jpg","nickname":"是海港呀","note":"","ucode":"32AD09DB7B1F3B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253523,"discussion_content":"《算法》 很厚的那本 前面有很多算法图解，是一本橘黄色的书，他讲解的红黑树一看就懂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588240522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":244502,"ip_address":""},"score":253523,"extra":""},{"author":{"id":1259387,"avatar":"https://static001.geekbang.org/account/avatar/00/13/37/7b/58f5d3d1.jpg","nickname":"不知名废物","note":"","ucode":"9CB37342FA7C03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1331818,"avatar":"https://static001.geekbang.org/account/avatar/00/14/52/6a/f851f753.jpg","nickname":"kevin","note":"","ucode":"2EFF9E75B8FC95","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384253,"discussion_content":"是中文版的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626443417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253523,"ip_address":""},"score":384253,"extra":""}]},{"author":{"id":1664773,"avatar":"https://static001.geekbang.org/account/avatar/00/19/67/05/a0315f44.jpg","nickname":"The Answer","note":"","ucode":"1ECF369780BFA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257652,"discussion_content":"建议看 Algorithm 4 这本书  因为这本书的作者就是红黑树的发明者，作者是通过讲红黑树的背景 2-3树来介绍红黑树的  非常好\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588598010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1304434,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e7/72/8c2105ef.jpg","nickname":"kakalot","note":"","ucode":"30BDE225C2DF1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26945,"discussion_content":"2-3-4树的变形","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570625269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40487,"user_name":"zixuan","can_delete":false,"product_type":"c1","uid":1131300,"ip_address":"","ucode":"C72920DD05B074","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/24/3f9f7c70.jpg","comment_is_top":false,"comment_ctime":1542625238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"263535630294","product_id":100017301,"comment_content":"这个不是设计而是推导出来的，源自2-3树 https:&#47;&#47;blog.csdn.net&#47;fei33423&#47;article&#47;details&#47;79132930","like_count":61},{"had_liked":false,"id":40709,"user_name":"沉睡的木木夕","can_delete":false,"product_type":"c1","uid":1036362,"ip_address":"","ucode":"2C6B23B34C44E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/4a/7e3d158d.jpg","comment_is_top":false,"comment_ctime":1542647980,"is_pvip":false,"replies":[{"id":"14654","content":"👍","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542677285,"ip_address":"","comment_id":40709,"utype":1}],"discussion_count":5,"race_medal":0,"score":"250650751148","product_id":100017301,"comment_content":"回到家我又翻看了《算法导论》中红黑树章节，又似乎加了点理解。<br>虽然里面时间复杂度依旧是用数学推导出来的，我看不懂，不过里面讲的红黑树5个性质：<br>1.每个节点不是红色就是黑色<br>2.根节点是黑色<br>3.每个叶子结点（NIL）是黑色的<br>4.如果一个节点是红色的，则他的两个子节点都是黑色的<br>5.对每个子结点，从该结点到其所有后代叶子结点的简单路劲上，均包含相同数目的黑色结点<br>后面讲到的3种情况都是为了满足这5点特性而做出的相应的变化<br>老师在讲解左右旋的时候一张图就概括了，说实话我第一时间真没看懂，花了大量时间这方面的理解，后来在《算法导论》中居然找到了浅显易懂的中文描述左右旋的过程，我概述为3点<br>1.左右旋操作中，只有指针的改变，其他所有属性都保持不变<br>2.左旋的过程与右旋的过程是对称的（伪代码也是对称的）<br>3.左旋为例，以x结点左旋，那么y成为该子树的跟结点，x成为y的左子结点，y的左子结点成为x的右子结点（所以右旋就是反过来的）<br>那么当多层级的呢，也就是文中case3中的右旋过程，因为是a的曾祖父结点来进行右旋，所以文中的“c”就是x，“a和b”就是y，那么右旋用文字描述就是“y（a,b）成为跟结点，x（c）成为y的右结点，y的右结点成为x的左结点，其他指针不变”<br>得到的子树结构然后根据前面说的5个特性（同老师说的4点特征）再做出响应的颜色变化<br>～～～～<br>唉，真是智商捉急","like_count":58,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429590,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542677285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":582477,"discussion_content":"经过本宝宝不屑的努力，终于在别人那里学会了红黑树的插入与删除。\n让我装下逼\n插入：\n父节点为红色，有3种情况：\n1.叔叔结点存在且为红，则父叔黑，祖父红。关注结点变为祖父结点再往上调整。\n2.叔叔结点不存在或者存在且为黑，作为右节点插入，则左旋父节点，然后按照第3种情况处理\n3.叔叔结点不存在或者存在且为黑，作为左结点插入，则父祖交换颜色，再祖父结点右旋。\n删除黑色结点有四种情况：\n1.黑兄弟，右红侄：父结点左旋，祖染父色，父叔黑\n2.黑兄弟，左红侄：父结点右旋，同1\n3.黑兄弟，双黑侄：兄红，往上找，找到跟结点或者红结点，染黑\n4.红兄弟：左旋父，父、祖换色，再用上面3种继续处理\n\n\n我太牛了，嘻嘻😁 虽然代码还不会写","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659441941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":429590,"ip_address":"广东"},"score":582477,"extra":""}]},{"author":{"id":2449060,"avatar":"https://static001.geekbang.org/account/avatar/00/25/5e/a4/d48b8298.jpg","nickname":"Geek_sz","note":"","ucode":"72E86D7D6554CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559944,"discussion_content":"明明是讲的烂，干嘛妄自菲薄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649072658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241567,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/df/8ba04bec.jpg","nickname":"Joker","note":"","ucode":"C42E11098E1B38","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320651,"discussion_content":"颜色变化的规则没搞懂，怎么做出相应的颜色变化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604422466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2189,"discussion_content":"懂了左旋，右旋就行啦，哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563347244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40265,"user_name":"凉粉","can_delete":false,"product_type":"c1","uid":1131111,"ip_address":"","ucode":"DD1280BD703948","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/67/b96b843f.jpg","comment_is_top":false,"comment_ctime":1542588062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"186226181790","product_id":100017301,"comment_content":"一脸懵","like_count":43},{"had_liked":false,"id":187050,"user_name":"Langzi233","can_delete":false,"product_type":"c1","uid":1042685,"ip_address":"","ucode":"5A21AC08FC089B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/fd/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1584001055,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"177677660191","product_id":100017301,"comment_content":"自己画图也可以，耗子叔推荐的各种算法图解工具，转给有缘人：https:&#47;&#47;www.cs.usfca.edu&#47;~galles&#47;visualization&#47;Algorithms.html","like_count":41,"discussions":[{"author":{"id":2028306,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f3/12/f983d240.jpg","nickname":"心似南风","note":"","ucode":"6707ADB0708AF0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382839,"discussion_content":"缘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625736664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1807024,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/92/b0/8b58ff2d.jpg","nickname":"丿醉月丨飞羽觞","note":"","ucode":"01874317EC1FE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382415,"discussion_content":"get","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625561978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2628168,"avatar":"https://static001.geekbang.org/account/avatar/00/28/1a/48/4d7202a1.jpg","nickname":"Ryan","note":"","ucode":"CD4788A25AA641","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378603,"discussion_content":"好使啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623301129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073947,"avatar":"https://static001.geekbang.org/account/avatar/00/10/63/1b/83ac7733.jpg","nickname":"忧天小鸡","note":"","ucode":"A1412BDC108FD6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374906,"discussion_content":"有缘！get","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621408501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1902002,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/05/b2/93b64021.jpg","nickname":"Geek_jikuo","note":"","ucode":"D4AF9E736701B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372010,"discussion_content":"很棒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620126007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40355,"user_name":"ban","can_delete":false,"product_type":"c1","uid":1034204,"ip_address":"","ucode":"E523CE97E48266","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","comment_is_top":false,"comment_ctime":1542599337,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"151866454697","product_id":100017301,"comment_content":"1、没看懂哪个节点跟哪个节点左旋或者右旋<br>2、为什么要有红&#47;黑节点，为什么要有红-黑 黑-黑，作用是什么","like_count":35,"discussions":[{"author":{"id":1590610,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/B9vSOjMc2a86kYA8R5yDkVdFiaj2JeBZ1PuI9oUKhbnvuZwuibdUam6FTcGzDaiaFdk2GWJveUGhfCVpv4KaOdicoQ/132","nickname":"帝江","note":"","ucode":"93CBA4E4D05DA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366898,"discussion_content":"红色和黑色是一种标记.记录了树相邻几个节点的结构.这样在树有变动的时候.知道怎么做来达到平衡.也就是防止退化的作用了.这样做要比用到的时候再检查要快一些.不用计算了.根据颜色就知道结构了.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618213642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2304810,"avatar":"https://static001.geekbang.org/account/avatar/00/23/2b/2a/51e51255.jpg","nickname":"Superh","note":"","ucode":"B6394479A3AB1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347556,"discussion_content":"为了防止二叉树退化啊；至于红黑，黑黑嘛，你咋不问问为啥要有删除；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612256954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103359,"user_name":"windcaller","can_delete":false,"product_type":"c1","uid":1514157,"ip_address":"","ucode":"1CA3E849805770","user_header":"https://static001.geekbang.org/account/avatar/00/17/1a/ad/faf1bf19.jpg","comment_is_top":false,"comment_ctime":1560420033,"is_pvip":false,"replies":[{"id":"37457","content":"没 好难写😂","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1560472543,"ip_address":"","comment_id":103359,"utype":1}],"discussion_count":7,"race_medal":0,"score":"113229569729","product_id":100017301,"comment_content":"老师你好，本次实现代码有在git上存吗？","like_count":26,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453841,"discussion_content":"没 好难写😂","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1560472543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2449060,"avatar":"https://static001.geekbang.org/account/avatar/00/25/5e/a4/d48b8298.jpg","nickname":"Geek_sz","note":"","ucode":"72E86D7D6554CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":559945,"discussion_content":"难怪讲的这么差劲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649072701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":453841,"ip_address":""},"score":559945,"extra":""}]},{"author":{"id":1926222,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/64/4e/83c61c7f.jpg","nickname":"靓仔","note":"","ucode":"077A290A2DCF42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585236,"discussion_content":"顿时感觉好欣慰  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661412035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139121,"avatar":"https://static001.geekbang.org/account/avatar/00/11/61/b1/1261c177.jpg","nickname":"胖胖虎","note":"","ucode":"9CA8F99CC82944","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278288,"discussion_content":"这种实现方法是linuxkernel里采用的方式，建议可以看一下内核中的rbtree.h和rbtree.c这两个源文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591169520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200209,"discussion_content":"如果是Java的话 可以去看hashmap源码 里面有红黑树的实现 不过需要找一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583668169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2034632,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","nickname":"图灵机","note":"","ucode":"EB02DB653AD591","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298224,"discussion_content":"TreeMap吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597222631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":200209,"ip_address":""},"score":298224,"extra":""},{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2034632,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","nickname":"图灵机","note":"","ucode":"EB02DB653AD591","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":298231,"discussion_content":"Hashmap也有 就是在某个slot上挂的节点比较多就会转成红黑树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597223854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298224,"ip_address":""},"score":298231,"extra":""}]}]},{"had_liked":false,"id":67623,"user_name":"xiao皮孩。。","can_delete":false,"product_type":"c1","uid":1367499,"ip_address":"","ucode":"27AE899819D10F","user_header":"https://static001.geekbang.org/account/avatar/00/14/dd/cb/23b114a7.jpg","comment_is_top":false,"comment_ctime":1550212196,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"108924394596","product_id":100017301,"comment_content":"说实话，前几章都看懂了，这个真没懂","like_count":25,"discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319433,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604028701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40366,"user_name":"小虾米","can_delete":false,"product_type":"c1","uid":1005528,"ip_address":"","ucode":"F543987A7FAB20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/d8/425e1b0a.jpg","comment_is_top":false,"comment_ctime":1542604587,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"96031885099","product_id":100017301,"comment_content":"看到删除的部分突然懵了，什么时候多了一个红黑，黑黑，一个节点两个颜色的概念了……","like_count":22,"discussions":[{"author":{"id":1258591,"avatar":"https://static001.geekbang.org/account/avatar/00/13/34/5f/92c52c61.jpg","nickname":"Hank","note":"","ucode":"8039C0C8BD1D35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":191728,"discussion_content":"那是你要去看2-3树才知道红黑树为啥有一个节点会有红黑个黑黑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583030598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1925539,"avatar":"","nickname":"Geek_Yuan","note":"","ucode":"032CA3A8FF1D0D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1258591,"avatar":"https://static001.geekbang.org/account/avatar/00/13/34/5f/92c52c61.jpg","nickname":"Hank","note":"","ucode":"8039C0C8BD1D35","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379191,"discussion_content":"2-4树吧？你看懂了，多出来的黑是空节点吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623747242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":191728,"ip_address":""},"score":379191,"extra":""}]}]},{"had_liked":false,"id":44953,"user_name":"数据结构和算法","can_delete":false,"product_type":"c1","uid":1248958,"ip_address":"","ucode":"91EBA530AFFE74","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/be/8b680923.jpg","comment_is_top":false,"comment_ctime":1543534378,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"65968043818","product_id":100017301,"comment_content":"这个图文结合对红黑树公析的很详细https:&#47;&#47;blog.csdn.net&#47;abcdef314159&#47;article&#47;details&#47;77193888","like_count":15,"discussions":[{"author":{"id":1107289,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e5/59/ad185a6c.jpg","nickname":"万有引力","note":"","ucode":"82C15A427EAD42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259071,"discussion_content":"跟着看了下，理解了插入时的规则。删除就看不下去了……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588757559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107102,"user_name":"daemon","can_delete":false,"product_type":"c1","uid":1048693,"ip_address":"","ucode":"295A5BEAAB6E0F","user_header":"https://static001.geekbang.org/account/avatar/00/10/00/75/f2377792.jpg","comment_is_top":false,"comment_ctime":1561459406,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"61691001550","product_id":100017301,"comment_content":"这么讲不好懂哈，从源头来吧，一开始凭空扔一堆红性质让人不解，为什么维持平衡要有这几个性质呢，建议调整下讲法，比如从2-3树开始，一步步从原理来理解红黑树","like_count":14,"discussions":[{"author":{"id":1188627,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/13/6ba35b43.jpg","nickname":"leejunhui","note":"","ucode":"A957C0034B9F4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3595,"discussion_content":"对于我这种算法小白来说不能更赞同你说的了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564627219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40318,"user_name":"keep_curiosity","can_delete":false,"product_type":"c1","uid":1246273,"ip_address":"","ucode":"794DC1D3FB9214","user_header":"https://static001.geekbang.org/account/avatar/00/13/04/41/082e2706.jpg","comment_is_top":false,"comment_ctime":1542592676,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"57377167524","product_id":100017301,"comment_content":"老师能讲一下调整策略是怎么推出来的么？就像数学公式一样，只知道公式，不知道推理过程很难理解😂","like_count":13,"discussions":[{"author":{"id":1543162,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/fa/103e6900.jpg","nickname":"山鬼谣","note":"","ucode":"E25F498B85A01B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275099,"discussion_content":"同理，魔方公式是怎么推出来的呢？哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590663466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47045,"user_name":"qinggeouye","can_delete":false,"product_type":"c1","uid":1251536,"ip_address":"","ucode":"5B53EEDD7BEC9C","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/d0/49b06424.jpg","comment_is_top":false,"comment_ctime":1544025319,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48788665575","product_id":100017301,"comment_content":"试着理解了一下「实现红黑树的基本思想」图例 1 中左旋和右旋的概念，可以将图例 1 中的树看作一个定滑轮：<br><br>围绕节点 X 的左旋：<br>拉住节点 X 左边的 a 子树，向下拉，将节点 Y 拉到节点 X 的位置，a 子树仍是节点 X 的左子树，而节点 X 成为了节点 Y 的左子节点，那么就将原先节点 Y 的左子树 b 摘下来，变成节点 X 的右子树；<br><br>同理，围绕节点 X 的右旋：<br>拉住节点 X 右边的 r 子树，向下拉，将节点 Y 拉到节点 X 的位置，a 子树仍是节点 Y 的左子树，而节点 X 成为了节点 Y 的右子节点，那么就将原先节点 Y 的右子树 b 摘下来，变成节点 X 的左子树；","like_count":11,"discussions":[{"author":{"id":1247951,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLBWjSjrBYr4DpMktO8XeRnpXeJFLWP0kpiaKFlsoeOoCN87PUDfbqicjPibuWIH4rdyoa0hE1iannzVKg/132","nickname":"lyh","note":"","ucode":"A35C3AEE94C37E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6766,"discussion_content":"这个理解的非常好:\n「实现红黑树的基本思想」图例 1 中左旋和右旋的概念，可以将图例 1 中的树看作一个定滑轮：\n\n围绕节点 X 的左旋：\n拉住节点 X 左边的 a 子树，向下拉，将节点 Y 拉到节点 X 的位置，a 子树仍是节点 X 的左子树，而节点 X 成为了节点 Y 的左子节点，那么就将原先节点 Y 的左子树 b 摘下来，变成节点 X 的右子树；\n\n同理，围绕节点 X 的右旋：\n拉住节点 X 右边的 r 子树，向下拉，将节点 Y 拉到节点 X 的位置，a 子树仍是节点 Y 的左子树，而节点 X 成为了节点 Y 的右子节点，那么就将原先节点 Y 的右子树 b 摘下来，变成节点 X 的左子树；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567090486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117000,"user_name":"之城","can_delete":false,"product_type":"c1","uid":1252519,"ip_address":"","ucode":"12451253E366A2","user_header":"https://static001.geekbang.org/account/avatar/00/13/1c/a7/6a837523.jpg","comment_is_top":false,"comment_ctime":1563952944,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"44513625904","product_id":100017301,"comment_content":"老师，你好像没讲红黑树怎么用啊？节点被标为红黑两种颜色，就是为了平衡的时候来回变颜色变着玩儿吗？真没get到红黑树设计的点。。。","like_count":10,"discussions":[{"author":{"id":1371954,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epFRbF5IkEBkMQmMfaZRrQpvZtxF1emYS1pEICFb9AaM5k4QluSxLZEGsnLASprt317uTzmaNegCg/132","nickname":"Dancer_aaa","note":"","ucode":"B411D90711201A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376963,"discussion_content":"设计颜色不是为了变着玩，而是通过颜色可以设计一套基于颜色变化的平衡规则，有了这套规则才能去实现红黑树的平衡，能够在插入删除时平衡红黑树才能做到复杂度不过度退化，所以你的问题可以反向思考，没有红黑颜色的设计，就无法设计出一套平衡策略。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1622438759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098637,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/8d/214ad614.jpg","nickname":"朱坤","note":"","ucode":"65224DA2456EAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6956,"discussion_content":"是的，根本不知道为什么要有红黑树，红色代表什么，黑色代表什么，为什么这样设计。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567215025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2343086,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c0/ae/e5e62510.jpg","nickname":"徐志超-Klaus","note":"","ucode":"CF26B39965F2A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366708,"discussion_content":"别老等着别人喂知识，别人消化过了再喂给你就一定正确吗？思路已经告诉你了看源码难度就不大，不入虎穴焉得虎子？先把流程看清楚了再到脑子里过两圈，才有可能明白为啥要这样设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618154418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1811611,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a4/9b/0967f397.jpg","nickname":"风，大风","note":"","ucode":"1A0F4D461BBC77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269014,"discussion_content":"红黑树的作用就是平衡二叉树啊！为了让二叉树更靠近完全二叉树，这样在插入，删除，查询时才能保持O(logn)的时间复杂度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589856953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40221,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1542558865,"is_pvip":false,"replies":[{"id":"14683","content":"能否举个例子呢","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542679752,"ip_address":"","comment_id":40221,"utype":1}],"discussion_count":4,"race_medal":0,"score":"44492231825","product_id":100017301,"comment_content":"先提一个问题：老师，插入的case3情况是不是不满足红黑树的第四个条件？根节点到左边的叶子节点只经过两个黑色节点，但是根节点到右边的却经过三个黑色节点。<br><br>学习红黑树在于理解他的思想，比如为什么要旋转，是因为高度不平衡。为什么有双旋，因为单旋没法一步到位，所以把一个新问题转化为已经解决过的问题。旋转的学习其实自己画一下图，一步步走，数形结合的思想用上就好。插入的核心思想就是，把红色节点往根节点递推，然后把根节点涂黑。删除同样是往根节点递推，转化成处理过的情况因为越靠近根节点，节点关系也就越清晰。其实红黑树的处理也有动态规划的思想，只有处理的这个节点子树是可能破坏的，而其他节点子树都是红黑树，都满足红黑树的定义。用数学归纳法的思路来想这些问题，感觉就不会被复杂的情况搞得头晕。","like_count":10,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429428,"discussion_content":"能否举个例子呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542679752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369043,"discussion_content":"是的，插入case3直接把a节点的父节点b变成黑色就满足定义了，他这样操作一波反而不满足包含的黑色数目相等这条定义了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618910865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1687570,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c0/12/1afb4b75.jpg","nickname":"郑家庄赶大车的老郑","note":"","ucode":"D432A3961840B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35196,"discussion_content":"我有同样的感觉，我冒昧的感觉老师在case3这里失误了，应该变成红黑或者黑黑的结点不是c，而是e，这样就满足条件4了。\n暂时的看法，不一定对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571240334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1687570,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c0/12/1afb4b75.jpg","nickname":"郑家庄赶大车的老郑","note":"","ucode":"D432A3961840B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35201,"discussion_content":"不好意思我牛头不对马嘴了，我在讲删除的case3，打扰了哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571240503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44310,"user_name":"花仙子","can_delete":false,"product_type":"c1","uid":1249216,"ip_address":"","ucode":"9840BF416F1F0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0f/c0/e6151cce.jpg","comment_is_top":false,"comment_ctime":1543404852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31608175924","product_id":100017301,"comment_content":"您好，老师有一点不太明白，就是删除操作时，以初步调整为例，case3的情况下，原文（如果节点 d 是黑色，为了不违反红黑树的最后一条定义，我们给节点 d 的右子节点 c 多加一个黑色，这个时候节点 c 就成了“红 - 黑”或者“黑 - 黑”；），最后一条是（每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数数目的黑色节点。），能理解要给节点 d 的右子节点 c 多加一个黑色，但图中的表示方法没看明白，引文原来的d节点是在c和e之间，所以所加的黑色节点是不是也应该在c和e之间，这点不太确定影响后边大半部分的理解，还请老师不吝赐教，多谢，真的挺焦急的","like_count":7},{"had_liked":false,"id":40296,"user_name":"成楠Peter","can_delete":false,"product_type":"c1","uid":1252977,"ip_address":"","ucode":"4D13E7368D8CF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","comment_is_top":false,"comment_ctime":1542590193,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"31607361265","product_id":100017301,"comment_content":"魔方还原公式总共200多种，要全部背下来并熟练运用，花的时间因人而异。我觉得这和你完全要掌握红黑树一样，你需要把每种情况都熟记，方能熟练运用。","like_count":7,"discussions":[{"author":{"id":1944895,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ad/3f/b5eabecf.jpg","nickname":"王川","note":"","ucode":"AED1548E793EB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365676,"discussion_content":"高阶玩法，cfop一共也就119个公式，然而你只需要掌握其中不到40个就能还原魔方，基础玩法甚至只用记住十几个公式+理解魔方结构就能进行还原。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617865496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1944895,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ad/3f/b5eabecf.jpg","nickname":"王川","note":"","ucode":"AED1548E793EB3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371670,"discussion_content":"我差不多背了40多个，P层21个都背了，可以1分钟以内，算然不是很快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619908794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":365676,"ip_address":""},"score":371670,"extra":""}]}]},{"had_liked":false,"id":40288,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1542589758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31607360830","product_id":100017301,"comment_content":"为什么红黑和黑黑这样来标注，这两种看成是黑色还是红色，什么时候当成黑色，什么时候当成红色","like_count":7},{"had_liked":false,"id":236404,"user_name":"渊จุ๊บ","can_delete":false,"product_type":"c1","uid":1530295,"ip_address":"","ucode":"E3A2C1E89EB576","user_header":"https://static001.geekbang.org/account/avatar/00/17/59/b7/9db9c657.jpg","comment_is_top":false,"comment_ctime":1595407443,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27365211219","product_id":100017301,"comment_content":"发现插入的平衡调整算法好像有点问题，是否需要做case2和case3的镜像版<br>如下情况：<br>             ●25<br>            &#47;  \\<br>          ○10  ●30<br>        &#47;   \\     &#47;  \\<br>      ●2 ●23●N ○55<br>      &#47;\\    &#47; \\       &#47; \\<br>   ●N●N●N●N ●N●N<br><br>此时插入40，插入后如下：<br>               ●25<br>              &#47;   \\<br>          ○10    ●30<br>        &#47;   \\      &#47;  \\<br>      ●2  ●23●N ○55<br>      &#47;\\    &#47; \\       &#47; \\<br>  ●N●N●N●N○40●N<br>                    &#47; \\<br>                  ●N●N<br>拿根节点的右分支单独看，关注节点是○40：<br><br>             ●25<br>               \\<br>                ●30<br>                &#47;  \\<br>             ●N ○55<br>                   &#47; \\<br>                 ○40●N<br>                 &#47; \\<br>               ●N●N<br>根据case1、case2、case3来看，匹配case3，根据case3调整如下：<br>             ●25<br>               \\<br>                ●N<br>                  \\<br>                   ●30<br>                     \\<br>                      ○55<br>                      &#47; \\<br>                   ○40●N<br>                  &#47; \\<br>                ●N●N<br>思考了下，是否可以通过调整case2、case3为镜像操作case2&#39;、case3&#39;：<br>case2&#39;：如果关注节点是 a，它的叔叔节点 d 是黑色，且d是a的祖父节点c的左节点，关注节点 a 是其父节点 b 的左子节点，我们就依次执行下面的操作：<br>  关注节点变成节点 a 的父节点 b；<br>  围绕新的关注节点\bb 右旋；<br>  跳到 CASE 3&#39;。<br>case3&#39;：如果关注节点是 a，它的叔叔节点 d 是黑色，且d是a的祖父节点c的左节点，关注节点 a 是其父节点 b 的右子节点，我们就依次执行下面的操作：<br>  围绕关注节点 a 的祖父节点 c 左旋；<br>  将关注节点 a 的父节点 b、兄弟节点 c 的颜色互换。<br>  调整结束。","like_count":6,"discussions":[{"author":{"id":2750312,"avatar":"https://static001.geekbang.org/account/avatar/00/29/f7/68/e3b1553a.jpg","nickname":"Wei鸿","note":"","ucode":"8015E5D852436C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407558,"discussion_content":"需要的。老师只给了单侧的，而且是父和子，祖父和父不在同一侧的连续两个做法，先转到一侧在绕祖父节点旋转。因此有镜像的case是需要处理的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635059249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153090,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1574155637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27343959413","product_id":100017301,"comment_content":"与自己和解了。","like_count":6},{"had_liked":false,"id":145759,"user_name":"瑞杰_Zhang🎋","can_delete":false,"product_type":"c1","uid":1513887,"ip_address":"","ucode":"1DA514F5353741","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/9f/55770fd3.jpg","comment_is_top":false,"comment_ctime":1572361238,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27342165014","product_id":100017301,"comment_content":"看完只记住一句话，和魔方复原一样😂，反正也看不懂，会套公式就完了","like_count":6,"discussions":[{"author":{"id":1245468,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","nickname":"宋世通","note":"","ucode":"C7AA3F0E6930F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414504,"discussion_content":"好难，不过看到这喝的水都喷出来了，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636793676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100063,"user_name":"Wangxi","can_delete":false,"product_type":"c1","uid":1211790,"ip_address":"","ucode":"C25A9A14179930","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/8e/bb16d414.jpg","comment_is_top":false,"comment_ctime":1559432084,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27329235860","product_id":100017301,"comment_content":"算法4这本书里面，红黑树是根据2-3树实现的，并且红连接只有左倾斜，没有右倾斜，很好理解。随便说一句，这本书的作者就是红黑树的发明人，大名鼎鼎的高德纳的弟子。","like_count":6},{"had_liked":false,"id":56797,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1010056,"ip_address":"","ucode":"DD4717C06E417D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/88/528442b0.jpg","comment_is_top":false,"comment_ctime":1546562534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27316366310","product_id":100017301,"comment_content":"我在大学时候是看《算法导论》实现过红黑树，主要是理解插入删除调整过程，使用viso画图，便于理解。需要极大的耐心，一点点的去啃。","like_count":6},{"had_liked":false,"id":286095,"user_name":"6到飞起","can_delete":false,"product_type":"c1","uid":2187496,"ip_address":"","ucode":"348140777ED22A","user_header":"","comment_is_top":false,"comment_ctime":1617155521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23091992001","product_id":100017301,"comment_content":"看完后光记住了个abce，叔叔，父亲，祖父，是不是废了","like_count":5},{"had_liked":false,"id":98493,"user_name":"望人艰不拆","can_delete":false,"product_type":"c1","uid":1467547,"ip_address":"","ucode":"1B04DD54C29F5A","user_header":"https://static001.geekbang.org/account/avatar/00/16/64/9b/3d62d420.jpg","comment_is_top":false,"comment_ctime":1559011279,"is_pvip":false,"replies":[{"id":"35858","content":"https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;t8z4KQMrTrR3NljtWJm2zg","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1559352340,"ip_address":"","comment_id":98493,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23033847759","product_id":100017301,"comment_content":"关于红黑树的插入看完这篇文章回头再看老师写的插入的三种case就会明白很多<br>https:&#47;&#47;blog.csdn.net&#47;wan198809&#47;article&#47;details&#47;48602921","like_count":5,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451710,"discussion_content":"https://mp.weixin.qq.com/s/t8z4KQMrTrR3NljtWJm2zg","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559352340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168460,"user_name":"binさま","can_delete":false,"product_type":"c1","uid":1737433,"ip_address":"","ucode":"10CCD3AA84EA06","user_header":"https://static001.geekbang.org/account/avatar/00/1a/82/d9/b839e3ff.jpg","comment_is_top":false,"comment_ctime":1578074372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18757943556","product_id":100017301,"comment_content":"插入操作case1之后为啥是跳到case2和3。不会出现再case1的情况？？？case2之后只能跳case3？？？case3之后就调整结束了？？？这样岂不是单纯的if-else嵌套O(1)就能实现插入的调整了？？？说实话没太看懂","like_count":4},{"had_liked":false,"id":108531,"user_name":"学会传球","can_delete":false,"product_type":"c1","uid":1156267,"ip_address":"","ucode":"49DA267C0DDC7D","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/ab/b2177dcf.jpg","comment_is_top":false,"comment_ctime":1561794071,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18741663255","product_id":100017301,"comment_content":"stl源码分析有大量的数据结构和算法代码，其中红黑树的源码分析也讲的很好，推荐大家结合着看。","like_count":4,"discussions":[{"author":{"id":1245468,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","nickname":"宋世通","note":"","ucode":"C7AA3F0E6930F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414505,"discussion_content":"大佬，C++会的不多，有什么推荐stl相关的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636793729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40301,"user_name":"crazyone","can_delete":false,"product_type":"c1","uid":1115042,"ip_address":"","ucode":"705E34642E41F5","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/a2/ceb37046.jpg","comment_is_top":false,"comment_ctime":1542590738,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18722459922","product_id":100017301,"comment_content":"插入的case2到case3是否连贯的案例？case2调整后，a的父节点是c，case3调整前，a的父节点是b。","like_count":4,"discussions":[{"author":{"id":2166599,"avatar":"https://static001.geekbang.org/account/avatar/00/21/0f/47/43ce582c.jpg","nickname":"zero","note":"","ucode":"4707ACBEF1B923","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411760,"discussion_content":"我也有这个疑问，不应该是case2的结果平移到case3开始操作，应该是连贯的，我感觉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635995415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127121,"user_name":"yunwei","can_delete":false,"product_type":"c1","uid":1236097,"ip_address":"","ucode":"05B99F94658C13","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/81/0c2de8fb.jpg","comment_is_top":false,"comment_ctime":1566559644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14451461532","product_id":100017301,"comment_content":"对红黑树引入不同颜色的一点理解，请老师看下是否正确 。<br>引入“颜色”的目的在于使得红黑树的平衡条件得以简化。红黑树并不追求“完全平衡”，它只要求部分地达到平衡要求，降低进行旋转操作的概率，从而提高了性能（达到严格平衡会有从结点到跟结点依次旋转的情况）。  <br>红黑树达到的是黑色结点完全平衡，放宽了严格平衡要求，红黑结点的设置其实是给树平衡提供了缓冲空间（把树拉伸为2倍深度），左右子树深度大于1时，就必须重新平衡二叉树，而红黑颜色转换调整，可以使本侧子树的深度保持不变，因为红黑树只关注黑色结点的严格平衡（如果删除结点是红色，则黑色平衡不变；如果删除是黑色，可以将此结点到根结点链路上的某红色结点变为黑色，及其他特殊情况，红黑树是可以通过颜色修改达到通过旋转操作才能得到黑色平衡等效效果。<br>","like_count":3},{"had_liked":false,"id":104471,"user_name":"其","can_delete":false,"product_type":"c1","uid":1380391,"ip_address":"","ucode":"3918C2950430E2","user_header":"https://static001.geekbang.org/account/avatar/00/15/10/27/3abd8f36.jpg","comment_is_top":false,"comment_ctime":1560760435,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14445662323","product_id":100017301,"comment_content":"老师，删除初步调整的case3不是e上面多加一个黑色吗，为什么是c，c的话c的右子树不就和原来比都多了一个黑色节点了吗","like_count":3,"discussions":[{"author":{"id":1170866,"avatar":"","nickname":"小沙","note":"","ucode":"9AD2FE435168B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":87350,"discussion_content":"同样有这样的疑问。黑色不是加在e吗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576663539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76505,"user_name":"听说少年","can_delete":false,"product_type":"c1","uid":1139839,"ip_address":"","ucode":"0CA7F9DBAB9379","user_header":"https://static001.geekbang.org/account/avatar/00/11/64/7f/4bd8dbe6.jpg","comment_is_top":false,"comment_ctime":1552620491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14437522379","product_id":100017301,"comment_content":"看了 北京大学 张铭老师的 二叉搜索树的讲课 理解了很多。","like_count":3},{"had_liked":false,"id":217791,"user_name":"John","can_delete":false,"product_type":"c1","uid":1020861,"ip_address":"","ucode":"E4ADF8488953FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","comment_is_top":false,"comment_ctime":1589614689,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10179549281","product_id":100017301,"comment_content":"看不懂红黑树的提示2点:<br>1. 红黑树其实是关于&quot;黑节点&quot;的平衡树, 或者说是为了保持&quot;黑平衡&quot;的树.<br>2. 请从&quot;二三树&quot;开始看起, 因为红黑树就是二三树的变型!","like_count":2},{"had_liked":false,"id":167961,"user_name":"haoyoulove","can_delete":false,"product_type":"c1","uid":1116286,"ip_address":"","ucode":"DB953CDB2F7F75","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/7e/6dd9d160.jpg","comment_is_top":false,"comment_ctime":1577969746,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"10167904338","product_id":100017301,"comment_content":"是不是漏掉了删除的节点是叶子节点，没有子节点，并且删除的节点是黑色节点这种情况？","like_count":2,"discussions":[{"author":{"id":1128420,"avatar":"https://static001.geekbang.org/account/avatar/00/11/37/e4/5d7a32c6.jpg","nickname":"creasylai19","note":"","ucode":"F9B04060FCFD3F","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582320,"discussion_content":"你可以拿第二次调整的case4去分析看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659366134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128420,"avatar":"https://static001.geekbang.org/account/avatar/00/11/37/e4/5d7a32c6.jpg","nickname":"creasylai19","note":"","ucode":"F9B04060FCFD3F","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582319,"discussion_content":"我理解，如果要删除的节点是叶子节点，且叶子节点是黑色的，那么虚构这个节点还在，并且是加黑色了的，然后按照删除的第二次调整继续走流程。走完之后，你会发现这个黑色转移了，然后原来的节点可以删除掉了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659366081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239133,"discussion_content":"有一个重要的概念，NIL 节点，就是虚拟空节点，这个节点的颜色是黑色，可以理解成真正的叶子结点。编程的时候，借助 NIL 节点的技巧，可以大大优化编码过程。像你所说的，如果删除的是黑色的叶子结点，那就把这个黑色加到他下面的 NIL 节点上，变成一个双重黑的节点。之后就进入正常的删除调整的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587277251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071620,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5a/04/a8b69c06.jpg","nickname":"Murphy","note":"","ucode":"230A1EE1ED6D0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234984,"discussion_content":"同有此疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587009580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155377,"user_name":"加温后的啤酒","can_delete":false,"product_type":"c1","uid":1344488,"ip_address":"","ucode":"5F30978CDB1606","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/e8/f726c635.jpg","comment_is_top":false,"comment_ctime":1574683393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10164617985","product_id":100017301,"comment_content":"用Swift实现了红黑树和AVL树，支持打印到控制台，有兴趣的可以参考一下：https:&#47;&#47;github.com&#47;wqhiOS&#47;BinaryTree ","like_count":2},{"had_liked":false,"id":63563,"user_name":"ldd","can_delete":false,"product_type":"c1","uid":1208157,"ip_address":"","ucode":"E8344FAFFE5CF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/5d/f0a19f09.jpg","comment_is_top":false,"comment_ctime":1548401707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10138336299","product_id":100017301,"comment_content":"老师，最近一直在看红黑树相关的，想问下：红黑树是否跟2-3-4树类似？因为我看了2-3-4的操作后，再来理解红黑树的操作，就觉得很好理解了，根据两者很类似，但是跟2-3树还是区别蛮大的，不知道我理解的对不对，望回复下，谢谢","like_count":2},{"had_liked":false,"id":63092,"user_name":"sonia","can_delete":false,"product_type":"c1","uid":1044075,"ip_address":"","ucode":"5C2892F9B18C6E","user_header":"","comment_is_top":false,"comment_ctime":1548250427,"is_pvip":false,"replies":[{"id":"22477","content":"红黑树不是我这个专栏的重点。我本意就没想到读者这么热衷看这部分。","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1548405087,"ip_address":"","comment_id":63092,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10138185019","product_id":100017301,"comment_content":"这部分感觉只是简单罗列，知其然不知其所以然，个人认为没讲好","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437469,"discussion_content":"红黑树不是我这个专栏的重点。我本意就没想到读者这么热衷看这部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548405087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2662526,"avatar":"https://static001.geekbang.org/account/avatar/00/28/a0/7e/5ec341e9.jpg","nickname":"lucifer","note":"","ucode":"1D1C03AD6A5E24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":535916,"discussion_content":"但作者你留了个bug在这里，却一直不解决，就是误人子弟！非常不负责！可以讲不好，但讲错了，同学提醒你你也不改就很过分\n删除的case3的黑节点应该加在e","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1638606632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":437469,"ip_address":""},"score":535916,"extra":""}]}]},{"had_liked":false,"id":49409,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1544683570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10134618162","product_id":100017301,"comment_content":"关键一点为什么是红，什么是黑，为什么要这么分，都是一个疑惑<br>对数据结果和算法很感兴趣，想开拓眼界，训练思维<br>左右旋，只有这两种情况，已经穷尽了所有的可能<br>二叉查找树中新插入的节点都是放在叶子节点上<br><br>插入：的动作无非就是左右旋转和改变颜色，<br>有三种情况，先不记忆了，没有明白原理<br><br>删除：准确的说没看懂，什么一半是红一半是黑，<br><br>很多疑问，决定跳过","like_count":2},{"had_liked":false,"id":40346,"user_name":"刘远通","can_delete":false,"product_type":"c1","uid":1253307,"ip_address":"","ucode":"4D3EE819E4B235","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/bb/c488d5db.jpg","comment_is_top":false,"comment_ctime":1542596557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10132531149","product_id":100017301,"comment_content":"左旋和右旋是不改变有序的前提下<br>调整两个节点的相对层数<br><br>添加两种颜色也很神奇<br>相邻的两个节点是可以换颜色的…<br>再好好理解一下","like_count":2},{"had_liked":false,"id":284043,"user_name":"南瓜","can_delete":false,"product_type":"c1","uid":1079562,"ip_address":"","ucode":"53561F551857A4","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/0a/a417ec1c.jpg","comment_is_top":false,"comment_ctime":1616049158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5911016454","product_id":100017301,"comment_content":"红黑树的逻辑性不强，有很多冗杂的场景步骤，适合了解原理，了解使用场景，真正用到，先查代码；如果有朋友 面试让手写，就直接pass吧，说明面试要的刷题狂魔，形式大于内容。","like_count":1},{"had_liked":false,"id":172699,"user_name":"叶子。","can_delete":false,"product_type":"c1","uid":1393004,"ip_address":"","ucode":"3EF2CC36F0D09A","user_header":"https://static001.geekbang.org/account/avatar/00/15/41/6c/687c5dfb.jpg","comment_is_top":false,"comment_ctime":1579253328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5874220624","product_id":100017301,"comment_content":"删除第一步case3的双色节点是不是标错了？","like_count":1},{"had_liked":false,"id":170793,"user_name":"For-ever","can_delete":false,"product_type":"c1","uid":1599813,"ip_address":"","ucode":"35481CDD2666F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/69/45/1e981b46.jpg","comment_is_top":false,"comment_ctime":1578722472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873689768","product_id":100017301,"comment_content":"曾经死磕过一段时间红黑树，我来说一下我对红黑树删除的理解吧。我下面的理解基于二叉搜索树的删除过程。我强烈建议先去了解二叉搜索树的插入删除！！！因为这个相比红黑树插入删除要简单很多。而且理解二叉搜索树的插入删除，对理解红黑树的插入删除过程很有帮助。（贴一个二叉搜索树插入删除的理解https:&#47;&#47;blog.csdn.net&#47;newcoderzZ&#47;article&#47;details&#47;93651222）<br>如果了解二叉搜索树的删除过程，就一定明白，删除最终找到的那个节点（老师讲的关注节点）一定是一个叶子节点 或者 只含有一个孩子节点的节点。至于为什么这里就不详细讲解了，可以先去学习一下平衡二叉树的删除。然后下面的就很好理解了。这个时候就一定只有三种情况：<br>     1 如果待删除结点 X 是一个红色结点，则直接删除即可，不会违反定义。<br>     2 如果待删除结点 X 是一个黑色结点，且其孩子结点 C 是红色的，那么只需要将 X 替换成 C，同时将 C 由红变黑即可。<br>     3 如果需要删除的结点 X 是黑色的，同时它的孩子结点 C 也是黑色的，这种情况就要进行老师说的第二次调整。<br>     对二次调整的理解：<br>     先说说什么要旋转调整颜色，其实就是为了满足红黑树定义。对于二次调整的的几种情况来说，都是此时左子树相比右子树少了一个黑色节点（被删除了），所以要调整。怎么调整？无非是两种方式，要么《给左子树增加一个黑色节点》，要么也《减少一个右子树的黑色节点》（但是这种情况虽然可以使树局部平衡，但可能还会引起其他不平衡，我会针对具体情况说明）。<br>CASE 1的情况，不想理解原理的记法就是，保证关注节点的兄弟节点不能是红色的。如果是红色的，就要进行CASE1操作，其实就是为下面三种情况铺路的。大家可以看到CASE2 3 4的兄弟节点都是黑色节点。<br>CASE2的情况， 就是我说的 《减少一个右子树的黑色节点》，这个时候左右子树平衡了，但是经过b节点的路径，就少了一个黑色节点，所以要重新以b节点为关注节点，重新开始调整。<br>CASE3 和 CASE4有点像（区别就是，兄弟节点的左孩子是红色，还是右孩子是红色），其操作的主要目的是从右子树借来一个节点，给左子树增加一个黑色节点。CASE3的操作是为了转化为CASE4，然后经过CASE4的调整，左子树增加了一个黑色节点，对右子树也没有影响，所以红黑树又恢复了平衡。","like_count":1},{"had_liked":false,"id":151278,"user_name":"乾坤瞬间","can_delete":false,"product_type":"c1","uid":1683130,"ip_address":"","ucode":"15BDCF29CBF8EB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLWIUF31dicT1YBTxWNX0uvbMxl15UwdlwFicGhNo0DsQ7CbM6k16EQxK7bwSMcicLGMdYto4jGPTvrg/132","comment_is_top":false,"comment_ctime":1573694365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868661661","product_id":100017301,"comment_content":"先对红黑树的插入做个总结，首先我们可以确定在被插入节点之前这颗树是满足所有四种条件的，将新插入的节点放置在叶子节点上，此时的插入点作为关注节点开始处理。<br>在我们开始处理的时候要心中做到有数的三种情况<br>1。关注节点的父亲节点是空，也就是说此时的关注节点是根节点所以，把关注节点标记为黑色，结束处理<br>2。当关注节点的父节点不为空，且为黑色，因为此时满足所有四个条件，所以什么都不处理，结束处理<br>3。当关注节点的父节点是红色的时候，我们可以确定此时的树的新状态不满意第三个条件，即红红相连了，其他条件满足，所以我定义此时的新状态为状态1。<br>   其次我们可以知道，在状态1之前的状态是满足所有条件的，所以关注点的祖父节点一定是黑色的，而且此时我们处理的是二叉树，所以，我们可以对叔叔节点是黑还是红做两条分支。<br>    此时我们心中做到有数的一点是，不管叔叔节点是黑是红，除去关注点之外的这颗树是完美满足四个条件的。而且我们可以肯定关注点与红色父亲的左旋还是右旋都不会改变新状态1！！其实这个道理也是老师讲的case2为什么要左旋改变树的形状到case3的道理，因为我们都把case2转变成case3的时候在不改变状态1的时候，都能够统一处理成case3的初始状态来简化操作。<br>   因此我们根据关注点的叔叔节点是红是黑分成case1与case3来分别处理(切记在case2转变成case3的时候我们是要把关注点从插入点改成插入点的父亲节点，这样就能开始case3的处理)。<br>   3.1当在开始处理case1即叔叔节点是红色的时候，为了保证条件4，即当前局部树的任一分支的黑色节点是否总数一直，所以我们可以交换红父亲与红叔叔的节点为黑色的时候，我们发现从c节点开始的任一分支的黑色总数加了一个数，为了保证全局分支都满足条件4，我们只需要把c节点设置成红色就可以，此时关注点转为c，相当于向树中插入了一个新节点，递归处理<br>    3.2当父亲叔叔节点是黑色的时候，此时如果我们不管怎么改变四个点的颜色都会改变第四个条件，比如把c节点改成红色，此时这个局部树的左右分支黑色节点的总数都减了一个数，此时左边数可以把红色节点改成了黑色节点，此时左树是复原了，但是右树呢？此时我们处理的节点只要把右边中的一个红色节点改成红色不就行了吗？试想如果右树没有红色节点怎么办呢？所以比方法不通。因此可以右旋父亲节点和祖父节点的时候，能够保证状态1不变，然后此时我们想着在此时改变调整节点的颜色，然后不用再递归处理了，此时就完美了<br><br><br>总结一下，左旋和右旋操作能满足条件4，即任何一支线的黑色节点总数状态不变，就可以左旋与右旋。同时在所以颜色互关的时候也要满足条件4就行<br><br><br><br>","like_count":1},{"had_liked":false,"id":130715,"user_name":"森鱼","can_delete":false,"product_type":"c1","uid":1638587,"ip_address":"","ucode":"6AF86EB05088F4","user_header":"https://static001.geekbang.org/account/avatar/00/19/00/bb/25a29311.jpg","comment_is_top":false,"comment_ctime":1567516827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5862484123","product_id":100017301,"comment_content":"关于“左旋”和“右旋”，你可以这么理解，围绕A往左&#47;右旋转，就是拎着A往左&#47;右拉一下，这样的话原来A在的位置就被另一个节点B占领了，此时B连了三个节点：B原来的左右子节点和A，那么当然要分一个给A，左旋就给左子节点（因为现在B的左边被A占领了），右旋就把B的右子节点给A（因为A把B的右边占领了），希望能帮助到大家。","like_count":1},{"had_liked":false,"id":120705,"user_name":"Viva La Vida佳蔚","can_delete":false,"product_type":"c1","uid":1458561,"ip_address":"","ucode":"45DDAD7D3A9D2D","user_header":"https://static001.geekbang.org/account/avatar/00/16/41/81/ecbcfb69.jpg","comment_is_top":false,"comment_ctime":1564978845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5859946141","product_id":100017301,"comment_content":"为了保持平衡，从根节点向叶子节点方向，根据各节点和其兄弟节点的高度差，找到旋转点进行左右旋不行吗？","like_count":1},{"had_liked":false,"id":78400,"user_name":"涂","can_delete":false,"product_type":"c1","uid":1247775,"ip_address":"","ucode":"DC9F3B99A0B4E5","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/1f/cfeb036d.jpg","comment_is_top":false,"comment_ctime":1553140169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848107465","product_id":100017301,"comment_content":"感觉能写看懂就非常牛逼了，更别说能写出来","like_count":1},{"had_liked":false,"id":49087,"user_name":"来碗绿豆汤","can_delete":false,"product_type":"c1","uid":1070051,"ip_address":"","ucode":"B0AB63B8D9729F","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/e3/39dcfb11.jpg","comment_is_top":false,"comment_ctime":1544601165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839568461","product_id":100017301,"comment_content":"为什么删除的case1里面节点a只能是黑石，节点b只能是红色？","like_count":1},{"had_liked":false,"id":41484,"user_name":"k","can_delete":false,"product_type":"c1","uid":1250383,"ip_address":"","ucode":"612C04D327D7BB","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/4f/4d5efcf9.jpg","comment_is_top":false,"comment_ctime":1542791593,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837758889","product_id":100017301,"comment_content":"真应该从2-3树讲起 如果不知道2-3树直接学红黑树真的懵 红黑树其实就是2-3树的简化实现","like_count":1},{"had_liked":false,"id":41074,"user_name":"大次狼","can_delete":false,"product_type":"c1","uid":1154660,"ip_address":"","ucode":"CE9EC8FCF47A7E","user_header":"https://static001.geekbang.org/account/avatar/00/11/9e/64/dd9328c5.jpg","comment_is_top":false,"comment_ctime":1542721808,"is_pvip":true,"replies":[{"id":"14791","content":"因为有可能是从case1过来的","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542765188,"ip_address":"","comment_id":41074,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837689104","product_id":100017301,"comment_content":"添加的case2中一开始就不满足红黑球的定义了，根节点到右子节点经历过的黑色节点数比经过左边可到答节点数要多1","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429692,"discussion_content":"因为有可能是从case1过来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542765188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40328,"user_name":"Demter","can_delete":false,"product_type":"c1","uid":1158439,"ip_address":"","ucode":"BE3B6F726916CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/27/5556ae50.jpg","comment_is_top":false,"comment_ctime":1542594335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837561631","product_id":100017301,"comment_content":"在删除节点的二次调整中，case1情况下b节点如果是黑色,我没看出来相邻的两个红色节点啊，老师可否帮忙指出来？","like_count":1},{"had_liked":false,"id":40283,"user_name":"『LHCY』","can_delete":false,"product_type":"c1","uid":1188449,"ip_address":"","ucode":"A8B5E0467B5F25","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/61/bbfb2d4a.jpg","comment_is_top":false,"comment_ctime":1542589341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837556637","product_id":100017301,"comment_content":"在算法导论上看见的红黑树，最开始一直在想这几个调整是怎样想出来的，很迷茫。","like_count":1},{"had_liked":false,"id":40278,"user_name":"Sharry","can_delete":false,"product_type":"c1","uid":1239293,"ip_address":"","ucode":"045DDB864659F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/fd/035f4c94.jpg","comment_is_top":false,"comment_ctime":1542588953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837556249","product_id":100017301,"comment_content":"之前学习红黑树的时候, 按照维基百科上的情况自己实现了一遍, 结果如图老师所述一致, 没过几天就忘了, 着实有些苦恼, 今天老师用魔方来比喻, 让我觉得非常 nice, 不必过度深究每一步的原理, 这样反而容易陷进去","like_count":1},{"had_liked":false,"id":40276,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1542588871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837556167","product_id":100017301,"comment_content":"学算法导论的时候看过红黑树，只记住了5条特性，其他都忘了，后来也没纠结，因为实在用不到","like_count":1},{"had_liked":false,"id":360278,"user_name":"Geek_6e6296","can_delete":false,"product_type":"c1","uid":2867978,"ip_address":"北京","ucode":"16C4A51D56E2AC","user_header":"","comment_is_top":false,"comment_ctime":1666376441,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666376441","product_id":100017301,"comment_content":"插入操作case3的图有问题","like_count":0},{"had_liked":false,"id":358965,"user_name":"111","can_delete":false,"product_type":"c1","uid":3109487,"ip_address":"北京","ucode":"D6E8E83A118A3E","user_header":"https://static001.geekbang.org/account/avatar/00/2f/72/6f/44c10658.jpg","comment_is_top":false,"comment_ctime":1665104565,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665104565","product_id":100017301,"comment_content":"总结：<br>1. 红黑树的插入删除","like_count":0},{"had_liked":false,"id":357719,"user_name":"迦楼罗","can_delete":false,"product_type":"c1","uid":3169772,"ip_address":"北京","ucode":"65CF12B80A2B46","user_header":"https://static001.geekbang.org/account/avatar/00/30/5d/ec/3b496bc6.jpg","comment_is_top":false,"comment_ctime":1663578927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663578927","product_id":100017301,"comment_content":"小白的第一遍是没太理解，得多看几遍","like_count":0},{"had_liked":false,"id":354616,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"北京","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1660615640,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660615640","product_id":100017301,"comment_content":"果断放弃","like_count":0},{"had_liked":false,"id":354470,"user_name":"蒋委员长夸我帅","can_delete":false,"product_type":"c1","uid":1245341,"ip_address":"广东","ucode":"727C2CC7229615","user_header":"https://static001.geekbang.org/account/avatar/00/13/00/9d/8e605115.jpg","comment_is_top":false,"comment_ctime":1660448871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660448871","product_id":100017301,"comment_content":"说真的  云里雾里的,没有讲清楚怎了来的红黑树的定义,自然理解不了,先放弃了,后面有时间在自己找时间看","like_count":0},{"had_liked":false,"id":353113,"user_name":"老大不小","can_delete":false,"product_type":"c1","uid":1295609,"ip_address":"陕西","ucode":"35BCDD3CB13467","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","comment_is_top":false,"comment_ctime":1659176039,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659176039","product_id":100017301,"comment_content":"插入的地方的图没看懂，新插入的结点是红色的，并且新插入的结点要放在叶子结点，那为啥a下面还有两个子结点？难不成是因为子结点为黑色并且为空？","like_count":0},{"had_liked":false,"id":348549,"user_name":"朱昊晨","can_delete":false,"product_type":"c1","uid":3002630,"ip_address":"","ucode":"8A18BE9A63B589","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL77I4uYg4oBBhA2X8TZT3bqXW5K9ibsCUibQex3YrWaWcmIlXK9vwH8dTbFg4iadORyOWbgINYUHt6Q/132","comment_is_top":false,"comment_ctime":1655192767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655192767","product_id":100017301,"comment_content":"看到大家都对插入的case 2&#47;3提出疑问，认为违背了最短路径上黑色节点数目守恒的法则。其实老师没有讲错，只是没有显式地明确一个前提：case 2&#47;3不是自然状况下红黑树的状态，而是经过case 1变换之后的状态，这并不是最终状态。大家可以试试把case2&#47;3中的a替换成case1中的c，然后把c的子节点都嫁接上去，就会发现黑色节点数目守恒又成立了。","like_count":0},{"had_liked":false,"id":344976,"user_name":"惊蛰","can_delete":false,"product_type":"c1","uid":2574819,"ip_address":"","ucode":"E5A29CF79A24CD","user_header":"https://static001.geekbang.org/account/avatar/00/27/49/e3/1e3320e9.jpg","comment_is_top":false,"comment_ctime":1651909294,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651909294","product_id":100017301,"comment_content":"红黑树是一种特殊的2-3树， 红节点+指向红节点的黑节点， 就是2-3树的3节点","like_count":0},{"had_liked":false,"id":340165,"user_name":"好吃二师兄","can_delete":false,"product_type":"c1","uid":1242173,"ip_address":"","ucode":"A367B52BC79199","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/3d/ec3d6348.jpg","comment_is_top":false,"comment_ctime":1648638774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648638774","product_id":100017301,"comment_content":"推荐看算法（第四版），从二三树开始讲，推导到左倾红黑树，再到二三四树","like_count":0},{"had_liked":false,"id":337683,"user_name":"Today","can_delete":false,"product_type":"c1","uid":1235000,"ip_address":"","ucode":"4FA397F0BD8C6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/38/41027bda.jpg","comment_is_top":false,"comment_ctime":1646971541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646971541","product_id":100017301,"comment_content":"本节学习到了关于红黑树实现的相关细节：<br>0. 红黑树特性三： 红节点不能相邻，红节点父子必定是黑色<br>1. 红黑树的平衡只有两种操作： 左右旋 和 变色<br>2. 插入一个节点时，节点必须是红色，这样不影响性质四，方便调整平衡<br>    2.1 父空直接变黑；父黑插入无需处理，性质三四都满足<br>    2.2 父红叔红，父左插入，祖父和父叔交替变色，转入情况 1，2，3,  4<br>    2.3 父红叔黑，父右插入，父左旋（为了不跟叔红相连），转入情况 4<br>    2.4 父红叔黑，父左插入，祖父右旋，原祖父和原父节点交替变色，调整完成。<br>3. 删除一个节点时，先把后继节点值复制给删除节点,再去删“单儿子”后继节点（参考维基百科做法）<br>    分 三类，总共大概有十几种情况，把各种情况抽象出来，就是：<br>    * 当后继节点父亲的兄弟有红色节点的儿子， 就尽可能把红色节点儿子利用好，调整到后继节点的另一侧，变色之后，就可以转移黑色父亲节点到另一侧，从而平衡删除节点的一侧，黑子加 1<br>    * 当后继节点父亲的兄弟没有红色节点的儿子，就把左右侧的子树的顶点变黑， 后继节点另一侧的子树节点变红，这样一边加1 另一边减 1， 也正好平衡","like_count":0},{"had_liked":false,"id":335108,"user_name":"Geek_ccebd7","can_delete":false,"product_type":"c1","uid":2856861,"ip_address":"","ucode":"F8C4FC22F7B952","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJndjCax04GKdWbmBhTMUTSUxsIvppnjr2yIaMr7qPujWqJFmjicE4eZMDTJfqEARaEXXowNSIEVsw/132","comment_is_top":false,"comment_ctime":1645338365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645338365","product_id":100017301,"comment_content":"百度去查查图文并茂的再来看会清晰点 <br>","like_count":0},{"had_liked":false,"id":333959,"user_name":"申","can_delete":false,"product_type":"c1","uid":2033634,"ip_address":"","ucode":"CE7BFCF552B4F1","user_header":"https://static001.geekbang.org/account/avatar/00/1f/07/e2/32c9a634.jpg","comment_is_top":false,"comment_ctime":1644639263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644639263","product_id":100017301,"comment_content":"分享个人对红黑树的学习笔记：<br>一、四个规则<br>1. 每个节点都有红色或黑色<br>2. 树的根始终是黑色的 （黑土地孕育黑树根）<br>3. 没有两个相邻的红色节点（红色节点不能有红色父节点或红色子节点，并没有说不能出现连续的黑色节点）<br>4. 从节点（包括根）到其任何后代NULL节点（叶子结点下方挂的两个空节点，并且认为他们是黑色的）的每条路径都具有相同数量的黑色节点<br><br>二、两个操作<br><br>1. recolor (变色，重新标记黑色或红色)<br>2. rotation (旋转，这是树达到平衡的关键)<br><br>三、公式口令<br><br>1.新（心）是红，根是黑<br>2.非根看父亲，黑色即完成，红色看叔叔<br>3.叔是红，父叔变黑色，祖父变红色，重复1和2<br>4.叔是黑，分四种，左左，左右，右右，右左<br>5.左左右右提父亲，左右要左旋（与父亲逆时针旋转），右左要右旋（与父亲顺时针旋转）<br>","like_count":0},{"had_liked":false,"id":333765,"user_name":"喵吉","can_delete":false,"product_type":"c1","uid":2865714,"ip_address":"","ucode":"391F95F69058BD","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ba/32/a8ab2f36.jpg","comment_is_top":false,"comment_ctime":1644503575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644503575","product_id":100017301,"comment_content":"“每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点”，我有点理解不了这句话的意思。。。。。","like_count":0},{"had_liked":false,"id":326359,"user_name":"KW💤","can_delete":false,"product_type":"c1","uid":1109389,"ip_address":"","ucode":"290DD7016F4EE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","comment_is_top":false,"comment_ctime":1639482293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639482293","product_id":100017301,"comment_content":"这一节没啥意义 只讲表象 没讲意义","like_count":0},{"had_liked":false,"id":325808,"user_name":"Geek_c0013c","can_delete":false,"product_type":"c1","uid":2372558,"ip_address":"","ucode":"B1E6E3A9DE25B0","user_header":"","comment_is_top":false,"comment_ctime":1639143528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639143528","product_id":100017301,"comment_content":"老师，相邻节点是兄弟节点吗？","like_count":0},{"had_liked":false,"id":324942,"user_name":"纪老猴子","can_delete":false,"product_type":"c1","uid":1468554,"ip_address":"","ucode":"05962FE7279802","user_header":"https://static001.geekbang.org/account/avatar/00/16/68/8a/af8e49a8.jpg","comment_is_top":false,"comment_ctime":1638751509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638751509","product_id":100017301,"comment_content":"花了一段时间看重刷了算法导论的红黑树以及B树，把这几天的经验分享一下：<br>1.《算法导论》中的红黑树确实比较难理解，尤其是红黑树的删除；<br>2. 在Robert Sedgewick大佬的《算法》一书中使用2-3-4树来理解红黑树，这给红黑树的理解带来了一个新的视角，在这个视角下红黑树容易理解很多，同时书中红黑树只能进行左旋，红黑树的删除就容易理解很多；<br>3.对于《算法导论》中的红黑树中的删除，我到现在也说不出来为什么要那么做，但是我通过做笔记、每天重复的方式已经把红黑树删除的RB-DELETE-FIXUP记在脑子里了，这属于短期记忆，面试之前使用这种方法效果不错。","like_count":0},{"had_liked":false,"id":323798,"user_name":"德先生","can_delete":false,"product_type":"c1","uid":1005947,"ip_address":"","ucode":"659061785DCF4C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/7b/ebe8451e.jpg","comment_is_top":false,"comment_ctime":1638167094,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638167094","product_id":100017301,"comment_content":"你把红黑树的实现看做是魔方的复原，他们都有内在的公式的","like_count":0},{"had_liked":false,"id":321458,"user_name":"秦广东","can_delete":false,"product_type":"c1","uid":1085370,"ip_address":"","ucode":"059EEAD8A7BDCF","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/ba/3450267b.jpg","comment_is_top":false,"comment_ctime":1636884391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636884391","product_id":100017301,"comment_content":"说实话 左旋右旋都没理解透","like_count":0},{"had_liked":false,"id":319959,"user_name":"Mew151","can_delete":false,"product_type":"c1","uid":1002201,"ip_address":"","ucode":"D4793F5874F345","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","comment_is_top":false,"comment_ctime":1636019316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636019316","product_id":100017301,"comment_content":"整理的红黑树脑图: https:&#47;&#47;pan.baidu.com&#47;s&#47;1ygKepD_2jhHp7yb4InOWOA<br>提取码: al9f","like_count":0},{"had_liked":false,"id":319876,"user_name":"zero","can_delete":false,"product_type":"c1","uid":2166599,"ip_address":"","ucode":"4707ACBEF1B923","user_header":"https://static001.geekbang.org/account/avatar/00/21/0f/47/43ce582c.jpg","comment_is_top":false,"comment_ctime":1635994685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635994685","product_id":100017301,"comment_content":"插入操作的平衡调整中case2推导到case3中的case3的这个a和b需要交换位置吗？ 不应该是直接将case2中的结果放到case3中的第一张图中吗？ ","like_count":0},{"had_liked":false,"id":317933,"user_name":"Wei鸿","can_delete":false,"product_type":"c1","uid":2750312,"ip_address":"","ucode":"8015E5D852436C","user_header":"https://static001.geekbang.org/account/avatar/00/29/f7/68/e3b1553a.jpg","comment_is_top":false,"comment_ctime":1635064267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635064267","product_id":100017301,"comment_content":"请问一下 插入的case3， 叔叔节点是否必须是叶子空的黑节点<br>如果为非空黑节点也就是有存储数据的黑色节点，不是一开始就不平衡了吗","like_count":0},{"had_liked":false,"id":317835,"user_name":"Geek_5cb572","can_delete":false,"product_type":"c1","uid":2822748,"ip_address":"","ucode":"325A4E31AB6F0B","user_header":"","comment_is_top":false,"comment_ctime":1634985556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634985556","product_id":100017301,"comment_content":"如果像魔方一样需要记忆它的模式算法，那我也选择不记了","like_count":0},{"had_liked":false,"id":316446,"user_name":"Geek_f0adb7","can_delete":false,"product_type":"c1","uid":2741952,"ip_address":"","ucode":"D3EF3C11934802","user_header":"","comment_is_top":false,"comment_ctime":1634305970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634305970","product_id":100017301,"comment_content":"看这个还是必须要了解 2-3树, 2-3-4树的基本概念和 插入与删除的使用.<br>2-3树实现的 左倾红黑树 简化了删除的复杂方式.<br>目前都是以2-3-4树实现的红黑树","like_count":0},{"had_liked":false,"id":314571,"user_name":"VikingJing","can_delete":false,"product_type":"c1","uid":2008281,"ip_address":"","ucode":"7B282F55ABEA39","user_header":"https://static001.geekbang.org/account/avatar/00/1e/a4/d9/a9a5fa69.jpg","comment_is_top":false,"comment_ctime":1633234150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633234150","product_id":100017301,"comment_content":"刚刚没发完，理由如下：在Case3中如果c还有右子节点z的话，那c加了一层黑色，z就比之前平白多了一层黑色。在变换前后，黑色层数发生变化，肯定是不对的。","like_count":0},{"had_liked":false,"id":314570,"user_name":"VikingJing","can_delete":false,"product_type":"c1","uid":2008281,"ip_address":"","ucode":"7B282F55ABEA39","user_header":"https://static001.geekbang.org/account/avatar/00/1e/a4/d9/a9a5fa69.jpg","comment_is_top":false,"comment_ctime":1633234071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633234071","product_id":100017301,"comment_content":"老师好，“针对删除节点的初次调整”的CASE3是不是有点问题？ 我认为关注节点应该是e（d原本的右子节点），而非图中所示的c（a的右子节点）？","like_count":0},{"had_liked":false,"id":310124,"user_name":"晚拜拜了安","can_delete":false,"product_type":"c1","uid":2741577,"ip_address":"","ucode":"F7BB1956C8F2CF","user_header":"https://static001.geekbang.org/account/avatar/00/29/d5/49/e39e391d.jpg","comment_is_top":false,"comment_ctime":1630490960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630490960","product_id":100017301,"comment_content":"老师拿魔方举例，我想是红黑树变来变去都是按某个规则来的，而且这个规则真的很复杂。用代码实现估计更难。","like_count":0},{"had_liked":false,"id":309717,"user_name":"lmtoo","can_delete":false,"product_type":"c1","uid":1133918,"ip_address":"","ucode":"FCD5B9C941D448","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","comment_is_top":false,"comment_ctime":1630312075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630312075","product_id":100017301,"comment_content":"红黑树之前先来两篇2-3树比较好","like_count":0},{"had_liked":false,"id":308301,"user_name":"Juniper","can_delete":false,"product_type":"c1","uid":1174794,"ip_address":"","ucode":"1BC24554034BD3","user_header":"https://static001.geekbang.org/account/avatar/00/11/ed/0a/18201290.jpg","comment_is_top":false,"comment_ctime":1629525986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629525986","product_id":100017301,"comment_content":"好的，我们还是选择跳表吧","like_count":0},{"had_liked":false,"id":307437,"user_name":"王奎-kevin","can_delete":false,"product_type":"c1","uid":2642771,"ip_address":"","ucode":"20099AF686DB3F","user_header":"https://static001.geekbang.org/account/avatar/00/28/53/53/bf842662.jpg","comment_is_top":false,"comment_ctime":1629101454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629101454","product_id":100017301,"comment_content":"本节完全按照代码讲的，不易理解","like_count":0},{"had_liked":false,"id":307035,"user_name":"Jerry","can_delete":false,"product_type":"c1","uid":1621616,"ip_address":"","ucode":"9CDB5CFF39E219","user_header":"https://static001.geekbang.org/account/avatar/00/18/be/70/70c71ec6.jpg","comment_is_top":false,"comment_ctime":1628836837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628836837","product_id":100017301,"comment_content":"插入完全没看懂，放弃红黑树了。","like_count":0},{"had_liked":false,"id":306054,"user_name":"ppyh","can_delete":false,"product_type":"c1","uid":1351148,"ip_address":"","ucode":"14022ADEC9B53F","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/ec/235b74c0.jpg","comment_is_top":false,"comment_ctime":1628323389,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628323389","product_id":100017301,"comment_content":"我对比二三四树来学习，很容易理解，不然就不知道红黑树的维持平衡的每一步操作在干啥","like_count":0},{"had_liked":false,"id":305929,"user_name":"l","can_delete":false,"product_type":"c1","uid":1240793,"ip_address":"","ucode":"637A4400182827","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/d9/e20a3470.jpg","comment_is_top":false,"comment_ctime":1628234871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628234871","product_id":100017301,"comment_content":"可以配合这个视频看，容易理解<br>https:&#47;&#47;www.bilibili.com&#47;video&#47;BV1d64y1z7Uk?p=10&amp;spm_id_from=pageDriver","like_count":0},{"had_liked":false,"id":304688,"user_name":"嘎啦嘎啦","can_delete":false,"product_type":"c1","uid":1087850,"ip_address":"","ucode":"809A2898943E0A","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/6a/20cc72b2.jpg","comment_is_top":false,"comment_ctime":1627550104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627550104","product_id":100017301,"comment_content":"第一次接触，可以说是一脸懵逼，果然手撕红黑树的都是哥哥","like_count":0},{"had_liked":false,"id":300035,"user_name":"寅得锋采","can_delete":false,"product_type":"c1","uid":1620856,"ip_address":"","ucode":"B403F3FCC3674E","user_header":"https://static001.geekbang.org/account/avatar/00/18/bb/78/198dffa9.jpg","comment_is_top":false,"comment_ctime":1624959760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624959760","product_id":100017301,"comment_content":"想留着，等我看完其他的再过来看","like_count":0},{"had_liked":false,"id":298988,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1624416732,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1624416732","product_id":100017301,"comment_content":"目前听到过面试考红黑树的貌似只有字节跳动公司吧？不知道他们面试官怎么想的，我不相信他们能够当场写出来。","like_count":0},{"had_liked":false,"id":298262,"user_name":"牧凉","can_delete":false,"product_type":"c1","uid":1238166,"ip_address":"","ucode":"1F57A16E37C668","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/96/a5d775e9.jpg","comment_is_top":false,"comment_ctime":1623986807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623986807","product_id":100017301,"comment_content":"这篇博客讲得不错：https:&#47;&#47;www.jianshu.com&#47;p&#47;e136ec79235c","like_count":0},{"had_liked":false,"id":297734,"user_name":"奥雷里亚诺布恩迪亚上校","can_delete":false,"product_type":"c1","uid":2628319,"ip_address":"","ucode":"6A16E9D5A57A32","user_header":"https://static001.geekbang.org/account/avatar/00/28/1a/df/75af7513.jpg","comment_is_top":false,"comment_ctime":1623751007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623751007","product_id":100017301,"comment_content":"红色代表3-节点，因为插入删除遇到3节点时需要硬插然后分裂，所以有了这么一堆颜色旋转的规则，而基于这些严格的case规则设定可以保证局部的改变，不至于影响全局，所以发明人才搞出了这么一套规则吧，至始至终都是为了再动态变化后接近完全二叉树的形态，个人认为先从抽象和模糊上理解，再具体案例去实践一遍规则，比如用一堆大小不等的整数。","like_count":0},{"had_liked":false,"id":297634,"user_name":"wubc","can_delete":false,"product_type":"c1","uid":2223995,"ip_address":"","ucode":"AB1AF7417FE6FF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOrAsTjYmJxSiarVfCV8UKkFA3XtIkctRic9U2zCKcibOQANQerPVav6l3JaNInhAVeOQI1iayegS1cQ/132","comment_is_top":false,"comment_ctime":1623681429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623681429","product_id":100017301,"comment_content":"老师，我感觉你这个红黑树调整讲的不太详细呢，一步一步怎么承接的啊，没看懂啊","like_count":0},{"had_liked":false,"id":294729,"user_name":"泥鳅儿","can_delete":false,"product_type":"c1","uid":1323000,"ip_address":"","ucode":"26B47C8FC67615","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ojfRyNRvy1x3Mia0nssz6CNPHrHXwPPmibvds1URgoHQuKXrGiaxrEbsT6sAvuK4N4AOicySh8S9iaWcOLjteOl6Kgg/132","comment_is_top":false,"comment_ctime":1622076837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622076837","product_id":100017301,"comment_content":"你好老师，红黑树，每个节点的颜色是怎么标记的，都是数据，如何区分哪个数据是黑色哪个数据是红色，是节点有个字段吗专门记录颜色的？","like_count":0},{"had_liked":false,"id":294028,"user_name":"阿辉","can_delete":false,"product_type":"c1","uid":1106216,"ip_address":"","ucode":"57DE50B2426AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/28/91280c40.jpg","comment_is_top":false,"comment_ctime":1621687527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621687527","product_id":100017301,"comment_content":"老师，不是很懂啊！请问，插入的平整调整的case 3的结果，似乎不满足“都包含相同数目的黑色节点。”这条性质啊","like_count":0},{"had_liked":false,"id":293485,"user_name":"Huayra","can_delete":false,"product_type":"c1","uid":1031596,"ip_address":"","ucode":"5F8F6EF2783C1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/ac/c9154dfe.jpg","comment_is_top":false,"comment_ctime":1621406590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621406590","product_id":100017301,"comment_content":"对照着Nginx里的红黑树源代码来看，insert比较好理解，delete还是看不懂","like_count":0},{"had_liked":false,"id":291224,"user_name":"双木公子","can_delete":false,"product_type":"c1","uid":1116567,"ip_address":"","ucode":"751885864D3AB7","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/97/4314e2d8.jpg","comment_is_top":false,"comment_ctime":1620128608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620128608","product_id":100017301,"comment_content":"红黑树先放过，后面有时间再来啃","like_count":0},{"had_liked":false,"id":288903,"user_name":"Geek_a886ea","can_delete":false,"product_type":"c1","uid":1454228,"ip_address":"","ucode":"92DB26EAC1B094","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUciczbJlHFFoHQy9bPksQLJ82Bzvia3SUuXJbMxrQKuCPNjcZLaZfHFn7Uq7fF9pPJ9v8XpsttK6g/132","comment_is_top":false,"comment_ctime":1618756611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618756611","product_id":100017301,"comment_content":"老师我再按您的步骤自己尝试实现红黑树，过程中遇到了一些问题也有一些自己的思考：<br>问题：<br>1. 红黑树添加节点的时候，老师给出的case都是叔叔节点 d 是祖父节点 c 的右子树的情况。我认为真实场景中也会存在叔叔节点 d 是祖父节点 c 的左子树的情况，这时候按照老师的case对称处理就好了。<br>2. 红黑树删除节点的时候会不会存在删除一个红节点，其左右子节点都是叶子节点(NIL)的情况？<br><br>思考：<br>我感觉红黑树添加节点的核心思路其实是case1，case3是为case1服务的，case2是为case3服务的。为什么这么说，我认为红黑树的本质和向上生长的2-3树类似，只不过2-3树使用能包含3个子节点节点来保存，红黑树把2-3树中三个子节点中多的那一个节点抽象成了红色的节点，使其一直保持是一颗二叉树。为什么我说核心思路是case1呢，因为我理解case1其本质是黑色下沉，红色上浮，其和2-3添加节点时向上生长的思路完全一致。","like_count":0},{"had_liked":false,"id":288599,"user_name":"Lemon","can_delete":false,"product_type":"c1","uid":2136414,"ip_address":"","ucode":"E52BB361B69825","user_header":"https://static001.geekbang.org/account/avatar/00/20/99/5e/33481a74.jpg","comment_is_top":false,"comment_ctime":1618556962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618556962","product_id":100017301,"comment_content":"## **插入操作的平衡调整（关注叔叔节点）**<br><br>1. 关注节点的叔叔节点是**红色**<br>    - 父叔变黑，祖父变红并绑定，进入 2 或 3；<br>2. 关注节点的叔叔节点是**黑色**，并且其是父节点的**右子节点**<br>    - 关注父节点并围绕其左旋，进入 3；<br>3. 关注节点的叔叔节点是**黑色**，并且其是父节点的**左子节点**<br>    - 祖父节点右旋，将现在的父节点和兄弟节点颜色互换；over；<br><br>## **删除操作的平衡调整**<br><br>- **针对删除节点初步调整（关注子节点）**：让调整后的红黑树继续满足第四条定义<br>    1. 要删除的节点是只有一个子节点<br>        - 使用子节点替换其位置，并改为黑色；over；<br>            - 根据红黑树的定义：删除的节点只可能是黑色，子节点是红色。<br>    2. 要删除的节点有两个非空子节点，并且它的后继节点就是其右子节点。<br>        - 使用子节点替换其位置，并设置为被替换节点的颜色。<br>        - 如果替换后节点是黑色，则为其右子节点加一个黑色（定义）并关注，等待**二次调整**。<br>    3. 要删除的是节点有两个非空子节点，并且节点的后继节点不是右子节点。<br>        - 用方式 1 “摘除”后继节点，将其替换至要删除的节点处，并设置为被替换节点的颜色。<br>        - 如果替换后节点是黑色，则为其右子节点加一个黑色（定义）并关注，等待**二次调整**。<br>- **针对关注节点进行二次调整（关注兄弟节点）**：让红黑树不存在相邻的红色节点<br>    1. 关注节点的**兄弟节点是红色**<br>        - 围绕关注节点的父节点左旋，交换关注节点父节点与现在祖父节点的颜色；continue for.<br>    2. 关注节点的**兄弟节点是黑色**，并且其左右子节点都是黑色。**（兄弟3黑）**<br>        - 将关注节点的兄弟节点的颜色变成红色，从关注节点中去掉一个黑，给其父节点加一个黑，绑定其父节点，continue for；<br>    3. 关注节点的**兄弟节点是黑色**，左子节点是红色，右子节点是黑色**（兄弟黑右黑）**<br>        - 围绕关注节点的兄弟节点右旋，将原兄弟节点与其原左节点颜色互换，进入 case 4；<br>    4. 关注节点的**兄弟节点是黑色**，并且其右子节点是红色的**（兄弟黑右红）**<br>        - 围绕关注节点的父节点左旋；<br>        - 将目前关注节点的祖父点（原叔叔）的颜色设置为关注节点父节点相同的颜色，并将父节点、叔叔节点设置为黑色；<br>        - 从关注节点中去掉一个黑色；over","like_count":0},{"had_liked":false,"id":288406,"user_name":"陈建","can_delete":false,"product_type":"c1","uid":1260516,"ip_address":"","ucode":"043757594B644D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTILKa6xiaBU7ymqcYFEdK7KOMtcJiaLO3SwmibIkkS2RqcIibJCMBtnNfSSjnaJN2t5anoZic8Qhj4bcXw/132","comment_is_top":false,"comment_ctime":1618457610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618457610","product_id":100017301,"comment_content":"请问老师，case2 左旋后 a 和 b 两个红节点不需要处理吗？","like_count":0},{"had_liked":false,"id":287906,"user_name":"帝江","can_delete":false,"product_type":"c1","uid":1590610,"ip_address":"","ucode":"93CBA4E4D05DA5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/B9vSOjMc2a86kYA8R5yDkVdFiaj2JeBZ1PuI9oUKhbnvuZwuibdUam6FTcGzDaiaFdk2GWJveUGhfCVpv4KaOdicoQ/132","comment_is_top":false,"comment_ctime":1618213782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618213782","product_id":100017301,"comment_content":"红黑树的颜色.代表了一种结构.红色代表左右的多少.黑色代表左右的多少.根据颜色就知道哪边多哪边少了.在插入或者删除的时候.调整起来也有个依据.不然的话要整体的看一下树.那样比较麻烦.感觉上这个颜色应该是树结构的&quot;缓存&quot;.","like_count":0},{"had_liked":false,"id":287801,"user_name":"徐志超-Klaus","can_delete":false,"product_type":"c1","uid":2343086,"ip_address":"","ucode":"CF26B39965F2A2","user_header":"https://static001.geekbang.org/account/avatar/00/23/c0/ae/e5e62510.jpg","comment_is_top":false,"comment_ctime":1618153377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618153377","product_id":100017301,"comment_content":"添加的思路，只写了父节点为祖父的左子节点的情况，要整清楚还是得看源码","like_count":0},{"had_liked":false,"id":284850,"user_name":"AndyZheng","can_delete":false,"product_type":"c1","uid":2465177,"ip_address":"","ucode":"9677AE40826CFF","user_header":"https://static001.geekbang.org/account/avatar/00/25/9d/99/a51fcd42.jpg","comment_is_top":false,"comment_ctime":1616497688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616497688","product_id":100017301,"comment_content":"插入情况老师讲的比较笼统，实现起来肯定出错，case2和case3的情况还需要判断关注节点的父节点在祖父节点的左还是右的情况下分别做处理，具体实现代码如下：<br>&#47;**<br>插入调整<br>*&#47;<br>void insertFixup(Node* focus)<br>{<br>    while (true) {<br>        if (focus-&gt;parent == nullptr) {<br>            focus-&gt;color = Color::black;<br>            _tree = focus; &#47;&#47;刷新根节点<br>            break;<br>        }<br>        if (focus-&gt;parent-&gt;color == Color::black) {<br>            break;<br>        }<br>        <br>        Node* grandParent = focus-&gt;parent-&gt;parent;<br>        Node* parent = focus-&gt;parent;<br>        Node* uncle = grandParent-&gt;leftChild == focus-&gt;parent ? grandParent-&gt;rightChild : grandParent-&gt;leftChild;<br>        &#47;**<br>            CASE 1：如果关注节点是 a，它的叔叔节点 d 是红色，我们就依次执行下面的操作：<br>            . 将关注节点 a 的父节点 b、叔叔节点 d 的颜色都设置成黑色；<br>            . 将关注节点 a 的祖父节点 c 的颜色设置成红色；<br>            . 关注节点变成 a 的祖父节点 c；<br>            . continue。<br>            *&#47;<br>        if (uncle-&gt;color == Color::red) {<br>            parent-&gt;color = Color::black;<br>            uncle-&gt;color = Color::black;<br>            grandParent-&gt;color = Color::red;<br>            focus = focus-&gt;parent-&gt;parent;<br>            continue;<br>        }<br>        <br>        if (parent == grandParent-&gt;leftChild) {<br>            if (focus == focus-&gt;parent-&gt;rightChild) {<br>                leftRotate(parent);<br>                Node* tmp = parent;<br>                parent = focus;<br>                focus = tmp;<br>            }<br>            parent-&gt;color = Color::black;<br>            grandParent-&gt;color = Color::red;<br>            rightRotate(grandParent);<br>        }else{<br>            if (focus == focus-&gt;parent-&gt;leftChild) {<br>                rightRotate(parent);<br>                Node* tmp = parent;<br>                parent = focus;<br>                focus = tmp;<br>            }<br>            parent-&gt;color = Color::black;<br>            grandParent-&gt;color = Color::red;<br>            leftRotate(grandParent);<br>        }<br>        <br>        break;<br>    }<br>}","like_count":0},{"had_liked":false,"id":280823,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1614409522,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1614409522","product_id":100017301,"comment_content":"茶艺师学编程<br><br>我愿称这为：最好的红黑树教学","like_count":0},{"had_liked":false,"id":280740,"user_name":"人在江湖龙在江湖","can_delete":false,"product_type":"c1","uid":2285946,"ip_address":"","ucode":"20850038573DAE","user_header":"https://static001.geekbang.org/account/avatar/00/22/e1/7a/b206cded.jpg","comment_is_top":false,"comment_ctime":1614336276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614336276","product_id":100017301,"comment_content":"插入的 case3 图中d节点开始应该是红色，应该是画错了","like_count":0},{"had_liked":false,"id":278458,"user_name":"骑着驴读着书的谢小夕","can_delete":false,"product_type":"c1","uid":1625340,"ip_address":"","ucode":"56F0A469B630A2","user_header":"https://static001.geekbang.org/account/avatar/00/18/cc/fc/92646317.jpg","comment_is_top":false,"comment_ctime":1612950553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612950553","product_id":100017301,"comment_content":"看了一遍，还是没抓住本质，照着规则把红黑树实现了一遍。 <br>我花了半个多月对红黑树的研究，最终得出条结论，没有结合234树，是讲不明白的。 ","like_count":0},{"had_liked":false,"id":277077,"user_name":"Superh","can_delete":false,"product_type":"c1","uid":2304810,"ip_address":"","ucode":"B6394479A3AB1E","user_header":"https://static001.geekbang.org/account/avatar/00/23/2b/2a/51e51255.jpg","comment_is_top":false,"comment_ctime":1612254265,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1612254265","product_id":100017301,"comment_content":"删除的初步case3 标记的节点是不是应该是e啊","like_count":0,"discussions":[{"author":{"id":2008281,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a4/d9/a9a5fa69.jpg","nickname":"VikingJing","note":"","ucode":"7B282F55ABEA39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400325,"discussion_content":"是的，这边画错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633234205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274079,"user_name":"早早凡","can_delete":false,"product_type":"c1","uid":1161584,"ip_address":"","ucode":"4AA7CAB2CAF20D","user_header":"https://static001.geekbang.org/account/avatar/00/11/b9/70/c454312c.jpg","comment_is_top":false,"comment_ctime":1610812799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610812799","product_id":100017301,"comment_content":"最接受不能的就是 只有操作步骤,死记硬背, 没有原因和推导.  红黑树这几个CASE 无法通过理解来记忆.","like_count":0},{"had_liked":false,"id":272183,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1609983758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609983758","product_id":100017301,"comment_content":"算法其实是编程思维中精华的提取，所以学好算法，一方面为了面试，另一方面也为了提高自己的编程逻辑。","like_count":0},{"had_liked":false,"id":271352,"user_name":"cyan-mountain","can_delete":false,"product_type":"c1","uid":2318781,"ip_address":"","ucode":"2797C0D846130C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/fKD3fHiaJajYHkBNnLBYb40ggEqA5lykW4jrqHvXtiap2rPmq8Cj7pj4nTU7BdqHTIzIRKRt5mylnucgwibOZ2Z9g/132","comment_is_top":false,"comment_ctime":1609574239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609574239","product_id":100017301,"comment_content":"理解2-3树的增、删、查就行了，红黑树实在看不懂就弃了吧","like_count":0},{"had_liked":false,"id":270541,"user_name":"jeff","can_delete":false,"product_type":"c1","uid":1026894,"ip_address":"","ucode":"68456DD035BDF4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/4e/82e9657c.jpg","comment_is_top":false,"comment_ctime":1609153387,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609153387","product_id":100017301,"comment_content":"这是目前为止 不如百度搜索的文章讲的清楚的 第一篇。","like_count":0},{"had_liked":false,"id":264467,"user_name":"Geek_7073e7","can_delete":false,"product_type":"c1","uid":1802112,"ip_address":"","ucode":"192BA2FFB12205","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYKTd1Bt8ibClEibhn3hKzia4sxavGczbRta6gWwiaCtj9ZEb087GaGdJ5zibwkt7zbxSHkN8YnSMAr4w/132","comment_is_top":false,"comment_ctime":1606471753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606471753","product_id":100017301,"comment_content":"红黑树相同值的插入是不是只能通过放在相同位置来实现，比如插入2个值为1的节点","like_count":0},{"had_liked":false,"id":262176,"user_name":"张贺龙","can_delete":false,"product_type":"c1","uid":1862219,"ip_address":"","ucode":"209B08E3E7075A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKSjC36vSdPiaibQqrVicXYk7pvia1JKpY8aib9DBNMBHIPVxPE19wP9MTm63akRp6uYBjFibEk6XytrgNg/132","comment_is_top":false,"comment_ctime":1605657435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605657435","product_id":100017301,"comment_content":"红黑树特性总结：两端黑，叶为空，间隔红，黑相同","like_count":0},{"had_liked":false,"id":253421,"user_name":"胜杰","can_delete":false,"product_type":"c1","uid":1052863,"ip_address":"","ucode":"401806B1660784","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bf/a3a3c6d0.jpg","comment_is_top":false,"comment_ctime":1602733142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602733142","product_id":100017301,"comment_content":"看了这篇文章（https:&#47;&#47;www.cnblogs.com&#47;carpenterlee&#47;p&#47;5503882.html）的讲解，对于左右选择有了更清晰的认识：<br>围绕某个节点的左旋：左旋的过程是将x的右子树绕x逆时针旋转，使得x的右子树成为x的父亲，同时修改相关节点的引用。旋转之后，二叉查找树的属性仍然满足。<br>围绕某个节点的右旋：右旋的过程是将x的左子树绕x顺时针旋转，使得x的左子树成为x的父亲，同时修改相关节点的引用。旋转之后，二叉查找树的属性仍然满足。","like_count":0},{"had_liked":false,"id":253212,"user_name":"Jerry Wu","can_delete":false,"product_type":"c1","uid":1711363,"ip_address":"","ucode":"85F9E5060A2A01","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqiaEI7wXhKvaEfUbQOyMMXvHPwgOMlNO26wBNianWJTtibQwpDTDkmpJBlff2fHYwwbkEnMVB3ibuicIQ/132","comment_is_top":false,"comment_ctime":1602651840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602651840","product_id":100017301,"comment_content":"之前看过算法第四版的实现，因为图例比较全所以还是看懂了。但是确实如老师所说的，旋转操作步骤基本已经全部忘干净。","like_count":0},{"had_liked":false,"id":247662,"user_name":"BitbIt","can_delete":false,"product_type":"c1","uid":1412121,"ip_address":"","ucode":"418AB6E264E396","user_header":"https://static001.geekbang.org/account/avatar/00/15/8c/19/870c8992.jpg","comment_is_top":false,"comment_ctime":1599788401,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599788401","product_id":100017301,"comment_content":"神说要有光，于是有了红黑树得定义","like_count":0},{"had_liked":false,"id":243963,"user_name":"Geek_b06914","can_delete":false,"product_type":"c1","uid":2067795,"ip_address":"","ucode":"A9CE6F9CD3AA78","user_header":"","comment_is_top":false,"comment_ctime":1598341873,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598341873","product_id":100017301,"comment_content":"老师我想问一下：插入操作平衡调整的case2中，有2个相邻的节点都是红色的，不需要变色吗？这应该违背了红黑树的定义吧","like_count":0},{"had_liked":false,"id":242198,"user_name":"奥佛铎","can_delete":false,"product_type":"c1","uid":1234919,"ip_address":"","ucode":"A1D544E5F22B7F","user_header":"","comment_is_top":false,"comment_ctime":1597633282,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597633282","product_id":100017301,"comment_content":"战略mark，面头条之前再来背了hhhh","like_count":0},{"had_liked":false,"id":239847,"user_name":"赵","can_delete":false,"product_type":"c1","uid":1730160,"ip_address":"","ucode":"EAC4390FD95EF9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/O3Uf8dibBnKKzibgEhvvKs9vic0dBavSJzn79fZVtH0AxcUT09bvOAYvr2f7vecmwiao7BBGgE5p8lXHSoBMdmQuBw/132","comment_is_top":false,"comment_ctime":1596676827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596676827","product_id":100017301,"comment_content":"老师可以讲一下“每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点。”这句话是什么意思吗?不知道是不是我理解能力有问题，我怎么看CASE3里的图都不是红黑树，而且在老师画的所有的图里也找不到符合定义的图，之前也看过红黑树相关的文章，也遇到过这样的问题，看起来都自相矛盾，所以就放弃了，希望老师能详细给讲一下。","like_count":0},{"had_liked":false,"id":237696,"user_name":"上大学的文盲","can_delete":false,"product_type":"c1","uid":1901926,"ip_address":"","ucode":"87F02F883B4A74","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/icicMFqvtG0hZ6sbK7DgDKApOmsENjyZ6vLwJ34uHibypbpFcwWZntjhdM7BOqdtFt4yFqNdAfx5hMqlA3Dz76F3Q/132","comment_is_top":false,"comment_ctime":1595928808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595928808","product_id":100017301,"comment_content":"这么多平衡操作，会不会引起很高的内存时间消耗","like_count":0},{"had_liked":false,"id":229444,"user_name":"鹅的天牙(Dain) 🐜","can_delete":false,"product_type":"c1","uid":1344077,"ip_address":"","ucode":"EEBE207853E07A","user_header":"https://static001.geekbang.org/account/avatar/00/14/82/4d/ed67c248.jpg","comment_is_top":false,"comment_ctime":1592997243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592997243","product_id":100017301,"comment_content":"插入结点时，为什么case1到case2时，不是用case旋转后的结果接着讲而是在case2中又弄了个新的来讲？看的有点懵逼","like_count":0},{"had_liked":false,"id":228573,"user_name":"豆豆","can_delete":false,"product_type":"c1","uid":1275407,"ip_address":"","ucode":"97788B134C3212","user_header":"https://static001.geekbang.org/account/avatar/00/13/76/0f/c7c8021d.jpg","comment_is_top":false,"comment_ctime":1592740396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592740396","product_id":100017301,"comment_content":"老师说，如果基础不好，不要死磕它，可我不承认，不服啊，我就是要看懂呀，昨天心不静，看不下去，今天下午让自己静下心来，看懂了，也算这节课满足老师最后总结说的要求了吧。<br>极客时间，自己还是要有点极客精神吧。","like_count":0},{"had_liked":false,"id":228319,"user_name":"端点星好运","can_delete":false,"product_type":"c1","uid":1359893,"ip_address":"","ucode":"AA48B23A1C4317","user_header":"https://static001.geekbang.org/account/avatar/00/14/c0/15/be72b945.jpg","comment_is_top":false,"comment_ctime":1592640629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592640629","product_id":100017301,"comment_content":"不知道看了多少遍，以前一点都看不懂，现在至少能看懂大佬在说什么了，虽然面试问到还是躺平，但和魔方一起类比，就大概知道流程了。","like_count":0},{"had_liked":false,"id":224666,"user_name":"王坤祥","can_delete":false,"product_type":"c1","uid":1003327,"ip_address":"","ucode":"FB988B9F381A33","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/3f/6f62f982.jpg","comment_is_top":false,"comment_ctime":1591501102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591501102","product_id":100017301,"comment_content":"红黑树的章节似乎没有讲到【红和黑的作用是什么呀】，我查了一下<br>-----------------<br>红黑树使用红黑二色进行“着色”，目的是利用颜色值作为二叉树的平衡对称性的检查，只要插入的节点“着色”满足红黑二色的规定，最短路径与最长路径不会相差的太远，红黑树的节点分布就能大体上达至均衡。","like_count":0},{"had_liked":false,"id":219509,"user_name":"Ivan.Qi","can_delete":false,"product_type":"c1","uid":1099170,"ip_address":"","ucode":"36F46A4D1F0EAA","user_header":"https://static001.geekbang.org/account/avatar/00/10/c5/a2/4ece341b.jpg","comment_is_top":false,"comment_ctime":1590033929,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590033929","product_id":100017301,"comment_content":"https:&#47;&#47;github.com&#47;Ivanqi&#47;algorithm&#47;blob&#47;master&#47;rbtree&#47;readme.md<br>对文章内容进行了整理，不然看着都觉得晕","like_count":0},{"had_liked":false,"id":219063,"user_name":"Geek_fab8cd","can_delete":false,"product_type":"c1","uid":1618011,"ip_address":"","ucode":"C2735706639A2E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epXKqVY7H7L0dg94R7ico3OS58D6keMujUbVKCJdsIPYJJhQ8ERUiaiaYsnictuzYvldicC0xDvO02YStQ/132","comment_is_top":false,"comment_ctime":1589938649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589938649","product_id":100017301,"comment_content":"我觉得红黑树可以从2-3树开始说起会比较好理解一点。。","like_count":0},{"had_liked":false,"id":216921,"user_name":"GX_Alanxx","can_delete":false,"product_type":"c1","uid":1294911,"ip_address":"","ucode":"C5EB08AAE77E49","user_header":"https://static001.geekbang.org/account/avatar/00/13/c2/3f/4f802365.jpg","comment_is_top":false,"comment_ctime":1589369320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589369320","product_id":100017301,"comment_content":"课后练习，之前从来没有接触过红黑树","like_count":0},{"had_liked":false,"id":216075,"user_name":"Geek_ac7784","can_delete":false,"product_type":"c1","uid":1981613,"ip_address":"","ucode":"62F0E5E6D6F4BA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8Dj4ugujXwY24G8pcpgDFGiciarXetG3ItQ4M9mSQMLyRdRRXEXXJVfib48mGUQAu87QcvImwyJIVJlEFeEguV44w/132","comment_is_top":false,"comment_ctime":1589182831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589182831","product_id":100017301,"comment_content":"学习感悟：我会拧魔方。。。<br>1. 红黑树实现就是照着公式来做，但是要看懂公式。<br>2. 两个操作，一个插入，一个删除<br>    1. 插入好理解<br>    2. 删除有两次调整，针对关注节点的调整和删除后针对相邻红色节点的调整。<br>3. 找准关注节点。不同情况用不同公式:改变红黑，左旋右旋<br>4. 叶子结点均为空黑是为了使代码好操作。叶子结点可以指向一个NIL<br>思考题:<br>算法导论上接触的，看过两遍放弃了。","like_count":0},{"had_liked":false,"id":215985,"user_name":"清风徐来","can_delete":false,"product_type":"c1","uid":1310491,"ip_address":"","ucode":"D460705133834A","user_header":"https://static001.geekbang.org/account/avatar/00/13/ff/1b/e196c2a7.jpg","comment_is_top":false,"comment_ctime":1589163787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589163787","product_id":100017301,"comment_content":"老师好，关于删除步骤的第一阶段case3，我理解下来可能和本文描述的有点出入：<br><br>引用本文原文：<br>“CASE 3：如果要删除的是节点 a，它有两个非空子节点，并且节点 a 的后继节点不是右子节点，我们就依次进行下面的操作：找到后继节点 d，并将它删除，删除后继节点 d 的过程参照 CASE 1；将节点 a 替换成后继节点 d；把节点 d 的颜色设置为跟节点 a 相同的颜色；如果节点 d 是黑色，为了不违反红黑树的最后一条定义，我们给节点 d 的右子节点 c 多加一个黑色，这个时候节点 c 就成了“红 - 黑”或者“黑 - 黑”；这个时候，关注节点变成了节点 c，第二步的调整操作就会针对关注节点来做。”<br><br>个人理解：<br>这个case下， a的后继节点d的左子节点一定是叶子节点（黑nil）， 所以d的情况分为两种讨论：<br>1. d是红色：那么d的右子节点和左子节点一样也是叶子节点（黑nil）， 所以直接删除d，换成叶子节点（黑nil）。<br>2. d是黑色的情况，右节点可以分成两种情况<br>    2.1 右子节点e为叶子节点（黑色nil）， 这时删除d并用e替换后，会导致这个子树缺少一个黑色节点，故需要把节点e标记称 黑-黑<br>    2.2 右子节点e为红色，此时e的左右子节点必然都是叶子节点（黑色nil）。 所以删除d，用e替换，并且将e换成黑色。<br><br>    以上。如果理解的有问题，还请老师和各位同学指正，谢谢！","like_count":0},{"had_liked":false,"id":215709,"user_name":"Mr_scx","can_delete":false,"product_type":"c1","uid":1239546,"ip_address":"","ucode":"28B5CE68A5A339","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcIVlXYuZ3iaPfSF6vBbg3yUps6LKpsZarftyXufMHYKJmMKzH3bIpVkDAVNXE9q0oOw/132","comment_is_top":false,"comment_ctime":1589080946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589080946","product_id":100017301,"comment_content":"关于红黑树的自平衡调整过程，大家可以参考下这篇课程笔记中的相关部分https:&#47;&#47;blog.csdn.net&#47;Mr_SCX&#47;article&#47;details&#47;103712134","like_count":0},{"had_liked":false,"id":209768,"user_name":"201201177","can_delete":false,"product_type":"c1","uid":1901015,"ip_address":"","ucode":"8E2C0DB7A4D3D4","user_header":"","comment_is_top":false,"comment_ctime":1587610844,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587610844","product_id":100017301,"comment_content":"老师讲的红黑树调整方法和算法导论的算法一致的，我前面看过很多资料，发现还有另外一种调整方法（本质是一样的），感觉比算法导论提到方法更简洁更易懂。<br><br>1、整合平衡调整的4种情况为一次3+4重构（重新链接3个节点和4棵子树）：<br>（1）左右双旋<br>（2）左左单旋<br>（3）右左双旋<br>（4）右右单旋<br><br>2、添加节点除了2种简单情况外：<br>（1）插入节点为根<br>（2）插入节点的父亲是黑色<br>只需要修复2种双红缺陷：<br>（RR-1）叔叔节点为黑色<br>（RR-2）叔叔节点为红色<br><br>3、删除节点时在替换后继节点后，有3种简单情况：<br>（1）删除根节点<br>（2）删除红节点<br>（3）继位节点为红色<br>还有4种双黑缺陷：<br>（BB-1）兄弟节点黑色且有红侄子<br>（BB-2R）兄弟节点黑色没红侄子，且父亲为红色<br>（BB-2B）兄弟节点黑色没红侄子，且父亲为黑色<br>（BB-3）兄弟节点为红色<br><br>这种调整方法在各种情况下，的旋转次数、染色次数、是否递归，都有详细的分析说明。","like_count":0},{"had_liked":false,"id":207282,"user_name":"天","can_delete":false,"product_type":"c1","uid":1310629,"ip_address":"","ucode":"664E42100DE272","user_header":"https://static001.geekbang.org/account/avatar/00/13/ff/a5/02953912.jpg","comment_is_top":false,"comment_ctime":1587041777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587041777","product_id":100017301,"comment_content":"删除的二次调整case4的第二条，将关注节点 a 的兄弟节点 c （原来的关注节点a的兄弟节点c）的颜色，跟关注节点 a 的父节点 b 设置成相同的颜色；兄弟节点c其实应该是说原来的第一条步骤 操作 之前的关注节点a的兄弟节点，因为此时c在左旋之后已经变成了a的祖父节点","like_count":0},{"had_liked":false,"id":203690,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1586254891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586254891","product_id":100017301,"comment_content":"说一下我的想法，看过程大家都知道插入简单点，删除复杂因为太多因素会考虑，保证是红黑树的结构，还有就是作者举的例子删除和插入的节点都是a，可能按照字母顺序第一印象的话可能有点障碍，问题不大<br>插入，新节点是在叶子节点上，位置上固定，无非就是再平衡，改变颜色<br>删除，位置不固定各种情况，虽然也是两步走，但看着真他娘的累，也是两步。<br>一是删除节点，这个步骤要开始埋坑了，因为删除后有的节点要做满足某个节点到子节点的黑色个数相同，有的节点是红黑，黑黑（就是一个节点两种状态，红黑就是根据情况他可能是黑可能是红，黑黑就是这个节点是两个黑色的节点，数黑色节点个数要注意）<br>还有评论区有人推荐耗子的推荐的一个数据结构演示地址，我再推荐一下https:&#47;&#47;www.cs.usfca.edu&#47;~galles&#47;visualization&#47;Algorithms.html<br>虽然我也不咋会用","like_count":0},{"had_liked":false,"id":201194,"user_name":"蜗牛","can_delete":false,"product_type":"c1","uid":1086220,"ip_address":"","ucode":"01CC18F12E556D","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/0c/0a6a0d5e.jpg","comment_is_top":false,"comment_ctime":1585731416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585731416","product_id":100017301,"comment_content":"画思维导图+理解总结","like_count":0},{"had_liked":false,"id":191815,"user_name":"馋嘴小乌龟要快跑了","can_delete":false,"product_type":"c1","uid":1883254,"ip_address":"","ucode":"242F2998FCB904","user_header":"https://static001.geekbang.org/account/avatar/00/1c/bc/76/49dfb810.jpg","comment_is_top":false,"comment_ctime":1584798513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584798513","product_id":100017301,"comment_content":"case1调整后，关注结点变成根结点，而后描述成调到case2或case3, 但是case2或case3的初始状态并不是case1调整后的状态，这里看的有点晕","like_count":0},{"had_liked":false,"id":191438,"user_name":"里咯破","can_delete":false,"product_type":"c1","uid":1224546,"ip_address":"","ucode":"2DA41A6D44B3C4","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/62/5eeb9041.jpg","comment_is_top":false,"comment_ctime":1584773248,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584773248","product_id":100017301,"comment_content":"刚开始a&gt;b,最后调整完a&lt;b...","like_count":0},{"had_liked":false,"id":188821,"user_name":"不知","can_delete":false,"product_type":"c1","uid":1803488,"ip_address":"","ucode":"A2ECBFE43ACDAB","user_header":"https://static001.geekbang.org/account/avatar/00/1b/84/e0/cdb6de57.jpg","comment_is_top":false,"comment_ctime":1584421476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584421476","product_id":100017301,"comment_content":"1.红链接均为左链接<br>2.没有任何一个节点同时和两条红链接相连<br>3.该树是完美黑平衡的，即任意空链接到根节点上的黑链接数量相同<br>红链接：将两个2-节点连接起来构成3-节点<br>黑链接：2-3树种的普通链接<br><br>通过先了解23树在看看红黑树 会比较好理解 为什么要左旋和右旋","like_count":0},{"had_liked":false,"id":188468,"user_name":"不知","can_delete":false,"product_type":"c1","uid":1803488,"ip_address":"","ucode":"A2ECBFE43ACDAB","user_header":"https://static001.geekbang.org/account/avatar/00/1b/84/e0/cdb6de57.jpg","comment_is_top":false,"comment_ctime":1584357946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584357946","product_id":100017301,"comment_content":"有个问题 通过case左旋或者右旋后 关注接点是满足红黑树条件了 原来的子节点不用调整吗","like_count":0},{"had_liked":false,"id":187740,"user_name":"Geek_b403af","can_delete":false,"product_type":"c1","uid":1895744,"ip_address":"","ucode":"686D2606E47EF5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJxUlVydHpM5PNRvg9C29H0cQQ0Uby1LZyK5hdn9sqUy1OGOpVOfMHYn578WyYiaCNOrzcaor6KzjQ/132","comment_is_top":false,"comment_ctime":1584203994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584203994","product_id":100017301,"comment_content":"据说今日头条面试需要手写红黑树","like_count":0},{"had_liked":false,"id":186443,"user_name":"Eden Ma","can_delete":false,"product_type":"c1","uid":1457408,"ip_address":"","ucode":"755312F0D154F9","user_header":"https://static001.geekbang.org/account/avatar/00/16/3d/00/7daa7403.jpg","comment_is_top":false,"comment_ctime":1583845881,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583845881","product_id":100017301,"comment_content":"晕了😷","like_count":0},{"had_liked":false,"id":186365,"user_name":"Meizi Li","can_delete":false,"product_type":"c1","uid":1898417,"ip_address":"","ucode":"36D8A51AD96FEE","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f7/b1/2ed8fdd4.jpg","comment_is_top":false,"comment_ctime":1583830358,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583830358","product_id":100017301,"comment_content":"老师，针对删除节点初步调整的case3中，是不是应该是节点e而不是节点c成为“红 - 黑”或者“黑 - 黑”，否则节点c的左右两边不平衡了。。","like_count":0},{"had_liked":false,"id":185702,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1583667683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583667683","product_id":100017301,"comment_content":"红黑树的实现太复杂了，还是把重心放在红黑树时间复杂度的分析上，暂时把下面两个问题弄明白就行了：<br>1. 平衡二叉查找树解决了二叉树由于频繁插入和删除，导致的性能不稳定，时间复杂度由 O(n) 退化为 O(1) 的问题。<br>2. AVL 树是严格的平衡二叉树，树的高度差不会超过 1，但同时为了维护高度的绝对平衡，牺牲了部分插入时的性能，因为需要不断的左旋和右旋来维护树的平衡。红黑树放弃了绝对的平衡，确保树没有一条路径会比其他路径长出俩倍，也就是说树的最大高度为 2logn，时间复杂度还是 O(logn)，但大大缓解了插入时为维护平衡而导致结点旋转的开销。","like_count":0},{"had_liked":false,"id":185685,"user_name":"201201159","can_delete":false,"product_type":"c1","uid":1901003,"ip_address":"","ucode":"23C426B293B949","user_header":"","comment_is_top":false,"comment_ctime":1583662796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583662796","product_id":100017301,"comment_content":"黑-黑这个怎么理解？一个节点不是红就是黑，黑黑表示两个黑？","like_count":0},{"had_liked":false,"id":184632,"user_name":"进击的小明","can_delete":false,"product_type":"c1","uid":1737846,"ip_address":"","ucode":"7C9A774C504177","user_header":"https://static001.geekbang.org/account/avatar/00/1a/84/76/6091523d.jpg","comment_is_top":false,"comment_ctime":1583375007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583375007","product_id":100017301,"comment_content":"没学会 后面回头来再看吧 哈哈哈","like_count":0},{"had_liked":false,"id":184422,"user_name":"一","can_delete":false,"product_type":"c1","uid":1603640,"ip_address":"","ucode":"BCC6241C4CC6D1","user_header":"https://static001.geekbang.org/account/avatar/00/18/78/38/da3959cc.jpg","comment_is_top":false,"comment_ctime":1583311851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583311851","product_id":100017301,"comment_content":"插入删除的时候为啥没考虑二叉查找相关特性","like_count":0},{"had_liked":false,"id":183247,"user_name":"佳娃","can_delete":false,"product_type":"c1","uid":1806618,"ip_address":"","ucode":"47004C40CBE019","user_header":"https://static001.geekbang.org/account/avatar/00/1b/91/1a/c51b24f4.jpg","comment_is_top":false,"comment_ctime":1582981840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582981840","product_id":100017301,"comment_content":"没看懂，也没关系，反正基本不会考。如果有需要，再来看几遍几好了，无非是围着几个固定步骤慢慢旋呗。老师举例非常好，和对着个公式转魔方一样。😀","like_count":0},{"had_liked":false,"id":181024,"user_name":"谢真","can_delete":false,"product_type":"c1","uid":1124650,"ip_address":"","ucode":"8C3402DE107C9F","user_header":"https://static001.geekbang.org/account/avatar/00/11/29/2a/9079f152.jpg","comment_is_top":false,"comment_ctime":1582461482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582461482","product_id":100017301,"comment_content":"这个真看不懂了，留着后面回过来再看，还是没太明白红黑树的应用场景","like_count":0},{"had_liked":false,"id":180541,"user_name":"小明","can_delete":false,"product_type":"c1","uid":1625618,"ip_address":"","ucode":"5A0357E9849226","user_header":"https://static001.geekbang.org/account/avatar/00/18/ce/12/1488e361.jpg","comment_is_top":false,"comment_ctime":1582332718,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582332718","product_id":100017301,"comment_content":"好像每一句话都看懂了，每个case也都能理解是怎么操作的，但是没有整理的轮廓","like_count":0},{"had_liked":false,"id":180144,"user_name":"phantom","can_delete":false,"product_type":"c1","uid":1100424,"ip_address":"","ucode":"75494BFE5C68D1","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/88/680a92bc.jpg","comment_is_top":false,"comment_ctime":1582198102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582198102","product_id":100017301,"comment_content":"红黑树先放放 回头再看 晕了","like_count":0},{"had_liked":false,"id":173840,"user_name":"抱小星","can_delete":false,"product_type":"c1","uid":1504652,"ip_address":"","ucode":"BA7B0DAFDA4AF5","user_header":"https://static001.geekbang.org/account/avatar/00/16/f5/8c/82fb5890.jpg","comment_is_top":false,"comment_ctime":1579734604,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579734604","product_id":100017301,"comment_content":"红节点本不必要，是为了平衡树的高度而出现的，当树不是严格平衡时，少量数据可用红节点存储，这样达成黑节点的完美平衡，是一种relaxation的方法，一种对严格条件的放松。最后为了保证性能不过多退化，规定红节点不能相邻。一切为了性能考虑。","like_count":0},{"had_liked":false,"id":173684,"user_name":"Geek_wuming","can_delete":false,"product_type":"c1","uid":1388314,"ip_address":"","ucode":"AE749892284E3B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/4RdOss6AW97KUaufOFIhQGMWJoRJvSZiayJBa36ic0A3M27hUFSBZhy4ZoXOp6gj1apln2N86icZEg1Z1f5PLEp8A/132","comment_is_top":false,"comment_ctime":1579660444,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579660444","product_id":100017301,"comment_content":"看来作者对红黑树也没有一个很彻底的了解","like_count":0},{"had_liked":false,"id":172627,"user_name":"Geek_94adb8","can_delete":false,"product_type":"c1","uid":1638187,"ip_address":"","ucode":"B142F473E1A0B3","user_header":"","comment_is_top":false,"comment_ctime":1579238299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579238299","product_id":100017301,"comment_content":"正确的学习顺序应该是先看懂AVL树，再来看红黑树","like_count":0},{"had_liked":false,"id":171956,"user_name":"Jowin","can_delete":false,"product_type":"c1","uid":1114356,"ip_address":"","ucode":"19017F7D06C22A","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","comment_is_top":false,"comment_ctime":1579057932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579057932","product_id":100017301,"comment_content":"理解红黑树实现的要点：<br>1) 推导Case<br>   根据红黑树定义, 推导可能的子树结构(3层就可以), 剪掉不需要调整的子树结构，确定所有需要调整的Case;<br>2) 递归调整<br>   先在子树内调整到位,然后把子树当做一个节点,看是否需要继续调整上级子树(也就是关注点切换);<br>3) 分步调整<br>   对于不好一步到位的调整, 分步实施(例如, 先保证子树满足规则4, 再满足规则3);","like_count":0},{"had_liked":false,"id":171163,"user_name":"梦想的优惠券","can_delete":false,"product_type":"c1","uid":1257418,"ip_address":"","ucode":"D3B44F6C618CA7","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/ca/cbce6e94.jpg","comment_is_top":false,"comment_ctime":1578876133,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1578876133","product_id":100017301,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":170293,"user_name":"斜月浮云","can_delete":false,"product_type":"c1","uid":1008933,"ip_address":"","ucode":"25CECBB175DA02","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/25/c6de04bc.jpg","comment_is_top":false,"comment_ctime":1578562768,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1578562768","product_id":100017301,"comment_content":"这篇红黑树个人感觉没讲透。可能不是重点吧。我说下我的理解。个人感觉红黑树重要的还是学习思想。要善于利用数学归纳法。 <br><br>首先，子树分为红树和黑树。红黑树本质是黑树。无论红树黑树，平衡的关键是子树的每层黑点数要一定。注意的是，父节点左右旋动作可以转移多余红点，但被转移的树只能是黑树否则黑点高度会破坏。<br><br>插入这块，红点分插入到红点下还是黑点下。如果插入到黑点下，黑高度不变。插入红点下，就用上述方式转移到另一侧黑树，使黑树变红。如果另一侧是红树就上移红点继续寻找。找到跟节点还没有直接变黑，整棵树黑高度+1(这块很重要，但本文没说）<br><br>删除那块，首先，二叉树删除本质都是删除直接节（直接删除或删除后续节点）。如果删的红点就不需要调整（这块也得理解，很重要）。如果删的黑点，平衡方式就是就把黑色上移。寻找右子树子结点有红色的转移。找不到就上移黑色。最后，如果上移到黑节点还转移不掉，就抛弃黑色，整棵树黑高度-1(这块也很重要，需要说明和理解）<br><br>有了这个意识和数学归纳法基础，理解本文就容易多了。供大家参考。<br><br>","like_count":0},{"had_liked":false,"id":166038,"user_name":"Mr_scx","can_delete":false,"product_type":"c1","uid":1239546,"ip_address":"","ucode":"28B5CE68A5A339","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcIVlXYuZ3iaPfSF6vBbg3yUps6LKpsZarftyXufMHYKJmMKzH3bIpVkDAVNXE9q0oOw/132","comment_is_top":false,"comment_ctime":1577368350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577368350","product_id":100017301,"comment_content":"三、红黑树的自平衡<br>1.红黑树总是通过旋转和变色达到自平衡。<br>（1）左旋：以某个结点作为支点(旋转结点)，其右子结点变为旋转结点的父结点，右子结点的左子结点变为旋转结点的右子结点，左子结点保持不变。<br>（2）右旋：以某个结点作为支点(旋转结点)，其左子结点变为旋转结点的父结点，左子结点的右子结点变为旋转结点的左子结点，右子结点保持不变。<br>（3）变色：结点的颜色由红变黑或由黑变红。<br><br>2.红黑树插入操作的平衡调整<br> - 步骤：先查找插入的位置，插入后自平衡处理<br> - 8种插入情景<br> （1）插入情景1：红黑树为空树<br> （2）插入情景2：插入结点的Key已存在<br> （3）插入情景3：插入结点的父结点为黑结点<br> （4）插入情景4：插入结点的父结点为红结点<br>—》插入情景4.1：叔叔结点存在并且为红结点<br>—》插入情景4.2：叔叔结点不存在或为黑结点，并且插入结点的父亲结点是祖父结点的左子结点<br>———》插入情景4.2.1：插入结点是其父结点的左子结点<br>———》插入情景4.2.2：插入结点是其父结点的右子结点<br>—》插入情景4.3：叔叔结点不存在或为黑结点，并且插入结点的父亲结点是祖父结点的右子结点<br>———》插入情景4.3.1：插入结点是其父结点的右子结点<br>———》插入情景4.3.2：插入结点是其父结点的右子结点<br><br>3.红黑树删除操作的平衡调整<br> - 步骤：先查找目标结点；删除后自平衡处理。<br> - 删除结点找替代结点有3种情情景：<br>（1）情景1：若删除结点无子结点，直接删除<br>（2）情景2：若删除结点只有一个子结点，用子结点替换删除结点<br>（3）情景3：若删除结点有两个子结点，用后继结点（大于删除结点的最小结点）替换删除结点<br>上面3种二叉树的删除情景可以相互转换并且最终都是转换为情景1，删除操作可以看作删除替代结点，而替代结点最后总是在树末。<br> - 删除操作的9种情景：<br>删除情景1：替换结点是红色结点<br>删除情景2：替换结点是黑结点<br>—》删除情景2.1：替换结点是其父结点的左子结点<br>——》删除情景2.1.1：替换结点的兄弟结点是红结点<br>——》删除情景2.1.2：替换结点的兄弟结点是黑结点<br>———》删除情景2.1.2.1：替换结点的兄弟结点的右子结点是红结点，左子结点任意颜色<br>———》删除情景2.1.2.2：替换结点的兄弟结点的右子结点为黑结点，左子结点为红结点<br>———》删除情景2.1.2.3：替换结点的兄弟结点的子结点都为黑结点<br>—》删除情景2.2：替换结点是其父结点的右子结点<br>——》删除情景2.2.1：替换结点的兄弟结点是红结点<br>——》删除情景2.2.2：替换结点的兄弟结点是黑结点<br>———》删除情景2.2.2.1：替换结点的兄弟结点的左子结点是红结点，右子结点任意颜色<br>———》删除情景2.2.2.2：替换结点的兄弟结点的左子结点为黑结点，右子结点为红结点<br>———》删除情景2.2.2.3：替换结点的兄弟结点的子结点都为黑结点","like_count":0},{"had_liked":false,"id":166037,"user_name":"Mr_scx","can_delete":false,"product_type":"c1","uid":1239546,"ip_address":"","ucode":"28B5CE68A5A339","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcIVlXYuZ3iaPfSF6vBbg3yUps6LKpsZarftyXufMHYKJmMKzH3bIpVkDAVNXE9q0oOw/132","comment_is_top":false,"comment_ctime":1577368344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577368344","product_id":100017301,"comment_content":"一、平衡二叉查找树<br>1.定义：二叉树中任意一个节点的左右子树的高度相差不能大于 1。<br>2.完全二叉树、满二叉树其实都是平衡二叉树，但是非完全二叉树也有可能是平衡二叉树。<br>3.作用：解决普通二叉查找树在频繁的插入、删除等动态更新的情况下，出现时间复杂度退化的问题。<br>4.平衡二叉查找树中“平衡”的意思，其实就是让整棵树左右看起来比较“对称”、比较“平衡”，不要出现左子树很高、右子树很矮的情况。这样就能让整棵树的高度相对来说低一些，相应的插入、删除、查找等操作的效率高一些。<br>5.只要所设计的树的高度不比 log2n 大很多（比如树的高度仍然是对数量级的），尽管它不符合我们前面讲的严格的平衡二叉查找树的定义，但我们仍然可以说，这是一个合格的平衡二叉查找树。<br>6.种类：Splay Tree（伸展树）、Treap（树堆）、AVL树、红黑树等。<br><br>二、红黑树（R-B Tree）<br>1. 一棵红黑树需要满足以下几个性质：<br>（1）每个节点要么是黑色，要么是红色。<br>（2） 根节点是黑色的；<br>（3）每个叶子节点都是黑色的空节点（NIL），也就是说，叶子节点不存储数据；<br>（4）任何相连的节点都不能同时为红色，也就是说，红色节点是被黑色节点隔开的，每个红色结点的两个子结点一定都是黑色；<br>（5）每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点，从这个性质可以进一步推出，如果一个结点存在黑子结点，那么该结点肯定有两个子结点；<br>2. 红黑树是“近似平衡”的<br>（1）平衡二叉查找树的初衷，是为了解决二叉查找树因为动态更新导致的性能退化问题。所以，“平衡”的意思可以等价为性能不退化。“近似平衡”就等价为性能不会退化的太严重。<br>（2）红黑树的最大高度近似 2log2n，只比高度平衡的 AVL 树的高度（log2n）仅仅大了一倍，在性能上，下降得并不多。所以它是近似平衡的，插入、删除、查找操作的时间复杂度都是 O(logn)。<br>（3）实际上，AVL 树为了维持高度的平衡，就要付出更多的代价。每次插入、删除都要做调整，就比较复杂、耗时。所以，对于有频繁的插入、删除操作的数据集合，使用 AVL 树的代价就有点高了。这时候，红黑树只是做到了近似平衡，并不是严格的平衡，所以在维护平衡的成本上，要比 AVL 树要低。<br>（4）红黑树的插入、删除、查找各种操作性能都比较稳定。所以，在工程中，但凡是用到动态插入、删除、查找数据的场景，都可以用到它。","like_count":0},{"had_liked":false,"id":163814,"user_name":"SteveYang","can_delete":false,"product_type":"c1","uid":1754829,"ip_address":"","ucode":"C42BCA4F40A9EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCbnOvEatUN4ysE2cl6zJNoAJVXXuQVhicQ1jxh6Z2Towrmmc1I6PndaicuQQ0RyyJPyJQicv4tSib9Q/132","comment_is_top":false,"comment_ctime":1576806488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576806488","product_id":100017301,"comment_content":"学习红黑树是一个漫长的过程，要多看多分析多理解，动手画图辅助理解，对每个情况要自己学会画图分解，最后能够对每个情况进行编写加深理解。","like_count":0},{"had_liked":false,"id":162743,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1576583658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576583658","product_id":100017301,"comment_content":"看了几遍，一些困扰的问题也找到对应的答案：<br>1 如果插入节点case1 已经是根节点，如何处理？ 答案是“如果插入的节点是根节点，那我们直接改变它的颜色，把它变成黑色就可以了。” 但这个“”插入的节点“改成”关注节点“感觉理解就清楚了；<br>2 对于删除节点的变换，我还是一脸茫然，这个是老师的总结，因为”“要么红要么黑”和“红-黑”“黑-黑”节点确实情况多，比较抽象。我也搜了一些资料，https:&#47;&#47;www.jianshu.com&#47;p&#47;e136ec79235c  将删除节点直接归类到关注节点，理解起来更顺畅。","like_count":0},{"had_liked":false,"id":161856,"user_name":"Panda🐟","can_delete":false,"product_type":"c1","uid":1002401,"ip_address":"","ucode":"C6007A3192516A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/a1/c2719a5a.jpg","comment_is_top":false,"comment_ctime":1576380343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576380343","product_id":100017301,"comment_content":"这节看了一个多小时，还是没完全理解，感觉可以先跳过，学完整个课程再回来读。先理解下面三点：<br>1. 二叉查找树有性能退化情况<br>2. 平衡二叉查找树可以解决上述情况<br>3. 红黑树是性能稳定的平衡二叉树","like_count":0},{"had_liked":false,"id":161745,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1576314065,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576314065","product_id":100017301,"comment_content":"插入的case1不理解，如果初始红黑树就是case1，即根节点置为红色，那后面怎么操作呢？我的解决方案是，如果层数是3(第三层是黑色空节点)，那插入的新节点直接给黑色，可以么？","like_count":0},{"had_liked":false,"id":161531,"user_name":"杰洛特","can_delete":false,"product_type":"c1","uid":1098146,"ip_address":"","ucode":"46D0574654F8AC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqEacia8yO1dR5Tal9B7w8PzTRrViajlAvDph96OqcuBGe29icbXOibhibGmaBcO7BfpVia0Y8ksZwsuAYQ/132","comment_is_top":false,"comment_ctime":1576224848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576224848","product_id":100017301,"comment_content":"删除节点的二次调整中举的例子都是关注节点是左节点，但是第一步调整的时候，最后关注的节点都是右节点，这是不是矛盾了？","like_count":0},{"had_liked":false,"id":161287,"user_name":"whileflow","can_delete":false,"product_type":"c1","uid":1554356,"ip_address":"","ucode":"D11DF822D2865A","user_header":"https://static001.geekbang.org/account/avatar/00/17/b7/b4/33ccf207.jpg","comment_is_top":false,"comment_ctime":1576166402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576166402","product_id":100017301,"comment_content":"为什么我会觉得最后一个CASE4那里，第一小点“围绕关注节点 a 的父节点 b 左旋”之后，第二小点“<br>将关注节点 a 的兄弟节点 c 的颜色，跟关注节点 a 的父节点 b 设置成相同的颜色”里面“关注节点a的兄弟节点c”不对(=_=)左旋之后c已经不是a的兄弟节点了吧？","like_count":0},{"had_liked":false,"id":159803,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1575794363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575794363","product_id":100017301,"comment_content":"放弃red black tree了  看不懂 面试应该不写这样的代码<br>","like_count":0},{"had_liked":false,"id":159536,"user_name":"SMTCode","can_delete":false,"product_type":"c1","uid":1109038,"ip_address":"","ucode":"0D837A753E4FAB","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/2e/49d13bd2.jpg","comment_is_top":false,"comment_ctime":1575674542,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575674542","product_id":100017301,"comment_content":"删除CASE4的第2、3步是否可以合并为一条：<br>将第1步旋转后的关注节点a的父节点b和a的新祖父节点c交换颜色。","like_count":0},{"had_liked":false,"id":158590,"user_name":"Tree","can_delete":false,"product_type":"c1","uid":1064664,"ip_address":"","ucode":"F53C863FF9159C","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/d8/8608ec03.jpg","comment_is_top":false,"comment_ctime":1575421159,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575421159","product_id":100017301,"comment_content":"老师，删除操作初步调整中的case2 中后继节点c一定是黑色的吧，c没有左子树。如果为红色是不是一定违反红黑树到叶子结点之间的黑色结点数相同？<br>","like_count":0},{"had_liked":false,"id":155441,"user_name":"imperial","can_delete":false,"product_type":"c1","uid":1465302,"ip_address":"","ucode":"8D0693B3C142B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/d6/d6c26ea2.jpg","comment_is_top":false,"comment_ctime":1574689506,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574689506","product_id":100017301,"comment_content":"红黑树的调整其实和avl树的旋转一样，只要遵循根结点的左侧的节点一定比根结点大，根节点的右侧一定比根节点大，无非就是加上了颜色的变换，根节点的左子树还是一颗avl树，右子树还是一颗avl树，由于红黑树的颜色只有红黑，而avl树的旋转共有4种，排列组合就是8种情况，每进行一次旋转都要改变相反的颜色即可","like_count":0},{"had_liked":false,"id":151329,"user_name":"乾坤瞬间","can_delete":false,"product_type":"c1","uid":1683130,"ip_address":"","ucode":"15BDCF29CBF8EB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLWIUF31dicT1YBTxWNX0uvbMxl15UwdlwFicGhNo0DsQ7CbM6k16EQxK7bwSMcicLGMdYto4jGPTvrg/132","comment_is_top":false,"comment_ctime":1573700418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573700418","product_id":100017301,"comment_content":"老师，在删除节点的case3的第三步和第四部，应该把文字中的c节点改成e节点才能满足第四条件不变把？就比如，如果在c节点加一个黑色，那么c节点的左路是满足第四条件不变，那右路就是加了1个黑色节点，所以违反了第四条件。不知道我的理解对不对","like_count":0},{"had_liked":false,"id":151309,"user_name":"乾坤瞬间","can_delete":false,"product_type":"c1","uid":1683130,"ip_address":"","ucode":"15BDCF29CBF8EB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLWIUF31dicT1YBTxWNX0uvbMxl15UwdlwFicGhNo0DsQ7CbM6k16EQxK7bwSMcicLGMdYto4jGPTvrg/132","comment_is_top":false,"comment_ctime":1573698136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573698136","product_id":100017301,"comment_content":"老师，问下在删除节点的时候讲到的前驱结点和后继节点是怎么定义的？","like_count":0},{"had_liked":false,"id":151113,"user_name":"大明的微信","can_delete":false,"product_type":"c1","uid":1644922,"ip_address":"","ucode":"687341327E704B","user_header":"https://static001.geekbang.org/account/avatar/00/19/19/7a/67e245ca.jpg","comment_is_top":false,"comment_ctime":1573654706,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573654706","product_id":100017301,"comment_content":"这一节能听懂的绝对是天神。看到 case2我就已经确定我是肯定理解不了红黑树的调整了。<br><br>不过没什么影响。我目前是打算先大致理解一下这些数据结构的概念。比如，什么是树，什么是队列，栈，图这些。","like_count":0},{"had_liked":false,"id":150444,"user_name":"黄海峰","can_delete":false,"product_type":"c1","uid":1275357,"ip_address":"","ucode":"E9340719BC96B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/75/dd/9ead6e69.jpg","comment_is_top":false,"comment_ctime":1573535641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573535641","product_id":100017301,"comment_content":"发明红黑树的真是天才，别说记步骤没用，理解了步骤也很虚，得证明这样做是正确的才厉害","like_count":0},{"had_liked":false,"id":148621,"user_name":"会飞的鱼","can_delete":false,"product_type":"c1","uid":1257205,"ip_address":"","ucode":"BA3FC4E0BF7B39","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erloYzyia2hRy19E3aCtc0pf10MiaGmzEcXw8UZ3jC3LAibD8icWAFVCXGAlAic3mpjBUrHvyreyhAjIFw/132","comment_is_top":false,"comment_ctime":1573039296,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573039296","product_id":100017301,"comment_content":"讲的太急了，补充博客才理解，左右旋那部分如果能多加一些变化的箭头就更好一些了","like_count":0},{"had_liked":false,"id":146656,"user_name":"海贼王","can_delete":false,"product_type":"c1","uid":1239233,"ip_address":"","ucode":"9F35793FAA3F5E","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/c1/e2cc1d04.jpg","comment_is_top":false,"comment_ctime":1572595384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572595384","product_id":100017301,"comment_content":"再次复习，有了不一样的体会，但是对于复杂的调整过程，还是有所畏惧的！老师，你走了吗？","like_count":0},{"had_liked":false,"id":144834,"user_name":"niexia","can_delete":false,"product_type":"c1","uid":1238585,"ip_address":"","ucode":"FB95E807E0B1BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/39/1dad4153.jpg","comment_is_top":false,"comment_ctime":1572068507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572068507","product_id":100017301,"comment_content":"左旋右旋，看图理解感觉还是有点抽象，是不是可以这样理解：<br>可以用手比划一下，相当于手动旋转一个按钮一下，就会高度交换，以及一个子节点的移动。<br>在右边才能左旋，在左边才能右旋，旋转之后涉及到一个子节点的移动。<br>","like_count":0},{"had_liked":false,"id":144363,"user_name":"杨小凡","can_delete":false,"product_type":"c1","uid":1308912,"ip_address":"","ucode":"5A7ACF4A79FA8F","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/f0/0285e98a.jpg","comment_is_top":false,"comment_ctime":1571904052,"is_pvip":false,"replies":[{"id":"55798","content":"可以的","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1572045101,"ip_address":"","comment_id":144363,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571904052","product_id":100017301,"comment_content":"老师，准备写一篇博客，讲解红黑树的，是否可以引用您讲解的部分观点，会注明观点出处","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471903,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572045101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143131,"user_name":"雪影绮缘","can_delete":false,"product_type":"c1","uid":1236895,"ip_address":"","ucode":"BB131E1EC110DE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/9f/18810a24.jpg","comment_is_top":false,"comment_ctime":1571635698,"is_pvip":false,"replies":[{"id":"55996","content":"我也没实现😂","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1572231142,"ip_address":"","comment_id":143131,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571635698","product_id":100017301,"comment_content":"git上红黑谁的代码没见到， 王老师发下链接","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471394,"discussion_content":"我也没实现😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572231142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141884,"user_name":"郑家庄赶大车的老郑","can_delete":false,"product_type":"c1","uid":1687570,"ip_address":"","ucode":"D432A3961840B8","user_header":"https://static001.geekbang.org/account/avatar/00/19/c0/12/1afb4b75.jpg","comment_is_top":false,"comment_ctime":1571242810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571242810","product_id":100017301,"comment_content":"我开始以为删除算法第一次调整case3老师错了，后来发现自己犯二了<br>case3第一步删除d的时候用了case1，所以c左右子树自动平衡，但因为删掉了一个黑色结点，所以a与c不平衡了，给c补一个黑点。<br>因此补黑位置是c不是e。","like_count":0},{"had_liked":false,"id":141881,"user_name":"郑家庄赶大车的老郑","can_delete":false,"product_type":"c1","uid":1687570,"ip_address":"","ucode":"D432A3961840B8","user_header":"https://static001.geekbang.org/account/avatar/00/19/c0/12/1afb4b75.jpg","comment_is_top":false,"comment_ctime":1571242252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571242252","product_id":100017301,"comment_content":"冒昧的对老师的删除算法提一个疑问：<br>1.有没有可能要删除的结点是一个红色结点，且子结点全为null，这样可以直接删除补null，但似乎不在给出的3种情况之中？","like_count":0},{"had_liked":false,"id":141638,"user_name":"刘楠","can_delete":false,"product_type":"c1","uid":1120773,"ip_address":"","ucode":"9F19D44CBEE039","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/05/f154d134.jpg","comment_is_top":false,"comment_ctime":1571204974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571204974","product_id":100017301,"comment_content":"一脸蒙b","like_count":0},{"had_liked":false,"id":140687,"user_name":"lunar","can_delete":false,"product_type":"c1","uid":1197007,"ip_address":"","ucode":"4FC1E388AD98C6","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/cf/118c4ef5.jpg","comment_is_top":false,"comment_ctime":1571029603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571029603","product_id":100017301,"comment_content":"Case3右树最后多了一个黑色节点，怎么就调整结束了呢？一脸懵逼","like_count":0},{"had_liked":false,"id":139294,"user_name":"子午河洲","can_delete":false,"product_type":"c1","uid":1328977,"ip_address":"","ucode":"BB282CEBB590A2","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/51/e2d4833b.jpg","comment_is_top":false,"comment_ctime":1570605086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570605086","product_id":100017301,"comment_content":"红黑树的左旋操作<br><br>假设待左旋的结构中，P为父节点，S为孩子节点。左旋操作后，S节点代替P节点的位置，P节点成为S节点的左孩子，S节点的左孩子成为P节点的右孩子。<br><br>红黑树的右旋操作。<br><br>假设待右旋的结构中，P为父节点，S为孩子节点。右旋操作后，S节点代替P节点的位置，P节点成为S节点的右孩子，S节点的右孩子成为P节点的左孩子。","like_count":0},{"had_liked":false,"id":135011,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1568975501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568975501","product_id":100017301,"comment_content":"以前在看《STL源码剖析》时仔细看过红黑树的代码，并且对照着课本实现过，感觉花时间的话还是没问题的。难得是不理解红黑树为什么要这么定义？这个可能又涉及到数学推理和证明了","like_count":0},{"had_liked":false,"id":134984,"user_name":"徐亮","can_delete":false,"product_type":"c1","uid":1646323,"ip_address":"","ucode":"1EE4C515C4F319","user_header":"https://static001.geekbang.org/account/avatar/00/19/1e/f3/fe4273fe.jpg","comment_is_top":false,"comment_ctime":1568968873,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568968873","product_id":100017301,"comment_content":"完全懵了。。。","like_count":0},{"had_liked":false,"id":133338,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1568520810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568520810","product_id":100017301,"comment_content":"😂😂😂连续看了2个星期，终于会了。我是不是笨了，别人看个2，3天。","like_count":0},{"had_liked":false,"id":133069,"user_name":"钱勇","can_delete":false,"product_type":"c1","uid":1602652,"ip_address":"","ucode":"BA2796F17E54E5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLzSRrK59sydlOmgvqIFm1pjHA55RcM5ttWvHdOZyibZhFCr7picy4Xf5Bf9dLOW8d2DGUwA1zormzw/132","comment_is_top":false,"comment_ctime":1568345311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568345311","product_id":100017301,"comment_content":"关于删除操作的第一步操作， 针对删除节点的初步调整  有2点疑问：<br>1）case2中： ”如果节点 c 是黑色，为了不违反红黑树的最后一条定义，我们给节点C的右子节点d多加一个黑色，这时节点d就变成了“红-黑”或 “黑-黑”。“<br> 为什么多加一个黑黑节点就可以满足这一性质， 如果c是黑色， 那右侧加一起不就是3个黑色， 和左边如何做到相同呢？<br>2）case3:  这里的后继节点d是如何定义的？ 不太明白， 望大神解答！ ","like_count":0},{"had_liked":false,"id":130326,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1567426290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567426290","product_id":100017301,"comment_content":"一看到左旋右旋，我就旋了","like_count":0},{"had_liked":false,"id":130017,"user_name":"书策稠浊","can_delete":false,"product_type":"c1","uid":1307497,"ip_address":"","ucode":"A29875CE15FDA3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","comment_is_top":false,"comment_ctime":1567352233,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1567352233","product_id":100017301,"comment_content":"头条面试手写红黑树","like_count":0,"discussions":[{"author":{"id":1196864,"avatar":"https://static001.geekbang.org/account/avatar/00/12/43/40/e7ef18de.jpg","nickname":"嘉一","note":"","ucode":"8D16BD0B75B019","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8429,"discussion_content":"这么凶残么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568004561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1307497,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","nickname":"书策稠浊","note":"","ucode":"A29875CE15FDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1196864,"avatar":"https://static001.geekbang.org/account/avatar/00/12/43/40/e7ef18de.jpg","nickname":"嘉一","note":"","ucode":"8D16BD0B75B019","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9175,"discussion_content":"不然怎么叫宇宙条","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568132256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8429,"ip_address":""},"score":9175,"extra":""}]}]},{"had_liked":false,"id":129332,"user_name":"子非","can_delete":false,"product_type":"c1","uid":1017892,"ip_address":"","ucode":"1C3E589FDEEE1C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/24/544f7a8c.jpg","comment_is_top":false,"comment_ctime":1567089447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567089447","product_id":100017301,"comment_content":"花了三天才看明白 Java 中 TreeMap 红黑树的实现。重新回过头来想想，各种 case 其实只是为了最终的出路，然后根据出路，就可以反推各种 case 了。添加，出路只有一个，对应老师的 case 3 调整结束；删除，出路也只有一个，对应老师的 case 4 调整结束；其它，要么是为了结束，要么是继续循环。","like_count":0},{"had_liked":false,"id":125984,"user_name":"青青子衿","can_delete":false,"product_type":"c1","uid":1438102,"ip_address":"","ucode":"4A388A3BA70C29","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","comment_is_top":false,"comment_ctime":1566289349,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566289349","product_id":100017301,"comment_content":"红黑树真是难，看了一个星期总算看明白了","like_count":0},{"had_liked":false,"id":124335,"user_name":"青青子衿","can_delete":false,"product_type":"c1","uid":1438102,"ip_address":"","ucode":"4A388A3BA70C29","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","comment_is_top":false,"comment_ctime":1565862200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565862200","product_id":100017301,"comment_content":"删除-&gt;平衡调整的case3，删除前，e节点不可以是黑色的吧？","like_count":0},{"had_liked":false,"id":124019,"user_name":"Xinming","can_delete":false,"product_type":"c1","uid":1454945,"ip_address":"","ucode":"F7330DD975D248","user_header":"https://static001.geekbang.org/account/avatar/00/16/33/61/da6d8713.jpg","comment_is_top":false,"comment_ctime":1565792670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565792670","product_id":100017301,"comment_content":"强烈建议看不明白的小伙伴，可以先了解2-3树，因为红黑树是从完美2-3树演化而来的，里面的几个条件，在看懂了2-3树之后，其来龙去脉会清晰很多","like_count":0},{"had_liked":false,"id":124010,"user_name":"见思","can_delete":false,"product_type":"c1","uid":1595921,"ip_address":"","ucode":"26F4428210F168","user_header":"https://static001.geekbang.org/account/avatar/00/18/5a/11/56397685.jpg","comment_is_top":false,"comment_ctime":1565791075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565791075","product_id":100017301,"comment_content":"插入操作的case3 如果祖父节点的左子树为空咋办？右旋？","like_count":0},{"had_liked":false,"id":123850,"user_name":"凯玲","can_delete":false,"product_type":"c1","uid":1246373,"ip_address":"","ucode":"CF152D36B8EC70","user_header":"https://static001.geekbang.org/account/avatar/00/13/04/a5/a12612e4.jpg","comment_is_top":false,"comment_ctime":1565771641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565771641","product_id":100017301,"comment_content":"我要晕会儿","like_count":0},{"had_liked":false,"id":123210,"user_name":"Xinming","can_delete":false,"product_type":"c1","uid":1454945,"ip_address":"","ucode":"F7330DD975D248","user_header":"https://static001.geekbang.org/account/avatar/00/16/33/61/da6d8713.jpg","comment_is_top":false,"comment_ctime":1565626629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565626629","product_id":100017301,"comment_content":"真的佩服想出红黑树规则的人...这么绕的玩意是怎么归纳出来的呢","like_count":0},{"had_liked":false,"id":120407,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1564885673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564885673","product_id":100017301,"comment_content":"我第一次了解红黑树，照着图看老师的步骤能明白，就是知道要按照转魔方一样的逻辑。不过删除的case 4，围绕关注节点的父节点左旋后，C已经不是关注节点的兄弟节点了，而是祖父节点了，这里是不是表述有误呢？","like_count":0},{"had_liked":false,"id":120306,"user_name":"老白","can_delete":false,"product_type":"c1","uid":1397031,"ip_address":"","ucode":"39881175152D49","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/27/f0dd6f19.jpg","comment_is_top":false,"comment_ctime":1564824530,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1564824530","product_id":100017301,"comment_content":"这个插入的例子举得不好，case2、3起始的树就不满足红黑条件，这个玩意确实难写","like_count":0},{"had_liked":false,"id":115552,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1563620827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563620827","product_id":100017301,"comment_content":"以前在大学里学的都是标准的平衡二叉树，红黑树还是第一次接触，个人感觉在概念上平衡二叉树比红黑树更清晰，原理也更好理解，平衡调整操作和红黑树也差不多，看了老师的讲解，觉得两者原理都大致差不多，目的都是使左右子树的高度接近平衡，红黑树的调整策略也是先调整距离关注节点最近的子树的平衡，然后把关注节点逐步往上移动，重复调整操作，直到整颗红黑树都符合定义要求。这个是我对红黑树的一个比较模糊的理解，请老师指正。","like_count":0},{"had_liked":false,"id":115213,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1563509007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563509007","product_id":100017301,"comment_content":"先把基础的掌握了，再来啃这个","like_count":0},{"had_liked":false,"id":114615,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1563350438,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563350438","product_id":100017301,"comment_content":"当时看算法书的时候，书中是用二三树推演的，当时觉得红黑树都懂了，今天一看，大半已经迷失了,不过就算看懂，平时没怎么用到，还是要忘的。","like_count":0},{"had_liked":false,"id":114312,"user_name":"小白菜","can_delete":false,"product_type":"c1","uid":1568340,"ip_address":"","ucode":"ACD1267D329B96","user_header":"https://static001.geekbang.org/account/avatar/00/17/ee/54/dac0a6b6.jpg","comment_is_top":false,"comment_ctime":1563270231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563270231","product_id":100017301,"comment_content":"看了这一节，一乱蒙圈，多看几遍，接着往下学习！","like_count":0},{"had_liked":false,"id":113886,"user_name":"逻各斯与努斯","can_delete":false,"product_type":"c1","uid":1476477,"ip_address":"","ucode":"148F124E649B0F","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/7d/5b331647.jpg","comment_is_top":false,"comment_ctime":1563179804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563179804","product_id":100017301,"comment_content":"红黑树特点：<br>1、根节点为黑色；<br>2、叶子节点全部为黑色的空节点（NULL）；<br>3、任何相邻的两个节点不能都为红色，也就是红色节点被黑色节点隔开；<br>4、每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点。<br>红黑树的复原方法：<br>对关注节点的左旋，右旋，改变颜色<br><br>","like_count":0},{"had_liked":false,"id":113615,"user_name":"灰灰灰","can_delete":false,"product_type":"c1","uid":1042164,"ip_address":"","ucode":"519DB0429C4A80","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BDxD1k4ibAUPcljPLwgsnobjTfk2TxPTzCLps2uoGbD3HGIiaUF7XGLUnBArTyAySJzia0R6GRhroYwfyVwniaiaibzg/132","comment_is_top":false,"comment_ctime":1563094809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563094809","product_id":100017301,"comment_content":"每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点；<br>这个在插入节点的CASE3最终图中根节点到叶子z黑色节点数是1和叶子p的黑色节点是2，这个不是不符合前提么？","like_count":0},{"had_liked":false,"id":113614,"user_name":"灰灰灰","can_delete":false,"product_type":"c1","uid":1042164,"ip_address":"","ucode":"519DB0429C4A80","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BDxD1k4ibAUPcljPLwgsnobjTfk2TxPTzCLps2uoGbD3HGIiaUF7XGLUnBArTyAySJzia0R6GRhroYwfyVwniaiaibzg/132","comment_is_top":false,"comment_ctime":1563094606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563094606","product_id":100017301,"comment_content":"为啥新插入的节点一定在叶子节点上的？","like_count":0},{"had_liked":false,"id":112910,"user_name":"andy1855","can_delete":false,"product_type":"c1","uid":1588760,"ip_address":"","ucode":"C1426CDCD143CA","user_header":"https://static001.geekbang.org/account/avatar/00/18/3e/18/4085ae5a.jpg","comment_is_top":false,"comment_ctime":1562841789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562841789","product_id":100017301,"comment_content":"左右旋示意图为什么不细讲一下？","like_count":0},{"had_liked":false,"id":112468,"user_name":"☆星月夜","can_delete":false,"product_type":"c1","uid":1215506,"ip_address":"","ucode":"22BCA9807D0BD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/12/ccf8d2ca.jpg","comment_is_top":false,"comment_ctime":1562741722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562741722","product_id":100017301,"comment_content":"红黑树就是因为avl树为了保持平衡二叉树的特点而不断进行调整，在实际应用中，每次插入，删除操作太多平衡操作，所以红黑树相当于是avl树的调整版本，不是严格意义上的平衡二叉树，但是比avl来说有更好的性能，平衡二叉树的难点就是旋转（单旋转，双旋转），对于老师说的不明白的建议从avl树学起，学完后再学avl树会简单很多，感谢老师的分享","like_count":0},{"had_liked":false,"id":106607,"user_name":"🍸周澳🤗จุ๊บ","can_delete":false,"product_type":"c1","uid":1440905,"ip_address":"","ucode":"F43CE389EBAEE8","user_header":"https://static001.geekbang.org/account/avatar/00/15/fc/89/397feef0.jpg","comment_is_top":false,"comment_ctime":1561355707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561355707","product_id":100017301,"comment_content":"删除的CASE3, 添加的黑色节点应该加在E节点,而不应该是C节点吧,因为加在C节点,会导致C节点的右子树多出一个黑色节点,以致树的不平衡吧","like_count":0},{"had_liked":false,"id":106313,"user_name":"林峰峰","can_delete":false,"product_type":"c1","uid":1457609,"ip_address":"","ucode":"83C2093135BBB8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3B5MoC4DfBt00nnVshEBFHHkNVgbcBrXsd3SxFicdN3XX5ILOe7GJxKvtJKCY53xNCuxSV8ABxNulbhkibm1lXIw/132","comment_is_top":false,"comment_ctime":1561262077,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561262077","product_id":100017301,"comment_content":"没看懂哈哈，强忍着读了一遍，主要是不清楚为什么有这样的炒作，最开始如何想出来的","like_count":0},{"had_liked":false,"id":103331,"user_name":"windcaller","can_delete":false,"product_type":"c1","uid":1514157,"ip_address":"","ucode":"1CA3E849805770","user_header":"https://static001.geekbang.org/account/avatar/00/17/1a/ad/faf1bf19.jpg","comment_is_top":false,"comment_ctime":1560415559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560415559","product_id":100017301,"comment_content":"删除的时候？后继结点是什么意思？","like_count":0},{"had_liked":false,"id":100555,"user_name":"better","can_delete":false,"product_type":"c1","uid":1169063,"ip_address":"","ucode":"AF1DB566EBB8A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/d6/a7/ac23f5a6.jpg","comment_is_top":false,"comment_ctime":1559576895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559576895","product_id":100017301,"comment_content":"终于算是理解了，记录一下：<br>https:&#47;&#47;zhaoyubetter.github.io&#47;book&#47;<br>如有不对，请多多包涵并指点。","like_count":0},{"had_liked":false,"id":98924,"user_name":"Sophie","can_delete":false,"product_type":"c1","uid":1000008,"ip_address":"","ucode":"BB4F4A32EF9B6D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/48/030b108e.jpg","comment_is_top":false,"comment_ctime":1559116498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559116498","product_id":100017301,"comment_content":"仔细看了一下删除的两步骤，其中第一步得出来的关注节点是后驱节点的右子节点，然后在第二步的4种case中的关注节点a，在图中显示的都是左子节点，语言描述没有问题，可能图会误导一些人！","like_count":0},{"had_liked":false,"id":98394,"user_name":"蛛菲娅","can_delete":false,"product_type":"c1","uid":1516740,"ip_address":"","ucode":"DB192DE3A1E41F","user_header":"https://static001.geekbang.org/account/avatar/00/17/24/c4/f10e15f4.jpg","comment_is_top":false,"comment_ctime":1558975950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558975950","product_id":100017301,"comment_content":"对于删除，对文中两个点存疑，不知是否理解正确:<br>1. 删除第一阶段，变为“红+黑”的节点，直接变黑即可游戏结束。文中跟黑黑节点一样往上走，增加理解成本且可能有坑。<br>2. 删除第一阶段的CASE3，应该给e节点加黑，而不是c节点。给c节点加黑会导致以c为根的子树不平衡了。<br><br>并非杠or挑刺，此系列我亦有所收获，感谢老师。","like_count":0},{"had_liked":false,"id":97107,"user_name":"haha","can_delete":false,"product_type":"c1","uid":1036122,"ip_address":"","ucode":"1F018DC1DFEEE4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/5a/ce1011b1.jpg","comment_is_top":false,"comment_ctime":1558589847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558589847","product_id":100017301,"comment_content":"我觉得《算法》中从2-3树推演红黑树讲的非常好，直接硬讲红黑树反而很难理解","like_count":0},{"had_liked":false,"id":90777,"user_name":"小邓","can_delete":false,"product_type":"c1","uid":1474505,"ip_address":"","ucode":"1E903D5622D39F","user_header":"https://static001.geekbang.org/account/avatar/00/16/7f/c9/40c609ee.jpg","comment_is_top":false,"comment_ctime":1556637350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556637350","product_id":100017301,"comment_content":"本节强烈推荐配合《算法》阅读，看书上的代码理解会快些。","like_count":0},{"had_liked":false,"id":88654,"user_name":"Geek_04e22a","can_delete":false,"product_type":"c1","uid":1184505,"ip_address":"","ucode":"B64FF12EA28BA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/12/f9/7e6e3ac6.jpg","comment_is_top":false,"comment_ctime":1555979754,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1555979754","product_id":100017301,"comment_content":"作者大大，没有看到根节点为红色处理调整了","like_count":0,"discussions":[{"author":{"id":1241770,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","nickname":"失火的夏天","note":"","ucode":"10C6E66EB2A65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3813,"discussion_content":"红黑树的性质有一条，根节点一定是黑的，如果根节点是红的，你直接给他变黑就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564834631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85211,"user_name":"Tomcat","can_delete":false,"product_type":"c1","uid":1346364,"ip_address":"","ucode":"B270CEED693256","user_header":"https://static001.geekbang.org/account/avatar/00/14/8b/3c/0462eca7.jpg","comment_is_top":false,"comment_ctime":1555002785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555002785","product_id":100017301,"comment_content":"我认为，真正理解红黑树的关键就是，理解左旋和右旋。<br><br>左旋的过程是将X的右子树绕X逆时针旋转，使得X 的右子树成为X的父亲，同时根据二叉树修改相关节点，旋转以后，二叉树的属性仍满足；<br><br>右旋是将X的左子树绕X顺时针旋转，使得X的左子树成为X的父亲，同时修改相关节点引用，仍能满足二叉树的定义。<br><br>知道了概念，更要去动手画图才能真的理解，我甚至还用代码实现了！如果你理解了红黑树的定义和左右旋转，基本这一节听懂是没有问题的。","like_count":0},{"had_liked":false,"id":81823,"user_name":"袁蕴旭","can_delete":false,"product_type":"c1","uid":1100369,"ip_address":"","ucode":"94B1016A5F7980","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/51/180b8b89.jpg","comment_is_top":false,"comment_ctime":1554043366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554043366","product_id":100017301,"comment_content":"得先看2-3树，再看红黑树才能理解","like_count":0},{"had_liked":false,"id":81183,"user_name":"爱学习的超人张","can_delete":false,"product_type":"c1","uid":1262417,"ip_address":"","ucode":"22EDA88C339F63","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKgiaOK3jrpyibibqrT9zb5deKkTRzejW3VckqOOsYUpiaGqXn3uzB13yoOFyzlYtacKuY30icGbia9MRmg/132","comment_is_top":false,"comment_ctime":1553826910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553826910","product_id":100017301,"comment_content":"请教老师个问题，插入时的case1中，为什么要改变关注节点a的祖父节点c的颜色为红色？如果保持不变的话已经是满足红黑树规则了吧？","like_count":0},{"had_liked":false,"id":80866,"user_name":"Feily","can_delete":false,"product_type":"c1","uid":1300246,"ip_address":"","ucode":"D10D08621E7761","user_header":"https://static001.geekbang.org/account/avatar/00/13/d7/16/e774a2e5.jpg","comment_is_top":false,"comment_ctime":1553744050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553744050","product_id":100017301,"comment_content":"看了这么多篇，就这篇懵了，不深究","like_count":0},{"had_liked":false,"id":79461,"user_name":"a檬檬檬檬奇","can_delete":false,"product_type":"c1","uid":1396692,"ip_address":"","ucode":"802160A94BE924","user_header":"https://static001.geekbang.org/account/avatar/00/15/4f/d4/6b31cfc3.jpg","comment_is_top":false,"comment_ctime":1553487442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553487442","product_id":100017301,"comment_content":"个人认为分红黑的作用是为了插入删除时调整二叉树使它尽可能平衡，如果不分颜色，就不知道怎么调整了！另个人感觉，把图中的字母去掉，只记颜色变化，其实会好理解点，就像记魔方公式一样。","like_count":0},{"had_liked":false,"id":79459,"user_name":"a檬檬檬檬奇","can_delete":false,"product_type":"c1","uid":1396692,"ip_address":"","ucode":"802160A94BE924","user_header":"https://static001.geekbang.org/account/avatar/00/15/4f/d4/6b31cfc3.jpg","comment_is_top":false,"comment_ctime":1553487077,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553487077","product_id":100017301,"comment_content":"个人认为分红黑是为了插入删除时调整二叉树使它尽量平衡，如果不分颜色，就调整起来。","like_count":0},{"had_liked":false,"id":78821,"user_name":"byronwx","can_delete":false,"product_type":"c1","uid":1090933,"ip_address":"","ucode":"034EA3266CBBC0","user_header":"https://static001.geekbang.org/account/avatar/00/10/a5/75/41602108.jpg","comment_is_top":false,"comment_ctime":1553248257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553248257","product_id":100017301,"comment_content":"Case1 中第三步，关注节点变成 a 的祖父节点 c 是为了什么？","like_count":0},{"had_liked":false,"id":74620,"user_name":"涂海生","can_delete":false,"product_type":"c1","uid":1015911,"ip_address":"","ucode":"E3DA62CF9A7745","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/67/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1552268532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552268532","product_id":100017301,"comment_content":"case3中为啥把C 改颜色","like_count":0},{"had_liked":false,"id":73071,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1551791066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551791066","product_id":100017301,"comment_content":"完全就是一种套规则，以后再深究","like_count":0},{"had_liked":false,"id":72668,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1551689254,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551689254","product_id":100017301,"comment_content":"这张看的是云里雾里，但能体会到做的操作是为了尽量符合红黑树的规则，从这里开始往后就难了","like_count":0},{"had_liked":false,"id":72645,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1551684395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551684395","product_id":100017301,"comment_content":"看完红黑树的插入之后发现看删除，我已经绝望了。。。","like_count":0},{"had_liked":false,"id":72383,"user_name":"懒猫","can_delete":false,"product_type":"c1","uid":1206544,"ip_address":"","ucode":"B4B567A11B491D","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/10/275ae749.jpg","comment_is_top":false,"comment_ctime":1551604554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551604554","product_id":100017301,"comment_content":"我想问下，文中说的后继结点，比如a节分别有左右子节点b和c，那a的后继结点就是c？b、c不应该都是a的后继结点吗","like_count":0},{"had_liked":false,"id":70347,"user_name":"Jackson","can_delete":false,"product_type":"c1","uid":1238528,"ip_address":"","ucode":"DE3701573337F4","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/00/dbc5b7c6.jpg","comment_is_top":false,"comment_ctime":1551081595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551081595","product_id":100017301,"comment_content":"插入的步骤中，<br>CASE 1 的图调整结束后，不一定都转到case2或者case3了吧？就像case1里面的图应该直接把c变成黑色就行了，感觉不在case2和case3的范畴啊","like_count":0},{"had_liked":false,"id":65672,"user_name":"qqq","can_delete":false,"product_type":"c1","uid":1398870,"ip_address":"","ucode":"D5718010493F29","user_header":"","comment_is_top":false,"comment_ctime":1549551871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549551871","product_id":100017301,"comment_content":"为什么（删除的第一阶段） case 3中    如果节点 d 是黑色，为了不违反红黑树的最后一条定义，我们给，节点 d 的右子节点 c 多加一个黑色，这个时候节点 c 就多一个黑色]]]] 为什么不是给d后面的e 多加一个黑色  而是给前面的C加    <br><br><br><br>","like_count":0},{"had_liked":false,"id":65588,"user_name":"孙志强","can_delete":false,"product_type":"c1","uid":1325997,"ip_address":"","ucode":"9C070F1E4EC6FF","user_header":"https://static001.geekbang.org/account/avatar/00/14/3b/ad/31193b83.jpg","comment_is_top":false,"comment_ctime":1549466631,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1549466631","product_id":100017301,"comment_content":"删除的第一次调整case3，找要删除结点的后继结点，后继结点满足case1，为什么不是删除结点d，然后结点e替换结点d的位置，并且把结点e变成黑色呢?","like_count":0},{"had_liked":false,"id":65366,"user_name":"镞砺括羽","can_delete":false,"product_type":"c1","uid":1309089,"ip_address":"","ucode":"EC4CD773CA06EA","user_header":"https://static001.geekbang.org/account/avatar/00/13/f9/a1/0396e1fb.jpg","comment_is_top":false,"comment_ctime":1549285642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549285642","product_id":100017301,"comment_content":"这个要看懂真烧脑，看来要多看几遍了","like_count":0},{"had_liked":false,"id":65198,"user_name":"張煥旭","can_delete":false,"product_type":"c1","uid":1161975,"ip_address":"","ucode":"8D01E2FEAF0C99","user_header":"https://static001.geekbang.org/account/avatar/00/11/ba/f7/173efc45.jpg","comment_is_top":false,"comment_ctime":1549101551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549101551","product_id":100017301,"comment_content":"红黑树是由2-3树演变来的，因为2-3树实现起来太复杂了，但是理解起来可能更简单，所以理解不了红黑树的同学可以先去看一下算法第四版对2-3树的讲解","like_count":0},{"had_liked":false,"id":64370,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1548756094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548756094","product_id":100017301,"comment_content":"老师有个问题，就是红黑树插入的必须是红色，这时候如果所插入的元素就是红黑树的第一个元素，那么根据红黑树的特征，根节点必须是黑色的。但是这时候插入的是红色。这个不是前后矛盾吗？？？请老师解惑下！","like_count":0},{"had_liked":false,"id":63867,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1548565011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548565011","product_id":100017301,"comment_content":"想请教一下老师。插入的情况，case1 关注节点变成祖父节点c，相当于递归地往上调整。case1最后跳转到case2或者case3，是不是忽略了case1啊？为什么往上调整，不会出现case1呢？","like_count":0},{"had_liked":false,"id":62825,"user_name":"朱东旭","can_delete":false,"product_type":"c1","uid":1242338,"ip_address":"","ucode":"C48DD620A63868","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/e2/dbc4a5f2.jpg","comment_is_top":false,"comment_ctime":1548166830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548166830","product_id":100017301,"comment_content":"单选转和双旋转是挺复杂的内容，搜了几篇博客细细阅读才明白。感觉没有专门一节说不清这些东西。😂","like_count":0},{"had_liked":false,"id":61182,"user_name":"被吹落的风","can_delete":false,"product_type":"c1","uid":1242309,"ip_address":"","ucode":"AF62645E386A7B","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/c5/39f2acfd.jpg","comment_is_top":false,"comment_ctime":1547633284,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547633284","product_id":100017301,"comment_content":"老师，红黑树作为二叉查找树，不应该保证数据是有序的吗，看上面处理插入和删除的操作并没有这方面的处理啊？还有一点不是很理解，就是关注节点是如何自动变化的？","like_count":0},{"had_liked":false,"id":58803,"user_name":"不可言喻的2","can_delete":false,"product_type":"c1","uid":1371438,"ip_address":"","ucode":"D734DE670D6AF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkdQpT1UAl2wjADkrc1fGy9ks9FQZnxC4P5VyABwatlWrr8AciaAr8RxA7p89CYlxlCqcdSbbmKeg/132","comment_is_top":false,"comment_ctime":1547196680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547196680","product_id":100017301,"comment_content":"想当初花了一个星期去理解记忆AVL，伸展树，红黑树的平衡规则，就为了能不看资料自己写出完整的代码","like_count":0},{"had_liked":false,"id":57400,"user_name":"xuery","can_delete":false,"product_type":"c1","uid":1027584,"ip_address":"","ucode":"F461B61BE06131","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/00/025f37e7.jpg","comment_is_top":false,"comment_ctime":1546781410,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1546781410","product_id":100017301,"comment_content":"通过自己画图理解，基本看懂了，代码实现按照思路写应该也不难，不过就是有点不知其所以然，那就先不纠结为什么这样调整可以保证红黑树的后两条规则了","like_count":0},{"had_liked":false,"id":55131,"user_name":"killven","can_delete":false,"product_type":"c1","uid":1240239,"ip_address":"","ucode":"1EF16E38A45D19","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/af/167757c1.jpg","comment_is_top":false,"comment_ctime":1546049953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546049953","product_id":100017301,"comment_content":"有个疑问，case3调整完之后的树是不是已经不满足红黑树的最后一条定义了？还是我哪里理解错了？<br>--每个节点，从该节点到达其可达叶子节点的所有路径，都包含相同数目的黑色节点","like_count":0},{"had_liked":false,"id":50618,"user_name":"Geek_ff0975","can_delete":false,"product_type":"c1","uid":1256909,"ip_address":"","ucode":"2CBA9490C98931","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoH0yFsw11puWoI04QibBDaDLTfvvpsXpCp3MbLwibcRmmPZrrCxNEUhvTyeIicKzzKaKGiaDAIdhLibmw/132","comment_is_top":false,"comment_ctime":1545016949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545016949","product_id":100017301,"comment_content":"B节点围绕A节点左旋:首先B节点是A节点的右字节点，从平面图上来说就是B节点和它的所有右子节点围绕A逆时针旋转至B节点成为A的父节点，B节点和他的左子节点成为A的右子节点，A的左子节点不变。右旋相反，这样理解对吗?","like_count":0},{"had_liked":false,"id":50342,"user_name":"学习爱好者","can_delete":false,"product_type":"c1","uid":1236851,"ip_address":"","ucode":"F00A42CAB9912D","user_header":"","comment_is_top":false,"comment_ctime":1544956370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544956370","product_id":100017301,"comment_content":"争哥，插入节点的Case3，感觉调整完了也不平衡呀，不满足第四条，每个节点到可达叶子节点的黑色节点个数不相同啊","like_count":0},{"had_liked":false,"id":49318,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1544664654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544664654","product_id":100017301,"comment_content":"case3，最后，根节点到达叶子节点的路径不一样呢","like_count":0},{"had_liked":false,"id":47912,"user_name":"Yunhe","can_delete":false,"product_type":"c1","uid":1098759,"ip_address":"","ucode":"D5DEA594AC6A3A","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/07/dcfde0f8.jpg","comment_is_top":false,"comment_ctime":1544255867,"is_pvip":false,"replies":[{"id":"17050","content":"IPad  Paper","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1544258820,"ip_address":"","comment_id":47912,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1544255867","product_id":100017301,"comment_content":"请教下老师: 内容里面的这些图用什么软件工具画出来的呀？效果很好","like_count":0,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431940,"discussion_content":"IPad  Paper","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544258820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46722,"user_name":"刘明","can_delete":false,"product_type":"c1","uid":1113614,"ip_address":"","ucode":"95BE75871C675F","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/0e/e40ce6ea.jpg","comment_is_top":false,"comment_ctime":1543973794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543973794","product_id":100017301,"comment_content":"红黑树这么讲是枯燥的，需要由来源讲，从2-3树来讲再调整的话就很简单了。建议大家看algorithms 这本书，红黑树作者写的。","like_count":0},{"had_liked":false,"id":46612,"user_name":"Share","can_delete":false,"product_type":"c1","uid":1253046,"ip_address":"","ucode":"564CE223D2D542","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/b6/aaf188b0.jpg","comment_is_top":false,"comment_ctime":1543951410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543951410","product_id":100017301,"comment_content":"有点不太明白左旋和右旋是怎么搞定插入的","like_count":0},{"had_liked":false,"id":45753,"user_name":"Laughing_Lz","can_delete":false,"product_type":"c1","uid":1251342,"ip_address":"","ucode":"7A7445E96F2978","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/0e/39307052.jpg","comment_is_top":false,"comment_ctime":1543769874,"is_pvip":false,"replies":[{"id":"16354","content":"我文章的开头不是讲了嘛 你再看下","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1543801497,"ip_address":"","comment_id":45753,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543769874","product_id":100017301,"comment_content":"看到这里彻底看不懂了，我看过很多次数据结构与算法，每次都是学到这里就放弃了。再次走到这个路口，纠结要不要放弃，想问下老师，如果红黑树这些不能彻底掌握，那后面的图，深度广度优先遍历什么的 能否理解？我觉得要理解老师这一节的知识，我得花好几天去学学关于红黑树的基础，专栏能讲解的还是太少了。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431193,"discussion_content":"我文章的开头不是讲了嘛 你再看下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543801497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45191,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1543559051,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543559051","product_id":100017301,"comment_content":"红黑树是二叉树，但不一定是平衡二叉树，更不一定是完全二叉树，所以用数组实现有些浪费空间，那么红黑树都是用链表实现的么？","like_count":0},{"had_liked":false,"id":44666,"user_name":"cweioo","can_delete":false,"product_type":"c1","uid":1087300,"ip_address":"","ucode":"E48D291E6C6993","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/44/52b5e2e2.jpg","comment_is_top":false,"comment_ctime":1543471966,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543471966","product_id":100017301,"comment_content":"case1调整后c时活动节点又是根节点，然后会变成黑色？","like_count":0},{"had_liked":false,"id":44661,"user_name":"cweioo","can_delete":false,"product_type":"c1","uid":1087300,"ip_address":"","ucode":"E48D291E6C6993","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/44/52b5e2e2.jpg","comment_is_top":false,"comment_ctime":1543471811,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543471811","product_id":100017301,"comment_content":"case1调整后根节点是红的？","like_count":0},{"had_liked":false,"id":44600,"user_name":"程序员大天地","can_delete":false,"product_type":"c1","uid":1249001,"ip_address":"","ucode":"7A21F15FEE2D5B","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/e9/98b6ea61.jpg","comment_is_top":false,"comment_ctime":1543461714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543461714","product_id":100017301,"comment_content":"红黑树的插入看懂了，删除有点难，没有深究","like_count":0},{"had_liked":false,"id":44476,"user_name":"qrhu12","can_delete":false,"product_type":"c1","uid":1207327,"ip_address":"","ucode":"C0029E60D6DA21","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/1f/d94be03b.jpg","comment_is_top":false,"comment_ctime":1543452289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543452289","product_id":100017301,"comment_content":"老师，能比较一下红黑树跟跳表的优缺点及适用场景么？","like_count":0},{"had_liked":false,"id":44278,"user_name":"花仙子","can_delete":false,"product_type":"c1","uid":1249216,"ip_address":"","ucode":"9840BF416F1F0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0f/c0/e6151cce.jpg","comment_is_top":false,"comment_ctime":1543398623,"is_pvip":false,"replies":[{"id":"15767","content":"不会的","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1543403422,"ip_address":"","comment_id":44278,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543398623","product_id":100017301,"comment_content":"看了三两天时间才把插入调整看明白，基本上是以三种情况为基础递归操作，但是担心的是转来转去，会不会一直无法满足递归退出条件（满足红黑树），从而形成死循环了？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430705,"discussion_content":"不会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543403422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43837,"user_name":"_","can_delete":false,"product_type":"c1","uid":1101519,"ip_address":"","ucode":"3B318BE236F402","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/cf/27ca5e72.jpg","comment_is_top":false,"comment_ctime":1543307745,"is_pvip":false,"replies":[{"id":"15782","content":"如果感兴趣自己研究吧 红黑树不是重点","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1543404529,"ip_address":"","comment_id":43837,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543307745","product_id":100017301,"comment_content":"看的好懵逼，能否在讲策略的时候，如何通过旋转达到“平衡”的目的。这样或许更好。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430518,"discussion_content":"如果感兴趣自己研究吧 红黑树不是重点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543404529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43533,"user_name":"寂静的声音","can_delete":false,"product_type":"c1","uid":1020916,"ip_address":"","ucode":"9A839520267567","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/f4/8d881025.jpg","comment_is_top":false,"comment_ctime":1543237255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543237255","product_id":100017301,"comment_content":"引用：<br>zixuan：这个不是设计而是推导出来的，源自2-3树 https:&#47;&#47;blog.csdn.net&#47;fei33423&#47;article&#47;details&#47;79132930<br><br>结合了留言区中的这条链接才略懂了点，如果不是大学啃过数据结构，这文章真不容易看下来啊","like_count":0},{"had_liked":false,"id":43423,"user_name":"Jeff","can_delete":false,"product_type":"c1","uid":1316265,"ip_address":"","ucode":"B5C07DA4877388","user_header":"https://static001.geekbang.org/account/avatar/00/14/15/a9/800757d8.jpg","comment_is_top":false,"comment_ctime":1543225152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543225152","product_id":100017301,"comment_content":"终于看到第26章掉队了+_+","like_count":0},{"had_liked":false,"id":43408,"user_name":"董航","can_delete":false,"product_type":"c1","uid":1231787,"ip_address":"","ucode":"9CA208FD26F849","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/ab/1aac53bf.jpg","comment_is_top":false,"comment_ctime":1543223605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543223605","product_id":100017301,"comment_content":"我觉得吧，边看，边百度，更好一点，如果只百度，看不懂，老师讲的是大致思路和思想","like_count":0},{"had_liked":false,"id":43217,"user_name":"WILL","can_delete":false,"product_type":"c1","uid":1130078,"ip_address":"","ucode":"6ACDF7962DCA96","user_header":"https://static001.geekbang.org/account/avatar/00/11/3e/5e/7b36d8fa.jpg","comment_is_top":false,"comment_ctime":1543197040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543197040","product_id":100017301,"comment_content":"插入的节点的父节点是黑色节点可以正常插入，那如果它的子节点是红色节点岂不就不正常了？","like_count":0},{"had_liked":false,"id":43093,"user_name":"辉哥","can_delete":false,"product_type":"c1","uid":1236983,"ip_address":"","ucode":"21A65F4EE6CD04","user_header":"","comment_is_top":false,"comment_ctime":1543160821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543160821","product_id":100017301,"comment_content":"老师，插入case3的例子是不是不满足红黑树的特性，是不是还需要进行进一步调整，才能成为一个正确的红黑树","like_count":0},{"had_liked":false,"id":42789,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1543045914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543045914","product_id":100017301,"comment_content":"在地铁上看的困了，这块要好好消化下，红黑球的删除挺复杂的。","like_count":0},{"had_liked":false,"id":42588,"user_name":"趁风卷","can_delete":false,"product_type":"c1","uid":1199995,"ip_address":"","ucode":"054CCA155FA0EC","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/7b/47be4ead.jpg","comment_is_top":false,"comment_ctime":1542975054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542975054","product_id":100017301,"comment_content":"zixuan<br>这个不是设计而是推导出来的，源自 2-3 树 https:&#47;&#47;blog.csdn.net&#47;fei33423&#47;article&#47;details&#47;79132930<br><br>------------------------------------------------<br>这篇文章写得太棒了！","like_count":0},{"had_liked":false,"id":42320,"user_name":"会飞的猪","can_delete":false,"product_type":"c1","uid":1174030,"ip_address":"","ucode":"25F4E684E89C4C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLbszZRO4PAdF0UbCNgONnpmgX9sUsqKic7iciaZYBCibnQjj548lV7EINL7HmHHWKJM3SK1AKgGpoGhg/132","comment_is_top":false,"comment_ctime":1542939927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542939927","product_id":100017301,"comment_content":"老师好，红黑树叶子节点作用是什么","like_count":0},{"had_liked":false,"id":41998,"user_name":"任鹏斌","can_delete":false,"product_type":"c1","uid":1104086,"ip_address":"","ucode":"34319B05EA6E74","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/d6/47da34bf.jpg","comment_is_top":false,"comment_ctime":1542889127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542889127","product_id":100017301,"comment_content":"老师插入操作的三个case有点理解不了，比如case1完成后让跳到case2或3,但case2或3的初始状态与case1的终止状态都不是一样的，有点衔接不上了，case2和3之间也有此问题，是不是我理解的不对？麻烦指教。","like_count":0},{"had_liked":false,"id":41718,"user_name":"ichiro","can_delete":false,"product_type":"c1","uid":1086179,"ip_address":"","ucode":"D1708D87538F42","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/e3/1be13204.jpg","comment_is_top":false,"comment_ctime":1542845766,"is_pvip":false,"replies":[{"id":"14963","content":"因为是从第一步调整过来的","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542851331,"ip_address":"","comment_id":41718,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542845766","product_id":100017301,"comment_content":"老师，删除的操作的图是不是有问题，为什么原图也会存在红黑的节点","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429879,"discussion_content":"因为是从第一步调整过来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542851331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41612,"user_name":"攻城拔寨","can_delete":false,"product_type":"c1","uid":1053934,"ip_address":"","ucode":"CBC37183DAB6B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/ee/d72a8222.jpg","comment_is_top":false,"comment_ctime":1542811446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542811446","product_id":100017301,"comment_content":"一脸懵逼，跳过😂","like_count":0},{"had_liked":false,"id":41547,"user_name":"沉睡的木木夕","can_delete":false,"product_type":"c1","uid":1036362,"ip_address":"","ucode":"2C6B23B34C44E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/4a/7e3d158d.jpg","comment_is_top":false,"comment_ctime":1542803650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542803650","product_id":100017301,"comment_content":"又读了几遍文章，我发现在删除结点的第二步关注结点的二次调试的 CASE4 的那几步有疑问，第一步就左旋，那么关注结点 a 的兄弟结点就不是 c 而是 d 啊，为什么是旋转之前的 c 结点？<br>有知道的同学希望解答我这个疑问，谢谢","like_count":0},{"had_liked":false,"id":41411,"user_name":"liangjf","can_delete":false,"product_type":"c1","uid":1058812,"ip_address":"","ucode":"681A6CCF098F55","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/fc/b8d83d56.jpg","comment_is_top":false,"comment_ctime":1542776462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542776462","product_id":100017301,"comment_content":"标记浏览一遍","like_count":0},{"had_liked":false,"id":41093,"user_name":"P@tricK","can_delete":false,"product_type":"c1","uid":1233716,"ip_address":"","ucode":"293B2B3261A793","user_header":"https://static001.geekbang.org/account/avatar/00/12/d3/34/5dee4f70.jpg","comment_is_top":false,"comment_ctime":1542724774,"is_pvip":false,"replies":[{"id":"14788","content":"欢迎来分享心得","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542765093,"ip_address":"","comment_id":41093,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542724774","product_id":100017301,"comment_content":"红黑树实现这块看得有点晕，先不逼着自己码…<br>我去看了234树，感觉比较好理解，先把插入和分裂的码了，看看能不能帮助理解红黑树…","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429695,"discussion_content":"欢迎来分享心得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542765093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41089,"user_name":"Light Lin","can_delete":false,"product_type":"c1","uid":1234625,"ip_address":"","ucode":"C0AA9AA608F395","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/c1/aa9cde77.jpg","comment_is_top":false,"comment_ctime":1542724200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542724200","product_id":100017301,"comment_content":"越来越跟不上了，不过有些现在看不懂没关系，多学以后会明了的。","like_count":0},{"had_liked":false,"id":40963,"user_name":"chestnut","can_delete":false,"product_type":"c1","uid":1049105,"ip_address":"","ucode":"0337315C8698F3","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/11/4512a975.jpg","comment_is_top":false,"comment_ctime":1542704151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542704151","product_id":100017301,"comment_content":"请问老师，无论是删除或者插入一个元素，都要保持它有序的原理就ok了？","like_count":0},{"had_liked":false,"id":40950,"user_name":"辰陌","can_delete":false,"product_type":"c1","uid":1245043,"ip_address":"","ucode":"961C874D36C958","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/73/8c64ed7f.jpg","comment_is_top":false,"comment_ctime":1542701106,"is_pvip":false,"replies":[{"id":"14803","content":"当然有一些理论推导加实验 但是专栏不侧重讲红黑树 展开讲内容太多 感兴趣自学吧","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542766055,"ip_address":"","comment_id":40950,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542701106","product_id":100017301,"comment_content":"忽然这一节没办法看进去了，如果是像魔方一样，先背公式，在练习熟练，那就看一遍行了。我其实比较好奇是这些规则是有理论推导，还是一切都只是在一系列操作后，找到往平衡上调整的最短路径？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429658,"discussion_content":"当然有一些理论推导加实验 但是专栏不侧重讲红黑树 展开讲内容太多 感兴趣自学吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542766055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40947,"user_name":"xavier","can_delete":false,"product_type":"c1","uid":1243128,"ip_address":"","ucode":"2F7918EA37ED9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/f8/3c0a6854.jpg","comment_is_top":false,"comment_ctime":1542700609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542700609","product_id":100017301,"comment_content":"老师可以举点例子来实战一下，说实话看了这两节，我还是没搞懂红黑树的作用。","like_count":0},{"had_liked":false,"id":40940,"user_name":"杨伟","can_delete":false,"product_type":"c1","uid":1239937,"ip_address":"","ucode":"D5B521A0688E02","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/81/43f4b52c.jpg","comment_is_top":false,"comment_ctime":1542699103,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542699103","product_id":100017301,"comment_content":"这节课大概是最长的。。。","like_count":0},{"had_liked":false,"id":40856,"user_name":"Cobbly","can_delete":false,"product_type":"c1","uid":1246467,"ip_address":"","ucode":"74048F76BCB30F","user_header":"https://static001.geekbang.org/account/avatar/00/13/05/03/4d7b9a62.jpg","comment_is_top":false,"comment_ctime":1542682787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542682787","product_id":100017301,"comment_content":"看到这么多人 看到了26章，心里好慌，我还在啃16章，还在第二遍ing。","like_count":0},{"had_liked":false,"id":40746,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1542673813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542673813","product_id":100017301,"comment_content":"关注节点是怎么变化的，这个为什么要这样变","like_count":0},{"had_liked":false,"id":40736,"user_name":"Conner","can_delete":false,"product_type":"c1","uid":1238811,"ip_address":"","ucode":"A00A9555442CB7","user_header":"http://thirdwx.qlogo.cn/mmopen/h0KAdRFKjCOhmWMYL56PUEYiabvpkopiciaOHjF7bFSaMRV2uKhXrNoXNpJ4HiaG3pwcUUdNK54jUgT2KVbyCCwba4wIfwibib0lyd/132","comment_is_top":false,"comment_ctime":1542673124,"is_pvip":false,"replies":[{"id":"14655","content":"可以自己去网上搜下 网上左右旋的讲解很多","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542677338,"ip_address":"","comment_id":40736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542673124","product_id":100017301,"comment_content":"左旋右旋一张图，看不懂。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429596,"discussion_content":"可以自己去网上搜下 网上左右旋的讲解很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542677338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40668,"user_name":"juJu","can_delete":false,"product_type":"c1","uid":1200163,"ip_address":"","ucode":"DBE2C5E5F5E927","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/23/244298d5.jpg","comment_is_top":false,"comment_ctime":1542640173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542640173","product_id":100017301,"comment_content":"建议老师可以先介绍B树，然后由3阶B树来解释红色节点和黑色节点的意义，然后可以讲解下3阶B树的插入操作。在不知道红色节点之所以是红色的情况下，直接看左旋右旋真的是一脸懵逼。<br><br>个人见解： 一黑带一红，或者一黑带两红，可视作三阶B树上的一个大节点。<br><br>建议其他同学去搜下关键字：2-3-4树 2-3树 红黑树 左倾红黑树。先弄明白颜色代表的含义很重要。","like_count":0},{"had_liked":false,"id":40622,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1060892,"ip_address":"","ucode":"B29CA98AC45F88","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/1c/e160955d.jpg","comment_is_top":false,"comment_ctime":1542636904,"is_pvip":false,"replies":[{"id":"14659","content":"嗯嗯 我也看过这种讲法","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542678293,"ip_address":"","comment_id":40622,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542636904","product_id":100017301,"comment_content":"之前看cs61b，他是从B tree来引入红黑树的，感觉更容易理解","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429572,"discussion_content":"嗯嗯 我也看过这种讲法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542678293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40591,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1542634712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542634712","product_id":100017301,"comment_content":"请教老师，删除节点第一步的 CASE3 为什么 d 的左节点一定为空呢？如果不为空，不就不能用 CASE 1 了。 还是说如果不为空要一直遍历到左子树为空的节点为止？","like_count":0},{"had_liked":false,"id":40585,"user_name":"go80","can_delete":false,"product_type":"c1","uid":1196262,"ip_address":"","ucode":"90530FD00CE8F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/40/e6/aea2e401.jpg","comment_is_top":false,"comment_ctime":1542634149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542634149","product_id":100017301,"comment_content":"个人感觉先讲二叉搜索树，再讲2-3树（一种平衡树），然后讲红黑树会比较好理解，因为红黑树（一种平衡二叉搜索树）本质上是二叉搜索树和2-3树结合后的一种特例","like_count":0},{"had_liked":false,"id":40573,"user_name":"永昌","can_delete":false,"product_type":"c1","uid":1025006,"ip_address":"","ucode":"A572DDE33DFAD9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/ee/636415d8.jpg","comment_is_top":false,"comment_ctime":1542633155,"is_pvip":true,"replies":[{"id":"14663","content":"文章开头说了 懵圈没必要纠结 继续看下一节吧","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542678590,"ip_address":"","comment_id":40573,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542633155","product_id":100017301,"comment_content":"到这里终于蒙圈了","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429559,"discussion_content":"文章开头说了 懵圈没必要纠结 继续看下一节吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542678590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40539,"user_name":"sketch2018","can_delete":false,"product_type":"c1","uid":1139528,"ip_address":"","ucode":"1022FB3C2670FF","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/48/4eafb603.jpg","comment_is_top":false,"comment_ctime":1542631163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542631163","product_id":100017301,"comment_content":"红黑树的几个特征有什么意义?比如为什么不能有两个连续的红色节点？为什么到每个叶子节点的所有路径中黑色节点要一样多？","like_count":0},{"had_liked":false,"id":40521,"user_name":"微秒","can_delete":false,"product_type":"c1","uid":1249195,"ip_address":"","ucode":"65A2E8B565B191","user_header":"https://static001.geekbang.org/account/avatar/00/13/0f/ab/9748f40b.jpg","comment_is_top":false,"comment_ctime":1542629174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542629174","product_id":100017301,"comment_content":"老师，插入操作的case3图中的右边第三幅小图，对节点b来说，b到z、x和y都只经过了一个黑色的叶子节点，而b到p和q却经过了包括叶子节点在内的两个黑色节点。因此，不满足红黑树的条件四：任意节点到可达叶子节点的路径都包涵相同黑色节点数吧？？？","like_count":0},{"had_liked":false,"id":40376,"user_name":"Terry","can_delete":false,"product_type":"c1","uid":1021398,"ip_address":"","ucode":"D2A68A82F55E30","user_header":"","comment_is_top":false,"comment_ctime":1542608411,"is_pvip":false,"replies":[{"id":"14670","content":"👍","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542678838,"ip_address":"","comment_id":40376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542608411","product_id":100017301,"comment_content":"左旋右旋是种神奇的操作：保证操作完还是有序的","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429499,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542678838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40374,"user_name":"马球先生","can_delete":false,"product_type":"c1","uid":1119609,"ip_address":"","ucode":"858C2CE0E494C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/79/efde2a69.jpg","comment_is_top":false,"comment_ctime":1542607572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542607572","product_id":100017301,"comment_content":"学习方法就是调试 跟踪","like_count":0},{"had_liked":false,"id":40362,"user_name":"猫头鹰爱拿铁","can_delete":false,"product_type":"c1","uid":1105958,"ip_address":"","ucode":"24266B58968428","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/26/4942a09e.jpg","comment_is_top":false,"comment_ctime":1542603251,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1542603251","product_id":100017301,"comment_content":"决定今晚好好研究红黑树 需要长一点能专注的时间集中研究 左旋和右旋很好理解 就是关注点往左或往右树的路径各移动一个节点位置 在左旋和右旋的过程中可能会发生子节点的平移","like_count":0},{"had_liked":false,"id":40345,"user_name":"刘远通","can_delete":false,"product_type":"c1","uid":1253307,"ip_address":"","ucode":"4D3EE819E4B235","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/bb/c488d5db.jpg","comment_is_top":false,"comment_ctime":1542596556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542596556","product_id":100017301,"comment_content":"左旋和右旋是不改变有序的前提下<br>调整两个节点的相对层数<br><br>添加两种颜色也很神奇<br>相邻的两个节点是可以换颜色的…<br>再好好理解一下","like_count":0},{"had_liked":false,"id":40291,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1542589864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542589864","product_id":100017301,"comment_content":"一个黑色或者红色不够，用两个？","like_count":0},{"had_liked":false,"id":40256,"user_name":"醉比","can_delete":false,"product_type":"c1","uid":1248399,"ip_address":"","ucode":"79E65F62BE7809","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/8f/4ebd303a.jpg","comment_is_top":false,"comment_ctime":1542586848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542586848","product_id":100017301,"comment_content":"学思路更重要","like_count":0},{"had_liked":false,"id":40224,"user_name":"朱月俊","can_delete":false,"product_type":"c1","uid":1017707,"ip_address":"","ucode":"4DA0728B862FBD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","comment_is_top":false,"comment_ctime":1542561101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542561101","product_id":100017301,"comment_content":"今天先看完红黑树插入部分的调整内容，明天继续看剩下内容。 关注关注点周围几个节点的排阵布局。","like_count":0}]}