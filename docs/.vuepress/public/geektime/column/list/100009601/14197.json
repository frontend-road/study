{"id":14197,"title":"26 | 深入浅出之静态测试方法","content":"<p>你好，我是茹炳晟，今天我和你分享的主题是：深入浅出之静态测试方法。</p>\n<p>我在分享<a href=\"https://time.geekbang.org/column/article/14008\">《不破不立：掌握代码级测试的基本理念与方法》</a>这个主题时，系统地介绍了代码级测试常见的五种错误类型（包括语法特征错误、边界行为特征错误、经验特征错误、算法错误，以及部分算法错误），以及对应的四大类测试方法（包括人工静态方法、自动静态方法、人工动态方法，以及自动动态方法）。</p>\n<p>今天，我将和你详细讨论人工静态测试方法和自动静态测试方法，来<strong>帮你理解研发流程上是如何保证代码质量的，以及如何搭建自己的自动静态代码扫描方案，并且应用到项目的日常开发工作中去。</strong></p>\n<p>人工静态方法本质上属于流程上的实践，实际能够发现问题的数量很大程度依赖于个人的能力，所以从技术上来讲这部分内容可以讨论的点并不多。但是，这种方法已经在目前的企业级测试项目中被广泛地应用了，所以我们还是需要理解这其中的流程，才能更好地参与到人工静态测试中。</p>\n<p>而自动静态方法，可以通过自动化的手段，以很低的成本发现并报告各种潜在的代码质量问题，目前已经被很多企业和项目广泛采用，并且已经集成到CI/CD流水线了。作为测试工程师，我们需要完成代码静态扫描环境的搭建。接下来我会重点和你分享这一部分内容。</p><!-- [[[read_end]]] -->\n<h2>人工静态方法</h2>\n<p>通过我上一次的分析，我们知道了人工静态方法检查代码错误，主要有代码走查、结对编程，以及同行评审这三种手段。那么我们接下来就看一下这三种方法是如何执行的。</p>\n<ul>\n<li><strong>代码走查（Code Review）</strong>，是由开发人员检查自己的代码，尽可能多地发现各类潜在错误。但是，由于个人能力的差异，以及开发人员的“思维惯性”，很多错误并不能在这个阶段被及时发现。</li>\n<li><strong>结对编程（Pair Programming）</strong>，是一种敏捷软件开发的方法，一般是由两个开发人员结成对子在一台计算机上共同完成开发任务。其中，一个开发人员实现代码，通过被称为“驾驶员”；另一个开发人员审查输入的每一行代码，通常被称为“观察员”。<br />\n当“观察员”对代码有任何疑问时，会立即要求“驾驶员”给出解释。解释过程中，“驾驶员”会意识到问题所在，进而修正代码设计和实现。<br />\n实际执行过程中，这两个开发人员的角色会定期更换。</li>\n<li><strong>同行评审（Peer Review）</strong>，是指把代码递交到代码仓库，或者合并代码分支（Branch）到主干（Master）前，需要和你同技术级别或者更高技术级别的一个或多个同事对你的代码进行评审，只有通过所有评审后，你的代码才会被真正递交。<br />\n如果你所在的项目使用GitHub管理代码，并采用GitFlow的分支管理策略，那么在递交代码或者分支合并时，需要先递交Pull Request（PR），只有这个PR经过了所有评审者的审核，才能被合并。这也是同行评审的具体实践。目前，只要你采用GitFlow的分支管理策略，基本都会采用这个方式。</li>\n</ul>\n<p>对于以上三种方式，<strong>使用最普遍的是同行评审</strong>。因为同行评审既能较好地保证代码质量，又不需要过多的人工成本投入，而且递交的代码出现问题后责任明确，另外代码的可追溯性也很好。</p>\n<p>结对编程的实际效果虽然不错，但是对人员的利用率比较低，通常被用于一些非常关键和底层算法的代码实现。</p>\n<h2>自动静态方法</h2>\n<p>自动静态方法，主要有以下三个特点：</p>\n<ul>\n<li>相比于编译器，可以做到对代码更加严格、个性化的检查；</li>\n<li>不真正检测代码的逻辑功能，只是站在代码本身的视角，基于规则，尽可能多地去发现代码错误；</li>\n<li>由于静态分析算法并不实际执行代码，完全是基于代码的词法分析、语法分析、控制流分析等技术，由于分析技术的局限性以及代码写法的多样性，所以会存在一定的误报率。</li>\n</ul>\n<p>基于这些特点，自动静态方法通常能够以极低的成本发现以下问题：</p>\n<ul>\n<li>使用未初始化的变量；</li>\n<li>变量在使用前未定义；</li>\n<li>变量声明了但未使用；</li>\n<li>变量类型不匹配；</li>\n<li>部分的内存泄漏问题；</li>\n<li>空指针引用；</li>\n<li>缓冲区溢出；</li>\n<li>数组越界；</li>\n<li>不可达的僵尸代码；</li>\n<li>过高的代码复杂度；</li>\n<li>死循环；</li>\n<li>大量的重复代码块；</li>\n<li>…</li>\n</ul>\n<p>正是由于自动静态方法具有自动化程度高，检查发现问题的成本低以及能够发现的代码问题广等特点，所以该方法被很多企业和项目广泛应用于前期代码质量控制和代码质量度量。</p>\n<p><strong>在实际工程实践中，企业往往会结合自己的编码规范定制规程库，并与本地IDE开发环境和持续集成的流水线进行高度整合。</strong></p>\n<p>代码本地开发阶段，IDE环境就可以自动对代码实现自动静态检查；当代码递交到代码仓库后，CI/CD流水线也会自动触发代码静态检查，如果检测到潜在错误，就会自动邮件通知代码递交者。</p>\n<p>接下来，我们一起来看两个自动静态方法发现错误的实际案例，希望可以加深你对自动静态方法的认识。</p>\n<h2>自动静态方法的实际例子</h2>\n<p><strong>第一个例子，自动静态方法检查语法特征错误。</strong></p>\n<p>如图1左侧所示的C语言代码，存在数组越界的问题，一种典型的语法特征错误。</p>\n<p>图1右侧，就是通过C语言的自动静态扫描工具splint发现的这个问题，并给出的分析结果。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/25/85/250302b2a51793aa80663857d6862885.png?wh=902*224\" alt=\"\" /></p>\n<center>图1 数组越界的错误</center>\n<p><strong>第二个例子，自动静态方法检查内存空间被释放后继续被赋值的错误。</strong></p>\n<p>如图2左侧所示的C语言代码，我们用malloc函数申请了一个内存空间，并用指针a指向了这个空间，然后新建了一个指针b也指向这个空间，也就是指针a和指针b实际上指向了同一个内存空间。之后，我们把指针a指向的空间释放掉了，意味着指针b指向的空间也被释放了。但是，此时代码却试图去对指针b指向的空间赋值，显然这会导致不可预料的后果。</p>\n<p>幸运的是，C语言的自动静态扫描工具splint发现了这个问题，并给出了详细解释。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/67/19/67979997b21504f5ca9ce99e39bb8d19.png?wh=902*246\" alt=\"\" /></p>\n<center>图2 内存空间释放后还继续使用的错误</center>\n<h2>实际案例：Sonar实战</h2>\n<p>现在，我们已经了解了自动静态代码扫描的基本概念，那怎么把这些知识落地到你的实际项目中呢？我们就从目前主流的自动静态工具Sonar的使用开始吧。</p>\n<p>考虑到你可能以前并没有接触过Sonar，所以我会按照step by step的节奏展开。如果你已经用过Sonar了，你可以跳过在Mac 电脑上建立Sonar的步骤，从完成你的Maven项目的自动静态分析开始。</p>\n<p>通过这个Sonar实例，你可以掌握：</p>\n<ul>\n<li>搭建自己的SonarQube服务器；</li>\n<li>扫描Maven项目，并将结果报告递交到SonarQube服务器；</li>\n<li>在IntelliJ IDE中集成SonarLint插件，在IDE中实现实时的自动静态分析；</li>\n</ul>\n<p>首先，在<a href=\"https://www.sonarqube.org/downloads/\">Sonar官网</a>下载LTS（Long-term Support）版本的SonarQube 6.7.5。这里需要注意的是，我不推荐在实际工程项目中使用最新版的SonarQube，而是建议使用LTS版本以保证稳定性和兼容性。</p>\n<p>解压后运行其中的bin/macosx-universal-64目录下的sonar.sh，这里需要注意运行sonar.sh时要带上“console”参数。如果执行完成的界面如下图3所示，那么说明你的SonarQube服务已经成功启动。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/a4/74/a4b522acf78853ee57aa8e2cbf0c7574.png?wh=902*528\" alt=\"\" /></p>\n<center>图3 SonarQube启动成功的界面</center>\n<p>此时，你可以尝试访问localhost:9000，并用默认账号（用户名和密码都是“admin”）登录。</p>\n<p>为了简化建立SonarQube的步骤，所有的内容我都使用了默认值。比如，我直接使用了SonarQube内建的数据库，端口也采用了默认的9000。但是，在实际工程项目中，为了Sonar数据的长期可维护和升级，我们通常会使用自己的数据库，需要执行下面这些步骤：</p>\n<ol>\n<li>\n<p>安装SonarQube之前，先安装数据库；</p>\n</li>\n<li>\n<p>建立一个空数据库并赋予CRUD权限；</p>\n</li>\n<li>\n<p>修改SonarQube的conf/sonar.properties中的JDBC配置，使其指向我们新建的数据库。我们也可以采用同样的方法，来修改默认的端口。</p>\n</li>\n</ol>\n<p>因为要在Maven项目中执行代码静态扫描，为此我们需要先找到$MAVEN_HOME/conf下的settings.xml文件，在文件中加入Sonar相关的全局配置，具体需要加入的内容如下所示：</p>\n<pre><code>&lt;settings&gt;\n    &lt;pluginGroups&gt;\n        &lt;pluginGroup&gt;org.sonarsource.scanner.maven&lt;/pluginGroup&gt;\n    &lt;/pluginGroups&gt;\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;sonar&lt;/id&gt;\n            &lt;activation&gt;\n                &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n            &lt;/activation&gt;\n            &lt;properties&gt;\n                &lt;sonar.host.url&gt;\n                  http://myserver:9000\n                &lt;/sonar.host.url&gt;\n            &lt;/properties&gt;\n        &lt;/profile&gt;\n     &lt;/profiles&gt;\n&lt;/settings&gt;\n</code></pre>\n<p>最后，我们就可以在Maven项目中，执行“mvn clean verify sonar:sonar”命令完成静态代码扫描。</p>\n<p>如果你是第一次使用这个命令，那么mvn会自动下载依赖maven-sonar-plugin，完成后发起代码的静态扫描，并会自动把扫描结果显示到SonarQube中。</p>\n<p>图4所示的结果，就是我对<a href=\"https://time.geekbang.org/column/article/11913\">《从0到1：你的第一个GUI自动化测试》</a>一文中的GUI测试项目代码的扫描结果。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/67/6f/67e23e2c8a7d44903182d1b1ac38406f.png?wh=902*754\" alt=\"\" /></p>\n<center>图4 SonarQube的静态扫描结果页面</center>\n<p>扫描结果是Passd，但同时也发现了三个Code Smell问题，或者说是改进建议，如图5所示。</p>\n<ol>\n<li>\n<p>Class建议放在package中；</p>\n</li>\n<li>\n<p>导入了java.io.BufferedInputStream，但没有在实际代码中使用，建议删除；</p>\n</li>\n<li>\n<p>建议变量名字不要包含下划线。</p>\n</li>\n</ol>\n<p><img src=\"https://static001.geekbang.org/resource/image/57/89/57e09bf99b6cd9ef1933b54d2e958689.png?wh=902*790\" alt=\"\" /></p>\n<center>图5 详细扫描结果示例</center>\n<p>至此，你已经使用Sonar完成了一次代码的静态扫描，是不是还挺方便的？</p>\n<p>但是，在日常工作中你可能还想要实时看到Sonar分析的结果，这样可以大幅提高修改代码的效率。为此，我们可以在IDE中引入SonarLint插件。你可以通过IDE的plugin（插件）管理界面安装SonarLint。</p>\n<p>安装完成后重启IDE，你就可以在IDE环境中实时看到Sonar的静态分析结果了，如图6所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/f5/88/f50c3d4af11f340793afd1cc52078b88.png?wh=902*262\" alt=\"\" /></p>\n<center>图6 在IDE中直接查看静态扫描结果</center>\n<p>另外，在IDE中绑定SonarQube，就可以把SonarLint和SonarQube集成在一起了，如图7所示。集成完成后，IDE本地的代码扫描就能使用SonarQube端的静态代码规则库了，在企业级的项目中，一般要求所有开发人员都使用统一的静态代码规则库，所以一般都会要求本地IDE的SonarLint与SonarQube集成。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/70/7f/70d61ce1cc7ec324133d0937309c367f.png?wh=902*496\" alt=\"\" /></p>\n<center>图7 IDE中的SonarLint和SonarQube绑定</center>\n<p>目前，自动静态扫描通常都会和持续集成的流水线做绑定，最常见的应用场景是当你递交代码后，持续集成流水线就会自动触发自动静态扫描，这一功能是通过Jenkins以及Jenkins上的SonarQube插件来完成的，当你在Jenkins中安装了SonarQube Plugin，并且将SonarQube服务器相关的配置信息加入Plugin之后，你就可以在Jenkins Job的配置中增加Sonar静态扫描步骤了。</p>\n<h2>总结</h2>\n<p>人工静态方法，主要有代码走查、结对编程和同行评审三种常用方法。在工程实践中，同行评审因为可以保证代码质量、效率高、责任明确等特点，已经被广泛采用。</p>\n<p>自动静态方法，因为自动化程度高、成本低、发现的代码问题广等特点，是常用的代码级测试方法。</p>\n<p>在这里，测试工程师需要完成代码静态扫描环境的搭建，考虑到你以前可能没有接触过Sonar，我按照step by step的思路，带你一起搭建了一套代码静态扫描环境，并分享了一个Maven项目代码静态扫描的实例。</p>\n<p>这就是我今天分享的主要内容了，希望可以帮助你解决实际工作中遇到的问题。</p>\n<h2>思考题</h2>\n<p>除了Sonar，你还用过哪些静态代码扫描工具，使用过程中遇到过哪些问题？</p>\n<p>欢迎你给我留言。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"25 | 不破不立：掌握代码级测试的基本理念与方法","id":14008},"right":{"article_title":"27 | 深入浅出之动态测试方法","id":14344}},"comments":[{"had_liked":false,"id":21909,"user_name":"缪倩","can_delete":false,"product_type":"c1","uid":1085741,"ip_address":"","ucode":"0FC86F8B55ECF8","user_header":"https://static001.geekbang.org/account/avatar/00/10/91/2d/e0570e59.jpg","comment_is_top":false,"comment_ctime":1535412574,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"87434758494","product_id":100009601,"comment_content":"我们是小公司，一直觉得自动静态代码是大公司专属的，看了这篇文章，我居然也装出来一个sonar环境，接下来打算在公司里面推广用起来了，收获满满！","like_count":19,"discussions":[{"author":{"id":1365574,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d6/46/5eb5261b.jpg","nickname":"Sudouble","note":"","ucode":"B369B09DAF8D20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6847,"discussion_content":"同感，提高代码质量真是很重要。想达到最终达到让测试部门没有活干的(偷笑)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567137335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21871,"user_name":"Jia","can_delete":false,"product_type":"c1","uid":1139676,"ip_address":"","ucode":"A9FA2F834D380F","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/dc/94512cff.jpg","comment_is_top":false,"comment_ctime":1535381910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53074989462","product_id":100009601,"comment_content":"静态代码扫描工具，都有自己的语言偏好性，和扫描偏好性。所以最好的方法是多用几个工具，综合来看。<br><br>常见的工具包括收费的企业级应用，比如Coverity。<br><br>其它免费的应用，比如Findbugs(Spotbugs), Java Checker Framework, PREfast, Splint, SPIN, Microsoft SLAM, PMD, Facebook Infer.<br><br>当然，如果用KLEE, LLVM, Clang, 也可以订制出自己扫描偏好的工具。","like_count":12},{"had_liked":false,"id":21798,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1535340183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23010176663","product_id":100009601,"comment_content":"<br>1.人工静态方法，这个要看项目开发的习惯和良心了，貌似国内这部分做的并不好，所以很多功能测试都能发现不少的低级错误，相对来说，国外这块更成熟一些，特别是一些推崇「去 QE 化」的公司。<br><br>2.自动静态方法相对来说，还是比较靠谱的，毕竟一条规则可以适用于所有项目，一次投入可以有一直产出的效果，目前主要存在规则范围，以及规则准确度的问题，然后就是通用检测工具和定制检测工具的选型等问题。<br><br>3.我们公司的人工静态方法是有一个开发代码 Review 阶段，自动静态方法是有一个定制开发的代码红线扫描规则，每次编译时自动扫描，效果还挺好，可以规避大部分的低级错误。<br><br>以上，欢迎沟通交流，公众号「sylan215」","like_count":5},{"had_liked":false,"id":22395,"user_name":"姜姜","can_delete":false,"product_type":"c1","uid":1214902,"ip_address":"","ucode":"CBC86917A866F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/89/b6/b629aff1.jpg","comment_is_top":false,"comment_ctime":1535644784,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18715513968","product_id":100009601,"comment_content":"python代码的静态扫描可以用sonar吗？","like_count":4,"discussions":[{"author":{"id":1236139,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dc/ab/d70dee25.jpg","nickname":"测试猿温大大","note":"","ucode":"A71E6DEFA86C37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211995,"discussion_content":"上篇有笔友说：用facebook 下面的infer可以静态扫描","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1584923738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22820,"user_name":"arthur","can_delete":false,"product_type":"c1","uid":1116981,"ip_address":"","ucode":"EAD9D9D2837C5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/35/2c56c29c.jpg","comment_is_top":false,"comment_ctime":1535985900,"is_pvip":false,"replies":[{"id":"8300","content":"是的，扩展性很强，很好的补充","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536107831,"ip_address":"","comment_id":22820,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14420887788","product_id":100009601,"comment_content":"sonar是个特别好的工具，还可以自定义很多规则进行扫描。<br>Python中可以pylint进行检查，也很方便。","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423281,"discussion_content":"是的，扩展性很强，很好的补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536107831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21867,"user_name":"Jia","can_delete":false,"product_type":"c1","uid":1139676,"ip_address":"","ucode":"A9FA2F834D380F","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/dc/94512cff.jpg","comment_is_top":false,"comment_ctime":1535380500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10125315092","product_id":100009601,"comment_content":"对于前面的提问，用sonar来分析C语言，请参考https:&#47;&#47;docs.sonarqube.org&#47;plugins&#47;servlet&#47;mobile?contentId=7996665#content&#47;view&#47;7996665<br>需要用到developer license, 是收费的。","like_count":2},{"had_liked":false,"id":171150,"user_name":"h","can_delete":false,"product_type":"c1","uid":1273793,"ip_address":"","ucode":"D2AA6A63C9ED7A","user_header":"https://static001.geekbang.org/account/avatar/00/13/6f/c1/0a3ddca6.jpg","comment_is_top":false,"comment_ctime":1578874373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873841669","product_id":100009601,"comment_content":"之前公司用的coverity和klocwork","like_count":1},{"had_liked":false,"id":170353,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1578577474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873544770","product_id":100009601,"comment_content":"之前用FindBugs","like_count":1},{"had_liked":false,"id":129487,"user_name":"Sudouble","can_delete":false,"product_type":"c1","uid":1365574,"ip_address":"","ucode":"B369B09DAF8D20","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/46/5eb5261b.jpg","comment_is_top":false,"comment_ctime":1567137241,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5862104537","product_id":100009601,"comment_content":"这个实在是太棒了，一直想提高代码质量不高，并能找到代码中隐藏的问题，一直没有想到合适方法。代码静态分析工具，很赞！","like_count":1},{"had_liked":false,"id":22635,"user_name":"Jecy-8","can_delete":false,"product_type":"c1","uid":1016276,"ip_address":"","ucode":"2AE1575B9E63A6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/81/d4/e92abeb4.jpg","comment_is_top":false,"comment_ctime":1535873881,"is_pvip":false,"replies":[{"id":"8310","content":"嗯嗯，fortify也是用得比较多的，不过近几年好像sonar更主流了","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536108499,"ip_address":"","comment_id":22635,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830841177","product_id":100009601,"comment_content":"之前公司用fortify，也是通过Jenkins 集成每次提交代码自动扫描","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423200,"discussion_content":"嗯嗯，fortify也是用得比较多的，不过近几年好像sonar更主流了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536108499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341956,"user_name":"授人以🐟，不如授人以渔","can_delete":false,"product_type":"c1","uid":1193874,"ip_address":"","ucode":"BD53829E924B66","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","comment_is_top":false,"comment_ctime":1649930571,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649930571","product_id":100009601,"comment_content":"针对于 Golang 使用到的是 golint，工具挺好用。可能是注意力很少放在上面，暂时没有发现问题。","like_count":0},{"had_liked":false,"id":331628,"user_name":"愿风裁尘","can_delete":false,"product_type":"c1","uid":1237136,"ip_address":"","ucode":"971DB8D9EA07AB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ2EN4oqKlaericvMHufRpZHKBSHgyCiadTN6nbtzedJEAH910OOctCwEX4RUcDwgywg01yLbTEUN5Q/132","comment_is_top":false,"comment_ctime":1642675551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642675551","product_id":100009601,"comment_content":"snoar如何做增量扫描呢？理论上只要每次MR做相关的扫描才是比较众多的场景","like_count":0},{"had_liked":false,"id":325419,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1638952912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638952912","product_id":100009601,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":256658,"user_name":"五花肉","can_delete":false,"product_type":"c1","uid":2190611,"ip_address":"","ucode":"2F928244E6D089","user_header":"https://static001.geekbang.org/account/avatar/00/21/6d/13/a44d9888.jpg","comment_is_top":false,"comment_ctime":1603698676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603698676","product_id":100009601,"comment_content":"公司开发的CICD流水线平台，其中就有sonar自动化静态扫描，对这一块的理解更多一点，主要是包含词法分析、语法分析等","like_count":0},{"had_liked":false,"id":235609,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1595124979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595124979","product_id":100009601,"comment_content":"项目之中有使用Sonar，上次开会要求每个开发提交代码前都需要做扫描。<br>自己只是知道Sonar是扫描代码的工具，但是不清楚具体的原理。老师这篇文章就介绍清楚了。<br>还了解了Sonar是有一定的误报率的，也是一点收获。<br>由于静态分析算法并不实际执行代码，完全是基于代码的词法分析、语法分析、控制流分析等技术，由于分析技术的局限性以及代码写法的多样性，所以会存在一定的误报率。","like_count":0},{"had_liked":false,"id":230882,"user_name":"A圆规","can_delete":false,"product_type":"c1","uid":1145315,"ip_address":"","ucode":"EBDDB592EA1BE4","user_header":"https://static001.geekbang.org/account/avatar/00/11/79/e3/9c84f86e.jpg","comment_is_top":false,"comment_ctime":1593512203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593512203","product_id":100009601,"comment_content":"自动边界测试有工具？","like_count":0},{"had_liked":false,"id":97844,"user_name":"芳菲菲兮满堂","can_delete":false,"product_type":"c1","uid":1000860,"ip_address":"","ucode":"C8D89999C201F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/9c/5b06d143.jpg","comment_is_top":false,"comment_ctime":1558792987,"is_pvip":true,"discussion_count":1,"race_medal":1,"score":"1558792987","product_id":100009601,"comment_content":"老师 cpp的扫描工具有哪些呢？ ","like_count":0,"discussions":[{"author":{"id":1253199,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/4f/6a61b6bf.jpg","nickname":"杨小姐要坚持","note":"","ucode":"61F87446D5468A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291379,"discussion_content":"testbed？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594797086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88796,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1556002029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556002029","product_id":100009601,"comment_content":"Sonar没用过，学习，打卡。","like_count":0},{"had_liked":false,"id":37419,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1541578850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541578850","product_id":100009601,"comment_content":"sonar支持哪些语言","like_count":0},{"had_liked":false,"id":34430,"user_name":"He， meng","can_delete":false,"product_type":"c1","uid":1254701,"ip_address":"","ucode":"1C6136761D3C6E","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/2d/d92247e3.jpg","comment_is_top":false,"comment_ctime":1540170836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540170836","product_id":100009601,"comment_content":"同问sonar有没有嵌入式C代码的自动扫描功能","like_count":0},{"had_liked":false,"id":28692,"user_name":"中艳","can_delete":false,"product_type":"c1","uid":1176826,"ip_address":"","ucode":"5DF7CD19EC5117","user_header":"https://static001.geekbang.org/account/avatar/00/11/f4/fa/e539e901.jpg","comment_is_top":false,"comment_ctime":1538127918,"is_pvip":false,"replies":[{"id":"10854","content":"完全适合，而且也支持很多其他的语言","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1538699220,"ip_address":"","comment_id":28692,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538127918","product_id":100009601,"comment_content":"sonar是否适用于java代码吗？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425353,"discussion_content":"完全适合，而且也支持很多其他的语言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538699220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22680,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1535934317,"is_pvip":false,"replies":[{"id":"8309","content":"感谢支持","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536108442,"ip_address":"","comment_id":22680,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535934317","product_id":100009601,"comment_content":"打卡26","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423222,"discussion_content":"感谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536108442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21840,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1535371420,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1535371420","product_id":100009601,"comment_content":"sonar是否适用于C语言，有没有嵌入式的自动静态检查方法的","like_count":0,"discussions":[{"author":{"id":1243680,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fa/20/0f06b080.jpg","nickname":"凌空飞起的剪刀腿","note":"","ucode":"16FBBF4A3B54C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228566,"discussion_content":"pclint","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586564028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}