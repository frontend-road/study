{"id":117637,"title":"04 | 导航流程：从输入URL到页面展示，这中间发生了什么？","content":"<p>“在浏览器里，从输入URL到页面展示，这中间发生了什么？ ”这是一道经典的面试题，能比较全面地考察应聘者知识的掌握程度，其中涉及到了网络、操作系统、Web等一系列的知识。所以我在面试应聘者时也必问这道题，但遗憾的是大多数人只能回答其中部分零散的知识点，并不能将这些知识点串联成线，无法系统而又全面地回答这个问题。</p><p>那么今天我们就一起来探索下这个流程，下图是我梳理出的“从输入URL到页面展示完整流程示意图”：</p><p><img src=\"https://static001.geekbang.org/resource/image/92/5d/92d73c75308e50d5c06ad44612bcb45d.png?wh=1142*478\" alt=\"\"></p><center><span class=\"reference\">从输入URL到页面展示完整流程示意图</span></center><p>从图中可以看出，<strong>整个过程需要各个进程之间的配合</strong>，所以在开始正式流程之前，我们还是先来快速回顾下浏览器进程、渲染进程和网络进程的主要职责。</p><ul>\n<li>浏览器进程主要负责用户交互、子进程管理和文件储存等功能。</li>\n<li>网络进程是面向渲染进程和浏览器进程等提供网络下载功能。</li>\n<li>渲染进程的主要职责是把从网络下载的HTML、JavaScript、CSS、图片等资源解析为可以显示和交互的页面。因为渲染进程所有的内容都是通过网络获取的，会存在一些恶意代码利用浏览器漏洞对系统进行攻击，所以运行在渲染进程里面的代码是不被信任的。这也是为什么Chrome会让渲染进程运行在安全沙箱里，就是为了保证系统的安全。</li>\n</ul><!-- [[[read_end]]] --><p>当然，你也可以先回顾下前面的<a href=\"https://time.geekbang.org/column/article/113513\">《01 | Chrome架构：仅仅打开了1个页面，为什么有4个进程？》</a>这篇文章，来全面了解浏览器多进程架构。</p><p>回顾了浏览器的进程架构后，我们再结合上图来看下这个完整的流程，可以看出，整个流程包含了许多步骤，我把其中几个核心的节点用蓝色背景标记出来了。这个过程可以大致描述为如下。</p><ul>\n<li>首先，浏览器进程接收到用户输入的URL请求，浏览器进程便将该URL转发给网络进程。</li>\n<li>然后，在网络进程中发起真正的URL请求。</li>\n<li>接着网络进程接收到了响应头数据，便解析响应头数据，并将数据转发给浏览器进程。</li>\n<li>浏览器进程接收到网络进程的响应头数据之后，发送“提交导航(CommitNavigation)”消息到渲染进程；</li>\n<li>渲染进程接收到“提交导航”的消息之后，便开始准备接收HTML数据，接收数据的方式是直接和网络进程建立数据管道；</li>\n<li>最后渲染进程会向浏览器进程“确认提交”，这是告诉浏览器进程：“已经准备好接受和解析页面数据了”。</li>\n<li>浏览器进程接收到渲染进程“提交文档”的消息之后，便开始移除之前旧的文档，然后更新浏览器进程中的页面状态。</li>\n</ul><p>这其中，<strong>用户发出URL请求到页面开始解析的这个过程，就叫做导航</strong>。</p><h2>从输入URL到页面展示</h2><p>现在我们知道了浏览器几个主要进程的职责，还有在导航过程中需要经历的几个主要的阶段，下面我们就来详细分析下这些阶段，同时也就解答了开头所说的那道经典的面试题。</p><h3>1. 用户输入</h3><p>当用户在地址栏中输入一个查询关键字时，地址栏会判断输入的关键字是<strong>搜索内容</strong>，还是<strong>请求的URL</strong>。</p><ul>\n<li>如果是搜索内容，地址栏会使用浏览器默认的搜索引擎，来合成新的带搜索关键字的URL。</li>\n<li>如果判断输入内容符合URL规则，比如输入的是 time.geekbang.org，那么地址栏会根据规则，把这段内容加上协议，合成为完整的URL，如 <a href=\"https://time.geekbang.org\">https://time.geekbang.org</a>。</li>\n</ul><p>当用户输入关键字并键入回车之后，这意味着当前页面即将要被替换成新的页面，不过在这个流程继续之前，浏览器还给了当前页面一次执行beforeunload事件的机会，beforeunload事件允许页面在退出之前执行一些数据清理操作，还可以询问用户是否要离开当前页面，比如当前页面可能有未提交完成的表单等情况，因此用户可以通过beforeunload事件来取消导航，让浏览器不再执行任何后续工作。</p><p>当前页面没有监听beforeunload事件或者同意了继续后续流程，那么浏览器便进入下图的状态：</p><p><img src=\"https://static001.geekbang.org/resource/image/fa/30/fad33fc7c5f2bdf4e20cac7691484130.png?wh=1142*1120\" alt=\"\"></p><center><span class=\"reference\">开始加载URL浏览器状态</span></center><p>从图中可以看出，当浏览器刚开始加载一个地址之后，标签页上的图标便进入了加载状态。但此时图中页面显示的依然是之前打开的页面内容，并没立即替换为极客时间的页面。因为需要等待提交文档阶段，页面内容才会被替换。</p><h3>2. URL请求过程</h3><p>接下来，便进入了页面资源请求过程。这时，浏览器进程会通过进程间通信（IPC）把URL请求发送至网络进程，网络进程接收到URL请求后，会在这里发起真正的URL请求流程。那具体流程是怎样的呢？</p><p>首先，网络进程会查找本地缓存是否缓存了该资源。如果有缓存资源，那么直接返回资源给浏览器进程；如果在缓存中没有查找到资源，那么直接进入网络请求流程。这请求前的第一步是要进行DNS解析，以获取请求域名的服务器IP地址。如果请求协议是HTTPS，那么还需要建立TLS连接。</p><p>接下来就是利用IP地址和服务器建立TCP连接。连接建立之后，浏览器端会构建请求行、请求头等信息，并把和该域名相关的Cookie等数据附加到请求头中，然后向服务器发送构建的请求信息。</p><p>服务器接收到请求信息后，会根据请求信息生成响应数据（包括响应行、响应头和响应体等信息），并发给网络进程。等网络进程接收了响应行和响应头之后，就开始解析响应头的内容了。（为了方便讲述，下面我将服务器返回的响应头和响应行统称为响应头。）</p><p><strong>（1）重定向</strong></p><p>在接收到服务器返回的响应头后，网络进程开始解析响应头，如果发现返回的状态码是301或者302，那么说明服务器需要浏览器重定向到其他URL。这时网络进程会从响应头的Location字段里面读取重定向的地址，然后再发起新的HTTP或者HTTPS请求，一切又重头开始了。</p><p>比如，我们在终端里输入以下命令：</p><pre><code>curl -I http://time.geekbang.org/\n</code></pre><p><code>curl -I + URL</code>的命令是接收服务器返回的响应头的信息。执行命令后，我们看到服务器返回的响应头信息如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/65/7e/655cbf32dd4bb6f9decc5c7f9a535a7e.png?wh=1142*438\" alt=\"\"></p><center><span class=\"reference\">响应行返回状态码301</span></center><p>从图中可以看出，极客时间服务器会通过重定向的方式把所有HTTP请求转换为HTTPS请求。也就是说你使用HTTP向极客时间服务器请求时，服务器会返回一个包含有301或者302状态码响应头，并把响应头的Location字段中填上HTTPS的地址，这就是告诉了浏览器要重新导航到新的地址上。</p><p>下面我们再使用HTTPS协议对极客时间发起请求，看看服务器的响应头信息是什么样子的。</p><pre><code>curl -I https://time.geekbang.org/\n</code></pre><p>我们看到服务器返回如下信息：</p><p><img src=\"https://static001.geekbang.org/resource/image/0c/43/0c4987fe5d05646fa8245d8cc50d1a43.png?wh=1142*580\" alt=\"\"></p><center><span class=\"reference\">响应行返回状态码200</span></center><p>从图中可以看出，服务器返回的响应头的状态码是200，这是告诉浏览器一切正常，可以继续往下处理该请求了。</p><p>好了，以上是重定向内容的介绍。现在你应该理解了，<strong>在导航过程中，如果服务器响应行的状态码包含了301、302一类的跳转信息，浏览器会跳转到新的地址继续导航；如果响应行是200，那么表示浏览器可以继续处理该请求</strong>。</p><p><strong>（2）响应数据类型处理</strong></p><p>在处理了跳转信息之后，我们继续导航流程的分析。URL请求的数据类型，有时候是一个下载类型，有时候是正常的HTML页面，那么浏览器是如何区分它们呢？</p><p>答案是Content-Type。<strong>Content-Type是HTTP头中一个非常重要的字段， 它告诉浏览器服务器返回的响应体数据是什么类型</strong>，然后浏览器会根据Content-Type的值来决定如何显示响应体的内容。</p><p>这里我们还是以极客时间为例，看看极客时间官网返回的Content-Type值是什么。在终端输入以下命令：</p><pre><code>curl -I https://time.geekbang.org/\n</code></pre><p>返回信息如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/89/1c/8951e161b5f44a73e52c16b631a63e1c.png?wh=1142*562\" alt=\"\"></p><center><span class=\"reference\">含有HTML格式的Content-Type</span></center><p>从图中可以看到，响应头中的Content-type字段的值是text/html，这就是告诉浏览器，服务器返回的数据是<strong>HTML格式</strong>。</p><p>接下来我们再来利用curl来请求极客时间安装包的地址，如下所示：</p><pre><code>curl -I https://res001.geekbang.org/apps/geektime/android/2.3.1/official/geektime_2.3.1_20190527-2136_offical.apk\n</code></pre><p>请求后返回的响应头信息如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/59/3b/595902748d7d4c2f9c1d4783962ae43b.png?wh=1142*436\" alt=\"\"></p><center><span class=\"reference\">含有stream格式的Content-Type</span></center><p>从返回的响应头信息来看，其Content-Type的值是application/octet-stream，显示数据是<strong>字节流类型</strong>的，通常情况下，浏览器会按照<strong>下载类型</strong>来处理该请求。</p><p>需要注意的是，如果服务器配置Content-Type不正确，比如将text/html类型配置成application/octet-stream类型，那么浏览器可能会曲解文件内容，比如会将一个本来是用来展示的页面，变成了一个下载文件。</p><p>所以，不同Content-Type的后续处理流程也截然不同。如果Content-Type字段的值被浏览器判断为<strong>下载类型，那么该请求会被提交给浏览器的下载管理器，同时该URL请求的导航流程就此结束</strong>。但如果是<strong>HTML，那么浏览器则会继续进行导航流程</strong>。由于Chrome的页面渲染是运行在渲染进程中的，所以接下来就需要准备渲染进程了。</p><h3>3. 准备渲染进程</h3><p>默认情况下，Chrome会为每个页面分配一个渲染进程，也就是说，每打开一个新页面就会配套创建一个新的渲染进程。但是，也有一些例外，在某些情况下，浏览器会让多个页面直接运行在同一个渲染进程中。</p><p>比如我从极客时间的首页里面打开了另外一个页面——算法训练营，我们看下图的Chrome的任务管理器截图：</p><p><img src=\"https://static001.geekbang.org/resource/image/d8/28/d8fe2afbd8ea2d4a8d8cc4bb14c50f28.png?wh=1142*853\" alt=\"\"></p><center><span class=\"reference\">多个页面运行在一个渲染进程中</span></center><p>从图中可以看出，打开的这三个页面都是运行在同一个渲染进程中，进程ID是23601。</p><p><strong>那什么情况下多个页面会同时运行在一个渲染进程中呢？</strong></p><p>要解决这个问题，我们就需要先了解下什么是同一站点（same-site）。具体地讲，我们将“<strong>同一站点</strong>”定义为<strong>根域名</strong>（例如，geekbang.org）加上<strong>协议</strong>（例如，https:// 或者http://），还包含了该根域名下的所有子域名和不同的端口，比如下面这三个：</p><pre><code>https://time.geekbang.org\nhttps://www.geekbang.org\nhttps://www.geekbang.org:8080\n</code></pre><p>它们都是属于<strong>同一站点</strong>，因为它们的协议都是HTTPS，而且根域名也都是geekbang.org。</p><p>Chrome的默认策略是，每个标签对应一个渲染进程。但<strong>如果从一个页面打开了另一个新页面，而新页面和当前页面属于同一站点的话，那么新页面会复用父页面的渲染进程</strong>。官方把这个默认策略叫process-per-site-instance。</p><p>那若新页面和当前页面不属于同一站点，情况又会发生什么样的变化呢？比如我通过极客邦页面里的链接打开InfoQ的官网（<a href=\"https://www.infoq.cn/\">https://www.infoq.cn/</a> ）， 因为infoq.cn和geekbang.org不属于同一站点，所以infoq.cn会使用一个新的渲染进程，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/74/fba1dd05f0aeba93a5cb25f305971274.png?wh=1142*539\" alt=\"\"></p><center><span class=\"reference\">非同一站点使用不同的渲染进程</span></center><p>从图中任务管理器可以看出：由于极客邦和极客时间的标签页拥有<strong>相同的协议和根域名</strong>，所以它们属于<strong>同一站点</strong>，并运行在同一个渲染进程中；而infoq.cn的根域名不同于geekbang.org，也就是说InfoQ和极客邦不属于同一站点，因此它们会运行在两个不同的渲染进程之中。</p><p>总结来说，打开一个新页面采用的<strong>渲染进程策略</strong>就是：</p><ul>\n<li>通常情况下，打开新的页面都会使用单独的渲染进程；</li>\n<li>如果从A页面打开B页面，且A和B都属于<strong>同一站点</strong>的话，那么B页面复用A页面的渲染进程；如果是其他情况，浏览器进程则会为B创建一个新的渲染进程。</li>\n</ul><p>渲染进程准备好之后，还不能立即进入文档解析状态，因为此时的文档数据还在网络进程中，并没有提交给渲染进程，所以下一步就进入了提交文档阶段。</p><h3>4. 提交文档</h3><p>所谓提交文档，就是指浏览器进程将网络进程接收到的HTML数据提交给渲染进程，具体流程是这样的：</p><ul>\n<li>首先当浏览器进程接收到网络进程的响应头数据之后，便向渲染进程发起“提交文档”的消息；</li>\n<li>渲染进程接收到“提交文档”的消息后，会和网络进程建立传输数据的“管道”；</li>\n<li>等文档数据传输完成之后，渲染进程会返回“确认提交”的消息给浏览器进程；</li>\n<li>浏览器进程在收到“确认提交”的消息后，会更新浏览器界面状态，包括了安全状态、地址栏的URL、前进后退的历史状态，并更新Web页面。</li>\n</ul><p>其中，当渲染进程<strong>确认提交</strong>之后，更新内容如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/d3/b8/d3c5a6188b09b5b57af439005ae7dfb8.png?wh=1142*647\" alt=\"\"></p><center><span class=\"reference\">导航完成状态</span></center><p>这也就解释了为什么在浏览器的地址栏里面输入了一个地址后，之前的页面没有立马消失，而是要加载一会儿才会更新页面。</p><p>到这里，一个完整的导航流程就“走”完了，这之后就要进入渲染阶段了。</p><h3>5. 渲染阶段</h3><p>一旦文档被提交，渲染进程便开始页面解析和子资源加载了，关于这个阶段的完整过程，我会在下一篇文章中来专门介绍。这里你只需要先了解一旦页面生成完成，渲染进程会发送一个消息给浏览器进程，浏览器接收到消息后，会停止标签图标上的加载动画。如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/be/58/bef45eb5b01c34e328486004feedd658.png?wh=1098*406\" alt=\"\"></p><center><span class=\"reference\">渲染结束</span></center><p>至此，一个完整的页面就生成了。那文章开头的“从输入URL到页面展示，这中间发生了什么？”这个过程及其“串联”的问题也就解决了。</p><h2>总结</h2><p>好了，今天就到这里，下面我来简单总结下这篇文章的要点：</p><ul>\n<li>服务器可以根据响应头来控制浏览器的行为，如跳转、网络数据类型判断。</li>\n<li>Chrome默认采用每个标签对应一个渲染进程，但是如果两个页面属于同一站点，那这两个标签会使用同一个渲染进程。</li>\n<li>浏览器的导航过程涵盖了从用户发起请求到提交文档给渲染进程的中间所有阶段。</li>\n</ul><p>导航流程很重要，它是网络加载流程和渲染流程之间的一座桥梁，如果你理解了导航流程，那么你就能完整串起来整个页面显示流程，这对于你理解浏览器的工作原理起到了点睛的作用。</p><h2>思考时间</h2><p>最后，还是留给你个小作业：在上一篇文章中我们介绍了HTTP请求过程，在本文我们又介绍了导航流程，那么如果再有面试官问你“从输入URL到页面展示，这中间发生了什么？”这个问题，你知道怎么回答了吗？可以用你自己的语言组织下，就当为你的面试做准备。</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"03 | HTTP请求流程：为什么很多站点第二次打开速度会很快？","id":116588},"right":{"article_title":"05 | 渲染流程（上）：HTML、CSS和JavaScript，是如何变成页面的？","id":118205}},"comments":[{"had_liked":false,"id":123294,"user_name":"ytd","can_delete":false,"product_type":"c1","uid":1038790,"ip_address":"","ucode":"C6AEA2D19E447A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","comment_is_top":false,"comment_ctime":1565657343,"is_pvip":false,"replies":[{"id":"45517","content":"赞的，回头补上05-06节所讲的渲染流程，整个过程就完整了","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565827061,"ip_address":"","comment_id":123294,"utype":1}],"discussion_count":26,"race_medal":0,"score":"1410314930431","product_id":100033601,"comment_content":"结合老师的讲义，自己总结了下，不考虑用户输入搜索关键字的情况：<br>    1，用户输入url并回车<br>    2，浏览器进程检查url，组装协议，构成完整的url<br>    3，浏览器进程通过进程间通信（IPC）把url请求发送给网络进程<br>    4，网络进程接收到url请求后检查本地缓存是否缓存了该请求资源，如果有则将该资源返回给浏览器进程<br>    5，如果没有，网络进程向web服务器发起http请求（网络请求），请求流程如下：<br>        5.1 进行DNS解析，获取服务器ip地址，端口（端口是通过dns解析获取的吗？这里有个疑问）<br>        5.2 利用ip地址和服务器建立tcp连接<br>        5.3 构建请求头信息<br>        5.4 发送请求头信息<br>        5.5 服务器响应后，网络进程接收响应头和响应信息，并解析响应内容<br>    6，网络进程解析响应流程；<br>        6.1 检查状态码，如果是301&#47;302，则需要重定向，从Location自动中读取地址，重新进行第4步<br>            （301&#47;302跳转也会读取本地缓存吗？这里有个疑问），如果是200，则继续处理请求。<br>        6.2 200响应处理：<br>            检查响应类型Content-Type，如果是字节流类型，则将该请求提交给下载管理器，该导航流程结束，不再进行<br>            后续的渲染，如果是html则通知浏览器进程准备渲染进程准备进行渲染。<br>    7，准备渲染进程<br>        7.1 浏览器进程检查当前url是否和之前打开的渲染进程根域名是否相同，如果相同，则复用原来的进程，如果不同，则开启新的渲染进程<br>    8. 传输数据、更新状态<br>        8.1 渲染进程准备好后，浏览器向渲染进程发起“提交文档”的消息，渲染进程接收到消息和网络进程建立传输数据的“管道”<br>        8.2 渲染进程接收完数据后，向浏览器发送“确认提交”<br>        8.3 浏览器进程接收到确认消息后更新浏览器界面状态：安全、地址栏url、前进后退的历史状态、更新web页面。","like_count":329,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462613,"discussion_content":"赞的，回头补上05-06节所讲的渲染流程，整个过程就完整了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565827061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2326142,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/2Az8EwxtO2IVExRbnzxNvJkg4xEicojic2pJJT9PDqwIMUeuq9qrvCkNSncibnHI1IaL4JIEMkQ33cswocmicwS0IA/132","nickname":"kl","note":"","ucode":"26510432C40959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331642,"discussion_content":"301 是永久重定向 第一次跳转后，浏览器会自己缓存 ，下次再访问老的地址就是走的是浏览器的缓存不会发请求\n302 是临时重定向 所以浏览器不会自作主张，每次都会向服务端询问","likes_number":39,"is_delete":false,"is_hidden":false,"ctime":1606920283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131359,"avatar":"https://static001.geekbang.org/account/avatar/00/11/43/5f/6b4dc212.jpg","nickname":"枯萎食客","note":"","ucode":"5CDCDCAEE51DB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133843,"discussion_content":"端口要看请求的url里有没有包含端口，若无，http请求是80，https则是443","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1578994180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1555880,"avatar":"https://static001.geekbang.org/account/avatar/00/17/bd/a8/e90de356.jpg","nickname":"小肥羊","note":"","ucode":"45680BE3E5B0E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10892,"discussion_content":"301 表示旧地址 A 的资源已经被永久地移除了（这个资源不可访问了），搜索引擎在抓取新内容的同时也将旧的网址交换为重定向之后的网址；\n\n302 表示旧地址 A 的资源还在（仍然可以访问），这个重定向只是临时地从旧地址 A 跳转到地址 B，搜索引擎会抓取新的内容而保存旧的网址。","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1568335684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2177436,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLC4IhKmJDYdWhQms3dmZqJ5YMDGTlPa1o52DnKSErYjsqfc6iaRJrBDZpx0RqQx7eZAED797kiaV6aw/132","nickname":"陈启航","note":"","ucode":"89246B9BFD3269","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350731,"discussion_content":"以上内容请全文背诵","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1613992882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1640638,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eriaiaLnWYicicmvkUxO5ibZyNQoicAVZHw8cPky0WvBHSrXtPNDw9XbBK6XbQkO27csnXJCxpkxsNWIPkQ/132","nickname":"源","note":"","ucode":"A7F7001AE54507","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22924,"discussion_content":"5.1 dns解析配置只是配置了域名和ip的映射， 域名和ip是多对多的关系，前端资源一般直接配置在 80 或 443下，后端服务端口一般在nginx做一些服务代理，从某个端口代理到业务端口","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1569727966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2015302,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJrTNiaZuexNhAJx6bkozuiaBUGBAzfnibt3hfRn3D7BrxUD8PHUvoPicpBPb4LLgiaLzsBEEbVvOAjhdg/132","nickname":"倚阑听鼾","note":"","ucode":"8F6B13F5E6978E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285234,"discussion_content":"端口是在建立TCP连接的时候附加在报文段头部字段中的。头部字段包括了源端口和目的端口两个部分。服务器端在接收到TCP请求后就知道了其中的数据要往哪个端口发送。\n(另：TCP协议属于运输层，HTTP协议属于应用层。)","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1592787965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205027,"avatar":"https://static001.geekbang.org/account/avatar/00/12/63/23/8e6fcab2.jpg","nickname":"阿伦Anne","note":"","ucode":"73242287EA562F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175092,"discussion_content":"课代表啊课代表","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1581950076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1620143,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ExHHyMiauDKhjmy4n8rgA1e3IVRd8vegMAnOFC7u6p9aiaefEJEZKa2Pu5rARLbeNicuz9NFicpF5YXEFf35gNn2vQ/132","nickname":"阿段","note":"","ucode":"D9EA14A0BE1B69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5312,"discussion_content":"没写端口http默认80，https默认443。写了就是写了的端口","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566172666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374291,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/53/0ceec017.jpg","nickname":"卡卡颂","note":"","ucode":"788FC1B1A8BEF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4702,"discussion_content":"5.1  端口是你请求的url中带上的， 比如 http 协议默认 80端口， https 443端口。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565677610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1038790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","nickname":"ytd","note":"","ucode":"C6AEA2D19E447A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1374291,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/53/0ceec017.jpg","nickname":"卡卡颂","note":"","ucode":"788FC1B1A8BEF4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4734,"discussion_content":"嗯，dns只负责解析域名，端口应该是浏览器自己处理了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565693005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4702,"ip_address":""},"score":4734,"extra":""}]},{"author":{"id":2625070,"avatar":"https://static001.geekbang.org/account/avatar/00/28/0e/2e/051605e7.jpg","nickname":"kekeke","note":"","ucode":"CCEE12BAA8B38D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374416,"discussion_content":"原文中提到:最后渲染进程会向浏览器进程“确认提交”，这是告诉浏览器进程：“已经准备好接受和解析页面数据了”。在渲染进程向浏览器进程确认提交的时候，还没接受到数据吧，只是做好了准备？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621172764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1514088,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1a/68/11fefced.jpg","nickname":"Feeng","note":"","ucode":"0C287789495F35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2625070,"avatar":"https://static001.geekbang.org/account/avatar/00/28/0e/2e/051605e7.jpg","nickname":"kekeke","note":"","ucode":"CCEE12BAA8B38D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398038,"discussion_content":"最后渲染进程会向浏览器进程“确认提交”，这里应该是接收完数据可以在页面显示内容了吧，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632721730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374416,"ip_address":""},"score":398038,"extra":""},{"author":{"id":2840430,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/57/6e/0010eec8.jpg","nickname":"月光林地","note":"","ucode":"827DFEBA385367","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1514088,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1a/68/11fefced.jpg","nickname":"Feeng","note":"","ucode":"0C287789495F35","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414717,"discussion_content":"根据平时的使用经历，新页面替换旧页面会有白屏，如果“确认提交”时已经接收完数据，应该旧页面消失立刻就会有新页面出现。事实不是这样，所以更有可能是管道建立完毕后，通知“确认提交”，这时响应体还没有返回，只是响应头先在请求流里拿到了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636871445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":398038,"ip_address":""},"score":414717,"extra":""}]},{"author":{"id":1915533,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3a/8d/f5e7a20d.jpg","nickname":"何以解忧","note":"","ucode":"4DFE2BDBAF4919","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357418,"discussion_content":"8.2 确认提交的时刻， 网络资源是否接收完毕，如果没有， 文档确认提交的时机是什么时候？接收到什么关键资源可以确认提交？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615802921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1401797,"avatar":"https://static001.geekbang.org/account/avatar/00/15/63/c5/a85ade71.jpg","nickname":"刘冬","note":"","ucode":"982676C96C0EB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221650,"discussion_content":"5.1 DNS解析的问题。我的理解是，dns服务器解析url时，只返回IP地址，不带port。你可以 dig time.geekbang.org来做一下实验。browser收到DNS的解析结果，再向拥有IP地址的web服务器发起请求时，会带上host头。服务器收到请求后，根据host头查看自己的配置，找到host对应的upstream服务的port，并将请求转给服务。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586021928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1189080,"avatar":"https://static001.geekbang.org/account/avatar/00/12/24/d8/aa41d743.jpg","nickname":"🐒🐱🐭🐮🐯🐰🐶","note":"","ucode":"52426AE36A9A39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70431,"discussion_content":"提交文档 不是由渲染进程发给浏览器进程的吗，上面怎么说是 览器向渲染进程发起“提交文档”的消息？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575355965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1038790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","nickname":"ytd","note":"","ucode":"C6AEA2D19E447A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1189080,"avatar":"https://static001.geekbang.org/account/avatar/00/12/24/d8/aa41d743.jpg","nickname":"🐒🐱🐭🐮🐯🐰🐶","note":"","ucode":"52426AE36A9A39","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71997,"discussion_content":"对提交文档的消息是渲染进程发给浏览器进程的，我上面的描述不太准确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575468014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70431,"ip_address":""},"score":71997,"extra":""},{"author":{"id":1991463,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/63/27/deefd03f.jpg","nickname":"HucerF","note":"","ucode":"68F847741F8D8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1038790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","nickname":"ytd","note":"","ucode":"C6AEA2D19E447A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261900,"discussion_content":"文中说的 提交文档 这个消息就是由浏览器进程发给渲染进程的吧？发完后，渲染进程会和网络进程建立传输数据的“管道”进行数据传输，文档数据传输完成之后，渲染进程会返回“确认提交”的消息给浏览器进程；","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1589021308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":71997,"ip_address":""},"score":261900,"extra":""},{"author":{"id":2258397,"avatar":"https://static001.geekbang.org/account/avatar/00/22/75/dd/9affd4d5.jpg","nickname":"九千七","note":"","ucode":"1E385C88B3401A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1189080,"avatar":"https://static001.geekbang.org/account/avatar/00/12/24/d8/aa41d743.jpg","nickname":"🐒🐱🐭🐮🐯🐰🐶","note":"","ucode":"52426AE36A9A39","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341237,"discussion_content":"“提交文档”的消息 应该是浏览器进程叫渲染进程提交文档，然后渲染进程接收完数据后“确认文档被提交”","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1610357813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70431,"ip_address":""},"score":341237,"extra":""}]},{"author":{"id":1546786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9a/22/1be230b7.jpg","nickname":"神经蛙在学习","note":"","ucode":"A448FCCB8A10C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589444,"discussion_content":"对于4的描述我认为不够严谨：就拿这篇文章的 url 来说，它请求的是一个由“动态数据（比如评论区的用户头像和评论数据都存储在服务器的数据库）+ 静态资源（html、css、js）” 构成的页面，即便本地有静态资源的缓存，也还是要向服务器发起请求的，不然动态资源没办法获得（比如新增了我这条评论）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664940104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1969849,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIYdf5Z0Iicn5nTotREgicJibeRKHsSkgmBaH3ghpL5Oug6FNA4zo08X672ePXYbiaCWCr57wXwUPAiazg/132","nickname":"不倒霉熊","note":"","ucode":"2AAF4E62F502FD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587828,"discussion_content":"从输入URL到页面展示，这中间发生了什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663310590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1673843,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","nickname":"Geek_115bc8","note":"","ucode":"71FBC9F02AFE1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569483,"discussion_content":"真的是先判断是否有缓存，然后在解析域名吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651457205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385384,"discussion_content":"渲染进程接收到数据，开始解析DOM树，CSSOM树，\nDOM树与CSSOM树全部解析以后，会继续生成布局树（或者说render树）进行剩下的绘制，渲染页面流程。最终回到浏览器进程，将渲染好的内容，展示到浏览器页面上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627022729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044175,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","nickname":"ヾ(◍°∇°◍)ﾉﾞ","note":"","ucode":"89545632BDA56E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4866,"discussion_content":"状态2xx都可以表示成功","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565781874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1038790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","nickname":"ytd","note":"","ucode":"C6AEA2D19E447A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044175,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","nickname":"ヾ(◍°∇°◍)ﾉﾞ","note":"","ucode":"89545632BDA56E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4873,"discussion_content":"嗯嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565785659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4866,"ip_address":""},"score":4873,"extra":""}]}]},{"had_liked":false,"id":123488,"user_name":"羽蝶曲","can_delete":false,"product_type":"c1","uid":1337216,"ip_address":"","ucode":"FEA9FB7F321874","user_header":"https://static001.geekbang.org/account/avatar/00/14/67/80/dae518d2.jpg","comment_is_top":false,"comment_ctime":1565685513,"is_pvip":false,"replies":[{"id":"45510","content":"总结的很详细，用心了！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565826049,"ip_address":"","comment_id":123488,"utype":1}],"discussion_count":16,"race_medal":0,"score":"851969210121","product_id":100033601,"comment_content":"1. 用户输入URL，浏览器会根据用户输入的信息判断是搜索还是网址，如果是搜索内容，就将搜索内容+默认搜索引擎合成新的URL；如果用户输入的内容符合URL规则，浏览器就会根据URL协议，在这段内容上加上协议合成合法的URL<br>2. 用户输入完内容，按下回车键，浏览器导航栏显示loading状态，但是页面还是呈现前一个页面，这是因为新页面的响应数据还没有获得<br>3. 浏览器进程浏览器构建请求行信息，会通过进程间通信（IPC）将URL请求发送给网络进程<br>GET &#47;index.html HTTP1.1<br>4. 网络进程获取到URL，先去本地缓存中查找是否有缓存文件，如果有，拦截请求，直接200返回；否则，进入网络请求过程<br>5. 网络进程请求DNS返回域名对应的IP和端口号，如果之前DNS数据缓存服务缓存过当前域名信息，就会直接返回缓存信息；否则，发起请求获取根据域名解析出来的IP和端口号，如果没有端口号，http默认80，https默认443。如果是https请求，还需要建立TLS连接。<br>6. Chrome 有个机制，同一个域名同时最多只能建立 6 个TCP 连接，如果在同一个域名下同时有 10 个请求发生，那么其中 4 个请求会进入排队等待状态，直至进行中的请求完成。如果当前请求数量少于6个，会直接建立TCP连接。<br>7. TCP三次握手建立连接，http请求加上TCP头部——包括源端口号、目的程序端口号和用于校验数据完整性的序号，向下传输<br>8. 网络层在数据包上加上IP头部——包括源IP地址和目的IP地址，继续向下传输到底层<br>9. 底层通过物理网络传输给目的服务器主机<br>10. 目的服务器主机网络层接收到数据包，解析出IP头部，识别出数据部分，将解开的数据包向上传输到传输层<br>11. 目的服务器主机传输层获取到数据包，解析出TCP头部，识别端口，将解开的数据包向上传输到应用层<br>12. 应用层HTTP解析请求头和请求体，如果需要重定向，HTTP直接返回HTTP响应数据的状态code301或者302，同时在请求头的Location字段中附上重定向地址，浏览器会根据code和Location进行重定向操作；如果不是重定向，首先服务器会根据 请求头中的If-None-Match 的值来判断请求的资源是否被更新，如果没有更新，就返回304状态码，相当于告诉浏览器之前的缓存还可以使用，就不返回新数据了；否则，返回新数据，200的状态码，并且如果想要浏览器缓存数据的话，就在相应头中加入字段：<br>Cache-Control:Max-age=2000<br>响应数据又顺着应用层——传输层——网络层——网络层——传输层——应用层的顺序返回到网络进程<br>13. 数据传输完成，TCP四次挥手断开连接。如果，浏览器或者服务器在HTTP头部加上如下信息，TCP就一直保持连接。保持TCP连接可以省下下次需要建立连接的时间，提示资源加载速度<br>Connection:Keep-Alive <br>14. 网络进程将获取到的数据包进行解析，根据响应头中的Content-type来判断响应数据的类型，如果是字节流类型，就将该请求交给下载管理器，该导航流程结束，不再进行；如果是text&#47;html类型，就通知浏览器进程获取到文档准备渲染<br>15. 浏览器进程获取到通知，根据当前页面B是否是从页面A打开的并且和页面A是否是同一个站点（根域名和协议一样就被认为是同一个站点），如果满足上述条件，就复用之前网页的进程，否则，新创建一个单独的渲染进程<br>16. 浏览器会发出“提交文档”的消息给渲染进程，渲染进程收到消息后，会和网络进程建立传输数据的“管道”，文档数据传输完成后，渲染进程会返回“确认提交”的消息给浏览器进程<br>17. 浏览器收到“确认提交”的消息后，会更新浏览器的页面状态，包括了安全状态、地址栏的 URL、前进后退的历史状态，并更新web页面，此时的web页面是空白页<br>18. 渲染进程对文档进行页面解析和子资源加载，HTML 通过HTM 解析器转成DOM Tree（二叉树类似结构的东西），CSS按照CSS 规则和CSS解释器转成CSSOM TREE，两个tree结合，形成render tree（不包含HTML的具体元素和元素要画的具体位置），通过Layout可以计算出每个元素具体的宽高颜色位置，结合起来，开始绘制，最后显示在屏幕中新页面显示出来","like_count":198,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462694,"discussion_content":"总结的很详细，用心了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565826049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036636,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d1/5c/ef7f625a.jpg","nickname":"👊 👊","note":"","ucode":"8A04740808B47C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240846,"discussion_content":"12 点应该是 HTTP解析响应头和响应体，如果是首次请求，请求头中不会存在If-None-Match 字段","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587389904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2192379,"avatar":"","nickname":"献赋","note":"","ucode":"A5CAA2EA4CB652","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1036636,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d1/5c/ef7f625a.jpg","nickname":"👊 👊","note":"","ucode":"8A04740808B47C","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":318612,"discussion_content":"没错，还有个否则你没看到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603790357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":240846,"ip_address":""},"score":318612,"extra":""},{"author":{"id":2258397,"avatar":"https://static001.geekbang.org/account/avatar/00/22/75/dd/9affd4d5.jpg","nickname":"九千七","note":"","ucode":"1E385C88B3401A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1036636,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d1/5c/ef7f625a.jpg","nickname":"👊 👊","note":"","ucode":"8A04740808B47C","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":341240,"discussion_content":"12点解释的是服务器端应用层的解析过程，所以12点HTTP解析请求头没错的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610358249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":240846,"ip_address":""},"score":341240,"extra":""}]},{"author":{"id":1782777,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/33/f9/50b76abe.jpg","nickname":"AMIR","note":"","ucode":"65142D9669071B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82408,"discussion_content":"16有问题吧，文章中写提交文档是渲染进程给浏览器进程的，你这里总结的是浏览器进程给渲染进程，反了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576335308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1895345,"avatar":"","nickname":"Geek_0dfece","note":"","ucode":"AAFF0A2652536C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1782777,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/33/f9/50b76abe.jpg","nickname":"AMIR","note":"","ucode":"65142D9669071B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205846,"discussion_content":"是你记错了，再回去看一下吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584349993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":82408,"ip_address":""},"score":205846,"extra":""},{"author":{"id":2661805,"avatar":"https://static001.geekbang.org/account/avatar/00/28/9d/ad/eddb8daf.jpg","nickname":"莲之挚爱","note":"","ucode":"83C182E74350E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1895345,"avatar":"","nickname":"Geek_0dfece","note":"","ucode":"AAFF0A2652536C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381168,"discussion_content":"本来就写错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624936034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":205846,"ip_address":""},"score":381168,"extra":""},{"author":{"id":2661805,"avatar":"https://static001.geekbang.org/account/avatar/00/28/9d/ad/eddb8daf.jpg","nickname":"莲之挚爱","note":"","ucode":"83C182E74350E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1782777,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/33/f9/50b76abe.jpg","nickname":"AMIR","note":"","ucode":"65142D9669071B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381173,"discussion_content":"写反了，本来就是你写错了，16没有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624936787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":82408,"ip_address":""},"score":381173,"extra":""}]},{"author":{"id":1644021,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLAU8sEUhlUrCS7Kft78oOPCyyaic74wVP4r98GOm6Fn2besj6HomwB41u2NsUJyeqMCzWhDwN2jZ8w/132","nickname":"Xiaojianjun_jason","note":"","ucode":"12452FF2A72C20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579421,"discussion_content":"现场你能答出这么多吗 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657441163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1499244,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e0/6c/ef405cc1.jpg","nickname":"关山楂","note":"","ucode":"C32E201FA33045","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297905,"discussion_content":"页面中的子资源是如何下载的，是渲染进程直接通知浏览器进程然后浏览器进程通知网路进程来进行下载吗？还是渲染进程直接通知网络进程下载数据？是通过什么通知的？rpc还是ipc?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597109315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2099552,"avatar":"","nickname":"Geek_bd705c","note":"","ucode":"CACEC4B46118CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1499244,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e0/6c/ef405cc1.jpg","nickname":"关山楂","note":"","ucode":"C32E201FA33045","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309801,"discussion_content":"我认为是渲染进程和网络进程建立管道时，就把html和html里所需要的子资源都下载好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601447843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297905,"ip_address":""},"score":309801,"extra":""}]},{"author":{"id":1326714,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3e/7a/a73ec858.jpg","nickname":"天使小男","note":"","ucode":"0D616FF02B1DD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21474,"discussion_content":"想知道输入的时候还没有按下回车键，是怎么合成合法的URL的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569488487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1551852,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ad/ec/776c9f72.jpg","nickname":"袋袋","note":"","ucode":"C1F5AE7699B28A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4889,"discussion_content":"都走缓存了怎么会还200","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565795659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1551852,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ad/ec/776c9f72.jpg","nickname":"袋袋","note":"","ucode":"C1F5AE7699B28A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6290,"discussion_content":"返回成功就是200","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566823785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4889,"ip_address":""},"score":6290,"extra":""},{"author":{"id":1049741,"avatar":"https://static001.geekbang.org/account/avatar/00/10/04/8d/005c2ff3.jpg","nickname":"weineel","note":"","ucode":"6DC6EF4F256A53","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":1551852,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ad/ec/776c9f72.jpg","nickname":"袋袋","note":"","ucode":"C1F5AE7699B28A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12873,"discussion_content":"如果浏览器确信缓存有效根本没有进行网络请求，直接使用的 disk cache 或则 memory cache 这个时候的响应码是 200。如果浏览器不确信缓存是否有效就会发送请求（请求头带有 If-None-Match 字段），如果返回 304 说明之缓存有效，浏览器可以放心的使用缓存，否则返回 200 并带上新的数据。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1568605253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4889,"ip_address":""},"score":12873,"extra":""},{"author":{"id":2099552,"avatar":"","nickname":"Geek_bd705c","note":"","ucode":"CACEC4B46118CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1551852,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ad/ec/776c9f72.jpg","nickname":"袋袋","note":"","ucode":"C1F5AE7699B28A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309802,"discussion_content":"强缓存返回200，实际上就是缓存还没有超时，直接从缓存里返回了。协议缓存（缓存已超时或者cache-control设置了no-cache），那么就需要去服务器询问是否内容有更新，没有更新的话就返回304，说明是可以用缓存的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601448004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4889,"ip_address":""},"score":309802,"extra":""}]}]},{"had_liked":true,"id":124397,"user_name":"芳华年月","can_delete":false,"product_type":"c1","uid":1625161,"ip_address":"","ucode":"79DFE01DCB6767","user_header":"https://static001.geekbang.org/account/avatar/00/18/cc/49/4fba1938.jpg","comment_is_top":false,"comment_ctime":1565876808,"is_pvip":false,"replies":[{"id":"45663","content":"我看了下代码，因为连接里面使用了 rel=&quot;noopener noreferrer&quot;这个属性。<br><br>这个涉及到安全了，要完整解释起来就话长了，我长话短说，先看阿里这个网站的连接是下面这种形式：<br><br>&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;hover&quot; href=&quot;https:&#47;&#47;linkmarket.aliyun.com&#47;hardware_store?spm=a2c3t.11219538.iot-navBar.62.4b5a51e7u2sXtw&quot; data-spm-anchor-id=&quot;a2c3t.11219538.iot-navBar.62&quot;&gt;硬件商城&lt;&#47;a&gt;<br><br>使用noopener noreferrer就是告诉浏览器，新打开的子窗口不需要访问父窗口的任何内容，这是为了防止一些钓鱼网站窃取父窗口的信息。<br><br>浏览器在打开新页面时，解析到含有noopener noreferrer时，就知道他们不需要共享页面内容，所以这时候浏览器就会让新链接在一个新页面中打开了。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565879054,"ip_address":"","comment_id":124397,"utype":1}],"discussion_count":2,"race_medal":1,"score":"521256919624","product_id":100033601,"comment_content":"请问老师，https:&#47;&#47;linkmarket.aliyun.com内新开的页面都是新开一个渲染进程，能帮忙解释下吗","like_count":121,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463155,"discussion_content":"我看了下代码，因为连接里面使用了 rel=&amp;quot;noopener noreferrer&amp;quot;这个属性。\n\n这个涉及到安全了，要完整解释起来就话长了，我长话短说，先看阿里这个网站的连接是下面这种形式：\n\n&amp;lt;a target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener noreferrer&amp;quot; class=&amp;quot;hover&amp;quot; href=&amp;quot;https://linkmarket.aliyun.com/hardware_store?spm=a2c3t.11219538.iot-navBar.62.4b5a51e7u2sXtw&amp;quot; data-spm-anchor-id=&amp;quot;a2c3t.11219538.iot-navBar.62&amp;quot;&amp;gt;硬件商城&amp;lt;/a&amp;gt;\n\n使用noopener noreferrer就是告诉浏览器，新打开的子窗口不需要访问父窗口的任何内容，这是为了防止一些钓鱼网站窃取父窗口的信息。\n\n浏览器在打开新页面时，解析到含有noopener noreferrer时，就知道他们不需要共享页面内容，所以这时候浏览器就会让新链接在一个新页面中打开了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565879054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625161,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cc/49/4fba1938.jpg","nickname":"芳华年月","note":"","ucode":"79DFE01DCB6767","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5073,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565925090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156466,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1574898381,"is_pvip":true,"replies":[{"id":"60100","content":"<br>多谢，看了你的提示，我重新看了一遍源码的执行过程，原文的确有两个地方描述不妥当，我现在评论区做下修订，稍后更正原文。<br><br>1:浏览器进程发出URL请求给网络进程<br><br>2:网络进程接收到URL请求之后，便发起网络请求，然后服务器返回HTTP数据到网络进程，网络进程解析HTTP出来响应头数据，并将其转发给浏览器进程<br><br>3:浏览器进程接收到网络进程的响应头数据之后，发送CommitNavigation消息到渲染进程，发送CommitNavigation时会携带响应头、等基本信息。<br><br>4:渲染进程接收到CommitNavigation消息之后，便开始准备接收HTML数据，接收数据的方式是直接和网络进程建立数据管道<br><br>5:最后渲染进程会像浏览器进程“确认提交”，这是告诉浏览器进程，说我已经准备好接受和解析页面数据了<br><br>6:最后浏览器进程更新页面状态","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1574908570,"ip_address":"","comment_id":156466,"utype":1}],"discussion_count":14,"race_medal":0,"score":"340877314765","product_id":100033601,"comment_content":"参考google官方文档，貌似提交文档的原文是commit navigation, 提交是从浏览器进程发起，至渲染进程，渲染进程确认导航，然后开始正式渲染；Now that the data and the renderer process is ready, an IPC is sent from the browser process to the renderer process to commit the navigation. It also passes on the data stream so the renderer process can keep receiving HTML data. Once the browser process hears confirmation that the commit has happened in the renderer process, the navigation is complete and the document loading phase begins.","like_count":80,"discussions":[{"author":{"id":2138770,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a2/92/6bbcb80b.jpg","nickname":"1979104101ng","note":"","ucode":"95204E6CBA81D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382341,"discussion_content":"最后是浏览器进程通知网络进程往管道里写响应体数据，渲染进程从管道中接收到数据并解析（同时浏览器进程进行页面更新，把解析完毕的数据刷新到页面）","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1625538610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147409,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/11/ed602a15.jpg","nickname":"potter","note":"","ucode":"49C6FC3721011D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361518,"discussion_content":"真的是误导人了，直接去Google看官方文档好了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1616682629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1387527,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/07/636a47cd.jpg","nickname":"慢慢来的比较快","note":"","ucode":"268B638E9B6688","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":191957,"discussion_content":"最后向浏览器进程‘确认提交’的时候，渲染进程是已经把全部数据接收完成，还没开始解析，还是准备开始接收和解析页面数据？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583049509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1387527,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/07/636a47cd.jpg","nickname":"慢慢来的比较快","note":"","ucode":"268B638E9B6688","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279431,"discussion_content":"我也很懵啊，他这个提交文档就是提交的响应头的信息呢还是响应体的数据，他的评论回复和文章不一致啊，其次，确认提交也不一致。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591344547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":191957,"ip_address":""},"score":279431,"extra":""},{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1387527,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2c/07/636a47cd.jpg","nickname":"慢慢来的比较快","note":"","ucode":"268B638E9B6688","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323099,"discussion_content":"同有这个疑惑🤔……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604886208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":191957,"ip_address":""},"score":323099,"extra":""}]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476120,"discussion_content":"\n多谢，看了你的提示，我重新看了一遍源码的执行过程，原文的确有两个地方描述不妥当，我现在评论区做下修订，稍后更正原文。\n\n1:浏览器进程发出URL请求给网络进程\n\n2:网络进程接收到URL请求之后，便发起网络请求，然后服务器返回HTTP数据到网络进程，网络进程解析HTTP出来响应头数据，并将其转发给浏览器进程\n\n3:浏览器进程接收到网络进程的响应头数据之后，发送CommitNavigation消息到渲染进程，发送CommitNavigation时会携带响应头、等基本信息。\n\n4:渲染进程接收到CommitNavigation消息之后，便开始准备接收HTML数据，接收数据的方式是直接和网络进程建立数据管道\n\n5:最后渲染进程会像浏览器进程“确认提交”，这是告诉浏览器进程，说我已经准备好接受和解析页面数据了\n\n6:最后浏览器进程更新页面状态","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574908570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2042187,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/29/4b/f59d997e.jpg","nickname":"里里","note":"","ucode":"DB27200B40ADA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288696,"discussion_content":"是浏览器把渲染数据给渲染进程的吗??还是网络进程把数据给渲染进程的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593843021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2015986,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c2/f2/b3b349a4.jpg","nickname":"OOP","note":"","ucode":"FA536DFBF793F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2042187,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/29/4b/f59d997e.jpg","nickname":"里里","note":"","ucode":"DB27200B40ADA1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312329,"discussion_content":"html等资源在响应体中，是网络进程给的。老师说的浏览器进程传的是响应头。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602665566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288696,"ip_address":""},"score":312329,"extra":""}]},{"author":{"id":1382114,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyiafLesAhyuicJZAhz9XGrG61455c3docOMhyLKMszjLMSBuasV3icuxmuSapjTLdHpNwiaUlAwTTCA/132","nickname":"nicola","note":"","ucode":"E60ED40AAC9D47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366978,"discussion_content":"能贴个官方文档吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618229010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1177430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","nickname":"champ可口可乐了","note":"","ucode":"EA75C67E9124C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1382114,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyiafLesAhyuicJZAhz9XGrG61455c3docOMhyLKMszjLMSBuasV3icuxmuSapjTLdHpNwiaUlAwTTCA/132","nickname":"nicola","note":"","ucode":"E60ED40AAC9D47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374533,"discussion_content":"https://developers.google.com/web/updates/2018/09/inside-browser-part1\n官方的这4篇系列文章可以看一下","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1621237776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":366978,"ip_address":""},"score":374533,"extra":""},{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1177430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","nickname":"champ可口可乐了","note":"","ucode":"EA75C67E9124C7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386528,"discussion_content":"感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627628231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374533,"ip_address":""},"score":386528,"extra":""}]},{"author":{"id":1915533,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3a/8d/f5e7a20d.jpg","nickname":"何以解忧","note":"","ucode":"4DFE2BDBAF4919","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357424,"discussion_content":"此处确认提交的时机和我理解的渲染流程吻合了（解析部分渲染部分）确认提交是开始接收网络进程的待渲染数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615803326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201485,"avatar":"https://static001.geekbang.org/account/avatar/00/12/55/4d/9150a4c9.jpg","nickname":"林小帅","note":"","ucode":"8E65B0213FD384","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313727,"discussion_content":"你好，问下这份文档的地址是什么？是 GitHub Chromium 上的项目文档吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603085137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63778,"discussion_content":"感谢更正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574909471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123923,"user_name":"ヾ(◍°∇°◍)ﾉﾞ","can_delete":false,"product_type":"c1","uid":1044175,"ip_address":"","ucode":"89545632BDA56E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","comment_is_top":false,"comment_ctime":1565781988,"is_pvip":false,"replies":[{"id":"45457","content":"<br>由于正文篇幅有限，无法对keep-alive做详细解释，刚好借着这个问题，我把keep-alive讲清楚。<br><br>首先keep-alive是为了解决连接效率不高的问题，http1.0时代，http请求都是短连接的形式，也即是每次请求一个资源都需要和服务器建立连接+传输数据+断开连接，通常，建立连接和断开连接的时间就有可能超过传输数据的时间了，这种短连接的效率是异常的低效。<br><br>针对短连接低效的问题，后面就出现了长连接，也就是这里要讲的keep-alive。<br><br>你可以把长连接看成是一个管道，一个http请求结束之后，不会关闭连接，下个请求可以复用该连接，这样就省去建立连接和断开连接的时间了，但是他们请求是按照顺序，也就是符合IP+端口规则的资源都可以复用该连接，这就回答了上面提的这个问题。<br><br>但是，使用keep-alive同样存在问题，比如一个页面可能有100张图片素材，假设这些图片素材都保存在同一个域名下面，如果只复用一个http管道的话，那么传输100张图片的素材也是非常耗时间的，这就出现了同一时刻并发连接服务器的需求，也就是文中提到同一时刻，对同一域名下面，只能可以发起6个请求，这样就可以大大提升请求效率了。<br><br>为什么是6个请求而不是更多了，这是为了服务器性能考虑，如果同一时刻无限制连接，那么可能会导致服务器忙不过来。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565788970,"ip_address":"","comment_id":123923,"utype":1}],"discussion_count":6,"race_medal":0,"score":"263558787044","product_id":100033601,"comment_content":"那么浏览器的http的keepalive的connection是什么粒度复用的呢？也是域名加协议头级别吗？","like_count":61,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462895,"discussion_content":"\n由于正文篇幅有限，无法对keep-alive做详细解释，刚好借着这个问题，我把keep-alive讲清楚。\n\n首先keep-alive是为了解决连接效率不高的问题，http1.0时代，http请求都是短连接的形式，也即是每次请求一个资源都需要和服务器建立连接+传输数据+断开连接，通常，建立连接和断开连接的时间就有可能超过传输数据的时间了，这种短连接的效率是异常的低效。\n\n针对短连接低效的问题，后面就出现了长连接，也就是这里要讲的keep-alive。\n\n你可以把长连接看成是一个管道，一个http请求结束之后，不会关闭连接，下个请求可以复用该连接，这样就省去建立连接和断开连接的时间了，但是他们请求是按照顺序，也就是符合IP+端口规则的资源都可以复用该连接，这就回答了上面提的这个问题。\n\n但是，使用keep-alive同样存在问题，比如一个页面可能有100张图片素材，假设这些图片素材都保存在同一个域名下面，如果只复用一个http管道的话，那么传输100张图片的素材也是非常耗时间的，这就出现了同一时刻并发连接服务器的需求，也就是文中提到同一时刻，对同一域名下面，只能可以发起6个请求，这样就可以大大提升请求效率了。\n\n为什么是6个请求而不是更多了，这是为了服务器性能考虑，如果同一时刻无限制连接，那么可能会导致服务器忙不过来。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565788970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1915533,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3a/8d/f5e7a20d.jpg","nickname":"何以解忧","note":"","ucode":"4DFE2BDBAF4919","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357425,"discussion_content":"前端能否控制是否复用之前的TCP连接，还是新开连接？什么时候选择排队？或者不排队","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615803519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2042187,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/29/4b/f59d997e.jpg","nickname":"里里","note":"","ucode":"DB27200B40ADA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288593,"discussion_content":"老师请问符合ip+端口规则的资源怎么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593818304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279412,"discussion_content":"那也就是说一个TCP连接同一时刻可以处理一个HTTP？所以并发的意思是浏览器建立6个TCP，同时处理6个HTTP？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591342174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5287,"discussion_content":"老师，6个请求是不是针对http1和1.1的，HTTP2/3又是怎么处理的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566135769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1044175,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","nickname":"ヾ(◍°∇°◍)ﾉﾞ","note":"","ucode":"89545632BDA56E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6399,"discussion_content":"连接数是一样的吧，http2 本身又支持了一个连接里同时并行发送http请求，http3貌似无连接，不太确认如何限制\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566885073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5287,"ip_address":""},"score":6399,"extra":""}]}]},{"had_liked":false,"id":124247,"user_name":"JawQ_","can_delete":false,"product_type":"c1","uid":1027581,"ip_address":"","ucode":"5BC7B00363CC78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ad/fd/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1565841389,"is_pvip":false,"replies":[{"id":"45646","content":"你能想到这个问题，说明你已经快思考到最核心的---事件循环机制了，非常好。<br><br>多个页面公用一个渲染进程，也就意味着多个页面公用同一个主线程，所有页面的任务都是在同一个主线程上执行，这些任务包括渲染流程，JavaScript执行，用户交互的事件的响应等等，@@@但是@@@  如果一个标签页里面执行一个死循环，那么意味着该JavaScript代码会一直霸占主线程，这样就导致了其它的页面无法使用该主线程，从而让所有页面都失去响应！<br><br>关于循环系统，我会在后续章节做详细分析！<br><br><br><br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565877315,"ip_address":"","comment_id":124247,"utype":1}],"discussion_count":5,"race_medal":0,"score":"203429304301","product_id":100033601,"comment_content":"同一站点共用一个渲染进程，那假设有2个标签页是同一站点，我在A标签页面写个死循环，导致页面卡死，B页面是否也是卡死了呢？","like_count":47,"discussions":[{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209940,"discussion_content":"老师厉害就不说了，提问者真的厉害，思路清奇！","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1584692322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623753,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/c9/b1769675.jpg","nickname":"纯氧有毒","note":"","ucode":"71EE6D924A004C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291698,"discussion_content":"事实证明会的，但是不仅同一个站点的标签页会卡住，竟然所有的标签页都卡住了，这个是为什么？\n\n在控制台输入一下代码：\n\n        for(;;) {\n        console.log(Math.pow(2, 100))\n        }","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1594910517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623753,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/c9/b1769675.jpg","nickname":"纯氧有毒","note":"","ucode":"71EE6D924A004C","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":353270,"discussion_content":"好问题啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615106823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291698,"ip_address":""},"score":353270,"extra":""},{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623753,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/c9/b1769675.jpg","nickname":"纯氧有毒","note":"","ucode":"71EE6D924A004C","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":541332,"discussion_content":"控制台属于浏览器进程的一部分","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640334268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291698,"ip_address":""},"score":541332,"extra":""}]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463080,"discussion_content":"你能想到这个问题，说明你已经快思考到最核心的---事件循环机制了，非常好。\n\n多个页面公用一个渲染进程，也就意味着多个页面公用同一个主线程，所有页面的任务都是在同一个主线程上执行，这些任务包括渲染流程，JavaScript执行，用户交互的事件的响应等等，@@@但是@@@  如果一个标签页里面执行一个死循环，那么意味着该JavaScript代码会一直霸占主线程，这样就导致了其它的页面无法使用该主线程，从而让所有页面都失去响应！\n\n关于循环系统，我会在后续章节做详细分析！\n\n\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565877315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124227,"user_name":"前端队长","can_delete":false,"product_type":"c1","uid":1035766,"ip_address":"","ucode":"2F6ACAD6568FDE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/f6/ad85ac99.jpg","comment_is_top":false,"comment_ctime":1565837956,"is_pvip":false,"replies":[{"id":"45651","content":"超级赞","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565877694,"ip_address":"","comment_id":124227,"utype":1}],"discussion_count":12,"race_medal":1,"score":"156184660612","product_id":100033601,"comment_content":"1、用户输入关键词，地址栏判断是搜索内容还是url地址。<br>如果是搜索内容，会使用浏览器默认搜索引擎加上搜索内容合成url；<br>如果是域名会加上协议（如https）合成完整的url。<br><br>2、然后按下回车。浏览器进程通过IPC（进程间通信）把url传给网络进程（网络进程接收到url才发起真正的网络请求）。<br><br>3、网络进程接收到url后，先查找有没有缓存。<br>有缓存，直接返回缓存的资源。<br>没有缓存。（进入真正的网络请求）。首先获取域名的IP，系统会首先自动从hosts文件中寻找域名对应的 IP 地址，一旦找到，和服务器建立TCP连接；如果没有找到，则系统会将网址提交 DNS 域名解析服务器进行 IP 地址的解析。<br><br>4、利用IP地址和服务器建立TCP连接（3次握手）。<br><br>5、建立连接后，浏览器构建数据包（包含请求行，请求头，请求正文，并把该域名相关Cookie等数据附加到请求头），然后向服务器发送请求消息。<br><br>6、服务器接收到消息后根据请求信息构建响应数据（包括响应行，响应头，响应正文），然后发送回网络进程。<br><br>7、网络进程接收到响应数据后进行解析。<br>如果发现响应行的返回的状态码为301，302，说明服务器要我们去找别人要数据，找谁呢？找响应头中的Location字段要，Location的内容是需要重定向的地址url。获取到这个url一切重新来过。<br>如果返回的状态码为200，说明服务器返回了数据。<br><br>8、好了，获取到数据以什么方式打开呢？打开的方式不对的话也不行。打开的方式就是 Content-Type。这个属性告诉浏览器服务器返回的数据是什么类型的。如果返回的是网页类型则为 text&#47;html，如果是下载文件类型则为 application&#47;octet-stream 等等。打开的方式不对，则得到的结果也不对。    <br>如果是下载类型，则该请求会被提交给浏览器的下载管理器，同时该请求的流程到此结束。<br>如果是网页类型，那么浏览器就要准备渲染页面了。<br><br><br>9、渲染页面开始。浏览器进程发出“提交文档”（文档是响应体数据）消息给渲染进程，渲染进程接收到消息后会和网络进程建立传输数据的通道，网络进程将“文档”传输给渲染进程。<br><br>10、一旦开始传输，渲染进程便开始渲染界面（详细渲染过程待续。。。）<br><br>11、传输完毕，渲染进程会发出“确认提交”消息给浏览器进程。<br><br>12、浏览器在接收到“确认提交”消息后，更新浏览器界面状态（包括地址栏信息，仟前进后退历史，web页面和网站安全状态）。<br><br>13、页面此时可能还没有渲染完毕，而一旦渲染完毕，渲染进程会发送一个消息给浏览器进程，浏览器接收到这个消息后会停止标签图标的加载动画。<br><br>自此，一个完整的页面形成了。","like_count":36,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463069,"discussion_content":"超级赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565877694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279432,"discussion_content":"11、是传输完毕还是开始接收和解析数据时‘确认提交’呢？如果如你所说，传输完毕确认提交，那浏览器更新的web页面从哪来？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591344695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":2003311,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/91/6f/0e46dd13.jpg","nickname":"林～～","note":"","ucode":"EE53A071961134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287997,"discussion_content":"应该是传输完毕就确认提交，这个确认提交也只是确认渲染进程已经接收到文档（只是渲染进程会在接收文档的时候就开始渲染页面）。接收完毕就“确认提交”，但这个时候只是更新浏览器界面状态（浏览器界面有可能并没有完全渲染好）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593610952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":279432,"ip_address":""},"score":287997,"extra":""},{"author":{"id":1915533,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3a/8d/f5e7a20d.jpg","nickname":"何以解忧","note":"","ucode":"4DFE2BDBAF4919","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2003311,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/91/6f/0e46dd13.jpg","nickname":"林～～","note":"","ucode":"EE53A071961134","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357427,"discussion_content":"看前面的老师的补充回答，确认提交是渲染进程开始接收网络进程的数据，而非接收完毕","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615803708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287997,"ip_address":""},"score":357427,"extra":""},{"author":{"id":1035766,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cd/f6/ad85ac99.jpg","nickname":"前端队长","note":"","ucode":"2F6ACAD6568FDE","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1915533,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3a/8d/f5e7a20d.jpg","nickname":"何以解忧","note":"","ucode":"4DFE2BDBAF4919","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":388206,"discussion_content":"是的，我也看了补充，一旦开始传输，渲染进程就会发“确认提交”告诉浏览器进程已经准备好接收和解析页面数据了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628652808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":357427,"ip_address":""},"score":388206,"extra":""}]},{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279417,"discussion_content":"9、按你说的浏览器进程把文档（响应体数据）提交给渲染进程，为什么渲染进程收到消息后还要和网络进程建立连接接收文档呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591342743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2003311,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/91/6f/0e46dd13.jpg","nickname":"林～～","note":"","ucode":"EE53A071961134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287995,"discussion_content":"浏览器进程是发出“提交文档”的消息通知给渲染进程，并没有把数据提交到渲染进程","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593610395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":279417,"ip_address":""},"score":287995,"extra":""},{"author":{"id":1915533,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3a/8d/f5e7a20d.jpg","nickname":"何以解忧","note":"","ucode":"4DFE2BDBAF4919","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2003311,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/91/6f/0e46dd13.jpg","nickname":"林～～","note":"","ucode":"EE53A071961134","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357428,"discussion_content":"我也是如此理解的，确认提交似乎是渲染进程开始接收网络进程的数据，而非接收完毕\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615803788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287995,"ip_address":""},"score":357428,"extra":""}]},{"author":{"id":1740548,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8f/04/508f860b.jpg","nickname":"学习使人进步","note":"","ucode":"D959566A25D759","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54231,"discussion_content":"这个很赞，把提交文档和确认提交解释清楚了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574272748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1326714,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3e/7a/a73ec858.jpg","nickname":"天使小男","note":"","ucode":"0D616FF02B1DD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21460,"discussion_content":"第一步 没按回车 就自动合成了完整的url？ 怎么合成的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569487148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1035766,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cd/f6/ad85ac99.jpg","nickname":"前端队长","note":"","ucode":"2F6ACAD6568FDE","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1326714,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3e/7a/a73ec858.jpg","nickname":"天使小男","note":"","ucode":"0D616FF02B1DD7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21806,"discussion_content":"应该是回车后合成的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569542231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21460,"ip_address":""},"score":21806,"extra":""}]}]},{"had_liked":false,"id":123576,"user_name":"Oliver","can_delete":false,"product_type":"c1","uid":1622666,"ip_address":"","ucode":"8837AFAB671701","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/8a/80c34648.jpg","comment_is_top":false,"comment_ctime":1565705031,"is_pvip":false,"replies":[{"id":"45319","content":"补充的好 👍","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565707189,"ip_address":"","comment_id":123576,"utype":1}],"discussion_count":2,"race_medal":0,"score":"108939887431","product_id":100033601,"comment_content":"这也就解释了为什么在浏览器的地址栏里面输入了一个地址后，之前的页面没有立马消失，而是要加载一会儿才会更新页面。<br><br><br>第一步应该是触发当前页的卸载事件和收集需要释放内存，这也占用了一些时间，但大头应该是请求新的url时的返回","like_count":25,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462732,"discussion_content":"补充的好 👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565707189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1566826,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e8/6a/6438c61b.jpg","nickname":"小、sen","note":"","ucode":"0FEB3465198330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536400,"discussion_content":"厉害了 \n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638779114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130749,"user_name":"tokey","can_delete":false,"product_type":"c1","uid":1337746,"ip_address":"","ucode":"5278487F37D4EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","comment_is_top":false,"comment_ctime":1567524258,"is_pvip":false,"replies":[{"id":"48958","content":"页面进程关闭后，浏览器进程会接收到关闭的消息，然后浏览器进程会通知网络进程主动断开该页面的所有tcp连接。<br><br>所以你不用担心页面关闭会导致网络问题！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567525070,"ip_address":"","comment_id":130749,"utype":1}],"discussion_count":2,"race_medal":0,"score":"83171902882","product_id":100033601,"comment_content":"老师！如果一个页面发出请求后就关闭了，那么这个页面的进程就关闭了吧？那么 tcp 的连接还会不会有（请求能不能到达服务端），如果连接成功服务端处理过后 tcp 断开需要四次挥手，此时服务器收不到客户端的断开确认消息，服务器会处于什么状态（一直等待么）？","like_count":19,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466106,"discussion_content":"页面进程关闭后，浏览器进程会接收到关闭的消息，然后浏览器进程会通知网络进程主动断开该页面的所有tcp连接。\n\n所以你不用担心页面关闭会导致网络问题！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567525070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1566826,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e8/6a/6438c61b.jpg","nickname":"小、sen","note":"","ucode":"0FEB3465198330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536401,"discussion_content":"举一反三 这位同学有点东西哟","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638779175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123849,"user_name":"Mr. Cheng","can_delete":false,"product_type":"c1","uid":1585737,"ip_address":"","ucode":"A6D81A7D92160E","user_header":"https://static001.geekbang.org/account/avatar/00/18/32/49/a97fc6df.jpg","comment_is_top":false,"comment_ctime":1565771281,"is_pvip":false,"replies":[{"id":"45453","content":"谢谢，这也让我很开心","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565787763,"ip_address":"","comment_id":123849,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65990280721","product_id":100033601,"comment_content":"作为一个从其他行业跳到web前端的，网络方面的知识欠缺太多，虽然在其他地方也看了很多，但这个专栏讲的清晰易懂，大赞","like_count":15,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462844,"discussion_content":"谢谢，这也让我很开心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565787763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124176,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1565832827,"is_pvip":false,"replies":[{"id":"45656","content":"要左键直接点击才开的才算","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565878007,"ip_address":"","comment_id":124176,"utype":1}],"discussion_count":6,"race_medal":0,"score":"61695374971","product_id":100033601,"comment_content":"我打开百度，然后右键点击百度文库以新页面打开的方式，发现两个标签是两个不同的渲染进程！","like_count":14,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463042,"discussion_content":"要左键直接点击才开的才算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565878007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":3,"child_discussions":[{"author":{"id":2475132,"avatar":"https://static001.geekbang.org/account/avatar/00/25/c4/7c/fa60f86f.jpg","nickname":"kelinlawu","note":"","ucode":"96D18B71A33277","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":534466,"discussion_content":"老师好，我打开了百度官网https://www.baidu.com/；然后按照你说的点击了百度学术按钮，导航到了新的页面https://xueshu.baidu.com/，但是我看了浏览器的进程管理器他们两个页面也不是同一个渲染进程呢？这是为什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638196466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":463042,"ip_address":""},"score":534466,"extra":""},{"author":{"id":2475132,"avatar":"https://static001.geekbang.org/account/avatar/00/25/c4/7c/fa60f86f.jpg","nickname":"kelinlawu","note":"","ucode":"96D18B71A33277","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":534470,"discussion_content":"按照同一站点的说法，这两个页面的协议和根域名都是一样的呀，为什么还会出现这种情况呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638196518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":463042,"ip_address":""},"score":534470,"extra":""},{"author":{"id":1272756,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/b4/47c548fd.jpg","nickname":"一只鱼","note":"","ucode":"44C6751552953B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2475132,"avatar":"https://static001.geekbang.org/account/avatar/00/25/c4/7c/fa60f86f.jpg","nickname":"kelinlawu","note":"","ucode":"96D18B71A33277","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584396,"discussion_content":"TLD 顶级域名(Top-Level-Domain)\neTLD 有效顶级域名(effective Top-Level-Domain) \n\nbaidu.com是比较特殊的，特殊在于baidu是有效顶级域名，原因猜测是因为baidu是国内早期互联网玩家，你可以去新浪网站测试，也是同样的行为，因为sina也是eTLD\n\n判断同一个站点的规则是 eTLD + 1\n即 www.(baidu.com) 和 xueshu.(baidu.com) 不相等，所以不是同一个站点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660804049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534470,"ip_address":"广东"},"score":584396,"extra":""}]},{"author":{"id":1748640,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ae/a0/707350ef.jpg","nickname":"穿秋裤的男孩","note":"","ucode":"D0F48C66377893","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226017,"discussion_content":"为啥必须左键打开才算呢，右键新页面打开的时候也属于同站吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586415681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1638828,"avatar":"https://static001.geekbang.org/account/avatar/00/19/01/ac/0a84e410.jpg","nickname":"Crack","note":"","ucode":"BA9573576069C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45313,"discussion_content":"秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573021714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123421,"user_name":"EanCuznaivy","can_delete":false,"product_type":"c1","uid":1110842,"ip_address":"","ucode":"258EA7E1A61E3C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/3a/8e00d07f.jpg","comment_is_top":false,"comment_ctime":1565673401,"is_pvip":false,"replies":[{"id":"45298","content":"赞","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565678084,"ip_address":"","comment_id":123421,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48810313657","product_id":100033601,"comment_content":"想起来一个github repo：https:&#47;&#47;github.com&#47;alex&#47;what-happens-when，讲了从浏览器地址框输入google.com按下回车之后会发生什么……","like_count":12,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462664,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565678084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLHOZjqhVkWgUrUibLnXkiaFkhJdfWT2BZP3LldE3tArIoHASlhTSp8tiatiamLbQOjKeMcYHkAexoyCg/132","nickname":"江霖","note":"","ucode":"D197B3FD012944","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39174,"discussion_content":"这个厉害了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571900690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127303,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1566642132,"is_pvip":false,"replies":[{"id":"47249","content":"第一个就是接受到第一批inde.html的数据就会发送提交文档的消息<br><br>第二个要等所有资源加载完毕，js css image等","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566774250,"ip_address":"","comment_id":127303,"utype":1}],"discussion_count":8,"race_medal":0,"score":"40221347796","product_id":100033601,"comment_content":"如：打开https:&#47;&#47;www.baidu.com&#47;index.html，index.html页面中肯定有很多css和js链接文件，那么当浏览器进程通过IPC把URL请求发送至网络进程，网络进程将index.html页面下载完成后，告诉浏览器进程，浏览器进程创建渲染进程，发出“提交文档”的消息，然后渲染进程与网络进程建立管道，渲染进程接收完数据后，向浏览器进程发出“确认提交”的消息，浏览器进程做停止加载条，更新页面等操作。<br>老师，这个过程中有2个疑问：<br>1、只要下载完成index.html文件(不包括里面的css和js等文件)，浏览器进程就会发出“提交文档”的消息是吗？<br>2、渲染进程接收完数据，怎么算接收完数据？是把index.html中的响应数据接收了就算完吗？包不包括里面的css、js等文件下载完才算是接收完？","like_count":9,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464428,"discussion_content":"第一个就是接受到第一批inde.html的数据就会发送提交文档的消息\n\n第二个要等所有资源加载完毕，js css image等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566774250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386155,"discussion_content":"最后渲染进程会向浏览器进程“确认提交”，这是告诉浏览器进程：“已经准备好接受和解析页面数据了”  这不是文章里面，老师自己的原话嘛？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627452519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759808,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRPuYmxCsTaEroajHBWnBALgPW1PFYXviarfeCpvIGap5xZ3uo6XOyW6QA4ibvuyX0w3YsW0aYRf8w/132","nickname":"Geek_2753cc","note":"","ucode":"9A108A3E1FFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350208,"discussion_content":"老师，同问，为什么第二个要等所有资源加载完毕，这是不是意味着导航完成需要等页面上所有资源加载完毕","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613746599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386154,"discussion_content":"确认提交以后，才开始传输资源吧？怎么说是全部传输完成，才确认提交呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627452338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1471963,"avatar":"https://static001.geekbang.org/account/avatar/00/16/75/db/1f2a24bd.jpg","nickname":"老壮","note":"","ucode":"8FD072F0636B8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379410,"discussion_content":"第二个不是所有资源。阻塞渲染的资源加载完毕即可，其中包括css，同步的js文件，image图片资源是不包括的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623890943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1380541,"avatar":"https://static001.geekbang.org/account/avatar/00/15/10/bd/5b935d38.jpg","nickname":"你微笑时好美","note":"","ucode":"EE23BE679FC901","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284295,"discussion_content":"引用老师下面的评论，整个过程是边下载边解析的，接收到第一批数据，便开始做DOM解析了，那么如果等页面解析完毕再去更新页面，时间不会很久吗？浏览器不会边解析边渲染页面吗？网速慢的情况下，经常能看到先有页面的结构出来，然后再有样式生效，这怎么解释尼？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592491014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1380541,"avatar":"https://static001.geekbang.org/account/avatar/00/15/10/bd/5b935d38.jpg","nickname":"你微笑时好美","note":"","ucode":"EE23BE679FC901","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284290,"discussion_content":"第二个为什么是要等所有资源加载完毕？如果等所有资源（包括外链资源）加载完毕，那页面解析的操作是在哪步执行的？也是在接收数据的过程中吗？如果等页面解析完毕再去更新页面，时间不会很久吗？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592490706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1374181,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","nickname":"张宗伟","note":"","ucode":"1447A20C7A8982","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1380541,"avatar":"https://static001.geekbang.org/account/avatar/00/15/10/bd/5b935d38.jpg","nickname":"你微笑时好美","note":"","ucode":"EE23BE679FC901","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342847,"discussion_content":"我的理解是，一般来说，请求完index.html之后，渲染进程就会开始解析，解析过程中遇到引用的外部资源，例如js、css、图片等，会再去请求这些资源的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1610850601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284290,"ip_address":""},"score":342847,"extra":""}]}]},{"had_liked":false,"id":126549,"user_name":"tokey","can_delete":false,"product_type":"c1","uid":1337746,"ip_address":"","ucode":"5278487F37D4EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","comment_is_top":false,"comment_ctime":1566408043,"is_pvip":false,"replies":[{"id":"47144","content":"那说明百度依然支持http协议，浏览器里面可能你之前有过https的访问记录，所以浏览器在请求之前将你的协议切换称https了。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566657856,"ip_address":"","comment_id":126549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27336211819","product_id":100033601,"comment_content":"老师！我 curl -I http:&#47;&#47;www.baidu.com 返回的信息是200，但是浏览器直接输入 http 协议的时候百度会跳转到 https，这个是为什么啊？那百度是怎么做的重定向呢？","like_count":6,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464051,"discussion_content":"那说明百度依然支持http协议，浏览器里面可能你之前有过https的访问记录，所以浏览器在请求之前将你的协议切换称https了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566657856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124201,"user_name":"月上秦少","can_delete":false,"product_type":"c1","uid":1622599,"ip_address":"","ucode":"1B8151B8940466","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/47/7e4a17fa.jpg","comment_is_top":false,"comment_ctime":1565834117,"is_pvip":false,"replies":[{"id":"45652","content":"哈哈，01篇到06篇都可以看看","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565877848,"ip_address":"","comment_id":124201,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27335637893","product_id":100033601,"comment_content":"哇，有一次面试问题遇到了，答得一塌糊涂，没想到大佬这里竟然有这个专题。","like_count":6,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463056,"discussion_content":"哈哈，01篇到06篇都可以看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565877848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180700,"user_name":"常金","can_delete":false,"product_type":"c1","uid":1876406,"ip_address":"","ucode":"6868495B5F8E1B","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a1/b6/7fa10b2a.jpg","comment_is_top":false,"comment_ctime":1582367407,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"23057203887","product_id":100033601,"comment_content":"这篇中的URL请求部分和第三篇中的内容有出入<br>第三篇表示先构建请求，再查询缓存<br>这篇中说先查询缓存，再构建请求。。。<br>搞晕了。。。","like_count":5,"discussions":[{"author":{"id":1622719,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/bf/8ea0cf63.jpg","nickname":"前端路上的小学生","note":"","ucode":"90A9B6DA3EF5F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310917,"discussion_content":"如果我没有理解错误的话，构建请求是浏览器进程做的事情，浏览器进程发起获取数据的请求给网络进程，这时候网络进程才能去看有没有缓存，不然查找什么缓存呢？只有先有请求才知道我要找什么缓存，这样理解应该没错吧？网络进程查到缓存，告诉浏览器进程我找到了，然后浏览器进程让网络进程和渲染进程建立通道来传递数据。所以我理解的过程是:  浏览器进程构建请求到网络进程，网络进程拿这个请求查询缓存，没有缓存则拿这个请求来转发出去，等到得到数据返回了，再给浏览器进程回复","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602129993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2286113,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e2/21/60adf96b.jpg","nickname":"stone","note":"","ucode":"65816E57253D0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322300,"discussion_content":"先构建请求，查找缓存是网络进程做的事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604720707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1991463,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/63/27/deefd03f.jpg","nickname":"HucerF","note":"","ucode":"68F847741F8D8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261922,"discussion_content":"个人觉得先先查询缓存，再构建请求。。。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589023827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1991463,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/63/27/deefd03f.jpg","nickname":"HucerF","note":"","ucode":"68F847741F8D8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261921,"discussion_content":"对的，我也懵逼了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589023740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170237,"user_name":"乃乎","can_delete":false,"product_type":"c1","uid":1393061,"ip_address":"","ucode":"03F587A06051AC","user_header":"https://static001.geekbang.org/account/avatar/00/15/41/a5/16c615cc.jpg","comment_is_top":false,"comment_ctime":1578555374,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23053391854","product_id":100033601,"comment_content":"建议看原文？https:&#47;&#47;developers.google.com&#47;web&#47;updates&#47;2018&#47;09&#47;inside-browser-part2#a_simple_navigation","like_count":5},{"had_liked":false,"id":125992,"user_name":"Geek_Leon","can_delete":false,"product_type":"c1","uid":1503246,"ip_address":"","ucode":"EAC6BC158C47AF","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83erLlItp9mBJIDaKMFhJ8W183vH1ib7PuHCoZdW26qIg4ndvSMH6L76NksQcvbnvkayzJEDyq4ptQPg/132","comment_is_top":false,"comment_ctime":1566290421,"is_pvip":false,"replies":[{"id":"46793","content":"可以这么理解","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566427112,"ip_address":"","comment_id":125992,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23041126901","product_id":100033601,"comment_content":"李老师您好，关于下面这句话: “提交文档”的消息由浏览器进程发出，渲染进程接收到“提交文档”消息后，和网络进程建立传输数据的“管道”。<br>这句话是否可以理解为: 此时响应报文在网络进程那里，需要浏览器进程做一个统一调度，跟渲染进程说，你可以去接收响应报文了。然后渲染进程就通过IPC与网络进程通信，让网络进程把响应报文全部发过来。渲染进程拿到所有响应报文，就会回复浏览器进程全部响应报文都拿到了，你浏览器进程可以更新界面，我渲染进程可以进行渲染。","like_count":5,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463778,"discussion_content":"可以这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566427112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279435,"discussion_content":"渲染进程拿到响应体数据后向浏览器进程“提交确认”，意思是告诉浏览器我开始接收和解析数据了，然后渲染数据，最后把渲染完成后把结果提交给浏览器进程更新web页面，导航按钮，地址栏URL等，到这里全部工作才算完成了吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591345026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123376,"user_name":"Elmer","can_delete":false,"product_type":"c1","uid":1233975,"ip_address":"","ucode":"61FC9CE0BA5BC1","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/37/528a43e7.jpg","comment_is_top":false,"comment_ctime":1565664257,"is_pvip":true,"replies":[{"id":"45513","content":"是的，提交温档后便开始解析DOM，解析CSS，生成布局树，然后绘制等操作，从解析HTML到绘制页面的第一个像素，是需要时间的！<br><br>优化好的页面这个时间会很短，优化差的页面这个空白时间会比较久！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565826686,"ip_address":"","comment_id":123376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23040500737","product_id":100033601,"comment_content":"提交文档后向浏览器确认提交，这个时候更新的web页面只是一个空白页面吗？ 等页面渲染阶段完成后才会展示解析内容吗？ ","like_count":5,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462643,"discussion_content":"是的，提交温档后便开始解析DOM，解析CSS，生成布局树，然后绘制等操作，从解析HTML到绘制页面的第一个像素，是需要时间的！\n\n优化好的页面这个时间会很短，优化差的页面这个空白时间会比较久！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565826686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124169,"user_name":"Snow同學","can_delete":false,"product_type":"c1","uid":1390875,"ip_address":"","ucode":"231E98C721E4D2","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/1b/bcabd223.jpg","comment_is_top":false,"comment_ctime":1565831947,"is_pvip":false,"replies":[{"id":"45564","content":"对 文档就是指响应体的数据。<br><br>边下载边解析的，接收到第一批数据，便开始做DOM解析了！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565834047,"ip_address":"","comment_id":124169,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18745701131","product_id":100033601,"comment_content":"提交文档 ，这里的“文档”是指 URL 请求的响应体。<br>请问老师：网络进程向渲染进程提交文档，是网络进程下载完整了响应体，一次完整的提交给渲染进程呢？是还网络进程边下载边提交给渲染进程呢？","like_count":4,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463039,"discussion_content":"对 文档就是指响应体的数据。\n\n边下载边解析的，接收到第一批数据，便开始做DOM解析了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565834047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279438,"discussion_content":"不是浏览器进程向网络进程提交文档吗??我怎么觉得矛盾了，浏览器进程提交文档（即响应数据）给渲染进程，渲染进程为什么还要和网络进程建立数据管道拿数据呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591345160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374579,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Dib3LnwhqEL1cr0bWxM4picwSu2iaTchjy9YibeiboBIx0PaibBULUzgficsUzxPibyP66n18qWTbufKEGyGqzujph4Krg/132","nickname":"summerrr","note":"","ucode":"8AFF6EBF9202C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5363,"discussion_content":"不是提交文档后才开始DOM解析吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566204096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123241,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1565652053,"is_pvip":false,"replies":[{"id":"45514","content":"缓存描述可以加上，dns缓存和资源缓存，还可以结合05-06的文章把渲染流程补上来！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565826860,"ip_address":"","comment_id":123241,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18745521237","product_id":100033601,"comment_content":"浏览器打开一个页面需要至少打开四个进程，包括浏览器主进程，渲染进程，插件进程，gpu进程。<br>1输入url后，浏览器主进程发现变化，通过dns服务解析域名为具体ip地址，如果是https还会通过tls完成密钥交换，进去请求响应。<br>2收到响应后浏览器进程根据响应状态码判断下一步动作，如果是2xx,的话，会将内容提交给渲染进程，当渲染进程反馈给主进程确认收到提交请求后，浏览器的前进后退按钮更衣，显示页面替换为白屏等待渲染进程内容。<br>3渲染进程根据主进程提交的内容进行解析渲染，碰到资源请求则进行请求加载，当渲染结束时讲内容提交给主进程，主进程收到内容更新界面，将刷新按钮变为完成。<br>4加载完成，等待下一次任务<br><br>这样描述，老师觉得有什么不足吗，谢谢","like_count":4,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462595,"discussion_content":"缓存描述可以加上，dns缓存和资源缓存，还可以结合05-06的文章把渲染流程补上来！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565826860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1585737,"avatar":"https://static001.geekbang.org/account/avatar/00/18/32/49/a97fc6df.jpg","nickname":"Mr. Cheng","note":"","ucode":"A6D81A7D92160E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4879,"discussion_content":"浏览器主进程，渲染进程，网络进程，GPU进程，插件进程看是否安装了插件","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565789655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230261,"user_name":"爱烤火的鱼","can_delete":false,"product_type":"c1","uid":1311458,"ip_address":"","ucode":"A12B4551D3B086","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/e2/f646601b.jpg","comment_is_top":false,"comment_ctime":1593329736,"is_pvip":false,"replies":[{"id":"85564","content":"订阅咱们专栏的牛人很多","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1593779047,"ip_address":"","comment_id":230261,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14478231624","product_id":100033601,"comment_content":"提问者真的厉害，思路清奇，举一反三!，我觉得不光能从讲师那里获得知识，更能从底下评论区收获同学们提出的疑问和见解。","like_count":3,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499819,"discussion_content":"订阅咱们专栏的牛人很多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593779047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1566826,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e8/6a/6438c61b.jpg","nickname":"小、sen","note":"","ucode":"0FEB3465198330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536405,"discussion_content":"确实  我评论都是挨个看  好多人的提问真是举一反三   ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638780212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167992,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1577973066,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14462874954","product_id":100033601,"comment_content":"从用户输入URL到浏览器展示最终页面，需要浏览器进程、网络进程、渲染进程三者之间相互配合完成。<br>首先浏览器读取用户的输入内容，假如不是完整的URL链接，浏览器会将输入内容定义为搜索内容，由默认的搜索引擎配合构成完整的搜索URL;那如果是一个完整的URL链接，浏览器进程就开启整个导航流程，在发起URL请求之前，浏览器进程还给页面提供了beforeUnload事件，用于页面决定是否需要取消即将发起的请求。如果没有取消，流程继续，浏览器进程发起URL请求，这时候交由网络进程完成HTTP请求部分工作，网络进程首先构建请求，然后检查浏览器本地是否已经有缓存，有缓存并且缓存没有过期，则直接返回缓存内容，否则继续请求流程，这里通过Cache-control字段判断缓存是否过期，如果过期了，HTTP请求头中会发送If-Not-Match字段来告诉服务器当前本地存放的缓存信息。查找缓存阶段结束后，网络进程中首先由DNS解析URL获得IP和端口号，IP负责指向服务器地址，端口号负责指向同哪个应用通信。然后即将建立TCP连接，当然在连接建立之前，如果是HTTP&#47;1.1协议，还需要判断当前TCP队列是否有空闲，HTTP1.1默认可以建立6个TCP连接，如果队列刚好空闲，还要判断协议是否是HTTPS，如果是，还需要先建立TLS连接，然后才是建立TCP连接，三次握手，然后服务端开始传输数据，TCP为了保证传输数据的完备性，在传输阶段每个数据包都会给服务器返回确认包，如果一定时间内，服务器没收到某个数据包的确认包，证明该数据包丢失，服务器需要重新发送，当所有数据包处理完成，网络进程将响应头和响应体返回，网络进程通过IPC通信告知浏览器进程，准备渲染进程，然后将响应体信息中的HTML信息提交给渲染进程，最后由渲染进程完成整个页面的渲染。","like_count":3,"discussions":[{"author":{"id":1384677,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIONmWnQy3YicutYlurG80M95sBBGSZJv1nvCQDEVL6zXQlKwMvTibauWXV1xs8wnJSB0vKyDeZYlaw/132","nickname":"SuperD","note":"","ucode":"F9E46ABAC26158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406274,"discussion_content":"先3次握手，在TLS握手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634734495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259918,"user_name":"lyonger","can_delete":false,"product_type":"c1","uid":1313840,"ip_address":"","ucode":"E89A75DADEA2A1","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","comment_is_top":false,"comment_ctime":1604887306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10194821898","product_id":100033601,"comment_content":"很多优秀的大佬，评论区中也可以学习很多知识，对于一些提问频率比较高的问题，期待老师有空能统一回复下。","like_count":2},{"had_liked":false,"id":185659,"user_name":"JC.彦","can_delete":false,"product_type":"c1","uid":1698735,"ip_address":"","ucode":"E87C1420B140F4","user_header":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","comment_is_top":false,"comment_ctime":1583657136,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10173591728","product_id":100033601,"comment_content":"有个疑惑:渲染进程接收到CommitNavigation消息后，便开始准备接收HTML数据，然后向浏览器进程发送确认提交的消息。渲染进程向浏览器进程发送“确认提交”的消息前已经接受完HTML数据了吗？在发送完消息之后就开始解析页面了吗？","like_count":2,"discussions":[{"author":{"id":1514088,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1a/68/11fefced.jpg","nickname":"Feeng","note":"","ucode":"0C287789495F35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398082,"discussion_content":"边下载边解析的，接收到第一批数据，便开始做DOM解析了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632732323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036636,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d1/5c/ef7f625a.jpg","nickname":"👊 👊","note":"","ucode":"8A04740808B47C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240890,"discussion_content":"可以看楼上 @无名 的评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587390698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156412,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1574867710,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10164802302","product_id":100033601,"comment_content":"https:&#47;&#47;developers.google.com&#47;web&#47;updates&#47;2018&#47;09&#47;inside-browser-part2","like_count":2,"discussions":[{"author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63620,"discussion_content":"希望能加个google文档的reference","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574900051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142485,"user_name":"心飞扬","can_delete":false,"product_type":"c1","uid":1650775,"ip_address":"","ucode":"72AF6BC8DEA026","user_header":"https://static001.geekbang.org/account/avatar/00/19/30/57/29266196.jpg","comment_is_top":false,"comment_ctime":1571378482,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10161313074","product_id":100033601,"comment_content":"URL请求流程中说：【首先，网络进程会查找本地缓存是否缓存了该资源。如果有缓存资源直接返回资源给浏览器进程。】如果没有缓存，网络进程发起请求，网络进程收到响应后提交给渲染进程。这两种情况资源的处理不一样吗？  有缓存的时候资源被给到浏览器进程之后，浏览器进程再把资源给渲染进程是吗？谢谢！","like_count":2,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386158,"discussion_content":"直接展示啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627453748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1718363,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL0N2vjxvyje3z6BQsdmGsKX7icyRtOukaibTb61Copiccf4hdvIZibbbBq5ElqkWln49WgKNWmViaISeQ/132","nickname":"王喃喃自语","note":"","ucode":"1DFA0C95DCBB80","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44118,"discussion_content":"我也同问？有缓存的时候为什么是直接返回到浏览器进程？希望老师解答一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572931948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126848,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1566489736,"is_pvip":false,"replies":[{"id":"46957","content":"第一个：http请求返回301，302状态码后，浏览器会停掉当前的请求，重新导航到重定向的链接，这个流程依然是从浏览器发起，然后按照之前的步骤重新走一遍。<br><br>关于第二个问题：布局树的构建需要css和dom，意味着css需要下载完成，另外，在解析dom过程中，如果有js文件，并且没有async这类的标记，那么会下载js，并执行js。所以css和没有async标记的js文件都需要下载才会开始渲染！<br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566525651,"ip_address":"","comment_id":126848,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10156424328","product_id":100033601,"comment_content":"发现返回状态码为301或302等重定向状态码，一切重头开始怎么理解？理解1：通知浏览器进程，浏览器进程将地址栏的地址改为重定向的地址；然后网络进程中使用新的地址从URL请求的流程重头开始；理解2：通知浏览器进程，浏览器进程将地址栏的地址改为重定向的地址；然后浏览器进程通过IPC将url传给网络进程。<br>是理解1的方式吗？<br>关于渲染进程解析和子资源的加载，如一个html页面里面含有js、css、图片等链接，那么这些资源的下载，是否是渲染进程向网络进程发起URL请求，然后加载完成后再交给渲染引擎渲染？是所有资源都加载完成后再渲染？","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464201,"discussion_content":"第一个：http请求返回301，302状态码后，浏览器会停掉当前的请求，重新导航到重定向的链接，这个流程依然是从浏览器发起，然后按照之前的步骤重新走一遍。\n\n关于第二个问题：布局树的构建需要css和dom，意味着css需要下载完成，另外，在解析dom过程中，如果有js文件，并且没有async这类的标记，那么会下载js，并执行js。所以css和没有async标记的js文件都需要下载才会开始渲染！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566525651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110113,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","nickname":"无名","note":"","ucode":"2D2E877CF97138","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5887,"discussion_content":"js/css的下载渲染进程通过rpc调用网络进程来下载的对吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566527061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1691581,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cf/bd/4fa01a1c.jpg","nickname":"wd2010","note":"","ucode":"E194E4EFECA013","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1110113,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","nickname":"无名","note":"","ucode":"2D2E877CF97138","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25277,"discussion_content":"同问，这里也请老师麻烦解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570495793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5887,"ip_address":""},"score":25277,"extra":""}]}]},{"had_liked":false,"id":124443,"user_name":"summerrr","can_delete":false,"product_type":"c1","uid":1374579,"ip_address":"","ucode":"8AFF6EBF9202C5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Dib3LnwhqEL1cr0bWxM4picwSu2iaTchjy9YibeiboBIx0PaibBULUzgficsUzxPibyP66n18qWTbufKEGyGqzujph4Krg/132","comment_is_top":false,"comment_ctime":1565885120,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10155819712","product_id":100033601,"comment_content":"如果content-type是application&#47;json类型的呢？网络进程会如何处理这个响应体的数据。渲染器进程里的js引擎又是怎么获取到这些数据的啊（就是我们在代码里拿到的响应数据是从哪里来的）。","like_count":2,"discussions":[{"author":{"id":1663106,"avatar":"https://static001.geekbang.org/account/avatar/00/19/60/82/1d8c8c27.jpg","nickname":"钓人的鱼","note":"","ucode":"FB437B918E5868","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19377,"discussion_content":"按照我通过 java 后台的 springMVC 来看，我用@ResponseBody 注解 返回 视图解析类型为 json 格式后，打开chrome 的响应中的 预览（perview）中可以看到，浏览器接收到的是 json格式，好像默认还会把 json 格式的数据给渲染出来，显示。然后你就能通过 访问这个接口 获取json 数据，前台用js 取就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569165644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123224,"user_name":"gallifrey","can_delete":false,"product_type":"c1","uid":1366631,"ip_address":"","ucode":"A4E5E0E7E2DEF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/da/67/73a0c754.jpg","comment_is_top":false,"comment_ctime":1565631597,"is_pvip":false,"replies":[{"id":"45253","content":"对的，就是重头来一次，所以重定向尽量少用。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565652193,"ip_address":"","comment_id":123224,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10155566189","product_id":100033601,"comment_content":"有一个疑问，就是如果需要重定向，那不是之前的大段响应体都浪费了，需要销毁了重新获取新的响应资源？","like_count":2,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462589,"discussion_content":"对的，就是重头来一次，所以重定向尽量少用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565652193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336003,"user_name":"Reven","can_delete":false,"product_type":"c1","uid":1161105,"ip_address":"","ucode":"487E00D144701B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/91/257b895a.jpg","comment_is_top":false,"comment_ctime":1645842684,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5940809980","product_id":100033601,"comment_content":"最后渲染进程会向浏览器进程“确认提交”，这是告诉浏览器进程：“已经准备好接受和解析页面数据了”。<br><br>等文档数据传输完成之后，渲染进程会返回“确认提交”的消息给浏览器进程；<br><br>老师啊，请问这两句对“确认提交” 好像表达的意思不一样啊，一个是表达开始接收数据，一个是表达接收数据完成，那确认提交这个节点到底是表达什么啊？<br><br>","like_count":1},{"had_liked":false,"id":244103,"user_name":"欧@","can_delete":false,"product_type":"c1","uid":1373382,"ip_address":"","ucode":"83C28B326FA4EA","user_header":"https://static001.geekbang.org/account/avatar/00/14/f4/c6/73861706.jpg","comment_is_top":false,"comment_ctime":1598403600,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893370896","product_id":100033601,"comment_content":"老师，您好，文中描述“如果有缓存资源，那么直接返回资源给浏览器进程；”那么缓存资源是如果通过浏览器进程传给渲染进程的呢？因为据文中的理解，网络资源是直接通过管道和渲染进程间交互资源的。","like_count":1},{"had_liked":false,"id":238225,"user_name":"K","can_delete":false,"product_type":"c1","uid":1422714,"ip_address":"","ucode":"33CA79CB8FF7A4","user_header":"https://static001.geekbang.org/account/avatar/00/15/b5/7a/5b67031c.jpg","comment_is_top":false,"comment_ctime":1596097527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5891064823","product_id":100033601,"comment_content":"如果判断输入内容符合 URL 规则，比如输入的是 time.geekbang.org，那么地址栏会根据规则，把这段内容加上协议，合成为完整的 URL，如 https:&#47;&#47;time.geekbang.org。<br><br>浏览器是如何知道该加上http还是https的呢？","like_count":1},{"had_liked":false,"id":227506,"user_name":"Emma","can_delete":false,"product_type":"c1","uid":1930698,"ip_address":"","ucode":"C2D31142AF7288","user_header":"https://static001.geekbang.org/account/avatar/00/1d/75/ca/4c127da3.jpg","comment_is_top":false,"comment_ctime":1592394453,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5887361749","product_id":100033601,"comment_content":"老师，https:&#47;&#47;developers.google.com&#47;web&#47;updates&#47;2018&#47;09&#47;inside-browser-part2，看图一说的是网络线程 network thread，而您在文章中说的是网络进程，所以这个到底以哪个为准","like_count":1,"discussions":[{"author":{"id":1528334,"avatar":"https://static001.geekbang.org/account/avatar/00/17/52/0e/c5ff46d2.jpg","nickname":"Condor Hero","note":"","ucode":"BD850FE812D22F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552285,"discussion_content":"https://developers.google.com/web/updates/2018/09/inside-browser-part2 的内容是基于 https://developers.google.com/web/updates/2018/09/inside-browser-part1 的，part1 里面指出 Chrome 面向未来服务化，即当 Chrome 在强大的硬件上运行时，它可能会将每个服务拆分为不同的进程以提供更高的稳定性，但如果它在资源受限的设备上，Chrome 会将服务整合到一个进程中以节省内存占用。\n\n所以，老师案例的是运行在强大硬件的设备上，Chrome 官网的讲解案例是运行在硬件不是那么好的设备上。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645373141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225852,"user_name":"曲董","can_delete":false,"product_type":"c1","uid":1307132,"ip_address":"","ucode":"D071779A7A4637","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/fc/220a0d07.jpg","comment_is_top":false,"comment_ctime":1591875385,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5886842681","product_id":100033601,"comment_content":"老师，输入baidu.com，浏览器是如何判断该添加http还是https协议呢？","like_count":1,"discussions":[{"author":{"id":1307132,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f1/fc/220a0d07.jpg","nickname":"曲董","note":"","ucode":"D071779A7A4637","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282374,"discussion_content":"嗷嗷，知道了！HSTS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591955772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222861,"user_name":"Geek_d972f2","can_delete":false,"product_type":"c1","uid":1379184,"ip_address":"","ucode":"72381CF0C973B7","user_header":"","comment_is_top":false,"comment_ctime":1590933186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885900482","product_id":100033601,"comment_content":"想问下老师，上一章讲HTTP请求流程，第一个就是构建请求，构建好请求行后浏览器准备发起网络请求，为什么这一章里说的是建立完TCP连接后才构建请求行，请求头","like_count":1},{"had_liked":false,"id":182829,"user_name":"JC.彦","can_delete":false,"product_type":"c1","uid":1698735,"ip_address":"","ucode":"E87C1420B140F4","user_header":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","comment_is_top":false,"comment_ctime":1582872330,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"5877839626","product_id":100033601,"comment_content":"“文档”一旦被提交就开始渲染页面了。网络进程没有把html完全传给渲染进程就开始渲染了吗？","like_count":1,"discussions":[{"author":{"id":1514088,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1a/68/11fefced.jpg","nickname":"Feeng","note":"","ucode":"0C287789495F35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398083,"discussion_content":"老师说：边下载边解析的，接收到第一批数据，便开始做DOM解析了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632732427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209945,"discussion_content":"文档确认提交的消息发送给浏览器进程时，数据不是已经传输完成了嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584692849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1698735,"avatar":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","nickname":"JC.彦","note":"","ucode":"E87C1420B140F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211979,"discussion_content":"这是个疑问句吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584921509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":209945,"ip_address":""},"score":211979,"extra":""},{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1698735,"avatar":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","nickname":"JC.彦","note":"","ucode":"E87C1420B140F4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212898,"discussion_content":"文档确认提交的消息发送给浏览器进程时，数据已经传输完成了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585031014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211979,"ip_address":""},"score":212898,"extra":""},{"author":{"id":1698735,"avatar":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","nickname":"JC.彦","note":"","ucode":"E87C1420B140F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213641,"discussion_content":"我没描述清楚。我说的是，文档一旦被提交是浏览器进程发送(提交文档消息)commitNavigation给渲染进程，而文档一旦被提交渲染进程就开始渲染了，这个时候数据是否传输完？你说应该是渲染进程发送&#34;确认提交&#34;给浏览器进程，这个时候按照文章中说的是传输完了的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585111284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212898,"ip_address":""},"score":213641,"extra":""}]}]},{"had_liked":false,"id":152275,"user_name":"滇西之王","can_delete":false,"product_type":"c1","uid":1148142,"ip_address":"","ucode":"B1EBFFAE3AECEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/ee/3a364ccd.jpg","comment_is_top":false,"comment_ctime":1573958108,"is_pvip":false,"replies":[{"id":"58536","content":"文章中关于“提交文档”这块之前说法不算太准确，在2019&#47;11&#47;15修正文章中的“提交文档”的描述，所以最终以文章中的说法为准，关于评论区的问题，我晚点来修订！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1573962048,"ip_address":"","comment_id":152275,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5868925404","product_id":100033601,"comment_content":"课程中讲的是由浏览器进程来 提交文档，渲染进程来确认提交。 但是下面的好多评论都是相反的，老师回复也是认为回答正确。 那么，哪个才是对的呢？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474770,"discussion_content":"文章中关于“提交文档”这块之前说法不算太准确，在2019/11/15修正文章中的“提交文档”的描述，所以最终以文章中的说法为准，关于评论区的问题，我晚点来修订！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573962048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385402,"discussion_content":"文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627028419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150365,"user_name":"可乐","can_delete":false,"product_type":"c1","uid":1731817,"ip_address":"","ucode":"7E7BAB49C085E7","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6c/e9/2bb44600.jpg","comment_is_top":false,"comment_ctime":1573523115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868490411","product_id":100033601,"comment_content":"用户输入URL，浏览器主进程查看本地缓存，如果有未过期的页面缓存，直接返回，导航流程终止。返回文档直接进入渲染进程，完成后界面展示。<br>如果没有本地缓存，进入网络进程请求，收到服务器返回，根据不同的content-type，处理请求文档。如果是下载类资源，则直接下载，请求结束。如果是页面类资源，则渲染进程需要从网络进程中下载文档，解析生成页面，然后进行页面展示，请求结束。","like_count":1},{"had_liked":false,"id":137434,"user_name":"任振鹏","can_delete":false,"product_type":"c1","uid":1385329,"ip_address":"","ucode":"D33DC7856947D6","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/71/57c16ecb.jpg","comment_is_top":false,"comment_ctime":1569740144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5864707440","product_id":100033601,"comment_content":"用户输入url 到渲染页面主要 分为 浏览器导航流程和渲染流程。<br>1、合成url，<br>           1.1、如果是关键字，浏览器会使用默认搜索引擎，会补全url+关键字。<br>           1.2、其他按 补全url规则，补全url。<br>2、通过进程通信机制IPC，通知网络进程，发起请求，<br>           2.1 先检查，是否缓存了要请求的资源，如有，直接像返回给浏览器进程。<br>           2.2 如果没有发起web请求，是否有缓存IP否则访问DNS，有了IP和端口号，像目标建立TCP链接<br>           2.3 构建请求头信息，发起请求。<br>           2.4 服务器相应请求，返回数据包。网络进程，解析响应内容。（如有301，向新地址重新发起请求）。<br>3、准备渲染进程，浏览器进程，检测当前url是否是 与当前页面同源，如果是的话，使用但前渲染进程，否则新开渲染流程，开始渲染。<br>4、浏览器进程，发起 提交文档的 信号，渲染进程接收到 提交文档，开始与 网络进程建立 通信管道，接收完成后，向浏览器进程发起，确认提交<br>5、浏览进程接收到 确认提交后，开始更新浏览器界面状态，包括安装状态，地址栏，前进后退等，并更新web界面 （浏览器导航流程结束）<br>6、开始渲染阶段<br>  <br>","like_count":1},{"had_liked":false,"id":128026,"user_name":"Jay","can_delete":false,"product_type":"c1","uid":1115164,"ip_address":"","ucode":"9BD73DCFB2E1CC","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/1c/db5ac4f9.jpg","comment_is_top":false,"comment_ctime":1566822555,"is_pvip":false,"replies":[{"id":"47434","content":"render process","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566827744,"ip_address":"","comment_id":128026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861789851","product_id":100033601,"comment_content":"求问，渲染进程英文名称是什么？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464759,"discussion_content":"render process","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566827744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124183,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1565833099,"is_pvip":false,"replies":[{"id":"45654","content":"有一些Chrome进程在Chrome的任务管理器中没有体现出来，如预渲染进程","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565877985,"ip_address":"","comment_id":124183,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860800395","product_id":100033601,"comment_content":"老师，我打开chrome浏览器，浏览器中的任务管理器和系统中的任务管理器的进程数量为什么不一致？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463045,"discussion_content":"有一些Chrome进程在Chrome的任务管理器中没有体现出来，如预渲染进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565877985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123596,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1565708848,"is_pvip":true,"replies":[{"id":"45323","content":"目前下载是由浏览器进程来管理的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565735513,"ip_address":"","comment_id":123596,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5860676144","product_id":100033601,"comment_content":"网络资源的下载请求会提交给下载管理器，这个下载管理器属于新的进程呢？还是属于网络进程的(网络进程包含下载的功能的)？","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462738,"discussion_content":"目前下载是由浏览器进程来管理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565735513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123395,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565667010,"is_pvip":false,"replies":[{"id":"45511","content":"👍 等06篇更新结束后，可以把渲染流程也补上","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565826186,"ip_address":"","comment_id":123395,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860634306","product_id":100033601,"comment_content":"从输入 URL 到页面展示，这中间发生了什么？<br>用户输入URL并回车，浏览器进程判断是搜索还是URL址址，是URL址址就通过IPC将URL发送给网络进程，网络进程查找本地缓存，如果没找到，进行DNS解析，利用IP构建TCP连接，三次握手，发送HTTP请求，服务器响应并返回HTTP响应。如果有301，302则执行相应流程。200则继续，判断Content-type如果是text&#47;html，浏览器进程准备渲染进程，发送提交文档消息，让网络进程与渲染进程建立管道，将内容提交给渲染进程，如果是同域建复用父进程的渲染进程。渲染进程接收完毕，向浏览器进程发送确认文档，浏览器安全栏，前进，后退界面更新，渲染进程渲染完后，向浏览器进程提交页面加载完毕。","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462652,"discussion_content":"👍 等06篇更新结束后，可以把渲染流程也补上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565826186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123338,"user_name":"早起不吃虫","can_delete":false,"product_type":"c1","uid":1369757,"ip_address":"","ucode":"13CD3B5E1F9435","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7WkTI1IicbKvsPJng5vQh5qlrf1smbfl2zb7icHZfzcAk1k4lr8w8IDEAdrqq1NHW5XZMPXiaa1h7Jn1LGOWOCkIA/132","comment_is_top":false,"comment_ctime":1565660364,"is_pvip":false,"replies":[{"id":"45482","content":"很多文章里面没深讲的内容，我会通过问答形式来解答，回答的会比较全面，所以回复的时间可能久点！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565795767,"ip_address":"","comment_id":123338,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860627660","product_id":100033601,"comment_content":"又回看了第一章，发现老师太贴心了，很多问题都能给予细致的回复，不能更赞，看来下次要先囤货等评论养肥了再一起看了！","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462627,"discussion_content":"很多文章里面没深讲的内容，我会通过问答形式来解答，回答的会比较全面，所以回复的时间可能久点！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565795767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359193,"user_name":"天外非先","can_delete":false,"product_type":"c1","uid":1002078,"ip_address":"江苏","ucode":"E96B4007803169","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/5e/c529ef26.jpg","comment_is_top":false,"comment_ctime":1665314889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665314889","product_id":100033601,"comment_content":"有些curl的实例已经不能用了，如： <br>curl -I https:&#47;&#47;time.geekbang.org&#47;<br>请老师帮忙更新一下。","like_count":0},{"had_liked":false,"id":358202,"user_name":"汪佶","can_delete":false,"product_type":"c1","uid":2344174,"ip_address":"浙江","ucode":"76F6493835FFC7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLxLiaicFpgqpAiaC2m0qBiaGZMdDOGQiciak2xL1y2C8o0xEBuPF4xyjEfPFvfBmll3GHDAjhCBicQhKCag/132","comment_is_top":false,"comment_ctime":1664031006,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664031006","product_id":100033601,"comment_content":"这个文档写的有点问题吧。。。<br>前面有一句话：<br>“最后渲染进程会向浏览器进程“确认提交”，这是告诉浏览器进程：“已经准备好接受和解析页面数据了”。”  这句话的意思是不是说当渲染进程发出“确认提交”的消息后，此时还没有收到数据，因为是准备好接受和解析页面的数据，所以此时数据没收到；<br><br>但是下文：<br>“等文档数据传输完成之后，渲染进程会返回“确认提交”的消息给浏览器进程；”<br>“浏览器进程在收到“确认提交”的消息后，会更新浏览器界面状态，包括了安全状态、地址栏的 URL、前进后退的历史状态，并更新 Web 页面。”<br><br>这两句话的意思又是文档数据传输完成，在发送&quot;确认提交&quot;给浏览器主进程<br><br>这不是自相矛盾吗？数据到底是在什么时候接受的，麻烦回复一下","like_count":0},{"had_liked":false,"id":352805,"user_name":"烧包谷","can_delete":false,"product_type":"c1","uid":1584857,"ip_address":"","ucode":"02AA78E756BD42","user_header":"https://static001.geekbang.org/account/avatar/00/18/2e/d9/dbc75f2f.jpg","comment_is_top":false,"comment_ctime":1658935687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658935687","product_id":100033601,"comment_content":"老师，能解释一下，deeplink技术中通过scheme URL方式，通过浏览器唤醒APP的这种形式，在整个流程中，处于哪一步呀？","like_count":0},{"had_liked":false,"id":350069,"user_name":"themerz","can_delete":false,"product_type":"c1","uid":1323074,"ip_address":"","ucode":"C3E4C3794B6A0E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM5wG9T8X0k290hWC79YPzWoJxqCyeFWicXibShpATzOTr0CMFpNgmR92rcDov5TjYbQp15wtCPvXe5g/132","comment_is_top":false,"comment_ctime":1656553449,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656553449","product_id":100033601,"comment_content":"后面第22讲中写到，html文档边加载边解析，那么渲染阶段在渲染进程和网络进程建立数据传输管道就开始了吗？","like_count":0},{"had_liked":false,"id":348432,"user_name":"themerz","can_delete":false,"product_type":"c1","uid":1323074,"ip_address":"","ucode":"C3E4C3794B6A0E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM5wG9T8X0k290hWC79YPzWoJxqCyeFWicXibShpATzOTr0CMFpNgmR92rcDov5TjYbQp15wtCPvXe5g/132","comment_is_top":false,"comment_ctime":1655102966,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655102966","product_id":100033601,"comment_content":"上一节中，构建请求是在建立tcp之前，本节中是相反的，应该以哪个为准？","like_count":0},{"had_liked":false,"id":344438,"user_name":"大狮子","can_delete":false,"product_type":"c1","uid":2186981,"ip_address":"","ucode":"39F1C4D2015B59","user_header":"https://static001.geekbang.org/account/avatar/00/21/5e/e5/c7dd5d4f.jpg","comment_is_top":false,"comment_ctime":1651556913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651556913","product_id":100033601,"comment_content":"看老师的评论说的是渲染进程等到所有css，js下载后再返回提交导航，这时候会更新页面，地址栏信息等。但是，css，js下载是解析dom树过程中发生的，那应该不会出现白屏现象吧，因为此时才去替换页面。所以是不是其实是获取到HTML后，就提交导航呢。然后开始进入渲染过程，解析dom，解析css，合成cssdom树呢","like_count":0},{"had_liked":false,"id":342399,"user_name":"corn","can_delete":false,"product_type":"c1","uid":1731605,"ip_address":"","ucode":"EDE5A0FD5675AE","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6c/15/bcb76548.jpg","comment_is_top":false,"comment_ctime":1650248806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650248806","product_id":100033601,"comment_content":"老师，我有两个问题不是太理解，第一个是domContentLoaded的时间是domContentLoadedEventEnd - fetchStart的时间还是domContentLoadedEventEnd - navigationStart；<br>第二个问题是为什么unloadEventEnd的时间点是在fetchStart之后的，但是Performance里面navigationStart又定义表征了从同一个浏览器上下文的上一个文档卸载(unload)结束时的UNIX时间戳。如果没有上一个文档，这个值会和PerformanceTiming.fetchStart相同","like_count":0},{"had_liked":false,"id":341119,"user_name":"七月拾思","can_delete":false,"product_type":"c1","uid":1466882,"ip_address":"","ucode":"7E405CBB9820F1","user_header":"https://static001.geekbang.org/account/avatar/00/16/62/02/fd00a1de.jpg","comment_is_top":false,"comment_ctime":1649379148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649379148","product_id":100033601,"comment_content":"感慨买晚了，写的太棒了，对浏览器的认知提升了一个高度，非常感谢！！！","like_count":0},{"had_liked":false,"id":333475,"user_name":"℃","can_delete":false,"product_type":"c1","uid":2673520,"ip_address":"","ucode":"D95BACAD96B6F3","user_header":"https://static001.geekbang.org/account/avatar/00/28/cb/70/dde7884d.jpg","comment_is_top":false,"comment_ctime":1644377253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644377253","product_id":100033601,"comment_content":"“提交文档”这一步提交的什么呢？文档不是在响应体里面吗？","like_count":0},{"had_liked":false,"id":331446,"user_name":"清风一缕","can_delete":false,"product_type":"c1","uid":1623090,"ip_address":"","ucode":"11A9B8C842F327","user_header":"https://static001.geekbang.org/account/avatar/00/18/c4/32/4f0dbb95.jpg","comment_is_top":false,"comment_ctime":1642587262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642587262","product_id":100033601,"comment_content":"url 请求过程 &quot;如果请求协议是 HTTPS，那么还需要建立 TLS 连接。&quot;，TLS连接应该是在tcp连接之后吧","like_count":0},{"had_liked":false,"id":324473,"user_name":"撒哈拉","can_delete":false,"product_type":"c1","uid":1608406,"ip_address":"","ucode":"2F64B26543D772","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/d6/00cf9218.jpg","comment_is_top":false,"comment_ctime":1638450847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638450847","product_id":100033601,"comment_content":"1，浏览器检查URL 是否存在缓存的资源，没有发送请求到网络进程<br>2，网络进程查询DNS获取ip，用ip和端口发起tcp连接，发送请求到服务器，返回响应，解析状态码，如果是301或302，重新发起重定向请求<br>3，解析响应头 content-type，决定是下载资源还是解析文档<br>4，发送响应给浏览器进程，浏览器进程发送提交文档消息给渲染进程，<br>5，渲染进程准备接收和解析html，并和网络进程建立数据管道，完成后，向浏览器进程发送确认提交消息<br>6，浏览器进程收到消息后，更新页面状态，包括页面标签的加载动画，网页安全状态。","like_count":0},{"had_liked":false,"id":309939,"user_name":"Even.Yu","can_delete":false,"product_type":"c1","uid":1568263,"ip_address":"","ucode":"D55F190AC6E4FB","user_header":"https://static001.geekbang.org/account/avatar/00/17/ee/07/465058c7.jpg","comment_is_top":false,"comment_ctime":1630401088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630401088","product_id":100033601,"comment_content":"我发现我们目前学习的这个网站资源状态一直是200 也就是没有缓存。 这个是什么原因呢？","like_count":0},{"had_liked":false,"id":307684,"user_name":"花生","can_delete":false,"product_type":"c1","uid":2434921,"ip_address":"","ucode":"15165760206594","user_header":"https://static001.geekbang.org/account/avatar/00/25/27/69/5e0334a0.jpg","comment_is_top":false,"comment_ctime":1629200703,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1629200703","product_id":100033601,"comment_content":"老师你好，在介绍导航概念的时候，既然网络进程数据都转发给了浏览器进程，那么渲染进程为啥是和网络进程连接（我的意思是想表达，数据不在网络进程这边），而不是和浏览器进程连接呢？<br>","like_count":0,"discussions":[{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541344,"discussion_content":"我的理解是，网络进程解析响应头的数据给到浏览器进程，浏览器进程根据content-type的内容来提交导航，这时，网络进程通过数据传输通道把响应体的内容传给渲染进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640335805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306698,"user_name":"奔跑的小乌龟","can_delete":false,"product_type":"c1","uid":2356338,"ip_address":"","ucode":"342292E8281D07","user_header":"https://static001.geekbang.org/account/avatar/00/23/f4/72/b60ee8b7.jpg","comment_is_top":false,"comment_ctime":1628672151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628672151","product_id":100033601,"comment_content":"1. **用户输入**<br><br>   当用户在地址栏中输入一个查询关键字时，地址栏会判断输入的关键字是搜索内容，还是请求的 URL<br><br>   1. 搜索内容<br><br>      地址栏会使用浏览器默认的搜索引擎，来合成新的带搜索关键字的 URL<br><br>   2. 符合URL规则<br><br>      地址栏会根据规则，把这段内容加上协议，合成为完整的 URL<br><br>2. **回车，执行 beforeunload 事件**<br><br>   1. beforeunload 事件允许页面在退出之前执行一些数据清理操作，还可以询问用户是否要离开当前页面<br>   2. 当前页面没有监听 beforeunload 事件或者同意了继续后续流程（此时图标为加载状态）<br><br>3. **网络请求过程**<br><br>   1. 浏览器进程会通过进程间通信（IPC）把 URL 请求发送至网络进程（网络进程接收到 URL 请求后，会在这里发起真正的 URL 请求）<br><br>   2. 网络进程查找本地缓存<br><br>      1. 缓存命中：直接返回资源给浏览器进程<br>      2. 没有命中：执行后续流程<br><br>   3. DNS解析<br><br>      以获取请求域名的服务器 IP 地址。如果请求协议是 HTTPS，那么还需要建立 TLS 连接<br><br>   4. 建立TCP连接<br><br>   5. 发起HTTP请求<br><br>   6. 服务器处理请求<br><br>   7. 服务器返回请求给网络进程<br><br>   8. 网络进程解析解析响应行和响应头<br><br>      1. 重定向<br>         1. 状态码 301 或 302<br>         2. 服务器需要浏览器重定向到其他 URL<br>         3. 网络进程会从响应头的 Location 字段里面读取重定向的地址，然后再发起新的 HTTP 或者 HTTPS 请求<br>      2. 响应数据类型处理<br>         1. Content-Type：浏览器会根据 Content-Type 的值来决定如何显示响应体的内容<br>            1. 下载类型：该请求会被提交给浏览器的下载管理器，同时该 URL 请求的导航流程就此结束<br>            2. HTML格式：继续进行导航流程<br><br>4. **准备渲染进程**<br><br>   1. 默认情况下，Chrome 会为每个页面分配一个渲染进程<br>   2. 如果从一个页面打开了另一个新页面，而新页面和当前页面属于**同一站点**的话，那么新页面会复用父页面的渲染进程<br><br>5. **提交文档**<br><br>   1. 浏览器进程将网络进程接收到的 HTML 数据提交给渲染进程（子进程管理）<br>   2. 浏览器进程接收到网络进程的响应头数据之后，便向渲染进程发起“提交文档”的消息<br>   3. 渲染进程接收到“提交文档”的消息后，会和网络进程建立传输数据的“管道”<br>   4. 等文档数据传输完成之后，渲染进程会返回“确认提交”的消息给浏览器进程<br>   5. 浏览器进程在收到“确认提交”的消息后，会更新浏览器界面状态，包括了安全状态、地址栏的 URL、前进后退的历史状态，并更新 Web 页面<br><br>6. **渲染阶段**<br><br>   1. 一旦文档被提交，渲染进程便开始页面解析和子资源加载了","like_count":0},{"had_liked":false,"id":305274,"user_name":"饼","can_delete":false,"product_type":"c1","uid":1489754,"ip_address":"","ucode":"E67C1675B05ECC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bb/5a/5b37caff.jpg","comment_is_top":false,"comment_ctime":1627900072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627900072","product_id":100033601,"comment_content":"实际试了下，单一站点下多个页面还是使用了多个进程，是不是写书到现在浏览器机制改了？","like_count":0},{"had_liked":false,"id":304066,"user_name":"（ ´^ิω^ิ｀）","can_delete":false,"product_type":"c1","uid":2713559,"ip_address":"","ucode":"2ED3FE965401EA","user_header":"https://static001.geekbang.org/account/avatar/00/29/67/d7/3c6056b4.jpg","comment_is_top":false,"comment_ctime":1627217983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627217983","product_id":100033601,"comment_content":"老师好，网上一些文章有提及hsts，这个过程是由网络进程完成还是由浏览器进程完成呢？","like_count":0},{"had_liked":false,"id":301152,"user_name":"ZERO To One","can_delete":false,"product_type":"c1","uid":1373600,"ip_address":"","ucode":"A520B987D17023","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/a0/96ee2d50.jpg","comment_is_top":false,"comment_ctime":1625555867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625555867","product_id":100033601,"comment_content":"{ 从输入 URL 到页面展示完整流程示意图 } 如果按照时间顺序（从左到右，时间增加）看的话，这个图的重定向画的不准确，因为是否重定向来源于 Response Header，而图中此时网络经常还没到这一步。","like_count":0},{"had_liked":false,"id":301105,"user_name":"1979104101ng","can_delete":false,"product_type":"c1","uid":2138770,"ip_address":"","ucode":"95204E6CBA81D6","user_header":"https://static001.geekbang.org/account/avatar/00/20/a2/92/6bbcb80b.jpg","comment_is_top":false,"comment_ctime":1625538275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625538275","product_id":100033601,"comment_content":"输入URL：<br>浏览器进程先判断，如果输入内容符合搜索字段规则，则调用默认搜索引擎组装 URL 转发给网络进程；否则直接转发 URL 请求给网络进程<br>查缓存：<br>网络进程如果发现本地有该资源的缓存且没有过期，则不发请求给服务器，直接返回资源给浏览器，导航结束；否则，准备发起 网络请求的流程<br>网络请求一：<br>查 DNS 缓存，有缓存则加上协议和端口号，发起 TCP 连接；无缓存，则请求 DNS 服务器将 URL 解析为 IP 地址，然后拿着这个 IP 地址加上协议和端口号，发起 TCP 请求。然后解析响应行，如果有重定向，则重新构建 IP 协议 端口号并发起 TCP 请求<br>网络请求二：<br>TCP 连接握手完成，浏览器进程将携带头部信息交由网络进程，收发数据包。网络进程收到响应后，读取服务器回复的响应头信息转发给浏览器进程。如果是下载类型，则交由下载管理器处理；如果是 HTML 类型，则准备创建渲染流程<br>准备渲染流程：<br>如果是从同一站点打开新的子页面，则复用父页面的渲染进程；否则为新页面创建新的渲染进程<br>提交文档：<br>浏览器进程发“提交文档”的消息给新页面的渲染进程，渲染进程创建管道与网络进程接收 HTML 响应体，渲染进程发 “确认提交” 的消息给浏览器进程，渲染进程开始解析接收的页面数据、加载子资源<br>页面更新：<br>浏览器进程收到 “确认提交” 的消息后，开始更新浏览器的状态（状态图标、历史记录、URL 地址栏、页面内容）<br>在渲染进程不断地解析页面时，我们看到浏览器页面不断更新，最后渲染进程解析完成，浏览器页面加载完毕。","like_count":0},{"had_liked":false,"id":300402,"user_name":"让我试试","can_delete":false,"product_type":"c1","uid":1382435,"ip_address":"","ucode":"AC3226A6271A5E","user_header":"https://static001.geekbang.org/account/avatar/00/15/18/23/4b61af6a.jpg","comment_is_top":false,"comment_ctime":1625140976,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1625140976","product_id":100033601,"comment_content":"我懵了，谷歌官网里说UI线程、网络线程，为什么这门课里说的是渲染进程、网络进程？是我漏看了什么吗？官网如下：https:&#47;&#47;developers.google.com&#47;web&#47;updates&#47;2018&#47;09&#47;inside-browser-part2","like_count":0,"discussions":[{"author":{"id":1528334,"avatar":"https://static001.geekbang.org/account/avatar/00/17/52/0e/c5ff46d2.jpg","nickname":"Condor Hero","note":"","ucode":"BD850FE812D22F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552287,"discussion_content":"https://developers.google.com/web/updates/2018/09/inside-browser-part2 的内容是基于 https://developers.google.com/web/updates/2018/09/inside-browser-part1 的，part1 里面指出 Chrome 面向未来服务化，即当 Chrome 在强大的硬件上运行时，它可能会将每个服务拆分为不同的进程以提供更高的稳定性，但如果它在资源受限的设备上，Chrome 会将服务整合到一个进程中以节省内存占用。\n\n所以，老师案例的是运行在强大硬件的设备上，Chrome 官网的讲解案例是运行在硬件不是那么好的设备上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645373230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299614,"user_name":"你好，阳光","can_delete":false,"product_type":"c1","uid":2145095,"ip_address":"","ucode":"1A2F487C57F7D9","user_header":"https://static001.geekbang.org/account/avatar/00/20/bb/47/b60ae3eb.jpg","comment_is_top":false,"comment_ctime":1624763318,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1624763318","product_id":100033601,"comment_content":"文章开头说到导航流程是从用户输入URL到页面开始解析的整个过程，在结尾总结中说得却是从用户输入URL到提交文档给渲染进程，有些不一致，请问李老师应该是以前面的说法为准吧？","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386162,"discussion_content":"到提交给渲染进程，也就是到页面开始解析那个阶段，一样的道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627454524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298179,"user_name":"Geek_panda","can_delete":false,"product_type":"c1","uid":1622868,"ip_address":"","ucode":"ED245B851B841A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yxWUVmiccGZdE0lVATCpdUQDh7ubI7BGXRxiadfog14S3TjRR2dcqMLOR87jf2EA3taEFw4FdNMSDhRanKhMB2Kw/132","comment_is_top":false,"comment_ctime":1623935853,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1623935853","product_id":100033601,"comment_content":"请问是在哪个过程开始接收文档数据，哪个过程接收完文档数据，哪个过程开始解析文档数据，哪个过程解析完成文档数据","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386163,"discussion_content":"按老师说的说法是提交文档以后，就开始接收文档数据，解析。  确定提交以后，就全部接受完啦，估计也是全部解析完啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627454589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298168,"user_name":"Geek_panda","can_delete":false,"product_type":"c1","uid":1622868,"ip_address":"","ucode":"ED245B851B841A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yxWUVmiccGZdE0lVATCpdUQDh7ubI7BGXRxiadfog14S3TjRR2dcqMLOR87jf2EA3taEFw4FdNMSDhRanKhMB2Kw/132","comment_is_top":false,"comment_ctime":1623932659,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1623932659","product_id":100033601,"comment_content":"接下来就是利用 IP 地址和服务器建立 TCP 连接。连接建立之后，浏览器端会构建请求行、请求头等信息，并把和该域名相关的 Cookie 等数据附加到请求头中，然后向服务器发送构建的请求信息。<br>--------------<br>这里能否解释下是哪个进程构建请求信息并发送给服务器的？","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386164,"discussion_content":"浏览器进程构建信息，传给网络进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627454653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297704,"user_name":"何以解忧","can_delete":false,"product_type":"c1","uid":1915533,"ip_address":"","ucode":"4DFE2BDBAF4919","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3a/8d/f5e7a20d.jpg","comment_is_top":false,"comment_ctime":1623740710,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1623740710","product_id":100033601,"comment_content":"有个地方还是不太清晰，关于导航流程的最后一步，浏览器进程清除旧文档的时候，渲染进程是刚开始接收网络进程的数据，还是已经接收完毕，只有子滋源可能在解析的过程中加载？","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386165,"discussion_content":"如果是确认提交那一步，那就是接受完毕啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627454683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294166,"user_name":"你可以叫我61","can_delete":false,"product_type":"c1","uid":1544328,"ip_address":"","ucode":"BC586029546F8E","user_header":"https://static001.geekbang.org/account/avatar/00/17/90/88/cd4bb862.jpg","comment_is_top":false,"comment_ctime":1621814919,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1621814919","product_id":100033601,"comment_content":"这里有一个问题，就是提交确认这个行为是文档传输完成之后就发生的吗？还是要等渲染进程解析完数据之后发生？","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386166,"discussion_content":"应该是解析渲染完之后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627454730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292203,"user_name":"愤怒的铲屎官","can_delete":false,"product_type":"c1","uid":1467382,"ip_address":"","ucode":"76F58F197F8660","user_header":"https://static001.geekbang.org/account/avatar/00/16/63/f6/e1527920.jpg","comment_is_top":false,"comment_ctime":1620720030,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1620720030","product_id":100033601,"comment_content":"老师，请教个问题？我原来学的是，DNS解析后，真正发起请求过程中，再去查找是否有缓存（浏览器缓存和http缓存），你的文章中讲的是查找本地缓存，没有再走DNS解析，http请求。是我原来学的有问题吗？","like_count":0,"discussions":[{"author":{"id":2735805,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ib4u5jePIvhE6xMYiazNh3l2jJ01RQXZOSk5uB6F33sK0cMd66hicCEZZCfIPSJhGpxbyto6X2FuKWbUdE8y9RH3g/132","nickname":"只吃一碗粉","note":"","ucode":"BBD2E3A2EBDC10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390800,"discussion_content":"这里的缓存指的不是DNS缓存吧，感觉是Service Worker的缓存？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630049370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386167,"discussion_content":"先在c盘host文件查找缓存的，缓存没有，再去dns服务器解析，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627454802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291174,"user_name":"lxl","can_delete":false,"product_type":"c1","uid":2610832,"ip_address":"","ucode":"47FF2566FE062B","user_header":"https://static001.geekbang.org/account/avatar/00/27/d6/90/f24b254a.jpg","comment_is_top":false,"comment_ctime":1620098273,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1620098273","product_id":100033601,"comment_content":"Chrome新标签分配渲染进程问题：我查看了Chrome的任务管理器，在我打开GitHub首页的时候，会给新标签分配一个渲染进程，当我从这个页面点击打开新标签的时候，Chrome浏览器依然会给新标签创建一个新的渲染进程，不管是不是同一站点。<br>问题：是Chrome浏览器更新了？还是我操作问题？","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386168,"discussion_content":"可能做了限制，不允许同一站点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627454858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290005,"user_name":"小屯","can_delete":false,"product_type":"c1","uid":2588851,"ip_address":"","ucode":"DAB4EB12A0FC3D","user_header":"https://static001.geekbang.org/account/avatar/00/27/80/b3/01c25078.jpg","comment_is_top":false,"comment_ctime":1619318901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619318901","product_id":100033601,"comment_content":"1. 用户输入阶段（处理url）<br>用户输入，如果是内容，浏览器自动组合后，会合成带有关键字的url<br>如果复符合url规则，则加上协议，组合成完整url发起请求<br>离开页面之前出发beforeunload钩子函数（例如文档是否保存之类的）<br>2. 请求url<br>浏览器线程会将url交给网络线程处理，网络线程判断是否缓存该资源 ，若缓存则直接将资源给到浏览器线程，否则DNS解析，应用层发起https请求，构建请求信息，发送请求，传输层建立TCP连接，网络层封装上IP头，底层网络请求，服务器拿到响应数据后判定是否需要重定向，若需要会导航到新的地址上（状态码为301、302），否则继续处理该请求，通过Content-Type判断，若返回类型为字节流，则将返回信息提交给浏览器下载管理器，HTML则分配给渲染进程（需注意什么时候会公用一个渲染进程，相同协议和根域名），渲染进程确认传输完成后完成，会告诉浏览器进程，浏览器进程开始更新页面状态（这也就是为什么url输入后页面没有立马消失的原因）","like_count":0},{"had_liked":false,"id":289504,"user_name":"sgb","can_delete":false,"product_type":"c1","uid":1701362,"ip_address":"","ucode":"2993A88C8776A5","user_header":"https://static001.geekbang.org/account/avatar/00/19/f5/f2/7ee2ecb2.jpg","comment_is_top":false,"comment_ctime":1619056800,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1619056800","product_id":100033601,"comment_content":"老师您好，有个疑问，URL请求阶段，“连接建立之后，浏览器端会构建请求行、请求头等信息，并把和该域名相关的 Cookie 等数据附加到请求头中”，这个过程是在网络进程中完成的吗？还是也需要浏览器进程参与？","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386169,"discussion_content":"需要浏览器进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627454887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285244,"user_name":"potter","can_delete":false,"product_type":"c1","uid":1147409,"ip_address":"","ucode":"49C6FC3721011D","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/11/ed602a15.jpg","comment_is_top":false,"comment_ctime":1616682336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616682336","product_id":100033601,"comment_content":"https:&#47;&#47;juejin.cn&#47;post&#47;6844904046411644941 ，讲得流程差距很大，此文来源Google翻译，请问老师讲的哪个Chrome架构版本，还是说真的讲错了啊","like_count":0},{"had_liked":false,"id":284358,"user_name":"小童","can_delete":false,"product_type":"c1","uid":1763395,"ip_address":"","ucode":"300444B520E79D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e8/43/f9c0faed.jpg","comment_is_top":false,"comment_ctime":1616210904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616210904","product_id":100033601,"comment_content":"渲染进程接收到“提交导航”的消息之后，便开始准备接收 HTML 数据，接收数据的方式是直接和网络进程建立数据管道。  <br>老师这个提交导航 是什么意思？这个导航是指什么？","like_count":0},{"had_liked":false,"id":282966,"user_name":"闲闲","can_delete":false,"product_type":"c1","uid":1637571,"ip_address":"","ucode":"B2099BDCFF6191","user_header":"https://static001.geekbang.org/account/avatar/00/18/fc/c3/0991edfc.jpg","comment_is_top":false,"comment_ctime":1615477477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615477477","product_id":100033601,"comment_content":"浏览器地址输入url发生了什么？<br>1、处理信息阶段<br>    浏览器根据输入的内容判断是搜索内容还是url，不是url使用默认搜索引擎<br>2、网络进程<br>    浏览器进程通过进程之前的通讯，讲url传递给网络进程，网络进程经过一系列解析，将服务器返回来的数据提交给渲染进程<br>3、渲染进程<br>    渲染进程收到浏览器进程提交的文档以后，返回一个确认收到文档，然后开始准备进入渲染进程，渲染界面","like_count":0},{"had_liked":false,"id":276914,"user_name":"不是明天","can_delete":false,"product_type":"c1","uid":2384984,"ip_address":"","ucode":"4E4A519EEA3976","user_header":"https://static001.geekbang.org/account/avatar/00/24/64/58/a279ec74.jpg","comment_is_top":false,"comment_ctime":1612172943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612172943","product_id":100033601,"comment_content":"老师咨询个问题：用户那里谷歌浏览器的时区与电脑系统时区不一样，换个其他浏览器时区是对的，会是什么原因造成的啊？我们是升级https了，用户用的http访问这是原因吗？","like_count":0},{"had_liked":false,"id":274121,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1610862954,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610862954","product_id":100033601,"comment_content":"从URL输入到页面显示发生了什么？以下是大致过程不是面面俱到，其实我认为掌握了大致的过程，细节就慢慢学习就好了，就像开发一个功能，主体功能完成了，剩下的就是考虑各种你没有想到的情况了(自测、产品、测试)。同样老师的课程中也不可能所有细节都有，那就工作量太大了，这就需要我们主动学习了，所以希望老师能多推荐一些相关资料啥的，站在老师的肩上避免走弯路。<br>1. 用户输入与处理。由浏览器进程处理。若是关键字，则使用默认搜索引擎地址➕关键字，生成完整的URL(协议➕域名➕资源)；若是符合URL规则的输入，则生成完整的URL。用户确定后(回车)，如果有 beforeunload 事件(一般用于清理信息，或者表单编辑退出确认)执行，则会弹窗询问是否取消，若取消则不会执行接下来的步骤，若确定则当前页面将要被替换为新页面，此时浏览器标签进入加载状态。<br>2. 网络请求。由网络进程处理。接收到URL后，首先构建请求行，然后：<br>\ta. 看是否命中缓存：<br>\t\ti. 若命中，则需要看设置的缓存时间(Cache-Control: Max-age=2000)是否过期，若没有过期则直接采用；若过期则发送请求时请求头会带上If-None-Match字段(资源哈希值)，目的是与服务器相应资源进行匹配，若匹配上则响应行状态码为304，响应体不会有新数据；若没有则正常200返回。<br>\t\tii. 若未命中，则进行网络请求。<br>\tb. 进行DNS查询，找到目的IP。若命中DNS缓存，则直接返回；若未命中则继续查询。<br>\tc. 建立TCP连接。因为浏览器会有同一域名下同时TCP连接的限制(例如Chrome是6个)，若超过了限制，则需要等待；若没有则进行三次握手进行TCP连接。<br>\td. 传输数据。客户端应用层(特指浏览器)构建http数据包，发送到传输层加上tcp头(包含源端口号、目的端口号、排序序号等)，发送到网络层加上ip头(包含源ip、目的ip等)，经过其他层到达目的主机。服务端网络层去除数据包的ip头并解析，发送到传输层去掉tcp头并解析，发送到应用层依据端口号找到最终应用。在传输数据过程中，还会进行数据包完整构建(多个路由发送)、确认回复、超时重传等机制。数据传输完毕后，若设置了 Connection: keep-alive 则会复用此TCP连接；若没有则进行四次挥手断开。<br>\te. 完成数据的发送和接收(客户端和服务端)<br>3. 解析响应头信息。由浏览器进程处理。解析响应行时，若状态码是重定向301、302则在响应头中获取Location字段的值，进行重定向操作，这时中断流程，重复上述过程。解析到响应头中的Content-Type时，决定了浏览器如何处理响应体中的信息，常见的有 text&#47;html表示HTML类型，准备渲染进程；application&#47;octet-stream表示字节流类型，通常交由下载器处理，导航流程中断。<br>4. 准备渲染进程：由浏览器进程处理。若响应体信息需要渲染进程处理，则会分配渲染进程。一般浏览器会为每个页面都分配一个渲染进程，然而依据浏览器的 process-per-site-instance 策略，同一站点(same site，协议 ➕ 主域名 相同)会复用同一渲染进程。<br>5. 提交文档。由浏览器进程处理。浏览器进程解析完请求头，渲染进程ready后，便会发送 提交文档 消息给渲染进程，渲染进程接收后则和网络进程建立“数据传入管道”，进行数据传输。<br>6. 确认提交。待数据传输完毕之后，渲染进程向浏览器进程发送 确认提交 消息，浏览器进程接收后会更新当前页面状态，包括安全状态、地址栏URL、前进后退的历史状态、更新 Web 页面等。<br>7. 页面解析、子资源加载。由渲染进程处理。<br>以上是个人总结，缺失或者错误的地方，欢迎指出！谢谢！<br><br>","like_count":0},{"had_liked":false,"id":272626,"user_name":"小二","can_delete":false,"product_type":"c1","uid":1648699,"ip_address":"","ucode":"61C20E400DE446","user_header":"https://static001.geekbang.org/account/avatar/00/19/28/3b/f63be61b.jpg","comment_is_top":false,"comment_ctime":1610179934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610179934","product_id":100033601,"comment_content":"1. 用户输入URL，浏览器会根据用户输入的信息判断是搜索还是网址，如果是搜索内容，就将搜索内容+默认搜索引擎合成新的URL；如果用户输入的内容符合URL规则，浏览器就会根据URL协议，在这段内容上加上协议合成合法的URL<br>2. 用户输入完内容，按下回车键，浏览器导航栏显示loading状态，但是页面还是呈现前一个页面，这是因为新页面的响应数据还没有获得<br>3. 浏览器进程浏览器构建请求行信息，会通过进程间通信（IPC）将URL请求发送给网络进程<br>GET &#47;index.html HTTP1.1<br>4. 网络进程获取到URL，先去本地缓存中查找是否有缓存文件，如果有，拦截请求，直接200返回；否则，进入网络请求过程<br>5. 网络进程请求DNS返回域名对应的IP和端口号，如果之前DNS数据缓存服务缓存过当前域名信息，就会直接返回缓存信息；否则，发起请求获取根据域名解析出来的IP和端口号，如果没有端口号，http默认80，https默认443。如果是https请求，还需要建立TLS连接。<br>6. Chrome 有个机制，同一个域名同时最多只能建立 6 个TCP 连接，如果在同一个域名下同时有 10 个请求发生，那么其中 4 个请求会进入排队等待状态，直至进行中的请求完成。如果当前请求数量少于6个，会直接建立TCP连接。<br>7. TCP三次握手建立连接，http请求加上TCP头部——包括源端口号、目的程序端口号和用于校验数据完整性的序号，向下传输<br>8. 网络层在数据包上加上IP头部——包括源IP地址和目的IP地址，继续向下传输到底层<br>9. 底层通过物理网络传输给目的服务器主机<br>10. 目的服务器主机网络层接收到数据包，解析出IP头部，识别出数据部分，将解开的数据包向上传输到传输层<br>11. 目的服务器主机传输层获取到数据包，解析出TCP头部，识别端口，将解开的数据包向上传输到应用层<br>12. 应用层HTTP解析请求头和请求体，如果需要重定向，HTTP直接返回HTTP响应数据的状态code301或者302，同时在请求头的Location字段中附上重定向地址，浏览器会根据code和Location进行重定向操作；如果不是重定向，首先服务器会根据 请求头中的If-None-Match 的值来判断请求的资源是否被更新，如果没有更新，就返回304状态码，相当于告诉浏览器之前的缓存还可以使用，就不返回新数据了；否则，返回新数据，200的状态码，并且如果想要浏览器缓存数据的话，就在相应头中加入字段：<br>Cache-Control:Max-age=2000<br>响应数据又顺着应用层——传输层——网络层——网络层——传输层——应用层的顺序返回到网络进程<br>13. 数据传输完成，TCP四次挥手断开连接。如果，浏览器或者服务器在HTTP头部加上如下信息，TCP就一直保持连接。保持TCP连接可以省下下次需要建立连接的时间，提示资源加载速度<br>Connection:Keep-Alive<br>14. 网络进程将获取到的数据包进行解析，根据响应头中的Content-type来判断响应数据的类型，如果是字节流类型，就将该请求交给下载管理器，该导航流程结束，不再进行；如果是text&#47;html类型，就通知浏览器进程获取到文档准备渲染<br>15. 浏览器进程获取到通知，根据当前页面B是否是从页面A打开的并且和页面A是否是同一个站点（根域名和协议一样就被认为是同一个站点），如果满足上述条件，就复用之前网页的进程，否则，新创建一个单独的渲染进程<br>16. 浏览器会发出“提交文档”的消息给渲染进程，渲染进程收到消息后，会和网络进程建立传输数据的“管道”，文档数据传输完成后，渲染进程会返回“确认提交”的消息给浏览器进程<br>17. 浏览器收到“确认提交”的消息后，会更新浏览器的页面状态，包括了安全状态、地址栏的 URL、前进后退的历史状态，并更新web页面，此时的web页面是空白页<br>18. 渲染进程对文档进行页面解析和子资源加载，HTML 通过HTM 解析器转成DOM Tree（二叉树类似结构的东西），CSS按照CSS 规则和CSS解释器转成CSSOM TREE，两个tree结合，形成render tree（不包含HTML的具体元素和元素要画的具体位置），通过Layout可以计算出每个元素具体的宽高颜色位置，结合起来，开始绘制，最后显示在屏幕中新页面显示出来","like_count":0},{"had_liked":false,"id":270845,"user_name":"Geek_80b917","can_delete":false,"product_type":"c1","uid":2396513,"ip_address":"","ucode":"EB5E096763F485","user_header":"","comment_is_top":false,"comment_ctime":1609299525,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609299525","product_id":100033601,"comment_content":"1. URL 请求中说：“网络进程会查找本地缓存是否缓存了该资源。如果有缓存资源，那么直接返回资源给浏览器进程。” 问题：如果有缓存，那么不会根据资源类型调用下载管理器或者返回响应头给浏览器进程，然后浏览器进程通知渲染进程，渲染进程跟网络进程建立管道吗？为什么会是直接返回资源给浏览器进程呢？<br>2. URL请求中说：“连接建立之后，浏览器端会构建请求行、请求头等信息，并把和该域名相关的 Cookie 等数据附加到请求头中，然后向服务器发送构建的请求信息。” 问题： 这里的浏览器端指的是浏览器进程还是网络进程？在我的理解中tcp连接是网络进程和服务器建立的连接，那么这个“构建请求信息”是在浏览器进程里做的还是在网络进程里做的？","like_count":0},{"had_liked":false,"id":265602,"user_name":"stuart637","can_delete":false,"product_type":"c1","uid":1477393,"ip_address":"","ucode":"EDE87D18D21843","user_header":"","comment_is_top":false,"comment_ctime":1606959926,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606959926","product_id":100033601,"comment_content":"上面说的是:<br>&quot;浏览器进程接收到渲染进程“提交文档”的消息之后，便开始移除之前旧的文档，然后更新浏览器进程中的页面状态。&quot;<br>下面提交文档这一小节又说的是:<br>&quot;首先当浏览器进程接收到网络进程的响应头数据之后，便向渲染进程发起“提交文档”的消息；&quot;<br>到底哪个是对的？懵逼了都","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386171,"discussion_content":"浏览器进程向渲染进程，提交文档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627455049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258186,"user_name":"Geek_ecc18b","can_delete":false,"product_type":"c1","uid":2264065,"ip_address":"","ucode":"7A6463A964FF12","user_header":"","comment_is_top":false,"comment_ctime":1604320983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604320983","product_id":100033601,"comment_content":"①用户在地址栏输入搜索内容，地址栏对输入内容进行判断，如果是关键词则利用搜索引擎加上搜索内容合成url，如果是域名，则加上协议合成完整的url。<br><br>②浏览器进程将url通过进程间通信（IPC)发送给网络进程，网络进程查找本地缓存资源中是否有要请求的数据，要是有则返回数据，没有的话进行DNS查询获得IP，如果协议是HTTPS，还要进行TLS\t连接。当前域名建立的TCP连接若是超过了6个则进入TCP等待队列，通过三次握手建立TCP连接，将构建好的请求信息（请求行，请求头，请求体）发送给服务端，服务端返回响应数据。<br><br>③网络进程对响应行解析，响应行返回的状态码若是301或者302则需要重定向，重定向的地址位于响应体的Location字段中。响应头返回的状态码若是200，则代表返回数据成功。网络进程还要对响应头中的Content-Type进行解析，若其值为application&#47;octet-stream，则代表返回的是下载类型，则将下来交给浏览器的下载管理器，url的请求流程到此结束，若其值为text&#47;html，则代表返回的是html页面，则接下来准备好渲染进程。如果在A页面打开B页面，A页面和B页面属于同一站点（协议和根域名相同），那么B页面会复用页面A的渲染进程。如果A和B不属于同一站点，那么浏览器会为B页面创建一个新的渲染进程。<br><br>④网络进程将解析好的响应行和响应头信息发送给浏览器进程，浏览器进程向渲染进程发送一个“提交文档”信息，渲染进程和网络进程之间建立起数据管道，渲染进程准备接收html数据。<br><br>⑤渲染进程在接收完数据后，向浏览器进程发送“确认提交”的信息。浏览器进程开始更新浏览器界面状态包括前进后退的历史信息，url地址，web页面。<br><br>⑥渲染进程开始页面解析和子资源加载，当页面形成完，渲染进程会向浏览器进程发送一个消息，这时候浏览器进程会停止标签上的图标加载动画，至此一个完整的页面就形成了。","like_count":0},{"had_liked":false,"id":250498,"user_name":"Sklei","can_delete":false,"product_type":"c1","uid":1232710,"ip_address":"","ucode":"DC92F2EF4EFC3B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eokcpAyNicN9WS20hxaOEhDoqIl0Hdo9SuMrzhYDRsr6hkGcrQyMOQYfKRBFFSwZpXwW7Fc2wnHOdA/132","comment_is_top":false,"comment_ctime":1601104822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601104822","product_id":100033601,"comment_content":"1、首先校验url，不是url的话启动浏览器的搜索引擎，是url的组装协议，拼接成完整的url<br>2、浏览器进程通过进程间通信把url发送给网络进程<br>3、网络进程查询本地是否有缓存资源，有的话直接返回，没有的话直接进行网络请求<br>4、网络请求第一步是是对域名进行DNS解析，解析过程也是从浏览器缓存查询开始<br>5、利用ip地址和服务器建立TCP连接，请求数据<br>6、服务器接收到请求信息后，会根据请求信息生成响应数据（包括响应行、响应头和响应体等信息），并发给网络进程。等网络进程接收了响应行和响应头之后，就开始解析响应头的内容了。<br>7、浏览器收到网络请求数据根据coontent-type返回的类型进行解析渲染<br>8、最终把渲染结果绘制在页面上展示","like_count":0},{"had_liked":false,"id":247026,"user_name":"Kerry","can_delete":false,"product_type":"c1","uid":1160223,"ip_address":"","ucode":"D634EBC6ECD781","user_header":"https://static001.geekbang.org/account/avatar/00/11/b4/1f/4107c044.jpg","comment_is_top":false,"comment_ctime":1599559450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599559450","product_id":100033601,"comment_content":"有2个疑问：<br>1. 浏览器进程是不是在开始收到响应头时就发起“提交文档”？<br>2. 渲染进程是不是在接收完响应头时就返回“确认提交文档”给浏览器进程？","like_count":0},{"had_liked":false,"id":245218,"user_name":"藍。","can_delete":false,"product_type":"c1","uid":2100706,"ip_address":"","ucode":"167DC48317D575","user_header":"https://static001.geekbang.org/account/avatar/00/20/0d/e2/6278daac.jpg","comment_is_top":false,"comment_ctime":1598866513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598866513","product_id":100033601,"comment_content":"老师讲的真真真真好，看的我激动，安利给好多朋友","like_count":0},{"had_liked":false,"id":238291,"user_name":"大桥2号","can_delete":false,"product_type":"c1","uid":2095749,"ip_address":"","ucode":"2BB88B211C5C8A","user_header":"https://static001.geekbang.org/account/avatar/00/1f/fa/85/1920fa21.jpg","comment_is_top":false,"comment_ctime":1596112401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596112401","product_id":100033601,"comment_content":"突然发现一个bug,标题写的是输入URL到页面展示，并没有写输入内容到页面展示，那提的判断输入内容就不必了。哈哈","like_count":0},{"had_liked":false,"id":236866,"user_name":"GeekYa","can_delete":false,"product_type":"c1","uid":1127115,"ip_address":"","ucode":"4B30219E8E7A97","user_header":"https://static001.geekbang.org/account/avatar/00/11/32/cb/cece03fc.jpg","comment_is_top":false,"comment_ctime":1595571578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595571578","product_id":100033601,"comment_content":"看过那么多相关资料，老师讲的内容是最浅显易懂的，且来龙去脉清晰！赞������！","like_count":0},{"had_liked":false,"id":224320,"user_name":"啊哈哈","can_delete":false,"product_type":"c1","uid":1243584,"ip_address":"","ucode":"A8542946C03707","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","comment_is_top":false,"comment_ctime":1591344385,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591344385","product_id":100033601,"comment_content":"提交文档这里没懂。  按文中说的提交文档是指浏览器进程将网络进程接收到的 HTML 数据提交给渲染进程。不明白的点：1. 网络进程获取到响应数据后不是只把响应头和响应行给浏览器进程吗，浏览器进程怎么会有网络进程的HTML数据；2. 如果1成立，那为什么渲染进程还会和网络进程建立数据管道拿数据；3. 确认提交是在渲染进程开始接受和解析数据时还是渲染完成后？确认提交的意思是什么？是提交渲染结果呢还是告知浏览器进程我要开始接受和解析数据了","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386172,"discussion_content":"确认提交，按后面老师自己评论回复的，应该是渲染完成后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627455423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216852,"user_name":"OvO","can_delete":false,"product_type":"c1","uid":1971604,"ip_address":"","ucode":"40DEA6B3ACE385","user_header":"https://static001.geekbang.org/account/avatar/00/1e/15/94/ce435425.jpg","comment_is_top":false,"comment_ctime":1589355014,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589355014","product_id":100033601,"comment_content":"老师您好，想问一下关于查找缓存和构建请求报文的顺序。<br>您对评论区中的 ytd 和 羽蝶曲 都进行了肯定，但是他们关于构建请求报文和查找缓存的顺序是相反的。<br>请问真实顺序应该是哪种呀？","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386173,"discussion_content":"先构建请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627455505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215759,"user_name":"Cshine🌸🌸","can_delete":false,"product_type":"c1","uid":1965403,"ip_address":"","ucode":"D2BEFD692CC1F1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fd/5b/0c821fbc.jpg","comment_is_top":false,"comment_ctime":1589097395,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589097395","product_id":100033601,"comment_content":"最后渲染进程会向浏览器进程“确认提交”，这是告诉浏览器进程：“已经准备好接受和解析页面数据了”<br><br>这里是不是与文章最后部分的 -- 一旦文档被提交，渲染进程便开始页面解析和子资源加载了相矛盾呢？@无名的评论下老师您也说接收完数据是指等所有资源加载完毕，这两点是不是说明“确认提交”的时候，页面已经开始解析了；怎么又说是告诉浏览器--已经准备好接收和解析呢？<br><br>而且我看原文有一段这样的描述<br>When the renderer process receives a commit message for a navigation and starts to receive HTML data, the main thread begins to parse the text string (HTML) and turn it into a Document Object Model (DOM).<br><br>还请老师解答一下<br>","like_count":0,"discussions":[{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386174,"discussion_content":"应该是浏览器进程，开始提交，渲染进程就开始接受渲染啦，   最后确认提交，应该是已经渲染完毕啦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627455858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215280,"user_name":"方恨少","can_delete":false,"product_type":"c1","uid":1756398,"ip_address":"","ucode":"C9D67C6F55DD45","user_header":"https://static001.geekbang.org/account/avatar/00/1a/cc/ee/daaca4e7.jpg","comment_is_top":false,"comment_ctime":1588947028,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588947028","product_id":100033601,"comment_content":"老师，为什么讲浏览器原理的书籍几乎没有呢？很多时候我们回答不上来，是因为从来没有一本书那么系统的讲解！","like_count":0},{"had_liked":false,"id":207965,"user_name":"我母鸡啊！","can_delete":false,"product_type":"c1","uid":1633705,"ip_address":"","ucode":"7BFB14BC99E978","user_header":"https://static001.geekbang.org/account/avatar/00/18/ed/a9/662318ab.jpg","comment_is_top":false,"comment_ctime":1587223567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587223567","product_id":100033601,"comment_content":"1.浏览器识别用户输入的内容（网址&#47;关键词），关键词会启用浏览器自己的搜索引擎，网址的话会包装成Http，这里会经历beforUnload事件（这里你可以提示用户，是否离开），这时候标签页会出现loading的旋转图标，浏览器开始进入等待提交文档阶段，成功后页面内容才会被替换。接下来，便进入了页面资源请求过程。<br><br>2.浏览器会利用进程通信（IPC）把URL请求发送到网络进程，网络进程拿到URL后发起请求。一开始会去本地缓存中查看是否有缓存（有则拿，无则请求），<br>如果没有发起请求：<br>1.DNS解析，拿取到IP<br>2.Chrome浏览器为例，TCP最大请求数6个超过6个建立TCP队列<br>3.TCP开始链接（3次握手），建立连接，开始HTTP请求<br>4.服务器响应后，网络进程接收响应头和响应信息，<br>5.这里浏览器解析响应内容HTTP网络传输这里可能会遇到（301&#47;302重定向，浏览器会从响应头的localtion中地址，重新发起请求），<br>6.准备渲染进程，检查打开页面是否和之前的页面存在同一站点关系（即根域名相同），如果存在同一站点关系，则利用原渲染进程，如果不同，则宁开启一个新的渲染进程<br>7.传输数据，更新状态。渲染进程准备好后，浏览器向渲染进程发起“提交文档”的消息，渲染进程接收到消息和网络进程建立传输数据的“管道”<br>8.渲染进程接收完数据后，向浏览器发送“确认提交”<br>9.浏览器进程接收到确认消息后更新浏览器界面状态：安全、地址栏url、前进后退的历史状态、更新web页面","like_count":0},{"had_liked":false,"id":207385,"user_name":"简玉","can_delete":false,"product_type":"c1","uid":1013401,"ip_address":"","ucode":"C7F9471C7BFC7F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/99/00597feb.jpg","comment_is_top":false,"comment_ctime":1587078541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587078541","product_id":100033601,"comment_content":"想请教老师如何查看到chrome对应的源码：<br>地址栏键入的字符串判断为url的规则？","like_count":0},{"had_liked":false,"id":204526,"user_name":"穿秋裤的男孩","can_delete":false,"product_type":"c1","uid":1748640,"ip_address":"","ucode":"D0F48C66377893","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ae/a0/707350ef.jpg","comment_is_top":false,"comment_ctime":1586417421,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586417421","product_id":100033601,"comment_content":"老师，tcp是怎么确定源端口和目的端口的呢？源端口是浏览器给到tcp的吗？问度娘，度娘也一知半解","like_count":0,"discussions":[{"author":{"id":1036636,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d1/5c/ef7f625a.jpg","nickname":"👊 👊","note":"","ucode":"8A04740808B47C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240929,"discussion_content":"文中说了嘛，http默认80，https默认443。\n问度娘？你咋没考虑要是在内网咋弄？😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587391387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202332,"user_name":"勋","can_delete":false,"product_type":"c1","uid":1946445,"ip_address":"","ucode":"8E172E1488CD84","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b3/4d/9e7af078.jpg","comment_is_top":false,"comment_ctime":1585970322,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585970322","product_id":100033601,"comment_content":"老师你好，我有个疑惑，从性能上讲多个页面共用一个渲染进程好还是分开呢，比如iframe嵌套的页面","like_count":0},{"had_liked":false,"id":202066,"user_name":"莣孒","can_delete":false,"product_type":"c1","uid":1379248,"ip_address":"","ucode":"DD91623F693733","user_header":"https://static001.geekbang.org/account/avatar/00/15/0b/b0/ff8585d9.jpg","comment_is_top":false,"comment_ctime":1585897832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585897832","product_id":100033601,"comment_content":"1，用户输入URIL后，浏览器将进程转给网络进程，进行真正意义上请求<br>2，网络进程进行DNS解析，找到对应的服务器地址，TCP三次握手，构建HTTP请求，判断是否缓存，有缓存则读取缓存内容，没有则向服务器请求资源<br>3，网络进程将响应内容提交给渲染进程，渲染出html，css，图片资源，如果是字节流认为是下载资源，则渲染结束","like_count":0},{"had_liked":false,"id":201703,"user_name":"Y","can_delete":false,"product_type":"c1","uid":1387361,"ip_address":"","ucode":"AC4693809C1CEC","user_header":"https://static001.geekbang.org/account/avatar/00/15/2b/61/585018f1.jpg","comment_is_top":false,"comment_ctime":1585821448,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585821448","product_id":100033601,"comment_content":"老师，有个问题不开明白：<br>“首先，网络进程会查找本地缓存是否缓存了该资源。如果有缓存资源，那么直接返回资源给浏览器进程”。<br>照课程里讲的，如果没有缓存，那渲染进程会和网络进程建立连接获取数据。那如果命中缓存，按上面的描述，网络进程会直接把资源给浏览器进程。那么这个时候，浏览器进程像渲染进程提交导航之后，渲染进程是从哪里去获取资源呢？是浏览器进程直接给到了渲染进程，还是依旧从网络进程那儿获取？<br>","like_count":0,"discussions":[{"author":{"id":1196864,"avatar":"https://static001.geekbang.org/account/avatar/00/12/43/40/e7ef18de.jpg","nickname":"嘉一","note":"","ucode":"8D16BD0B75B019","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252414,"discussion_content":"应该还是从网络进程那里获取，因为本质上来说，查找是否有缓存只是网络进程获取资源的一种方式，而对于和网络进程合作的其他进程而言他们是不知道也不关心网络进程是怎样得到他们要的资源，所以其他进程和网络进程之间的合作方式没有变化","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588163871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198779,"user_name":"Coutinho","can_delete":false,"product_type":"c1","uid":1730875,"ip_address":"","ucode":"5D52969F8FB3DA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/69/3b/7111598b.jpg","comment_is_top":false,"comment_ctime":1585468059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585468059","product_id":100033601,"comment_content":"- 用户输入后，浏览器进程根据用户的输入内容合成URL<br>- 如果没有 beforeUnload 事件取消导航，浏览器进程会把URL请求发送至网络进程<br>- 网络进程查找本地有无缓存，如果有则返回资源给浏览器进程，结束请求；如果没有则，先查找域名对应的IP地址，找到后建立TCP连接，没找到则通过DNS服务器解析IP地址<br>- 准备好IP地址和端口号之后，通过三次握手建立TCP连接<br>- 建立好后，浏览器构建请求行等信息，向服务器发送HTTP请求<br>- 服务器接收请求信息，返回响应数据<br>- 浏览器进程接收数据，解析响应行后如果得到的状态码是301，302，那么会根据Location字段重新发起HTTP请求<br>- 如果状态码是200，根据Content-Type决定如何响应<br>- 如果是HTML，则进行渲染进程的准备，若新打开的页面符合同一站点策略，则复用父页面的渲染进程，否则会为新页面创建另一个渲染进程<br>- 接下来，浏览器进程会发送“提交文档”消息给渲染进程，渲染进程收到后会准备并接收网络进程的数据，在HTML部分的数据传输完成之后，发送“确认提交”给浏览器进程<br>- 之后浏览器进程进行界面状态的更新<br>- 文档提交后，渲染进程开始页面资源和子资源的解析，完成后浏览器进程负责显示新的页面","like_count":0},{"had_liked":false,"id":190809,"user_name":"竹溪谷","can_delete":false,"product_type":"c1","uid":1127518,"ip_address":"","ucode":"15EEDE0D0EFB6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/5e/95a780f4.jpg","comment_is_top":false,"comment_ctime":1584694696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584694696","product_id":100033601,"comment_content":"\t1. 输入URL或者关键字给B，B解析url或者合成url后交给N去请求资源；<br>\t2. N将请求到的资源给B<br>\t3. B刚收到资源就给X说，你准备一下，等下要提交文档；<br>\t4. X一脸蒙逼，文档在哪呢？就开个管道去N那里取文档，取完之后回复B说，文档拿到好了，你可以行动了<br>\t5. B收到消息，将原来的文档删除，<br>        6. 与此同时，X解析加载资源，将页面更新成最新的文档","like_count":0},{"had_liked":false,"id":185762,"user_name":"陈颖祚","can_delete":false,"product_type":"c1","uid":1887519,"ip_address":"","ucode":"0A33BA93C471BD","user_header":"","comment_is_top":false,"comment_ctime":1583676496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583676496","product_id":100033601,"comment_content":"说起输入url访问网站，请问老师，用VS新建一个asp.net core工程，F5运行起来网页地址是localhost，但只有用IIS发布之后别人机器才能访问。这是因为发布前服务器监听localhost，而发布后服务器才监听本机ip吗？能否讲解下这里面的门道","like_count":0},{"had_liked":false,"id":175818,"user_name":"luckyone","can_delete":false,"product_type":"c1","uid":1820475,"ip_address":"","ucode":"1B94D56A026EB9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c7/3b/2e49fef1.jpg","comment_is_top":false,"comment_ctime":1580838231,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1580838231","product_id":100033601,"comment_content":"我就说有些网页加载慢，这是后点击回退，回退是当前网站的之前记录","like_count":0},{"had_liked":false,"id":169787,"user_name":"AMIR","can_delete":false,"product_type":"c1","uid":1782777,"ip_address":"","ucode":"65142D9669071B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/33/f9/50b76abe.jpg","comment_is_top":false,"comment_ctime":1578446820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578446820","product_id":100033601,"comment_content":"具体地讲，我们将“同一站点”定义为根域名（例如，geekbang.org）加上协议（例如，https:&#47;&#47; 或者 http:&#47;&#47;） 老师这里这个根域名描述有问题吧，应该是二级域名 根域名是.","like_count":0},{"had_liked":false,"id":166632,"user_name":"Rahim","can_delete":false,"product_type":"c1","uid":1782301,"ip_address":"","ucode":"BA3FE7805B15D3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/32/1d/d4e03718.jpg","comment_is_top":false,"comment_ctime":1577525515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577525515","product_id":100033601,"comment_content":"浏览器接受到网络进程到响应后，准备渲染进程<br>1.浏览器的哪个部分功能接受到<br>2.浏览器进程 发送 提交文档到 渲染进程，不用等待 渲染进程完成吗，<br>在流程图中没有看到渲染进程到步骤，很不解","like_count":0},{"had_liked":false,"id":164784,"user_name":"yulingogo","can_delete":false,"product_type":"c1","uid":1379882,"ip_address":"","ucode":"23BC47AE89C986","user_header":"https://static001.geekbang.org/account/avatar/00/15/0e/2a/2156518c.jpg","comment_is_top":false,"comment_ctime":1577091236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577091236","product_id":100033601,"comment_content":"本地有缓存网络进程将缓存发送给浏览器进程，那缓存由谁给渲染进程，为什么网络进程不直接将缓存给渲染进程","like_count":0},{"had_liked":false,"id":161767,"user_name":"Rahim","can_delete":false,"product_type":"c1","uid":1782301,"ip_address":"","ucode":"BA3FE7805B15D3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/32/1d/d4e03718.jpg","comment_is_top":false,"comment_ctime":1576321006,"is_pvip":false,"replies":[{"id":"61625","content":"是错了，这个过两天我会来修订正文内容","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1576372071,"ip_address":"","comment_id":161767,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576321006","product_id":100033601,"comment_content":"老师你好，有一点很是疑惑，我看评论里面篇幅长长的总结里面也搞错了步骤的。“提交文档”的过程按照流程图，跟内容都是【是渲染进程-&gt;浏览器进程】发送的一个过程。<br>请问，在往上一个步骤【准备渲染进程-&gt;提交文档】这个过程发生了什么，没有很好的解释到。浏览器进程在准备完渲染进程后是怎么让渲染进程发送【提交文档】，机制是什么。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477849,"discussion_content":"是错了，这个过两天我会来修订正文内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576372071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161615,"user_name":"cyberknight","can_delete":false,"product_type":"c1","uid":1053551,"ip_address":"","ucode":"73B342EBA8D11A","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/6f/d3a9fd22.jpg","comment_is_top":false,"comment_ctime":1576248492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576248492","product_id":100033601,"comment_content":"请问，浏览器引擎接收到渲染引擎的提交文档信息之后，浏览器引擎所做的确认提交文档工作和渲染引擎通过ipc从网络引擎的响应体获取文档的动作谁先谁后；谁先开始，谁先完成，感谢解答","like_count":0},{"had_liked":false,"id":158681,"user_name":"随遇而安","can_delete":false,"product_type":"c1","uid":1071463,"ip_address":"","ucode":"18F5A16B687AC8","user_header":"https://static001.geekbang.org/account/avatar/00/10/59/67/7e2fa391.jpg","comment_is_top":false,"comment_ctime":1575432956,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575432956","product_id":100033601,"comment_content":"渲染进程创建的时机是必须等到网络进程中的http response中明确的ContentType 是html才开始执行吗？还是说会有一些在输入url后就得到url尾缀是html就会并行（与网络进程）开启准备渲染进程了？<br>个人理解的原则应该是尽早开启准备渲染进程，不必一定等到response后非常明确才开启。这样就可以利用好os提供并行优势。<br>不知理解是否正确，还请老师指点，谢谢。","like_count":0},{"had_liked":false,"id":158405,"user_name":"🐒🐱🐭🐮🐯🐰🐶","can_delete":false,"product_type":"c1","uid":1189080,"ip_address":"","ucode":"52426AE36A9A39","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/d8/aa41d743.jpg","comment_is_top":false,"comment_ctime":1575364906,"is_pvip":false,"replies":[{"id":"60634","content":"这块我文中有点错误，下篇加餐写好后起来修订","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1575373995,"ip_address":"","comment_id":158405,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575364906","product_id":100033601,"comment_content":"老师我想问一下 ，在精选留言中第一个网友‘ytd’总结中您基于了肯定，但是总结中说道 ：8.1 渲染进程准备好后，浏览器向渲染进程发起“提交文档”的消息,..。这个描述中与您文中：‘首先“提交文档”的消息是由渲染进程发出给浏览器进程的，这是告诉浏览器进程，它已经准备好了，可以执行解析渲染等后续操作了。’相互冲突。希望您能解答，到底哪种是对的","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476708,"discussion_content":"这块我文中有点错误，下篇加餐写好后起来修订","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575373995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152120,"user_name":"leigk","can_delete":false,"product_type":"c1","uid":1438419,"ip_address":"","ucode":"EC6198DFDAA63A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIoyo8nib1LwRHfCZGubJxuJicRbto8AIb0K6iacHda2Nvx7jpjdm5eZIgHax1dP7ibkDWM5ZV1eNkMkw/132","comment_is_top":false,"comment_ctime":1573884497,"is_pvip":false,"replies":[{"id":"58496","content":"嗯，内容不少，而且前后还有关联","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1573899841,"ip_address":"","comment_id":152120,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573884497","product_id":100033601,"comment_content":"这个章节关键信息量很大啊，要多看多想几次才好掌握","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474720,"discussion_content":"嗯，内容不少，而且前后还有关联","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573899841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151925,"user_name":"SeaYang","can_delete":false,"product_type":"c1","uid":1393840,"ip_address":"","ucode":"F44622A44CE8B9","user_header":"https://static001.geekbang.org/account/avatar/00/15/44/b0/c196c056.jpg","comment_is_top":false,"comment_ctime":1573814509,"is_pvip":false,"replies":[{"id":"58423","content":"对，修正了提交文档的部分，之前的说法不完全正确！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1573821879,"ip_address":"","comment_id":151925,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1573814509","product_id":100033601,"comment_content":"老师，提交文档部分的内容是不是修改过了啊？记得之前说的是：浏览器进程发送“提交文档”的消息给渲染进程，渲染进程收到消息之后就和网络进程建立数据管道，接收完数据之后渲染进程发送“确认提交”的消息给浏览器进程。。可现在怎么变成了：渲染进程发送“提交文档”消息给浏览器进程，之后浏览器进程发送“确认提交”消息给渲染进程？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474657,"discussion_content":"对，修正了提交文档的部分，之前的说法不完全正确！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573821879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711728,"avatar":"https://static001.geekbang.org/account/avatar/00/29/60/b0/f928b3e4.jpg","nickname":"子墨","note":"","ucode":"637E2BC1B57603","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386180,"discussion_content":"就是浏览器进程向渲染进程提交文档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627456717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146847,"user_name":"余文郁","can_delete":false,"product_type":"c1","uid":1388319,"ip_address":"","ucode":"A51117A929EBD8","user_header":"https://static001.geekbang.org/account/avatar/00/15/2f/1f/f95bd8c9.jpg","comment_is_top":false,"comment_ctime":1572675122,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572675122","product_id":100033601,"comment_content":"老师，我从极客时间首页打开了算法训练营，然后又开了你的这篇文章页面，但是浏览器任务管理器显示的是不同的进程id（11096和8048），我看了一位同学的提问，查了一下首页的算法训练营的a标签没有 rel=&quot;noopener noreferrer&quot;这个属性，老师能解释一下吗，这不是同一站点下的吗？","like_count":0},{"had_liked":false,"id":140076,"user_name":"Geek_cea9d0","can_delete":false,"product_type":"c1","uid":1644792,"ip_address":"","ucode":"7BC4329695EEC6","user_header":"","comment_is_top":false,"comment_ctime":1570802702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570802702","product_id":100033601,"comment_content":"老师能否讲解下 渲染进程中的 UI线程，异步请求线程，GUI线程，JS引擎线程，定时触发线程的相互协作呢","like_count":0},{"had_liked":false,"id":136669,"user_name":"天使小男","can_delete":false,"product_type":"c1","uid":1326714,"ip_address":"","ucode":"0D616FF02B1DD7","user_header":"https://static001.geekbang.org/account/avatar/00/14/3e/7a/a73ec858.jpg","comment_is_top":false,"comment_ctime":1569489224,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569489224","product_id":100033601,"comment_content":"老师 为什么我觉得 地址栏判断关键字是搜索内容还是URL 并合成合法URL这个过程 是在用户键入回车之后进行的呢？为什么你的意思和留言基本都是 这个过程判断结束才回车的？<br>求老师回答疑问","like_count":0,"discussions":[{"author":{"id":1930698,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/75/ca/4c127da3.jpg","nickname":"Emma","note":"","ucode":"C2D31142AF7288","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284085,"discussion_content":"去看谷歌官方文档，官方文档说的很清楚，而且我感觉老师在这篇文章中说的内容与官方文档并不完全相符","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592443061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136639,"user_name":"天使小男","can_delete":false,"product_type":"c1","uid":1326714,"ip_address":"","ucode":"0D616FF02B1DD7","user_header":"https://static001.geekbang.org/account/avatar/00/14/3e/7a/a73ec858.jpg","comment_is_top":false,"comment_ctime":1569486622,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569486622","product_id":100033601,"comment_content":"老师   &quot;如果判断输入内容符合 URL 规则，比如输入的是 time.geekbang.org，那么地址栏会根据规则，把这段内容加上协议，合成为完整的 URL，如 https:&#47;&#47;time.geekbang.org&quot;   这个过程不是在url请求阶段重定向实现的吗？还是说这是在用户输入的时候 地址栏直接就做了？<br><br>","like_count":0},{"had_liked":false,"id":130850,"user_name":"Mryi","can_delete":false,"product_type":"c1","uid":1390428,"ip_address":"","ucode":"56A21FFDCD960C","user_header":"https://static001.geekbang.org/account/avatar/00/15/37/5c/1a64a433.jpg","comment_is_top":false,"comment_ctime":1567559989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567559989","product_id":100033601,"comment_content":"有个问题，发出网络请求并不是直接到真正后台响应服务是吗？是否涉及负载均衡和安全拦截","like_count":0},{"had_liked":false,"id":130652,"user_name":"Cris","can_delete":false,"product_type":"c1","uid":1473520,"ip_address":"","ucode":"F8A287134F1078","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","comment_is_top":false,"comment_ctime":1567501746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567501746","product_id":100033601,"comment_content":"老师，您看下评论区用户ytd的留言，想问下5.3构建请求行是不是应该在5.1和5.2之前进行？","like_count":0},{"had_liked":false,"id":129304,"user_name":"我是辣妈","can_delete":false,"product_type":"c1","uid":1239283,"ip_address":"","ucode":"F1576240250AFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/f3/01ce824b.jpg","comment_is_top":false,"comment_ctime":1567083629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567083629","product_id":100033601,"comment_content":"“提交文档”的消息是由浏览器进程发出的，渲染进程接收到“提交文档”的消息后，会和网络进程建立传输数据的“管道”。  <br><br>浏览器进程在什么时机通知渲染进程“提交文档”？有个时钟还是有事件触发？","like_count":0},{"had_liked":false,"id":129134,"user_name":"麦兜兜","can_delete":false,"product_type":"c1","uid":1625144,"ip_address":"","ucode":"D01A6C897E785A","user_header":"https://static001.geekbang.org/account/avatar/00/18/cc/38/a187dde2.jpg","comment_is_top":false,"comment_ctime":1567047231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567047231","product_id":100033601,"comment_content":"老师想请问，为什么要在浏览器主进程中准备渲染进程，以及准备完了为什么又要到渲染进程，提交文档，提交之后为什么要回到主进程中 确认文档被提交，为什么渲染进程不可以直接开始渲染页面？","like_count":0},{"had_liked":false,"id":128737,"user_name":"风一样的浪漫","can_delete":false,"product_type":"c1","uid":1097299,"ip_address":"","ucode":"EE023C0B759F26","user_header":"https://static001.geekbang.org/account/avatar/00/10/be/53/71057a8b.jpg","comment_is_top":false,"comment_ctime":1566955561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566955561","product_id":100033601,"comment_content":"1. 用户输入url后，浏览器主进程获取用户输入地址，组装url，并交给网络进程<br>2. 网络进程准备发起http&#47;https请求，先准备请求行<br>3. 请求行准备好后，查看当前缓存，如果存在缓存则直接返回，不存在则继续准备ip和端口号<br>4. 进入dns缓存查看是否有输入域名对应的ip，有则返回，无则进行dns服务器查找对应域名ip(https还需要进行TLS链接)<br>5. ip与端口号准备好后准备进行三次握手，建立tcp链接<br>6. 传输数据<br>7. 服务器接收并处理数据(如果是出现异常情况非20x，则会直接返回，服务器端不会做其他多余处理)<br>8. 响应数据返回<br>9. 四次挥手，断开tcp链接(或者服务器建立长连接，添加keep-alive响应头字段，来保证tcp可复用)<br>注：如果过多链接复用同一个tcp链接会导致效率低下，因此每个浏览器会对同一个域名下的http链接限制数量，例如chrome会限制最多6个<br>10. 浏览器接受响应后，根据响应头信息来对响应体进行处理<br>11. 浏览器进程准备渲染进程(same-site情况下不会创建新的渲染进程，而是复用父页面的渲染进程)<br>12. 渲染进程准备好后，需要向渲染进程提交返回数据，这一步称之为提交文档<br>13. 提交完成后，渲染进程渲染页面并获取子资源","like_count":0},{"had_liked":false,"id":128653,"user_name":"SeaYang","can_delete":false,"product_type":"c1","uid":1393840,"ip_address":"","ucode":"F44622A44CE8B9","user_header":"https://static001.geekbang.org/account/avatar/00/15/44/b0/c196c056.jpg","comment_is_top":false,"comment_ctime":1566924274,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566924274","product_id":100033601,"comment_content":"打开开发者network面板，以打开GitHub官网为例，有几点感受：<br>1、当下载完了首页html文件后，浏览器界面状态：安全、地址栏url、前进后退的历史状态才发生了变化，也就是说，渲染进程从网络进程获取了完整的html响应（不包括子资源）之后才会给浏览器进程发送确认提交的消息。另外，这几个浏览器状态变化后过了一小段时间后页面变为空白，然后过了一会GitHub的部分页面渲染出来了，不知道为何浏览器状态变化后过了一小段时间后页面变为空白？（是不是卸载当前页面需要时间呢？）<br><br>2、当页面内部的所有资源下载完成之前，标签页图标处于loading状态，且刷新按钮是个“叉”，当所有资源下载完毕，图标显示正常且刷新按钮正常了，说明页面load事件会发送给浏览器进程，浏览器进程更新了这两个状态<br><br>老师，以上两点对吗？","like_count":0},{"had_liked":false,"id":128044,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1566824402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566824402","product_id":100033601,"comment_content":"老师，如果我想在回答中加入cdn，是在dns解析后讲？","like_count":0},{"had_liked":false,"id":127816,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1566796880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566796880","product_id":100033601,"comment_content":"使用curl请求，有两个疑问：<br>问题1:百度服务器根据User-Agent的值决定是否做302跳转？<br>\t1、设置了以下User-Agent，返回302<br>\tcurl -i -H &#39;User-Agent: Mozilla&#47;5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit&#47;537.36 (KHTML, like Gecko) Chrome&#47;78.0.3880.4 Safari&#47;537.36&#39; http:&#47;&#47;www.baidu.com&#47;<br>\t2、没有设置User-Agent，返回200<br>\tcurl -i http:&#47;&#47;www.baidu.com&#47;<br><br>问题2:为何curl -i 返回302， curl -I返回200？<br>\t1、curl -i，返回302<br>\tcurl -i -H &#39;User-Agent: Mozilla&#47;5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit&#47;537.36 (KHTML, like Gecko) Chrome&#47;78.0.3880.4 Safari&#47;537.36&#39; http:&#47;&#47;www.baidu.com&#47;<br>\t2、curl -I，返回200<br>\tcurl -I -H &#39;User-Agent: Mozilla&#47;5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit&#47;537.36 (KHTML, like Gecko) Chrome&#47;78.0.3880.4 Safari&#47;537.36&#39; http:&#47;&#47;www.baidu.com&#47;","like_count":0},{"had_liked":false,"id":126214,"user_name":"hlz-123","can_delete":false,"product_type":"c1","uid":1433586,"ip_address":"","ucode":"B7E5EF0C260BD2","user_header":"","comment_is_top":false,"comment_ctime":1566350484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566350484","product_id":100033601,"comment_content":"1、老师能讲的这么具体、细致，一看就知道是有真功夫的人<br>2、关于浏览器输入方面，我有个问题，<br>      如果浏览器访问本地已另存的页面，访问过程是什么？<br>      为什么有时候访问已另存的本地页面比访问internet网页还慢？","like_count":0},{"had_liked":false,"id":126006,"user_name":"木棉","can_delete":false,"product_type":"c1","uid":1084629,"ip_address":"","ucode":"8A637B7435BF24","user_header":"https://static001.geekbang.org/account/avatar/00/10/8c/d5/398b31fe.jpg","comment_is_top":false,"comment_ctime":1566292362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566292362","product_id":100033601,"comment_content":"第一，首先判断输入的是关键字还是单纯的URL，如果是关键字就拼成新的url<br>第二，有了url，通过URL进行DNS解析返回对应Ip，找到端口号<br>第三，建立TCP连接，读取请求头和请求行信息，向服务器请求相应的数据，服务器根据请求信息返回响应数据，响应数据如果是301或者302则根据Location进行重定向<br>第四，如果返回的是200，浏览器进程根据不同的content-type进入不同的进程，如果是text&#47;html，还是application&#47;octet-stream，不同的content-type浏览器会做出不同的操作<br>第五，浏览器为每一个页面分配一个渲染进程，渲染进程会更新页面的相关信息，加载出新的页面。<br>","like_count":0},{"had_liked":false,"id":126000,"user_name":"🐻🔫🐸","can_delete":false,"product_type":"c1","uid":1308880,"ip_address":"","ucode":"40BABFD9D358BF","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/d0/ecc68a4f.jpg","comment_is_top":false,"comment_ctime":1566291196,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566291196","product_id":100033601,"comment_content":"对之前的提问进行补充， 在经过实验之后，我发现对于根HTML而言 Chrome直接无视强缓存，如果使用协商缓存，也就是304 。 会出现http响应码 = canceled 的情况。看起来Chrome好像认为根HTML文件走协商缓存不太合理？","like_count":0,"discussions":[{"author":{"id":1625864,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqRllUL85m1a2ROyHf9rrPMbD9w7GSgxffTicb3AUqjhHVFrnUx2mybQFN1oiaYaLPDEhlJUmud9QMw/132","nickname":"阿古","note":"","ucode":"0F75F9B97728A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5641,"discussion_content":"html走缓存会出现服务器更新页面不更新的情况，比如js或者css等资源文件开发人员会加哈希来避免缓存，如果html缓存了，引用的资源加哈希也就没有意义了。个人理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566398422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125500,"user_name":"李懂","can_delete":false,"product_type":"c1","uid":1330436,"ip_address":"","ucode":"539E6639042C88","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/04/5e0d3713.jpg","comment_is_top":false,"comment_ctime":1566195528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566195528","product_id":100033601,"comment_content":"来回从第一章，到最新看了好几遍，对于前端开发，理解这些太重要了，感谢！","like_count":0},{"had_liked":false,"id":125089,"user_name":"tokey","can_delete":false,"product_type":"c1","uid":1337746,"ip_address":"","ucode":"5278487F37D4EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1hq96go05J4R7XDd5FFXXaoyIfX9TgoI3mLURAu2ET72SvYGM2iaET7IV3WDvMibAVfw/132","comment_is_top":false,"comment_ctime":1566058927,"is_pvip":false,"replies":[{"id":"45871","content":"服务器端重定向流程一样的，先发送301或者302的状态给浏览器，然后浏览器请求目标地址","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566081992,"ip_address":"","comment_id":125089,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566058927","product_id":100033601,"comment_content":"老师您好！<br>您说的尽量减少重定向，是指前端的重定向么？如果我在 Nginx 层配置了转发，比如用户输入 “baidu.com”，重定向到 ”https:&#47;&#47;www.baidu.com“，这个是不要比前端的重定向少了好多步骤？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463430,"discussion_content":"服务器端重定向流程一样的，先发送301或者302的状态给浏览器，然后浏览器请求目标地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566081992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124944,"user_name":"AICC","can_delete":false,"product_type":"c1","uid":1020746,"ip_address":"","ucode":"C1D18B1E8B2DCE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/4a/de82f373.jpg","comment_is_top":false,"comment_ctime":1566024617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566024617","product_id":100033601,"comment_content":"如果判断输入内容符合 URL 规则，比如输入的是 time.geekbang.org，地址栏会根据规则给这段内容加上协议，如https:&#47;&#47;time.geekbang.org，<br>有个疑问，这一块不是通过301或302返回带协议的地址然后替换的么？是通过地址栏规则合成的？<br>比如baidu.com，我看就没有3xx返回的location，而在是键入baidu.com，直接就显示baidu.com了，这一块不是很明白，请老师讲一下","like_count":0},{"had_liked":false,"id":123722,"user_name":"123","can_delete":false,"product_type":"c1","uid":1623822,"ip_address":"","ucode":"80F4A565EB55C3","user_header":"https://static001.geekbang.org/account/avatar/00/18/c7/0e/6692c712.jpg","comment_is_top":false,"comment_ctime":1565747556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565747556","product_id":100033601,"comment_content":"curl -I https:&#47;&#47;time.geekbang.org&#47;<br>curl: (35) schannel: next InitializeSecurityContext failed: Unknown error (0x80092013) - 由于吊销服务器已脱机，吊销功能 无法检查吊销。<br><br>请问这个怎么解决","like_count":0},{"had_liked":false,"id":123651,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1565740911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565740911","product_id":100033601,"comment_content":"1. 用户输入 URL <br>2. 浏览器检查是不是合法的 URL，如果是会添加 HTTP 协议前缀，如果不是会调用默认的搜索引擎生成新的 URL<br>3. 浏览器进程会将 URL 发送给网络进程<br>4. 网络进程会进行 HTTP 请求操作，大概流程是通过 URL 在本地缓存或者 DNS 处获得 IP 地址和端口号，然后去到缓存查看有没有要查找的资源，如果有直接调用，没有则继续发送请求到服务器，中间如果有重定向，则继续在新的 URL 上继续请求<br>5. 收到服务器响应后，浏览器进程会发送一个 “提交文档” 的消息到渲染进程，渲染进程收到消息后会建立和网络进程的数据接收管道<br>6. 当渲染进程接收到完整文件和数据后，会发送 “确认提交” 到浏览器进程<br>7. 浏览器进程会更新页面状态，包括地址栏、历史状态栏、安全栏以及 web 页面，渲染进程开始渲染","like_count":0},{"had_liked":false,"id":123519,"user_name":"sunshineling","can_delete":false,"product_type":"c1","uid":1543564,"ip_address":"","ucode":"7E8E03C8568112","user_header":"https://static001.geekbang.org/account/avatar/00/17/8d/8c/ec40964b.jpg","comment_is_top":false,"comment_ctime":1565691626,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1565691626","product_id":100033601,"comment_content":"用户通过浏览器进程输入数据，网络进程收到输入的数据后会根据IP、端口和请求的URI构建请求，如果缓存<br>\t中存在则立即返回，如果不存在会在TCP队列未满时创建新的TCP连接发起http请求。之后浏览器准备好数据<br>\t给渲染进程，渲染进程收到返回数据后进行页面解析和子资源加载，加载完成后通知到浏览器进程整个流程结束。","like_count":0},{"had_liked":false,"id":123483,"user_name":"羽蝶曲","can_delete":false,"product_type":"c1","uid":1337216,"ip_address":"","ucode":"FEA9FB7F321874","user_header":"https://static001.geekbang.org/account/avatar/00/14/67/80/dae518d2.jpg","comment_is_top":false,"comment_ctime":1565685264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565685264","product_id":100033601,"comment_content":"请问老师，我刚才从https:&#47;&#47;flutterchina.club&#47;layout&#47;打开https:&#47;&#47;flutterchina.club&#47;layout&#47;#介绍这个页面，发现两个页面并不是共用一个进程，是为什么呢？要不要同一个站点下的页面共用一个进程是可以自己配置的吗？","like_count":0},{"had_liked":false,"id":123455,"user_name":"卡卡颂","can_delete":false,"product_type":"c1","uid":1374291,"ip_address":"","ucode":"788FC1B1A8BEF4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/53/0ceec017.jpg","comment_is_top":false,"comment_ctime":1565679153,"is_pvip":false,"replies":[{"id":"45509","content":"赞，可以结合后面的05 06两节吧渲染流程也串起来","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565825870,"ip_address":"","comment_id":123455,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565679153","product_id":100033601,"comment_content":"导航流程<br><br>1. 用户输入阶段：<br>\t处理输入，如果是 关键词 调用 默认搜索引擎处理，如果是 url 通过 ipc 传输给 网络进程<br><br>2. URL请求阶段：<br>    1. 本地是否缓存资源，有缓存直接返回缓存资源。没有缓存进入网络请求阶段。<br>    2. 如果没有DNS缓存，则解析DNS获得目标IP地址。如果是HTTPS需要建立TLS连接。<br>    3. 通过IP地址和端口与目标服务器建立TCP连接。成功后开始构建请求行、请求头（附带域下的COOKIE），向服务器发送构建的信息。<br>    4. 服务器获得信息后，会构建响应信息，发给网络进程。<br>3. 解析响应阶段：<br>    1. 解析状态码，如果是301 302，从响应头从获取LOACATION 重新发起请求。如果状态码 200，继续解析响应头。<br>    2. 解析 Content-Type ，判断数据类型，交给不同进程处理(ex: application&#47;octet-stream 交给下载管理器处理，text&#47;html 交给渲染进程)<br>4. 准备渲染进程阶段：<br>    1. 如果打开新页面，开新的渲染进程<br>    2. 如果从A页面打开B页面，且 A、B协议相同，根域名相同，则B复用A的渲染进程。<br>5. 提交文档阶段：<br>    1. 浏览器进程发送“提交文档”消息给网络进程，网络进程将请求体发送给渲染进程。<br>    2. 提交完成后渲染进程返回“确认提交”给浏览器进程，浏览器进程更新前进／后退，tab图标，地址栏URL，web页面。<br>6. 渲染阶段<br>","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462682,"discussion_content":"赞，可以结合后面的05 06两节吧渲染流程也串起来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565825870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123453,"user_name":"卡卡颂","can_delete":false,"product_type":"c1","uid":1374291,"ip_address":"","ucode":"788FC1B1A8BEF4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/53/0ceec017.jpg","comment_is_top":false,"comment_ctime":1565679102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565679102","product_id":100033601,"comment_content":"导航流程<br><br>1. 用户输入阶段：<br>\t处理输入，如果是 关键词 调用 默认搜索引擎处理，如果是 url 通过 ipc 传输给 网络进程<br><br>2. URL请求阶段：<br>    1. 本地是否缓存资源，有缓存直接返回缓存资源。没有缓存进入网络请求阶段。<br>    2. 如果没有DNS缓存，则解析DNS获得目标IP地址。如果是HTTPS需要建立TLS连接。<br>    3. 通过IP地址和端口与目标服务器建立TCP连接。成功后开始构建请求行、请求头（附带域下的COOKIE），向服务器发送构建的信息。<br>    4. 服务器获得信息后，会构建响应信息，发给网络进程。<br>3. 解析响应阶段：<br>    1. 解析状态码，如果是301 302，从响应头从获取LOACATION 重新发起请求。如果状态码 200，继续解析响应头。<br>    2. 解析 Content-Type ，判断数据类型，交给不同进程处理(ex: application&#47;octet-stream 交给下载管理器处理，text&#47;html 交给渲染进程)<br>4. 准备渲染进程阶段：<br>    1. 如果打开新页面，开新的渲染进程<br>    2. 如果从A页面打开B页面，且 A、B协议相同，根域名相同，则B复用A的渲染进程。<br>5. 提交文档阶段：<br>    1. 浏览器进程发送“提交文档”消息给网络进程，网络进程将请求体发送给渲染进程。<br>    2. 提交完成后渲染进程返回“确认提交”给浏览器进程，浏览器进程更新前进／后退，tab图标，地址栏URL，web页面。<br>6. 渲染阶段<br>","like_count":0},{"had_liked":false,"id":123375,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1161437,"ip_address":"","ucode":"BB78C2B9B44D36","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/dd/d729557f.jpg","comment_is_top":false,"comment_ctime":1565664103,"is_pvip":false,"replies":[{"id":"45307","content":"Chrome支持使用JavaScript来写连接代理服务器脚本，又称为在线pac代理脚本，pac脚本具体什么样子你可以搜索“PAC代理脚本”，总之使用pac代理脚本可以实现一些那啥的事。<br><br>刚开始的时候啊，Chrome是在浏览器进程里面解析pac代理脚本的，由于是JavaScript脚本，所有需要在浏览器进程里面引入V8，不过把V8运行在浏览器进程似乎不太好，于是Chrome团队后来就把这个功能独立出来一个进程了，这个进程就叫着“Utility: V8 Proxy Resolver”。<br><br>英文好的话可以看他们提供的官方文档：https:&#47;&#47;docs.google.com&#47;document&#47;d&#47;1n5hr4KJhZl2A4MicTfmyiHPdiKp7kmUoWXnRBN8SrZE&#47;edit#","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565694673,"ip_address":"","comment_id":123375,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565664103","product_id":100033601,"comment_content":"请问老师, Utility: V8 Proxy Resolver是渲染进程吗","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462642,"discussion_content":"Chrome支持使用JavaScript来写连接代理服务器脚本，又称为在线pac代理脚本，pac脚本具体什么样子你可以搜索“PAC代理脚本”，总之使用pac代理脚本可以实现一些那啥的事。\n\n刚开始的时候啊，Chrome是在浏览器进程里面解析pac代理脚本的，由于是JavaScript脚本，所有需要在浏览器进程里面引入V8，不过把V8运行在浏览器进程似乎不太好，于是Chrome团队后来就把这个功能独立出来一个进程了，这个进程就叫着“Utility: V8 Proxy Resolver”。\n\n英文好的话可以看他们提供的官方文档：https://docs.google.com/document/d/1n5hr4KJhZl2A4MicTfmyiHPdiKp7kmUoWXnRBN8SrZE/edit#","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565694673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123223,"user_name":"gallifrey","can_delete":false,"product_type":"c1","uid":1366631,"ip_address":"","ucode":"A4E5E0E7E2DEF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/da/67/73a0c754.jpg","comment_is_top":false,"comment_ctime":1565631449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565631449","product_id":100033601,"comment_content":"1 浏览器主进程提交url或包含关键字的url给网络进程<br>2 网络进程请求服务器，返回响应头行体，判断是否需要重定向<br>3 网络进程将页面类型的响应资源提交给渲染进程<br>4 渲染进程渲染结束，加载完毕","like_count":0}]}