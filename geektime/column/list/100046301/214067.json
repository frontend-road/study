{"id":214067,"title":"13 | 高可用架构案例（一）：如何实现O2O平台日订单500万？","content":"<p>你好，我是王庆友。在上一讲中，我和你介绍了高可用系统的设计原则和常见手段。今天呢，我会通过一个实际的案例，告诉你具体如何落地一个高可用的架构，让你能够深入理解和运用这些高可用手段。</p><h2>项目背景介绍</h2><p>先说下项目的背景。这是一个小程序点餐平台，用户在小程序上点餐并支付完成后，订单会先落到订单库，然后进一步推送到门店的收银系统；收银系统接单后，推送给后厨系统进行生产；同时返回小程序取餐码，用户可以凭取餐码去门店取餐或收取外卖。</p><p>这个项目服务于一家大型的餐饮公司，公司在全国有大量的门店，他们准备搞一个长期的大型线上促销活动，促销的力度很大：用户可以在小程序上先领取优惠券，然后凭券再支付1元，就可以购买价值数十元的套餐。</p><p>结合以往的经验，以及这次的促销力度，我们预计在高峰时，前端小程序请求将会达到<strong>每秒10万QPS</strong>，并且预计<strong>首日的订单数量会超过500万</strong>。在这种高并发的情况下，我们为了保证用户的体验，<strong>系统整体的可用性要达到99.99%</strong>。</p><p>你可以先了解一下这个点餐平台的具体架构：</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/de/f0767d06f06e5166687d54b2c4b7a4de.jpg?wh=2283*1370\" alt=\"\"></p><p>这里呢，我具体说下系统主要的调用过程，以便于你更好地理解它：</p><ol>\n<li>小程序前端通过Nginx网关，访问小程序服务端；</li>\n<li>小程序服务端会调用一系列的基础服务，完成相应的请求处理，包括门店服务、会员服务、商品服务、订单服务、支付服务等，每个服务都有自己独立的数据库和Redis缓存；</li>\n<li>订单服务接收到新订单后，先在本地数据库落地订单，然后通过MQ同步订单给OMS履单中心；</li>\n<li>门店的收银系统通过HTTP远程访问云端的OMS履单中心，拉取新订单，并返回取餐码给OMS，OMS再调用小程序订单服务同步取餐码；</li>\n<li>小程序前端刷新页面，访问服务端获得取餐码，然后用户可以根据取餐码到门店取餐或等待外卖。</li>\n</ol><!-- [[[read_end]]] --><h2>高可用系统改造措施</h2><p>我在前面也介绍了，这次活动的促销力度很大，高峰期流量将达到平时的数十倍，这就要求系统能够在高并发的场景下，保证高可用性。</p><p>所以，基于访问量、日订单量和可用性的指标，我们对原有系统进行了一系列改造，最终顺利地实现了首日500万订单，以及在大促期间，系统4个9的可用性目标。这个500万的订单量，也创造了中国单商户线上交易的历史记录。</p><p>在下面的系统架构图中，我标出了具体的改造点，主要有10处，接下来我就给你分别具体介绍一下，你可以通过这些具体的改造措施，来真正理解高可用系统的设计手段。</p><p><img src=\"https://static001.geekbang.org/resource/image/21/4c/218719777ff902f9b26cb88a6187ba4c.jpg?wh=2284*1638\" alt=\"\"></p><h3>前端接入改造</h3><p>这里的前端有两个，C端的小程序和B端的门店收银系统。前端部分主要是对三个点进行改造，包括小程序端的CDN优化、Nginx负载均衡，以及收银端的通信线路备份。</p><ul>\n<li><strong>小程序端的CDN优化</strong></li>\n</ul><p>用户点餐前，需要先浏览商品和菜单，这个用户请求的频率很高，数据流量大，会对服务端造成很大的压力。所以，针对这一点，我们通过CDN供应商，在全国各地构建了多个CDN中心，储存静态的商品数据，特别是图片，这样小程序前端可以就近访问CDN，流量无需通过小程序服务端，缓解了服务端的压力。</p><ul>\n<li><strong>Nginx负载均衡</strong></li>\n</ul><p>这个小程序点餐平台，之前是直接利用云服务商提供的LB，它只有简单的负载均衡能力。为了能应对这次的高并发流量，现在我们独立搭建了数十台的Nginx集群，集群除了负载均衡，还提供限流支持，如果QPS总数超过了10万，前端的访问请求将会被丢弃掉。</p><p>另外，Nginx在这里还有一个好处，就是可以实时提供每个接口的访问频率和网络带宽占用情况，能够起到很好的接入层监控功能。</p><blockquote>\n<p><strong>补充说明：</strong>一台Nginx一般可以支持数万的并发，本来这里无需这么多台Nginx，这是因为云服务商对单个LB的接入有网络带宽的限制，所以我们要通过提升Nginx的数量，来保证接入有足够的带宽。</p>\n</blockquote><ul>\n<li><strong>收银端的通信线路备份</strong></li>\n</ul><p>门店的收银系统会通过前置代理服务器，来访问云端的OMS系统，这个代理服务器部署在商户自己的IDC机房，原来只通过电信线路和云端机房打通。在这次改造中，我们<strong>增加了移动线路</strong>，这样当电信主线路出问题时，系统就可以快速地切换到移动线路。</p><h3>应用和服务的水平扩展</h3><p>首先，针对小程序服务端的部署，我们把实例数从十几台提升到了100台，水平扩展它的处理能力。在上面的架构图中，你可以看到，小程序服务端依赖了7个基础服务，每个基础服务也做了相应的水平扩展，由于应用和基础服务都是无状态的，因此我们很容易扩充。</p><p>这里的基础服务是Java开发的，原来是用虚拟机方式部署的，现在我们把基础服务全部迁移到了<strong>容器环境</strong>，这样在提升资源利用率的同时，也更好地支持了基础服务的弹性扩容。</p><h3>订单水平分库</h3><p>在大促情况下，下单高峰期，订单主库的<strong>写访问</strong>频率很高，一个订单会对应6~7次的写操作，包括了创建新订单和订单状态变更；订单的<strong>读操作</strong>，我们之前通过一主多从部署和读写分离，已经得到了支持。</p><p>但负责写入的主库只有一个实例，所以这次我们通过<strong>订单的水平分库</strong>，扩充了订单主库的实例数，改造后，我们有4个主库来负责订单数据写入。数据库的配置，也从原来的8核16G提升到了16核32G，这样我们通过硬件的垂直扩展，进一步提升了数据库的处理能力。</p><p>这里的订单水平分库在实现上比较简单，我们是<strong>通过订单ID取模进行分库，基于进程内的Sharding-JDBC技术，实现了数据库的自动路由</strong>。后面的课程中，我会专门介绍电商平台的订单水平分库，它会更加复杂，到时你可以做个比较，如果有需要的话，也可以在实际项目参考落地。</p><h3>异步化处理</h3><p>你可以看到，在前台订单中心和后台OMS之间，我们需要同步订单数据，所以这两者是紧密耦合的。不过这里，我们通过<strong>消息系统</strong>对它们进行了解耦。 一方面，前台下单要求比较快，后台OMS的订单处理能力比较弱（OMS库没有进行水平分库），通过消息的异步化处理，我们实现了对订单流量的削峰；另一方面，如果OMS有问题，以异步的方式进行数据同步，也不会影响前台用户下单。</p><p>还有在小程序服务端，在用户支付完成或者后台生成取餐码后，我们会以<strong>微信消息</strong>的方式通知用户，这个在代码中，也是通过异步方式实现的，如果微信消息发送不成功，用户还是可以在小程序上看到相关信息，不影响用户取餐。</p><h3>主动通知，避免轮询</h3><p>在原来的架构中，前台小程序是通过轮询服务端的方式，来获取取餐码；同样，商户的收银系统也是通过轮询OMS系统拉取新订单，这样的收银系统有上万个，每隔10s就会拉取一次。这种盲目轮询的方式，不但效率低，而且会对服务端造成很大的压力。</p><p>经过改造后，我们落地了<strong>消息推送中心</strong>，收银系统通过Socket方式，和推送中心保持长连接。当OMS系统接收到前台的新订单后，会发送消息到消息推送中心；然后，收银系统就可以实时地获取新订单的消息，再访问OMS系统拉取新订单。为了避免因消息推送中心出问题（比如消息中心挂掉了），导致收银系统拿不到新订单，收银系统还保持对OMS系统的轮询，但频率降低到了1分钟一次。</p><p>同理，小程序前端会通过Web Socket方式，和消息推送中心保持长连接。当OMS系统在接收到收银系统的取餐码后，会发送消息到消息推送中心。这样，小程序前端可以及时地获取取餐码信息。</p><h3>缓存的使用</h3><p>我们知道，缓存是提升性能十分有效的工具。这里的改造，就有两个地方使用了缓存。</p><ul>\n<li>当收银系统向OMS拉取新订单时，OMS不是到数据库里查询新订单，而是把新订单先保存在Redis队列里，OMS通过直接查询Redis，把新订单列表返回给收银系统。</li>\n<li>在商品服务中，菜单和商品数据也是放在了Redis中，每天凌晨，我们通过定时任务，模仿前端小程序，遍历访问每个商品数据，实现对缓存的预刷新，进一步保证缓存数据的一致性，也避免了缓存数据的同时失效，导致缓存雪崩。</li>\n</ul><h3>一体化监控</h3><p>在前面各个节点可用性优化的基础上，我们也在系统的监控方面做了很多强化。除了常规的Zabbix做系统监控、CAT做应用监控、拉订单曲线做业务监控以外，我们还对系统实现了一体化的监控。</p><p>在这里，所有的节点都在一个页面里显示，包括Web应用、Redis、MQ和数据库，页面也会体现节点之间的上下游关系。<strong>我们通过采集节点的状态数据，实时监测每个节点的健康程度，并且用红黄绿三种颜色，表示每个节点的健康状况。</strong>这样，我们就可以非常直观地识别出，当前的哪些节点有问题。</p><p>监控的效果如下图所示，在下一讲中，我就会为你具体地介绍这个监控系统。</p><p><img src=\"https://static001.geekbang.org/resource/image/ba/b0/ba4c6d94de2121ceef0e7cb579c2d8b0.jpg?wh=1854*864\" alt=\"\"></p><p>在实践中，这套监控系统也确实发挥了巨大的作用。很多时候，在系统问题还没有变得严重之前，我们就能够识别出来，并能进行主动干预。</p><p>比如说，小程序服务端的部分节点有时候会假死，这在Zabbix监控里往往看不出来，但在我们的监控页面中，这些节点就会飘红，我们就可以通过重启节点来快速恢复。还有好几次，系统有大面积的节点出问题了，我们通过节点的上下游关系，很容易地定位出了真正出现问题的地方，避免所有人一窝蜂地扑上去排查问题。</p><p>除了这里我介绍的优化措施以外，我们也为系统可能出问题的地方做了各种预案。比如说，我们保留了部分虚拟机上部署的基础服务实例，这样如果容器出现了问题，基础服务可以快速切回到虚拟机上的实例。</p><h2>系统改造小结</h2><p>到这里为止，系统主要的优化措施就介绍完了，<strong>但我们是如何知道要配置多少个节点，有没有达到预定的效果呢？</strong></p><p>对于这个问题，我们的做法是，<strong>按照10万QPS和99.99%的可用指标要求，通过大量的压测来确定的。</strong></p><ul>\n<li>首先，我们对每个节点进行接口压测，做各种性能优化，确定好需要的机器数量；</li>\n<li>然后，我们利用JMeter，模拟小程序前端发起混合场景的调用，以此检验系统的抗压能力，以及在压力下，系统的可用性是否达到了预定的要求；</li>\n<li>最后，我们在生产环境中根据压测环境，按照服务器1:1的数量进行部署，保证性能不打折，最终这个小程序下单平台总的机器规模，也达到了数百台的量级。</li>\n</ul><p>这里，我想结合着上一讲和你介绍的架构原则，来让你更深刻地理解这次系统可用性的改造过程。</p><p>从正面保障的角度来看，我们首先在各个环节都<strong>避免了单点</strong>，包括远程通信线路，这样能保证任意一个节点出了问题，都有其他实例可以顶上去；其次，我们通过节点的<strong>垂直扩展和水平扩展</strong>，大幅度提升了系统的处理能力，包括应用、服务和数据库的扩展；我们也有效地利用了<strong>Redis缓存</strong>，对高频的订单和菜单数据的读取进行了优化。</p><p>在<strong>柔性处理</strong>方面，我们通过异步处理，来优化系统的性能和避免大流量的直接冲击，包括使用消息系统解耦前台下单系统和后台OMS系统，以及通过及时的消息推送，避免前端盲目轮询服务端。</p><p>同时，我们在<strong>系统接入层</strong>，通过Nginx进行限流，为系统的可用性进行兜底，这样在流量超过预估时，能够有效地避免后端系统被冲垮。</p><p>最后，我们通过<strong>强有力的监控手段</strong>，可以实时全面地了解系统运行状况，随时为异常情况做好准备。</p><h2>总结</h2><p>今天，我与你分享了一个实际的O2O点餐平台，在面对高并发流量时，我们是如何对系统进行升级改造，保证系统的高可用的。相信你在上一讲理论的基础上，通过进一步结合实际的场景，能够深入地理解如何运用各种高可用的手段了。</p><p>高可用的处理方式有很多，我这里给你介绍的也只是一部分，希望你能够在实践中，结合具体的业务场景，灵活地落地高可用的设计。</p><p>不过，无论我们采取多么周密的措施，总会有些地方我们没有考虑到，系统可能会出现各种各样的问题，这个时候对系统进行全面的监控就非常重要了。下一讲我会就如何做好系统的监控，和你做详细的介绍。</p><p><strong>最后，给你留一道思考题：</strong>你当前的系统有单点吗？这个单点有没有出过问题呢？</p><p>欢迎你在留言区与大家分享你的问题和思考，我们一起讨论。如果这节课对你有帮助，也欢迎你把它分享给你的朋友。感谢阅读，我们下期再见。</p>","comments":[{"had_liked":false,"id":191010,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1584717363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"108958899763","product_id":100046301,"comment_content":"这讲最大的价值就是让普通公司的工程师见识到了大流量的应对架构设计，有了一个总体的轮廓和方向。","like_count":26},{"had_liked":false,"id":191748,"user_name":"zeor","can_delete":false,"product_type":"c1","uid":1888276,"ip_address":"","ucode":"20DA6DB3527D21","user_header":"https://static001.geekbang.org/account/avatar/00/1c/d0/14/50782491.jpg","comment_is_top":false,"comment_ctime":1584794215,"is_pvip":false,"replies":[{"id":"73472","content":"办法很多，这里举两个例子：<br>悲观锁，<br>    select for update  提前锁定库存<br>乐观锁 <br>     库存记录有个字段标识它的版本，读库存的时候，获取版本信息，比如1。后面更新的时候，检查记录的版本是不是还是1，如果不是，则写失败，如果是，则写成功，同时更新版本为2。","user_name":"作者回复","comment_id":191748,"uid":"1268522","ip_address":"","utype":1,"ctime":1584802640,"user_name_real":"王庆友"}],"discussion_count":3,"race_medal":0,"score":"27354597991","product_id":100046301,"comment_content":"老师您好 请问下单时怎么保证超卖 请指教具体方案和实现","like_count":7,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488247,"discussion_content":"办法很多，这里举两个例子：\n悲观锁，\n    select for update  提前锁定库存\n乐观锁 \n     库存记录有个字段标识它的版本，读库存的时候，获取版本信息，比如1。后面更新的时候，检查记录的版本是不是还是1，如果不是，则写失败，如果是，则写成功，同时更新版本为2。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584802640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1888276,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/d0/14/50782491.jpg","nickname":"zeor","note":"","ucode":"20DA6DB3527D21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212184,"discussion_content":"谢谢老师的回答，我的意思是说，在数据库加锁，在并发量很大的情况下，1.这样加锁会不会出现数据库的瓶颈，2.如果分开多个库是否可行，怎么保证分开多个库数据的一至性和数据的实时性（比如两个写库），","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584944011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1195557,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3e/25/dbf3e7ec.jpg","nickname":"郭义","note":"","ucode":"994B529DAC41A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584287,"discussion_content":"可以把库存数据放在redis中，促销期间不操作数据库，直接操作redis","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660723239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190901,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1584707449,"is_pvip":false,"replies":[{"id":"73397","content":"一种是把redis作为前置数据库，如果下单时，缓存写入失败，等于业务失败。当缓存写入后，如果缓存崩溃，这个问题不大，可以通过持久化缓存数据，重启后恢复。<br><br>如果只是把redis当做缓存来用，我比较推荐写db的时候立即更新缓存或删除缓存，保证缓存和db数据的一致性。","user_name":"作者回复","comment_id":190901,"uid":"1268522","ip_address":"","utype":1,"ctime":1584786330,"user_name_real":"王庆友"}],"discussion_count":5,"race_medal":0,"score":"23059543929","product_id":100046301,"comment_content":"下单后，订单放到redis中，如果redis数据写入失败？有做补偿吗?需要请教老师你们redis和数据库之间的数据怎么保证一致性？如果不保持一致性那其他系统是否就拉取不到订单？","like_count":5,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488075,"discussion_content":"一种是把redis作为前置数据库，如果下单时，缓存写入失败，等于业务失败。当缓存写入后，如果缓存崩溃，这个问题不大，可以通过持久化缓存数据，重启后恢复。\n\n如果只是把redis当做缓存来用，我比较推荐写db的时候立即更新缓存或删除缓存，保证缓存和db数据的一致性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584786330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033728,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","nickname":"正在减肥的胖籽。","note":"","ucode":"99E2E4DF599236","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210878,"discussion_content":"多谢老师回复，文章中的你们是写入到缓存中就算成功？如果是那什么时候落地到DB中？极端情况下，如果缓存崩溃有1秒钟的时间没有持久化？那这种业务怎么处理？是人工吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584786877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033728,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","nickname":"正在减肥的胖籽。","note":"","ucode":"99E2E4DF599236","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273710,"discussion_content":"redis应该是做了高可用的,并且可能是先写完db然后更新缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590491548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":210878,"ip_address":""},"score":273710,"extra":""},{"author":{"id":1254392,"avatar":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","nickname":"💢 星星💢","note":"","ucode":"A402B765222C35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275464,"discussion_content":"如果有多个并发写操作，缓存不是还是会出现不一致的情况么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590718042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":273710,"ip_address":""},"score":275464,"extra":""},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254392,"avatar":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","nickname":"💢 星星💢","note":"","ucode":"A402B765222C35","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275610,"discussion_content":"我更新完db后主动更新缓存，前端请求查询数据库后不加载缓存，不是旁路缓存的思路，因为这个目的是缓存最近的订单，不是旁路缓存应用的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590739890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":275464,"ip_address":""},"score":275610,"extra":""}]}]},{"had_liked":false,"id":190499,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1584665052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23059501532","product_id":100046301,"comment_content":"这里讲，很棒，都是硬核","like_count":5},{"had_liked":false,"id":191780,"user_name":"lyshrine","can_delete":false,"product_type":"c1","uid":1058278,"ip_address":"","ucode":"497551F047A5C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/e6/a69cff76.jpg","comment_is_top":false,"comment_ctime":1584796376,"is_pvip":false,"replies":[{"id":"73471","content":"Central Application Tracking，一个开源的应用监控组件，国内用的比较广泛。","user_name":"作者回复","comment_id":191780,"uid":"1268522","ip_address":"","utype":1,"ctime":1584802417,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"18764665560","product_id":100046301,"comment_content":"请问老师，CAT的全程是什么？","like_count":4,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488255,"discussion_content":"Central Application Tracking，一个开源的应用监控组件，国内用的比较广泛。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584802417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190556,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1584668550,"is_pvip":false,"replies":[{"id":"73398","content":"监控数据一般有收集，分析和告警的过程，你这里缺乏后端的监控数据的分析系统，需要结合各种规则做综合判断后才告警。","user_name":"作者回复","comment_id":190556,"uid":"1268522","ip_address":"","utype":1,"ctime":1584786482,"user_name_real":"王庆友"}],"discussion_count":2,"race_medal":0,"score":"18764537734","product_id":100046301,"comment_content":"很期待老师说的监控提前预警的方案<br>老师我请教个和监控报警相关的问题，就是我们自己通过 prometheus+grafana 搭建了一套简单的业务监控报警，主要通过在代码中埋点，现在报警短信有点多，但里面有些报警也并不是很严重，所以就忽略了，但有时又会错过严重的报警短信，从而影响线上问题，所以后面把报警的阈值提高了，但感觉这样又有风险。<br>想听听老师对监控报警这的最佳实战，比如怎么实现监控报警的生命周期管理？怎么通过程序化的方式来分析报警，减少人力消耗等","like_count":4,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488003,"discussion_content":"监控数据一般有收集，分析和告警的过程，你这里缺乏后端的监控数据的分析系统，需要结合各种规则做综合判断后才告警。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584786482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007924,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/61/34/368ef8ad.jpg","nickname":"Hero","note":"","ucode":"1CC29BC1038DBE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287894,"discussion_content":"报警做分级处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593582120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221402,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1590492450,"is_pvip":false,"replies":[{"id":"81865","content":"1. 我们用的是云主机，供应商提供了K8s+docker环境，我们把服务部署在这个环节就可以，总体上资源利用率会更高。<br>2. oms 也部署了更多机器<br>3. lvs部署和运维起来比较复杂，别埋技术坑，nginx比较容易上手，效果也不错。","user_name":"作者回复","comment_id":221402,"uid":"1268522","ip_address":"","utype":1,"ctime":1590677564,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"14475394338","product_id":100046301,"comment_content":"感谢老师的分享！很少见到这个量级web全链路改造的分析,收获很大，但是还是有几个问题不太明白<br>1.将应用服务放入docker中,部署的设备有没有水平扩展或者扩容?还是只是用的原来的设备不过是docker部署了更多份?<br>2.oms需要消费的消息会变多,oms也扩容了吧?<br>3.机器规模已经达到了数百台量级,前端的请求分发,为什么没有先使用lvs进行四层以下的分发,是因为qps还不够大吗?<br>","like_count":3,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496447,"discussion_content":"1. 我们用的是云主机，供应商提供了K8s+docker环境，我们把服务部署在这个环节就可以，总体上资源利用率会更高。\n2. oms 也部署了更多机器\n3. lvs部署和运维起来比较复杂，别埋技术坑，nginx比较容易上手，效果也不错。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590677564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205717,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1586707588,"is_pvip":false,"replies":[{"id":"76920","content":"很好的思考。<br>1. 小程序在完成下单支付后，会和推送中心建立长连接，这时它会有返回取餐码的预期，获取到取餐码后断掉连接，整个连接的时间一般在几秒。<br>2. 门店的收银系统通过中心的代理服务器访问云端，这个代理服务器部署在商户自己的IDC机房，这个代理服务器和云厂商的有双线路。POS收银系统不是浏览器界面，是一个桌面应用。","user_name":"作者回复","comment_id":205717,"uid":"1268522","ip_address":"","utype":1,"ctime":1586747783,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"10176642180","product_id":100046301,"comment_content":"老师您好，有两个问题请教！<br>第一个是文中提到小程序前端需要跟推送中心保持长连接，那如何有千万的用户，那服务端要保持上千万的长连接，这一块会不会有问题？或者需要做什么优化处理？<br>第二个是收银系统如果是一个BS架构的客户端，那是不是就可以跟履单系统部署在同一个云厂商的服务器上，因为是同个云厂商的服务器，是不是就不需要考虑移动和电信的双线路了，不知道理解是否有问题？<br>请老师指正！<br>","like_count":2,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491568,"discussion_content":"很好的思考。\n1. 小程序在完成下单支付后，会和推送中心建立长连接，这时它会有返回取餐码的预期，获取到取餐码后断掉连接，整个连接的时间一般在几秒。\n2. 门店的收银系统通过中心的代理服务器访问云端，这个代理服务器部署在商户自己的IDC机房，这个代理服务器和云厂商的有双线路。POS收银系统不是浏览器界面，是一个桌面应用。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586747783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200071,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1585539589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10175474181","product_id":100046301,"comment_content":"对于大型的分布式系统，没有一套好用的监控系统，就等于盲人摸象","like_count":2},{"had_liked":false,"id":253693,"user_name":"刺客","can_delete":false,"product_type":"c1","uid":1098916,"ip_address":"","ucode":"607ABD2F2B5898","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/a4/b9b12d71.jpg","comment_is_top":false,"comment_ctime":1602834097,"is_pvip":true,"replies":[{"id":"92920","content":"谢谢夸奖，坐标上海，有兴趣勾兑下，哈哈。","user_name":"作者回复","comment_id":253693,"uid":"1268522","ip_address":"","utype":1,"ctime":1603172987,"user_name_real":"王庆友"}],"discussion_count":2,"race_medal":0,"score":"5897801393","product_id":100046301,"comment_content":"硬核，非常棒，贴近实战，要多读几遍，有机会和老师做同事那将是人生幸事呀","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507146,"discussion_content":"谢谢夸奖，坐标上海，有兴趣勾兑下，哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603172987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098916,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a4/b9b12d71.jpg","nickname":"刺客","note":"","ucode":"607ABD2F2B5898","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318215,"discussion_content":"我只能遥望大佬了，我在北京，希望以后有机会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603680831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200203,"user_name":"阿固","can_delete":false,"product_type":"c1","uid":1064149,"ip_address":"","ucode":"F16B99FED58993","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2PtNr4sjKLYNnibicnwWcZicmQbTguUK9ZaCVBLYmiaSYFRjRrUP08jHO9N7KB2adDw87ywccexMJh8yCQ84q5gEzg/132","comment_is_top":false,"comment_ctime":1585557441,"is_pvip":false,"replies":[{"id":"74937","content":"Nginx配置细节，专业的运维会比较清楚，这里我不敢误导你。","user_name":"作者回复","comment_id":200203,"uid":"1268522","ip_address":"","utype":1,"ctime":1585568080,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"5880524737","product_id":100046301,"comment_content":"老师好！对Nginx这块的部署有点拿捏不定，我想到两方案：<br>方案一<br>1.每个有公网IP的服务器上安装Nginx（upstream配置相同）<br>2.在DNS域名商指定步骤1中的公网IP指向一个域名<br><br>方案二<br>1.内网部署Nginx，使用keepalived做高可用集群<br>2.在DNS域名商指一个公网IP指向域名<br>老师会从哪些角度考虑，能详细讲一下请求从域名到Nginx集群这一段的架构吗？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489959,"discussion_content":"Nginx配置细节，专业的运维会比较清楚，这里我不敢误导你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585568080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196603,"user_name":"小洛","can_delete":false,"product_type":"c1","uid":1005062,"ip_address":"","ucode":"227EC21891012B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/06/ea49b29d.jpg","comment_is_top":false,"comment_ctime":1585296841,"is_pvip":false,"replies":[{"id":"74466","content":"是需要很多个消费者，这是业务功能，不是纯粹数据同步，不能订阅binlog，binlog太底层了意味强耦合。<br>不是订单中心所有数据变动，oms都会关心，比如本来就是oms反馈取餐码给订单中心，oms自然不关心binlog。","user_name":"作者回复","comment_id":196603,"uid":"1268522","ip_address":"","utype":1,"ctime":1585318239,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"5880264137","product_id":100046301,"comment_content":"请教老师您几个问题：<br>1、OMS履单中心的作用，因为我们公司的业务就是推送给消息给收银，这个消息就放在订单服务里面去做了，所以重新部署个OMS履单中心  对后续的业务架构有什么帮助吗？<br>2、因为加了OMS履单中心，同步订单方面 看方案是采用了往MQ里面 写入订单数据 然后再落库吗？如果订单数据量很多几百万   那么OMS是不是要部署很多台机器去消费MQ然后落订单数据，是不是可以直接用订阅binlog 备份数据库就行了？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489341,"discussion_content":"是需要很多个消费者，这是业务功能，不是纯粹数据同步，不能订阅binlog，binlog太底层了意味强耦合。\n不是订单中心所有数据变动，oms都会关心，比如本来就是oms反馈取餐码给订单中心，oms自然不关心binlog。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585318239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195647,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1585209206,"is_pvip":false,"replies":[{"id":"74471","content":"包括系统改造，压测，，做了有3个月。<br>不使用云服务商提供的LB，流量从统一的口子进来后，由Nginx集群接管，再由各个Nginx路由到web应用。","user_name":"作者回复","comment_id":195647,"uid":"1268522","ip_address":"","utype":1,"ctime":1585318808,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"5880176502","product_id":100046301,"comment_content":"请教几个问题:<br>1. nginx和LB那里没看懂，是怎么一种结构关系呢，LB将请求分流到nginx？改造之后有多个LB了，还是改造后没有云服务商的LB了？<br>2. 这么多工作，要在大促前提前多久开始进行？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489134,"discussion_content":"包括系统改造，压测，，做了有3个月。\n不使用云服务商提供的LB，流量从统一的口子进来后，由Nginx集群接管，再由各个Nginx路由到web应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585318808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195365,"user_name":"Skysper","can_delete":false,"product_type":"c1","uid":1058800,"ip_address":"","ucode":"164B3CAF81A7C5","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/f0/06ecce19.jpg","comment_is_top":false,"comment_ctime":1585183828,"is_pvip":false,"replies":[{"id":"74282","content":"每个数据库都是集群部署，1主1备2从","user_name":"作者回复","comment_id":195365,"uid":"1268522","ip_address":"","utype":1,"ctime":1585194566,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"5880151124","product_id":100046301,"comment_content":"数据库分库后 单库有MHA吗？没有就可能存在单点；另外redis 和mq等缓存和事件保障要怎么处理？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489045,"discussion_content":"每个数据库都是集群部署，1主1备2从","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585194566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193975,"user_name":"Geek_0e5f26","can_delete":false,"product_type":"c1","uid":1896365,"ip_address":"","ucode":"E00C63EB05B9F6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLl8N60fn4vYacskrXUQC5Y7PFGL6EDrxb5wwr7EuaADZeOjMd00nyFR5DAOD06S3NVG2EESuicebg/132","comment_is_top":false,"comment_ctime":1585009734,"is_pvip":false,"replies":[{"id":"74014","content":"1. 这里的QPS是小程序前端的混合调用场景，包括首页访问，商品流量，加购物车，下单等，我们会大致分析各个接口的调用比例。<br>2. 然后根据接口的请求和响应数据量，算出网络带宽。<br>3.最后结合混合场景的压测数据，我们可以比较准确地知道带宽占用，最后算出需要部署的Nginx数量。<br>Nginx的部署架构和云服务商的LB有关，我确认好再反馈给你。<br>","user_name":"作者回复","comment_id":193975,"uid":"1268522","ip_address":"","utype":1,"ctime":1585054567,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"5879977030","product_id":100046301,"comment_content":"老师 请教两个问题。问题一：Nginx集群，他们的物理架构是怎么样的，谁来做路由和负载均衡？   问题2：通过提升 Nginx 的数量，来保证接入有足够的带宽。这个带宽量是如何估算的？比如每个用户请求平均大小，再到响应数据平均大小，这个估算过程请您指点一下吧，最好请您分享一下参考值，谢谢老师！","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488717,"discussion_content":"1. 这里的QPS是小程序前端的混合调用场景，包括首页访问，商品流量，加购物车，下单等，我们会大致分析各个接口的调用比例。\n2. 然后根据接口的请求和响应数据量，算出网络带宽。\n3.最后结合混合场景的压测数据，我们可以比较准确地知道带宽占用，最后算出需要部署的Nginx数量。\nNginx的部署架构和云服务商的LB有关，我确认好再反馈给你。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585054567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193803,"user_name":"天天向善","can_delete":false,"product_type":"c1","uid":1108250,"ip_address":"","ucode":"6AE57FB2B15043","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/1a/6ba207a3.jpg","comment_is_top":false,"comment_ctime":1584967562,"is_pvip":true,"replies":[{"id":"74016","content":"小程序服务端本身就100个实例，服务根据情况，实例数量不等。云上对外也是提供统一地址，如果我没记错的话，每台Nginx支持100M流量。","user_name":"作者回复","comment_id":193803,"uid":"1268522","ip_address":"","utype":1,"ctime":1585054780,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"5879934858","product_id":100046301,"comment_content":"每秒10万，能不能再给一些数字，改造后没有用云lb,自建nginx集群，这个云上也是有vip是吗，这个流量是每台机器设多少固定带宽?还有小程序服务端与基础服务共100个实例，还是仅小程序服务端，基础服务当时用了多少实例，另外一个容器大约cpu与内存什么配置","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488667,"discussion_content":"小程序服务端本身就100个实例，服务根据情况，实例数量不等。云上对外也是提供统一地址，如果我没记错的话，每台Nginx支持100M流量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585054780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192552,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1584859603,"is_pvip":false,"replies":[{"id":"73742","content":"这个只是简单连接，实际数据还是通过服务接口获取，几万个连接问题不大，也可以加机器增强处理能力。","user_name":"作者回复","comment_id":192552,"uid":"1268522","ip_address":"","utype":1,"ctime":1584934960,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"5879826899","product_id":100046301,"comment_content":"老师好，消息推送中心通过长连接的方式保持，但是每个长连接都有一定的资源消耗；如果上游的请求过多，这个资源消耗过大的问题怎么处理？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488422,"discussion_content":"这个只是简单连接，实际数据还是通过服务接口获取，几万个连接问题不大，也可以加机器增强处理能力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584934960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190550,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1584668116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879635412","product_id":100046301,"comment_content":"感谢老师的实战经验分享，很干","like_count":1},{"had_liked":false,"id":190452,"user_name":"刘楠","can_delete":false,"product_type":"c1","uid":1120773,"ip_address":"","ucode":"9F19D44CBEE039","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/05/f154d134.jpg","comment_is_top":false,"comment_ctime":1584662258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879629554","product_id":100046301,"comment_content":"规模没这么大，只能想想，学习下","like_count":1},{"had_liked":false,"id":190422,"user_name":"深山小书童","can_delete":false,"product_type":"c1","uid":1079593,"ip_address":"","ucode":"6B5DD3B3D84534","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/29/a90cf777.jpg","comment_is_top":false,"comment_ctime":1584658778,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5879626074","product_id":100046301,"comment_content":"非常棒！一早起来读到干货满满的文章，心情美美哒","like_count":1},{"had_liked":false,"id":359243,"user_name":"杜秀清","can_delete":false,"product_type":"c1","uid":2952514,"ip_address":"上海","ucode":"4D33DD69E8D238","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGiahPncXAMXlRibCVapHxib4V90Pxa56QQr6iatHmHn77YibSibWhdBe9YKxrD5ria9ZI4JfFjD1SecAmg/132","comment_is_top":false,"comment_ctime":1665370252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665370252","product_id":100046301,"comment_content":"我们现在硬负载是单点，采用单台F5","like_count":0},{"had_liked":false,"id":318104,"user_name":"流云追风","can_delete":false,"product_type":"c1","uid":2611950,"ip_address":"","ucode":"16D738406CB191","user_header":"https://static001.geekbang.org/account/avatar/00/27/da/ee/63090718.jpg","comment_is_top":false,"comment_ctime":1635152537,"is_pvip":false,"replies":[{"id":"120385","content":"监控只能及时发现问题，不能避免流量大，系统不出问题","user_name":"作者回复","user_name_real":"编辑","uid":"1268522","ctime":1641976421,"ip_address":"","comment_id":318104,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635152537","product_id":100046301,"comment_content":"如何对流量和并发有个较可靠的预估,未上云的IDC的应用,如何及时水平扩展。就是当资源有限的时候,还是要多靠监控吧","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545492,"discussion_content":"监控只能及时发现问题，不能避免流量大，系统不出问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641976421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315938,"user_name":"ezekiel","can_delete":false,"product_type":"c1","uid":1158795,"ip_address":"","ucode":"AB4AB6FA8612D8","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/8b/43ce01ca.jpg","comment_is_top":false,"comment_ctime":1634062893,"is_pvip":false,"replies":[{"id":"120389","content":"1. 前端小程序下单和履单系统是通过MQ去抗流量和解耦，这个已经是用户的正式订单了，如果只是下单请求，不适合放到MQ，再取MQ消息生成订单。一方面，用户需要及时反馈；另一方面增加出错可能。<br>2. 收银系统有升级程序，可以自动下发修改和升级","user_name":"作者回复","user_name_real":"编辑","uid":"1268522","ctime":1641977011,"ip_address":"","comment_id":315938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634062893","product_id":100046301,"comment_content":"1.为什么不在小程序和后端之间用MQ去抗？<br>2.收银系统是如何更新的？有自己的升级程序吗？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545497,"discussion_content":"1. 前端小程序下单和履单系统是通过MQ去抗流量和解耦，这个已经是用户的正式订单了，如果只是下单请求，不适合放到MQ，再取MQ消息生成订单。一方面，用户需要及时反馈；另一方面增加出错可能。\n2. 收银系统有升级程序，可以自动下发修改和升级","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641977011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254837,"user_name":"风飘，吾独思","can_delete":false,"product_type":"c1","uid":1131032,"ip_address":"","ucode":"4DF0E7DC22EE53","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/18/edc1b373.jpg","comment_is_top":false,"comment_ctime":1603197455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603197455","product_id":100046301,"comment_content":"真正实战，干活满满","like_count":0},{"had_liked":false,"id":234448,"user_name":"，","can_delete":false,"product_type":"c1","uid":1701867,"ip_address":"","ucode":"A5543C8DFEB198","user_header":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","comment_is_top":false,"comment_ctime":1594694051,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1594694051","product_id":100046301,"comment_content":"      我们的系统遇到过这样的问题:<br>      这是一个内容管理系统,内部是一个部署了四个节点的集群,接入层用nginx做负载,请求代理的策略用的hash,用户偶尔会有权限方面的修改,在修改完之后,有的电脑上是生效的,有的电脑上不生效<br>       经过排查,发现系统里权限相关的内容是启动时从数据库加载,存储在当前实例的hashtable里,修改权限之后,数据库和当前实例的hashtable得到更新,其他实例的hashtable没能更新,同时由于nginx用了hash的请求分派策略,有的机器的请求打在更新之后的实例上,有的机器的请求打在老的实例上,所以导致权限修改不生效,这是由于没有做到服务无状态而产生的问题","like_count":0,"discussions":[{"author":{"id":1111899,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","nickname":"时隐时现","note":"","ucode":"DA4D622FF84920","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579123,"discussion_content":"可以用session sticky来解决吧，相同用户id打到后端同一个nginx","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657181863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227884,"user_name":"better","can_delete":false,"product_type":"c1","uid":1257750,"ip_address":"","ucode":"2B9BCCED753D7F","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/16/f2269e73.jpg","comment_is_top":false,"comment_ctime":1592517344,"is_pvip":true,"replies":[{"id":"84606","content":"redis集群本身的高可用是云服务商提供的，背后是否sentinel机制不肯定，或者还有其他机制。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1592966091,"ip_address":"","comment_id":227884,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592517344","product_id":100046301,"comment_content":"老师你好，我看到你在评论里回复到，你们redis现在直接买云的缓存服务，背后是m&#47;s，那高可用这块，也是由云主机的供应商直接配置好sentinel么，还是高可用这么你们是怎么做的呢","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498818,"discussion_content":"redis集群本身的高可用是云服务商提供的，背后是否sentinel机制不肯定，或者还有其他机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592966091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206251,"user_name":"苏LH","can_delete":false,"product_type":"c1","uid":1962654,"ip_address":"","ucode":"318CA11FC27B9F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f2/9e/7b6fcced.jpg","comment_is_top":false,"comment_ctime":1586829927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586829927","product_id":100046301,"comment_content":"此距离很贴合实际，谢谢老师","like_count":0},{"had_liked":false,"id":200942,"user_name":"追忆似水年华","can_delete":false,"product_type":"c1","uid":1160192,"ip_address":"","ucode":"C1D7C0DD7E7411","user_header":"https://static001.geekbang.org/account/avatar/00/11/b4/00/661fb98d.jpg","comment_is_top":false,"comment_ctime":1585696784,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585696784","product_id":100046301,"comment_content":"感谢老师分享，这前后的几节课程都很棒。<br>话说我们公司就是完全的单点，一台阿里云 Windows 2012 服务器，所有应用、数据库都是单点，只是做了快照，用来在系统出现意外故障时覆盖镜像。<br>至于监控，就只有阿里云自带的服务，包括对系统、硬件层面的监控，业务和技术层面是没有的，这也是我们之后需要补足的短板。","like_count":0},{"had_liked":false,"id":191462,"user_name":"image","can_delete":false,"product_type":"c1","uid":1039069,"ip_address":"","ucode":"A45BFF284F8933","user_header":"https://static001.geekbang.org/account/avatar/00/0f/da/dd/1e5e7b0c.jpg","comment_is_top":false,"comment_ctime":1584775325,"is_pvip":false,"replies":[{"id":"73396","content":"我们部署在公有云，之前是自搭的三节点cluster，现在直接买云的缓存服务，背后是m&#47;s。","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1584786085,"ip_address":"","comment_id":191462,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584775325","product_id":100046301,"comment_content":"请教一下，生产环境使用redis做缓存，一般的部署模式是什么？sentinel，cluster， m&#47;s？ ","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488180,"discussion_content":"我们部署在公有云，之前是自搭的三节点cluster，现在直接买云的缓存服务，背后是m/s。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584786085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190987,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1024763,"ip_address":"","ucode":"F6B5C64BC99FB7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/fb/94af9cf1.jpg","comment_is_top":false,"comment_ctime":1584716118,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584716118","product_id":100046301,"comment_content":"限流、负载、分流、缓存、异步、仿真、监控都上了满满的干货","like_count":0}]}