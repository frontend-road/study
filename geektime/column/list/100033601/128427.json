{"id":128427,"title":"11 | this：从JavaScript执行上下文的视角讲清楚this","content":"<p>在<a href=\"https://time.geekbang.org/column/article/127495\">上篇文章</a>中，我们讲了词法作用域、作用域链以及闭包，并在最后思考题中留了下面这样一段代码：</p><pre><code>var bar = {\n    myName:&quot;time.geekbang.com&quot;,\n    printName: function () {\n        console.log(myName)\n    }    \n}\nfunction foo() {\n    let myName = &quot;极客时间&quot;\n    return bar.printName\n}\nlet myName = &quot;极客邦&quot;\nlet _printName = foo()\n_printName()\nbar.printName()\n</code></pre><p>相信你已经知道了，在printName函数里面使用的变量myName是属于全局作用域下面的，所以最终打印出来的值都是“极客邦”。这是因为JavaScript语言的作用域链是由词法作用域决定的，而词法作用域是由代码结构来确定的。</p><p>不过按照常理来说，调用<code>bar.printName</code>方法时，该方法内部的变量myName应该使用bar对象中的，因为它们是一个整体，大多数面向对象语言都是这样设计的，比如我用C++改写了上面那段代码，如下所示：</p><pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Bar{\n    public:\n    char* myName;\n    Bar(){\n      myName = &quot;time.geekbang.com&quot;;\n    }\n    void printName(){\n       cout&lt;&lt; myName &lt;&lt;endl;\n    }  \n} bar;\n\nchar* myName = &quot;极客邦&quot;;\nint main() {\n\tbar.printName();\n\treturn 0;\n}\n</code></pre><p>在这段C++代码中，我同样调用了bar对象中的printName方法，最后打印出来的值就是bar对象的内部变量myName值——“time.geekbang.com”，而并不是最外面定义变量myName的值——“极客邦”，所以<strong>在对象内部的方法中使用对象内部的属性是一个非常普遍的需求</strong>。但是JavaScript的作用域机制并不支持这一点，基于这个需求，JavaScript又搞出来另外一套<strong>this机制</strong>。</p><p>所以，在JavaScript中可以使用this实现在printName函数中访问到bar对象的myName属性了。具体该怎么操作呢？你可以调整printName的代码，如下所示：</p><!-- [[[read_end]]] --><pre><code>printName: function () {\n        console.log(this.myName)\n    }    \n</code></pre><p>接下来咱们就展开来介绍this，不过在讲解之前，希望你能区分清楚<strong>作用域链</strong>和<strong>this</strong>是两套不同的系统，它们之间基本没太多联系。在前期明确这点，可以避免你在学习this的过程中，和作用域产生一些不必要的关联。</p><h2>JavaScript中的this是什么</h2><p>关于this，我们还是得先从执行上下文说起。在前面几篇文章中，我们提到执行上下文中包含了变量环境、词法环境、外部环境，但其实还有一个this没有提及，具体你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/b3/8d/b398610fd8060b381d33afc9b86f988d.png?wh=1142*615\" alt=\"\"></p><center><span class=\"reference\">执行上下文中的this</span></center><p>从图中可以看出，<strong>this是和执行上下文绑定的</strong>，也就是说每个执行上下文中都有一个this。前面<a href=\"https://time.geekbang.org/column/article/120257\">《08 | 调用栈：为什么JavaScript代码会出现栈溢出？》</a>中我们提到过，执行上下文主要分为三种——全局执行上下文、函数执行上下文和eval执行上下文，所以对应的this也只有这三种——全局执行上下文中的this、函数中的this和eval中的this。</p><p>不过由于eval我们使用的不多，所以本文我们对此就不做介绍了，如果你感兴趣的话，可以自行搜索和学习相关知识。</p><p>那么接下来我们就重点讲解下<strong>全局执行上下文中的this</strong>和<strong>函数执行上下文中的this</strong>。</p><h2>全局执行上下文中的this</h2><p>首先我们来看看全局执行上下文中的this是什么。</p><p>你可以在控制台中输入<code>console.log(this)</code>来打印出来全局执行上下文中的this，最终输出的是window对象。所以你可以得出这样一个结论：全局执行上下文中的this是指向window对象的。这也是this和作用域链的唯一交点，作用域链的最底端包含了window对象，全局执行上下文中的this也是指向window对象。</p><h2>函数执行上下文中的this</h2><p>现在你已经知道全局对象中的this是指向window对象了，那么接下来，我们就来重点分析函数执行上下文中的this。还是先看下面这段代码：</p><pre><code>function foo(){\n  console.log(this)\n}\nfoo()\n</code></pre><p>我们在foo函数内部打印出来this值，执行这段代码，打印出来的也是window对象，这说明在默认情况下调用一个函数，其执行上下文中的this也是指向window对象的。估计你会好奇，那能不能设置执行上下文中的this来指向其他对象呢？答案是肯定的。通常情况下，有下面三种方式来设置函数执行上下文中的this值。</p><h3>1. 通过函数的call方法设置</h3><p>你可以通过函数的<strong>call</strong>方法来设置函数执行上下文的this指向，比如下面这段代码，我们就并没有直接调用foo函数，而是调用了foo的call方法，并将bar对象作为call方法的参数。</p><pre><code>let bar = {\n  myName : &quot;极客邦&quot;,\n  test1 : 1\n}\nfunction foo(){\n  this.myName = &quot;极客时间&quot;\n}\nfoo.call(bar)\nconsole.log(bar)\nconsole.log(myName)\n</code></pre><p>执行这段代码，然后观察输出结果，你就能发现foo函数内部的this已经指向了bar对象，因为通过打印bar对象，可以看出bar的myName属性已经由“极客邦”变为“极客时间”了，同时在全局执行上下文中打印myName，JavaScript引擎提示该变量未定义。</p><p>其实除了call方法，你还可以使用<strong>bind</strong>和<strong>apply</strong>方法来设置函数执行上下文中的this，它们在使用上还是有一些区别的，如果感兴趣你可以自行搜索和学习它们的使用方法，这里我就不再赘述了。</p><h3>2. 通过对象调用方法设置</h3><p>要改变函数执行上下文中的this指向，除了通过函数的call方法来实现外，还可以通过对象调用的方式，比如下面这段代码：</p><pre><code>var myObj = {\n  name : &quot;极客时间&quot;, \n  showThis: function(){\n    console.log(this)\n  }\n}\nmyObj.showThis()\n</code></pre><p>在这段代码中，我们定义了一个myObj对象，该对象是由一个name属性和一个showThis方法组成的，然后再通过myObj对象来调用showThis方法。执行这段代码，你可以看到，最终输出的this值是指向myObj的。</p><p>所以，你可以得出这样的结论：<strong>使用对象来调用其内部的一个方法，该方法的this是指向对象本身的</strong>。</p><p>其实，你也可以认为JavaScript引擎在执行<code>myObject.showThis()</code>时，将其转化为了：</p><pre><code>myObj.showThis.call(myObj)\n</code></pre><p>接下来我们稍微改变下调用方式，把showThis赋给一个全局对象，然后再调用该对象，代码如下所示：</p><pre><code>var myObj = {\n  name : &quot;极客时间&quot;,\n  showThis: function(){\n    this.name = &quot;极客邦&quot;\n    console.log(this)\n  }\n}\nvar foo = myObj.showThis\nfoo()\n</code></pre><p>执行这段代码，你会发现this又指向了全局window对象。</p><p>所以通过以上两个例子的对比，你可以得出下面这样两个结论：</p><ul>\n<li><strong>在全局环境中调用一个函数，函数内部的this指向的是全局变量window。</strong></li>\n<li><strong>通过一个对象来调用其内部的一个方法，该方法的执行上下文中的this指向对象本身。</strong></li>\n</ul><h3>3. 通过构造函数中设置</h3><p>你可以像这样设置构造函数中的this，如下面的示例代码：</p><pre><code>function CreateObj(){\n  this.name = &quot;极客时间&quot;\n}\nvar myObj = new CreateObj()\n</code></pre><p>在这段代码中，我们使用new创建了对象myObj，那你知道此时的构造函数CreateObj中的this到底指向了谁吗？</p><p>其实，当执行new CreateObj()的时候，JavaScript引擎做了如下四件事：</p><ul>\n<li>首先创建了一个空对象tempObj；</li>\n<li>接着调用CreateObj.call方法，并将tempObj作为call方法的参数，这样当CreateObj的执行上下文创建时，它的this就指向了tempObj对象；</li>\n<li>然后执行CreateObj函数，此时的CreateObj函数执行上下文中的this指向了tempObj对象；</li>\n<li>最后返回tempObj对象。</li>\n</ul><p>为了直观理解，我们可以用代码来演示下：</p><pre><code>  var tempObj = {}\n  CreateObj.call(tempObj)\n  return tempObj\n</code></pre><p>这样，我们就通过new关键字构建好了一个新对象，并且构造函数中的this其实就是新对象本身。</p><p>关于new的具体细节你可以参考<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/new\">这篇文章</a>，这里我就不做过多介绍了。</p><h2>this的设计缺陷以及应对方案</h2><p>就我个人而言，this并不是一个很好的设计，因为它的很多使用方法都冲击人的直觉，在使用过程中存在着非常多的坑。下面咱们就来一起看看那些this设计缺陷。</p><h3>1. 嵌套函数中的this不会从外层函数中继承</h3><p>我认为这是一个严重的设计错误，并影响了后来的很多开发者，让他们“前赴后继”迷失在该错误中。我们还是结合下面这样一段代码来分析下：</p><pre><code>var myObj = {\n  name : &quot;极客时间&quot;, \n  showThis: function(){\n    console.log(this)\n    function bar(){console.log(this)}\n    bar()\n  }\n}\nmyObj.showThis()\n</code></pre><p>我们在这段代码的showThis方法里面添加了一个bar方法，然后接着在showThis函数中调用了bar函数，那么现在的问题是：bar函数中的this是什么？</p><p>如果你是刚接触JavaScript，那么你可能会很自然地觉得，bar中的this应该和其外层showThis函数中的this是一致的，都是指向myObj对象的，这很符合人的直觉。但实际情况却并非如此，执行这段代码后，你会发现<strong>函数bar中的this指向的是全局window对象，而函数showThis中的this指向的是myObj对象</strong>。这就是JavaScript中非常容易让人迷惑的地方之一，也是很多问题的源头。</p><p><strong>你可以通过一个小技巧来解决这个问题</strong>，比如在showThis函数中<strong>声明一个变量self用来保存this</strong>，然后在bar函数中使用self，代码如下所示：</p><pre><code>var myObj = {\n  name : &quot;极客时间&quot;, \n  showThis: function(){\n    console.log(this)\n    var self = this\n    function bar(){\n      self.name = &quot;极客邦&quot;\n    }\n    bar()\n  }\n}\nmyObj.showThis()\nconsole.log(myObj.name)\nconsole.log(window.name)\n</code></pre><p>执行这段代码，你可以看到它输出了我们想要的结果，最终myObj中的name属性值变成了“极客邦”。其实，这个方法的的本质是<strong>把this体系转换为了作用域的体系</strong>。</p><p>其实，<strong>你也可以使用ES6中的箭头函数来解决这个问题</strong>，结合下面代码：</p><pre><code>var myObj = {\n  name : &quot;极客时间&quot;, \n  showThis: function(){\n    console.log(this)\n    var bar = ()=&gt;{\n      this.name = &quot;极客邦&quot;\n      console.log(this)\n    }\n    bar()\n  }\n}\nmyObj.showThis()\nconsole.log(myObj.name)\nconsole.log(window.name)\n</code></pre><p>执行这段代码，你会发现它也输出了我们想要的结果，也就是箭头函数bar里面的this是指向myObj对象的。这是因为ES6中的箭头函数并不会创建其自身的执行上下文，所以箭头函数中的this取决于它的外部函数。</p><p>通过上面的讲解，你现在应该知道了this没有作用域的限制，这点和变量不一样，所以嵌套函数不会从调用它的函数中继承this，这样会造成很多不符合直觉的代码。要解决这个问题，你可以有两种思路：</p><ul>\n<li>第一种是把this保存为一个self变量，再利用变量的作用域机制传递给嵌套函数。</li>\n<li>第二种是继续使用this，但是要把嵌套函数改为箭头函数，因为箭头函数没有自己的执行上下文，所以它会继承调用函数中的this。</li>\n</ul><h3>2. 普通函数中的this默认指向全局对象window</h3><p>上面我们已经介绍过了，在默认情况下调用一个函数，其执行上下文中的this是默认指向全局对象window的。</p><p>不过这个设计也是一种缺陷，因为在实际工作中，我们并不希望函数执行上下文中的this默认指向全局对象，因为这样会打破数据的边界，造成一些误操作。如果要让函数执行上下文中的this指向某个对象，最好的方式是通过call方法来显示调用。</p><p>这个问题可以通过设置JavaScript的“严格模式”来解决。在严格模式下，默认执行一个函数，其函数的执行上下文中的this值是undefined，这就解决上面的问题了。</p><h2>总结</h2><p>好了，今天就到这里，下面我们来回顾下今天的内容。</p><p>首先，在使用this时，为了避坑，你要谨记以下三点：</p><ol>\n<li>当函数作为对象的方法调用时，函数中的this就是该对象；</li>\n<li>当函数被正常调用时，在严格模式下，this值是undefined，非严格模式下this指向的是全局对象window；</li>\n<li>嵌套函数中的this不会继承外层函数的this值。</li>\n</ol><p>最后，我们还提了一下箭头函数，因为箭头函数没有自己的执行上下文，所以箭头函数的this就是它外层函数的this。</p><p>这是我们“JavaScript执行机制”模块的最后一节了，五节下来，你应该已经发现我们将近一半的时间都是在谈JavaScript的各种缺陷，比如变量提升带来的问题、this带来问题等。我认为了解一门语言的缺陷并不是为了否定它，相反是为了能更加深入地了解它。我们在谈论缺陷的过程中，还结合JavaScript的工作流程分析了出现这些缺陷的原因，以及避开这些缺陷的方法。掌握了这些，相信你今后在使用JavaScript的过程中会更加得心应手。</p><h2>思考时间</h2><p>你可以观察下面这段代码：</p><pre><code>let userInfo = {\n  name:&quot;jack.ma&quot;,\n  age:13,\n  sex:male,\n  updateInfo:function(){\n    //模拟xmlhttprequest请求延时\n    setTimeout(function(){\n      this.name = &quot;pony.ma&quot;\n      this.age = 39\n      this.sex = female\n    },100)\n  }\n}\n\nuserInfo.updateInfo()\n</code></pre><p>我想通过updateInfo来更新userInfo里面的数据信息，但是这段代码存在一些问题，你能修复这段代码吗？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","comments":[{"had_liked":true,"id":129172,"user_name":"ytd","can_delete":false,"product_type":"c1","uid":1038790,"ip_address":"","ucode":"C6AEA2D19E447A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","comment_is_top":false,"comment_ctime":1567056588,"is_pvip":false,"replies":[{"id":"48300","content":"很赞，总结的很全，这个可以做参考答案","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567153498,"ip_address":"","comment_id":129172,"utype":1}],"discussion_count":9,"race_medal":0,"score":"770366202572","product_id":100033601,"comment_content":"&#47;&#47; 修改方法一：箭头函数最方便<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(() =&gt; {<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &#39;female&#39;<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()<br>setTimeout(() =&gt; {<br>  console.log(userInfo)<br>},200)<br><br>&#47;&#47; 修改方法二：缓存外部的this<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    let me = this;<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(function() {<br>      me.name = &quot;pony.ma&quot;<br>      me.age = 39<br>      me.sex = &#39;female&#39;<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()<br>setTimeout(() =&gt; {<br>  console.log(userInfo);<br>},200)<br><br>&#47;&#47; 修改方法三，其实和方法二的思路是相同的<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    void function(me) {<br>      setTimeout(function() {<br>        me.name = &quot;pony.ma&quot;<br>        me.age = 39<br>        me.sex = &#39;female&#39;<br>      },100)<br>    }(this);<br>  }<br>}<br><br>userInfo.updateInfo()<br>setTimeout(() =&gt; {<br>  console.log(userInfo)<br>},200)<br><br>let update = function() {<br>  this.name = &quot;pony.ma&quot;<br>  this.age = 39<br>  this.sex = &#39;female&#39;<br>}<br><br>方法四: 利用call或apply修改函数被调用时的this值(不知掉这么描述正不正确)<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(function() {<br>      update.call(userInfo);<br>      &#47;&#47; update.apply(userInfo)<br>    }, 100)<br>  }<br>}<br><br>userInfo.updateInfo()<br>setTimeout(() =&gt; {<br>  console.log(userInfo)<br>},200)<br><br>&#47;&#47; 方法五: 利用bind返回一个新函数，新函数被调用时的this指定为userInfo<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  update: function() {<br>    this.name = &quot;pony.ma&quot;<br>    this.age = 39<br>    this.sex = &#39;female&#39;<br>  },<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(this.update.bind(this), 100)<br>  }<br>}","like_count":180,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465319,"discussion_content":"很赞，总结的很全，这个可以做参考答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567153498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2161870,"avatar":"","nickname":"Geek_941fee","note":"","ucode":"428660D38C4C2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313268,"discussion_content":"再把他的总结一下，这五个方法就是在改this，或者我们手写的“call&#34; 为函数的原型,叫做changeThis，然后调用函数的时候是通过调用原型函数上的这个changeThis 来执行函数。说白了，都是在改this","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1603020278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2079724,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/bb/ec/e55a8b0e.jpg","nickname":"晓初","note":"","ucode":"5EF37903FF9D10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296337,"discussion_content":"总结一下：1. 箭头函数 2. 缓存上下文（self、自执行函数） 3. 显示绑定上下文（call, apply, bind） 4. setTimeout第三个参数传入（其实也相当于缓存了上下文）","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596512914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLHOZjqhVkWgUrUibLnXkiaFkhJdfWT2BZP3LldE3tArIoHASlhTSp8tiatiamLbQOjKeMcYHkAexoyCg/132","nickname":"江霖","note":"","ucode":"D197B3FD012944","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63660,"discussion_content":"还有，2，3种方法的一个变体，就是可以用userInfo作为setTimeout的第三个参数","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574901805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1365541,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d6/25/a95a2064.jpg","nickname":"luwei","note":"","ucode":"0960A09F7B8D59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1051487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLHOZjqhVkWgUrUibLnXkiaFkhJdfWT2BZP3LldE3tArIoHASlhTSp8tiatiamLbQOjKeMcYHkAexoyCg/132","nickname":"江霖","note":"","ucode":"D197B3FD012944","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285656,"discussion_content":"let userInfo = {\n  name: &#34;jack.ma&#34;,\n  age: 13,\n  sex: &#34;male&#34;,\n  updateInfo: function () {\n    //模拟xmlhttprequest请求延时\n    setTimeout(function (_this) {\n      console.log(_this.name)\n    }, 100, this)\n  }\n}\n\nuserInfo.updateInfo()","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1592904739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":63660,"ip_address":""},"score":285656,"extra":""},{"author":{"id":1374181,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","nickname":"张宗伟","note":"","ucode":"1447A20C7A8982","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1051487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLHOZjqhVkWgUrUibLnXkiaFkhJdfWT2BZP3LldE3tArIoHASlhTSp8tiatiamLbQOjKeMcYHkAexoyCg/132","nickname":"江霖","note":"","ucode":"D197B3FD012944","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349106,"discussion_content":"👍，这种方法更清爽，但是要注意setTimeout的第一个参数接收的是一个参数数组。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612885763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":63660,"ip_address":""},"score":349106,"extra":""}]},{"author":{"id":1438740,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/14/4599c47e.jpg","nickname":"Jia添！","note":"","ucode":"25E6BD81287EB9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540135,"discussion_content":"第三种方法的IIFE少了个括号；第四种的update方法没有放上去…。瑕不掩瑜，厉害👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639968998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1806296,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkkCeRqSibC9qFI0govYb4tT7scTQDIoNwlV229T9BPqFhWUMCFv3OzOoecicmE88khiauJSkcC8WqA/132","nickname":"Harvey","note":"","ucode":"34B03C370302B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285224,"discussion_content":"第五种的this.update的this指向全局吧？是找不到update的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592786237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1392260,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3e/84/db2de66a.jpg","nickname":"mark_huang","note":"","ucode":"C9CDE7123B856B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1806296,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkkCeRqSibC9qFI0govYb4tT7scTQDIoNwlV229T9BPqFhWUMCFv3OzOoecicmE88khiauJSkcC8WqA/132","nickname":"Harvey","note":"","ucode":"34B03C370302B2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286179,"discussion_content":"可以找到 update ，这个时候的 this 就是 userInfo 对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593079973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285224,"ip_address":""},"score":286179,"extra":""}]}]},{"had_liked":false,"id":213049,"user_name":"悬炫","can_delete":false,"product_type":"c1","uid":1159974,"ip_address":"","ucode":"28BA6B2169256B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/26/cc28a05a.jpg","comment_is_top":false,"comment_ctime":1588288120,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"353775606392","product_id":100033601,"comment_content":"老师的文章是我目前见过的，将浏览器原理讲的最生动易懂的文章了，没有之一，大赞","like_count":83},{"had_liked":true,"id":129319,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1567086759,"is_pvip":true,"replies":[{"id":"48253","content":"非常好！<br><br>补充下解释：<br>如果被setTimeout推迟执行的回调函数是某个对象的方法，那么该方法中的this关键字将指向全局环境，而不是定义时所在的那个对象。<br><br>如果是严格模式，那么this会被设置为undefined。<br><br>这一点很容易让人混淆！！！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567150379,"ip_address":"","comment_id":129319,"utype":1}],"discussion_count":7,"race_medal":2,"score":"108941269159","product_id":100033601,"comment_content":"setTimeOut() 函数内部的回调函数，this指向全局函数。修复：在外部绑this或者使用箭头函数。<br>```<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex: &quot;male&quot;,<br>  updateInfo:function(){<br>    let that = this;<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(()=&gt;{<br>      that.name = &quot;pony.ma&quot;<br>      that.age = 39<br>      that.sex = &quot;female&quot;<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()<br>```<br><br>```<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex: &quot;male&quot;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(()=&gt;{<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &quot;female&quot;<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()<br>```<br><br>","like_count":25,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465397,"discussion_content":"非常好！\n\n补充下解释：\n如果被setTimeout推迟执行的回调函数是某个对象的方法，那么该方法中的this关键字将指向全局环境，而不是定义时所在的那个对象。\n\n如果是严格模式，那么this会被设置为undefined。\n\n这一点很容易让人混淆！！！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567150379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2129924,"avatar":"","nickname":"Geek_88f3f7","note":"","ucode":"957899A12C0DD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301193,"discussion_content":"let obj = {\n    name: &#39;123&#39;,\n    fn: function() {\n        console.log(this)\n    }\n}\nsetTimeout(obj.fn, 0)\nsetTimeout(function() {\n    console.log(this)\n}, 0)\n老师说的是这个意思？ 可是这两个console打印的都是他们所在的timeout环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598435756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2129924,"avatar":"","nickname":"Geek_88f3f7","note":"","ucode":"957899A12C0DD5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384625,"discussion_content":"就是这个意思，在全局环境调用非严格模式都是window  严格就是undefined","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626682220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301193,"ip_address":""},"score":384625,"extra":""}]},{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287633,"discussion_content":"错，严格模式下setTimeout中this也指向window。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593499682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1011000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6d/38/c951cb2e.jpg","nickname":"笨鸟","note":"","ucode":"EE93B7BDD677E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65144,"discussion_content":"我觉得setTimeout调用是简写，而实际用window.setTimeout开调用的，这样就能很好理解this的指向","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574985875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1563403,"avatar":"https://static001.geekbang.org/account/avatar/00/17/db/0b/f0ded153.jpg","nickname":"江谢木","note":"","ucode":"E1B1B0F0F03D41","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1011000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6d/38/c951cb2e.jpg","nickname":"笨鸟","note":"","ucode":"EE93B7BDD677E4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275020,"discussion_content":"内层函数是不能继承外层函数的this的，不能这么解释。这里是因为setTimeout接受的是一个函数对象参数，也即函数的引用，在执行时，会以全局的方式执行函数。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590647860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":65144,"ip_address":""},"score":275020,"extra":""},{"author":{"id":1068515,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4d/e3/8cb1788c.jpg","nickname":"小虾不二","note":"","ucode":"3AEB47F0FD2FEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1011000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6d/38/c951cb2e.jpg","nickname":"笨鸟","note":"","ucode":"EE93B7BDD677E4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590548,"discussion_content":"老师上面的例子也有的。全局的执行上下文中执行的函数（这里跟《对象调用 其内部函数》容易混淆），函数内部的 this 指向全局。而 setTimeout 是把待执行的函数暴露在全局的执行上下文的，也就是 window 对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665850701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":65144,"ip_address":"广东"},"score":590548,"extra":""}]}]},{"had_liked":true,"id":129105,"user_name":"悬炫","can_delete":false,"product_type":"c1","uid":1159974,"ip_address":"","ucode":"28BA6B2169256B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/26/cc28a05a.jpg","comment_is_top":false,"comment_ctime":1567042984,"is_pvip":false,"replies":[{"id":"48312","content":"箭头函数在执行时比块级作用域的内容多，比函数执行上下文的内容少，砍掉了很多函数执行上下文中的组件。<br><br>不过在箭头函数在执行时也是有变量环境的，因为还要支持变量提升！所以变量环境的模块还是砍不掉的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567154853,"ip_address":"","comment_id":129105,"utype":1}],"discussion_count":7,"race_medal":0,"score":"100351290792","product_id":100033601,"comment_content":"关于箭头函数，文章中说其没有自己的执行上下文，难道箭头函数就像let定义的变量一样是哥块级作用域吗？其内部定义的变量都是存储在词法环境中是吗？","like_count":23,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465280,"discussion_content":"箭头函数在执行时比块级作用域的内容多，比函数执行上下文的内容少，砍掉了很多函数执行上下文中的组件。\n\n不过在箭头函数在执行时也是有变量环境的，因为还要支持变量提升！所以变量环境的模块还是砍不掉的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567154853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1340246,"avatar":"https://static001.geekbang.org/account/avatar/00/14/73/56/9cfb1e43.jpg","nickname":"sheeeeep","note":"","ucode":"218AA77BAA73C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6904,"discussion_content":"变量环境不是位于执行上下文中吗，箭头函数如果没有执行上下文，那变量环境位于哪里呢？","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1567167073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287635,"discussion_content":"是的，因为箭头函数的定义是通过变量声明定义的，如果是通过let/const 声明的，则其存放在执行上下文的词法环境，如果是var声明的则存放在变量环境。如果是函数声明定义的，则调用函数时，会创建新的执行上下文，如果是函数表达式，则不会有执行上下文，其存在于当前执行上下文。可以自己打断点，结合执行栈和作用域理解下。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1593500511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2631455,"avatar":"https://static001.geekbang.org/account/avatar/00/28/27/1f/42059b0f.jpg","nickname":"HXL","note":"","ucode":"97298EEC95BFCA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557192,"discussion_content":"为什么我使用函数表达式, call stack中有 箭头函数对应的执行上下文","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647689621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287635,"ip_address":""},"score":557192,"extra":""}]},{"author":{"id":1167767,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/97/3abdd9cd.jpg","nickname":"stanny","note":"","ucode":"DD2BB91548A881","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370251,"discussion_content":"同问哈  文中开始提到了 执行上下文包含了：变量环境、词法环境、outer、this;\n箭头函数应该只是没有this吧  其他三个都应该还有啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619345223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2246757,"avatar":"https://static001.geekbang.org/account/avatar/00/22/48/65/3277386b.jpg","nickname":"刘至","note":"","ucode":"030D761BDF4957","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367951,"discussion_content":"大哥，别人说的是箭头函数内部变量存储的位置，而不是箭头函数外部函数存储箭头函数的变量存储的位置！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618500205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047114,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fa/4a/23f480f5.jpg","nickname":"海一剑","note":"","ucode":"8F18D06C631EA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266422,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589511904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":131274,"user_name":"风一样的浪漫","can_delete":false,"product_type":"c1","uid":1097299,"ip_address":"","ucode":"EE023C0B759F26","user_header":"https://static001.geekbang.org/account/avatar/00/10/be/53/71057a8b.jpg","comment_is_top":false,"comment_ctime":1567688482,"is_pvip":false,"replies":[{"id":"49722","content":"是在里面的，11为了图简单点，调整到外面了","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567698575,"ip_address":"","comment_id":131274,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61697230626","product_id":100033601,"comment_content":"老师请问下outer的位置是在变量对象内还是外，第10节描述是在内部的，可是11节的图outer放在变量对象外面了","like_count":14,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466363,"discussion_content":"是在里面的，11为了图简单点，调整到外面了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567698575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1740548,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8f/04/508f860b.jpg","nickname":"学习使人进步","note":"","ucode":"D959566A25D759","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64594,"discussion_content":"我的理解是：out指向执行环境中的变量对象，而不是执行环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574951273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187697,"user_name":"刘晓东","can_delete":false,"product_type":"c1","uid":1887520,"ip_address":"","ucode":"84F51E54CC6650","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJVBIIzaXQs2Y6rcwwOK510sowo5dH4zTQ2lUuQwsEW4OeDpKgBcEDHN8RcHZ1w2WmFhozAsNFlbA/132","comment_is_top":false,"comment_ctime":1584195006,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"35943933374","product_id":100033601,"comment_content":"老师您好，我想问您一下，这些知识您是怎么获得的？是看的书，还是自己研究了什么源代码？方便告知吗？","like_count":8,"discussions":[{"author":{"id":1374594,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/82/7ee32c07.jpg","nickname":"麦香","note":"","ucode":"8A04F708868FE4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581556,"discussion_content":"spec","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658834313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1463339,"avatar":"https://static001.geekbang.org/account/avatar/00/16/54/2b/59acbb29.jpg","nickname":".","note":"","ucode":"D9EAB6FF5C430B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355581,"discussion_content":"首页好像有这个作者的学习连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615455106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1622448,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c1/b0/b52d9ade.jpg","nickname":"苏彧","note":"","ucode":"C016B28DF7449C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1463339,"avatar":"https://static001.geekbang.org/account/avatar/00/16/54/2b/59acbb29.jpg","nickname":".","note":"","ucode":"D9EAB6FF5C430B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589211,"discussion_content":"可能说具体点吗 简介中没找到 哈哈哈哈\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664524391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":355581,"ip_address":"浙江"},"score":589211,"extra":""}]}]},{"had_liked":false,"id":146479,"user_name":"凭实力写bug","can_delete":false,"product_type":"c1","uid":1235611,"ip_address":"","ucode":"6F772551F18935","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/9b/e0ef47df.jpg","comment_is_top":false,"comment_ctime":1572533508,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35932271876","product_id":100033601,"comment_content":"我记得执行上下文包括变量环境,词法环境,outer,this,如果箭头函数没有执行上下文,他的这些内容又是怎样的,还有他的作用域呢","like_count":8,"discussions":[{"author":{"id":1560162,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ce/62/026e4408.jpg","nickname":"阳仔","note":"","ucode":"902E99E507AEC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369243,"discussion_content":"箭头函数不会创建自己的this,它只会从自己的作用域链的上一层继承this。而执行上下文依旧存在，老师貌似说的有误...","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1618985116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145087,"user_name":"大威先生🐯🐯","can_delete":false,"product_type":"c1","uid":1670793,"ip_address":"","ucode":"DC50B74CAD9A20","user_header":"https://static001.geekbang.org/account/avatar/00/19/7e/89/0a9c4a35.jpg","comment_is_top":false,"comment_ctime":1572185114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27341988890","product_id":100033601,"comment_content":"最后一个案例中，myObj对象的 showThis函数内部定义了bar函数，bar函数的执行环境具有全局性，因此this对象通常指向window；----摘要《JavaScript高级程序设计》","like_count":6},{"had_liked":false,"id":129059,"user_name":"李懂","can_delete":false,"product_type":"c1","uid":1330436,"ip_address":"","ucode":"539E6639042C88","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/04/5e0d3713.jpg","comment_is_top":false,"comment_ctime":1567037419,"is_pvip":false,"replies":[{"id":"48317","content":"this的缺陷并不是浏览器实现机制导致的，而是浏览器按照标准来实现的。<br><br>其实浏览器说我可以实现得更好，但是标准摆在这儿，大家都只认标准！<br><br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567156197,"ip_address":"","comment_id":129059,"utype":1}],"discussion_count":5,"race_medal":0,"score":"27336841195","product_id":100033601,"comment_content":"文章只是简单讲了下this的几种场景，不像前面变量申明，可以很清晰的知道在执行上下文的位置，也没有画图，看完还是不知道不能深入理解，更多的是一种记忆，这种是指向window，那种是指向对象。能不能深入到是如何实现this，才能知道缺陷的原因，这里一直是没理解的难点！","like_count":6,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465251,"discussion_content":"this的缺陷并不是浏览器实现机制导致的，而是浏览器按照标准来实现的。\n\n其实浏览器说我可以实现得更好，但是标准摆在这儿，大家都只认标准！\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567156197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1560162,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ce/62/026e4408.jpg","nickname":"阳仔","note":"","ucode":"902E99E507AEC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369242,"discussion_content":"看到很多关于this的文章，都是在说这些表现结果，没有一个是从底层说的。看来老师貌似也不知道...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618984967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1242543,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/af/a457bdb2.jpg","nickname":"I LOVE JAVASCRIPT","note":"","ucode":"66D9EB7395662B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1560162,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ce/62/026e4408.jpg","nickname":"阳仔","note":"","ucode":"902E99E507AEC1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379741,"discussion_content":"https://segmentfault.com/a/1190000009048715","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624100302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369242,"ip_address":""},"score":379741,"extra":""}]},{"author":{"id":1439990,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f8/f6/3e2db176.jpg","nickname":"七月有风","note":"","ucode":"B3F82397347C5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6698,"discussion_content":"老师讲的很好，但没有深入，没有之前几章过瘾","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567058581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376672,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Snialo4PnDQCcYtyfDT6xSy61TbwDxoCoD7mNc6XLSKZmLu5ibGfeFibgwLGZtvr8r4vFp0zVaicUmqDibDiaHTGIhvg/132","nickname":"柴柴","note":"","ucode":"8A76B32AA270A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6671,"discussion_content":"这一章不太过瘾的感觉啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567044055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129042,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1567023953,"is_pvip":false,"replies":[{"id":"48316","content":"箭头要展开了得话一节来讲，关于箭头函数的最佳实践网上应该有不少资料，可以查查！<br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567155801,"ip_address":"","comment_id":129042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27336827729","product_id":100033601,"comment_content":"思考题，有两种方法<br>1. 将 setTimeout 里面的函数变成箭头函数<br>2. 在 setTimeout 外将 this 赋值给其他的变量，setTimeout 里面的函数通过作用域链去改变 userInfo 的属性<br><br>很不错的文章，受益匪浅，感谢老师。这里有一个疑问就是，关于箭头函数，文章中说其没有自己的执行上下文，这里指的是箭头函数并不会创建自己的执行上下文变量并压栈，其只是被看作是一个块区域吗？那么在实际的开发中如何在普通函数和箭头函数之间做选择？关于这一点，老师有没有相关推荐的文章呢？谢谢老师","like_count":6,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465238,"discussion_content":"箭头要展开了得话一节来讲，关于箭头函数的最佳实践网上应该有不少资料，可以查查！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567155801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129806,"user_name":"朱维娜🍍","can_delete":false,"product_type":"c1","uid":1625918,"ip_address":"","ucode":"2BE89ABFE2BF0C","user_header":"https://static001.geekbang.org/account/avatar/00/18/cf/3e/5c684022.jpg","comment_is_top":false,"comment_ctime":1567261365,"is_pvip":false,"replies":[{"id":"48418","content":"调用者是对象，函数内部是调用的地方，不能说是调用者。<br>obj.showThis（）<br> 这里的obj是调用者，通过点操作符来实现的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567295048,"ip_address":"","comment_id":129806,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18747130549","product_id":100033601,"comment_content":"之前看到一种说法：this指向的永远是调用它的对象。按照这种说法，嵌套函数的调用者是window，与文中所述的“showThis调用内部函数不能继承this”有所出入，想请老师解答一下这种说法是否正确？","like_count":4,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465659,"discussion_content":"调用者是对象，函数内部是调用的地方，不能说是调用者。\nobj.showThis（）\n 这里的obj是调用者，通过点操作符来实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567295048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1387926,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2d/96/2ba9df33.jpg","nickname":"Heartbeats","note":"","ucode":"ED1B63B136C15E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8907,"discussion_content":"不能继承是函数提升了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568097386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1740548,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8f/04/508f860b.jpg","nickname":"学习使人进步","note":"","ucode":"D959566A25D759","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1387926,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2d/96/2ba9df33.jpg","nickname":"Heartbeats","note":"","ucode":"ED1B63B136C15E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64706,"discussion_content":"下面这样理解正确吗？\n\nshowThis的“活动对象”是bar执行时的作用域链中的第二个（第一个是bar自身执行上下文的变量对象）变量对象。\n而函数的“活动对象”不包含其arguments和this。\n于是顺着作用域链，找到了window作为this。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574952947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8907,"ip_address":""},"score":64706,"extra":""}]}]},{"had_liked":false,"id":238168,"user_name":"White","can_delete":false,"product_type":"c1","uid":2084434,"ip_address":"","ucode":"0590033A986E10","user_header":"https://static001.geekbang.org/account/avatar/00/1f/ce/52/67781a8a.jpg","comment_is_top":false,"comment_ctime":1596085713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14480987601","product_id":100033601,"comment_content":"老师，关于箭头函数，文章中说”箭头函数并不会创建其自身的执行上下文“，那么在调用箭头函数时，是将什么推入调用栈了呢？其内部变量又放在哪里了呢？我看评论并没有说的很清楚呢？这块是否可以讲具体些呢？执行箭头函数时，是怎样一个过程呢？","like_count":3},{"had_liked":false,"id":134682,"user_name":"王玄","can_delete":false,"product_type":"c1","uid":1394410,"ip_address":"","ucode":"E54ABB340D1E49","user_header":"https://static001.geekbang.org/account/avatar/00/15/46/ea/b86667b8.jpg","comment_is_top":false,"comment_ctime":1568894045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14453795933","product_id":100033601,"comment_content":"&#47;&#47; 硬绑定<br>    let userInfo = {<br>      name: &quot;jack.ma&quot;,<br>      age: 13,<br>      sex: &#39;male&#39;,<br>      updateInfo: function () {<br>        &#47;&#47; 模拟 xmlhttprequest 请求延时<br>        setTimeout(function () {<br>          this.name = &quot;pony.ma&quot;<br>          this.age = 39<br>          this.sex = &#39;female&#39;<br>        }.bind(this), 100)<br>      }<br>    }<br><br>    userInfo.updateInfo()<br><br><br>    &#47;&#47; 缓存this<br>    let userInfo = {<br>      name: &quot;jack.ma&quot;,<br>      age: 13,<br>      sex: &#39;male&#39;,<br>      updateInfo: function () {<br>        const self = this;<br>        &#47;&#47; 模拟 xmlhttprequest 请求延时<br>        setTimeout(function () {<br>          self.name = &quot;pony.ma&quot;<br>          self.age = 39<br>          self.sex = &#39;female&#39;<br>        }, 100)<br>      }<br>    }<br><br>    userInfo.updateInfo()<br><br>    &#47;&#47; 箭头<br>    let userInfo = {<br>      name: &quot;jack.ma&quot;,<br>      age: 13,<br>      sex: &#39;male&#39;,<br>      updateInfo: function () {<br>        &#47;&#47; 模拟 xmlhttprequest 请求延时<br>        setTimeout(() =&gt; {<br>          this.name = &quot;pony.ma&quot;<br>          this.age = 39<br>          this.sex = &#39;female&#39;<br>        }, 100)<br>      }<br>    }<br><br>    userInfo.updateInfo()<br><br>    &#47;&#47; 跟缓存this差不多<br>    let userInfo = {<br>      name: &quot;jack.ma&quot;,<br>      age: 13,<br>      sex: &#39;male&#39;,<br>      updateInfo: function () {<br>        &#47;&#47; 模拟 xmlhttprequest 请求延时<br>        setTimeout(function(self) {<br>          self.name = &quot;pony.ma&quot;<br>          self.age = 39<br>          self.sex = &#39;female&#39;<br>        }, 100, this)<br>      }<br>    }<br><br>    userInfo.updateInfo()","like_count":3},{"had_liked":false,"id":132354,"user_name":"Heartbeats","can_delete":false,"product_type":"c1","uid":1387926,"ip_address":"","ucode":"ED1B63B136C15E","user_header":"https://static001.geekbang.org/account/avatar/00/15/2d/96/2ba9df33.jpg","comment_is_top":false,"comment_ctime":1568097301,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"14452999189","product_id":100033601,"comment_content":"谁调用了它，它就指向谁","like_count":3,"discussions":[{"author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":76229,"discussion_content":"不完全是；实际上this的决定有四个优先级，new > bind/apply/call > object context > global(non-strict）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575813691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1379017,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxa4R9wsGic4zz6vhndhpM4PibiavVbtVZgI7rzfVR23yasTnhcAkz2BqmdTjX53XYgvKv4LVh84HyA/132","nickname":"痕酉","note":"","ucode":"3E9BAF9136E586","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1589947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","nickname":"Geek_East","note":"","ucode":"A1A7CBF9B8FB2D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":265640,"discussion_content":"这优先级是从何谈起，我理解优先级的比对应该是两种以上情况同时出现才存在优先级。this这个场景，应该同一时间只会有一种使用情况吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589422922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":76229,"ip_address":""},"score":265640,"extra":""}]},{"author":{"id":1624533,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/d5/08139264.jpg","nickname":"雯欣","note":"","ucode":"7789B6222D7BD4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72861,"discussion_content":"我也是这么理解的， 按照这句话去解题就能明白this的指向了~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575537459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129187,"user_name":"七月有风","can_delete":false,"product_type":"c1","uid":1439990,"ip_address":"","ucode":"B3F82397347C5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/f8/f6/3e2db176.jpg","comment_is_top":false,"comment_ctime":1567058701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14451960589","product_id":100033601,"comment_content":"做题面试写代码，这些就够了，但this到底是什么，还是不懂","like_count":3},{"had_liked":false,"id":257732,"user_name":"Gopal","can_delete":false,"product_type":"c1","uid":1295144,"ip_address":"","ucode":"7FEC1096AEBE43","user_header":"https://static001.geekbang.org/account/avatar/00/13/c3/28/4b8bc05c.jpg","comment_is_top":false,"comment_ctime":1604106977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10194041569","product_id":100033601,"comment_content":"https:&#47;&#47;juejin.im&#47;post&#47;6882527259584888845#heading-8<br><br>关于 this，你不知道的 JavaScript 中讲得也很精彩，做了一些笔记，对于判断 this 的指向很有帮助","like_count":2},{"had_liked":false,"id":130068,"user_name":"爱吃锅巴的沐泡","can_delete":false,"product_type":"c1","uid":1244560,"ip_address":"","ucode":"27451E4F1A22D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/90/ae39017f.jpg","comment_is_top":false,"comment_ctime":1567382966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10157317558","product_id":100033601,"comment_content":"对于思考题的一些问题：<br>1、对象中定义的方法是一个全局函数嘛？<br>2、setTimeout()的回调函数中的this指向window 是因为widow调用setTimeout()？ 还是因为 定义的回调函数和 外部的updateInfo函数嵌套定义？或者还是因为其他的原因？<br>3、这里的setTimeout()的回调函数属于是一个字面量的函数定义作为参数进行传递，这种参数形式的函数定义与外面的updateInfo()函数可以算作嵌套定义嘛？(这里好像又回到了问题2)","like_count":2},{"had_liked":false,"id":283002,"user_name":"我来人间一趟","can_delete":false,"product_type":"c1","uid":1733144,"ip_address":"","ucode":"15CAF96EF899E2","user_header":"https://static001.geekbang.org/account/avatar/00/1a/72/18/d9e2fcf9.jpg","comment_is_top":false,"comment_ctime":1615516197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5910483493","product_id":100033601,"comment_content":"其实在外部函数中设置self和使用箭头函数原理是一致的，都是将this的机制转换到作用域的机制解决的，有兴趣的同学可以了解下箭头函数的实现，其实就是通过解析ast，找到parent节点然后在这个节点中声明一个类似self的东西，在遍历箭头函数中所有使用this的地方，把this变为self，之后在把ast的节点名转换成普通函数的命名，原理是一致，箭头函数只是一种语法糖的实现","like_count":1},{"had_liked":false,"id":129376,"user_name":"Winn","can_delete":false,"product_type":"c1","uid":1018810,"ip_address":"","ucode":"8C690EA885AC14","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/ba/74a615ea.jpg","comment_is_top":false,"comment_ctime":1567118687,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5862085983","product_id":100033601,"comment_content":"通俗易懂，由简入深，把this说得最清楚的文章","like_count":1},{"had_liked":false,"id":129131,"user_name":"潘启宝","can_delete":false,"product_type":"c1","uid":1624506,"ip_address":"","ucode":"8E697C7164F2E0","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/ba/f50e9ea4.jpg","comment_is_top":false,"comment_ctime":1567046703,"is_pvip":false,"replies":[{"id":"48303","content":"使用bind没有问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567153580,"ip_address":"","comment_id":129131,"utype":1}],"discussion_count":6,"race_medal":0,"score":"5862013999","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(function(){<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &#39;female&#39;<br>    }.bind(this),100)<br>  }<br>}<br><br>userInfo.updateInfo()","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465295,"discussion_content":"使用bind没有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567153580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446810,"avatar":"https://static001.geekbang.org/account/avatar/00/16/13/9a/842a9dc6.jpg","nickname":"求求你，别卷了！","note":"","ucode":"8F7DE1DF8A0B29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391137,"discussion_content":"没问题是没问题，但实际项目中是要追求最简单的方式，而不要秀技术","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630311248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/de/ef564e67.jpg","nickname":"歌在云端","note":"","ucode":"1C876780C9D25E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6715,"discussion_content":"我试过了用bind是不行的，call可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567066563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1241365,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","nickname":"William","note":"","ucode":"4499F99B180102","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":1110238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/de/ef564e67.jpg","nickname":"歌在云端","note":"","ucode":"1C876780C9D25E","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":6760,"discussion_content":"都可以啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567086998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6715,"ip_address":""},"score":6760,"extra":""},{"author":{"id":1624506,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/ba/f50e9ea4.jpg","nickname":"潘启宝","note":"","ucode":"8E697C7164F2E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1110238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/de/ef564e67.jpg","nickname":"歌在云端","note":"","ucode":"1C876780C9D25E","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":6928,"discussion_content":"可以可以的。你为什么说不可以？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567176880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6715,"ip_address":""},"score":6928,"extra":""},{"author":{"id":1110238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/de/ef564e67.jpg","nickname":"歌在云端","note":"","ucode":"1C876780C9D25E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1624506,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/ba/f50e9ea4.jpg","nickname":"潘启宝","note":"","ucode":"8E697C7164F2E0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6980,"discussion_content":"因为我试了一下，在浏览器控制台输出的内容没有变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567240513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6928,"ip_address":""},"score":6980,"extra":""}]}]},{"had_liked":false,"id":129117,"user_name":"子曰","can_delete":false,"product_type":"c1","uid":1161256,"ip_address":"","ucode":"34127192DD8876","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/28/8c83d109.jpg","comment_is_top":false,"comment_ctime":1567044493,"is_pvip":false,"replies":[{"id":"48310","content":"箭头函数没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567154744,"ip_address":"","comment_id":129117,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862011789","product_id":100033601,"comment_content":"let userInfo = {<br>    name:&quot;jack.ma&quot;,<br>    age:13,<br>    sex:&quot;male&quot;,<br>    updateInfo:function(){<br>      &#47;&#47; 模拟 xmlhttprequest 请求延时<br>      setTimeout(()=&gt;{<br>        this.name = &quot;pony.ma&quot;<br>        this.age = 39<br>        this.sex = &quot;female&quot;<br>      },100)<br>    }<br>  }<br>  userInfo.updateInfo()","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465287,"discussion_content":"箭头函数没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567154744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129043,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1567031109,"is_pvip":false,"replies":[{"id":"48315","content":"建议看看其他老铁的留言","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567155162,"ip_address":"","comment_id":129043,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861998405","product_id":100033601,"comment_content":"延时函数更新此时的this对象指向了window全局对象。<br>解决方法就是文章老师提到的两种方法。<br>1 this保存给self变量，通过变量作用域机制传递给嵌套函数。<br>2箭头函数去锁定函数定义时候的this对象，箭头函数没有上下文，它会继承函数初始化对应上下文。<br><br>思考:<br>1 能否通过bind和apply改变箭头函数this指向？<br>回头试一下，然后好好理理这几节内容<br><br>","like_count":1,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465239,"discussion_content":"建议看看其他老铁的留言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567155162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356174,"user_name":"有一种踏实","can_delete":false,"product_type":"c1","uid":2634945,"ip_address":"上海","ucode":"CF9A6273741105","user_header":"https://static001.geekbang.org/account/avatar/00/28/34/c1/4e4917f5.jpg","comment_is_top":false,"comment_ctime":1662024868,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1662024868","product_id":100033601,"comment_content":"this 像是一个额外的变量集合，或者说 context","like_count":0},{"had_liked":false,"id":341463,"user_name":"dao","can_delete":false,"product_type":"c1","uid":1087879,"ip_address":"","ucode":"4181FB270462CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","comment_is_top":false,"comment_ctime":1649640674,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649640674","product_id":100033601,"comment_content":"这个系列的文章也非常好。https:&#47;&#47;cabulous.medium.com&#47;javascript-execution-context-scope-chain-closure-and-this-part-4-961acd9689c9","like_count":0},{"had_liked":false,"id":335513,"user_name":"Geek_619e80","can_delete":false,"product_type":"c1","uid":1478795,"ip_address":"","ucode":"450C641C726D62","user_header":"https://static001.geekbang.org/account/avatar/00/16/90/8b/057c7129.jpg","comment_is_top":false,"comment_ctime":1645546876,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1645546876","product_id":100033601,"comment_content":"这里讲到箭头函数不会创建自身执行上下文，那么箭头函数里的变量都存储在它父级变量空间里吗？","like_count":0},{"had_liked":false,"id":329113,"user_name":"乐兮","can_delete":false,"product_type":"c1","uid":2876461,"ip_address":"","ucode":"E0BE23AE3E5F2B","user_header":"","comment_is_top":false,"comment_ctime":1641127451,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641127451","product_id":100033601,"comment_content":"老师，请问outer和this有啥区别？","like_count":0},{"had_liked":false,"id":327629,"user_name":"hao-kuai","can_delete":false,"product_type":"c1","uid":1272354,"ip_address":"","ucode":"DFDFDDDBA4503C","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/22/527904b2.jpg","comment_is_top":false,"comment_ctime":1640216410,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640216410","product_id":100033601,"comment_content":"造成困难的根源<br>1. 语法糖简写隐藏函数调用的完整写法，使得困惑<br>2.和其他经典编程语言不一致的特性造成的设计缺陷，跨编程语言来认知很痛苦<br>","like_count":0},{"had_liked":false,"id":325288,"user_name":"咚门","can_delete":false,"product_type":"c1","uid":1448473,"ip_address":"","ucode":"DD4E8734370BBF","user_header":"https://static001.geekbang.org/account/avatar/00/16/1a/19/5e4ca139.jpg","comment_is_top":false,"comment_ctime":1638890730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638890730","product_id":100033601,"comment_content":"补充一个，不用 this，直接用 userInfo，updateInfo 声明的地方和 userInfo 是在同一个作用域，所以可以直接访问：<br><br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47;模拟xmlhttprequest请求延时<br>    setTimeout(function(){<br>      userInfo.name = &quot;pony.ma&quot;<br>      userInfo.age = 39<br>      userInfo.sex = &#39;female&#39;<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo();","like_count":0},{"had_liked":false,"id":316004,"user_name":"有一种踏实","can_delete":false,"product_type":"c1","uid":2634945,"ip_address":"","ucode":"CF9A6273741105","user_header":"https://static001.geekbang.org/account/avatar/00/28/34/c1/4e4917f5.jpg","comment_is_top":false,"comment_ctime":1634104209,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1634104209","product_id":100033601,"comment_content":"讲得真的非常好，特别是作用域、作用域链、词法环境这些东西，看了有种豁然开朗的感觉","like_count":0},{"had_liked":false,"id":301183,"user_name":"1979104101ng","can_delete":false,"product_type":"c1","uid":2138770,"ip_address":"","ucode":"95204E6CBA81D6","user_header":"https://static001.geekbang.org/account/avatar/00/20/a2/92/6bbcb80b.jpg","comment_is_top":false,"comment_ctime":1625567013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625567013","product_id":100033601,"comment_content":"在设置定时器时，将 传入的回调函数 改为 绑定 updateInfo 的 this 的新的回调函数（通过 bind 方法）<br>let userInfo = {<br>\t\t\tname: &quot;jack.ma&quot;,<br>\t\t\tage: 13,<br>\t\t\tsex: &quot;male&quot;,<br>\t\t\tupdateInfo: function () {<br>\t\t\t\t&#47;&#47;模拟xmlhttprequest请求延时<br>\t\t\t\tsetTimeout(function () {<br>\t\t\t\t\tthis.name = &quot;pony.ma&quot;<br>\t\t\t\t\tthis.age = 39<br>\t\t\t\t\tthis.sex = &quot;female&quot;<br>\t\t\t\t}.bind(this), 100)<br>\t\t\t}<br>\t\t}<br>\t\tuserInfo.updateInfo()","like_count":0},{"had_liked":false,"id":299163,"user_name":"chadm","can_delete":false,"product_type":"c1","uid":1330561,"ip_address":"","ucode":"98B6179BB0FA0F","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/81/5721e429.jpg","comment_is_top":false,"comment_ctime":1624497824,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1624497824","product_id":100033601,"comment_content":"思考题里面的代码有点小问题<br>VM255:5 Uncaught ReferenceError: male is not defined<br><br>看了javascript执行机制的5进，对js里面的作用域、调用链有了新的认识，感觉还得再刷2次，再对ECMA262规范文档看看，把这些内容理解消化一下。学习一门新的语言，就是得学习语言里面的设计精髓，","like_count":0},{"had_liked":false,"id":289349,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1560162,"ip_address":"","ucode":"902E99E507AEC1","user_header":"https://static001.geekbang.org/account/avatar/00/17/ce/62/026e4408.jpg","comment_is_top":false,"comment_ctime":1618986128,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618986128","product_id":100033601,"comment_content":"我觉的是：this 时函数调用的时候确定的，指向它外部对象，当函数被对象调用时指向该对象，普通调用时，相当于在 window.xxx() 下调用，所以指向 window","like_count":0},{"had_liked":false,"id":288391,"user_name":"Geek_251c58","can_delete":false,"product_type":"c1","uid":2542014,"ip_address":"","ucode":"5F2D2CB52A0F4D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/gnubyuV2Z7cV49fmk1bXKP9SOpkEW1oFEonbZ4UdAWZCUIBYkjeMHbUjFrKgbmN8uVXiaAHVdkoPQlaiaudDqc3g/132","comment_is_top":false,"comment_ctime":1618452466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618452466","product_id":100033601,"comment_content":"<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&quot;male&quot;,<br>  updateInfo:function(){<br>    &#47;&#47;模拟xmlhttprequest请求延时<br>    setTimeout((function(){<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &quot;female&quot;<br>      console.log(userInfo)<br>    }).bind(this),100)<br>  }<br>}<br><br>userInfo.updateInfo()","like_count":0},{"had_liked":false,"id":283562,"user_name":"丁丁丁丁丁大树。","can_delete":false,"product_type":"c1","uid":1351418,"ip_address":"","ucode":"9145022F723883","user_header":"https://static001.geekbang.org/account/avatar/00/14/9e/fa/8d206a46.jpg","comment_is_top":false,"comment_ctime":1615818981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615818981","product_id":100033601,"comment_content":"李老师你好，既然箭头函数不会创建自己得执行上下文，是不是意味着箭头函数也不会有自己的作用域？","like_count":0},{"had_liked":false,"id":279666,"user_name":"Geek_2753cc","can_delete":false,"product_type":"c1","uid":1759808,"ip_address":"","ucode":"9A108A3E1FFC6B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRPuYmxCsTaEroajHBWnBALgPW1PFYXviarfeCpvIGap5xZ3uo6XOyW6QA4ibvuyX0w3YsW0aYRf8w/132","comment_is_top":false,"comment_ctime":1613896605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613896605","product_id":100033601,"comment_content":"老师，箭头函数的this可以理解为外部函数的闭包吗？","like_count":0},{"had_liked":false,"id":276496,"user_name":"于恺雯","can_delete":false,"product_type":"c1","uid":1782333,"ip_address":"","ucode":"FCE678848BE3E7","user_header":"https://static001.geekbang.org/account/avatar/00/1b/32/3d/7cb832ad.jpg","comment_is_top":false,"comment_ctime":1611973737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611973737","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47;模拟xmlhttprequest请求延时<br>    var self = this<br>    setTimeout(function(){<br>      self.name= &quot;pony.ma&quot;<br>      self.age = 39<br>      self.sex = &#39;female&#39;<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()","like_count":0},{"had_liked":false,"id":273048,"user_name":"jarryLee","can_delete":false,"product_type":"c1","uid":1631921,"ip_address":"","ucode":"1392ED306DA5F2","user_header":"","comment_is_top":false,"comment_ctime":1610420740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610420740","product_id":100033601,"comment_content":"李兵老师讲的只是this使用的总结，并没有从原理上讲清楚this为什么是这样，阮老师的JavaScript 的 this 原理http:&#47;&#47;www.ruanyifeng.com&#47;blog&#47;2018&#47;06&#47;javascript-this.html，但是我感觉也没有讲清楚，李兵老师可以梳理一下么","like_count":0},{"had_liked":false,"id":266578,"user_name":"小白菜","can_delete":false,"product_type":"c1","uid":2334321,"ip_address":"","ucode":"48692A4061175E","user_header":"https://static001.geekbang.org/account/avatar/00/23/9e/71/3b548202.jpg","comment_is_top":false,"comment_ctime":1607399565,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607399565","product_id":100033601,"comment_content":"对象里函数嵌套函数，嵌套函数指向的是window<br>对象里的函数this指向对象<br>普通函数，this指向window<br>箭头函数没有自己的执行上下文，所以嵌套函数this指向对象。<br>this和词法作用域无关，是针对对象的。","like_count":0},{"had_liked":false,"id":258327,"user_name":"Geek_802152","can_delete":false,"product_type":"c1","uid":2283204,"ip_address":"","ucode":"FDED4C56D28E2D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/O2E7oAtDV7OJk4EY95nFlj6G6Q3j9YT9MWjQm7BgsqiawUKGRfXOR1bia50kpa1sznCeko6b27e6aAkyEyia5W49Q/132","comment_is_top":false,"comment_ctime":1604387531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604387531","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    setTimeout(function(){<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &#39;female&#39;<br>      console.log(this);<br>    }.bind(this),100)<br>  }<br>}<br>userInfo.updateInfo()","like_count":0},{"had_liked":false,"id":258129,"user_name":"羲和","can_delete":false,"product_type":"c1","uid":1903752,"ip_address":"","ucode":"2B420888B5EB70","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0c/88/aaf7bde9.jpg","comment_is_top":false,"comment_ctime":1604308176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604308176","product_id":100033601,"comment_content":"通过一些方法 修改函数内部this指向 使this指向userInfo","like_count":0},{"had_liked":false,"id":250966,"user_name":"Geek_07ad60","can_delete":false,"product_type":"c1","uid":2041369,"ip_address":"","ucode":"D5381B940BCA87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCiciak9BCOSsuydrXxSklzpzbr3nqj1E5vZCPlPPUSZs5q4R6LAgI56Ria6hdJFEAibvZEca0O5Lxdg/132","comment_is_top":false,"comment_ctime":1601292707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601292707","product_id":100033601,"comment_content":"foo 函数内部的 this 已经指向了 bar 对象，因为通过打印 bar 对象，可以看出 bar 的 myName 属性已经由“极客邦”变为“极客时间”了<br>这句话有点难以理解，是否可用像下面这样理解？<br>使用call相当于把foo的this对象给了bar对象并覆盖相同的属性","like_count":0},{"had_liked":false,"id":250964,"user_name":"Geek_07ad60","can_delete":false,"product_type":"c1","uid":2041369,"ip_address":"","ucode":"D5381B940BCA87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCiciak9BCOSsuydrXxSklzpzbr3nqj1E5vZCPlPPUSZs5q4R6LAgI56Ria6hdJFEAibvZEca0O5Lxdg/132","comment_is_top":false,"comment_ctime":1601292393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601292393","product_id":100033601,"comment_content":"foo 函数内部的 this 已经指向了 bar 对象，因为通过打印 bar 对象，可以看出 bar 的 myName 属性已经由“极客邦”变为“极客时间”了<br><br>感觉这句话有点矛盾了，不好理解。","like_count":0},{"had_liked":false,"id":240474,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1596941911,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1596941911","product_id":100033601,"comment_content":"this是没有作用域概念的，它不会利用outer来找外部函数域，它和outer一样都是上下文的一部分，因此如果要将其引入作用域概念，除了用var self = this来主动将其保存在作用域内之外，还可以利用ES6的新特性=&gt;来定义块，这些函数不会新建上下文，这就让块中的this可以使用该上下文的this.","like_count":0,"discussions":[{"author":{"id":1341893,"avatar":"https://static001.geekbang.org/account/avatar/00/14/79/c5/4098108b.jpg","nickname":"夏超","note":"","ucode":"E66A8C8D802ECB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298285,"discussion_content":"写个demo看看，箭头函数也有执行上下文","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597236096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239632,"user_name":"飏","can_delete":false,"product_type":"c1","uid":1645648,"ip_address":"","ucode":"419D35CD60D280","user_header":"https://static001.geekbang.org/account/avatar/00/19/1c/50/217d8bb4.jpg","comment_is_top":false,"comment_ctime":1596599803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596599803","product_id":100033601,"comment_content":"箭头函数内部的this指向箭头函数定义时父级作用域的this，不是调用时父级作用域的this哦！","like_count":0},{"had_liked":false,"id":234335,"user_name":"蹦哒","can_delete":false,"product_type":"c1","uid":1458931,"ip_address":"","ucode":"56591A657DE7C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epcs6PibsP9vEXv4EibUw3bhQPUK04zRTOvfrvF08TwM67xPb1LBh2uRENHQwo2VqYfC5GhJmM7icxHA/132","comment_is_top":false,"comment_ctime":1594648919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594648919","product_id":100033601,"comment_content":"老师请问：<br>var self = this function bar(){ self.name = &quot;极客邦&quot; }<br><br>这里如果不是用this赋值，而是普通的变量，比如var \ba = &#39;极客邦&#39;，那么bar里面访问a就会报错，因为作用域链是bar函数然后再就是全局作用域了。<br><br>这里具体是怎么处理的呢？this的特殊处理吗","like_count":0},{"had_liked":false,"id":220120,"user_name":"草剑","can_delete":false,"product_type":"c1","uid":1026310,"ip_address":"","ucode":"C6DA55E7E1B701","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/06/9811fb65.jpg","comment_is_top":false,"comment_ctime":1590160143,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590160143","product_id":100033601,"comment_content":"从来没把 this 搞这么明白过，老师从这个角度讲得好透","like_count":0},{"had_liked":false,"id":216349,"user_name":"小玲子ida","can_delete":false,"product_type":"c1","uid":1177005,"ip_address":"","ucode":"A447EF847D375E","user_header":"https://static001.geekbang.org/account/avatar/00/11/f5/ad/2f7d5e50.jpg","comment_is_top":false,"comment_ctime":1589245669,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589245669","product_id":100033601,"comment_content":"<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:male,<br>  updateInfo:function(){<br>    &#47;&#47;模拟xmlhttprequest请求延时<br>    setTimeout(function(){<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = female<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()<br><br><br>最想想到的修改方式：<br><br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:male,<br>  updateInfo:function(){<br>let vm=this；<br>    &#47;&#47;模拟xmlhttprequest请求延时<br>    setTimeout(function(){<br>      vm.name = &quot;pony.ma&quot;<br>      vm.age = 39<br>      vm.sex = female<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()","like_count":0},{"had_liked":false,"id":216079,"user_name":"liuSyen","can_delete":false,"product_type":"c1","uid":1941797,"ip_address":"","ucode":"C6CD48ACE63892","user_header":"https://static001.geekbang.org/account/avatar/00/1d/a1/25/8dcface4.jpg","comment_is_top":false,"comment_ctime":1589184664,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589184664","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47;模拟xmlhttprequest请求延时<br>    setTimeout(function(){<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &#39;female&#39;<br>    }.call(this),100)<br>  }<br>}<br><br>userInfo.updateInfo()","like_count":0},{"had_liked":false,"id":215314,"user_name":"msl","can_delete":false,"product_type":"c1","uid":1984987,"ip_address":"","ucode":"560435E3548A4E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKQuaDVYz2jWBiaw6ELGcUNVU4U1RonvTQ7lCqvKOtg4Xt5VCEJOicgWVicn7lMEplwIVloytTvsxcgQ/132","comment_is_top":false,"comment_ctime":1588951777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588951777","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    var self = this<br>    console.log(this)<br>    &#47;&#47;模拟xmlhttprequest请求延时<br>    setTimeout(()=&gt;{<br>      console.log(self)<br>      self.name = &quot;pony.ma&quot;<br>      self.age = 39<br>      self.sex = &#39;female&#39;<br>    },2000)<br>  }<br>}<br>userInfo.updateInfo();","like_count":0},{"had_liked":false,"id":213096,"user_name":"麦乐","can_delete":false,"product_type":"c1","uid":1625906,"ip_address":"","ucode":"8FC620003852EB","user_header":"https://static001.geekbang.org/account/avatar/00/18/cf/32/9aede769.jpg","comment_is_top":false,"comment_ctime":1588300961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588300961","product_id":100033601,"comment_content":"讲 this 的话，可以结合《你不知道的 JavaScript 》上卷来对比一下。","like_count":0},{"had_liked":false,"id":211719,"user_name":"阿感","can_delete":false,"product_type":"c1","uid":1910075,"ip_address":"","ucode":"7BCB7E44A832D1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","comment_is_top":false,"comment_ctime":1587998704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587998704","product_id":100033601,"comment_content":"var number = 5;<br>var obj = {<br>    number: 3,<br>    fn: (function () {<br>        var number;<br>        this.number *= 2;<br>        number = number * 2;<br>        number = 3;<br>        return function () {<br>            var num = this.number;<br>            this.number *= 2;<br>            console.log(num);<br>            number *= 3;<br>            console.log(number);<br>        }<br>    })()<br>}<br>var myFun = obj.fn;<br>myFun.call(null);<br>obj.fn();<br>console.log(window.number);<br><br>this经典题<br>掘金整理的资料<br>https:&#47;&#47;github.com&#47;YvetteLau&#47;Blog&#47;issues&#47;6","like_count":0},{"had_liked":false,"id":207247,"user_name":"摩根","can_delete":false,"product_type":"c1","uid":1950802,"ip_address":"","ucode":"628B4F3B79FE7D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/c4/52/74d2ff15.jpg","comment_is_top":false,"comment_ctime":1587034116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587034116","product_id":100033601,"comment_content":"看了老师的几篇文章和还是有一些迷惑的地方，就是作用域和执行上下文环境是不是还是有一些联系呢？我的看法是这样的：作用域是在编写代码的时候就确定了，而执行上下文是代码执行的时候才创建的，在执行阶段寻值是沿着作用域链去找的，是不是他查找位置是由作用域链决定的，但是值还是在执行上下文中的变量环境中找的。即上下文环境中有一个outer属性连接当前执行上下文和外层执行上下文，这种关系跟作用域链的关系一样。如果说他们没有关系，那在作用域中变量的值什么时候上去的呢？","like_count":0},{"had_liked":false,"id":207246,"user_name":"摩根","can_delete":false,"product_type":"c1","uid":1950802,"ip_address":"","ucode":"628B4F3B79FE7D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/c4/52/74d2ff15.jpg","comment_is_top":false,"comment_ctime":1587033965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587033965","product_id":100033601,"comment_content":"看了老师的这几篇文章之后还有一个疑惑。老师这里说了作用于和执行上下文没有关系，即他们的区别。但是我认为如果他们没有联系有些逻辑说不通。我想问下有没有这样一种关系：","like_count":0},{"had_liked":false,"id":204178,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1586346910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586346910","product_id":100033601,"comment_content":"老师，请问js有这么多设计缺陷 为啥还能有这么广泛的应用","like_count":0},{"had_liked":false,"id":191928,"user_name":"汪小鱼","can_delete":false,"product_type":"c1","uid":1389719,"ip_address":"","ucode":"10D04C8AC93D80","user_header":"https://static001.geekbang.org/account/avatar/00/15/34/97/85ba8ac4.jpg","comment_is_top":false,"comment_ctime":1584803962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584803962","product_id":100033601,"comment_content":"思路挺好的，结合语言设计缺陷，透彻分析问题。","like_count":0},{"had_liked":false,"id":191188,"user_name":"墨灵","can_delete":false,"product_type":"c1","uid":1409700,"ip_address":"","ucode":"185D70CA20BEEE","user_header":"https://static001.geekbang.org/account/avatar/00/15/82/a4/a92c6eca.jpg","comment_is_top":false,"comment_ctime":1584753124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584753124","product_id":100033601,"comment_content":"this的指向问题是javascript的一大难点，最终还是要看谁去调用才能确定this到底是什么。","like_count":0},{"had_liked":false,"id":190910,"user_name":"FreezeSoul","can_delete":false,"product_type":"c1","uid":1015930,"ip_address":"","ucode":"0B67142C4EA3D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/7a/02fdf1a2.jpg","comment_is_top":false,"comment_ctime":1584708567,"is_pvip":false,"replies":[{"id":"74339","content":"v8专栏补这个","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1585223842,"ip_address":"","comment_id":190910,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1584708567","product_id":100033601,"comment_content":"感觉还缺一个property，原型链","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488076,"discussion_content":"v8专栏补这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585223842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015930,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/80/7a/02fdf1a2.jpg","nickname":"FreezeSoul","note":"","ucode":"0B67142C4EA3D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214722,"discussion_content":"已购了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585228871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159863,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1575813395,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575813395","product_id":100033601,"comment_content":"一般老说，人们更习惯于lexically寻找标识符;<br>解决this动态性带来的不稳定问题，可以通过将this机制转化为词法作用域的方式来实现。<br>无论是 self=this 还是arrow function，都是通过这种方式来实现；如果使用new，bind, apply的方式其实会定死，反而倒是觉得没有词法作用域链这么灵活；","like_count":0},{"had_liked":false,"id":159790,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1575790029,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575790029","product_id":100033601,"comment_content":"“ES6 中的箭头函数并不会创建其自身的执行上下文，所以箭头函数中的 this 取决于它的外部函数”, 这句话中，它的“外部函数”应该如何理解？是指lexical scope的外部，还是指执行上下文的外部？","like_count":0},{"had_liked":false,"id":156265,"user_name":"vianem","can_delete":false,"product_type":"c1","uid":1748290,"ip_address":"","ucode":"59A2D19426ABC4","user_header":"","comment_is_top":false,"comment_ctime":1574845615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574845615","product_id":100033601,"comment_content":"上一节说道全局执行上下文的outer为null，但是这一节似乎表达了全局执行上下文的outer指向window对象？","like_count":0},{"had_liked":false,"id":146487,"user_name":"senekis","can_delete":false,"product_type":"c1","uid":1446025,"ip_address":"","ucode":"CD88681F0278FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erTlRJ6skf7iawAeqNfIT1PPgjD7swUdRIRkX1iczjj97GNrxnsnn3QuOhkVbCLgFYAm7sMZficNTSbA/132","comment_is_top":false,"comment_ctime":1572535854,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572535854","product_id":100033601,"comment_content":"老师的这几篇文章太精彩了，解答了我学习js中很多疑问～！非常感谢老师！<br>","like_count":0},{"had_liked":false,"id":143085,"user_name":"给我一片海","can_delete":false,"product_type":"c1","uid":1339296,"ip_address":"","ucode":"9E6875283F3D34","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/a0/f9cede41.jpg","comment_is_top":false,"comment_ctime":1571628056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571628056","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    setTimeout(function(){<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &#39;female&#39;<br>    }.bind(this),100)<br>  }<br>}<br><br>userInfo.updateInfo()","like_count":0},{"had_liked":false,"id":141659,"user_name":"tongmin_tsai","can_delete":false,"product_type":"c1","uid":1045090,"ip_address":"","ucode":"D9423E770D5846","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/62/f873cd8f.jpg","comment_is_top":false,"comment_ctime":1571208743,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571208743","product_id":100033601,"comment_content":"老师，箭头函数里面还是迷惑，望解答，代码示例如下：<br>let person1 = {<br>    name:&#39;jike&#39;,<br>    init:function(){<br>        document.body.onclick = ()=&gt;{<br>            console.log(this);             <br>        }<br>    }<br>}<br>person1.init()<br>1、这里的this找到函数init函数定义时的this，所以要看运行时init函数调用执行上下文的this是谁，因为运行时是以person1调用的，所以这里的this是person1，这样理解对吗？<br>let person2 = {<br>    name:&#39;jike&#39;,<br>    init:()=&gt;{<br>        document.body.onclick = ()=&gt;{<br>            console.log(this);<br>        }<br>    }<br>}<br>person2.init()<br>2、这里的this找到函数init函数定义时的this，由于init自身也是箭头函数，没有this，所以继续往上找，但是init继续往上找不应该是person2吗？为什么这里的this却是window？<br>望老师可以抽空解答一下疑惑","like_count":0,"discussions":[{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250165,"discussion_content":"第1个，箭头函数中的 this 取决于它的外部函数，继承调用函数中的 this。person1 的init函数里的this是person1。第2个因为person2 的init函数是剪头函数，继续往外找this就是window了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587995447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138321,"user_name":"花儿与少年","can_delete":false,"product_type":"c1","uid":1046304,"ip_address":"","ucode":"E2D685737E4F1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","comment_is_top":false,"comment_ctime":1570163176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570163176","product_id":100033601,"comment_content":"请教老师:你说箭头函数不会创建其执行上下文。那么没有包裹函数的箭头函数在被调用的时候 他所在的执行上下文状态是如何的","like_count":0},{"had_liked":false,"id":137982,"user_name":"Cris","can_delete":false,"product_type":"c1","uid":1473520,"ip_address":"","ucode":"F8A287134F1078","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","comment_is_top":false,"comment_ctime":1569949317,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569949317","product_id":100033601,"comment_content":"看完了这篇我才搞清楚this居然有3种: 全局执行上下文中的 this、函数中的 this 和 eval 中的 this。而我们经常讨论的其实只是函数中的this","like_count":0},{"had_liked":false,"id":137980,"user_name":"Cris","can_delete":false,"product_type":"c1","uid":1473520,"ip_address":"","ucode":"F8A287134F1078","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","comment_is_top":false,"comment_ctime":1569948940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569948940","product_id":100033601,"comment_content":"看完了浏览器的执行机制模块才发现this不是执行上下文，而是执行上下文的一个部分，执行上下文由四部分组成：变量环境，词法环境，outer(指向外部执行上下文)，this(由函数调用时，根据调用方式动态绑定)","like_count":0},{"had_liked":false,"id":136600,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1569479534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569479534","product_id":100033601,"comment_content":"老师，关于setTimeout使用call的方式来调用，如下：<br>setTimeout.call(this, function() {<br><br>}, 1000);<br><br>var obj = {};<br>setTimeout.call(obj, function() {<br><br>}, 1000); &#47;&#47;Uncaught TypeError: Illegal invocation<br>为何会报错？？？？","like_count":0},{"had_liked":false,"id":130857,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1567560499,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567560499","product_id":100033601,"comment_content":"js中经常用$(&quot;#id&quot;).onClick(function() {this.val() = xxx}),请问这里面的this为什么不是指向的是window对象，而是指向的是选择的元素对象！","like_count":0,"discussions":[{"author":{"id":1234697,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d7/09/63ba546a.jpg","nickname":"亮","note":"","ucode":"E703B472ECB944","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11528,"discussion_content":"应该是onClick的内部做了处理，让函数的this指向了元素 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568388054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129552,"user_name":"tick","can_delete":false,"product_type":"c1","uid":1106123,"ip_address":"","ucode":"D2C864306C06CB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","comment_is_top":false,"comment_ctime":1567153308,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567153308","product_id":100033601,"comment_content":"第十讲的outer是在变量环境，这里看的图outer又不在变量环境里，outer，this，变量环境，词法环境这些的具体分布是什么样的呀？","like_count":0},{"had_liked":false,"id":129468,"user_name":"Geek_b42f75","can_delete":false,"product_type":"c1","uid":1609471,"ip_address":"","ucode":"DCE04A7A714EEA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKpW6pOyXOVXF31iaLJsxAqEoPs5pa4om9icGU8fEECAaA1ZPLB21TgyNRiaibypChBiaBrSs3iaMau4qzg/132","comment_is_top":false,"comment_ctime":1567133993,"is_pvip":false,"replies":[{"id":"48250","content":"<br>你这个代码是先执行 console.log(userInfo.age)，<br>在执行updateInfo","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567149931,"ip_address":"","comment_id":129468,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1567133993","product_id":100033601,"comment_content":"发现一个事，虽然setTimeout改成箭头函数了，里面的this指向userInfo这个对象了。<br>但是在console.log(userInfo.age)打印age的时候，为什么还是13，没有改成39呢？<br>我看不用setTimeout，直接在updateInfo方法里调用this.age = 39是能改变的。<br>let userInfo = {<br>     name:&quot;jack.ma&quot;,<br>     age:13,<br>     sex:&#39;male&#39;,<br>     updateInfo:function(){<br>        &#47;&#47; this.age = 39<br>        &#47;&#47; 模拟 xmlhttprequest 请求延时<br>        setTimeout( () =&gt; {<br>            this.name = &quot;pony.ma&quot;<br>            this.age = 39<br>            this.sex = &#39;female&#39;<br>         },100)<br>      }<br>}<br>userInfo.updateInfo()<br>console.log(userInfo.age)","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465486,"discussion_content":"\n你这个代码是先执行 console.log(userInfo.age)，\n在执行updateInfo","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567149931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1391792,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3c/b0/37a7c84d.jpg","nickname":"飞","note":"","ucode":"04CDE2541FFEB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6845,"discussion_content":"因为setTimeout是异步的。值还没被改变就执行了console.log。所以打印的是13","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567136674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213115,"discussion_content":"事件轮循","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585052686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129461,"user_name":"This","can_delete":false,"product_type":"c1","uid":1338696,"ip_address":"","ucode":"7FD1969C9C38D0","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/48/e04411d5.jpg","comment_is_top":false,"comment_ctime":1567133175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567133175","product_id":100033601,"comment_content":"思路清晰，是我看过讲解最清楚的this文章","like_count":0},{"had_liked":false,"id":129298,"user_name":"stone","can_delete":false,"product_type":"c1","uid":1112708,"ip_address":"","ucode":"3FA105FB89CF5F","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/84/b91ee3a9.jpg","comment_is_top":false,"comment_ctime":1567081861,"is_pvip":false,"replies":[{"id":"48261","content":"逻辑没问题，代码有几处问题，执行不了，可以再修改下","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567150614,"ip_address":"","comment_id":129298,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567081861","product_id":100033601,"comment_content":"<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:male,<br>  &#47;&#47; 1, <br>  const that = this<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(function(){<br>      that.name = &quot;pony.ma&quot;<br>      that.age = 39<br>      that.sex = female<br>    },100)<br>  }<br><br>  &#47;&#47; 2 <br>  updateInfo :function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(() =&gt; {<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = female<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()<br>","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465388,"discussion_content":"逻辑没问题，代码有几处问题，执行不了，可以再修改下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567150614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129262,"user_name":"monalisali","can_delete":false,"product_type":"c1","uid":1299521,"ip_address":"","ucode":"1FDEC87C133E28","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJbh5FQajwKhNlMrkoSklPpOXBtEYXCLvuWibhfWIS9QxHWDqzhEHJzEdmtUiaiaqFjfpsr2LwgNGpbQ/132","comment_is_top":false,"comment_ctime":1567072164,"is_pvip":false,"replies":[{"id":"48262","content":"这也是一种思路，不过建议优先考虑使用箭头函数","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567150704,"ip_address":"","comment_id":129262,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567072164","product_id":100033601,"comment_content":"思考题：<br>这份代码在开发中是很常见的一种操作，调用了api后，希望在callback中执行一些操作。但此时，callback中的this已经不是原先那个caller了（即题目中的updateInfo）, 而是callback<br><br>常见的方式是在后台的api中返回一个对象，如：{result: true, data:{name:&#39;pony.ma&#39;,age:39, sex:&#39;female&#39;}};<br><br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(function(resp){<br>\t  if(resp.result){<br>\t     var data = {name:&#39;pony.ma&#39;, age:39, sex:&#39;female&#39;}<br>         userInfo.name = data.name;<br>          userInfo.age = data.age;<br>          userInfo.sex = data.sex<br>\t  }<br>      <br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()<br>","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465368,"discussion_content":"这也是一种思路，不过建议优先考虑使用箭头函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567150704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129260,"user_name":"谢海涛","can_delete":false,"product_type":"c1","uid":1216699,"ip_address":"","ucode":"9408053AF26876","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/bb/c29f0f99.jpg","comment_is_top":false,"comment_ctime":1567072138,"is_pvip":false,"replies":[{"id":"48264","content":"用箭头函数代替 原函数，是可以的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567150737,"ip_address":"","comment_id":129260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567072138","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&quot;male&quot;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(()=&gt;{<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &quot;female&quot;<br>    },100)<br>  }<br>}","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465366,"discussion_content":"用箭头函数代替 原函数，是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567150737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129252,"user_name":"依然爱你","can_delete":false,"product_type":"c1","uid":1336712,"ip_address":"","ucode":"9A386C68112716","user_header":"https://static001.geekbang.org/account/avatar/00/14/65/88/2aba7bb0.jpg","comment_is_top":false,"comment_ctime":1567071315,"is_pvip":false,"replies":[{"id":"48266","content":"箭头函数执行环节比块级作用域的内容要做，比函数执行上下文的内容要少很多！","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567150785,"ip_address":"","comment_id":129252,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567071315","product_id":100033601,"comment_content":"和某位仁兄同样的问题，箭头函数没有自己的执行上下文，那么里面的变量环境和词法环境在哪？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465360,"discussion_content":"箭头函数执行环节比块级作用域的内容要做，比函数执行上下文的内容要少很多！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567150785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129246,"user_name":"羽蝶曲","can_delete":false,"product_type":"c1","uid":1337216,"ip_address":"","ucode":"FEA9FB7F321874","user_header":"https://static001.geekbang.org/account/avatar/00/14/67/80/dae518d2.jpg","comment_is_top":false,"comment_ctime":1567070366,"is_pvip":false,"replies":[{"id":"48269","content":"就是这样规定，对象调用一个函数，函数执行上下文中的中的this就是指向这个对象，大家都按照规定来实现的！<br><br>而foo =  myObj.showThis,<br>foo()前面已经没有对象调用了，正常情况下，JavaScript就会设置其执行上下文中的this为全局环境中的this！<br><br>严格模式下会设置为NULL","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567151020,"ip_address":"","comment_id":129246,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567070366","product_id":100033601,"comment_content":"var myObj = {<br>  name : &quot; 极客时间 &quot;,<br>  showThis: function(){<br>    this.name = &quot; 极客邦 &quot;<br>    console.log(this)<br>  }<br>}<br>var foo = myObj.showThis<br>foo();<br>(myObj.showThis)();<br>老师，您好，我想问个问题，为何(myObj.showThis)()的this指向的是myObj而不是window呢，和foo = myObj.showThis的区别是什么呢？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465355,"discussion_content":"就是这样规定，对象调用一个函数，函数执行上下文中的中的this就是指向这个对象，大家都按照规定来实现的！\n\n而foo =  myObj.showThis,\nfoo()前面已经没有对象调用了，正常情况下，JavaScript就会设置其执行上下文中的this为全局环境中的this！\n\n严格模式下会设置为NULL","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567151020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129245,"user_name":"羽蝶曲","can_delete":false,"product_type":"c1","uid":1337216,"ip_address":"","ucode":"FEA9FB7F321874","user_header":"https://static001.geekbang.org/account/avatar/00/14/67/80/dae518d2.jpg","comment_is_top":false,"comment_ctime":1567070313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567070313","product_id":100033601,"comment_content":"var myObj = {<br>  name : &quot; 极客时间 &quot;,<br>  showThis: function(){<br>    this.name = &quot; 极客邦 &quot;<br>    console.log(this)<br>  }<br>}<br>var foo = myObj.showThis<br>foo();<br>(myObj.showThis)();","like_count":0},{"had_liked":false,"id":129234,"user_name":"蓝配鸡","can_delete":false,"product_type":"c1","uid":1348738,"ip_address":"","ucode":"C79A7CA8885B7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/82/d0a417ba.jpg","comment_is_top":false,"comment_ctime":1567068048,"is_pvip":false,"replies":[{"id":"48270","content":"是的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567151041,"ip_address":"","comment_id":129234,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567068048","product_id":100033601,"comment_content":"思考题个人看法<br><br>settimeout中的回掉函数中的this是window<br><br>所以最终结果window里多了几个变量<br>调用的对象本身并没有update","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465348,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567151041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129229,"user_name":"歌在云端","can_delete":false,"product_type":"c1","uid":1110238,"ip_address":"","ucode":"1C876780C9D25E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/de/ef564e67.jpg","comment_is_top":false,"comment_ctime":1567066732,"is_pvip":true,"replies":[{"id":"48272","content":"箭头函数可以的啊，你把你完整测试代码贴出来看看","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567151191,"ip_address":"","comment_id":129229,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567066732","product_id":100033601,"comment_content":"    let userInfo = {<br>        name: &quot;jack.ma&quot;,<br>        age: 13,<br>        sex: &quot;male&quot;,<br>        updateInfo: function () {<br>            &#47;&#47; 模拟 xmlhttprequest 请求延时<br><br>            &#47;&#47; setTimeout(function () {<br>            &#47;&#47;     this.name = &quot;pony.ma&quot;<br>            &#47;&#47;     this.age = 39<br>            &#47;&#47;     this.sex = &quot;female&quot;<br>            &#47;&#47; }.call(this), 100)<br>            setTimeout( () =&gt;{<br>                this.name = &quot;pony.ma&quot;<br>                this.age = 39<br>                this.sex = &quot;female&quot;<br>            }, 100)<br>        }<br>    }<br>试了一下用箭头函数和将this绑定到一个self变量上面都不可以，只有用call里面传入this才行。老师能讲一下为什么吗","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465345,"discussion_content":"箭头函数可以的啊，你把你完整测试代码贴出来看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567151191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/de/ef564e67.jpg","nickname":"歌在云端","note":"","ucode":"1C876780C9D25E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6873,"discussion_content":"代码就是我贴的，没有注释的就是箭头函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567151271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129213,"user_name":"羽蝶曲","can_delete":false,"product_type":"c1","uid":1337216,"ip_address":"","ucode":"FEA9FB7F321874","user_header":"https://static001.geekbang.org/account/avatar/00/14/67/80/dae518d2.jpg","comment_is_top":false,"comment_ctime":1567063354,"is_pvip":false,"replies":[{"id":"48319","content":"箭头函数没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567156242,"ip_address":"","comment_id":129213,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567063354","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(()=&gt;{<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &#39;female&#39;<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465337,"discussion_content":"箭头函数没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567156242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129144,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1567049367,"is_pvip":false,"replies":[{"id":"48301","content":"没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567153529,"ip_address":"","comment_id":129144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567049367","product_id":100033601,"comment_content":"思考题：读了老师的文章，很容易解决这个问题。三种方式：<br>1.定义局部self：var self = this<br>2.使用箭头函数<br>3.内部function使用bind：setTimeout(function(){...}.bind(userInfo),100)","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465303,"discussion_content":"没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567153529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129127,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1567045905,"is_pvip":false,"replies":[{"id":"48306","content":"我认为主要两点：<br>第一个解决函数中this带来的问题<br>第二个逐步解决变量提升带来的问题，比如移除了变量环境中的arguments。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567154164,"ip_address":"","comment_id":129127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567045905","product_id":100033601,"comment_content":"setTimeout的第一个参数是一个函数，这个函数将会延迟执行，执行时，这个函数的this将会指向全局window。解决办法就像文中提到的两种方式：使用self变量保存this或者使用箭头函数。<br><br>之前我是这么记忆this指向的：对于函数中的this，谁调用了这个函数，函数的this就指向谁；对于箭头函数，定义的时候就决定了this指向，在哪里定义的this就指向谁。<br><br>另外关于改变this的第二种方式：通过对象调用方式设置。利用这种方式，可以用来模拟实现call&#47;apply&#47;bind方法。<br><br>执行上下文包括：变量环境、词法环境、外部环境、this。<br><br>除了这种标准概念式的东西，其实更像知道为何这样设计，浏览器是如何处理的。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465293,"discussion_content":"我认为主要两点：\n第一个解决函数中this带来的问题\n第二个逐步解决变量提升带来的问题，比如移除了变量环境中的arguments。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567154164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129123,"user_name":"ChaoZzz","can_delete":false,"product_type":"c1","uid":1007680,"ip_address":"","ucode":"E338FEF55D9BAA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/40/e6d4c1b4.jpg","comment_is_top":false,"comment_ctime":1567045012,"is_pvip":false,"replies":[{"id":"48307","content":"很赞","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567154197,"ip_address":"","comment_id":129123,"utype":1}],"discussion_count":5,"race_medal":0,"score":"1567045012","product_id":100033601,"comment_content":"思考题：<br>1. 变量 self 保存外层 this<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>\tconst self = this;<br>    setTimeout(function(){<br>      self.name = &quot;pony.ma&quot;<br>      self.age = 39<br>      self.sex = &#39;female&#39;<br>    },100)<br>  }<br>}<br><br>2. 自执行函数把外层 this 传进去<br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout((function(context){<br>      context.name = &quot;pony.ma&quot;<br>      context.age = 39<br>      context.sex = &#39;female&#39;<br>    })(this),100)<br>  }<br>}<br><br>3. 改为箭头函数不创建执行上下文直接引用外层函数 this<br><br>let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&#39;male&#39;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    setTimeout(() =&gt; {<br>      this.name = &quot;pony.ma&quot;<br>      this.age = 39<br>      this.sex = &#39;female&#39;<br>    },100)<br>  }<br>}","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465291,"discussion_content":"很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567154197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624506,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/ba/f50e9ea4.jpg","nickname":"潘启宝","note":"","ucode":"8E697C7164F2E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6677,"discussion_content":"我这种最简洁方便：\nlet userInfo = {\n  name:&#34;jack.ma&#34;,\n  age:13,\n  sex:&#39;male&#39;,\n  updateInfo:function(){\n    // 模拟 xmlhttprequest 请求延时\n    setTimeout(function(){\n      this.name = &#34;pony.ma&#34;\n      this.age = 39\n      this.sex = &#39;female&#39;\n    }.bind(this),100)\n  }\n}\nuserInfo.updateInfo()","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567046862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1740548,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8f/04/508f860b.jpg","nickname":"学习使人进步","note":"","ucode":"D959566A25D759","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64824,"discussion_content":"updateInfo的this是执行时确定，你这都没执行，没意义啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574954822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1527910,"avatar":"https://static001.geekbang.org/account/avatar/00/17/50/66/f568a059.jpg","nickname":"重生","note":"","ucode":"4A7B65B10B6648","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7020,"discussion_content":"试过没？行得通吗，呵呵","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567266209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1007680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/60/40/e6d4c1b4.jpg","nickname":"ChaoZzz","note":"","ucode":"E338FEF55D9BAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1527910,"avatar":"https://static001.geekbang.org/account/avatar/00/17/50/66/f568a059.jpg","nickname":"重生","note":"","ucode":"4A7B65B10B6648","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7023,"discussion_content":"？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567270319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7020,"ip_address":""},"score":7023,"extra":""}]}]},{"had_liked":false,"id":129119,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1567044572,"is_pvip":false,"replies":[{"id":"48308","content":"你可以把箭头函数看成是简化版的函数，砍掉了很多函数执行上下文的组件，但是又比作用域所包含的内容多。<br><br>是把双刃剑吧，比如增加了学习成本，但同时也提供了便利性。<br><br>合适的场景使用会使得代码更加简洁易懂，使用不当也会引起很多问题。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567154734,"ip_address":"","comment_id":129119,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567044572","product_id":100033601,"comment_content":"老师，你不觉得箭头函数这种“与众不同的没有自己上下文”的设计，也是一种问题吗？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465289,"discussion_content":"你可以把箭头函数看成是简化版的函数，砍掉了很多函数执行上下文的组件，但是又比作用域所包含的内容多。\n\n是把双刃剑吧，比如增加了学习成本，但同时也提供了便利性。\n\n合适的场景使用会使得代码更加简洁易懂，使用不当也会引起很多问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567154734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1409700,"avatar":"https://static001.geekbang.org/account/avatar/00/15/82/a4/a92c6eca.jpg","nickname":"墨灵","note":"","ucode":"185D70CA20BEEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210513,"discussion_content":"相反，箭头函数正好是为了解决js的this混乱的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584749583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129041,"user_name":"wuqilv","can_delete":false,"product_type":"c1","uid":1169314,"ip_address":"","ucode":"B9C4A2C2FF32AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/a2/5f6b90a9.jpg","comment_is_top":false,"comment_ctime":1567016107,"is_pvip":false,"replies":[{"id":"48318","content":"没问题","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1567156208,"ip_address":"","comment_id":129041,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567016107","product_id":100033601,"comment_content":"let userInfo = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&quot;male&quot;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    that = this<br>    setTimeout(function(){<br>      that.name = &quot;pony.ma&quot;<br>      that.age = 39<br>      that.sex = &quot;female&quot;<br>    },100)<br>  }<br>}<br><br>userInfo.updateInfo()","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465237,"discussion_content":"没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567156208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1527910,"avatar":"https://static001.geekbang.org/account/avatar/00/17/50/66/f568a059.jpg","nickname":"重生","note":"","ucode":"4A7B65B10B6648","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7019,"discussion_content":"？敲入代码试试就知道，根本行不通哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567266086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129040,"user_name":"wuqilv","can_delete":false,"product_type":"c1","uid":1169314,"ip_address":"","ucode":"B9C4A2C2FF32AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/a2/5f6b90a9.jpg","comment_is_top":false,"comment_ctime":1567016086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567016086","product_id":100033601,"comment_content":"let userInfo112 = {<br>  name:&quot;jack.ma&quot;,<br>  age:13,<br>  sex:&quot;male&quot;,<br>  updateInfo:function(){<br>    &#47;&#47; 模拟 xmlhttprequest 请求延时<br>    that = this<br>    setTimeout(function(){<br>      that.name = &quot;pony.ma&quot;<br>      that.age = 39<br>      that.sex = &quot;female&quot;<br>    },100)<br>  }<br>}<br><br>userInfo112.updateInfo()<br>","like_count":0}]}