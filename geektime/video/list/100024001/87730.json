{"id":87730,"title":"33 | 对象池","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":82992,"user_name":"纛下靥狗","can_delete":false,"product_type":"c3","uid":1004678,"ip_address":"","ucode":"116CBB7D30427F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/86/0591280e.jpg","comment_is_top":false,"comment_ctime":1554367214,"is_pvip":false,"replies":[{"id":29968,"content":"很赞！在可执行的代码中学习！\n代码我会尽快提交，并通知平台更新。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1554377756,"ip_address":"","comment_id":82992,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"蔡老师您好\n在对象池一课我参考之前的课程使用unsafe.Pointer在不放回的情况下打出了每个对象的地址，发现他们都是一样的, 这个时候结构体里没有定义任何成员。\n我把NewObjPool的初始化对象改成了每个都赋予一个id int子成员的情况下10个对象打印出的地址就不同了（预期）\n后来在网上查阅发现这个是空结构体，用unsafe.Sizeof发现占用的大小为0，所以每次初始化的位移就是0，所以每个对象的地址都是相同。\n而如果增加一个int成员的话，Size就会变成8，然后地址的位移也是8.\n\n另外老师github上的代码没有更新了最近。。。","like_count":13,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445806,"discussion_content":"很赞！在可执行的代码中学习！\n代码我会尽快提交，并通知平台更新。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554377756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271153,"user_name":"Geek_d235ed","can_delete":false,"product_type":"c3","uid":2354791,"ip_address":"","ucode":"734D1920B1A27A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Hk6ZTagyeQjcJiaibe4Pmzy9FmGtD2vvuibzmmhjyAyT9qLplax2LNC1tpVIrOSZ0kMiafpiaB6k7Jn7RSOwcTnzgBw/132","comment_is_top":false,"comment_ctime":1609418921,"is_pvip":false,"replies":[{"id":98364,"content":"我猜你是在命令行里制定了obj_pool_test.go, 所以obj_pool.go没有被编译。\n直接在路径下使用go test -v执行看看\n","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1609563382,"ip_address":"","comment_id":271153,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师好，ch32 的对象池，我这边执行起来报了下面错误，能帮忙看下吗？\n\n# command-line-arguments [command-line-arguments.test]\n.\\obj_pool_test.go:10:10: undefined: NewObjPool\n\nCompilation finished with exit code 2\n","like_count":2,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512850,"discussion_content":"我猜你是在命令行里制定了obj_pool_test.go, 所以obj_pool.go没有被编译。\n直接在路径下使用go test -v执行看看\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609563382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234909,"user_name":"Aprelude","can_delete":false,"product_type":"c3","uid":1658796,"ip_address":"","ucode":"840D3F7A35AEEF","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","comment_is_top":false,"comment_ctime":1594824281,"is_pvip":false,"replies":[{"id":87554,"content":"GO中为了优化如果结构体里没有字段只有方法，那么两个结构体的执行结果肯定相同，所以共用一个地址了。\n\n所以你把结构体修改一下：\ntype ReusableObj struct {\n\tx int\n}\n再试试。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1595600258,"ip_address":"","comment_id":234909,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"package ch6\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n\t&quot;testing&quot;\n\t&quot;time&quot;\n\t&quot;unsafe&quot;\n)\n\ntype ReusableObj struct {\n}\n\ntype ObjPool struct {\n\tbufChan chan *ReusableObj &#47;&#47;用于缓冲可重用对象\n}\n\nfunc NewObjPool(numOfObj int) *ObjPool {\n\tobjPool := ObjPool{}\n\tobjPool.bufChan = make(chan *ReusableObj, numOfObj)\n\tfor i := 0; i &lt; numOfObj; i++ {\n\t\tm := &amp;ReusableObj{}\n\t\tfmt.Println(&quot;un:&quot;, unsafe.Pointer(m))\n\t\tobjPool.bufChan &lt;- m\n\t}\n\treturn &amp;objPool\n}\n\nfunc (p *ObjPool) GetObj(timeout time.Duration) (*ReusableObj, error) {\n\tselect {\n\tcase ret := &lt;-p.bufChan:\n\t\treturn ret, nil\n\tcase &lt;-time.After(timeout):\n\t\treturn nil, errors.New(&quot;time out&quot;)\n\t}\n}\n\nfunc (p *ObjPool) ReleaseObj(obj *ReusableObj) error {\n\tselect {\n\tcase p.bufChan &lt;- obj:\n\t\treturn nil\n\tdefault:\n\t\treturn errors.New(&quot;overflow&quot;)\n\t}\n}\n\nfunc TestObjPool(t *testing.T) {\n\tpool := NewObjPool(10)\n\tfor i := 0; i &lt; 11; i++ {\n\t\tif v, err := pool.GetObj(time.Second * 1); err != nil {\n\t\t\tt.Error(err)\n\t\t} else {\n\t\t\tfmt.Println(unsafe.Pointer(v))\n\t\t\t&#47;&#47;if err := pool.ReleaseObj(v); err != nil {\n\t\t\t&#47;&#47;\tt.Error(err)\n\t\t\t&#47;&#47;}\n\t\t}\n\t}\n\tt.Log(&quot;done&quot;)\n}\n忘记了 这个为什么每次输出的第地址都一样啊 大佬解释一下 不是new对象吗","like_count":2,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501543,"discussion_content":"GO中为了优化如果结构体里没有字段只有方法，那么两个结构体的执行结果肯定相同，所以共用一个地址了。\n\n所以你把结构体修改一下：\ntype ReusableObj struct {\n\tx int\n}\n再试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595600258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2640817,"avatar":"","nickname":"罗俊聪","note":"","ucode":"1B0E51A8AC8A70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389624,"discussion_content":"https://dave.cheney.net/2014/03/25/the-empty-struct 看下这篇文章就明白了\n\nimport (\n\t&#34;fmt&#34;\n\t&#34;testing&#34;\n)\n\ntype S struct{}\n\ntype S1 struct {}\n\nfunc (s *S) addr() {\n\tfmt.Printf(&#34;%p\\n&#34;, s)\n}\nfunc (s1 *S1) addr() {\n\tfmt.Printf(&#34;%p\\n&#34;, s1)\n}\n\nfunc TestEmptyStruct(t *testing.T) {\n\tvar a, b S\n\tvar c S1\n\ta.addr()\n\tb.addr()\n\tc.addr()\n}\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629360886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114821,"user_name":"田佳伟","can_delete":false,"product_type":"c3","uid":1034087,"ip_address":"","ucode":"D31C9799F383D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/67/0077314b.jpg","comment_is_top":false,"comment_ctime":1563412213,"is_pvip":false,"replies":[{"id":42049,"content":"较常见的，还可以降级处理，超时后直接从缓存返回历史数据或返回默认数据。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1563498725,"ip_address":"","comment_id":114821,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，假如我用对象池当做MySQL连接池用的话，我创建100个连接，然后在并发情况下连接池空了，这个时候后续的query只能等待或者timeout吗？还有没有别的更好的方案","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458826,"discussion_content":"较常见的，还可以降级处理，超时后直接从缓存返回历史数据或返回默认数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563498725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306909,"user_name":"william","can_delete":false,"product_type":"c3","uid":1161428,"ip_address":"","ucode":"FAD99AA6E375CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/d4/bd22e2c2.jpg","comment_is_top":false,"comment_ctime":1628771967,"is_pvip":false,"replies":[{"id":111652,"content":"谢谢🙏编程一定要亲自动手调试","user_name":"作者回复","user_name_real":"蔡超","uid":1008262,"ctime":1629540616,"ip_address":"","comment_id":306909,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"第一遍直接听，完全忘了，第二遍跟着敲一遍，受益匪浅，感谢老师（赞赞）","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524970,"discussion_content":"谢谢🙏编程一定要亲自动手调试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629540616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280456,"user_name":"金陵一只猪","can_delete":false,"product_type":"c3","uid":1903965,"ip_address":"","ucode":"C1C90B557842B6","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0d/5d/e5010de2.jpg","comment_is_top":false,"comment_ctime":1614221795,"is_pvip":false,"replies":[{"id":101930,"content":"确切的说是把使用完的对象归还回去。","user_name":"作者回复","user_name_real":"蔡超","uid":1008262,"ctime":1614389629,"ip_address":"","comment_id":280456,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，ReleaseObj 解释为 释放对象，但从代码上看，这个方法好像是 向对象池中放入一个对象，是不是我的理解有问题？","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516104,"discussion_content":"确切的说是把使用完的对象归还回去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614389629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81912,"user_name":"Geek_1264yp","can_delete":false,"product_type":"c3","uid":1207367,"ip_address":"","ucode":"DB792F56C26429","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/47/8da914be.jpg","comment_is_top":false,"comment_ctime":1554081951,"is_pvip":false,"replies":[{"id":29702,"content":"后面的高可用性课程会讲。继续看哦","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1554127873,"ip_address":"","comment_id":81912,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师你好，time out在项目中的正确处理是什么？应该不是只报个错，然后输出timeout吧。。","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445389,"discussion_content":"后面的高可用性课程会讲。继续看哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554127873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80695,"user_name":"蓝士钦","can_delete":false,"product_type":"c3","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1553699137,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"一楼[ZY]的留言 “当一个channel满了之后 无法继续插入 会报错，但是放到协程里面却可以在满了之后 继续插入数据 为什么呢？”\n我的理解是这样的：\n1.你的代码里有生产者和消费者，使用for循环开启了10个协程，channel还没满的时候就被消费者提前消费掉了，其实只能添加10数据，可以把消费者去掉， 并且加上日志打印：代码如下：\n\tvar wg sync.WaitGroup\n\tnum := 10\n\tch := make(chan int, num)\n\tfor i := 0; i &lt; 1000; i++ {\n\t\twg.Add(1)\n\t\tgo func(i int) {\n\t\t\tch &lt;- i\t&#47;&#47; 协程满后会阻塞，导致无法执行厦门的wg.Done()导致死锁报异常\n\t\t\tfmt.Printf(&quot;执行协程：%d\\n&quot;,i)\n\t\t\twg.Done()\n\t\t}(i)\n\t\twg.Wait()\n\t}\n\n2.可以在一个协程里循环添加超过channel大小的数据，依旧会阻塞\nfunc TestChannelPush(t *testing.T) {\n\tch := make(chan int, 10)\n\tvar wg sync.WaitGroup\n\twg.Add(1)\n\tpushChannel(ch,&amp;wg)\n\twg.Wait()\n}\n\nfunc pushChannel(ch chan int, wg *sync.WaitGroup) {\n\tgo func() {\n\t\tfor i := 0; i &lt; 100; i++ {\n\t\t\tch &lt;- i\n\t\t}\n\t\twg.Done()\n\t}()\n}\n\n因为这里用了WaitGroup，所以会有死锁，实际上是会阻塞。","like_count":5},{"had_liked":false,"id":80702,"user_name":"蓝士钦","can_delete":false,"product_type":"c3","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1553700059,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"补充一下ZY的留言，channel大小虽然只有10，for循环开启11个协程往channel添加数据，但是因为协程和主程序是异步的所以看不出阻塞，因为后面的消费者程序把channel的数据消费了，所以上面可能存在的阻塞又通了，一边生产一边消费，MQ经常堆包也是类似的情况，在主机内存空间有限的情况下如果消费者处理消息的速度比生产者慢，就有可能堆包，严重的就阻塞。","like_count":4},{"had_liked":false,"id":80549,"user_name":"「ZY」","can_delete":false,"product_type":"c3","uid":1208912,"ip_address":"","ucode":"576332E29CC400","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/50/68304a30.jpg","comment_is_top":false,"comment_ctime":1553679451,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"蔡老师您好\n这节课您里面讲到 当一个channel满了之后 无法继续插入 会报错\n但是放到协程里面却可以在满了之后 继续插入数据 为什么呢？\n申请的时候是10个  插入11个\n\nnum := 10\nch := make(chan int, num)\nfor i := 0; i &lt; num+1; i++ {\n\tgo func(i int) {\n\t\tch &lt;- i\n\t}(i)\n}\n\ntotal := 0\nfor i := 0; i &lt; num+1; i++ {\n\ttotal += &lt;-ch\n}\nfmt.Println(&quot;for total-------&quot;, total)","like_count":4,"discussions":[{"author":{"id":1979090,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/x3gOkI2Dl1Gb3WRic44roicJMILgHfdFRic8nfR7oh0asf0KONEj7U2or6YHMmCcyibskvVE5Pjypz2ALGwBXRyMPA/132","nickname":"中年编程人员","note":"","ucode":"8692C6FA9B0ED3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579289,"discussion_content":"这不是在边进边出吗，肯定没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657293000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80790,"user_name":"肥low","can_delete":false,"product_type":"c3","uid":1043480,"ip_address":"","ucode":"A158AFAAB8C742","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","comment_is_top":false,"comment_ctime":1553734387,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"感觉还是带着写代码比较容易理解","like_count":2},{"had_liked":false,"id":284145,"user_name":"Geek_d021a5","can_delete":false,"product_type":"c3","uid":1805985,"ip_address":"","ucode":"E713C9DC72FBF5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbR2CkXA6ZiaSZibIW7QsibjYMlLiaCRsvibgeEnzWEwUHHw6zX6h6e9DaqLRCX5jqPT6OVWuibhUVZ7mQ/132","comment_is_top":false,"comment_ctime":1616078339,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"对象池\n\n\tGoLand 不能运行，只能切换到文件目录下运行一下命令\n\t什么原因。。。\n\tgo test -v .\\obj_pool_test.go .\\obj_pool.go","like_count":1},{"had_liked":false,"id":353668,"user_name":"李凯","can_delete":false,"product_type":"c3","uid":1197511,"ip_address":"北京","ucode":"8828DCFC48D05B","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/c7/f1c40c89.jpg","comment_is_top":false,"comment_ctime":1659668938,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"可以使用map做对象池么，里面放不同的数据库连接（多个数据源这种ip1:3306,ip2:3306），不同的数据源只实例化一次，如果可以那，这样做有什么弊端么","like_count":0},{"had_liked":false,"id":316214,"user_name":"芒果少侠","can_delete":false,"product_type":"c3","uid":1350159,"ip_address":"","ucode":"98D0BBB52BB80F","user_header":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","comment_is_top":false,"comment_ctime":1634201691,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"笔记：实际工作中，建议用不同的池来缓存不同类型的对象","like_count":0},{"had_liked":false,"id":275074,"user_name":"Geek_d586af","can_delete":false,"product_type":"c3","uid":2161180,"ip_address":"","ucode":"2966DBC6BD9B20","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jtNYcW0hUoI1RzVic1tpJ7mkh4nccicC3aaC4aicYQCy9R1RZBMSWn8qDxjvVKqca9LnWxCfsicEqeW0bUkX6Bogyg/132","comment_is_top":false,"comment_ctime":1611299570,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"有个问题：在main函数中在开始执行时，协程数为1，但是在Test程序里，开始协程数为2，这多出来的一个协程是啥呢？test和main函数的区别","like_count":0},{"had_liked":false,"id":206428,"user_name":"zhimin","can_delete":false,"product_type":"c3","uid":1312130,"ip_address":"","ucode":"DF6DFBEF6FA297","user_header":"https://static001.geekbang.org/account/avatar/00/14/05/82/51cd0a50.jpg","comment_is_top":false,"comment_ctime":1586859421,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"问大家一个环境的问题， 我在github上下载了项目文件，前面章节的测试 执行 go test -v  没有问题， 这一节 执行的时候报告ch32&#47;obj_pool&#47;obj_pool_test.go:10:10: undefined: NewObjPool\n当前的GO_PATH 是包含 当前根目录的  echo $GOPATH              &#47;Volumes&#47;Untitled&#47;go&#47;src&#47;chao \n帮忙解释一下是什么原因吧， 谢谢。 ","like_count":0,"discussions":[{"author":{"id":1312130,"avatar":"https://static001.geekbang.org/account/avatar/00/14/05/82/51cd0a50.jpg","nickname":"zhimin","note":"","ucode":"DF6DFBEF6FA297","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235608,"discussion_content":"知道了， go test -v Sort.go Sort_test.go 就好了 和 go run 一样 ","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587045741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435172,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e6/24/30806a88.jpg","nickname":"right-chen","note":"","ucode":"E0E940E80E7A2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583237,"discussion_content":"顶你上去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659968770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80974,"user_name":"Geek_56ba03","can_delete":false,"product_type":"c3","uid":1448310,"ip_address":"","ucode":"A90E27958D1268","user_header":"https://static001.geekbang.org/account/avatar/00/16/19/76/0bdc18ce.jpg","comment_is_top":false,"comment_ctime":1553767324,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"这就结束啦，等等等更新","like_count":0},{"had_liked":false,"id":80954,"user_name":"「ZY」","can_delete":false,"product_type":"c3","uid":1208912,"ip_address":"","ucode":"576332E29CC400","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/50/68304a30.jpg","comment_is_top":false,"comment_ctime":1553763684,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"感谢 蓝士钦 的回答\n确实是这样的  带长度的channel 在满了之后 会阻塞  \n没满的时候不会阻塞","like_count":0}]}