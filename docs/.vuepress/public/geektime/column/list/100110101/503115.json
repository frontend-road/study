{"id":503115,"title":"04｜State：如何让页面“动”起来？","content":"<p>你好，我是蒋宏伟。</p><p>那么这一讲，我们来讲搭建页面的第二步，让页面“动”起来，这里的“动”说的是在不同场景下，让页面展示出不同的内容。</p><p>怎么让页面“动”起来呢？这就要用到状态 State 了。</p><p>一个页面也好，一个应用也好，只有把状态设计清楚了，程序才能写得好。讲到状态，有些人可能会说，状态不就是页面中那些会“动”的数据吗？这很简单，还有什么好讲的。</p><p>这没错，状态确实是页面中会“动”的数据，但是要把状态用好不容易，有时候容易把状态设计复杂了，不仅代码要写得更多，还容易导致程序维护起来更麻烦。</p><p>这次，我会以搭建一个会“动”的简易购物车页面为例，和你分享下我在这方面的经验。简易购物车页面是这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/dd/9e/dd69765bb8fcb1f9dffyy2df4d2b789e.png?wh=1000x784\" alt=\"图片\"></p><p>它比上一讲的商品表单页多了一些交互，它的所有数据都是从网络请求过来的，这些数据包括商品名称、商品价格、商品数量，数据从网络请求回来后会展示在页面上。你可以点击页面中的加号或减号，来添加数量或减少商品数量，底部的结算总价会随着商品数量的变化而变化。</p><p>要实现这个简易购物车的静态很简单，它只包括两个组件，商品表单组件 ProductTable 和商品组件  ProductRow。完成静态页面的搭建后，接下来就<strong>要让页面“动”起来了</strong>，我把这个过程分成了 4 步来实现，状态初选、状态确定、状态声明、状态更新。</p><!-- [[[read_end]]] --><h2>第一步：状态初选</h2><p>状态初选说的是，先看看页面那些数据是会变化的，这些会变化的数据都可能是状态，我们先把它们找出来。</p><p>程序本身的事件和用户操作都有可能导致页面发生变化，因此我们从这两个方向来进行初选。</p><p>程序本身的事件，比如网络请求、 setTimeout，都可能导致页面发生变化。在购物车页面中，商品列表的数据是从服务端请求过来，在列表数据从服务端回来之前，页面是空白的，在请求过程中会有加载提示，请求成功后购物车页面就会展示出来，当然还要把请求失败的情况考虑进去。</p><p>所以，我圈选出来的第一条动态数据是请求过程，第二条是可能的请求失败情况；第三条是商品表单本身，第四条是所有商品的结算总价。</p><p>用户操作，比如点击、滑动、缩放，也可能导致页面发生变化。在购物车页面中，用户点击加号购物车中的商品数量会增加，点击减号数量会减少。反映商品数量的数据，就是第五条的动态数据。</p><p>现在，我已经把这 5 个初选的状态给你在图中标出来了：</p><p><img src=\"https://static001.geekbang.org/resource/image/43/f3/43bc848544fb40b449c097e6054ac0f3.png?wh=1920x1541\" alt=\"图片\"></p><h2>第二步：状态确定</h2><p>有些人完成状态初选这一步后，就直接写起代码来了，一口气声明了 5 个状态，然后想办法去操作这 5 个状态如何变化。</p><p>但我的经验是，状态初选完成后，不能急着写代码，要先确定一下这些初选状态中那些是真正的状态，把其中无用的状态剔除掉，然后再去写代码。这样代码写得少、写得快，代码逻辑也会更简单一些，也更难出 BUG 一些。</p><p>这些都是我们要在状态确定这一步要做的，我总结了三条经验：</p><p><strong>首先，一件事情一个状态。</strong>我发现有些同学写代码的时候，在定义请求状态时，喜欢用布尔值 isLoading 来表示空闲状态或请求中的状态，用 isError 来表示成功状态或失败状态，明明就是网络请求这一件事，却用了两个状态来表示，这就有点多余了，甚至在一些不好测试的边界条件下可能还会留坑。</p><p>这时其实只需要定义一个状态 ，代码示例如下：</p><pre><code class=\"language-plain\">const requestStatus = {\n  IDLE : 'IDLE',\n  PENDING : 'PENDING',\n  SUCCESS : 'SUCCESS',\n  ERROR : 'ERROR',\n}\n</code></pre><p>这里，我定义的是一个枚举对象 requestStatus，用它来表示请求状态。这个对象有 4 个值，包括请求空闲IDLE、请求中PENDING、请求成功SUCCESS、请求失败ERROR。你看，用一个状态是不是比用两个状态更加贴合请求的实际情况呢？</p><p><strong>第二，重复状态不是状态。</strong>商品组件 ProductRow 中的这个商品数量确实是一个状态，但它却和从网络请求中回来的商品表单状态重复了。从代码层面上，我们确实有办法同时保留两个状态，但这样做就绕弯子了。</p><p>更好的做法是，把这两个在不同组件之间的重复状态进行合并，去掉底层组件的重复状态，只保留顶层组件中的商品数量作为唯一的状态。</p><p><strong>最后，可计算出来的状态不是状态。</strong>一个状态必须不能通过其他状态、属性或变量直接计算出来，能通过其他值计算出来的状态，都不是状态。比如，在购物车页面中，结算总价这个动态数据，是可以通过对所有商品的单价和数量的积进行求和得出来的，所以它不是状态。</p><pre><code class=\"language-plain\">结算总价 = ∑(商品的单价 * 数量)\n</code></pre><p>初选的状态经过以上三步筛选之后，合并了①请求中和②请求失败，避免了重复数据③商品列表和⑤商品数量，根据已有状态推导出了④结算总价。初选状态一共 5 个，最终确定下来就只剩下网络请求状态和商品列表这两个状态了。</p><p>只有确定状态这一步做好了，你声明状态和改变状态，才会变得容易。</p><h2>第三步：状态声明</h2><p>React 提供了 useState 状态声明函数，你可以用它来管理函数组件的状态。</p><p>使用 useState 声明状态时，状态和组件是绑定的关系，useState 在哪个组件中使用，它生成的状态就属于那个组件。由于单向数据流的原因，React 把父组件的状态传给子组件只需要传一次，传给子子组件需要传递两次。</p><p>因此，你在定义状态的时候，一定要先考虑好把状态绑定到哪个组件上。我建议你用<strong>就近原则</strong>来绑定状态，就近原则的意思是哪个组件用上了状态，就优先考虑将状态绑定到该组件上，如果有多个组件使用了同一个状态，则将其绑定到最近的父组件上。这样做能让使用 props 传递状态的次数最少。</p><p>在我们的购物车案例里，你使用就近原则判断一下，<s>你</s>就可以确定购物车页面的两个状态，其实放在 ProductTable 组件中比较合适。</p><p>那接下来的问题是，状态声明代码应该如何写？</p><p>首先，我需要和你强调的是，在 React/React Native 中，所有使用 use 开头的函数，比如接下来要用到 useState 函数，它们都叫<strong>钩子函数（hook function）</strong>。和普通函数不同，你不能把钩子函数写在 if 条件判断中、事件循环中、嵌套的函数中，这些都会导致报错。</p><p>钩子函数类似于 JavaScript 的 <code>import</code> ，你最好在函数组件的顶部使用它们。</p><p>具体声明商品表单状态 products 和请求状态 requestStatus 代码是这样的：</p><pre><code class=\"language-plain\">import React, {useState} from 'react';\n\nexport default function ProductTable() {\n  const [products, setProducts] = useState([]);\n  const [requestStatus, setRequestStatus] = useState('IDLE');\n  // ...\n}\n</code></pre><p>在文件的第一行代码中，我们从 React 中引入 useState 函数，然后在函数组件 ProductTable 的顶部使用了 useState 声明了两个状态。</p><p>useState 函数的入参是状态的默认值，函数的返回值是状态和更新该状态的函数。第一次调用 useState 函数后，就生成了默认值是空数组<code>[]</code> 的商品表单状态 <code>products</code> ，以及设置该状态的函数<code>setProducts</code>。第二次调用 useState 函数后生成了默认值是字符串<code>'IDLE'</code> 的请求状态 requestStatus ，以及设置该状态的函数叫做<code>setRequestStatus</code>。</p><p>如果在 if 中使用了任何的钩子函数，就会报错：</p><pre><code class=\"language-plain\">import React, {useState, useEffect} from 'react';\n\n// 错误\nexport default function ProductTable() {\n  const [requestStatus, setRequestStatus] = useState('IDLE');\n  // ...\n  if(requestStatus === 'ERROR') return &lt;Text&gt;网络出错了&lt;/Text&gt;\n\n  // 在 else 分支中，使用任何 use 开头的钩子函数，都会报错\n  const [products, setProducts] = useState([]);\n  useEffect(() =&gt; {})\n  \n  return &lt;Text&gt;购物车页面&lt;/Text&gt;\n}\n</code></pre><p>在这个错误示例中，我们先使用了 <code>if(requestStatus === 'ERROR')</code> 判断了网络请求状态。如果请求失败，则提示用户“网络出错了”，否则就返回真正的购物车页面。但 <code>if return</code> 后面的代码，就相当于<code>else</code>分支，在分支中使用了钩子函数，比如 useState、useEffect，代码就会报错。</p><p>出现这种报错，是因为 if 破坏了 React 的 <a href=\"https://zh-hans.reactjs.org/docs/hooks-rules.html\">Hook 规则</a>。在 React 的 Hook 机制中，是把 Hook 的调用顺序作为索引，用它把 React 框架内部 state 和其函数组件的 useState 返回值中的 state 给关联起来了。当你使用了 if 的时候，就容易破坏 Hook 的调用顺序，导致 React 不能正确地将框架内部 state 与函数组件 useState 的返回值关联起来，因此 React 在执行的时候就会报错。</p><p>有时候一个函数组件很长，写到后面了，前面的一些逻辑就记不那么清楚了，如果代码写到哪就在哪儿声明一个新状态，一不小心就可能会踩坑。因此，你应该把 use 开头的钩子函数都写在组件的顶部，把 JSX 都写在函数组件的最后面，并使用 <a href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">eslint-plugin-react-hooks</a> 插件来保障 Hook 规则的会被正确执行。</p><h2>第四步：状态更新</h2><p>现在，到了最后一步了。不过，这一步中涉及购物车页面业务实现逻辑的部分，我就不一一介绍了，具体实现代码我放到了附加材料中，这里我想重点和你强调的是如何更新对象类型的状态。</p><p>在 JavaScript 中的数据类型可以分为两类，对象数据类型（Objects）和原始数据类型（Primitive values），对象数据类型包括对象（Object）、数组（Array），原始数据类型有 7 种，比如数字（number）、字符串（string）等等。</p><p>在 React/React Native 中，使用这两类数据类型作为状态都是可以的，但是更新这两类状态的方法不一样，如果你没有理解清楚二者的区别，就容易出现一些低级的 BUG。</p><p>我们先来看原始数据类型的状态如何更新。</p><p>在购物车页面中，商品数量可以通过点击加号进行加一，通过点击减号减一。我们用原始数据类型数字来表示商品数量状态，其代码实现如下：</p><pre><code class=\"language-plain\">export default function Count() {\n  const [count, setCount] = useState(0);\n\n  return (\n    &lt;View&gt;\n      &lt;Text&gt;{count}&lt;/Text&gt;\n      &lt;Button title=\"+\" onPress={() =&gt; setCount(count + 1)} /&gt;\n      &lt;Button title=\"-\" onPress={() =&gt; setCount(count - 1 &gt;=0? count - 1: 0)} /&gt;\n    &lt;/View&gt;\n)};\n</code></pre><p>你可以看到，我们使用 useState 声明了商品数量状态 count 和更新状态的函数 setCount。<br>\n组件初始化时，也就是组件函数第一次调用时，商品数量状态 count 的默认值是 0，页面展示的数字就是 0.</p><p>当你点击页面中的加号（“+”）时，就会触发加号（“+”）点按组件（Button）的点击事件（onPress），此时会调用 setCount 函数更新状态。</p><p>setCount 函数的入参是 count + 1，其中 count 取的是组件第一次调用的默认值 0，0 + 1 = 1，因此新状态就是 1，之后 React/ React Native 会再调用一次组件函数，这一次调用时 useState 声明的状态 count 的值就是新状态的值 1，此时 Text 组件收到的值也是 1，最后页面刷新展示新状态 1。</p><p>第二次点击加号时，也是先更新 React/ React Native 内部的<s>新</s>状态，将它更新到 2，然后再执行一次组件函数，将内部的新状态同步给 count，最后刷新页面展示新状态 2。</p><p>以此类推，<strong>对于原始数据类型而言，调用 setCount 更新原始数据类型状态的值，页面就会发生更新。</strong></p><p>那对象和数组类型的状态如何更新呢？</p><p>我们先声明一个对象状态和一个数组状态，代码如下：</p><pre><code class=\"language-plain\">const [countObject, setCountObject] = useState({num: 0});\nconst [countArray, setCountArray] = useState([0]);\n</code></pre><p>这段代码中，调用了两次 useState，声明一个对象状态 countObject 和一个数组状态 countArray，以及对应的状态更新函数。</p><p>理论上，你可以直接改变对象状态或数组状态的值，再调用状态更新函数，代码如下：</p><pre><code class=\"language-plain\">countObject.num++;\nsetCountObject(countObject)\n\ncountArray[0]++;\nsetCountArray(countArray)\n</code></pre><p>但是你试过后会发现，调用状态更新函数后，页面什么变化都没有，这是为什么呢？<br>\n弄清楚了对象数据类型（Objects）和原始数据类型的区别后，你就明白了。我给你举个例子：</p><pre><code class=\"language-plain\">const countObject = {num: 0}\ncountObject.num++;\n\ncountObject.num === countObject.num // false\ncountObject === countObject // true\nsetCountObject(countObject) // 不更新\n</code></pre><p>你看，当你更新 countObject.num 时，countObject.num 确实更新了，但是 countObject 的引用并没有更新，所以调用 setCountObject 更新状态时，页面没有任何变化。</p><p>这是因为，对象它是一种复合数据类型，它内部的值是可变的（mutable），但它的引用是不可变了（immutable），你更新了对象的内部值后，它的引用并没有发生变化。</p><p>那状态是对象或数组时，应该怎么更新呢？</p><p>业内也有形似 mutable 的更新方案 useImmer，可以通过直接修改变量的值来更新状态。但其底层原理也是，新建一个对象或数组传给状态更新函数，让状态更新函数知道对象或数组确实发生了变化，这时 React/React Native 框架才会帮你更新页面。</p><p>这里，我用的也是直接新建对象、新建数组的方式，代码如下：</p><pre><code class=\"language-plain\">setCountObject({...countObject, num: countObject.num+1});\n\nconst newCountArray = [...newCountArray]\nnewCountArray[0]++;\nsetCountArray(newCountArray)\n</code></pre><p>你可以看到，对于对象状态的更新我是这么处理的，我先创建了一个新对象<code>{}</code>，然后用<code>...</code>的解构的方式将老对象 countObject 的内部值重新赋值给了新对象<code>{}</code>，再指定<code>num</code>属性进行了复写。对于数组状态的更新也是类似的，你可以自己试试。</p><h2>总结</h2><p>这一讲，我们完成搭建页面的第二步：让页面“动”起来。让页面“动”起来，就要用到状态，我们这一讲的具体实现分为 4 个步骤，状态初选、状态确定、状态声明、状态更新。</p><ul>\n<li>状态初选，就是把设计稿中的那些会“动”的数据先选出来；</li>\n<li>状态确定，就是合并同类状态、删除无用状态和衍生状态；</li>\n<li>状态声明，在当前的初学阶段，只需要学会使用 useState 来声明组件状态即可；</li>\n<li>状态更新是最后一步。交互事件和程序事件会触发状态的更新，但状态更新函数并不会帮我们自动合并上一个状态，因此在处理对象状态和数组状态时，每次更新时必须新建一个完整的对象或数组。</li>\n</ul><p>行军作战是兵马未动粮草先行，讲究的是谋而后动。搭建页面、开发组件也是如此，我们也要<strong>代码未动构思先行</strong>，先把组件状态设计好了，简单即美，要是没想清楚弄复杂了，后面填坑成本会很高。</p><h2>附加材料</h2><ol>\n<li>再次强调，学习 React 最好的材料就是 React 新官网，我推荐你去读一读<a href=\"https://beta.reactjs.org/learn/reacting-to-input-with-state\">《如何使用状态响应用户的输入时间》</a>、<a href=\"https://beta.reactjs.org/learn/updating-objects-in-state\">《更新状态对象》</a>和<a href=\"https://beta.reactjs.org/learn/updating-arrays-in-state\">《更新状态数组》</a>。</li>\n<li>实现购物车页面的完整代码，我放在了<a href=\"https://github.com/jiangleo/react-native-classroom/tree/main/src/04_State\">GitHub</a>上。</li>\n</ol><h2>作业</h2><ol>\n<li>请你实现一个井字棋。井字棋的规则和五子棋类似，两人在 3 * 3 格子上进行连珠游戏，任意 3 个标记形成一条直线，则为获胜。在写之前，推荐你先玩一下这个井字棋，了解一下<a href=\"https://codepen.io/gaearon/pen/aWWQOG?editors=0010\">井字棋的最终效果</a>。</li>\n<li>请你思考一下实现一个井字棋，最少需要声明几个状态？</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/59/e0/599257d6cc84ceda0fc5ebe8174af7e0.png?wh=474x347\" alt=\"图片\"></p><p>欢迎在留言区分享你的想法。下一节课我们将来讨论React Native中图片组件的用法和最佳实践，你可以做些准备。我是蒋宏伟，咱们下节课见。</p>","neighbors":{"left":{"article_title":"03｜Style：关于样式你需要知道的三件事","id":501650},"right":{"article_title":"05｜Image：选择适合你的图片加载方式","id":503636}},"comments":[{"had_liked":false,"id":344180,"user_name":"beetcb","can_delete":false,"product_type":"c1","uid":2105664,"ip_address":"","ucode":"9436830F6CBF59","user_header":"","comment_is_top":false,"comment_ctime":1651326400,"is_pvip":false,"replies":[{"id":125671,"content":"给学习点赞👍","user_name":"作者回复","user_name_real":"编辑","uid":1088541,"ctime":1651382707,"ip_address":"","comment_id":344180,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"感谢老师推荐！我自己也去学习了 beta 文档，状态管理那章写得真好，除了有本文中提到的方法，还把 useState useReducer Context 都串起来啦，非常清晰。","like_count":0,"discussions":[{"author":{"id":1088541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/1d/f0f10198.jpg","nickname":"蒋宏伟","note":"","ucode":"02226CABD5ECE7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569251,"discussion_content":"给学习点赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651382707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343333,"user_name":"Le vent se lève","can_delete":false,"product_type":"c1","uid":2542255,"ip_address":"","ucode":"241F32F635AC6D","user_header":"https://static001.geekbang.org/account/avatar/00/26/ca/af/8e93c68c.jpg","comment_is_top":false,"comment_ctime":1650784729,"is_pvip":false,"replies":[{"id":125362,"content":"👏","user_name":"作者回复","user_name_real":"编辑","uid":1088541,"ctime":1650795714,"ip_address":"","comment_id":343333,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"终于运行起来了","like_count":0,"discussions":[{"author":{"id":1088541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/1d/f0f10198.jpg","nickname":"蒋宏伟","note":"","ucode":"02226CABD5ECE7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566905,"discussion_content":"👏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650795714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343326,"user_name":"Le vent se lève","can_delete":false,"product_type":"c1","uid":2542255,"ip_address":"","ucode":"241F32F635AC6D","user_header":"https://static001.geekbang.org/account/avatar/00/26/ca/af/8e93c68c.jpg","comment_is_top":false,"comment_ctime":1650782184,"is_pvip":false,"replies":[{"id":125363,"content":".tsx 文件是 Typescript 文件，Products 是 products 的类型声明","user_name":"作者回复","user_name_real":"编辑","uid":1088541,"ctime":1650795813,"ip_address":"","comment_id":343326,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"老师我想问下productTable。tsx文件里边的fetch请求第二个then中products: Products，这个Products是什么意思呢？可以帮我分析下吗没太看懂？\n","like_count":0,"discussions":[{"author":{"id":1088541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/1d/f0f10198.jpg","nickname":"蒋宏伟","note":"","ucode":"02226CABD5ECE7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566906,"discussion_content":".tsx 文件是 Typescript 文件，Products 是 products 的类型声明","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650795813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342741,"user_name":"请务必优秀","can_delete":false,"product_type":"c1","uid":2025816,"ip_address":"","ucode":"2B7AE4EF41C972","user_header":"https://static001.geekbang.org/account/avatar/00/1e/e9/58/7bb2c561.jpg","comment_is_top":false,"comment_ctime":1650441573,"is_pvip":true,"replies":[{"id":125213,"content":"编译时就生效。入门 Typescript 参考：\n\n&lt;入门-中文&gt;1.2W字 | 了不起的 TypeScript 入门教程：这是掘金最受欢迎的 TypeScript 入门课程，作者将 TypeScript 的入门知识分为了十四个知识点，一步步带你学习。\n\nhttps:&#47;&#47;juejin.cn&#47;post&#47;6844904182843965453","user_name":"作者回复","user_name_real":"编辑","uid":1088541,"ctime":1650463650,"ip_address":"","comment_id":342741,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"interface声明方式在jsx文件怎么生效呢\n","like_count":0,"discussions":[{"author":{"id":1088541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/1d/f0f10198.jpg","nickname":"蒋宏伟","note":"","ucode":"02226CABD5ECE7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565429,"discussion_content":"编译时就生效。入门 Typescript 参考：\n\n&lt;入门-中文&gt;1.2W字 | 了不起的 TypeScript 入门教程：这是掘金最受欢迎的 TypeScript 入门课程，作者将 TypeScript 的入门知识分为了十四个知识点，一步步带你学习。\n\nhttps://juejin.cn/post/6844904182843965453","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650463650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342739,"user_name":"请务必优秀","can_delete":false,"product_type":"c1","uid":2025816,"ip_address":"","ucode":"2B7AE4EF41C972","user_header":"https://static001.geekbang.org/account/avatar/00/1e/e9/58/7bb2c561.jpg","comment_is_top":false,"comment_ctime":1650441523,"is_pvip":true,"replies":[{"id":125214,"content":"这是那个接口？","user_name":"作者回复","user_name_real":"编辑","uid":1088541,"ctime":1650463713,"ip_address":"","comment_id":342739,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"fetch(&#39;https:&#47;&#47;61c48e65f1af4a0017d9966d.mockapi.io&#47;products&#39;)这个接口没有怎么模拟呢","like_count":0,"discussions":[{"author":{"id":1088541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/1d/f0f10198.jpg","nickname":"蒋宏伟","note":"","ucode":"02226CABD5ECE7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565430,"discussion_content":"这是那个接口？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650463713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2542255,"avatar":"https://static001.geekbang.org/account/avatar/00/26/ca/af/8e93c68c.jpg","nickname":"Le vent se lève","note":"","ucode":"241F32F635AC6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565791,"discussion_content":"项目代码中获取列表的那个接口，我在自己模拟一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650543626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360083,"user_name":"Asterisk","can_delete":false,"product_type":"c1","uid":2307798,"ip_address":"北京","ucode":"7BF0654B1141F1","user_header":"https://static001.geekbang.org/account/avatar/00/23/36/d6/343ab8c7.jpg","comment_is_top":false,"comment_ctime":1666167726,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"讲的也有点太简单了，能不能把关键的地方，或者容易入坑的地方好好讲讲。至于基础知识这个官网讲的就挺好了。","like_count":4},{"had_liked":false,"id":340807,"user_name":"Sunny","can_delete":false,"product_type":"c1","uid":1305257,"ip_address":"","ucode":"BB7B274CE0672E","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/a9/0a917f2c.jpg","comment_is_top":false,"comment_ctime":1649153027,"is_pvip":false,"replies":null,"discussion_count":5,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"export default function ProductTable() {\n    &#47;&#47; ...\n}\n请教一下，这也是声明组件么 ？为什么不用 class 声明 ？","like_count":2,"discussions":[{"author":{"id":1081683,"avatar":"https://static001.geekbang.org/account/avatar/00/10/81/53/47be0908.jpg","nickname":"四月一日","note":"","ucode":"798A5713A846C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560150,"discussion_content":"这是函数组件的声明方式。因为useState这种hooks（钩子）要函数组件搭配使用。类组件就不用hooks而是用setState了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1649213086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/1d/f0f10198.jpg","nickname":"蒋宏伟","note":"","ucode":"02226CABD5ECE7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560183,"discussion_content":"是的，函数和类都可以声明 React/React Native 组件。除了部分老代码，现在的业内的主流实践是都是基于 Function 来声明组件了，我们专栏也会使用 Function 这种方式进行组件声明。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1649222686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395511,"avatar":"https://static001.geekbang.org/account/avatar/00/15/4b/37/97caebe6.jpg","nickname":"D先生","note":"","ucode":"B8E1727D04375F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563398,"discussion_content":"都2022年了，class component可以抛弃了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649988816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1591721,"avatar":"https://static001.geekbang.org/account/avatar/00/18/49/a9/225c041f.jpg","nickname":"陈彦祖","note":"","ucode":"75D5ED5BB67B4E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616099,"discussion_content":"这是函数式组件的写法。函数式组件比 class 更适合前端 UI 渲染的特点，也更容容易复用和维护。可以去看看王沛老师的极客时间 React 的入门课，里面很清楚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682586679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1367950,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/8e/844ee007.jpg","nickname":"徐烽","note":"","ucode":"FBD812F14946D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563861,"discussion_content":"可以先过下React Native文档，基础概念得先了解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650097776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351233,"user_name":"江左小海","can_delete":false,"product_type":"c1","uid":1591374,"ip_address":"","ucode":"7FABA95F5C34C2","user_header":"https://static001.geekbang.org/account/avatar/00/18/48/4e/ff28a022.jpg","comment_is_top":false,"comment_ctime":1657628604,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"为什么有jsx，tsx，不都是JS吗，Android开发，对这一块不懂，这个项目也运行不起来，第一个ProductTabled的id找不到，删除后，又说ProductRow没有引入","like_count":1,"discussions":[{"author":{"id":3202151,"avatar":"https://static001.geekbang.org/account/avatar/00/30/dc/67/04a590fa.jpg","nickname":"林平君","note":"","ucode":"3AB8CBB6D214A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593469,"discussion_content":"jsx, tsx是用于react的开发才有的后缀名，本质内部也是写js，使用typescript的就是写ts。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1668242445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3169783,"avatar":"https://static001.geekbang.org/account/avatar/00/30/5d/f7/936e32e3.jpg","nickname":"雨猫","note":"","ucode":"3CDBCB9D6D0081","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586703,"discussion_content":"项目使用了ts的话，组件的后缀都是tsx，如果没有引入ts的话，组件后缀是可以写成js或者jsx的，不知道晚不晚,可以拷贝我的项目：https://github.com/yumaocc/kanabn.git","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1662447929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1591374,"avatar":"https://static001.geekbang.org/account/avatar/00/18/48/4e/ff28a022.jpg","nickname":"江左小海","note":"","ucode":"7FABA95F5C34C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3169783,"avatar":"https://static001.geekbang.org/account/avatar/00/30/5d/f7/936e32e3.jpg","nickname":"雨猫","note":"","ucode":"3CDBCB9D6D0081","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596217,"discussion_content":"我来看看，前段时间在学习基础语法啦，谢谢大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670803168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":586703,"ip_address":"浙江","group_id":0},"score":596217,"extra":""}]}]},{"had_liked":false,"id":384470,"user_name":"angelajing","can_delete":false,"product_type":"c1","uid":2152437,"ip_address":"辽宁","ucode":"96EA4DEAE8B398","user_header":"https://static001.geekbang.org/account/avatar/00/20/d7/f5/df6b6b60.jpg","comment_is_top":false,"comment_ctime":1701001786,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"github能否添加一个readme.md文件，详细介绍下怎样执行每个示例的代码。因为是初学者，对Android studio的run配置和npm、npx react-native命令行都不太熟悉。","like_count":0},{"had_liked":false,"id":379616,"user_name":"左手指月","can_delete":false,"product_type":"c1","uid":2004938,"ip_address":"广东","ucode":"216A4CE1CC8FEC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/97/ca/1297b401.jpg","comment_is_top":false,"comment_ctime":1692194761,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100110101,"comment_content":"countObject.num === countObject.num &#47;&#47; false\n\n真的没问题么，复制到浏览器是true耶","like_count":0},{"had_liked":false,"id":378335,"user_name":"kittyE","can_delete":false,"product_type":"c1","uid":1025944,"ip_address":"江苏","ucode":"B6F59C96498EAF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/98/1491b4a3.jpg","comment_is_top":false,"comment_ctime":1690100386,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"声明一个3*3的二维数据或者9位的一维数组，循环数组渲染","like_count":0},{"had_liked":false,"id":377689,"user_name":"简之语","can_delete":false,"product_type":"c1","uid":1455895,"ip_address":"上海","ucode":"B4E35E0688A341","user_header":"https://static001.geekbang.org/account/avatar/00/16/37/17/ebb55b28.jpg","comment_is_top":false,"comment_ctime":1689040603,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"此次细看真的是行云流水一般通畅的文章，信息密度还不低，👍","like_count":0},{"had_liked":false,"id":373512,"user_name":"陈彦祖","can_delete":false,"product_type":"c1","uid":1591721,"ip_address":"北京","ucode":"75D5ED5BB67B4E","user_header":"https://static001.geekbang.org/account/avatar/00/18/49/a9/225c041f.jpg","comment_is_top":false,"comment_ctime":1682587266,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"井字棋只需要一个状态用于记录棋盘内容即可。需要可读性的好就是一个 3×3 的数组，也可以用一个一维数组来表示。一维数组在计算的时候麻烦一些。例如：\nlet chessStatus: number[] = [1,null,0,null,null,null,null,null,null]\n1. 从左至右，从上到下分别对应数组索引 0~8\n2. 数组元素 1 表示 X 在这个位子落子，0 表示圈在这个位子落子；null 表示该位置没有落子\n\n\n","like_count":0},{"had_liked":false,"id":360133,"user_name":"Geek_7831b0","can_delete":false,"product_type":"c1","uid":3201681,"ip_address":"美国","ucode":"9E42CB0BA30ABF","user_header":"","comment_is_top":false,"comment_ctime":1666210201,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"接口似乎失效了，有人能给个example json吗？","like_count":0},{"had_liked":false,"id":359837,"user_name":"王昭策","can_delete":false,"product_type":"c1","uid":2877237,"ip_address":"山东","ucode":"E05401083249F7","user_header":"https://static001.geekbang.org/account/avatar/00/2b/e7/35/ba2cc0d7.jpg","comment_is_top":false,"comment_ctime":1665971660,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"老师能不能讲一下作业啊？光布置不讲我也不知道自己想法对不对。\n","like_count":0},{"had_liked":false,"id":355678,"user_name":"叶子","can_delete":false,"product_type":"c1","uid":1506026,"ip_address":"浙江","ucode":"F38B23A1C775FD","user_header":"https://static001.geekbang.org/account/avatar/00/16/fa/ea/344d0f73.jpg","comment_is_top":false,"comment_ctime":1661627829,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"个人感觉2个状态，一个用来记录9个格子的内容（比如数组，按序号位置填值，那个用户下在哪里就把数组对应位置值写入用户的名字），还有一个用来记录游戏的状态（开始状态；位置重复状态；获胜状态：有人站的位置达到三个且符合获胜的排列组合（组合用枚举来提前准备好）；平手：所有位置下满但无人获胜）","like_count":0,"discussions":[{"author":{"id":1591721,"avatar":"https://static001.geekbang.org/account/avatar/00/18/49/a9/225c041f.jpg","nickname":"陈彦祖","note":"","ucode":"75D5ED5BB67B4E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616101,"discussion_content":"1. 游戏状态这个状态可以通过棋盘状态来计算，不需要额外申明。只需要在棋盘状态变化后计算一下即可。\n2. 看最后的效果图也不需要用户名字，只需要在棋盘状态变化后计算最后获胜者是×还是圈即可。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1682586984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355583,"user_name":"Geek_bb718b","can_delete":false,"product_type":"c1","uid":3166002,"ip_address":"北京","ucode":"194D08F9D71074","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKTcgPkeGEEYks7Kgd1zstn9rFjsXfDLwRLTfEIXh5TZtU9yIeibBXIsFQAbFxlGPUI0ZqptrDOPOA/132","comment_is_top":false,"comment_ctime":1661511598,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"关于为什么Hooks不能在if else 里使用，还是没太理解","like_count":0,"discussions":[{"author":{"id":3173858,"avatar":"https://static001.geekbang.org/account/avatar/00/30/6d/e2/35705abe.jpg","nickname":"fall","note":"","ucode":"ECC701ECD6934A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586707,"discussion_content":"hooks是用链表存储的 如果有条件判断循环的 链表取值的顺序就有可能乱掉","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1662448953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"天津","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347703,"user_name":"Geek_874d38","can_delete":false,"product_type":"c1","uid":3018941,"ip_address":"","ucode":"444E78CB26CDAC","user_header":"https://static001.geekbang.org/account/avatar/00/2e/10/bd/aafba045.jpg","comment_is_top":false,"comment_ctime":1654330881,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"项目代码不匹配，请重新上传代码，谢谢！","like_count":0,"discussions":[{"author":{"id":1591374,"avatar":"https://static001.geekbang.org/account/avatar/00/18/48/4e/ff28a022.jpg","nickname":"江左小海","note":"","ucode":"7FABA95F5C34C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579804,"discussion_content":"这个老师也不回复信息，我也是醉了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657696630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347047,"user_name":"静心","can_delete":false,"product_type":"c1","uid":1335457,"ip_address":"","ucode":"EB264FA6519FDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/a1/45ffdca3.jpg","comment_is_top":false,"comment_ctime":1653641302,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100110101,"comment_content":"不错不错👍讲的挺明白","like_count":0}]}