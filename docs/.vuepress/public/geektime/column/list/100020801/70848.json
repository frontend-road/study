{"id":70848,"title":"09 | 普通索引和唯一索引，应该怎么选择？","content":"<p><span class=\"reference\">今天的正文开始前，我要特意感谢一下评论区几位留下高质量留言的同学。</span></p><p><span class=\"reference\">用户名是 @某、人 的同学，对文章的知识点做了梳理，然后提了关于事务可见性的问题，就是先启动但是后提交的事务，对数据可见性的影响。@夏日雨同学也提到了这个问题，我在置顶评论中回复了，今天的文章末尾也会再展开说明。@Justin和@倪大人两位同学提了两个好问题。</span></p><p><span class=\"reference\">对于能够引发更深一步思考的问题，我会在回复的内容中写上“好问题”三个字，方便你搜索，你也可以去看看他们的留言。</span></p><p><span class=\"reference\">非常感谢大家很细致地看文章，并且留下了那么多和很高质量的留言。知道文章有给大家带来一些新理解，对我来说是一个很好的鼓励。同时，也让其他认真看评论区的同学，有机会发现一些自己还没有意识到的、但可能还不清晰的知识点，这也在总体上提高了整个专栏的质量。再次谢谢你们。</span></p><p><span class=\"reference\">好了，现在就回到我们今天的正文内容。</span></p><p>在前面的基础篇文章中，我给你介绍过索引的基本概念，相信你已经了解了唯一索引和普通索引的区别。今天我们就继续来谈谈，在不同的业务场景下，应该选择普通索引，还是唯一索引？</p><p>假设你在维护一个市民系统，每个人都有一个唯一的身份证号，而且业务代码已经保证了不会写入两个重复的身份证号。如果市民系统需要按照身份证号查姓名，就会执行类似这样的SQL语句：</p><!-- [[[read_end]]] --><pre><code>select name from CUser where id_card = 'xxxxxxxyyyyyyzzzzz';\n</code></pre><p>所以，你一定会考虑在id_card字段上建索引。</p><p>由于身份证号字段比较大，我不建议你把身份证号当做主键，那么现在你有两个选择，要么给id_card字段创建唯一索引，要么创建一个普通索引。如果业务代码已经保证了不会写入重复的身份证号，那么这两个选择逻辑上都是正确的。</p><p>现在我要问你的是，从性能的角度考虑，你选择唯一索引还是普通索引呢？选择的依据是什么呢？</p><p>简单起见，我们还是用第4篇文章<a href=\"https://time.geekbang.org/column/article/69236\">《深入浅出索引（上）》</a>中的例子来说明，假设字段 k 上的值都不重复。</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/46/1ed9536031d6698570ea175a7b7f9a46.png?wh=1142*856\" alt=\"\"></p><center>图1 InnoDB的索引组织结构</center><p>接下来，我们就从这两种索引对查询语句和更新语句的性能影响来进行分析。</p><h1>查询过程</h1><p>假设，执行查询的语句是 select id from T where k=5。这个查询语句在索引树上查找的过程，先是通过B+树从树根开始，按层搜索到叶子节点，也就是图中右下角的这个数据页，然后可以认为数据页内部通过二分法来定位记录。</p><ul>\n<li>对于普通索引来说，查找到满足条件的第一个记录(5,500)后，需要查找下一个记录，直到碰到第一个不满足k=5条件的记录。</li>\n<li>对于唯一索引来说，由于索引定义了唯一性，查找到第一个满足条件的记录后，就会停止继续检索。</li>\n</ul><p>那么，这个不同带来的性能差距会有多少呢？答案是，微乎其微。</p><p>你知道的，InnoDB的数据是按数据页为单位来读写的。也就是说，当需要读一条记录的时候，并不是将这个记录本身从磁盘读出来，而是以页为单位，将其整体读入内存。在InnoDB中，每个数据页的大小默认是16KB。</p><p>因为引擎是按页读写的，所以说，当找到k=5的记录的时候，它所在的数据页就都在内存里了。那么，对于普通索引来说，要多做的那一次“查找和判断下一条记录”的操作，就只需要一次指针寻找和一次计算。</p><p>当然，如果k=5这个记录刚好是这个数据页的最后一个记录，那么要取下一个记录，必须读取下一个数据页，这个操作会稍微复杂一些。</p><p>但是，我们之前计算过，对于整型字段，一个数据页可以放近千个key，因此出现这种情况的概率会很低。所以，我们计算平均性能差异时，仍可以认为这个操作成本对于现在的CPU来说可以忽略不计。</p><h1>更新过程</h1><p>为了说明普通索引和唯一索引对更新语句性能的影响这个问题，我需要先跟你介绍一下change buffer。</p><p>当需要更新一个数据页时，如果数据页在内存中就直接更新，而如果这个数据页还没有在内存中的话，在不影响数据一致性的前提下，InnoDB会将这些更新操作缓存在change buffer中，这样就不需要从磁盘中读入这个数据页了。在下次查询需要访问这个数据页的时候，将数据页读入内存，然后执行change buffer中与这个页有关的操作。通过这种方式就能保证这个数据逻辑的正确性。</p><p>需要说明的是，虽然名字叫作change buffer，实际上它是可以持久化的数据。也就是说，change buffer在内存中有拷贝，也会被写入到磁盘上。</p><p>将change buffer中的操作应用到原数据页，得到最新结果的过程称为merge。除了访问这个数据页会触发merge外，系统有后台线程会定期merge。在数据库正常关闭（shutdown）的过程中，也会执行merge操作。</p><p>显然，如果能够将更新操作先记录在change buffer，减少读磁盘，语句的执行速度会得到明显的提升。而且，数据读入内存是需要占用buffer pool的，所以这种方式还能够避免占用内存，提高内存利用率。</p><p>那么，<strong>什么条件下可以使用change buffer呢？</strong></p><p>对于唯一索引来说，所有的更新操作都要先判断这个操作是否违反唯一性约束。比如，要插入(4,400)这个记录，就要先判断现在表中是否已经存在k=4的记录，而这必须要将数据页读入内存才能判断。如果都已经读入到内存了，那直接更新内存会更快，就没必要使用change buffer了。</p><p>因此，唯一索引的更新就不能使用change buffer，实际上也只有普通索引可以使用。</p><p>change buffer用的是buffer pool里的内存，因此不能无限增大。change buffer的大小，可以通过参数innodb_change_buffer_max_size来动态设置。这个参数设置为50的时候，表示change buffer的大小最多只能占用buffer pool的50%。</p><p>现在，你已经理解了change buffer的机制，那么我们再一起来看看<strong>如果要在这张表中插入一个新记录(4,400)的话，InnoDB的处理流程是怎样的。</strong></p><p>第一种情况是，<strong>这个记录要更新的目标页在内存中</strong>。这时，InnoDB的处理流程如下：</p><ul>\n<li>对于唯一索引来说，找到3和5之间的位置，判断到没有冲突，插入这个值，语句执行结束；</li>\n<li>对于普通索引来说，找到3和5之间的位置，插入这个值，语句执行结束。</li>\n</ul><p>这样看来，普通索引和唯一索引对更新语句性能影响的差别，只是一个判断，只会耗费微小的CPU时间。</p><p>但，这不是我们关注的重点。</p><p>第二种情况是，<strong>这个记录要更新的目标页不在内存中</strong>。这时，InnoDB的处理流程如下：</p><ul>\n<li>对于唯一索引来说，需要将数据页读入内存，判断到没有冲突，插入这个值，语句执行结束；</li>\n<li>对于普通索引来说，则是将更新记录在change buffer，语句执行就结束了。</li>\n</ul><p>将数据从磁盘读入内存涉及随机IO的访问，是数据库里面成本最高的操作之一。change buffer因为减少了随机磁盘访问，所以对更新性能的提升是会很明显的。</p><p>之前我就碰到过一件事儿，有个DBA的同学跟我反馈说，他负责的某个业务的库内存命中率突然从99%降低到了75%，整个系统处于阻塞状态，更新语句全部堵住。而探究其原因后，我发现这个业务有大量插入数据的操作，而他在前一天把其中的某个普通索引改成了唯一索引。</p><h1>change buffer的使用场景</h1><p>通过上面的分析，你已经清楚了使用change buffer对更新过程的加速作用，也清楚了change buffer只限于用在普通索引的场景下，而不适用于唯一索引。那么，现在有一个问题就是：普通索引的所有场景，使用change buffer都可以起到加速作用吗？</p><p>因为merge的时候是真正进行数据更新的时刻，而change buffer的主要目的就是将记录的变更动作缓存下来，所以在一个数据页做merge之前，change buffer记录的变更越多（也就是这个页面上要更新的次数越多），收益就越大。</p><p>因此，对于写多读少的业务来说，页面在写完以后马上被访问到的概率比较小，此时change buffer的使用效果最好。这种业务模型常见的就是账单类、日志类的系统。</p><p>反过来，假设一个业务的更新模式是写入之后马上会做查询，那么即使满足了条件，将更新先记录在change buffer，但之后由于马上要访问这个数据页，会立即触发merge过程。这样随机访问IO的次数不会减少，反而增加了change buffer的维护代价。所以，对于这种业务模式来说，change buffer反而起到了副作用。</p><h1>索引选择和实践</h1><p>回到我们文章开头的问题，普通索引和唯一索引应该怎么选择。其实，这两类索引在查询能力上是没差别的，主要考虑的是对更新性能的影响。所以，我建议你尽量选择普通索引。</p><p>如果所有的更新后面，都马上伴随着对这个记录的查询，那么你应该关闭change buffer。而在其他情况下，change buffer都能提升更新性能。</p><p>在实际使用中，你会发现，普通索引和change buffer的配合使用，对于数据量大的表的更新优化还是很明显的。</p><p>特别地，在使用机械硬盘时，change buffer这个机制的收效是非常显著的。所以，当你有一个类似“历史数据”的库，并且出于成本考虑用的是机械硬盘时，那你应该特别关注这些表里的索引，尽量使用普通索引，然后把change buffer 尽量开大，以确保这个“历史数据”表的数据写入速度。</p><h1>change buffer 和 redo log</h1><p>理解了change buffer的原理，你可能会联想到我在前面文章中和你介绍过的redo log和WAL。</p><p>在前面文章的评论中，我发现有同学混淆了redo log和change buffer。WAL 提升性能的核心机制，也的确是尽量减少随机读写，这两个概念确实容易混淆。所以，这里我把它们放到了同一个流程里来说明，便于你区分这两个概念。</p><blockquote>\n<p>备注：这里，你可以再回顾下第2篇文章<a href=\"https://time.geekbang.org/column/article/68633\">《日志系统：一条SQL更新语句是如何执行的？》</a>中的相关内容。</p>\n</blockquote><p>现在，我们要在表上执行这个插入语句：</p><pre><code>mysql&gt; insert into t(id,k) values(id1,k1),(id2,k2);\n</code></pre><p>这里，我们假设当前k索引树的状态，查找到位置后，k1所在的数据页在内存(InnoDB buffer pool)中，k2所在的数据页不在内存中。如图2所示是带change buffer的更新状态图。</p><p><img src=\"https://static001.geekbang.org/resource/image/98/a3/980a2b786f0ea7adabef2e64fb4c4ca3.png?wh=1142*856\" alt=\"\"></p><center>图2 带change buffer的更新过程</center><p>分析这条更新语句，你会发现它涉及了四个部分：内存、redo log（ib_log_fileX）、 数据表空间（t.ibd）、系统表空间（ibdata1）。</p><p>这条更新语句做了如下的操作（按照图中的数字顺序）：</p><ol>\n<li>\n<p>Page 1在内存中，直接更新内存；</p>\n</li>\n<li>\n<p>Page 2没有在内存中，就在内存的change buffer区域，记录下“我要往Page 2插入一行”这个信息</p>\n</li>\n<li>\n<p>将上述两个动作记入redo log中（图中3和4）。</p>\n</li>\n</ol><p>做完上面这些，事务就可以完成了。所以，你会看到，执行这条更新语句的成本很低，就是写了两处内存，然后写了一处磁盘（两次操作合在一起写了一次磁盘），而且还是顺序写的。</p><p>同时，图中的两个虚线箭头，是后台操作，不影响更新的响应时间。</p><p>那在这之后的读请求，要怎么处理呢？</p><p>比如，我们现在要执行 select * from t where k in (k1, k2)。这里，我画了这两个读请求的流程图。</p><p>如果读语句发生在更新语句后不久，内存中的数据都还在，那么此时的这两个读操作就与系统表空间（ibdata1）和 redo log（ib_log_fileX）无关了。所以，我在图中就没画出这两部分。</p><p><img src=\"https://static001.geekbang.org/resource/image/6d/8e/6dc743577af1dbcbb8550bddbfc5f98e.png?wh=1142*856\" alt=\"\"></p><center>图3 带change buffer的读过程</center><p>从图中可以看到：</p><ol>\n<li>\n<p>读Page 1的时候，直接从内存返回。有几位同学在前面文章的评论中问到，WAL之后如果读数据，是不是一定要读盘，是不是一定要从redo log里面把数据更新以后才可以返回？其实是不用的。你可以看一下图3的这个状态，虽然磁盘上还是之前的数据，但是这里直接从内存返回结果，结果是正确的。</p>\n</li>\n<li>\n<p>要读Page 2的时候，需要把Page 2从磁盘读入内存中，然后应用change buffer里面的操作日志，生成一个正确的版本并返回结果。</p>\n</li>\n</ol><p>可以看到，直到需要读Page 2的时候，这个数据页才会被读入内存。</p><p>所以，如果要简单地对比这两个机制在提升更新性能上的收益的话，<strong>redo log 主要节省的是随机写磁盘的IO消耗（转成顺序写），而change buffer主要节省的则是随机读磁盘的IO消耗。</strong></p><h1>小结</h1><p>今天，我从普通索引和唯一索引的选择开始，和你分享了数据的查询和更新过程，然后说明了change buffer的机制以及应用场景，最后讲到了索引选择的实践。</p><p>由于唯一索引用不上change buffer的优化机制，因此如果业务可以接受，从性能角度出发我建议你优先考虑非唯一索引。</p><p>最后，又到了思考题时间。</p><p>通过图2你可以看到，change buffer一开始是写内存的，那么如果这个时候机器掉电重启，会不会导致change buffer丢失呢？change buffer丢失可不是小事儿，再从磁盘读入数据可就没有了merge过程，就等于是数据丢失了。会不会出现这种情况呢？</p><p>你可以把你的思考和观点写在留言区里，我会在下一篇文章的末尾和你讨论这个问题。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p><strong>补充：</strong><br>\n评论区大家对“是否使用唯一索引”有比较多的讨论，主要是纠结在“业务可能无法确保”的情况。这里，我再说明一下：</p><ul>\n<li>首先，业务正确性优先。咱们这篇文章的前提是“业务代码已经保证不会写入重复数据”的情况下，讨论性能问题。如果业务不能保证，或者业务就是要求数据库来做约束，那么没得选，必须创建唯一索引。这种情况下，本篇文章的意义在于，如果碰上了大量插入数据慢、内存命中率低的时候，可以给你多提供一个排查思路。</li>\n<li>然后，在一些“归档库”的场景，你是可以考虑使用普通索引的。比如，线上数据只需要保留半年，然后历史数据保存在归档库。这时候，归档数据已经是确保没有唯一键冲突了。要提高归档效率，可以考虑把表里面的唯一索引改成普通索引。</li>\n</ul><h1>上期问题时间</h1><p>上期的问题是：如何构造一个“数据无法修改”的场景。评论区里已经有不少同学给出了正确答案，这里我再描述一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/be/ae/be7a4d8af04cdf93aaa11108933559ae.png?wh=937*263\" alt=\"\"><br>\n这样，session A看到的就是我截图的效果了。</p><p>其实，还有另外一种场景，同学们在留言区都还没有提到。</p><p><img src=\"https://static001.geekbang.org/resource/image/e2/fa/e24a0689571337959138d787c408defa.png?wh=933*352\" alt=\"\"></p><p>这个操作序列跑出来，session  A看的内容也是能够复现我截图的效果的。这个session B’启动的事务比A要早，其实是上期我们描述事务版本的可见性规则时留的彩蛋，因为规则里还有一个“活跃事务的判断”，我是准备留到这里再补充的。</p><p>当我试图在这里讲述完整规则的时候，发现第8篇文章<a href=\"https://time.geekbang.org/column/article/70562\">《事务到底是隔离的还是不隔离的？》</a>中的解释引入了太多的概念，以致于分析起来非常复杂。</p><p>因此，我重写了第8篇，这样我们人工去判断可见性的时候，才会更方便。【看到这里，我建议你能够再重新打开第8篇文章并认真学习一次。如果学习的过程中，有任何问题，也欢迎你给我留言】</p><p>用新的方式来分析session B’的更新为什么对session A不可见就是：在session A视图数组创建的瞬间，session B’是活跃的，属于“版本未提交，不可见”这种情况。</p><p>业务中如果要绕过这类问题，@约书亚提供了一个“乐观锁”的解法，大家可以去上一篇的留言区看一下。</p><p>评论区留言点赞板：</p><blockquote>\n<p>@某、人、@夏日雨、@周巘、@李金刚 等同学提了一个很好的问题，就是我们今天答案的session B’ 的情况；<br>\n@justin 提到了提交和未提交版本的区别对待，@倪大人 提到了读提交和当前读的区别，都是经过了思考后提出的好问题，大家可以去留言区看看。</p>\n</blockquote>","neighbors":{"left":{"article_title":"08 | 事务到底是隔离的还是不隔离的？","id":70562},"right":{"article_title":"10 | MySQL为什么有时候会选错索引？","id":71173}},"comments":[{"had_liked":false,"id":46093,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":true,"comment_ctime":1543845071,"is_pvip":false,"replies":[{"id":"16480","content":"分析很赞，把02篇和这篇文章贯通了.<br><br>问题<br>1. 这时候要“先读后写”，读的时候数据会读入内存，更新的时候直接改内存，就不需要change buffer了<br><br>2. Gap锁取决于业务怎么用哈。我感觉主要是因为gap锁概念比较难说清，大家有点放大它的意思了哈哈<br><br>3. Hit rate <br><br>4. 我不够熟悉，不能乱回答误导你😄","user_name":"作者回复","comment_id":46093,"uid":"1264162","ip_address":"","utype":1,"ctime":1543846743,"user_name_real":"林晓斌"}],"discussion_count":61,"race_medal":0,"score":"9.223373090665599e+18","product_id":100020801,"comment_content":"先回答今天的问题,今天的答案应该在文章里就能找到<br>1.change buffer有一部分在内存有一部分在ibdata.<br>做purge操作,应该就会把change buffer里相应的数据持久化到ibdata<br>2.redo log里记录了数据页的修改以及change buffer新写入的信息<br>如果掉电,持久化的change buffer数据已经purge,不用恢复。主要分析没有持久化的数据<br>情况又分为以下几种:<br>(1)change buffer写入,redo log虽然做了fsync但未commit,binlog未fsync到磁盘,这部分数据丢失<br>(2)change buffer写入,redo log写入但没有commit,binlog以及fsync到磁盘,先从binlog恢复redo log,再从redo log恢复change buffer<br>(3)change buffer写入,redo log和binlog都已经fsync.那么直接从redo log里恢复。<br><br>老师,我有几个问题想请教下:<br>1.如果是针对非唯一索引和唯一索引的更新和delete而且条件是where 索引值=这种情况,<br>是否二级索引和唯一索引就没有区别呢<br>2.rr模式下,非唯一索引还会加gap,开销应该也不算小吧<br>3.还有老师你是怎么判断内存命中率的,是hit rate嘛？<br>4.ob好像就是这个思路来做的聚簇索引的insert优化,不知道是怎么判断的唯一性<br><br>特别感谢老师,以前的知识都是很碎片化,没有深入的去思考。<br>经过几期的学习以后,感觉思路越来越开阔,以前觉得很高深的知识点,现在也有点豁然开朗的感觉。","like_count":246,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431333,"discussion_content":"分析很赞，把02篇和这篇文章贯通了.\n\n问题\n1. 这时候要“先读后写”，读的时候数据会读入内存，更新的时候直接改内存，就不需要change buffer了\n\n2. Gap锁取决于业务怎么用哈。我感觉主要是因为gap锁概念比较难说清，大家有点放大它的意思了哈哈\n\n3. Hit rate \n\n4. 我不够熟悉，不能乱回答误导你😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543846743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1446494,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/5e/77b67a85.jpg","nickname":"飘云","note":"","ucode":"C6FE0310D6853C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":558674,"discussion_content":"binlog是什么时候生成的呢？如果binlog生成的时间与业务修改数据库的时间不一致会有问题么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648434387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":431333,"ip_address":""},"score":558674,"extra":""},{"author":{"id":2786848,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/86/20/1f1221f5.jpg","nickname":"听风","note":"","ucode":"EC2EB012E8DB6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":589011,"discussion_content":"老师突然想到一个问题，第二篇中讲到redolog在写满后或空闲的时候会随机写盘，然后若是在唯一索引情况下，不走changeBuffer的情况下，redolog也没有随机写盘，读到的数据会不会有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664333959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":431333,"ip_address":"浙江"},"score":589011,"extra":""}]},{"author":{"id":1087490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/98/02/14e24394.jpg","nickname":"Zhikun Lao","note":"","ucode":"C39A437FCE1C8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1185,"discussion_content":"不明白这种评论为什么要置顶，里面说到的东西有一大部分都不是这门课到这个程度所涉及到的，尤其是那些问题。这给其他人看到真的是一头雾水。","likes_number":57,"is_delete":false,"is_hidden":false,"ctime":1562363659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1087490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/98/02/14e24394.jpg","nickname":"Zhikun Lao","note":"","ucode":"C39A437FCE1C8B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275590,"discussion_content":"说的有道理。我之前就有这个想法，但是不知道怎么讲。顶起来。哈哈。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1590735209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1185,"ip_address":""},"score":275590,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1087490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/98/02/14e24394.jpg","nickname":"Zhikun Lao","note":"","ucode":"C39A437FCE1C8B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576468,"discussion_content":"而且说的也不对","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1655565584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1185,"ip_address":""},"score":576468,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1087490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/98/02/14e24394.jpg","nickname":"Zhikun Lao","note":"","ucode":"C39A437FCE1C8B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587236,"discussion_content":"说得很好啊我觉得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662893635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1185,"ip_address":"广东"},"score":587236,"extra":""}]},{"author":{"id":1115724,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","nickname":"乘风","note":"","ucode":"0420C5535DACB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45766,"discussion_content":"(2)change buffer写入,redo log写入但没有commit,binlog以及fsync到磁盘,先从binlog恢复redo log,再从redo log恢复change buffer\n\n关于这一项的异议:\n1.binlog是mysql的机制,redolog是innoDB的机制,通过binlog是直接恢复物理数据的,并非恢复redolog,这个过程需要手动执行\n\n2.change buffer不需要恢复,因为无论binlog 或redolog 在恢复时都是将丢失数据持久化到磁盘,那么就不存在change buffer这个东西了\n\n","likes_number":22,"is_delete":false,"is_hidden":false,"ctime":1573085016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1518795,"avatar":"","nickname":"Geek_2ac804","note":"","ucode":"EDF69B20030BB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115724,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","nickname":"乘风","note":"","ucode":"0420C5535DACB7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554287,"discussion_content":"change buffer跟数据页一样，也是需要记录其改动的，也是需要恢复的，只有恢复了，才知道数据页该怎么更新。redolog记录的是内存中已经更新页的改动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646298161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45766,"ip_address":""},"score":554287,"extra":""},{"author":{"id":2446024,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/GA9AqKGEdib009iaPw3FSluiaeibCXmen7yFIKicZB8qqEtczZJF2WmwBJ738eExnxDmPREIGjqc4BFVXiamyhuCZASw/132","nickname":"一缕阳光","note":"","ucode":"CA89C1B7CB16C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1518795,"avatar":"","nickname":"Geek_2ac804","note":"","ucode":"EDF69B20030BB8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585991,"discussion_content":"change buffer 有没有都不影响数据恢复，丢了就丢了(毕竟还有关闭不使用change buffer的参数，这玩意儿就跟数据恢复无关)。Mysql启动的时候会加载redolog和binlog的内容，来判断到底怎么恢复数据","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1661930005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":554287,"ip_address":"广东"},"score":585991,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2446024,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/GA9AqKGEdib009iaPw3FSluiaeibCXmen7yFIKicZB8qqEtczZJF2WmwBJ738eExnxDmPREIGjqc4BFVXiamyhuCZASw/132","nickname":"一缕阳光","note":"","ucode":"CA89C1B7CB16C0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587241,"discussion_content":"影响的。开了redo就得保证它的持久化啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662900775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":585991,"ip_address":"广东"},"score":587241,"extra":""}]},{"author":{"id":1475972,"avatar":"","nickname":"小霸王学习机","note":"","ucode":"522112D5F72FF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155779,"discussion_content":"你的思考很到位。但我觉得未持久化的那几种情况，特别是从binlog恢复redo log，我觉得不对。redo log 应该不需要从binlog里面恢复吧，没有开启binlog的情况呢？这俩日志的关联，应该只是在崩溃恢复的时候，关联判断这个事务是commit还是rollback。也可能是我没理解你的表述，请赐教。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1580288608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1475972,"avatar":"","nickname":"小霸王学习机","note":"","ucode":"522112D5F72FF9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169011,"discussion_content":"我同意。redo log和binlog是两套逻辑，只是有二阶段提交的合作行为，最终以binlog为准而已。redo log本身也是持久化的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581601020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":155779,"ip_address":""},"score":169011,"extra":""},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1475972,"avatar":"","nickname":"小霸王学习机","note":"","ucode":"522112D5F72FF9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184877,"discussion_content":"问中想说的意思是redo log perpare状态,binlog fsync成功,但是redo log未commit状态,也不是说从binlog来恢复redo log,只是通过binlog来判断redo log prepare状态行为被认可为commit状态","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1582581329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":155779,"ip_address":""},"score":184877,"extra":""}]},{"author":{"id":1646052,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1d/e4/517fbbbf.jpg","nickname":"白芷","note":"","ucode":"D37530955CF919","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167464,"discussion_content":"借一个前排：什么情况下才会在update 和 delete 时使用到change buffer 呢 ？\n@是我的海的提问：\n看见一个同学问的问题：\n1.如果是针对非唯一索引和唯一索引的更新和delete而且条件是where 索引值=这种情况,\n是否二级索引和唯一索引就没有区别呢？\n老师的回答是先要读再更新。。。\n\n我的问题是：\n为什么有where 条件时就需要先读呢 ？ 是因为current read 么 ？\n那既然改成了change buffer ，什么情况下才会在update 和 delete 时使用到change buffer 呢 ？\n\n作者回复: 直接回答你第二个问题， 比如delete 的时候where 主键ID=N","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1581500361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1646052,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1d/e4/517fbbbf.jpg","nickname":"白芷","note":"","ucode":"D37530955CF919","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340054,"discussion_content":"谢谢兄弟，什么情况下才会在update 和 delete 时使用到change buffer 呢 ，这个问题也困扰了我好久  ，你这么一答 感觉豁然开朗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609894672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":167464,"ip_address":""},"score":340054,"extra":""},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1646052,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1d/e4/517fbbbf.jpg","nickname":"白芷","note":"","ucode":"D37530955CF919","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543372,"discussion_content":"没看懂最后&#34;比如delete 的时候where 主键ID=N&#34;这句，主键会用到change buffer吗？不是一般普通索引才会用到change buffer?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641109595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":167464,"ip_address":""},"score":543372,"extra":""}]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384768,"discussion_content":"感觉你的回复有点问题，binlog是无法恢复redo log的，换句话说，在redo log进入prepare之前，是无法写入binlog的，如果redo log进入prepare之前宕机，事务就会回滚，如果prepare之后，binlog落盘之前宕机事务也回滚，所以不在有binlog无redo log的情况，否则备库岂不是把这个binlog复制了？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1626745743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1308784,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","nickname":"某、人","note":"","ucode":"ADB42AA12A11C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393206,"discussion_content":"确实binlog没有回复redo log得能力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631287473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384768,"ip_address":""},"score":393206,"extra":""},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398666,"discussion_content":"说的是这种场景：  redo log 是prepare状态， 但是此事务对应的binlog是完整的， 这个时候就会直接应用这个redo log，不用回滚","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1632828711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384768,"ip_address":""},"score":398666,"extra":""},{"author":{"id":2837603,"avatar":"","nickname":"Geek_18e6f5","note":"","ucode":"3700BC57DD6FF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":413331,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636448391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":398666,"ip_address":""},"score":413331,"extra":""}]},{"author":{"id":1272996,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","nickname":"死磕郎一世","note":"","ucode":"86C1197C3FB2A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381623,"discussion_content":"请问“通过binlog来判断redo log prepare状态行为”是通过事务id来关联的吗？恢复的时候是mysql自动进行关联并恢复吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625147351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1272996,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","nickname":"死磕郎一世","note":"","ucode":"86C1197C3FB2A0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398667,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632828735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381623,"ip_address":""},"score":398667,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":576474,"discussion_content":"事务是引擎层的, binlog如何关联redolog的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655567427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":398667,"ip_address":""},"score":576474,"extra":""}]},{"author":{"id":1264111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","nickname":"月迷津渡","note":"","ucode":"2B18B2FE3DAC3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167551,"discussion_content":"第二点持久化的change buffer数据已经purge不太理解，changebuffer写入系统表的时机是什么？merge之后数据也是在内存里，怎么能保证redolog所记录的行为已经刷到用户表中呢？有点晕","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581508484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","nickname":"月迷津渡","note":"","ucode":"2B18B2FE3DAC3B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184878,"discussion_content":"当事物提交的时候会有purge线程来执行将change buffer的数据刷新到ibdata中;redo log会由master thread来讲脏页中的数据刷新到磁盘中(因为redo log已经commit说明这部分日志是完整的,所以不会出现最终内存和磁盘不一致性的情况)","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1582582236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":167551,"ip_address":""},"score":184878,"extra":""}]},{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":80978,"discussion_content":"老师说的delete、update时会先读后写直接弄内存，但是我看到一篇文章说“InnoDB引擎(1.0.x版本后)可以对 insert、delete、update 都进行缓存，相当于将insert buffer改为了change buffer”----求解答","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576208890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318527,"discussion_content":"你可以看一下官方文档就懂了：14.5.2 Change Buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603773246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":80978,"ip_address":""},"score":318527,"extra":""},{"author":{"id":1275980,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoicSMibHxGmeNXCLAnB6S7icPh814icIsw7VZ5vYzLOyKKUJYmFC5WGPekH5qI7rRbH3n4Y2obiaKlBTQ/132","nickname":"konh","note":"","ucode":"1CAD0D67067CC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":318928,"discussion_content":"刚看了8.0 是15.5.2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603885456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318527,"ip_address":""},"score":318928,"extra":""}]},{"author":{"id":3179092,"avatar":"https://static001.geekbang.org/account/avatar/00/30/82/54/1c825ec8.jpg","nickname":"他他他他他他","note":"","ucode":"F0E5A1BC1A0CD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588327,"discussion_content":"问题很好啊，看了这个问题才真正理解啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663666698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2650951,"avatar":"https://static001.geekbang.org/account/avatar/00/28/73/47/0dc38e56.jpg","nickname":"ᴢʜᴜʏɪǫɪɴɢ","note":"","ucode":"CD093C6FA7B871","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573400,"discussion_content":"redolog 和 binlog以一套为准就行了把？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653388818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1516786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/24/f2/cc025396.jpg","nickname":"simplezero","note":"","ucode":"43B0DA19BC0325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548003,"discussion_content":"这里面如果 事务1 和事务2 并发执行 这时候需要记录锁的信息，是不是就不能使用 change buffer 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642993194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1516786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/24/f2/cc025396.jpg","nickname":"simplezero","note":"","ucode":"43B0DA19BC0325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548002,"discussion_content":"对于 1 我的理解不太一样 ，对于 update ，例如：事务1 update t set k = 1 where k =3 ，事务2 update t set k = 2  where k = 3，因为都进行了缓存，可以理解在 merge 时 先执行事务1 再执行事务2 数据的一致性也是没有问题的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642992998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813207,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/aa/d7/a417ad5b.jpg","nickname":"CharAt","note":"","ucode":"D7D44B48FC4E79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380752,"discussion_content":"求楼主解答：1、insert 一条语句，期间涉及到主键和二级非唯一索引，那redolog是如何进行记录的？主键索引是 直接在内存中修改的，将数据页加到内存中进行修改，再将操作记录到redolog，此时假如二级索引不在内存中，缓存到changebuffer log，并写入这次的redolog。 如果要flush，二级索引还不在内存中，这时候不是不是要到changebuffe里面去查找是否有该trx_id的日志？如果有，那么就将二级索引加到内存中进行修改，然后将内存的脏页刷到磁盘中，这时候二级索引和 数据页都将修改完成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624686800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1308784,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","nickname":"某、人","note":"","ucode":"ADB42AA12A11C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1813207,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/aa/d7/a417ad5b.jpg","nickname":"CharAt","note":"","ucode":"D7D44B48FC4E79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393207,"discussion_content":"redo log记录主键索引数据页的修改，以及change buffer数据页的修改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631287632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":380752,"ip_address":""},"score":393207,"extra":""}]},{"author":{"id":2254917,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/45/ddf89612.jpg","nickname":"bestgopher","note":"","ucode":"D89735C8CA9C6E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369245,"discussion_content":"purge: 清除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618986014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1901428,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwIAiaxOJWE3Ut6hRvTzvFkCIibcURojC0XrQI1lC3h58enlNcpXQ98rmUOr5lA6ST3m24micj191Gw/132","nickname":"不疾","note":"","ucode":"18AA0F294C1586","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2254917,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/45/ddf89612.jpg","nickname":"bestgopher","note":"","ucode":"D89735C8CA9C6E","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":370946,"discussion_content":"往下翻翻评论，这里应该是merge，老师开始写错了，然后评论都跟着歪了= =","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619589575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369245,"ip_address":""},"score":370946,"extra":""}]},{"author":{"id":2064501,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/80/75/c00e3116.jpg","nickname":"niss","note":"","ucode":"7449D8B30EE0E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365373,"discussion_content":"问下楼主，问题一老师回答的意思是只有insert才用到change buffer吗?update和delete直接读到buffer pool更新就用不到change buffer了，这样理解对吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617784507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1308784,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","nickname":"某、人","note":"","ucode":"ADB42AA12A11C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2064501,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/80/75/c00e3116.jpg","nickname":"niss","note":"","ucode":"7449D8B30EE0E1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365519,"discussion_content":"不是，假设表上有两个二级索引。更新是先查后改，查的时候只用了一个，那么剩下那个就能用到change buffer","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1617810962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":365373,"ip_address":""},"score":365519,"extra":""}]},{"author":{"id":1111434,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/8a/e0fa8730.jpg","nickname":"学渣要每日进步","note":"","ucode":"0EB5CB54F2E890","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324238,"discussion_content":"Change buffering is not supported for a secondary index if the index contains a descending index column or if the primary key includes a descending index column. \n\n你好， 这个是在5.6的文档找到，请问下这个怎么解释呢，麻烦帮忙解释下呢，谢谢了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605076550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1308784,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","nickname":"某、人","note":"","ucode":"ADB42AA12A11C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111434,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/8a/e0fa8730.jpg","nickname":"学渣要每日进步","note":"","ucode":"0EB5CB54F2E890","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":324691,"discussion_content":"你应该是看的8.0的文档吧,Descending Indexes是mysql8.0新增的功能。假如a b字段联合索引,在这个索引上,数据存储顺序是：按照a值递增，对于a值相同的情况，按照b值递增。Descending Indexes意思是a值递增,对于a值相同的情况,按照b值递减。这段话的意思是,change buffer对于二级索引是Descending Indexes不支持或者联合主键存在Descending Indexes也不支持。也就是说change buffer对于上述两种情况是失效的","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1605152908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":324238,"ip_address":""},"score":324691,"extra":""}]},{"author":{"id":2076283,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","nickname":"贺子","note":"","ucode":"A64DC9D9CF7CCD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305943,"discussion_content":"你好，(2)change buffer写入,redo log写入但没有commit,binlog以及fsync到磁盘,先从binlog恢复redo log,再从redo log恢复change buffer，这部分内容，有点疑问，就是没有commit但是已经刷新脏叶到磁盘，这时候需要回滚，借助undo回滚，怎么还用到binlog呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600135218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2076283,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","nickname":"贺子","note":"","ucode":"A64DC9D9CF7CCD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318521,"discussion_content":"第二种情况不是回滚，而是commit，因为数据都在","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1603771328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305943,"ip_address":""},"score":318521,"extra":""}]},{"author":{"id":1993986,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIn0FpbcH9JA9ztMoCZ24BjypZtXCmptVJ6G7ofj3mExRzVaAc4YLgRo6Mlj1OSvbQQicQh3EA2VqQ/132","nickname":"summer","note":"","ucode":"6F34505ECE6BAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297337,"discussion_content":"purge是笔误还是就有这个动作？不是很理解这个是命令是做什么的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596879487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1624574,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/fe/874b172b.jpg","nickname":"benxiong","note":"","ucode":"F6498059D439D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1993986,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIn0FpbcH9JA9ztMoCZ24BjypZtXCmptVJ6G7ofj3mExRzVaAc4YLgRo6Mlj1OSvbQQicQh3EA2VqQ/132","nickname":"summer","note":"","ucode":"6F34505ECE6BAF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303908,"discussion_content":"老师说的是 merge，这些评论居然都是 purge，他们居然还能交流，佩服佩服","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1599404263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297337,"ip_address":""},"score":303908,"extra":""},{"author":{"id":2056201,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/60/09/a8e7913b.jpg","nickname":"SandCarving","note":"","ucode":"6B97DB71613A46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1993986,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIn0FpbcH9JA9ztMoCZ24BjypZtXCmptVJ6G7ofj3mExRzVaAc4YLgRo6Mlj1OSvbQQicQh3EA2VqQ/132","nickname":"summer","note":"","ucode":"6F34505ECE6BAF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321304,"discussion_content":"这我也很疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604561581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297337,"ip_address":""},"score":321304,"extra":""},{"author":{"id":2162784,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/9ExlO4FktmTib5RRJKaxic2bbS7AicJodsnms8jOGibG53ibNyqicHO1F7LKOaDjDNTlyqCO91NXTlLcYlFia2sO5SPQw/132","nickname":"漂泊的小码农","note":"","ucode":"8557471627BA6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1624574,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/fe/874b172b.jpg","nickname":"benxiong","note":"","ucode":"F6498059D439D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334519,"discussion_content":"innodb后台有purge线程做一些持久化和合并change buffer的工作","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607870243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303908,"ip_address":""},"score":334519,"extra":""}]},{"author":{"id":1347935,"avatar":"https://static001.geekbang.org/account/avatar/00/14/91/5f/45a7c796.jpg","nickname":"yuzhiteng","note":"","ucode":"3F1FA537E67A5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292254,"discussion_content":"问个问题，更新内容 change buffer 不应该是节约写入吗？为啥是读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595156180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1347935,"avatar":"https://static001.geekbang.org/account/avatar/00/14/91/5f/45a7c796.jpg","nickname":"yuzhiteng","note":"","ucode":"3F1FA537E67A5C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302262,"discussion_content":"确实，我之前也是这么想的。如果你换个角度来看的话，就能理解了。更新数据，也需要将数据页读入内存中修改完毕后才能写入磁盘的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598861958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292254,"ip_address":""},"score":302262,"extra":""},{"author":{"id":1083768,"avatar":"https://static001.geekbang.org/account/avatar/00/10/89/78/16c56f99.jpg","nickname":"毛洪博","note":"","ucode":"D5DDE602FDA816","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1347935,"avatar":"https://static001.geekbang.org/account/avatar/00/14/91/5f/45a7c796.jpg","nickname":"yuzhiteng","note":"","ucode":"3F1FA537E67A5C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311108,"discussion_content":"buffer pool的数据页，本来就是批量写入的，不是每次数据更新都把内存中的脏页写到磁盘中的，所以不需要change buffer来做这个事情。针对数据页的写操作，需要先读到内存中，再写回硬盘，如果想减少这次读操作，就可以直接把写的动作保存在内存（change buffer）中。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602224156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292254,"ip_address":""},"score":311108,"extra":""},{"author":{"id":2705752,"avatar":"https://static001.geekbang.org/account/avatar/00/29/49/58/9b56e567.jpg","nickname":"lllkk","note":"","ucode":"26BC0A474F145C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1347935,"avatar":"https://static001.geekbang.org/account/avatar/00/14/91/5f/45a7c796.jpg","nickname":"yuzhiteng","note":"","ucode":"3F1FA537E67A5C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583966,"discussion_content":"你做修改之前 是不是需要将数据读内存呢, mysql 先把操作记录写入change buffer中, 后面在同一merge,避免了一次IO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660533282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292254,"ip_address":"福建"},"score":583966,"extra":""}]},{"author":{"id":1623626,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","nickname":"Heiky","note":"","ucode":"03AA79E1BC4AE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20141,"discussion_content":"有个问题，这个fsync 是想说async吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569283850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1512836,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/84/a0cfdb9a.jpg","nickname":"折枳","note":"","ucode":"A361B63AAE52D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623626,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","nickname":"Heiky","note":"","ucode":"03AA79E1BC4AE4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":91369,"discussion_content":"fsync：把文件在内存中的部分写回磁盘","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1576830399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":20141,"ip_address":""},"score":91369,"extra":""}]},{"author":{"id":1101332,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","nickname":"o9","note":"","ucode":"E373E82A39BBFE","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4074,"discussion_content":"兄弟, 我有个疑问啊, 您说的 &#34;先从binlog恢复redo log,再从redo log恢复change buffer&#34; 假如数据库异常重启了, 数据库会自己根据 binlog恢复redo log? 走你说的流程吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565094932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1554570,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b8/8a/7367a69e.jpg","nickname":"嘉兴","note":"","ucode":"6997E7A3E25EE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1101332,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","nickname":"o9","note":"","ucode":"E373E82A39BBFE","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":6344,"discussion_content":"我理解的是事务的两阶段提交\n1. 写入redolog （prepare）\n2. 写入binlog\n此时数据库crash，重启之后发现binlog存在对应记录，则将之前处于prepare阶段的redolog commit，这时候开始根据redo log里记录的change buffer操作恢复change buffer","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1566862814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4074,"ip_address":""},"score":6344,"extra":""},{"author":{"id":1701867,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","nickname":"，","note":"","ucode":"A5543C8DFEB198","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1554570,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b8/8a/7367a69e.jpg","nickname":"嘉兴","note":"","ucode":"6997E7A3E25EE4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":151989,"discussion_content":"我对两阶段提交里事务的理解:\n1. 写入redolog （prepare）\n2. 写入binlog\n这两步应该都在事务里吧,而不是只有 写入redolog （prepare）在事务里,也就是说事务提交的话,两者就都有记录,没提交的话两者都没记录,这才是保证一致性吧?如果按照你的说法和这个置顶评论的说法,其实就是先写入binlog在写入redolog没区别了吧?那这个事务也没啥存在的意义了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579926620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6344,"ip_address":""},"score":151989,"extra":""},{"author":{"id":1107690,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/ea/cf8ffc85.jpg","nickname":"shijiazo","note":"","ucode":"E2F32581829F11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1701867,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","nickname":"，","note":"","ucode":"A5543C8DFEB198","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":152258,"discussion_content":"对于两阶段提交，redo log prepare阶段也有记录的，第3步是把redo log的prepare标志改成commit，如果在第3步之前crash，那么再次启动时进行崩溃恢复，就会执行“嘉兴”同学所说的步骤，先根据binlog进行第3步，再恢复change buffer。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579955471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":151989,"ip_address":""},"score":152258,"extra":""}]}]},{"had_liked":false,"id":46260,"user_name":"林晓斌","can_delete":false,"product_type":"c1","uid":1264162,"ip_address":"","ucode":"CDE42D44F26240","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","comment_is_top":true,"comment_ctime":1543890584,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"9.2233724893702001e+18","product_id":100020801,"comment_content":"抱歉做一个名词勘误，把change buffer应用到旧的数据页，得到新的数据页的过程，应该称为merge更合适。","like_count":105,"discussions":[{"author":{"id":1528379,"avatar":"https://static001.geekbang.org/account/avatar/00/17/52/3b/7a2610a6.jpg","nickname":"爱因诗贤","note":"","ucode":"150C439B87CED1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307948,"discussion_content":"&#34;把change buffer应用到旧的数据页，得到新的数据页的过程，称为 merge&#34;，之前第 02 节说过 redo log 会在 CPU 空闲的时候去更新磁盘，这个会不会和这个 merge 重复了？比如你在 执行 &#34;update t set c = 10 where id = 1&#34;，你的更新操作会记录到 change buffer,这个时候不会去查 磁盘，目的是为了减少随机读磁盘 IO,但 是redo log 不是会更新磁盘数据吗?当你下次再去查的时候 磁盘不就是已经最新数据吗?这个里面的 change buffer 不就没用了吗?","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1600791620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1975331,"avatar":"","nickname":"Geek_247d5f","note":"","ucode":"3B69CD116FDC01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1528379,"avatar":"https://static001.geekbang.org/account/avatar/00/17/52/3b/7a2610a6.jpg","nickname":"爱因诗贤","note":"","ucode":"150C439B87CED1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312076,"discussion_content":"redo log刷磁盘的过程我猜想包括了change buffer merge的过程","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1602579112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307948,"ip_address":""},"score":312076,"extra":""},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1528379,"avatar":"https://static001.geekbang.org/account/avatar/00/17/52/3b/7a2610a6.jpg","nickname":"爱因诗贤","note":"","ucode":"150C439B87CED1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312344,"discussion_content":"看图像是redo log 记录了 chang buffer内容","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1602667855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307948,"ip_address":""},"score":312344,"extra":""}]},{"author":{"id":2678569,"avatar":"https://static001.geekbang.org/account/avatar/00/28/df/29/3c956177.jpg","nickname":"上海","note":"","ucode":"6A4F9D80D25028","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411802,"discussion_content":"这里想请教老师一下：\n按照官方的说法，因为对二级索引的每一次更新影响到的索引页都可能不是相邻的，为了减少磁盘的随机io访问，引入了change buffer。另外，chang buffer的刷盘策略是很buffer pool保持一致的。\n\n按照老师的说法：\n1. 唯一索引因为要判断数据是否已存在，需要先将索引页从磁盘上读出来，这个时候必然已经发生了merge，所以不能应用change buffer。\n2. merge=purge？\n\n\n所以我有以下问题：\n1.  即使唯一索引的每次更新都会引发merge，但是依然可以通过延迟刷盘来积累更多的相邻索引页，从而减少随机磁盘io访问\n2. Merge跟刷盘没有必然的因果关系吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636008274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45897,"user_name":"虚爱凯平","can_delete":false,"product_type":"c1","uid":1260564,"ip_address":"","ucode":"EA8A7A4498BC86","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/AwEHMTGSmVsia3WZDyIicBQPAfS11lBZ0yUappicPzfmGDmMwkje1UoqKK3UJ6FCBdsZyiauuV1SEfcrFzWfx9n1RQ/132","comment_is_top":true,"comment_ctime":1543815277,"is_pvip":false,"replies":[{"id":"16393","content":"第一段的理解不准确哈。<br>insert的时候，写主键是肯定不能用change buffer了，但是同时也会要写其它索引，而其它索引中的“非唯一索引”是可以用的这个机制的；<br><br>第二段，你搜出来的这个不太完整。是这样的，change buffer的前身是insert buffer,只能对insert 操作优化；后来升级了，增加了update&#47;delete的支持，名字也改叫change buffer.<br><br><br><br>","user_name":"作者回复","comment_id":45897,"uid":"1264162","ip_address":"","utype":1,"ctime":1543819217,"user_name_real":"林晓斌"}],"discussion_count":19,"race_medal":0,"score":"9.2233724893702001e+18","product_id":100020801,"comment_content":"感觉今天这篇问题很严重啊, 首先说一下我是第一次接触 change buffer这个概念, 可能产生了什么误会..<br>我理解的文中讲述change buffer的作用体现在 针对普通索引(非主键的都是二级索引, 二级索引又包括了唯一索引和普通索引)在有数据update操作(不包括insert)的时候,能有减少io写操作的功能, 而且这个操作是提现在更新表数据上的. 为什么我在这里会理解成update操作呢.. (InnoDB中表就是按索引的方式存放的, 即使我们不主动创建主键 也会生成一个默认的row_id来当做主键, 意味着表一定是有一个主键, 即唯一索引. insert操作 一定会涉及主键索引的变动, 所以change buffer针对 insert 是完全没有用的吗??) <br><br>针对change buffer 我百度了一下, 有文章描述 change buffer 是针对表中包含普通索引的表在insert操作时, 优化 普通索引的更新(在insert时,不会立即更新普通索引 而是保存到change buffer延迟处理). 这么一个功能. 不知道 这个理解是否正确呢?","like_count":105,"discussions":[{"author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404882,"discussion_content":"我说说我的理解，首先先明确下几点，1.假如插入或者修改一条数据，那就得维护所有的索引。 2.主键索引叶子节点存的是包含行的页，二级索引叶子节点存的是包含主键的页。假如现在有张表(a,b,c) ,其中a是唯一索引，b是非唯一索引，c是普通无索引的列。假如现在inset一条数据，数据库会为我们隐形的创建一个主键id，对于主键来说，毋庸置疑，你一定要定位到这个数据页在哪里，因为这行数据要落在这个数据页上，并且还要判断主键冲突的问题，所以他不能使用change buffer,然后就在redolog里面记录数据页pageI1插入一条数据，到这里主键索引已经维护完了，但是还要维护其他索引（a，b）。接着通过插入的a值在a索引上找，到叶子节点的时候，发现这个叶子节点的页不在内存，因为a是唯一索引，那没辙，还是得读这块页上的内容，对比下，这个时候有没有唯一索引冲突之类的，所以还是得加载这块数据页pageA1，没问题的话写到redolog（pageA1）。对于b，他是非唯一索引，定位到b这个叶子节点，不需要判断，他的数据页不在内存，直接记录到channebuffer,然后写redolog (pageB1)。插一条数据，写三次redolog是因为三个page值是不一样的呀，pageI1记得是行，pageA1即的是a和主键，pageB1记得是b和主键。我猜的","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1634446936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431260,"discussion_content":"第一段的理解不准确哈。\ninsert的时候，写主键是肯定不能用change buffer了，但是同时也会要写其它索引，而其它索引中的“非唯一索引”是可以用的这个机制的；\n\n第二段，你搜出来的这个不太完整。是这样的，change buffer的前身是insert buffer,只能对insert 操作优化；后来升级了，增加了update/delete的支持，名字也改叫change buffer.\n\n\n\n","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1543819217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1293877,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/35/dd79037e.jpg","nickname":"a...Z","note":"","ucode":"5A5A44903785FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70513,"discussion_content":"置顶的第一条和这条说明 update 和delete的时候 有where条件的时候,也用不到change buffer","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1575364067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1061748,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/74/d9d143fa.jpg","nickname":"silentyears","note":"","ucode":"6E137BFEB874CA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1293877,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/35/dd79037e.jpg","nickname":"a...Z","note":"","ucode":"5A5A44903785FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190563,"discussion_content":"同问，这个change buffer做的针对update 和 delete的升级是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582960268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70513,"ip_address":""},"score":190563,"extra":""},{"author":{"id":1697605,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/KUWZH9adGNsjZ6m9hYh6ttoibgcUnaplS7XGlYuyUybLpdLPZDB56QAlzfQ8wSfs8Pd1T9RiaY7sYibD2wgrCo0UQ/132","nickname":"xyh","note":"","ucode":"CD0C45A63F434E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1293877,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/35/dd79037e.jpg","nickname":"a...Z","note":"","ucode":"5A5A44903785FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335681,"discussion_content":"不是有where条件的时候用不到，而是change buffer就是为了延迟更新数据的时候对二级索引的更新，而置顶第一条说的情况是where 索引值=，就是用的二级索引来更新的，更新之前得先把二级索引的树读出来，既然已经读出来了，就可以直接更新了，没必要用change buffer了","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1608270658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70513,"ip_address":""},"score":335681,"extra":""},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1697605,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/KUWZH9adGNsjZ6m9hYh6ttoibgcUnaplS7XGlYuyUybLpdLPZDB56QAlzfQ8wSfs8Pd1T9RiaY7sYibD2wgrCo0UQ/132","nickname":"xyh","note":"","ucode":"CD0C45A63F434E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336948,"discussion_content":"意思就是update table set 索引列A =aaa where 索引列B= bbb 的时候，索引列A可以用到，对么","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608732041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335681,"ip_address":""},"score":336948,"extra":""}]},{"author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404883,"discussion_content":"所以我觉得，这channge buffer 可能是对那种一张表有很多的非唯一索引的作用更为明显 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634447129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003956,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/51/b4/0d402ae8.jpg","nickname":"南桥畂翊","note":"","ucode":"A97C49A6309A42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21266,"discussion_content":"change buffer 针对表中包含普通索引的表在insert操作时, 优化 普通索引的更新(在insert时,不会立即更新普通索引 而是保存到change buffer延迟处理)","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569460901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/50/60/7c954c92.jpg","nickname":"Tan","note":"","ucode":"D261A69A889696","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326171,"discussion_content":"写主键索引肯定是用不上了，但写其他普通索引就用得上了，所以如果把普通索引改成了唯一索引，那这个也用不上了。所以。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605536507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50258,"discussion_content":"insert 时候要写主键，写主键这个change buffer肯定用不上了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573697308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3672,"discussion_content":"insert时，数据也不是会读入内存么，所有索引一起写不就行了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564683481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1334527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","nickname":"灵犀andy","note":"","ucode":"3C3C36B070676C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109478,"discussion_content":"insert 主键索引的数据会读入内存。如果有非唯一普通索引的话，可以走change buffer","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1577696977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3672,"ip_address":""},"score":109478,"extra":""},{"author":{"id":2028954,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/9a/63dc81a2.jpg","nickname":"Geek1185","note":"","ucode":"47BEE492EF4C1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332636,"discussion_content":"不是同一块磁盘的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607272803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3672,"ip_address":""},"score":332636,"extra":""}]}]},{"had_liked":false,"id":48022,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":true,"comment_ctime":1544323978,"is_pvip":false,"replies":[{"id":"17138","content":"系统表空间就是用来放系统信息的，比如数据字典什么的，对应的磁盘文件是ibdata1, <br>数据表空间就是一个个的表数据文件，对应的磁盘文件就是 表名.ibd","user_name":"作者回复","comment_id":48022,"uid":"1264162","ip_address":"","utype":1,"ctime":1544354272,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"9.2233723734065009e+18","product_id":100020801,"comment_content":"想请教一下老师系统表空间跟数据表空间这两个概念各是什么意思.","like_count":79,"discussions":[{"author":{"id":1521451,"avatar":"https://static001.geekbang.org/account/avatar/00/17/37/2b/b32f1d66.jpg","nickname":"Ball","note":"","ucode":"1EE949E68D84CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311251,"discussion_content":"补充一下，MySQL 配置文件 file_per_table 选项打开数据表空间才是独立的，每张表一个 ibd 文件。\n如果没打开，所有的表数据都在一个 ibdata 文件里。\n选项名称不一定准确，但是意思我表达清楚了。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1602291230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431990,"discussion_content":"系统表空间就是用来放系统信息的，比如数据字典什么的，对应的磁盘文件是ibdata1, \n数据表空间就是一个个的表数据文件，对应的磁盘文件就是 表名.ibd","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1544354272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2355521,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f1/41/76c0758f.jpg","nickname":"君战","note":"","ucode":"A8619A79A5CED9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347947,"discussion_content":"show variables like &#39;%innodb_file_per_table%&#39;;","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612395937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1657561,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4a/d9/b8046b4b.jpg","nickname":"zhangm365","note":"","ucode":"60E7DEFB3F5840","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395212,"discussion_content":"请问下 这里为什么会设计系统表空间？有什么用啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632272437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45849,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":true,"comment_ctime":1543803312,"is_pvip":false,"replies":[{"id":"16650","content":"1 3 好问题<br><br>1. 锁是一个单独的数据结构，如果数据页上有锁，change buffer 在判断“是否能用”的时候，就会认为否<br><br>2. 增加<br><br>3. 是这样的，这个问题你分成两步来考虑。<br>第一步，merge其实是从磁盘读数据页到内存，然后应用，这一步都是更新的内存，同时写redolog<br><br>现在内存变成脏页了，跟磁盘数据不一样。之后就走刷脏页的流程。刷脏页也不用写。<br><br><br>=====<br><br>是否使用唯一索引，这个要看业务有没有保证，和性能是否有问题。<br><br>有几位同学都提了，我加到文末说明一下。","user_name":"作者回复","comment_id":45849,"uid":"1264162","ip_address":"","utype":1,"ctime":1543946827,"user_name_real":"林晓斌"}],"discussion_count":24,"race_medal":0,"score":"9.2233722531469005e+18","product_id":100020801,"comment_content":"早，请您看看我以下疑问：<br>1. 看完后感觉牵扯到之前的内容，又糊涂了。change buffer相当于推迟了更新操作，那对并发控制相关的是否有影响，比如加锁？我一直以为加锁需要把具体的数据页读到内存中来，才能加锁，然而并不是？<br>2. 在change buffer中有此行记录的情况下，再次更改，是增加一条还是原地修改？<br>3. purge行为之后应该不会再产生redo log了吧？<br><br>从应用开发的角度看，还是由数据库保证唯一好。","like_count":50,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431239,"discussion_content":"1 3 好问题\n\n1. 锁是一个单独的数据结构，如果数据页上有锁，change buffer 在判断“是否能用”的时候，就会认为否\n\n2. 增加\n\n3. 是这样的，这个问题你分成两步来考虑。\n第一步，merge其实是从磁盘读数据页到内存，然后应用，这一步都是更新的内存，同时写redolog\n\n现在内存变成脏页了，跟磁盘数据不一样。之后就走刷脏页的流程。刷脏页也不用写。\n\n\n=====\n\n是否使用唯一索引，这个要看业务有没有保证，和性能是否有问题。\n\n有几位同学都提了，我加到文末说明一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543946827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2824858,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/1a/9a/f2f9f5dd.jpg","nickname":"李坤龙","note":"","ucode":"68346B996EE22B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":536071,"discussion_content":"第一步，merge其实是从磁盘读数据页到内存，然后应用，这一步都是更新的内存，同时写redolog\n\n请问林老师，redolog应该是在commit的时候就写了吧，merge 的时候还需要写 redolog 吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638674704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":431239,"ip_address":""},"score":536071,"extra":""},{"author":{"id":2925110,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/a2/36/c6c3fc17.jpg","nickname":"clear丶简","note":"","ucode":"6E23DA0B4F8D84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":584322,"discussion_content":"那update、insert、delete不是都会加锁吗？这么说都不能用change buffer？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660746598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":431239,"ip_address":"浙江"},"score":584322,"extra":""}]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244505,"discussion_content":"merge的时候 redolog不是已经记录了之前的change buffer操作了吗，为啥还要写redolog,那之前写入redolog中的changebuffer操作怎么处理？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1587607078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1110677,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/95/538d0348.jpg","nickname":"wrp000000","note":"","ucode":"4860119F2276FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586816,"discussion_content":"之前的changebuffer的redolog是为了保证changebuffer的正常写入，merge之后记录redolog是为了保证meige的正常，可以试想，如果merge之后没有redolog，在脏页刷新之前宕机了，这时其实数据是丢失的了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662529132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":244505,"ip_address":"安徽"},"score":586816,"extra":""},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1110677,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/95/538d0348.jpg","nickname":"wrp000000","note":"","ucode":"4860119F2276FE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587908,"discussion_content":"没明白 这不是记录重复了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663386507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":586816,"ip_address":"湖北"},"score":587908,"extra":""}]},{"author":{"id":1116934,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR4f3mAqslFT42Cp95y62vClKsDbIiaAgQh7vMcc58K2jc1BWnovkBJMDTWuREcA9TWbtbGUtVqjQ/132","nickname":"张晨辉","note":"","ucode":"50710F2CE6594F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287974,"discussion_content":"change Buffer 针对的对象是索引页，锁是加在数据页上的吧。按照老师的回复，如果更新的时候发现数据页已经有锁了，change Buffer自然会失效 找到一个例子 https://www.lizenghai.com/archives/43575.html","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593604670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1874999,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9c/37/253ea895.jpg","nickname":"我不是码农","note":"","ucode":"EB4BB711CC54B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554446,"discussion_content":"对于第一个问题是不是这样的，应用change buffer之前会判断当前sql能不能获取锁，不能获取锁直接就阻塞了，能获取锁再继续？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646383168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2604432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/bd/90/99ab3369.jpg","nickname":"局外人","note":"","ucode":"B8E2ED7A8ABE11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393273,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631335577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2365806,"avatar":"https://static001.geekbang.org/account/avatar/00/24/19/6e/6c6fbea8.jpg","nickname":"choice","note":"","ucode":"AF8D36D7084CA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352514,"discussion_content":"将更新操作记录到change buffer时记录redolog，这时redolog记录的是changebuffer的变动；merge的时候，redolog记录的是内存中的数据页和changebuffer（这时应该是更新changebuffer中已经应用的操作的状态吧）。redolog中记录两部分信息的变化，1、内存中数据页的变化；2、changebuffer的变化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614759730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312348,"discussion_content":"晕了,不懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602668392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1695207,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/e7/0d923009.jpg","nickname":"Geek_Winy","note":"","ucode":"BEE395FC91E131","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32566,"discussion_content":"哦，应该是merge的redo-log，记录的是这次的“merge操作”了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571048011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1695207,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/e7/0d923009.jpg","nickname":"Geek_Winy","note":"","ucode":"BEE395FC91E131","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50262,"discussion_content":"merge的时候不写redo log了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573697588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":32566,"ip_address":""},"score":50262,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":149770,"discussion_content":"写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579778388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":50262,"ip_address":""},"score":149770,"extra":""}]},{"author":{"id":1695207,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/e7/0d923009.jpg","nickname":"Geek_Winy","note":"","ucode":"BEE395FC91E131","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32519,"discussion_content":"疑惑的是在写入changed buffer的时候，就写入了redo-log了；等下次merge的时候，又再一次地写入redo-log，不会重复么，比如做的操作是x=x+1;数据库崩溃恢复，不是会从redo-log做两次该操作么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571043951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1695207,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/e7/0d923009.jpg","nickname":"Geek_Winy","note":"","ucode":"BEE395FC91E131","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111251,"discussion_content":"我感觉merge的时候应该不是写redolog了，而是来更新redolog的状态（类似标记为merge完成）,这里也有些朦朦胧胧。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577788112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":32519,"ip_address":""},"score":111251,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1695207,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/e7/0d923009.jpg","nickname":"Geek_Winy","note":"","ucode":"BEE395FC91E131","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149774,"discussion_content":"谁说写入change buffer就写入redo log了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579778549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":32519,"ip_address":""},"score":149774,"extra":""},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184880,"discussion_content":"不写redo log,change buffer中的数据则会丢失 更新操作则丢失了 需要通过redo log来保证change buffer未刷新到ibdata中的数据","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1582582494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149774,"ip_address":""},"score":184880,"extra":""}]}]},{"had_liked":false,"id":47153,"user_name":"包子木有馅","can_delete":false,"product_type":"c1","uid":1318851,"ip_address":"","ucode":"9B8712D4DC7471","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/c3/1ef2bccf.jpg","comment_is_top":false,"comment_ctime":1544064683,"is_pvip":true,"replies":[{"id":"16835","content":"非常好，尤其括号里那句和最后一句","user_name":"作者回复","comment_id":47153,"uid":"1264162","ip_address":"","utype":1,"ctime":1544071411,"user_name_real":"林晓斌"}],"discussion_count":25,"race_medal":0,"score":"834767720107","product_id":100020801,"comment_content":"老师你好，我说下我的理解，不知道有没有问题<br>1、changebuffer跟普通数据页一样也是存在磁盘里，区别在于changebuffer是在共享表空间ibdata1里<br>2、redolog有两种，一种记录普通数据页的改动，一种记录changebuffer的改动<br>3、只要内存里脏页（innodb buffer pool）里的数据发生了变化，就一定会记录2中前一种redolog<br>（对数据的修改记录在changebuffer里的时候，内存里是没有这个物理页的，不存在脏页）<br>3、真正对磁盘数据页的修改是通过将内存里脏页的数据刷回磁盘来完成的，而不是根据redolog","like_count":194,"discussions":[{"author":{"id":1010957,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6d/0d/e3fa096f.jpg","nickname":"拓","note":"","ucode":"AC1940ECC25436","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160709,"discussion_content":"似懂非懂的感觉，希望讲得更透彻点","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1580824510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149789,"discussion_content":"说的什么玩意儿，redo log还分两种？change buffer记录在redo log中？不是记录在buffer pool里面吗？作者怎么还说非常好，能讲的透彻点儿吗？","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1579779430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179981,"discussion_content":"redo日志有分几十种类型的。redo做的事情，简单讲就是记录页的变化（WAL将页变化的乱序写转换成了顺序写）。页是分多种的，比如 B+树索引页（主键 / 二级索引）、undo页（数据的多版本MVCC）、以及现在的change buffer页等等，这些页被redo记录后，就可以不着急刷盘了。change buffer记录索引页的变化；但是change buffer本身也是要持久化的，而它持久化的工作和其他页一样，交给了redo日志来帮忙完成；redo日志记录的是change buffer页的变化。\nchange buffer持久化文件是 ibdata1，索引页持久化文件是 t.ibd。","likes_number":100,"is_delete":false,"is_hidden":false,"ctime":1582267769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149789,"ip_address":""},"score":179981,"extra":""},{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319764,"discussion_content":"哇 通了通了感谢大佬.. 语言表达能力的光辉..","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604115137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179981,"ip_address":""},"score":319764,"extra":""},{"author":{"id":1020492,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/4c/40783447.jpg","nickname":"何骧","note":"","ucode":"11DCC74CE2F300","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390918,"discussion_content":"醍醐灌顶！很强","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630140906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179981,"ip_address":""},"score":390918,"extra":""}]},{"author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50269,"discussion_content":"redo log里的数据也要先恢复到内存，然后事务提交或回滚","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573698123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037190,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d3/86/b5d72c87.jpg","nickname":"Zhaoyang","note":"","ucode":"131D83AC2566D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129901,"discussion_content":"我并没有看懂","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578744104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1037190,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d3/86/b5d72c87.jpg","nickname":"Zhaoyang","note":"","ucode":"131D83AC2566D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184884,"discussion_content":"咋不懂了\n1.说的change buffer和redo log刷新到磁盘文中存储的位置不同,ibdata和t.ibd\n2.redo log记录内存中数据页的变更同时也要记录change buffer的变更,因为change buffer的操作是不会将磁盘中的数据读取到内存中进行修改,也就是说内存中不存在该数据的脏页,那为了保证更新操作是存在则需要通过redo log来记录,防止更新操作的丢失比如宕机后保证更新操作有\n3.当mysql未宕机时,redo log写满后需要移动check point点时,通过判断内存中数据和磁盘是否一致即是否是脏页来刷新到磁盘中;当mysql宕机后没有内存即没有脏页,通过redo log来恢复","likes_number":30,"is_delete":false,"is_hidden":false,"ctime":1582583359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":129901,"ip_address":""},"score":184884,"extra":""}]},{"author":{"id":2860954,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/wfRD8vz9zQDYgxwSqW6jnpIcQ3guZUE6EQuVXM5Wribtp9wDlJLO8SG76CCPEdmDviaTK99iarvTYLxJw71bKdeXw/132","nickname":"CheerJia","note":"","ucode":"5A2E4A956816C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546356,"discussion_content":"看来还是我理解不够，里面还是很多 表空间，表数据概念不太懂。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642304609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431682,"discussion_content":"非常好，尤其括号里那句和最后一句","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1544071411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2131215,"avatar":"https://static001.geekbang.org/account/avatar/00/20/85/0f/5cb822d6.jpg","nickname":"shadow","note":"","ucode":"64DCFAEC37EFBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301364,"discussion_content":"所以redolog 的crash safe能力就是恢复内存的脏页。而 change buffer中的记录不是脏页，但也是靠redo恢复。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598502718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2131215,"avatar":"https://static001.geekbang.org/account/avatar/00/20/85/0f/5cb822d6.jpg","nickname":"shadow","note":"","ucode":"64DCFAEC37EFBC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312351,"discussion_content":"redo log 重放,使内存变脏\nchange buffer 不脏,不过merge操作会变脏","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1602668750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301364,"ip_address":""},"score":312351,"extra":""}]},{"author":{"id":2893933,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/zwJKqvhjOj7nXBKmYW7Amvib4j26e0c7zKRg8GrEFlezicCzI61ABm7b1k75wiaib32TNicsfaV7otvRaC5RCIKCVwA/132","nickname":"天殇云雾","note":"","ucode":"0BFDFA4218A2D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578774,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657005622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1857149,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/08eYD2AQBX7ic0141IvkGicyqCB7BsIIvbTX3yq3whhOPnnAuYrrXiaCMw56SIkryM65MibVpia0kedyqILVBxBg8Vg/132","nickname":"尼采","note":"","ucode":"077188784E9B0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548897,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643441769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2770660,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/46/e4/0860c82f.jpg","nickname":"东泽","note":"","ucode":"7B621B43909E07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400883,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633453089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2604432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/bd/90/99ab3369.jpg","nickname":"局外人","note":"","ucode":"B8E2ED7A8ABE11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393275,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631335979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1651441,"avatar":"https://static001.geekbang.org/account/avatar/00/19/32/f1/fd24d52b.jpg","nickname":"青禾qingh","note":"","ucode":"453FC435B03790","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391228,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630341128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1627397,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d5/05/8fd8ca4c.jpg","nickname":"快快乐乐","note":"","ucode":"D093D8D5836FF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342422,"discussion_content":"先mark一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610678765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210035,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqdsd8qbkOFkcKQO0EZzg3p7yEw6cGl47zJzGl12jHQgMUnKpMWib0ZnibRH4LZPYqhfkWH0oYt31mQ/132","nickname":"雷雷","note":"","ucode":"648204DABB1AD5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328719,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606217049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323624,"discussion_content":"感谢你的评论，让我的其中一个疑问解决了，即刷脏页行为不会牵扯到change buffer。但我这里还有一个问题，如果redo log 写满了，change buffer还没有merge，而redo log 要擦除的部分涉及到了change buffer，此时，会强行merge吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604976464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398695,"discussion_content":"我觉得会。  redo log 写满了， 会强制触发checkpoint， 将redo log对应的数据脏页刷到磁盘， 此时 ， change buffer中的信息也会合入到内存页中一起刷到磁盘中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632832611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":323624,"ip_address":""},"score":398695,"extra":""}]},{"author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47947,"discussion_content":"最后一句：真正对磁盘数据页的修改是通过将内存里脏页的数据刷回磁盘来完成的，而不是根据redolog\n如果是这样，那是怎么做到crash-safe的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573437370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":75880,"discussion_content":"进程正常工作的情况下是将内存数据刷会磁盘，如果是崩溃后刚启动，内存根本没有脏页，就只能靠redolog了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1575792418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":47947,"ip_address":""},"score":75880,"extra":""},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314683,"discussion_content":"可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603185941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":75880,"ip_address":""},"score":314683,"extra":""}]}]},{"had_liked":false,"id":45769,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1543792934,"is_pvip":false,"replies":[{"id":"16347","content":"优秀","user_name":"作者回复","comment_id":45769,"uid":"1264162","ip_address":"","utype":1,"ctime":1543799971,"user_name_real":"林晓斌"}],"discussion_count":8,"race_medal":0,"score":"495465031974","product_id":100020801,"comment_content":"会导致change buffer丢失，会导致本次未完成的操作数据丢失，但不会导致已完成操作的数据丢失。<br>1.change buffer中分两部分，一部分是本次写入未写完的，一部分是已经写入完成的。<br>2.针对未写完的，此部分操作，还未写入redo log，因此事务还未提交，所以没影响。<br>2.针对，已经写完成的，可以通过redo log来进行恢复。<br><br>所以，不会对数据库造成影响。","like_count":115,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431202,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543799971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188070,"discussion_content":"你最优秀，简洁明了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582793324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1874999,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9c/37/253ea895.jpg","nickname":"我不是码农","note":"","ucode":"EB4BB711CC54B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554458,"discussion_content":"会不会出现写redo log只写了一半呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646388436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1795793,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","nickname":"Geek_55e386","note":"","ucode":"5A727F1323C2D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1874999,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9c/37/253ea895.jpg","nickname":"我不是码农","note":"","ucode":"EB4BB711CC54B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585253,"discussion_content":"写一半肯定是未提交, 业务方也没拿到成功响应的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661423092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":554458,"ip_address":"浙江"},"score":585253,"extra":""}]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312356,"discussion_content":"根据文中描述,\n执行顺序,先执行change buffer,再执行 redo log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602669121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1559178,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/a5U0nqaicLy5ZJkESxBd5lMicNQcTTDK8vURyyWiabHxic7vS1VVk7HWTZg6ltyWJ3n9jb3Gq554ibfjsf7bv1v1Sdw/132","nickname":"十大杰出青年","note":"","ucode":"BAB4AA12604CF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":158622,"discussion_content":"未写完的意思是还没落盘么，还是说连内存都没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580608397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1559178,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/a5U0nqaicLy5ZJkESxBd5lMicNQcTTDK8vURyyWiabHxic7vS1VVk7HWTZg6ltyWJ3n9jb3Gq554ibfjsf7bv1v1Sdw/132","nickname":"十大杰出青年","note":"","ucode":"BAB4AA12604CF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184893,"discussion_content":"未写完的部分只的是写入了change buffer,但是未写入redo log,因为没有commit也就没有change buffer刷新到ibdata","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582584949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":158622,"ip_address":""},"score":184893,"extra":""},{"author":{"id":2206043,"avatar":"https://static001.geekbang.org/account/avatar/00/21/a9/5b/791d0f5e.jpg","nickname":"不卷怎么搞钱","note":"","ucode":"F01CA83CF99047","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312674,"discussion_content":"你的意思是commit 了，就立马刷盘吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602766481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":184893,"ip_address":""},"score":312674,"extra":""}]}]},{"had_liked":false,"id":233820,"user_name":"ging_96","can_delete":false,"product_type":"c1","uid":1993133,"ip_address":"","ucode":"F8936FC04BBFFC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/69/ad/0ba9f9f0.jpg","comment_is_top":false,"comment_ctime":1594463685,"is_pvip":false,"discussion_count":15,"race_medal":0,"score":"297947207109","product_id":100020801,"comment_content":"首先明确一个观点，redo log最大的作用，就是用于数据库异常宕机的恢复工作。<br>如果数据库永远不会宕机，那么不需要 redo log。redo log 和 change buffer其实关注的是两个事情，不能混为一谈。<br><br>其次，数据库缓冲池中有如下内容：数据页，索引页，插入缓冲，等等其他页（其他页目前不需要了解），数据页可以理解为叶子节点，索引页可以理解为非叶子节点，插入缓冲就是老师这节课讲的 change buffer。<br><br>当做insert update delete操作时，会涉及到两方面的更新，一类是主键索引B+树，另一类的非主键索引B+树。针对，主键索引B+树和 非主键索引中的唯一索引B+树，如果在内存中，直接更新内存；如果不在内存，直接从数据库中读取页到内存中来，更新内存即可。针对非主键索引的普通索引B+树，如果树在内存中，直接更新内存；如果不在内存中，更新change buffer，等到后面需要使用这个树的时候，会从磁盘中读取，然后做merge操作。<br><br>有同学问，到底是依据change buffer磁盘还是依据redo log更新磁盘，我的回答是，他们都不会直接更新磁盘，刷新磁盘的工作是innodb存储引擎中的线程去做的。redo log负责的是 异常宕机的恢复；change buffer用于 提高普通索引更新的性能。","like_count":70,"discussions":[{"author":{"id":1993133,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/69/ad/0ba9f9f0.jpg","nickname":"ging_96","note":"","ucode":"F8936FC04BBFFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290423,"discussion_content":"继续补充一下，刷新磁盘的工作是innodb存储引擎中的线程去做的，并且依据的是数据库缓冲池中的脏页来做，既不是依据redo log，也不是依据change buffer。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1594467099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1120025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/17/19/46fcde38.jpg","nickname":"yonyoupht","note":"","ucode":"9B3AC96150B8AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1993133,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/69/ad/0ba9f9f0.jpg","nickname":"ging_96","note":"","ucode":"F8936FC04BBFFC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297751,"discussion_content":"清晰明了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597046800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290423,"ip_address":""},"score":297751,"extra":""},{"author":{"id":2694146,"avatar":"https://static001.geekbang.org/account/avatar/00/29/1c/02/5aa8b087.jpg","nickname":"Wayne👿","note":"","ucode":"A8AD5481052D9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1993133,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/69/ad/0ba9f9f0.jpg","nickname":"ging_96","note":"","ucode":"F8936FC04BBFFC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545871,"discussion_content":"如果是一句脏页来做，那刷新磁盘之后，是如何更新redo log的checkpoint呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642068611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290423,"ip_address":""},"score":545871,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1993133,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/69/ad/0ba9f9f0.jpg","nickname":"ging_96","note":"","ucode":"F8936FC04BBFFC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587248,"discussion_content":"redo本身就是对脏页的持久化，只有刷脏了redo才能做推进，怎么能说毫无关系了。我看innodb引擎的书就有提到刷脏也会因为redo满而触发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662906701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290423,"ip_address":"广东"},"score":587248,"extra":""}]},{"author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404892,"discussion_content":"这种感觉就像便秘了之后，来了一只开塞露。再说一句，redolog不仅是解决宕机问题，还解决了随机io延迟写，变顺序io的问题，变相加快了速度","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1634452568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2604432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/bd/90/99ab3369.jpg","nickname":"局外人","note":"","ucode":"B8E2ED7A8ABE11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393278,"discussion_content":"mark  \nchange buffer是用来 更新 非主键/唯一索引的二级索引B+树的\nredolog 是保障crash-safe的，所以 对于change buffer的保存落地也要有保障，所以会记录redolog","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1631337161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303433,"discussion_content":"刷新脏页的时候会伴随移动redo log 的checkpoint吗？  ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599242143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336995,"discussion_content":"不会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608741669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303433,"ip_address":""},"score":336995,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587249,"discussion_content":"会标记redo log的checkpoint位点，表示这部分可复用。个人理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662906782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303433,"ip_address":"广东"},"score":587249,"extra":""}]},{"author":{"id":1250580,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/14/21e0807e.jpg","nickname":"gm","note":"","ucode":"0E39AE5BE34E27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537001,"discussion_content":"mk","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638932135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2325111,"avatar":"https://static001.geekbang.org/account/avatar/00/23/7a/77/bb17e879.jpg","nickname":"往事,优雅而已","note":"","ucode":"737776381821F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533871,"discussion_content":"第2讲里说，没有宕机的话有redo log的WAL优化，怎么会用不到呢\nchange buffer针对的是有索引且是普通索引的情况，先根据索引找到对应的页，再写redo log，有了对应的页，自然比没有页的更新要快。\n\nredo log先更新的应该是内存，最后刷盘。\n不知道说的对不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638002608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDKsicmpne7xQNocwRQ80DDZ3CzjsDoVIcH0SBiaYzS056oVOx4pEeEVeCaXE3QtsjUIEI0x1xQVTw/132","nickname":"muggle","note":"","ucode":"D78087BCAD0860","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414273,"discussion_content":"第二章中对redlog的chekpoint描述说，擦除记录前，要把记录更新到数据文件，这里莫非是将change buffer中的数据更新到数据文件？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636706556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2837603,"avatar":"","nickname":"Geek_18e6f5","note":"","ucode":"3700BC57DD6FF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413333,"discussion_content":"小老弟666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636448889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2420723,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ef/f3/2515c89d.jpg","nickname":"云开月明","note":"","ucode":"50BCE5A3E77159","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347832,"discussion_content":"牛逼，大佬直接解答了我的疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612336086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813207,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/aa/d7/a417ad5b.jpg","nickname":"CharAt","note":"","ucode":"D7D44B48FC4E79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319859,"discussion_content":"我就不明白，在插入的时候指定了主键，会将页读取到内存中，进行更行吧？而且innde的结构是主键和数据是在一起的。那么既然更新了最新数据，为何还需要对二级索引进行缓存？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604146107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46044,"user_name":"Ivan","can_delete":false,"product_type":"c1","uid":1302381,"ip_address":"","ucode":"57090A053A247F","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/6d/44cf0de4.jpg","comment_is_top":false,"comment_ctime":1543838494,"is_pvip":false,"replies":[{"id":"16477","content":"👍🏿","user_name":"作者回复","comment_id":46044,"uid":"1264162","ip_address":"","utype":1,"ctime":1543846186,"user_name_real":"林晓斌"}],"discussion_count":12,"race_medal":0,"score":"276421745438","product_id":100020801,"comment_content":"回答一下melon的问题。<br>change Buffer和数据页一样，也是物理页的一个组成部分，数据结构也是一颗B+树，这棵B+树放在共享表空间中，默认ibdata1中。change buffer  写入系统表空间机制应该和普通表的脏页刷新到磁盘是相同的机制--Checkpoint机制；<br>之所以change buffer要写入系统表空间，是为了保证数据的一致性，change buffer做修改时需要写redo，在做恢复时需要根据redo来恢复change buffer，若是不进行change buffer写入系统表空间，也就是不进行持久化，那么在change buffer写入内存后掉电（也就是篇尾提出的问题），则无法进行数据恢复。这样也会导致索引中的数据和相应表的相应列中的数据不一致。<br>change buffer 写入到了系统表空间，purge 的时候会先查询change buffer里对应的记录，然后进行purge，因为change buffer B+树的key是表空间ID，所以查询根据表空间ID 查询change buffer会很快。","like_count":64,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431315,"discussion_content":"👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543846186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1364141,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d0/ad/584a4aa1.jpg","nickname":"NieXY","note":"","ucode":"C131B9A44CB55C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":147971,"discussion_content":"有个疑问，就算change buffer不写入系统表空间，写入内存掉电后不是一样能够通过redolog来恢复吗？毕竟redolog里面有记录更新 change buffer 的日志。能否解答一下？","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1579683772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1302381,"avatar":"https://static001.geekbang.org/account/avatar/00/13/df/6d/44cf0de4.jpg","nickname":"Ivan","note":"","ucode":"57090A053A247F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1364141,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d0/ad/584a4aa1.jpg","nickname":"NieXY","note":"","ucode":"C131B9A44CB55C","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":189585,"discussion_content":"redolog是物理日志，记录的是“某个数据页上做的什么变更”，change buffer只写入内存，掉电后在启动，内存是空的，redolog是没办法恢复的。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1582893296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":147971,"ip_address":""},"score":189585,"extra":""},{"author":{"id":1123171,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/63/4fb6fee0.jpg","nickname":"深白色","note":"","ucode":"C4B26AB70D8A6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1302381,"avatar":"https://static001.geekbang.org/account/avatar/00/13/df/6d/44cf0de4.jpg","nickname":"Ivan","note":"","ucode":"57090A053A247F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202164,"discussion_content":"所有change buffer都记录在redo中，重启一样可以恢复啊，个人观点：redo是有大小限制的，采用循环写，会存在覆盖的情况，redo中并不能保存所有的change buffer，所以才需要持久化？如果是这样，redo在覆盖的时候把之前的change buffer进行merge操作，是不是change buffer就可以不用持久化了？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583885106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":189585,"ip_address":""},"score":202164,"extra":""},{"author":{"id":1357311,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b5/ff/d1f205b0.jpg","nickname":"L","note":"","ucode":"5B847B2378854E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1364141,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d0/ad/584a4aa1.jpg","nickname":"NieXY","note":"","ucode":"C131B9A44CB55C","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":313088,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602935841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":147971,"ip_address":""},"score":313088,"extra":""}]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312361,"discussion_content":"不是太懂,\n为啥change buffer 不持久化的情况下,但是记录了redo log,\n崩溃恢复的时候不能通过redo log 进行恢复呢?","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602669560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2546239,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqUP1oawANUYEHD8XmDgt0rvcYXWKDOAZT4h6W50UiadpJ51icLhZibS2qpia8eSibUuOsTrKtxfBRN2Lg/132","nickname":"runoob","note":"","ucode":"86B22C4FF45703","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365061,"discussion_content":"redo log循环写的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617698706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312361,"ip_address":""},"score":365061,"extra":""},{"author":{"id":1518795,"avatar":"","nickname":"Geek_2ac804","note":"","ucode":"EDF69B20030BB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554239,"discussion_content":"因为redolog记录的是数据页的改动，如果在磁盘上都没有持久化过，何来数据页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646278017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312361,"ip_address":""},"score":554239,"extra":""}]},{"author":{"id":2604432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/bd/90/99ab3369.jpg","nickname":"局外人","note":"","ucode":"B8E2ED7A8ABE11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393276,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631336624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45833,"user_name":"壹笙☞漂泊","can_delete":false,"product_type":"c1","uid":1092577,"ip_address":"","ucode":"3A0B8EC881665C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/e1/f6b921fa.jpg","comment_is_top":false,"comment_ctime":1543801606,"is_pvip":false,"replies":[{"id":"16387","content":"赞👍🏿<br><br>不会丢失还有redolog的功劳哈","user_name":"作者回复","comment_id":45833,"uid":"1264162","ip_address":"","utype":1,"ctime":1543809439,"user_name_real":"林晓斌"}],"discussion_count":10,"race_medal":0,"score":"254946872070","product_id":100020801,"comment_content":"前两次学了之后没时间总结。。今天继续<br>总结:<br>选择普通索引还是唯一索引？<br>对于查询过程来说：<br>a、普通索引，查到满足条件的第一个记录后，继续查找下一个记录，知道第一个不满足条件的记录<br>b、唯一索引，由于索引唯一性，查到第一个满足条件的记录后，停止检索<br>但是，两者的性能差距微乎其微。因为InnoDB根据数据页来读写的。<br>对于更新过程来说：<br>概念：change buffer<br>当需要更新一个数据页，如果数据页在内存中就直接更新，如果不在内存中，在不影响数据一致性的前提下，InnoDB会将这些更新操作缓存在change buffer中。下次查询需要访问这个数据页的时候，将数据页读入内存，然后执行change buffer中的与这个页有关的操作。<br><br>change buffer是可以持久化的数据。在内存中有拷贝，也会被写入到磁盘上<br><br>purge:将change buffer中的操作应用到原数据页上，得到最新结果的过程，成为purge<br>访问这个数据页会触发purge，系统有后台线程定期purge，在数据库正常关闭的过程中，也会执行purge<br><br>唯一索引的更新不能使用change buffer<br><br>change buffer用的是buffer pool里的内存，change buffer的大小，可以通过参数innodb_change_buffer_max_size来动态设置。这个参数设置为50的时候，表示change buffer的大小最多只能占用buffer pool的50%。<br><br>将数据从磁盘读入内存涉及随机IO的访问，是数据库里面成本最高的操作之一。 <br>change buffer 因为减少了随机磁盘访问，所以对更新性能的提升很明显。<br><br>change buffer使用场景<br>在一个数据页做purge之前，change buffer记录的变更越多，收益就越大。<br>对于写多读少的业务来说，页面在写完以后马上被访问到的概率比较小，此时change buffer的使用效果最好。这种业务模型常见的就是账单类、日志类的系统。<br><br>反过来，假设一个业务的更新模式是写入之后马上会做查询，那么即使满足了条件，将更新先记录在change buffer,但之后由于马上要访问这个数据页，会立即触发purge过程。<br>这样随机访问IO的次数不会减少，反而增加了change buffer的维护代价。所以，对于这种业务模式来说，change buffer反而起到了副作用。<br><br>索引的选择和实践：<br>尽可能使用普通索引。<br>redo log主要节省的是随机写磁盘的IO消耗(转成顺序写)，而change buffer主要节省的则是随机读磁盘的IO消耗。<br><br>思考题：<br>change buffer不会丢失，因为change buffer是可以持久化的数据，在磁盘上占据了系统表空间ibdata，对应的内部系统表名为SYS_IBUF_TABLE。因此在异常关机的时候，不会丢失。","like_count":59,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431229,"discussion_content":"赞👍🏿\n\n不会丢失还有redolog的功劳哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543809439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3040193,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/63/c1/791d0f5e.jpg","nickname":"骑墙头吃瓜唠嗑","note":"","ucode":"A4B9CF783F08E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584096,"discussion_content":"厉害\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660630972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1050411,"avatar":"https://static001.geekbang.org/account/avatar/00/10/07/2b/d111e75d.jpg","nickname":"Lion","note":"","ucode":"21AA6AE4A90789","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387294,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628090549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1499743,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e2/5f/94595b9e.jpg","nickname":"frank","note":"","ucode":"4888174B90B28F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305730,"discussion_content":">>> 对应的内部系统表名为SYS_IBUF_TABLE。\n这个表在哪个库？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600071010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2068623,"avatar":"","nickname":"123","note":"","ucode":"FDE06A009F51FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296603,"discussion_content":"数据修改过程（无 where情况）\n\n在内存中\n\n唯一索引，修改数据，直接返回\n\n普通索引，修改数据，直接返回\n\n不在内存中\n\n唯一索引，加载数据所在页，判断唯一性，修改数据\n\n普通索引，修改数据到change buffer，返回\n\n普通和唯一索引的最大区别在于\n\n数据不在内存时候，唯一索引要加载数据判断唯一性，普通直接存入change buffer，返回","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596598835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039813,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dd/c5/9ae99a7f.jpg","nickname":"¾阳光","note":"","ucode":"C67D0E18F6158D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288898,"discussion_content":"日常看评论巩固学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593927227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1721168,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","nickname":"凡","note":"","ucode":"80C2A6452AB9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113509,"discussion_content":"不对先别急着赞看清楚题目。老师的问题是，change buffer 一开始是写内存的，还未持久话为系统表空间，这时候断电了。不过答案在评论里了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577898216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037406,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d4/5e/b8bfa75d.jpg","nickname":"辰星","note":"","ucode":"C05AF875B85718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85527,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576552142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453027,"avatar":"","nickname":"kkk","note":"","ucode":"FB4BFD00618699","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38703,"discussion_content":"zan\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571821296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1463873,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIO2hQgGGq9htCBJNNAMH33VFvCBicwOjwCVXTg3WxYBkI3of3ibfQWib4ibF8m2y9vORT5mSibuqw5LNA/132","nickname":"带头大哥","note":"","ucode":"DA49D606C1E6DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5434,"discussion_content":"优秀啊。老铁！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566266794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45988,"user_name":"Ivan","can_delete":false,"product_type":"c1","uid":1302381,"ip_address":"","ucode":"57090A053A247F","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/6d/44cf0de4.jpg","comment_is_top":false,"comment_ctime":1543828684,"is_pvip":false,"replies":[{"id":"16433","content":"👍🏿<br><br>拆开了分析很好","user_name":"作者回复","comment_id":45988,"uid":"1264162","ip_address":"","utype":1,"ctime":1543832358,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"173342520524","product_id":100020801,"comment_content":"不会导致change buffer丢失。因为在更改change buffer 时也会写redo log，也需要持久化。<br>change buffer 更新完成并且相应事务提交的情况下，首先要保证redo log落盘（二阶段提交），若此时掉电重启，则可以根据 redo 进行恢复;<br>若change buffer 更新完成但是相应事务未提交的情况下，则redo 有可能落盘了（redo 的组提交），也有可能未落盘，若落盘了，读取redo发现没有commit标志（还会进行lsn，binlog的对比），则回滚；若redo未落盘则也就不会出现前滚和回滚的情况，数据依旧一致。","like_count":40,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431296,"discussion_content":"👍🏿\n\n拆开了分析很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543832358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1874999,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9c/37/253ea895.jpg","nickname":"我不是码农","note":"","ucode":"EB4BB711CC54B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554461,"discussion_content":"前提得是innodb_flush_log_at_trx_commit设置成1或2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646389697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129947,"user_name":"臧嘞个慧","can_delete":false,"product_type":"c1","uid":1144320,"ip_address":"","ucode":"7639747FBC2F90","user_header":"https://static001.geekbang.org/account/avatar/00/11/76/00/c3f8a78f.jpg","comment_is_top":false,"comment_ctime":1567333167,"is_pvip":false,"replies":[{"id":"48707","content":"是的，查找过程避不开，但是二级索引树的非叶子节点没多少，主要在磁盘上的还是叶子节点。<br>好问题","user_name":"作者回复","comment_id":129947,"uid":"1264162","ip_address":"","utype":1,"ctime":1567481170,"user_name_real":"林晓斌"}],"discussion_count":10,"race_medal":0,"score":"164776090415","product_id":100020801,"comment_content":"老师讲的真清楚！但是我突然想到一个问题，文中讲change buffer中存的内容是“在某个数据页更新什么”，但是在update&#47;insert时，确定这条记录更新&#47;插入在哪个数据页，不也是有一个查找的过程么？（肯定有一个一层层查找的过程，会路过很多数据页啊）为了确定在哪个数据页操作而遍历过的数据页也会读进内存作缓存吗？","like_count":39,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577771,"discussion_content":"也就说，定位页的过程，需要查询非叶子节点（最后一层非叶子结点就能确定要写到哪个叶子节点，即哪个页），而非叶子节点一般都是在内存中，所以正常不会有IO","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1656325718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314708,"discussion_content":"好问题，写 change buffer 的时候，还是有查找数据所在页。不过这个页查找灰常快（查的是非叶子节点）！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603187911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465729,"discussion_content":"是的，查找过程避不开，但是二级索引树的非叶子节点没多少，主要在磁盘上的还是叶子节点。\n好问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567481170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371945,"discussion_content":"查找的是索引页，并不是数据页。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620094856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587255,"discussion_content":"最核心的概念；节省的只是叶子节点的io开销，因为叶子节点复用很低；而非叶子节点页常驻内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662909096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2667025,"avatar":"","nickname":"Geek_a39aea","note":"","ucode":"94E6C8088AE0CB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389115,"discussion_content":"准确来说在二级索引的叶子节点的上一层节点中就可以确定要插入到哪一页中，因为在二级索引的叶子节点时索引列+主键值，他的非叶子节点中每页存储的是叶子节点中每一页中最小的那个索引列+主键的一条记录+页号，当我们插入的时候就可以从最后一层的非叶子节点中找到应该插入的页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629124783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2083270,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/c9/c6/cf8e9852.jpg","nickname":"dhlpj","note":"","ucode":"250ADDFEBC969D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382894,"discussion_content":"对老师的回答还是有些疑问：如果此时索引树的高度为4，那么为了定位插入数据所在页，会进行3次IO，只是没有真正查询叶子节点所在页的数据。查询叶子节点所在页的数据的这一次IO损耗 会 高于维护change buffer的代价吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625757524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2083270,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/c9/c6/cf8e9852.jpg","nickname":"dhlpj","note":"","ucode":"250ADDFEBC969D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398933,"discussion_content":"此处就没有3次IO了， 前三次查非叶子节点，都是在内存中进行的。查叶子节点，并且将这页载入到内存， 这个比较耗时，特别是在写多读少的场景下，性能差很多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632877366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":382894,"ip_address":""},"score":398933,"extra":""}]},{"author":{"id":2449777,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDUJyeq54fiaXAgF62tNeocO3lHsKT4mygEcNoZLnibg6ONKicMgCgUHSfgW8hrMUXlwpNSzR8MHZwg/132","nickname":"types","note":"","ucode":"8B50927EF1804F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382659,"discussion_content":"不仅仅只有二级索引需要查询吧， 主键索引页需要查询。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625662022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446494,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/5e/77b67a85.jpg","nickname":"飘云","note":"","ucode":"C6FE0310D6853C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346164,"discussion_content":"只查非叶子节点能确定一个key存在不存在么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611883568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45760,"user_name":"虚爱凯平","can_delete":false,"product_type":"c1","uid":1260564,"ip_address":"","ucode":"EA8A7A4498BC86","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/AwEHMTGSmVsia3WZDyIicBQPAfS11lBZ0yUappicPzfmGDmMwkje1UoqKK3UJ6FCBdsZyiauuV1SEfcrFzWfx9n1RQ/132","comment_is_top":false,"comment_ctime":1543779634,"is_pvip":false,"replies":[{"id":"16345","content":"所以主键索引用不上，都是对于那些二级索引的才有效。 <br><br>一个insert语句要操作所有索引的嘛，收益在二级索引","user_name":"作者回复","comment_id":45760,"uid":"1264162","ip_address":"","utype":1,"ctime":1543799865,"user_name_real":"林晓斌"}],"discussion_count":12,"race_medal":0,"score":"147572667698","product_id":100020801,"comment_content":"有点疑惑: 主键id也是唯一索引吧? 那我们的新增操作如何利用 change buffer呢? ","like_count":34,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431197,"discussion_content":"所以主键索引用不上，都是对于那些二级索引的才有效。 \n\n一个insert语句要操作所有索引的嘛，收益在二级索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543799865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/da/b8/01b76df7.jpg","nickname":"蓝色骨头","note":"","ucode":"79F0F2153F4E29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":117538,"discussion_content":"收益在非唯一索引吧，因为非主键的唯一索引也是二级索引；如果一个表没有非唯一索引（除主键外剩余都是唯一索引），实际上就享受不到change buffer带来的好处，老师，我应该可以这样理解吧？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1578125868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589284,"avatar":"","nickname":"Huodefa_0426","note":"","ucode":"0980487D49F9D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2780,"discussion_content":"看到这样的回复，我迷糊了，我想请教下。是不是一条insert语句，会生成多条记录在redolog中（主键索引是主键索引的redolog记录 二级索引是二级索引的redolog记录，还有其他记录怎么记录呢？）","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1563932139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1589284,"avatar":"","nickname":"Huodefa_0426","note":"","ucode":"0980487D49F9D0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111282,"discussion_content":"每个索引都是自己独立的树，也就是自己单独的文件，应该是要单独记录的。我觉的&#34;收益在二级索引&#34;，改为&#34;收益在二级唯一索引&#34;才更准确。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1577789835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2780,"ip_address":""},"score":111282,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149799,"discussion_content":"收益在普通索引才更准确。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1579780166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":111282,"ip_address":""},"score":149799,"extra":""},{"author":{"id":2671212,"avatar":"","nickname":"Geek_3c0861","note":"","ucode":"233634E724D514","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380915,"discussion_content":"普通索引，二级索引不是一回事麼。。。。😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624791749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149799,"ip_address":""},"score":380915,"extra":""}]},{"author":{"id":2384157,"avatar":"https://static001.geekbang.org/account/avatar/00/24/61/1d/07e4d68e.jpg","nickname":"挖土豆","note":"","ucode":"BB1939900AC8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391317,"discussion_content":"啥意思完全没懂  insert插入肯定会涉及到主键啊，也肯定会校验主键的唯一性，按道理怎样都不能用到changer buffer呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630397956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736650,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","nickname":"我的喵","note":"","ucode":"A7435BDBDD2587","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344499,"discussion_content":"啥意思啊，没懂，不就插入一条数据吗，普通索引咋享受好处的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611480105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1758825,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d6/69/f59d4f6f.jpg","nickname":"Ryan","note":"","ucode":"387955FD53E98C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1736650,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","nickname":"我的喵","note":"","ucode":"A7435BDBDD2587","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347843,"discussion_content":"一张表，包含多个索引，每个索引有自己单独的文件。插入一条数据要更新所有索引的文件，这时候更新主键和唯一索引不能用 change buffer，只有更新普通索引才能用上 change buffer 机制","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1612338408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344499,"ip_address":""},"score":347843,"extra":""}]},{"author":{"id":1316451,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/2W9qKibEiaSBbvBt5Om6HU52oNfbxCvjmheFLcYkMiahP8ca5g7CzuywFMaYMhSMSauVlWiatn44QXJc8SpgIwUMtw/132","nickname":"海之韵","note":"","ucode":"C7C3F4E32A2DEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339682,"discussion_content":"同不理解，收益在二级索引上。\n看图更新page1和page2（change buffer上），哪里跟索引相关了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609756827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2369450,"avatar":"https://static001.geekbang.org/account/avatar/00/24/27/aa/140f1f8e.jpg","nickname":"Curiosity","note":"","ucode":"FB89ED4E0FD2B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1316451,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/2W9qKibEiaSBbvBt5Om6HU52oNfbxCvjmheFLcYkMiahP8ca5g7CzuywFMaYMhSMSauVlWiatn44QXJc8SpgIwUMtw/132","nickname":"海之韵","note":"","ucode":"C7C3F4E32A2DEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354646,"discussion_content":"主键索引的insert肯定是不能用changebuffer,而二级索引的insert有可能用上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615306590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339682,"ip_address":""},"score":354646,"extra":""}]}]},{"had_liked":false,"id":63761,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1548490558,"is_pvip":false,"replies":[{"id":"22564","content":"“总觉得将 change buffer落盘意义不大。毕竟redo log中也会记录，当数据库崩溃时可以通过redo log将change buffer内容回放出来。” 是的，所以change buffer其实也是用了WAL机制。<br><br>“内存不足需要回收change buffer这部分内存“，只需要让change buffer本身持久化可以，不需要执行merge操作。merge操作是在读数据页的时候做的<br><br>赞回顾的习惯哈👍<br>","user_name":"作者回复","comment_id":63761,"uid":"1264162","ip_address":"","utype":1,"ctime":1548515598,"user_name_real":"林晓斌"}],"discussion_count":12,"race_medal":0,"score":"143282411326","product_id":100020801,"comment_content":"时隔一段时间再来回顾一遍，突然有了一个小问题，还望老师可以解答一下。<br>总觉得将 change buffer落盘意义不大。毕竟redo log中也会记录。当数据库崩溃时可以通过redo log将change buffer内容回放出来。如果说因为内存不足需要回收change buffer这部分内存，那也应当将数据merge后刷入磁盘吧。<br>不知道理解的是不是有误，还望老师指点迷津。","like_count":33,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437710,"discussion_content":"“总觉得将 change buffer落盘意义不大。毕竟redo log中也会记录，当数据库崩溃时可以通过redo log将change buffer内容回放出来。” 是的，所以change buffer其实也是用了WAL机制。\n\n“内存不足需要回收change buffer这部分内存“，只需要让change buffer本身持久化可以，不需要执行merge操作。merge操作是在读数据页的时候做的\n\n赞回顾的习惯哈👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548515598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446494,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/5e/77b67a85.jpg","nickname":"飘云","note":"","ucode":"C6FE0310D6853C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202675,"discussion_content":"“内存不足需要回收change buffer这部分内存“，只需要让change buffer本身持久化可以，不需要执行merge操作。merge操作是在读数据页的时候做的\n-----------------------------------------------------------------------\n如果change buffer持久化了，当需要merge的时候不还得将change buffer从持久化存储读到内存么？  将change buffer直接merge不是更好？","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1583939465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1159645,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b1/dd/c814190f.jpg","nickname":"巴子小","note":"","ucode":"1C3D35AEC235BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1446494,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/5e/77b67a85.jpg","nickname":"飘云","note":"","ucode":"C6FE0310D6853C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556545,"discussion_content":"merge过程是随机IO，change buffer读写都是随机IO，性能更好，我是这么理解的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647413237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":202675,"ip_address":""},"score":556545,"extra":""}]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312369,"discussion_content":"可以,目前个人所得结论:\nchange buffer 可以不落盘.","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602671068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1518795,"avatar":"","nickname":"Geek_2ac804","note":"","ucode":"EDF69B20030BB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554248,"discussion_content":"我怀疑老师这里是误解这位同学的意思了，不落盘指的是当时不落盘，采用WAL机制，事后还是要落盘的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646284599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312369,"ip_address":""},"score":554248,"extra":""}]},{"author":{"id":1301978,"avatar":"https://static001.geekbang.org/account/avatar/00/13/dd/da/78ed5312.jpg","nickname":"Mr jun","note":"","ucode":"C1C8CDB38C30FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303787,"discussion_content":"我猜想。changebuffer如果能进入磁盘的话，肯定是里面的数据已经同步到ibdata里了(磁盘里的数据是最新的了，不需要将磁盘里读出来还需要merge了，就是脏页已经同步到磁盘了)，不过确实有了redolog，我也不知道为什么会需要changebuffer磁盘化。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599381605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155646,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","nickname":"ppd0705","note":"","ucode":"EB63D4E3FD1E9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227486,"discussion_content":"所以change buffer落盘意义在哪里？ \n另外merge的时候是否需要删除持久化了的change buffer数据","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586496615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2218209,"avatar":"","nickname":"Geek_a54de5","note":"","ucode":"750C8522F61B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1155646,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","nickname":"ppd0705","note":"","ucode":"EB63D4E3FD1E9A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317052,"discussion_content":"猜测类似于linux swap机制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603502745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":227486,"ip_address":""},"score":317052,"extra":""}]},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587254,"discussion_content":"redo保证了change buffer的crash safe，并且通过wal机制保证了效率；至于为什么change buffer在发生checkpoint不进行merge落库到数据页而是持久化在共享表空间中即ibdata1个人认为是因为这里的merge还需要随机加载数据页，反而会雪上加霜；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662908776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1275690,"avatar":"https://static001.geekbang.org/account/avatar/00/13/77/2a/244d98aa.jpg","nickname":"cp★钊","note":"","ucode":"6B86D4D538BDF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375608,"discussion_content":"同样的疑问，我能想到change buffer如果不直接merge，而是持久化到磁盘，难道是为了提升性能？毕竟buffer里一个记录的merge就涉及一次读写随机IO，集中merge的时间占用太长。如果只是持久化buffer，可以直接顺序写IO。\n只是个人猜测，如果又大佬了解了具体原因麻烦回复下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621765809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149829,"discussion_content":"啥意思，change buffer什么时候写到redo log中，文章里面没有提到啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579781349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169505,"discussion_content":"提到了，在图解里。change buffer的操作会被记录到redo log里。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581609082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149829,"ip_address":""},"score":169505,"extra":""}]}]},{"had_liked":false,"id":46668,"user_name":"静以储势·Shuke","can_delete":false,"product_type":"c1","uid":1119090,"ip_address":"","ucode":"98736831B73028","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/72/434a40f1.jpg","comment_is_top":false,"comment_ctime":1543970473,"is_pvip":false,"replies":[{"id":"16702","content":"👍🏿","user_name":"作者回复","comment_id":46668,"uid":"1264162","ip_address":"","utype":1,"ctime":1543985065,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"143277891241","product_id":100020801,"comment_content":"要理解change buffer还得先理解buffer pool是啥，顾名思义，硬盘在读写速度上相比内存有着数量级差距，如果每次读写都要从磁盘加载相应数据页，DB的效率就上不来，因而为了化解这个困局，几乎所有的DB都会把缓存池当做标配（在内存中开辟的一整块空间，由引擎利用一些命中算法和淘汰算法负责维护和管理），change buffer则更进一步，把在内存中更新就能可以立即返回执行结果并且满足一致性约束（显式或隐式定义的约束条件）的记录也暂时放在缓存池中，这样大大减少了磁盘IO操作的几率","like_count":33,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431502,"discussion_content":"👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543985065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360600,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616485651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314702,"discussion_content":"在不影响数据一致性约束的情况下可以使用 change buffer 大大减少IO操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603187200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360601,"discussion_content":"得分场景，更新后马上读这种场景并不会减少IO","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1616485712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":314702,"ip_address":""},"score":360601,"extra":""}]}]},{"had_liked":false,"id":55044,"user_name":"侯占山","can_delete":false,"product_type":"c1","uid":1354670,"ip_address":"","ucode":"472EAA6813CD1C","user_header":"","comment_is_top":false,"comment_ctime":1546009140,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"134689995316","product_id":100020801,"comment_content":"这是到目前为止我唯一一篇看不懂的文章","like_count":31,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149831,"discussion_content":"哈哈，我看懂了文章，但是我看不懂评论了。","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1579781416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348742,"discussion_content":"哈哈哈哈哈哈哈，同看不懂评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612699866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149831,"ip_address":""},"score":348742,"extra":""},{"author":{"id":1607424,"avatar":"https://static001.geekbang.org/account/avatar/00/18/87/00/18eea339.jpg","nickname":"🎧","note":"","ucode":"ED54DE6D0CF497","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391648,"discussion_content":"看看官网","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630565617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149831,"ip_address":""},"score":391648,"extra":""}]},{"author":{"id":2562181,"avatar":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","nickname":"半年 2号","note":"","ucode":"7F23C4532A5513","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411011,"discussion_content":"要理解change buffer还得先理解buffer pool是啥，顾名思义，硬盘在读写速度上相比内存有着数量级差距，如果每次读写都要从磁盘加载相应数据页，DB的效率就上不来，因而为了化解这个困局，几乎所有的DB都会把缓存池当做标配（在内存中开辟的一整块空间，由引擎利用一些命中算法和淘汰算法负责维护和管理），change buffer则更进一步，把在内存中更新就能可以立即返回执行结果并且满足一致性约束（显式或隐式定义的约束条件）的记录也暂时放在缓存池中，这样大大减少了磁盘IO操作的几率","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635828604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312370,"discussion_content":"哈哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602671130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275623,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590741599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46940,"user_name":"yy","can_delete":false,"product_type":"c1","uid":1307788,"ip_address":"","ucode":"4F6E10E2D1FE8C","user_header":"","comment_is_top":false,"comment_ctime":1544005055,"is_pvip":false,"replies":[{"id":"16743","content":"抱歉，这里说的都是merge哈，是因为我之前写错了，你在这里看到的讨论都当作merge","user_name":"作者回复","comment_id":46940,"uid":"1264162","ip_address":"","utype":1,"ctime":1544011531,"user_name_real":"林晓斌"}],"discussion_count":7,"race_medal":0,"score":"126098056639","product_id":100020801,"comment_content":"老师好  看评论看蒙了  评论里说的purge与merge是一个意思吗 ","like_count":29,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431611,"discussion_content":"抱歉，这里说的都是merge哈，是因为我之前写错了，你在这里看到的讨论都当作merge","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544011531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1599197,"avatar":"https://static001.geekbang.org/account/avatar/00/18/66/dd/c9f17139.jpg","nickname":"Damo","note":"","ucode":"F332EA67F5A40C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286279,"discussion_content":"怪不得我看评论一脸懵逼，不知道 purge 是啥，我搜了好几遍，文章里面也没有 😂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593099886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057347,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/43/3bcecc0a.jpg","nickname":"凡尘","note":"","ucode":"D49A49D6C076A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19984,"discussion_content":"哈哈，真是够了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569246313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1901428,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwIAiaxOJWE3Ut6hRvTzvFkCIibcURojC0XrQI1lC3h58enlNcpXQ98rmUOr5lA6ST3m24micj191Gw/132","nickname":"不疾","note":"","ucode":"18AA0F294C1586","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370938,"discussion_content":"ctrl + f搜了一遍文章直到看到你这个评论= =","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619587188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169514,"discussion_content":"终于明白了。。。懵逼了半天。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581609245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2408066,"avatar":"https://static001.geekbang.org/account/avatar/00/24/be/82/d7f602da.jpg","nickname":"Geek_czhh8","note":"","ucode":"8872D618FC5B46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393740,"discussion_content":"顶一顶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631582602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318536,"discussion_content":"我一直以为是purge线程，但看内容怎么都对不上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603775719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46334,"user_name":"晨思暮语","can_delete":false,"product_type":"c1","uid":1304974,"ip_address":"","ucode":"F21D2FDCDD6B43","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/8e/6dc15a91.jpg","comment_is_top":false,"comment_ctime":1543902903,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"91738216119","product_id":100020801,"comment_content":"丁老师，有一个问题不是很明白！最后小结之前，而change buffer 主要节省的则是随机读磁盘的IO消耗。这句话怎么理解，因为看前面的讲解，change buffer对性能的主要提升，是在一个写多读少的系统中，使用普通索引的情况下，合并多次写为一次来更新磁盘！","like_count":21,"discussions":[{"author":{"id":1308401,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f6/f1/5ccbe3fe.jpg","nickname":"老醋","note":"","ucode":"D6DF921AAB9E7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8257,"discussion_content":"我觉得老师的意思应该是，如果没有change buffer，每次更新都要去读取磁盘，所以节约了随机读磁盘的时间。","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1567857722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1937317,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8f/a5/d613dfc7.jpg","nickname":"小正","note":"","ucode":"D6D68DCC9650FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1308401,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f6/f1/5ccbe3fe.jpg","nickname":"老醋","note":"","ucode":"D6DF921AAB9E7A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332129,"discussion_content":"嗯，因为写之前肯定要先读😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607070427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8257,"ip_address":""},"score":332129,"extra":""}]},{"author":{"id":1015327,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/1f/b1d458a9.jpg","nickname":"iamjohnnyzhuang","note":"","ucode":"E694C1828907F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57379,"discussion_content":"“当有一条记录需要更新的时候，InnoDB 引擎就会把记录先写到 redolog 里面，并更新内存，这个时候就算更新完了。“\n\n从上面的步骤中可以看到，如果内存中有值那么直接在内存更新。没有值的情况，就要从磁盘随机访问出来，然后内存更新（不写磁盘）。如果有了change buffer，那么就不需要现在去读取，而是记录在change buffer中，等访问时在统一读取。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1574602831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2365564,"avatar":"https://static001.geekbang.org/account/avatar/00/24/18/7c/91d6dd83.jpg","nickname":"红高粱","note":"","ucode":"0DD331C8E01A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015327,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/1f/b1d458a9.jpg","nickname":"iamjohnnyzhuang","note":"","ucode":"E694C1828907F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337036,"discussion_content":"假如是更新操作，更新的字段不包括唯一索引字段，那也可以用change buffer 了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608776783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":57379,"ip_address":""},"score":337036,"extra":""},{"author":{"id":1732394,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLruKArGrtM9NQYUrQib3dicKHFoia1TnSyxfjv5eFPXVHc5SU6mnibPFk3IyLPj9xia40nKUaNEzIYIicQ/132","nickname":"gogolk","note":"","ucode":"94FF5F698F55BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015327,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/1f/b1d458a9.jpg","nickname":"iamjohnnyzhuang","note":"","ucode":"E694C1828907F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362053,"discussion_content":"但这个工作redo log也能做啊 为啥要多加一个change buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616836287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":57379,"ip_address":""},"score":362053,"extra":""}]},{"author":{"id":1297858,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cd/c2/4ffdf37b.jpg","nickname":"DJZhu","note":"","ucode":"82866CD74F1A6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45729,"discussion_content":"redolog将随机写变成顺序写，节省随机写磁盘的io；读数据的时候跟redolog无直接关系，因此不影响随机读磁盘的io消耗。\nchange buffer可以将修改缓存在内存，同样避免随机写磁盘；如果读取的数据页刚好在内存，由于变更在change buffer，不需要再次读磁盘，这是change buffer所带来的好处，节约了随机读消耗。\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1573063333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1467767,"avatar":"https://static001.geekbang.org/account/avatar/00/16/65/77/ad710e3e.jpg","nickname":"luffy","note":"","ucode":"F45BEC4F28671B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226104,"discussion_content":"change buffer 不是避免随机写磁盘，是避免忙时随机写磁盘吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586421173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582538,"discussion_content":"也就是说，对于insert，delete，update（DML）操作，先将其变更操作记录在innodb buffer pool中的一块内存中，即change buffer缓存，此时不需要将数据页从磁盘中读取到内存中来，所以说减少了随机读IO操作请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659498121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307392,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/00/01137172.jpg","nickname":"Bobo","note":"","ucode":"7D5D9D84359B5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223474,"discussion_content":"没理解，如果内存没有数据页，会读取磁盘，并且将change buffer中内容合并，磁盘还是要读的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586228865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56434,"user_name":"Scott","can_delete":false,"product_type":"c1","uid":1014800,"ip_address":"","ucode":"7E57FDCB5E5D49","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","comment_is_top":false,"comment_ctime":1546443244,"is_pvip":false,"replies":[{"id":"20340","content":"1. 数据更新到磁盘是这两个都不少，是内存直接写到磁盘的。<br>2. 插入数据的时候，主键索引用不上，但是普通索引可以<br><br>看得糊里糊涂的时候可以看看评论区哈","user_name":"作者回复","comment_id":56434,"uid":"1264162","ip_address":"","utype":1,"ctime":1546447876,"user_name_real":"林晓斌"}],"discussion_count":14,"race_medal":0,"score":"61675985388","product_id":100020801,"comment_content":"这一篇看得糊里糊涂，有两个问题<br>1. 真正把数据更新到磁盘，是由change buffer做还是redo log做？<br>2. 插入新的一行的话，一定会有唯一primary key的啊，这样是不是插入就不能用change buffer?","like_count":14,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435033,"discussion_content":"1. 数据更新到磁盘是这两个都不少，是内存直接写到磁盘的。\n2. 插入数据的时候，主键索引用不上，但是普通索引可以\n\n看得糊里糊涂的时候可以看看评论区哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546447876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1327313,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/d1/fb6f402a.jpg","nickname":"melon","note":"","ucode":"AFBE9426C10AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":191963,"discussion_content":"我也想知道谁更新磁盘 老师一直说从内存中更新磁盘 那么redo log 就是把随机写变成顺序写是弄啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583049933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1327313,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/d1/fb6f402a.jpg","nickname":"melon","note":"","ucode":"AFBE9426C10AFA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288510,"discussion_content":"顺序写的是redo log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593765706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":191963,"ip_address":""},"score":288510,"extra":""},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1327313,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/d1/fb6f402a.jpg","nickname":"melon","note":"","ucode":"AFBE9426C10AFA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312371,"discussion_content":"redo 是为了崩溃恢复的.\n正常流程不涉及.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602671313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":191963,"ip_address":""},"score":312371,"extra":""},{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1327313,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/d1/fb6f402a.jpg","nickname":"melon","note":"","ucode":"AFBE9426C10AFA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318541,"discussion_content":"有个后台线程叫Page Cleaner Thread，专门用来刷新脏页到磁盘的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603776272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":191963,"ip_address":""},"score":318541,"extra":""}]},{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49471,"discussion_content":"更正一下，插入的话可以不包含主键列，倒是可能包含唯一键列。上个评论中应该说更新语句是否包含主键和唯一键的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573604609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49470,"discussion_content":"老师，插入数据主键索引用不上change buffer,普通索引可以，我是不是可以理解为只要查入的数据列中不包含主键列和唯一键列就可以用到changer buffer了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573604415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1341207,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/17/d16eef46.jpg","nickname":"tacitowang","note":"","ucode":"89B0370A46D229","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2327,"discussion_content":"2、插入数据主键肯定要对比是否重复吧，那就需要把数据加载到内存来判断吗？不然直接就写入change buffer，返回成功是不对的嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563463891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1341207,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/17/d16eef46.jpg","nickname":"tacitowang","note":"","ucode":"89B0370A46D229","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111290,"discussion_content":"只要是唯一索引走你说的流程（不要管是不是主键），非唯一索引只要写change buffer就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577790217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2327,"ip_address":""},"score":111290,"extra":""},{"author":{"id":1346234,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/ba/8f48bdc6.jpg","nickname":"小区反手王","note":"","ucode":"69F9D46C82A690","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212252,"discussion_content":"我的困惑也是这里：\n1、一般情况下表都会有主键；\n2、通常的插入主键都不是空的；\n这样的话，insert下，change buffer能用的场景是不是很少了？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584950943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":111290,"ip_address":""},"score":212252,"extra":""},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346234,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/ba/8f48bdc6.jpg","nickname":"小区反手王","note":"","ucode":"69F9D46C82A690","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312372,"discussion_content":"二级索引能用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602671427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212252,"ip_address":""},"score":312372,"extra":""}]},{"author":{"id":1341207,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/17/d16eef46.jpg","nickname":"tacitowang","note":"","ucode":"89B0370A46D229","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2326,"discussion_content":"1、数据跟新到磁盘为什么是两个都不可少呢，每次的更新操作redo log都有记录，必然redo log都会更新到磁盘。难道change buffer还要再做一次更新磁盘吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563463766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2070879,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/99/5f/9232a19f.jpg","nickname":"Lion","note":"","ucode":"BD8DDC17EAE6FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1341207,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/17/d16eef46.jpg","nickname":"tacitowang","note":"","ucode":"89B0370A46D229","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292798,"discussion_content":"老师的意思是，change buffer和redo log都做到了更新内存。只不过change buffer是延迟的更新。而落盘就是将内存的数据刷到磁盘中，所以两个都不少。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595334163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2326,"ip_address":""},"score":292798,"extra":""},{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1341207,"avatar":"https://static001.geekbang.org/account/avatar/00/14/77/17/d16eef46.jpg","nickname":"tacitowang","note":"","ucode":"89B0370A46D229","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577774,"discussion_content":"我觉得可以按照以下两种情况来分析：\n1：更新所涉及的所有page都在内存中，此时会更细这些page，并记录更新到redo log，这个时候根本用不到change buffer，因此刷盘也只会用到redo log\n2：更新所涉及的page全部或者是部分不在内存中，此时查找到对应的数据页（其实只是找到磁盘偏移量，不然还得IO）后，会将更新记录到change buffer中，然后也会在redo log中记录change buffer的变更条目（为什么非得在redo log记录呢，为了crash safe），这个时候如果是刷盘的话，redo log和change buffer就都需要用到了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656326851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2326,"ip_address":""},"score":577774,"extra":""}]}]},{"had_liked":false,"id":46065,"user_name":"谢阳","can_delete":false,"product_type":"c1","uid":1019623,"ip_address":"","ucode":"A9ABD36885E7AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/e7/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1543841504,"is_pvip":false,"replies":[{"id":"16485","content":"是的","user_name":"作者回复","comment_id":46065,"uid":"1264162","ip_address":"","utype":1,"ctime":1543846956,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"53083449056","product_id":100020801,"comment_content":"之前我就碰到过一件事儿，有个 DBA 的同学跟我反馈说，他负责的某个业务的库内存命中率突然从 99% 降低到了 75%，整个系统处于阻塞状态，更新语句全部堵住。<br><br>请问老师，内存命中率降低是指需要频繁去磁盘加载目标页数据吗？","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431322,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543846956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1158138,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ab/fa/2967c8eb.jpg","nickname":"zhcc","note":"","ucode":"2AB9D306DBFAC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289843,"discussion_content":"好奇这个命中率是怎么监测到的？ MySQL自带这个功能吗？另外99%感觉好高啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594224572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1158138,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ab/fa/2967c8eb.jpg","nickname":"zhcc","note":"","ucode":"2AB9D306DBFAC2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582540,"discussion_content":"就是innodb buffer pool的命中率监控指标，mysql_global_status_innodb_buffer_pool_reads/mysql_global_status_innodb_buffer_pool_read_requests","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659498305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289843,"ip_address":"广东"},"score":582540,"extra":""}]},{"author":{"id":2562181,"avatar":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","nickname":"半年 2号","note":"","ucode":"7F23C4532A5513","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411107,"discussion_content":"内存命中率降低是指需要频繁去磁盘加载目标页数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635851823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136336,"user_name":"looper","can_delete":false,"product_type":"c1","uid":1238396,"ip_address":"","ucode":"DA4BCE83836C04","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/7c/2a5a418b.jpg","comment_is_top":false,"comment_ctime":1569411843,"is_pvip":false,"replies":[{"id":"52303","content":"对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1569440043,"ip_address":"","comment_id":136336,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48814052099","product_id":100020801,"comment_content":"思考题：我认为在突然断电的时候，change buffer会丢失，但是数据不会丢失，因为change buffer对表的操作都记录在了redo log，redo log是crash safe的","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468578,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569440043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2009461,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/75/dbccd12d.jpg","nickname":"稻草人","note":"","ucode":"6694EE2CD36B8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354369,"discussion_content":"如果change buffer丢失了而数据没丢失，不就造成不一致了吗？就是索引缺失了而真实数据更新了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615281993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2843604,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/d4/b63373c3.jpg","nickname":"金金","note":"","ucode":"807EDDCDB2E939","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2009461,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/75/dbccd12d.jpg","nickname":"稻草人","note":"","ucode":"6694EE2CD36B8C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559510,"discussion_content":"数据不是没有丢失，是压根就没写到表文件里，但是因为redo log记录了change buffer的内容所以可以恢复change buffer，这也就间接恢复了数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648801958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":354369,"ip_address":""},"score":559510,"extra":""}]}]},{"had_liked":false,"id":120737,"user_name":"。。。。。","can_delete":false,"product_type":"c1","uid":1612570,"ip_address":"","ucode":"985B1561AC9152","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Xibh27ZicBhXls5KsPibBXZI4RKlR0MUbUiaEuOS2ORibKaxWSicpIjd4lvWUWqtNAde7EeDDTpWKAiapGdHeaiaDqczWQ/132","comment_is_top":false,"comment_ctime":1564986970,"is_pvip":false,"replies":[{"id":"44570","content":"change buffer就是为了避免先读后写，因为读有随机io的消耗","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1565095075,"ip_address":"","comment_id":120737,"utype":1}],"discussion_count":21,"race_medal":0,"score":"48809627226","product_id":100020801,"comment_content":"update操作不是先读后写吗？如果是先读的话，不是应该把数据已经读到内存了吗？那这样的话直接更新内存不就好了，为什么还要写change buffer","like_count":11,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398943,"discussion_content":"我来解释一下。  如果一个表上有字段 a, b, 且有普通索引c， update语句为  update xxx set a = &#39;xxx&#39; where c = &#39;xxx&#39;， 执行这个语句的时候， 因为要判断c = &#39;xxx&#39; 的记录是否存在， 存在的话才会更新， 此时必定要将c 索引的内存页载入到内存中（执行计划会走索引c) ，  修改内存页，写redo log; 同时主键索引页也要载入内存进行修改（主键索引永远都需要先读后写，这个免不了）。这个就用不到Change Buffer。  \n但是如果是另外一种场景：  update xxx set a = &#39;xxx&#39; where b = &#39;xxx&#39; ， 这个时候因为查询条件不走索引c，故不需要将c的数据页载入内存， 针对索引c上的修改就写入到Change Buffer， 但是针对主键索引，还是要先载入内存再修改。   此时的优化就是针对索引c的页的随机io的优化。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1632878290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":404895,"discussion_content":"还是戒酒后的李白哥清醒啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634453053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":398943,"ip_address":""},"score":404895,"extra":""},{"author":{"id":1008517,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/85/1dc41622.jpg","nickname":"姑射仙人","note":"","ucode":"3EFC1F3E592165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":574094,"discussion_content":"update xxx set a = &#39;xxx&#39; where b = &#39;xxx&#39;  与索引c无关，没有修改索引c。为什么还要 &#34;针对索引c上的修改就写入到Change Buffer&#34;？ 这条更新语句会更新索引c的数据吗？不太明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653832954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":398943,"ip_address":""},"score":574094,"extra":""},{"author":{"id":3018735,"avatar":"","nickname":"Geek_0494e4","note":"","ucode":"ABFF5CAF62E602","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008517,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/85/1dc41622.jpg","nickname":"姑射仙人","note":"","ucode":"3EFC1F3E592165","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574578,"discussion_content":"这里应该是字段a是主键，索引c的叶子节点要存储主键的值，主键的值发生变化索引c的索引树也要更新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654157609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":574094,"ip_address":""},"score":574578,"extra":""}]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288512,"discussion_content":"是不是有了change buffer就不用从磁盘读了呀，内存中有的直接更新内存中的，没有的就把修改的记录写到change buffer中。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1593766514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461454,"discussion_content":"change buffer就是为了避免先读后写，因为读有随机io的消耗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565095075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2350585,"avatar":"","nickname":"Geek_0ddc80","note":"","ucode":"57B8C059E6800D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335081,"discussion_content":"个人认为：changebuffer需要配置大小，如果没配置默认不走changebuffer，如果配置了，先查询内存（buffer pool有没有该数据所在的数据页）如果没有，也配置了changebuffer，那就不走磁盘访问该数据页了，而是直接变更的记录放入到ChangeBuffer中","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608086587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237327,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e1/4f/00476b4c.jpg","nickname":"Remember九离","note":"","ucode":"97EE6E6344689F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278153,"discussion_content":"感觉答非所问啊，他问的是   update操作要先读后写。如果这条数据没有在内存中，那么不是必然要把数据从磁盘读到内存中吗，那这时候为什么还要  change buffer，change buffer不是为了不从磁盘读吗？现在你都必须去磁盘读了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591155447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":12,"child_discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237327,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e1/4f/00476b4c.jpg","nickname":"Remember九离","note":"","ucode":"97EE6E6344689F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296446,"discussion_content":"如果没在内存，利用change buffer 先记录修改的内容就可以了，而不用把相应的页从磁盘读取，之后有读取这条记录的需求，再从磁盘读取页，此时触发merge ，把change buffer 的内容写入这个页。这样就可以在更新时避免那些可以避免的随机读取","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1596544443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278153,"ip_address":""},"score":296446,"extra":""},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237327,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e1/4f/00476b4c.jpg","nickname":"Remember九离","note":"","ucode":"97EE6E6344689F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302276,"discussion_content":"老师回答得一点儿问题都没有，是你自己脑壳没转过来弯儿。如果你这个都没理解到的话，前面评论区讨论的东西估计你更懵了，你能看评论到这儿也是很强的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598865240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278153,"ip_address":""},"score":302276,"extra":""},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312376,"discussion_content":"意思是这个意思,不过感觉update 直接丢到change buffer 像是异步操作啊?\nupdate 操作,得返回正确的影响行数据啊?\n这有点不好解释啊","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1602672779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302276,"ip_address":""},"score":312376,"extra":""}]}]},{"had_liked":false,"id":105795,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1561084506,"is_pvip":false,"replies":[{"id":"38358","content":"比如有一个表a<br>那么a.ibd 就是数据表空间；<br>“表a的表结构”这个信息存在ibdata1的系统表空间里","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1561184825,"ip_address":"","comment_id":105795,"utype":1}],"discussion_count":6,"race_medal":0,"score":"44510757466","product_id":100020801,"comment_content":"老师，什么是数据表空间和系统表空间","like_count":10,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454814,"discussion_content":"比如有一个表a\n那么a.ibd 就是数据表空间；\n“表a的表结构”这个信息存在ibdata1的系统表空间里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561184825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49206,"discussion_content":"老师，有个问题请教一下，唯一索引无法使用change buffer,因为要判断唯一性，那么主键也是唯一的，是否利用change buffer应该有两种情况。①插入的数据不含主键，也就是主键是递增的，此时记录到change buffer中的记录是什么样的？是都还要考虑数据页在不在内存中？②插入的数据包含主键，那么它肯定用不到change buffer了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573563775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1442605,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/2d/404627dc.jpg","nickname":"Anryg Zhun","note":"","ucode":"76DF8560BA9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":185407,"discussion_content":"每次插入数据一定都包含主键的 只不过只有普通非唯一索引才能使用change buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582627068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49206,"ip_address":""},"score":185407,"extra":""}]},{"author":{"id":2604432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/bd/90/99ab3369.jpg","nickname":"局外人","note":"","ucode":"B8E2ED7A8ABE11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393281,"discussion_content":"是不是可以这么理解\n主键是聚簇索引，跟数据是存在一起的都放在a.ibd中，也就是数据表空间。\n二级索引，与数据是分开放的，与 数据表结构放在 ibdata中，即系统表空间\nchange buffer 是对二级索引更新的WAL机制 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631337953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49210,"discussion_content":"表结构不是存在. frm文件中吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573564014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1339082,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6e/ca/66fbd7b3.jpg","nickname":"九山的芷兰。","note":"","ucode":"28BA9773F617B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":291858,"discussion_content":"mysql版本不同","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594977338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49210,"ip_address":""},"score":291858,"extra":""}]}]},{"had_liked":false,"id":46856,"user_name":"殿小二","can_delete":false,"product_type":"c1","uid":1284986,"ip_address":"","ucode":"E979673B257C24","user_header":"https://static001.geekbang.org/account/avatar/00/13/9b/7a/58327b6d.jpg","comment_is_top":false,"comment_ctime":1543991664,"is_pvip":false,"replies":[{"id":"16799","content":"1. 就是数据页没在内存，才能用上change buffer<br><br>2. B+树有序的。能找到（你想，数据库一开始启动的时候，要找一个磁盘上的记录是怎么找到，一样的过程）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544027119,"ip_address":"","comment_id":46856,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44493664624","product_id":100020801,"comment_content":"老师,你好,数据更新时,写入change buffer,立马读取这一条 不是应该直接从内存页读取吗,有必要把整个页读入内存吗,而且innoDB怎么知道应该加载哪一页到内存,我这一条记录并没有在数据页上有任何标示位啊","like_count":10,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431574,"discussion_content":"1. 就是数据页没在内存，才能用上change buffer\n\n2. B+树有序的。能找到（你想，数据库一开始启动的时候，要找一个磁盘上的记录是怎么找到，一样的过程）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544027119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75841,"user_name":"无菇朋友","can_delete":false,"product_type":"c1","uid":1035562,"ip_address":"","ucode":"80482C5F0464A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2a/bdbed6ed.jpg","comment_is_top":false,"comment_ctime":1552480114,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"40207185778","product_id":100020801,"comment_content":"老师 我想请教一个问题：<br>事务里的update都是当前读，当前读是否就是要把需要更新的数据页读取到内存中？如果是这样的话，那么change buffer在这个场景下是否就失去作用了","like_count":9,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398949,"discussion_content":"Change Buffer解决的是执行DML语句时的性能问题（避免从磁盘载入数据页到内存中）， 你这个场景 是读的场景， 读的场景当然是要获取最新的数据页，如果数据页不在内存，会从磁盘载入数据页到内存。  另外， 不管是当前读还是一致性读， 都是需要数据页在内存中的， 只不过当前读获取的是行的最新版本，而一致性读可能需要通过undolog获取老的版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632878939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2735132,"avatar":"https://static001.geekbang.org/account/avatar/00/29/bc/1c/3dbbfe6c.jpg","nickname":"🐢","note":"","ucode":"93034F72D84031","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":396526,"discussion_content":"当前读数据本身会读到内存中，但对于修改的数据若是二级索引(数据修改同时需要修改索引),若对应索引页不在内存中就会写change buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632447832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303430,"discussion_content":"当前读 只是读取最新的数据。 这个最新的数据可能在内存中， 如果最新的数据 被刷脏页了。 磁盘中也会保存 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599241240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197343,"avatar":"https://static001.geekbang.org/account/avatar/00/12/45/1f/5fd63f1b.jpg","nickname":"Mag","note":"","ucode":"031D6313C27568","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253305,"discussion_content":"根据主键更新普通索引字段是能够用到的，涉及普通索引数据叶的变更","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588225134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1431293,"avatar":"https://static001.geekbang.org/account/avatar/00/15/d6/fd/71100e37.jpg","nickname":"呆、","note":"","ucode":"B9D92BE7D8DF8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167957,"discussion_content":"有同样的疑问，楼主有答案了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581525491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1293877,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/35/dd79037e.jpg","nickname":"a...Z","note":"","ucode":"5A5A44903785FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70541,"discussion_content":"where 条件是要读取数据页到内存中的,直接修改,返回,不记录change buffer\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575366119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11950,"discussion_content":"带where条件的update不知道是不是就是这样的。主要是不知道有什么可以自己验证的办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568451768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71838,"user_name":"Li Yao","can_delete":false,"product_type":"c1","uid":1129838,"ip_address":"","ucode":"703E1E5505F70D","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/6e/60680aa4.jpg","comment_is_top":false,"comment_ctime":1551448364,"is_pvip":false,"replies":[{"id":"26024","content":"有个hash表，读出来的时候顺手判断","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551456800,"ip_address":"","comment_id":71838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40206154028","product_id":100020801,"comment_content":"不是太明白读数据时是怎么判断当前要读的数据是否在change buffer中存在待merge的数据？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441352,"discussion_content":"有个hash表，读出来的时候顺手判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551456800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52085,"user_name":"ziven","can_delete":false,"product_type":"c1","uid":1110461,"ip_address":"","ucode":"D13AC3D2D27A6F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/bd/049a06b0.jpg","comment_is_top":false,"comment_ctime":1545307409,"is_pvip":false,"replies":[{"id":"18916","content":"不是，如果没有change buffer, 执行更新的“当时那一刻”，就要求从磁盘把数据页读出来（这个操作是随机读）。<br><br>Chsnge buffer省了这个。<br>好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545315505,"ip_address":"","comment_id":52085,"utype":1}],"discussion_count":4,"race_medal":0,"score":"40200013073","product_id":100020801,"comment_content":"和 @晨思暮语 有同样的疑问。关于change buffer 主要节省的则是随机读磁盘的 IO消耗这个点，我的理解是如果没有change buffer机制，那么在执行更新后（写入redolog），读取数据的时候需要从次磁盘随机读取redolog合并到数据中，主要减少的是这部分消耗？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433735,"discussion_content":"不是，如果没有change buffer, 执行更新的“当时那一刻”，就要求从磁盘把数据页读出来（这个操作是随机读）。\n\nChsnge buffer省了这个。\n好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545315505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284659,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/33/de01b796.jpg","nickname":"胖狐狸","note":"","ucode":"810DFA27C80837","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219526,"discussion_content":"redo log不是做数据落盘的工作的，是做crash safe的，mysql崩溃以后保持数据一致用到了redo log，刷脏也不是用的redo log","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585757632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","nickname":"zj","note":"","ucode":"E3329CCF694AC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302253,"discussion_content":"这个insert 更新操作也需要从磁盘把数据页读出来的吗？我理解只有查询才需要读取数据页吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598860085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1100064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","nickname":"zj","note":"","ucode":"E3329CCF694AC2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303431,"discussion_content":"insert 需要查找插入的位置， 在查找的过程中会读取磁盘数据页到内存中","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599241355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302253,"ip_address":""},"score":303431,"extra":""}]}]},{"had_liked":false,"id":46095,"user_name":"wang","can_delete":false,"product_type":"c1","uid":1161200,"ip_address":"","ucode":"5D569805C6A923","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/f0/a570f68a.jpg","comment_is_top":false,"comment_ctime":1543845948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40198551612","product_id":100020801,"comment_content":"redo log感觉是对写数据的优化。<br>change buffer 是对写普通索引的优化","like_count":9},{"had_liked":false,"id":236470,"user_name":"RecklesszZ 😶","can_delete":false,"product_type":"c1","uid":1548802,"ip_address":"","ucode":"8DF59BEAC079DD","user_header":"https://static001.geekbang.org/account/avatar/00/17/a2/02/bd5b398c.jpg","comment_is_top":false,"comment_ctime":1595422267,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"35955160635","product_id":100020801,"comment_content":"老师你好，有个困扰了很久的问题一直没想明白，希望您能解答。我们讲到对于普通索引来说，change buffer可以避免update&#47;delete&#47;insert等修改操作的时候访问磁盘。后续查询的时候再从磁盘中读出并merge，这个更新的操作是非实时的(修改操作的时候并没有更新数据),但是我在操作数据库的时候，使用delete，update等操作的时候会立刻得到修改影响的行数。这里我就很不解，比如delete操作，我删除一行不存在的数据，这时候如果不去磁盘查是否存在这条记录而单单的记录在change buffer并返回的话，怎么知道有没有这行数据以及影响的行数呢？<br>望回复，谢谢","like_count":8,"discussions":[{"author":{"id":2843604,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/d4/b63373c3.jpg","nickname":"金金","note":"","ucode":"807EDDCDB2E939","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559514,"discussion_content":"change buffer真正起作用的地方应该是操作聚簇索引上的数据，进而引发了辅助索引的数据的更改的时候。你直接通过辅助索引去查东西，这个时候肯定要读出相应的辅助索引页了，不然怎么得到辅助索引上的数据呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648802487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258560,"avatar":"https://static001.geekbang.org/account/avatar/00/13/34/40/99b10e7d.jpg","nickname":"陈小杰","note":"","ucode":"7C6C7D7F43A171","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393587,"discussion_content":"同问，怎么知道要更新的数据存不存在，以及影响行数怎么获得？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631504595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1314800,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/f0/37feaa1d.jpg","nickname":"马林","note":"","ucode":"38AA3E2EB1CC5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1258560,"avatar":"https://static001.geekbang.org/account/avatar/00/13/34/40/99b10e7d.jpg","nickname":"陈小杰","note":"","ucode":"7C6C7D7F43A171","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397887,"discussion_content":"chang buffer只是针对的二级索引，dml肯定会更新数据页的，会通过主键索引更改数据页得到影响行数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632702337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":393587,"ip_address":""},"score":397887,"extra":""},{"author":{"id":1603078,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zAZv4NyuS21Y1qk45j8JiaoEYdA5Zgc1PqpJsBokz5bZVmdkf6kNWvT4cUAAKAdH6TgN52DWZhiaH6wNFhw14nRg/132","nickname":"Geek_4e4ec2","note":"","ucode":"6DAD5EE4FFB195","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1314800,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/f0/37feaa1d.jpg","nickname":"马林","note":"","ucode":"38AA3E2EB1CC5F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531758,"discussion_content":"问题是如果不从磁盘读取二级索引，就拿不到主键值，不知道主键值，怎么通过主键索引更改数据页呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637409252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":397887,"ip_address":""},"score":531758,"extra":"{\"user_type\":1}"}]},{"author":{"id":1335222,"avatar":"","nickname":"煜霄","note":"","ucode":"518CD869A2B656","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295128,"discussion_content":"同有这个疑问，change buffer merge不会失败么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596097069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101310,"user_name":"追马","can_delete":false,"product_type":"c1","uid":1333500,"ip_address":"","ucode":"FC78BF9A28A0BA","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/fc/062ec8a1.jpg","comment_is_top":false,"comment_ctime":1559780946,"is_pvip":false,"replies":[{"id":"36729","content":"好问题<br><br>1. change buffer本身是占用内存的；<br>2. 但是chage buffer本身只是记录了“更新过程”，远远比数据页（一个16k）小。相比于把数据页读入内存，这个方式还是省了内存的。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560041057,"ip_address":"","comment_id":101310,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31624552018","product_id":100020801,"comment_content":"数据读入内存是需要占用 buffer pool 的，所以这种方式还能够避免占用内存，提高内存利用率。后面又说change是占用pool内存的，那到底占不占用buffer pool的内存","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452904,"discussion_content":"好问题\n\n1. change buffer本身是占用内存的；\n2. 但是chage buffer本身只是记录了“更新过程”，远远比数据页（一个16k）小。相比于把数据页读入内存，这个方式还是省了内存的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560041057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2562181,"avatar":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","nickname":"半年 2号","note":"","ucode":"7F23C4532A5513","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411118,"discussion_content":"就是说做DML操作时，且数据不在内存中时，才用上change buffer.  先把数据更新记录到change buffer中，等需要查询时 先merge数据页数据，再刷数据到磁盘中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635852941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46928,"user_name":"会玩code","can_delete":false,"product_type":"c1","uid":1325282,"ip_address":"","ucode":"9220B072AF68C7","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/e2/28aa8e6c.jpg","comment_is_top":false,"comment_ctime":1544003464,"is_pvip":false,"replies":[{"id":"16782","content":"可能淘汰的是change buffer,但更可能淘汰的是数据页哈。都有可能","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544020278,"ip_address":"","comment_id":46928,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31608774536","product_id":100020801,"comment_content":"ChangeBuffer就是对《日志系统：一条 SQL 更新语句是如何执行的？》中 update 语句执行流程进一步优化。更新步骤：先更新内存，再通过redo log更新磁盘。<br>而Change Buffer的引入使得更新内存都是按需更新，只有在需要读的时候才更新。 如果这样理解对的话，就有一个问题，如果在purge之前，redo log执行了磁盘写，那change buffer里的操作是不是就有冲突怎么让失效呢？<br>2018-12-03<br> 作者回复<br>前面说的对，最后一句话问题没理解… 你再发重发一下问题😓<br>---------------------------------------------------------<br>问题：现在一个执行流程是，操作写入change buffer, 写入redo log commit. 但这个时候应该没有purge,也没有通过redo log写入磁盘。 Purge 是在有的查询操作的时候发生（不考虑系统自动purge），那过段时间应该会通过redo log更新到磁盘。<br>我的问题就是通过redo log更新到磁盘的时候，如果还没有发生purge操作，那如果再次读触发Purge从磁盘读（磁盘已经是redo log更新后的数据了), 所以这个地方是通过什么机制确保没有冲突的？ 谢谢，老师讲的很好，不知道我说明白没有？<br>2018-12-03<br> 作者回复<br>我大概理解你的意思了。<br><br>如果没有purge,磁盘上的page 2不会变的，redolog没帮他做更新。<br><br>只有purge 才会触发更新数据，得到新的page 2<br>-----------------------------------------------------<br>这个地方就不是特别理解，redo log不就是用来搜集操作，适时更新到磁盘吗，而🈶了change buffer后，redo log更新磁盘的机制就不生效了吗？ 不知道是哪个地方理解错了？<br>2018-12-03<br> 作者回复<br>对于page 2, redolog并不知道他要怎么更新，redolog里面记录的是change buffer上的更新，而change buffer上记录的是数据页的更新动作<br>----------------------------------------------------<br>老师，我继续你们的讨论再提个问题哈，有点不是很明白，在第二节的时候有讲过，当redolog上的write pos追上checkpoint的时候，需要停下来擦掉redolog上的一些数据，这里是指这个时候会触发mysql上的自动merge吗？将redolog上的一些change buffer的更新相关的数据落盘，然后再删除redolog上的一部分数据，空出空间来记录新的change buffer更新？","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431605,"discussion_content":"可能淘汰的是change buffer,但更可能淘汰的是数据页哈。都有可能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544020278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1368090,"avatar":"https://static001.geekbang.org/account/avatar/00/14/e0/1a/3a77856a.jpg","nickname":"darwin","note":"","ucode":"2F93C0881AAC7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394985,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632152723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167722,"user_name":"yihang","can_delete":false,"product_type":"c1","uid":1012361,"ip_address":"","ucode":"A5506F085D1793","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/89/1a83120a.jpg","comment_is_top":false,"comment_ctime":1577922828,"is_pvip":false,"replies":[{"id":"65112","content":"赞重读发现的问题😆<br><br>如果是判断唯一索引的，就只读【索引页】就可以的，<br>但是因为primary key也有唯一约束，所以这个”索引“也需要判断冲突。而主键索引上其实就是数据了<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1577933195,"ip_address":"","comment_id":167722,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27347726604","product_id":100020801,"comment_content":"重学还是发现了问题：【对于唯一索引来说，需要将数据页读入内存，判断到没有冲突，插入这个值，语句执行结束】那么这里是只读【索引页】呢，还是会连带【数据页】一起读入内存？","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479963,"discussion_content":"赞重读发现的问题😆\n\n如果是判断唯一索引的，就只读【索引页】就可以的，\n但是因为primary key也有唯一约束，所以这个”索引“也需要判断冲突。而主键索引上其实就是数据了\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577933195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303434,"discussion_content":"主键索引是一个B+树，   普通索引也是一个B+树， 他们没有区别(除了唯一性和主键索引含数据外)？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599242252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1346234,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/ba/8f48bdc6.jpg","nickname":"小区反手王","note":"","ucode":"69F9D46C82A690","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212254,"discussion_content":"我的困惑也是这里：\n1、一般情况下表都会有主键；\n2、通常的插入主键都不是空的；\n这样的话，insert下，change buffer能用的场景是不是很少了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584951021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1811210,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a3/0a/90ddca9e.jpg","nickname":"梁伟","note":"","ucode":"E92789FA3F1D05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346234,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/ba/8f48bdc6.jpg","nickname":"小区反手王","note":"","ucode":"69F9D46C82A690","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301678,"discussion_content":"changebuffer在insert下的优化主要是针对的非唯一二级索引的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598605730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212254,"ip_address":""},"score":301678,"extra":""}]}]},{"had_liked":false,"id":108679,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1561853699,"is_pvip":false,"replies":[{"id":"39545","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1561983580,"ip_address":"","comment_id":108679,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27331657475","product_id":100020801,"comment_content":"为加深印象小结一下<br><br>1：普通索引和唯一索引在读性能上，相差无几，由于普通索引还需要多做一些检索和判断操作，性能稍差，但可忽略，因为大概率这些操作是在内存中的数据页上进行操作的<br><br>2：普通索引和唯一索引在写性能上，也相差无几，由于唯一索引需要做唯一性校验，性能稍差，不过由于不能利用change buffer来优化性能，相比而言普通索引的写性能更加，普通索引可以借助change buffer来优化性能，写性能更好<br><br>有个问题，普通索引写入时虽然不需要判断唯一性，但是如果重复的索引值较多，是需要处理怎么放置这些重复的值的吧？这个具体怎么处理呢？<br><br>3：如果程序逻辑可以保证字段值的正确性，建议使用普通索引，尤其是写多的场景更是如此，否则对于需要使用唯一索引来保证唯一性的只能用唯一索引了<br><br>4：change buffer本质上就是一块内存区域并且在buffer pool中开辟出来的，可动态调控大小，修改数据时如果数据在内存中，则直接修改，如果不在，在保证数据一致性的前提下可以先将对数据的修改缓存在change buffer中，这样就能减少读盘的次数，以提高修改数据的效率啦！由于这样的特性，change buffer只能对普通索引适用，唯一索引&#47;主键索引都不适用，因为她们需要唯一性的判断，需要将数据及时拿到内存中。<br><br>change buffer针对的操作包括：增加、修改、删除<br><br>change buffer针对写多及写后延迟读的优化更佳<br><br>change buffer也会落盘持久化也使用了WAL记日志<br><br>change buffer中记录的是数据操作的历史记录<br><br>将 change buffer 中的操作应用到原数据页，得到最新结果的过程称为 merge。除了访问这个数据页会触发 merge 外，系统有后台线程会定期 merge。在数据库正常关闭（shutdown）的过程中，也会执行 merge 操作。如果change buffer快满了也会触发merge操作。<br><br>感谢，数据库性能优化真是深入灵魂的，我想应该有一个过程，不是一下子就想到这么玩可以的。<br>","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456076,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561983580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80178,"user_name":"Lukia","can_delete":false,"product_type":"c1","uid":1028698,"ip_address":"","ucode":"C19472337BCCC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/5a/574f5bb0.jpg","comment_is_top":false,"comment_ctime":1553614105,"is_pvip":false,"replies":[{"id":"29657","content":"1. 是的<br>2. change buffer的写盘策略跟数据一样，内存放不下会触发落盘，还有checkpoint推进的时候也是可能会出发","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554052904,"ip_address":"","comment_id":80178,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27323417881","product_id":100020801,"comment_content":"老师好，关于change buffer为什么需要持久化的问题还是有点疑问想请教一下，我的理解如下：<br>1.既然change buffer的修改在事务提交时在redo log中都有记录的，那么已经是crash safe的吧<br>2.change buffer的持久化是不是考虑到随着事务的运行，内存中已经存放不下change buffer了，所以才考虑要持久化到系统表空间中去的？","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444774,"discussion_content":"1. 是的\n2. change buffer的写盘策略跟数据一样，内存放不下会触发落盘，还有checkpoint推进的时候也是可能会出发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554052904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312378,"discussion_content":"change buffer 生产完 redo log, 是不是就可以删除了呀?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602673329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62398,"user_name":"happy涛","can_delete":false,"product_type":"c1","uid":1387892,"ip_address":"","ucode":"9D67FA68C40904","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaxhA2xdIRKUeRaiaMAVxrGJcImhY0qWoDJbLLW3l8uCvXicrHJ4GaRBkZBz4RAdaSh0YsIOJFyrhQ/132","comment_is_top":false,"comment_ctime":1548046767,"is_pvip":false,"replies":[{"id":"22355","content":"1. 这个现象跟change buffer无关的 ，即使是直接更新数据，备库还是有延迟，你看下第28篇<br>2. 一个insert语句会更新主键索引和其他普通索引，更新普通索引的时候，就有可能可以用上change buffer了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548267883,"ip_address":"","comment_id":62398,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27317850543","product_id":100020801,"comment_content":"请叫老师：<br>1. 如果主从同步的情况下， 如果修改写入change buffer（还未持久化到磁盘）, 读的时候从从库读。因为是两台机器，从库拿到的数据是不是未修改前的。<br> 2. 还有添加数据时主键问题。 看您在评论区中回复：insert的时候，写主键是肯定不能用change buffer了。 那请问什么情况下insert能用到？因为表中，基本都有ID主键，那insert语句是不是没有用上change buffer的情况了。","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437196,"discussion_content":"1. 这个现象跟change buffer无关的 ，即使是直接更新数据，备库还是有延迟，你看下第28篇\n2. 一个insert语句会更新主键索引和其他普通索引，更新普通索引的时候，就有可能可以用上change buffer了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548267883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722479,"avatar":"","nickname":"马青艳","note":"","ucode":"388E4689BED388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303435,"discussion_content":"1.  写入change buffer的时候， 也会伴随中Binlog的写入， 而从库都是通过Binlog来同步的， 所以可以同步到数据\n2.  一张表如果只有主键索引， 那么它只有一个B+树， 如果还有两个普通索引， 那么还会维护另外的两个B+树， 如果索引太多， 那么一个表就会维护很多的B+ tree","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599242516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301280,"user_name":"刀杨","can_delete":false,"product_type":"c1","uid":2128887,"ip_address":"","ucode":"BAC6FF79A3D5AD","user_header":"https://static001.geekbang.org/account/avatar/00/20/7b/f7/062d1a9f.jpg","comment_is_top":false,"comment_ctime":1625620236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23100456716","product_id":100020801,"comment_content":"很多同学这里纠结为什么change buffer要持久化到 共享表空间 又要保存到redolog里。<br>ok，这里我们假设不把change buffer保存到redolog里，就只持久化到 共享表空间里，<br>那么在修改非唯一不在内存的二级索引时，我们要把这个修改记录生成一份change buffer,<br>并且在这个时候需要立即马上将这个内从中的change buffer持久化到共享表空间中，以防止<br>这个时候数据库宕机，内存中的change buffer丢了，所以，在不引入redolog的情况下，<br>生成的change buffer需要立即马上进行持久化至共享表空间中，这是一次随机io，可开销不小。<br>这个时候你就要想想有什么办法能把这个随机io写变成顺序io写呢，或说者不要立刻随机io写，<br>而是先顺序写，等数据库不忙的时候在来随机写呢？这个肯定就是redolog的活了。<br>到了这里，我们发现需要引入redolog了，来吧这个change buffer的随机io写持久化延后。<br>我们带入redolog再来重新模拟下，修改改非唯一不在内存的二级索引的例子。<br>数据修改后生成change buffer，这个时候我们立刻马上把这个change buffer保存至redolog里，<br>然后就万事大吉了，即使数据库宕机，这个change buffer也能被找回来，在此刻一共有在内存中<br>有一份change buffer在redolog中也有一份change buffer，如果后台线程这个时候把change buffer<br>持久化到了共享表空间中，那么会推进checkpoint，redolog里的存的change buffer就没用了，就算<br>宕机恢复也会从保存change buffer之后的redolog开始恢复，change buffer就已经持久化到<br>共享表空间中，不需要redolog了。","like_count":5},{"had_liked":false,"id":280502,"user_name":"爱学习","can_delete":false,"product_type":"c1","uid":1820728,"ip_address":"","ucode":"6F49E3F66AAA94","user_header":"","comment_is_top":false,"comment_ctime":1614236571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23089073051","product_id":100020801,"comment_content":"时隔2年由于工作上遇到很多mysql问题，开始二刷课程，读到这个章节对change buffer还是云里雾里，为了彻底弄清楚，翻译了mysql8.0的官方对于changebuffer的说明，发到了博客上，https:&#47;&#47;blog.csdn.net&#47;michaelrainy&#47;article&#47;details&#47;114081627，希望对同样疑惑的同学有帮助。","like_count":5},{"had_liked":false,"id":222296,"user_name":"jiyoujiu","can_delete":false,"product_type":"c1","uid":2016574,"ip_address":"","ucode":"7A3EAA2DA97A78","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c5/3e/3df0c488.jpg","comment_is_top":false,"comment_ctime":1590740200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23065576680","product_id":100020801,"comment_content":"忍不住又来评论了：<br>ChangeBuffer :本质上是一个B+数，存放在共享表空间中。使用changebuffer后可能导致innodb_buffer_pool的使用内存变大(因为要在内存里面维护这样一个树结构)<br>merge的合并时机会：<br>1、master线程每1秒或者10秒刷新，随即选取changbuffer的叶子节点进行merge操作<br>2、插入changebuffer后，立即执行了读取操作<br>3、changebuffer的空间不满足要求时（当检测到插入的数据大于制定叶的容量限度时）","like_count":5},{"had_liked":false,"id":148094,"user_name":"大海贼","can_delete":false,"product_type":"c1","uid":1670668,"ip_address":"","ucode":"CB85D630BC4DE4","user_header":"https://static001.geekbang.org/account/avatar/00/19/7e/0c/aee4c0a3.jpg","comment_is_top":false,"comment_ctime":1572940185,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"23047776665","product_id":100020801,"comment_content":"这篇文中主要讨论的是二级索引（唯一索引、普通索引)，进行如下操作有什么影响，提到了change buffer的概念，以及redo log<br>\tselect 语句：　唯一索引和普通索引对查询的性能基本上差不多，只是普通索引比唯一索引多一次判断，因为普通索引的非唯一性<br><br>\tupdate&#47;insert 语句：更新指的是更新到了二级普通索引。提到了change buffer这个角色，这块文中体现的不好(对这块我读了好几遍，后来去官网文档中看明白了https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;innodb-change-buffer.html#innodb-change-buffer-configuration),文中提到数据页指的普通索引的数据页，不是数据数据页。change buffer在5.5之前不叫change buffer 叫insert buffer，因为指支持insert 语句，后来支持了update, delete, purges等，就把名字改成了change buffer。对于二级唯一索引和普通索引区别就体现在这里。唯一索引因为具有唯一性，因为这个约束，索引插入和更新的时候都要去验证，必须确保数据读入内存中(不再则需要物理读)，所以不能使用change buffer。其实change buffer 只是适用于普通索引(这里最早也是不明白，后来又把索引那块看了几遍)，先说说change buffer 的作用把，它的作用很明确，就是“减少二级索引的随机IO，做操作合并”，那怎么会产生随机io呢，原因是二级普通索索引通常是无序的。<br>以上主要是我自己一开始没能理解的地方，其他内容没有没问题。<br>丁齐老师讲的思路还是挺清晰的，好的内容需要反复读查阅更多的资料，才能反复理解","like_count":5,"discussions":[{"author":{"id":1182802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","nickname":"长脖子树","note":"","ucode":"D9090EF67EEB1B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349707,"discussion_content":"一句话就是 change buffer 是二级索引的变更缓存, 用于减少二级索引更新时带来的随机 IO ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613472461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339082,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6e/ca/66fbd7b3.jpg","nickname":"九山的芷兰。","note":"","ucode":"28BA9773F617B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291868,"discussion_content":"索引都是有序的。\n\n所谓的随机IO，个人理解指的是：在索引有序的基础上，只能一行行的查询判断（可能会有其他条件），无法直接定位到某个数据页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594980532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1182802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","nickname":"长脖子树","note":"","ucode":"D9090EF67EEB1B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1339082,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6e/ca/66fbd7b3.jpg","nickname":"九山的芷兰。","note":"","ucode":"28BA9773F617B9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349709,"discussion_content":"通常二级索引在更新时都是随机 IO , 所以说是 &#34;无序&#34; 的\n比如一个 用户表 有两个字段 id, name , id 为主键 , name 做了一个二级索引\n我们对 name 更新时, 二级索引也会更新, 显然更新之后的 name 对在 二级索引中位置是不定的, 所以说是随机 IO , 无序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613472622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291868,"ip_address":""},"score":349709,"extra":""}]}]},{"had_liked":false,"id":45861,"user_name":"憶海拾貝","can_delete":false,"product_type":"c1","uid":1054727,"ip_address":"","ucode":"99E883A8601DED","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/07/9f5f5dd3.jpg","comment_is_top":false,"comment_ctime":1543804838,"is_pvip":false,"replies":[{"id":"16377","content":"嗯这里其实要说等是“业务要保证”<br>当要性能问题的时候，多一个check的点","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543806062,"ip_address":"","comment_id":45861,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23018641318","product_id":100020801,"comment_content":"唯一字段不加唯一索引, 墨菲定律会出来搞事.  -- 记一次踩坑经验..","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431242,"discussion_content":"嗯这里其实要说等是“业务要保证”\n当要性能问题的时候，多一个check的点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543806062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229697,"user_name":"静静聆听","can_delete":false,"product_type":"c1","uid":1263932,"ip_address":"","ucode":"0A8600CB928EFE","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","comment_is_top":false,"comment_ctime":1593102453,"is_pvip":false,"replies":[{"id":"84773","content":"后面的文章里面有哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1593139703,"ip_address":"","comment_id":229697,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18772971637","product_id":100020801,"comment_content":"老师，我想对于我这样第一次接触changebuffer的人来说，看本篇文章会有些误解，因为文章通篇提到的都是数据页，我以为修改的字段也会缓存在changebuffer中呢，我查找资料后发现changebuffer只是缓存对索引页的增删改，如果是这样，老师可以在文章中说明changebuffer只在索引页生效，以免像我一样的人产生误解😬","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499597,"discussion_content":"后面的文章里面有哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593139703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2717360,"avatar":"https://static001.geekbang.org/account/avatar/00/29/76/b0/0c8ac01c.jpg","nickname":"cly_2","note":"","ucode":"25DAF9E47361BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581484,"discussion_content":"确实","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658806078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1106631,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e2/c7/f671bd93.jpg","nickname":"amy","note":"","ucode":"C6DAA11AFD3EC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295338,"discussion_content":"我也是同样的问题！！到底是对缓存页还是数据页生效，我都被搞晕了，总算看到你的评论让我清楚了一点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596167667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292956,"discussion_content":"我和你同样问题，自己找了好久，官网都看了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595396331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46587,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1543940811,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"18723809995","product_id":100020801,"comment_content":"对于redo log，后台会定期把redo log的内容刷到磁盘，然后对于change buffer，后台也会定期做merge操作（或者当访问数据页的时候做定期操作）。那当redo log刷到磁盘上后，读取磁盘上的数据页就是最新的了，则此时当读取数据页时的merge操作（merge操作 ＝ 更新操作 ＋ 老的数据页面）就显得不valid了，或者说不正确了？<br>换一个角度问，redo log定期刷到磁盘和change buffer定期merge操作，之间有什么联系？因为它们都会将最新的数据刷到磁盘上。如果有两条并行的线去刷最新的数据到磁盘，则两者之间如何同步？","like_count":4,"discussions":[{"author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33571,"discussion_content":"如果没有merge,磁盘上的数据不会变的，redolog没帮他做更新，只有 merge 才会触发更新数据","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571136227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33577,"discussion_content":"redolog 记录的是 change buffer 的操作，而change buffer上记录的是数据页的更新动作。所以 redolog 并不知道数据是怎么更新，真正数据更新到磁盘是 merge 触发的，而不是 redolog。我是这样理解，不知道对不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571136410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1293877,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/35/dd79037e.jpg","nickname":"a...Z","note":"","ucode":"5A5A44903785FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70545,"discussion_content":"不对吧,redo log 记录的是物理逻辑日志,也就是数据页的变化,读数据进行merge的时候是否需要进行merge操作有个hash表,那redo log 刷新磁盘的时候应用的也是这个hash吧,redo log 进行操作了,会释放change buffer中的这个行记录操作,我觉得是这样的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575366611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33577,"ip_address":""},"score":70545,"extra":""}]}]},{"had_liked":false,"id":276607,"user_name":"小白白不白","can_delete":false,"product_type":"c1","uid":1757797,"ip_address":"","ucode":"270EC3A197A8D9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d2/65/79d89c77.jpg","comment_is_top":false,"comment_ctime":1612029214,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"14496931102","product_id":100020801,"comment_content":"看评论区有写同学说 update和delete语句能立马给出结果，导致不能理解changBuffer有什么用。这里我说下个人拙见，不对请斧正。<br>changeBuffer详细一点来说是对普通索引页的优化。<br>普通索引（name） （age）主键（id）<br>（4，张三）<br>语句一:update name=李四 where id = 4<br>语句二:update age  where name=&#39;李四&#39;<br>可知主键为聚簇索引，存着整行数据。普通索引存着当前索引段的数据和主键值。<br>语句一:<br>1.主键数据（页）读到内存，修改主键上的数据行。<br>2.修改普通索引name上的name字段数据。<br>第一步是必须读盘到内存中的，然后修改对应数据,得到修改数据行。第二步是要去修改name索引的数据，这时就可以将此操作放到changeBuffer里，等待下次用到name索引时（用到就会读到内存中），再将其修改，所以就省了第二步的读盘操作。所以普通索引的name暂时是张三。<br>语句二（紧接着语句一）:<br>1.name索引数据读到内存，根据hash发现changBuffer上有本次读取页的数据没有改，就顺便改一下。<br>2.索引到name=李四的id,然后去修改主键中的age数据，修改完主键的后，这时就该去修改age索引的数据了，但age是普通索引，所以会将操作放到changeBuffer里，等待时机去更新。","like_count":3,"discussions":[{"author":{"id":2945646,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/f2/6e/80875b9d.jpg","nickname":"旅行者R","note":"","ucode":"956B8AE5DFD61F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556656,"discussion_content":"这个是正确的理解吗，我真的有点懵","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647438537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105354,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/ca/fe3f7f0e.jpg","nickname":"T.Y","note":"","ucode":"243C96604F1CAA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398631,"discussion_content":"看到这里终于释怀了，文章里没有写清楚changebuffer其实缓存的是二级索引数据，并不是缓存的数据本身。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632823454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1668117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJLgibqHsl97Oq3nvnEVz7V3kaGKLmia0Ja8c4yXO7QeLKiakganRJomNGgYToW4RnFs60zibDTHicjE5w/132","nickname":"学而不思则惘","note":"","ucode":"8ED2B08AA5A755","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380773,"discussion_content":"我看了看官方文档，感觉change buffer 确实只是针对二级索引的改动，也就是平常聊的所谓改数据也会改索引，只是把这个改索引的消耗由同步转化为延迟执行了一下吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624694256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1668117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJLgibqHsl97Oq3nvnEVz7V3kaGKLmia0Ja8c4yXO7QeLKiakganRJomNGgYToW4RnFs60zibDTHicjE5w/132","nickname":"学而不思则惘","note":"","ucode":"8ED2B08AA5A755","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380772,"discussion_content":"所以change buffer只是异步改一下别的非唯一索引？update语句自身用到的索引还是会加载进buffer pool是吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624693989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143235,"user_name":"kuku","can_delete":false,"product_type":"c1","uid":1303778,"ip_address":"","ucode":"1F8EBEFC45EADA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7EXTibmFXvhnibRuk7VP1hVcTuvB9xCAiaEHuzkhV23ic1Yv0OMzDemUmxzXreQgaCcicRPrg6gYtcCw/132","comment_is_top":false,"comment_ctime":1571652843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14456554731","product_id":100020801,"comment_content":"丁奇，能否补一篇字段尽量不用null的理由？","like_count":3},{"had_liked":false,"id":87387,"user_name":"Lane","can_delete":false,"product_type":"c1","uid":1008257,"ip_address":"","ucode":"F70459D1BBD9F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/81/ad80f427.jpg","comment_is_top":false,"comment_ctime":1555580711,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"14440482599","product_id":100020801,"comment_content":"缕了一下，更新流程：<br>1、写入change buffer。<br>2、写入redo log，状态prepare<br>3、用户commit事务。<br>4、写入binlog<br>6、redo log状态变更为commit。<br><br>不知对吗老师？","like_count":3,"discussions":[{"author":{"id":2035912,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/10/c8/325f1463.jpg","nickname":"叫练","note":"","ucode":"ABAFDFE0FAFEA2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285420,"discussion_content":"两阶段提交","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592831934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74001,"user_name":"季伟滨","can_delete":false,"product_type":"c1","uid":1445103,"ip_address":"","ucode":"CBF84145CAA986","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/ef/4c8850de.jpg","comment_is_top":false,"comment_ctime":1552056853,"is_pvip":false,"replies":[{"id":"27146","content":"1. 没有特别说明的，通指所有索引的数据页哈<br>2. 如果是where k= N 是要先读的（确保数据存在）<br>3. change buffer只能对非唯一索引有效，因此“record所在数据页面”是不会用上change buffer的。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552146824,"ip_address":"","comment_id":74001,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14436958741","product_id":100020801,"comment_content":"老师好，想请教下，如下几个问题：<br>1、文中提到的数据页是指主键索引的数据页面还是包括所有索引树的叶子结点？<br>2、对于二级普通索引，update t where k=？这种语句，执行的时候，是先读后写吗，也就是先按k索引树将相应索引页都加载到内存，然后再按主键索引将数据页面加载到内存？还是按照文中提到的先记录到change buffer？<br>3、change buffer只记录索引页的变更还是会记录真正record所在数据页面的变更？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442376,"discussion_content":"1. 没有特别说明的，通指所有索引的数据页哈\n2. 如果是where k= N 是要先读的（确保数据存在）\n3. change buffer只能对非唯一索引有效，因此“record所在数据页面”是不会用上change buffer的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552146824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1629257,"avatar":"https://static001.geekbang.org/account/avatar/00/18/dc/49/43ae1627.jpg","nickname":"Ansyear","note":"","ucode":"489CE96852EA2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333868,"discussion_content":"看完这个糊涂了。就是说带where条件的更新还是要读磁盘啊？那change butter用不上了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607656085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1197638,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoV6yaH2ib6B0GuGhOZrYHZdPTrgGs0AXEXEegXxNKliaegB4m51cV6voXFEF4Nj1t6ONtBLFQibnxRA/132","nickname":"紫霞与悟空","note":"","ucode":"42A8B1C87956D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1629257,"avatar":"https://static001.geekbang.org/account/avatar/00/18/dc/49/43ae1627.jpg","nickname":"Ansyear","note":"","ucode":"489CE96852EA2C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374926,"discussion_content":"读的是主键b+树，带数据，但是不用读普通索引的B+树，意思就是change buffer只缓存了普通索引的B+树的操作，只有要使用这个索引的时候，这些操作才能真正生效，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621412980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333868,"ip_address":""},"score":374926,"extra":""}]},{"author":{"id":1145404,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","nickname":"堵车","note":"","ucode":"7BC1E50A4F8D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57588,"discussion_content":"record所在的数据页不会用change buff,那么直接将数据记录到redo log中，不写磁盘，下次查询这条记录的时候，直接从磁盘读出来，再从redo log中拿到变更记录合并成新记录，返回给客户端.是这么理解的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574617724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61756,"user_name":"miu","can_delete":false,"product_type":"c1","uid":1368901,"ip_address":"","ucode":"3D73FF3C09231A","user_header":"","comment_is_top":false,"comment_ctime":1547791958,"is_pvip":false,"replies":[{"id":"21926","content":"按照你的描述，应该是假设<br> “做update操作，修改(3,300)为(3,400)” 这个操作，是要在page3删除这个记录，然后往page4插入一行对吧？<br><br>这两个操作都可能被放到change buffer里面。<br>接下来如果查询是 where k=400， 就只会访问page 4.<br>page 4从磁盘读入内存的时候，做merge操作，返回结果里面有两条满足k=400的记录。<br><br>就完成了。<br>这个查询过程跟page3没关系，不会发现“page 3遗漏”这个逻辑哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547813126,"ip_address":"","comment_id":61756,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14432693846","product_id":100020801,"comment_content":"老师，请教个问题，场景如下：<br>假设表t有id，k 两列。id是主键，k是二级索引。<br>有数据(3,300)，(4,400)。(3,300)存放在数据块page3,(4,400)存放在数据块page4。这两行数据均不在buffer pool中。<br>现在做update操作，修改(3,300)为(3,400)，这时会把修改操作写入到到change buffer中；<br>并在change buffer merge之前做查询操作：select k from t where k=400;<br>因为数据不在buffer pool中，会到磁盘上读取数据，根据索引会读取到page4，并把page4数据加载到buffer pool中，然后应用change buffer时，发现遗漏了page3，再重新去取page3。<br>请问这个过程的推导是否正确，是否会出现这种多次IO的情况<br><br>","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436978,"discussion_content":"按照你的描述，应该是假设\n “做update操作，修改(3,300)为(3,400)” 这个操作，是要在page3删除这个记录，然后往page4插入一行对吧？\n\n这两个操作都可能被放到change buffer里面。\n接下来如果查询是 where k=400， 就只会访问page 4.\npage 4从磁盘读入内存的时候，做merge操作，返回结果里面有两条满足k=400的记录。\n\n就完成了。\n这个查询过程跟page3没关系，不会发现“page 3遗漏”这个逻辑哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547813126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692713,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d4/29/5f52a82c.jpg","nickname":"萝卜条","note":"","ucode":"4BC975BBFE50A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43974,"discussion_content":"题主的意思是修改(3,300)为(3,400)，是在page3修改，不是删除p3，插p4","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572920079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1518795,"avatar":"","nickname":"Geek_2ac804","note":"","ucode":"EDF69B20030BB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1692713,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d4/29/5f52a82c.jpg","nickname":"萝卜条","note":"","ucode":"4BC975BBFE50A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554251,"discussion_content":"删除的时候，只是标记，因为索引是有序的，所以是要到page4去插入的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646286167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43974,"ip_address":""},"score":554251,"extra":""}]},{"author":{"id":1177838,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f8/ee/2cf560f5.jpg","nickname":"Dthan","note":"","ucode":"B5DEB7D050981D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6920,"discussion_content":"我是不是可以这样理解，只要不是更新唯一索引字段上的值都可以进去change buffer?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567174655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46391,"user_name":"TiTi","can_delete":false,"product_type":"c1","uid":1127343,"ip_address":"","ucode":"58F19596A1EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/af/dda311cf.jpg","comment_is_top":false,"comment_ctime":1543914147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14428816035","product_id":100020801,"comment_content":"文中提到写change buffer的时候会同时写入ibdataX和redo log，它们的先后顺序是什么？这三样东西的写入操作之间有没有原子性的保证？在突然断电的情形下又怎么去保证原子性? 此外，重启之后恢复的流程大致是怎么样的，怎么利用ibdataX和redo log来恢复丢失的数据？望老师解答下，谢谢！","like_count":3},{"had_liked":false,"id":46107,"user_name":"高原","can_delete":false,"product_type":"c1","uid":1315634,"ip_address":"","ucode":"9E0C2EE595D0F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/32/4cfd28df.jpg","comment_is_top":false,"comment_ctime":1543847811,"is_pvip":true,"replies":[{"id":"16513","content":"对于page 2, redolog并不知道他要怎么更新，redolog里面记录的是change buffer上的更新，而change buffer上记录的是数据页的更新动作","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543886695,"ip_address":"","comment_id":46107,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14428749699","product_id":100020801,"comment_content":"ChangeBuffer就是对《日志系统：一条 SQL 更新语句是如何执行的？》中 update 语句执行流程进一步优化。更新步骤：先更新内存，再通过redo log更新磁盘。<br>而Change Buffer的引入使得更新内存都是按需更新，只有在需要读的时候才更新。 如果这样理解对的话，就有一个问题，如果在purge之前，redo log执行了磁盘写，那change buffer里的操作是不是就有冲突怎么让失效呢？<br>2018-12-03<br> 作者回复<br>前面说的对，最后一句话问题没理解… 你再发重发一下问题😓<br>---------------------------------------------------------<br>问题：现在一个执行流程是，操作写入change buffer, 写入redo log commit. 但这个时候应该没有purge,也没有通过redo log写入磁盘。 Purge 是在有的查询操作的时候发生（不考虑系统自动purge），那过段时间应该会通过redo log更新到磁盘。<br>我的问题就是通过redo log更新到磁盘的时候，如果还没有发生purge操作，那如果再次读触发Purge从磁盘读（磁盘已经是redo log更新后的数据了), 所以这个地方是通过什么机制确保没有冲突的？ 谢谢，老师讲的很好，不知道我说明白没有？<br>2018-12-03<br> 作者回复<br>我大概理解你的意思了。<br><br>如果没有purge,磁盘上的page 2不会变的，redolog没帮他做更新。<br><br>只有purge 才会触发更新数据，得到新的page 2<br>-----------------------------------------------------<br>这个地方就不是特别理解，redo log不就是用来搜集操作，适时更新到磁盘吗，而🈶了change buffer后，redo log更新磁盘的机制就不生效了吗？ 不知道是哪个地方理解错了？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431338,"discussion_content":"对于page 2, redolog并不知道他要怎么更新，redolog里面记录的是change buffer上的更新，而change buffer上记录的是数据页的更新动作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543886695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257295,"user_name":"Aibo","can_delete":false,"product_type":"c1","uid":2115387,"ip_address":"","ucode":"2CE3E77BD2D014","user_header":"https://static001.geekbang.org/account/avatar/00/20/47/3b/70198ceb.jpg","comment_is_top":false,"comment_ctime":1603931643,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10193866235","product_id":100020801,"comment_content":"change buffer和redolog都是在记录对于某一页的操作，为什么不能只用redolog去实现磁盘的随机读写优化呢？","like_count":2},{"had_liked":false,"id":251614,"user_name":"Shan","can_delete":false,"product_type":"c1","uid":1666954,"ip_address":"","ucode":"4F158016B0D590","user_header":"https://static001.geekbang.org/account/avatar/00/19/6f/8a/bea966ac.jpg","comment_is_top":false,"comment_ctime":1601725157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10191659749","product_id":100020801,"comment_content":"有个问题想问下，我看图二中change buffer的内容是add data to page 2，他是怎么判断这个记录需要修改page 2的？","like_count":2},{"had_liked":false,"id":223369,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":2016657,"ip_address":"","ucode":"07AD2487087D17","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/AkS4rJAdkt5icChtbYGLLP2TficUDBHYCwUDHsP8wtfPeq6YUWYyvcKbZWV5p1hQuxQNaZf0G4axI5ibqPR7ia6ZCg/132","comment_is_top":false,"comment_ctime":1591074657,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10181009249","product_id":100020801,"comment_content":"change buffer是加快辅助索引的更新还是数据行的更新？","like_count":2,"discussions":[{"author":{"id":2034587,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/9b/7fb4c3f9.jpg","nickname":"奔跑","note":"","ucode":"EC84EE7C97D965","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341356,"discussion_content":"辅助索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610386798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169676,"user_name":"LeoBing","can_delete":false,"product_type":"c1","uid":1068193,"ip_address":"","ucode":"3964DA5DBFBE46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/a1/40b75a55.jpg","comment_is_top":false,"comment_ctime":1578403727,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10168338319","product_id":100020801,"comment_content":"老师我来晚了，有个问题，merge为什么会写入到系统表空间，不应该是数据页上么","like_count":2,"discussions":[{"author":{"id":2035912,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/10/c8/325f1463.jpg","nickname":"叫练","note":"","ucode":"ABAFDFE0FAFEA2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285422,"discussion_content":"表空间可以理解成日志","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592832018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149933,"discussion_content":"可能跟innodb引擎的实现机制有关吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579784488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140736,"user_name":"测小试","can_delete":false,"product_type":"c1","uid":1668301,"ip_address":"","ucode":"591F2D8CFBF503","user_header":"https://static001.geekbang.org/account/avatar/00/19/74/cd/158dc733.jpg","comment_is_top":false,"comment_ctime":1571039560,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10160974152","product_id":100020801,"comment_content":"上期问题解答里面，原文是：用新的方式来分析 session B’的更新为什么对 session A 不可见就是：在 session A 视图数组创建的瞬间，session B’是活跃的，属于“版本未提交，不可见”这种情况。<br>按照“当前读”的解释，可以理解你给的第二种方案。但是按照上面引用的这么解释，session B’对session A不可见，那么session A为啥还修改不成功？这句话我把我搞糊涂了","like_count":2,"discussions":[{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193121,"discussion_content":"我也没懂，update不是当前读吗？？应该A当前读，可以看到B&#39;的更新，所以才没更新成功吧。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583126976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89166,"user_name":"Break","can_delete":false,"product_type":"c1","uid":1508922,"ip_address":"","ucode":"6D1CCFC60E11EF","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/3a/68bed1d9.jpg","comment_is_top":false,"comment_ctime":1556096164,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10146030756","product_id":100020801,"comment_content":"我有一个疑问, 业务如何确保唯一性插入呢? 业务如果要确保唯一性, 那应该是要先查询一遍是否存在, 不存在再插入. 这样看起来也是无法利用到普通索引的charge buffer, 因为即使把更新写入charge buffer, 但是下一次插入的时候, 又会先select一次数据这样就会从磁盘读取并执行一个merge操作, 看起来效果和唯一索引是一样的.","like_count":2,"discussions":[{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169553,"discussion_content":"你说的是一个很深入的话题了。对于单机单进程程序来说，维护一个内存变量就行。对于分布式系统来说，就得借助其他的kv数据库来实现唯一性或者id递增。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581609731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6022,"discussion_content":"在代码中控制，比如有一个全局变量 i，每次程序执行完，这个变量就 i++，然后拿这个变量去执行插入操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566616948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67944,"user_name":"清风","can_delete":false,"product_type":"c1","uid":1129749,"ip_address":"","ucode":"59932E13FAF607","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/15/7f5fd6d3.jpg","comment_is_top":false,"comment_ctime":1550330496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10140265088","product_id":100020801,"comment_content":"牛! 知道整个流程之后，查找问题真是对症下药啊，搞技术必须有些时候要非常深，有深度才会在关键时刻救命啊。","like_count":2},{"had_liked":false,"id":63954,"user_name":"奋斗心","can_delete":false,"product_type":"c1","uid":1247286,"ip_address":"","ucode":"06A195AB0B6570","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/36/98be3d69.jpg","comment_is_top":false,"comment_ctime":1548612887,"is_pvip":false,"replies":[{"id":"22630","content":"sessionA update t set c=0 where id=c; 这个语句是当前读；<br>也正是因为当前读，id都不等于c；<br>所以没有命中行，导致都没有更新；<br>这样这些行的事务id没有变成session A的事务id，session B&#39;的提交时间，晚于session A的启动时间，所以这些事务的更新对session A不可见。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548636977,"ip_address":"","comment_id":63954,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10138547479","product_id":100020801,"comment_content":"第二种解法 session B’ 应为活跃不可见。sessionA update t set c=0 where id=c; 不是当前读吗？当前读吗？后面的select 不应该可以查询到sessionA的update吗","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437779,"discussion_content":"sessionA update t set c=0 where id=c; 这个语句是当前读；\n也正是因为当前读，id都不等于c；\n所以没有命中行，导致都没有更新；\n这样这些行的事务id没有变成session A的事务id，session B&amp;#39;的提交时间，晚于session A的启动时间，所以这些事务的更新对session A不可见。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548636977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47920,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544257529,"is_pvip":false,"replies":[{"id":"17103","content":"1. 这个是“flush”策略，今晚会发的新的一篇就会说到<br><br>2. 不一定一样<br><br>3. 如果内存里有，内存里一定是对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544333377,"ip_address":"","comment_id":47920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134192121","product_id":100020801,"comment_content":"老师，正文里面说：需要说明的是，虽然名字叫作 change buffer，实际上它是可以持久化的数据。也就是说，change buffer 在内存中有拷贝，也会被写入到磁盘上。<br>我的问题是：change buffer多久写入一次磁盘？如果change buffer磁盘中的内容会完全在内存中吗？如果不是的话，那merge岂不是要读两次磁盘？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431946,"discussion_content":"1. 这个是“flush”策略，今晚会发的新的一篇就会说到\n\n2. 不一定一样\n\n3. 如果内存里有，内存里一定是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544333377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45784,"user_name":"到道可道","can_delete":false,"product_type":"c1","uid":1031181,"ip_address":"","ucode":"12B94B6C26BE0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/0d/00424e81.jpg","comment_is_top":false,"comment_ctime":1543796162,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"10133730754","product_id":100020801,"comment_content":"有了 redo log，InnoDB 就可以保证即使数据库发生异常重启，之前提交的记录都不会丢失，这个能力称为crash-safe。<br>对于在change buffer中的数据，但已提交的部分，已经写了redo log，此时断电重启是没有影响的，但对于未写redo log的，即事务还未提交的，会正常丢失这部分数据。","like_count":2},{"had_liked":false,"id":45782,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1543795969,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10133730561","product_id":100020801,"comment_content":"偶回复下凯平的问题，主键id是主索引，在插入的时候，是根据它来寻找插入位置的，所以已经考虑了它的唯一性。<br>然后思考题的话，毕竟与 redo写入changebuffer的变化的操作组成了事务，所以不会发生丢失。","like_count":2},{"had_liked":false,"id":320939,"user_name":"金尚","can_delete":false,"product_type":"c1","uid":1661060,"ip_address":"","ucode":"70C19FE3C984B0","user_header":"https://static001.geekbang.org/account/avatar/00/19/58/84/a8aac073.jpg","comment_is_top":false,"comment_ctime":1636588008,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5931555304","product_id":100020801,"comment_content":"老师我想问下唯一索引和普通索引存储结构一样吗。把唯一索引改成普通索引为什么要先删除在创建。","like_count":1,"discussions":[{"author":{"id":1661060,"avatar":"https://static001.geekbang.org/account/avatar/00/19/58/84/a8aac073.jpg","nickname":"金尚","note":"","ucode":"70C19FE3C984B0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414069,"discussion_content":"有人回答下吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636643689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310232,"user_name":"陈小杰","can_delete":false,"product_type":"c1","uid":1258560,"ip_address":"","ucode":"7C6C7D7F43A171","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/40/99b10e7d.jpg","comment_is_top":false,"comment_ctime":1630563854,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5925531150","product_id":100020801,"comment_content":"有个问题，一直想不明白，望解答：<br>change buffer 使用之后，update、delete的时候不会从磁盘读取直接写入内存。那不读取磁盘怎么知道需要变更的记录是否真的存在，以及本次SQL执行影响行数是怎么返回的呢？","like_count":1,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398796,"discussion_content":"如果update或者delete条件中需要用到某个二级索引c，那这个索引c上的数据页肯定是要先载入内存中的，这个时候通过索引c可以得到影响行数。如果条件中没有用到索引c字段，那根据主键索引或者其他二级索引就可以算出影响行数。所以这两种情况都不会有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632842407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286869,"user_name":"学习中的周璐","can_delete":false,"product_type":"c1","uid":1779524,"ip_address":"","ucode":"6B33C48765F041","user_header":"https://static001.geekbang.org/account/avatar/00/1b/27/44/5bb1c270.jpg","comment_is_top":false,"comment_ctime":1617642506,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5912609802","product_id":100020801,"comment_content":"update操作时候，使用change buffer，怎么返回更新的条数；<br>在业务代码中，如果数据没有更新，获取到的是row = 0；但是引入 change buffer 后，发下他只有 在查询时候，才会merge，那如果更新的是不存在的数据呢","like_count":1},{"had_liked":false,"id":278941,"user_name":"长脖子树","can_delete":false,"product_type":"c1","uid":1182802,"ip_address":"","ucode":"D9090EF67EEB1B","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","comment_is_top":false,"comment_ctime":1613472726,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5908440022","product_id":100020801,"comment_content":"还是看官方文档清晰<br>一句话就是 change buffer 是二级索引的变更缓存, 用于减少二级索引更新时带来的随机 IO","like_count":1},{"had_liked":false,"id":275922,"user_name":"绿箭侠","can_delete":false,"product_type":"c1","uid":1528536,"ip_address":"","ucode":"B994F558A98E29","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/d8/123a4981.jpg","comment_is_top":false,"comment_ctime":1611718174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5906685470","product_id":100020801,"comment_content":"老师，change buffer有两个疑问：<br>1. change  buffer 持久化有什么用，mysql重启后会重新读取他持久化的数据？<br>2. 我已经知道了新产生的chang buffer 会写到redolog中，那么chang  buffer 被merge后，这个操作也会写到redo log中？","like_count":1},{"had_liked":false,"id":246139,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1599187666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5894154962","product_id":100020801,"comment_content":"老师，如果数据页不在内存普通索引的更新操作不去磁盘读取数据页的话update更新操作怎么确定更新行数？ 唯一索引的更新操作应该也不用判断是否重复吧只有新增操作才要判断吧？","like_count":1},{"had_liked":false,"id":185938,"user_name":"蛋炒饭加鸡蛋","can_delete":false,"product_type":"c1","uid":1628398,"ip_address":"","ucode":"C75E27B9FB3336","user_header":"https://static001.geekbang.org/account/avatar/00/18/d8/ee/17f220b6.jpg","comment_is_top":false,"comment_ctime":1583727519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878694815","product_id":100020801,"comment_content":"将 change buffer 中的操作应用到原数据页，得到最新结果的过程称为 merge。除了访问这个数据页会触发 merge 外，系统有后台线程会定期 merge。<br>老师，系统有后台线程定期merge，那这个过程是定期从磁盘读页到内存应用change buffer还是说把change buffer的改动写入到磁盘，如果是后者，那么和redo log的写入磁盘有什么区别吗？","like_count":1},{"had_liked":false,"id":134096,"user_name":"商瞿逆","can_delete":false,"product_type":"c1","uid":1142674,"ip_address":"","ucode":"FA9522CEDA5635","user_header":"https://static001.geekbang.org/account/avatar/00/11/6f/92/535160b0.jpg","comment_is_top":false,"comment_ctime":1568740489,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5863707785","product_id":100020801,"comment_content":"老师你好，我翻看了评论区所有相关问答，还是有这样一个疑问：<br>既然change buffer和redo log都有把记录写到磁盘里的机制，那么一条记录的更新最终落盘，是通过change buffer的merge过程，还是通过redo log的写入过程呢？还是说，在有change buffer的情况下，通过buffer pool里的记录写到磁盘；如果没有，就通过redo log写磁盘","like_count":1,"discussions":[{"author":{"id":1404261,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erAuyLVZlO4559FiaGgkd3QvwTyI9LxkwYagVdqV3BwyzK4WDm137X2OpH3yklxMickjw47eLXShw8Q/132","nickname":"conn4575","note":"","ucode":"EB6AE117376D97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":92073,"discussion_content":"我也是这个地方卡住了，现在更搞不懂 change buffer 和 redo log 两者的区别了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576852323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33586,"discussion_content":"我也是这个问题，找不到答案，卡在这个点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571136943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1142674,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6f/92/535160b0.jpg","nickname":"商瞿逆","note":"","ucode":"FA9522CEDA5635","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48150,"discussion_content":"后面讲到了，有flush过程，看下去可知","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573453687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33586,"ip_address":""},"score":48150,"extra":""}]}]},{"had_liked":false,"id":127217,"user_name":"IT橘子","can_delete":false,"product_type":"c1","uid":1066932,"ip_address":"","ucode":"1DBEE96BAF8B0B","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/b4/e8b3f53f.jpg","comment_is_top":false,"comment_ctime":1566613116,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5861580412","product_id":100020801,"comment_content":"”如果要在这张表中插入一个新记录 (4,400) 的话，InnoDB 的处理流程是怎样的。”中的目标页是k索引上的数据页？InnoDB是索引组织表，数据肯定是记录在主键索引上的，而change buffer中缓存的更新操作应该是对主键索引数据页的缓存吧？有点不明白","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149883,"discussion_content":"最后都应该落在主键索引组织表上吧。毕竟普通索引的叶子节点的value还是主键值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579783263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126482,"user_name":"MrVito","can_delete":false,"product_type":"c1","uid":1252169,"ip_address":"","ucode":"716FF6F8871706","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/49/ddefc656.jpg","comment_is_top":false,"comment_ctime":1566392847,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5861360143","product_id":100020801,"comment_content":"写了change buffer肯定也是写了redo log要是没写完，就宕机，change buffer就没了，但是可以通过redo log恢复，但是要是没写完redo log，就不能恢复了。看到评论，gap锁，脏页，真的不知道什么鬼，感觉这个就是讲了普通索引与唯一索引的性能比较，大神们衍生出来的问题啊，让我默默瑟瑟发抖！","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149885,"discussion_content":"其实也没啥，仔细分析一下就行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579783330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105304,"user_name":"Geek_e95920","can_delete":false,"product_type":"c1","uid":1344701,"ip_address":"","ucode":"193C44DAC1699C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/HLDjKFe3k6EsKg2AzW7UPp6EiaxotnDciaIxCHtBWibbb0GAJXc2LfDCJwv3sL2QZAudndqUU31cicq4oMrGXibLaTA/132","comment_is_top":false,"comment_ctime":1560959429,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5855926725","product_id":100020801,"comment_content":"更新非唯一二级索引记录时，如果在buffer pool中不存在该索引记录，就直接将更新操作记录在change buffer中。<br>疑问：它是怎么断定该索引记录就一定存在呢？","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149918,"discussion_content":"可以根据索引树找出主键，判断内存中是否有相应数据吧。个人猜测。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579784020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105075,"user_name":"chuanyi.huang","can_delete":false,"product_type":"c1","uid":1517952,"ip_address":"","ucode":"4981885BB2F05C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJwPkU9Ua5ggHHRNQ3HxU6aWRq9O6QMMUf4mDt9SkF6wuZycH0pCCUPrMFcoJXgRM4A3mBNibAC6LQ/132","comment_is_top":false,"comment_ctime":1560911766,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5855879062","product_id":100020801,"comment_content":"老师，您好，我想请教一个问题，  我现在有一个联合索引(a,b) , 当我在where条件中 a字段用到范围查询的时候，b字段索引会失效吗？ 如果失效，为什么会失效呢？ ","like_count":1,"discussions":[{"author":{"id":1465412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5c/44/d07c0865.jpg","nickname":"Geek_d960af","note":"","ucode":"C59AEF44BD8691","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297998,"discussion_content":"b应该是失效的。\n(1,1)(1,2)(2,1)(2,4)(3,1)(3,2)\n可以看到a的值是有顺序的，1，1，2，2，3，3，而b的值是没有顺序的1，2，1，4，1，2\n不过应该会用到索引下推优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597138104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100116,"user_name":"Clear","can_delete":false,"product_type":"c1","uid":1110680,"ip_address":"","ucode":"AD768DB7654F7B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/98/e2c92588.jpg","comment_is_top":false,"comment_ctime":1559448203,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5854415499","product_id":100020801,"comment_content":"你好，如果使用change buffer，插入数据时，主键索引唯一是否也会导致数据读入内存呢?  如果不用读，就说明不用检查主键索引的唯一性，如果要读的话，那就没有提升性能的效果了。","like_count":1,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11962,"discussion_content":"一个表里面的一行记录除了主键索引外还有唯一索引和普通索引。change对普通索引是有效的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568453148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89440,"user_name":"莫名","can_delete":false,"product_type":"c1","uid":1487905,"ip_address":"","ucode":"852C2321C45EE3","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/21/17a88779.jpg","comment_is_top":false,"comment_ctime":1556174984,"is_pvip":false,"replies":[{"id":"32460","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1556607088,"ip_address":"","comment_id":89440,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851142280","product_id":100020801,"comment_content":"change buffer的开关是全局的吗？要么启用要么禁用？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448134,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556607088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88032,"user_name":"zc","can_delete":false,"product_type":"c1","uid":1086631,"ip_address":"","ucode":"5A5D4C90DF591C","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/a7/a582f0d0.jpg","comment_is_top":false,"comment_ctime":1555819927,"is_pvip":false,"replies":[{"id":"31689","content":"是的 不过这个也是老版本才会出现的了，新版本改为hash_scan算法，普通索引也还行<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555860226,"ip_address":"","comment_id":88032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5850787223","product_id":100020801,"comment_content":"没有主键和非唯一索引，备机执行binlog会很慢","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447691,"discussion_content":"是的 不过这个也是老版本才会出现的了，新版本改为hash_scan算法，普通索引也还行\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555860226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79436,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1553483847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848451143","product_id":100020801,"comment_content":"普通索引与唯一索引的效率差不多, <br>不同索引可以使用全局buffer而唯一索引不可以,<br>机械硬盘使用全局buffer效率更高","like_count":1},{"had_liked":false,"id":74006,"user_name":"Shen","can_delete":false,"product_type":"c1","uid":1182167,"ip_address":"","ucode":"CFF7609A754392","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/d7/ffe7b0bf.jpg","comment_is_top":false,"comment_ctime":1552057617,"is_pvip":false,"replies":[{"id":"27034","content":"不用判断，这一行一定存在，（除非出bug了）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552091169,"ip_address":"","comment_id":74006,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5847024913","product_id":100020801,"comment_content":"“更新一个数据页时，在不影响数据一致性的前提下，innodb会将这些更新操作缓存在change buffer中。”<br>请问老师，具体有哪些操作呢？<br>我想了一个场景，非唯一索引的更新操作，需要判断该行数据是否存在，这样还是需要将磁盘中的数据页读取到内存中呢。<br>","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442381,"discussion_content":"不用判断，这一行一定存在，（除非出bug了）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552091169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1548802,"avatar":"https://static001.geekbang.org/account/avatar/00/17/a2/02/bd5b398c.jpg","nickname":"RecklesszZ 😶","note":"","ucode":"8DF59BEAC079DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293239,"discussion_content":"按照我的理解是，除非是这个索引的索引页全在内存中，这样我才知道数据是否存在。但是不是说索引也不一定是一定在内存中的吗？那我update一个普通索引不在内存中的数据行时，怎么能判断这个数据一定存在呢？\n可是无论什么update语句，都会立刻返回影响行数，如果是放入change buffer中，上述情况的时候，怎么能一定知道影响行数呢？\n这个问题困扰我几个月了，麻烦老师解答一下","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1595489588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736650,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","nickname":"我的喵","note":"","ucode":"A7435BDBDD2587","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344503,"discussion_content":"哇也觉得作者回复还是不理解，咋保证一定存在的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611480376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1548802,"avatar":"https://static001.geekbang.org/account/avatar/00/17/a2/02/bd5b398c.jpg","nickname":"RecklesszZ 😶","note":"","ucode":"8DF59BEAC079DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293236,"discussion_content":"这一行为什么一定存在呢？普通索引update一个不存在的数据行，完全是可以的啊，数据库返回  0 rows affacted.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595489285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56999,"user_name":"Jowin","can_delete":false,"product_type":"c1","uid":1114356,"ip_address":"","ucode":"19017F7D06C22A","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","comment_is_top":false,"comment_ctime":1546596598,"is_pvip":false,"replies":[{"id":"20572","content":"👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546609989,"ip_address":"","comment_id":56999,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841563894","product_id":100020801,"comment_content":"判定准则：change buffer 的收益是在要更新的数据页或非唯一索引页不在内存的时候。其他情况比如有没有where都可以按这个准则判定。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435353,"discussion_content":"👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546609989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55573,"user_name":"牛牛","can_delete":false,"product_type":"c1","uid":1194626,"ip_address":"","ucode":"CFCE68B4F92209","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/82/1ff83a38.jpg","comment_is_top":false,"comment_ctime":1546233981,"is_pvip":false,"replies":[{"id":"20082","content":"好问题，就是触发merge然后淘汰<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546244184,"ip_address":"","comment_id":55573,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841201277","product_id":100020801,"comment_content":"老师、想请教下<br>从文章中我可以看到3种情况会触发merge操作：<br>1. 需要访问数据页时、会将数据页加载到内存、将changer buffer中的变动merge到数据页内容<br>2. 后台进程定期merge<br>3. db正常关闭 会将change buffer中的内存与数据页内容进行merge<br><br>我的疑惑是：<br>因为change buffer占用的是 buffer pool的内存、不是无限大的、如果更新比较频繁、很少读的场景、这三种merge都没触发、<br>而change buffer被写满了(达到可使用buffer pool的最大值)、会发生什么事 ？触发merge？还是change buffer内的数据丢失 ？<br>若buffer pool被写满会发生什么 ？<br><br>=== 感谢老师、看的很累、好多不懂的、但很欣喜、可以看到这么细致的解说~~~","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434800,"discussion_content":"好问题，就是触发merge然后淘汰\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546244184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48458,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1544447833,"is_pvip":false,"replies":[{"id":"17314","content":"手动点赞","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544451005,"ip_address":"","comment_id":48458,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839415129","product_id":100020801,"comment_content":"基础篇学习完之后，进入实战的第一篇文章。普通索引和唯一索引，对于查询来说，使用这两种索引性能角度上是差不多的，因为InnoDB按数据页为单元进行读写。对于更新语句来说，对来内存中的数据直接在内存更新，对于不在内存中的数据，对于唯一索引，还是需要进行读内存，但对于普通索引就可以通过使用change buffer来减少对磁盘的访问。根据这一原理，老师在文章通过一个读入命中率由99%变成75%，原因就是因为普通所以索引改成了唯一索引。所以通过本节的学习，理解普通索引和Change buffer 配合使用的原理，对于数据量大的表更新优化效率很明显。通过这些章节的学习，在理解数据库的核心原理之后，现在我回过后继续实践数据库sql语句的的操作，肯定比之前更大的进步和自信。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432189,"discussion_content":"手动点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544451005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47933,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1544259917,"is_pvip":false,"replies":[{"id":"17102","content":"👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544333280,"ip_address":"","comment_id":47933,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839227213","product_id":100020801,"comment_content":"把该讲内容总结为几个问题, 大家复习的时候可以先尝试回答这些问题检查自己的掌握程度:<br><br>\t1. <br>使用普通索引和唯一索引的查询过程各是怎么样的, 性能差异在哪里体现?<br>\t2. <br>change buffer的作用是什么样的? 普通索引和唯一索引在更新时都使用change buffer吗? <br>\t3. <br>目标页在内存中和不在内存中时, 使用唯一索引和普通索引更新数据的流程各是怎么样的?<br>\t4. <br>changebuffer适合什么样的使用场景, 不适合什么样的使用场景?<br>\t5. <br>结合buffer pool, redo log, 系统表空间, 数据表空间四个部分分析带change buffer的更新和查询过程各是怎么样的?<br><br>","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431951,"discussion_content":"👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544333280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46459,"user_name":"高枕","can_delete":false,"product_type":"c1","uid":1310312,"ip_address":"","ucode":"20F6CF75EC9AA4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/68/e0bebd9a.jpg","comment_is_top":false,"comment_ctime":1543929180,"is_pvip":false,"replies":[{"id":"16626","content":"就是图中Page 1那样的流程","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543933427,"ip_address":"","comment_id":46459,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838896476","product_id":100020801,"comment_content":"请问老师，change buffer 会更新到二级索引所在的page，但是主键索引的叶子结点的page何时被更新呢？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431465,"discussion_content":"就是图中Page 1那样的流程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543933427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46106,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1543847541,"is_pvip":false,"replies":[{"id":"16512","content":"对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543886524,"ip_address":"","comment_id":46106,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838814837","product_id":100020801,"comment_content":"”用新的方式来分析 session B’的更新为什么对 session A 不可见就是：在 session A 视图数组创建的瞬间，session B’是活跃的，属于“版本未提交，不可见”这种情况。”<br>session B的更新对查询不可见，但是对更新是可见的。更新时是当前读，而普通查询是快照读。所以，可以查询出数据，但是却出现更新失败的情况。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431337,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543886524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360183,"user_name":"mubai","can_delete":false,"product_type":"c1","uid":1099044,"ip_address":"广东","ucode":"B0A6C7289E4A9A","user_header":"https://static001.geekbang.org/account/avatar/00/10/c5/24/466d9ba4.jpg","comment_is_top":false,"comment_ctime":1666257092,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666257092","product_id":100020801,"comment_content":"老师，mysql是怎么判断记录要更新的目标页在不在内存中呢？应该会先搜索树吧，如果搜索树的话那就读磁盘了啊，不清楚是否有其他机制可以判断。","like_count":0},{"had_liked":false,"id":357685,"user_name":"多年以后","can_delete":false,"product_type":"c1","uid":1911661,"ip_address":"湖北","ucode":"D70E7A1ABE0F39","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","comment_is_top":false,"comment_ctime":1663559889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663559889","product_id":100020801,"comment_content":"想请教个关于索引的问题，查询或者修改的时候用到索引，是只加载用到的页，还是会把整个B+索引树都加载到内存？","like_count":0},{"had_liked":false,"id":356802,"user_name":"小葱拌白菜","can_delete":false,"product_type":"c1","uid":1530050,"ip_address":"北京","ucode":"C27AA5D81F671F","user_header":"","comment_is_top":false,"comment_ctime":1662602667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662602667","product_id":100020801,"comment_content":"老师，我有一个疑问，假设有一个表，有id, a, b三个字段，然后给a建立普通索引<br>此时我update语句，将id=1的数据的 a变成3，此时因为内存里没有id=1的数据，所以会进去 change buff里面，然后立刻有一条查询a=3的select语句进来，因为磁盘里id=1这条数据不属于此类，不会刷新进内存中，也就不会merge chang buff，所以是也查不到这条数据吗？还是因为redo log, 所以能被查到啊？","like_count":0},{"had_liked":false,"id":353359,"user_name":"吃水不用钱","can_delete":false,"product_type":"c1","uid":1797135,"ip_address":"广东","ucode":"8A5D5978F0D4E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/6c/0f/7d242cc2.jpg","comment_is_top":false,"comment_ctime":1659403800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659403800","product_id":100020801,"comment_content":"先回答问题#会出现这种情况，但这种情况对客户端来说是有感知的，因为没有能够写入数据到redo log，没有conmit ，因此在客户端看来，事务执行失败了，可以通过重试来解决问题。","like_count":0},{"had_liked":false,"id":351831,"user_name":"雪落","can_delete":false,"product_type":"c1","uid":1240357,"ip_address":"","ucode":"3D146C9661A0FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/25/3aa380d9.jpg","comment_is_top":false,"comment_ctime":1658219585,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1658219585","product_id":100020801,"comment_content":"请教老师个问题，现在有一个表，只有一个唯一主键，然后我对这个表做了一次更新操作，这次更新操作更新了表中的所有数据，假设表中的部分数据页在buffer pool，一部分不在，那此时在内存buffer pool 中的数据会被直接更新，然后页变成脏页；不在buffer pool的数据就只记录了change buffer，如果我现在又向数据库插入了一条新数据，这个时候只能读取到相应的数据页到内存，并且更改数据页的内容，此时如果刷脏页的线程把脏页刷回了磁盘，之后change buufer 开始merge，这个时候会不会对新插入的数据也进行merge，或者对之前已经merge的数据也进行merge，如果没有，他咋识别的呢...","like_count":0},{"had_liked":false,"id":347122,"user_name":"苏成","can_delete":false,"product_type":"c1","uid":2668694,"ip_address":"","ucode":"80A8E7B243DD73","user_header":"https://static001.geekbang.org/account/avatar/00/28/b8/96/716ba431.jpg","comment_is_top":false,"comment_ctime":1653726967,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1653726967","product_id":100020801,"comment_content":"1.change buffer是什么？使用场景？什么时候写入？<br>2.插入一条新记录，唯一索引和普通索引的过程？<br>3.如何选择索引呢？<br>4.change buffer和redo log的联系和区别和作用？","like_count":0},{"had_liked":false,"id":346165,"user_name":"w 🍍","can_delete":false,"product_type":"c1","uid":1228290,"ip_address":"","ucode":"F2386C971EC58B","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/02/43202976.jpg","comment_is_top":false,"comment_ctime":1652863589,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1652863589","product_id":100020801,"comment_content":"“change buffer 主要节省的则是随机读磁盘的 IO 消耗”  有个疑问是，如果不读取的话，如何知道update、delete语句的影响条数（affected rows）？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577860,"discussion_content":"如有非唯一索引k(column),我觉得做法应该是，查找二级索引k的所有非叶子节点（当然也可能部分），因为非叶子结点已经包含了所有的column的信息，而且正常非叶子节点都是在内存中的，所以也就不需要IO操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656394696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344986,"user_name":"好好学习","can_delete":false,"product_type":"c1","uid":1110299,"ip_address":"","ucode":"327552B5924389","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/1b/d3165de8.jpg","comment_is_top":false,"comment_ctime":1651913780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651913780","product_id":100020801,"comment_content":"老师，请问下这个changebuffer，如果有部分业务场景是需要用changebuffer来减少随机读写IO的，但是有部分业务场景是属于读多写少的，或者说是更新完之后需要马上读的，这种可以手动控制这条语句不走changebuffer吗。","like_count":0},{"had_liked":false,"id":342628,"user_name":"源不息","can_delete":false,"product_type":"c1","uid":2739750,"ip_address":"","ucode":"2B9FF0B611BC9E","user_header":"https://static001.geekbang.org/account/avatar/00/29/ce/26/f493253d.jpg","comment_is_top":false,"comment_ctime":1650368853,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650368853","product_id":100020801,"comment_content":"老师请问：只有索引才会使用 change buffer吗，其他的地方有使用吗？","like_count":0},{"had_liked":false,"id":341644,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1649748631,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649748631","product_id":100020801,"comment_content":"普通索引与唯一索引的 读读区别<br>1，根据普通索引树查到匹配的行数据时，还要继续向下查询，直到查询到第一个不匹配的数据为止。当第一个不匹配的数据在下一个数据页的情况，影响较大，其它情况只是多扫描一行数据而已。<br>2，根据唯一索引树查到匹配的行数据时，就可以直接返回了。<br>普通索引与唯一索引的更新区别<br>当行数据在内存中时，普通索引直接更新内存即可，唯一索引先判断后直接更新内存。<br>而当行数据不在内存中时，普通索引的更新可以将更新操作记录到 changebuffer中，等到下次查询时，再将changebuffer与行数据merge加载到内存。而唯一索引的更新必需将行数据从磁盘中加载到内存再做更新，无法应用到changebuffer。<br>changebuffer 与 redolog 的作用区别<br>redo log 解决的是  磁盘IO随机写的问题。<br>changebuffer 解决的是磁盘IO随机读的问题，主要应用于更新频繁，查询不频繁的场景。","like_count":0},{"had_liked":false,"id":341132,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1649383304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649383304","product_id":100020801,"comment_content":"我听说Oracle就是把持久化的数据文件丢了，也能靠redo log文件恢复。看同学们的评论，MySQL也能这么玩吧","like_count":0},{"had_liked":false,"id":341077,"user_name":"Geek_510666","can_delete":false,"product_type":"c1","uid":2941277,"ip_address":"","ucode":"111F869DDE2EB9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKEkqJxpmLX8mOxVwbBMynxzRXqiaCpnTBvGEesXiajsutj1tqoGfcJEyAbPWE5OD4Omouo5N8ZmXEw/132","comment_is_top":false,"comment_ctime":1649332809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649332809","product_id":100020801,"comment_content":"例如一张 user 表中有三个字段 id（主键）、username（普通索引）、id_card（唯一索引）、age（普通字段）。<br><br>执行：INSERT INTO user VALUES(1, ’autumn’, 1001, 15);<br><br>插入场景是：<br><br>1. id 和 id_card 都是唯一索引需要判断数据页（各自的索引数据页）所以无法使用 change buffer。<br>2. username 是普通索引无需判断数据页中的数据是否存在，如果该字段的数据页存在内存中直接插入不存在则放入到 change buffer 中。<br>3. 添加数据页（存放数据的数据页）直接插入。<br>4. 当插入成功后，读取数据的时候再将 change buffer 中的数据与数据页（username的索引页）合并。<br><br>执行：UPDATE  user SET username = ‘11’ ,age=’12’ WHERE = id = 1;<br><br>修改场景是：<br><br>1. id 和 id_card 都是唯一索引需要判断数据页（各自的索引数据页）所以无法使用 change buffer。<br>2. username 是普通索引无需判断数据页中的数据是否存在，如果该字段的数据页存在内存中直接更新不存在则放入到 change buffer 中。<br>3. 修改数据页（存放数据的数据页）。<br>4. 修改成功后，读取数据的时候再将 change buffer 中的数据与数据页（username的索引页）合并。<br><br>结论：change buffer 只会影响普通索引插入数据页（当前索引的数据页）的操作。<br><br>老师这样理解是否是正确的呢？","like_count":0},{"had_liked":false,"id":340405,"user_name":"金金","can_delete":false,"product_type":"c1","uid":2843604,"ip_address":"","ucode":"807EDDCDB2E939","user_header":"https://static001.geekbang.org/account/avatar/00/2b/63/d4/b63373c3.jpg","comment_is_top":false,"comment_ctime":1648801290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648801290","product_id":100020801,"comment_content":"有一个问题，既然mysql是WAL，为什么图二的流程是先更新内存再写redo-log呢？<br>","like_count":0},{"had_liked":false,"id":339723,"user_name":"Bruincn","can_delete":false,"product_type":"c1","uid":2686033,"ip_address":"","ucode":"05A1D3672206F9","user_header":"http://thirdwx.qlogo.cn/mmopen/KFgDEHIEpnT0EXnh02VHqPr1CvGd7ibCG59k3vKzibdYjIYibOZvtIDEU7WXYiaicgntE9NEDqamZh0ZKZ5zt3Wja1C8tnoc3iaMZv/132","comment_is_top":false,"comment_ctime":1648321516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648321516","product_id":100020801,"comment_content":"如果要更新的数据页在内存中，那么直接更新内存。请问内存更新结束后会立即刷盘吗？若不刷盘，是不是不能保证数据持久化？","like_count":0},{"had_liked":false,"id":337773,"user_name":"LWD","can_delete":false,"product_type":"c1","uid":1986739,"ip_address":"","ucode":"DDA444DB113C01","user_header":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","comment_is_top":false,"comment_ctime":1647054887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647054887","product_id":100020801,"comment_content":"老师在吗？change buffer可以避免随机读且记录的是页地址即物理日志,那它是怎么知道这个语句对应的页在哪里呢？","like_count":0},{"had_liked":false,"id":337187,"user_name":"程序猿阿星","can_delete":false,"product_type":"c1","uid":1102568,"ip_address":"","ucode":"B8AB0CBD063EC4","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/e8/9046ae29.jpg","comment_is_top":false,"comment_ctime":1646666638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646666638","product_id":100020801,"comment_content":"有些疑问，change buffer合并操作，是合并到数据页还是索引页","like_count":0},{"had_liked":false,"id":335817,"user_name":"依然didala","can_delete":false,"product_type":"c1","uid":1048487,"ip_address":"","ucode":"085ADABE1972F8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/a7/977e479c.jpg","comment_is_top":false,"comment_ctime":1645700372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645700372","product_id":100020801,"comment_content":"14.5.2 Change Buffer：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;innodb-change-buffer.html。","like_count":0},{"had_liked":false,"id":335556,"user_name":"梯田","can_delete":false,"product_type":"c1","uid":1021683,"ip_address":"","ucode":"671236E62375D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/f3/a4a680da.jpg","comment_is_top":false,"comment_ctime":1645585495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645585495","product_id":100020801,"comment_content":"今天测试的时候碰到一个问题，如果老师能看到，希望老师解惑下，谢谢!<br><br>表结构:<br>CREATE TABLE `user` (<br>  `id` int(11) NOT NULL,<br>  `account` varchar(255) COLLATE utf8_unicode_ci NOT NULL,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `uk_account` (`account`) USING BTREE<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;<br><br>码字顺序为操作时序.<br><br>第一步:<br>Session A:<br>begin;<br>insert into user values (1, &#39;uu1&#39;);<br>第二步:<br>Session B;<br>begin;<br>insert into user values (2, &#39;uu2&#39;);<br><br>第三步:<br>Session A<br>insert into user values (3, &#39;uu2&#39;);<br>(等待锁ing)<br><br>第四步:<br>Session B<br>commit;<br><br>结果:<br>Session A 提示(1062, &quot;Duplicate entry &#39;uu2&#39; for key &#39;uk_account&#39;&quot;).<br><br>查询user表数据，Session A的第一条数据已经写入，这块我不理解，希望老师解答一下.<br><br>","like_count":0},{"had_liked":false,"id":335335,"user_name":"鲁·本","can_delete":false,"product_type":"c1","uid":1209939,"ip_address":"","ucode":"F1DEB30C21B48E","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/53/21d62a23.jpg","comment_is_top":false,"comment_ctime":1645455318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645455318","product_id":100020801,"comment_content":"老师，是不是update语句执行失败了那么紧跟着的select语句就是一致性读，如果更新成功了就是当前读？","like_count":0},{"had_liked":false,"id":334651,"user_name":"李維道","can_delete":false,"product_type":"c1","uid":1926057,"ip_address":"","ucode":"9A16ECAB2522E3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/63/a9/abed781e.jpg","comment_is_top":false,"comment_ctime":1645059059,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1645059059","product_id":100020801,"comment_content":"老师好，如果我关闭了唯一性索引的检查，是否在增删改时，就会利用上change buffer 了？","like_count":0},{"had_liked":false,"id":334650,"user_name":"李維道","can_delete":false,"product_type":"c1","uid":1926057,"ip_address":"","ucode":"9A16ECAB2522E3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/63/a9/abed781e.jpg","comment_is_top":false,"comment_ctime":1645059044,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1645059044","product_id":100020801,"comment_content":"老师好，如果我关闭了唯一性索引的检查，是否在增删改时，就会利用上change buffer 了？","like_count":0},{"had_liked":false,"id":330865,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1642233706,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642233706","product_id":100020801,"comment_content":"我理解：在没能命中缓存，需要从磁盘读取数据后，都要遍历整个change buffer，若是change buffer有上百G ，那每次遍历change buffer会不会成为瓶颈？","like_count":0},{"had_liked":false,"id":330634,"user_name":"Geek_e5f501","can_delete":false,"product_type":"c1","uid":2317270,"ip_address":"","ucode":"72A713EBAAFE41","user_header":"","comment_is_top":false,"comment_ctime":1642079255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642079255","product_id":100020801,"comment_content":"想问一个问题，如果更新的这个字段是一个普通索引，那么是需要先找到这个普通索引的B+树将旧值删除，再插入新值吗。这个过程是怎么样的？","like_count":0},{"had_liked":false,"id":329991,"user_name":"。。","can_delete":false,"product_type":"c1","uid":2853618,"ip_address":"","ucode":"A52A6043D27D87","user_header":"https://static001.geekbang.org/account/avatar/00/2b/8a/f2/6c6f7886.jpg","comment_is_top":false,"comment_ctime":1641716480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641716480","product_id":100020801,"comment_content":"老师，我有几个疑惑<br>1.文中描述了在对数据更新的时候，普通索引可以通过 change buffer来减少每次更新都要读盘的问题，我对这个更新的理解是在维护更新的各个字段上的值，或者说是在维护索引树，那么对于没有索引的字段呢，我理解的是维护主键索引树中叶子节点的数据，因为主键索引树的叶节点存储了该行的值，主键索引又属于唯一索引，那么更新没有索引的字段的时候，需要先把主键索引树的数据页读到内存，然后在内存中把这个没有索引的字段更新？不知道我这么理解对不对😂<br>2.由于每次查询操作，都需要读磁盘数据到内存中，我疑惑的点是，内存中的数据什么时候失效呢，总不能一直存在内存中把，如果一次读取的数据量过大，内存不够了怎么办呢？<br>3.在实际的开发中，什么时候去加索引呢，总不能刚写完一个sql就加吧？我感觉应该是在已经明确知道哪些查询慢，哪些是热点数据的情况下，在去加索引，或者后期优化的时候去加索引，不知道说的对不对，主要是没有太多的实际经验🤣，还有就是索引应该由谁去加呢，是DBA，还是开发呢，如果是 DBA的话，岂不是要看程序中别人写的SQL吗，那岂不是一件很痛苦的事情吗？","like_count":0},{"had_liked":false,"id":329375,"user_name":"恐龙","can_delete":false,"product_type":"c1","uid":1323030,"ip_address":"","ucode":"7B85A27E40D261","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/16/4773d604.jpg","comment_is_top":false,"comment_ctime":1641306400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641306400","product_id":100020801,"comment_content":"按照“写多读少”适合普通索引+change buffer的原理，在需要源库往目标库备份转移数据的场景，目标库的所有唯一索引是不是都可以优化为普通索引？","like_count":0},{"had_liked":false,"id":328928,"user_name":"邓鹏飞","can_delete":false,"product_type":"c1","uid":2636070,"ip_address":"","ucode":"857EF8C861C870","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6YQqjOk5gJSdZxAibnwl0lwRI6YQkbIbYbkS9Y4hQncHHiaFqk7RQAEFq5ibm9zPf75ewzPdKNHibxw/132","comment_is_top":false,"comment_ctime":1640940042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640940042","product_id":100020801,"comment_content":"老师，唯一索引下的修改操作不需要唯一性判断，此时和普通索引就一样了，怎么还是不能用change buffer呢？","like_count":0},{"had_liked":false,"id":325040,"user_name":"超","can_delete":false,"product_type":"c1","uid":1202105,"ip_address":"","ucode":"F33DC41DEC04AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/b9/5b317572.jpg","comment_is_top":false,"comment_ctime":1638784974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638784974","product_id":100020801,"comment_content":"老师您好,请教个问题 change buffer 为什么要持久化到ibdata1 呀?<br><br>change buffer 插入时需要写 redo log。当宕机时， change buffer 丢失，redo log 记录了数据的完整修改记录，恢复时根据 redo log 重建 change buffer 。感觉不用持久化也可以啊 <br><br>不太清楚 这个change buffer 落盘到 ibdata1 的意义.  要是刷脏页时落盘到 ibd 我还能理解点","like_count":0},{"had_liked":false,"id":324096,"user_name":"LKJ","can_delete":false,"product_type":"c1","uid":1952586,"ip_address":"","ucode":"395F8315562A36","user_header":"https://static001.geekbang.org/account/avatar/00/1d/cb/4a/63656c69.jpg","comment_is_top":false,"comment_ctime":1638287167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638287167","product_id":100020801,"comment_content":"作者您好，Innodb每张表都会有主键，如果没有主键也会默认分配6个字节大小的指针，那Innodb的数据更新操作，不是用不到change buffer了","like_count":0},{"had_liked":false,"id":323506,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1637940164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637940164","product_id":100020801,"comment_content":"感觉 作者在文章里没有说清楚 change buffer 是针对二级索引的，change buffer的收益在二级索引，并非聚簇索引(表数据对应的数据页)，文章中所说的数据页，都是指二级索引的数据页。应该明确说明，不然太容易误解为是主键索引了。","like_count":0},{"had_liked":false,"id":322601,"user_name":"K","can_delete":false,"product_type":"c1","uid":1151163,"ip_address":"","ucode":"0ED6CDDE3A8F5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/90/bb/61dfc022.jpg","comment_is_top":false,"comment_ctime":1637495126,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637495126","product_id":100020801,"comment_content":"老师，请教下，insert 语句的数据会不会放在change buffer里，insert语句放入到change buffer 会判断为聚簇索引和二级索引吗","like_count":0},{"had_liked":false,"id":322599,"user_name":"K","can_delete":false,"product_type":"c1","uid":1151163,"ip_address":"","ucode":"0ED6CDDE3A8F5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/90/bb/61dfc022.jpg","comment_is_top":false,"comment_ctime":1637494324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637494324","product_id":100020801,"comment_content":"老师，请教下对于写多读少的业务，change_buffer 设置与Buffer Pool 的比例为50是否有利","like_count":0},{"had_liked":false,"id":321840,"user_name":"白菜","can_delete":false,"product_type":"c1","uid":2230467,"ip_address":"","ucode":"C3AE527ECE970E","user_header":"https://static001.geekbang.org/account/avatar/00/22/08/c3/bf4fe285.jpg","comment_is_top":false,"comment_ctime":1637060845,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1637060845","product_id":100020801,"comment_content":"有个疑问：<br>UPDATE table SET a=a+1 WHERE id=1 可以用到 change buffer 吗？<br> ","like_count":0},{"had_liked":false,"id":321658,"user_name":"树心","can_delete":false,"product_type":"c1","uid":1589523,"ip_address":"","ucode":"6C329F0FF798B9","user_header":"https://static001.geekbang.org/account/avatar/00/18/41/13/ab14ad25.jpg","comment_is_top":false,"comment_ctime":1636980552,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1636980552","product_id":100020801,"comment_content":"小结整理<br>09 | 普通索引和唯一索引，应该怎么选择？<br>查询过程<br>更新过程<br>change buffer 的使用场景<br>索引选择和实践<br>change buffer 和 redo log","like_count":0},{"had_liked":false,"id":321489,"user_name":"luxinfeng","can_delete":false,"product_type":"c1","uid":1259853,"ip_address":"","ucode":"51D0046C4D31AD","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/4d/9ce28826.jpg","comment_is_top":false,"comment_ctime":1636902386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636902386","product_id":100020801,"comment_content":"向大家请教个问题，如果数据库是主从库的模式，一般情况下是主库写，从库读。我在代码中更新一条记录，然后立刻去读一条记录，这种情况下是去读内存还是读从库啊？我总感觉是从库，因为我在实际操作中发现更新后立刻去读会存在读不到对应记录的情况，如果是读内存的话不应该存在这种情况吧？","like_count":0},{"had_liked":false,"id":320685,"user_name":"🌻","can_delete":false,"product_type":"c1","uid":1509651,"ip_address":"","ucode":"9B4D8CA8C09A70","user_header":"https://static001.geekbang.org/account/avatar/00/17/09/13/d762ce74.jpg","comment_is_top":false,"comment_ctime":1636451388,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636451388","product_id":100020801,"comment_content":"从普通索引和唯一索引的选择开始，和你分享了数据的查询和更新过程，然后说明了 change buffer 的机制以及应用场景，最后讲到了索引选择的实践。<br><br>数据查询过程：<br>1. 数据在内存中：从内存中读取数据<br>2. 数据在磁盘中：把数据页从磁盘中读取到内存中，从内存中读取数据<br><br>更新数据过程：<br>1. 数据在内存中：直接更新数据<br>2. 数据在磁盘中：更新数据操作写入change buffer, 待下次有查询将数据读取到内存中，更新change buffer。  <br><br>change buffer 提高了更新速度。如果更新的内容会很快被读写，就不适合使用change buffer, change buffer 适合使用在不常读写场景，如日志，账目等情况。<br>","like_count":0},{"had_liked":false,"id":319965,"user_name":"路遥知码力","can_delete":false,"product_type":"c1","uid":2698825,"ip_address":"","ucode":"1EF9655BEDAFA6","user_header":"https://static001.geekbang.org/account/avatar/00/29/2e/49/a04480a9.jpg","comment_is_top":false,"comment_ctime":1636021622,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636021622","product_id":100020801,"comment_content":"大概理解的就是大部分情况下是update、delete时changebuffer有用，比如update test set 普通索引项 = 11 where 索引a = a ，索引a不管是普通还是主键都不影响普通索引项，因为更新的是普通索引项，而这一项不需要检查重复冲突，所以不需要把数据页从磁盘加载到内存，这样就直接写changebuffer。<br>而insert时候，大部分表都是有主键，我在考虑的一个问题就是主键都是自增的，如果不指定新id的值，这样是否就不会从磁盘读数据来判断数据是否重复。","like_count":0},{"had_liked":false,"id":319911,"user_name":"上海","can_delete":false,"product_type":"c1","uid":2678569,"ip_address":"","ucode":"6A4F9D80D25028","user_header":"https://static001.geekbang.org/account/avatar/00/28/df/29/3c956177.jpg","comment_is_top":false,"comment_ctime":1636007591,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636007591","product_id":100020801,"comment_content":"这里想请教老师一下：<br>按照官方的说法，因为对二级索引的每一次更新影响到的索引页都可能不是相邻的，为了减少磁盘的随机io访问，引入了change buffer。另外，chang buffer的刷盘策略是很buffer pool保持一致的。<br><br>按照老师的说法：<br>1. 唯一索引因为要判断数据是否已存在，需要先将索引页从磁盘上读出来，这个时候必然已经发生了merge，所以不能应用change buffer。<br>2. merge=purge？<br><br><br>所以我有以下问题：<br>1.  即使唯一索引的每次更新都会引发merge，但是依然可以通过延迟刷盘来积累更多的相邻索引页，从而减少随机磁盘io访问<br>2. Merge跟刷盘没有必然的因果关系吧","like_count":0},{"had_liked":false,"id":319909,"user_name":"上海","can_delete":false,"product_type":"c1","uid":2678569,"ip_address":"","ucode":"6A4F9D80D25028","user_header":"https://static001.geekbang.org/account/avatar/00/28/df/29/3c956177.jpg","comment_is_top":false,"comment_ctime":1636007401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636007401","product_id":100020801,"comment_content":"这里想请教老师一下：<br>按照官方的说法，因为对二级索引的每一次更新影响到的索引页都可能不是相邻的，为了减少磁盘的随机io访问，引入了change buffer。另外，chang buffer的刷盘策略是很buffer pool保持一致的。<br><br>按照老师的说法：<br>1. 唯一索引因为要判断数据是否已存在，需要先将索引页从磁盘上读出来，这个时候必然已经发生了merge，所以不能应用change buffer。<br>2. merge=purge？<br><br><br>所以我有以下问题：<br>1.  即使唯一索引的每次更新都会引发merge，但是依然可以通过延迟刷盘来积累更多的相邻索引页，从而减少随机磁盘io访问<br>2. Merge跟刷盘没有必然的因果关系吧","like_count":0},{"had_liked":false,"id":319230,"user_name":"吟游诗人","can_delete":false,"product_type":"c1","uid":2036366,"ip_address":"","ucode":"27CA90D3D9C5B6","user_header":"","comment_is_top":false,"comment_ctime":1635687152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635687152","product_id":100020801,"comment_content":"老师有个疑问，请问在数据页没有加载到内存而又进行更新操作的情况下，mysql怎么知道哪些数据记录的更新需要放在一个change buffer页呢","like_count":0},{"had_liked":false,"id":319102,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1635585100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635585100","product_id":100020801,"comment_content":"思考题：我个人的理解，如果机器掉电，Change Buffer存在于内存中是有可能丢失的，但如果Change Buffer的内容已经Merge或持久化了，就不会丢失；另外，写数据时，由于同时写入了redo log，因此，即便Change Buffer内容丢失了，也可以通过redo log进行恢复。","like_count":0},{"had_liked":false,"id":316037,"user_name":"山渐青","can_delete":false,"product_type":"c1","uid":2631809,"ip_address":"","ucode":"1C9753865EBD6C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/pBwb5icFhsRZCumouaCqOIERPPFEOSOYQiaRBNQmMX4icYb4wz0HbibPt57Mj2qHLAo3fZF0Tvj4dL7EWThL2pA9yg/132","comment_is_top":false,"comment_ctime":1634113394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634113394","product_id":100020801,"comment_content":"如果更新的字段是非唯一索引字段，那么此时还会把数据拉到内存中校验唯一索引字段的唯一性么","like_count":0},{"had_liked":false,"id":315821,"user_name":"盘胧","can_delete":false,"product_type":"c1","uid":1650748,"ip_address":"","ucode":"5386CC4C92ECC2","user_header":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","comment_is_top":false,"comment_ctime":1634009802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634009802","product_id":100020801,"comment_content":"相关change buffer 的官方文档：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;innodb-change-buffer.html<br>相关change buffer 问题的官方文档：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;faqs-innodb-change-buffer.html<br>都是mysql8.0 的奥","like_count":0},{"had_liked":false,"id":314495,"user_name":"一魄","can_delete":false,"product_type":"c1","uid":1134574,"ip_address":"","ucode":"71541125D4AA5A","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/ee/bd08cfab.jpg","comment_is_top":false,"comment_ctime":1633144335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633144335","product_id":100020801,"comment_content":"change buffer 会持久化，但这只是记录变更的数据，change buffer 的持久化有失效清除机制吗？","like_count":0},{"had_liked":false,"id":313534,"user_name":"·_·","can_delete":false,"product_type":"c1","uid":1196341,"ip_address":"","ucode":"67EF0EAA031C4E","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/35/556fc04c.jpg","comment_is_top":false,"comment_ctime":1632477165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632477165","product_id":100020801,"comment_content":"如果只考虑change_buffer 的情况下，插入数据确实用普通索引比较快<br>但如果考虑到表锁和行锁，并发条件，唯一索引是不是更好。","like_count":0},{"had_liked":false,"id":313103,"user_name":"Geek_74bd7d","can_delete":false,"product_type":"c1","uid":2003853,"ip_address":"","ucode":"DA7B18B5B88994","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Nr5hUtYzFZHj0uibAAdpVoOFMQX4iaibwyGQolqcnJ9iaLR2CAt7JYWjLWmzkUCiaUEHPhjKG0eVNWtP9U1nmClRcxg/132","comment_is_top":false,"comment_ctime":1632280332,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1632280332","product_id":100020801,"comment_content":"有一个疑问：如果一条写操作，既有对主键索引写，又有对普通索引写。同一条记录会主键索引不用change buffer，普通索引用change buffer吗？change buffer是针对这个字段的修改还是整条记录？","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398780,"discussion_content":"对的，就是主键索引不用change buffer, 普通索引用change buffer。change buffer记录的是针对哪个页修改了什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632841551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313084,"user_name":"Geek_71d0f8","can_delete":false,"product_type":"c1","uid":2766787,"ip_address":"","ucode":"9CFD89F53A3625","user_header":"","comment_is_top":false,"comment_ctime":1632274665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632274665","product_id":100020801,"comment_content":"+ 一致性视图为什么可以很快创建？<br>  + 这里的一致性视图不是拍的数据库的快照，而是取的未提交事务的数组和已创建的最大事务ID。一个数组和一个值所以一致性视图创建的很快<br>  + 未提交事务的最小事务ID是低水位，已创建的最大事务ID是高水位<br>  + 所谓的多版本是指在数据行上，每个事务ID更新完后形成一个版本链。<br><br>+ 事务的可重读功能是怎么实现的？<br>  + 可重读的核心就是快照读，判断方法是自己事务的修改必然是可见，其他事务的需要先判断版本是否提交<br>    + 版本没有提交，那么不可见<br>    + 版本已经提交<br>      + 在一致性视图创建前提交，那么数据可见<br>      + 在一致性视图创建后提交，那么数据不可见<br>  + 在更新操作（insert、update、delete、select ..... for update、select ... in share model）中会触发当前读，如果当前记录的行被其他事务占用的话，就进入锁等待。上述更新操作中，最后一个操作会加S锁，其他的加的都是X锁<br>    + 规则：总是读取已经提交的最新版本，相当于之前读到的数据已经作废，从新开始读。<br><br>+ 读提交和可重读的区别<br>  + 读提交生成一致性视图的时机，每个语句执行前都会生成一个视图<br>  + 可重读生成一致性视图的时机，在事务开始时生成一致性视图<br>  + 但二者均遵守可重读的判断逻辑（参照上面即可）","like_count":0},{"had_liked":false,"id":312215,"user_name":"克克","can_delete":false,"product_type":"c1","uid":2742451,"ip_address":"","ucode":"0FA7CA5AB26A6F","user_header":"https://static001.geekbang.org/account/avatar/00/29/d8/b3/38105dbb.jpg","comment_is_top":false,"comment_ctime":1631686525,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1631686525","product_id":100020801,"comment_content":"老师你好，对于redo log我其实还有个疑问。对于唯一索引没有change buffer的情况下，redo log数据还没有写进库里，并且内存中的数据也被清了，那读到相关数据的时候，mysql是怎么处理的呢","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398788,"discussion_content":"你说的内存中的数据被清了，应该指的是mysql服务器重启了，这个时候会走崩溃恢复的逻辑，根据redo log找到相应的页加载到内存中，并merge redo log到内存页，在合适的时机脏页刷盘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632842056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2742451,"avatar":"https://static001.geekbang.org/account/avatar/00/29/d8/b3/38105dbb.jpg","nickname":"克克","note":"","ucode":"0FA7CA5AB26A6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":402798,"discussion_content":"好的，谢谢，大致明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633950908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":398788,"ip_address":""},"score":402798,"extra":""}]}]},{"had_liked":false,"id":311331,"user_name":"xtwny","can_delete":false,"product_type":"c1","uid":1473293,"ip_address":"","ucode":"C318D8D80C5A3C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIxD4lHNc9y1aFf4yU6vNPVqicMs3947ctnmymKSl6DGDKN9IXVAbtoxON8ciaAB26NF81TlBOWIwiaQ/132","comment_is_top":false,"comment_ctime":1631175557,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1631175557","product_id":100020801,"comment_content":"老师，请教一下，有无change buffer我的理解不影响redo log的记录以及格式才对，redo log与change buffer有什么联系吗？还是说恢复changeBuffer要用redo log？还有change buffer我的理解不需要持久化与恢复啊。比如宕机恢复时，根据redo log能做到crash-safe，进行数据的恢复，此时changge buffer恢复与否没什么实质意义啊。希望老师能帮忙解答一下<br>","like_count":0,"discussions":[{"author":{"id":1473293,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIxD4lHNc9y1aFf4yU6vNPVqicMs3947ctnmymKSl6DGDKN9IXVAbtoxON8ciaAB26NF81TlBOWIwiaQ/132","nickname":"xtwny","note":"","ucode":"C318D8D80C5A3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393641,"discussion_content":"老师能看到吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631530759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310833,"user_name":"cz","can_delete":false,"product_type":"c1","uid":1008468,"ip_address":"","ucode":"96385190176F78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/54/c9475cd0.jpg","comment_is_top":false,"comment_ctime":1630927595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630927595","product_id":100020801,"comment_content":"https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;innodb-change-buffer.html<br><br>文章着重强调了唯一索引，因为所有主键索引都是唯一的，所以buffer pool只能作用于普通索引中的非unique索引数据页。<br><br>The change buffer is a special data structure that caches changes to secondary index pages when those pages are not in the buffer pool. ","like_count":0},{"had_liked":false,"id":310132,"user_name":"A 拽丫头","can_delete":false,"product_type":"c1","uid":1470434,"ip_address":"","ucode":"F875D99D18DF6E","user_header":"https://static001.geekbang.org/account/avatar/00/16/6f/e2/f3b05833.jpg","comment_is_top":false,"comment_ctime":1630494770,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1630494770","product_id":100020801,"comment_content":"看到唯一索引和普通索引在更新过程的区别<br>普通索引在更新操作时，不用判断唯一性所以当数据所在的数据页不在内存中时，可以讲操作先写入  change buffer ，等待触发merge 操作。<br>唯一索引因为要判断唯一性，所以当数据所在数据页不存在内存中时，要将数据页加载到内存才能判断<br><br>但是第一篇文章中说，更新操作都是先读取数据给执行器，执行器拿到这一行数据之后，在做更新操作，那么在第一步获取数据时，就意味着必须将数据页加载到内存中了<br><br>这样看，两者有些矛盾？那到底是什么样子的呢？","like_count":0},{"had_liked":false,"id":310090,"user_name":"Geek_e6ffab","can_delete":false,"product_type":"c1","uid":1574298,"ip_address":"","ucode":"4782DBCF0B4829","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7hsTibhnpQP19W3lBohXDnS4sGsrOpkCJgIQr0E3m62nmXOwiatNDBDxcMCkTlDw9B7j4xuERtvmA/132","comment_is_top":false,"comment_ctime":1630482874,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1630482874","product_id":100020801,"comment_content":"在不读磁盘的情况下，delete&#47;update影响行数如何获取？","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398808,"discussion_content":"不可能完全不读盘的，只是说可能某些二级索引可以不用读盘，不管做的是insert, update还是delete操作，都涉及到主键索引上数据的更新，主键索引的相关页都是需要载入内存的，通过主键索引的变化就可以获取影响行数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632842820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308251,"user_name":"颜海航","can_delete":false,"product_type":"c1","uid":1308159,"ip_address":"","ucode":"5644F6328BF901","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/ff/523fb378.jpg","comment_is_top":false,"comment_ctime":1629472548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629472548","product_id":100020801,"comment_content":"按页读取 是InnoDB的四大特性的预读吗？<br>change buffer是不是也叫insert buffer ，也是特性之一？","like_count":0},{"had_liked":false,"id":306025,"user_name":"thewangzl","can_delete":false,"product_type":"c1","uid":1006661,"ip_address":"","ucode":"5968FDED0C5AC8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/45/2fa66e67.jpg","comment_is_top":false,"comment_ctime":1628306202,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1628306202","product_id":100020801,"comment_content":"请教一个问题：增加数据，由外部提供id主键的值，需要将数据读到内存判断主键是否冲突吗？","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398811,"discussion_content":"需要将主键索引相关页载入内存，判断是否冲突","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632842913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305807,"user_name":"黄婷婷","can_delete":false,"product_type":"c1","uid":1467134,"ip_address":"","ucode":"8B65636C9197A2","user_header":"https://static001.geekbang.org/account/avatar/00/16/62/fe/6d2fa6b9.jpg","comment_is_top":false,"comment_ctime":1628174575,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1628174575","product_id":100020801,"comment_content":"老师，请问系统表空间（ibdata1）里面存储的是什么？系统表空间的作用是什么？","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398813,"discussion_content":"系统表空间存储的是系统参数，比如数据字典，change buffer，undo log等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632843016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304989,"user_name":"桀","can_delete":false,"product_type":"c1","uid":1204584,"ip_address":"","ucode":"939C1EEFCFC08E","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/68/e5f0ba39.jpg","comment_is_top":false,"comment_ctime":1627735041,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1627735041","product_id":100020801,"comment_content":"想请问一下老师，有个地方很困惑，主键索引不就是唯一索引，那么在数据库某表只有一个主键索引的情况下，执行更新语句会用到change buffer吗？","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398815,"discussion_content":"用不了，change buffer只对非唯一索引生效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632843061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304668,"user_name":"大湿兄","can_delete":false,"product_type":"c1","uid":1660151,"ip_address":"","ucode":"587EBBBED90182","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL17rDiannrcyaUB5X6haqLic1183mfwyunJicRO8IYV9U8MaYiaZp8jRnW5kLQIqRmwTaPGIEVQZL5Uw/132","comment_is_top":false,"comment_ctime":1627545420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627545420","product_id":100020801,"comment_content":"mysql&gt; insert into t(id,k) values(id1,k1),(id2,k2); <br>普通索引更新后是否还需更新主键索引呢，如果要的话我直接更新主键索引，不要普通索引，这样不就少了普通索引更新的性能消耗了吗。更新完成后再建普通索引，这样是否会好一些。","like_count":0},{"had_liked":false,"id":303963,"user_name":"FAN_范ˉ","can_delete":false,"product_type":"c1","uid":1422210,"ip_address":"","ucode":"9B5999A55B217A","user_header":"https://static001.geekbang.org/account/avatar/00/15/b3/82/3c1b7a20.jpg","comment_is_top":false,"comment_ctime":1627130003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627130003","product_id":100020801,"comment_content":"老师想请教下，文中说的从业务层保证唯一性怎么保证呢？如果在一个事务中，先select看是否存在，如果不存在再插入，一是无法保证并发时两条语句中间就插入了对应数据，二是感觉这种方式还不如唯一键效率高呢","like_count":0},{"had_liked":false,"id":303899,"user_name":"赴","can_delete":false,"product_type":"c1","uid":2675954,"ip_address":"","ucode":"D47B3179BE3950","user_header":"https://static001.geekbang.org/account/avatar/00/28/d4/f2/3c0bfa0e.jpg","comment_is_top":false,"comment_ctime":1627057235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627057235","product_id":100020801,"comment_content":"mysql&gt; insert into t(id,k) values(id1,k1),(id2,k2);<br>假如id 是自增的，那他是顺序写，所以数据是已经写入进去的了？<br>&quot;这条更新语句做了如下的操作&quot;, 为什么这里叫更新，不叫 insert, 是insert 跟 update 统称为change吗？<br>select * from t where k in (k1, k2)<br>假如 k 是索引，所以这里的 索引在b+树里已经存在非叶子节点的吗？然后发现索引页的叶子节点不在内存里面，<br>所以从change buffer找到主键id，再load 数据到 buffer pool？","like_count":0},{"had_liked":false,"id":303750,"user_name":"赴","can_delete":false,"product_type":"c1","uid":2675954,"ip_address":"","ucode":"D47B3179BE3950","user_header":"https://static001.geekbang.org/account/avatar/00/28/d4/f2/3c0bfa0e.jpg","comment_is_top":false,"comment_ctime":1626961361,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1626961361","product_id":100020801,"comment_content":"请问老师，change buffer 说会持久化到系统表空间，那他什么时候删除，不删除那表空间岂不是一直增大?","like_count":0,"discussions":[{"author":{"id":2675954,"avatar":"https://static001.geekbang.org/account/avatar/00/28/d4/f2/3c0bfa0e.jpg","nickname":"赴","note":"","ucode":"D47B3179BE3950","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385462,"discussion_content":"理解了，应该是merge后那么change buffer持久化时就不存在了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627052841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303683,"user_name":"金角大王","can_delete":false,"product_type":"c1","uid":1221136,"ip_address":"","ucode":"AB1C4D07946612","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/10/4d474feb.jpg","comment_is_top":false,"comment_ctime":1626926560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626926560","product_id":100020801,"comment_content":"第二种情况，SessionA还是可以修改的啊，虽然sessionB‘修改的内容对SessionA不可见，但是SessionA的修改是建立在sessionB’提交事务的基础上的啊，update不总是在当前值的基础上进行更新的吗？我不太明白你这个这个例子和构造一个“数据无法修改”的场景有什么关联呢","like_count":0},{"had_liked":false,"id":303101,"user_name":"℃","can_delete":false,"product_type":"c1","uid":2415717,"ip_address":"","ucode":"709DCE06A62F5B","user_header":"https://static001.geekbang.org/account/avatar/00/24/dc/65/663bda7e.jpg","comment_is_top":false,"comment_ctime":1626591440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626591440","product_id":100020801,"comment_content":"我想到了另类的唯一索引查询优势，假设查询唯一索引和普通的都在内存页中，对于唯一索引直接返回，对于非唯一的还需要继续读盘，因为不确定是否还有其他符合条件的值","like_count":0},{"had_liked":false,"id":303099,"user_name":"信天游","can_delete":false,"product_type":"c1","uid":1046101,"ip_address":"","ucode":"4B46403E169499","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/55/1065fce8.jpg","comment_is_top":false,"comment_ctime":1626588612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626588612","product_id":100020801,"comment_content":"老师，我两个疑惑，1.我觉得update语句好像用不了change buffer，比如一个表有三个字段， id，k1，k2，id是主键索引，k1是普通索引，更新语句是update table set k2=5 where k1=3，如果k1不在内存中，我还是要读进来的，不然我不知道影响了哪个id，那也就不知道在主键索引上影响哪个page，那后面真的读到这个page也无法合并 2.我看更新的时候会显示影响多少行，如果不读进来怎么知道呢","like_count":0},{"had_liked":false,"id":300497,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1625196646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625196646","product_id":100020801,"comment_content":"innoDb <br>一 普通索引和唯一索引的查询过程：  select id from T where k=5。<br>1 根据b+树，普通索引在查询到第一条记录之后，会继续查询下一条记录，只到碰到第一个  k=5 的记录。<br>2 唯一索引，会直接返回 查询到的第一条k= 5的记录。  <br> 虽然普通索引多 一次查询，但是对于性能来说，这两者差不多。<br>二 普通索引和唯一索引对更新性能的影响。<br> 1 在保证数据一致性的情况下，innoDb 数据更新的过程： 如果数据在内存中，直接进行更新，如果数据没有在内存中，就先把更新信息记录在 change buffer 中，等下次读取这条数据的时候，进行更新操作或者，后台线程自动进行更新操作。<br> 2 比如插入（4，400），这条记录，唯一索引，要先去判断数据是否存在，因此要把数据读取到内存中，再进行判断插入，数据进入内存就可以直接进行更新数据了，因此没必要再更新change buffer 了。<br>   因此 change buffer 和普通索引一起使用，再更新比较多，而读取比较少（因为再读取change buffer 中做出改变的数据的时候，会直接把数据更新同步到磁盘）的场景 性能更高。比如账单，日志等。<br>3  change buffer 和redo log  的区别。<br>   change buffer 是再buffer pool 中的，数据的修改再 changeBuffer 中记录一份， 多分这种记录一起写入 redo log 中。redo log 分为两部分，一部分是内存中的redo log buffer，另一部分是 磁盘山的 redo log file.<br>   因此change buffer 能减少对磁盘随机读取的次数，redo log 能能减少对 磁盘数据，随机更新次数。","like_count":0},{"had_liked":false,"id":300386,"user_name":"Ween","can_delete":false,"product_type":"c1","uid":1106418,"ip_address":"","ucode":"151822D02A107B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/f2/c3aef303.jpg","comment_is_top":false,"comment_ctime":1625136179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625136179","product_id":100020801,"comment_content":"老师你好，我想问一下：<br>1.change buffer后台线程定期merge的过程中，是把磁盘上的数据页先读到内存中，在内存中merge吗？如果是在内存中merge，那merge后会立刻刷到磁盘吗？<br>2.当redo log满了需要刷磁盘的时候，刚好这部分要刷的数据页是在change buffer中，那么这些数据页如果是调到内存中进行merge后，change buffer中的这些记录是不是会直接物理删除？<br>3.change buffer会持久化到磁盘，那磁盘中的change buffer文件会越来越大？还是会定期删除的？<br><br>谢谢老师，我刚学mysql，可能问题有些奇怪，希望老师指正。","like_count":0},{"had_liked":false,"id":300300,"user_name":"死磕郎一世","can_delete":false,"product_type":"c1","uid":1272996,"ip_address":"","ucode":"86C1197C3FB2A0","user_header":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","comment_is_top":false,"comment_ctime":1625102528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625102528","product_id":100020801,"comment_content":"老师，你好，业务层面保证数据唯一性，如果是通过先查库，再插入的方式来保证的，查库这一步也是需要消耗资源的，跟唯一索引比起来，效率更低了","like_count":0},{"had_liked":false,"id":299391,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1624608476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624608476","product_id":100020801,"comment_content":"假如执行一条语句 insert ，只有id是索引，其他字段都不是索引，这个时候还需要change buffer了么？","like_count":0},{"had_liked":false,"id":296720,"user_name":"Mcnulty","can_delete":false,"product_type":"c1","uid":1143536,"ip_address":"","ucode":"3DD71D84B58A16","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/f0/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1623130203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623130203","product_id":100020801,"comment_content":"为了验证change buffer 的作用，使用存储过程进行插入100w条数据，耗时 普通索引&gt;唯一索引。进行更新 普通所以&gt;唯一索引。这是为什么呢？难道存储过程不走change buffer？innodb_change_buffering = all ，innodb_change_buffer_max_size=25%<br>CREATE TABLE `student_test_myb` (<br>  `id` int(11) DEFAULT NULL,<br>  `age` int(11) DEFAULT NULL,<br>  `name` varchar(255) DEFAULT NULL,<br>  `createTime` datetime DEFAULT NULL,<br>  KEY `idx_id` (`id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br><br>CREATE TABLE `student_test_myb1` (<br>  `id` int(11) NOT NULL,<br>  `age` int(11) DEFAULT NULL,<br>  `name` varchar(255) DEFAULT NULL,<br>  `createTime` datetime DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `primary_idx` (`id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br>begin<br>\tdeclare i int default 0;<br>\tset @startTime =null;<br>\tset @endTime =null;<br>\tselect current_timestamp(3);<br>\tset autocommit=0;<br>\trepeat<br>\t\tset i=i+1;<br>\t\tinsert into student_test_myb (id,age,name,createTime) values(i, FLOOR(1 + (RAND() * 99)), &#39;zhangsan&#39;, NOW());<br>\t\tuntil i=max_num<br>\tend repeat;<br>\tselect current_timestamp(3);<br>\t-- select (@endTime-@startTime) as cost_time;<br>\tcommit;<br>end","like_count":0},{"had_liked":false,"id":295412,"user_name":"持#樞","can_delete":false,"product_type":"c1","uid":1475876,"ip_address":"","ucode":"2974D70A62A406","user_header":"https://static001.geekbang.org/account/avatar/00/16/85/24/98d00055.jpg","comment_is_top":false,"comment_ctime":1622422663,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1622422663","product_id":100020801,"comment_content":"有一点不明白，redo log怎么就变成顺序写了呢，有大佬来指点一下吗？<br>","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577863,"discussion_content":"顺序写是写redo log，最终写磁盘还是要随机写的，只不过延后了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656396113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294979,"user_name":"牛牛","can_delete":false,"product_type":"c1","uid":1194626,"ip_address":"","ucode":"CFCE68B4F92209","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/82/1ff83a38.jpg","comment_is_top":false,"comment_ctime":1622169815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622169815","product_id":100020801,"comment_content":"看过好几个平台的MySQL专栏文章之类的, 丁奇老师讲解和答疑都很深入、细致, 第四遍看, 每次看都有新的收获, 这个专栏是值得反复读的, 真心推荐, 如果读不下去、就停一停再读, 慢慢读下去, 一定会有收益 ~~~","like_count":0},{"had_liked":false,"id":294373,"user_name":"迷茫的老鸟","can_delete":false,"product_type":"c1","uid":2601955,"ip_address":"","ucode":"CB74EF54ACD854","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/NxMQt9YhtMpcwOSXd1KXE4aaWQAlLp67pvMktogVHSFiaXRG7owGGWYuURg6FmotEwJBPUvMlsRdzatuiaKeYricg/132","comment_is_top":false,"comment_ctime":1621919024,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1621919024","product_id":100020801,"comment_content":"学些了今天的文章，想实际操作下，但是change buffer如何修改呢","like_count":0},{"had_liked":false,"id":291713,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1620444829,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620444829","product_id":100020801,"comment_content":"除了主键索引，其他的索引类型都属于二级索引吧？","like_count":0},{"had_liked":false,"id":291608,"user_name":"先听","can_delete":false,"product_type":"c1","uid":1151409,"ip_address":"","ucode":"82D8DA7A2FEB4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/91/b1/fb117c21.jpg","comment_is_top":false,"comment_ctime":1620381722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620381722","product_id":100020801,"comment_content":"设计数据库表的时候，关于列的排序，很多人会把主键放在前面。 <br>请问这样做有什么好处吗？","like_count":0},{"had_liked":false,"id":291483,"user_name":"小陈","can_delete":false,"product_type":"c1","uid":1009385,"ip_address":"","ucode":"A03A299310AD18","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","comment_is_top":false,"comment_ctime":1620303500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620303500","product_id":100020801,"comment_content":"这条更新语句做了如下的操作（按照图中的数字顺序）：<br>1.Page 1 在内存中，直接更新内存；<br>2.Page 2 没有在内存中，就在内存的 change buffer 区域，记录下“我要往 Page 2 插入一行”这个信息<br>3.将上述两个动作记入 redo log 中（图中 3 和 4）。做完上面这些，事务就可以完成了。<br><br>老师，是不是3先执行呢？不然1，2执行完了突然cash了，这样不就丢失操作了吗？","like_count":0},{"had_liked":false,"id":290850,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1619779812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619779812","product_id":100020801,"comment_content":"感觉通过redo log重刷脏页就够了，为何还要通过redo log重放change buffer  ,再通过change buffer重放脏页  这有点多余了。。","like_count":0},{"had_liked":false,"id":290034,"user_name":"lleft","can_delete":false,"product_type":"c1","uid":1970443,"ip_address":"","ucode":"D573EB509455AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","comment_is_top":false,"comment_ctime":1619332774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619332774","product_id":100020801,"comment_content":"访问数据页中的数据就会触发merge还是说访问change buffer中记录变更信息的数据时触发merge？","like_count":0},{"had_liked":false,"id":288961,"user_name":"let_me_go","can_delete":false,"product_type":"c1","uid":1510177,"ip_address":"","ucode":"A5936F5C5E3D65","user_header":"https://static001.geekbang.org/account/avatar/00/17/0b/21/f1aea35b.jpg","comment_is_top":false,"comment_ctime":1618799759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618799759","product_id":100020801,"comment_content":"为什么 change buffer 只能用户普通索引，不能用于唯一索引，主键索引。<br>我的理解是这样的：<br>唯一索引增加了唯一性的判断，不管业务是否保证数据是唯一的，只要用了唯一索引，数据库就得按照自己的逻辑进行判断，而怎么判断唯一呢，就得将数据对应的数据页读取到内存中来进行判断。不能先放在 change buffer 中，等到积累了一定的操作，然后实际操作磁盘的时候却发现数据冲突了，不是唯一的，这样前面在 change buffer 中做的操作就白做了。<br>而主键索引肯定也是唯一索引，唯一索引不一定是主键索引。<br>简单来说：唯一性索引因为需要保证唯一性的需求，如果数据不在内存中就必须从磁盘中读入真实的数据，才能判断需要插入或者修改的数据，是否唯一，是否会与数据库中已有的数据产生冲突。","like_count":0},{"had_liked":false,"id":288954,"user_name":"let_me_go","can_delete":false,"product_type":"c1","uid":1510177,"ip_address":"","ucode":"A5936F5C5E3D65","user_header":"https://static001.geekbang.org/account/avatar/00/17/0b/21/f1aea35b.jpg","comment_is_top":false,"comment_ctime":1618797954,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618797954","product_id":100020801,"comment_content":"redo log 主要节省的是随机写磁盘的 IO 消耗（转成顺序写），而 change buffer 主要节省的则是随机读磁盘的 IO 消耗，这句话的理解。<br>redo log：操作表中的数据的的时候，不是直接将数据写入磁盘中，而是先写到 redo log 这个日志文件中。写redo log同样也是需要将数据写入磁盘，这和直接将数据写入磁盘有什么区别。区别在于 redo log 是顺序写，每次对表进行相应的操作，就记录下相应的操作，就像在一个本本上写笔记一样，按行写，一行一行挨着写下去。将数据写入磁盘，写入到真实对应的那个表中，由于数据是按照一定的顺序排列的，比如进行插入 insert 或者是 update 时需要找到相应的位置再进行操作，这样进行寻找的时候就要消耗大量时间（相比顺序写），这就像是我们在复习笔记的时候，可能需要在某个地方进行补充，我们得先找到之前记笔记的位置，再进行修改。<br>change buffer。我们对表中的数据进行 update 或者更新的时候，按照一般的逻辑是这样的，需要将相应的数据页（MySQL 为了提升IO 利用率，不是将数据一行一行的从磁盘进行读取或者写入，而是按页，一页为16k进行读取或者写入）读入内存（从磁盘读入内存），然后在内存中操作该数据页，对相应的数据行进行操作，最后将操作的结果写回磁盘。在使用普通索引的时候，我们就可以使用 change buffer 了，这时候数据的操作是这样的，操作数据的时候，如果这部分数据对应的数据页已经在内存中了，然后就在该内存中进行操作，如果对应的数据页不在内存中，则先将数据的操作记录到 change buffer 这个缓冲区（注意这里用的是记录，这就和在 redo log 中记日志类似了），这个 change buffer 是在内存中，所以操作速度自然会很快，然后再将这些操作记录到 redo log 中，redo log 这个肯定不能省，毕竟系统崩了还是的靠它（对于 Innodb 引擎）。然后后台进程有空的时候再将这些放在 change buffer 中的记录真实操作到硬盘中真实的表中，这样就不用当每次数据页不在内存中时就要从磁盘中读取相应的数据页页进行操作，就可以合并多个操作，然后有空的时候将多个操作放在一起操作。要明白这一点，内存和磁盘之间的读写速度相差很大很大很大，对于 CPU 而言，从内存中读一个数据页花的时间和一下子读几十个数据页消耗的时间差不多，所以CPU 更愿意将多次 IO 合并为1次 IO。","like_count":0},{"had_liked":false,"id":286616,"user_name":"HwH","can_delete":false,"product_type":"c1","uid":2285230,"ip_address":"","ucode":"870CAA34DED9FB","user_header":"","comment_is_top":false,"comment_ctime":1617431375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617431375","product_id":100020801,"comment_content":"对于唯一索引来说，所有的更新操作都要先判断这个操作是否违反唯一性约束。比如，要插入 (4,400) 这个记录，就要先判断现在表中是否已经存在 k=4 的记录，而这必须要将数据页读入内存才能判断。<br>对于这里，老师我想问下，要判断是否有这个节点只需要要通过这个二级的唯一索引就可以判断了呀，那并不需要将数据读入内存，那不是一样可以使用change buffer嘛。","like_count":0},{"had_liked":false,"id":285657,"user_name":"Sheep Yang","can_delete":false,"product_type":"c1","uid":1114040,"ip_address":"","ucode":"7AA2E460270130","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/b8/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1616943806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616943806","product_id":100020801,"comment_content":"首先基于文章，我对于change buffer的理解是作为普通索引的修改内存聚合的一个缓冲，但是并没有完全明白该缓存merge的具体操作。<br>insert into t(id,k) values(id1,k1),(id2,k2);<br><br>对于这个insert例子有些疑问。<br>1、insert的时应该指定主键，按道理应该检查id2的唯一性那么不应该有使用change buffer的情况发生，我理解应该是使用普通的buffer pool加载page更新。<br>2、使用change buffer以后，merge是否将数据写回唯一索引。（change buffer merge的具体情况，例子中好像只看到了merge回普通索引表，那么聚集索引就没更新了？）","like_count":0},{"had_liked":false,"id":285485,"user_name":"gogolk","can_delete":false,"product_type":"c1","uid":1732394,"ip_address":"","ucode":"94FF5F698F55BC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLruKArGrtM9NQYUrQib3dicKHFoia1TnSyxfjv5eFPXVHc5SU6mnibPFk3IyLPj9xia40nKUaNEzIYIicQ/132","comment_is_top":false,"comment_ctime":1616836513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616836513","product_id":100020801,"comment_content":"还是有疑惑，感觉change buffer能做的工作redo log也能做的。是不是数据结构不一样 导致merge的时候 在redo log 不方便随机读。","like_count":0},{"had_liked":false,"id":284829,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1616488659,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616488659","product_id":100020801,"comment_content":"change buffer change后和内存中的数据页update后写redo log，只是为了突发情况，比如数据库非正常关闭后做数据恢复用的吧？脏页刷磁盘没有用到。<br>现实项目中纪录历史数据，流水账单，这种不会违反唯一性约束的数据用change buffer最合适，还可以定时清除change buffer占用也不会很大。","like_count":0},{"had_liked":false,"id":279342,"user_name":"谁予琴乱。","can_delete":false,"product_type":"c1","uid":1390879,"ip_address":"","ucode":"74774DEDFA34A7","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/1f/ff9799de.jpg","comment_is_top":false,"comment_ctime":1613725324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613725324","product_id":100020801,"comment_content":"假如有一条数据更新用到了change buffer，这条数据有其他唯一字段。<br>但是在merge的时候发现，其他唯一字段已经存在唯一冲突了。<br>这种情况要怎么分析?","like_count":0},{"had_liked":false,"id":279336,"user_name":"谁予琴乱。","can_delete":false,"product_type":"c1","uid":1390879,"ip_address":"","ucode":"74774DEDFA34A7","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/1f/ff9799de.jpg","comment_is_top":false,"comment_ctime":1613723575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613723575","product_id":100020801,"comment_content":"在不影响数据一致性的前提下，InnoDB 会将这些更新操作缓存在 change buffer 中<br><br>这个影响数据一致性怎么理解?","like_count":0},{"had_liked":false,"id":276980,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1612218793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612218793","product_id":100020801,"comment_content":"二刷第6天：温故知新<br><br>\t1. redo log和change buffer分别优化了什么随机读写？<br><br>（1）redo log节省随机写磁盘I&#47;O（随机--&gt;顺序）。要更新到磁盘的时候，延迟更新<br>（2）change buffer，主要节省随机读磁盘的I&#47;O消耗。要读取并修改的时候，先记录下来，然后延迟读取+更新。<br><br><br>\t1. 唯一索引和普通索引的区别。如果所操作的数据页，不在buffer pool，唯一索引无法用到change buffer，普通索引可以用到change buffer。<br>\t2. merge的过程，只是把老的磁盘上的数据页在内存中更新，并没有更新磁盘只会写redo。<br>\t3. 本章的问题：change buffer 一开始是写内存的，那么如果这个时候机器掉电重启，会不会导致 change buffer 丢失呢？change buffer 丢失可不是小事儿，再从磁盘读入数据可就没有了 merge 过程，就等于是数据丢失了。会不会出现这种情况呢？答案：虽然是只更新内存，但是在事务提交的时候，我们把 change buffer 的操作也记录到 redo log 里了，所以崩溃恢复的时候，change buffer 也能找回来。<br><br>不懂的疑问：<br><br>\t1. 刷新的时候，到底是buffer pool刷新磁盘，还是redo log。redo log在第二章节只是说了保证了safe crash的能力，当下面有同学留言的时候，老师说答得对，说明就是buffer pool刷新的，这个后面再看（3、真正对磁盘数据页的修改是通过将内存里脏页的数据刷回磁盘来完成的，而不是根据redolog）","like_count":0},{"had_liked":false,"id":276127,"user_name":"吉法师","can_delete":false,"product_type":"c1","uid":2232546,"ip_address":"","ucode":"F1E3F4F526CA13","user_header":"https://static001.geekbang.org/account/avatar/00/22/10/e2/35f2fc23.jpg","comment_is_top":false,"comment_ctime":1611803524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611803524","product_id":100020801,"comment_content":"服务器的硬盘肯定是机械硬盘呀，一般数据库系统的硬盘都不会是ssd 的。","like_count":0},{"had_liked":false,"id":272755,"user_name":"右耳","can_delete":false,"product_type":"c1","uid":2408591,"ip_address":"","ucode":"54CE8E54B9FD59","user_header":"https://static001.geekbang.org/account/avatar/00/24/c0/8f/b0d0a9cb.jpg","comment_is_top":false,"comment_ctime":1610265255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610265255","product_id":100020801,"comment_content":"老师我有一点不明白，更新的时候不是先读后改吗，那当前读的时候是从哪里读？希望可以解答一下我的困惑谢谢！","like_count":0},{"had_liked":false,"id":271840,"user_name":"雷雷","can_delete":false,"product_type":"c1","uid":1516558,"ip_address":"","ucode":"2422F6150B6C0E","user_header":"https://static001.geekbang.org/account/avatar/00/17/24/0e/65d7d6ee.jpg","comment_is_top":false,"comment_ctime":1609835439,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1609835439","product_id":100020801,"comment_content":"buffer change的是针对二级索引做的优化，目的是为了减少每次update，insert，delete对二级索引维护的性能消耗","like_count":0},{"had_liked":false,"id":271701,"user_name":"海之韵","can_delete":false,"product_type":"c1","uid":1316451,"ip_address":"","ucode":"C7C3F4E32A2DEF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/2W9qKibEiaSBbvBt5Om6HU52oNfbxCvjmheFLcYkMiahP8ca5g7CzuywFMaYMhSMSauVlWiatn44QXJc8SpgIwUMtw/132","comment_is_top":false,"comment_ctime":1609761946,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1609761946","product_id":100020801,"comment_content":"林老师好，最后例子里说k2所在数据页，我感觉应该不是数据页，而是索引页<br>因为数据页跟索引k就没关系了吧<br>不知是否正确","like_count":0,"discussions":[{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340062,"discussion_content":"我的理解 这里是索引页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609895949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271681,"user_name":"Edon du","can_delete":false,"product_type":"c1","uid":1074742,"ip_address":"","ucode":"1648624751AAE9","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/36/b4a4e6fb.jpg","comment_is_top":false,"comment_ctime":1609754889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609754889","product_id":100020801,"comment_content":"老师看完这篇文章，有几点疑问不是很确定呢。<br><br>疑问1：插入的数据肯定是要维护一个聚簇索引的，而聚簇索引应该都在buffer pool中，这应该也是官方为什么建议buffer pool的内存占用率最好超过物理内存的％80，如果写主键直接写内存，也就用不到change buffer 了，不知道这样理解对不对，有没有有志之士有不同的看法。<br><br>疑问2：看官方文档说innodb在buffer pool中访问表数据和索引数据，这个k是二级索引的话，可能它是不在内存中，那是不是buffer pool除了缓存了一些聚簇索引还缓存了一些最近被访问到的二级索引下某些数据块，还是有点模糊，意思插入数据的时候是这个二级普通索引肯定不在内存中，所以要走change buffer吗？<br>疑问3: update  的时候也是如果更新唯一索引二级索引，则需要读取二级索引树到内存中进行判断。如果是普通二级索引，则直接写change buffer，是这个意思吗？<br>疑问4：delete 的时候是判断的where条件吗?理论上insert 和 update 也可能where条件后面存在唯一索引或者普通索引，也是走这个逻辑吗？","like_count":0},{"had_liked":false,"id":270007,"user_name":"啊良梓是我","can_delete":false,"product_type":"c1","uid":1655117,"ip_address":"","ucode":"E42FC1A60D331C","user_header":"https://static001.geekbang.org/account/avatar/00/19/41/4d/f6d6d13a.jpg","comment_is_top":false,"comment_ctime":1608874370,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1608874370","product_id":100020801,"comment_content":"总结：事务在创建事务的开始瞬间，会获取所有还没有提交的事务组成一个数组，称之为活跃事务数组，他们互相读不可见？然后其中有事务提交了update并且commit 也是读不可见的，没提交的更加读不可见。自身事务读可见。<br>不在活跃数组的并且已提交的读可见。","like_count":0},{"had_liked":false,"id":269626,"user_name":"Geek_b7d291","can_delete":false,"product_type":"c1","uid":2281862,"ip_address":"","ucode":"923710DC56DD84","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZSibeTatZ2In6yCdcMauh2vNlLmJ3ekuDb5Oj3tw2Z7hczC7AVQIdZK5cLsdP15bzMItenDV0ib8w/132","comment_is_top":false,"comment_ctime":1608719283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608719283","product_id":100020801,"comment_content":"有一点不是很明白，如果说这个更新语句没有用到任何索引是不是就不会用的change buffer","like_count":0},{"had_liked":false,"id":269228,"user_name":"推车的老王","can_delete":false,"product_type":"c1","uid":1832751,"ip_address":"","ucode":"568A2E436CCFBE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/HrblKDLM0uaYNgJo3ZbG3qzgvpq15vRDKadOkvktJuI6sWf4kUymXXXCM4ibicLcek22qAkd5oysSEVCTZuZJXGA/132","comment_is_top":false,"comment_ctime":1608561480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608561480","product_id":100020801,"comment_content":"老师我有个疑问，如果说change buffer可以不用随机读取磁盘的数据只是将这次修改记录到内存中，那么binlog row模式下里面的olddata的数据是从哪来的啦？redolog是怎么知道具体修改的页的哪个位置的数据啦","like_count":0},{"had_liked":false,"id":268566,"user_name":"open！？","can_delete":false,"product_type":"c1","uid":2278966,"ip_address":"","ucode":"53E6D336DB7F22","user_header":"https://static001.geekbang.org/account/avatar/00/22/c6/36/70f2083c.jpg","comment_is_top":false,"comment_ctime":1608259420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608259420","product_id":100020801,"comment_content":"请问老师 ， 如果没有使用到change buffer，比如用了唯一索引，此时update修改了内存中的值,并把它写入redo log 中 ，但如果该块内存值 接下里被清空了 ，此时会把最新值写回磁盘吗，或者不写 等老的数据被提取后再看redo log 再更新吗。","like_count":0},{"had_liked":false,"id":267055,"user_name":"董航","can_delete":false,"product_type":"c1","uid":1231787,"ip_address":"","ucode":"9CA208FD26F849","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/ab/1aac53bf.jpg","comment_is_top":false,"comment_ctime":1607583909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607583909","product_id":100020801,"comment_content":"你好，请问update语句也会用到change buffer吗，我用show engine innodb status查看了，只有INSERT BUFFER AND ADAPTIVE HASH INDEX<br>-------------------------------------<br>Ibuf: size 1, free list len 0, seg size 2, 0 merges<br>merged operations:<br> insert 0, delete mark 0, delete 0<br>discarded operations:<br> insert 0, delete mark 0, delete 0","like_count":0},{"had_liked":false,"id":267029,"user_name":"AluAlu","can_delete":false,"product_type":"c1","uid":1309974,"ip_address":"","ucode":"ACDE9CD9D7B459","user_header":"https://static001.geekbang.org/account/avatar/00/13/fd/16/719fa5c3.jpg","comment_is_top":false,"comment_ctime":1607575988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607575988","product_id":100020801,"comment_content":"老师您好，我看了全文，有个问题:<br>对于一条insert语句，change buffer已经记录 (add xxx to page x)，而redolog已经记录(new changebuffer [add xxx to page x])。<br>我想问:<br>1.假如触发了merge操作，是否将本次merge操作也写入redolog？<br>2.如果写入跟上面的new changebuffer是不是重复了？重复写redolog会不会有问题？<br><br>我理解的是，merge操作是写入redolog。当check pos推进到这部分log时，由于数据已经merge过，跟磁盘数据是一致的，所以不算脏页，也就不会再从redolog刷到盘里。<br>第一个问题我理解的对吗？老师，期待您的回复。","like_count":0},{"had_liked":false,"id":264417,"user_name":"张爽","can_delete":false,"product_type":"c1","uid":1021129,"ip_address":"","ucode":"ED2969DA26E8E0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/c9/374a69f2.jpg","comment_is_top":false,"comment_ctime":1606461158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606461158","product_id":100020801,"comment_content":"CREATE TABLE `t_user` (<br>  `id` bigint(20) unsigned NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT &#39;用户id&#39;,<br>  `email` varchar(128) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;email&#39;,<br>  `password` varchar(32) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;登录密码&#39;,<br>  key idx_email(email)<br>) ENGINE=InnoDB  DEFAULT CHARSET=utf8mb4 COMMENT=&#39;用户表&#39;;<br><br><br>insert into t_user(email, password) values(&quot;admin@admin.com&quot;, &quot;qwe123&quot;);<br><br>获取表t_user的自增ID,将id + email + password数据写入innodb buffer pool,<br>将email + id写入channge buffer, 写redo log(prepare阶段)， 写binlog, 提交redo log(commit)<br><br><br>update t_user set password = &#39;123456&#39; where email = &#39;admin@admin.com&#39;;<br>若email为admin@admin.com的数据不存在于内存中，如果不根据二级索引从磁盘读取数据，怎么知道要修改哪些id的password。<br><br><br>update t_user set password = &#39;123456&#39;, email = &#39;admin@admin.com&#39; where email = &#39;admin@admin.com&#39;;<br>若同时修改二级索引跟聚簇索引的值，又是如何操作<br><br><br>不太明白change buffer如何应用于修改操作而不去读取磁盘。还有一点就是更新操作mysql会返回影响的行数，不通过读取二级索引获取主键ID如何知道操作了多少行。<br>还请老师解答一下。","like_count":0},{"had_liked":false,"id":262421,"user_name":"luke Y","can_delete":false,"product_type":"c1","uid":2311463,"ip_address":"","ucode":"111F98D367235B","user_header":"https://static001.geekbang.org/account/avatar/00/23/45/27/4fbf8f6a.jpg","comment_is_top":false,"comment_ctime":1605713767,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1605713767","product_id":100020801,"comment_content":"有个问题，在插入时，就在内存的 change buffer 区域，记录下“我要往 Page 2 插入一行”这个信息，如果这个这个插入操作主键冲突这类错误，数据怎么操作","like_count":0},{"had_liked":false,"id":260641,"user_name":"学渣要每日进步","can_delete":false,"product_type":"c1","uid":1111434,"ip_address":"","ucode":"0EB5CB54F2E890","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/8a/e0fa8730.jpg","comment_is_top":false,"comment_ctime":1605076393,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1605076393","product_id":100020801,"comment_content":"The change buffer is a special data structure that caches changes to secondary index pages when those pages are not in the buffer pool. 这个是在5.6的文档里找到的，change buffer是不是就是缓存二级索引的。这节越看越懵","like_count":0},{"had_liked":false,"id":260395,"user_name":"x-ray","can_delete":false,"product_type":"c1","uid":1140175,"ip_address":"","ucode":"8363F0C4D0AC0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","comment_is_top":false,"comment_ctime":1604997091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604997091","product_id":100020801,"comment_content":"我这里有个问题，update t set k=k+1  where id=1; 这个操作，假设一开始数据不在内存页中，但因为触发当前读，所以就一定需要把数据先从磁盘里读到内存，所以不会写change buffer。是否可以这样理解？然后，update t set k=3  where id=1; 假设这个一开始数据也不在内存中，但不触发当前读，所以会先写change buffer。不知道是否可以这样理解？","like_count":0},{"had_liked":false,"id":259985,"user_name":"青春","can_delete":false,"product_type":"c1","uid":2290433,"ip_address":"","ucode":"E972B44378B4FF","user_header":"https://static001.geekbang.org/account/avatar/00/22/f3/01/01fc7d36.jpg","comment_is_top":false,"comment_ctime":1604903462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604903462","product_id":100020801,"comment_content":"丁老师你好，我有点不明白上期的答案为什么是那样，比如表中的数据就和您给的截图中一样，并且B事务的执行是更新c=c+1,那么此时表中的数据应该是(1,2)(2,3),(3,4)(4,5)，此时A事务执行update t set c=0 where id = c,也就是说把id=2,id=3,id=4,id=5的行对应的c变成0吗？这样难道不可以吗？表中是有数据符合where条件的啊。。","like_count":0},{"had_liked":false,"id":258370,"user_name":"Ac、","can_delete":false,"product_type":"c1","uid":1610575,"ip_address":"","ucode":"7E7A8458372F33","user_header":"https://static001.geekbang.org/account/avatar/00/18/93/4f/61edeea6.jpg","comment_is_top":false,"comment_ctime":1604400113,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604400113","product_id":100020801,"comment_content":"如果显式的插入一个主键id，这种情况是用不了change buff能理解。但是，如果id是自增的，插入数据时，没有显式的插入，也是用不了吗？","like_count":0},{"had_liked":false,"id":257039,"user_name":"w","can_delete":false,"product_type":"c1","uid":2175594,"ip_address":"","ucode":"946342E3403658","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/G6oFFzWeEHQa54myibozBNw88hwOd8C5EjU1KWRkPlqmRlZ0ycC16jjCbvvovg9tyGhD70GFdibQTCsaYup6lPEg/132","comment_is_top":false,"comment_ctime":1603842040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603842040","product_id":100020801,"comment_content":"请教一下老师，这样理解对吗：change buffer中记录了对一个不存在buffer pool中的page的更新或插入操作，并记录了redo log，当访问该数据页时，该页被读入内存之后会触发merge，将change buffer的操作应用到内存页中，在之后刷脏页时就会写入磁盘了；<br><br>问题：如果redo log写满了需要将checkpoint往前推进，但这个数据页一直没有被访问和merge，那么刷脏页的过程是怎样的呢？会先把数据读入内存merge之后刷脏页呢还是直接执行redo log上的操作到磁盘，该页始终没有被读入内存呢？","like_count":0},{"had_liked":false,"id":256461,"user_name":"nickyang","can_delete":false,"product_type":"c1","uid":2257533,"ip_address":"","ucode":"E553ED42482DCD","user_header":"","comment_is_top":false,"comment_ctime":1603629789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603629789","product_id":100020801,"comment_content":"老师好，我有个疑惑，是不是建立了唯一索引后，表中的数据就以b+树的方式存储了呢？ 比如文章中说的，在唯一主键的情况下，更新一条数据，但是所在数据页不在内存中，就从磁盘中先读出数据页，这个读出的数据页是以b+树的方式组织的么？","like_count":0},{"had_liked":false,"id":255721,"user_name":"CharAt","can_delete":false,"product_type":"c1","uid":1813207,"ip_address":"","ucode":"D7D44B48FC4E79","user_header":"https://static001.geekbang.org/account/avatar/00/1b/aa/d7/a417ad5b.jpg","comment_is_top":false,"comment_ctime":1603418205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603418205","product_id":100020801,"comment_content":"一深思完全不懂，去网上找发现找到的都是老师在文章的情况；希望老师可以解答<br>假设 表t (id,b,c)    c是普通索引(以下情况都是，b是普通字段)<br>1、在插入一条完整数据时，changebuffer 会得到使用吗？假设使用了，id也属于唯一索引的一种。那假设b是唯一索引，在插入一条完整的数据，是不是就不会使用到changebuffer了？和不适用唯一索引相违背。<br>2、在更新操作的时候，我看见老师评论中说：update&#47;delete where id=N 就会使用到changebuffer，这是为什么？ 那如果是update t set b =1 where c=1; 也会使用到changebuffer吧？<br>求翻拍，求路人解答","like_count":0},{"had_liked":false,"id":255400,"user_name":"杜兰特有丶小帅","can_delete":false,"product_type":"c1","uid":1320433,"ip_address":"","ucode":"9E1FA13BA68E87","user_header":"https://static001.geekbang.org/account/avatar/00/14/25/f1/f7a11901.jpg","comment_is_top":false,"comment_ctime":1603336882,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603336882","product_id":100020801,"comment_content":"老师，我还有个疑问。如果说change buffer是为了减少更新时磁盘的随机读取，那对于raw格式的binlog，似乎是必须读取原来的值的，那么此时change buffer是不是就不生效了？","like_count":0},{"had_liked":false,"id":254894,"user_name":"猴哥一一 cium","can_delete":false,"product_type":"c1","uid":1254801,"ip_address":"","ucode":"38EC64F8D1A0B4","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","comment_is_top":false,"comment_ctime":1603207697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603207697","product_id":100020801,"comment_content":"看下来总结的结论，记录一下：<br>我这样理解下，对不对？<br>update t set name=xxx where k=xxx<br>name , k 都是普通索引字段<br>带索引条件的更新，如 where k = xx，因为定位的过程需要查询索引K，将索引k读到内存，所以对于索引K，不能享受到change buffer的收益，<br>但是对于要更新的字段（普通索引），如 name =xxx，就不需要再去查询了，能享受change buffer的收益。","like_count":0},{"had_liked":false,"id":253750,"user_name":"凡不凡","can_delete":false,"product_type":"c1","uid":1284568,"ip_address":"","ucode":"13F8511E0848B8","user_header":"https://static001.geekbang.org/account/avatar/00/13/99/d8/cea69b21.jpg","comment_is_top":false,"comment_ctime":1602852979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602852979","product_id":100020801,"comment_content":"👍","like_count":0},{"had_liked":false,"id":253286,"user_name":"猴哥一一 cium","can_delete":false,"product_type":"c1","uid":1254801,"ip_address":"","ucode":"38EC64F8D1A0B4","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","comment_is_top":false,"comment_ctime":1602674219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602674219","product_id":100020801,"comment_content":"根据文章内容+评论中得到一个结论:<br>change buffer 可以解决 update 先读后更新的问题,<br>update 操作,直接丢个 change buffer 操作就返回了,感觉像是一个异步行为呢?<br>这种情况下,是怎么保证返回正确的 affectted rows 呢?<br><br>疑惑来自作者对@。。。。同学的回答<br>感谢能解释一下.","like_count":0},{"had_liked":false,"id":251197,"user_name":"快乐的平头哥","can_delete":false,"product_type":"c1","uid":1635388,"ip_address":"","ucode":"D7D2FA5DA6D8BF","user_header":"https://static001.geekbang.org/account/avatar/00/18/f4/3c/60bf7a17.jpg","comment_is_top":false,"comment_ctime":1601403858,"is_pvip":false,"replies":[{"id":"92524","content":"这两个概念有点混淆了哦<br>如果数据没有刷盘，就一定会在内存中，查询过程不会需要去读redolog的<br>（否则这个速度就太慢了）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1602664209,"ip_address":"","comment_id":251197,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1601403858","product_id":100020801,"comment_content":"突然想到一个神奇的问题 就是建了唯一索引 changebuffer不会生效.然后要查询的数据也不在内存中 这时候 是不是就要合并redolog的数据 才能得到正确的结果了（假设这时候redolog还没刷盘）","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506414,"discussion_content":"这两个概念有点混淆了哦\n如果数据没有刷盘，就一定会在内存中，查询过程不会需要去读redolog的\n（否则这个速度就太慢了）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602664209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251173,"user_name":"JOHN","can_delete":false,"product_type":"c1","uid":1692942,"ip_address":"","ucode":"6936DE275AA543","user_header":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","comment_is_top":false,"comment_ctime":1601388339,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1601388339","product_id":100020801,"comment_content":"我看mysql的文档，change buffer是作用于二级索引的啊","like_count":0,"discussions":[{"author":{"id":1008468,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/54/c9475cd0.jpg","nickname":"cz","note":"","ucode":"96385190176F78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392266,"discussion_content":"文章一直在强调唯一索引， 因为主键是唯一的，所以change buffer 肯定只能作用于普通索引。\n\n文章一直这么强调，其实有点误导。 我也是今天翻MySQL文档才读到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630927737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312379,"discussion_content":"你说的对呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602673460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248223,"user_name":"木子00","can_delete":false,"product_type":"c1","uid":1314724,"ip_address":"","ucode":"8F78CA722EB29B","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","comment_is_top":false,"comment_ctime":1600070509,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600070509","product_id":100020801,"comment_content":"老师有个问题：<br>这个记录的更新的数据页在内存中，这两个索引的区别就是唯一索引多了一个判断。后续的操作就是插入更新的值。我想知道的是：1.插入这个值的逻辑是什么？2.查询时候的逻辑是什么？","like_count":0},{"had_liked":false,"id":246456,"user_name":"Geek2808","can_delete":false,"product_type":"c1","uid":2028948,"ip_address":"","ucode":"835C9691723163","user_header":"","comment_is_top":false,"comment_ctime":1599359061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599359061","product_id":100020801,"comment_content":"最后的例子里：<br>要读 Page 2 的时候，需要把 Page 2 从磁盘读入内存中，然后应用 change buffer 里面的操作日志，生成一个正确的版本并返回结果。<br>这里读page2的时候还是会有一次磁盘随机读入？","like_count":0},{"had_liked":false,"id":245821,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1599061239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599061239","product_id":100020801,"comment_content":"change buffer也是会落盘的，因此掉电后可以读盘恢复，但是因为落盘是后台线程定时刷盘，因此可能部分数据未及时落盘而丢失。不用怕，我们还有redo log，这正是其大展身手的时刻。我们根据redo log中checkpoint位置，读取已提交事务，如果事务修改的数据页已经在内存中，则直接修改内存。否则根据情况看是直接写change buffer，还是读磁盘。","like_count":0},{"had_liked":false,"id":245253,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1598876866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598876866","product_id":100020801,"comment_content":"给大家解惑一下，看了下很多评论，有一点要注意，change buffer用于更新非唯一索引数据页的，通过change buffer来做写缓冲，也降低了随机读取数据页。通过后台线程merge到原数据页","like_count":0},{"had_liked":false,"id":244578,"user_name":"帅气のboy","can_delete":false,"product_type":"c1","uid":1517767,"ip_address":"","ucode":"30DCA27B9F8459","user_header":"https://static001.geekbang.org/account/avatar/00/17/28/c7/c5c67391.jpg","comment_is_top":false,"comment_ctime":1598585173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598585173","product_id":100020801,"comment_content":"这篇文章读了两三遍才明白 “change buffer 主要节省的则是随机读磁盘的 IO 消耗” 这句话的意思。<br>change buffer 的作用是在更新数据的时候，当数据页不在内存中，避免从磁盘中读取数据进内存中（这样读取数据属于随机读磁盘，磁盘随机读数据需要寻道等操作非常耗时），而是在真正需要读取数据的时候，才进行读取然后应用change buffer中的操作。change buffer “节省的则是随机读磁盘的 IO 消耗” 是节省更新数据时候的读磁盘操作。","like_count":0},{"had_liked":false,"id":243523,"user_name":"Geek_26d259","can_delete":false,"product_type":"c1","uid":2066952,"ip_address":"","ucode":"A754206C768474","user_header":"","comment_is_top":false,"comment_ctime":1598167822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598167822","product_id":100020801,"comment_content":"老师好  上期问题中的结果给c都加了1不应该是 2 3 4 5吗? 太懵了","like_count":0},{"had_liked":false,"id":241715,"user_name":"Linster","can_delete":false,"product_type":"c1","uid":1116129,"ip_address":"","ucode":"D68D014AF51C81","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/e1/9a8600dc.jpg","comment_is_top":false,"comment_ctime":1597398848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597398848","product_id":100020801,"comment_content":"请问为啥这种针对唯一键的更新操作，会展示2 rows affected呢？<br>MariaDB [test]&gt; select * from user_info\\G<br>*************************** 1. row ***************************<br>    uid: 103<br>    age: 3<br>  score: 199.99<br>   name: uid_103<br>parents: NULL<br>address: NULL<br>  ctime: 2020-08-14 17:31:43<br>*************************** 2. row ***************************<br>    uid: 176<br>    age: 1<br>  score: 1.11<br>   name: a_new_user<br>parents: NULL<br>address: NULL<br>  ctime: 2020-06-18 14:12:44<br>2 rows in set (0.00 sec)<br><br>MariaDB [test]&gt; INSERT INTO user_info (`ctime`,`uid`,`age`,`score`,`name`) VALUES (&#39;2020-08-14 17:31:43&#39;, &#39;103&#39;, &#39;3&#39;, &#39;99.99&#39;, &#39;uid_103&#39;) ON DUPLICATE KEY UPDATE `name`=VALUES(`name`), `ctime`=VALUES(`ctime`), `uid`=VALUES(`uid`), `age`=VALUES(`age`), `score`=VALUES(`score`);<br>Query OK, 2 rows affected (0.04 sec)<br><br>MariaDB [test]&gt; select * from user_info\\G<br>*************************** 1. row ***************************<br>    uid: 103<br>    age: 3<br>  score: 99.99<br>   name: uid_103<br>parents: NULL<br>address: NULL<br>  ctime: 2020-08-14 17:31:43<br>*************************** 2. row ***************************<br>    uid: 176<br>    age: 1<br>  score: 1.11<br>   name: a_new_user<br>parents: NULL<br>address: NULL<br>  ctime: 2020-06-18 14:12:44<br>2 rows in set (0.00 sec)<br>","like_count":0},{"had_liked":false,"id":241339,"user_name":"youngitachi","can_delete":false,"product_type":"c1","uid":1214582,"ip_address":"","ucode":"88717CA8B8ED64","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/76/c69b7fe5.jpg","comment_is_top":false,"comment_ctime":1597253147,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1597253147","product_id":100020801,"comment_content":"对于“redo log节省的是随机写磁盘IO的消耗，而change buffer主要节省的是随机读磁盘IO的消耗”的理解，我是这么思考的：<br>假设对一页数据进行了多次update，那么如果不写redo log，则每次都要访问磁盘去写，肯定很慢，因此redo log就是为了节省这样的时间开销，一次写磁盘多个数据而不是多次写磁盘，每次只写一个数据。也就是说redo log节省的是写磁盘IO的消耗。<br>那么如果没有change buffer呢，磁盘就只能在读的时候强行先执行redo log把修改全部写入磁盘然后再读取磁盘；而如果有change buffer，则这个时候也不必非得讲redo log写入磁盘，直接读取磁盘，然后利用change buffer的merge操作修改内存数据返回即可<br>按时这么来看，change buffer好像还是节省了写的时间呢，请老师指正","like_count":0},{"had_liked":false,"id":240114,"user_name":"学海求知","can_delete":false,"product_type":"c1","uid":1087085,"ip_address":"","ucode":"9341438DBCD6E5","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/6d/affdb86c.jpg","comment_is_top":false,"comment_ctime":1596764594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596764594","product_id":100020801,"comment_content":"很好奇一个问题，changebuff缓存了更新，这应该只是在binlog format为satement的情况下把？<br>binlog format为row的时候，binlog天然需要记录更新前和更新后的数据，必然要进行读操作，那是不是changebuffer也无法生效？","like_count":0},{"had_liked":false,"id":240065,"user_name":"tito","can_delete":false,"product_type":"c1","uid":2083874,"ip_address":"","ucode":"26B3C23098B9E0","user_header":"https://static001.geekbang.org/account/avatar/00/1f/cc/22/6294d43b.jpg","comment_is_top":false,"comment_ctime":1596733167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596733167","product_id":100020801,"comment_content":"老师 你好 之前我们线上系统在并发量较大的时候发生了些问题，当时是通过update后的返回值来判断是否保存成功，但是发现有时候成功了也返回0，今天看了这篇文章，我在想是不是因为change buffer导致的呢？","like_count":0},{"had_liked":false,"id":239484,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1596545675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596545675","product_id":100020801,"comment_content":"更新某一条数据不是都要先查询么，这样的话要访问磁盘呀，但change buffer 不就是为了避免访问磁盘么，或尽可能得少访问磁盘","like_count":0},{"had_liked":false,"id":238821,"user_name":"Geek_e8d55e","can_delete":false,"product_type":"c1","uid":1602239,"ip_address":"","ucode":"5F13626B0E1E45","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyobcyicicCQoldZofsS36xrjA2R2hk2F89pu1hCqwjlRaRG4xKkgCicZibEVdOwpfN5rWjEchrsxicSQ/132","comment_is_top":false,"comment_ctime":1596333434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596333434","product_id":100020801,"comment_content":"想问下，当插入一条数据，或者修改某个索引值，引起的数据页拆分是什么时候做的？","like_count":0},{"had_liked":false,"id":238022,"user_name":"jjyyun","can_delete":false,"product_type":"c1","uid":1592576,"ip_address":"","ucode":"8824654F673087","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIzE6JOuXsOamCWiaq8sHHVyCK44bdIOEqnE42veoZPEqxs5IJ8RT1Hicz0ZlPQFcbEFSwjV7icrfEw/132","comment_is_top":false,"comment_ctime":1596029045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596029045","product_id":100020801,"comment_content":"没看懂为什么需要恢复change buffer？redolog和binlog保证数据的正确性就行了啊","like_count":0},{"had_liked":false,"id":237544,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":2068208,"ip_address":"","ucode":"946001E85300BE","user_header":"https://static001.geekbang.org/account/avatar/00/1f/8e/f0/11994677.jpg","comment_is_top":false,"comment_ctime":1595859546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595859546","product_id":100020801,"comment_content":"如何快速记住并理解这些知识","like_count":0},{"had_liked":false,"id":237543,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":2068208,"ip_address":"","ucode":"946001E85300BE","user_header":"https://static001.geekbang.org/account/avatar/00/1f/8e/f0/11994677.jpg","comment_is_top":false,"comment_ctime":1595859327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595859327","product_id":100020801,"comment_content":"一些东西全靠记忆，和逻辑想象，看起来有些吃力，记不住，记住又忘。","like_count":0},{"had_liked":false,"id":237091,"user_name":"吉良吉影得手了","can_delete":false,"product_type":"c1","uid":2082871,"ip_address":"","ucode":"76ECBA001C7448","user_header":"https://static001.geekbang.org/account/avatar/00/1f/c8/37/60af0a24.jpg","comment_is_top":false,"comment_ctime":1595673103,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595673103","product_id":100020801,"comment_content":"老师，对于文中的例子，如果没有开change buffer，k2所在的数据不在内存中，这个时候写入的过程，是先把k2的数据读入内存，然后在内存中更新，再写redo log？所以，加了change buffer在写入过程中，不需要读入内存，减少了读磁盘的开销？","like_count":0},{"had_liked":false,"id":236675,"user_name":"xinglichea","can_delete":false,"product_type":"c1","uid":1176447,"ip_address":"","ucode":"986DA07BF3CA89","user_header":"https://static001.geekbang.org/account/avatar/00/11/f3/7f/2dd9409b.jpg","comment_is_top":false,"comment_ctime":1595497963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595497963","product_id":100020801,"comment_content":"1、老师，看了本篇文章，有两个疑惑<br>（1）文中说到change buffer是可以做持久化的，看图中画的是存在系统表空间里的，但change buffer的奔溃恢复是从redo log中取回的，所以，这里有点不明白change buffer本身持久化的应用场景？<br>（2）记录在内存中的change buffer记录的是某个数据页对应的修改，如果从磁盘加载数据的时候，发现数据页由于裂变或者合并，会不会导致与内存记录的不一致，而重新加载正确的数据页？","like_count":0},{"had_liked":false,"id":236585,"user_name":"咸鱼","can_delete":false,"product_type":"c1","uid":1179028,"ip_address":"","ucode":"5E79636DE48155","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/94/0247f945.jpg","comment_is_top":false,"comment_ctime":1595472329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595472329","product_id":100020801,"comment_content":"change buffer这个看的挺迷，来回看了几遍，有了点理解，但是还有很多疑问<br>首先明确一点：应用change buffer的前提一定是表有且仅有普通二级索引，或者没有索引，以及buffer pool中没有这个内存页，只有在上述前提下才有机会利用到change buffer。<br>1、如果操作是insert，直接写 change buffer。<br>2、如果是update操作，这里还是要判断是否存在更新条件对应的数据吧？那么是否还是发生读数据的操作，从而没法应用change buffer？还是有别的方式能直接判断更新条件是否存在而无需将数据读入内存？<br>insert直接使用change buffer是比较容易理解的，但是update操作不明白怎么应用change buffer，求解释。<br>能应用change buffer后，依次有以下操作<br>1、写change buffer，记录的是哪个数据页做了什么改动，这里有疑问，没有读盘怎么确定数据页呢？<br>2、change buffer写完后，在redo log中记录一条写入change buffer的记录，之后redo log处于prepare状态<br>3、写binlog，待binlog写入磁盘后，调用引擎接口提交事务commit<br>这样就完成了整个过程<br>其他疑问：<br>change buffer在遇到数据访问时主动merge，读取磁盘数据页到内存中，应用change buffer，此时内存页成为脏页，然后记录redo log（这里的redo log记录的正常的操作记录，非change buffer数据记录，这个redo log的写入应该是不需要经历两阶段提交吧？也不会触发binlog才对？），随后还会将应用后的change buffer写入到磁盘，系统表空间，这里有疑问，从老师文中和评论中被老师肯定的回答来看，持久化到系统表空间的change buffer，都是应用过的，其实就可以认为是没用的了，那么这个还持久化到系统表空间的意义是什么呢？什么情况下清理呢？还有就是change buffer还会写入到redo log，那么在merge change buffer时，是否需要删除redo log中的记录呢？ 还是在系统表空间持久化change buffer的目的在这里呢？如果从redo log恢复change buffer，是遍历整个redo log不？<br>暂时就想到这些，希望作者看到方便时解答下，看评论里大家对这块其实还是很迷惑的，我也很迷惑  :-(<br><br>","like_count":0},{"had_liked":false,"id":236288,"user_name":"崔经刚","can_delete":false,"product_type":"c1","uid":1827943,"ip_address":"","ucode":"207FDF850860C4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5lTnAkviacPGu5S5XJQGQdTpvkSjAVU9Nu2EYicIpMAjiaNP8aXDtfcIHicSnHw2fVIoqTWGGg48rZVzcficUlbgmw/132","comment_is_top":false,"comment_ctime":1595385757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595385757","product_id":100020801,"comment_content":"关于@xinzhong的提问<br>老师,不知道理解的对不对,比如update t set name=xxx where k=xxx,其中k是二级索引,如果是以下几种情况:<br>1.对于k是二级普通索引的情况,如果索引的数据页不在内存中,则写入到change buffer中,后续某些条件下(比如查找),会将该索引数据页读入内存,然后再回表更新记录的数据页中的name字段为xxx?<br>2.对于k是二级普通索引的情况,如果索引的数据页在内存中,然后回表更新记录数据页中的name字段为xxx?<br>3.对于k是二级唯一索引,如果索引的数据页不在内存中,将该索引数据页读入内存,然后回表更新记录数据页中的name为xxx?<br>您的回答是:<br>如果用where里面用k索引的话，还是要把这一页读出来的，所以k这个页用不上change buffer.<br>但是如果name也建了普通索引，那么更新name值这个行为可能被放入change buffer<br>我的疑惑是：是否因为change buffer存储的应该是对二级索引本身的变更，即变更二级索引的值，而不是二级索引所在数据页的叶子节点？","like_count":0},{"had_liked":false,"id":234905,"user_name":"黄时捷","can_delete":false,"product_type":"c1","uid":2039257,"ip_address":"","ucode":"C9FC8F8812F7B1","user_header":"https://static001.geekbang.org/account/avatar/00/1f/1d/d9/746e45be.jpg","comment_is_top":false,"comment_ctime":1594823567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594823567","product_id":100020801,"comment_content":"老师你好，既然说是由另外的线程将内存的数据写回到磁盘的，那写回磁盘后，redo log对应的的日志是不是也要删掉？不然宕机回复的时候，会不会出现已经被写回内存的change buffer(且后面被写到磁盘)，又再次写到change buffer里这种情况？","like_count":0},{"had_liked":false,"id":234250,"user_name":"耶耶耶","can_delete":false,"product_type":"c1","uid":2062187,"ip_address":"","ucode":"48C33A8A75D138","user_header":"https://static001.geekbang.org/account/avatar/00/1f/77/6b/0d66553d.jpg","comment_is_top":false,"comment_ctime":1594630093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594630093","product_id":100020801,"comment_content":"想请问一下，主键包括三列A\\B\\C，假如只有一列C是有递增规律的，那么将主键设置为CAB或者CBA会避免页分裂是嘛，就是将递增的列排在最前面可以避免页分裂是吗","like_count":0},{"had_liked":false,"id":233372,"user_name":"小鱼儿","can_delete":false,"product_type":"c1","uid":1053492,"ip_address":"","ucode":"989EC453936B91","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/34/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1594300734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594300734","product_id":100020801,"comment_content":"老师你好，我有一张表，里面建了唯一索引，需求是，批量添加，如果有重复则更新。请问如何写可以做到性能最优呢？","like_count":0},{"had_liked":false,"id":232218,"user_name":"Geek_2ac804","can_delete":false,"product_type":"c1","uid":1518795,"ip_address":"","ucode":"EDF69B20030BB8","user_header":"","comment_is_top":false,"comment_ctime":1593924782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593924782","product_id":100020801,"comment_content":"可不可以理解为change buffer解决的就是内存更新，他不不进行数据的实际落盘，而redo log解决的就是记录对数据页的修改，并根据他进行数据落盘操作","like_count":0},{"had_liked":false,"id":231412,"user_name":"pedestrian","can_delete":false,"product_type":"c1","uid":1484461,"ip_address":"","ucode":"5A5B9AEA0781F0","user_header":"https://static001.geekbang.org/account/avatar/00/16/a6/ad/41b6e0be.jpg","comment_is_top":false,"comment_ctime":1593671255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593671255","product_id":100020801,"comment_content":"那如果是数据库做了主从同步呢，主库专门负责写入，从库负责查询（可以理解为读写分离）。当去从库查询数据的话，会触发主库去purge吗？  ","like_count":0},{"had_liked":false,"id":228874,"user_name":"静静聆听","can_delete":false,"product_type":"c1","uid":1263932,"ip_address":"","ucode":"0A8600CB928EFE","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","comment_is_top":false,"comment_ctime":1592831823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592831823","product_id":100020801,"comment_content":"老师，阿里编码规约出了，业务上唯一的字段要建唯一索引，从业务角度出发，还是要尽量去建唯一索引，代码控制会有疏漏，从数据库层面控制是最佳的","like_count":0},{"had_liked":false,"id":227711,"user_name":"Geek_46b429","can_delete":false,"product_type":"c1","uid":2034451,"ip_address":"","ucode":"7BC56E4CDF9405","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpk1UiawIpPeZ0Ew0L20EJzbricxrMLibKHJXODbjPJqbHAKO6OT0pib1q25myucmdeqibjcvZFR1pshg/132","comment_is_top":false,"comment_ctime":1592461547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592461547","product_id":100020801,"comment_content":"请问  change buffer  是相对于表的还是相对于数据库的，如果我关闭change buffer 是关闭某张表的change buffer 还是整个数据库的change buffer","like_count":0},{"had_liked":false,"id":226843,"user_name":"shiziwen","can_delete":false,"product_type":"c1","uid":1016917,"ip_address":"","ucode":"ADADC770D82D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","comment_is_top":false,"comment_ctime":1592214277,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592214277","product_id":100020801,"comment_content":"老师您好，文中提到了“change buffer 在内存中有拷贝，也会被写入到磁盘上”，请问change buffer的内容，是在什么时候写入磁盘进行持久化的呢？<br>图2中可以看到，change buffer的内容除了在buffer poll中外，还存在了system table space(ibdata1)，这里的system table space，是不是就是所谓的磁盘上的数据呢？<br>谢谢","like_count":0},{"had_liked":false,"id":226595,"user_name":"傻傻的帅","can_delete":false,"product_type":"c1","uid":1668617,"ip_address":"","ucode":"14A795523A682E","user_header":"https://static001.geekbang.org/account/avatar/00/19/76/09/62a10668.jpg","comment_is_top":false,"comment_ctime":1592147991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592147991","product_id":100020801,"comment_content":"老师，有个问题一直没搞明白，change buffer缓存的是数据页还是普通索引页。","like_count":0},{"had_liked":false,"id":226532,"user_name":"扩散性百万咸面包","can_delete":false,"product_type":"c1","uid":1905171,"ip_address":"","ucode":"6D703D51553B42","user_header":"https://static001.geekbang.org/account/avatar/00/1d/12/13/e103a6e3.jpg","comment_is_top":false,"comment_ctime":1592130325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592130325","product_id":100020801,"comment_content":"老师，在你举的这个例子中，感觉change buffer里记录的和redo log操作的目的有点类似，只不过change buffer记录page不在内存时的更新，而redo log则记录整个事务的操作，并且持久化到磁盘。读一个被修改过后的Page到内存，如果可以在change buffer里有对应记录则用merge来恢复，否则就用redo log file来恢复？","like_count":0},{"had_liked":false,"id":226452,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1592107058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592107058","product_id":100020801,"comment_content":"断电重启后change buffer不会丢失，这个在文中就可以找到、change buffer是可持久化的数据、change buffer在内存中是有拷贝的、也会写入磁盘","like_count":0},{"had_liked":false,"id":224300,"user_name":"Fox","can_delete":false,"product_type":"c1","uid":1024889,"ip_address":"","ucode":"273FD7DA55CA9F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/79/505dcca7.jpg","comment_is_top":false,"comment_ctime":1591339925,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591339925","product_id":100020801,"comment_content":"关于唯一索引有个问题想请教一下。唯一索引是允许多个null值存在的，这样不是就不符合唯一性的约束了吗？猜想MySQL 应该是有另外的机制处理多个null，想请教一下这个机制是什么？<br>另外，null值是不是也存储在b+树里面呢？如果是的话，那查找的时候null值怎么用二分法查找呢？","like_count":0,"discussions":[{"author":{"id":1024889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a3/79/505dcca7.jpg","nickname":"Fox","note":"","ucode":"273FD7DA55CA9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279464,"discussion_content":"测试了一下，null不能用等值查询，所以应该不是在索引树中查询，应该不是存索引树里面，很好奇null值是怎么存储的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591349051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223371,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":2016657,"ip_address":"","ucode":"07AD2487087D17","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/AkS4rJAdkt5icChtbYGLLP2TficUDBHYCwUDHsP8wtfPeq6YUWYyvcKbZWV5p1hQuxQNaZf0G4axI5ibqPR7ia6ZCg/132","comment_is_top":false,"comment_ctime":1591075184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591075184","product_id":100020801,"comment_content":"插入数据时应该时按主键顺序插入的应该时顺序io啊，所以change buffer的作用是更新辅助索引的数据时使用的吗","like_count":0},{"had_liked":false,"id":222509,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1590824231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590824231","product_id":100020801,"comment_content":"change buffer的功能，可以由redo log代劳嘛，也就是说，读的时候，从磁盘读取的数据和redo log数据做merge。","like_count":0},{"had_liked":false,"id":222473,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1590814547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590814547","product_id":100020801,"comment_content":"“因此，唯一索引的更新就不能使用 change buffer，实际上也只有普通索引可以使用”  那么老师，我想问下，没有索引 可以使用change buffer吗。","like_count":0},{"had_liked":false,"id":220362,"user_name":"kakakovic","can_delete":false,"product_type":"c1","uid":1112164,"ip_address":"","ucode":"ADE35A09D6A9EC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/64/5f3634ef.jpg","comment_is_top":false,"comment_ctime":1590226432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590226432","product_id":100020801,"comment_content":"为什么唯一索引判断唯一性要把数据页加载到内存中","like_count":0},{"had_liked":false,"id":218799,"user_name":"Geek_a8be59","can_delete":false,"product_type":"c1","uid":1563985,"ip_address":"","ucode":"BEC0F57B51DC44","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","comment_is_top":false,"comment_ctime":1589877154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589877154","product_id":100020801,"comment_content":"CREATE TABLE `t1` (<br>  `id` int(11) NOT NULL AUTO_INCREMENT,<br>  `name` varchar(10) DEFAULT NULL,<br>  `city` varchar(10) DEFAULT NULL,<br>  `age` tinyint(4) DEFAULT &#39;1&#39;,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `index_city_name` (`city`,`name`)<br>) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4;<br>对应的数据如下：<br>------------------<br>1\t小楼\t上海\t1<br>2\t2\t北京\t1<br>3\t3\t深圳\t4<br>------------------<br>我唯一索引设置了city和name（只是试验随便设置的），当我查找select id from t1 where name = 2，这条语句的时候按照之前说的最左匹配原则，应该是匹配不到唯一索引，但是结果使用通过explain使用的index_city_name索引，而且是扫描了3行。<br>根据上面现象有两点疑问：<br>第一点:<br>多个组合的唯一索引只要查询中包含了唯一索引中的一个字段且没有满足最左匹配的就会使用唯一索引所有字段么？ 如果这样走 唯一索引和走聚簇索引的区别又在哪里呢？<br>第二点：<br>我发现当下面的sql的时候，select * from t1 where city = 1，即city是varchar 我用int的 1去查询，虽然满足了最左匹配，但是实际并没有用索引，这是为什么？ 如果1改成字符串的1就用到了index_city_name中city索引<br><br>数据库版本：5.5.53<br><br>请老师回答一下 ，比较疑惑，谢谢","like_count":0},{"had_liked":false,"id":218674,"user_name":"收","can_delete":false,"product_type":"c1","uid":1599768,"ip_address":"","ucode":"EC3338DB7AEF34","user_header":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","comment_is_top":false,"comment_ctime":1589852875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589852875","product_id":100020801,"comment_content":"Buffer pool存入磁盘，避免写状态丢失，是不是就是MySQL的&quot;double write&quot;","like_count":0},{"had_liked":false,"id":218535,"user_name":"落石","can_delete":false,"product_type":"c1","uid":1184061,"ip_address":"","ucode":"11F60E700E96B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/3d/7b9161ca.jpg","comment_is_top":false,"comment_ctime":1589814754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589814754","product_id":100020801,"comment_content":"老师您好。进来有点晚，不知您还能看到不。请问下<br>更新 changeBuffer 时会写redo log。那在更新时，已命中ChangeBuffer的情况为何会写两条记录？意义是什么？","like_count":0},{"had_liked":false,"id":217547,"user_name":"雪の雫·雨の音","can_delete":false,"product_type":"c1","uid":1997293,"ip_address":"","ucode":"0693DA3939A321","user_header":"https://static001.geekbang.org/account/avatar/00/1e/79/ed/4737a49b.jpg","comment_is_top":false,"comment_ctime":1589531424,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589531424","product_id":100020801,"comment_content":"老师您好！我对于changebuffer和redolog的理解是，changebuffer是用于将磁盘中的数据页读入到内存以后进行更新的，而redolog是用作把对数据的修改写入磁盘的。这样的理解是否有误？还请您指正：）","like_count":0},{"had_liked":false,"id":217294,"user_name":"Geek_a8be59","can_delete":false,"product_type":"c1","uid":1563985,"ip_address":"","ucode":"BEC0F57B51DC44","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","comment_is_top":false,"comment_ctime":1589456950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589456950","product_id":100020801,"comment_content":"老师请问一下 为何在merge的时候要在redolog再记录一次","like_count":0},{"had_liked":false,"id":216871,"user_name":"军哥嘹亮","can_delete":false,"product_type":"c1","uid":1691709,"ip_address":"","ucode":"0CA718A723F312","user_header":"https://static001.geekbang.org/account/avatar/00/19/d0/3d/2a7508e9.jpg","comment_is_top":false,"comment_ctime":1589358482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589358482","product_id":100020801,"comment_content":"老师。请教一个问题，我们处理数据在一个事务内insert，然后提交事务。紧接着事务外查询，发现有的时候查询不到数据。","like_count":0},{"had_liked":false,"id":216792,"user_name":"王鹤翎","can_delete":false,"product_type":"c1","uid":1795749,"ip_address":"","ucode":"38DC50B08E1A0E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/66/a5/85d88ae3.jpg","comment_is_top":false,"comment_ctime":1589343292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589343292","product_id":100020801,"comment_content":"change buffer真是全局设置的，如果既有更新立即读，也有更新不立即读，两种场景都比较多，那changge buffer如何设置呢？","like_count":0},{"had_liked":false,"id":216111,"user_name":"蔡桦","can_delete":false,"product_type":"c1","uid":1810077,"ip_address":"","ucode":"75487714CC3820","user_header":"https://static001.geekbang.org/account/avatar/00/1b/9e/9d/19984974.jpg","comment_is_top":false,"comment_ctime":1589191170,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589191170","product_id":100020801,"comment_content":"老师，想问一个问题，如果在创建表的时候给一列加上了唯一性，再给这一列创建普通索引，此时这个索引是不是跟唯一索引是一样的啊？","like_count":0},{"had_liked":false,"id":214736,"user_name":"GaGi","can_delete":false,"product_type":"c1","uid":1099053,"ip_address":"","ucode":"CC8D22E1DD8CA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c5/2d/1eebfc3c.jpg","comment_is_top":false,"comment_ctime":1588812193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588812193","product_id":100020801,"comment_content":"老师，更新的时候，change buffer还有用处吗？<br>我理解更新需要先知道对应的行记录，这时就要将innodb引擎层的数据加载到buffer pool中，然后再做更新操作，那这样岂不是利用不了change buffer的好处吗？","like_count":0},{"had_liked":false,"id":213891,"user_name":"BugBean","can_delete":false,"product_type":"c1","uid":1834181,"ip_address":"","ucode":"B51232281AD9BC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","comment_is_top":false,"comment_ctime":1588585267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588585267","product_id":100020801,"comment_content":"老师您好，不知道可不可以这样理解，因为InnoDB肯定存在主键，所以每次insert的时候都不能用change buffer","like_count":0},{"had_liked":false,"id":213885,"user_name":"BugBean","can_delete":false,"product_type":"c1","uid":1834181,"ip_address":"","ucode":"B51232281AD9BC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","comment_is_top":false,"comment_ctime":1588584401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588584401","product_id":100020801,"comment_content":"老师您好，有的说法是在许多操作系统中，页的大小通常为4k，请问操作系统的页和InnoDB的页是一样的概念吗？","like_count":0},{"had_liked":false,"id":211362,"user_name":"达达队长","can_delete":false,"product_type":"c1","uid":1117597,"ip_address":"","ucode":"1C3F2E4F6B7637","user_header":"https://static001.geekbang.org/account/avatar/00/11/0d/9d/58d09086.jpg","comment_is_top":false,"comment_ctime":1587952734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587952734","product_id":100020801,"comment_content":"老师好，change buffer 持久化到系统表空间持久化的是什么呀？ change buffer的操作不是被redo log 记录了，这点有点搞不懂","like_count":0},{"had_liked":false,"id":211250,"user_name":"Mr_freezing37","can_delete":false,"product_type":"c1","uid":1061402,"ip_address":"","ucode":"BB605A6FEDCEB6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/y5NFbibdKCFCg0lHKK5ERGOQWXYYK7jhnqm2BxQ6r7tWvXx8uDmibglweejDWU39BTmDSAtBJGj1ibOZK2uIHQyqg/132","comment_is_top":false,"comment_ctime":1587923039,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587923039","product_id":100020801,"comment_content":"《MYSQL技术内幕InnoDB存储引擎》一书的2.6.2章节两次写，有提到doublewrite buffer。书中举例掉电瞬间数据页只写了一部分的情况：部分写失效。数据无法从redo恢复，因为数据页损毁了。这时可以从doublewrite buffer的共享表空间找到页的副本，据此副本恢复表空间的数据页，再执行redo恢复。<br><br>两点不理解：<br>1. change buffer运行机制中，有无数据页部分失效的情况，如果有是如何处理的？<br>2. change buffer 与doublewrite buffer的功能很像，是一回事吗？","like_count":0},{"had_liked":false,"id":210874,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1587858705,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587858705","product_id":100020801,"comment_content":"请教下老师和各位同学，对于插入来说，MySQL用绑定变量的方式和不用绑定变量方式差别大不？我看更多是用批量优化插入性能，是不是说绑定变量方式性能提升小那，版本8.0以上","like_count":0},{"had_liked":false,"id":210302,"user_name":"侧耳倾听","can_delete":false,"product_type":"c1","uid":1512642,"ip_address":"","ucode":"5BF2A2440B54F0","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","comment_is_top":false,"comment_ctime":1587717492,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587717492","product_id":100020801,"comment_content":"redo log和change buffer都会记录数据的更新信息，当RingBuffer没有空间了，需要同步一部分数据到磁盘，那么此时change buffer中记录的对应行的更新信息怎么处理？crash safe过程中，记录是如何在文件中保存的？应该是顺序追加，有rowversion吗？","like_count":0},{"had_liked":false,"id":210295,"user_name":"侧耳倾听","can_delete":false,"product_type":"c1","uid":1512642,"ip_address":"","ucode":"5BF2A2440B54F0","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","comment_is_top":false,"comment_ctime":1587715885,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587715885","product_id":100020801,"comment_content":"身份证号的唯一索引和普通索引的问题，首先如果是普通索引，那么我们建立的是身份证+名字的联合索引，那么叶子节点里需要保存的是主键，这么看来需要额外加一列。从检索上来说，因为是联合索引，无法判定身份证的唯一性，需要落到页上，额外遍历一条数据，性能差别不大。但是有个问题需要考虑，内存页大小16k，普通索引和唯一索引一页保存的数据量是不一样的，唯一索引未命中内存页的概率会不会相对大一些？普通索引也有问题，首先如果数据库不保证身份证的唯一性，那么就需要在业务层去避免，需要做一次check。还有如果加一列自增列为主键，在登录的时候就需要取得一个自增ID，这个获取的过程需要加锁。<br>这么看来都是各有利弊。<br>我有几个问题麻烦老师确认一下<br>1索引和记录的mapping关系，意思是命中索引后，记录是如何读到内存页中的，如何知道索引的数据在文件中从哪开始？<br>2内存页中的数据是按照文件的写入顺序排列吗？B+树的叶子节点是页，如果是乱序那么身份证的唯一性确认如何做？<br>","like_count":0},{"had_liked":false,"id":209754,"user_name":"初音未来","can_delete":false,"product_type":"c1","uid":1274518,"ip_address":"","ucode":"3AE23DBC649B97","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erKFNFAQl3ibwlic54a5SQYAMhQYeVtMnSmMahZZjyqG2d66whxbEE3I3IyD07pSmte5DSibr71m6A9g/132","comment_is_top":false,"comment_ctime":1587609112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587609112","product_id":100020801,"comment_content":"对  ”这个记录要更新的目标页不在内存中” 这段话有疑问<br>插入 文中所说的数据（4,400），<br>在插入数据之前，业务层面会保证数据的唯一性，业务应用会先select 这个数据，以确保这个数据唯一，老师说读取数据会把数据页读入内存，那不就直接更改内存更好吗？<br>即使是普通索引我认为也会先把数据读入内存，而不是直接写入change buffer。请老师帮忙解答一下这个疑虑","like_count":0},{"had_liked":false,"id":209494,"user_name":"初音未来","can_delete":false,"product_type":"c1","uid":1274518,"ip_address":"","ucode":"3AE23DBC649B97","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erKFNFAQl3ibwlic54a5SQYAMhQYeVtMnSmMahZZjyqG2d66whxbEE3I3IyD07pSmte5DSibr71m6A9g/132","comment_is_top":false,"comment_ctime":1587559249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587559249","product_id":100020801,"comment_content":"读入没有索引的字段到内存中，数据是有序的吗？","like_count":0},{"had_liked":false,"id":208783,"user_name":"幼儿编程教学","can_delete":false,"product_type":"c1","uid":1237199,"ip_address":"","ucode":"F13F3150E6CAE9","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","comment_is_top":false,"comment_ctime":1587437851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587437851","product_id":100020801,"comment_content":"&gt;对于唯一索引来说，需要将数据页读入内存，判断到没有冲突，插入这个值，语句执行结束；<br><br>这里说的数据页，是指包含数据的数据页么？还是二级索引的叶子节点（包含主键id）？<br>我觉得，好像只要读二级索引那棵树就可以判断是否唯一？不需要有回表那个过程？","like_count":0},{"had_liked":false,"id":208517,"user_name":"幼儿编程教学","can_delete":false,"product_type":"c1","uid":1237199,"ip_address":"","ucode":"F13F3150E6CAE9","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","comment_is_top":false,"comment_ctime":1587374740,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"1587374740","product_id":100020801,"comment_content":"有点迷糊，请教<br><br>普通索引，记录不在内存中，只需要执行<br>&gt;对于普通索引来说，则是将更新记录在 change buffer，语句执行就结束了。<br><br>疑问：如果没索引，是不是也能利用 change buffer 机制？使得写入效率大大提高？","like_count":0,"discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336999,"discussion_content":"没索引就不需要 change buffer了，因为需要插入的只有主键索引了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608744783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1237199,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","nickname":"幼儿编程教学","note":"","ucode":"F13F3150E6CAE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338823,"discussion_content":"插入主键索引，直接写硬盘？应该也是写到change buffer中，提高性能吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609391841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336999,"ip_address":""},"score":338823,"extra":""},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237199,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","nickname":"幼儿编程教学","note":"","ucode":"F13F3150E6CAE9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338945,"discussion_content":"主键索引要判断主键是否唯一，就必须把数据页读入内存，所以主键索引用不上change buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609434051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338823,"ip_address":""},"score":338945,"extra":""},{"author":{"id":1237199,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","nickname":"幼儿编程教学","note":"","ucode":"F13F3150E6CAE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339543,"discussion_content":"相当于是每个索引，一个change buffer？\n如果我表有主键，且有普通索引，普通索引用change buffer？主键因为判断唯一性，用不到？\n\n所以，最终，普通索引，还是能使用change buffer加速？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609727417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338945,"ip_address":""},"score":339543,"extra":""}]}]},{"had_liked":false,"id":208364,"user_name":"一天到晚游泳的蜗牛","can_delete":false,"product_type":"c1","uid":1612985,"ip_address":"","ucode":"6899D26D5C6098","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoTibsAg7RIHibXA2uyyiauAv1rj0g4UuziaY6bc03YWEjic5Bd2Fd7UDdbHQ9rDdz6og7UGVBMuMnruEQ/132","comment_is_top":false,"comment_ctime":1587345370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587345370","product_id":100020801,"comment_content":"老师：对于普通索引的查找问题，文中说到“对于普通索引来说，查找到满足条件的第一个记录（5，500）后，需要查找下一个记录，直到碰到第一个不满足k=5条件的记录”我有两个问题不太明白：1，普通索引在查找到第一条符合条件的记录后需要查找下一个记录，不应该是一直往下找，一直找到最后一条记录为止吗？对于文中说的“直到碰到第一个不满足条件的记录”这一句我不太理解；2，普通索引的查找操作是不是意味着要进行该表索引的全部扫描？","like_count":0},{"had_liked":false,"id":208219,"user_name":"红颜铭心","can_delete":false,"product_type":"c1","uid":1889026,"ip_address":"","ucode":"18F94E5444C71A","user_header":"","comment_is_top":false,"comment_ctime":1587303752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587303752","product_id":100020801,"comment_content":"老师，有个疑问：<br>当二级索引的页面不在缓冲池中，change buffer会缓存对二级索引(非唯一索引)的数据操作。<br>change buffer只作用于buffer pool的index page，要是data page有更改，还是要从磁盘刷取数据页到内存进行更新。<br>文中例子太有误导性了，change buffer就是为了优化索引数据页的更新，减少非唯一索引更新操作导致的随机IO，至于数据页更新的随机读IO不可避免。","like_count":0},{"had_liked":false,"id":208209,"user_name":"红颜铭心","can_delete":false,"product_type":"c1","uid":1889026,"ip_address":"","ucode":"18F94E5444C71A","user_header":"","comment_is_top":false,"comment_ctime":1587302650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587302650","product_id":100020801,"comment_content":"老师，有几个疑问：<br>1.对于insert操作，表里一定会有主键索引，主键索引一定是唯一索引，innodb_change_buffering设置为inserts会生效吗？<br>2.Page 2 没有在内存中，就在内存的 change buffer 区域，记录下“我要往 Page 2 插入一行”这个信息<br>  对于insert操作，change buffer如何记录数据写在哪一个数据页上？<br>  1.大量写操作，单个数据页存储不下，change buffer记录的预写数据页是如何计算的?<br>  2.如果执行写操作，主键id出现很大的gap，比如insert id 1 + insert id 10亿，这两条记录change buffer如何确定数据页？会不会造成数据页空洞？<br>3.changebuffer定时刷盘&#47;redolog写满&#47;数据库空闲或关闭，也会将数据页刷新到内存执行merge操作，同时还会更新changebuffer移除之前的记录信息吗？","like_count":0},{"had_liked":false,"id":206181,"user_name":"刘郑楼","can_delete":false,"product_type":"c1","uid":1937853,"ip_address":"","ucode":"F4D4F03BA94392","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IXFaqWA1whDcclqFtEkRu96icx1zqINCTzkl7k8MQFGyQ9aTsyO9plg5jgehDde9r0SPtNCvWMePKIrWokugqmA/132","comment_is_top":false,"comment_ctime":1586818454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586818454","product_id":100020801,"comment_content":"“对于唯一索引来说，所有的更新操作都要先判断这个操作是否违反唯一性约束。比如，要插入 (4,400) 这个记录，就要先判断现在表中是否已经存在 k=4 的记录，而这必须要将数据页读入内存才能判断。如果都已经读入到内存了，那直接更新内存会更快，就没必要使用 change buffer 了。”<br>针对这个解释为什么唯一索引用不上change  buffer，有几点不太明白，<br>1. change  buffer也是内存，上面说直接读到内存中做判断，这个内存有啥区别？<br>2. 唯一索引操作前，为啥不能先在内存中判断唯一性，如果找不到再将数据页读入内存？反正只要在内存中找到第一个符合的即可<br>3. 对于非唯一索引难道不需要将数据页读入内存中吗？两者的区别还是没太明白<br><br>谢谢老师讲解","like_count":0},{"had_liked":false,"id":205876,"user_name":"L-伟彪","can_delete":false,"product_type":"c1","uid":1930296,"ip_address":"","ucode":"9A21FD80FD7A93","user_header":"https://static001.geekbang.org/account/avatar/00/1d/74/38/93e4694a.jpg","comment_is_top":false,"comment_ctime":1586749731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586749731","product_id":100020801,"comment_content":"老师我想问下，如果一张表table1有(id,k,l)三个字段,然后建了(k)的索引和 (l,k)的联合索引,在对k进行更新操作的时候,change buff记录了变更,然后对k进行查询(select * from table1 where k=2)，这个时候change buff会对k索引的对应数据页进行merge，那联合索引(l,k)的数据要怎么更新？","like_count":0},{"had_liked":false,"id":204440,"user_name":"Vongola","can_delete":false,"product_type":"c1","uid":1047073,"ip_address":"","ucode":"F2FDAEBC049CBC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/21/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1586400467,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1586400467","product_id":100020801,"comment_content":"老师，我想问一下change buffer 在内存中有拷贝，也会被写入到磁盘上，那么它什么时候写入磁盘呢？","like_count":0},{"had_liked":false,"id":198644,"user_name":"王立","can_delete":false,"product_type":"c1","uid":1904760,"ip_address":"","ucode":"44A4EF95403731","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcDQ0kYYy2knpK8sTqicvG2Ukb1HdeE0fMMSINiagU401uibLicbIXVwRG7coDyDTOuYCSA/132","comment_is_top":false,"comment_ctime":1585461447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585461447","product_id":100020801,"comment_content":"没写redo log之前数据丢失，写了之后不丢失<br>","like_count":0},{"had_liked":false,"id":197595,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1585387216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585387216","product_id":100020801,"comment_content":"如果会滚了，change buffer里的数据怎么处理","like_count":0},{"had_liked":false,"id":195465,"user_name":"华振宇","can_delete":false,"product_type":"c1","uid":1908392,"ip_address":"","ucode":"2962084A13FE57","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1e/a8/225e715b.jpg","comment_is_top":false,"comment_ctime":1585189718,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585189718","product_id":100020801,"comment_content":"我来的晚，今天刚学到这里，我有几个问题：<br>1、只要某数据页数据已经在内存中了，那么change buff对这个数据页也就没用了，那么change buff里关于这个数据页的更新记录会清掉吗？会在什么时候清掉？<br>2、如果change buff有某数据页的数据，但此数据页的数据一直都没有同步的没存中，那么数据最后是怎么同步到磁盘上的<br>3、我记得在第二章讲更新语句流程的时候，执行更新语句之前会执行查询语句，如果这样像update和delete语句是不是changge buff就用不上了<br>谢谢老师！！！","like_count":0},{"had_liked":false,"id":190989,"user_name":"while (1)等;","can_delete":false,"product_type":"c1","uid":1061991,"ip_address":"","ucode":"BAEC7258D65B69","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/67/06a7f9be.jpg","comment_is_top":false,"comment_ctime":1584716295,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584716295","product_id":100020801,"comment_content":"看完评论更不懂了，change buff里只是记录的修改，不是还要读磁盘找到源数据merge吗？不是比直接读源数据还多了很多操作吗？","like_count":0},{"had_liked":false,"id":189972,"user_name":"helloworld2018","can_delete":false,"product_type":"c1","uid":1210386,"ip_address":"","ucode":"2AE40C0DF5A9F7","user_header":"https://static001.geekbang.org/account/avatar/00/12/78/12/7df38a54.jpg","comment_is_top":false,"comment_ctime":1584587021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584587021","product_id":100020801,"comment_content":"请问老师，基础篇02说过，update的时候不都是先将数据页读入到内存中的吗？所以说update的时候内存里肯定是有数据页的吧","like_count":0},{"had_liked":false,"id":189326,"user_name":"Geek_103be1","can_delete":false,"product_type":"c1","uid":1787985,"ip_address":"","ucode":"31BB2DAFB7C06C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/LBiaGCiaccvTvibCJdLdFdnVkH1mPbZ4Sar84o74tRP7ld59HbhE0oqXibta80GezBC81Y20WtA99s9fmiaOKVmickwg/132","comment_is_top":false,"comment_ctime":1584500466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584500466","product_id":100020801,"comment_content":"老师，您好，数据在更新的时候，我记得要写一次log buffer的日志后再写redo log，是这样吗？","like_count":0},{"had_liked":false,"id":188791,"user_name":"请叫我紫皮书","can_delete":false,"product_type":"c1","uid":1203288,"ip_address":"","ucode":"29F98AB3A5D98E","user_header":"https://static001.geekbang.org/account/avatar/00/12/5c/58/590d0a43.jpg","comment_is_top":false,"comment_ctime":1584416164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584416164","product_id":100020801,"comment_content":"老师我有几个疑问，change buffer都缓存了对聚集索引页和普通索引页的修改么？文中列子page2不在内存中，那change buffer记录对页修改的是物理日志还是逻辑日志，对page2修改的redo log是在merge时写入的还是在执行sql时写入的，如果是在执行sql时写入的那是怎么知道对page2修改位置的？望老师解惑","like_count":0},{"had_liked":false,"id":187344,"user_name":"独舟泛海","can_delete":false,"product_type":"c1","uid":1238514,"ip_address":"","ucode":"E35C8CEFAF062D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/f2/21ea4d37.jpg","comment_is_top":false,"comment_ctime":1584087972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584087972","product_id":100020801,"comment_content":"老师,我有几个问题想请教下:<br>1.chenge buffer里面的数据是对页的操作，但是这时怎么知道这条数据应该在哪页呢？","like_count":0},{"had_liked":false,"id":187017,"user_name":"Kvicii.Y","can_delete":false,"product_type":"c1","uid":1442588,"ip_address":"","ucode":"446BFA633569EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","comment_is_top":false,"comment_ctime":1583991988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583991988","product_id":100020801,"comment_content":"“要读 Page 2 的时候，需要把 Page 2 从磁盘读入内存中，然后应用 change buffer 里面的操作日志，生成一个正确的版本并返回结果。”，这个时候是会触发merge操作的吧？？如果发生了，是不是意味着读和merge是有先后顺序的还是并行的？","like_count":0},{"had_liked":false,"id":186565,"user_name":"深白色","can_delete":false,"product_type":"c1","uid":1123171,"ip_address":"","ucode":"C4B26AB70D8A6D","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/63/4fb6fee0.jpg","comment_is_top":false,"comment_ctime":1583885248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583885248","product_id":100020801,"comment_content":"关于change buffer持久化的疑问，所有change buffer都记录在redo中，重启一样可以恢复啊。是不是redo是有大小限制的，采用循环写，会存在覆盖的情况，redo中并不能保存所有的change buffer，所以才需要持久化？如果是这样，redo在覆盖的时候把之前的change buffer进行merge操作，是不是change buffer就可以不用持久化了？","like_count":0},{"had_liked":false,"id":184447,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1583317313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583317313","product_id":100020801,"comment_content":"有个问题哈，如果更新某条数据，既写了change buffer，又写了redo log，那等到redo log罗盘后。下次查询该数据，从磁盘读取到内存，这时候，读取到的数据已经是正确的了啊，那change buffer还需要进行merge吗，如果需要的话，好像没什么必要吧","like_count":0},{"had_liked":false,"id":183996,"user_name":"まてよ","can_delete":false,"product_type":"c1","uid":1744694,"ip_address":"","ucode":"427C036F414FF5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9f/36/16e8d324.jpg","comment_is_top":false,"comment_ctime":1583200791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583200791","product_id":100020801,"comment_content":"对于 DML 不是会返回影响了几行吗？insert 还能计算，对于 update 和 delete ，如果只写 change buffer 没有读入内存，怎么判断影响的行数呢？","like_count":0},{"had_liked":false,"id":183937,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1583164658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583164658","product_id":100020801,"comment_content":"关闭change buffer是将innodb_change_buffer_max_size设置为0吗？<br>如果是的话，那就设置了整个库的。但是我想设置某个表的怎么办。","like_count":0},{"had_liked":false,"id":182858,"user_name":"ipofss","can_delete":false,"product_type":"c1","uid":1018620,"ip_address":"","ucode":"DE3061C9259F9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","comment_is_top":false,"comment_ctime":1582877432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582877432","product_id":100020801,"comment_content":"没有change buffer时，redo log分2阶段，先redo log的prepare状态，再写binlog，最后redo log的commit装填。<br><br>有change buffer时，在redo log之前完成，也就是change buffer里有2部分数据，一部分已经写了redo log，这部分不存在数据丢失问题，一部分没写redo log，这部分会丢失，但由于连binlog里也没有，也就不存在脏数据，对MySQL来说，重启之后，好像丢失的那些change buffer里的语句从来没见过似的。","like_count":0},{"had_liked":false,"id":182856,"user_name":"天亮前说晚安","can_delete":false,"product_type":"c1","uid":1541014,"ip_address":"","ucode":"1D82EE562A7C71","user_header":"https://static001.geekbang.org/account/avatar/00/17/83/96/73ff13a0.jpg","comment_is_top":false,"comment_ctime":1582876807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582876807","product_id":100020801,"comment_content":"1、主键索引是不是也是唯一索引的情况？不会使用change buffer，所以主键索引最好设计成单调递增，这样可以顺序写。<br>2、普通索引页分裂是不是比唯一索引页分裂影响小，因为有change  buffer，分裂过程是异步的，MySQL会在空闲时间执行该过程。","like_count":0},{"had_liked":false,"id":182700,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1582853009,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582853009","product_id":100020801,"comment_content":"对chang buffer和redo log之间的理解：其实change buffer是普通索引为了减少io read的操作而设置的。它会在后台做merge。<br>我的疑问就是：为啥它merge到了系统表空间（ibdata1)，而不是数据最终的存放位置数据表空间（t.ibd）？这两者之间的联系是什么？","like_count":0},{"had_liked":false,"id":179474,"user_name":"阿德","can_delete":false,"product_type":"c1","uid":1602420,"ip_address":"","ucode":"186D5E19E3CB6E","user_header":"https://static001.geekbang.org/account/avatar/00/18/73/74/3bf4b74e.jpg","comment_is_top":false,"comment_ctime":1582011765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582011765","product_id":100020801,"comment_content":"changebuffer知识点，说到如果要更新的数据页没有在内存，就先写入changebuffer。  我这里有个疑问，当update的时候，比如update  表_t set a＝1 where b＝10; 这里b是普通索引。<br>是否应该先读出数据页查找b＝10这行数据是否存在?①如果是，那么这样数据页就会加载到内存，自然更新就直接更改内存的，那么changebuffer好像没有用到。  <br>②如果不用先判断是否存在，那么是否就是先将更新记录在changebuffer，然后等到merge时，发现没有存在直接丢弃这个更新","like_count":0},{"had_liked":false,"id":179246,"user_name":"星星","can_delete":false,"product_type":"c1","uid":1259219,"ip_address":"","ucode":"0495A81BBC98A7","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d3/5d0f3222.jpg","comment_is_top":false,"comment_ctime":1581944059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581944059","product_id":100020801,"comment_content":"老师我有一个疑问：<br>changebuffer能够记录二级索引的更新操作，下一次查询的时候再应用到页，这样的话changebuffer是否相当于之前讲孔乙己赊账例子中的粉板，redolog的作用仅仅是保证了crash-safe","like_count":0},{"had_liked":false,"id":177790,"user_name":"月迷津渡","can_delete":false,"product_type":"c1","uid":1264111,"ip_address":"","ucode":"2B18B2FE3DAC3B","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","comment_is_top":false,"comment_ctime":1581500615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581500615","product_id":100020801,"comment_content":"有个问题没太明白 redolog积攒一波可以写数据文件。<br>用户在读取到对应数据时候会结合db数据然后apply changebuffer 返回客户端 然后存在内存里？<br>changeBuffer清除的时机是什么。和redolog刷盘的时机有什么关系？<br>会不会出现双刷？没太想明白这块内容","like_count":0},{"had_liked":false,"id":176582,"user_name":"风云变","can_delete":false,"product_type":"c1","uid":1510011,"ip_address":"","ucode":"E586B6E3FD5157","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJgtVYia3HhaS65DjiaWBfTJj0yded6xBZbw0jT3IOxcqQibLz3yibw5KXK515tYXr3iaMibcywadst6C1w/132","comment_is_top":false,"comment_ctime":1581091933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581091933","product_id":100020801,"comment_content":"机器掉电后，change buffer中部分数据可以从system table space中恢复，如果没有了，还可以从redolog中找回，结合旧的数据页进行前滚。","like_count":0},{"had_liked":false,"id":175311,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1215139,"ip_address":"","ucode":"258880ACE79448","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/a3/aee7ded7.jpg","comment_is_top":false,"comment_ctime":1580651364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580651364","product_id":100020801,"comment_content":"还是有疑惑 <br>机器掉电重启 ，根据 “需要说明的是，虽然名字叫作 change buffer，实际上它是可以持久化的数据。也就是说，change buffer 在内存中有拷贝，也会被写入到磁盘上。” <br>change buffer 中的数据持久化到磁盘因此可以恢复到重启以前；<br>根据redolog和binlog的状态确保数据库的数据一致性。<br>看到置顶的感觉和自己的理解不一样<br>","like_count":0},{"had_liked":false,"id":175237,"user_name":"雨蒙蒙","can_delete":false,"product_type":"c1","uid":1813288,"ip_address":"","ucode":"06B17333308863","user_header":"","comment_is_top":false,"comment_ctime":1580625872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580625872","product_id":100020801,"comment_content":"老师好，图3中 要读 Page 2 的时候，需要把 Page 2 从磁盘读入内存中，然后应用 change buffer 里面的操作日志，生成一个正确的版本并返回结果。有两个问题：<br>1、这个读取过程中已经发生merge，这时chang buffer还存在这个变更记录吗？<br>2、不存在的话，ibdata共享表空间中的这个change记录在哪个过程中删除？","like_count":0},{"had_liked":false,"id":175186,"user_name":"十大杰出青年","can_delete":false,"product_type":"c1","uid":1559178,"ip_address":"","ucode":"BAB4AA12604CF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/a5U0nqaicLy5ZJkESxBd5lMicNQcTTDK8vURyyWiabHxic7vS1VVk7HWTZg6ltyWJ3n9jb3Gq554ibfjsf7bv1v1Sdw/132","comment_is_top":false,"comment_ctime":1580607318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580607318","product_id":100020801,"comment_content":"老师，我看您评论说：<br>第一步，merge其实是从磁盘读数据页到内存，然后应用，这一步都是更新的内存，同时写redolog<br>但文中也说page2不在内存中，写了change buffer后再写redo log，那写redo log具体是在什么时候写呀？是写完change buffer写还是merge的时候写呢？","like_count":0},{"had_liked":false,"id":173917,"user_name":"SuperSnow","can_delete":false,"product_type":"c1","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1579782142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579782142","product_id":100020801,"comment_content":"老师，请教两个问题：<br>1、change buffer是占用的buffer pool一部分空间的，而只有执行相应数据页的读取后，才会触发merge操作。如果我迟迟没有执行相应数据页的读取，那change buffer的更新的数据很多，占满了相应的内存空间，那会执行什么样的动作，或者有什么样的机制呢？<br>2、我在评论区里面看到change buffer还涉及到写redo log，但我在文章中并没有发现这类字眼，这是什么意思呢？","like_count":0},{"had_liked":false,"id":173916,"user_name":"SuperSnow","can_delete":false,"product_type":"c1","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1579781362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579781362","product_id":100020801,"comment_content":"啥意思，change buffer什么时候写到redo log中，文章里面没有提到啊。","like_count":0},{"had_liked":false,"id":170288,"user_name":"最初的印象","can_delete":false,"product_type":"c1","uid":1228852,"ip_address":"","ucode":"4DD68307FA274E","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/34/0574bb44.jpg","comment_is_top":false,"comment_ctime":1578561654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578561654","product_id":100020801,"comment_content":"如果一张表里(如：users表)已经有一个字段是唯一索引了比如card_id，那后面如果要把其他字段（如：user_name）加索引，此时如果加普通索引也用不到change buffer了吧，因为每次新增的时候都得检查card_id是否唯一，此时已经和user_name的索引类型无关了吧","like_count":0},{"had_liked":false,"id":167892,"user_name":"…","can_delete":false,"product_type":"c1","uid":1488435,"ip_address":"","ucode":"381A9A19857A6F","user_header":"","comment_is_top":false,"comment_ctime":1577958864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577958864","product_id":100020801,"comment_content":"老师问一下,上期问题中， 第2种情况 什么情况下 SessionA 读 SessionB是版本未提交?   看你写的SessionB在SessionA update的时候不是已经提交了？","like_count":0},{"had_liked":false,"id":163351,"user_name":"吾皇万岁万岁万万岁","can_delete":false,"product_type":"c1","uid":1135155,"ip_address":"","ucode":"8FDD608729A002","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/33/abf321b7.jpg","comment_is_top":false,"comment_ctime":1576710446,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576710446","product_id":100020801,"comment_content":"我不清楚老师列子中的（id2,k2）是在page2中；因为要知道（id2,k2）在那个page，不得去磁盘查询索引树才知道吗？而去查询索引树不就进行磁盘io了么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149937,"discussion_content":"索引树大概率情况下是在内存中的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579784643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162756,"user_name":"Geek_eb2e49","can_delete":false,"product_type":"c1","uid":1637789,"ip_address":"","ucode":"21671F0C4E7872","user_header":"https://wx.qlogo.cn/mmopen/vi_32/4PvDe2mRia2vdMGyickA40y2libhpf8ibmIEQquLUZFMXUMqqDjfVb96Y69p7bS6USgxicOKCCHxQHczHBnNb5L9nfA/132","comment_is_top":false,"comment_ctime":1576585260,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576585260","product_id":100020801,"comment_content":" 丁奇老师，<br>mysql&gt; insert into t(id,k) values(id1,k1),(id2,k2);<br>请问下这个插入语句不是也同时往主键ID插入数据数据吗？这种情况下还会用到chane buffer吗？<br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149941,"discussion_content":"如果k值是普通索引的话，是需要change buffer的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579784684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161127,"user_name":"秋夫人","can_delete":false,"product_type":"c1","uid":1383377,"ip_address":"","ucode":"D73BB70FCAFC83","user_header":"https://static001.geekbang.org/account/avatar/00/15/1b/d1/2228e57f.jpg","comment_is_top":false,"comment_ctime":1576123637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576123637","product_id":100020801,"comment_content":"老师，这句话，“redo log 主要节省的是随机写磁盘的 IO 消耗（转成顺序写），而 change buffer 主要节省的则是随机读磁盘的 IO 消耗”不理解原理，您能解答一下吗？？","like_count":0},{"had_liked":false,"id":160385,"user_name":"不能扮演天使","can_delete":false,"product_type":"c1","uid":1046172,"ip_address":"","ucode":"9922330BFF7FFB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/9c/b457a937.jpg","comment_is_top":false,"comment_ctime":1575943600,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575943600","product_id":100020801,"comment_content":"留言比较晚不知道老师会不会回复，我看官方文档上说：Change buffering is not supported for a secondary index if the index contains a descending index column or if the primary key includes a descending index column. 一直没想明白为啥changebuffer不支持包含降序列的二级索引？望老师指教","like_count":0},{"had_liked":false,"id":159748,"user_name":"Geek_b617bf","can_delete":false,"product_type":"c1","uid":1220552,"ip_address":"","ucode":"9BAFC3B184B1D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9f/c8/0318c83e.jpg","comment_is_top":false,"comment_ctime":1575777982,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575777982","product_id":100020801,"comment_content":"业务上如果要保证插入值唯一，那么优先是使用唯一索引呢，还是先查询下有无存在再插入比较好呢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149944,"discussion_content":"你可以先在根据查询条件上建立普通索引，然后获取后进行插入前进行判断。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579784807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159585,"user_name":"Y%...............Y%","can_delete":false,"product_type":"c1","uid":1160593,"ip_address":"","ucode":"94089F09378F07","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/91/8750709f.jpg","comment_is_top":false,"comment_ctime":1575695451,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575695451","product_id":100020801,"comment_content":"&quot;对于唯一索引来说，需要将数据页读入内存，判断到没有冲突，插入这个值，语句执行结束；对于普通索引来说，则是将更新记录在 change buffer，语句执行就结束了&quot;<br>老师我的问题是，插入(4,400）4是唯一索引(主键) 400是普通索引。加入内存中不存在此数据页,到底是走不走change buffer ，按照400是普通索引他会走，但是又有主键，他不会走，这不是矛盾呢吗？求解","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149950,"discussion_content":"主键不走，普通索引走。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579784930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159115,"user_name":"Heiky","can_delete":false,"product_type":"c1","uid":1623626,"ip_address":"","ucode":"03AA79E1BC4AE4","user_header":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","comment_is_top":false,"comment_ctime":1575539916,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1575539916","product_id":100020801,"comment_content":"丁奇老是，有点不太了解update的时候，change buffer是如何进行操作的？文中的例子只是说了insert的时候，使用到了change buffer。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149957,"discussion_content":"update操作同样是这个流程。有内存直接更新内存中的数据，不在内存则直接用change buffer.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579785168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2229659,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKfuACe3aVEAkk3IGmI5gXeHgO15RuymKn8PKt9Q7bRQlL41O8ntFzHT2tSsMmBZgkmiaD3Dnic4WVg/132","nickname":"Geek_01fa84","note":"","ucode":"EA8CCA95CCCC21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312286,"discussion_content":"那怎么判断影响的行数的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602652538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149957,"ip_address":""},"score":312286,"extra":""}]}]},{"had_liked":false,"id":156160,"user_name":"枫","can_delete":false,"product_type":"c1","uid":1310357,"ip_address":"","ucode":"819CA7B97DD7E2","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/95/39856e4e.jpg","comment_is_top":false,"comment_ctime":1574826750,"is_pvip":false,"replies":[{"id":"59963","content":"可能是之前读取的时候，从磁盘读入的呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1574830949,"ip_address":"","comment_id":156160,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574826750","product_id":100020801,"comment_content":"老师我想问一个问题，更新的时候，分两种情况：<br>这个记录要更新的目标页在内存中<br>这个记录要更新的目标页不在内存中<br>问题：什么时候数据会在内存中呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476013,"discussion_content":"可能是之前读取的时候，从磁盘读入的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574830949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310357,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fe/95/39856e4e.jpg","nickname":"枫","note":"","ucode":"819CA7B97DD7E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63722,"discussion_content":"奥奥，我把更新之前的当前读和这个搞混了，我之前以为更新之前也会查询，内存里没有就从磁盘IO到内存里，那数据不是总会在内存里嘛。。。嘿嘿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574905290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156060,"user_name":"沐","can_delete":false,"product_type":"c1","uid":1326537,"ip_address":"","ucode":"678F6A0C778CDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/c9/a1e6a307.jpg","comment_is_top":false,"comment_ctime":1574816278,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1574816278","product_id":100020801,"comment_content":"redo log 主要节省的是随机写磁盘的 IO 消耗（转成顺序写），而 change buffer 主要节省的则是随机读磁盘的 IO 消耗","like_count":0},{"had_liked":false,"id":151997,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1573830863,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573830863","product_id":100020801,"comment_content":"老师，redo log+buffer pool一起作用，才实现了减少磁盘写吧，只有redo log应该是做不到的，redo log更主要的作用应该是crash safe吧","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149967,"discussion_content":"redo log保证了顺序写，这样也提高了磁盘写效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579785282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151995,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1573830531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573830531","product_id":100020801,"comment_content":"我之前以为唯一索引要检查是否重复，所以会耗时，这也没错，但没深挖。检查时，如果内存没该数据页，会从磁盘加载。而如果用普通索引，插入时可以用change buffer，不用从磁盘读，从而大大提高写入速度。<br>总结：如果写完不会立即读，建议用普通索引，否则用唯一索引。<br>","like_count":0},{"had_liked":false,"id":151574,"user_name":"cc","can_delete":false,"product_type":"c1","uid":1592092,"ip_address":"","ucode":"FF41E5D87BAD76","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/1c/5eb03a91.jpg","comment_is_top":false,"comment_ctime":1573741902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573741902","product_id":100020801,"comment_content":"太喜欢这个专栏了！<br>尤其是在正文中对上期问题的回顾和对评论的点评","like_count":0},{"had_liked":false,"id":150958,"user_name":"Geek_3004e0","can_delete":false,"product_type":"c1","uid":1732823,"ip_address":"","ucode":"441D39BDC39E4A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/d7/d1049bae.jpg","comment_is_top":false,"comment_ctime":1573634852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573634852","product_id":100020801,"comment_content":"感觉还是对change buffer不理解：1.change buffer 被merge后，还会写入ibdata吗？2.change buffer一直没有merge，就被purge到ibdata了，后续触发merge后，ibdata的相关记录会被更新吗？其实就是不太理解change buffer刷到ibdata的作用，已经记录到redo log并且持久化了，为什么还要刷到ibdata中。","like_count":0},{"had_liked":false,"id":150928,"user_name":"oh..","can_delete":false,"product_type":"c1","uid":1210187,"ip_address":"","ucode":"DB1398EA83A1A9","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/4b/99d67d3d.jpg","comment_is_top":false,"comment_ctime":1573630445,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573630445","product_id":100020801,"comment_content":"老师你好，有评论说真正对磁盘数据页的修改是通过将内存里脏页的数据刷回磁盘来完成的。那么脏页的数据是什么时候刷回磁盘完成更新呢？如果没刷回磁盘前断电了，内存脏页最新的数据会不会丢失？","like_count":0},{"had_liked":false,"id":150592,"user_name":"ray","can_delete":false,"product_type":"c1","uid":1717235,"ip_address":"","ucode":"10962C711CBC11","user_header":"","comment_is_top":false,"comment_ctime":1573564940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573564940","product_id":100020801,"comment_content":"老师您好，<br>请问您mysql server在change buffer尚未持久化到system table之前就crash掉的话，有办法依赖redo log复原资料吗？<br><br>先说我的想法，我觉得应该不行，个人认为redo log只会储存持久化的change buffer储存在system table的哪个位置，而不会储存change buffer的内容。如果redo log会储存change buffer的内容，change buffer就没必要持久化到system table了。还请老师点评！<br><br>谢谢老师","like_count":0},{"had_liked":false,"id":150062,"user_name":"阿丽","can_delete":false,"product_type":"c1","uid":1170970,"ip_address":"","ucode":"C01D32E7165302","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJFlHhylrbLANtehiaX50wgVa2Z1ibQAdLpgyW4gCpEyOKEI9bPNZZBiabrP2oCleZWc2KKyKADz8tg/132","comment_is_top":false,"comment_ctime":1573456654,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573456654","product_id":100020801,"comment_content":"老师打扰一下，mysql是怎么判断数据在change buffer有没有呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149973,"discussion_content":"肯定会检查buffer pool吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579785495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148181,"user_name":"萝卜条","can_delete":false,"product_type":"c1","uid":1692713,"ip_address":"","ucode":"4BC975BBFE50A7","user_header":"https://static001.geekbang.org/account/avatar/00/19/d4/29/5f52a82c.jpg","comment_is_top":false,"comment_ctime":1572955097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572955097","product_id":100020801,"comment_content":"针对思考内容：<br>change buffer写内存后，会向redo log中插入更新信息。<br>若断电时，change buffer丢失，redo log没有写change buffer的修改内容时，则数据未更新，不影响一致性。<br>若redo log 已经记录，根据redo log可以恢复数据的继续写，不影响数据的一致性","like_count":0},{"had_liked":false,"id":146346,"user_name":"书木子谢明","can_delete":false,"product_type":"c1","uid":1259879,"ip_address":"","ucode":"3090C080A570BE","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/67/743128f7.jpg","comment_is_top":false,"comment_ctime":1572503429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572503429","product_id":100020801,"comment_content":"老师,请教个问题.在有很多重复值的字段上加索引是不是不太合适? 比如,公司-员工场景,在员工表的公司id字段上加索引合适吗?","like_count":0},{"had_liked":false,"id":144970,"user_name":"陆凌枫","can_delete":false,"product_type":"c1","uid":1349513,"ip_address":"","ucode":"622DEFC9DACDBA","user_header":"https://static001.geekbang.org/account/avatar/00/14/97/89/51f532f8.jpg","comment_is_top":false,"comment_ctime":1572145021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572145021","product_id":100020801,"comment_content":"老师，想请教下实际工作中，对于订单Id这种字段，我们通常会用那种数据类型存储？会直接用订单id作为主键吗？分布式环境下，这种id会用那种方式生成呢？<br>希望老师能解答，谢谢！","like_count":0},{"had_liked":false,"id":143594,"user_name":"😊😊","can_delete":false,"product_type":"c1","uid":1305246,"ip_address":"","ucode":"8B8B5AB50289F6","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/9e/19e2cc53.jpg","comment_is_top":false,"comment_ctime":1571740549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571740549","product_id":100020801,"comment_content":"老师，内存命中率怎么计算？","like_count":0},{"had_liked":false,"id":143535,"user_name":"wong ka seng","can_delete":false,"product_type":"c1","uid":1338885,"ip_address":"","ucode":"C1A713082D0D64","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/05/d47cee18.jpg","comment_is_top":false,"comment_ctime":1571726876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571726876","product_id":100020801,"comment_content":"&quot;如果所有的更新后面，都马上伴随着对这个记录的查询，那么你应该关闭 change buffer。&quot;=&gt;为什么要关闭 change buffer呢?","like_count":0},{"had_liked":false,"id":141052,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1571107455,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1571107455","product_id":100020801,"comment_content":"有个问题问老师：<br>```<br>这个记录要更新的目标页不在内存中。这时，InnoDB 的处理流程如下：<br>对于唯一索引来说，需要将数据页读入内存，判断到没有冲突，插入这个值，语句执行结束；<br>对于普通索引来说，则是将更新记录在 change buffer，语句执行就结束了。<br>```<br>唯一索引：更新数据时，如果是通过唯一索引来更新数据，也需要将数据页读入内存来判断是否冲突么？感觉必要性不是很大。还是说这里老师是指要更新唯一索引这个字段的值所以需要读入内存。<br><br>对于普通索引来说，直接写入 change buffer 语句执行就结束了。但是在实际 update 语句时，还会返回 affected rows 信息，这一步操作是在哪发生的呢？<br>另外，当后续再发生更新操作的时候，对于普通索引，如果有数据在 change buffer 中，是不是先会将相关数据加入到内存中并应用 change buffer，才能加 gap lock 等","like_count":0},{"had_liked":false,"id":140728,"user_name":"烈冬冰夏","can_delete":false,"product_type":"c1","uid":1060113,"ip_address":"","ucode":"F2875FC596D4FA","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/11/0ecbe9ea.jpg","comment_is_top":false,"comment_ctime":1571038983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571038983","product_id":100020801,"comment_content":"请教下 Page 2 没有在内存中，就在内存的 change buffer记录一条更新记录就返回 那返回的影响行数是怎么统计的呢<br><br>","like_count":0},{"had_liked":false,"id":139308,"user_name":"xiangxg8","can_delete":false,"product_type":"c1","uid":1634725,"ip_address":"","ucode":"710AB1E959A443","user_header":"","comment_is_top":false,"comment_ctime":1570608627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570608627","product_id":100020801,"comment_content":"1.查询逻辑<br>InnoDB 的数据是按数据页为单位来读写的。也就是说，当需要读一条记录的时候，并不是将这个记录本身从磁盘读出来，而是以页为单位，将其整体读入内存<br>2.使用唯一索引还是普通索引？<br>唯一索引由于需要将数据页读入内存检查唯一性，而不能使用change buffer。因此，唯一索引的更新就不能使用 change buffer，实际上也只有普通索引可以使用<br>3.change buffer 是什么，数据的更新逻辑是什么？<br>当需要更新一个数据页时，如果数据页在内存中就直接更新，而如果这个数据页还没有在内存中的话，InooDB 会将这些更新操作缓存在 change buffer 中，<br>这样就不需要从磁盘中读入这个数据页了。在下次查询需要访问这个数据页的时候，将数据页读入内存，然后执行 change buffer 中与这个页有关的操作<br>4.普通索引的所有场景，使用 change buffer 都可以起到加速作用吗？<br>一个业务的更新模式是写入之后马上会做查询，将更新先记录在 change buffer，但之后由于马上要访问这个数据页，会立即触发 merge 过程。这样随机访问 IO 的次数不会减少，反而增加了 change buffer 的维护代价","like_count":0},{"had_liked":false,"id":139005,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1570525715,"is_pvip":false,"replies":[{"id":"53978","content":"装个实例（或者买个云实例），照着例子试试？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1570725535,"ip_address":"","comment_id":139005,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570525715","product_id":100020801,"comment_content":"mysql使用经验不多，看起来很费尽，有什么建议么？老师","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469741,"discussion_content":"装个实例（或者买个云实例），照着例子试试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570725535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168452,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","nickname":"Eleven","note":"","ucode":"FB4A0C8CA732BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31714,"discussion_content":"好的，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570949855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137734,"user_name":"进击的小学生","can_delete":false,"product_type":"c1","uid":1283739,"ip_address":"","ucode":"2E10BF2D67F421","user_header":"https://static001.geekbang.org/account/avatar/00/13/96/9b/efd37116.jpg","comment_is_top":false,"comment_ctime":1569833442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569833442","product_id":100020801,"comment_content":"已经merge过的数据不会自动从change buffer中删除吗？","like_count":0},{"had_liked":false,"id":137421,"user_name":"12.05","can_delete":false,"product_type":"c1","uid":1671354,"ip_address":"","ucode":"ED5FE10E52B28C","user_header":"https://static001.geekbang.org/account/avatar/00/19/80/ba/5b893a89.jpg","comment_is_top":false,"comment_ctime":1569737236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569737236","product_id":100020801,"comment_content":"老师，我看完这一章后，结合原来第二章的知识(一个update语句的执行)，我依我的理解画了一个update语句的执行过程，涉及redo log，binlog，changebuffer。但我看完评论区的讨论后，我觉得我的理解是有问题的，所以特意画了图，麻烦老师看下<br>是哪里有问题。(图是用uml工具画的通讯图，数字表示执行的先后顺序，url是图片链接)<br><br>https:&#47;&#47;upload-images.jianshu.io&#47;upload_images&#47;4139030-c1432eb51e5f1b36.png?imageMogr2&#47;auto-orient&#47;strip%7CimageView2&#47;2&#47;w&#47;1240","like_count":0},{"had_liked":false,"id":131473,"user_name":"jian","can_delete":false,"product_type":"c1","uid":1185102,"ip_address":"","ucode":"21CDBBB8000F0C","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/4e/4636a81d.jpg","comment_is_top":false,"comment_ctime":1567760223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567760223","product_id":100020801,"comment_content":"请问老师, 怎么理解这句话&quot;change buffer 主要节省的则是随机读磁盘的IO消耗&quot;? 如果关闭了change buffer, 要写入的数据不在内存, 就直接随机读磁盘. 如果开启了change buffer, 则在读取的时候直接随机读磁盘. 并没有发现减少了随机读磁盘的IO消耗啊?","like_count":0},{"had_liked":false,"id":130513,"user_name":"yangmin","can_delete":false,"product_type":"c1","uid":1227341,"ip_address":"","ucode":"494A9D62C8C509","user_header":"https://static001.geekbang.org/account/avatar/00/12/ba/4d/73b29014.jpg","comment_is_top":false,"comment_ctime":1567476021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567476021","product_id":100020801,"comment_content":"“redo log 主要节省的是随机写磁盘的 IO 消耗（转成顺序写）”，<br><br>老师，请问下什么是顺序写？磁盘是在不段的旋转，也有其他进程会读写文件，其磁头肯定不是停留在上一次写结束的位置，我在网上看到将“顺序写”定义为一次写入多个页。请问下老师您的理解是？谢谢！","like_count":0},{"had_liked":false,"id":129792,"user_name":"杨领well","can_delete":false,"product_type":"c1","uid":1145650,"ip_address":"","ucode":"3974A03855168C","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/32/60089a62.jpg","comment_is_top":false,"comment_ctime":1567253313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567253313","product_id":100020801,"comment_content":"MySQL 官方文档在讲 MVCC 的时候说：<br>A 6-byte DB_ROW_ID field contains a row ID that increases monotonically as new rows are inserted. If InnoDB generates a clustered index automatically, the index contains row ID values. Otherwise, the DB_ROW_ID column does not appear in any index.（https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;innodb-multi-versioning.html）<br>在讲 Clustered and Secondary Indexes 又说：<br>If the table has no PRIMARY KEY or suitable UNIQUE index, InnoDB internally generates a hidden clustered index named GEN_CLUST_INDEX on a synthetic column containing row ID values. （https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;innodb-index-types.html）<br><br>我想请问一下老师：GEN_CLUST_INDEX 字段和  DB_ROW_ID 字段是一个吗?(我认为是，但是没有找到证据。) 如果是的话，为什么有两个字段名？如果不是的话，他们有什么区别？<br><br>期待您的回复，谢谢！","like_count":0},{"had_liked":false,"id":129626,"user_name":"Dthan","can_delete":false,"product_type":"c1","uid":1177838,"ip_address":"","ucode":"B5DEB7D050981D","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/ee/2cf560f5.jpg","comment_is_top":false,"comment_ctime":1567175916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567175916","product_id":100020801,"comment_content":"老师，有个问题请教下，可不可以理解为只要不是更新唯一索引字段上的值都可以进change buffer","like_count":0},{"had_liked":false,"id":128788,"user_name":"Viola","can_delete":false,"product_type":"c1","uid":1528096,"ip_address":"","ucode":"CF8FF5323AE43A","user_header":"","comment_is_top":false,"comment_ctime":1566963178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566963178","product_id":100020801,"comment_content":"老师您好，请问图2中两条虚线，Page1更新到数据表空间可以理解，change buffer里的Page2为什么是更新到系统表空间呢？评论区里说系统表是数据字典等系统信息，这个插入(id2,k2)的过程为什么会更新到系统表呢？","like_count":0},{"had_liked":false,"id":128549,"user_name":"SIGHOR","can_delete":false,"product_type":"c1","uid":1439360,"ip_address":"","ucode":"411F85A8FD3DE1","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/80/830de85d.jpg","comment_is_top":false,"comment_ctime":1566899801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566899801","product_id":100020801,"comment_content":"上面有说到，在插入数据时，如果不在内存，唯一索引要读入页判断唯一性才能插入，而普通索引直接写change buffer，那有个问题，更新时为什么主键索引不需要像唯一索引那样先读页判段唯一性呢？按照我的理解，每个表或明或暗都有主键索引的吧。。。","like_count":0},{"had_liked":false,"id":127403,"user_name":"赵小洛","can_delete":false,"product_type":"c1","uid":1592232,"ip_address":"","ucode":"A326C12B1A1ABA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/a8/14b8a860.jpg","comment_is_top":false,"comment_ctime":1566698609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566698609","product_id":100020801,"comment_content":"老师能不能推荐一下学习MySQL的书籍 特别是您讲的MySQL的两阶段提交.","like_count":0},{"had_liked":false,"id":127393,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1566695645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566695645","product_id":100020801,"comment_content":"通过redo log 感觉也能实现change buffer 的功能。<br>分开设计的好处:<br>1.change buffer 里的数据全都是有效数据。数据量少就是快<br>2.redo log 和 change buffer两个功能模块完全独立，符合单一职责等设计原则。<br>缺点:<br>多用了点磁盘和内存空间，触发change buffer的在两个地方写了。<br>","like_count":0},{"had_liked":false,"id":127390,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1566695090,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566695090","product_id":100020801,"comment_content":"老师好!这个change buffer感觉和高速缓存的写缓存区很像啊。加锁流程是这样的呢?<br>1.根据普通索引执行update操作<br>2.对满足条件的行尝试＋行锁，(事务Id写到对应的行上，是可重入锁，及在同一个事务中可以对同一行数据执行多次update操作)<br>3.在事务提交的时候释放锁。(未开启事物的在语句执行结束时就会释放锁。)<br>如果频繁对同一行做update，最好放在一个事务中进行，可以较少重复获取锁的开销?请问老师有这种说法么<br>","like_count":0},{"had_liked":false,"id":127293,"user_name":"赵小洛","can_delete":false,"product_type":"c1","uid":1592232,"ip_address":"","ucode":"A326C12B1A1ABA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/a8/14b8a860.jpg","comment_is_top":false,"comment_ctime":1566637665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566637665","product_id":100020801,"comment_content":"老师 我的MySQL知识很欠缺 ，我应该怎么学这个课程","like_count":0},{"had_liked":false,"id":126411,"user_name":"澜屿","can_delete":false,"product_type":"c1","uid":1622852,"ip_address":"","ucode":"9249CE56CA4891","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKXb0MQrhQzFQSXLwpceibeHs1C8E0ia3uZjjh7o3NJadChWazF8iaFCZ74vGsDqPo423MRiavLQBbibag/132","comment_is_top":false,"comment_ctime":1566384129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566384129","product_id":100020801,"comment_content":"老师你好，我有这样的一个情况，我建了一个唯一索引。UNIQUE KEY `email_key` (`email`,`stype`,`agent_key`)<br>然后查询语句是：SELECT stype, agent_key, agent_id, agent_mls_id FROM email_to_agent WHERE email=&#39;monique@wbrea.com&#39;<br>目前数据量300多W。这一条 SQL 一天会出现 3-4 次的慢查。查询时间有 5-6s，奇怪的是这条 SQL 没有进慢查日志，慢查的时候我看机器负载也还好，然后也没有太多其他的请求进来，这个表也不经常更新。但是网络环境挺好。然后这种情况我就不知道该怎么排查了，希望老师可以指点一下","like_count":0},{"had_liked":false,"id":125196,"user_name":"衬衫的价格是19美元","can_delete":false,"product_type":"c1","uid":1397631,"ip_address":"","ucode":"655F925451F772","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","comment_is_top":false,"comment_ctime":1566116217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566116217","product_id":100020801,"comment_content":"1.change buffer是通过减少随机读来提高更新时的性能(读数据库(随机读) -&gt; 不读，写文件，记录变动(顺序写))<br>2.redo log是通过改随机写为顺序写来提高更新时的性能(写数据库(随机写) -&gt; 写文件(顺序写))","like_count":0},{"had_liked":false,"id":125155,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1566101836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566101836","product_id":100020801,"comment_content":"但是，我们之前计算过，对于整型字段，一个数据页可以放近千个 key，<br><br><br>请问这个是怎么计算的？数据页存储的是不是叶子结点？","like_count":0},{"had_liked":false,"id":122379,"user_name":"极客—月","can_delete":false,"product_type":"c1","uid":1318468,"ip_address":"","ucode":"EE12EEBF242B1D","user_header":"","comment_is_top":false,"comment_ctime":1565352930,"is_pvip":true,"replies":[{"id":"44979","content":"因为索引是有序的，第一个不是5，就是比5大，它之后的记录就都比5大，不需要继续遍历了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1565446624,"ip_address":"","comment_id":122379,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1565352930","product_id":100020801,"comment_content":"对于普通索引来说，查找到满足条件的第一个记录 (5,500) 后，需要查找下一个记录，直到碰到第一个不满足 k=5 条件的记录。<br>老师，这段不太懂，为什么碰到第一个不满足的就不继续找了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462228,"discussion_content":"因为索引是有序的，第一个不是5，就是比5大，它之后的记录就都比5大，不需要继续遍历了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565446624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122340,"user_name":"学习，学习，再学习","can_delete":false,"product_type":"c1","uid":1178951,"ip_address":"","ucode":"3B07D19CCFB15C","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/47/78ee760d.jpg","comment_is_top":false,"comment_ctime":1565343588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565343588","product_id":100020801,"comment_content":"我有个不成熟的问题：学到现在我们知道索引可以分成两大类主键索引和非主键索引。假设表里只有id、k这两个字段，id为主键索引，k为普通索引，id和k分别对应不同的B+树，那当我们写入(id,k)的时候，按理来说会在id树上添加，也会在k树上也添加。那么会不会出现在id树上添加了，而在k树上添加失败的情况？也就是问，在插入一条记录的时候，主键索引添加进去了，而普通索引没添加进去的情况？","like_count":0},{"had_liked":false,"id":121614,"user_name":"o9","can_delete":false,"product_type":"c1","uid":1101332,"ip_address":"","ucode":"E373E82A39BBFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","comment_is_top":false,"comment_ctime":1565167753,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1565167753","product_id":100020801,"comment_content":"老师, 您好, <br>看了评论区的留言, 发现大家纠结的点是, 表一般是会有主键的, 那么在插入的时候肯定是用不到 change buffer 的(主键是聚簇索引, 肯定是唯一的), 老师的回复是 二级索引会用到 cahnge buffer. <br><br>我的理解是: 我们向聚簇索引插入数据的时候无法用到 change buffer, 但是 如果表里有其它的二级索引, 向二级索引插入数据(B+树)的时候会用到 change buffer, 不知道理解的对不对.","like_count":0},{"had_liked":false,"id":120826,"user_name":"凯文1985","can_delete":false,"product_type":"c1","uid":1036921,"ip_address":"","ucode":"9A42344649072B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/79/0a432fde.jpg","comment_is_top":false,"comment_ctime":1565002807,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1565002807","product_id":100020801,"comment_content":"如果引擎加载了数据页在内存中了（pool buffer），那么做了修改后 内存中的数据也是后台线程不定时的更新到对应的磁盘上的吗？比如page1的改动。","like_count":0},{"had_liked":false,"id":119873,"user_name":"爱因诗贤","can_delete":false,"product_type":"c1","uid":1528379,"ip_address":"","ucode":"150C439B87CED1","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/3b/7a2610a6.jpg","comment_is_top":false,"comment_ctime":1564716186,"is_pvip":false,"replies":[{"id":"44045","content":"到buffer里面查一下，有就有，没有就再去磁盘找😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1564740960,"ip_address":"","comment_id":119873,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564716186","product_id":100020801,"comment_content":"innodb 是如何知道 当前要读取的数据 的页在buffer里面 而不用去磁盘中加载一次","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461105,"discussion_content":"到buffer里面查一下，有就有，没有就再去磁盘找😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564740960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119774,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1564678512,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1564678512","product_id":100020801,"comment_content":"老师，前面还是主键索引和非主键索引，怎么这边就变成了了唯一索引和普通索引，是一个东西么","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149987,"discussion_content":"主键索引肯定是唯一索引，唯一索引不一定是主键索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579785634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11961,"discussion_content":"非主键索引里面包括2类:  唯一索引和普通索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568452713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119434,"user_name":"一袋大虾","can_delete":false,"product_type":"c1","uid":1469366,"ip_address":"","ucode":"8E4FED94405475","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wwDhoIeIqMZiaLLCLmCsuiaeEt7rEQMqdTVjjTicic0Pz9HHpgzboaia1hxu3H0IHovqEa6pJ8e1UQn1gqeUr3ibIdrA/132","comment_is_top":false,"comment_ctime":1564586559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564586559","product_id":100020801,"comment_content":"老师，请教个问题。当数据不在change buffer的时候，做更新操作，只是在change buffer更新，这里的更新指的是保留了一条更新语句吗！？change buffer没有行记录啊。而如果记录在change buffer 的话更新的是行数据，只是没有写入磁盘而已吗！？？","like_count":0},{"had_liked":false,"id":117405,"user_name":"锋风封","can_delete":false,"product_type":"c1","uid":1116935,"ip_address":"","ucode":"8E1528DF975D82","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/07/9b0446a7.jpg","comment_is_top":false,"comment_ctime":1564041052,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1564041052","product_id":100020801,"comment_content":"老师好有个问题想不通：更新不是当前读吗？那么不是应该已经把数据页读到内存里了吗，那不是直接更新吗？为什么还有change buffer","like_count":0,"discussions":[{"author":{"id":1136684,"avatar":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","nickname":"易轻尘","note":"","ucode":"0D0CB9D6D45A70","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9487,"discussion_content":"除了数据表本身要更新，表上的所有索引树都要更新，change buffer主要是用于更新普通索引树的时候。缓存池里有索引缓存和数据缓存。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568173535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149992,"discussion_content":"更新是当前读，基于上面作者的回答，change buffer的存在并不冲突。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579785761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1116935,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0b/07/9b0446a7.jpg","nickname":"锋风封","note":"","ucode":"8E1528DF975D82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165010,"discussion_content":"是的更新的changebuffer应该是针对要改索引的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581248855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149992,"ip_address":""},"score":165010,"extra":""}]}]},{"had_liked":false,"id":116501,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1563858828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563858828","product_id":100020801,"comment_content":"老师，对于&quot;历史数据&quot;表，一般都读多写少啊，change buffer应该没什么用吧","like_count":0},{"had_liked":false,"id":116423,"user_name":"Syrup","can_delete":false,"product_type":"c1","uid":1118132,"ip_address":"","ucode":"E8292C0B38228A","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/b4/4eaf4fa2.jpg","comment_is_top":false,"comment_ctime":1563848526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563848526","product_id":100020801,"comment_content":"老师您好，看了本篇的change buffer之后有一个问题想请教一下。就是在RR下，针对普通索引在insert或者update，如果对应的数据页没有在内存中，那么会先在change buffer下记录，那如果我先执行一条insert 语句，写入到change buffer中了，然后再紧接着更新这条记录。那这个时候Innodb是会先merge之后再读取更新，还是直接在change buffer中进行更新呢？ ","like_count":0},{"had_liked":false,"id":115199,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1325011,"ip_address":"","ucode":"CFC9A5BBD5F3EE","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/d3/7e183a8c.jpg","comment_is_top":false,"comment_ctime":1563506194,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563506194","product_id":100020801,"comment_content":"老师好，例子中k2是如何定位到所要操作的索引页是在page2的，如果是需要检索才能确认，那不是还是进行了磁盘IO吗<br>对于update操作，非唯一索引应该是涉及到原索引标记删除，新索引插入吧，请问change buffer是如何操作的<br>","like_count":0},{"had_liked":false,"id":115131,"user_name":"zhangwei","can_delete":false,"product_type":"c1","uid":1246639,"ip_address":"","ucode":"B71CBA5311846F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIvrwfqAuRkaK8Pl2apHKFZxd5mjnFhROMNcg5qXUT4AxE2ZTTia5Hg6pmFM1vozq3vZiagJoaJ4Pyg/132","comment_is_top":false,"comment_ctime":1563498338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563498338","product_id":100020801,"comment_content":"丁老师好，我有几个问题没有看明白，望解答。<br>1，唯一索引插入为什么要加载数据页才能判断是否重复？我的理解根据索引就能判断了，因为只要索引节点值不重复就行。<br>2，您回复评论区说插入时候主键不能用change buffer但是二级索引可用，我的理解是插入时候已经把数据页加载到内存了，二级索引也不必用change buffer了。<br>3，update语句如果要用change buffer，其where条件字段必须被索引覆盖吧？如果我有非索引字段比如想用乐观锁where id=100 and version=&#39;1001&#39;，version不是索引，那么还是要加载数据页到内存的吧，因为要返回update行数。<br>4，老师在评论区说刷数据页到磁盘是change buffer和redolog共同在做，是不是一个先刷到磁盘，把另外一个设置无限了？<br>感觉自己理解力有问题，望老师解答，谢谢！","like_count":0},{"had_liked":false,"id":112663,"user_name":"王斯拉","can_delete":false,"product_type":"c1","uid":1593957,"ip_address":"","ucode":"D00DD3CE432189","user_header":"https://static001.geekbang.org/account/avatar/00/18/52/65/320eccb3.jpg","comment_is_top":false,"comment_ctime":1562804124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562804124","product_id":100020801,"comment_content":"redo log和change buffer有些混淆：<br>redolog更新时：<br>\t1. 数据读入内存，并修改 （问题：这一步需要吗？为什么？）<br>\t2. redo log写入修改内容<br>\t3. 等其他时间异步写入磁盘<br>change buffer更新或插入:<br>\t1. 若数据在内存中，则无需<br>\t2. 若数据不在内存，则先写入change buffer，不需要把数据从内存中读出来<br>\t3. 等下一次查询的时候 数据读出 并把change buffer中的数据merge进去<br>","like_count":0},{"had_liked":false,"id":112276,"user_name":"任鹏斌","can_delete":false,"product_type":"c1","uid":1104086,"ip_address":"","ucode":"34319B05EA6E74","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/d6/47da34bf.jpg","comment_is_top":false,"comment_ctime":1562712688,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562712688","product_id":100020801,"comment_content":"老师好二读发现这句话:在 InnoDB 中，每个数据页的大小默认是 16KB。记得操作系统默认数据页大小是4kb，不知道InnoDB这样做的原因是什么？还能利用到操作系统的页管理机制吗？","like_count":0,"discussions":[{"author":{"id":1308783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/6f/080973cf.jpg","nickname":"Edward","note":"","ucode":"10FAADF92D05F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6894,"discussion_content":"当然可以，innodb默认数据页大小为16k，也是为了可以放更多索引值，B+树也会尽可能矮一点。既然操作系统内存和磁盘交换数据页为4k大小，一个数据页可以分四次预读呗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567157158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110377,"user_name":"mofei","can_delete":false,"product_type":"c1","uid":1541887,"ip_address":"","ucode":"C0F8CCCD96B856","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUjcPst52CBr05pvK4IB10vPknQjdyHQTMRSsNWkLTLdjHgVIQnZcC22KU7eIupybTfoM69OppYA/132","comment_is_top":false,"comment_ctime":1562245547,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1562245547","product_id":100020801,"comment_content":"老师你好，请问如何理解 【阿里巴巴Java开发手册】 里面索引规约讲的：<br>【强制】业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引。 <br>说明：不要以为唯一索引影响了insert速度，这个速度损耗可以忽略，但提高查找速度是明显的；<br>附链接：<br>https:&#47;&#47;github.com&#47;alibaba&#47;p3c&#47;blob&#47;master&#47;%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%EF%BC%88%E5%8D%8E%E5%B1%B1%E7%89%88%EF%BC%89.pdf<br><br>我测试是这样的，一个表里面已经有一千万记录，主键ID bigint，没有其他二级索引。<br>加普通索引再插入一百万记录耗时：20m42.006s<br>加唯一索引再插入一百万记录耗时：20m37.323s<br>唯一索引插入速度甚至 更快，有点颠覆我的认知啊，请教如何解释？","like_count":0},{"had_liked":false,"id":110294,"user_name":"残天噬魂","can_delete":false,"product_type":"c1","uid":1506609,"ip_address":"","ucode":"A2AD8303A4518D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","comment_is_top":false,"comment_ctime":1562223948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562223948","product_id":100020801,"comment_content":"我的理解：文中说了change buffer是有持久化的，所以数据也会持久化到磁盘中，但如果还没有来得及缓存到磁盘中，而根据上面的顺序，这个时候redo log也还没有对这部分操作进行记录，所以这时候这一部份数据应该会丢失","like_count":0},{"had_liked":false,"id":110245,"user_name":"学海无涯莫非","can_delete":false,"product_type":"c1","uid":1115674,"ip_address":"","ucode":"CE259CFEA14708","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/1a/a8a9094d.jpg","comment_is_top":false,"comment_ctime":1562213757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562213757","product_id":100020801,"comment_content":"老师的专栏要串起来认真读才能领会（受专栏篇幅影响），评论区页很精彩。希望老师在专栏之外还能推荐点其他书籍。","like_count":0},{"had_liked":false,"id":108851,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1561901499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561901499","product_id":100020801,"comment_content":"使用普通索引进行查询时，如果语句后面有 limit 1的限制，应该不会再进行下一次的判断。","like_count":0},{"had_liked":false,"id":106691,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1561372468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561372468","product_id":100020801,"comment_content":"业务优先 唯一性索引还是普通索引","like_count":0},{"had_liked":false,"id":106358,"user_name":"李梦嘉","can_delete":false,"product_type":"c1","uid":1141909,"ip_address":"","ucode":"4F9F29F9E96A55","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/95/bb237f51.jpg","comment_is_top":false,"comment_ctime":1561278921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561278921","product_id":100020801,"comment_content":"1. checkpoint是否会触发change buffer的merge？还是只会在读取修改数据页的时候才会做merge？<br>2. change buffer记录是物理还是逻辑的？<br>3. redo log记录了change buffer的改变, 那么做crash recovery的时候, 从redo log即可恢复出数据改变的过程, 那么change buffer落盘的意义是什么？","like_count":0},{"had_liked":false,"id":105439,"user_name":"黄强","can_delete":false,"product_type":"c1","uid":1086093,"ip_address":"","ucode":"20231AC29CFD53","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/8d/ab469ad5.jpg","comment_is_top":false,"comment_ctime":1561000501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561000501","product_id":100020801,"comment_content":"探讨一个问题，目前数据库使用B族树数据结构来设计索引是基于机械硬盘的读取寻址的原因，假设后续固态硬盘取代机械硬盘了，数据库的索引结构会怎样设计呢？","like_count":0},{"had_liked":false,"id":105308,"user_name":"Geek_e95920","can_delete":false,"product_type":"c1","uid":1344701,"ip_address":"","ucode":"193C44DAC1699C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/HLDjKFe3k6EsKg2AzW7UPp6EiaxotnDciaIxCHtBWibbb0GAJXc2LfDCJwv3sL2QZAudndqUU31cicq4oMrGXibLaTA/132","comment_is_top":false,"comment_ctime":1560960524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560960524","product_id":100020801,"comment_content":"1. change buffer中是不是有个什么数据结构（位图或是哈希map之类的）保存着哪些页存在待merge？当有数据页读入buffer pool时都会去这个数据结构里查询下是否需要merge操作？<br>2. change buffer可以记录多少个数据页的更新记录，它们的生命周期是怎样的？<br>假如change buffer的内存不是很大，放不下了怎么处理？会将这些记录对应的数据页一个个读入内存，然后一个个merge，再一个个刷回磁盘？然后全部清空掉change buffer？<br>如果正在进行这个过程，MySQL是不是又要“抖”起来了，而且还是随机读IO+写IO，抖的厉害不？","like_count":0},{"had_liked":false,"id":104909,"user_name":"搞怪者😘 😒 😏 👿","can_delete":false,"product_type":"c1","uid":1300678,"ip_address":"","ucode":"40DFF5D3E3B24C","user_header":"https://static001.geekbang.org/account/avatar/00/13/d8/c6/2b2a58cf.jpg","comment_is_top":false,"comment_ctime":1560868119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560868119","product_id":100020801,"comment_content":"插入语句的时候怎么使用change buffer呀","like_count":0},{"had_liked":false,"id":104901,"user_name":"搞怪者😘 😒 😏 👿","can_delete":false,"product_type":"c1","uid":1300678,"ip_address":"","ucode":"40DFF5D3E3B24C","user_header":"https://static001.geekbang.org/account/avatar/00/13/d8/c6/2b2a58cf.jpg","comment_is_top":false,"comment_ctime":1560866562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560866562","product_id":100020801,"comment_content":"如果查询的时候change buffer已经merge了，那么当redo log刷脏页的时候还会处理这条数据吗","like_count":0},{"had_liked":false,"id":99179,"user_name":"连边","can_delete":false,"product_type":"c1","uid":1391748,"ip_address":"","ucode":"54B5DA38449728","user_header":"https://static001.geekbang.org/account/avatar/00/15/3c/84/608f679b.jpg","comment_is_top":false,"comment_ctime":1559175200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559175200","product_id":100020801,"comment_content":"笔记记录：<br>由于查询会merge change buffer，所有从业务角度出发，如果在一些插入之后有查询的业务不使用change buffer；插入多，查询少，建议多用change buffer，因为merge得少，维护成本相对较低。","like_count":0},{"had_liked":false,"id":97594,"user_name":"刘义方","can_delete":false,"product_type":"c1","uid":1084338,"ip_address":"","ucode":"29793C7987225B","user_header":"https://static001.geekbang.org/account/avatar/00/10/8b/b2/d91e6d3d.jpg","comment_is_top":false,"comment_ctime":1558704527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558704527","product_id":100020801,"comment_content":"针对唯一索引进行update和delete 时候，需要查询数据库？而不是写入change buffet.如果查数据库基于什么考虑","like_count":0},{"had_liked":false,"id":97190,"user_name":"Geek_e7a036","can_delete":false,"product_type":"c1","uid":1497030,"ip_address":"","ucode":"65EA05C403441F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUvKMecKzfLSgFuYicksMxz1BJHp2Qz1uJBZsrfMTwBmF39tibW7HvbRmompwr71x86qwW22hLTULw/132","comment_is_top":false,"comment_ctime":1558605001,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558605001","product_id":100020801,"comment_content":"有两个疑问想请请教下，评论中看到也有人提问了，您也回答了，我确认下我的理解哈<br>1.既然redo log 记录了change buffer中的更新操作，既然redo log持久化了，为啥还需要将change buffer持久化到系统表空间？<br>我的理解是有两个原因：1）.change buffer内存会失效，如果持久化就能一直使用，再者redolog是循环读写可能会擦除，但是这个好像不影响，因为擦除的时候一定会更新内存并落盘 2）.change buffer单独独立持久化在表空间方便快速获取并merge。<br>2. 增删改是加锁当前读，等于是增删改之前是要先读取，然后再更新，是否就用不到change buffer？<br>我的理解是更新操作如果在内存，当前读也可以，如果不在内存也能使用change buffer，只是串行的存储更新操作，等下次访问(扫描行可能扫到的时候)或者定期的时候执行更新操作。您提到说change buffer主要应用在普通索引的更新上。我不知道我的理解是否正确<br>3. 还有人问到说如果更新操作有where条件，是不是就对普通索引更新就不使用change buffer了？一人回答是不看where条件只看要查询的数据是不是在内存中。我的疑问是我们怎么判断说一个sql操作，会涉及更新哪些行的普通索引呢？特别是where条件中没有索引。如果where条件有索引可能能定位是哪些主键所在的行。","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11965,"discussion_content":"第三个我也有这个疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568453235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96147,"user_name":"热心市民小侯","can_delete":false,"product_type":"c1","uid":1347767,"ip_address":"","ucode":"0F7D64B5F7193B","user_header":"https://static001.geekbang.org/account/avatar/00/14/90/b7/711aa6f9.jpg","comment_is_top":false,"comment_ctime":1558345205,"is_pvip":false,"replies":[{"id":"34895","content":"就是每次插入前自己得查一下😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558708784,"ip_address":"","comment_id":96147,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558345205","product_id":100020801,"comment_content":"求大佬解答，如果用了普通索引，业务实现上该怎么保证唯一性呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450737,"discussion_content":"就是每次插入前自己得查一下😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558708784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94900,"user_name":"老妖纣王","can_delete":false,"product_type":"c1","uid":1357582,"ip_address":"","ucode":"C07A398ADFC38E","user_header":"https://static001.geekbang.org/account/avatar/00/14/b7/0e/20ed751b.jpg","comment_is_top":false,"comment_ctime":1557918725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557918725","product_id":100020801,"comment_content":"老师你好，在梳理原理流程时，有不明之处，还望解答。<br>1. 在更新数据时，应该先更新change buffer，提交时更新redo，所以redo未提交时，重启MySQL后change buffer没有，但是正常回滚，那change buffer中数据怎么处理？<br>2. merge原理比较简单，主要是merge也会记录到redo，即使重启也不会丢失合并信息。那purge后，是不是对redo log记录要删除？同时也要删除buffer pool和ibdata1？流程原理是怎么样，purge会不会影响其他事务获取数据不一致的情况。","like_count":0},{"had_liked":false,"id":93343,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1557454429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557454429","product_id":100020801,"comment_content":"DAY9，打卡","like_count":0},{"had_liked":false,"id":91892,"user_name":"Jzzw","can_delete":false,"product_type":"c1","uid":1508208,"ip_address":"","ucode":"4B642AADF48BD6","user_header":"https://static001.geekbang.org/account/avatar/00/17/03/70/01dc4853.jpg","comment_is_top":false,"comment_ctime":1557129373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557129373","product_id":100020801,"comment_content":"刚才自己想复杂了，change buffer和buffer pool的修改都会写redo，落盘的方式都是一样的，只不过落盘的位置不一样，redo是怎么恢复buffer pool的，同样也会怎么恢复change buffer的，没有什么特殊性","like_count":0},{"had_liked":false,"id":91739,"user_name":"浩","can_delete":false,"product_type":"c1","uid":1394346,"ip_address":"","ucode":"BD7FE280C83152","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoGnC6068nQia1bOiaPxMRmkOQsaDsw5ib2drXic4gKOLzIFyZnnFm4uJ6KniboKG1nQD3J15y4d3QxLA/132","comment_is_top":false,"comment_ctime":1557103535,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557103535","product_id":100020801,"comment_content":"原文:对于普通索引来说，查找到满足条件的第一个记录 (5,500) 后，需要查找下一个记录，直到碰到第一个不满足 k=5 条件的记录。疑问是:文中说，直到碰到第一个不满足k=5条件的记录理解不了。这个普通索引在二叉树中也是排好序的吗？也是采用二分法查找吗？如果是这样的话，我就能理解了","like_count":0},{"had_liked":false,"id":88343,"user_name":"Rocky","can_delete":false,"product_type":"c1","uid":1024647,"ip_address":"","ucode":"BDCD4B7B96C581","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/87/b08666e8.jpg","comment_is_top":false,"comment_ctime":1555908338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555908338","product_id":100020801,"comment_content":"redo log为什么不随机写磁盘，而顺序写磁盘？<br>可能随机IO这块基础知识我掌握的不扎实。","like_count":0},{"had_liked":false,"id":87593,"user_name":"18321926924","can_delete":false,"product_type":"c1","uid":1370296,"ip_address":"","ucode":"EDBD9C3D2E59BB","user_header":"https://static001.geekbang.org/account/avatar/00/14/e8/b8/fb1e2953.jpg","comment_is_top":false,"comment_ctime":1555638854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555638854","product_id":100020801,"comment_content":"按着老师的步骤，隔离级别也是RR，执行完不是1234，而是2345.。。","like_count":0},{"had_liked":false,"id":86990,"user_name":"18817594820","can_delete":false,"product_type":"c1","uid":1301995,"ip_address":"","ucode":"13D74773C3CF72","user_header":"https://wx.qlogo.cn/mmopen/vi_32/N8WHcPZU6LCicH2nxoYhmxArF2bbqAibPPaaiauxTnzK9icY9Y7sTMyicjDff5uuRXmFLD4Lmw8wWdPZYdibDKwtxbmA/132","comment_is_top":false,"comment_ctime":1555493239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555493239","product_id":100020801,"comment_content":"有个疑问，就是change buffer里的内容已经写入到redo log里面了，如果忽然发生掉电，就可以通过redo log来恢复到change buffer里面，就不需要再把change buffer写入到ibdata里防止掉电了吧？","like_count":0},{"had_liked":false,"id":85499,"user_name":"晓杰","can_delete":false,"product_type":"c1","uid":1441546,"ip_address":"","ucode":"1174C88EEBF8A6","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/0a/12faa44e.jpg","comment_is_top":false,"comment_ctime":1555079906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555079906","product_id":100020801,"comment_content":"请问老师change buffer是不是在insert的时候才生效，update和delete是不会使用change buffer的","like_count":0},{"had_liked":false,"id":84278,"user_name":"duang_duang","can_delete":false,"product_type":"c1","uid":1392130,"ip_address":"","ucode":"77AE4ADD4BF3F3","user_header":"https://static001.geekbang.org/account/avatar/00/15/3e/02/45e25bab.jpg","comment_is_top":false,"comment_ctime":1554818245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554818245","product_id":100020801,"comment_content":"老师，您好。请教个问题:在使用&lt;&gt; 时，为什么主键和唯一索引字段上走索引，而普通索引无效呢？","like_count":0},{"had_liked":false,"id":80459,"user_name":"zc","can_delete":false,"product_type":"c1","uid":1086631,"ip_address":"","ucode":"5A5D4C90DF591C","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/a7/a582f0d0.jpg","comment_is_top":false,"comment_ctime":1553663746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553663746","product_id":100020801,"comment_content":"问题1<br>对于非唯一索引，在不使用gap锁的情况下，插入不会冲突，因此可不加载页。","like_count":0},{"had_liked":false,"id":79105,"user_name":"Jesson","can_delete":false,"product_type":"c1","uid":1212313,"ip_address":"","ucode":"EBADA87D9E5AE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/7f/99/6a92ff95.jpg","comment_is_top":false,"comment_ctime":1553352912,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1553352912","product_id":100020801,"comment_content":"“对于普通索引来说，查找到满足条件的第一个记录 (5,500)后，需要查找下一个记录，直到碰到第一个不满足 k=5 条件的记录。”<br>这句话不太理解， 不应该是 到最后一个符合 k = 5 的记录吗？<br><br>","like_count":0,"discussions":[{"author":{"id":1043738,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","nickname":"asdf100","note":"","ucode":"39D8D71453E575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5195,"discussion_content":"只有遇到第一个不等于K!=5的时候才知道是不是最后一条符合K=5的记录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566039972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77969,"user_name":"蔡呆呆","can_delete":false,"product_type":"c1","uid":1074818,"ip_address":"","ucode":"51EDDEFB274CB3","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/82/c2acd57e.jpg","comment_is_top":false,"comment_ctime":1553047192,"is_pvip":false,"replies":[{"id":"28806","content":"不会<br>没有索引意味着就只有一个主键索引，<br><br>主键索引上是不能使用change buffer的额","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553340000,"ip_address":"","comment_id":77969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553047192","product_id":100020801,"comment_content":"在没有索引的情况下，cahnge buffer会起作用吗？我觉得是会","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443915,"discussion_content":"不会\n没有索引意味着就只有一个主键索引，\n\n主键索引上是不能使用change buffer的额","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553340000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76872,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1552734516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552734516","product_id":100020801,"comment_content":"老师：<br>1.读 Page 1 的时候，直接从内存返回。<br>2.要读page2 的时候，需要把page2从磁盘读入内存。<br>这个背景我不知道，为什么page1 直接返回而page2 需要从磁盘读入内存？","like_count":0},{"had_liked":false,"id":75273,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1552372098,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552372098","product_id":100020801,"comment_content":"老师，<br><br>“更新一个数据页时，在不影响数据一致性的前提下，innodb会将这些更新操作缓存在change buffer中。”<br>请问老师，具体有哪些操作呢？<br>我想了一个场景，非唯一索引的更新操作，需要判断该行数据是否存在，这样还是需要将磁盘中的数据页读取到内存中呢。<br><br>2019-03-08<br>作者回复: 不用判断，这一行一定存在，（除非出bug了）<br><br><br>老师 ，我对你的回复好像不太赞同<br>id 1 k 1<br>id 2 k 2<br><br>update id = 3 where k = 3<br>这一行明明不存在，为啥 说不用判断，这一行一定存在，（除非出bug了）？","like_count":0,"discussions":[{"author":{"id":1144320,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/00/c3f8a78f.jpg","nickname":"臧嘞个慧","note":"","ucode":"7639747FBC2F90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7065,"discussion_content":"我也想问这个问题，看评论没有找到答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567333944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75271,"user_name":"空空空空","can_delete":false,"product_type":"c1","uid":1082938,"ip_address":"","ucode":"A1A50E16E02803","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/3a/76dbbd0e.jpg","comment_is_top":false,"comment_ctime":1552372011,"is_pvip":false,"replies":[{"id":"27534","content":"不是，也存在普通唯一索引<br><br>反过来， 主键索引都是唯一的<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552407118,"ip_address":"","comment_id":75271,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552372011","product_id":100020801,"comment_content":"老师，唯一索引就是主键索引吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442843,"discussion_content":"不是，也存在普通唯一索引\n\n反过来， 主键索引都是唯一的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552407118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75197,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1552362592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552362592","product_id":100020801,"comment_content":"老师你好，@包子木有馅 . 对于这位同学说的  （对数据的修改记录在changebuffer里的时候，内存里是没有这个物理页的，不存在脏页），，，如果这时redo log 满了，需要擦除redo log ，而擦除的正好是changebuffer部分，按照这位同学说的，内存里是没有这个物理页的，不存在脏页，不存在脏页，那就不需要刷磁盘，那岂不是changebuffer里的数据会丢失？","like_count":0},{"had_liked":false,"id":74011,"user_name":"Shen","can_delete":false,"product_type":"c1","uid":1182167,"ip_address":"","ucode":"CFF7609A754392","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/d7/ffe7b0bf.jpg","comment_is_top":false,"comment_ctime":1552060432,"is_pvip":false,"replies":[{"id":"27033","content":"是的，change buffer更新到内存页就完成使命了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552091114,"ip_address":"","comment_id":74011,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1552060432","product_id":100020801,"comment_content":"老师好，我看《包子木有馅》的评论最后一句“真正对磁盘数据页的修改是通过将内存里脏页的数据刷回磁盘来完成的，而不是根据redolog”<br>如果在更新时，数据页面在内存中，则会直接更新内存，然后在刷到磁盘中，这种场景对应上面的结论是没错的。<br>但如果需要更新的数据页不在内存中，先写change buffer，然后由后台线程定期merge，也是将磁盘上的数据页先读到内存中，在内存修改后，再同步到磁盘上的吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442384,"discussion_content":"是的，change buffer更新到内存页就完成使命了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552091114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1593957,"avatar":"https://static001.geekbang.org/account/avatar/00/18/52/65/320eccb3.jpg","nickname":"王斯拉","note":"","ucode":"D00DD3CE432189","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1665,"discussion_content":"如果在更新时，数据页面在内存中，则会直接更新内存，然后在刷到磁盘中，这种场景对应上面的结论是没错的。\n\n这个我觉得不太准确，应该是更新内存，然后写redolog，然后提交事务。刷到磁盘应该会是异步的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562804444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73735,"user_name":"浩涛","can_delete":false,"product_type":"c1","uid":1390697,"ip_address":"","ucode":"DCF935D3F9FC6D","user_header":"https://static001.geekbang.org/account/avatar/00/15/38/69/7b11b341.jpg","comment_is_top":false,"comment_ctime":1551965810,"is_pvip":false,"replies":[{"id":"27150","content":"应该还是业务需求比较多","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552147196,"ip_address":"","comment_id":73735,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551965810","product_id":100020801,"comment_content":"老师好,您在文章中指说到普通索引对唯一索引的优势,那唯一索引除了业务要求外还有别的适用场景吗?有没有什么情况是唯一索引会比普通索引更适合的?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442252,"discussion_content":"应该还是业务需求比较多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552147196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72290,"user_name":"菜鸡一只","can_delete":false,"product_type":"c1","uid":1336004,"ip_address":"","ucode":"5FBA9A68E0E9B9","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/c4/98a9e594.jpg","comment_is_top":false,"comment_ctime":1551578667,"is_pvip":false,"replies":[{"id":"26217","content":"1. 一般情况下是用一个索引。当然MySQL也有merge index 算法，不过出现得比较少，而且性能一般也不太好。<br><br>2. 看一下专栏后面关于join的文章哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551608108,"ip_address":"","comment_id":72290,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551578667","product_id":100020801,"comment_content":"老师你好，一条查询语句只能使用一个索引吗，比如where里面有两个索引字段，是不是只会走一个索引然后再全部查询？还有就是外链接其他表，是不是只会走主表的索引，从表的索引不走？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441524,"discussion_content":"1. 一般情况下是用一个索引。当然MySQL也有merge index 算法，不过出现得比较少，而且性能一般也不太好。\n\n2. 看一下专栏后面关于join的文章哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551608108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71806,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1551439081,"is_pvip":false,"replies":[{"id":"26022","content":"同一个文件，在位置10写4个字节，下一次从第14个字节开始写，就是顺序写","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551456758,"ip_address":"","comment_id":71806,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551439081","product_id":100020801,"comment_content":"老师，从随机写  转为  顺序写，能详细解释下这里的&quot;顺序&quot;吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441337,"discussion_content":"同一个文件，在位置10写4个字节，下一次从第14个字节开始写，就是顺序写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551456758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69784,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1550841382,"is_pvip":false,"replies":[{"id":"24845","content":"1.是的<br>2、3 会删除<br>4. 理解正确👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550849981,"ip_address":"","comment_id":69784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550841382","product_id":100020801,"comment_content":"课后习题思考：<br>会出现 change buffer 丢失的情况，但是数据应该没有丢失。<br>1. change buffer 写入内存，但是 redo log 未写入，这时事务未提交，重启后数据与更新前一致，未丢失。<br>2. change buffer 写入内存成功，redo log 写入成功，事务提交成功。重启后从 redo log 恢复数据，未丢失。<br><br>不知道是否还存在其他未考虑到的场景，烦请老师指点迷津！<br><br>---<br><br>老师，您好！<br><br>图 2 中，步骤 2 的虚箭头是指向系统表空间，表示将 change buffer 的内容持久化到系统表空间么？merge 操作后，会删除系统表空间里的 change buffer 内容么？如果不删除，系统表空间岂不是越来越大？<br>步骤 1 的虚线箭头应该就是刷脏页吧，哇哈哈哈😁😁<br><br>谢谢老师","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440280,"discussion_content":"1.是的\n2、3 会删除\n4. 理解正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550849981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69014,"user_name":"kuzicala","can_delete":false,"product_type":"c1","uid":1200531,"ip_address":"","ucode":"AD1C21328E9928","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/93/ed274018.jpg","comment_is_top":false,"comment_ctime":1550645778,"is_pvip":false,"replies":[{"id":"24992","content":"这篇的课后思考题没有给操作序列呀，你做了什么操作。。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550997902,"ip_address":"","comment_id":69014,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550645778","product_id":100020801,"comment_content":"请教下，我在模拟课后练习时候，开了两个mysql终端，按照顺序，sessionB先开启事物 然后A开启，在B更新 update的时候会卡死，最后提示 Lock wait timeout exceeded; try restarting transaction 什么原因？<br>在B事物中更新为什么会等待呢？<br>                                                <br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439914,"discussion_content":"这篇的课后思考题没有给操作序列呀，你做了什么操作。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550997902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68061,"user_name":"不惑ing","can_delete":false,"product_type":"c1","uid":1207079,"ip_address":"","ucode":"AF04E417D38027","user_header":"https://static001.geekbang.org/account/avatar/00/12/6b/27/8c964e52.jpg","comment_is_top":false,"comment_ctime":1550400169,"is_pvip":false,"replies":[{"id":"24112","content":"1. 对的<br>2. 对的<br>3. 不是哈，WAL是所有更新（包含主键索引的更新）都有效的。change buffer其实是另外一个优化。这两个机制的连接点是， change buffer本身也是数据，本身也通过WAL机制来加速写入和确保change buffer自己的数据不丢","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550402148,"ip_address":"","comment_id":68061,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550400169","product_id":100020801,"comment_content":"老师您好，看完文章和留言还有几点比较模糊，希望帮忙确认一下我的理解有啥问题<br><br>1.不考虑tran commit的情况下，数据的更新流程是2个：<br>    a.【内存】-&gt;【redo log】<br>    b.【内存】-&gt;【数据表空间】<br>   a、b两个流程是并行的，只是有时间差<br>数据恢复的流程是:<br>    c.【redo log】-&gt;【内存】 <br>    d.【内存】-&gt;【数据表空间】<br>c、d两个流程并行<br><br>2.如果表A（id,name）,id是主键，name是普通索引，insert操作会分成两个流程：<br>    a.插入id列，更新主键索引，不使用change buffer<br>    b.插入name列,更新普通索引，使用change buffer<br>    （看@Scott 留言后的理解）<br><br>3.change buffer 是MySQL  WAL机制的一种具体实现方式，所以更新数据时减少了一次读操作<br>   （看 @ziven 的留言后的理解）<br><br>希望老师能看到~~","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439494,"discussion_content":"1. 对的\n2. 对的\n3. 不是哈，WAL是所有更新（包含主键索引的更新）都有效的。change buffer其实是另外一个优化。这两个机制的连接点是， change buffer本身也是数据，本身也通过WAL机制来加速写入和确保change buffer自己的数据不丢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550402148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65260,"user_name":"Jason_鹏","can_delete":false,"product_type":"c1","uid":1179329,"ip_address":"","ucode":"4A3DCAAC531724","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/c1/6c99fff4.jpg","comment_is_top":false,"comment_ctime":1549167145,"is_pvip":false,"replies":[{"id":"23163","content":"如果能用上change buffer, 那么就不更新这个数据页，不需要记这个页的undo 了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549202841,"ip_address":"","comment_id":65260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549167145","product_id":100020801,"comment_content":"有一个问题不明白，由于mvcc机制，更新数据需要记录undo log，此时应该把要更新的数据页读入buffer里，如果记了change log 不读内存，之前还未提交的事务如何能拿到需要的数据呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438378,"discussion_content":"如果能用上change buffer, 那么就不更新这个数据页，不需要记这个页的undo 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549202841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64573,"user_name":"Crayon","can_delete":false,"product_type":"c1","uid":1391055,"ip_address":"","ucode":"C15C899DF34B85","user_header":"","comment_is_top":false,"comment_ctime":1548827048,"is_pvip":false,"replies":[{"id":"22871","content":"不是两个索引都用上了，是只用了一个<br><br>如果建了唯一索引，就不用再同样的建一个普通索引了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548828797,"ip_address":"","comment_id":64573,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548827048","product_id":100020801,"comment_content":"您好，我想问一个问题，针对同一个字段，建了唯一索引，还需要建普通索引吗？<br><br>尝试对同一个字段建了唯一索引和普通索引，跑SQL时发现两个索引都用上了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438081,"discussion_content":"不是两个索引都用上了，是只用了一个\n\n如果建了唯一索引，就不用再同样的建一个普通索引了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548828797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64337,"user_name":"Rainman","can_delete":false,"product_type":"c1","uid":1025931,"ip_address":"","ucode":"6FD00E587EA4CF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/8b/208d9e2c.jpg","comment_is_top":false,"comment_ctime":1548749128,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548749128","product_id":100020801,"comment_content":"写的很好，谢谢作者。 change buffer 和 redo log这部分看了受益匪浅","like_count":0},{"had_liked":false,"id":63943,"user_name":"刘十一","can_delete":false,"product_type":"c1","uid":1035899,"ip_address":"","ucode":"5927D77D248E30","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/7b/fa0f9368.jpg","comment_is_top":false,"comment_ctime":1548605466,"is_pvip":false,"replies":[{"id":"22606","content":"会分别说，<br>主要是画到一个图里，图太大，又很难展开。<br>你看我们每一篇，有时候讲一个结构就要好几个图分不同场景画。。画到一张恐怕画不清楚😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548608534,"ip_address":"","comment_id":63943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548605466","product_id":100020801,"comment_content":"老师，我看的比较慢，我现在对mysql中的各种内存，数据页，物理页，各种buffer，ibdata1等等之类的有点晕，虽然目前文章会提到一些，但是有些散，可以画张图吗？不知道后面的文章有没有补充这个","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437774,"discussion_content":"会分别说，\n主要是画到一个图里，图太大，又很难展开。\n你看我们每一篇，有时候讲一个结构就要好几个图分不同场景画。。画到一张恐怕画不清楚😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548608534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60161,"user_name":"huolang","can_delete":false,"product_type":"c1","uid":1346708,"ip_address":"","ucode":"FDC4A6B6151C5E","user_header":"https://static001.geekbang.org/account/avatar/00/14/8c/94/5282994c.jpg","comment_is_top":false,"comment_ctime":1547445938,"is_pvip":false,"replies":[{"id":"21542","content":"”即便条件查询语句加上for update，由于记录本来就不存在的，所以不能进行上锁 “ 这个结论不对哦，看下21篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547456095,"ip_address":"","comment_id":60161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547445938","product_id":100020801,"comment_content":"老师，我再请教个问题：<br>想实现某个字段的值在表中是唯一的，但是不设置唯一索引，我原来想到的一个办法是：插入数据前，开启事务，使用where条件查询表中该字段的值是否已经存在了，如果没有存在就进行插入提交，如果存在就不进行插入。后来仔细想了一下，这样的办法好像是不行的，因为如果同时有多个线程或进程都插入一条该字段的值相同的记录，这多个线程同时开启事务和进行条件查询，都会查到表中不存在拥有该字段为某值的记录，然后就都进行插入操作了，即便条件查询语句加上for update，由于记录本来就不存在的，所以不能进行上锁，同时又没有唯一索引，所以最后就会出现插入了多条该字段的值相同的记录。<br>想请教老师，我的分析正确吗？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436450,"discussion_content":"”即便条件查询语句加上for update，由于记录本来就不存在的，所以不能进行上锁 “ 这个结论不对哦，看下21篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547456095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59953,"user_name":"Pixar","can_delete":false,"product_type":"c1","uid":1197659,"ip_address":"","ucode":"E653387BA8EA16","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/5b/07858c33.jpg","comment_is_top":false,"comment_ctime":1547433423,"is_pvip":false,"replies":[{"id":"21510","content":"还有后台线程会做的^_^ 碰到这种情况应该就是change buffer效果最好的情况啦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547446779,"ip_address":"","comment_id":59953,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547433423","product_id":100020801,"comment_content":"想问下老师，写入change buffer 的某个操作后，涉及的页后续由于一直没有相关查询而一直没有读至内存，那么位于change buffer 的该操作是怎么写入磁盘页呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436424,"discussion_content":"还有后台线程会做的^_^ 碰到这种情况应该就是change buffer效果最好的情况啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547446779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59553,"user_name":"huolang","can_delete":false,"product_type":"c1","uid":1346708,"ip_address":"","ucode":"FDC4A6B6151C5E","user_header":"https://static001.geekbang.org/account/avatar/00/14/8c/94/5282994c.jpg","comment_is_top":false,"comment_ctime":1547385005,"is_pvip":false,"replies":[{"id":"21419","content":"是的，就是业务系统额外做了去重的逻辑，不依赖于唯一索引的约束","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547396993,"ip_address":"","comment_id":59553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547385005","product_id":100020801,"comment_content":"老师，你说的“如果业务代码已经保证了不会写入重复的身份证号”的这句话的意思是，业务代码可以不依赖数据库已经保存的记录来保证插入的不是重复的身份证号吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436354,"discussion_content":"是的，就是业务系统额外做了去重的逻辑，不依赖于唯一索引的约束","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547396993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56822,"user_name":"刘鹏","can_delete":false,"product_type":"c1","uid":1230417,"ip_address":"","ucode":"44F3D4DB3F5678","user_header":"https://static001.geekbang.org/account/avatar/00/12/c6/51/e39b5828.jpg","comment_is_top":false,"comment_ctime":1546564518,"is_pvip":false,"replies":[{"id":"20483","content":"这条记录如果没有碰上崩溃恢复啥的，就看chepoint推进到它的时候，有没有写了盘，如果没有，就把change buffer 内容写盘（其实跟数据是一样的策略）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546566141,"ip_address":"","comment_id":56822,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546564518","product_id":100020801,"comment_content":"老师，普通索引的更新记录会放到change buffer中，这个过程也会存到redo log ，redo log会怎么处理这条记录？在往磁盘更新的时候忽略掉吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435256,"discussion_content":"这条记录如果没有碰上崩溃恢复啥的，就看chepoint推进到它的时候，有没有写了盘，如果没有，就把change buffer 内容写盘（其实跟数据是一样的策略）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546566141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56529,"user_name":"Wesley","can_delete":false,"product_type":"c1","uid":1359325,"ip_address":"","ucode":"187A0185A2D3FD","user_header":"https://static001.geekbang.org/account/avatar/00/14/bd/dd/4620ba79.jpg","comment_is_top":false,"comment_ctime":1546483074,"is_pvip":false,"replies":[{"id":"20383","content":"额这个我想想哈，不过可以具体操作的原则不太多😓 <br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546485930,"ip_address":"","comment_id":56529,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546483074","product_id":100020801,"comment_content":"文章中提到读多写少时可以关掉change buffer 这其实是在避免mysql的随机读，那么mysql有哪些操作会涉及随机读写呢？哪些操作是顺序读写呢？建议老师可以把如何避免低性能随机读写讲讲😄","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435096,"discussion_content":"额这个我想想哈，不过可以具体操作的原则不太多😓 \n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546485930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56517,"user_name":"Wesley","can_delete":false,"product_type":"c1","uid":1359325,"ip_address":"","ucode":"187A0185A2D3FD","user_header":"https://static001.geekbang.org/account/avatar/00/14/bd/dd/4620ba79.jpg","comment_is_top":false,"comment_ctime":1546480727,"is_pvip":false,"replies":[{"id":"20376","content":"随机写的意思是“上一个写完数据的结束位置，是下一个写数据的起始位置”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546481864,"ip_address":"","comment_id":56517,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546480727","product_id":100020801,"comment_content":"什么情况下是随机读写？什么情况下是顺序读写呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435087,"discussion_content":"随机写的意思是“上一个写完数据的结束位置，是下一个写数据的起始位置”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546481864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1442605,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/2d/404627dc.jpg","nickname":"Anryg Zhun","note":"","ucode":"76DF8560BA9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":185564,"discussion_content":"老师说的应该是顺序写吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582634749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56378,"user_name":"yarn","can_delete":false,"product_type":"c1","uid":1234970,"ip_address":"","ucode":"38A25F4A1C34AD","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/1a/9176e043.jpg","comment_is_top":false,"comment_ctime":1546432422,"is_pvip":false,"replies":[{"id":"20293","content":"1. 是的，但是不是in(1,2), 都是一个个回表的删除的<br>2. 你说的Page2 是放普通索引的page吗？流程是这样，id=1主键索引取出来，读到k值，再去k索引树上删。如果发现page2 在内存就直接删除。如果发现不在，就往chang buffer中记删除动作。还是要在k索引找的，不找不知道在不在内存里","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546436511,"ip_address":"","comment_id":56378,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546432422","product_id":100020801,"comment_content":"老师, 您好, 关于主键索引和二级索引数据同步的问题不太明白:<br>id = 1, k = 5; id = 2, k = 5<br>执行delete from T where k = 5;<br>假设k对应的page页不在change_buffer中, 这时候会在change_buffer中记录 delete from T where k = 5;<br>1: 主键索引是本来就不能用上change buffer机制的, <br>   那么这时候是直接在主键对应的B+tree上删除 id in (1, 2)的数据? (随即写?)<br>2: 如果执行delete from T where id = 1; 这时候会用到change_buffer, 在change_buffer中做标记delete from page2 where id = 1 ?  类似这样吗? 如果这样 会首先把id=1的page页读到内存中吧(否则不知道删除的k = ?), page2 这个是怎么知道的? 会去K对应的B-Tree中找吗?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435006,"discussion_content":"1. 是的，但是不是in(1,2), 都是一个个回表的删除的\n2. 你说的Page2 是放普通索引的page吗？流程是这样，id=1主键索引取出来，读到k值，再去k索引树上删。如果发现page2 在内存就直接删除。如果发现不在，就往chang buffer中记删除动作。还是要在k索引找的，不找不知道在不在内存里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546436511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55717,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1546267677,"is_pvip":false,"replies":[{"id":"20090","content":"普通索引不需要哦，<br>就是说插入的时候，操作主键ID索引的变更确实不能用change buffer,<br>但是普通索引可以","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546270176,"ip_address":"","comment_id":55717,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546267677","product_id":100020801,"comment_content":"再次读了一遍，还是有疑惑的地方。就是change buffer记录的是新增或修改的数据，那么merge操作是针对二级索引还是数据。如果说因为唯一索引需要确保数据唯一，那么普通索引应当也是需要的，毕竟插入操作避免不了要带去主键（或系统生成）。还请老师能够解答一下困惑。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434832,"discussion_content":"普通索引不需要哦，\n就是说插入的时候，操作主键ID索引的变更确实不能用change buffer,\n但是普通索引可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546270176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55407,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1346556,"ip_address":"","ucode":"01ABE9D3AA4C66","user_header":"https://static001.geekbang.org/account/avatar/00/14/8b/fc/227d38a7.jpg","comment_is_top":false,"comment_ctime":1546163184,"is_pvip":false,"replies":[{"id":"20046","content":"但是redo log也有缓存二级索引的变更，我怕你这样理解误以为redo log 不管二级索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546168027,"ip_address":"","comment_id":55407,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546163184","product_id":100020801,"comment_content":"老师，看了这一节redo log与change buffer的对比，我有些疑问。<br>1、The change buffer is a special data structure that caches changes to secondary index pages when those pages are not in the buffer pool. 这是一段截自mysql官网的说明，change buffer存储的应该是对二级索引本身的变更。因为二级索引不是按顺序存储的，所以这种缓存可以大大减少随机写IO的次数。<br>2、而redo log的作用是缓存数据更新，也是减少随机写IO的次数。<br><br>因此他们的作用应该是相同的，都是减少写IO的次数，只不过是一个减少的是index变更引起的的写IO，一个减少的是数据本身变更引起的写IO。<br><br>不知道我这种理解是否正确？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434763,"discussion_content":"但是redo log也有缓存二级索引的变更，我怕你这样理解误以为redo log 不管二级索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546168027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55383,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1546154165,"is_pvip":false,"replies":[{"id":"20049","content":"定时","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546169023,"ip_address":"","comment_id":55383,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546154165","product_id":100020801,"comment_content":"更新的时候，如果在内存直接更新，更新后是否立即写回磁盘？还是定时写磁盘？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434757,"discussion_content":"定时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546169023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55366,"user_name":"gesanri","can_delete":false,"product_type":"c1","uid":1121174,"ip_address":"","ucode":"AE3B97DC3ED668","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELtOO0HKrj5SI5JSlmwiaCvaF6GLiaTmf5NX88OZaO3HymTAGTeIoicBUjqzmMF6sF5raPFjuqLFibrrw/132","comment_is_top":false,"comment_ctime":1546149694,"is_pvip":false,"replies":[{"id":"20051","content":"读写比例吧。一般是二级索引多的、主要是insert数据场景的库，用change buffer效果好","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546169320,"ip_address":"","comment_id":55366,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546149694","product_id":100020801,"comment_content":"有个疑问，如果更新后马上就要查询，使用change buffer就有点得不偿失，那这个更新后多长时间查询，change buffer才能真正提升效率呢？有个大概的范围吗？或者跟哪些因素有关","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434751,"discussion_content":"读写比例吧。一般是二级索引多的、主要是insert数据场景的库，用change buffer效果好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546169320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55338,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1546138307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546138307","product_id":100020801,"comment_content":"老师您好，读完这篇几个疑问想请您解答一下。<br><br>1.图三中当page存在时执行1，不存在时执行2。然后记录redo log。那么1和2分别对应的是redo log中的3，4还是说无论如何redo log都会记录3，4？<br><br>2.既然redo log会记录change buffer，那为什么change buffer还需要单独落盘。<br><br>3.如果更新后一直没有读操作，那么change buffer会一直保留在内存中吗？<br><br>烦请老师能够在百忙之中解答一下。","like_count":0},{"had_liked":false,"id":55247,"user_name":"yarn","can_delete":false,"product_type":"c1","uid":1234970,"ip_address":"","ucode":"38A25F4A1C34AD","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/1a/9176e043.jpg","comment_is_top":false,"comment_ctime":1546076090,"is_pvip":false,"replies":[{"id":"20022","content":"1.2. Change buffer是一个共同的结构，跟buffer pool 一样<br><br>3. 如果用上change buffer就暂时没有修改数据页了。 有修改数据页的时候是标记删除<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546085617,"ip_address":"","comment_id":55247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546076090","product_id":100020801,"comment_content":"老师, 您好, 看完以后有几个问题, 望您不吝赐教!<br>假设 id = 1, k= 5<br>delete from T where k = 5; delete from T where id = 1;<br>1: 不同字段索引 update或者delete的时候写入从change buffer是同一片内存吗?<br>2: 如果是不同区域, 那么这两个sql内存以及磁盘是怎么同步数据的?<br>3: 索引page页是怎么变化的?<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434712,"discussion_content":"1.2. Change buffer是一个共同的结构，跟buffer pool 一样\n\n3. 如果用上change buffer就暂时没有修改数据页了。 有修改数据页的时候是标记删除\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546085617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55045,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1546009206,"is_pvip":false,"replies":[{"id":"19965","content":"对，说的就是这个，有影响的，dynamic 是因为可以把数据存在其它数据页，让行上只留个指针，所以才不受限制","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546009510,"ip_address":"","comment_id":55045,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546009206","product_id":100020801,"comment_content":"不是file format，是row_format，下面是我的测试过程<br>db23 10:53:50&gt;show create table t888\\G<br>*************************** 1. row ***************************<br>       Table: t888<br>Create Table: CREATE TABLE `t888` (<br>  `a` varchar(300) DEFAULT NULL,<br>  `b` varchar(300) DEFAULT NULL<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT<br>1 row in set (0.00 sec)<br><br>db23 10:53:56&gt;alter table t888 add index idx_a_b(a,b);<br>ERROR 1709 (HY000): Index column size too large. The maximum column size is 767 bytes.<br><br>db23 10:54:15&gt;alter table t888 row_format=dynamic;<br>Query OK, 0 rows affected (0.01 sec)<br>Records: 0  Duplicates: 0  Warnings: 0<br><br>db23 10:54:36&gt;alter table t888 add index idx_a_b(a,b);<br>Query OK, 0 rows affected (0.02 sec)<br>Records: 0  Duplicates: 0  Warnings: 0","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434657,"discussion_content":"对，说的就是这个，有影响的，dynamic 是因为可以把数据存在其它数据页，让行上只留个指针，所以才不受限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546009510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55019,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1546001161,"is_pvip":false,"replies":[{"id":"19963","content":"是file formate 吧😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546008359,"ip_address":"","comment_id":55019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546001161","product_id":100020801,"comment_content":"老师，为什么mysql 5.7最大索引长度3072还和row format有关系？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434651,"discussion_content":"是file formate 吧😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546008359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54866,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1545972931,"is_pvip":false,"replies":[{"id":"19869","content":"顺序写比随机写高效，是磁盘的机制决定的。<br>顺序就是下一次写从上一次结束的位置继续","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545975001,"ip_address":"","comment_id":54866,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545972931","product_id":100020801,"comment_content":"还想请教一下老师，随机io写，和顺序写有什么区别呢？为什么顺序写更加高效呢？而且这里的随机，顺序，指的是什么呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434592,"discussion_content":"顺序写比随机写高效，是磁盘的机制决定的。\n顺序就是下一次写从上一次结束的位置继续","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545975001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54854,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1545970094,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545970094","product_id":100020801,"comment_content":"老师，请问数据页的大小，多少，和N叉树的N有什么关联吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":150006,"discussion_content":"page size:16k,最开始几章有介绍过。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579786227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54601,"user_name":"是我的海","can_delete":false,"product_type":"c1","uid":1197457,"ip_address":"","ucode":"4BCE240829676A","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/91/afda3094.jpg","comment_is_top":false,"comment_ctime":1545912135,"is_pvip":false,"replies":[{"id":"19817","content":"直接回答你第二个问题， 比如delete 的时候where 主键ID=N","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545917959,"ip_address":"","comment_id":54601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545912135","product_id":100020801,"comment_content":"看见一个同学问的问题：<br>1.如果是针对非唯一索引和唯一索引的更新和delete而且条件是where 索引值=这种情况,<br>是否二级索引和唯一索引就没有区别呢？<br>老师的回答是先要读再更新。。。<br><br>我的问题是：<br>为什么有where 条件时就需要先读呢 ？ 是因为current read 么 ？<br>那既然改成了change buffer ，什么情况下才会在update 和 delete 时使用到change buffer 呢 ？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434506,"discussion_content":"直接回答你第二个问题， 比如delete 的时候where 主键ID=N","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545917959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54372,"user_name":"黄明恩","can_delete":false,"product_type":"c1","uid":1119409,"ip_address":"","ucode":"EF75C8BFA14D17","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/b1/7d974f0a.jpg","comment_is_top":false,"comment_ctime":1545836098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545836098","product_id":100020801,"comment_content":"更新数据分为两步的话，一步是提取待更新的数据，另一步是执行更新逻辑并写回。change buffer优化作用于第一步，redo log优化于第二步","like_count":0},{"had_liked":false,"id":53888,"user_name":"Ryy","can_delete":false,"product_type":"c1","uid":1311939,"ip_address":"","ucode":"7CB78714F4BA9C","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/c3/f3e4aed6.jpg","comment_is_top":false,"comment_ctime":1545748806,"is_pvip":false,"replies":[{"id":"19529","content":"没关系，如果在这两个阶段掉点，事务都是要回滚的。<br>可以看一下第15篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545755864,"ip_address":"","comment_id":53888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545748806","product_id":100020801,"comment_content":"老师，对于前排的优质回答的同学做出的答案，我没看懂。如果change buffer和写入redo log是两个操作的话，那在两个操作中间断电，还是有数据丢失的风险啊？为什么他们的回答里默认这是一个原子操作呢？比如change buffer写入后，就默认redo log也写入了，不会出现change buffer 写入后断电，redo log还没写入的情况吗？请老师解答。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434282,"discussion_content":"没关系，如果在这两个阶段掉点，事务都是要回滚的。\n可以看一下第15篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545755864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53489,"user_name":"运斤成风","can_delete":false,"product_type":"c1","uid":1350812,"ip_address":"","ucode":"BAFF69C29FDFA5","user_header":"https://static001.geekbang.org/account/avatar/00/14/9c/9c/e02a0daf.jpg","comment_is_top":false,"comment_ctime":1545656199,"is_pvip":false,"replies":[{"id":"19392","content":"1. 一般没具体指的时候，数据页就包含所有的，并不是单只数据<br>2. 非索引字段在主键上，所以确实不能用上chsnge buffer, 批量更新的话，WAL可以算一种","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545661772,"ip_address":"","comment_id":53489,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545656199","product_id":100020801,"comment_content":"老师您好！您在文章提到的数据页是索引页（索引段中的页）和数据页（数据段中的页）的合称吗？还是单指索引页？若change buffer是真对非唯一的辅助索引涉及的，那要是更新普通非索引字段时，又有什么机制实现批量更新或写入？谢谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434154,"discussion_content":"1. 一般没具体指的时候，数据页就包含所有的，并不是单只数据\n2. 非索引字段在主键上，所以确实不能用上chsnge buffer, 批量更新的话，WAL可以算一种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545661772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53357,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1222211,"ip_address":"","ucode":"8175463FB4705B","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/43/cb6ab349.jpg","comment_is_top":false,"comment_ctime":1545631849,"is_pvip":false,"replies":[{"id":"19315","content":"第一个理解很对<br><br>第二个，内存中的数据*淘汰*之前，需要写盘。<br> 这里两个说明：<br>1）内存无所谓失效，就是被LRU淘汰了，数据页才会移出内存<br>2） 这时候不需要redolog做什么的，内存写到磁盘，直接就写了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545639822,"ip_address":"","comment_id":53357,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1545631849","product_id":100020801,"comment_content":"可不可以这样理解，change buffer在merge时是将内存中的数据更新到最新，而redo log是将磁盘中的数据更新到最新？在内存中的数据失效之前，redo log是不是必须要将数据写盘，有这样一种机制来保障吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434109,"discussion_content":"第一个理解很对\n\n第二个，内存中的数据*淘汰*之前，需要写盘。\n 这里两个说明：\n1）内存无所谓失效，就是被LRU淘汰了，数据页才会移出内存\n2） 这时候不需要redolog做什么的，内存写到磁盘，直接就写了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545639822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145404,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","nickname":"堵车","note":"","ucode":"7BC1E50A4F8D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57589,"discussion_content":"内存淘汰之前要写盘，不需要redolog做什么。那么redolog在做恢复的时候怎么知道change buff的这条记录已经写盘了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574619022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52961,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1008071,"ip_address":"","ucode":"9FE5F43055D3AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/c7/b64ac05e.jpg","comment_is_top":false,"comment_ctime":1545558941,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545558941","product_id":100020801,"comment_content":"关掉change-buf， 当一个库上的不同表有的需要change-buf 来提升写入性能，有的需要唯一索引的时候，能对单个表做是否使用change-buf 特性么","like_count":0},{"had_liked":false,"id":52155,"user_name":"ziven","can_delete":false,"product_type":"c1","uid":1110461,"ip_address":"","ucode":"D13AC3D2D27A6F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/bd/049a06b0.jpg","comment_is_top":false,"comment_ctime":1545320948,"is_pvip":false,"replies":[{"id":"19011","content":"对，不需要读出来，只更新redolog,<br><br>这不就是节省随机磁盘吗… 少读了一次磁盘呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545362360,"ip_address":"","comment_id":52155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545320948","product_id":100020801,"comment_content":"您好，关于”change buffer 节省随机读磁盘消耗”这个问题，您的回答是<br>“如果没有change buffer, 执行更新的“当时那一刻”，就要求从磁盘把数据页读出来（这个操作是随机读）&quot;。<br>但是在介绍WAL的时候说过“ 当有一条记录需要更新的时候，InnoDB 引擎就会先把记录写到 redo log（粉板）里面，并更新内存，这个时候更新就算完成了”，这是不是意味着在更新数据的时候并不需要将数据页从磁盘随机读出来，而是只要顺序写redolog就OK？<br>如果这样，那么change buffer 节省随机磁盘IO又是体现在什么地方？<br>问题有点多，哈哈","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433764,"discussion_content":"对，不需要读出来，只更新redolog,\n\n这不就是节省随机磁盘吗… 少读了一次磁盘呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545362360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52005,"user_name":"xzy","can_delete":false,"product_type":"c1","uid":1002095,"ip_address":"","ucode":"1A44368083A19E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/6f/e36b3908.jpg","comment_is_top":false,"comment_ctime":1545292493,"is_pvip":false,"replies":[{"id":"18821","content":"文中说了的，大量插入的表，表里有多个非唯一索引，就有收益","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545293233,"ip_address":"","comment_id":52005,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545292493","product_id":100020801,"comment_content":"老师，能不能举一个可以实际操作的例子","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433695,"discussion_content":"文中说了的，大量插入的表，表里有多个非唯一索引，就有收益","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545293233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51962,"user_name":"耶愿","can_delete":false,"product_type":"c1","uid":1340960,"ip_address":"","ucode":"549E54F67FC000","user_header":"https://static001.geekbang.org/account/avatar/00/14/76/20/2f9c6763.jpg","comment_is_top":false,"comment_ctime":1545283438,"is_pvip":false,"replies":[{"id":"18824","content":"更新之前加的了，行锁没有存在数据页里哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545293347,"ip_address":"","comment_id":51962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545283438","product_id":100020801,"comment_content":"林老师，问个问题，在pool里做更新，然后merge到磁盘，那么行锁是什么时候加上的？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433682,"discussion_content":"更新之前加的了，行锁没有存在数据页里哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545293347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51880,"user_name":"xinzhong","can_delete":false,"product_type":"c1","uid":1334329,"ip_address":"","ucode":"8AC3B0349D10D1","user_header":"","comment_is_top":false,"comment_ctime":1545273205,"is_pvip":false,"replies":[{"id":"18800","content":"如果用where里面用k索引的话，还是要把这一页读出来的，所以k这个页用不上change buffer.<br><br>但是如果name也建了普通索引，那么更新name值这个行为可能被放入change buffer","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545277470,"ip_address":"","comment_id":51880,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1545273205","product_id":100020801,"comment_content":"老师,不知道理解的对不对,比如update t set name=xxx where k=xxx,其中k是二级索引,如果是以下几种情况:<br>1.对于k是二级普通索引的情况,如果索引的数据页不在内存中,则写入到change buffer中,后续某些条件下(比如查找),会将该索引数据页读入内存,然后再回表更新记录的数据页中的name字段为xxx?<br>2.对于k是二级普通索引的情况,如果索引的数据页在内存中,然后回表更新记录数据页中的name字段为xxx?<br>3.对于k是二级唯一索引,如果索引的数据页不在内存中,将该索引数据页读入内存,然后回表更新记录数据页中的name为xxx?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433661,"discussion_content":"如果用where里面用k索引的话，还是要把这一页读出来的，所以k这个页用不上change buffer.\n\n但是如果name也建了普通索引，那么更新name值这个行为可能被放入change buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545277470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314905,"discussion_content":"卧槽，我这样理解下，对不对\nupdate t set name=xxx where k=xxx\n带索引条件的更新，如 where k = xx，因为定位的过程需要查询索引K，所以对于索引K，不能享受到change buffer的收益，\n但是对于要更新的字段（普通索引），如 name =xxx，就不需要再去查询了，能享受change buffer的收益。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603207533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51480,"user_name":"Larwas","can_delete":false,"product_type":"c1","uid":1105436,"ip_address":"","ucode":"AF6BAA7769311A","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/1c/60ff644d.jpg","comment_is_top":false,"comment_ctime":1545187802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545187802","product_id":100020801,"comment_content":"老师，您好。有个疑问：<br>文中提到 change buffer 是占用 buffer pool 内存的，所以可以避免只占用内存，提高内存利用率。这里是指的 buffer pool 内存 和 另一个内存是不一样的吗？但后面讲 change buffer 和 redo log 的时候，假设 “k1 所在的数据页在内存 (InnoDB buffer pool) 中“, 看着又像两者就是一样的？<br><br>谢谢~","like_count":0},{"had_liked":false,"id":50063,"user_name":"棒棒糖","can_delete":false,"product_type":"c1","uid":1306740,"ip_address":"","ucode":"C634E591E4098B","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/74/f574b540.jpg","comment_is_top":false,"comment_ctime":1544856351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544856351","product_id":100020801,"comment_content":"普通索引和唯一索引如何选择？<br>查询：性能上基本一致，相差微乎其微，可忽略不计<br>更新：代码层面可保证数据唯一性的情况下，选择普通索引，只有普通索引可使用change buffer<br>","like_count":0},{"had_liked":false,"id":49083,"user_name":"everyok22","can_delete":false,"product_type":"c1","uid":1213878,"ip_address":"","ucode":"3A3304CCDC5C5C","user_header":"","comment_is_top":false,"comment_ctime":1544600654,"is_pvip":false,"replies":[{"id":"17619","content":"1. 不能，没索引表示只有主键索引<br><br>2. MySQL 现在还没版本支持这个…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544608564,"ip_address":"","comment_id":49083,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544600654","product_id":100020801,"comment_content":"老师：正常数据的插入操作是不是也会用到change buffer呢(没有索引的情况)？ change buffer能在表级别进行配置么，比如A表支持change buffer, B表禁用？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432479,"discussion_content":"1. 不能，没索引表示只有主键索引\n\n2. MySQL 现在还没版本支持这个…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544608564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48965,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1544582652,"is_pvip":false,"replies":[{"id":"17576","content":"主键索引固定不进change buffer, 不冲突也不进","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544584422,"ip_address":"","comment_id":48965,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544582652","product_id":100020801,"comment_content":"学习完本章的疑惑：<br>这次文章中的update主要针对insert语句分析的，使用change buffer与否，就是在于是否需要立刻把某种索引的数据页读取到内存中进行修改（主键索引为了判断冲突，必须读入内存，普通索引没有冲突问题，可以延时merge）。<br>那么我的问题是，（使用图1，K是普通索引，ID是主键索引）如果是一句 update k = 4 where k = 3 或者 update k = 4 where id = 300.这种更新语句呢？（文中没有提到这种更新操作）<br>我的答案是：因为这两个语句都不会涉及到 主键冲突的判断，所以无论是主键索引还是针对k的普通索引都可以放到change buffer里。后续真正读取的时候才merge。（当然如果update语句上锁了，就必须直接读取然后更新）。<br>老师我这么理解正确吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432440,"discussion_content":"主键索引固定不进change buffer, 不冲突也不进","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544584422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48571,"user_name":"此间的少年","can_delete":false,"product_type":"c1","uid":1332298,"ip_address":"","ucode":"2E6FB850937375","user_header":"https://static001.geekbang.org/account/avatar/00/14/54/4a/868e65db.jpg","comment_is_top":false,"comment_ctime":1544490180,"is_pvip":false,"replies":[{"id":"17415","content":"“挂掉”的原因是什么？问题没看明白😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544501217,"ip_address":"","comment_id":48571,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544490180","product_id":100020801,"comment_content":"这个最近也困扰着我的业务代码，有两个id构成一个唯一索引，后台服务逻辑：接到插入canal消息则直接插入，接到更新canal消息则先根据唯一索引的两个id查库是否存在，如果存在则更新，如果不存在则插入，我在库的操作也做了异常捕获，但是服务总是跑了半天之后挂掉，唯一索引有存在的必要，对于逻辑层面我该怎么处理好呢？我通过缓存解决一下合不合适呢？大神有没有好的建议。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432250,"discussion_content":"“挂掉”的原因是什么？问题没看明白😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544501217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48445,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1544445888,"is_pvip":false,"replies":[{"id":"17315","content":"1. 这个被你问倒了😄，现在没有这个按表设置的机制。不过理论上可以有的。（而且居然还不难实现）<br><br>2.  没写完？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544451172,"ip_address":"","comment_id":48445,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544445888","product_id":100020801,"comment_content":"老师我有几个地方不太清楚<br>1、change buffer如果只想在某个表生效，比如业务的历史表，其他更新后就查询的表没有使用，这个要怎么设置么？<br>2、change buffer为什么要写进系统表里，我的理解是在进行一些更新或者删除操作的时候为了防止频繁的从磁盘中读入数据页，用change buffer进行做缓冲，后台线程在特定时间进行将数据merge，redo也会进行记录，由于两段提交，可以在redo没写完整处于preparing状态进行回滚，写完整commit状态，可以在异常重启时对change buffer进行备份，那为什么需要再写到系统表里<br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432183,"discussion_content":"1. 这个被你问倒了😄，现在没有这个按表设置的机制。不过理论上可以有的。（而且居然还不难实现）\n\n2.  没写完？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544451172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48370,"user_name":"liao xueqiang","can_delete":false,"product_type":"c1","uid":1310325,"ip_address":"","ucode":"68713441579F6B","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/75/46742f12.jpg","comment_is_top":false,"comment_ctime":1544429872,"is_pvip":false,"replies":[{"id":"17316","content":"读的是主键索引上的记录，主键索引是本来就不能用上change buffer机制的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544451254,"ip_address":"","comment_id":48370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544429872","product_id":100020801,"comment_content":"当需要更新一个数据页时，如果数据页在内存中就直接更新，而如果这个数据页还没有在内存中的话，在不影响数据一致性的前提下，InooDB 会将这些更新操作缓存在 change buffer 中，这样就不需要从磁盘中读入这个数据页了。   <br>          <br>这里有点没理解透，第八堂课说更新之前必须先读，所以有当前读的概念。读，如果不在内存中，不就是要先读取到内存吗。那意思不就是更新时，数据页必须先存在内存中吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432151,"discussion_content":"读的是主键索引上的记录，主键索引是本来就不能用上change buffer机制的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544451254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48035,"user_name":"gentleman♥️","can_delete":false,"product_type":"c1","uid":1119062,"ip_address":"","ucode":"0BAC746A70038C","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/56/6a062937.jpg","comment_is_top":false,"comment_ctime":1544327789,"is_pvip":false,"replies":[{"id":"17142","content":"如果说严格顺序，先更新（因为更新是在事务执行期间），再写redolog(事务提交时）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544357648,"ip_address":"","comment_id":48035,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544327789","product_id":100020801,"comment_content":"图2.这条更新语句做了如下的操作<br>下面的操作是不是 搞错顺序了啊<br><br>之前一章不是说 先redolog 再 更新嘛","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431996,"discussion_content":"如果说严格顺序，先更新（因为更新是在事务执行期间），再写redolog(事务提交时）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544357648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47911,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1544255326,"is_pvip":false,"replies":[{"id":"17104","content":"对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544333407,"ip_address":"","comment_id":47911,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544255326","product_id":100020801,"comment_content":"思考题: 因为写在change buffer里面的数据会除了会merge 到system table space中还会写入到redo log中, 所以只要redo log中有记录commit的状态, 应该就不会丢失.","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431939,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544333407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47778,"user_name":"24&#47;7","can_delete":false,"product_type":"c1","uid":1302973,"ip_address":"","ucode":"643654E1FA4A29","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/bd/294b77bb.jpg","comment_is_top":false,"comment_ctime":1544195180,"is_pvip":false,"replies":[{"id":"17017","content":"因为在这篇答疑的例子里，在session B update 之前，session A 没有更新呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544196099,"ip_address":"","comment_id":47778,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544195180","product_id":100020801,"comment_content":"老师，你答案的第一种情况，和你上一章举得例子里面事务b与事务c的情况有什么不一样吗，为什么举得例子里面事务b的update可以更新呀。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431886,"discussion_content":"因为在这篇答疑的例子里，在session B update 之前，session A 没有更新呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544196099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47493,"user_name":"秋凯","can_delete":false,"product_type":"c1","uid":1235435,"ip_address":"","ucode":"0BD0F4F60556F5","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/eb/223c6c80.jpg","comment_is_top":false,"comment_ctime":1544147993,"is_pvip":false,"replies":[{"id":"16925","content":"后面我尽量文章里都带例子🤝","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544148530,"ip_address":"","comment_id":47493,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544147993","product_id":100020801,"comment_content":"内容精彩丰富没得说。但感觉是进阶版，可能是我这种零基础的原因，有没有哪个书是比较适合入门的？让我可以看书消化一下基础概念。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431781,"discussion_content":"后面我尽量文章里都带例子🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544148530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47231,"user_name":"csoulsi","can_delete":false,"product_type":"c1","uid":1227336,"ip_address":"","ucode":"96C9BBE9097FB3","user_header":"https://static001.geekbang.org/account/avatar/00/12/ba/48/c892a35b.jpg","comment_is_top":false,"comment_ctime":1544082970,"is_pvip":true,"replies":[{"id":"16844","content":"都要受到唯一索引约束的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544084260,"ip_address":"","comment_id":47231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544082970","product_id":100020801,"comment_content":"老师，<br>如果向唯一索引的列，更新数据，唯一性的判断是由这个唯一索引来约束<br>那么如果更新的sql，不走唯一索引，是在哪儿判断啊？<br>还是说对于sql来说，不管走不走索引，都收到唯一索引的约束？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431707,"discussion_content":"都要受到唯一索引约束的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544084260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47177,"user_name":"酱了个油","can_delete":false,"product_type":"c1","uid":1059627,"ip_address":"","ucode":"5A13CA4EAACB81","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/2b/bebf6eed.jpg","comment_is_top":false,"comment_ctime":1544067996,"is_pvip":false,"replies":[{"id":"16831","content":"就是课后的思考题，你看一下下一篇末尾的答复","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544071054,"ip_address":"","comment_id":47177,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544067996","product_id":100020801,"comment_content":"老师好，今天学习到了change buffer这种写操作的加速机制，我有一个问题：<br>我们在做数据的【读缓存】时，缓存服务（如Redis）挂了后，还可以回源到数据库，有一定的容错性。<br>change buffer这种『写操作缓存』，可靠性如何保证？如果change buffer 挂了，数据没有写入到磁盘，不是会导致数据丢失？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431689,"discussion_content":"就是课后的思考题，你看一下下一篇末尾的答复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544071054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46945,"user_name":"静以储势·Shuke","can_delete":false,"product_type":"c1","uid":1119090,"ip_address":"","ucode":"98736831B73028","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/72/434a40f1.jpg","comment_is_top":false,"comment_ctime":1544006754,"is_pvip":false,"replies":[{"id":"16781","content":"不是用mmap方式，innodb有自己的内存管理方法","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544020202,"ip_address":"","comment_id":46945,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544006754","product_id":100020801,"comment_content":"系统空间和buffer pool之间有做mmap映射么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431614,"discussion_content":"不是用mmap方式，innodb有自己的内存管理方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544020202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46901,"user_name":"晓东","can_delete":false,"product_type":"c1","uid":1003385,"ip_address":"","ucode":"8F18CDFD84A97B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/79/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1543999273,"is_pvip":false,"replies":[{"id":"16794","content":"会死锁，有间隙锁gap lock冲突。<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544025755,"ip_address":"","comment_id":46901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543999273","product_id":100020801,"comment_content":"前提：\r1.order表包含Id，orderId，channelId三个字段，其中id为自增主键，orderId和channelId为联合非唯一索引（idx_order_channel）,\r事务隔离级别为Repeatable Read\r2.表中包含三条数据：\rid    OrderId    channelId\r1678  JY005   1005\r1679  JY010   1047\r1680  JY015   1023\r\r3.由于idx_order_channel为非唯一索引，下单时需要按照orderId_channelId删除数据，再插入数据\r\r现在有两个同时下单的请求，执行的事务如下：\r事务1：begin;delete from order where orderId = &#39;JY007&#39; and channelId = 1007;insert...(&#39;JY007&#39;,1007);commit;\r事务2：begin;delete from order where orderId = &#39;JY008&#39; and channelId = 1025;insert...(&#39;JY008&#39;,1025);commit;\r请问这种情况会发生死锁吗？会有抢夺锁的情况发生不？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431591,"discussion_content":"会死锁，有间隙锁gap lock冲突。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544025755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46878,"user_name":"郭俊杰","can_delete":false,"product_type":"c1","uid":1095011,"ip_address":"","ucode":"3BA7F5CA0BA864","user_header":"https://static001.geekbang.org/account/avatar/00/10/b5/63/b66f3d37.jpg","comment_is_top":false,"comment_ctime":1543995739,"is_pvip":false,"replies":[{"id":"16792","content":"被淘汰，内存有限,且用且珍惜😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544022874,"ip_address":"","comment_id":46878,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543995739","product_id":100020801,"comment_content":"老师，还有一个问题，假如数据页page2，现在在内存中了，那么这个page2，什么时候就不在内存中了呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431582,"discussion_content":"被淘汰，内存有限,且用且珍惜😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544022874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46864,"user_name":"郭俊杰","can_delete":false,"product_type":"c1","uid":1095011,"ip_address":"","ucode":"3BA7F5CA0BA864","user_header":"https://static001.geekbang.org/account/avatar/00/10/b5/63/b66f3d37.jpg","comment_is_top":false,"comment_ctime":1543993840,"is_pvip":false,"replies":[{"id":"16793","content":"如果这个表没有别的普通索引，那确实就用不上","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544022904,"ip_address":"","comment_id":46864,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543993840","product_id":100020801,"comment_content":"老师你好，唯一索引不能使用change buffer，一般建表的时候，都是设置主键，主键就是一个唯一索引，是不是这样插入操作，都不用用到chang  buffer呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431578,"discussion_content":"如果这个表没有别的普通索引，那确实就用不上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544022904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46759,"user_name":"HuaMax","can_delete":false,"product_type":"c1","uid":1118488,"ip_address":"","ucode":"2E78DE1AF098AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","comment_is_top":false,"comment_ctime":1543978105,"is_pvip":false,"replies":[{"id":"16699","content":"确实是因为B里面的更新导致A的条件不成立。<br><br>那个问题的主要关注点事，在A的两个select语句看来，应该是要成立的，这里有“矛盾”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543983162,"ip_address":"","comment_id":46759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543978105","product_id":100020801,"comment_content":"关于上期问题的解释里的session B&#39;的方案，有一个疑问望解答。session A最后的查询语句查到的结果没有变化，不都是因为B和B&#39;里的更新语句导致A里的update 的条件不成立吗？B与B&#39;的区别在哪儿呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431534,"discussion_content":"确实是因为B里面的更新导致A的条件不成立。\n\n那个问题的主要关注点事，在A的两个select语句看来，应该是要成立的，这里有“矛盾”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543983162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46577,"user_name":"晓东","can_delete":false,"product_type":"c1","uid":1003385,"ip_address":"","ucode":"8F18CDFD84A97B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/79/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1543938478,"is_pvip":false,"replies":[{"id":"16649","content":"可否详细说下你的场景","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543945957,"ip_address":"","comment_id":46577,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543938478","product_id":100020801,"comment_content":"可以讲一下delete并发造成的死锁原理吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431488,"discussion_content":"可否详细说下你的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543945957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46570,"user_name":"清凉薄荷糖","can_delete":false,"product_type":"c1","uid":1306125,"ip_address":"","ucode":"CDEA8E4D55F3DE","user_header":"https://static001.geekbang.org/account/avatar/00/13/ee/0d/892eb1bb.jpg","comment_is_top":false,"comment_ctime":1543937729,"is_pvip":false,"replies":[{"id":"16645","content":"Buffer pool， 其实redo log并没有直接写磁盘数据页的能力，因为它没有整页的数据","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543942008,"ip_address":"","comment_id":46570,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543937729","product_id":100020801,"comment_content":"正常运行中的实例，数据写入后的最终落盘，是从redo log更新过去还是从buffer pool呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431486,"discussion_content":"Buffer pool， 其实redo log并没有直接写磁盘数据页的能力，因为它没有整页的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543942008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46568,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1543937713,"is_pvip":false,"replies":[{"id":"16646","content":"Change buffer 自己是一种数据，它自己会持久化；<br><br>不会无限增大，文章了介绍了有参数控制哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543942116,"ip_address":"","comment_id":46568,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543937713","product_id":100020801,"comment_content":"请问老师。change buffer 是被merge之后才被持久化到磁盘的吗？那持久化之后的内容有清理机制吗，应该不会无限增大吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431485,"discussion_content":"Change buffer 自己是一种数据，它自己会持久化；\n\n不会无限增大，文章了介绍了有参数控制哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543942116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46452,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1543928997,"is_pvip":false,"replies":[{"id":"16623","content":"额…我第二章如果把这个也加进来，那篇文章就巨长了。 <br>第二章理解为针对唯一索引和内存中的二维索引吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543933350,"ip_address":"","comment_id":46452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543928997","product_id":100020801,"comment_content":"对于图二，把change log写入磁盘是后台操作的话，哪对于redo log，是在内存写完change log就写redo log吗？这时候，还没有把磁盘中的数据读到内存并且修改，就已经写了redo log,如果这样，跟第二节讲的要先更新内存在写redo log是不是就矛盾了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431464,"discussion_content":"额…我第二章如果把这个也加进来，那篇文章就巨长了。 \n第二章理解为针对唯一索引和内存中的二维索引吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543933350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46439,"user_name":"鸠翱","can_delete":false,"product_type":"c1","uid":1116568,"ip_address":"","ucode":"7D498AF2BC4289","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/98/b11c372b.jpg","comment_is_top":false,"comment_ctime":1543926279,"is_pvip":false,"replies":[{"id":"16625","content":"看关注重点吧😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543933390,"ip_address":"","comment_id":46439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543926279","product_id":100020801,"comment_content":"在阿里巴巴的那个开发手册有说业务唯一的字段必须建成唯一索引呢……即使应用层做了完善的检验","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431460,"discussion_content":"看关注重点吧😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543933390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46375,"user_name":"Ivan","can_delete":false,"product_type":"c1","uid":1302381,"ip_address":"","ucode":"57090A053A247F","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/6d/44cf0de4.jpg","comment_is_top":false,"comment_ctime":1543910339,"is_pvip":false,"replies":[{"id":"16581","content":"我原来写错了，本文的操作都是叫merge ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543912927,"ip_address":"","comment_id":46375,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543910339","product_id":100020801,"comment_content":"又看了一下评论区，有些问题比较懵了。。。。<br>1. purge和merge是同样的操作吗？还是purge是将脏页刷盘，merge是在内存中发生的合并操作，先merge后purge？<br>2. purge和merge 也会记录redo log，这时记录的redo内容是索引页的物理变化吗？<br>3. merge时是不是也是通过Checkpoint的机制记录哪些已经merge哪些没有merge吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431434,"discussion_content":"我原来写错了，本文的操作都是叫merge ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543912927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46356,"user_name":"会玩code","can_delete":false,"product_type":"c1","uid":1325282,"ip_address":"","ucode":"9220B072AF68C7","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/e2/28aa8e6c.jpg","comment_is_top":false,"comment_ctime":1543906332,"is_pvip":false,"replies":[{"id":"16631","content":"会。<br>如果merge没做，那么数据页上就一直是旧数据哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543933735,"ip_address":"","comment_id":46356,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543906332","product_id":100020801,"comment_content":"老师，看了这篇文章后个问题不太理解，想请教一下。关于数据落盘，我理解的数据落盘应该是利用redolog将修改更新到磁盘上，数据落盘的进度在redolog表现为checkpoint，但如果这样的话当更新数据后，修改在change buffer中，然后更新的数据一直没被访问，修改通过redolog落盘后，才被访问到，这时候从磁盘中将数据页读入内存，之后还会执行 change buffer 中与这次修改相关的操做吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431430,"discussion_content":"会。\n如果merge没做，那么数据页上就一直是旧数据哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543933735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46353,"user_name":"york","can_delete":false,"product_type":"c1","uid":1318852,"ip_address":"","ucode":"EE938B81A7FC04","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epGMibYc0m7cDHMsNRBUur2NPVnlBZFXoNjWomibfjnHeAO3XRt27VaH3WNtdUX11d3uIT1ZHWCxLeg/132","comment_is_top":false,"comment_ctime":1543905768,"is_pvip":false,"replies":[{"id":"16593","content":"1.  merge就是你说的过程，不包括持久化到磁盘<br>2. Purge, 将脏页内存数据（可能是change buffer 、普通数据） 写入到磁盘上<br><br>所以问题1中，purge后，得到的数据是脏页，可以依靠merge 操作写入磁盘","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543921319,"ip_address":"","comment_id":46353,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543905768","product_id":100020801,"comment_content":"看了留言，关于merge、purge什么的，感觉混乱了，请老师帮忙理清一下：<br>1. merge：将历史数据（我的理解是读入内存后的数据页）和change buffer中的内容合并计算后产生新的数据，这个新的数据应该先写到内存中的数据页中。那么，merge是否包括将内存中的数据页同步更新到磁盘上的表空间文件？如果不包括，那么这个同步内存数据到磁盘上的过程由谁负责？<br>2. purge：将change buffer由内存持久化（拷贝副本）至磁盘，磁盘上对应的文件名是ib_buffer_pool？如系统掉电，重启后通过该文件在内存中恢复InnoDB buffer pool（包括change buffer和数据页），没来得及purge的部分，通过redo log（或先由binlog重构redo log）进行重构？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431429,"discussion_content":"1.  merge就是你说的过程，不包括持久化到磁盘\n2. Purge, 将脏页内存数据（可能是change buffer 、普通数据） 写入到磁盘上\n\n所以问题1中，purge后，得到的数据是脏页，可以依靠merge 操作写入磁盘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543921319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46344,"user_name":"Richie","can_delete":false,"product_type":"c1","uid":1111377,"ip_address":"","ucode":"1426E1B2E82A43","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/51/60e91438.jpg","comment_is_top":false,"comment_ctime":1543904442,"is_pvip":false,"replies":[{"id":"16632","content":"就是指的索引k上的数据页。不过你说的对，我应该画(k1, id1), 这样更准确","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543933971,"ip_address":"","comment_id":46344,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543904442","product_id":100020801,"comment_content":"老师,change buffer是对二级索引页延迟写，但看你画的图是数据页，不是索引页","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431427,"discussion_content":"就是指的索引k上的数据页。不过你说的对，我应该画(k1, id1), 这样更准确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543933971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46340,"user_name":"一大只😴","can_delete":false,"product_type":"c1","uid":1310960,"ip_address":"","ucode":"92F3D2B7F63568","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/f0/08409e78.jpg","comment_is_top":false,"comment_ctime":1543903657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543903657","product_id":100020801,"comment_content":"老师，我有几个问题没理解清楚，1、图二中说进行了一次磁盘的顺序写，刷的是redo，那change buffer在什么时候落到系统表空间呢？2、对于普通索引，如果目标页不在内存中，将更新记录到changer buffer ，然后还会将这个动作记录到redo，那merge时候，再记录redo会不会重复了？","like_count":0},{"had_liked":false,"id":46302,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1543895575,"is_pvip":false,"replies":[{"id":"16563","content":"Chsnge buffer在内存里也有，磁盘上（系统表空间）也有","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543898072,"ip_address":"","comment_id":46302,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543895575","product_id":100020801,"comment_content":"老师请问下：change buffer对应的位置是什么？内存里面？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431417,"discussion_content":"Chsnge buffer在内存里也有，磁盘上（系统表空间）也有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543898072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46223,"user_name":"☞","can_delete":false,"product_type":"c1","uid":1302793,"ip_address":"","ucode":"6FAEF05F234D2A","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/09/9483f537.jpg","comment_is_top":false,"comment_ctime":1543886258,"is_pvip":false,"replies":[{"id":"16549","content":"进行merge合并的时候会记redolog的，这样如果之后异常重启了就会通过崩溃恢复，恢复回来。<br><br>好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543891599,"ip_address":"","comment_id":46223,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543886258","product_id":100020801,"comment_content":"老师回复：“其实是恢复change huffer的内容，但是不怕丢失，因为change buffer也确保不会丢哈”<br>这个我明白，因为redo控制它不会丢失，但是change buffer  进行purge合并的时候不会记录redo了，这个时候如果形成的脏数据还没落盘然后就异常宕机了，redo恢复的应该还是change buffer没合并之前的数据吧，应该不会直接恢复成合并后的脏数据吧","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431385,"discussion_content":"进行merge合并的时候会记redolog的，这样如果之后异常重启了就会通过崩溃恢复，恢复回来。\n\n好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543891599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46205,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1543884651,"is_pvip":false,"replies":[{"id":"16551","content":"1. 是的<br><br>2. 前面的merge步骤磁盘，就到内存。 唯一索引用不上change buffer<br><br>3. 内存被淘汰","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543891800,"ip_address":"","comment_id":46205,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543884651","product_id":100020801,"comment_content":"有几个问题1 redo log里面存哪几种信息，有insert,update,delete,还有change buffer信息，停电之后没有purge的change buffer恢复就是从redo log恢复的？2 应用change buffer的场景，是不是一般的insert,update,delete都会先写入change buffer，再purge到硬盘？除了说的唯一索引，内存有page的场景？3 page在内存中不会一直存在，一个page原来在内存中，什么时候会找不到了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431374,"discussion_content":"1. 是的\n\n2. 前面的merge步骤磁盘，就到内存。 唯一索引用不上change buffer\n\n3. 内存被淘汰","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543891800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46204,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1543884624,"is_pvip":false,"replies":[{"id":"16554","content":"当作数据存起来。<br><br>这个是专门放在系统表空间，很容易“找”的😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543891914,"ip_address":"","comment_id":46204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543884624","product_id":100020801,"comment_content":"请问为什么changebuffer要同时写系统表空间和redolog，恢复时如何快速定位未purge的呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431373,"discussion_content":"当作数据存起来。\n\n这个是专门放在系统表空间，很容易“找”的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543891914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46182,"user_name":"是我的海","can_delete":false,"product_type":"c1","uid":1197457,"ip_address":"","ucode":"4BCE240829676A","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/91/afda3094.jpg","comment_is_top":false,"comment_ctime":1543881689,"is_pvip":false,"replies":[{"id":"16558","content":"二级索引相关的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543892117,"ip_address":"","comment_id":46182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543881689","product_id":100020801,"comment_content":"老师有点没理解insert buffer 得作用：当插入一条数据的时候，是将整条记录都放在那个buffer中，还是说只是二级索引页相关的内容放入insert  buffer中？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431363,"discussion_content":"二级索引相关的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543892117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46180,"user_name":"dancer","can_delete":false,"product_type":"c1","uid":1019036,"ip_address":"","ucode":"B8D5641A3AC490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/9c/d48473ab.jpg","comment_is_top":false,"comment_ctime":1543881439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543881439","product_id":100020801,"comment_content":"老师，前面讲的redo log和change buffer都有把更新落盘的功能，请问这两种更新落盘怎么保证互不影响呢？或者说其中一种已经把更新写盘了，那另一种后续怎么避免重复再写一次？","like_count":0},{"had_liked":false,"id":46138,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1543852324,"is_pvip":false,"replies":[{"id":"16530","content":"“插入一行带唯一键的数据”还是可能有收益的。唯一键那个索引没有，但是普通索引有","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543887885,"ip_address":"","comment_id":46138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543852324","product_id":100020801,"comment_content":"同一个表的不同的二级普通索引都是一个独立的b+树结构，插入一行带唯一键的数据其实不会二级索引change buffer带来的收益，change buffer purge 基于哪个纬度的呢? 还是不同二级索引互不影响 无关联","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431353,"discussion_content":"“插入一行带唯一键的数据”还是可能有收益的。唯一键那个索引没有，但是普通索引有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543887885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46113,"user_name":"Knight²º¹⁸","can_delete":false,"product_type":"c1","uid":1089754,"ip_address":"","ucode":"BDCB830B6A730F","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/da/4f50f1b2.jpg","comment_is_top":false,"comment_ctime":1543849004,"is_pvip":false,"replies":[{"id":"16515","content":"Purge就是把change buffer 应用到历史版本的数据上，得到新版本的过程","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543886986,"ip_address":"","comment_id":46113,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543849004","product_id":100020801,"comment_content":"purge 什么？ purge 的过程是怎么样的, 都涉及哪些操作？这部分不太了解。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431340,"discussion_content":"Purge就是把change buffer 应用到历史版本的数据上，得到新版本的过程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543886986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46090,"user_name":"可凡不凡","can_delete":false,"product_type":"c1","uid":1296289,"ip_address":"","ucode":"9D42D6C5274D48","user_header":"https://static001.geekbang.org/account/avatar/00/13/c7/a1/273bff58.jpg","comment_is_top":false,"comment_ctime":1543844356,"is_pvip":false,"replies":[{"id":"16481","content":"这个话题很大… 我在《MySQL里有哪些“饮鸩止渴”的优化方法》里面会说","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543846836,"ip_address":"","comment_id":46090,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543844356","product_id":100020801,"comment_content":"lvan说的落盘和组提交 还有上篇文章评论里说过的double write 老师可以在延伸一下吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431332,"discussion_content":"这个话题很大… 我在《MySQL里有哪些“饮鸩止渴”的优化方法》里面会说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543846836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46086,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1543843371,"is_pvip":false,"replies":[{"id":"16487","content":"可以先查后改呀，就看业务愿不愿意…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543847015,"ip_address":"","comment_id":46086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543843371","product_id":100020801,"comment_content":"老师一直在说在应用保证唯一性的情况下，那么，我们都知道数据库通过行级锁来确保唯一性的，如果应用不加锁，那又如何有效保证唯一呢？请指教。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431331,"discussion_content":"可以先查后改呀，就看业务愿不愿意…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543847015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46075,"user_name":"小罗希冀","can_delete":false,"product_type":"c1","uid":1311995,"ip_address":"","ucode":"88416458FF0041","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/fb/40f298bb.jpg","comment_is_top":false,"comment_ctime":1543842110,"is_pvip":false,"replies":[{"id":"16483","content":"跟 数据页的持久化策略一样，参考02篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543846923,"ip_address":"","comment_id":46075,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543842110","product_id":100020801,"comment_content":"老师原话 -- “change buffer，实际上它是可以持久化的数据。”<br>如果在执行一条UpdateSQL的时候，change buffer应该是会持久化到磁盘，但是持久化的策略不太清楚，可能会像Redis的RDB持久化方案一样，符合一定条件就触发持久化操作，又或者类似AOF持久化方式一样，每次写入change buffer都会持久化，我想MySQL也会提供参数，调节持久化的策略<br>如果update的时候突然断电，change buffer还没有写入，应该算是事务没有完成吧，所以事务会回滚？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431326,"discussion_content":"跟 数据页的持久化策略一样，参考02篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543846923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46056,"user_name":"可凡不凡","can_delete":false,"product_type":"c1","uid":1296289,"ip_address":"","ucode":"9D42D6C5274D48","user_header":"https://static001.geekbang.org/account/avatar/00/13/c7/a1/273bff58.jpg","comment_is_top":false,"comment_ctime":1543839880,"is_pvip":false,"replies":[{"id":"16486","content":"不一样的东西哦，你看图里面标了描述","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543846983,"ip_address":"","comment_id":46056,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543839880","product_id":100020801,"comment_content":"老师 为啥系统表空间和数据表空间各存了一份啊","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431319,"discussion_content":"不一样的东西哦，你看图里面标了描述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543846983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46054,"user_name":"可凡不凡","can_delete":false,"product_type":"c1","uid":1296289,"ip_address":"","ucode":"9D42D6C5274D48","user_header":"https://static001.geekbang.org/account/avatar/00/13/c7/a1/273bff58.jpg","comment_is_top":false,"comment_ctime":1543839789,"is_pvip":false,"replies":[{"id":"16478","content":"就是持久化呀，崩溃恢复回来还能用","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543846213,"ip_address":"","comment_id":46054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543839789","product_id":100020801,"comment_content":"老师 写到系统表空间是干啥用的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431317,"discussion_content":"就是持久化呀，崩溃恢复回来还能用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543846213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46050,"user_name":"高原","can_delete":false,"product_type":"c1","uid":1315634,"ip_address":"","ucode":"9E0C2EE595D0F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/32/4cfd28df.jpg","comment_is_top":false,"comment_ctime":1543839237,"is_pvip":true,"replies":[{"id":"16479","content":"我大概理解你的意思了。<br><br>如果没有purge,磁盘上的page 2不会变的，redolog没帮他做更新。<br><br>只有purge 才会触发更新数据，得到新的page 2","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543846441,"ip_address":"","comment_id":46050,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543839237","product_id":100020801,"comment_content":"ChangeBuffer就是对《日志系统：一条 SQL 更新语句是如何执行的？》中 update 语句执行流程进一步优化。更新步骤：先更新内存，再通过redo log更新磁盘。<br>而Change Buffer的引入使得更新内存都是按需更新，只有在需要读的时候才更新。 如果这样理解对的话，就有一个问题，如果在purge之前，redo log执行了磁盘写，那change buffer里的操作是不是就有冲突怎么让失效呢？<br>2018-12-03<br> 作者回复<br>前面说的对，最后一句话问题没理解… 你再发重发一下问题😓<br>---------------------------------------------------------<br>问题：现在一个执行流程是，操作写入change buffer, 写入redo log commit. 但这个时候应该没有purge,也没有通过redo log写入磁盘。 Purge 是在有的查询操作的时候发生（不考虑系统自动purge），那过段时间应该会通过redo log更新到磁盘。<br>我的问题就是通过redo log更新到磁盘的时候，如果还没有发生purge操作，那如果再次读触发Purge从磁盘读（磁盘已经是redo log更新后的数据了), 所以这个地方是通过什么机制确保没有冲突的？ 谢谢，老师讲的很好，不知道我说明白没有？ ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431316,"discussion_content":"我大概理解你的意思了。\n\n如果没有purge,磁盘上的page 2不会变的，redolog没帮他做更新。\n\n只有purge 才会触发更新数据，得到新的page 2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543846441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46026,"user_name":"xumc","can_delete":false,"product_type":"c1","uid":1033274,"ip_address":"","ucode":"22D24AF9D52B65","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/3a/77bbc665.jpg","comment_is_top":false,"comment_ctime":1543835931,"is_pvip":false,"replies":[{"id":"16474","content":"要看你的唯一主键怎么来的。比如有一个唯一主键的全局产生器…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543845857,"ip_address":"","comment_id":46026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543835931","product_id":100020801,"comment_content":"老师<br>业务要求数据库中某个字段是唯一的，当请求并发的时候，除了在数据库层吗设置成唯一索引，还有别的办法吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431309,"discussion_content":"要看你的唯一主键怎么来的。比如有一个唯一主键的全局产生器…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543845857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46012,"user_name":"☞","can_delete":false,"product_type":"c1","uid":1302793,"ip_address":"","ucode":"6FAEF05F234D2A","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/09/9483f537.jpg","comment_is_top":false,"comment_ctime":1543832828,"is_pvip":false,"replies":[{"id":"16472","content":"其实是恢复change huffer的内容，但是不怕丢失，因为change buffer也确保不会丢哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543845362,"ip_address":"","comment_id":46012,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543832828","product_id":100020801,"comment_content":"老师请问下：<br>        更新写入change buffer时redo log记录的到底是数据最后变更还是change buffer变更<br>换句话说，在change buffer还没有进行purge操作时宕机，通过redo是恢复change buffer中内容，最后配合原数据页的到最后记录，还是直接通过redo恢复purge后的最后记录。<br>       针对上面两种情况有两个问题<br>       1、如果恢复的是change buffer purge后的记录，那么change buffer丢失不会有什么影响啊<br>       2、如果恢复的是change buffer的内容，那么purge如果不再记redo，一旦purge完，脏页还没写盘就宕机了，再恢复的时候还是只能恢复purge 前的change buffer内容吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431303,"discussion_content":"其实是恢复change huffer的内容，但是不怕丢失，因为change buffer也确保不会丢哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543845362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45993,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1543829168,"is_pvip":false,"replies":[{"id":"16471","content":"是的，崩溃恢复其实就是恢复现场，除了读请求留在系统的干净页以外","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543845271,"ip_address":"","comment_id":45993,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543829168","product_id":100020801,"comment_content":"对思考题的想法，<br>机器掉电的时候 change buffer是会丢失的，但是数据是不会丢的，因为有写redo log，只有当redo log写完之后，transaction才会提交。<br><br>另外，在恢复redo log的时候（比如数据掉电后库重启），以文中图2为例子，对于第3和第4步，是不是在apply第3步的时候，同时也把page1 load到内存；在apply第4步的时候，也在change buffer里做 “add<br> (id2, k2) to Page2”这个动作，也就是恢复成图2中 InnoDB buffer pool里的样子？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431298,"discussion_content":"是的，崩溃恢复其实就是恢复现场，除了读请求留在系统的干净页以外","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543845271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45978,"user_name":"melon","can_delete":false,"product_type":"c1","uid":1023773,"ip_address":"","ucode":"7A80C20EBCAAA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/1d/ec173090.jpg","comment_is_top":false,"comment_ctime":1543827154,"is_pvip":false,"replies":[{"id":"16469","content":"Change buffer的写盘机制跟数据类似，你可以看一下03篇<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543845131,"ip_address":"","comment_id":45978,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543827154","product_id":100020801,"comment_content":"老师，change buffer 什么时候会写入系统表空间中呢？是在超出 innodb_change_buffer_max_size 设定的时候吗？如果 change buffer 写入到了系统表空间，purge 的时候会带来怎样的影响？这块的机理能给介绍一下吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431294,"discussion_content":"Change buffer的写盘机制跟数据类似，你可以看一下03篇\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543845131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45973,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1543826910,"is_pvip":false,"replies":[{"id":"16431","content":"跟课后思考题是相同逻辑，看一下其它同学的回答哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543832277,"ip_address":"","comment_id":45973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543826910","product_id":100020801,"comment_content":"在数据库正常关闭（shutdown）的过程中，也会执行 purge。也就是purge是设计的兜底操作。有个问题就是，这时候的purge未操作完change buffer里面的数据，是不是也会产生数据丢失？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431293,"discussion_content":"跟课后思考题是相同逻辑，看一下其它同学的回答哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543832277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45964,"user_name":"焦阳","can_delete":false,"product_type":"c1","uid":1334043,"ip_address":"","ucode":"460C4FB9FDAD23","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/1b/2f783978.jpg","comment_is_top":false,"comment_ctime":1543825756,"is_pvip":false,"replies":[{"id":"16429","content":"插入数据，无关没有主键冲突就插入，如果有，就对冲突的第一行修改它的TID值","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543832213,"ip_address":"","comment_id":45964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543825756","product_id":100020801,"comment_content":"请教一个问题<br>INSERT INTO .. ON DUPLICATE KEY UPDATE TID = 2,...<br>能详情解释下这个SQL的执行过程吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431290,"discussion_content":"插入数据，无关没有主键冲突就插入，如果有，就对冲突的第一行修改它的TID值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543832213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45960,"user_name":"路过","can_delete":false,"product_type":"c1","uid":1316401,"ip_address":"","ucode":"7152C19ED024CC","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/31/ae8adf82.jpg","comment_is_top":false,"comment_ctime":1543825369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543825369","product_id":100020801,"comment_content":"思考题：写完change buffer，应该还需要把修改操作写入redo log后事务才算完成。否则应该会导致数据丢失。","like_count":0},{"had_liked":false,"id":45956,"user_name":"小学生","can_delete":false,"product_type":"c1","uid":1166994,"ip_address":"","ucode":"6EF88756389547","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/92/f53c41ee.jpg","comment_is_top":false,"comment_ctime":1543825118,"is_pvip":false,"replies":[{"id":"16428","content":"其实就是要有充分预热，这个话题比较大，我在后面的文章中会提到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543832143,"ip_address":"","comment_id":45956,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543825118","product_id":100020801,"comment_content":"老师，请教您一个问题：<br>我是做性能测试的，在进行压测的时候，数据流转是查询Mysql,那么我在压测期间，需要监控数据库的哪些指标呢？或者说 哪些指标才能更好的反映出数据库的性能达到了瓶颈？恳请老师予以解答，非常感谢！！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431287,"discussion_content":"其实就是要有充分预热，这个话题比较大，我在后面的文章中会提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543832143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588152,"discussion_content":"预热是指提前把数据都加载到buffer pool里面吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663576793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45938,"user_name":"📆","can_delete":false,"product_type":"c1","uid":1219314,"ip_address":"","ucode":"1D0C14DB6F40C4","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/f2/64d1c380.jpg","comment_is_top":false,"comment_ctime":1543822834,"is_pvip":false,"replies":[{"id":"16426","content":"对，等需要访问的时候才会去磁盘读，<br>Change buffer 的收益就是在“写完不会马上去读”这种场景","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543832025,"ip_address":"","comment_id":45938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543822834","product_id":100020801,"comment_content":"老师好，请问为什么change buffer会节省随机读磁盘的io消耗？<br>“要读 Page 2 的时候，需要把 Page 2 从磁盘读入内存中”<br>这里应该也是一个随机读io吧，好像没有看到节省io啊<br>另外这个读操作应该也会触发之后的原数据页purge吧","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431279,"discussion_content":"对，等需要访问的时候才会去磁盘读，\nChange buffer 的收益就是在“写完不会马上去读”这种场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543832025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45916,"user_name":"ch","can_delete":false,"product_type":"c1","uid":1202826,"ip_address":"","ucode":"C5D6E901928CF7","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/8a/a0ed5f5c.jpg","comment_is_top":false,"comment_ctime":1543817681,"is_pvip":false,"replies":[{"id":"16400","content":"最后一句没对，重读哈：）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543821034,"ip_address":"","comment_id":45916,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543817681","product_id":100020801,"comment_content":"对于插入操作来说是否有change buffer都要写redo log, 都是顺序写入，唯一区别是有多个插入时change buffer会缓存一下，然后再一次写入到redo log中？<br><br>“而 change buffer 主要节省的则是随机读磁盘的IO消耗”，这个不太理解，感觉是节省了顺序写redo log的次数，读的话，就算有change buffer还是要到磁盘去加载数据到内存的。<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431267,"discussion_content":"最后一句没对，重读哈：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543821034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45910,"user_name":"ch","can_delete":false,"product_type":"o","uid":1202826,"ip_address":"","ucode":"C5D6E901928CF7","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/8a/a0ed5f5c.jpg","comment_is_top":false,"comment_ctime":1543816680,"is_pvip":false,"replies":[{"id":"16398","content":"1. 对的<br>2. 对一半哈。 但是change buffer是针对数据页的，所以一个数据页上是可能会对应是个change buffer item的。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543820901,"ip_address":"","comment_id":45910,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543816680","product_id":999999999,"comment_content":"两点思考：<br>1. redo log是写磁盘，直接写数据到磁盘也是写磁盘，这2个效率不一样就是因为redo log是顺序写，直接写数据到磁盘是随机写吗？<br>2. change buffer里面的内容还没有写入到redo log里面的情况下，再来一个更新操作，会不会把之前的覆盖掉，这个我认为不会，因为更新是独占锁，同一条记录只有事务提交后才会释放锁，所以更新是串行的，只要事务提交才就会把change buffer的内容写入到redo log中。不知道理解的是否正确？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431265,"discussion_content":"1. 对的\n2. 对一半哈。 但是change buffer是针对数据页的，所以一个数据页上是可能会对应是个change buffer item的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543820901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45892,"user_name":"高原","can_delete":false,"product_type":"c1","uid":1315634,"ip_address":"","ucode":"9E0C2EE595D0F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/32/4cfd28df.jpg","comment_is_top":false,"comment_ctime":1543813977,"is_pvip":true,"replies":[{"id":"16397","content":"前面说的对，最后一句话问题没理解… 你再发重发一下问题😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543820779,"ip_address":"","comment_id":45892,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543813977","product_id":100020801,"comment_content":"ChangeBuffer就是对《日志系统：一条 SQL 更新语句是如何执行的？》中 update 语句执行流程进一步优化。更新步骤：先更新内存，再通过redo log更新磁盘。<br>而Change Buffer的引入使得更新内存都是按需更新，只有在需要读的时候才更新。 如果这样理解对的话，就有一个问题，如果在purge之前，redo log执行了磁盘写，那change buffer里的操作是不是就有冲突怎么让失效呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431256,"discussion_content":"前面说的对，最后一句话问题没理解… 你再发重发一下问题😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543820779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45891,"user_name":"蠢蠢欲动的腹肌","can_delete":false,"product_type":"c1","uid":1007326,"ip_address":"","ucode":"B10550BF463017","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/de/4e7ec66d.jpg","comment_is_top":false,"comment_ctime":1543813849,"is_pvip":false,"replies":[{"id":"16399","content":"Commit写redolog，都是在事务提交过程是的。<br><br>Purge 是以后才发生的事情了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543820953,"ip_address":"","comment_id":45891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543813849","product_id":100020801,"comment_content":"老师，你好<br>想问下purge与redolog的commit的关系或者执行顺序是怎样的，感觉这里比较模糊","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431255,"discussion_content":"Commit写redolog，都是在事务提交过程是的。\n\nPurge 是以后才发生的事情了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543820953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45880,"user_name":"岁月安然","can_delete":false,"product_type":"c1","uid":1258557,"ip_address":"","ucode":"4538C24B67B513","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/3d/51762e76.jpg","comment_is_top":false,"comment_ctime":1543810082,"is_pvip":false,"replies":[{"id":"16402","content":"1. 跟表数据的机制一样<br>2. 好问题，内存不够的时候会淘汰的（还是跟数据的机制一样）<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543821439,"ip_address":"","comment_id":45880,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543810082","product_id":100020801,"comment_content":"之前第二章说redo-log是优先记录的，想问下<br>1、charge-buffer是在什么时候持久化写入系统表空间的？<br>2、既然redo-log也记录了charge-buffer的操作，为什么还需要写入系统表空间？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431251,"discussion_content":"1. 跟表数据的机制一样\n2. 好问题，内存不够的时候会淘汰的（还是跟数据的机制一样）\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543821439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45875,"user_name":"肖鹏","can_delete":false,"product_type":"c1","uid":1302602,"ip_address":"","ucode":"BE1B8BD7053B9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/4a/c0a3cb3f.jpg","comment_is_top":false,"comment_ctime":1543808514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543808514","product_id":100020801,"comment_content":"数据的持久性是由redo保证的，断电后的恢复是由redo和扫最近的binlog完成的。和change buffer无关。另外唯一索引会是锁变得非常复杂吧，会有gap lock？","like_count":0},{"had_liked":false,"id":45869,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1543807207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543807207","product_id":100020801,"comment_content":"首先感谢一下老师，这门课很有收获。老师很勤奋，留言回复特别多。<br><br>试着回答一下思考题：<br><br>结论是：change buffer 在断电后不会丢失。原因老师在文中已经写了。写change buffer的动作也被写入了redo log，系统重新启动的时候执行redo log会恢复断电前的change buffer<br>","like_count":0},{"had_liked":false,"id":45850,"user_name":"张立春","can_delete":false,"product_type":"c1","uid":1124382,"ip_address":"","ucode":"D8B4523B95D839","user_header":"https://static001.geekbang.org/account/avatar/00/11/28/1e/76e19bd3.jpg","comment_is_top":false,"comment_ctime":1543803365,"is_pvip":false,"replies":[{"id":"16379","content":"你说得很对，如果是有可观测效果的，我会尽量放例子（复现步骤）哈<br><br>比如怎么复现锁等待啊、优化器啊这些的，<br><br>今天这会话题比较特殊，也是我确实没有有意设计，后面会尽量给出复现步骤。（类似08篇）<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543806958,"ip_address":"","comment_id":45850,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543803365","product_id":100020801,"comment_content":"老师好！mysql数据库是码农无法绕过的知识，第一时间看到有这个课就定下了，看到有两万多人订购，就知道有多火爆了。已经跟学几节课，总的感觉方向和内容都挺好，但我自己感觉在细节和完备性上可以再深入打磨一下，也许和我自身水平有关。有些知识如果觉得太小儿科，可以只给出参考链接，但最好不要缺失。<br>比如本次课，讲解一般索引和普通索引，列举查询和更新两种操作的差异。在查询上，我的疑问是table schema是什么？建表建库参数是什么？table只包括普通索引或唯一索引或两者都有的情况下是否有区别？是否只是根据查询所依赖的条件字段？<br>关于更新，有增删改三种操作，所举例子只有增加，其它两种有什么差异？如果两种索引都存在表中是否不同？<br>我建议每次课都把上下文环境写清楚：mysql版本&#47;建表建库命令？连接参数？数据库配置参数？目的是大家能够根据这个自己动手重现和实际感受所讲的知识，我建议你建立相应的docker和github，把相关环境、脚本和代码放上去，大家也可以自由修改和发表想法。talk is cheap，show me code。看懂-理解-会用-解决问题，每一步都有很大差异，我希望学了这门课可以真正用在实际工作中去解决问题。<br>我相信这门课完结之时，大家受益匪浅，但可能作者在认知&#47;知识上的收益却是最大的。因为肩负两万多人的信任和期望，这份压力和动力可能是绝无仅有的，对个人的锻炼也是无法用言语表达的。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431240,"discussion_content":"你说得很对，如果是有可观测效果的，我会尽量放例子（复现步骤）哈\n\n比如怎么复现锁等待啊、优化器啊这些的，\n\n今天这会话题比较特殊，也是我确实没有有意设计，后面会尽量给出复现步骤。（类似08篇）\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543806958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45843,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1543802724,"is_pvip":false,"replies":[{"id":"16383","content":"看一下02篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543807676,"ip_address":"","comment_id":45843,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543802724","product_id":100020801,"comment_content":"老师，内存中的数据不是一断电就都没了吗？数据库的更新插入都是先存在内存中，它怎么避免这个问题的呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431236,"discussion_content":"看一下02篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543807676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45841,"user_name":"echo＿陈","can_delete":false,"product_type":"c1","uid":1080794,"ip_address":"","ucode":"EFAEADA8A05906","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/da/780f149e.jpg","comment_is_top":false,"comment_ctime":1543802536,"is_pvip":false,"replies":[{"id":"16382","content":"嗯嗯，这个讨论我补充到文末了😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543807638,"ip_address":"","comment_id":45841,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543802536","product_id":100020801,"comment_content":"老师你好，据我所知，业务代码没有办法保证数据库记录的唯一性：<br>比如，先select，没有就insert……经常出现并发造成的insert了2条……重复数据。因此我们的解决方案就是：给数据库需要唯一的字段添加唯一索引。通过key冲突异常保证业务方幂等","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431234,"discussion_content":"嗯嗯，这个讨论我补充到文末了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543807638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45839,"user_name":"willmeng","can_delete":false,"product_type":"c1","uid":1157065,"ip_address":"","ucode":"37367A728ABF88","user_header":"https://static001.geekbang.org/account/avatar/00/11/a7/c9/67bd5906.jpg","comment_is_top":false,"comment_ctime":1543802353,"is_pvip":false,"replies":[{"id":"16385","content":"嗯，你们这已经完全没打算考虑性能，就是用“约束”功能了😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543808398,"ip_address":"","comment_id":45839,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543802353","product_id":100020801,"comment_content":"我厂对于唯一索引有个常用的应用场景。会把大量数据load到数据库，使用replace into，这个时候唯一索引就是比较好的选择了，因为有可能会重做数据。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431232,"discussion_content":"嗯，你们这已经完全没打算考虑性能，就是用“约束”功能了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543808398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45836,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1543802046,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543802046","product_id":100020801,"comment_content":"机器掉电的话，不会导致change buffer丢失。change buffer和普通的数据页是一样的，也会持久化存储到磁盘上，并且同样采用先写redo的方式保证持久性。当然，如果设置了innodb_flush_log_at_trx_commit为非1值，和写普通数据页一样，是可能丢失数据的。","like_count":0},{"had_liked":false,"id":45831,"user_name":"大神仙","can_delete":false,"product_type":"c1","uid":1151944,"ip_address":"","ucode":"8179D170A97936","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/c8/9eb6c644.jpg","comment_is_top":false,"comment_ctime":1543801592,"is_pvip":false,"replies":[{"id":"16388","content":"后来跟业务确认，业务已经做了保证，他又改回普通索引了😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543809501,"ip_address":"","comment_id":45831,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543801592","product_id":100020801,"comment_content":"老师您好，文章内容里您dba同事将普通索引改为唯一索引导致内存命中率下降（业务需求导致）; 有什么好的办法优化么","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431227,"discussion_content":"后来跟业务确认，业务已经做了保证，他又改回普通索引了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543809501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45824,"user_name":"董航","can_delete":false,"product_type":"c1","uid":1231787,"ip_address":"","ucode":"9CA208FD26F849","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/ab/1aac53bf.jpg","comment_is_top":false,"comment_ctime":1543800749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543800749","product_id":100020801,"comment_content":"哈哈，终于明白了第二章我问的问题了，原来是change buffer","like_count":0},{"had_liked":false,"id":45804,"user_name":"疾风狂草","can_delete":false,"product_type":"c1","uid":1283489,"ip_address":"","ucode":"05F899725048BC","user_header":"","comment_is_top":false,"comment_ctime":1543798607,"is_pvip":false,"replies":[{"id":"16352","content":"好问题，是的。<br><br>对于WAL 机制来说，change buffer就是数据的一种，在commit的时候处理机制是和数据页一样的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543801253,"ip_address":"","comment_id":45804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543798607","product_id":100020801,"comment_content":"先回答问题，从数据完整性来看，磁盘中是有原始数据的，redolog中又有操作记录，并且有提交状态，可以决定断电前的事务是要提交还是回滚。所以我认为change buffer中的数据完全可以恢复并purge。<br>再问个问题：commit对change buffer的影响是什么？是仅仅改变redolog记录的提交状态吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431215,"discussion_content":"好问题，是的。\n\n对于WAL 机制来说，change buffer就是数据的一种，在commit的时候处理机制是和数据页一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543801253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45790,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1305601,"ip_address":"","ucode":"D49723FEA66731","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/01/978d54af.jpg","comment_is_top":false,"comment_ctime":1543796901,"is_pvip":false,"replies":[{"id":"16349","content":"只看懂了你最后一个问号…<br><br>是的，这时候内存算脏页，跟磁盘内容不一致。在要被淘汰出去之前，需要写回到磁盘中。<br><br><br>其它问题没看明白，你重写下吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543800269,"ip_address":"","comment_id":45790,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543796901","product_id":100020801,"comment_content":"那redo log 还有什么用呢？在文中的情况，如果redo log看到更新被加入buffer是不是也就认为那一行已经被成功写入了呢？还是会催buffer让他把内存中的修改写入磁盘呢？那如果没有加入buffer 直接修改了内存的话，如果那部分内存被换掉的时候会直接更新磁盘还是会之后通过redo log进行重新写入磁盘呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431211,"discussion_content":"只看懂了你最后一个问号…\n\n是的，这时候内存算脏页，跟磁盘内容不一致。在要被淘汰出去之前，需要写回到磁盘中。\n\n\n其它问题没看明白，你重写下吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543800269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}