{"id":179679,"title":"27 | 理论一：什么情况下要重构？到底重构什么？又该如何重构？","content":"<p>“重构”这个词对于大部分工程师来说都不陌生。不过，据我了解，大部分人都只是“听得多做得少”，真正进行过代码重构的人不多，而把持续重构作为开发的一部分的人，就更是少之又少了。</p><p>一方面，重构代码对一个工程师能力的要求，要比单纯写代码高得多。重构需要你能洞察出代码存在的坏味道或者设计上的不足，并且能合理、熟练地利用设计思想、原则、模式、编程规范等理论知识解决这些问题。</p><p>另一方面，很多工程师对为什么要重构、到底重构什么、什么时候重构、又该如何重构等相关问题理解不深，对重构没有系统性、全局性的认识，面对一堆烂代码，没有重构技巧的指导，只能想到哪改到哪，并不能全面地改善代码质量。</p><p>为了让你对重构有个清晰的认识，对于这部分知识的讲解，我安排了六节课的内容，主要包含以下几个方面：</p><ul>\n<li>对重构概括性的介绍，包括重构的目的（why）、对象（what）、时机（when）、方法（how）；</li>\n<li>保证重构不出错的手段，这里我会重点讲解单元测试和代码的可测试性；</li>\n<li>不同规模的重构，重点讲解大规模高层次重构（比如系统、模块、代码结构、类与类之间的交互等的重构）和小规模低层次重构（类、函数、变量等的重构）。</li>\n</ul><p>话不多说，现在就让我们来学习第一部分内容：重构的目的、对象、时机和方法。</p><!-- [[[read_end]]] --><h2>重构的目的：为什么要重构（why）？</h2><p>虽然对于你来说，重构这个词可能不需要过多解释，但我们还是简单来看一下，大师是怎么描述它的。软件设计大师Martin Fowler 是这样定义重构的：“重构是一种对软件内部结构的改善，目的是在不改变软件的可见行为的情况下，使其更易理解，修改成本更低。”</p><p>实际上，当讲到重构的时候，很多书籍都会引用这个定义。这个定义中有一个值得强调的点：“重构不改变外部的可见行为”。我们可以把重构理解为，在保持功能不变的前提下，利用设计思想、原则、模式、编程规范等理论来优化代码，修改设计上的不足，提高代码质量。</p><p><strong>简单了解重构的定义之后，我们重点来看一下，为什么要进行代码重构？</strong></p><p>首先，重构是时刻保证代码质量的一个极其有效的手段，不至于让代码腐化到无可救药的地步。项目在演进，代码不停地在堆砌。如果没有人为代码的质量负责任，代码总是会往越来越混乱的方向演进。当混乱到一定程度之后，量变引起质变，项目的维护成本已经高过重新开发一套新代码的成本，想要再去重构，已经没有人能做到了。</p><p>其次，优秀的代码或架构不是一开始就能完全设计好的，就像优秀的公司和产品也都是迭代出来的。我们无法100%遇见未来的需求，也没有足够的精力、时间、资源为遥远的未来买单，所以，随着系统的演进，重构代码也是不可避免的。</p><p>最后，重构是避免过度设计的有效手段。在我们维护代码的过程中，真正遇到问题的时候，再对代码进行重构，能有效避免前期投入太多时间做过度的设计，做到有的放矢。</p><p><strong>除此之外，重构对一个工程师本身技术的成长也有重要的意义。</strong></p><p>从前面我给出的重构的定义来看，重构实际上是对我们学习的经典设计思想、设计原则、设计模式、编程规范的一种应用。重构实际上就是将这些理论知识，应用到实践的一个很好的场景，能够锻炼我们熟练使用这些理论知识的能力。除此之外，平时堆砌业务逻辑，你可能总觉得没啥成长，而将一个比较烂的代码重构成一个比较好的代码，会让你很有成就感。</p><p>除此之外，重构能力也是衡量一个工程师代码能力的有效手段。所谓“初级工程师在维护代码，高级工程师在设计代码，资深工程师在重构代码”，这句话的意思是说，初级工程师在已有代码框架下修改bug、修改添加功能代码；高级工程师从零开始设计代码结构、搭建代码框架；而资深工程师为代码质量负责，需要发觉代码存在的问题，重构代码，时刻保证代码质量处于一个可控的状态（当然这里的初级、高级、资深只是一个相对概念，并不是一个确定的职级）。</p><h2>重构的对象：到底重构什么（what）？</h2><p>根据重构的规模，我们可以笼统地分为大规模高层次重构（以下简称为“大型重构”）和小规模低层次的重构（以下简称为“小型重构”）。</p><p>大型重构指的是对顶层代码设计的重构，包括：系统、模块、代码结构、类与类之间的关系等的重构，重构的手段有：分层、模块化、解耦、抽象可复用组件等等。这类重构的工具就是我们学习过的那些设计思想、原则和模式。这类重构涉及的代码改动会比较多，影响面会比较大，所以难度也较大，耗时会比较长，引入bug的风险也会相对比较大。</p><p>小型重构指的是对代码细节的重构，主要是针对类、函数、变量等代码级别的重构，比如规范命名、规范注释、消除超大类或函数、提取重复代码等等。小型重构更多的是利用我们能后面要讲到的编码规范。这类重构要修改的地方比较集中，比较简单，可操作性较强，耗时会比较短，引入bug的风险相对来说也会比较小。你只需要熟练掌握各种编码规范，就可以做到得心应手。</p><p>关于具体如何来做大型重构和小型重构，我会在后面的课程中详细讲解。</p><h2>重构的时机：什么时候重构（when）？</h2><p>搞清楚了为什么重构，到底重构什么，我们再来看一下，什么时候重构？是代码烂到一定程度之后才去重构吗？当然不是。因为当代码真的烂到出现“开发效率低，招了很多人，天天加班，出活却不多，线上bug频发，领导发飙，中层束手无策，工程师抱怨不断，查找bug困难”的时候，基本上重构也无法解决问题了。</p><p>我个人比较反对，平时不注重代码质量，堆砌烂代码，实在维护不了了就大刀阔斧地重构、甚至重写的行为。有时候项目代码太多了，重构很难做得彻底，最后又搞出来一个“四不像的怪物”，这就更麻烦了！所以，寄希望于在代码烂到一定程度之后，集中重构解决所有问题是不现实的，我们必须探索一条<strong>可持续、可演进</strong>的方式。</p><p>所以，我特别提倡的重构策略是持续重构。这也是我在工作中特别喜欢干的事情。平时没有事情的时候，你可以看看项目中有哪些写得不够好的、可以优化的代码，主动去重构一下。或者，在修改、添加某个功能代码的时候，你也可以顺手把不符合编码规范、不好的设计重构一下。总之，就像把单元测试、Code Review作为开发的一部分，我们如果能把持续重构也作为开发的一部分，成为一种开发习惯，对项目、对自己都会很有好处。</p><p>尽管我们说重构能力很重要，但持续重构意识更重要。我们要正确地看待代码质量和重构这件事情。技术在更新、需求在变化、人员在流动，代码质量总会在下降，代码总会存在不完美，重构就会持续在进行。时刻具有持续重构意识，才能避免开发初期就过度设计，避免代码维护的过程中质量的下降。而那些看到别人代码有点瑕疵就一顿乱骂，或者花尽心思去构思一个完美设计的人，往往都是因为没有树立正确的代码质量观，没有持续重构意识。</p><h2>重构的方法：又该如何重构（how）？</h2><p>前面我们讲到，按照重构的规模，重构可以笼统地分为大型重构和小型重构。对于这两种不同规模的重构，我们要区别对待。</p><p>对于大型重构来说，因为涉及的模块、代码会比较多，如果项目代码质量又比较差，耦合比较严重，往往会牵一发而动全身，本来觉得一天就能完成的重构，你会发现越改越多、越改越乱，没一两个礼拜都搞不定。而新的业务开发又与重构相冲突，最后只能半途而废，revert掉所有的改动，很失落地又去堆砌烂代码了。</p><p>在进行大型重构的时候，我们要提前做好完善的重构计划，有条不紊地分阶段来进行。每个阶段完成一小部分代码的重构，然后提交、测试、运行，发现没有问题之后，再继续进行下一阶段的重构，保证代码仓库中的代码一直处于可运行、逻辑正确的状态。每个阶段，我们都要控制好重构影响到的代码范围，考虑好如何兼容老的代码逻辑，必要的时候还需要写一些兼容过渡代码。只有这样，我们才能让每一阶段的重构都不至于耗时太长（最好一天就能完成），不至于与新的功能开发相冲突。</p><p>大规模高层次的重构一定是有组织、有计划，并且非常谨慎的，需要有经验、熟悉业务的资深同事来主导。而小规模低层次的重构，因为影响范围小，改动耗时短，所以，只要你愿意并且有时间，随时都可以去做。实际上，除了人工去发现低层次的质量问题，我们还可以借助很多成熟的静态代码分析工具（比如CheckStyle、FindBugs、PMD），来自动发现代码中的问题，然后针对性地进行重构优化。</p><p>对于重构这件事情，资深的工程师、项目leader要负起责任来，没事就重构一下代码，时刻保证代码质量处在一个良好的状态。否则，一旦出现“破窗效应”，一个人往里堆了一些烂代码，之后就会有更多的人往里堆更烂的代码。毕竟往项目里堆砌烂代码的成本太低了。不过，保持代码质量最好的方法还是打造一种好的技术氛围，以此来驱动大家主动去关注代码质量，持续重构代码。</p><h2>重点回顾</h2><p>今天的讲解比较偏理论、偏思想教育，主要还是让你对重构有个正确的、全局性的认知，建立持续重构意识。我觉得，这可能比教会你一些重构技巧更重要，因为很多技术问题本身就不是单纯靠技术来解决的，更重要的是要有这种认知和意识。</p><p>好了，下面我们还是来总结一下。对于今天的内容，你需要重点理解并且掌握如下知识点。</p><p><strong>1.重构的目的：为什么重构（why）？</strong></p><p>对于项目来言，重构可以保持代码质量持续处于一个可控状态，不至于腐化到无可救药的地步。对于个人而言，重构非常锻炼一个人的代码能力，并且是一件非常有成就感的事情。它是我们学习的经典设计思想、原则、模式、编程规范等理论知识的练兵场。</p><p><strong>2.重构的对象：重构什么（what）？</strong></p><p>按照重构的规模，我们可以将重构大致分为大规模高层次的重构和小规模低层次的重构。大规模高层次重构包括对代码分层、模块化、解耦、梳理类之间的交互关系、抽象复用组件等等。这部分工作利用的更多的是比较抽象、比较顶层的设计思想、原则、模式。小规模低层次的重构包括规范命名、注释、修正函数参数过多、消除超大类、提取重复代码等等编程细节问题，主要是针对类、函数级别的重构。小规模低层次的重构更多的是利用编码规范这一理论知识。</p><p><strong>3.重构的时机：什么时候重构（when）？</strong></p><p>我反复强调，我们一定要建立持续重构意识，把重构作为开发必不可少的部分，融入到日常开发中，而不是等到代码出现很大问题的时候，再大刀阔斧地重构。</p><p><strong>4.重构的方法：如何重构（how）？</strong></p><p>大规模高层次的重构难度比较大，需要组织、有计划地进行，分阶段地小步快跑，时刻让代码处于一个可运行的状态。而小规模低层次的重构，因为影响范围小，改动耗时短，所以，只要你愿意并且有时间，随时随地都可以去做。</p><h2>课堂讨论</h2><p>今天课堂讨论的话题是：关于代码重构，你有什么心得体会、经验教训？或者，你也可以说说，在重构过往项目的时候，你遇到过哪些问题？</p><p>欢迎在留言区写下你的答案，和同学一起交流和分享。如果有收获，也欢迎你把这篇文章分享给你的朋友。</p>","comments":[{"had_liked":false,"id":168046,"user_name":"brianhuuu","can_delete":false,"product_type":"c1","uid":1010457,"ip_address":"","ucode":"AE59FC647F7726","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/19/dc6f2063.jpg","comment_is_top":false,"comment_ctime":1578003851,"is_pvip":false,"replies":[{"id":"65261","content":"😂","user_name":"作者回复","comment_id":168046,"uid":"1190123","ip_address":"","utype":1,"ctime":1578009786,"user_name_real":"王争"}],"discussion_count":36,"race_medal":0,"score":"1745334726027","product_id":100039001,"comment_content":"重构最难的还是领导不支持","like_count":407},{"had_liked":false,"id":168081,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1578011936,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"1049550032160","product_id":100039001,"comment_content":"前段时间刚重构了一个功能模块。该模块可以说是祖传代码。里面堆砌着各种判断条件，就是所谓的箭头型代码。我接手这个功能重构的<br>1.把代码读一遍和跑一遍，理解里面的需求。尽量画一个流程图。<br>2.建立防护网。将需求拆分之后，针对每个拆分的业务点写单元测试。<br>4.开始重构，解耦逻辑，设计方法的时候尽量让职业单一，类与类之间尽量符合迪米特原则，有依赖关系的类尽量只依赖类的特定方法。我觉得比较基础也是比较重要一点。不要有重复代码。命名要规范，类的各个职业要清晰。重构过程中，其实也要时不时的识别代码的坏味道。尽然是重构，那么肯定要比不重构之前肯定要更好。<br>5.重构完成之后，通过防护网的测试。<br><br>当天重构代码上线之后，基本上没有问题。运行了几天之后有一小段逻辑隐藏的比较深没有写这个逻辑测试，后面补上了一直都没有出过问题了。还是比较稳定的。<br>我这里只是做了中小规模的重构，后面跟着小争哥继续系统的学习大规模重构，以及重构的技巧和思想。","like_count":245,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588193,"discussion_content":"看了这么多专栏，越发地感觉单元测试很重要！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1663590268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386118,"discussion_content":"重构很有章法，值得学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627432858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1817165,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","nickname":"Geek_652490","note":"","ucode":"0612EE1FD02AF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336179,"discussion_content":"防护网 怎么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608521652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1035081,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","nickname":"刘大明","note":"","ucode":"83C063FBD9BF2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1817165,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","nickname":"Geek_652490","note":"","ucode":"0612EE1FD02AF1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336484,"discussion_content":"意思就是先针对功能点写好完善的测试类","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1608606723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336179,"ip_address":""},"score":336484,"extra":""}]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322104,"discussion_content":"点赞这么多，居然没有评论，哈哈哈哈。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604675593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168189,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1088687,"ip_address":"","ucode":"17AF8578D6F41F","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/af/05eeb5e9.jpg","comment_is_top":false,"comment_ctime":1578030777,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"370945218233","product_id":100039001,"comment_content":"在农村长大的孩子应该多少见过盖房子的情形，一般师傅会用砖挂一根线在不断的盖房子的过程中观察整个房子是否出现歪斜的情况，这个过程是持续的，要时刻保证一砖一瓦的建上去的房子是笔直的。写代码就是如此，团队应该有这样的&quot;一根线&quot;来保证产品的正常开发，不至于整个项目出现问题，而重构就像是发现了房子有点歪需要重新进行改正，高手是发现绳子偏移的时候就开始纠错了，大部分团队只能等到明显发现房子歪了才开始修正。","like_count":86,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473650,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573116065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2427727,"avatar":"https://static001.geekbang.org/account/avatar/00/25/0b/4f/a7817ec5.jpg","nickname":"搞机Tesla","note":"","ucode":"4BE1658D1B96DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345579,"discussion_content":"你是我知道的数学天才里唯一一个自称数学天才的","likes_number":35,"is_delete":false,"is_hidden":false,"ctime":1611746661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2208646,"avatar":"https://static001.geekbang.org/account/avatar/00/21/b3/86/636ab13a.jpg","nickname":"offer := Offer{废物}","note":"","ucode":"6EDA30A1F0A650","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308741,"discussion_content":"这里是贵乎么","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1601048902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2071327,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9b/1f/9f3379d3.jpg","nickname":"Geek_7f21d2","note":"","ucode":"12204FDAD951BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292322,"discussion_content":"已经把说的一半完成了 剩下一半做的还差一点","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1595174989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074734,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","nickname":"骑着🚀看银河","note":"","ucode":"8706A99A89F0CE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215418,"discussion_content":"最喜欢吹牛逼不上税了，no bibi shou your code","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1585321830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2056672,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/61/e0/8ce6db9e.jpg","nickname":"float","note":"","ucode":"57BEE9D08C3792","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074734,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","nickname":"骑着🚀看银河","note":"","ucode":"8706A99A89F0CE","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":372324,"discussion_content":"show?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620287228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":215418,"ip_address":""},"score":372324,"extra":""},{"author":{"id":1074734,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","nickname":"骑着🚀看银河","note":"","ucode":"8706A99A89F0CE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":2056672,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/61/e0/8ce6db9e.jpg","nickname":"float","note":"","ucode":"57BEE9D08C3792","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544144,"discussion_content":"左拐右拐不送","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641408809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372324,"ip_address":""},"score":544144,"extra":""}]},{"author":{"id":2250186,"avatar":"https://static001.geekbang.org/account/avatar/00/22/55/ca/9186172f.jpg","nickname":"船停港湾","note":"","ucode":"B269CF0CAFE0DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318181,"discussion_content":"感受不到他对计算机的热爱","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1603673593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147385,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/f9/3508b638.jpg","nickname":"Andy_Ron","note":"","ucode":"A6963B60B326AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160585,"discussion_content":"吓得我赶快写一段代码压压惊！","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1580817776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1735260,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7a/5c/a50a66f9.jpg","nickname":"阿锋","note":"","ucode":"5D6C1F6339F281","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134926,"discussion_content":"这么优秀的人都在努力哈，我这个彩笔有啥资格不努力呢","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1579055491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218162,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/72/a517bf25.jpg","nickname":"方舟勇士","note":"","ucode":"53D3D844B08B92","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264684,"discussion_content":"这是来砸场子的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589343889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500472,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e5/38/d271950c.jpg","nickname":"DDD","note":"","ucode":"26411E3487BBB5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398105,"discussion_content":"我打算明天发收购邀约，准备好了吗？😄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632736282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1459980,"avatar":"https://static001.geekbang.org/account/avatar/00/16/47/0c/f2f0245e.jpg","nickname":"🐶","note":"","ucode":"D9E46DDB64BA77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298138,"discussion_content":"年少轻狂呀","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597202181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3201671,"avatar":"","nickname":"Geek_9c46ab","note":"","ucode":"7ED10C30189C58","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590846,"discussion_content":"怎么举报**","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666106925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1457684,"avatar":"https://static001.geekbang.org/account/avatar/00/16/3e/14/6883d313.jpg","nickname":"贰零壹玖","note":"","ucode":"6AD46BEE2F6E03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588857,"discussion_content":"3年了，后续呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664179402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586943,"discussion_content":"现在怎么样了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662623107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2873593,"avatar":"","nickname":"xiaxiaxiaxia","note":"","ucode":"4B20C71983D227","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543596,"discussion_content":"？？？那我走？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641218387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067981,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/cd/185e5378.jpg","nickname":"泊浮目","note":"","ucode":"182A7CC2F6BDAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387290,"discussion_content":"？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628089220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2432026,"avatar":"","nickname":"Geek_5a9dc0","note":"","ucode":"81B464DE3EAC26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373628,"discussion_content":"牛逼了，也不知道现在这位大佬怎么样了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620806130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2472590,"avatar":"https://static001.geekbang.org/account/avatar/00/25/ba/8e/eefde826.jpg","nickname":"Geek_5ccbeb","note":"","ucode":"4A217E7FB02D88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356142,"discussion_content":"加油哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615539200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2463502,"avatar":"https://static001.geekbang.org/account/avatar/00/25/97/0e/d79c9a2a.jpg","nickname":"风清扬","note":"","ucode":"0C252B0910677F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352489,"discussion_content":"这是来砸场子的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614752468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1487135,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b1/1f/c2793540.jpg","nickname":"Thinking","note":"","ucode":"DAA051F237EF48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329438,"discussion_content":"然后接班老罗收购苹果？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606384440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1055722,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1b/ea/4f5661c6.jpg","nickname":"牛头人","note":"","ucode":"DABDEF4F32A812","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1487135,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b1/1f/c2793540.jpg","nickname":"Thinking","note":"","ucode":"DAA051F237EF48","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330944,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606737643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329438,"ip_address":""},"score":330944,"extra":""}]},{"author":{"id":1055092,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjUDIRQ0gRiciax3Wo78c5rVjuWDiaw4ibcCiby8xiaMXJh5ibjU5242vfCGOK4ehibe1IKyxex2A4IX4XSA/132","nickname":"追风者","note":"","ucode":"879BC372A6B605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309359,"discussion_content":"你是过来砸场子的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601267410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/57/a9/9abbe7a4.jpg","nickname":"神三元","note":"","ucode":"0FB2E7C0683599","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136620,"discussion_content":"秀儿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579152188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623066,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c4/1a/4f907a06.jpg","nickname":"不在别处","note":"","ucode":"DFFD81A7F4034D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":135148,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579072990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1222578,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a7/b2/274a4192.jpg","nickname":"漂泊的小飘","note":"","ucode":"25C0CA4887D8AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110613,"discussion_content":"大佬大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577747821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1717549,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/35/2d/a2bde67e.jpg","nickname":"SapereAude","note":"","ucode":"C5D61C535B7B10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81861,"discussion_content":"上天！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576290035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691500,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cf/6c/87faa554.jpg","nickname":"MoeRookie","note":"","ucode":"E860D73EE91F00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51405,"discussion_content":"简直就是大师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573866212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170488,"user_name":"Cest La Vie🤩","can_delete":false,"product_type":"c1","uid":1177849,"ip_address":"","ucode":"EDABE70BB796AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/f9/5d983b88.jpg","comment_is_top":false,"comment_ctime":1578620780,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"362355873644","product_id":100039001,"comment_content":"花时间，花力气去重构，最后万一出了故障，还要背锅，这是最难的","like_count":84,"discussions":[{"author":{"id":1287227,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a4/3b/150c9d64.jpg","nickname":"烟雨任平生","note":"","ucode":"DD85B01266978F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143103,"discussion_content":"【握爪】","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579490405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169383,"user_name":"皮特尔","can_delete":false,"product_type":"c1","uid":1017161,"ip_address":"","ucode":"313862C91DD325","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","comment_is_top":false,"comment_ctime":1578324481,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"250686427649","product_id":100039001,"comment_content":"分享一个我们团队的案例：某个产品线经过重构，崩溃率降低了 50%。<br>其实那一次我们团队遇到的最大问题是：相关负责人 “不敢” 动前任遗留的烂代码。后来无奈 “强迫” 那个同事去做，效果立竿见影，之后很快就把 “重构” 推广到了其他项目。再之后整个团队开始重视代码质量，有坏味道随时重构，整个团队慢慢进入了一个 “正循环”。","like_count":58,"discussions":[{"author":{"id":1239880,"avatar":"https://static001.geekbang.org/account/avatar/00/12/eb/48/3747b50b.jpg","nickname":"高大强","note":"","ucode":"8018DD187999BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":99214,"discussion_content":"干就完了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577197396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1239880,"avatar":"https://static001.geekbang.org/account/avatar/00/12/eb/48/3747b50b.jpg","nickname":"高大强","note":"","ucode":"8018DD187999BC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":99632,"discussion_content":"干","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577201648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":99214,"ip_address":""},"score":99632,"extra":""}]}]},{"had_liked":false,"id":168062,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1578009683,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"186261603411","product_id":100039001,"comment_content":"重构自然是要用的我们牛逼的设计模式和数据结构了。。。啊-_-||开个玩笑哈。<br><br>重构这玩意嘛，其实在第一版提上去的时候就应该要重构了，也就是我们常说的，边写边重构。<br><br>一个方法写的时候发现分支判断太多，工厂模式就要登场了。<br><br>如果大部分代码都比较重复，这个时候就需要往底层的抽象，甚至用上策略模式。<br><br>需要做一个非功能性需求，每一个接口调用都要记录的东西，我们为了避免业务侵入性，就要考虑代理模式重构之前的业务侵入性强的代码，将功能与非功能分离。<br><br>说到底，重构不要等，而是马上动手，只有行动了，才不会害怕。第一版稍微辛苦一些，以后就不会那么恶心了，功在当代，利在千秋。","like_count":43,"discussions":[{"author":{"id":1018444,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/4c/d976b42c.jpg","nickname":"冯选刚","note":"","ucode":"A186F31A730F04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44160,"discussion_content":"加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572936008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623626,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","nickname":"Heiky","note":"","ucode":"03AA79E1BC4AE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43414,"discussion_content":"那就一起吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572873057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101556,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/f4/5bfc786a.jpg","nickname":"Vilochen.","note":"","ucode":"19D9BF8534B480","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43330,"discussion_content":"打卡小程序是什么哦？请教下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572868621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168747,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1578149688,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"147607037752","product_id":100039001,"comment_content":"重构的经验，1.工作中鼓励持续重构，但不赞成为了重构而重构.2.重构一定要在有比较完善的测试用例覆盖和回归用例库的情况下进行(可测试性)，否则会相当危险。3. 重构最好有AB工具灰度比对，逐步切流。4. 重构最好有资深的成员共同CR，结合大家的意见，可能本次的重构也会引入一些怪味道。<br>重构的教训，出现问题的场景往往在于一个细小的点，能注意到的往往没有问题。 重构一旦出问题会面临比较大的精神压力和信心挑战，会部分挫败重构者的积极性，这时候需要TL的鼓励和支持，避免让员工感受到做多错多。","like_count":35,"discussions":[{"author":{"id":1349454,"avatar":"https://static001.geekbang.org/account/avatar/00/14/97/4e/8f2c006d.jpg","nickname":"ZZ","note":"","ucode":"E467537D2FD732","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":80864,"discussion_content":"编程5的门外汉深有同感","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576200717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2715102,"avatar":"","nickname":"Geek_19aca2","note":"","ucode":"E4EC919596F850","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385992,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627374131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130132,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3e/94/c6460883.jpg","nickname":"join","note":"","ucode":"C097D89F7BA3EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44802,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572966960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168325,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1578047313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"134722033489","product_id":100039001,"comment_content":"庆幸自己有个好领导，日常对我的代码 review 得非常严格，平时使用 source tree ，git rebase 可以清晰地看到每一次提交，这样代码 review 起来就没什么压力了。<br><br>另一方面，最好在项目的开始阶段和大家分享你的设计思路，否则等项目要准备发布上线时，拉上一堆人来 review 代码时，其实效果几乎没啥的，大家只能看看命名风格，像什么高内聚低耦合，设计模式，封装抽象等即使有问题，也会因为项目时间紧而将就放行。","like_count":31},{"had_liked":false,"id":168083,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1578012029,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"100362259837","product_id":100039001,"comment_content":"代码中的坏味道，好比人的头疼脑热。“小病”不管的话，迟早会发展成大病，需要动大手术，甚至病入膏肓。<br>实际中的一些体会：<br>一、在完成一个新需求时，在时间允许的情况下，会经常改进代码，使代码更优雅。<br>二、“重构不改变外部的可见行为“，引入自动化测试非常重要，国内有些团队可能做的不好。因为改动代码可能引入bug，如果没有自动化测试，测起来就会非常费劲，改动的结果不确定。如果测试不方便，谁会愿意修改之前work的代码呢？<br>三、持续集成、自动化测试、持续重构都是很好的工程实践。即使工作的项目中暂时没有使用，也应该有所了解。","like_count":23,"discussions":[{"author":{"id":1337016,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/b8/ece79234.jpg","nickname":"王智","note":"","ucode":"37D2AD591C1AEC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535046,"discussion_content":"同自考，同想出国。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638341054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168181,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1578028912,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"74592472944","product_id":100039001,"comment_content":"1.座右铭：你写的每一行代码，都是你的名片。<br><br>2.重构要考虑时机和力度。一般是增加需求时，对关联的逻辑代码做的重构。这时需要考虑自己当前的开发期限去决定重构的力度。在保证“营地比自己来时干净”的前提下，量时重构。（逻辑级别小重构一般就如栏主说的改变量名，方法名，以及不破坏现有逻辑做实现代码实现重构，移动变量，内联提炼啥的）（逻辑级别的大重构就要动实现逻辑，甚至需求设计了。往往需要再三与产品沟通确认，并充分测试，甚至在实现上留有开关，一旦现网有问题，及时切换）（架构级别的大重构，包括调整分层模型，重新划分各个微服务持有的聚合，基础技术栈升级，比如spring到springboot，或则jdk。这些影响面都比较大，很难测试全，所以一般是并行重构，然后走现网镜像流量持续观察，大面积业务场景没问题后再整个切换）<br><br>3.持续重构锻炼架构思维，受益匪浅。重构不难，难的是在代码上讲究的意愿。","like_count":17,"discussions":[{"author":{"id":2088626,"avatar":"","nickname":"志江","note":"","ucode":"8A07D53769B3C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381764,"discussion_content":"确实锻炼架构思维, 每一个小的东西都会去思考如何设计, 里面都蕴含着架构的知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625205283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168144,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1578019083,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"66002528523","product_id":100039001,"comment_content":"设计模式_27<br><br>没有做过大重构，小重构倒是经常做，我发现我做需求常常比别人慢，原因是大概率我改的地方比需求涉及的多一些，可以算是小重构吧。<br><br>很同意王争老师说的，大部分人都没有进行过重构，而大部分的代码又是由这大部分的人写的，所以，市面上的大部分代码可能都。。。<br><br>我在创业公司呆过，见识过技术总监申请重构时被挑战的体无完肤，不欢而散，代码一直烂下去，最终谁也改不动，大量的客户流失，业务严重受损。当然，我在这个过程中，毫无作为。。。","like_count":15,"discussions":[{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340608,"discussion_content":"牛逼了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610077180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307545,"discussion_content":"你那个创业公司结局如何？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600681407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1112747,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","nickname":"李小四","note":"","ucode":"2A766BE16B276B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307579,"discussion_content":"还活着","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600689833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307545,"ip_address":""},"score":307579,"extra":""},{"author":{"id":2088626,"avatar":"","nickname":"志江","note":"","ucode":"8A07D53769B3C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1112747,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","nickname":"李小四","note":"","ucode":"2A766BE16B276B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381766,"discussion_content":"竟然还活着, 早晚的事儿感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625205343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307579,"ip_address":""},"score":381766,"extra":""}]}]},{"had_liked":false,"id":200209,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1585558082,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53125165634","product_id":100039001,"comment_content":"重构了不出毛病没你功劳, 出问题就是你的责任了 ~ ","like_count":12,"discussions":[{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340609,"discussion_content":"确实啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610077213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168056,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1578008998,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"48822649254","product_id":100039001,"comment_content":"1，无单测的条件下，别说重构了，我不想以前任何代码，对，我是一个怕事的程序员～<br>2，小步快走的重构方式很重要，毕其功于一役的重构总是构完了，发现和主干代码相差哈哈哈，我还是不合入了吧，留给自己欣赏自己精细雕琢的玩具。。。","like_count":11},{"had_liked":false,"id":204274,"user_name":"elasting","can_delete":false,"product_type":"c1","uid":1820716,"ip_address":"","ucode":"03AAFF8D1A75B9","user_header":"","comment_is_top":false,"comment_ctime":1586358719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31651129791","product_id":100039001,"comment_content":"重构前，一定要先写单测，确保重构后的逻辑，与之前是一致的","like_count":7},{"had_liked":false,"id":168260,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1578039399,"is_pvip":false,"replies":[{"id":"65962","content":"😂","user_name":"作者回复","comment_id":168260,"uid":"1190123","ip_address":"","utype":1,"ctime":1578490574,"user_name_real":"王争"}],"discussion_count":5,"race_medal":0,"score":"31642810471","product_id":100039001,"comment_content":"我自从入职到现在一直都是维护老项目。“我很怀念我自己写的代码。&quot;，为什么加双引号了？因为现在的项目代码跟屎一样臭，我自己写的只能说尽量写好点，但是也不完美，完全达不到我心中的目标。为什么呢？因为大环境所致。现在项目已经烂的一P了，结果还没时间给重构的机会。难受的亚匹。我所谓的烂不只是代码烂，就连无用代码也不删掉，都注释掉，git提交comment：123，345，代码开发完不合并到master。这篇文章不是学知识的，是比惨的...... 另外，精选留言越来越少，难受。","like_count":7,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480174,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578490574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2672409,"avatar":"","nickname":"Geek_fa2c0b","note":"","ucode":"E87A13ABFC0134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383758,"discussion_content":"我的也一样，感觉这个项目就是一件破衣服打满了补丁，各色的补丁一件掩盖了衣服本来的布料了，修修补补又一年，耦合度太高了，太高了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626233012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2088626,"avatar":"","nickname":"志江","note":"","ucode":"8A07D53769B3C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381767,"discussion_content":"哈哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625205428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308887,"discussion_content":"+1111111 都是不用的代码不删,增加新逻辑强行规定用一个大if","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601110613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1032484,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c1/24/0ea08c9e.jpg","nickname":"柴柴777","note":"","ucode":"5208B935ECB6F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":125115,"discussion_content":"看着大家一个一个过的都这么惨  我突然觉得我还算幸福了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578474854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231742,"user_name":"Jerry Wu","can_delete":false,"product_type":"c1","uid":1203567,"ip_address":"","ucode":"AD29B6942AAAA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/6f/42494dcf.jpg","comment_is_top":false,"comment_ctime":1593762740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23068599220","product_id":100039001,"comment_content":"我接手的项目 80% 都是巨坑，代码是真的烂。印象最深的是一个函数，有上百个形参，看到头晕，但要重构麻烦就来了。<br><br>最大的难点是，出了故障，就得背锅，但不重构又天天加班。所以，别想着改好了，想办法让代码没那么烂，从低层次的重构入手，在类、函数、命名下功夫。","like_count":5},{"had_liked":false,"id":174212,"user_name":"沈杰","can_delete":false,"product_type":"c1","uid":1230818,"ip_address":"","ucode":"20D1D820CAD60D","user_header":"https://static001.geekbang.org/account/avatar/00/12/c7/e2/27d00854.jpg","comment_is_top":false,"comment_ctime":1580092124,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"23054928604","product_id":100039001,"comment_content":"祖传代码，领导还是不敢担这个责任","like_count":5},{"had_liked":false,"id":228116,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1592559059,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14477460947","product_id":100039001,"comment_content":"以前从来没有意识到自己的代码质量有问题，直到最近入职了一家新公司，很庆幸有这样的领导，每次CR我的代码，指出我的很多问题，少写一个空格都不行，领导帮忙重构后，代码结构确实看起来清楚多了，也更加容易理解了，以后再写代码的时候会持续重构，注意书写的质量，争取每次提交上去的代码不需要再次修改，加油💪","like_count":3,"discussions":[{"author":{"id":2286050,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e1/e2/d6cc7f7c.jpg","nickname":"Nixiakஇ","note":"","ucode":"8F04E929649D38","race_medal":4,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333569,"discussion_content":"不，你只是傻，发不了\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607565695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010986,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6d/2a/a2acc011.jpg","nickname":"李元标","note":"","ucode":"D048B7850902B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51517,"discussion_content":"你是阿西吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573891534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/ff/f71034e9.jpg","nickname":"悟空WuKong","note":"","ucode":"49AFD2B048C1BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44290,"discussion_content":"你是茶几","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572941840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1283461,"avatar":"https://static001.geekbang.org/account/avatar/00/13/95/85/15cd21c2.jpg","nickname":"杨锋","note":"","ucode":"85A7828A538FB0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284520,"discussion_content":"你，不是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592546633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/6f/ac3003fa.jpg","nickname":"xiong","note":"","ucode":"C1BFD9EF96372F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48141,"discussion_content":"emmm，你不是~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573452783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001970,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","nickname":"寒溪","note":"","ucode":"67B9F1A1C15A20","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45804,"discussion_content":"不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573087791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1519521,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2f/a1/5f32ada6.jpg","nickname":"大姨夫斯基","note":"","ucode":"79989AC4DD36FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45513,"discussion_content":"不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573045156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1120025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/17/19/46fcde38.jpg","nickname":"yonyoupht","note":"","ucode":"9B3AC96150B8AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44098,"discussion_content":"嗯，你是！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572929835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099706,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","nickname":"zhaozp","note":"","ucode":"BF390F5ED762CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43875,"discussion_content":"不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572914928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43308,"discussion_content":"不是→_→","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572867573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055722,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1b/ea/4f5661c6.jpg","nickname":"牛头人","note":"","ucode":"DABDEF4F32A812","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43157,"discussion_content":"Yes, you are.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572860224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168052,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1578008592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14462910480","product_id":100039001,"comment_content":"品味很重要，能品味出代码的味道","like_count":3},{"had_liked":false,"id":213629,"user_name":"落尘kira","can_delete":false,"product_type":"c1","uid":1092169,"ip_address":"","ucode":"D203B519E43F85","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/49/51790edb.jpg","comment_is_top":false,"comment_ctime":1588495156,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10178429748","product_id":100039001,"comment_content":"我觉得重构的经历带给我一个比较正的三观：要认真对待每一次技术评审，每一篇设计文档，接口、模型、字段、逻辑、流程图、异常、风险、影响范围、配置、发布计划、相关合作方（上游和下游）等等等等要写的清清楚楚，落地为证，以后不管跟谁&quot;撕逼&quot;就有依据了，当然老板除外；总之文档写得好，评审讲得好，方便你我他","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473248,"discussion_content":"感觉uml没啥用，专栏后面会解释这一点的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572947796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100717,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq65BWyJb39rq0Qgx1fnELVSZGGuLY6oBmYcmFj2Oqy9iauAWfbqO5U63I22Uo1POrrTp7tFWXibxvg/132","nickname":"zyl","note":"","ucode":"2F872341AC8D7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44570,"discussion_content":"说uml没啥用，就跟说设计模式浪费性能一个意思","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572956542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031369,"avatar":"","nickname":"jamesxu","note":"","ucode":"EB64BFAABE57E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43326,"discussion_content":"已经没多少人用这个了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572868341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1005381,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/45/c418ea5c.jpg","nickname":"指尖流逝","note":"","ucode":"417009F674FAF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1031369,"avatar":"","nickname":"jamesxu","note":"","ucode":"EB64BFAABE57E3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43894,"discussion_content":"为什么呢？做设计的时候，请问你们借助什么工具来全盘审视设计？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572915745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43326,"ip_address":""},"score":43894,"extra":""}]},{"author":{"id":2689625,"avatar":"","nickname":"Geek4618","note":"","ucode":"04105E64E7DD64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395071,"discussion_content":"uml是一个交流工具 与本设计模式没有啥关联性吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632215414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1617369,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/FqWrN8aNrlXEfo2YeDeCRuWMZ57VzsNC0aibkEIdiaNBdUVPjlBXrg9F4Eb8uMFYckuSgmXQ49vT6SHoicAjeEGdA/132","nickname":"Geek_558387","note":"","ucode":"2EA857EBC365B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307173,"discussion_content":"说uml没啥用，一句话就点题了啊，说到点上了，确实是个很鸡肋的东西，对快速理解代码设计并没太多帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600521567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1171450,"avatar":"https://static001.geekbang.org/account/avatar/00/11/df/fa/8ce5e897.jpg","nickname":"davbao","note":"","ucode":"99660D55BA3FFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145895,"discussion_content":"原来作者对uml是这个看法，之前笔试人家还让我画这个，感觉会设计uml的人好牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579587546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000237,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","nickname":"enjoylearning","note":"","ucode":"DCAF8538DEA277","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47091,"discussion_content":"如果没有uml不知道作者会如何讲设计模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573270574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168037,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1577982443,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10167917035","product_id":100039001,"comment_content":"打卡✔<br>心得体会吧，哈哈哈哈哈<br>我被频繁改动的需求压的喘不过气，再牛逼的架构怕是也抵不住😒","like_count":2,"discussions":[{"author":{"id":1237655,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","nickname":"Kang","note":"","ucode":"088A8DA0A16BDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115372,"discussion_content":"让他们等着，你先想想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578012923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330422,"user_name":"L","can_delete":false,"product_type":"c1","uid":1628434,"ip_address":"","ucode":"A5CB3F1B4975BE","user_header":"https://static001.geekbang.org/account/avatar/00/18/d9/12/71db1407.jpg","comment_is_top":false,"comment_ctime":1641973832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5936941128","product_id":100039001,"comment_content":"<br><br><br>重构过一个充满if else 、重复代码到处是 的小功能模块<br><br>感受：1.一定先熟悉业务 (已踩坑，上来就干)<br>\t 2.要给自己留一定的缓冲时间<br>\t 3.要有回退策略，即开关<br>         4.上线最好有流量对比<br><br>代码没有单测，，，，测试很麻烦<br>感受：一个好领导能让你走很多弯路~","like_count":1},{"had_liked":false,"id":312400,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1631785973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5926753269","product_id":100039001,"comment_content":"说实话一个有技术性氛围的团对很重要，换句话说leader很重要。","like_count":1},{"had_liked":false,"id":306868,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1628757132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5923724428","product_id":100039001,"comment_content":"曾经自己写过一些代码，刚开始的时候只使用一种方法，所以直接放在主函数了，但是后面随着不断的改动，发现要不断尝试新的代码，而如果再直接放在主函数中，主函数就会很长，不利于后续的阅读和改动，刚开时只增加一个方法的时候自己还是硬着头皮去修改主函数部分，但是当改动方法越来越多，自己意识到再不对代码进行重构往后再加代码就会非常困难了。然后自己就开始使用工厂模式重新设计的逻辑框架，一开始这个过程还是挺花时间的，甚至比单独开发一个新方法的时间还要长。但是设计完成之后当我再想往里面增加新的方法，发现只有这个方法本身的逻辑已经实现了， 将它加入主工程是很容易的事情，顿时感觉之前的努力没有白花。这算是我的第一次代码重构的经验了，共勉！","like_count":1},{"had_liked":false,"id":234978,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1594862202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5889829498","product_id":100039001,"comment_content":"即使小步重构也是美好的愿景。重构意味着测试回归工作量的增加，常常会得不到测试的认同。而且因为是小步重构，你也很难拿出特别有必要的理由。","like_count":1},{"had_liked":false,"id":169181,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1578287133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873254429","product_id":100039001,"comment_content":"我非常赞同老师对重构思维，重构习惯这个点的强调。日常工作中，我身边遇到过这样的队友。他需要调用一块代码，但是那块代码设计的不太合理，不好用。然后他就自己实现了一个一摸一样的。等到别人去看的时候发现两块代码。问他的时候，他能说出来为什么这样做，原来的哪里不合适。但是不下手去改不正确的代码。<br>遇到的坑，就是提供给外部的代码重构，比系统内的麻烦很多。就比如上面这种情况，如果是内部调用，也没问题。也可以算的上是一种重构，我把原来的所有调用都修改成你新的即可。但问题是暴露给外部的内容，就很难去修改。你不知道有多少系统用了你的代码(举例dubbo)，你要保证兼容的前提下，修改代码。<br>最后我觉得重构不论大小，只要能有一点进步，在保证不影响的情况下。有时候一个变量名，一个方法名称，一个断句。一个复杂if条件的提取，都是好的，至少代码在不断变好。杜绝堆砌代码","like_count":1},{"had_liked":false,"id":168407,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1578062107,"is_pvip":false,"replies":[{"id":"65960","content":"单元测试真的很有用，谁写谁知道。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578490425,"ip_address":"","comment_id":168407,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5873029403","product_id":100039001,"comment_content":"编程世界也存在热力学第二定律，在自然过程中，熵总是不断增加的。<br>我自己有一个小项目，随着代码量的逐渐增多，维护起来越来越吃力，用来提防出问题的精力已经超过了开发新功能的精力，所以看到这个专栏时我毫不犹豫就买了。重构我的项目就是我给自己的大作业。<br>不过，真的不想写单元测试啊😭😭😭","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480213,"discussion_content":"单元测试真的很有用，谁写谁知道。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578490425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307550,"discussion_content":"单元测试需要测试service还是controller?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600682144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278330,"discussion_content":"单元测试是王道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591174754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168152,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1578021085,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5872988381","product_id":100039001,"comment_content":"代码重构，首先技术人员得建立这种思维。大部分技术人员写代码除非出问题，否则以后是不会看的。总觉得自己写代码是最好的。","like_count":1,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239195,"discussion_content":"嗯 往往几个月后，回头查一个问题的时候会指着自己的代码说，这是哪个傻X写的代码","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587283604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168094,"user_name":"安静的boy","can_delete":false,"product_type":"c1","uid":1196475,"ip_address":"","ucode":"F5F44B75228A85","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","comment_is_top":false,"comment_ctime":1578013009,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872980305","product_id":100039001,"comment_content":"我现在负责的项目是我从零就参与的，到现在大大小小已经迭代了十几个版本。我发现随着版本的迭代，会出现很多相似的重复代码，这个时候我就会去想办法重构代码，做一些抽象啊，利用一些设计模式，不过我现在只用到了模板设计模式。如果不重构我觉着以后需求再变化改动的地方太多了，而且还很有可能出错。另外，我发现重构了以后代码的可读性也会比较好。","like_count":1},{"had_liked":false,"id":358927,"user_name":"怀英","can_delete":false,"product_type":"c1","uid":1394143,"ip_address":"江苏","ucode":"E2838AF06FB300","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/df/97a71dc8.jpg","comment_is_top":false,"comment_ctime":1665033556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665033556","product_id":100039001,"comment_content":"现在接触的老的代码越来越多，要重构发现比较困难，吃力。就好比自古华山一条道，还没法绕道，要开隧道，发现钱还不够，最后只好把有限的预算修修栈道，装装防护栏。","like_count":0},{"had_liked":false,"id":348739,"user_name":"江小田","can_delete":false,"product_type":"c1","uid":1003149,"ip_address":"","ucode":"C5197BF856E8D3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/8d/34e0f6f3.jpg","comment_is_top":false,"comment_ctime":1655361138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655361138","product_id":100039001,"comment_content":"我前段时间把我的一个子系统从大单体应用里给拆了出来。<br>步骤分别是1，运行环境的隔离、2，访问入口的独立(例如域名独立)、3，旧数据源访问账户的独立(提供访问是否隔离的观测验证)、4，代码调用拆分成远程调用(不停用3验证拆分结果)、5，新数据源的建立、6，旧数据源到新数据源的同步、7，一键切换到新库(验证业务)、8，删除旧库数据<br><br>我重构之前，同事不敢动。其实根本原因是对业务的熟悉度不够深入。如果对业务完全熟悉，出问题能hold住。那每一步无论出什么问题，都能很快发现并解决。就不会怕不敢动的问题。","like_count":0},{"had_liked":false,"id":345685,"user_name":"钱鹏 Allen","can_delete":false,"product_type":"c1","uid":2518863,"ip_address":"","ucode":"7E95E82C0717DA","user_header":"https://static001.geekbang.org/account/avatar/00/26/6f/4f/3cf1e9c4.jpg","comment_is_top":false,"comment_ctime":1652508970,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652508970","product_id":100039001,"comment_content":"关于代码重构，你有什么心得体会、经验教训？或者，你也可以说说，在重构过往项目的时候，你遇到过哪些问题？<br>公司的代码属于老系统，因为业务比较多，经常是上线新项目，就临时做更改，设计模式几乎应用为0，新上手系统，进行功能上的调试就要近一个月的时间，效率极低。<br>先自己的做好相应板块的重构，自己所负责的团队里做好代码的review，将重构的培训做出来~<br>","like_count":0},{"had_liked":false,"id":338200,"user_name":"夏天","can_delete":false,"product_type":"c1","uid":1285986,"ip_address":"","ucode":"F29D56F9265751","user_header":"https://static001.geekbang.org/account/avatar/00/13/9f/62/960eecc3.jpg","comment_is_top":false,"comment_ctime":1647351304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647351304","product_id":100039001,"comment_content":"在工作中 重构会引起有些leader 反感，特别是在review过程中，这次需求不需要改动的地方做了变更，可能会被质疑。","like_count":0},{"had_liked":false,"id":334356,"user_name":"L先生","can_delete":false,"product_type":"c1","uid":2879424,"ip_address":"","ucode":"D1E567ED3377CE","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ef/c0/537b3905.jpg","comment_is_top":false,"comment_ctime":1644897026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644897026","product_id":100039001,"comment_content":"其实我也经常写烂代码，因为只有我一个开发，懒得动。进现在公司得时候，用了模板模式统一了整个数据流程。做的时候也是挺忐忑得，可能做出来不太规范，但是比之前得重复代码好多了。","like_count":0},{"had_liked":false,"id":326432,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1639529894,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1639529894","product_id":100039001,"comment_content":"财务相关代码不敢动，重构之后要安排测试同事测试，也要承担一定风险，这个最难","like_count":1},{"had_liked":false,"id":325801,"user_name":"Geek_1","can_delete":false,"product_type":"c1","uid":2704407,"ip_address":"","ucode":"59300A73996D20","user_header":"https://static001.geekbang.org/account/avatar/00/29/44/17/e4fdcaad.jpg","comment_is_top":false,"comment_ctime":1639137299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639137299","product_id":100039001,"comment_content":"重构把握四个点：why、what、when、how，从时间上讲：重构融入日常","like_count":0},{"had_liked":false,"id":320158,"user_name":"流云追风","can_delete":false,"product_type":"c1","uid":2611950,"ip_address":"","ucode":"16D738406CB191","user_header":"https://static001.geekbang.org/account/avatar/00/27/da/ee/63090718.jpg","comment_is_top":false,"comment_ctime":1636102575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636102575","product_id":100039001,"comment_content":"重构不算绩效,谁愿意去做吃力不讨好的事呢","like_count":1},{"had_liked":false,"id":318444,"user_name":"盗雪","can_delete":false,"product_type":"c1","uid":1204749,"ip_address":"","ucode":"794E2C78281EB2","user_header":"https://static001.geekbang.org/account/avatar/00/12/62/0d/e49da525.jpg","comment_is_top":false,"comment_ctime":1635300636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635300636","product_id":100039001,"comment_content":"上医治未病，中医治欲病，下医治已病","like_count":0},{"had_liked":false,"id":314290,"user_name":"charmsongo","can_delete":false,"product_type":"c1","uid":1609051,"ip_address":"","ucode":"4FBEE716E93A1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","comment_is_top":false,"comment_ctime":1632959316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632959316","product_id":100039001,"comment_content":"重构对于开发人员来说是不可避免的事情，自己自己注意代码规范，也会遇到接手同事工作，让你看一眼就够了代码，这很正常，自己回头看自己之前写的代码也会嫌弃，这或许是成长。<br>Why？小步快改，大步慢改，及时发现代码坏味道不让它影响更大<br>what？经验丰富可以申请重构大模块，信心不足可以先小试牛刀，从单个类出发<br>when？大重构需要时间长，要有规划，小重构单位可以是天，日常不忙可以做<br>how？运用，面向对象特性，设计模式，思想重构上层，solid，kiss，lod等原则重构类","like_count":0},{"had_liked":false,"id":313903,"user_name":"tyro","can_delete":false,"product_type":"c1","uid":1955472,"ip_address":"","ucode":"D35A80546E7A2F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/d6/90/2b949521.jpg","comment_is_top":false,"comment_ctime":1632732753,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1632732753","product_id":100039001,"comment_content":"大型重构：涉及的模块、代码会较多，牵一发而动全身。任务规划-任务分解-小步重构-提交、测试、运行。时刻保证代码仓库中的代码处于可运行、逻辑正确的状态","like_count":0},{"had_liked":false,"id":310085,"user_name":"刘泽民","can_delete":false,"product_type":"c1","uid":2731016,"ip_address":"","ucode":"E4F55018D01ABD","user_header":"","comment_is_top":false,"comment_ctime":1630481426,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630481426","product_id":100039001,"comment_content":"重构了半个月 然后新的需求加过来，只能放弃已重构部分在原代码上叠加开发","like_count":0},{"had_liked":false,"id":306271,"user_name":"不一样的烟火","can_delete":false,"product_type":"c1","uid":1473251,"ip_address":"","ucode":"6E305F0EE90E8B","user_header":"https://static001.geekbang.org/account/avatar/00/16/7a/e3/145adba9.jpg","comment_is_top":false,"comment_ctime":1628480568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628480568","product_id":100039001,"comment_content":"最近刚重构完公司的核心代码，体会很深","like_count":0},{"had_liked":false,"id":306096,"user_name":"直走的螃蟹","can_delete":false,"product_type":"c1","uid":2683294,"ip_address":"","ucode":"8116812CF0A1F2","user_header":"","comment_is_top":false,"comment_ctime":1628346168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628346168","product_id":100039001,"comment_content":"一开始确实没有重构的意识，但后来发现以前遗留下来的代码真的太烂了。开发某个小功能点，要看一大堆的代码，要花费太多时间在这上面了。导致自己的开发时间不够，也只能继续写烂代码。感觉陷入了死循环。不过熟悉了开发的节奏之后，也会做一些小型重构，但现在工作还不是很久，不敢改太多旧代码。大型重构都是交给资深同事来解决的。","like_count":0},{"had_liked":false,"id":304477,"user_name":"昵称C","can_delete":false,"product_type":"c1","uid":1234963,"ip_address":"","ucode":"1BB2D537942DC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/13/082013bc.jpg","comment_is_top":false,"comment_ctime":1627442329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627442329","product_id":100039001,"comment_content":"重构确实需要持续保持重构意识，保持代码可控。<br>近两年我们团队就是血的教训，两年时间持续赶业务，搭建平台。到第三年开始重构，每次重构都是两周到一个月的时间，所以特别不理解争哥说的大型重构如何才能分解城每天都能提交代码的程度。<br>不过个人仍然觉得，花一到两周的时间对某个模块进行大型重构还是可控的。<br>","like_count":0},{"had_liked":false,"id":297189,"user_name":"曾经的少年","can_delete":false,"product_type":"c1","uid":1930186,"ip_address":"","ucode":"B22FC8BC9D8DB7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/73/ca/8f6d9075.jpg","comment_is_top":false,"comment_ctime":1623371540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623371540","product_id":100039001,"comment_content":"重构是时时刻刻进行的，这样才能不至于积累过多的烂代码","like_count":0},{"had_liked":false,"id":292439,"user_name":"请叫我和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1620822227,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1620822227","product_id":100039001,"comment_content":"这次是第二次再来阅读这篇，突然就想到一个文中的一个点：在修改、添加某个功能代码的时候，你也可以顺手把不符合编码规范、不好的设计重构一下。<br><br>这样的修改，是否需要考虑到如果重构其他的代码&#47;设计，并不确定是否重构的正确与否，是否需要 QA 介入回归测试一下，如果让 QA 介入，是否成本又过高？","like_count":0},{"had_liked":false,"id":290000,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1619316030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619316030","product_id":100039001,"comment_content":"在机器学习的场景，比如，推荐和搜索，很多时候重构也是为了开销的减小和性能提升","like_count":0},{"had_liked":false,"id":279920,"user_name":"theonecai","can_delete":false,"product_type":"c1","uid":1087493,"ip_address":"","ucode":"063C239256C889","user_header":"https://static001.geekbang.org/account/avatar/00/10/98/05/fdd7b8b7.jpg","comment_is_top":false,"comment_ctime":1614000719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614000719","product_id":100039001,"comment_content":"用了十几年的系统，业务逻辑复杂，不敢轻易重构，还在一直堆代码","like_count":0},{"had_liked":false,"id":278604,"user_name":"Geek_d68f12","can_delete":false,"product_type":"c1","uid":2441635,"ip_address":"","ucode":"C1552CBAA94214","user_header":"","comment_is_top":false,"comment_ctime":1613123986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613123986","product_id":100039001,"comment_content":"不改变功能的前提下，修改代码提高质量<br>大重构<br>\t分阶段迭代式<br>小重构<br>\t随时做<br>把重构当成平时开发的一部分","like_count":0},{"had_liked":false,"id":276366,"user_name":"小白","can_delete":false,"product_type":"c1","uid":2314948,"ip_address":"","ucode":"ED798245A9B0CA","user_header":"","comment_is_top":false,"comment_ctime":1611901100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611901100","product_id":100039001,"comment_content":"重构别人的代码是一件非常痛苦的事，尤其是哪些不爱写注释的同事","like_count":0},{"had_liked":false,"id":272397,"user_name":"snake","can_delete":false,"product_type":"c1","uid":2347137,"ip_address":"","ucode":"47BFFE4D048156","user_header":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","comment_is_top":false,"comment_ctime":1610076878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610076878","product_id":100039001,"comment_content":"我有次花时间吧以前的一个大类做了拆分，抽象了通用方法，后面被经理说不要去改动稳定的代码。。","like_count":0},{"had_liked":false,"id":271363,"user_name":"子房","can_delete":false,"product_type":"c1","uid":1438860,"ip_address":"","ucode":"CB05938C248BB3","user_header":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","comment_is_top":false,"comment_ctime":1609577095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609577095","product_id":100039001,"comment_content":"大家好,  感谢老师的分享, 我分享一下我的重构故事, 团队曾经有过一次大规模的重构历史. 当时, 因为系统经历过的业务团队比较多, 每个团队的水平差异较大, 导致系统很难展开新的业务迭代. 恰逢公司渐渐走向微服务技术架构, 因此确定进行该系统的重构. 我们遇到的主要困难一、是业务边界梳理,    重构对上下游系统的影响范围的难以评估. 二、业务模块重构的重新设计和编码, 三、重构后的业务、编码质量能否达到预期.  四、重构后线上 bug 是否会比目前少很多. 基于上面的几点, 我们还是走向了重构, 主要是老师讲的大规模中的重构风险, 我们当时把重构作为技术项目实施, 新的业务需求基本都是停滞的, 专心做重构, 这是大规模重构必须要注意的.重构后的收益, 重构的收益可能一开始没有那么明显, 也可能是短期的收益. 目前看来我们当时的重构长期来看是失败的. 因为过去了一年, 还是走回了原来的样子. 我总结了几点原因: 大部分同事缺少写出可维护、易读、易维护的代码意识. 也缺少持续重构的意思. 日常开发中基本都是面向过程的思维在开发. 对设计思想、 设计原则、 设计模式停留在认知水平,缺少运用到项目的经验. 总之: 还是缺少工程师的极客精神.","like_count":0},{"had_liked":false,"id":269339,"user_name":"王玉彬","can_delete":false,"product_type":"c1","uid":2346455,"ip_address":"","ucode":"8DA1ADB9B4026C","user_header":"https://static001.geekbang.org/account/avatar/00/23/cd/d7/c932f32a.jpg","comment_is_top":false,"comment_ctime":1608617164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608617164","product_id":100039001,"comment_content":"1. 重构的代码要先具备可测试性，不然会引入风险。<br>2. 自动化测试能大大简化测试过程。<br>3. 小规模重构不需要告诉领导。","like_count":0},{"had_liked":false,"id":269333,"user_name":"月狼葱葱","can_delete":false,"product_type":"c1","uid":1101360,"ip_address":"","ucode":"506D751D956F87","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/30/eb380376.jpg","comment_is_top":false,"comment_ctime":1608616463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608616463","product_id":100039001,"comment_content":"一直在做重构，也在组织内部推广重构，看到这篇文章很是激动<br>对于大重构和小重构，参考The Coding Dojo Handbook，有两个例子可以拿出练习；<br>小重构 Order Receipt  https:&#47;&#47;github.com&#47;wubin28&#47;order-receipt-baseline<br>大重构 Gilded Rose https:&#47;&#47;github.com&#47;emilybache&#47;GildedRose-Refactoring-Kata<br>IDEA 快捷键 : https:&#47;&#47;www.jianshu.com&#47;p&#47;6d752d85cd35<br>Eclipse 快捷键 : https:&#47;&#47;www.jianshu.com&#47;p&#47;dd05065d4d18","like_count":0},{"had_liked":false,"id":269171,"user_name":"lidashuang","can_delete":false,"product_type":"c1","uid":1104850,"ip_address":"","ucode":"560ABE8032760E","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","comment_is_top":false,"comment_ctime":1608544182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608544182","product_id":100039001,"comment_content":"完善的集成测试还是挺重要的，没有测试，不敢重构","like_count":0},{"had_liked":false,"id":268568,"user_name":"THB","can_delete":false,"product_type":"c1","uid":1364513,"ip_address":"","ucode":"199A7879576041","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/MlmSR4YXUfrNlZdMv7bv103gbTCxG9DYKFR8YLJtqw85rl8YuibhzNB7SmddQ6v3GiaQFZr5iajc9numbJ248fMGQ/132","comment_is_top":false,"comment_ctime":1608259484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608259484","product_id":100039001,"comment_content":"对于多人参与过开发的产品，重构过程中，主要遇到以下问题：<br>1、前同事写的代码，没有注释，有些代码不敢干掉，干掉又怕引发bug<br>2、某些代码逻辑耦合性太强，虽然是微服务架构，但还是会牵一发而动全身，重构成本高<br>3、数据库设计本来就不够合理，这也是造成耦合性强的原因之一吧，涉及到改动数据库，实体什么的改动就大","like_count":0},{"had_liked":false,"id":266620,"user_name":"小妖","can_delete":false,"product_type":"c1","uid":1730626,"ip_address":"","ucode":"49C01DBFADF101","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvm1JYIDcS74s4cEYxA1PXMqjortVXEjUKyGQcPvibNJ4EAuksIa6uoHgr6G1yRqAM2KtP3yicKgTA/132","comment_is_top":false,"comment_ctime":1607418416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607418416","product_id":100039001,"comment_content":"1.重构的目的是保持代码高质量的有效手段，持续重构思想很重要，尽量避免大规模的大刀阔斧的重构；<br>2.小范围的重构可以跟随某个需要变更一块上线，但要保证功能的稳定；<br>3.重构是手段不是目的，在开发中防止烂代码的堆砌造成破窗效应很重要；<br>4.大规模重构要有主负责人牵头，经过充分的论证后才可进行","like_count":0},{"had_liked":false,"id":266311,"user_name":"Kingram","can_delete":false,"product_type":"c1","uid":2247700,"ip_address":"","ucode":"212E403E81F2FC","user_header":"https://static001.geekbang.org/account/avatar/00/22/4c/14/8fa39544.jpg","comment_is_top":false,"comment_ctime":1607300493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607300493","product_id":100039001,"comment_content":"只会重构自己的代码，先保证自己不背别人的锅🤪","like_count":0},{"had_liked":false,"id":263553,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1606183358,"is_pvip":true,"replies":[{"id":"96091","content":"������","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606700723,"ip_address":"","comment_id":263553,"utype":1}],"discussion_count":2,"race_medal":5,"score":"1606183358","product_id":100039001,"comment_content":"我觉得在工作中做好重构，需要有以下几点准备：<br>1. 领导支持，如果领导不支持，可以试着从非功能需求以及降低运维成本的角度去说服。<br>2. 重构是渐进迭代的，不是一步到位的。<br>3. 重构需要有测试用例支撑，没有完善的测试覆盖就去重构，无异于给自己挖坑。<br>4. 重构需要code review，这不仅是为了保证代码质量，也是很好的团队内技术分享的机会。","like_count":0,"discussions":[{"author":{"id":1734530,"avatar":"","nickname":"tobebest","note":"","ucode":"FCB989CFB2D7AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45113,"discussion_content":"小王子，flag立起，跟着争哥一路走下去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573004512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261857,"user_name":"骆永良","can_delete":false,"product_type":"c1","uid":2285079,"ip_address":"","ucode":"E451391B9ABF13","user_header":"https://static001.geekbang.org/account/avatar/00/22/de/17/8c819cd7.jpg","comment_is_top":false,"comment_ctime":1605539542,"is_pvip":false,"replies":[{"id":"96132","content":"嗯呢������","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606701252,"ip_address":"","comment_id":261857,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605539542","product_id":100039001,"comment_content":"不管是重构，开始开发设计，都是为了让代码粒度适中，在理解的范围内。","like_count":0,"discussions":[{"author":{"id":1362023,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","nickname":"John Bull","note":"","ucode":"2A1B4191CD87B8","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357811,"discussion_content":"曾经吹过的牛，实现了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615872302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1308783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/6f/080973cf.jpg","nickname":"Edward","note":"","ucode":"10FAADF92D05F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1362023,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","nickname":"John Bull","note":"","ucode":"2A1B4191CD87B8","race_medal":5,"user_type":1,"is_pvip":true},"discussion":{"id":371751,"discussion_content":"0217就学完了，哈哈，准备二刷","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619952239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":357811,"ip_address":""},"score":371751,"extra":""}]}]},{"had_liked":false,"id":260670,"user_name":"成长型思维","can_delete":false,"product_type":"c1","uid":2282974,"ip_address":"","ucode":"2FCE2C05FFCC83","user_header":"https://static001.geekbang.org/account/avatar/00/22/d5/de/f9a465ab.jpg","comment_is_top":false,"comment_ctime":1605080743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605080743","product_id":100039001,"comment_content":"最好不要重构 彻底烂到 然后推到重做","like_count":0},{"had_liked":false,"id":259302,"user_name":"锋子","can_delete":false,"product_type":"c1","uid":1681459,"ip_address":"","ucode":"89FFA85BDB1C99","user_header":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","comment_is_top":false,"comment_ctime":1604675494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604675494","product_id":100039001,"comment_content":"现在领导正在支持重构，但是跟的时间特别紧，很多烂代码都是因为要急着上线，没有特别成熟经验就一点点的堆出来的。 而重构还不给足够时间，可能会从一坨屎变成另外一坨。。。","like_count":0},{"had_liked":false,"id":258787,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1604557385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604557385","product_id":100039001,"comment_content":"实际很多重构是在发现问题以后才重构，有时间就有优化重构涉及到的地方，没时间，将继续在代码上面接着堆砌就完了。","like_count":0},{"had_liked":false,"id":257481,"user_name":"jeff","can_delete":false,"product_type":"c1","uid":1393975,"ip_address":"","ucode":"DBF6BC727D4E77","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/37/7125afa6.jpg","comment_is_top":false,"comment_ctime":1603985346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603985346","product_id":100039001,"comment_content":"KPI 让人动都不敢动","like_count":0},{"had_liked":false,"id":257090,"user_name":"大力","can_delete":false,"product_type":"c1","uid":1364353,"ip_address":"","ucode":"1B2125C519443D","user_header":"https://static001.geekbang.org/account/avatar/00/14/d1/81/89ba9d81.jpg","comment_is_top":false,"comment_ctime":1603850210,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603850210","product_id":100039001,"comment_content":"重构过程最好跟 code review 互相结合。","like_count":0},{"had_liked":false,"id":256659,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1603699615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603699615","product_id":100039001,"comment_content":"前面都在谈重构的重要性，现在开始介绍重构的操作手册。<br>现在对待看不惯的代码，总是借口下次重构的时候好好改一下，却发现直到功能下线都没有再次重构。<br>到真正不得已要重构的时候，领导没有时间，产品没有时间，老板也没有时间。<br>就算是有时间，重构出来的东西也未必比之前的逻辑好多少。<br>思考的质量和思考的数量是正相关的，所谓的深思熟虑，不是一拍脑门就能深思熟虑的。将重构养成习惯，持续的重构，持续的思考，你的思考和代码也都会持续的生长。<br>切忌憋大招，对于大型重构，也需要有组织有计划，限定影响范围，分阶段的重构。控制每次重构的影响范围，保证在每次小的重构代码逻辑都是正确的。","like_count":0},{"had_liked":false,"id":250509,"user_name":"笨鸟","can_delete":false,"product_type":"c1","uid":1236320,"ip_address":"","ucode":"68029ADA76AA5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","comment_is_top":false,"comment_ctime":1601110363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601110363","product_id":100039001,"comment_content":"项目内部代码一团糟:耦合严重,重复代码一堆又一堆,项目之间代码一团糟:功能不一样的代码复制出来,形成多个项目;重构完A项目,到了B项目一样的代码再次重构一次,来了一个新项目,又从没重构的项目里拷贝出来功能,我再次重构,重构完,还得重构&quot;模版&quot;代码;真的是...老板还美名其曰模块化...","like_count":0},{"had_liked":false,"id":250352,"user_name":"Gopher","can_delete":false,"product_type":"c1","uid":1206229,"ip_address":"","ucode":"3C1F9012BB486D","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","comment_is_top":false,"comment_ctime":1601035694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601035694","product_id":100039001,"comment_content":"上次一个大的重构导致了线上的bug,扣工资了<br>","like_count":0},{"had_liked":false,"id":247308,"user_name":"JerryZhu","can_delete":false,"product_type":"c1","uid":1591223,"ip_address":"","ucode":"76850CD45786C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","comment_is_top":false,"comment_ctime":1599654841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599654841","product_id":100039001,"comment_content":"重构的压力来源于上面根本不给时间。。 除非自己加班搞，甚至需求排期过于不合理和密集导致压根不想重构， 即便发现问题了， 都是一种无可奈何的感觉","like_count":0},{"had_liked":false,"id":246735,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599467627,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599467627","product_id":100039001,"comment_content":"挺有意思和价值的一个过程","like_count":0},{"had_liked":false,"id":245986,"user_name":"Geek_35cfdd","can_delete":false,"product_type":"c1","uid":1792214,"ip_address":"","ucode":"AD9615ABB4CA25","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiaP1gptuBzj3AXMpY8yLTIkpuarouOVzLde4636UJ7zAgnOEZibiaAIRVAicFaO64ftH45YOn1pD3VA/132","comment_is_top":false,"comment_ctime":1599125572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599125572","product_id":100039001,"comment_content":"主要是没人敢重构，重构完之后业务出问题，你接锅。业务不出问题，别人也不会说你做的好。因为在外来看，业务本身就是正常跑的。","like_count":0},{"had_liked":false,"id":245139,"user_name":"倡印","can_delete":false,"product_type":"c1","uid":1455958,"ip_address":"","ucode":"4F53AA5D017D89","user_header":"https://static001.geekbang.org/account/avatar/00/16/37/56/11068390.jpg","comment_is_top":false,"comment_ctime":1598844338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598844338","product_id":100039001,"comment_content":"我觉得重构就像捏陶土一样，先是大体原型然后就是各种细节修改等等，其实大体的样子在最开始就差不多了，后面都是一直对它的修改","like_count":0},{"had_liked":false,"id":244505,"user_name":"蛀牙","can_delete":false,"product_type":"c1","uid":1153349,"ip_address":"","ucode":"F765A67DFEADFD","user_header":"","comment_is_top":false,"comment_ctime":1598541459,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598541459","product_id":100039001,"comment_content":"刚工作的时候追求work就行，总觉得senior developer让我规范命名，reduce duplication是吹毛求疵。渐渐的在工作中体会到了必要性，现在也以同样的标准要求小朋友。","like_count":0},{"had_liked":false,"id":240731,"user_name":"Pp、x","can_delete":false,"product_type":"c1","uid":1183672,"ip_address":"","ucode":"9623E33BE20C1E","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/b8/d10bc2d4.jpg","comment_is_top":false,"comment_ctime":1597046962,"is_pvip":false,"replies":[{"id":"89226","content":"你说的没错，知易行难","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1597411916,"ip_address":"","comment_id":240731,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597046962","product_id":100039001,"comment_content":"有时候确实是想重构，边开发边重构，那么也需要测试重新测一下之前改动过的逻辑，这成本不是很高吗？而且测试也不一定会配合你的代码重构而重复去测试。","like_count":0},{"had_liked":false,"id":240579,"user_name":"小蒋同学","can_delete":false,"product_type":"c1","uid":1568734,"ip_address":"","ucode":"F5BECE8E7F98F1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKNAouyESZ399QeWAricMo046Q7TvbFvAPKkfxoIaHpZhibUIv3BRVU4LKLO4ND7kNiaiboG19OkVwGGQ/132","comment_is_top":false,"comment_ctime":1596982447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596982447","product_id":100039001,"comment_content":"说的太对了，平时加东西的时候就勇敢重构，原来只有一个if，else，加东西的时候，可以选择重构，也可以继续堆砌if，else，越来越多，最近就在加东西的时候做了几次小重构，删除重复代码，增加代码通用性，删除硬编码部分，继续加油！","like_count":0},{"had_liked":false,"id":235920,"user_name":"夜空咏叹调","can_delete":false,"product_type":"c1","uid":1189074,"ip_address":"","ucode":"CC9350BCF218CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/d2/a5e272ce.jpg","comment_is_top":false,"comment_ctime":1595243886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595243886","product_id":100039001,"comment_content":"重构其实是一个长期的过程，随着代码量和自身水平的提高，就会觉得自己以前写的代码有问题，写的拓展性不好，不够优雅，因此就会想要进行重构。其实在我看来，重构和开发中的迭代优化是相辅相承的。","like_count":0},{"had_liked":false,"id":233535,"user_name":"FF","can_delete":false,"product_type":"c1","uid":1516828,"ip_address":"","ucode":"1B10DB28A6C941","user_header":"https://static001.geekbang.org/account/avatar/00/17/25/1c/2073a98c.jpg","comment_is_top":false,"comment_ctime":1594349301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594349301","product_id":100039001,"comment_content":"经常惯性重构 扩展功能 修改实现的时候 不至于一脸懵逼。<br>烂代码见多了就知道重构 不只对自己之后阅读有帮助 对它人扩展修改同样有用","like_count":0},{"had_liked":false,"id":232046,"user_name":"大方方","can_delete":false,"product_type":"c1","uid":1354013,"ip_address":"","ucode":"621AD8F1485753","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6cyOoRd2dROgiblAJkW6RLhUyH1wwU0NNibIIuV930eQ9TiaNT41K61kBSVkvYoDYg7mJtuEoCQY1awBmV0WW6BFg/132","comment_is_top":false,"comment_ctime":1593843368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593843368","product_id":100039001,"comment_content":"重构无论大小保持最小粒度提交给git， 方便溯源新的bug 。重构时尽量避免跨模块重构。如果模块直接需要重构，应该遵循面向接口优先。","like_count":0},{"had_liked":false,"id":231114,"user_name":"向往的生活","can_delete":false,"product_type":"c1","uid":1397298,"ip_address":"","ucode":"0E8DB45357820F","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/32/bb570f48.jpg","comment_is_top":false,"comment_ctime":1593588101,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593588101","product_id":100039001,"comment_content":"代码每次发布都要测试，没有测试人员的配合，重构无法进行，只能每次涉及到功能的改动才能重构一下。","like_count":0},{"had_liked":false,"id":228119,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1592559601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592559601","product_id":100039001,"comment_content":"代码重构完了是不是我们也该下岗了，哈哈哈","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502716,"discussion_content":"大佬你好，能内推吗������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596180515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1908375,"avatar":"","nickname":"Geek_646ed2","note":"","ucode":"3A1B8A293E30D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361673,"discussion_content":"能内推  我也要^_^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616726059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225267,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1591700412,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1591700412","product_id":100039001,"comment_content":"避免或者尽量减少重构工作的前提，需要尽量在项目中尽量添加详细的说明，并且文档化项目说明，这样前人省去重复为新人讲解的事项，新人也能按照既定的规则处理。另外作为项目管理者需要定期的查看代码中的坏味道基于此定期组织评审，降低坏代码出现的频率。","like_count":0},{"had_liked":false,"id":221193,"user_name":"Alan","can_delete":false,"product_type":"c1","uid":1317039,"ip_address":"","ucode":"FB69394A611FC6","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/af/b209f41f.jpg","comment_is_top":false,"comment_ctime":1590422470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590422470","product_id":100039001,"comment_content":"重构经验:  忌讳贪心; 重构之前，应该定好受影响的范围，若超出这个范围，即使看到极其垃圾的代码也不要改。","like_count":0},{"had_liked":false,"id":220058,"user_name":"anders","can_delete":false,"product_type":"c1","uid":1153592,"ip_address":"","ucode":"610C80D742C331","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/38/118a890c.jpg","comment_is_top":false,"comment_ctime":1590145761,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1590145761","product_id":100039001,"comment_content":"在国内，要专门的重构还是比较难的。反而把重构安排在每次迭代中，会比较合适。<br>比如假设一个版本我们需要完成开发的时间是 2 周，其中适当的增加 2~3 天给自己，实施边开发边重构~<br>（计划通 →_→）","like_count":0},{"had_liked":false,"id":220038,"user_name":"兰芳林","can_delete":false,"product_type":"c1","uid":1754409,"ip_address":"","ucode":"D3C652D22B5D50","user_header":"https://static001.geekbang.org/account/avatar/00/1a/c5/29/4848464f.jpg","comment_is_top":false,"comment_ctime":1590140007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590140007","product_id":100039001,"comment_content":"没有重构过代码的举个手","like_count":0},{"had_liked":false,"id":219494,"user_name":"师哥","can_delete":false,"product_type":"c1","uid":1333376,"ip_address":"","ucode":"A86CD1661D370F","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/80/c9e232b6.jpg","comment_is_top":false,"comment_ctime":1590032307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590032307","product_id":100039001,"comment_content":"重构最大的挑战是要用清楚本来代码要表达的意思、","like_count":0},{"had_liked":false,"id":218768,"user_name":"track6688","can_delete":false,"product_type":"c1","uid":1088040,"ip_address":"","ucode":"0A9E893F8FD379","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/28/03613c22.jpg","comment_is_top":false,"comment_ctime":1589872841,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589872841","product_id":100039001,"comment_content":"很多时候，我觉得重构还是需要大牛指导一下，否则无论重构多少遍都是徒劳。设计模式，设计原则都不清楚，又怎么能重构出高质量代码呢？所以，大家能见到我来学习了。我希望能做到老师说的那种持续重构出高质量代码。","like_count":0,"discussions":[{"author":{"id":2295162,"avatar":"","nickname":"Geek_9d493b","note":"","ucode":"6D8EBFF2A36BB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321955,"discussion_content":"jiayou","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604652980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1107371,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e5/ab/6fab2492.jpg","nickname":"2018","note":"","ucode":"4C2CD47AD70177","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2295162,"avatar":"","nickname":"Geek_9d493b","note":"","ucode":"6D8EBFF2A36BB8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322510,"discussion_content":"失败了😭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604756765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":321955,"ip_address":""},"score":322510,"extra":""}]}]},{"had_liked":false,"id":215308,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1588951071,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1588951071","product_id":100039001,"comment_content":"【设计模式笔记27】20200508<br>之前参与过一项大型重构，基本是相当于重写了。读完本文很多当时模糊的店也清晰了。首先重构的目标一定要具体、可量化。具体是说重构是为了某一个问题的，比如大型重构就是为了更好更高效支持业务，因为当初随着业务复杂度的不断增加原有代码已经改不动了，属于一改稍微没考虑完整就倍故障了，那段时间大家改代码都谨小慎微，生怕背锅。关键是复杂业务的支持成本很高，代码散乱不成体系，很容易漏改。再说可量化，是说重构代码的可验证性和可测试性，比如重构目标是优化代码处理耗时就不可量化，需要明确指出耗时从多少降到多少，比如接口耗时葱100ms降到50ms就属于可量化。明确重构目标后就可以定性为大重构和小重构了，如果设计大重构就需要梳理流程、组织讨论、确定方案、计划排期和灰度方案都要做好。花时间最多是流程得梳理合方案确认，梳理好基本就可以确认大致怎么划分模块了。如果是小重构需要掌握基本的重构技巧，遵循设计原则和设计思想以及重构手法。好了，重构代码终于准备上线了，如果是大重构一定要好好思考和评估灰度方案，因为这是最危险也是最激动人心的时刻，多花点时间准没错，写代码多了就发现有个常用套路：异常处理和预案。罗马不是一日建成得，代码需要持续重构才能不至于腐化。欢迎交流","like_count":0},{"had_liked":false,"id":213700,"user_name":"dovefi","can_delete":false,"product_type":"c1","uid":1007670,"ip_address":"","ucode":"9F8C59F095B187","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/36/1848c2b7.jpg","comment_is_top":false,"comment_ctime":1588516485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588516485","product_id":100039001,"comment_content":"前几天在听书的时候就听了&quot;破窗效应&quot;，反思了自己在代码开发上的心理，真的是有这么一回事啊！只要项目出现了坏味道，慢慢的就会越来越多的人降低了自己的底线","like_count":0},{"had_liked":false,"id":213188,"user_name":"KID","can_delete":false,"product_type":"c1","uid":1867938,"ip_address":"","ucode":"EE80B7CA7CC2A2","user_header":"https://static001.geekbang.org/account/avatar/00/1c/80/a2/96dcd1fa.jpg","comment_is_top":false,"comment_ctime":1588325961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588325961","product_id":100039001,"comment_content":"自己重构过自己几年前写的代码，是因为发现之前写的时候没多少设计意识，导致现在扩展很麻烦，重复代码也很多；重构过一遍后，写起来顺手多了，但还是发现有优化的空间，这就是优化需要一步步来的体现吧；要知道什么是好的代码，才知道如何优化，继续学习！！！","like_count":0},{"had_liked":false,"id":209164,"user_name":"70","can_delete":false,"product_type":"c1","uid":1081899,"ip_address":"","ucode":"A5884B2BDDAB70","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/2b/cf93c499.jpg","comment_is_top":false,"comment_ctime":1587516516,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587516516","product_id":100039001,"comment_content":"自己负责的一个服务，基本上每次版本迭代都伴随着少量的小型重构，一直是边开发边重构。大规模重构太难让leader同意了","like_count":0,"discussions":[{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278338,"discussion_content":"所以说是持续重构和持续 终身学习是一个道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591174939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208402,"user_name":"雪吖头","can_delete":false,"product_type":"c1","uid":1910984,"ip_address":"","ucode":"ED6E96979DE27D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/28/c8/13d82fec.jpg","comment_is_top":false,"comment_ctime":1587351265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587351265","product_id":100039001,"comment_content":"非常认同王老师说的：“重构策略是持续重构“","like_count":0},{"had_liked":false,"id":208149,"user_name":"zhou","can_delete":false,"product_type":"c1","uid":1087243,"ip_address":"","ucode":"E1CE8575B3F106","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","comment_is_top":false,"comment_ctime":1587284531,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1587284531","product_id":100039001,"comment_content":"一个功能是否完成，不仅仅是满足用户的需求，还得满足高质量代码。重构不应该经过领导批准，而是一个合格程序员必备的要求。","like_count":0},{"had_liked":false,"id":208134,"user_name":"浮生醉","can_delete":false,"product_type":"c1","uid":1783354,"ip_address":"","ucode":"7549E41BD65511","user_header":"https://static001.geekbang.org/account/avatar/00/1b/36/3a/335db90a.jpg","comment_is_top":false,"comment_ctime":1587282948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587282948","product_id":100039001,"comment_content":"我们一般是会在某一功能扩展到一定程度后，才会对原有代码进行重构，毕竟随着业务的扩展，一些共性的东西会更明显，这样的重构才有意义","like_count":0},{"had_liked":false,"id":206691,"user_name":"大圣代","can_delete":false,"product_type":"c1","uid":1003080,"ip_address":"","ucode":"8A59114C8345C8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/48/bb0136d1.jpg","comment_is_top":false,"comment_ctime":1586917464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586917464","product_id":100039001,"comment_content":"我认为重构的最好时机在于添加新需求要改动老代码的时候，一点一点地重构并测试。对于大型改动我现现阶段的水平还不够切末轻举妄动","like_count":0},{"had_liked":false,"id":205761,"user_name":"Cutler","can_delete":false,"product_type":"c1","uid":1228136,"ip_address":"","ucode":"2EDECFE039845B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","comment_is_top":false,"comment_ctime":1586736620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586736620","product_id":100039001,"comment_content":"重构还是经常在做，特别是微服务化之后重构业务代码就比较容易了，只需要一个一个服务重构就可以了，也可以把一个大服务拆分成多个服务重新实现。","like_count":0},{"had_liked":false,"id":203386,"user_name":"wai","can_delete":false,"product_type":"c1","uid":1439529,"ip_address":"","ucode":"29CE3BE148FB79","user_header":"https://static001.geekbang.org/account/avatar/00/15/f7/29/60e01017.jpg","comment_is_top":false,"comment_ctime":1586182532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586182532","product_id":100039001,"comment_content":"听老师文章中的概述，我确定了真的有无可救药的代码，我感觉我们现在的代码就已经无可救药了，查一个bug半天时间；不调试代码很难看出问题；代码层次10层以上，跟一遍代码都得十分钟。","like_count":0},{"had_liked":false,"id":201977,"user_name":"墨鱼","can_delete":false,"product_type":"c1","uid":1022720,"ip_address":"","ucode":"8FB5E4DCB8A024","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/00/654be3f7.jpg","comment_is_top":false,"comment_ctime":1585883906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585883906","product_id":100039001,"comment_content":"很少重构代码，都是不断在堆砌烂代码。不过今天看了专栏，还是觉得应该建立重构意识。","like_count":0},{"had_liked":false,"id":201198,"user_name":"面向百度编程","can_delete":false,"product_type":"c1","uid":1732780,"ip_address":"","ucode":"8FE04A019D71D1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/ac/83bc14c0.jpg","comment_is_top":false,"comment_ctime":1585731964,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585731964","product_id":100039001,"comment_content":"我在用友实习的时候，我说新写的类放哪个包下，同事跟我说，随便放，能跑通就行了，我就意识到了，要跑路，不能留，那代码简直了，自己写完后，就不管后面的人维护了","like_count":0},{"had_liked":false,"id":200210,"user_name":"洛子墟","can_delete":false,"product_type":"c1","uid":1036273,"ip_address":"","ucode":"CFC500D00F0B9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/f1/bf63fef6.jpg","comment_is_top":false,"comment_ctime":1585558111,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585558111","product_id":100039001,"comment_content":"最难的还是领导不支持！<br>因为投入产出不成正比，而且看不到明显的效果，还容易出bug。<br>所以领导不会把他作为一个KPI考核指标。","like_count":0,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239196,"discussion_content":"其实我觉得吧，领导支不支持不重要，重要的还在于你自己愿不愿意自己花时间去优化\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587283682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200208,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1585558026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585558026","product_id":100039001,"comment_content":"记得以前看到系统代码写的太差 ,想重构, 但因为2个原因, 1)分给自己的活也不少, 2)对业务不熟悉, 万一出问题就是我责任, 所以改了1&#47;3 左右, 怕担责 就放弃了. . . ","like_count":0},{"had_liked":false,"id":198223,"user_name":"Sissi.C","can_delete":false,"product_type":"c1","uid":1748046,"ip_address":"","ucode":"689AA6A8BE1687","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ac/4e/08b0644b.jpg","comment_is_top":false,"comment_ctime":1585419437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585419437","product_id":100039001,"comment_content":"终于解答了我对重构的困惑","like_count":0},{"had_liked":false,"id":196798,"user_name":"秋风画扇","can_delete":false,"product_type":"c1","uid":1132356,"ip_address":"","ucode":"5BCBC1422C51EC","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/44/964aa665.jpg","comment_is_top":false,"comment_ctime":1585314943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585314943","product_id":100039001,"comment_content":"开发新功能&#47;修bug的时候一定要有重构意识，而不是在原有代码上修修补补。见过太多的代码刚开始设计的很好，经过几次这带下来方法变得很长、类也变得很大，造成维护越来越难","like_count":0},{"had_liked":false,"id":195707,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1585213558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585213558","product_id":100039001,"comment_content":"中大型重构应该是一个系统性的工作，需要对业务了解，写可测试代码，尽量全面的单元测试，控制需求，敏捷型开发，避免项目周期太长带入隐患。<br>1、理清业务逻辑，设计好代码布局，规划重构范围。<br>2、利用合理的设计模式和原则解耦代码，处理代码的坏味道。<br>3、尽可能全的覆盖单元测试，并且在编写代码时要考虑代码的可测试性。<br>4、创建必要的mock，在无依赖的情况跑单元测试。<br>5、持续重构，日常成习惯，有助于思考，养成重构思维。<br>","like_count":0},{"had_liked":false,"id":195460,"user_name":"陈林","can_delete":false,"product_type":"c1","uid":1421796,"ip_address":"","ucode":"C9C54914973AE6","user_header":"https://static001.geekbang.org/account/avatar/00/15/b1/e4/32d54f52.jpg","comment_is_top":false,"comment_ctime":1585189519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585189519","product_id":100039001,"comment_content":"重构遇到问题，领导对重构认可度，产出和投入比，以及功能的回归验证覆盖率。比较难均衡。","like_count":0},{"had_liked":false,"id":193837,"user_name":"_关旭_","can_delete":false,"product_type":"c1","uid":1009052,"ip_address":"","ucode":"ADEB7BBC54035B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/9c/5c94692c.jpg","comment_is_top":false,"comment_ctime":1584971945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584971945","product_id":100039001,"comment_content":"重构很容易半途而废，改到一个通不过测试的版本，又接到紧急开发任务，最终只能revert。所以还是应该在日常开发中随手进行小重构，在有时间的时候为大重构做准备——考虑功能、分层和抽象是否合理，是否可扩展，是否解耦，并制定出合理的，可以量化的重构任务，重构每个模块后随手做ut，保证每一次的commit都是经过测试，可运行的","like_count":0},{"had_liked":false,"id":190089,"user_name":"悟","can_delete":false,"product_type":"c1","uid":1085006,"ip_address":"","ucode":"9F56AD21CCC7E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/4e/985caf6b.jpg","comment_is_top":false,"comment_ctime":1584601591,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1584601591","product_id":100039001,"comment_content":"我现在维护的项目已经是破窗效应的代码了……………………","like_count":0},{"had_liked":false,"id":185540,"user_name":"Sinvi","can_delete":false,"product_type":"c1","uid":1064018,"ip_address":"","ucode":"2A90976980CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","comment_is_top":false,"comment_ctime":1583625219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583625219","product_id":100039001,"comment_content":"我们的代码重构就是重写…","like_count":0},{"had_liked":false,"id":183740,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1583123587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583123587","product_id":100039001,"comment_content":"重构最怕的就是团队成员没有统一的共识，有的甚至半桶水就开始荡，导致系统越重构越乱，跟他解释，只会抬杠，我太难了。。","like_count":0},{"had_liked":false,"id":183137,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1582959395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582959395","product_id":100039001,"comment_content":"质量管理在一个正在运行的项目里很重要。我2016~2018年所在的老项目(2011年)就曾经面临质量危机，它是公司收益非常大的项目，危机是不得不解决的。<br>危机原因：技术债务堆积数年，开发已经陷入举步维艰的地步，大部分的技术同学一周都得忙两天时间修复线上bug。<br>危机解决方法：小步快跑地重构崩坏的代码，对于不方便修改的代码，直接开发一套新的兼容代码，旧的代码让其尘封起来。<br>解决关键：所有的小步快跑都要寻找反馈来证明有效；相信工具和自动化；<br>项目的是周更新的，迭代速度很快，有利于项目的改动快速得到反馈，甚至说每一个人的努力都可能在下一周得到回应。我那时在团队里以上线晚上的加班时间为自己的反馈，假如超过12点而原因是研发进度问题，则优先解决最重要的研发瓶颈问题。17年花了半年时间不断地重构，重构获得更多的时间后，又可以进行新一轮更难、持续时间更长的重构，团队重新进入良心的循环，最终技术债务逐渐基本还清，17年下半年版本质量重新稳定了。<br>后来我补充思考了一些关于防止代码重新陷入崩坏的问题。<br>1、在技术团队中强调代码的不仅仅是正确与否，有优劣之分，由于项目是快速迭代的，所以代码的可读性和稳定性优先于代码的性能问题。保证每个技术同学都知道这个原则，敢于对违反这个原则的代码自行进行重构（还得培训相关重构知识）。<br>2、在技术团队中，补充规范和文档、注释，把之前重构出来的成果以肉眼可见的形式留存下来，要求是一个实习生按照文档操作不会踩到坑。<br><br>现在该项目已经又继续稳定运行了两年多，最重要的成就感莫过于自己留下的框架和规范还有用地指导着新同学去继续这个支持这个项目。<br><br>现在新的项目依然有很多质量的问题需要处理，但是要处理的维度更高了，新项目的问题不仅仅是代码质量问题，而是更多是团队问题，这是我19年下半年最大的挑战。希望两年后回望也有我今日回望17年的成就感吧。","like_count":0},{"had_liked":false,"id":182754,"user_name":"悠游","can_delete":false,"product_type":"c1","uid":1222834,"ip_address":"","ucode":"4FDDDDF29AE3F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/b2/998448ca.jpg","comment_is_top":false,"comment_ctime":1582860213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582860213","product_id":100039001,"comment_content":"边重构，边生活","like_count":0},{"had_liked":false,"id":182563,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1582809539,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582809539","product_id":100039001,"comment_content":"有比较完善的单元测试才好做重构，不然一不小心改错了就尴尬。不过，最重要的是还是要有持续的思维。我觉得老师讲的这些理论课，最关键的还是培养好的思维习惯。","like_count":0},{"had_liked":false,"id":182371,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1582775115,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1582775115","product_id":100039001,"comment_content":"<br>不巧的是,在去年11月份,我就经历了一次大重构,整体,细致的重构了一年多开发的代码,在这次重构中,分为了两组,一组负责实现产品线的新需求,做到定时发版,另一组则是进行了代码的移植重构.<br>我们重新拆分了模块,让其更符合职责单一原则,而且由于我们系统是需要和设备进行交互的,所以将和设备交互的方法抽取出来,作为一个单独的模块,从而进行解耦,让发送模块和其他模块只依赖一个下发的规范,进行下发即可,整整从11月份,一直重构了一个月的时间,但是重构完成后,仍然不完美,这就需要去持续的进行重构,这次重构的原因,也是因为一些新同事,在整个项目中堆砌了一些烂代码,以至于占用硬件资源过高,运行过慢,而导致的,为了解决这些问题,也是整合了很多诸如线程池,异步转同步这样的设计技巧,和一些设计模式","like_count":0,"discussions":[{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278340,"discussion_content":"你们这个是整理+搬迁代码。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591175031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181706,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1582620918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582620918","product_id":100039001,"comment_content":"持续重构的意识确实更重要。","like_count":0},{"had_liked":false,"id":181176,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1582512100,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582512100","product_id":100039001,"comment_content":"还是蛮认同争哥的想法，自己编写相关业务代码的时候，看到有些地方能够小规模重构就会去做，但以后又发现改好的代码又有人开始堆砌了，真是难受。我觉得重构意识和一个好的技术氛围真的很重要，重构代码是一件痛苦一时、快乐一世的事情，可惜好多人都是直说不做。<br>PS：我觉得重构之前设计好测试防护网这个做法很正确，一个优秀的产品上线肯定少不了专业的自动化测试工程师的参与","like_count":0},{"had_liked":false,"id":181087,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1582472486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582472486","product_id":100039001,"comment_content":"持续改进，很难想象什么都重新写过","like_count":0},{"had_liked":false,"id":179253,"user_name":"否极泰来","can_delete":false,"product_type":"c1","uid":1439355,"ip_address":"","ucode":"C249173266251A","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","comment_is_top":false,"comment_ctime":1581945534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581945534","product_id":100039001,"comment_content":"对代码重构其实只要你对业务熟悉，并且领导支持，那你就可以重构了，不然就别重构了～","like_count":0},{"had_liked":false,"id":178213,"user_name":"Geek_7ead05","can_delete":false,"product_type":"c1","uid":1363830,"ip_address":"","ucode":"1FA18A1245200E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKHKe06oa6hIkIpIGib63GAU1M2q7HODOLwYZ1rJDOzDzmMlckQKgXzLaQJiaKSibJ0K2pCav8gLmLkg/132","comment_is_top":false,"comment_ctime":1581609677,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581609677","product_id":100039001,"comment_content":"重构要有计划，重构本身是持续性的。不太可能停下工作去重构，我也拒绝过同事的重构要求，因为有些时候看到烂代码某些猿内心的想法是直接重写，而这样的猿猿大多数也不一定就能重构出好代码","like_count":0},{"had_liked":false,"id":177910,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1581526916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581526916","product_id":100039001,"comment_content":"因为星际2服务器挂了，进不了游戏，所以来学习一下，他们的代码是时候重构了","like_count":0},{"had_liked":false,"id":177534,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1581411848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581411848","product_id":100039001,"comment_content":"1. 重构确实是一件好事情，但是在实际的执行过程当中，一般重视程度比较低，原因只有一个：对企业的业绩没有贡献<br>2. 单元测试来确保重构的执行效果，但是谁在意写单元测试呢？<br>3. 能很好执行重构的团队一般都是一个很不错的团队，最好是去一个风起正的团队，如果你想成长的话","like_count":0},{"had_liked":false,"id":176345,"user_name":"Edward Lee","can_delete":false,"product_type":"c1","uid":1228518,"ip_address":"","ucode":"156223F1D7E94A","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","comment_is_top":false,"comment_ctime":1581039612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581039612","product_id":100039001,"comment_content":"有一次在项目中尝试少量的重构，发现的问题是越改越多，越改越怕影响原来的功能，最后就 revert all 了<br>重构真的需要方法计划和编程设计功力及经验","like_count":0},{"had_liked":false,"id":173342,"user_name":"相逢是缘","can_delete":false,"product_type":"c1","uid":1060730,"ip_address":"","ucode":"CB299F53A95654","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/7a/ab6c811c.jpg","comment_is_top":false,"comment_ctime":1579508276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579508276","product_id":100039001,"comment_content":"打卡<br>一、重构的目的：<br>定义：“重构是一种对软件内部结构的改善，目的是在不改变软件的可见行为的情况下，使其更易理解，修改成本更低。”<br>1、在保持功能不变的前提下，利用设计思想、原则、模式、编程规范等理论来优化代码，修改设计上的不足，提高代码质量。<br>2、时刻保证代码质量的一个有效手段<br>3、优秀的架构或是代码不是一开始就能设计好的，需要持续演进<br>4、避免前期的过度设计<br>5、重构是对我们的学习的经典的设计思想、设计原则、设计模式、编程规范的一个综合应用<br>二、重构的对象<br>1、大型重构：对代码结构、模块、类与之间的关系、<br>大型重构的手段：分层、模块化、解耦、抽象可复用组件等<br>2、小规模低层次重构：针对代码细节重构<br>小型重构的手段：针对类、函数、变量等代码级别的重构<br>三、重构的时机：<br>融入到日常开发中<br>三、重构的方法：<br>大规模：有组织、有计划、分阶段小步快跑<br>小规模：随时进行","like_count":0},{"had_liked":false,"id":172721,"user_name":"wakaka","can_delete":false,"product_type":"c1","uid":1471508,"ip_address":"","ucode":"835A7341577D3B","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/14/ea854bfc.jpg","comment_is_top":false,"comment_ctime":1579263555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579263555","product_id":100039001,"comment_content":"第一版很难写出完美的代码，人无完人，更何况代码，坚持持续重构。","like_count":0},{"had_liked":false,"id":171891,"user_name":"亚伦碎语","can_delete":false,"product_type":"c1","uid":1014505,"ip_address":"","ucode":"F32E5E1B63CC90","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/e9/da5c0203.jpg","comment_is_top":false,"comment_ctime":1579050447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579050447","product_id":100039001,"comment_content":"重构最后变成重写了","like_count":0},{"had_liked":false,"id":171649,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1578986576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578986576","product_id":100039001,"comment_content":"重构能力很重要，但持续重构意识更重要，突然想起一首歌，只要人人都献出一份爱，世界将变成美好的人间。重构在平时，重构在于内心驱动。","like_count":0},{"had_liked":false,"id":171648,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1578986464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578986464","product_id":100039001,"comment_content":"重构能力很重要，但持续重构意识更重要","like_count":0},{"had_liked":false,"id":171255,"user_name":"睁眼看世界","can_delete":false,"product_type":"c1","uid":1206388,"ip_address":"","ucode":"F94CF34BC5B2AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/74/461b202d.jpg","comment_is_top":false,"comment_ctime":1578886938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578886938","product_id":100039001,"comment_content":"   重构容易，难得是如何有效的测试，出现过重构过后引入新bug问题。主要要培养意识，编码过程尽量按照统一规范，尽量避免千人千面，持续的code review、持续的重构，保持当前代码最合理化。","like_count":0},{"had_liked":false,"id":171197,"user_name":"相逢是缘","can_delete":false,"product_type":"c1","uid":1060730,"ip_address":"","ucode":"CB299F53A95654","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/7a/ab6c811c.jpg","comment_is_top":false,"comment_ctime":1578879567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578879567","product_id":100039001,"comment_content":"打卡<br>一、重构的目的：<br>定义：“重构是一种对软件内部结构的改善，目的是在不改变软件的可见行为的情况下，使其更易理解，修改成本更低。”<br>1、在保持功能不变的前提下，利用设计思想、原则、模式、编程规范等理论来优化代码，修改设计上的不足，提高代码质量。<br>2、时刻保证代码质量的一个有效手段<br>3、优秀的架构或是代码不是一开始就能设计好的，需要持续演进<br>4、避免前期的过度设计<br>5、重构是对我们的学习的经典的设计思想、设计原则、设计模式、编程规范的一个综合应用<br>二、重构的对象<br>1、大型重构：对代码结构、模块、类与之间的关系、<br>大型重构的手段：分层、模块化、解耦、抽象可复用组件等<br>2、小规模低层次重构：针对代码细节重构<br>小型重构的手段：针对类、函数、变量等代码级别的重构<br>三、重构的时机：<br>融入到日常开发中<br>三、重构的方法：<br>大规模：有组织、有计划、分阶段小步快跑<br>小规模：随时进行","like_count":0},{"had_liked":false,"id":170876,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1578746496,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578746496","product_id":100039001,"comment_content":"在项目开发中，对于已经运行了五六年的系统，我们其实没什么经验去做重构的，加个功能都可能搞坏；不过我的老板对于核心的模块的质量确实是在持续重构，他看到代码有重构的机会的时候就会立即下手，我应该向他学习这种态度，并努力锻炼出持续重构的实力。","like_count":0},{"had_liked":false,"id":170811,"user_name":"Yangjing","can_delete":false,"product_type":"c1","uid":1018061,"ip_address":"","ucode":"D88DFD4958D07C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/cd/2c3808ce.jpg","comment_is_top":false,"comment_ctime":1578730164,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578730164","product_id":100039001,"comment_content":"重构有个前提是要良好的单元测试，不然重构后可能一堆bug。","like_count":0},{"had_liked":false,"id":170809,"user_name":"小刀","can_delete":false,"product_type":"c1","uid":1351063,"ip_address":"","ucode":"94DF8C45E09E42","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaByN5IfYbE9jMtWrtTDXtPEIHeV77KW1p7ZkiasiaGgA50VXaibo4fbp5ib2JkFP3iaIe4AUudLibufkEIofu5euCNHg/132","comment_is_top":false,"comment_ctime":1578729524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578729524","product_id":100039001,"comment_content":"边写边改","like_count":0},{"had_liked":false,"id":170771,"user_name":"斜杠ing...","can_delete":false,"product_type":"c1","uid":1676247,"ip_address":"","ucode":"C4AE866AC8B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d7/93c8f92a.jpg","comment_is_top":false,"comment_ctime":1578711162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578711162","product_id":100039001,"comment_content":"重构最难的是领导认为很简单，所以我刚入职2个月提出辞职了。后悔啊，应该入职一个星期就辞职，浪费生命啊！","like_count":0},{"had_liked":false,"id":170726,"user_name":"郑童文","can_delete":false,"product_type":"c1","uid":1030733,"ip_address":"","ucode":"3D193715CB8549","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/4d/7ba09ff0.jpg","comment_is_top":false,"comment_ctime":1578675160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578675160","product_id":100039001,"comment_content":"希望老师能提供一些重构练习作为作业让我们实践所学的设计原则，并提供答案和讲解，谢谢！","like_count":0},{"had_liked":false,"id":170197,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1578548263,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578548263","product_id":100039001,"comment_content":"提示我有敏感词，我分开提交了：<br><br>2. 经验也有。我是聊天功能的开发，在我将设计模式运用上的时候，经常出现的问题就是寻找不到用户，以致于该通知的地方没有通知，让用户没有参与感。<br>3. 重构不是一朝一夕，需要反复测试，一定不能太“相信”自己","like_count":0},{"had_liked":false,"id":170196,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1578548201,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578548201","product_id":100039001,"comment_content":"代码重构真的是一件任重道远的事情。我在现在的公司，经常和老大一起重构代码，感觉学习到了很多。<br><br>1. 我们会在功能上线之后第二个版本左右，就进行反思重构。印象中目前重构效果最好的就是把代码更设计模式化。原先为了赶进度，一些代码乱，没有实现功能单一，把业务、数据库、判断逻辑等等都在一起，代码质量不高。","like_count":0},{"had_liked":false,"id":170088,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1578528136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578528136","product_id":100039001,"comment_content":"当代码烂到一定程度之后，你会发现牵一发动全身，改动一点都不小，更可恶的是还没有单元测试，你还要现人工确认是否改错，或者添加测试。很多时候都是改着改着发现，当前的改动需要搁置，先拆分出另外一件小事改动","like_count":0},{"had_liked":false,"id":169933,"user_name":"柴柴777","can_delete":false,"product_type":"c1","uid":1032484,"ip_address":"","ucode":"5208B935ECB6F7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/24/0ea08c9e.jpg","comment_is_top":false,"comment_ctime":1578475352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578475352","product_id":100039001,"comment_content":"刷了一便评论还是略感庆幸 ,大哥给安排的任务除了写需求之外还有重构优化代码,主站的部分module和另一个小项目的部分也放手让我改,然后review给我提意见,,最近有点改不动了就不知道咋改了,来刷设计模式企图得到启发","like_count":0},{"had_liked":false,"id":169910,"user_name":"W","can_delete":false,"product_type":"c1","uid":1724021,"ip_address":"","ucode":"2F9FA347E982F9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/4e/75/4c040060.jpg","comment_is_top":false,"comment_ctime":1578470817,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578470817","product_id":100039001,"comment_content":"领导认为只要不出错，就别整幺蛾子了","like_count":0},{"had_liked":false,"id":169733,"user_name":"varotene","can_delete":false,"product_type":"c1","uid":1004441,"ip_address":"","ucode":"B37E9B6D35090C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/99/56f148bc.jpg","comment_is_top":false,"comment_ctime":1578424977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578424977","product_id":100039001,"comment_content":"这边文章很有启发和帮助。读了之后，我融合了些自己的观察。我对重构的一点观察和总结：重构的最终目的还是为了实现商业目标：用更少的钱，获得更大的利益。对于不同性质的软件，重构的重要性有所不同。很多上层的app软件，往往生命周期不长，而且前端技术迭代很快，很多时候系统性重构不太多，小范围重构比较合理。很多时候大家更愿意重新写一个新系统，叫做2.0或者3.0。而且重构也没有设计新系统容易得到领导支持和拿到credit。对于更底层的，基础的部件，由于使用更频繁，质量要求更高，所以重构的价值更大。","like_count":0},{"had_liked":false,"id":169460,"user_name":"寒溪","can_delete":false,"product_type":"c1","uid":1001970,"ip_address":"","ucode":"67B9F1A1C15A20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","comment_is_top":false,"comment_ctime":1578360295,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1578360295","product_id":100039001,"comment_content":"重构需要勇气，在生产环境运行正常的情况下，往往没有重构的勇气。<br>1.需要时间，但时间被各种需求占满<br>2.容易出bug，需要协调测试资源<br>3.历史代码业务逻辑不了解，不知道该去该留。<br><br>","like_count":0},{"had_liked":false,"id":169203,"user_name":"JamesPxy","can_delete":false,"product_type":"c1","uid":1320179,"ip_address":"","ucode":"558D707463589D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q2LT8JFWSghiaVbMMOkOkLnuibEqG2YOyEdCA5icEZH3Qpd9pL23mpzic9tWwyiciaBicE4YPMVnITOodulwG2SS75r2w/132","comment_is_top":false,"comment_ctime":1578292753,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578292753","product_id":100039001,"comment_content":"实际情况，有时间重构之前自己实现功能的旧代码，也不敢轻易动手，怕改出问题来，带来莫须有的线上问题，毕竟这种情况只有自己去测试，风险比较大。说到底还是不够自信和怕事。最好是项目组领导支持重构，大家齐心协力去重构来得比较稳妥。还有就是需求设计阶段尽可能考虑全面合理，少挖坑。习惯很重要！","like_count":0},{"had_liked":false,"id":169173,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1578284679,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578284679","product_id":100039001,"comment_content":"一直在重构的上，重构之前还干了重写。<br>踩过因为动作太大，改动范围太广导致线上bug的情况。<br>关键是怎么保证重构不影响原来的业务行为，自动化测试不全，单元测试难写这些，期待后续课程","like_count":0},{"had_liked":false,"id":169050,"user_name":"居培波","can_delete":false,"product_type":"c1","uid":1437396,"ip_address":"","ucode":"27A5A8D9D4682B","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/d4/204d0c6d.jpg","comment_is_top":false,"comment_ctime":1578267563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578267563","product_id":100039001,"comment_content":"最常见的错误是漏业务逻辑，重构前一定要仔细梳理","like_count":0},{"had_liked":false,"id":168952,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1578224510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578224510","product_id":100039001,"comment_content":"目前进行的重构大多是针对于小规模的重构，都是根据clean code里面所说的，尽可能抽取方法，避免大函数过于臃肿，命名规范，写好测试等。其次就是在业务不忙的时候更换过框架，数据库等","like_count":0},{"had_liked":false,"id":168927,"user_name":"Jackie","can_delete":false,"product_type":"c1","uid":1179920,"ip_address":"","ucode":"B853ECB3E962C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/01/10/cb36bfed.jpg","comment_is_top":false,"comment_ctime":1578218283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578218283","product_id":100039001,"comment_content":"终于把落下的课都不上来了，后面要实时跟进老师的脚步了。<br><br>重构的意义还是很大，有重构的习惯对于自己提升技术实力很重要，有些看似在存在面试题里面的设计模式完全可以在重构的时候派上用场。<br><br>同时，部门有重构的习惯，也会形成比较好的技术氛围。看到好味道的代码，大家都会争相效仿，不会也不好意思在整洁的代码丢下“老鼠屎”。反之，看到坏味道的代码，大家就有可能群体性破罐子破摔。","like_count":0},{"had_liked":false,"id":168878,"user_name":"奔跑的小孩","can_delete":false,"product_type":"c1","uid":1304259,"ip_address":"","ucode":"0053193F7A9870","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/21uTMWr7bx5qMibp2hwmGvLbYuj5Aic2dqD3futlNo25eDGDt4t7zzN9cdnj7cVGwTot1U4AyADfWUpqjq1SicgWQ/132","comment_is_top":false,"comment_ctime":1578210248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578210248","product_id":100039001,"comment_content":"1.要具有重构意识，阶段性重构代码，重构分为大重构（模块重新划分、类与类之间关系重构等）和小重构（通过设计模式或者代码优化程序等 ）<br>2.重构情况下最好不要改变外部的代码调用规则，兼容之前的代码<br>3.小跑试错，快速迭代，不要上来就是大而全的迭代","like_count":0},{"had_liked":false,"id":168844,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1578197063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578197063","product_id":100039001,"comment_content":"以前在写代码时只偏重于代码是否能跑通，而对代码质量关心的比较少。而团队没有强调这种意识，即时有，给出的概念也比较抽象，很难落地。比较幸运的是换了好的平台，解除到了更多的东西，这些东西自己也在慢慢接触。知道了除了写代码之外，还要思考如何写出“好代码”。持续重构是一个在实际开发中不断提升代码质量的好方法。体会最深的应该是在前1个月自己从零开发的一个模块中就使用到了这种方式来提升代码质量（主要是提高可维护性，可读性）。当时有个类代码写的很多，逻辑很复杂。大约超过了1000了，写了很多大函数（其实在一开始就应该尽量避免写大函数），在实现完基本功能后，一有时间，自己就重新去读自己写的代码，看到不好的地方（如命名规范，超大函数等）就进行修改，重构。通过这样的实践，深刻体会到了“时刻具有持续重构意识，才能避免开发初期就过度设计，避免代码维护的过程中质量的下降”。","like_count":0},{"had_liked":false,"id":168816,"user_name":"L🚲🐱","can_delete":false,"product_type":"c1","uid":1577856,"ip_address":"","ucode":"08A012739614DE","user_header":"https://static001.geekbang.org/account/avatar/00/18/13/80/2c9da1b1.jpg","comment_is_top":false,"comment_ctime":1578192004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578192004","product_id":100039001,"comment_content":"如楼上所说 重构最大问题是领导不支持，做的政府项目， 要求稳定就行，代码质量差的不行，很无奈😂","like_count":0},{"had_liked":false,"id":168809,"user_name":"yang","can_delete":false,"product_type":"c1","uid":1227722,"ip_address":"","ucode":"45C1BE2D4AD72B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/ca/86d58e40.jpg","comment_is_top":false,"comment_ctime":1578191113,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578191113","product_id":100039001,"comment_content":"事实上对代码的平时的优化与改进还好，大的重构要考虑清楚，目标是什么。这个目标不好把。是提升了多少稳定性？交付效率？还是提升了连接效率？要考虑清楚，否则投入很多人力，重构完成，也不一定是没有bug,还有很多技术的重构最好和产品的重构一起。如果是小的技术功能改进，好的办法是ab测试，慢点切流量. ","like_count":0},{"had_liked":false,"id":168733,"user_name":"一壶浊酒","can_delete":false,"product_type":"c1","uid":1145530,"ip_address":"","ucode":"5D90F8F8121BBE","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/ba/8545f2d7.jpg","comment_is_top":false,"comment_ctime":1578147831,"is_pvip":true,"replies":[{"id":"65952","content":"加油~","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578489391,"ip_address":"","comment_id":168733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578147831","product_id":100039001,"comment_content":"就拿我们公司的系统来说，之前两个团队开发整合，就是因为没有进行好的规范，并且没有进行持续重构，再加上人员的走动，导致之后的人在接手的时候碰到新的需求，也不知道是否有可复用的代码，就直接再写新的接口，最终导致整个系统变得异常笨重，重复的接口越来越多。后来因为要迁移部署环境，进行了一次大型的重构，公司安排了新来的员工来负责，结果业务不熟悉，也就只能按照新部署要求，做了一些简单的调整，代码依旧越来越复杂，所以我觉得持续重构的意识真的很重要，看了争哥的专栏之后，赶紧对以前的代码重新再优化一遍","like_count":0},{"had_liked":false,"id":168619,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1578124824,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578124824","product_id":100039001,"comment_content":"现在我们代码乱的一塌糊涂，这个项目是后来接手的，项目开发人员变了好几轮，里面堆得一大堆代码。现在做个设计改动，得动用一个团队的力量一个月的时间","like_count":0},{"had_liked":false,"id":168561,"user_name":"平风造雨","can_delete":false,"product_type":"c1","uid":1014349,"ip_address":"","ucode":"F9EE4704F31E22","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/4d/b0228a1a.jpg","comment_is_top":false,"comment_ctime":1578110523,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578110523","product_id":100039001,"comment_content":"我猜大多数公司都是没有很好的重构规划的，因为大家都不认为重构的工作量是工作量。所以这需要工程师在完成业务需求的时候自觉重构，所以本身对重构就没有明确的要求和准确的定量分析，架构师和资深工程师需要协调资源去有计划的组织重构工作，并且经常性的代码走读review，让小规模重构的意识，代码设计的意识在团队内部形成习惯。本质上这就是技术管理工作很重要的一部分。","like_count":0},{"had_liked":false,"id":168559,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1578110343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578110343","product_id":100039001,"comment_content":"1.持续重构的前提是持续集成和自动化测试，没有这两个前提，不要谈持续重构<br>2.尽量保持小规模的持续重构，避免大规模重构，在项目启动时就要把重构的时间考虑进去<br>3.罗马不是一天建成的，不要过度设计，运用迭代思想完善产品，在每一次迭代时重构上次代码","like_count":0},{"had_liked":false,"id":168531,"user_name":"Arthur.Li","can_delete":false,"product_type":"c1","uid":1005824,"ip_address":"","ucode":"EC2436A5136C13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/00/6d14972a.jpg","comment_is_top":false,"comment_ctime":1578105221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578105221","product_id":100039001,"comment_content":"重构还是持续小范围比较好，当坏代码积累多了，就再也不想去碰了","like_count":0},{"had_liked":false,"id":168530,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1578105209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578105209","product_id":100039001,"comment_content":"我记得当时两个功能一模一样我刚刚重构了以后  策划把另外一个功能的需求改了 改了 改了 改了  改了 改了","like_count":0},{"had_liked":false,"id":168390,"user_name":"佳民","can_delete":false,"product_type":"c1","uid":1000433,"ip_address":"","ucode":"A5626BAEC96945","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/f1/3c69eb09.jpg","comment_is_top":false,"comment_ctime":1578059768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578059768","product_id":100039001,"comment_content":"初级工程师通过实践重构可以大大提升编程能力，树立良好的编程思维和养成良好的代码习惯。","like_count":0},{"had_liked":false,"id":168341,"user_name":"馒头","can_delete":false,"product_type":"c1","uid":1137876,"ip_address":"","ucode":"01864DBAAC54A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/d4/56b687c5.jpg","comment_is_top":false,"comment_ctime":1578050657,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578050657","product_id":100039001,"comment_content":"对着一个靠滥用缓存，一个API调用上千次DB的代码重构，就三个字，不敢动。。。","like_count":0,"discussions":[{"author":{"id":1362023,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","nickname":"John Bull","note":"","ucode":"2A1B4191CD87B8","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357812,"discussion_content":"不是本人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615872556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168297,"user_name":"堵车","can_delete":false,"product_type":"c1","uid":1145404,"ip_address":"","ucode":"7BC1E50A4F8D3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","comment_is_top":false,"comment_ctime":1578043450,"is_pvip":false,"replies":[{"id":"65961","content":"先重构练练手吧，实在不行再重写。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578490499,"ip_address":"","comment_id":168297,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578043450","product_id":100039001,"comment_content":"数据库字段乱复用，对话数据和操作数据放同一个表，接口耦合，大量doEveryThing方法，命名几乎看不懂，层级循环调用。节后要作为公司重点规划的项目去做，五个人一年的开发量。我心里慌得一逼！这种项目是不是该重写了？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480184,"discussion_content":"先重构练练手吧，实在不行再重写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578490499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168284,"user_name":"Ken张云忠","can_delete":false,"product_type":"c1","uid":1134288,"ip_address":"","ucode":"D0BAC9FC17DE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","comment_is_top":false,"comment_ctime":1578041631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578041631","product_id":100039001,"comment_content":"对于企业<br>重构是延缓代码质量变腐的有效手段,使代码可以长期保持易读易维护易扩展的状态,最终既可以做到降低企业的成本开支又可以做到更好的支撑业务的顺利开展,另外重构还可以迭代出优秀的产品和技术,提升企业的品牌软实力.<br>重构是个日常持续的过程,需要营造一种重视代码质量的氛围,技术团队的每个人都该要参与进来.<br>对于个人<br>重构可以锻炼技术人员的内功的修为,提升对业务和技术认知的,深入理解掌握经典的设计思想、设计原则、设计模式、编程规范的精髓,提升对复杂系统的应对能力.<br>每个技术人时刻都该要正确的重构意识,不断提升对技术认知的理解,平常工作中对代码进行持续重构,要把工作当做一份事业,用心投入到工作当中,持续坚持最终肯定会有意想不到的惊喜收获.<br><br>重构经验:<br>两年前拜读过重构那边书,了解到了一些代码坏味道,可以使用IDE提供的一些工具进行重构,例如抽取变量、属性、方法等;另外代码命名要见名知意,代码不要太长篇幅应控制在屏幕可显示范围内.<br>重构或重写某个功能时,必须要先理解业务功能的语义,然后才进行分析设计.<br><br>重构遇到问题:<br>团队不重视代码质量,没有重构意识,领导也不关注,如何让团队成员都建立起重构意识,另外每个人的认识不同又如何统一正确的重构意识.","like_count":0},{"had_liked":false,"id":168255,"user_name":"东方奇骥","can_delete":false,"product_type":"c1","uid":1354850,"ip_address":"","ucode":"DEE7085F7E55A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/62/37912d51.jpg","comment_is_top":false,"comment_ctime":1578038375,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578038375","product_id":100039001,"comment_content":"确实，重构真正做起来还是难，领导说这个模块都稳定了，别改了，其实这个模块代码之垃圾，加个功能之痛苦，就是应该持续重构了","like_count":0},{"had_liked":false,"id":168171,"user_name":"天草二十六","can_delete":false,"product_type":"c1","uid":1360712,"ip_address":"","ucode":"3165EE3007527B","user_header":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","comment_is_top":false,"comment_ctime":1578025104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578025104","product_id":100039001,"comment_content":"求稳定，做新需求，，迟迟对重构不紧急需要","like_count":0},{"had_liked":false,"id":168160,"user_name":"糖醋排骨","can_delete":false,"product_type":"c1","uid":1620507,"ip_address":"","ucode":"00ED918A220077","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epTx3WM1A1hxjOmtfQNa0QQ01QUlhaaSHrZ3OcnzYibY1gFeNFAcZ7yQpxZsbyk7D9m6JA9X5j44tA/132","comment_is_top":false,"comment_ctime":1578022473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578022473","product_id":100039001,"comment_content":"重构完了，自动化平台搭建完以后，就可以开始裁员了","like_count":0},{"had_liked":false,"id":168155,"user_name":"Eden Ma","can_delete":false,"product_type":"c1","uid":1457408,"ip_address":"","ucode":"755312F0D154F9","user_header":"https://static001.geekbang.org/account/avatar/00/16/3d/00/7daa7403.jpg","comment_is_top":false,"comment_ctime":1578021522,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578021522","product_id":100039001,"comment_content":"小规模重构感觉可以自己完成业务代码之后就开始关注重构.大规模重构感觉就有点难了,需要上级团队的支持.","like_count":0},{"had_liked":false,"id":168140,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1578018637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578018637","product_id":100039001,"comment_content":"1. 持续重构是程序员良好的习惯,如同好士兵遵守军规一样<br><br>​    写出阅读性,维护性,扩展性好的代码应该是每一位职业程序员(Professional)的基本追求,也可以说是职业道德.没人愿意维护烂代码,但要是项目中所有成员都很在意&quot;好的代码&quot;这件事情,工作就会变得愉快,项目也会朝着好的方向推进.持续重构指日常开发中小规模,低层次的重构,对方法参数,注释,命名规范,消除超大类,提取重复代码等细节进行打磨.除非项目框架存在硬伤性的问题需要大规模高层次的重构,通过不断的小规模,低层次重构,可以有效提高代码的质量.<br><br><br><br>2. 如果可以小规模低层次的重构,就要避免大规模高层次的重构<br><br>​    大规模高层次的重构指模块划分,类之间交互等问题的解决方式,通常需要抽象的设计思想,设计原则,设计模式作为武器.大规模高层次的重构由于改动较大,需要大量时间梳理业务,执行重构流程,以及单元测试.除非到了难以挽回的地步,尽量不要进行大规模高层次的重构,一是风险较大,二是影响项目进度(时间就是金钱).<br><br><br><br>​    如果在日常开发中注重小规模,低层次的重构,在一定程度上可以避免进行大规模高层次的重构.中国有句古话:防微杜渐,指当错误的思想和行为刚有苗头或征兆时，就加以预防与制止，坚决不让它继续发展。出自《后汉书·丁鸿传》：“若敕政则躬，杜渐防萌，则凶妖消灭，害除福凑矣。”","like_count":0},{"had_liked":false,"id":168132,"user_name":"Rain","can_delete":false,"product_type":"c1","uid":1238221,"ip_address":"","ucode":"6A270D922A3B9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","comment_is_top":false,"comment_ctime":1578017007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578017007","product_id":100039001,"comment_content":"最近一段时间都是在做重构. 其中包括了大规模重构, 也包括了中型的重构. 小范围重构比如一个类内, 两三个类之间, 这种一般都随手做了, 但大型和中型重构确实不好做.<br>1. 我重构的目的, 改善既有代码, 使其内聚解耦方便扩展, 以适应新的业务发展需要;<br>2. 我重构的对象, 一系列相关的模块, 一个大模块套着几个小模块, 各个小模块之间互相关联;<br>3. 我重构的时机, (恰到好处) 为适应新的业务发展需要, 动态添加和组合模块;<br>4. 我重构的方法, 小步快跑是一个很好的方式, 但我用不了, 因为既有代码耦合度有点高, 改一个小模块就要触动到大模块中的各个小模块, 所以不得不一下子迈个大步子; 单测和自动化测试肯定是保证重构结果准确性的好方法, 但不是每个团队或项目都有; 但但是并不是没有他们就不能重构, 只是会对重构的程序猿以及协助测试的测试媛有较高的要求, 我重构完之后还是出错不少, 我分析主要原因有两个, 第一个是我本身对业务没有完全吃透某些地方只能按照既有代码按照对代码的理解来重构; 第二是既有代码不是很熟悉, 以至于某些地方做错了 或 少做了. 这些问题包括如何引入合适的设计模式来满足最新的业务需要都不是最令我印象深刻的, 我在做重构之前跟领导商量了如何尽可能的小步快跑的方式, 结果是没有, 所以只能在重构分支做完完再合并到开发主干. 而主干正被若干其他功能分支依赖并且开发, 这样就造成了变重构变开发变处理冲突, 再重构再开发再处理冲突的过程. 有点痛苦但算是经历过了吧, 在这儿感谢下我们领导对我工作的支持. 嘿嘿谢谢领导.","like_count":0},{"had_liked":false,"id":168117,"user_name":"郡鸿","can_delete":false,"product_type":"c1","uid":1241201,"ip_address":"","ucode":"7A6298D288E078","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/71/c7b0a1f8.jpg","comment_is_top":false,"comment_ctime":1578015720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578015720","product_id":100039001,"comment_content":"最近正好在重构一个银行类业务的代码，之前的代码是经过很多人的堆砌，很多不同的功能都写在一个类里面，导致那个类有几千行代码，而且大量的重复代码。我接手之后，首先是按照不同的功能，划分了不同的模块。其次是把大量的重复代码单独抽离了出去，进行了公共的调用。这样一来，结构上更独立了，耦合度降低了很多，当然还有很多其他可以重构的地方。","like_count":0},{"had_liked":false,"id":168110,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1578014902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578014902","product_id":100039001,"comment_content":"最近打算重构一波前同事留下的代码，有点无从下手。怎么说呢，不知道为什么把所有类都用一个工厂来生成，登录、注册、退出…四五个功能对外只暴露了一个接口。打算先把大工厂拆开吧🤔","like_count":0},{"had_liked":false,"id":168103,"user_name":"liu_liu","can_delete":false,"product_type":"c1","uid":1019138,"ip_address":"","ucode":"24283806A07759","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/02/6a16058a.jpg","comment_is_top":false,"comment_ctime":1578013937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578013937","product_id":100039001,"comment_content":"1. 功能点的梳理。大型重构中会涉及到很多功能模块，整理出完整的功能点，从而避免重构中的遗漏。<br>2. 熟悉理清各模块的业务逻辑，不要一上手就开始改动。<br>3. 重构后各个模块的测试。<br>4. 新功能的同步。<br>5. 容灾开关，老旧代码的切换，降低上线风险。<br>","like_count":0},{"had_liked":false,"id":168097,"user_name":"一名小学生","can_delete":false,"product_type":"c1","uid":1137292,"ip_address":"","ucode":"5C73082E6B6370","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/8c/1fec5fa2.jpg","comment_is_top":false,"comment_ctime":1578013361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578013361","product_id":100039001,"comment_content":"打开<br>持续重构很重要，想等到最后大重构，结果基本就是无从下手而放弃。","like_count":0},{"had_liked":false,"id":168091,"user_name":"Kang","can_delete":false,"product_type":"c1","uid":1237655,"ip_address":"","ucode":"088A8DA0A16BDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","comment_is_top":false,"comment_ctime":1578012764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578012764","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":168087,"user_name":"Frode","can_delete":false,"product_type":"c1","uid":1503064,"ip_address":"","ucode":"B7B8DBF9980EA1","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/58/d05ec302.jpg","comment_is_top":false,"comment_ctime":1578012278,"is_pvip":true,"replies":[{"id":"65964","content":"重构之后 不管有没有单元测试，都要让测试人员重新测试一把，不然风险太大了，一旦出问题，会被打3.25的😂","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578490841,"ip_address":"","comment_id":168087,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578012278","product_id":100039001,"comment_content":"我也是像改以前的垃圾代码，进行重构，但现在我们项目中没有单元测试，有点不敢做太多的改动，怕影响功能，是不是重构后需要测试进行一下测试？我只能在修改功能的时候忍不住小重构一下，这样我也不怕引来bug，本来也要测试←_←","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480131,"discussion_content":"重构之后 不管有没有单元测试，都要让测试人员重新测试一把，不然风险太大了，一旦出问题，会被打3.25的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578490841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168080,"user_name":"Geek1173","can_delete":false,"product_type":"c1","uid":1732366,"ip_address":"","ucode":"865F0E493E7EDC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkFvuiaEntOvrP5Pv2CSBiayjRULB7QdoaDeozRl4hhSbWSP9flNhHu1lPCwM1Yg22bGyEI5iaIS3icQ/132","comment_is_top":false,"comment_ctime":1578011715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578011715","product_id":100039001,"comment_content":"重构这件事情难度还是比较大的。由于项目处于运营状态，一处改动都会牵涉到测试，同事也担心重构带来的风险无法意料，虽然都是本着不改变功能的目的。","like_count":0},{"had_liked":false,"id":168075,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1578011289,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1578011289","product_id":100039001,"comment_content":"持续重构确实是个非常值得做的事情，而且我感觉不光资深工程师，技术leader要做，初级工程师也要建立这样的意识。我们很多时候在平时的开发过程中被各种业务需求追着跑，所以代码质量下降很厉害，甚至单元测试都很少写，所以不定期的随时小重构是非常必要的。还有一种情况是最开始会有组内大佬关注代码质量架构问题，会去code review，可是等大佬离职，就没人关注代码质量了，所以全员建立重构意识以及关注代码质量是很必要的。","like_count":0},{"had_liked":false,"id":168074,"user_name":"醉比","can_delete":false,"product_type":"c1","uid":1248399,"ip_address":"","ucode":"79E65F62BE7809","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/8f/4ebd303a.jpg","comment_is_top":false,"comment_ctime":1578011196,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578011196","product_id":100039001,"comment_content":"需求上线初期是经过测试同学测试的，后续重构也就不安排资源来测试了，这时候心里就会犯嘀咕别改出什么问题，慢慢重构也就搁置了，可能是没有把单测这些事情做好导致重构没底。","like_count":0},{"had_liked":false,"id":168072,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1578011079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578011079","product_id":100039001,"comment_content":"重构的意义:防止代码腐化到无可救药并且避难过度设计。建立持续重构的意识，同时也要有足够的单元测试作为前提，才能保证重构的正确性。","like_count":0},{"had_liked":false,"id":168067,"user_name":"梦醒十分","can_delete":false,"product_type":"c1","uid":1043585,"ip_address":"","ucode":"33830A5A73DDF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/81/2127e215.jpg","comment_is_top":false,"comment_ctime":1578010446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578010446","product_id":100039001,"comment_content":"做重构要眼高手低。只有眼光到了，才知道如何修改。","like_count":0},{"had_liked":false,"id":168060,"user_name":"Chen","can_delete":false,"product_type":"c1","uid":1503113,"ip_address":"","ucode":"C1128558AB5BC4","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/89/8c73a24d.jpg","comment_is_top":false,"comment_ctime":1578009276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578009276","product_id":100039001,"comment_content":"我们项目大刀阔斧的重构了几次。可能是像老师说的缺少规划，导致没有一个产品敢把重构的代码上线，最后不了了之。","like_count":0},{"had_liked":false,"id":168055,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1578008746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578008746","product_id":100039001,"comment_content":"代码会越来越乱<br>代码不是一开始就完美<br>防止过度设计<br>提升个人能力","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510059,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168046,"user_name":"brianhuuu","can_delete":false,"product_type":"c1","uid":1010457,"ip_address":"","ucode":"AE59FC647F7726","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/19/dc6f2063.jpg","comment_is_top":false,"comment_ctime":1578003851,"is_pvip":false,"replies":[{"id":"65261","content":"😂","user_name":"作者回复","comment_id":168046,"uid":"1190123","ip_address":"","utype":1,"ctime":1578009786,"user_name_real":"王争"}],"discussion_count":36,"race_medal":0,"score":"1745334726027","product_id":100039001,"comment_content":"重构最难的还是领导不支持","like_count":407,"discussions":[{"author":{"id":1235660,"avatar":"https://static001.geekbang.org/account/avatar/00/12/da/cc/46315a43.jpg","nickname":"张旺","note":"","ucode":"2EF771A6E46DDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300371,"discussion_content":"是的,就是方法名","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598066348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188906,"avatar":"https://static001.geekbang.org/account/avatar/00/12/24/2a/33441e2b.jpg","nickname":"汝林外史","note":"","ucode":"3C66C0F0537A99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271253,"discussion_content":"方法名？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590110196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168081,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1578011936,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"1049550032160","product_id":100039001,"comment_content":"前段时间刚重构了一个功能模块。该模块可以说是祖传代码。里面堆砌着各种判断条件，就是所谓的箭头型代码。我接手这个功能重构的<br>1.把代码读一遍和跑一遍，理解里面的需求。尽量画一个流程图。<br>2.建立防护网。将需求拆分之后，针对每个拆分的业务点写单元测试。<br>4.开始重构，解耦逻辑，设计方法的时候尽量让职业单一，类与类之间尽量符合迪米特原则，有依赖关系的类尽量只依赖类的特定方法。我觉得比较基础也是比较重要一点。不要有重复代码。命名要规范，类的各个职业要清晰。重构过程中，其实也要时不时的识别代码的坏味道。尽然是重构，那么肯定要比不重构之前肯定要更好。<br>5.重构完成之后，通过防护网的测试。<br><br>当天重构代码上线之后，基本上没有问题。运行了几天之后有一小段逻辑隐藏的比较深没有写这个逻辑测试，后面补上了一直都没有出过问题了。还是比较稳定的。<br>我这里只是做了中小规模的重构，后面跟着小争哥继续系统的学习大规模重构，以及重构的技巧和思想。","like_count":245,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588193,"discussion_content":"看了这么多专栏，越发地感觉单元测试很重要！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1663590268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251835,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oiboHpgukqib2ASXeU0H7W1ibgRMqyrNE5KaWicicPEDy0ia8YdoneZAtvW0EFIiaqZJp2OS4dnweOgXaJ5EjJicicEqic5A/132","nickname":"覃钰栋","note":"","ucode":"19080C463658EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386118,"discussion_content":"重构很有章法，值得学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627432858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1817165,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","nickname":"Geek_652490","note":"","ucode":"0612EE1FD02AF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336179,"discussion_content":"防护网 怎么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608521652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1035081,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","nickname":"刘大明","note":"","ucode":"83C063FBD9BF2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1817165,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","nickname":"Geek_652490","note":"","ucode":"0612EE1FD02AF1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336484,"discussion_content":"意思就是先针对功能点写好完善的测试类","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1608606723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336179,"ip_address":""},"score":336484,"extra":""}]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322104,"discussion_content":"点赞这么多，居然没有评论，哈哈哈哈。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604675593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168189,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1088687,"ip_address":"","ucode":"17AF8578D6F41F","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/af/05eeb5e9.jpg","comment_is_top":false,"comment_ctime":1578030777,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"370945218233","product_id":100039001,"comment_content":"在农村长大的孩子应该多少见过盖房子的情形，一般师傅会用砖挂一根线在不断的盖房子的过程中观察整个房子是否出现歪斜的情况，这个过程是持续的，要时刻保证一砖一瓦的建上去的房子是笔直的。写代码就是如此，团队应该有这样的&quot;一根线&quot;来保证产品的正常开发，不至于整个项目出现问题，而重构就像是发现了房子有点歪需要重新进行改正，高手是发现绳子偏移的时候就开始纠错了，大部分团队只能等到明显发现房子歪了才开始修正。","like_count":86,"discussions":[{"author":{"id":1392431,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","nickname":"a(๑≖ิټ≖ิ)✌","note":"","ucode":"AEF9B5CA1605DF","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346465,"discussion_content":"善战者无赫赫之功","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1611969248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004953,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/99/4bdadfd3.jpg","nickname":"Chloe","note":"","ucode":"C4848ED5B35752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307244,"discussion_content":"好比喻！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600568485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204749,"avatar":"https://static001.geekbang.org/account/avatar/00/12/62/0d/e49da525.jpg","nickname":"盗雪","note":"","ucode":"794E2C78281EB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408661,"discussion_content":"上医治未病，中医治欲病，下医治已病","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635299863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2550743,"avatar":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","nickname":"if...else...","note":"","ucode":"D0565908C99695","race_medal":4,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377901,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622956700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170488,"user_name":"Cest La Vie🤩","can_delete":false,"product_type":"c1","uid":1177849,"ip_address":"","ucode":"EDABE70BB796AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/f9/5d983b88.jpg","comment_is_top":false,"comment_ctime":1578620780,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"362355873644","product_id":100039001,"comment_content":"花时间，花力气去重构，最后万一出了故障，还要背锅，这是最难的","like_count":84,"discussions":[{"author":{"id":2219666,"avatar":"https://static001.geekbang.org/account/avatar/00/21/de/92/659322ad.jpg","nickname":"37.2","note":"","ucode":"3B20A30414BD6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588761,"discussion_content":"这就是现实，发现了坏味道也不敢重构，除了问题就准备滚蛋\n所以代码会一直烂下去，私下学习重构是可以的，公司的代码不敢动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664086341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588189,"discussion_content":"人生瞬间就不好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663589876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1674369,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","nickname":"Geek_68d3d2","note":"","ucode":"EBD6D881AA7A74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579111,"discussion_content":"然后还没有kpi","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657177852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2276155,"avatar":"https://static001.geekbang.org/account/avatar/00/22/bb/3b/6e020a32.jpg","nickname":"多学多看多记","note":"","ucode":"0670C833007510","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410725,"discussion_content":"扎心了老铁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635766414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169383,"user_name":"皮特尔","can_delete":false,"product_type":"c1","uid":1017161,"ip_address":"","ucode":"313862C91DD325","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","comment_is_top":false,"comment_ctime":1578324481,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"250686427649","product_id":100039001,"comment_content":"分享一个我们团队的案例：某个产品线经过重构，崩溃率降低了 50%。<br>其实那一次我们团队遇到的最大问题是：相关负责人 “不敢” 动前任遗留的烂代码。后来无奈 “强迫” 那个同事去做，效果立竿见影，之后很快就把 “重构” 推广到了其他项目。再之后整个团队开始重视代码质量，有坏味道随时重构，整个团队慢慢进入了一个 “正循环”。","like_count":58,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588196,"discussion_content":"幸存者偏差？如果出了事故是被『强迫』的那个同事来背吗？是不是我太悲观了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663590401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168062,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1578009683,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"186261603411","product_id":100039001,"comment_content":"重构自然是要用的我们牛逼的设计模式和数据结构了。。。啊-_-||开个玩笑哈。<br><br>重构这玩意嘛，其实在第一版提上去的时候就应该要重构了，也就是我们常说的，边写边重构。<br><br>一个方法写的时候发现分支判断太多，工厂模式就要登场了。<br><br>如果大部分代码都比较重复，这个时候就需要往底层的抽象，甚至用上策略模式。<br><br>需要做一个非功能性需求，每一个接口调用都要记录的东西，我们为了避免业务侵入性，就要考虑代理模式重构之前的业务侵入性强的代码，将功能与非功能分离。<br><br>说到底，重构不要等，而是马上动手，只有行动了，才不会害怕。第一版稍微辛苦一些，以后就不会那么恶心了，功在当代，利在千秋。","like_count":43,"discussions":[{"author":{"id":2071327,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9b/1f/9f3379d3.jpg","nickname":"Geek_7f21d2","note":"","ucode":"12204FDAD951BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309657,"discussion_content":"有硬套设计模式嫌疑.. 很多问题可以用设计原则来解决的， 设计模式有些重","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601381799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168747,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1578149688,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"147607037752","product_id":100039001,"comment_content":"重构的经验，1.工作中鼓励持续重构，但不赞成为了重构而重构.2.重构一定要在有比较完善的测试用例覆盖和回归用例库的情况下进行(可测试性)，否则会相当危险。3. 重构最好有AB工具灰度比对，逐步切流。4. 重构最好有资深的成员共同CR，结合大家的意见，可能本次的重构也会引入一些怪味道。<br>重构的教训，出现问题的场景往往在于一个细小的点，能注意到的往往没有问题。 重构一旦出问题会面临比较大的精神压力和信心挑战，会部分挫败重构者的积极性，这时候需要TL的鼓励和支持，避免让员工感受到做多错多。","like_count":35,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588201,"discussion_content":"AB测试的想法非常赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663590569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168325,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1578047313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"134722033489","product_id":100039001,"comment_content":"庆幸自己有个好领导，日常对我的代码 review 得非常严格，平时使用 source tree ，git rebase 可以清晰地看到每一次提交，这样代码 review 起来就没什么压力了。<br><br>另一方面，最好在项目的开始阶段和大家分享你的设计思路，否则等项目要准备发布上线时，拉上一堆人来 review 代码时，其实效果几乎没啥的，大家只能看看命名风格，像什么高内聚低耦合，设计模式，封装抽象等即使有问题，也会因为项目时间紧而将就放行。","like_count":31},{"had_liked":false,"id":168083,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1578012029,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"100362259837","product_id":100039001,"comment_content":"代码中的坏味道，好比人的头疼脑热。“小病”不管的话，迟早会发展成大病，需要动大手术，甚至病入膏肓。<br>实际中的一些体会：<br>一、在完成一个新需求时，在时间允许的情况下，会经常改进代码，使代码更优雅。<br>二、“重构不改变外部的可见行为“，引入自动化测试非常重要，国内有些团队可能做的不好。因为改动代码可能引入bug，如果没有自动化测试，测起来就会非常费劲，改动的结果不确定。如果测试不方便，谁会愿意修改之前work的代码呢？<br>三、持续集成、自动化测试、持续重构都是很好的工程实践。即使工作的项目中暂时没有使用，也应该有所了解。","like_count":23,"discussions":[{"author":{"id":1237624,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","nickname":"志振爱咋滴咋滴","note":"","ucode":"E7A5049920C101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":119273,"discussion_content":"尤其是现在明显不是代码质量为主的绩效评估方式，而是主要看你完成了多少功能，bug率高不高，在当下很多时候其实看不出来，只有当使用量上来了或者需要维护修改的时候，才能发现问题好多","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578224608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":116703,"discussion_content":"你这次评论有点像：扁鹊见蔡桓公。\n多数人强调手段，我觉得重点还是要看动力够不够，如果制度上奖罚重，这件事就会很好推行。\n奖罚制度体现的是领导的远见和能力，然而领导也是人，也得考虑其中利益。\n不能明确收益和成本的事情，是比较缺乏动力的，更何况本身执行就存在很多的障碍，如何度量重构效果也是个难事，如果不能度量，就意味着赏罚很难合理，也就是说这不仅仅是赏罚是否够重的问题，也是一个赏罚是否合理的问题。\n\n当然像你这样不计赏罚，只求品质的人，即使没有合理的制度，那写出来的代码相比也是杠杠的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578065039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1738326,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","nickname":"守拙","note":"","ucode":"F594B2DA3F6D4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115550,"discussion_content":"我现在每次课都要看看你的评论,写的不错.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578018682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1738326,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","nickname":"守拙","note":"","ucode":"F594B2DA3F6D4F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115619,"discussion_content":"很开心有你的关注","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578022916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":115550,"ip_address":""},"score":115619,"extra":""}]}]},{"had_liked":false,"id":168181,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1578028912,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"74592472944","product_id":100039001,"comment_content":"1.座右铭：你写的每一行代码，都是你的名片。<br><br>2.重构要考虑时机和力度。一般是增加需求时，对关联的逻辑代码做的重构。这时需要考虑自己当前的开发期限去决定重构的力度。在保证“营地比自己来时干净”的前提下，量时重构。（逻辑级别小重构一般就如栏主说的改变量名，方法名，以及不破坏现有逻辑做实现代码实现重构，移动变量，内联提炼啥的）（逻辑级别的大重构就要动实现逻辑，甚至需求设计了。往往需要再三与产品沟通确认，并充分测试，甚至在实现上留有开关，一旦现网有问题，及时切换）（架构级别的大重构，包括调整分层模型，重新划分各个微服务持有的聚合，基础技术栈升级，比如spring到springboot，或则jdk。这些影响面都比较大，很难测试全，所以一般是并行重构，然后走现网镜像流量持续观察，大面积业务场景没问题后再整个切换）<br><br>3.持续重构锻炼架构思维，受益匪浅。重构不难，难的是在代码上讲究的意愿。","like_count":17,"discussions":[{"author":{"id":2088626,"avatar":"","nickname":"志江","note":"","ucode":"8A07D53769B3C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381764,"discussion_content":"确实锻炼架构思维, 每一个小的东西都会去思考如何设计, 里面都蕴含着架构的知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625205283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168144,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1578019083,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"66002528523","product_id":100039001,"comment_content":"设计模式_27<br><br>没有做过大重构，小重构倒是经常做，我发现我做需求常常比别人慢，原因是大概率我改的地方比需求涉及的多一些，可以算是小重构吧。<br><br>很同意王争老师说的，大部分人都没有进行过重构，而大部分的代码又是由这大部分的人写的，所以，市面上的大部分代码可能都。。。<br><br>我在创业公司呆过，见识过技术总监申请重构时被挑战的体无完肤，不欢而散，代码一直烂下去，最终谁也改不动，大量的客户流失，业务严重受损。当然，我在这个过程中，毫无作为。。。","like_count":15,"discussions":[{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340608,"discussion_content":"牛逼了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610077180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307545,"discussion_content":"你那个创业公司结局如何？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600681407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1112747,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","nickname":"李小四","note":"","ucode":"2A766BE16B276B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307579,"discussion_content":"还活着","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600689833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307545,"ip_address":""},"score":307579,"extra":""},{"author":{"id":2088626,"avatar":"","nickname":"志江","note":"","ucode":"8A07D53769B3C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1112747,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","nickname":"李小四","note":"","ucode":"2A766BE16B276B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381766,"discussion_content":"竟然还活着, 早晚的事儿感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625205343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307579,"ip_address":""},"score":381766,"extra":""}]}]},{"had_liked":false,"id":200209,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1585558082,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53125165634","product_id":100039001,"comment_content":"重构了不出毛病没你功劳, 出问题就是你的责任了 ~ ","like_count":12,"discussions":[{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340609,"discussion_content":"确实啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610077213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168056,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1578008998,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"48822649254","product_id":100039001,"comment_content":"1，无单测的条件下，别说重构了，我不想以前任何代码，对，我是一个怕事的程序员～<br>2，小步快走的重构方式很重要，毕其功于一役的重构总是构完了，发现和主干代码相差哈哈哈，我还是不合入了吧，留给自己欣赏自己精细雕琢的玩具。。。","like_count":11},{"had_liked":false,"id":204274,"user_name":"elasting","can_delete":false,"product_type":"c1","uid":1820716,"ip_address":"","ucode":"03AAFF8D1A75B9","user_header":"","comment_is_top":false,"comment_ctime":1586358719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31651129791","product_id":100039001,"comment_content":"重构前，一定要先写单测，确保重构后的逻辑，与之前是一致的","like_count":7},{"had_liked":false,"id":168260,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1578039399,"is_pvip":false,"replies":[{"id":"65962","content":"😂","user_name":"作者回复","comment_id":168260,"uid":"1190123","ip_address":"","utype":1,"ctime":1578490574,"user_name_real":"王争"}],"discussion_count":5,"race_medal":0,"score":"31642810471","product_id":100039001,"comment_content":"我自从入职到现在一直都是维护老项目。“我很怀念我自己写的代码。&quot;，为什么加双引号了？因为现在的项目代码跟屎一样臭，我自己写的只能说尽量写好点，但是也不完美，完全达不到我心中的目标。为什么呢？因为大环境所致。现在项目已经烂的一P了，结果还没时间给重构的机会。难受的亚匹。我所谓的烂不只是代码烂，就连无用代码也不删掉，都注释掉，git提交comment：123，345，代码开发完不合并到master。这篇文章不是学知识的，是比惨的...... 另外，精选留言越来越少，难受。","like_count":7,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480174,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578490574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2672409,"avatar":"","nickname":"Geek_fa2c0b","note":"","ucode":"E87A13ABFC0134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383758,"discussion_content":"我的也一样，感觉这个项目就是一件破衣服打满了补丁，各色的补丁一件掩盖了衣服本来的布料了，修修补补又一年，耦合度太高了，太高了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626233012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2088626,"avatar":"","nickname":"志江","note":"","ucode":"8A07D53769B3C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381767,"discussion_content":"哈哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625205428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308887,"discussion_content":"+1111111 都是不用的代码不删,增加新逻辑强行规定用一个大if","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601110613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1032484,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c1/24/0ea08c9e.jpg","nickname":"柴柴777","note":"","ucode":"5208B935ECB6F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":125115,"discussion_content":"看着大家一个一个过的都这么惨  我突然觉得我还算幸福了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578474854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231742,"user_name":"Jerry Wu","can_delete":false,"product_type":"c1","uid":1203567,"ip_address":"","ucode":"AD29B6942AAAA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/6f/42494dcf.jpg","comment_is_top":false,"comment_ctime":1593762740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23068599220","product_id":100039001,"comment_content":"我接手的项目 80% 都是巨坑，代码是真的烂。印象最深的是一个函数，有上百个形参，看到头晕，但要重构麻烦就来了。<br><br>最大的难点是，出了故障，就得背锅，但不重构又天天加班。所以，别想着改好了，想办法让代码没那么烂，从低层次的重构入手，在类、函数、命名下功夫。","like_count":5},{"had_liked":false,"id":174212,"user_name":"沈杰","can_delete":false,"product_type":"c1","uid":1230818,"ip_address":"","ucode":"20D1D820CAD60D","user_header":"https://static001.geekbang.org/account/avatar/00/12/c7/e2/27d00854.jpg","comment_is_top":false,"comment_ctime":1580092124,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"23054928604","product_id":100039001,"comment_content":"祖传代码，领导还是不敢担这个责任","like_count":5},{"had_liked":false,"id":228116,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1592559059,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14477460947","product_id":100039001,"comment_content":"以前从来没有意识到自己的代码质量有问题，直到最近入职了一家新公司，很庆幸有这样的领导，每次CR我的代码，指出我的很多问题，少写一个空格都不行，领导帮忙重构后，代码结构确实看起来清楚多了，也更加容易理解了，以后再写代码的时候会持续重构，注意书写的质量，争取每次提交上去的代码不需要再次修改，加油💪","like_count":3,"discussions":[{"author":{"id":1750549,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/b6/15/e2cfd10d.jpg","nickname":"ImYours°","note":"","ucode":"51F653129034C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356546,"discussion_content":"还没有遇到这样的leader，还在写烂味道的代码，这就是我订阅这个课程的原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615621288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168052,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1578008592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14462910480","product_id":100039001,"comment_content":"品味很重要，能品味出代码的味道","like_count":3},{"had_liked":false,"id":213629,"user_name":"落尘kira","can_delete":false,"product_type":"c1","uid":1092169,"ip_address":"","ucode":"D203B519E43F85","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/49/51790edb.jpg","comment_is_top":false,"comment_ctime":1588495156,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10178429748","product_id":100039001,"comment_content":"我觉得重构的经历带给我一个比较正的三观：要认真对待每一次技术评审，每一篇设计文档，接口、模型、字段、逻辑、流程图、异常、风险、影响范围、配置、发布计划、相关合作方（上游和下游）等等等等要写的清清楚楚，落地为证，以后不管跟谁&quot;撕逼&quot;就有依据了，当然老板除外；总之文档写得好，评审讲得好，方便你我他","like_count":2},{"had_liked":false,"id":168037,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1577982443,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10167917035","product_id":100039001,"comment_content":"打卡✔<br>心得体会吧，哈哈哈哈哈<br>我被频繁改动的需求压的喘不过气，再牛逼的架构怕是也抵不住😒","like_count":2,"discussions":[{"author":{"id":1613665,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9f/61/c46b42f4.jpg","nickname":"talkyoung","note":"","ucode":"8D231FA9004B64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308050,"discussion_content":"跟大佬学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600831063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330422,"user_name":"L","can_delete":false,"product_type":"c1","uid":1628434,"ip_address":"","ucode":"A5CB3F1B4975BE","user_header":"https://static001.geekbang.org/account/avatar/00/18/d9/12/71db1407.jpg","comment_is_top":false,"comment_ctime":1641973832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5936941128","product_id":100039001,"comment_content":"<br><br><br>重构过一个充满if else 、重复代码到处是 的小功能模块<br><br>感受：1.一定先熟悉业务 (已踩坑，上来就干)<br>\t 2.要给自己留一定的缓冲时间<br>\t 3.要有回退策略，即开关<br>         4.上线最好有流量对比<br><br>代码没有单测，，，，测试很麻烦<br>感受：一个好领导能让你走很多弯路~","like_count":1},{"had_liked":false,"id":312400,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1631785973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5926753269","product_id":100039001,"comment_content":"说实话一个有技术性氛围的团对很重要，换句话说leader很重要。","like_count":1},{"had_liked":false,"id":306868,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1628757132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5923724428","product_id":100039001,"comment_content":"曾经自己写过一些代码，刚开始的时候只使用一种方法，所以直接放在主函数了，但是后面随着不断的改动，发现要不断尝试新的代码，而如果再直接放在主函数中，主函数就会很长，不利于后续的阅读和改动，刚开时只增加一个方法的时候自己还是硬着头皮去修改主函数部分，但是当改动方法越来越多，自己意识到再不对代码进行重构往后再加代码就会非常困难了。然后自己就开始使用工厂模式重新设计的逻辑框架，一开始这个过程还是挺花时间的，甚至比单独开发一个新方法的时间还要长。但是设计完成之后当我再想往里面增加新的方法，发现只有这个方法本身的逻辑已经实现了， 将它加入主工程是很容易的事情，顿时感觉之前的努力没有白花。这算是我的第一次代码重构的经验了，共勉！","like_count":1},{"had_liked":false,"id":234978,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1594862202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5889829498","product_id":100039001,"comment_content":"即使小步重构也是美好的愿景。重构意味着测试回归工作量的增加，常常会得不到测试的认同。而且因为是小步重构，你也很难拿出特别有必要的理由。","like_count":1},{"had_liked":false,"id":169181,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1578287133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873254429","product_id":100039001,"comment_content":"我非常赞同老师对重构思维，重构习惯这个点的强调。日常工作中，我身边遇到过这样的队友。他需要调用一块代码，但是那块代码设计的不太合理，不好用。然后他就自己实现了一个一摸一样的。等到别人去看的时候发现两块代码。问他的时候，他能说出来为什么这样做，原来的哪里不合适。但是不下手去改不正确的代码。<br>遇到的坑，就是提供给外部的代码重构，比系统内的麻烦很多。就比如上面这种情况，如果是内部调用，也没问题。也可以算的上是一种重构，我把原来的所有调用都修改成你新的即可。但问题是暴露给外部的内容，就很难去修改。你不知道有多少系统用了你的代码(举例dubbo)，你要保证兼容的前提下，修改代码。<br>最后我觉得重构不论大小，只要能有一点进步，在保证不影响的情况下。有时候一个变量名，一个方法名称，一个断句。一个复杂if条件的提取，都是好的，至少代码在不断变好。杜绝堆砌代码","like_count":1},{"had_liked":false,"id":168407,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1578062107,"is_pvip":false,"replies":[{"id":"65960","content":"单元测试真的很有用，谁写谁知道。","user_name":"作者回复","comment_id":168407,"uid":"1190123","ip_address":"","utype":1,"ctime":1578490425,"user_name_real":"王争"}],"discussion_count":3,"race_medal":0,"score":"5873029403","product_id":100039001,"comment_content":"编程世界也存在热力学第二定律，在自然过程中，熵总是不断增加的。<br>我自己有一个小项目，随着代码量的逐渐增多，维护起来越来越吃力，用来提防出问题的精力已经超过了开发新功能的精力，所以看到这个专栏时我毫不犹豫就买了。重构我的项目就是我给自己的大作业。<br>不过，真的不想写单元测试啊😭😭😭","like_count":1,"discussions":[{"author":{"id":1322362,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2d/7a/3a37efe4.jpg","nickname":"金霖","note":"","ucode":"8CFE41BEEB5EF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272337,"discussion_content":"我也自定义了bean，配置了bean生命周期相关的一些方法，执行顺序跟老师图里的一致。实际上BeanFactory的注释里有规定这几个方法的执行顺序。如果执行顺序跟预期不一致，应该属于该BeanFactory的bug :\n\npostProcessBeforeInitialization methods of BeanPostProcessors\nInitializingBean&#39;s afterPropertiesSet\na custom init-method definition\npostProcessAfterInitialization methods of BeanPostProcessors\n\nhttps://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590289718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168152,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1578021085,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5872988381","product_id":100039001,"comment_content":"代码重构，首先技术人员得建立这种思维。大部分技术人员写代码除非出问题，否则以后是不会看的。总觉得自己写代码是最好的。","like_count":1,"discussions":[{"author":{"id":1765806,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLlxr0eX6ZPlpiaUkH8SXoNibmOK9MJz2ZDYq5y57UfFHBu6dDc5VxKic1rAPiawLBVdSMl8y1Mwtp9Yg/132","nickname":"Bern","note":"","ucode":"5A979552D5800D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275086,"discussion_content":"我也在看小马哥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590661000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1053136,"avatar":"https://static001.geekbang.org/account/avatar/00/10/11/d0/aefbaf52.jpg","nickname":"我是小白007","note":"","ucode":"31499977DB27C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1765806,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLlxr0eX6ZPlpiaUkH8SXoNibmOK9MJz2ZDYq5y57UfFHBu6dDc5VxKic1rAPiawLBVdSMl8y1Mwtp9Yg/132","nickname":"Bern","note":"","ucode":"5A979552D5800D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278410,"discussion_content":"哪个小马哥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591183427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":275086,"ip_address":""},"score":278410,"extra":""},{"author":{"id":1122034,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1e/f2/453d5f88.jpg","nickname":"seker","note":"","ucode":"9B705F91355873","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1053136,"avatar":"https://static001.geekbang.org/account/avatar/00/10/11/d0/aefbaf52.jpg","nickname":"我是小白007","note":"","ucode":"31499977DB27C6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326851,"discussion_content":"极客时间视频课《小马哥讲Spring核心编程思想》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605688376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278410,"ip_address":""},"score":326851,"extra":""}]}]},{"had_liked":false,"id":168094,"user_name":"安静的boy","can_delete":false,"product_type":"c1","uid":1196475,"ip_address":"","ucode":"F5F44B75228A85","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/bb/21ce60d2.jpg","comment_is_top":false,"comment_ctime":1578013009,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872980305","product_id":100039001,"comment_content":"我现在负责的项目是我从零就参与的，到现在大大小小已经迭代了十几个版本。我发现随着版本的迭代，会出现很多相似的重复代码，这个时候我就会去想办法重构代码，做一些抽象啊，利用一些设计模式，不过我现在只用到了模板设计模式。如果不重构我觉着以后需求再变化改动的地方太多了，而且还很有可能出错。另外，我发现重构了以后代码的可读性也会比较好。","like_count":1},{"had_liked":false,"id":358927,"user_name":"怀英","can_delete":false,"product_type":"c1","uid":1394143,"ip_address":"江苏","ucode":"E2838AF06FB300","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/df/97a71dc8.jpg","comment_is_top":false,"comment_ctime":1665033556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665033556","product_id":100039001,"comment_content":"现在接触的老的代码越来越多，要重构发现比较困难，吃力。就好比自古华山一条道，还没法绕道，要开隧道，发现钱还不够，最后只好把有限的预算修修栈道，装装防护栏。","like_count":0},{"had_liked":false,"id":348739,"user_name":"江小田","can_delete":false,"product_type":"c1","uid":1003149,"ip_address":"","ucode":"C5197BF856E8D3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/8d/34e0f6f3.jpg","comment_is_top":false,"comment_ctime":1655361138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655361138","product_id":100039001,"comment_content":"我前段时间把我的一个子系统从大单体应用里给拆了出来。<br>步骤分别是1，运行环境的隔离、2，访问入口的独立(例如域名独立)、3，旧数据源访问账户的独立(提供访问是否隔离的观测验证)、4，代码调用拆分成远程调用(不停用3验证拆分结果)、5，新数据源的建立、6，旧数据源到新数据源的同步、7，一键切换到新库(验证业务)、8，删除旧库数据<br><br>我重构之前，同事不敢动。其实根本原因是对业务的熟悉度不够深入。如果对业务完全熟悉，出问题能hold住。那每一步无论出什么问题，都能很快发现并解决。就不会怕不敢动的问题。","like_count":0},{"had_liked":false,"id":345685,"user_name":"钱鹏 Allen","can_delete":false,"product_type":"c1","uid":2518863,"ip_address":"","ucode":"7E95E82C0717DA","user_header":"https://static001.geekbang.org/account/avatar/00/26/6f/4f/3cf1e9c4.jpg","comment_is_top":false,"comment_ctime":1652508970,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652508970","product_id":100039001,"comment_content":"关于代码重构，你有什么心得体会、经验教训？或者，你也可以说说，在重构过往项目的时候，你遇到过哪些问题？<br>公司的代码属于老系统，因为业务比较多，经常是上线新项目，就临时做更改，设计模式几乎应用为0，新上手系统，进行功能上的调试就要近一个月的时间，效率极低。<br>先自己的做好相应板块的重构，自己所负责的团队里做好代码的review，将重构的培训做出来~<br>","like_count":0},{"had_liked":false,"id":338200,"user_name":"夏天","can_delete":false,"product_type":"c1","uid":1285986,"ip_address":"","ucode":"F29D56F9265751","user_header":"https://static001.geekbang.org/account/avatar/00/13/9f/62/960eecc3.jpg","comment_is_top":false,"comment_ctime":1647351304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647351304","product_id":100039001,"comment_content":"在工作中 重构会引起有些leader 反感，特别是在review过程中，这次需求不需要改动的地方做了变更，可能会被质疑。","like_count":0},{"had_liked":false,"id":334356,"user_name":"L先生","can_delete":false,"product_type":"c1","uid":2879424,"ip_address":"","ucode":"D1E567ED3377CE","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ef/c0/537b3905.jpg","comment_is_top":false,"comment_ctime":1644897026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644897026","product_id":100039001,"comment_content":"其实我也经常写烂代码，因为只有我一个开发，懒得动。进现在公司得时候，用了模板模式统一了整个数据流程。做的时候也是挺忐忑得，可能做出来不太规范，但是比之前得重复代码好多了。","like_count":0},{"had_liked":false,"id":326432,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1639529894,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1639529894","product_id":100039001,"comment_content":"财务相关代码不敢动，重构之后要安排测试同事测试，也要承担一定风险，这个最难","like_count":1},{"had_liked":false,"id":325801,"user_name":"Geek_1","can_delete":false,"product_type":"c1","uid":2704407,"ip_address":"","ucode":"59300A73996D20","user_header":"https://static001.geekbang.org/account/avatar/00/29/44/17/e4fdcaad.jpg","comment_is_top":false,"comment_ctime":1639137299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639137299","product_id":100039001,"comment_content":"重构把握四个点：why、what、when、how，从时间上讲：重构融入日常","like_count":0},{"had_liked":false,"id":320158,"user_name":"流云追风","can_delete":false,"product_type":"c1","uid":2611950,"ip_address":"","ucode":"16D738406CB191","user_header":"https://static001.geekbang.org/account/avatar/00/27/da/ee/63090718.jpg","comment_is_top":false,"comment_ctime":1636102575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636102575","product_id":100039001,"comment_content":"重构不算绩效,谁愿意去做吃力不讨好的事呢","like_count":1},{"had_liked":false,"id":318444,"user_name":"盗雪","can_delete":false,"product_type":"c1","uid":1204749,"ip_address":"","ucode":"794E2C78281EB2","user_header":"https://static001.geekbang.org/account/avatar/00/12/62/0d/e49da525.jpg","comment_is_top":false,"comment_ctime":1635300636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635300636","product_id":100039001,"comment_content":"上医治未病，中医治欲病，下医治已病","like_count":0},{"had_liked":false,"id":314290,"user_name":"charmsongo","can_delete":false,"product_type":"c1","uid":1609051,"ip_address":"","ucode":"4FBEE716E93A1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","comment_is_top":false,"comment_ctime":1632959316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632959316","product_id":100039001,"comment_content":"重构对于开发人员来说是不可避免的事情，自己自己注意代码规范，也会遇到接手同事工作，让你看一眼就够了代码，这很正常，自己回头看自己之前写的代码也会嫌弃，这或许是成长。<br>Why？小步快改，大步慢改，及时发现代码坏味道不让它影响更大<br>what？经验丰富可以申请重构大模块，信心不足可以先小试牛刀，从单个类出发<br>when？大重构需要时间长，要有规划，小重构单位可以是天，日常不忙可以做<br>how？运用，面向对象特性，设计模式，思想重构上层，solid，kiss，lod等原则重构类","like_count":0},{"had_liked":false,"id":313903,"user_name":"tyro","can_delete":false,"product_type":"c1","uid":1955472,"ip_address":"","ucode":"D35A80546E7A2F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/d6/90/2b949521.jpg","comment_is_top":false,"comment_ctime":1632732753,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1632732753","product_id":100039001,"comment_content":"大型重构：涉及的模块、代码会较多，牵一发而动全身。任务规划-任务分解-小步重构-提交、测试、运行。时刻保证代码仓库中的代码处于可运行、逻辑正确的状态","like_count":0,"discussions":[{"author":{"id":1463740,"avatar":"https://static001.geekbang.org/account/avatar/00/16/55/bc/fad0090b.jpg","nickname":"Yeyw","note":"","ucode":"C9D20DB91C3BE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368755,"discussion_content":"我感觉算不上 都是调用本身的方法实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618824022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310085,"user_name":"刘泽民","can_delete":false,"product_type":"c1","uid":2731016,"ip_address":"","ucode":"E4F55018D01ABD","user_header":"","comment_is_top":false,"comment_ctime":1630481426,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630481426","product_id":100039001,"comment_content":"重构了半个月 然后新的需求加过来，只能放弃已重构部分在原代码上叠加开发","like_count":0},{"had_liked":false,"id":306271,"user_name":"不一样的烟火","can_delete":false,"product_type":"c1","uid":1473251,"ip_address":"","ucode":"6E305F0EE90E8B","user_header":"https://static001.geekbang.org/account/avatar/00/16/7a/e3/145adba9.jpg","comment_is_top":false,"comment_ctime":1628480568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628480568","product_id":100039001,"comment_content":"最近刚重构完公司的核心代码，体会很深","like_count":0},{"had_liked":false,"id":306096,"user_name":"直走的螃蟹","can_delete":false,"product_type":"c1","uid":2683294,"ip_address":"","ucode":"8116812CF0A1F2","user_header":"","comment_is_top":false,"comment_ctime":1628346168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628346168","product_id":100039001,"comment_content":"一开始确实没有重构的意识，但后来发现以前遗留下来的代码真的太烂了。开发某个小功能点，要看一大堆的代码，要花费太多时间在这上面了。导致自己的开发时间不够，也只能继续写烂代码。感觉陷入了死循环。不过熟悉了开发的节奏之后，也会做一些小型重构，但现在工作还不是很久，不敢改太多旧代码。大型重构都是交给资深同事来解决的。","like_count":0},{"had_liked":false,"id":304477,"user_name":"昵称C","can_delete":false,"product_type":"c1","uid":1234963,"ip_address":"","ucode":"1BB2D537942DC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/13/082013bc.jpg","comment_is_top":false,"comment_ctime":1627442329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627442329","product_id":100039001,"comment_content":"重构确实需要持续保持重构意识，保持代码可控。<br>近两年我们团队就是血的教训，两年时间持续赶业务，搭建平台。到第三年开始重构，每次重构都是两周到一个月的时间，所以特别不理解争哥说的大型重构如何才能分解城每天都能提交代码的程度。<br>不过个人仍然觉得，花一到两周的时间对某个模块进行大型重构还是可控的。<br>","like_count":0},{"had_liked":false,"id":297189,"user_name":"曾经的少年","can_delete":false,"product_type":"c1","uid":1930186,"ip_address":"","ucode":"B22FC8BC9D8DB7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/73/ca/8f6d9075.jpg","comment_is_top":false,"comment_ctime":1623371540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623371540","product_id":100039001,"comment_content":"重构是时时刻刻进行的，这样才能不至于积累过多的烂代码","like_count":0},{"had_liked":false,"id":292439,"user_name":"请叫我和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1620822227,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1620822227","product_id":100039001,"comment_content":"这次是第二次再来阅读这篇，突然就想到一个文中的一个点：在修改、添加某个功能代码的时候，你也可以顺手把不符合编码规范、不好的设计重构一下。<br><br>这样的修改，是否需要考虑到如果重构其他的代码&#47;设计，并不确定是否重构的正确与否，是否需要 QA 介入回归测试一下，如果让 QA 介入，是否成本又过高？","like_count":0},{"had_liked":false,"id":290000,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1619316030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619316030","product_id":100039001,"comment_content":"在机器学习的场景，比如，推荐和搜索，很多时候重构也是为了开销的减小和性能提升","like_count":0},{"had_liked":false,"id":279920,"user_name":"theonecai","can_delete":false,"product_type":"c1","uid":1087493,"ip_address":"","ucode":"063C239256C889","user_header":"https://static001.geekbang.org/account/avatar/00/10/98/05/fdd7b8b7.jpg","comment_is_top":false,"comment_ctime":1614000719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614000719","product_id":100039001,"comment_content":"用了十几年的系统，业务逻辑复杂，不敢轻易重构，还在一直堆代码","like_count":0},{"had_liked":false,"id":278604,"user_name":"Geek_d68f12","can_delete":false,"product_type":"c1","uid":2441635,"ip_address":"","ucode":"C1552CBAA94214","user_header":"","comment_is_top":false,"comment_ctime":1613123986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613123986","product_id":100039001,"comment_content":"不改变功能的前提下，修改代码提高质量<br>大重构<br>\t分阶段迭代式<br>小重构<br>\t随时做<br>把重构当成平时开发的一部分","like_count":0},{"had_liked":false,"id":276366,"user_name":"小白","can_delete":false,"product_type":"c1","uid":2314948,"ip_address":"","ucode":"ED798245A9B0CA","user_header":"","comment_is_top":false,"comment_ctime":1611901100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611901100","product_id":100039001,"comment_content":"重构别人的代码是一件非常痛苦的事，尤其是哪些不爱写注释的同事","like_count":0},{"had_liked":false,"id":272397,"user_name":"snake","can_delete":false,"product_type":"c1","uid":2347137,"ip_address":"","ucode":"47BFFE4D048156","user_header":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","comment_is_top":false,"comment_ctime":1610076878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610076878","product_id":100039001,"comment_content":"我有次花时间吧以前的一个大类做了拆分，抽象了通用方法，后面被经理说不要去改动稳定的代码。。","like_count":0},{"had_liked":false,"id":271363,"user_name":"子房","can_delete":false,"product_type":"c1","uid":1438860,"ip_address":"","ucode":"CB05938C248BB3","user_header":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","comment_is_top":false,"comment_ctime":1609577095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609577095","product_id":100039001,"comment_content":"大家好,  感谢老师的分享, 我分享一下我的重构故事, 团队曾经有过一次大规模的重构历史. 当时, 因为系统经历过的业务团队比较多, 每个团队的水平差异较大, 导致系统很难展开新的业务迭代. 恰逢公司渐渐走向微服务技术架构, 因此确定进行该系统的重构. 我们遇到的主要困难一、是业务边界梳理,    重构对上下游系统的影响范围的难以评估. 二、业务模块重构的重新设计和编码, 三、重构后的业务、编码质量能否达到预期.  四、重构后线上 bug 是否会比目前少很多. 基于上面的几点, 我们还是走向了重构, 主要是老师讲的大规模中的重构风险, 我们当时把重构作为技术项目实施, 新的业务需求基本都是停滞的, 专心做重构, 这是大规模重构必须要注意的.重构后的收益, 重构的收益可能一开始没有那么明显, 也可能是短期的收益. 目前看来我们当时的重构长期来看是失败的. 因为过去了一年, 还是走回了原来的样子. 我总结了几点原因: 大部分同事缺少写出可维护、易读、易维护的代码意识. 也缺少持续重构的意思. 日常开发中基本都是面向过程的思维在开发. 对设计思想、 设计原则、 设计模式停留在认知水平,缺少运用到项目的经验. 总之: 还是缺少工程师的极客精神.","like_count":0},{"had_liked":false,"id":269339,"user_name":"王玉彬","can_delete":false,"product_type":"c1","uid":2346455,"ip_address":"","ucode":"8DA1ADB9B4026C","user_header":"https://static001.geekbang.org/account/avatar/00/23/cd/d7/c932f32a.jpg","comment_is_top":false,"comment_ctime":1608617164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608617164","product_id":100039001,"comment_content":"1. 重构的代码要先具备可测试性，不然会引入风险。<br>2. 自动化测试能大大简化测试过程。<br>3. 小规模重构不需要告诉领导。","like_count":0},{"had_liked":false,"id":269333,"user_name":"月狼葱葱","can_delete":false,"product_type":"c1","uid":1101360,"ip_address":"","ucode":"506D751D956F87","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/30/eb380376.jpg","comment_is_top":false,"comment_ctime":1608616463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608616463","product_id":100039001,"comment_content":"一直在做重构，也在组织内部推广重构，看到这篇文章很是激动<br>对于大重构和小重构，参考The Coding Dojo Handbook，有两个例子可以拿出练习；<br>小重构 Order Receipt  https:&#47;&#47;github.com&#47;wubin28&#47;order-receipt-baseline<br>大重构 Gilded Rose https:&#47;&#47;github.com&#47;emilybache&#47;GildedRose-Refactoring-Kata<br>IDEA 快捷键 : https:&#47;&#47;www.jianshu.com&#47;p&#47;6d752d85cd35<br>Eclipse 快捷键 : https:&#47;&#47;www.jianshu.com&#47;p&#47;dd05065d4d18","like_count":0},{"had_liked":false,"id":269171,"user_name":"lidashuang","can_delete":false,"product_type":"c1","uid":1104850,"ip_address":"","ucode":"560ABE8032760E","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","comment_is_top":false,"comment_ctime":1608544182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608544182","product_id":100039001,"comment_content":"完善的集成测试还是挺重要的，没有测试，不敢重构","like_count":0},{"had_liked":false,"id":268568,"user_name":"THB","can_delete":false,"product_type":"c1","uid":1364513,"ip_address":"","ucode":"199A7879576041","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/MlmSR4YXUfrNlZdMv7bv103gbTCxG9DYKFR8YLJtqw85rl8YuibhzNB7SmddQ6v3GiaQFZr5iajc9numbJ248fMGQ/132","comment_is_top":false,"comment_ctime":1608259484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608259484","product_id":100039001,"comment_content":"对于多人参与过开发的产品，重构过程中，主要遇到以下问题：<br>1、前同事写的代码，没有注释，有些代码不敢干掉，干掉又怕引发bug<br>2、某些代码逻辑耦合性太强，虽然是微服务架构，但还是会牵一发而动全身，重构成本高<br>3、数据库设计本来就不够合理，这也是造成耦合性强的原因之一吧，涉及到改动数据库，实体什么的改动就大","like_count":0},{"had_liked":false,"id":266620,"user_name":"小妖","can_delete":false,"product_type":"c1","uid":1730626,"ip_address":"","ucode":"49C01DBFADF101","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvm1JYIDcS74s4cEYxA1PXMqjortVXEjUKyGQcPvibNJ4EAuksIa6uoHgr6G1yRqAM2KtP3yicKgTA/132","comment_is_top":false,"comment_ctime":1607418416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607418416","product_id":100039001,"comment_content":"1.重构的目的是保持代码高质量的有效手段，持续重构思想很重要，尽量避免大规模的大刀阔斧的重构；<br>2.小范围的重构可以跟随某个需要变更一块上线，但要保证功能的稳定；<br>3.重构是手段不是目的，在开发中防止烂代码的堆砌造成破窗效应很重要；<br>4.大规模重构要有主负责人牵头，经过充分的论证后才可进行","like_count":0},{"had_liked":false,"id":266311,"user_name":"Kingram","can_delete":false,"product_type":"c1","uid":2247700,"ip_address":"","ucode":"212E403E81F2FC","user_header":"https://static001.geekbang.org/account/avatar/00/22/4c/14/8fa39544.jpg","comment_is_top":false,"comment_ctime":1607300493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607300493","product_id":100039001,"comment_content":"只会重构自己的代码，先保证自己不背别人的锅🤪","like_count":0},{"had_liked":false,"id":263553,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1606183358,"is_pvip":true,"replies":[{"id":"96091","content":"������","user_name":"作者回复","comment_id":263553,"uid":"1190123","ip_address":"","utype":1,"ctime":1606700723,"user_name_real":"王争"}],"discussion_count":2,"race_medal":5,"score":"1606183358","product_id":100039001,"comment_content":"我觉得在工作中做好重构，需要有以下几点准备：<br>1. 领导支持，如果领导不支持，可以试着从非功能需求以及降低运维成本的角度去说服。<br>2. 重构是渐进迭代的，不是一步到位的。<br>3. 重构需要有测试用例支撑，没有完善的测试覆盖就去重构，无异于给自己挖坑。<br>4. 重构需要code review，这不仅是为了保证代码质量，也是很好的团队内技术分享的机会。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510235,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1281585,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8e/31/28972804.jpg","nickname":"阿海","note":"","ucode":"2589431F840C42","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377614,"discussion_content":"十分赞同，重构成功的保障","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622728864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261857,"user_name":"骆永良","can_delete":false,"product_type":"c1","uid":2285079,"ip_address":"","ucode":"E451391B9ABF13","user_header":"https://static001.geekbang.org/account/avatar/00/22/de/17/8c819cd7.jpg","comment_is_top":false,"comment_ctime":1605539542,"is_pvip":false,"replies":[{"id":"96132","content":"嗯呢������","user_name":"作者回复","comment_id":261857,"uid":"1190123","ip_address":"","utype":1,"ctime":1606701252,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1605539542","product_id":100039001,"comment_content":"不管是重构，开始开发设计，都是为了让代码粒度适中，在理解的范围内。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509641,"discussion_content":"嗯呢������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606701252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260670,"user_name":"成长型思维","can_delete":false,"product_type":"c1","uid":2282974,"ip_address":"","ucode":"2FCE2C05FFCC83","user_header":"https://static001.geekbang.org/account/avatar/00/22/d5/de/f9a465ab.jpg","comment_is_top":false,"comment_ctime":1605080743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605080743","product_id":100039001,"comment_content":"最好不要重构 彻底烂到 然后推到重做","like_count":0},{"had_liked":false,"id":259302,"user_name":"锋子","can_delete":false,"product_type":"c1","uid":1681459,"ip_address":"","ucode":"89FFA85BDB1C99","user_header":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","comment_is_top":false,"comment_ctime":1604675494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604675494","product_id":100039001,"comment_content":"现在领导正在支持重构，但是跟的时间特别紧，很多烂代码都是因为要急着上线，没有特别成熟经验就一点点的堆出来的。 而重构还不给足够时间，可能会从一坨屎变成另外一坨。。。","like_count":0},{"had_liked":false,"id":258787,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1604557385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604557385","product_id":100039001,"comment_content":"实际很多重构是在发现问题以后才重构，有时间就有优化重构涉及到的地方，没时间，将继续在代码上面接着堆砌就完了。","like_count":0},{"had_liked":false,"id":257481,"user_name":"jeff","can_delete":false,"product_type":"c1","uid":1393975,"ip_address":"","ucode":"DBF6BC727D4E77","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/37/7125afa6.jpg","comment_is_top":false,"comment_ctime":1603985346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603985346","product_id":100039001,"comment_content":"KPI 让人动都不敢动","like_count":0},{"had_liked":false,"id":257090,"user_name":"大力","can_delete":false,"product_type":"c1","uid":1364353,"ip_address":"","ucode":"1B2125C519443D","user_header":"https://static001.geekbang.org/account/avatar/00/14/d1/81/89ba9d81.jpg","comment_is_top":false,"comment_ctime":1603850210,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603850210","product_id":100039001,"comment_content":"重构过程最好跟 code review 互相结合。","like_count":0},{"had_liked":false,"id":256659,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1603699615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603699615","product_id":100039001,"comment_content":"前面都在谈重构的重要性，现在开始介绍重构的操作手册。<br>现在对待看不惯的代码，总是借口下次重构的时候好好改一下，却发现直到功能下线都没有再次重构。<br>到真正不得已要重构的时候，领导没有时间，产品没有时间，老板也没有时间。<br>就算是有时间，重构出来的东西也未必比之前的逻辑好多少。<br>思考的质量和思考的数量是正相关的，所谓的深思熟虑，不是一拍脑门就能深思熟虑的。将重构养成习惯，持续的重构，持续的思考，你的思考和代码也都会持续的生长。<br>切忌憋大招，对于大型重构，也需要有组织有计划，限定影响范围，分阶段的重构。控制每次重构的影响范围，保证在每次小的重构代码逻辑都是正确的。","like_count":0},{"had_liked":false,"id":250509,"user_name":"笨鸟","can_delete":false,"product_type":"c1","uid":1236320,"ip_address":"","ucode":"68029ADA76AA5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","comment_is_top":false,"comment_ctime":1601110363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601110363","product_id":100039001,"comment_content":"项目内部代码一团糟:耦合严重,重复代码一堆又一堆,项目之间代码一团糟:功能不一样的代码复制出来,形成多个项目;重构完A项目,到了B项目一样的代码再次重构一次,来了一个新项目,又从没重构的项目里拷贝出来功能,我再次重构,重构完,还得重构&quot;模版&quot;代码;真的是...老板还美名其曰模块化...","like_count":0},{"had_liked":false,"id":250352,"user_name":"Gopher","can_delete":false,"product_type":"c1","uid":1206229,"ip_address":"","ucode":"3C1F9012BB486D","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","comment_is_top":false,"comment_ctime":1601035694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601035694","product_id":100039001,"comment_content":"上次一个大的重构导致了线上的bug,扣工资了<br>","like_count":0},{"had_liked":false,"id":247308,"user_name":"JerryZhu","can_delete":false,"product_type":"c1","uid":1591223,"ip_address":"","ucode":"76850CD45786C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","comment_is_top":false,"comment_ctime":1599654841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599654841","product_id":100039001,"comment_content":"重构的压力来源于上面根本不给时间。。 除非自己加班搞，甚至需求排期过于不合理和密集导致压根不想重构， 即便发现问题了， 都是一种无可奈何的感觉","like_count":0},{"had_liked":false,"id":246735,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599467627,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599467627","product_id":100039001,"comment_content":"挺有意思和价值的一个过程","like_count":0},{"had_liked":false,"id":245986,"user_name":"Geek_35cfdd","can_delete":false,"product_type":"c1","uid":1792214,"ip_address":"","ucode":"AD9615ABB4CA25","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiaP1gptuBzj3AXMpY8yLTIkpuarouOVzLde4636UJ7zAgnOEZibiaAIRVAicFaO64ftH45YOn1pD3VA/132","comment_is_top":false,"comment_ctime":1599125572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599125572","product_id":100039001,"comment_content":"主要是没人敢重构，重构完之后业务出问题，你接锅。业务不出问题，别人也不会说你做的好。因为在外来看，业务本身就是正常跑的。","like_count":0},{"had_liked":false,"id":245139,"user_name":"倡印","can_delete":false,"product_type":"c1","uid":1455958,"ip_address":"","ucode":"4F53AA5D017D89","user_header":"https://static001.geekbang.org/account/avatar/00/16/37/56/11068390.jpg","comment_is_top":false,"comment_ctime":1598844338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598844338","product_id":100039001,"comment_content":"我觉得重构就像捏陶土一样，先是大体原型然后就是各种细节修改等等，其实大体的样子在最开始就差不多了，后面都是一直对它的修改","like_count":0},{"had_liked":false,"id":244505,"user_name":"蛀牙","can_delete":false,"product_type":"c1","uid":1153349,"ip_address":"","ucode":"F765A67DFEADFD","user_header":"","comment_is_top":false,"comment_ctime":1598541459,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598541459","product_id":100039001,"comment_content":"刚工作的时候追求work就行，总觉得senior developer让我规范命名，reduce duplication是吹毛求疵。渐渐的在工作中体会到了必要性，现在也以同样的标准要求小朋友。","like_count":0},{"had_liked":false,"id":240731,"user_name":"Pp、x","can_delete":false,"product_type":"c1","uid":1183672,"ip_address":"","ucode":"9623E33BE20C1E","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/b8/d10bc2d4.jpg","comment_is_top":false,"comment_ctime":1597046962,"is_pvip":false,"replies":[{"id":"89226","content":"你说的没错，知易行难","user_name":"作者回复","comment_id":240731,"uid":"1190123","ip_address":"","utype":1,"ctime":1597411916,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1597046962","product_id":100039001,"comment_content":"有时候确实是想重构，边开发边重构，那么也需要测试重新测一下之前改动过的逻辑，这成本不是很高吗？而且测试也不一定会配合你的代码重构而重复去测试。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503544,"discussion_content":"你说的没错，知易行难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597411916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240579,"user_name":"小蒋同学","can_delete":false,"product_type":"c1","uid":1568734,"ip_address":"","ucode":"F5BECE8E7F98F1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKNAouyESZ399QeWAricMo046Q7TvbFvAPKkfxoIaHpZhibUIv3BRVU4LKLO4ND7kNiaiboG19OkVwGGQ/132","comment_is_top":false,"comment_ctime":1596982447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596982447","product_id":100039001,"comment_content":"说的太对了，平时加东西的时候就勇敢重构，原来只有一个if，else，加东西的时候，可以选择重构，也可以继续堆砌if，else，越来越多，最近就在加东西的时候做了几次小重构，删除重复代码，增加代码通用性，删除硬编码部分，继续加油！","like_count":0},{"had_liked":false,"id":235920,"user_name":"夜空咏叹调","can_delete":false,"product_type":"c1","uid":1189074,"ip_address":"","ucode":"CC9350BCF218CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/d2/a5e272ce.jpg","comment_is_top":false,"comment_ctime":1595243886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595243886","product_id":100039001,"comment_content":"重构其实是一个长期的过程，随着代码量和自身水平的提高，就会觉得自己以前写的代码有问题，写的拓展性不好，不够优雅，因此就会想要进行重构。其实在我看来，重构和开发中的迭代优化是相辅相承的。","like_count":0},{"had_liked":false,"id":233535,"user_name":"FF","can_delete":false,"product_type":"c1","uid":1516828,"ip_address":"","ucode":"1B10DB28A6C941","user_header":"https://static001.geekbang.org/account/avatar/00/17/25/1c/2073a98c.jpg","comment_is_top":false,"comment_ctime":1594349301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594349301","product_id":100039001,"comment_content":"经常惯性重构 扩展功能 修改实现的时候 不至于一脸懵逼。<br>烂代码见多了就知道重构 不只对自己之后阅读有帮助 对它人扩展修改同样有用","like_count":0},{"had_liked":false,"id":232046,"user_name":"大方方","can_delete":false,"product_type":"c1","uid":1354013,"ip_address":"","ucode":"621AD8F1485753","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6cyOoRd2dROgiblAJkW6RLhUyH1wwU0NNibIIuV930eQ9TiaNT41K61kBSVkvYoDYg7mJtuEoCQY1awBmV0WW6BFg/132","comment_is_top":false,"comment_ctime":1593843368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593843368","product_id":100039001,"comment_content":"重构无论大小保持最小粒度提交给git， 方便溯源新的bug 。重构时尽量避免跨模块重构。如果模块直接需要重构，应该遵循面向接口优先。","like_count":0},{"had_liked":false,"id":231114,"user_name":"向往的生活","can_delete":false,"product_type":"c1","uid":1397298,"ip_address":"","ucode":"0E8DB45357820F","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/32/bb570f48.jpg","comment_is_top":false,"comment_ctime":1593588101,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593588101","product_id":100039001,"comment_content":"代码每次发布都要测试，没有测试人员的配合，重构无法进行，只能每次涉及到功能的改动才能重构一下。","like_count":0},{"had_liked":false,"id":228119,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1592559601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592559601","product_id":100039001,"comment_content":"代码重构完了是不是我们也该下岗了，哈哈哈","like_count":0},{"had_liked":false,"id":225267,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1591700412,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1591700412","product_id":100039001,"comment_content":"避免或者尽量减少重构工作的前提，需要尽量在项目中尽量添加详细的说明，并且文档化项目说明，这样前人省去重复为新人讲解的事项，新人也能按照既定的规则处理。另外作为项目管理者需要定期的查看代码中的坏味道基于此定期组织评审，降低坏代码出现的频率。","like_count":0},{"had_liked":false,"id":221193,"user_name":"Alan","can_delete":false,"product_type":"c1","uid":1317039,"ip_address":"","ucode":"FB69394A611FC6","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/af/b209f41f.jpg","comment_is_top":false,"comment_ctime":1590422470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590422470","product_id":100039001,"comment_content":"重构经验:  忌讳贪心; 重构之前，应该定好受影响的范围，若超出这个范围，即使看到极其垃圾的代码也不要改。","like_count":0},{"had_liked":false,"id":220058,"user_name":"anders","can_delete":false,"product_type":"c1","uid":1153592,"ip_address":"","ucode":"610C80D742C331","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/38/118a890c.jpg","comment_is_top":false,"comment_ctime":1590145761,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1590145761","product_id":100039001,"comment_content":"在国内，要专门的重构还是比较难的。反而把重构安排在每次迭代中，会比较合适。<br>比如假设一个版本我们需要完成开发的时间是 2 周，其中适当的增加 2~3 天给自己，实施边开发边重构~<br>（计划通 →_→）","like_count":0,"discussions":[{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340662,"discussion_content":"是的，这种可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610090475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278335,"discussion_content":"一点点改变最终都会汇聚成江河湖泊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591174845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278333,"discussion_content":"这种方式切实可行，每次在一个迭代版本中改动一小点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591174806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220038,"user_name":"兰芳林","can_delete":false,"product_type":"c1","uid":1754409,"ip_address":"","ucode":"D3C652D22B5D50","user_header":"https://static001.geekbang.org/account/avatar/00/1a/c5/29/4848464f.jpg","comment_is_top":false,"comment_ctime":1590140007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590140007","product_id":100039001,"comment_content":"没有重构过代码的举个手","like_count":0},{"had_liked":false,"id":219494,"user_name":"师哥","can_delete":false,"product_type":"c1","uid":1333376,"ip_address":"","ucode":"A86CD1661D370F","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/80/c9e232b6.jpg","comment_is_top":false,"comment_ctime":1590032307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590032307","product_id":100039001,"comment_content":"重构最大的挑战是要用清楚本来代码要表达的意思、","like_count":0},{"had_liked":false,"id":218768,"user_name":"track6688","can_delete":false,"product_type":"c1","uid":1088040,"ip_address":"","ucode":"0A9E893F8FD379","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/28/03613c22.jpg","comment_is_top":false,"comment_ctime":1589872841,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589872841","product_id":100039001,"comment_content":"很多时候，我觉得重构还是需要大牛指导一下，否则无论重构多少遍都是徒劳。设计模式，设计原则都不清楚，又怎么能重构出高质量代码呢？所以，大家能见到我来学习了。我希望能做到老师说的那种持续重构出高质量代码。","like_count":0,"discussions":[{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278336,"discussion_content":"重构有时候是一个文件的命名 方法的命名 变量的命名 这时候是不需要什么大牛的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591174892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215308,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1588951071,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1588951071","product_id":100039001,"comment_content":"【设计模式笔记27】20200508<br>之前参与过一项大型重构，基本是相当于重写了。读完本文很多当时模糊的店也清晰了。首先重构的目标一定要具体、可量化。具体是说重构是为了某一个问题的，比如大型重构就是为了更好更高效支持业务，因为当初随着业务复杂度的不断增加原有代码已经改不动了，属于一改稍微没考虑完整就倍故障了，那段时间大家改代码都谨小慎微，生怕背锅。关键是复杂业务的支持成本很高，代码散乱不成体系，很容易漏改。再说可量化，是说重构代码的可验证性和可测试性，比如重构目标是优化代码处理耗时就不可量化，需要明确指出耗时从多少降到多少，比如接口耗时葱100ms降到50ms就属于可量化。明确重构目标后就可以定性为大重构和小重构了，如果设计大重构就需要梳理流程、组织讨论、确定方案、计划排期和灰度方案都要做好。花时间最多是流程得梳理合方案确认，梳理好基本就可以确认大致怎么划分模块了。如果是小重构需要掌握基本的重构技巧，遵循设计原则和设计思想以及重构手法。好了，重构代码终于准备上线了，如果是大重构一定要好好思考和评估灰度方案，因为这是最危险也是最激动人心的时刻，多花点时间准没错，写代码多了就发现有个常用套路：异常处理和预案。罗马不是一日建成得，代码需要持续重构才能不至于腐化。欢迎交流","like_count":0},{"had_liked":false,"id":213700,"user_name":"dovefi","can_delete":false,"product_type":"c1","uid":1007670,"ip_address":"","ucode":"9F8C59F095B187","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/36/1848c2b7.jpg","comment_is_top":false,"comment_ctime":1588516485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588516485","product_id":100039001,"comment_content":"前几天在听书的时候就听了&quot;破窗效应&quot;，反思了自己在代码开发上的心理，真的是有这么一回事啊！只要项目出现了坏味道，慢慢的就会越来越多的人降低了自己的底线","like_count":0},{"had_liked":false,"id":213188,"user_name":"KID","can_delete":false,"product_type":"c1","uid":1867938,"ip_address":"","ucode":"EE80B7CA7CC2A2","user_header":"https://static001.geekbang.org/account/avatar/00/1c/80/a2/96dcd1fa.jpg","comment_is_top":false,"comment_ctime":1588325961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588325961","product_id":100039001,"comment_content":"自己重构过自己几年前写的代码，是因为发现之前写的时候没多少设计意识，导致现在扩展很麻烦，重复代码也很多；重构过一遍后，写起来顺手多了，但还是发现有优化的空间，这就是优化需要一步步来的体现吧；要知道什么是好的代码，才知道如何优化，继续学习！！！","like_count":0},{"had_liked":false,"id":209164,"user_name":"70","can_delete":false,"product_type":"c1","uid":1081899,"ip_address":"","ucode":"A5884B2BDDAB70","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/2b/cf93c499.jpg","comment_is_top":false,"comment_ctime":1587516516,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587516516","product_id":100039001,"comment_content":"自己负责的一个服务，基本上每次版本迭代都伴随着少量的小型重构，一直是边开发边重构。大规模重构太难让leader同意了","like_count":0,"discussions":[{"author":{"id":1055334,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","nickname":"苦行僧","note":"","ucode":"726024A9A9CF44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278338,"discussion_content":"所以说是持续重构和持续 终身学习是一个道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591174939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208402,"user_name":"雪吖头","can_delete":false,"product_type":"c1","uid":1910984,"ip_address":"","ucode":"ED6E96979DE27D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/28/c8/13d82fec.jpg","comment_is_top":false,"comment_ctime":1587351265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587351265","product_id":100039001,"comment_content":"非常认同王老师说的：“重构策略是持续重构“","like_count":0},{"had_liked":false,"id":208149,"user_name":"zhou","can_delete":false,"product_type":"c1","uid":1087243,"ip_address":"","ucode":"E1CE8575B3F106","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","comment_is_top":false,"comment_ctime":1587284531,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1587284531","product_id":100039001,"comment_content":"一个功能是否完成，不仅仅是满足用户的需求，还得满足高质量代码。重构不应该经过领导批准，而是一个合格程序员必备的要求。","like_count":0},{"had_liked":false,"id":208134,"user_name":"浮生醉","can_delete":false,"product_type":"c1","uid":1783354,"ip_address":"","ucode":"7549E41BD65511","user_header":"https://static001.geekbang.org/account/avatar/00/1b/36/3a/335db90a.jpg","comment_is_top":false,"comment_ctime":1587282948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587282948","product_id":100039001,"comment_content":"我们一般是会在某一功能扩展到一定程度后，才会对原有代码进行重构，毕竟随着业务的扩展，一些共性的东西会更明显，这样的重构才有意义","like_count":0},{"had_liked":false,"id":206691,"user_name":"大圣代","can_delete":false,"product_type":"c1","uid":1003080,"ip_address":"","ucode":"8A59114C8345C8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/48/bb0136d1.jpg","comment_is_top":false,"comment_ctime":1586917464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586917464","product_id":100039001,"comment_content":"我认为重构的最好时机在于添加新需求要改动老代码的时候，一点一点地重构并测试。对于大型改动我现现阶段的水平还不够切末轻举妄动","like_count":0},{"had_liked":false,"id":205761,"user_name":"Cutler","can_delete":false,"product_type":"c1","uid":1228136,"ip_address":"","ucode":"2EDECFE039845B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","comment_is_top":false,"comment_ctime":1586736620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586736620","product_id":100039001,"comment_content":"重构还是经常在做，特别是微服务化之后重构业务代码就比较容易了，只需要一个一个服务重构就可以了，也可以把一个大服务拆分成多个服务重新实现。","like_count":0},{"had_liked":false,"id":203386,"user_name":"wai","can_delete":false,"product_type":"c1","uid":1439529,"ip_address":"","ucode":"29CE3BE148FB79","user_header":"https://static001.geekbang.org/account/avatar/00/15/f7/29/60e01017.jpg","comment_is_top":false,"comment_ctime":1586182532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586182532","product_id":100039001,"comment_content":"听老师文章中的概述，我确定了真的有无可救药的代码，我感觉我们现在的代码就已经无可救药了，查一个bug半天时间；不调试代码很难看出问题；代码层次10层以上，跟一遍代码都得十分钟。","like_count":0},{"had_liked":false,"id":201977,"user_name":"墨鱼","can_delete":false,"product_type":"c1","uid":1022720,"ip_address":"","ucode":"8FB5E4DCB8A024","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/00/654be3f7.jpg","comment_is_top":false,"comment_ctime":1585883906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585883906","product_id":100039001,"comment_content":"很少重构代码，都是不断在堆砌烂代码。不过今天看了专栏，还是觉得应该建立重构意识。","like_count":0},{"had_liked":false,"id":201198,"user_name":"面向百度编程","can_delete":false,"product_type":"c1","uid":1732780,"ip_address":"","ucode":"8FE04A019D71D1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/ac/83bc14c0.jpg","comment_is_top":false,"comment_ctime":1585731964,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585731964","product_id":100039001,"comment_content":"我在用友实习的时候，我说新写的类放哪个包下，同事跟我说，随便放，能跑通就行了，我就意识到了，要跑路，不能留，那代码简直了，自己写完后，就不管后面的人维护了","like_count":0},{"had_liked":false,"id":200210,"user_name":"洛子墟","can_delete":false,"product_type":"c1","uid":1036273,"ip_address":"","ucode":"CFC500D00F0B9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/f1/bf63fef6.jpg","comment_is_top":false,"comment_ctime":1585558111,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585558111","product_id":100039001,"comment_content":"最难的还是领导不支持！<br>因为投入产出不成正比，而且看不到明显的效果，还容易出bug。<br>所以领导不会把他作为一个KPI考核指标。","like_count":0,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239196,"discussion_content":"其实我觉得吧，领导支不支持不重要，重要的还在于你自己愿不愿意自己花时间去优化\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587283682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200208,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1585558026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585558026","product_id":100039001,"comment_content":"记得以前看到系统代码写的太差 ,想重构, 但因为2个原因, 1)分给自己的活也不少, 2)对业务不熟悉, 万一出问题就是我责任, 所以改了1&#47;3 左右, 怕担责 就放弃了. . . ","like_count":0},{"had_liked":false,"id":198223,"user_name":"Sissi.C","can_delete":false,"product_type":"c1","uid":1748046,"ip_address":"","ucode":"689AA6A8BE1687","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ac/4e/08b0644b.jpg","comment_is_top":false,"comment_ctime":1585419437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585419437","product_id":100039001,"comment_content":"终于解答了我对重构的困惑","like_count":0},{"had_liked":false,"id":196798,"user_name":"秋风画扇","can_delete":false,"product_type":"c1","uid":1132356,"ip_address":"","ucode":"5BCBC1422C51EC","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/44/964aa665.jpg","comment_is_top":false,"comment_ctime":1585314943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585314943","product_id":100039001,"comment_content":"开发新功能&#47;修bug的时候一定要有重构意识，而不是在原有代码上修修补补。见过太多的代码刚开始设计的很好，经过几次这带下来方法变得很长、类也变得很大，造成维护越来越难","like_count":0},{"had_liked":false,"id":195707,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1585213558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585213558","product_id":100039001,"comment_content":"中大型重构应该是一个系统性的工作，需要对业务了解，写可测试代码，尽量全面的单元测试，控制需求，敏捷型开发，避免项目周期太长带入隐患。<br>1、理清业务逻辑，设计好代码布局，规划重构范围。<br>2、利用合理的设计模式和原则解耦代码，处理代码的坏味道。<br>3、尽可能全的覆盖单元测试，并且在编写代码时要考虑代码的可测试性。<br>4、创建必要的mock，在无依赖的情况跑单元测试。<br>5、持续重构，日常成习惯，有助于思考，养成重构思维。<br>","like_count":0},{"had_liked":false,"id":195460,"user_name":"陈林","can_delete":false,"product_type":"c1","uid":1421796,"ip_address":"","ucode":"C9C54914973AE6","user_header":"https://static001.geekbang.org/account/avatar/00/15/b1/e4/32d54f52.jpg","comment_is_top":false,"comment_ctime":1585189519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585189519","product_id":100039001,"comment_content":"重构遇到问题，领导对重构认可度，产出和投入比，以及功能的回归验证覆盖率。比较难均衡。","like_count":0},{"had_liked":false,"id":193837,"user_name":"_关旭_","can_delete":false,"product_type":"c1","uid":1009052,"ip_address":"","ucode":"ADEB7BBC54035B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/9c/5c94692c.jpg","comment_is_top":false,"comment_ctime":1584971945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584971945","product_id":100039001,"comment_content":"重构很容易半途而废，改到一个通不过测试的版本，又接到紧急开发任务，最终只能revert。所以还是应该在日常开发中随手进行小重构，在有时间的时候为大重构做准备——考虑功能、分层和抽象是否合理，是否可扩展，是否解耦，并制定出合理的，可以量化的重构任务，重构每个模块后随手做ut，保证每一次的commit都是经过测试，可运行的","like_count":0},{"had_liked":false,"id":190089,"user_name":"悟","can_delete":false,"product_type":"c1","uid":1085006,"ip_address":"","ucode":"9F56AD21CCC7E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/4e/985caf6b.jpg","comment_is_top":false,"comment_ctime":1584601591,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1584601591","product_id":100039001,"comment_content":"我现在维护的项目已经是破窗效应的代码了……………………","like_count":0},{"had_liked":false,"id":185540,"user_name":"Sinvi","can_delete":false,"product_type":"c1","uid":1064018,"ip_address":"","ucode":"2A90976980CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","comment_is_top":false,"comment_ctime":1583625219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583625219","product_id":100039001,"comment_content":"我们的代码重构就是重写…","like_count":0},{"had_liked":false,"id":183740,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1583123587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583123587","product_id":100039001,"comment_content":"重构最怕的就是团队成员没有统一的共识，有的甚至半桶水就开始荡，导致系统越重构越乱，跟他解释，只会抬杠，我太难了。。","like_count":0},{"had_liked":false,"id":183137,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1582959395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582959395","product_id":100039001,"comment_content":"质量管理在一个正在运行的项目里很重要。我2016~2018年所在的老项目(2011年)就曾经面临质量危机，它是公司收益非常大的项目，危机是不得不解决的。<br>危机原因：技术债务堆积数年，开发已经陷入举步维艰的地步，大部分的技术同学一周都得忙两天时间修复线上bug。<br>危机解决方法：小步快跑地重构崩坏的代码，对于不方便修改的代码，直接开发一套新的兼容代码，旧的代码让其尘封起来。<br>解决关键：所有的小步快跑都要寻找反馈来证明有效；相信工具和自动化；<br>项目的是周更新的，迭代速度很快，有利于项目的改动快速得到反馈，甚至说每一个人的努力都可能在下一周得到回应。我那时在团队里以上线晚上的加班时间为自己的反馈，假如超过12点而原因是研发进度问题，则优先解决最重要的研发瓶颈问题。17年花了半年时间不断地重构，重构获得更多的时间后，又可以进行新一轮更难、持续时间更长的重构，团队重新进入良心的循环，最终技术债务逐渐基本还清，17年下半年版本质量重新稳定了。<br>后来我补充思考了一些关于防止代码重新陷入崩坏的问题。<br>1、在技术团队中强调代码的不仅仅是正确与否，有优劣之分，由于项目是快速迭代的，所以代码的可读性和稳定性优先于代码的性能问题。保证每个技术同学都知道这个原则，敢于对违反这个原则的代码自行进行重构（还得培训相关重构知识）。<br>2、在技术团队中，补充规范和文档、注释，把之前重构出来的成果以肉眼可见的形式留存下来，要求是一个实习生按照文档操作不会踩到坑。<br><br>现在该项目已经又继续稳定运行了两年多，最重要的成就感莫过于自己留下的框架和规范还有用地指导着新同学去继续这个支持这个项目。<br><br>现在新的项目依然有很多质量的问题需要处理，但是要处理的维度更高了，新项目的问题不仅仅是代码质量问题，而是更多是团队问题，这是我19年下半年最大的挑战。希望两年后回望也有我今日回望17年的成就感吧。","like_count":0},{"had_liked":false,"id":182754,"user_name":"悠游","can_delete":false,"product_type":"c1","uid":1222834,"ip_address":"","ucode":"4FDDDDF29AE3F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/b2/998448ca.jpg","comment_is_top":false,"comment_ctime":1582860213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582860213","product_id":100039001,"comment_content":"边重构，边生活","like_count":0},{"had_liked":false,"id":182563,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1582809539,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582809539","product_id":100039001,"comment_content":"有比较完善的单元测试才好做重构，不然一不小心改错了就尴尬。不过，最重要的是还是要有持续的思维。我觉得老师讲的这些理论课，最关键的还是培养好的思维习惯。","like_count":0},{"had_liked":false,"id":182371,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1582775115,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1582775115","product_id":100039001,"comment_content":"<br>不巧的是,在去年11月份,我就经历了一次大重构,整体,细致的重构了一年多开发的代码,在这次重构中,分为了两组,一组负责实现产品线的新需求,做到定时发版,另一组则是进行了代码的移植重构.<br>我们重新拆分了模块,让其更符合职责单一原则,而且由于我们系统是需要和设备进行交互的,所以将和设备交互的方法抽取出来,作为一个单独的模块,从而进行解耦,让发送模块和其他模块只依赖一个下发的规范,进行下发即可,整整从11月份,一直重构了一个月的时间,但是重构完成后,仍然不完美,这就需要去持续的进行重构,这次重构的原因,也是因为一些新同事,在整个项目中堆砌了一些烂代码,以至于占用硬件资源过高,运行过慢,而导致的,为了解决这些问题,也是整合了很多诸如线程池,异步转同步这样的设计技巧,和一些设计模式","like_count":0,"discussions":[{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272923,"discussion_content":"赞同！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590377058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181706,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1582620918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582620918","product_id":100039001,"comment_content":"持续重构的意识确实更重要。","like_count":0},{"had_liked":false,"id":181176,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1582512100,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582512100","product_id":100039001,"comment_content":"还是蛮认同争哥的想法，自己编写相关业务代码的时候，看到有些地方能够小规模重构就会去做，但以后又发现改好的代码又有人开始堆砌了，真是难受。我觉得重构意识和一个好的技术氛围真的很重要，重构代码是一件痛苦一时、快乐一世的事情，可惜好多人都是直说不做。<br>PS：我觉得重构之前设计好测试防护网这个做法很正确，一个优秀的产品上线肯定少不了专业的自动化测试工程师的参与","like_count":0},{"had_liked":false,"id":181087,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1582472486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582472486","product_id":100039001,"comment_content":"持续改进，很难想象什么都重新写过","like_count":0},{"had_liked":false,"id":179253,"user_name":"否极泰来","can_delete":false,"product_type":"c1","uid":1439355,"ip_address":"","ucode":"C249173266251A","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","comment_is_top":false,"comment_ctime":1581945534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581945534","product_id":100039001,"comment_content":"对代码重构其实只要你对业务熟悉，并且领导支持，那你就可以重构了，不然就别重构了～","like_count":0},{"had_liked":false,"id":178213,"user_name":"Geek_7ead05","can_delete":false,"product_type":"c1","uid":1363830,"ip_address":"","ucode":"1FA18A1245200E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKHKe06oa6hIkIpIGib63GAU1M2q7HODOLwYZ1rJDOzDzmMlckQKgXzLaQJiaKSibJ0K2pCav8gLmLkg/132","comment_is_top":false,"comment_ctime":1581609677,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581609677","product_id":100039001,"comment_content":"重构要有计划，重构本身是持续性的。不太可能停下工作去重构，我也拒绝过同事的重构要求，因为有些时候看到烂代码某些猿内心的想法是直接重写，而这样的猿猿大多数也不一定就能重构出好代码","like_count":0},{"had_liked":false,"id":177910,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1581526916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581526916","product_id":100039001,"comment_content":"因为星际2服务器挂了，进不了游戏，所以来学习一下，他们的代码是时候重构了","like_count":0},{"had_liked":false,"id":177534,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1581411848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581411848","product_id":100039001,"comment_content":"1. 重构确实是一件好事情，但是在实际的执行过程当中，一般重视程度比较低，原因只有一个：对企业的业绩没有贡献<br>2. 单元测试来确保重构的执行效果，但是谁在意写单元测试呢？<br>3. 能很好执行重构的团队一般都是一个很不错的团队，最好是去一个风起正的团队，如果你想成长的话","like_count":0},{"had_liked":false,"id":176345,"user_name":"Edward Lee","can_delete":false,"product_type":"c1","uid":1228518,"ip_address":"","ucode":"156223F1D7E94A","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","comment_is_top":false,"comment_ctime":1581039612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581039612","product_id":100039001,"comment_content":"有一次在项目中尝试少量的重构，发现的问题是越改越多，越改越怕影响原来的功能，最后就 revert all 了<br>重构真的需要方法计划和编程设计功力及经验","like_count":0,"discussions":[{"author":{"id":1463740,"avatar":"https://static001.geekbang.org/account/avatar/00/16/55/bc/fad0090b.jpg","nickname":"Yeyw","note":"","ucode":"C9D20DB91C3BE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369025,"discussion_content":"和我想的一样 当时更清晰class builder写成内部类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618906803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173342,"user_name":"相逢是缘","can_delete":false,"product_type":"c1","uid":1060730,"ip_address":"","ucode":"CB299F53A95654","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/7a/ab6c811c.jpg","comment_is_top":false,"comment_ctime":1579508276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579508276","product_id":100039001,"comment_content":"打卡<br>一、重构的目的：<br>定义：“重构是一种对软件内部结构的改善，目的是在不改变软件的可见行为的情况下，使其更易理解，修改成本更低。”<br>1、在保持功能不变的前提下，利用设计思想、原则、模式、编程规范等理论来优化代码，修改设计上的不足，提高代码质量。<br>2、时刻保证代码质量的一个有效手段<br>3、优秀的架构或是代码不是一开始就能设计好的，需要持续演进<br>4、避免前期的过度设计<br>5、重构是对我们的学习的经典的设计思想、设计原则、设计模式、编程规范的一个综合应用<br>二、重构的对象<br>1、大型重构：对代码结构、模块、类与之间的关系、<br>大型重构的手段：分层、模块化、解耦、抽象可复用组件等<br>2、小规模低层次重构：针对代码细节重构<br>小型重构的手段：针对类、函数、变量等代码级别的重构<br>三、重构的时机：<br>融入到日常开发中<br>三、重构的方法：<br>大规模：有组织、有计划、分阶段小步快跑<br>小规模：随时进行","like_count":0},{"had_liked":false,"id":172721,"user_name":"wakaka","can_delete":false,"product_type":"c1","uid":1471508,"ip_address":"","ucode":"835A7341577D3B","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/14/ea854bfc.jpg","comment_is_top":false,"comment_ctime":1579263555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579263555","product_id":100039001,"comment_content":"第一版很难写出完美的代码，人无完人，更何况代码，坚持持续重构。","like_count":0},{"had_liked":false,"id":171891,"user_name":"亚伦碎语","can_delete":false,"product_type":"c1","uid":1014505,"ip_address":"","ucode":"F32E5E1B63CC90","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/e9/da5c0203.jpg","comment_is_top":false,"comment_ctime":1579050447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579050447","product_id":100039001,"comment_content":"重构最后变成重写了","like_count":0},{"had_liked":false,"id":171649,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1578986576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578986576","product_id":100039001,"comment_content":"重构能力很重要，但持续重构意识更重要，突然想起一首歌，只要人人都献出一份爱，世界将变成美好的人间。重构在平时，重构在于内心驱动。","like_count":0},{"had_liked":false,"id":171648,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1578986464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578986464","product_id":100039001,"comment_content":"重构能力很重要，但持续重构意识更重要","like_count":0},{"had_liked":false,"id":171255,"user_name":"睁眼看世界","can_delete":false,"product_type":"c1","uid":1206388,"ip_address":"","ucode":"F94CF34BC5B2AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/74/461b202d.jpg","comment_is_top":false,"comment_ctime":1578886938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578886938","product_id":100039001,"comment_content":"   重构容易，难得是如何有效的测试，出现过重构过后引入新bug问题。主要要培养意识，编码过程尽量按照统一规范，尽量避免千人千面，持续的code review、持续的重构，保持当前代码最合理化。","like_count":0},{"had_liked":false,"id":171197,"user_name":"相逢是缘","can_delete":false,"product_type":"c1","uid":1060730,"ip_address":"","ucode":"CB299F53A95654","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/7a/ab6c811c.jpg","comment_is_top":false,"comment_ctime":1578879567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578879567","product_id":100039001,"comment_content":"打卡<br>一、重构的目的：<br>定义：“重构是一种对软件内部结构的改善，目的是在不改变软件的可见行为的情况下，使其更易理解，修改成本更低。”<br>1、在保持功能不变的前提下，利用设计思想、原则、模式、编程规范等理论来优化代码，修改设计上的不足，提高代码质量。<br>2、时刻保证代码质量的一个有效手段<br>3、优秀的架构或是代码不是一开始就能设计好的，需要持续演进<br>4、避免前期的过度设计<br>5、重构是对我们的学习的经典的设计思想、设计原则、设计模式、编程规范的一个综合应用<br>二、重构的对象<br>1、大型重构：对代码结构、模块、类与之间的关系、<br>大型重构的手段：分层、模块化、解耦、抽象可复用组件等<br>2、小规模低层次重构：针对代码细节重构<br>小型重构的手段：针对类、函数、变量等代码级别的重构<br>三、重构的时机：<br>融入到日常开发中<br>三、重构的方法：<br>大规模：有组织、有计划、分阶段小步快跑<br>小规模：随时进行","like_count":0},{"had_liked":false,"id":170876,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1578746496,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578746496","product_id":100039001,"comment_content":"在项目开发中，对于已经运行了五六年的系统，我们其实没什么经验去做重构的，加个功能都可能搞坏；不过我的老板对于核心的模块的质量确实是在持续重构，他看到代码有重构的机会的时候就会立即下手，我应该向他学习这种态度，并努力锻炼出持续重构的实力。","like_count":0},{"had_liked":false,"id":170811,"user_name":"Yangjing","can_delete":false,"product_type":"c1","uid":1018061,"ip_address":"","ucode":"D88DFD4958D07C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/cd/2c3808ce.jpg","comment_is_top":false,"comment_ctime":1578730164,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578730164","product_id":100039001,"comment_content":"重构有个前提是要良好的单元测试，不然重构后可能一堆bug。","like_count":0},{"had_liked":false,"id":170809,"user_name":"小刀","can_delete":false,"product_type":"c1","uid":1351063,"ip_address":"","ucode":"94DF8C45E09E42","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaByN5IfYbE9jMtWrtTDXtPEIHeV77KW1p7ZkiasiaGgA50VXaibo4fbp5ib2JkFP3iaIe4AUudLibufkEIofu5euCNHg/132","comment_is_top":false,"comment_ctime":1578729524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578729524","product_id":100039001,"comment_content":"边写边改","like_count":0},{"had_liked":false,"id":170771,"user_name":"斜杠ing...","can_delete":false,"product_type":"c1","uid":1676247,"ip_address":"","ucode":"C4AE866AC8B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d7/93c8f92a.jpg","comment_is_top":false,"comment_ctime":1578711162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578711162","product_id":100039001,"comment_content":"重构最难的是领导认为很简单，所以我刚入职2个月提出辞职了。后悔啊，应该入职一个星期就辞职，浪费生命啊！","like_count":0},{"had_liked":false,"id":170726,"user_name":"郑童文","can_delete":false,"product_type":"c1","uid":1030733,"ip_address":"","ucode":"3D193715CB8549","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/4d/7ba09ff0.jpg","comment_is_top":false,"comment_ctime":1578675160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578675160","product_id":100039001,"comment_content":"希望老师能提供一些重构练习作为作业让我们实践所学的设计原则，并提供答案和讲解，谢谢！","like_count":0},{"had_liked":false,"id":170197,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1578548263,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578548263","product_id":100039001,"comment_content":"提示我有敏感词，我分开提交了：<br><br>2. 经验也有。我是聊天功能的开发，在我将设计模式运用上的时候，经常出现的问题就是寻找不到用户，以致于该通知的地方没有通知，让用户没有参与感。<br>3. 重构不是一朝一夕，需要反复测试，一定不能太“相信”自己","like_count":0},{"had_liked":false,"id":170196,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1578548201,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578548201","product_id":100039001,"comment_content":"代码重构真的是一件任重道远的事情。我在现在的公司，经常和老大一起重构代码，感觉学习到了很多。<br><br>1. 我们会在功能上线之后第二个版本左右，就进行反思重构。印象中目前重构效果最好的就是把代码更设计模式化。原先为了赶进度，一些代码乱，没有实现功能单一，把业务、数据库、判断逻辑等等都在一起，代码质量不高。","like_count":0},{"had_liked":false,"id":170088,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1578528136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578528136","product_id":100039001,"comment_content":"当代码烂到一定程度之后，你会发现牵一发动全身，改动一点都不小，更可恶的是还没有单元测试，你还要现人工确认是否改错，或者添加测试。很多时候都是改着改着发现，当前的改动需要搁置，先拆分出另外一件小事改动","like_count":0},{"had_liked":false,"id":169933,"user_name":"柴柴777","can_delete":false,"product_type":"c1","uid":1032484,"ip_address":"","ucode":"5208B935ECB6F7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/24/0ea08c9e.jpg","comment_is_top":false,"comment_ctime":1578475352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578475352","product_id":100039001,"comment_content":"刷了一便评论还是略感庆幸 ,大哥给安排的任务除了写需求之外还有重构优化代码,主站的部分module和另一个小项目的部分也放手让我改,然后review给我提意见,,最近有点改不动了就不知道咋改了,来刷设计模式企图得到启发","like_count":0},{"had_liked":false,"id":169910,"user_name":"W","can_delete":false,"product_type":"c1","uid":1724021,"ip_address":"","ucode":"2F9FA347E982F9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/4e/75/4c040060.jpg","comment_is_top":false,"comment_ctime":1578470817,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578470817","product_id":100039001,"comment_content":"领导认为只要不出错，就别整幺蛾子了","like_count":0},{"had_liked":false,"id":169733,"user_name":"varotene","can_delete":false,"product_type":"c1","uid":1004441,"ip_address":"","ucode":"B37E9B6D35090C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/99/56f148bc.jpg","comment_is_top":false,"comment_ctime":1578424977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578424977","product_id":100039001,"comment_content":"这边文章很有启发和帮助。读了之后，我融合了些自己的观察。我对重构的一点观察和总结：重构的最终目的还是为了实现商业目标：用更少的钱，获得更大的利益。对于不同性质的软件，重构的重要性有所不同。很多上层的app软件，往往生命周期不长，而且前端技术迭代很快，很多时候系统性重构不太多，小范围重构比较合理。很多时候大家更愿意重新写一个新系统，叫做2.0或者3.0。而且重构也没有设计新系统容易得到领导支持和拿到credit。对于更底层的，基础的部件，由于使用更频繁，质量要求更高，所以重构的价值更大。","like_count":0},{"had_liked":false,"id":169460,"user_name":"寒溪","can_delete":false,"product_type":"c1","uid":1001970,"ip_address":"","ucode":"67B9F1A1C15A20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","comment_is_top":false,"comment_ctime":1578360295,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1578360295","product_id":100039001,"comment_content":"重构需要勇气，在生产环境运行正常的情况下，往往没有重构的勇气。<br>1.需要时间，但时间被各种需求占满<br>2.容易出bug，需要协调测试资源<br>3.历史代码业务逻辑不了解，不知道该去该留。<br><br>","like_count":0},{"had_liked":false,"id":169203,"user_name":"JamesPxy","can_delete":false,"product_type":"c1","uid":1320179,"ip_address":"","ucode":"558D707463589D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q2LT8JFWSghiaVbMMOkOkLnuibEqG2YOyEdCA5icEZH3Qpd9pL23mpzic9tWwyiciaBicE4YPMVnITOodulwG2SS75r2w/132","comment_is_top":false,"comment_ctime":1578292753,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578292753","product_id":100039001,"comment_content":"实际情况，有时间重构之前自己实现功能的旧代码，也不敢轻易动手，怕改出问题来，带来莫须有的线上问题，毕竟这种情况只有自己去测试，风险比较大。说到底还是不够自信和怕事。最好是项目组领导支持重构，大家齐心协力去重构来得比较稳妥。还有就是需求设计阶段尽可能考虑全面合理，少挖坑。习惯很重要！","like_count":0},{"had_liked":false,"id":169173,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1578284679,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578284679","product_id":100039001,"comment_content":"一直在重构的上，重构之前还干了重写。<br>踩过因为动作太大，改动范围太广导致线上bug的情况。<br>关键是怎么保证重构不影响原来的业务行为，自动化测试不全，单元测试难写这些，期待后续课程","like_count":0},{"had_liked":false,"id":169050,"user_name":"居培波","can_delete":false,"product_type":"c1","uid":1437396,"ip_address":"","ucode":"27A5A8D9D4682B","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/d4/204d0c6d.jpg","comment_is_top":false,"comment_ctime":1578267563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578267563","product_id":100039001,"comment_content":"最常见的错误是漏业务逻辑，重构前一定要仔细梳理","like_count":0},{"had_liked":false,"id":168952,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1578224510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578224510","product_id":100039001,"comment_content":"目前进行的重构大多是针对于小规模的重构，都是根据clean code里面所说的，尽可能抽取方法，避免大函数过于臃肿，命名规范，写好测试等。其次就是在业务不忙的时候更换过框架，数据库等","like_count":0},{"had_liked":false,"id":168927,"user_name":"Jackie","can_delete":false,"product_type":"c1","uid":1179920,"ip_address":"","ucode":"B853ECB3E962C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/01/10/cb36bfed.jpg","comment_is_top":false,"comment_ctime":1578218283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578218283","product_id":100039001,"comment_content":"终于把落下的课都不上来了，后面要实时跟进老师的脚步了。<br><br>重构的意义还是很大，有重构的习惯对于自己提升技术实力很重要，有些看似在存在面试题里面的设计模式完全可以在重构的时候派上用场。<br><br>同时，部门有重构的习惯，也会形成比较好的技术氛围。看到好味道的代码，大家都会争相效仿，不会也不好意思在整洁的代码丢下“老鼠屎”。反之，看到坏味道的代码，大家就有可能群体性破罐子破摔。","like_count":0},{"had_liked":false,"id":168878,"user_name":"奔跑的小孩","can_delete":false,"product_type":"c1","uid":1304259,"ip_address":"","ucode":"0053193F7A9870","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/21uTMWr7bx5qMibp2hwmGvLbYuj5Aic2dqD3futlNo25eDGDt4t7zzN9cdnj7cVGwTot1U4AyADfWUpqjq1SicgWQ/132","comment_is_top":false,"comment_ctime":1578210248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578210248","product_id":100039001,"comment_content":"1.要具有重构意识，阶段性重构代码，重构分为大重构（模块重新划分、类与类之间关系重构等）和小重构（通过设计模式或者代码优化程序等 ）<br>2.重构情况下最好不要改变外部的代码调用规则，兼容之前的代码<br>3.小跑试错，快速迭代，不要上来就是大而全的迭代","like_count":0},{"had_liked":false,"id":168844,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1578197063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578197063","product_id":100039001,"comment_content":"以前在写代码时只偏重于代码是否能跑通，而对代码质量关心的比较少。而团队没有强调这种意识，即时有，给出的概念也比较抽象，很难落地。比较幸运的是换了好的平台，解除到了更多的东西，这些东西自己也在慢慢接触。知道了除了写代码之外，还要思考如何写出“好代码”。持续重构是一个在实际开发中不断提升代码质量的好方法。体会最深的应该是在前1个月自己从零开发的一个模块中就使用到了这种方式来提升代码质量（主要是提高可维护性，可读性）。当时有个类代码写的很多，逻辑很复杂。大约超过了1000了，写了很多大函数（其实在一开始就应该尽量避免写大函数），在实现完基本功能后，一有时间，自己就重新去读自己写的代码，看到不好的地方（如命名规范，超大函数等）就进行修改，重构。通过这样的实践，深刻体会到了“时刻具有持续重构意识，才能避免开发初期就过度设计，避免代码维护的过程中质量的下降”。","like_count":0},{"had_liked":false,"id":168816,"user_name":"L🚲🐱","can_delete":false,"product_type":"c1","uid":1577856,"ip_address":"","ucode":"08A012739614DE","user_header":"https://static001.geekbang.org/account/avatar/00/18/13/80/2c9da1b1.jpg","comment_is_top":false,"comment_ctime":1578192004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578192004","product_id":100039001,"comment_content":"如楼上所说 重构最大问题是领导不支持，做的政府项目， 要求稳定就行，代码质量差的不行，很无奈😂","like_count":0},{"had_liked":false,"id":168809,"user_name":"yang","can_delete":false,"product_type":"c1","uid":1227722,"ip_address":"","ucode":"45C1BE2D4AD72B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/ca/86d58e40.jpg","comment_is_top":false,"comment_ctime":1578191113,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578191113","product_id":100039001,"comment_content":"事实上对代码的平时的优化与改进还好，大的重构要考虑清楚，目标是什么。这个目标不好把。是提升了多少稳定性？交付效率？还是提升了连接效率？要考虑清楚，否则投入很多人力，重构完成，也不一定是没有bug,还有很多技术的重构最好和产品的重构一起。如果是小的技术功能改进，好的办法是ab测试，慢点切流量. ","like_count":0},{"had_liked":false,"id":168733,"user_name":"一壶浊酒","can_delete":false,"product_type":"c1","uid":1145530,"ip_address":"","ucode":"5D90F8F8121BBE","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/ba/8545f2d7.jpg","comment_is_top":false,"comment_ctime":1578147831,"is_pvip":true,"replies":[{"id":"65952","content":"加油~","user_name":"作者回复","comment_id":168733,"uid":"1190123","ip_address":"","utype":1,"ctime":1578489391,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1578147831","product_id":100039001,"comment_content":"就拿我们公司的系统来说，之前两个团队开发整合，就是因为没有进行好的规范，并且没有进行持续重构，再加上人员的走动，导致之后的人在接手的时候碰到新的需求，也不知道是否有可复用的代码，就直接再写新的接口，最终导致整个系统变得异常笨重，重复的接口越来越多。后来因为要迁移部署环境，进行了一次大型的重构，公司安排了新来的员工来负责，结果业务不熟悉，也就只能按照新部署要求，做了一些简单的调整，代码依旧越来越复杂，所以我觉得持续重构的意识真的很重要，看了争哥的专栏之后，赶紧对以前的代码重新再优化一遍","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480314,"discussion_content":"加油~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578489391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168619,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1578124824,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578124824","product_id":100039001,"comment_content":"现在我们代码乱的一塌糊涂，这个项目是后来接手的，项目开发人员变了好几轮，里面堆得一大堆代码。现在做个设计改动，得动用一个团队的力量一个月的时间","like_count":0},{"had_liked":false,"id":168561,"user_name":"平风造雨","can_delete":false,"product_type":"c1","uid":1014349,"ip_address":"","ucode":"F9EE4704F31E22","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/4d/b0228a1a.jpg","comment_is_top":false,"comment_ctime":1578110523,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578110523","product_id":100039001,"comment_content":"我猜大多数公司都是没有很好的重构规划的，因为大家都不认为重构的工作量是工作量。所以这需要工程师在完成业务需求的时候自觉重构，所以本身对重构就没有明确的要求和准确的定量分析，架构师和资深工程师需要协调资源去有计划的组织重构工作，并且经常性的代码走读review，让小规模重构的意识，代码设计的意识在团队内部形成习惯。本质上这就是技术管理工作很重要的一部分。","like_count":0},{"had_liked":false,"id":168559,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1578110343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578110343","product_id":100039001,"comment_content":"1.持续重构的前提是持续集成和自动化测试，没有这两个前提，不要谈持续重构<br>2.尽量保持小规模的持续重构，避免大规模重构，在项目启动时就要把重构的时间考虑进去<br>3.罗马不是一天建成的，不要过度设计，运用迭代思想完善产品，在每一次迭代时重构上次代码","like_count":0},{"had_liked":false,"id":168531,"user_name":"Arthur.Li","can_delete":false,"product_type":"c1","uid":1005824,"ip_address":"","ucode":"EC2436A5136C13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/00/6d14972a.jpg","comment_is_top":false,"comment_ctime":1578105221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578105221","product_id":100039001,"comment_content":"重构还是持续小范围比较好，当坏代码积累多了，就再也不想去碰了","like_count":0},{"had_liked":false,"id":168530,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1578105209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578105209","product_id":100039001,"comment_content":"我记得当时两个功能一模一样我刚刚重构了以后  策划把另外一个功能的需求改了 改了 改了 改了  改了 改了","like_count":0},{"had_liked":false,"id":168390,"user_name":"佳民","can_delete":false,"product_type":"c1","uid":1000433,"ip_address":"","ucode":"A5626BAEC96945","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/f1/3c69eb09.jpg","comment_is_top":false,"comment_ctime":1578059768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578059768","product_id":100039001,"comment_content":"初级工程师通过实践重构可以大大提升编程能力，树立良好的编程思维和养成良好的代码习惯。","like_count":0},{"had_liked":false,"id":168341,"user_name":"馒头","can_delete":false,"product_type":"c1","uid":1137876,"ip_address":"","ucode":"01864DBAAC54A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/d4/56b687c5.jpg","comment_is_top":false,"comment_ctime":1578050657,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578050657","product_id":100039001,"comment_content":"对着一个靠滥用缓存，一个API调用上千次DB的代码重构，就三个字，不敢动。。。","like_count":0,"discussions":[{"author":{"id":1438035,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/53/31d92c97.jpg","nickname":"菜小猫","note":"","ucode":"ED1F5F70E02725","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133353,"discussion_content":"上千次。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578962716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168297,"user_name":"堵车","can_delete":false,"product_type":"c1","uid":1145404,"ip_address":"","ucode":"7BC1E50A4F8D3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","comment_is_top":false,"comment_ctime":1578043450,"is_pvip":false,"replies":[{"id":"65961","content":"先重构练练手吧，实在不行再重写。","user_name":"作者回复","comment_id":168297,"uid":"1190123","ip_address":"","utype":1,"ctime":1578490499,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1578043450","product_id":100039001,"comment_content":"数据库字段乱复用，对话数据和操作数据放同一个表，接口耦合，大量doEveryThing方法，命名几乎看不懂，层级循环调用。节后要作为公司重点规划的项目去做，五个人一年的开发量。我心里慌得一逼！这种项目是不是该重写了？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480184,"discussion_content":"先重构练练手吧，实在不行再重写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578490499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168284,"user_name":"Ken张云忠","can_delete":false,"product_type":"c1","uid":1134288,"ip_address":"","ucode":"D0BAC9FC17DE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","comment_is_top":false,"comment_ctime":1578041631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578041631","product_id":100039001,"comment_content":"对于企业<br>重构是延缓代码质量变腐的有效手段,使代码可以长期保持易读易维护易扩展的状态,最终既可以做到降低企业的成本开支又可以做到更好的支撑业务的顺利开展,另外重构还可以迭代出优秀的产品和技术,提升企业的品牌软实力.<br>重构是个日常持续的过程,需要营造一种重视代码质量的氛围,技术团队的每个人都该要参与进来.<br>对于个人<br>重构可以锻炼技术人员的内功的修为,提升对业务和技术认知的,深入理解掌握经典的设计思想、设计原则、设计模式、编程规范的精髓,提升对复杂系统的应对能力.<br>每个技术人时刻都该要正确的重构意识,不断提升对技术认知的理解,平常工作中对代码进行持续重构,要把工作当做一份事业,用心投入到工作当中,持续坚持最终肯定会有意想不到的惊喜收获.<br><br>重构经验:<br>两年前拜读过重构那边书,了解到了一些代码坏味道,可以使用IDE提供的一些工具进行重构,例如抽取变量、属性、方法等;另外代码命名要见名知意,代码不要太长篇幅应控制在屏幕可显示范围内.<br>重构或重写某个功能时,必须要先理解业务功能的语义,然后才进行分析设计.<br><br>重构遇到问题:<br>团队不重视代码质量,没有重构意识,领导也不关注,如何让团队成员都建立起重构意识,另外每个人的认识不同又如何统一正确的重构意识.","like_count":0},{"had_liked":false,"id":168255,"user_name":"东方奇骥","can_delete":false,"product_type":"c1","uid":1354850,"ip_address":"","ucode":"DEE7085F7E55A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/62/37912d51.jpg","comment_is_top":false,"comment_ctime":1578038375,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578038375","product_id":100039001,"comment_content":"确实，重构真正做起来还是难，领导说这个模块都稳定了，别改了，其实这个模块代码之垃圾，加个功能之痛苦，就是应该持续重构了","like_count":0},{"had_liked":false,"id":168171,"user_name":"天草二十六","can_delete":false,"product_type":"c1","uid":1360712,"ip_address":"","ucode":"3165EE3007527B","user_header":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","comment_is_top":false,"comment_ctime":1578025104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578025104","product_id":100039001,"comment_content":"求稳定，做新需求，，迟迟对重构不紧急需要","like_count":0},{"had_liked":false,"id":168160,"user_name":"糖醋排骨","can_delete":false,"product_type":"c1","uid":1620507,"ip_address":"","ucode":"00ED918A220077","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epTx3WM1A1hxjOmtfQNa0QQ01QUlhaaSHrZ3OcnzYibY1gFeNFAcZ7yQpxZsbyk7D9m6JA9X5j44tA/132","comment_is_top":false,"comment_ctime":1578022473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578022473","product_id":100039001,"comment_content":"重构完了，自动化平台搭建完以后，就可以开始裁员了","like_count":0},{"had_liked":false,"id":168155,"user_name":"Eden Ma","can_delete":false,"product_type":"c1","uid":1457408,"ip_address":"","ucode":"755312F0D154F9","user_header":"https://static001.geekbang.org/account/avatar/00/16/3d/00/7daa7403.jpg","comment_is_top":false,"comment_ctime":1578021522,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578021522","product_id":100039001,"comment_content":"小规模重构感觉可以自己完成业务代码之后就开始关注重构.大规模重构感觉就有点难了,需要上级团队的支持.","like_count":0},{"had_liked":false,"id":168140,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1578018637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578018637","product_id":100039001,"comment_content":"1. 持续重构是程序员良好的习惯,如同好士兵遵守军规一样<br><br>​    写出阅读性,维护性,扩展性好的代码应该是每一位职业程序员(Professional)的基本追求,也可以说是职业道德.没人愿意维护烂代码,但要是项目中所有成员都很在意&quot;好的代码&quot;这件事情,工作就会变得愉快,项目也会朝着好的方向推进.持续重构指日常开发中小规模,低层次的重构,对方法参数,注释,命名规范,消除超大类,提取重复代码等细节进行打磨.除非项目框架存在硬伤性的问题需要大规模高层次的重构,通过不断的小规模,低层次重构,可以有效提高代码的质量.<br><br><br><br>2. 如果可以小规模低层次的重构,就要避免大规模高层次的重构<br><br>​    大规模高层次的重构指模块划分,类之间交互等问题的解决方式,通常需要抽象的设计思想,设计原则,设计模式作为武器.大规模高层次的重构由于改动较大,需要大量时间梳理业务,执行重构流程,以及单元测试.除非到了难以挽回的地步,尽量不要进行大规模高层次的重构,一是风险较大,二是影响项目进度(时间就是金钱).<br><br><br><br>​    如果在日常开发中注重小规模,低层次的重构,在一定程度上可以避免进行大规模高层次的重构.中国有句古话:防微杜渐,指当错误的思想和行为刚有苗头或征兆时，就加以预防与制止，坚决不让它继续发展。出自《后汉书·丁鸿传》：“若敕政则躬，杜渐防萌，则凶妖消灭，害除福凑矣。”","like_count":0},{"had_liked":false,"id":168132,"user_name":"Rain","can_delete":false,"product_type":"c1","uid":1238221,"ip_address":"","ucode":"6A270D922A3B9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","comment_is_top":false,"comment_ctime":1578017007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578017007","product_id":100039001,"comment_content":"最近一段时间都是在做重构. 其中包括了大规模重构, 也包括了中型的重构. 小范围重构比如一个类内, 两三个类之间, 这种一般都随手做了, 但大型和中型重构确实不好做.<br>1. 我重构的目的, 改善既有代码, 使其内聚解耦方便扩展, 以适应新的业务发展需要;<br>2. 我重构的对象, 一系列相关的模块, 一个大模块套着几个小模块, 各个小模块之间互相关联;<br>3. 我重构的时机, (恰到好处) 为适应新的业务发展需要, 动态添加和组合模块;<br>4. 我重构的方法, 小步快跑是一个很好的方式, 但我用不了, 因为既有代码耦合度有点高, 改一个小模块就要触动到大模块中的各个小模块, 所以不得不一下子迈个大步子; 单测和自动化测试肯定是保证重构结果准确性的好方法, 但不是每个团队或项目都有; 但但是并不是没有他们就不能重构, 只是会对重构的程序猿以及协助测试的测试媛有较高的要求, 我重构完之后还是出错不少, 我分析主要原因有两个, 第一个是我本身对业务没有完全吃透某些地方只能按照既有代码按照对代码的理解来重构; 第二是既有代码不是很熟悉, 以至于某些地方做错了 或 少做了. 这些问题包括如何引入合适的设计模式来满足最新的业务需要都不是最令我印象深刻的, 我在做重构之前跟领导商量了如何尽可能的小步快跑的方式, 结果是没有, 所以只能在重构分支做完完再合并到开发主干. 而主干正被若干其他功能分支依赖并且开发, 这样就造成了变重构变开发变处理冲突, 再重构再开发再处理冲突的过程. 有点痛苦但算是经历过了吧, 在这儿感谢下我们领导对我工作的支持. 嘿嘿谢谢领导.","like_count":0},{"had_liked":false,"id":168117,"user_name":"郡鸿","can_delete":false,"product_type":"c1","uid":1241201,"ip_address":"","ucode":"7A6298D288E078","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/71/c7b0a1f8.jpg","comment_is_top":false,"comment_ctime":1578015720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578015720","product_id":100039001,"comment_content":"最近正好在重构一个银行类业务的代码，之前的代码是经过很多人的堆砌，很多不同的功能都写在一个类里面，导致那个类有几千行代码，而且大量的重复代码。我接手之后，首先是按照不同的功能，划分了不同的模块。其次是把大量的重复代码单独抽离了出去，进行了公共的调用。这样一来，结构上更独立了，耦合度降低了很多，当然还有很多其他可以重构的地方。","like_count":0},{"had_liked":false,"id":168110,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1578014902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578014902","product_id":100039001,"comment_content":"最近打算重构一波前同事留下的代码，有点无从下手。怎么说呢，不知道为什么把所有类都用一个工厂来生成，登录、注册、退出…四五个功能对外只暴露了一个接口。打算先把大工厂拆开吧🤔","like_count":0},{"had_liked":false,"id":168103,"user_name":"liu_liu","can_delete":false,"product_type":"c1","uid":1019138,"ip_address":"","ucode":"24283806A07759","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/02/6a16058a.jpg","comment_is_top":false,"comment_ctime":1578013937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578013937","product_id":100039001,"comment_content":"1. 功能点的梳理。大型重构中会涉及到很多功能模块，整理出完整的功能点，从而避免重构中的遗漏。<br>2. 熟悉理清各模块的业务逻辑，不要一上手就开始改动。<br>3. 重构后各个模块的测试。<br>4. 新功能的同步。<br>5. 容灾开关，老旧代码的切换，降低上线风险。<br>","like_count":0},{"had_liked":false,"id":168097,"user_name":"一名小学生","can_delete":false,"product_type":"c1","uid":1137292,"ip_address":"","ucode":"5C73082E6B6370","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/8c/1fec5fa2.jpg","comment_is_top":false,"comment_ctime":1578013361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578013361","product_id":100039001,"comment_content":"打开<br>持续重构很重要，想等到最后大重构，结果基本就是无从下手而放弃。","like_count":0},{"had_liked":false,"id":168091,"user_name":"Kang","can_delete":false,"product_type":"c1","uid":1237655,"ip_address":"","ucode":"088A8DA0A16BDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","comment_is_top":false,"comment_ctime":1578012764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578012764","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":168087,"user_name":"Frode","can_delete":false,"product_type":"c1","uid":1503064,"ip_address":"","ucode":"B7B8DBF9980EA1","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/58/d05ec302.jpg","comment_is_top":false,"comment_ctime":1578012278,"is_pvip":true,"replies":[{"id":"65964","content":"重构之后 不管有没有单元测试，都要让测试人员重新测试一把，不然风险太大了，一旦出问题，会被打3.25的😂","user_name":"作者回复","comment_id":168087,"uid":"1190123","ip_address":"","utype":1,"ctime":1578490841,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1578012278","product_id":100039001,"comment_content":"我也是像改以前的垃圾代码，进行重构，但现在我们项目中没有单元测试，有点不敢做太多的改动，怕影响功能，是不是重构后需要测试进行一下测试？我只能在修改功能的时候忍不住小重构一下，这样我也不怕引来bug，本来也要测试←_←","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480131,"discussion_content":"重构之后 不管有没有单元测试，都要让测试人员重新测试一把，不然风险太大了，一旦出问题，会被打3.25的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578490841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168080,"user_name":"Geek1173","can_delete":false,"product_type":"c1","uid":1732366,"ip_address":"","ucode":"865F0E493E7EDC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkFvuiaEntOvrP5Pv2CSBiayjRULB7QdoaDeozRl4hhSbWSP9flNhHu1lPCwM1Yg22bGyEI5iaIS3icQ/132","comment_is_top":false,"comment_ctime":1578011715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578011715","product_id":100039001,"comment_content":"重构这件事情难度还是比较大的。由于项目处于运营状态，一处改动都会牵涉到测试，同事也担心重构带来的风险无法意料，虽然都是本着不改变功能的目的。","like_count":0},{"had_liked":false,"id":168075,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1578011289,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1578011289","product_id":100039001,"comment_content":"持续重构确实是个非常值得做的事情，而且我感觉不光资深工程师，技术leader要做，初级工程师也要建立这样的意识。我们很多时候在平时的开发过程中被各种业务需求追着跑，所以代码质量下降很厉害，甚至单元测试都很少写，所以不定期的随时小重构是非常必要的。还有一种情况是最开始会有组内大佬关注代码质量架构问题，会去code review，可是等大佬离职，就没人关注代码质量了，所以全员建立重构意识以及关注代码质量是很必要的。","like_count":0},{"had_liked":false,"id":168074,"user_name":"醉比","can_delete":false,"product_type":"c1","uid":1248399,"ip_address":"","ucode":"79E65F62BE7809","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/8f/4ebd303a.jpg","comment_is_top":false,"comment_ctime":1578011196,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578011196","product_id":100039001,"comment_content":"需求上线初期是经过测试同学测试的，后续重构也就不安排资源来测试了，这时候心里就会犯嘀咕别改出什么问题，慢慢重构也就搁置了，可能是没有把单测这些事情做好导致重构没底。","like_count":0},{"had_liked":false,"id":168072,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1578011079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578011079","product_id":100039001,"comment_content":"重构的意义:防止代码腐化到无可救药并且避难过度设计。建立持续重构的意识，同时也要有足够的单元测试作为前提，才能保证重构的正确性。","like_count":0},{"had_liked":false,"id":168067,"user_name":"梦醒十分","can_delete":false,"product_type":"c1","uid":1043585,"ip_address":"","ucode":"33830A5A73DDF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/81/2127e215.jpg","comment_is_top":false,"comment_ctime":1578010446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578010446","product_id":100039001,"comment_content":"做重构要眼高手低。只有眼光到了，才知道如何修改。","like_count":0},{"had_liked":false,"id":168060,"user_name":"Chen","can_delete":false,"product_type":"c1","uid":1503113,"ip_address":"","ucode":"C1128558AB5BC4","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/89/8c73a24d.jpg","comment_is_top":false,"comment_ctime":1578009276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578009276","product_id":100039001,"comment_content":"我们项目大刀阔斧的重构了几次。可能是像老师说的缺少规划，导致没有一个产品敢把重构的代码上线，最后不了了之。","like_count":0},{"had_liked":false,"id":168055,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1578008746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578008746","product_id":100039001,"comment_content":"代码会越来越乱<br>代码不是一开始就完美<br>防止过度设计<br>提升个人能力","like_count":0}]}