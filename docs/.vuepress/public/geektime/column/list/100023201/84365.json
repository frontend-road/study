{"id":84365,"title":"CSS 选择器：如何选中svg里的a元素？","content":"<p>你好，我是winter。</p><p>我们在之前CSS语法课程中，已经介绍了关于选择器的一部分基础知识。在今天的这一课里，我们来系统学习一下CSS选择器。</p><p>在CSS语法课程中，我们已经见过一些选择器了，但在进入到具体的选择器介绍之前，我们首先要对选择器有一个整体的认识。</p><p>我先来讲讲选择器是什么，选择器是由CSS最先引入的一个机制（但随着document.querySelector等API的加入，选择器已经不仅仅是CSS的一部分了）。我们今天这一课，就重点讲讲CSS选择器的一些机制。</p><p><strong>选择器的基本意义是：根据一些特征，选中元素树上的一批元素。</strong></p><p>我们把选择器的结构分一下类，那么由简单到复杂可以分成以下几种。</p><ul>\n<li>简单选择器：针对某一特征判断是否选中元素。</li>\n<li>复合选择器：连续写在一起的简单选择器，针对元素自身特征选择单个元素。</li>\n<li>复杂选择器：由“（空格）”“ &gt;”“ ~”“ +”“ ||”等符号连接的复合选择器，根据父元素或者前序元素检查单个元素。</li>\n<li>选择器列表：由逗号分隔的复杂选择器，表示“或”的关系。</li>\n</ul><p>我们可以看到，选择器是由简单选择器逐级组合而成的结构，那么我们就来首先看一下简单选择器。</p><h2>简单选择器</h2><p>我们在前面说过，简单选择器是针对某一特征判断是否为选中元素。今天我会为你介绍一系列常见的简单选择器，我们把相似的简单选择器放在一起，这样更易于你去记忆。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/4c/ce/4c9ac78870342dc802137ea9c848c0ce.png?wh=764*591\" alt=\"\"></p><h2>类型选择器和全体选择器</h2><p>我们要介绍的第一个简单选择器就是类型选择器，它根据一个元素的标签名来选中元素。</p><p>比如：</p><pre><code>   div {\n\n   }\n</code></pre><p>这看上去非常简单，但是实际上，我们还必须要考虑HTML或者XML元素的命名空间问题。</p><p>比如我们的svg元素，实际上在： <a href=\"http://www.w3.org/2000/svg\">http://www.w3.org/2000/svg</a> 命名空间之下。</p><p>svg和HTML中都有a元素，我们若要想区分选择svg中的a和HTML中的a，就必须用带命名空间的类型选择器。</p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n  &lt;title&gt;JS Bin&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;svg width=&quot;100&quot; height=&quot;28&quot; viewBox=&quot;0 0 100 28&quot; version=&quot;1.1&quot;\n     xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;\n  &lt;desc&gt;Example link01 - a link on an ellipse\n  &lt;/desc&gt;\n  &lt;a xlink:href=&quot;http://www.w3.org&quot;&gt;\n    &lt;text y=&quot;100%&quot;&gt;name&lt;/text&gt;\n  &lt;/a&gt;\n&lt;/svg&gt;\n&lt;br/&gt;\n&lt;a href=&quot;javascript:void 0;&quot;&gt;name&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n@namespace svg url(http://www.w3.org/2000/svg);\n@namespace html url(http://www.w3.org/1999/xhtml);\nsvg|a {\n  stroke:blue;\n  stroke-width:1;\n}\n\nhtml|a {\n  font-size:40px\n}\n</code></pre><p>这里有一个特殊的选择器，就是“ * ” ，它称为全体选择器，可以选中任意元素。它的用法跟类型选择器是完全一致的，这里就把它们放到一起介绍了。</p><h2>id选择器与class选择器</h2><p>id选择器和class选择器都是针对特定属性的选择器。id选择器是“#”号后面跟随id名，class选择器是“.”后面跟随class名。我们来看看基本用法：</p><pre><code>#myid {\n  stroke:blue;\n  stroke-width:1;\n}\n\n.mycls {\n  font-size:40px\n}\n</code></pre><p>这两个选择器都是在属性选择器之前就设计出来的选择器，属性选择器出来了以后，理论上可以一定程度上替代它们。但是要注意，class选择器识别的是：用空格分隔的class语法。</p><pre><code>&lt;a class=&quot;a b c&quot;&gt;xxx&lt;/a&gt;\n.a {\n    color:red;\n}\n</code></pre><p>在这个例子中，我们使用了用空格分隔的class属性，使用“.a”“.b”或者“.c”都能够选中元素，也可以使用多个class选择器来要求元素具有多个类。</p><h2>属性选择器</h2><p>属性选择器根据HTML元素的属性来选中元素。属性选择器有四种形态。</p><ul>\n<li>第一种，[att]</li>\n</ul><p>直接在方括号中放入属性名，是检查元素是否具有这个属性，只要元素有这个属性，不论属性是什么值，都可以被选中。</p><ul>\n<li>第二种，[att=val]</li>\n</ul><p>精确匹配，检查一个元素属性的值是否是val。</p><ul>\n<li>第三种，[att~=val]</li>\n</ul><p>多种匹配，检查一个元素的值是否是若干值之一，这里的val不是一个单一的值了，可以是用空格分隔的一个序列。</p><ul>\n<li>第四种，[att|=val]</li>\n</ul><p>开头匹配，检查一个元素的值是否是以val开头，它跟精确匹配的区别是属性只要以val开头即可，后面内容不管。</p><p>有些HTML属性含有特殊字符，这个时候，可以把val用引号括起来，形成一个CSS字符串。CSS字符串允许使用单双引号来规避特殊字符，也可以用反斜杠转义，这样，就可以表示出任意属性值啦。</p><h2>伪类选择器</h2><p>接下来我们开始介绍伪类选择器，伪类选择器是一系列由CSS规定好的选择器，它们以冒号开头。伪类选择器有普通型和函数型两种。</p><p>我们首先来介绍一下伪类中最常用的部分：树结构关系伪类。</p><h3>树结构关系伪类选择器</h3><p>:root 伪类表示树的根元素，在选择器是针对完整的HTML文档情况，我们一般用HTML标签即可选中根元素。但是随着scoped css和shadow root等场景出现，选择器可以针对某一子树来选择，这时候就很需要root伪类了。</p><ul>\n<li>:empty 伪类表示没有子节点的元素，这里有个例外就是子节点为空白文本节点的情况。</li>\n<li>:nth-child 和 :nth-last-child 这是两个函数型的伪类，CSS的An+B语法设计的是比较复杂的，我们这里仅仅介绍基本用法。我们还是看几个例子：</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/1e/a9/1ebdba2978a22c13844d108318b271a9.png?wh=619*188\" alt=\"\"></p><ul>\n<li>:nth-last-child的区别仅仅是从后往前数。</li>\n<li>:first-child :last-child 分别表示第一个和最后一个元素。</li>\n<li>:only-child 按字面意思理解即可，选中唯一一个子元素。</li>\n</ul><p>of-type系列，是一个变形的语法糖，S:nth-of-type(An+B)是:nth-child(|An+B| of S)的另一种写法。</p><p>以此类推，还有nth-last-of-type、first-of-type、last-of-type、only-of-type。</p><h3>链接与行为伪类选择器</h3><p>链接与行为是第一批设计出来的伪类，也是最常用的一批。</p><ul>\n<li>:any-link 表示任意的链接，包括a、area和link标签都可能匹配到这个伪类。</li>\n<li>:link 表示未访问过的链接， :visited 表示已经访问过的链接。</li>\n<li>:hover 表示鼠标悬停在上的元素。</li>\n<li>:active 表示用户正在激活这个元素，如用户按下按钮，鼠标还未抬起时，这个按钮就处于激活状态。</li>\n<li>:focus 表示焦点落在这个元素之上。</li>\n<li>:target 用于选中浏览器URL的hash部分所指示的元素。</li>\n</ul><p>在Selector Level 4草案中，还引入了 target-within、focus-within 等伪类，用于表示target或者focus的父容器。</p><h3>逻辑伪类选择器</h3><p>我们这里介绍一个逻辑伪类 —— :not 伪类。</p><p>这个伪类是个函数型伪类，它的作用时选中内部的简单选择器命中的元素。</p><pre><code>*|*:not(:hover)\n</code></pre><p>选择器3级标准中，not只支持简单选择器，在选择器4级标准，则允许not接受一个选择器列表，这意味着选择器支持嵌套，仅靠not即可完成选择器的一阶真值逻辑完备，但目前还没有看到浏览器实现它。</p><p>在Selector Level 4草案中，还引入了:is :where :has 等逻辑伪类，但是它们有一些违背了选择器匹配DOM树不回溯的原则，所以这部分设计最终的命运如何还不太确定。</p><h3>其它伪类选择器</h3><p>还有一些草案中或者不常用的选择器，你仅做大概了解即可。</p><ul>\n<li>\n<p>国际化：用于处理国际化和多语言问题。</p>\n<ul>\n<li>dir</li>\n<li>lang</li>\n</ul>\n</li>\n<li>\n<p>音频/视频：用于区分音视频播放状态。</p>\n<ul>\n<li>play</li>\n<li>pause</li>\n</ul>\n</li>\n<li>\n<p>时序：用于配合读屏软件等时序性客户端的伪类。</p>\n<ul>\n<li>current</li>\n<li>past</li>\n<li>future</li>\n</ul>\n</li>\n<li>\n<p>表格：用于处理table的列的伪类。</p>\n<ul>\n<li>nth-col</li>\n<li>nth-last-col</li>\n</ul>\n</li>\n</ul><p>伪类是很大的一类简单选择器，它是选择器能力的一种补充。在实际使用中，我还是建议你尽量通过合适的id和class来标识元素，约束伪类的使用。最好只在不得不使用伪类的场景使用伪类，这对于CSS代码的性能和可读性都有好处。</p><h2>结语</h2><p>这一节课程中，我们介绍了CSS选择器的整体结构，并且介绍了一系列简单选择器。它们包括了下面这些内容。</p><ul>\n<li>类型选择器：根据一个元素的标签名来选中元素。</li>\n<li>全体选择器：与类型选择器类似，选择任意元素。</li>\n<li>id选择器：#后面跟随id名。</li>\n<li>class选择器：.后面跟随class名。</li>\n<li>伪类选择器：一系列由CSS规定好的选择器，它们以冒号开头，伪类有普通型和函数型。</li>\n</ul><p>在下一节课，我们开始进入到更复杂的情况，我们将会介绍选择器的组合使用方式和选择器的一些机制。</p><p>今天留给你的思考题是：用JavaScript实现一个能够处理所有简单选择器的querySelector（行为伪类除外），你可以把你的答案分享出来，我们一起来探讨吧。</p><p></p>","neighbors":{"left":{"article_title":"HTML元信息类标签：你知道head里一共能写哪几种标签吗？","id":82711},"right":{"article_title":"CSS选择器：伪元素是怎么回事儿？","id":84633}},"comments":[{"had_liked":false,"id":75656,"user_name":"不曾潇洒","can_delete":false,"product_type":"c1","uid":1236542,"ip_address":"","ucode":"5084439B0BC796","user_header":"https://static001.geekbang.org/account/avatar/00/12/de/3e/2e87843c.jpg","comment_is_top":false,"comment_ctime":1552445190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"250660548358","product_id":100023201,"comment_content":"老师这儿描述有点问题:<br>属性选择器第四种[attr|=value]<br>应该是表示带有以 attr 命名的属性的元素，属性值为“value”或是以“value-”为前缀（&quot;-&quot;为连字符，Unicode编码为U+002D）开头。典型的应用场景是用来来匹配语言简写代码（如zh-CN，zh-TW可以用zh作为value）。<br><br>[attr^=value]<br>表示带有以 attr 命名的属性，且属性值是以&quot;value&quot;开头的元素。<br><br>出处:https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;CSS&#47;Attribute_selectors","like_count":59},{"had_liked":false,"id":78187,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1553088545,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"113222238241","product_id":100023201,"comment_content":"<br>选择器\t描述<br>[attribute]\t用于选取带有指定属性的元素。<br>[attribute=value]\t用于选取带有指定属性和值的元素。<br>[attribute~=value]\t用于选取属性值中包含指定词汇的元素。<br>[attribute|=value]\t用于选取带有以指定值开头的属性值的元素，该值必须是整个单词。<br>[attribute^=value]\t匹配属性值以指定值开头的每个元素。<br>[attribute$=value]\t匹配属性值以指定值结尾的每个元素。<br>[attribute*=value]\t匹配属性值中包含指定值的每个元素。","like_count":27},{"had_liked":false,"id":75266,"user_name":"GETStrongBENice","can_delete":false,"product_type":"c1","uid":1197786,"ip_address":"","ucode":"8902F7809DFF48","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/da/25f48aba.jpg","comment_is_top":false,"comment_ctime":1552371717,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48797011973","product_id":100023201,"comment_content":"属性以某值开头不是[attr^=xxx]吗（捂脸","like_count":12,"discussions":[{"author":{"id":2829376,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/2c/40/9acdbad6.jpg","nickname":"嬴","note":"","ucode":"465EBAFBB63FD7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531670,"discussion_content":"对的。l=是选择以 xxx- 开头的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637379305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73346,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1551863953,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"48796504209","product_id":100023201,"comment_content":"没想到写个 querySelector 这么费劲...<br>还有很多情况没处理到的...<br>emmm... 选择器字符串解析的部分应该上词法和语法分析的..<br>差不多能用吧就...<br>https:&#47;&#47;github.com&#47;aimergenge&#47;my-querySelector","like_count":12,"discussions":[{"author":{"id":2145095,"avatar":"https://static001.geekbang.org/account/avatar/00/20/bb/47/b60ae3eb.jpg","nickname":"你好，阳光","note":"","ucode":"1A2F487C57F7D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337591,"discussion_content":"大致能看懂你写的，能把基本的写出来已经很厉害了👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608984591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1232493,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ce/6d/5cfd9ab0.jpg","nickname":"郑闯","note":"","ucode":"2077316B8BE152","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":970,"discussion_content":"这玩意不是js原本就有的嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562211453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72798,"user_name":"CC","can_delete":false,"product_type":"c1","uid":1021014,"ip_address":"","ucode":"2B732860C4231B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/56/4b8395f6.jpg","comment_is_top":false,"comment_ctime":1551726479,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"31616497551","product_id":100023201,"comment_content":"namespace 和 of-type 系列的选择器的知识点，没想到之前居然完全被自己忽略。<br><br>系统性的学习才不会遗漏，才会有叠加效果。<br>","like_count":7},{"had_liked":false,"id":76031,"user_name":"不曾潇洒","can_delete":false,"product_type":"c1","uid":1236542,"ip_address":"","ucode":"5084439B0BC796","user_header":"https://static001.geekbang.org/account/avatar/00/12/de/3e/2e87843c.jpg","comment_is_top":false,"comment_ctime":1552525036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23027361516","product_id":100023201,"comment_content":"属性选择器<br>第三种[attr~=val]的描述也会让人误解为选择器该表达式的val为空格分隔的序列，而实际是只匹配的目标元素上attr属性值为空格分隔的多个值:<br>表示带有以 attr 命名的属性的元素，并且该属性是一个以空格作为分隔的值列表，其中[至少]一个值匹配&quot;value&quot;。","like_count":5},{"had_liked":false,"id":75621,"user_name":"within〃","can_delete":false,"product_type":"c1","uid":1451554,"ip_address":"","ucode":"8F2219F0DC463C","user_header":"https://static001.geekbang.org/account/avatar/00/16/26/22/f826d202.jpg","comment_is_top":false,"comment_ctime":1552440733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18732309917","product_id":100023201,"comment_content":"function querySelector (selector, rootNode = document) {<br>  let [first, rest] = splitSelectorStr(selector)<br>  let nodes = findNodes(rootNode, first)<br>  if (nodes.length &gt; 0) {<br>    if (rest.length === 0) {<br>      return nodes[0]<br>    }<br>    for (let node of nodes) {<br>      let res = querySelector(rest, node)<br>      if (res) {<br>        return res<br>      }<br>    }<br>  }<br>  return null<br>}<br>function findNodes (rootNode, selector) {<br>  let head = selector.charAt(0)<br>  let body = selector.slice(1)<br>  switch (head) {<br>    case &#39;.&#39;:<br>      return rootNode.getElementsByClassName(body)<br>    case &#39;#&#39;:<br>      return [rootNode.getElementById(body)]<br>    default:<br>      return rootNode.getElementsByTagName(selector)<br>  }<br>}<br>function splitSelectorStr (selector) {<br>  let s = selector.trim()<br>  let i = s.indexOf(&#39; &#39;)<br>  let first, rest<br>  if (i === -1) {<br>    first = s<br>    rest = &#39;&#39;<br>  } else {<br>    first = s.slice(0, i)<br>    rest = s.slice(i + 1)<br>  }<br>  return [first, rest]<br>}","like_count":4},{"had_liked":false,"id":112004,"user_name":"涂涂","can_delete":false,"product_type":"c1","uid":1520355,"ip_address":"","ucode":"A36AE853DD0A30","user_header":"https://static001.geekbang.org/account/avatar/00/17/32/e3/20676888.jpg","comment_is_top":false,"comment_ctime":1562652353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10152586945","product_id":100023201,"comment_content":"引用张大佬的文章话：<br><br>HTML5允许行内SVG和MathML，这就意味着，你可以使用同一个样式文件定义行内SVG、MathML元素的样式。<br><br>HTML5的解析的好处是，如果文档是HTML(而非XHTML)，HTML5的解析器可以暗中分配命名空间到已知的词汇（到目前为止，SVG, XML和MathML）。这就意味着你无需使用xmlns为您的HTML5文档中的SVG或MathML元素明确指定命名空间。","like_count":3},{"had_liked":false,"id":73096,"user_name":"oillie","can_delete":false,"product_type":"c1","uid":1031714,"ip_address":"","ucode":"5907CE80C45CB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/22/8bb1640f.jpg","comment_is_top":false,"comment_ctime":1551797511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10141732103","product_id":100023201,"comment_content":"id可以用document.getElementById<br>class可以用document.getElementsByClassName<br>tag可以用document.getElementsByTagName<br>attribute没直接API可用，本人能想到的是可以先取全部document.getElementByTagName(&#39;*&#39;)再过滤","like_count":2},{"had_liked":false,"id":100338,"user_name":"Nino","can_delete":false,"product_type":"c1","uid":1378107,"ip_address":"","ucode":"8FBC9668654290","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/3b/a74706a1.jpg","comment_is_top":false,"comment_ctime":1559531419,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5854498715","product_id":100023201,"comment_content":"都是平常会用到的一些特性，被老师总结一下觉得系统多了。另外，老师的英文发音好随意啊。。","like_count":1,"discussions":[{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360456,"discussion_content":"确实，发音不对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616459953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028395,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b1/2b/79b81df8.jpg","nickname":"iamcxc","note":"","ucode":"C519F51552DC12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6758,"discussion_content":"是啊，听着是真难受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567086542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317514,"user_name":"Geek_3b2d8c","can_delete":false,"product_type":"c1","uid":2746819,"ip_address":"","ucode":"77BBDC7294B345","user_header":"https://static001.geekbang.org/account/avatar/00/29/e9/c3/62e63a4f.jpg","comment_is_top":false,"comment_ctime":1634820349,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634820349","product_id":100023201,"comment_content":"简单实现了个：https:&#47;&#47;github.com&#47;Jarvis2018&#47;reader-response&#47;tree&#47;master&#47;%E9%87%8D%E5%AD%A6%E5%89%8D%E7%AB%AF&#47;%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E5%99%A8","like_count":0},{"had_liked":false,"id":270410,"user_name":"云","can_delete":false,"product_type":"c1","uid":2107468,"ip_address":"","ucode":"705DF6B2A7654B","user_header":"https://static001.geekbang.org/account/avatar/00/20/28/4c/afe2ab34.jpg","comment_is_top":false,"comment_ctime":1609120076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609120076","product_id":100023201,"comment_content":"关于css选择器这块，强烈推荐看张鑫旭的 《CSS选择器世界》。","like_count":0},{"had_liked":false,"id":254399,"user_name":"益明","can_delete":false,"product_type":"c1","uid":1379254,"ip_address":"","ucode":"C6D9CD30CC6770","user_header":"https://static001.geekbang.org/account/avatar/00/15/0b/b6/f4044718.jpg","comment_is_top":false,"comment_ctime":1603111449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603111449","product_id":100023201,"comment_content":"There are six different kinds of elements: void elements(空内容元素), the template element, raw text elements(原始文本元素), escapable raw text elements(可转意原始文本元素), foreign elements(外来元素：来自MathML和SVG命名空间的元素), and normal elements.<br>Void elements包含<br>area, base, br, col, embed, hr, img, input, link, meta, param, source, track, wbr；<br>The template element包含<br>template；<br>Raw text elements包含<br>script, style<br>Escapable raw text elements包含<br>textarea, title<br>foreign elements 外来元素：<br>SVG，MathML中包含的元素<br>normal element：其余所有元素<br>作为SVG中包含的元素，所以要通过namespace svg命名空间去选择","like_count":0},{"had_liked":false,"id":244274,"user_name":"不甘心的翔入非非","can_delete":false,"product_type":"c1","uid":1474300,"ip_address":"","ucode":"1C39E0E5215C54","user_header":"https://static001.geekbang.org/account/avatar/00/16/7e/fc/b132947b.jpg","comment_is_top":false,"comment_ctime":1598448007,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598448007","product_id":100023201,"comment_content":"老师，感觉少了:after和:before这1个重要的选择器介绍呢","like_count":0,"discussions":[{"author":{"id":1375809,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fe/41/148bae9d.jpg","nickname":"lgc","note":"","ucode":"3DEC032D310927","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302224,"discussion_content":"这个是归入伪元素，标准是两个冒号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598850128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237739,"user_name":"A祥瑞A","can_delete":false,"product_type":"c1","uid":2080875,"ip_address":"","ucode":"C30F61A4E99349","user_header":"https://static001.geekbang.org/account/avatar/00/1f/c0/6b/92a69e77.jpg","comment_is_top":false,"comment_ctime":1595939095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595939095","product_id":100023201,"comment_content":"属性选择器和伪类选择器用得特别少，这两种选择器一般在什么情况下使用?","like_count":0},{"had_liked":false,"id":218777,"user_name":"薛定鄂的猫","can_delete":false,"product_type":"c1","uid":1727459,"ip_address":"","ucode":"16261E77E29111","user_header":"https://static001.geekbang.org/account/avatar/00/1a/5b/e3/d2fa4899.jpg","comment_is_top":false,"comment_ctime":1589874507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589874507","product_id":100023201,"comment_content":"为什么没有将伪元素选择器？","like_count":0},{"had_liked":false,"id":190348,"user_name":"起而行","can_delete":false,"product_type":"c1","uid":1131399,"ip_address":"","ucode":"4F116B0B740776","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/87/7604d7a4.jpg","comment_is_top":false,"comment_ctime":1584631267,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584631267","product_id":100023201,"comment_content":"js的getElementById等等函数，可以实现CSS选择器的功能，通过自定义函数可以实现伪类选择器的功能","like_count":0},{"had_liked":false,"id":139819,"user_name":"kaiking","can_delete":false,"product_type":"c1","uid":1440735,"ip_address":"","ucode":"DBE91C5855B9FD","user_header":"https://static001.geekbang.org/account/avatar/00/15/fb/df/8615f2d3.jpg","comment_is_top":false,"comment_ctime":1570752297,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1570752297","product_id":100023201,"comment_content":"老师，发现这节的属性选择器，讲得有点抽象，我尽管曾经用过，但对于你的描述，看完后反而疑惑更大了，像那些太过抽象的理论，建议结合案例。<br>好的课程在精不在多，祝愿老师越办越好，桃李满天下","like_count":0},{"had_liked":false,"id":131681,"user_name":"若如","can_delete":false,"product_type":"c1","uid":1069772,"ip_address":"","ucode":"315D1560046129","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/cc/15e57326.jpg","comment_is_top":false,"comment_ctime":1567844487,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567844487","product_id":100023201,"comment_content":"之前看过jquery的选择器 最后的作业有点类似 收货颇丰","like_count":0},{"had_liked":false,"id":113175,"user_name":"渴望做梦","can_delete":false,"product_type":"c1","uid":1398219,"ip_address":"","ucode":"9EB47530A69C91","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/cb/1efe460a.jpg","comment_is_top":false,"comment_ctime":1562908409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562908409","product_id":100023201,"comment_content":"老师，属性选择器第三种[att=~val]这个不是选择值里面包含有val的元素吗，好像和您的表述不太一致，我传递了多个 val 用空格分隔，并没有选中多个元素。","like_count":0},{"had_liked":false,"id":73627,"user_name":"[已重置]","can_delete":false,"product_type":"c1","uid":1380263,"ip_address":"","ucode":"7CE91D63AD9481","user_header":"https://static001.geekbang.org/account/avatar/00/15/0f/a7/783e4f88.jpg","comment_is_top":false,"comment_ctime":1551943342,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1551943342","product_id":100023201,"comment_content":"查了一些资料也没太弄明白为什么 svg 就在 http:&#47;&#47;www.w3.org&#47;2000&#47;svg 这个命名空间下，好像是规范里就规定了svg属于这个命名空间？<br>","like_count":0,"discussions":[{"author":{"id":1210582,"avatar":"https://static001.geekbang.org/account/avatar/00/12/78/d6/89227ea0.jpg","nickname":"小夜","note":"","ucode":"76CC4477033A1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39800,"discussion_content":"同问，@namespace 这个规则的必要性在哪里，在什么情况下需要使用这规则","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571990107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}